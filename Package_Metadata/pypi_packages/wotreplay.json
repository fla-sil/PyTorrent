{"info": {"author": "Gabriel Oana", "author_email": "gabriel.oana91@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "[![pipeline status](https://gitlab.com/gabriel_oana/wotreplay/badges/master/pipeline.svg)](https://gitlab.com/gabriel_oana/wotreplay)\n[![pipeline status](https://gitlab.com/gabriel_oana/wotreplay/badges/master/coverage.svg)](https://gitlab.com/gabriel_oana/wotreplay)\n[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/wotreplay)](https://pypistats.org/packages/wotreplay)\n![PyPI](https://img.shields.io/pypi/v/wotreplay)\n![PyPI - Status](https://img.shields.io/pypi/status/wotreplay)\n\n# World of Tanks - Replay data extract\n\n### 1. Description\nThe package can extract only the metrics data from World of Tanks replays. \nIt does not access any data such as tank positions or chat. \n\nData can be extracted only from replays in which the player has waited until the end of the battle. If the player has \nquit the battle after dying and the battle was not ended, then only the battle metadata is available (which does not \ncontain any battle performance / credits / xp data).\n\nThe replays should be set to be \"all\" collected and not \"last\" one recorded. \n\nAll data extracted can be saved to a local sqlite database. \n### 2. Usage\n```\npip install wotreplay\n```\n\nThe package provides the possibility of exploring the data contained within one replay or process all replays in a \ndirectory and store the data in a local database.\n\n```\nfrom wotreplay import ReplayData\nreplay = ReplayData(file_path='path_to_replay/replay_file.wotreplay',\n                     db_path='', db_name='', load=False)\n\nprint(replay.battle_metadata)\nprint(replay.battle_performance)\nprint(replay.common)\nprint(replay.battle_frags)\nprint(replay.battle_economy)\nprint(replay.battle_xp)\n```\n\nProcess all the replay files and store the results in the database\n\n```\nfrom wotreplay import ProcessReplays\n\nProcessReplays.process_all(replay_dir='/path/to/replay/dir', \n                           db_path='path/where/to/save/the/database, \n                           db_name='wotreplay')\n```\nThis will process the replays sequentially. \n\n<u>Note:</u> Once a replay has been processed and added to the database, it will not be processed again to avoid data \nduplication.\n\n### 3. Compatibility\nThe replays from the following client versions have been tested. \n\n| Client Version        | Passed    |                      \n| ---                   | ---       |\n| 0.9.21                | True      |\n| 0.9.22                | True      |\n| 1.0.0                 | True      |\n| 1.0.1                 | True      |\n| 1.0.2                 | True      |\n| 1.1.0                 | True      |\n| 1.2.0                 | True      |\n| 1.3.0                 | True      |\n| 1.4.0                 | True      |\n| 1.4.1                 | True      |\n| 1.5.0                 | True      |\n| 1.5.1                 | True      |\n| 1.6.1                 | True      |\n| 1.7.0                 | True      |\n| 1.7.1                 | True      |\n| 1.8.0                 | True      |\n| 1.9.0                 | True      |\n\nNo replays before 0.9.21 have been tested due to lack of replays available. \n\n### 4. Data Taxonomy\nExamples of data retrieved: \n\n* Battle metadata: [Battle Metadata Fields](https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_metadata.json)\n* Battle performance: [Battle Performance Fields](https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_performance.json)\n* Common: [Common Data Fields](https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/common.json)\n* Battle frags: [Battle Frags Fields](https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_frags.json)\n* Battle economy: [Battle Economy Fields](https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_economy.json)\n* Battle xp: [Battle XP Fields](https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_xp.json)\n\n### 5.Access and rights\nIf you are using this on any online tools please give the appropriate credit.    \n\n### 6.To Do\nThe extraction of data from replays is more or less complete. \nThere are a few features to be created in the future to create the aliases of tank names and maps. \n\n### 7. Development\n\n##### Unittesting\nFor development purposes, the unittests can be executed via: \n\n```\npython3 -m unittest discover -v worldoftanks/tests\n```\n\n##### Coverage Tests\n\n```\ncoverage run --source=worldoftanks -m unittest discover -s worldoftanks/tests\ncoverage report -m\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/gabriel_oana/worldoftanks", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wotreplay", "package_url": "https://pypi.org/project/wotreplay/", "platform": "", "project_url": "https://pypi.org/project/wotreplay/", "project_urls": {"Homepage": "https://gitlab.com/gabriel_oana/worldoftanks"}, "release_url": "https://pypi.org/project/wotreplay/1.0.0/", "requires_dist": ["sqlalchemy", "tqdm"], "requires_python": "", "summary": "World of Tanks PC replay data extractor", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitlab.com/gabriel_oana/wotreplay\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60888ad8ae572817776542210150791f709a01e7/68747470733a2f2f6769746c61622e636f6d2f6761627269656c5f6f616e612f776f747265706c61792f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.com/gabriel_oana/wotreplay\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c7582c33d74902d839f04f75ad10cc394b0089b/68747470733a2f2f6769746c61622e636f6d2f6761627269656c5f6f616e612f776f747265706c61792f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://lbesson.mit-license.org/\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://pypistats.org/packages/wotreplay\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53cbf6a303136a9ded77d74ab90acb7c173d3fe8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f776f747265706c6179\"></a>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/093f59b98c5c9664d05b263263b7216f79856b98/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776f747265706c6179\">\n<img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e6ad69c194ed879f964f31b2106cb5a1d76121b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f776f747265706c6179\"></p>\n<h1>World of Tanks - Replay data extract</h1>\n<h3>1. Description</h3>\n<p>The package can extract only the metrics data from World of Tanks replays.\nIt does not access any data such as tank positions or chat.</p>\n<p>Data can be extracted only from replays in which the player has waited until the end of the battle. If the player has\nquit the battle after dying and the battle was not ended, then only the battle metadata is available (which does not\ncontain any battle performance / credits / xp data).</p>\n<p>The replays should be set to be \"all\" collected and not \"last\" one recorded.</p>\n<p>All data extracted can be saved to a local sqlite database.</p>\n<h3>2. Usage</h3>\n<pre><code>pip install wotreplay\n</code></pre>\n<p>The package provides the possibility of exploring the data contained within one replay or process all replays in a\ndirectory and store the data in a local database.</p>\n<pre><code>from wotreplay import ReplayData\nreplay = ReplayData(file_path='path_to_replay/replay_file.wotreplay',\n                     db_path='', db_name='', load=False)\n\nprint(replay.battle_metadata)\nprint(replay.battle_performance)\nprint(replay.common)\nprint(replay.battle_frags)\nprint(replay.battle_economy)\nprint(replay.battle_xp)\n</code></pre>\n<p>Process all the replay files and store the results in the database</p>\n<pre><code>from wotreplay import ProcessReplays\n\nProcessReplays.process_all(replay_dir='/path/to/replay/dir', \n                           db_path='path/where/to/save/the/database, \n                           db_name='wotreplay')\n</code></pre>\n<p>This will process the replays sequentially.</p>\n<p>&lt;u&gt;Note:&lt;/u&gt; Once a replay has been processed and added to the database, it will not be processed again to avoid data\nduplication.</p>\n<h3>3. Compatibility</h3>\n<p>The replays from the following client versions have been tested.</p>\n<table>\n<thead>\n<tr>\n<th>Client Version</th>\n<th>Passed</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.9.21</td>\n<td>True</td>\n</tr>\n<tr>\n<td>0.9.22</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.0.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.0.1</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.0.2</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.1.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.2.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.3.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.4.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.4.1</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.5.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.5.1</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.6.1</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.7.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.7.1</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.8.0</td>\n<td>True</td>\n</tr>\n<tr>\n<td>1.9.0</td>\n<td>True</td>\n</tr></tbody></table>\n<p>No replays before 0.9.21 have been tested due to lack of replays available.</p>\n<h3>4. Data Taxonomy</h3>\n<p>Examples of data retrieved:</p>\n<ul>\n<li>Battle metadata: <a href=\"https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_metadata.json\" rel=\"nofollow\">Battle Metadata Fields</a></li>\n<li>Battle performance: <a href=\"https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_performance.json\" rel=\"nofollow\">Battle Performance Fields</a></li>\n<li>Common: <a href=\"https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/common.json\" rel=\"nofollow\">Common Data Fields</a></li>\n<li>Battle frags: <a href=\"https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_frags.json\" rel=\"nofollow\">Battle Frags Fields</a></li>\n<li>Battle economy: <a href=\"https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_economy.json\" rel=\"nofollow\">Battle Economy Fields</a></li>\n<li>Battle xp: <a href=\"https://gitlab.com/gabriel_oana/wotreplay/-/blob/master/taxonomy/battle_xp.json\" rel=\"nofollow\">Battle XP Fields</a></li>\n</ul>\n<h3>5.Access and rights</h3>\n<p>If you are using this on any online tools please give the appropriate credit.</p>\n<h3>6.To Do</h3>\n<p>The extraction of data from replays is more or less complete.\nThere are a few features to be created in the future to create the aliases of tank names and maps.</p>\n<h3>7. Development</h3>\n<h5>Unittesting</h5>\n<p>For development purposes, the unittests can be executed via:</p>\n<pre><code>python3 -m unittest discover -v worldoftanks/tests\n</code></pre>\n<h5>Coverage Tests</h5>\n<pre><code>coverage run --source=worldoftanks -m unittest discover -s worldoftanks/tests\ncoverage report -m\n</code></pre>\n\n          </div>"}, "last_serial": 7173077, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "fd92aa639f6db555d78064a4cbdaf591", "sha256": "8141d990845db96bd005469d3211f7c9e3548ebdf17dbbfa6ee8f765c30c93bf"}, "downloads": -1, "filename": "wotreplay-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd92aa639f6db555d78064a4cbdaf591", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17725, "upload_time": "2020-05-05T16:12:14", "upload_time_iso_8601": "2020-05-05T16:12:14.887397Z", "url": "https://files.pythonhosted.org/packages/47/9a/be94fbb31831f63b9404e8cc4ddb1494e8d0328f317444f88f86016af3b0/wotreplay-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3648b45ffca953297842b4b50213fb17", "sha256": "11e670e93b91b0d5dd999919f00fbe28308d2de9d3d148370488f4e8978bfc6c"}, "downloads": -1, "filename": "wotreplay-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3648b45ffca953297842b4b50213fb17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14779, "upload_time": "2020-05-05T16:12:17", "upload_time_iso_8601": "2020-05-05T16:12:17.016509Z", "url": "https://files.pythonhosted.org/packages/3e/bb/93e8bcf84ffdfec10e3a951fd5ab66092227742ebe668d909bef4b531615/wotreplay-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd92aa639f6db555d78064a4cbdaf591", "sha256": "8141d990845db96bd005469d3211f7c9e3548ebdf17dbbfa6ee8f765c30c93bf"}, "downloads": -1, "filename": "wotreplay-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd92aa639f6db555d78064a4cbdaf591", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17725, "upload_time": "2020-05-05T16:12:14", "upload_time_iso_8601": "2020-05-05T16:12:14.887397Z", "url": "https://files.pythonhosted.org/packages/47/9a/be94fbb31831f63b9404e8cc4ddb1494e8d0328f317444f88f86016af3b0/wotreplay-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3648b45ffca953297842b4b50213fb17", "sha256": "11e670e93b91b0d5dd999919f00fbe28308d2de9d3d148370488f4e8978bfc6c"}, "downloads": -1, "filename": "wotreplay-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3648b45ffca953297842b4b50213fb17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14779, "upload_time": "2020-05-05T16:12:17", "upload_time_iso_8601": "2020-05-05T16:12:17.016509Z", "url": "https://files.pythonhosted.org/packages/3e/bb/93e8bcf84ffdfec10e3a951fd5ab66092227742ebe668d909bef4b531615/wotreplay-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:42 2020"}