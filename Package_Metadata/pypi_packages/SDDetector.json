{"info": {"author": "SocialDistance model contributors", "author_email": "thomascong@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SocialDistance\nKeep safe social distance is considered as an effective way of avoiding spreading of coronavirus. Our SocialDistance module is a lightweight package which provides an implementation of utlizing deep learning models for monitoring safe social distance.\n\n# Demo\n[Watch the demo video](https://www.youtube.com/watch?v=1s46BJJj6rw&t=5s)\n\n# Dataset\nWe use the video clip collected from [OXFORD TOWN CENTRE](https://www.robots.ox.ac.uk/ActiveVision/Research/Projects/2009bbenfold_headpose/project.html) dataset and made the above demo video.\n\n# Supported Models\nWe have tested our model using Faster-RCNN, YOLO-v3 and SSD, based on the performance of each model, we have chosen YOLO-v3 as our default model\n\nAll our models are pretrained models from [Gluno CV Tookit](https://github.com/dmlc/gluon-cv)\n\n# Installation\nYou may be able to obtain the latest version our model from:\n```\npip install -i https://test.pypi.org/simple/ SocialDistance==0.1\npip install gluoncv\npip install mxnet-cu101\n```\n\n# Usage\nAfter Successfully installed SocialDistance, you can use it for detection by:\n```\nfrom SocialDistance.utils.Run import Detect\ndetect = Detect()\n#you may want to give an image as input to check the validity of bird-eye view transformation\ndetect(image)\n```\nIf no arguments is given, our model will run using the default data collected from 'OXFORD TOWN CENTRE' dataset, otherwise you may want to specify arguments expicitly:\n```\nfrom SocialDistance.utils.Run import Detect\ndetect = Detect(video_path, video_save_path, keypoints, keypoints_birds_eye_view, actual_length, actual_width, pretrained_models)\n#you may want to give an image as input to check the validity of bird-eye view transformation\ndetect(image)\n```\n> Parameters\n> ----------\n- **video_path**: input path of video\n- **video_save_path**: output path of labelled video\n- **keypoints**: selected key points from first frame of the input video\n- **keypoints_birds_eye_view**: mapping location of keypoints on the bird-eye view image\n- **actual_length**: actual length in real-world\n- **actual_width**: actual width in real-world\n- **pretrained_models**: selected pretrained models\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thomascong121/SocialDistance", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "SDDetector", "package_url": "https://pypi.org/project/SDDetector/", "platform": "", "project_url": "https://pypi.org/project/SDDetector/", "project_urls": {"Homepage": "https://github.com/thomascong121/SocialDistance"}, "release_url": "https://pypi.org/project/SDDetector/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "lightweight video detection", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SocialDistance</h1>\n<p>Keep safe social distance is considered as an effective way of avoiding spreading of coronavirus. Our SocialDistance module is a lightweight package which provides an implementation of utlizing deep learning models for monitoring safe social distance.</p>\n<h1>Demo</h1>\n<p><a href=\"https://www.youtube.com/watch?v=1s46BJJj6rw&amp;t=5s\" rel=\"nofollow\">Watch the demo video</a></p>\n<h1>Dataset</h1>\n<p>We use the video clip collected from <a href=\"https://www.robots.ox.ac.uk/ActiveVision/Research/Projects/2009bbenfold_headpose/project.html\" rel=\"nofollow\">OXFORD TOWN CENTRE</a> dataset and made the above demo video.</p>\n<h1>Supported Models</h1>\n<p>We have tested our model using Faster-RCNN, YOLO-v3 and SSD, based on the performance of each model, we have chosen YOLO-v3 as our default model</p>\n<p>All our models are pretrained models from <a href=\"https://github.com/dmlc/gluon-cv\" rel=\"nofollow\">Gluno CV Tookit</a></p>\n<h1>Installation</h1>\n<p>You may be able to obtain the latest version our model from:</p>\n<pre><code>pip install -i https://test.pypi.org/simple/ SocialDistance==0.1\npip install gluoncv\npip install mxnet-cu101\n</code></pre>\n<h1>Usage</h1>\n<p>After Successfully installed SocialDistance, you can use it for detection by:</p>\n<pre><code>from SocialDistance.utils.Run import Detect\ndetect = Detect()\n#you may want to give an image as input to check the validity of bird-eye view transformation\ndetect(image)\n</code></pre>\n<p>If no arguments is given, our model will run using the default data collected from 'OXFORD TOWN CENTRE' dataset, otherwise you may want to specify arguments expicitly:</p>\n<pre><code>from SocialDistance.utils.Run import Detect\ndetect = Detect(video_path, video_save_path, keypoints, keypoints_birds_eye_view, actual_length, actual_width, pretrained_models)\n#you may want to give an image as input to check the validity of bird-eye view transformation\ndetect(image)\n</code></pre>\n<blockquote>\n<h2>Parameters</h2>\n</blockquote>\n<ul>\n<li><strong>video_path</strong>: input path of video</li>\n<li><strong>video_save_path</strong>: output path of labelled video</li>\n<li><strong>keypoints</strong>: selected key points from first frame of the input video</li>\n<li><strong>keypoints_birds_eye_view</strong>: mapping location of keypoints on the bird-eye view image</li>\n<li><strong>actual_length</strong>: actual length in real-world</li>\n<li><strong>actual_width</strong>: actual width in real-world</li>\n<li><strong>pretrained_models</strong>: selected pretrained models</li>\n</ul>\n\n          </div>"}, "last_serial": 7144613, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2fce0b3cc881088fc41b7daff669a6bf", "sha256": "afc8d44565d7f702d487cc5fa6083adf8181d002aaac23d9f7d61a16b03a2856"}, "downloads": -1, "filename": "SDDetector-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2fce0b3cc881088fc41b7daff669a6bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8150, "upload_time": "2020-05-01T12:37:07", "upload_time_iso_8601": "2020-05-01T12:37:07.814449Z", "url": "https://files.pythonhosted.org/packages/a5/7c/268c12b9145463c6606eb83107bd9caaa70362b221354412826a693c166b/SDDetector-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee62ba33671a53475bafd366bb1e5cea", "sha256": "54dae1b2f254dd328560f06d15bff7b8c98b583399825b3059e9fc44ea522b51"}, "downloads": -1, "filename": "SDDetector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ee62ba33671a53475bafd366bb1e5cea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5650, "upload_time": "2020-05-01T12:37:10", "upload_time_iso_8601": "2020-05-01T12:37:10.378614Z", "url": "https://files.pythonhosted.org/packages/44/be/e7322baf12648c75b89c73aa78589e5de994beef8f048e09e03d16140a06/SDDetector-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2fce0b3cc881088fc41b7daff669a6bf", "sha256": "afc8d44565d7f702d487cc5fa6083adf8181d002aaac23d9f7d61a16b03a2856"}, "downloads": -1, "filename": "SDDetector-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2fce0b3cc881088fc41b7daff669a6bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8150, "upload_time": "2020-05-01T12:37:07", "upload_time_iso_8601": "2020-05-01T12:37:07.814449Z", "url": "https://files.pythonhosted.org/packages/a5/7c/268c12b9145463c6606eb83107bd9caaa70362b221354412826a693c166b/SDDetector-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee62ba33671a53475bafd366bb1e5cea", "sha256": "54dae1b2f254dd328560f06d15bff7b8c98b583399825b3059e9fc44ea522b51"}, "downloads": -1, "filename": "SDDetector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ee62ba33671a53475bafd366bb1e5cea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5650, "upload_time": "2020-05-01T12:37:10", "upload_time_iso_8601": "2020-05-01T12:37:10.378614Z", "url": "https://files.pythonhosted.org/packages/44/be/e7322baf12648c75b89c73aa78589e5de994beef8f048e09e03d16140a06/SDDetector-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:19 2020"}