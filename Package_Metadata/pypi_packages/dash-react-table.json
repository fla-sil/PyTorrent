{"info": {"author": "Maxim Kupfer", "author_email": "mbkupfer@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# dash-react-table\nDash component for react-table\n\ndash-react-table provides a lightweight table component built on top of [react-table](https://github.com/tannerlinsley/react-table/tree/v6).\n\n*Note: This above link will take you to version 6 which is the one I used for this component (v6.8.6 to be exact)*\n\n## Installation\n\n*dash-react-table* is hosted on PyPI, and can be installed by\nrunning\n\n```\npip install dash-react-table\n```\n\n## Usage\n\n```python\nimport dash\nimport dash_html_components as html\nimport pandas as pd\n\nfrom dash_react_table import DashReactTable\n\ndf = pd.read_csv(\n    'https://raw.githubusercontent.com/plotly/datasets/master/solar.csv')\n\n\ndata = df.to_json(orient='records')\n\ncolumns = [{'Header': i, 'accessor': i} for i in df.columns]\n\napp.layout = html.Div([\n    DashReactTable(\n        id='table',\n        data=data,\n        columns=columns\n    )\n])\n\nif __name__ == '__main__':\n    app.run_server(debug=True)\n    \n```\n\n## DashReactTable Properties\n\n| Attribute | Description | Type | Default value |\n| --------- | ----------- | ---- | ------------- |\n| id |  Optional identifier used to reference component in callbacks | string |  |\n| data | An array of data | list of dict where each dict corresponds to a row of data| |\n| columns | An array of column attributes | list of dict which can contain the followings keys: Header(string), accessor(string), sortable(boolean), filterable(boolean), show(boolean), width(int), minWidth(int), maxWidth(int), className(string), style(string), headerClassName(string), headerStyle(string)\n| showPagination | Turn on pagination | boolean | false | \n| showPaginationTop | Put pagination on top | boolean | false | \n| showPaginationBottom | Put pagination on top | boolean | true |\n| showPageSizeOptions | Provide options for pagination | boolean | true | \n| pageSizeOptions | Define the size options for pagination | list of int | [5, 10, 20, 25, 50, 100] |\n| defaultPageSize | Default page size | int | 20 |\n| minRows | Controls the minimum number of rows to display | int | \n| sortable | Allow columns to be sorted | boolean | true |\n| resizable | Allow columns to be resizable | boolean | true |\n| filterable | Allow columns to be filterable. The component has a custom filter which performs a case/order insensitive filter. | boolean | false \n| className | Add classname to react-table. The main use case for this is to add \"-striped\" and/or \"-highlight\" | string | |\n| style | inline table styles | dict | |\n| conditionalFormatting | Custom conditional color formatting. Currently only supports [d3.scaleThreshold](https://github.com/d3/d3-scale/blob/master/README.md#threshold-scales). | dict with contains the following keys: domain(list of int), range(list of dict styles), ignore(list of string) |\n\n\n## Additonal notes:\n- All column properties can override table level properties\n\n- To use conditional formatting you must have N + 1 range values for N domain values. Range values must be camelcased styles. \n\n- To make a scrolling table with fixed headers, be sure to add a fixed height to the table's style property.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mbkupfer/dash-react-table.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dash-react-table", "package_url": "https://pypi.org/project/dash-react-table/", "platform": "", "project_url": "https://pypi.org/project/dash-react-table/", "project_urls": {"Homepage": "https://github.com/mbkupfer/dash-react-table.git"}, "release_url": "https://pypi.org/project/dash-react-table/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Dash component for React-Table", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dash-react-table</h1>\n<p>Dash component for react-table</p>\n<p>dash-react-table provides a lightweight table component built on top of <a href=\"https://github.com/tannerlinsley/react-table/tree/v6\" rel=\"nofollow\">react-table</a>.</p>\n<p><em>Note: This above link will take you to version 6 which is the one I used for this component (v6.8.6 to be exact)</em></p>\n<h2>Installation</h2>\n<p><em>dash-react-table</em> is hosted on PyPI, and can be installed by\nrunning</p>\n<pre><code>pip install dash-react-table\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dash</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dash_html_components</span> <span class=\"k\">as</span> <span class=\"nn\">html</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dash_react_table</span> <span class=\"kn\">import</span> <span class=\"n\">DashReactTable</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span>\n    <span class=\"s1\">'https://raw.githubusercontent.com/plotly/datasets/master/solar.csv'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(</span><span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">'records'</span><span class=\"p\">)</span>\n\n<span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'Header'</span><span class=\"p\">:</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"s1\">'accessor'</span><span class=\"p\">:</span> <span class=\"n\">i</span><span class=\"p\">}</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">]</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">Div</span><span class=\"p\">([</span>\n    <span class=\"n\">DashReactTable</span><span class=\"p\">(</span>\n        <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'table'</span><span class=\"p\">,</span>\n        <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span>\n        <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">columns</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">])</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run_server</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    \n</pre>\n<h2>DashReactTable Properties</h2>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>Optional identifier used to reference component in callbacks</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>data</td>\n<td>An array of data</td>\n<td>list of dict where each dict corresponds to a row of data</td>\n<td></td>\n</tr>\n<tr>\n<td>columns</td>\n<td>An array of column attributes</td>\n<td>list of dict which can contain the followings keys: Header(string), accessor(string), sortable(boolean), filterable(boolean), show(boolean), width(int), minWidth(int), maxWidth(int), className(string), style(string), headerClassName(string), headerStyle(string)</td>\n<td></td>\n</tr>\n<tr>\n<td>showPagination</td>\n<td>Turn on pagination</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showPaginationTop</td>\n<td>Put pagination on top</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showPaginationBottom</td>\n<td>Put pagination on top</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>showPageSizeOptions</td>\n<td>Provide options for pagination</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>pageSizeOptions</td>\n<td>Define the size options for pagination</td>\n<td>list of int</td>\n<td>[5, 10, 20, 25, 50, 100]</td>\n</tr>\n<tr>\n<td>defaultPageSize</td>\n<td>Default page size</td>\n<td>int</td>\n<td>20</td>\n</tr>\n<tr>\n<td>minRows</td>\n<td>Controls the minimum number of rows to display</td>\n<td>int</td>\n<td></td>\n</tr>\n<tr>\n<td>sortable</td>\n<td>Allow columns to be sorted</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>resizable</td>\n<td>Allow columns to be resizable</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>filterable</td>\n<td>Allow columns to be filterable. The component has a custom filter which performs a case/order insensitive filter.</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>className</td>\n<td>Add classname to react-table. The main use case for this is to add \"-striped\" and/or \"-highlight\"</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>style</td>\n<td>inline table styles</td>\n<td>dict</td>\n<td></td>\n</tr>\n<tr>\n<td>conditionalFormatting</td>\n<td>Custom conditional color formatting. Currently only supports <a href=\"https://github.com/d3/d3-scale/blob/master/README.md#threshold-scales\" rel=\"nofollow\">d3.scaleThreshold</a>.</td>\n<td>dict with contains the following keys: domain(list of int), range(list of dict styles), ignore(list of string)</td>\n<td></td>\n</tr></tbody></table>\n<h2>Additonal notes:</h2>\n<ul>\n<li>\n<p>All column properties can override table level properties</p>\n</li>\n<li>\n<p>To use conditional formatting you must have N + 1 range values for N domain values. Range values must be camelcased styles.</p>\n</li>\n<li>\n<p>To make a scrolling table with fixed headers, be sure to add a fixed height to the table's style property.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5005818, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "95ca88c9382a7531796cee15ded5819a", "sha256": "220ca2df2949387d6560babe93e58c932fa8070f1d754b873ae731363dbbc000"}, "downloads": -1, "filename": "dash_react_table-0.0.1.tar.gz", "has_sig": false, "md5_digest": "95ca88c9382a7531796cee15ded5819a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 787625, "upload_time": "2019-03-29T22:44:25", "upload_time_iso_8601": "2019-03-29T22:44:25.735155Z", "url": "https://files.pythonhosted.org/packages/ab/71/354655eeadd09dacf87df356eb27a0dac3a9b69bda61bd375000357f06cf/dash_react_table-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "15fa13e3fad881f1b15f84b211b61245", "sha256": "466f022779a966ac1e463eca2a43d1a473b49c38aba1685896cbf1dad038301c"}, "downloads": -1, "filename": "dash_react_table-0.0.2.tar.gz", "has_sig": false, "md5_digest": "15fa13e3fad881f1b15f84b211b61245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 787305, "upload_time": "2019-03-29T23:45:50", "upload_time_iso_8601": "2019-03-29T23:45:50.805510Z", "url": "https://files.pythonhosted.org/packages/27/f6/1d327f1e38f7d91adce0b420226d461a815d57ffa96f597ddb70a07cfb45/dash_react_table-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "03eb1215e64c239dd4964feee57afcc4", "sha256": "a443d1fd1281de8ac18ba5b07de6d1fb8ea461e7df60327e8461063729f4537c"}, "downloads": -1, "filename": "dash_react_table-0.0.3.tar.gz", "has_sig": false, "md5_digest": "03eb1215e64c239dd4964feee57afcc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 788829, "upload_time": "2019-03-30T01:24:07", "upload_time_iso_8601": "2019-03-30T01:24:07.711895Z", "url": "https://files.pythonhosted.org/packages/d8/00/a705f42305a0ce58bcd0b33dab8f860c50a70e43576524741fa613416cdc/dash_react_table-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03eb1215e64c239dd4964feee57afcc4", "sha256": "a443d1fd1281de8ac18ba5b07de6d1fb8ea461e7df60327e8461063729f4537c"}, "downloads": -1, "filename": "dash_react_table-0.0.3.tar.gz", "has_sig": false, "md5_digest": "03eb1215e64c239dd4964feee57afcc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 788829, "upload_time": "2019-03-30T01:24:07", "upload_time_iso_8601": "2019-03-30T01:24:07.711895Z", "url": "https://files.pythonhosted.org/packages/d8/00/a705f42305a0ce58bcd0b33dab8f860c50a70e43576524741fa613416cdc/dash_react_table-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:35 2020"}