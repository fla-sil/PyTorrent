{"info": {"author": "Steve Rubin", "author_email": "srubin@cs.berkeley.edu", "bugtrack_url": null, "classifiers": [], "description": "radiotool - tools for constructing audio\n========================================\n\nImportant note\n--------------\n\nSome parts of this codebase have had significant changes since the\nlast revision of the documentation- so the current documentation is\nwrong in some places. I will try to update the documentation as soon\nas I can, but for now, feel free to ask me questions if anything is\nnot clear.\n\nDescription\n-----------\n\nRadiotool is a python library that aims to make it easy to create\naudio by piecing together bits of other audio files. This library was\noriginally written to enable my research in audio editing user\ninterfaces, but perhaps someone else might find it useful.\n\nRead the full documentation_.\n\n.. _documentation: http://ucbvislab.github.io/radiotool\n\nTo perform the actual audio rendering, radiotool relies on\nscikits.audiolab_, a python wrapper for libsndfile_.\n\n.. _scikits.audiolab: https://pypi.python.org/pypi/scikits.audiolab/\n.. _libsndfile: http://www.mega-nerd.com/libsndfile/\n\nInstallation\n------------\n\nEither ``pip install radiotool`` or clone the repository and run\n``python setup.py install``.\n\nRequirements\n------------\n\nlibsndfile_, numpy, scikits.audiolab_, and librosa_.\n\nexempi_ for writing Audition/Premiere-readable labels to audio files.\n\n.. _exempi: http://libopenraw.freedesktop.org/wiki/Exempi/\n.. _librosa: https://github.com/bmcfee/librosa/\n\nComposition\n-----------\n \nThe heart of radiotool is the ``Composition``. A ``Composition`` is\nbuilt out of Segments, which represent segments of audio\nTracks (or raw PCM data, in the case of RawTracks). You can\nalso add Dynamics to adjust the volume of segments in certain\nways. \n\nSimple example\n~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from radiotool.composer import *\n    comp = Composition()\n    \n    # create a track with a pre-existing wav file\n    track = Track(\"test.wav\")\n\n    # create a segment of a track that:\n    # 1. starts at the 0.0 mark of the composition\n    # 2. begins playing at the 0.5 second mark of the track\n    # 3. plays for 1.0 seconds\n    segment = Segment(track, 0.0, 0.5, 1.0)\n\n    # add segment to the composition\n    comp.add_segment(segment)\n\n    # output your composition as a numpy array\n    arr_out = comp.build()\n\n    # or export your composition as an audio file, composition.wav\n    comp.export(filename=\"composition\")\n\nRetargeting\n-----------\n\nMusic retargeting is the idea of taking a song and remixing it *from\nits own existing beats/structure* to fit the music to certain\nconstraints.\n\nSee http://ucbvislab.github.io/radiotool/algorithms/retarget.html for\napplications of music retargeting, and details about how to retarget\nmusic using raditool.\n\nSee the documentation_ for more detail.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ucbvislab/radiotool", "keywords": null, "license": "ISC", "maintainer": null, "maintainer_email": null, "name": "radiotool", "package_url": "https://pypi.org/project/radiotool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/radiotool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ucbvislab/radiotool"}, "release_url": "https://pypi.org/project/radiotool/0.4.3/", "requires_dist": null, "requires_python": null, "summary": "Tools for constructing and retargeting audio", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"important-note\">\n<h2>Important note</h2>\n<p>Some parts of this codebase have had significant changes since the\nlast revision of the documentation- so the current documentation is\nwrong in some places. I will try to update the documentation as soon\nas I can, but for now, feel free to ask me questions if anything is\nnot clear.</p>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Radiotool is a python library that aims to make it easy to create\naudio by piecing together bits of other audio files. This library was\noriginally written to enable my research in audio editing user\ninterfaces, but perhaps someone else might find it useful.</p>\n<p>Read the full <a href=\"http://ucbvislab.github.io/radiotool\" rel=\"nofollow\">documentation</a>.</p>\n<p>To perform the actual audio rendering, radiotool relies on\n<a href=\"https://pypi.python.org/pypi/scikits.audiolab/\" rel=\"nofollow\">scikits.audiolab</a>, a python wrapper for <a href=\"http://www.mega-nerd.com/libsndfile/\" rel=\"nofollow\">libsndfile</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Either <tt>pip install radiotool</tt> or clone the repository and run\n<tt>python setup.py install</tt>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p><a href=\"http://www.mega-nerd.com/libsndfile/\" rel=\"nofollow\">libsndfile</a>, numpy, <a href=\"https://pypi.python.org/pypi/scikits.audiolab/\" rel=\"nofollow\">scikits.audiolab</a>, and <a href=\"https://github.com/bmcfee/librosa/\" rel=\"nofollow\">librosa</a>.</p>\n<p><a href=\"http://libopenraw.freedesktop.org/wiki/Exempi/\" rel=\"nofollow\">exempi</a> for writing Audition/Premiere-readable labels to audio files.</p>\n</div>\n<div id=\"composition\">\n<h2>Composition</h2>\n<p>The heart of radiotool is the <tt>Composition</tt>. A <tt>Composition</tt> is\nbuilt out of Segments, which represent segments of audio\nTracks (or raw PCM data, in the case of RawTracks). You can\nalso add Dynamics to adjust the volume of segments in certain\nways.</p>\n<div id=\"simple-example\">\n<h3>Simple example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">radiotool.composer</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">comp</span> <span class=\"o\">=</span> <span class=\"n\">Composition</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># create a track with a pre-existing wav file</span>\n<span class=\"n\">track</span> <span class=\"o\">=</span> <span class=\"n\">Track</span><span class=\"p\">(</span><span class=\"s2\">\"test.wav\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a segment of a track that:</span>\n<span class=\"c1\"># 1. starts at the 0.0 mark of the composition</span>\n<span class=\"c1\"># 2. begins playing at the 0.5 second mark of the track</span>\n<span class=\"c1\"># 3. plays for 1.0 seconds</span>\n<span class=\"n\">segment</span> <span class=\"o\">=</span> <span class=\"n\">Segment</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># add segment to the composition</span>\n<span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">add_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># output your composition as a numpy array</span>\n<span class=\"n\">arr_out</span> <span class=\"o\">=</span> <span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># or export your composition as an audio file, composition.wav</span>\n<span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s2\">\"composition\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"retargeting\">\n<h2>Retargeting</h2>\n<p>Music retargeting is the idea of taking a song and remixing it <em>from\nits own existing beats/structure</em> to fit the music to certain\nconstraints.</p>\n<p>See <a href=\"http://ucbvislab.github.io/radiotool/algorithms/retarget.html\" rel=\"nofollow\">http://ucbvislab.github.io/radiotool/algorithms/retarget.html</a> for\napplications of music retargeting, and details about how to retarget\nmusic using raditool.</p>\n<p>See the <a href=\"http://ucbvislab.github.io/radiotool\" rel=\"nofollow\">documentation</a> for more detail.</p>\n</div>\n\n          </div>"}, "last_serial": 1373338, "releases": {"0.1": [], "0.3": [{"comment_text": "", "digests": {"md5": "4949cf354cecbe533eed5bf664eec721", "sha256": "d1fa50398013673a43a9e63cf1a8ee31012128b5a32120d24368c262af78b662"}, "downloads": -1, "filename": "radiotool-0.3.tar.gz", "has_sig": false, "md5_digest": "4949cf354cecbe533eed5bf664eec721", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23967, "upload_time": "2013-11-22T21:42:55", "upload_time_iso_8601": "2013-11-22T21:42:55.977341Z", "url": "https://files.pythonhosted.org/packages/77/3f/1b2c03539f9e920960c9fbc8bb7a079ab93a9957223f425e958c294e8191/radiotool-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "1e6a9ba7336ad58380da30ec400503c4", "sha256": "4dd9c1b3aeba907eccaa8f05dd10570f52b582af47f2340ac8414b38a2d94415"}, "downloads": -1, "filename": "radiotool-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1e6a9ba7336ad58380da30ec400503c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24943, "upload_time": "2013-11-22T21:46:04", "upload_time_iso_8601": "2013-11-22T21:46:04.575530Z", "url": "https://files.pythonhosted.org/packages/63/f3/7a8fd3f243268d293db01e312bc3909578e9e8a509f631352e3b15b23897/radiotool-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "f4eebdab9b6e33693f7a2f450dc70072", "sha256": "82690a9c790b6534959d48a2358d5a13d4a73ae70959a8661c2dbe431b98a02d"}, "downloads": -1, "filename": "radiotool-0.3.2.tar.gz", "has_sig": false, "md5_digest": "f4eebdab9b6e33693f7a2f450dc70072", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25014, "upload_time": "2013-11-22T22:04:02", "upload_time_iso_8601": "2013-11-22T22:04:02.263443Z", "url": "https://files.pythonhosted.org/packages/14/86/546d42b90dbf5f94a276826aeb43863c24bcd4fc2167ae5a01d746c6a386/radiotool-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "af60008d165ef014e642fc9091efc9a5", "sha256": "8c30cff7bd55459aeed72120f84a48b51b03666737b3bc2d26ad5fce8b61e55d"}, "downloads": -1, "filename": "radiotool-0.3.3.tar.gz", "has_sig": false, "md5_digest": "af60008d165ef014e642fc9091efc9a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25267, "upload_time": "2013-11-24T17:53:48", "upload_time_iso_8601": "2013-11-24T17:53:48.577147Z", "url": "https://files.pythonhosted.org/packages/b6/18/a148494a5ac039ad1e51bf54c13dc8f3e4fbc2680a4a8a7bb03b857fb465/radiotool-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "48e22e2b6e79c0e58ac76bf2f62e7c0d", "sha256": "3d3ea2cff4e20c989d706c809c67746330c0609795b4a46204997427e7fde8dc"}, "downloads": -1, "filename": "radiotool-0.4.0.tar.gz", "has_sig": false, "md5_digest": "48e22e2b6e79c0e58ac76bf2f62e7c0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231683, "upload_time": "2014-12-02T22:18:29", "upload_time_iso_8601": "2014-12-02T22:18:29.429975Z", "url": "https://files.pythonhosted.org/packages/d1/e5/a2cf456ce403e6db378fbff19c2ff06a41add02bf1786e6ed845d257a9b4/radiotool-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "70e3ddf78e563a03259e62069bcb5c7a", "sha256": "e529f80d9f6f6b27cfbb444152ff1465657ac3a72e585caa1e9db930ec884ac2"}, "downloads": -1, "filename": "radiotool-0.4.1.tar.gz", "has_sig": false, "md5_digest": "70e3ddf78e563a03259e62069bcb5c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231923, "upload_time": "2014-12-11T23:45:31", "upload_time_iso_8601": "2014-12-11T23:45:31.464192Z", "url": "https://files.pythonhosted.org/packages/28/bf/18cb2e0cbe58557f0ba532e9ed9a68cacdcbf54a48ac40e559bf0f830daa/radiotool-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "8fa635433b9a9dbce3d83d62854b4bf8", "sha256": "91eac75ac0dc04eda05528fc70700041faf022a5375f2576e5b5068becd6892e"}, "downloads": -1, "filename": "radiotool-0.4.2.tar.gz", "has_sig": false, "md5_digest": "8fa635433b9a9dbce3d83d62854b4bf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231898, "upload_time": "2015-01-06T23:52:28", "upload_time_iso_8601": "2015-01-06T23:52:28.771049Z", "url": "https://files.pythonhosted.org/packages/09/6b/5e3a2a70936999a2b15eb68431df0e41846aa34153fb12d39d9679049c63/radiotool-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "c4ce452ae579f6f4e3c72557cb80acf8", "sha256": "1536903ca829a6ca6c7bf775bcb24226f4f7330cda8d11538eadde4c014222f8"}, "downloads": -1, "filename": "radiotool-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c4ce452ae579f6f4e3c72557cb80acf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231953, "upload_time": "2015-01-06T23:58:54", "upload_time_iso_8601": "2015-01-06T23:58:54.288020Z", "url": "https://files.pythonhosted.org/packages/1e/67/f46736d6f19ff7859f68ac0d783b6beba9c36442ab90780a76376503a3bb/radiotool-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4ce452ae579f6f4e3c72557cb80acf8", "sha256": "1536903ca829a6ca6c7bf775bcb24226f4f7330cda8d11538eadde4c014222f8"}, "downloads": -1, "filename": "radiotool-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c4ce452ae579f6f4e3c72557cb80acf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231953, "upload_time": "2015-01-06T23:58:54", "upload_time_iso_8601": "2015-01-06T23:58:54.288020Z", "url": "https://files.pythonhosted.org/packages/1e/67/f46736d6f19ff7859f68ac0d783b6beba9c36442ab90780a76376503a3bb/radiotool-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:59 2020"}