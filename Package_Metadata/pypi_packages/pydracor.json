{"info": {"author": "Eduard Grigoriev", "author_email": "happypuffin7@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Education", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# PyDraCcor\n\nPyDraCor is a Python package which provides access to the DraCor API.\n\n## Classes\n  - *DraCor* \n    > Base class used to represent Drama Corpus entity.\n    > DraCor consists of Corpuses.\n  - *Corpus*\n    > A class used to represent a Corpus of DraCor.\n    > Corpus (*cal*/*ger*/*greek*/*rom*/*rus*/*shake*/*span*/*swe*) consists of plays.\n  - *Play*\n    > A class used to represent a Play of a Corpus.\n    > Play consists of Characters.\n  - *Character*\n    > A class used to represent a Character of a Play.\n\n## Code examples\n### Dracor\n  - Initialize a *DraCor* instance\n    ```python\n    >>> dracor = DraCor()\n    ```\n  - Summary in a dictionary\n    ```python\n    >>> dracor.summary()\n    ```\n  - Summary in a string\n    ```python\n    >>> str(dracor)\n    ```\n  - DraCor info in a dictionary\n    ```python\n    >>> dracor.dracor_info()\n    ```\n  - List available corpora in DraCor\n    ```python\n    >>> dracor.corpora()\n    >>> dracor.corpora(include='metrics')\n    ```\n  - List available corpora names in DraCor\n    ```python\n    >>> dracor.corpora_names()\n    ```\n  - List available corpora titles in DraCor\n    ```python\n    >>> dracor.corpora_titles()\n    ```\n  - Map X to Y\n    ```python\n    >>> dracor.corpus_name_to_repository()\n    >>> dracor.corpus_name_to_title()\n    >>> dracor.corpus_name_to_uri()\n    >>> dracor.play_title_to_corpus_name()\n    >>> dracor.play_title_to_play_id()\n    >>> dracor.play_name_to_corpus_name()\n    >>> dracor.play_name_to_play_id()\n    >>> dracor.play_id_to_play_title()\n    >>> dracor.play_id_to_play_name()\n    ```\n  - Submit SPARQL queries with query parameter\n    ```python\n    >>> dracor.sparql('SELECT * WHERE {?s ?p ?o} LIMIT 1')\n    ```\n### Corpus\n  - Initialize a *Corpus* instance\n    ```python\n    >>> corpus = Corpus('rus')\n    >>> corpus = Corpus('cal')\n    ...\n    ```\n  - Summary in a dictionary\n    ```python\n    >>> corpus.summary()\n    ```\n  - Summary in a string\n    ```python\n    >>> str(corpus)\n    ```\n  - Authors' summary for a corpus\n    ```python\n    >>> corpus.authors_summary()\n    >>> corpus.authors_summary(num_of_authors=5)\n    ```\n  - String representation of authors_summary method\n    ```python\n    >>> corpus.authors_summary_str()\n    >>> corpus.authors_summary_str(num_of_authors=5)\n    ```\n  - Corpus info in a dictionary\n    ```python\n    >>> corpus.corpus_info()\n    ```\n  - Get all corpus' play Xs\n    ```python\n    >>> corpus.play_ids()\n    >>> corpus.play_names()\n    >>> corpus.play_titles()\n    ```\n  - Map play id to the X year\n    ```python\n    >>> corpus.written_years()\n    >>> corpus.premiere_years()\n    >>> corpus.premiere_years()\n    ```\n  - List of metadata for all plays in a corpus\n    ```python\n    >>> corpus.metadata()\n    ```\n  - Filter Plays of a Corpus\n  \n    Filters are equivalent to the django filters\n  \n    Possible relations: *eq* / *ne* / *gt* / *ge* / *lt* / *le* / *contains* / *icontains* / *exact* / *iexact* / *in*\n  \n    Possible fields: all the attributes that the *Corpus* instance contains\n    ```python\n    >>> corpus.filter(written_year__eq=1913, network_size__lt=20)\n    >>> corpus.filter(print_year__lt=1850, source__icontains='lib.ru', premiere_year__gt=1845)\n    >>> corpus.filter(\n        id__in=frozenset(f\"rus000{num:03d}\" for num in range(0, 250, 2)),\n        subtitle__icontains='\u043a\u043e\u043c\u0435\u0434\u0438\u044f',\n        author__name__contains='\u041a\u0440\u044b\u043b\u043e\u0432'\n    )\n    >>> corpus.filter(name__contains='mysl')\n    >>> corpus.filter(title__exact='\u041c\u044b\u0441\u043b\u044c')\n    >>> corpus.filter(\n        year_normalized__in=frozenset(['1935', '1936'])\n        source_url__contains='lib'\n    )\n    >>> corpus.filter(wikidata_id__iexact='Q1989636')\n    >>> corpus.filter(networkdata_csv_url__icontains='/andreyev-ne-ubiy/')\n    >>> corpus.filter(authors__name__icontains='\u0411\u0430\u0431\u0435\u043b\u044c')\n    ```\n### Play\n  - Initialize a *Play* instance\n\n    If *play_id* is not None, *play_name* and *play_title* are not considered\n\n    If *play_id* is None *AND* *play_name* is not None, *play_title* is not considered\n\n    If *play_id* is None *AND* *play_name* is None, *play_title* should not be None, otherwise *ValueError* is raised\n\n    If *play_id* is None, automatic corpus detection is applied\n    ```python\n    >>> play = Play('rus000160')\n    >>> play = Play(play_id='rus000160')\n    >>> play = Play(play_name='ostrovsky-dohodnoe-mesto')\n    >>> play = Play(play_title='\u0414\u043e\u0445\u043e\u0434\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e')\n    ```\n  - Summary in a dictionary\n    ```python\n    >>> play.summary()\n    ```\n  - Summary in a string\n    ```python\n    >>> str(play)\n    ```\n  - Play info in a dictionary\n    ```python\n    >>> play.play_info()\n    ```\n  - Get network metrics for a single play\n    ```python\n    >>> play.metrics()\n    ```\n  - Get a list of characters of a play\n    ```python\n    >>> play.get_cast()\n    ```\n  - Get X of a play\n    ```python\n    >>> play.num_of_male_characters\n    >>> play.num_of_female_characters\n    >>> play.num_of_unknown_characters\n    >>> play.tei\n    >>> play.rdf\n    >>> play.csv\n    >>> play.gexf\n    ```\n  - Get spoken text of a play (excluding stage directions)\n    ```python\n    >>> play.spoken_text()\n    >>> play.spoken_text(gender='MALE')\n    >>> play.spoken_text(gender='FEMALE')\n    >>> play.spoken_text(gender='UNKNOWN')\n    ```\n  - Get spoken text for each character of a play\n    ```python\n    >>> play.spoken_text_by_character()\n    ```\n  - Get all stage directions of a play\n    ```python\n    >>> play.stage_directions()\n    ```\n  - Get all stage directions of a play including speakers\n    ```python\n    >>> play.stage_directions_with_speakers()\n    ```\n### Character\n  - Initialize a *Character* instance\n    ```python\n    >>> character = Character('yakov', 'rus000138')\n    >>> character = Character('kraft', 'rus000137')\n    ...\n    ```\n  - Summary in a dictionary\n    ```python\n    >>> character.summary()\n    ```\n  - Summary in a string\n    ```python\n    >>> str(character)\n    ```\n\n## Installation\n```sh\n$ pip install pydracor\n```\n## Todos\n - write more methods\n - write more tests\n\n## License\nMIT", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/dracor-org/pydracor/archive/pydracor-v0.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dracor-org/pydracor", "keywords": "drama corpus,drama,corpus,pydracor,dracor,api,wrapper", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "pydracor", "package_url": "https://pypi.org/project/pydracor/", "platform": "", "project_url": "https://pypi.org/project/pydracor/", "project_urls": {"Download": "https://github.com/dracor-org/pydracor/archive/pydracor-v0.0.1.tar.gz", "Homepage": "https://github.com/dracor-org/pydracor"}, "release_url": "https://pypi.org/project/pydracor/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Python package which provides access to the DraCor API.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyDraCcor</h1>\n<p>PyDraCor is a Python package which provides access to the DraCor API.</p>\n<h2>Classes</h2>\n<ul>\n<li><em>DraCor</em>\n<blockquote>\n<p>Base class used to represent Drama Corpus entity.\nDraCor consists of Corpuses.</p>\n</blockquote>\n</li>\n<li><em>Corpus</em>\n<blockquote>\n<p>A class used to represent a Corpus of DraCor.\nCorpus (<em>cal</em>/<em>ger</em>/<em>greek</em>/<em>rom</em>/<em>rus</em>/<em>shake</em>/<em>span</em>/<em>swe</em>) consists of plays.</p>\n</blockquote>\n</li>\n<li><em>Play</em>\n<blockquote>\n<p>A class used to represent a Play of a Corpus.\nPlay consists of Characters.</p>\n</blockquote>\n</li>\n<li><em>Character</em>\n<blockquote>\n<p>A class used to represent a Character of a Play.</p>\n</blockquote>\n</li>\n</ul>\n<h2>Code examples</h2>\n<h3>Dracor</h3>\n<ul>\n<li>Initialize a <em>DraCor</em> instance\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span> <span class=\"o\">=</span> <span class=\"n\">DraCor</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Summary in a dictionary\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Summary in a string\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">dracor</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>DraCor info in a dictionary\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">dracor_info</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>List available corpora in DraCor\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpora</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpora</span><span class=\"p\">(</span><span class=\"n\">include</span><span class=\"o\">=</span><span class=\"s1\">'metrics'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>List available corpora names in DraCor\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpora_names</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>List available corpora titles in DraCor\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpora_titles</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Map X to Y\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpus_name_to_repository</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpus_name_to_title</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">corpus_name_to_uri</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">play_title_to_corpus_name</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">play_title_to_play_id</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">play_name_to_corpus_name</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">play_name_to_play_id</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">play_id_to_play_title</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">play_id_to_play_name</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Submit SPARQL queries with query parameter\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dracor</span><span class=\"o\">.</span><span class=\"n\">sparql</span><span class=\"p\">(</span><span class=\"s1\">'SELECT * WHERE {?s ?p ?o} LIMIT 1'</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h3>Corpus</h3>\n<ul>\n<li>\n<p>Initialize a <em>Corpus</em> instance</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span> <span class=\"o\">=</span> <span class=\"n\">Corpus</span><span class=\"p\">(</span><span class=\"s1\">'rus'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span> <span class=\"o\">=</span> <span class=\"n\">Corpus</span><span class=\"p\">(</span><span class=\"s1\">'cal'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n</li>\n<li>\n<p>Summary in a dictionary</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Summary in a string</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">corpus</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Authors' summary for a corpus</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">authors_summary</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">authors_summary</span><span class=\"p\">(</span><span class=\"n\">num_of_authors</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>String representation of authors_summary method</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">authors_summary_str</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">authors_summary_str</span><span class=\"p\">(</span><span class=\"n\">num_of_authors</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Corpus info in a dictionary</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">corpus_info</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get all corpus' play Xs</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">play_ids</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">play_names</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">play_titles</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Map play id to the X year</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">written_years</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">premiere_years</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">premiere_years</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>List of metadata for all plays in a corpus</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Filter Plays of a Corpus</p>\n<p>Filters are equivalent to the django filters</p>\n<p>Possible relations: <em>eq</em> / <em>ne</em> / <em>gt</em> / <em>ge</em> / <em>lt</em> / <em>le</em> / <em>contains</em> / <em>icontains</em> / <em>exact</em> / <em>iexact</em> / <em>in</em></p>\n<p>Possible fields: all the attributes that the <em>Corpus</em> instance contains</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">written_year__eq</span><span class=\"o\">=</span><span class=\"mi\">1913</span><span class=\"p\">,</span> <span class=\"n\">network_size__lt</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">print_year__lt</span><span class=\"o\">=</span><span class=\"mi\">1850</span><span class=\"p\">,</span> <span class=\"n\">source__icontains</span><span class=\"o\">=</span><span class=\"s1\">'lib.ru'</span><span class=\"p\">,</span> <span class=\"n\">premiere_year__gt</span><span class=\"o\">=</span><span class=\"mi\">1845</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n    <span class=\"n\">id__in</span><span class=\"o\">=</span><span class=\"nb\">frozenset</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"rus000</span><span class=\"si\">{</span><span class=\"n\">num</span><span class=\"si\">:</span><span class=\"s2\">03d</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"k\">for</span> <span class=\"n\">num</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)),</span>\n    <span class=\"n\">subtitle__icontains</span><span class=\"o\">=</span><span class=\"s1\">'\u043a\u043e\u043c\u0435\u0434\u0438\u044f'</span><span class=\"p\">,</span>\n    <span class=\"n\">author__name__contains</span><span class=\"o\">=</span><span class=\"s1\">'\u041a\u0440\u044b\u043b\u043e\u0432'</span>\n<span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name__contains</span><span class=\"o\">=</span><span class=\"s1\">'mysl'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">title__exact</span><span class=\"o\">=</span><span class=\"s1\">'\u041c\u044b\u0441\u043b\u044c'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n    <span class=\"n\">year_normalized__in</span><span class=\"o\">=</span><span class=\"nb\">frozenset</span><span class=\"p\">([</span><span class=\"s1\">'1935'</span><span class=\"p\">,</span> <span class=\"s1\">'1936'</span><span class=\"p\">])</span>\n    <span class=\"n\">source_url__contains</span><span class=\"o\">=</span><span class=\"s1\">'lib'</span>\n<span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">wikidata_id__iexact</span><span class=\"o\">=</span><span class=\"s1\">'Q1989636'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">networkdata_csv_url__icontains</span><span class=\"o\">=</span><span class=\"s1\">'/andreyev-ne-ubiy/'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">authors__name__icontains</span><span class=\"o\">=</span><span class=\"s1\">'\u0411\u0430\u0431\u0435\u043b\u044c'</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h3>Play</h3>\n<ul>\n<li>\n<p>Initialize a <em>Play</em> instance</p>\n<p>If <em>play_id</em> is not None, <em>play_name</em> and <em>play_title</em> are not considered</p>\n<p>If <em>play_id</em> is None <em>AND</em> <em>play_name</em> is not None, <em>play_title</em> is not considered</p>\n<p>If <em>play_id</em> is None <em>AND</em> <em>play_name</em> is None, <em>play_title</em> should not be None, otherwise <em>ValueError</em> is raised</p>\n<p>If <em>play_id</em> is None, automatic corpus detection is applied</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span> <span class=\"o\">=</span> <span class=\"n\">Play</span><span class=\"p\">(</span><span class=\"s1\">'rus000160'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span> <span class=\"o\">=</span> <span class=\"n\">Play</span><span class=\"p\">(</span><span class=\"n\">play_id</span><span class=\"o\">=</span><span class=\"s1\">'rus000160'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span> <span class=\"o\">=</span> <span class=\"n\">Play</span><span class=\"p\">(</span><span class=\"n\">play_name</span><span class=\"o\">=</span><span class=\"s1\">'ostrovsky-dohodnoe-mesto'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span> <span class=\"o\">=</span> <span class=\"n\">Play</span><span class=\"p\">(</span><span class=\"n\">play_title</span><span class=\"o\">=</span><span class=\"s1\">'\u0414\u043e\u0445\u043e\u0434\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Summary in a dictionary</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Summary in a string</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">play</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Play info in a dictionary</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">play_info</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get network metrics for a single play</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get a list of characters of a play</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">get_cast</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get X of a play</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">num_of_male_characters</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">num_of_female_characters</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">num_of_unknown_characters</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">tei</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">rdf</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">csv</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">gexf</span>\n</pre>\n</li>\n<li>\n<p>Get spoken text of a play (excluding stage directions)</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">spoken_text</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">spoken_text</span><span class=\"p\">(</span><span class=\"n\">gender</span><span class=\"o\">=</span><span class=\"s1\">'MALE'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">spoken_text</span><span class=\"p\">(</span><span class=\"n\">gender</span><span class=\"o\">=</span><span class=\"s1\">'FEMALE'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">spoken_text</span><span class=\"p\">(</span><span class=\"n\">gender</span><span class=\"o\">=</span><span class=\"s1\">'UNKNOWN'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Get spoken text for each character of a play</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">spoken_text_by_character</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get all stage directions of a play</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">stage_directions</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get all stage directions of a play including speakers</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">play</span><span class=\"o\">.</span><span class=\"n\">stage_directions_with_speakers</span><span class=\"p\">()</span>\n</pre>\n</li>\n</ul>\n<h3>Character</h3>\n<ul>\n<li>Initialize a <em>Character</em> instance\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">character</span> <span class=\"o\">=</span> <span class=\"n\">Character</span><span class=\"p\">(</span><span class=\"s1\">'yakov'</span><span class=\"p\">,</span> <span class=\"s1\">'rus000138'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">character</span> <span class=\"o\">=</span> <span class=\"n\">Character</span><span class=\"p\">(</span><span class=\"s1\">'kraft'</span><span class=\"p\">,</span> <span class=\"s1\">'rus000137'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n</li>\n<li>Summary in a dictionary\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Summary in a string\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">character</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h2>Installation</h2>\n<pre>$ pip install pydracor\n</pre>\n<h2>Todos</h2>\n<ul>\n<li>write more methods</li>\n<li>write more tests</li>\n</ul>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6270173, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "9de5832110fac9d3de595340bdbd4681", "sha256": "02bf1e41ac86e6cc063af00374ae7670d1b59b4862abf0120516146e86dba1a8"}, "downloads": -1, "filename": "pydracor-0.0.0.tar.gz", "has_sig": false, "md5_digest": "9de5832110fac9d3de595340bdbd4681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15917, "upload_time": "2019-12-08T15:30:18", "upload_time_iso_8601": "2019-12-08T15:30:18.878876Z", "url": "https://files.pythonhosted.org/packages/12/4a/73648572ea3b39714658e5761de66c0800cfd55b9347f9c7c4a2686a6624/pydracor-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "cb85bb100d2042ab1d31e686fe42bfb6", "sha256": "ec7f4ee147f48a2f49353d372ac0e82c6dc34ead30198ae32dabfcb9b18d0501"}, "downloads": -1, "filename": "pydracor-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cb85bb100d2042ab1d31e686fe42bfb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16653, "upload_time": "2019-12-10T00:57:09", "upload_time_iso_8601": "2019-12-10T00:57:09.024191Z", "url": "https://files.pythonhosted.org/packages/db/49/f907868f220566798a516748bef2e1d2d4949368a016a525651596d06446/pydracor-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb85bb100d2042ab1d31e686fe42bfb6", "sha256": "ec7f4ee147f48a2f49353d372ac0e82c6dc34ead30198ae32dabfcb9b18d0501"}, "downloads": -1, "filename": "pydracor-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cb85bb100d2042ab1d31e686fe42bfb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16653, "upload_time": "2019-12-10T00:57:09", "upload_time_iso_8601": "2019-12-10T00:57:09.024191Z", "url": "https://files.pythonhosted.org/packages/db/49/f907868f220566798a516748bef2e1d2d4949368a016a525651596d06446/pydracor-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:47 2020"}