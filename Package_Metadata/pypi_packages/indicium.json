{"info": {"author": "Adri\u00e1n P\u00e9rez de Castro", "author_email": "aperez@igalia.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "==========\n Indicium\n==========\n\n.. image:: https://readthedocs.org/projects/indicium/badge/?version=latest\n   :target: https://indicium.readthedocs.org/en/latest\n   :alt: Documentation Status\n\n.. image:: https://img.shields.io/travis/aperezdc/indicium.svg?style=flat\n   :target: https://travis-ci.org/aperezdc/indicium\n   :alt: Build Status\n\n.. image:: https://img.shields.io/coveralls/aperezdc/indicium/master.svg?style=flat\n   :target: https://coveralls.io/r/aperezdc/indicium?branch=master\n   :alt: Code Coverage\n\nPythonic, unified API to multiple key-value stores.\n\nThis base package includes:\n\n* Abstract definition of the ``Store`` API, which all storage systems follow.\n* In-memory `caching of data of values`__ from a store using LRU eviction.\n* In-memory `transient storage`__ backed by Python dictionaries.\n* Simple `filesystem-based storage`__ using directories and plain files.\n* Adaptors for `transparent (de)serialization`__ of stored values.\n\n__ http://indicium.readthedocs.org/en/latest/apiref.html#indicium.cache.LRUCache\n__ http://indicium.readthedocs.org/en/latest/apiref.html#indicium.base.DictStore\n__ http://indicium.readthedocs.org/en/latest/apiref.html#indicium.fs.FSStore\n__ http://indicium.readthedocs.org/en/latest/apiref.html#indicium.base.Serializer\n\nSupport for additional storage system is by packages distributed separately:\n\n* `indicium-git <https://github.com/aperezdc/indicium-git>`_.\n* `indicium-ldap <https://github.com/aperezdc/indicium-ldap>`_.\n* ``indicium-leveldb`` (planned, not yet available).\n* ``indicium-memcache`` (planned, not yet available).\n\n\nUsage\n=====\n\nCreate a ``Store`` which saves content on-disk, using JSON for serialization,\nand store somwthing that resembles an user account:\n\n.. code-block:: python\n\n    from indicium.base import Serializer\n    import json\n\n    filestore = Serializer(FSStore(\"./data\", extension=\".json\"), pickle)\n    filestore.put(\"/user/jdoe\", { \"id\": \"jdoe\", \"name\": \"John Doe\",\n            \"email\": \"j@doe.org\", \"password\": \"supersekrit\" })\n    account = filestore.get(\"/user/jdoe\")\n    assert account[\"email\"] == \"j@doe.org\"\n\nThe ``./data/user/jdoe.json`` will contain the account data in JSON format.\nThe following adds an in-memory cache to the above store, which holds up to\n100 elements, to speed up access to data:\n\n.. code-block:: python\n\n    from indicium.cache import LRUCache\n\n    cachedstore = LRUCache(filestore, size=100)\n    account = cachedstore.get(\"/user/jdoe\")\n    assert account[\"email\"] == \"j@doe.org\"\n\nOnce you have a collection of objects, you can run use queries to retrieve all\nthe elements whose keys match a certain pattern. For example, this obtains the\nuser accounts with an identifier starting with the letter ``j`` from the store\nabove:\n\n.. code-block:: python\n\n    for key, account cachedstore.query(\"/user/j*\"):\n        print(account[\"id\"], account[\"name\"])\n\n\nInstallation\n============\n\nAll stable releases are uploaded to `PyPI <https://pypi.python.org>`_, so you\ncan install them and upgrade using ``pip``::\n\n    pip install indicium\n\nAlternatively, you can install the latest development code \u2014at your own risk\u2014\ndirectly from the Git repository::\n\n    pip install git://github.com/aperezdc/indicium\n\n\nDevelopment\n===========\n\nIf you want to contribute, please use the usual GitHub workflow:\n\n1. Clone the repository.\n2. Hack on your clone.\n3. Send a pull request for review.\n\nIf you do not have programming skills, you can still contribute by `reporting\nissues <https://github.com/aperezdc/indicium/issues>`__ that you may\nencounter. Contributions to the documentation are very welcome, too!\n\n\nInspiration\n===========\n\n* `Park <https://github.com/litl/park/>`_\n* `datastore <https://github.com/datastore/datastore>`_ (unfortunately, it\n  does not support Python 3.x).\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aperezdc/indicium", "keywords": null, "license": "GPLv3,Apache-2.0", "maintainer": null, "maintainer_email": null, "name": "indicium", "package_url": "https://pypi.org/project/indicium/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/indicium/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/aperezdc/indicium"}, "release_url": "https://pypi.org/project/indicium/0.1.0a3/", "requires_dist": null, "requires_python": null, "summary": "Generic interface to key-value stores", "version": "0.1.0a3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://indicium.readthedocs.org/en/latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fab3ca757bc7217ca61948e3c20494cc7c02e252/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696e64696369756d2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/aperezdc/indicium\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0671eb93699d5a8804a4b5c55b838baea3a1cf1/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f61706572657a64632f696e64696369756d2e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://coveralls.io/r/aperezdc/indicium?branch=master\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99151139c679f9d407ffd583b2ad7b06babc5b9a/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f61706572657a64632f696e64696369756d2f6d61737465722e7376673f7374796c653d666c6174\"></a>\n<p>Pythonic, unified API to multiple key-value stores.</p>\n<p>This base package includes:</p>\n<ul>\n<li>Abstract definition of the <tt>Store</tt> API, which all storage systems follow.</li>\n<li>In-memory <a href=\"http://indicium.readthedocs.org/en/latest/apiref.html#indicium.cache.LRUCache\" rel=\"nofollow\">caching of data of values</a> from a store using LRU eviction.</li>\n<li>In-memory <a href=\"http://indicium.readthedocs.org/en/latest/apiref.html#indicium.base.DictStore\" rel=\"nofollow\">transient storage</a> backed by Python dictionaries.</li>\n<li>Simple <a href=\"http://indicium.readthedocs.org/en/latest/apiref.html#indicium.fs.FSStore\" rel=\"nofollow\">filesystem-based storage</a> using directories and plain files.</li>\n<li>Adaptors for <a href=\"http://indicium.readthedocs.org/en/latest/apiref.html#indicium.base.Serializer\" rel=\"nofollow\">transparent (de)serialization</a> of stored values.</li>\n</ul>\n<p>Support for additional storage system is by packages distributed separately:</p>\n<ul>\n<li><a href=\"https://github.com/aperezdc/indicium-git\" rel=\"nofollow\">indicium-git</a>.</li>\n<li><a href=\"https://github.com/aperezdc/indicium-ldap\" rel=\"nofollow\">indicium-ldap</a>.</li>\n<li><tt><span class=\"pre\">indicium-leveldb</span></tt> (planned, not yet available).</li>\n<li><tt><span class=\"pre\">indicium-memcache</span></tt> (planned, not yet available).</li>\n</ul>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a <tt>Store</tt> which saves content on-disk, using JSON for serialization,\nand store somwthing that resembles an user account:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indicium.base</span> <span class=\"kn\">import</span> <span class=\"n\">Serializer</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"n\">filestore</span> <span class=\"o\">=</span> <span class=\"n\">Serializer</span><span class=\"p\">(</span><span class=\"n\">FSStore</span><span class=\"p\">(</span><span class=\"s2\">\"./data\"</span><span class=\"p\">,</span> <span class=\"n\">extension</span><span class=\"o\">=</span><span class=\"s2\">\".json\"</span><span class=\"p\">),</span> <span class=\"n\">pickle</span><span class=\"p\">)</span>\n<span class=\"n\">filestore</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"/user/jdoe\"</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"jdoe\"</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"John Doe\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"j@doe.org\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"supersekrit\"</span> <span class=\"p\">})</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">filestore</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/user/jdoe\"</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">account</span><span class=\"p\">[</span><span class=\"s2\">\"email\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"j@doe.org\"</span>\n</pre>\n<p>The <tt>./data/user/jdoe.json</tt> will contain the account data in JSON format.\nThe following adds an in-memory cache to the above store, which holds up to\n100 elements, to speed up access to data:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indicium.cache</span> <span class=\"kn\">import</span> <span class=\"n\">LRUCache</span>\n\n<span class=\"n\">cachedstore</span> <span class=\"o\">=</span> <span class=\"n\">LRUCache</span><span class=\"p\">(</span><span class=\"n\">filestore</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">cachedstore</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/user/jdoe\"</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">account</span><span class=\"p\">[</span><span class=\"s2\">\"email\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"j@doe.org\"</span>\n</pre>\n<p>Once you have a collection of objects, you can run use queries to retrieve all\nthe elements whose keys match a certain pattern. For example, this obtains the\nuser accounts with an identifier starting with the letter <tt>j</tt> from the store\nabove:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">account</span> <span class=\"n\">cachedstore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"/user/j*\"</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">],</span> <span class=\"n\">account</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>All stable releases are uploaded to <a href=\"https://pypi.python.org\" rel=\"nofollow\">PyPI</a>, so you\ncan install them and upgrade using <tt>pip</tt>:</p>\n<pre>pip install indicium\n</pre>\n<p>Alternatively, you can install the latest development code \u2014at your own risk\u2014\ndirectly from the Git repository:</p>\n<pre>pip install git://github.com/aperezdc/indicium\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>If you want to contribute, please use the usual GitHub workflow:</p>\n<ol>\n<li>Clone the repository.</li>\n<li>Hack on your clone.</li>\n<li>Send a pull request for review.</li>\n</ol>\n<p>If you do not have programming skills, you can still contribute by <a href=\"https://github.com/aperezdc/indicium/issues\" rel=\"nofollow\">reporting\nissues</a> that you may\nencounter. Contributions to the documentation are very welcome, too!</p>\n</div>\n<div id=\"inspiration\">\n<h2>Inspiration</h2>\n<ul>\n<li><a href=\"https://github.com/litl/park/\" rel=\"nofollow\">Park</a></li>\n<li><a href=\"https://github.com/datastore/datastore\" rel=\"nofollow\">datastore</a> (unfortunately, it\ndoes not support Python 3.x).</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2033845, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "dd96c03cb6acdf3cfacfc9f63366400d", "sha256": "f0fde00b2b7371b8117dc09cc3e7271d85e74365f0736a22b46f5e833f830563"}, "downloads": -1, "filename": "indicium-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "dd96c03cb6acdf3cfacfc9f63366400d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10085, "upload_time": "2016-03-18T15:05:54", "upload_time_iso_8601": "2016-03-18T15:05:54.029518Z", "url": "https://files.pythonhosted.org/packages/c4/1a/3f616e0057adf567eb89fefb69f51f7ff632ac4a5d07f35cebef9052204d/indicium-0.1.0a0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "ae4df941e92982dbc1f9272b90f31eb3", "sha256": "9e0fc06aff26380593ba51b2c567394e85fc6441a6499093eda5d828fa0d0de5"}, "downloads": -1, "filename": "indicium-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "ae4df941e92982dbc1f9272b90f31eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11211, "upload_time": "2016-03-18T21:34:53", "upload_time_iso_8601": "2016-03-18T21:34:53.492344Z", "url": "https://files.pythonhosted.org/packages/67/37/27117eee19a1fbd2caa50aab7afa6e6fc39dd7029e76e8f21fd52474d7d1/indicium-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "846ea747219bcb692faca237cc6f3d76", "sha256": "b0e9320a7d982e5a3d2f9e68448596d0cb6b7f1763140d50e273a27d9bc6c0e9"}, "downloads": -1, "filename": "indicium-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "846ea747219bcb692faca237cc6f3d76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11256, "upload_time": "2016-03-18T22:07:47", "upload_time_iso_8601": "2016-03-18T22:07:47.464170Z", "url": "https://files.pythonhosted.org/packages/8d/b8/9abb852786ffa4d7600d1e620fc269b15a3e16bb4187fc75ff2a0cec2452/indicium-0.1.0a2.tar.gz", "yanked": false}], "0.1.0a3": [{"comment_text": "", "digests": {"md5": "11177273b8fd19abef5a12d3f8a0ef4d", "sha256": "294e491e93e853dd4bc1358042be5f863c20b2c1d2c8ed7690095f22256200d0"}, "downloads": -1, "filename": "indicium-0.1.0a3.tar.gz", "has_sig": false, "md5_digest": "11177273b8fd19abef5a12d3f8a0ef4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11274, "upload_time": "2016-03-29T13:28:41", "upload_time_iso_8601": "2016-03-29T13:28:41.359680Z", "url": "https://files.pythonhosted.org/packages/fd/ff/cb7ed6c19be11d39644af4f9ae2235c3ccef1187ef0d4d80760404fd8be1/indicium-0.1.0a3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11177273b8fd19abef5a12d3f8a0ef4d", "sha256": "294e491e93e853dd4bc1358042be5f863c20b2c1d2c8ed7690095f22256200d0"}, "downloads": -1, "filename": "indicium-0.1.0a3.tar.gz", "has_sig": false, "md5_digest": "11177273b8fd19abef5a12d3f8a0ef4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11274, "upload_time": "2016-03-29T13:28:41", "upload_time_iso_8601": "2016-03-29T13:28:41.359680Z", "url": "https://files.pythonhosted.org/packages/fd/ff/cb7ed6c19be11d39644af4f9ae2235c3ccef1187ef0d4d80760404fd8be1/indicium-0.1.0a3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:19 2020"}