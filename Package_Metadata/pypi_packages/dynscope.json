{"info": {"author": "Georg Bauer", "author_email": "gb@rfc1437.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "-*- restructuredtext -*-\n\nDynamic Scope for Python\n================================\n\nThis package implements simple dynamic scope syntactic sugar\nfor Python. It allows to (IMO elegantly) use dynamically scoped\nvariables where you need them with a scheme-like semantic.\n\nInstall is quite standard:\n\neasy_install dynscope\n\nor just download the sources and run setup.py install. There are testcases\nyou can run with setup.py test, too.\n\nI test and work with it under Python 2.6.\n\nHow to use dynamically scoped variables\n----------------------------------------\n\n>>> from dynscope import flet, fluid\n>>> with flet(anton=5, berta=6):\n>>>     print fluid.anton*fluid.berta\n>>> print fluid.anton*fluid.berta\n\nThe first print will print 30, the second one will raise an exception,\nsince those variables are not defined.\n\nThere is a base-layer of fluid definitions (think of them as normal globals,\nonly that they are per-thread or per-coroutine if using for example gevent\nwith full patching) that you can use, too. But it's often much better style\nto restrict fluids to the dynamic scope that actually expects them. Unrestricted\nglobals are far more often the wrong choice than the right choice. But where\nyou can make use of them is to set defaults for dynamically scoped variables\nso that functions can run outside flet scopes.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/rfc1437/dynscope/", "keywords": null, "license": "MIT/X", "maintainer": null, "maintainer_email": null, "name": "dynscope", "package_url": "https://pypi.org/project/dynscope/", "platform": "BSD,Linux,MacOS X,win32", "project_url": "https://pypi.org/project/dynscope/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/rfc1437/dynscope/"}, "release_url": "https://pypi.org/project/dynscope/0.1/", "requires_dist": null, "requires_python": null, "summary": "Dynamic Scope for Python", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>-<em>- restructuredtext -</em>-</p>\n<div id=\"dynamic-scope-for-python\">\n<h2>Dynamic Scope for Python</h2>\n<p>This package implements simple dynamic scope syntactic sugar\nfor Python. It allows to (IMO elegantly) use dynamically scoped\nvariables where you need them with a scheme-like semantic.</p>\n<p>Install is quite standard:</p>\n<p>easy_install dynscope</p>\n<p>or just download the sources and run setup.py install. There are testcases\nyou can run with setup.py test, too.</p>\n<p>I test and work with it under Python 2.6.</p>\n<div id=\"how-to-use-dynamically-scoped-variables\">\n<h3>How to use dynamically scoped variables</h3>\n<pre>&gt;&gt;&gt; from dynscope import flet, fluid\n&gt;&gt;&gt; with flet(anton=5, berta=6):\n&gt;&gt;&gt;     print fluid.anton*fluid.berta\n&gt;&gt;&gt; print fluid.anton*fluid.berta\n</pre>\n<p>The first print will print 30, the second one will raise an exception,\nsince those variables are not defined.</p>\n<p>There is a base-layer of fluid definitions (think of them as normal globals,\nonly that they are per-thread or per-coroutine if using for example gevent\nwith full patching) that you can use, too. But it\u2019s often much better style\nto restrict fluids to the dynamic scope that actually expects them. Unrestricted\nglobals are far more often the wrong choice than the right choice. But where\nyou can make use of them is to set defaults for dynamically scoped variables\nso that functions can run outside flet scopes.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 791477, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2201eaa3a4556f0fb4f86528c2521f7e", "sha256": "86df643e3de5c20c7a1353adabbc525b3c792ab54682d9e66d87e88f18a71943"}, "downloads": -1, "filename": "dynscope-0.1-py2.6.egg", "has_sig": false, "md5_digest": "2201eaa3a4556f0fb4f86528c2521f7e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 9090, "upload_time": "2010-12-16T18:22:44", "upload_time_iso_8601": "2010-12-16T18:22:44.912725Z", "url": "https://files.pythonhosted.org/packages/31/b9/fe800af075376dbcb16f2b19e18a81e2a9d30f4ffe3082ea45072afd6f54/dynscope-0.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "798695ac85a20c60314264b1357ec797", "sha256": "5878c103b1512df0e9f62f45429b10ce495975d1cdd66227677ee7d0abeefbf5"}, "downloads": -1, "filename": "dynscope-0.1.tar.gz", "has_sig": false, "md5_digest": "798695ac85a20c60314264b1357ec797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3981, "upload_time": "2010-12-16T18:22:44", "upload_time_iso_8601": "2010-12-16T18:22:44.232622Z", "url": "https://files.pythonhosted.org/packages/d9/41/3115657757e019a749e9046794d841c2c5f58553947d1ed1f30d709dd42c/dynscope-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2201eaa3a4556f0fb4f86528c2521f7e", "sha256": "86df643e3de5c20c7a1353adabbc525b3c792ab54682d9e66d87e88f18a71943"}, "downloads": -1, "filename": "dynscope-0.1-py2.6.egg", "has_sig": false, "md5_digest": "2201eaa3a4556f0fb4f86528c2521f7e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 9090, "upload_time": "2010-12-16T18:22:44", "upload_time_iso_8601": "2010-12-16T18:22:44.912725Z", "url": "https://files.pythonhosted.org/packages/31/b9/fe800af075376dbcb16f2b19e18a81e2a9d30f4ffe3082ea45072afd6f54/dynscope-0.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "798695ac85a20c60314264b1357ec797", "sha256": "5878c103b1512df0e9f62f45429b10ce495975d1cdd66227677ee7d0abeefbf5"}, "downloads": -1, "filename": "dynscope-0.1.tar.gz", "has_sig": false, "md5_digest": "798695ac85a20c60314264b1357ec797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3981, "upload_time": "2010-12-16T18:22:44", "upload_time_iso_8601": "2010-12-16T18:22:44.232622Z", "url": "https://files.pythonhosted.org/packages/d9/41/3115657757e019a749e9046794d841c2c5f58553947d1ed1f30d709dd42c/dynscope-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:37 2020"}