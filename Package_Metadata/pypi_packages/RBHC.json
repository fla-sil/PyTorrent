{"info": {"author": "Ashwith Atluri", "author_email": "ashwithatluri@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# RBHC\n<p align=\"center\">\n<img src=\"https://github.com/intuit/RBHC/blob/master/Images/RBHC.png\" width=\"400\" height=\"400\">\n</p>\n\n[![CircleCI](https://circleci.com/gh/intuit/RBHC/tree/master.svg?style=svg&circle-token=8dc91b504991b931f05d3b116040a4dfee4d0586)](https://circleci.com/gh/intuit/RBHC/tree/master)\n[![codecov](https://codecov.tools.a.intuit.com/ghe/aatluri/RBHC/branch/master/graph/badge.svg)](https://codecov.tools.a.intuit.com/ghe/aatluri/RBHC)\n[![PyPI version](https://badge.fury.io/py/RBHC.svg)](https://badge.fury.io/py/RBHC)\n## Recursive Binary Hierarchical Clustering\nThis code is for accomplishing recursive binary hierarchical clustering of data <br>\nK-Means algorithm is applied on the initial dataset and a binary partition is created after which using chi square score statistic, the feature (event) that was responsible for the partition is found out. The remaining clusters are further divided recursively using the above approach until the cluster size reaches 1 or the silhouette score reaches the threshold value <br>\n- [Installation](#installation)\n- [Usage](#usage)\n- [Statistics](#statistics)\n- [Visualisation](#visualisation)\n- [Data File Structure](#data-file-structure)\n- [Contribution and license](#contribution-and-license)\n### Installation\nPrerequisites: python3 <br>\n```\npip install RBHC\n```\n\n### Usage\n```\nfrom RBHC import clustering\nclustering(dataFilePath,thresholdValue)\n```\n\n  - dataFilePath = Path to data file  [Check data file structure](#data-file-structure)\n  - thresholdValue = Silhouette value threshold (optional parameter and default in program is 0.65)\n\nReturn value from this function is a json with a tree structure that is generated with following important fields\n  - name = Name of cluster node (string)\n  - parent = Name of it's parent node (string)\n  - size = Size of cluster (integer)\n  - children = Tree structure of subtree (List)\n  - clusterCreated = If clustering has been successful (Boolean)\n\nTo see a sample of this return value run clustering over sample dataset provided and print output or check visualisation/sampleData.json <br>\n\nIf you want to run this program in an interactive manner in a jupyter notebook run this command in root directory *jupyter notebook* and then it opens up in localhost\n\n### Statistics\nOnce program runs then clustering statistics are stored in statistics/hierarchical/nameOfDataFile/ and for each sub cluster created stats are stored in a .json file and attributes are following\n\n- ClusterId = Identifier of a sub cluster L=Level G=Number of cluster in that level counted left to right\n- Size = Size of cluster\n- Primary feature cluster created by = Name of feature which is responsible primarily for this cluster formation\n- Features chi score = Shows chi score of all features in that cluster\n- Stats on cluster by each feature = Stats of each feature in this cluster\n- Ids = All instances that are part of cluster and names are derived from column[0] of data file\n\n### Visualisation\nCopy visualisation folder to directory where clustering is being used<br>\nIn visualisation folder nameOfDataFile.json will be created for clustering visualisation <br>\nRun this in visualisation folder *python -m http.server 8888* and then in web browser open http://localhost:8888/\n![](Clustering.gif)\n\n### Data File Structure\n\n```\nIDS         | feature1    |                     | featureN\n------------|-------------|---------------------|-----------------\nID1         |  value1     |                     |  valueN\n            |             |                     |  \n            |             |                     |\n            |             |                     |  \n```\n\nAll data files should be stored in data folder and check data folder for a sample .csv data file\n\n### Contribution and license\n- [Contributing guidelines](.github/CONTRIBUTING.md)\n- [License](LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/intuit/RBHC", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "RBHC", "package_url": "https://pypi.org/project/RBHC/", "platform": "", "project_url": "https://pypi.org/project/RBHC/", "project_urls": {"Homepage": "https://github.com/intuit/RBHC"}, "release_url": "https://pypi.org/project/RBHC/1.0.1/", "requires_dist": ["pandas", "scikit-learn", "numpy", "matplotlib", "jupyter"], "requires_python": "", "summary": "RBHC", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RBHC</h1>\n<p align=\"center\">\n<img height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac23af775393b61a67f4204850325ba7b976515b/68747470733a2f2f6769746875622e636f6d2f696e747569742f524248432f626c6f622f6d61737465722f496d616765732f524248432e706e67\" width=\"400\">\n</p>\n<p><a href=\"https://circleci.com/gh/intuit/RBHC/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43672d7bf8489a512b3f98e6087277b7bee3cb5d/68747470733a2f2f636972636c6563692e636f6d2f67682f696e747569742f524248432f747265652f6d61737465722e7376673f7374796c653d73766726636972636c652d746f6b656e3d38646339316235303439393162393331663035643362313136303430613464666565346430353836\"></a>\n<a href=\"https://codecov.tools.a.intuit.com/ghe/aatluri/RBHC\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5374de11bb34ad133373fb83702279b83977aecf/68747470733a2f2f636f6465636f762e746f6f6c732e612e696e747569742e636f6d2f6768652f6161746c7572692f524248432f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/RBHC\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cdcca2b7a435dcf6e7eeea3f68245c94b425114/68747470733a2f2f62616467652e667572792e696f2f70792f524248432e737667\"></a></p>\n<h2>Recursive Binary Hierarchical Clustering</h2>\n<p>This code is for accomplishing recursive binary hierarchical clustering of data <br>\nK-Means algorithm is applied on the initial dataset and a binary partition is created after which using chi square score statistic, the feature (event) that was responsible for the partition is found out. The remaining clusters are further divided recursively using the above approach until the cluster size reaches 1 or the silhouette score reaches the threshold value <br></p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#statistics\" rel=\"nofollow\">Statistics</a></li>\n<li><a href=\"#visualisation\" rel=\"nofollow\">Visualisation</a></li>\n<li><a href=\"#data-file-structure\" rel=\"nofollow\">Data File Structure</a></li>\n<li><a href=\"#contribution-and-license\" rel=\"nofollow\">Contribution and license</a></li>\n</ul>\n<h3>Installation</h3>\n<p>Prerequisites: python3 <br></p>\n<pre><code>pip install RBHC\n</code></pre>\n<h3>Usage</h3>\n<pre><code>from RBHC import clustering\nclustering(dataFilePath,thresholdValue)\n</code></pre>\n<ul>\n<li>dataFilePath = Path to data file  <a href=\"#data-file-structure\" rel=\"nofollow\">Check data file structure</a></li>\n<li>thresholdValue = Silhouette value threshold (optional parameter and default in program is 0.65)</li>\n</ul>\n<p>Return value from this function is a json with a tree structure that is generated with following important fields</p>\n<ul>\n<li>name = Name of cluster node (string)</li>\n<li>parent = Name of it's parent node (string)</li>\n<li>size = Size of cluster (integer)</li>\n<li>children = Tree structure of subtree (List)</li>\n<li>clusterCreated = If clustering has been successful (Boolean)</li>\n</ul>\n<p>To see a sample of this return value run clustering over sample dataset provided and print output or check visualisation/sampleData.json <br></p>\n<p>If you want to run this program in an interactive manner in a jupyter notebook run this command in root directory <em>jupyter notebook</em> and then it opens up in localhost</p>\n<h3>Statistics</h3>\n<p>Once program runs then clustering statistics are stored in statistics/hierarchical/nameOfDataFile/ and for each sub cluster created stats are stored in a .json file and attributes are following</p>\n<ul>\n<li>ClusterId = Identifier of a sub cluster L=Level G=Number of cluster in that level counted left to right</li>\n<li>Size = Size of cluster</li>\n<li>Primary feature cluster created by = Name of feature which is responsible primarily for this cluster formation</li>\n<li>Features chi score = Shows chi score of all features in that cluster</li>\n<li>Stats on cluster by each feature = Stats of each feature in this cluster</li>\n<li>Ids = All instances that are part of cluster and names are derived from column[0] of data file</li>\n</ul>\n<h3>Visualisation</h3>\n<p>Copy visualisation folder to directory where clustering is being used<br>\nIn visualisation folder nameOfDataFile.json will be created for clustering visualisation <br>\nRun this in visualisation folder <em>python -m http.server 8888</em> and then in web browser open <a href=\"http://localhost:8888/\" rel=\"nofollow\">http://localhost:8888/</a>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b8b017366ddd6edac92b17f7f77ac9e78727a4c/436c7573746572696e672e676966\"></p>\n<h3>Data File Structure</h3>\n<pre><code>IDS         | feature1    |                     | featureN\n------------|-------------|---------------------|-----------------\nID1         |  value1     |                     |  valueN\n            |             |                     |  \n            |             |                     |\n            |             |                     |  \n</code></pre>\n<p>All data files should be stored in data folder and check data folder for a sample .csv data file</p>\n<h3>Contribution and license</h3>\n<ul>\n<li><a href=\".github/CONTRIBUTING.md\" rel=\"nofollow\">Contributing guidelines</a></li>\n<li><a href=\"LICENSE\" rel=\"nofollow\">License</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7048613, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "1a1d7a9b8037d17b41e030ce5717545f", "sha256": "20516de7a1a47fd8ddaed0beb7f9cb3bf1e5371835093b4441861abdae4c645f"}, "downloads": -1, "filename": "RBHC-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a1d7a9b8037d17b41e030ce5717545f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6556, "upload_time": "2020-04-18T15:25:57", "upload_time_iso_8601": "2020-04-18T15:25:57.388631Z", "url": "https://files.pythonhosted.org/packages/63/3e/8aba4472c98ee77fceed8e417e38d876bbc20d3a0bb599ee851b8fd49d04/RBHC-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "422fa485e427441aed8b0fcf5ac8d0ec", "sha256": "38c85f11d53c5a3f13789b93d039c703a7c259c3285c5d6e4d9be63b0b722d7e"}, "downloads": -1, "filename": "RBHC-1.0.1.tar.gz", "has_sig": false, "md5_digest": "422fa485e427441aed8b0fcf5ac8d0ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5500, "upload_time": "2020-04-18T15:25:59", "upload_time_iso_8601": "2020-04-18T15:25:59.612036Z", "url": "https://files.pythonhosted.org/packages/b3/5a/e88406b04026ada1cfb0df42da89c52581f9cd137243da9fcdc380f40db9/RBHC-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a1d7a9b8037d17b41e030ce5717545f", "sha256": "20516de7a1a47fd8ddaed0beb7f9cb3bf1e5371835093b4441861abdae4c645f"}, "downloads": -1, "filename": "RBHC-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a1d7a9b8037d17b41e030ce5717545f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6556, "upload_time": "2020-04-18T15:25:57", "upload_time_iso_8601": "2020-04-18T15:25:57.388631Z", "url": "https://files.pythonhosted.org/packages/63/3e/8aba4472c98ee77fceed8e417e38d876bbc20d3a0bb599ee851b8fd49d04/RBHC-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "422fa485e427441aed8b0fcf5ac8d0ec", "sha256": "38c85f11d53c5a3f13789b93d039c703a7c259c3285c5d6e4d9be63b0b722d7e"}, "downloads": -1, "filename": "RBHC-1.0.1.tar.gz", "has_sig": false, "md5_digest": "422fa485e427441aed8b0fcf5ac8d0ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5500, "upload_time": "2020-04-18T15:25:59", "upload_time_iso_8601": "2020-04-18T15:25:59.612036Z", "url": "https://files.pythonhosted.org/packages/b3/5a/e88406b04026ada1cfb0df42da89c52581f9cd137243da9fcdc380f40db9/RBHC-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:51 2020"}