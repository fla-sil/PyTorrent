{"info": {"author": "Antonino Ingargiola", "author_email": "tritemio@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===========\nPycorrelate\n===========\n\n\n.. image:: https://img.shields.io/pypi/v/pycorrelate.svg\n        :target: https://pypi.python.org/pypi/pycorrelate\n\n.. image:: https://img.shields.io/travis/tritemio/pycorrelate.svg\n        :target: https://travis-ci.org/tritemio/pycorrelate\n\n.. image:: https://ci.appveyor.com/api/projects/status/dcanybpqi2o1ecwi/branch/master?svg=true\n        :target: https://ci.appveyor.com/project/tritemio/pycorrelate/branch/master\n\n.. image:: https://readthedocs.org/projects/pycorrelate/badge/?version=latest\n        :target: https://pycorrelate.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n**Pycorrelate** computes fast and accurate cross-correlation over\narbitrary time lags.\nCross-correlations can be calculated on \"uniformly-sampled\" signals\nor on \"point-processes\", such as photon timestamps.\nPycorrelate allows computing cross-correlation at log-spaced lags covering\nseveral orders of magnitude. This type of cross-correlation is\ncommonly used in physics or biophysics for techniques such as\n*fluorescence correlation spectroscopy* (`FCS <https://en.wikipedia.org/wiki/Fluorescence_correlation_spectroscopy>`__) or\n*dynamic light scattering* (`DLS <https://en.wikipedia.org/wiki/Dynamic_light_scattering>`__).\n\nTwo types of correlations are implemented:\n\n- `ucorrelate <https://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.ucorrelate>`__:\n  the classical text-book linear cross-correlation between two signals\n  defined at **uniformly spaced** intervals.\n  Only positive lags are computed and a max lag can be specified.\n  Thanks to the limit in the computed lags, this function can be much faster than\n  `numpy.correlate <https://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html#numpy.correlate>`__.\n\n- `pcorrelate <https://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.pcorrelate>`__:\n  cross-correlation of discrete events\n  in a point-process. In this case input arrays can be timestamps or\n  positions of \"events\", for example **photon arrival times**.\n  This function implements the algorithm in\n  `Laurence et al. Optics Letters (2006) <https://doi.org/10.1364/OL.31.000829>`__.\n  This is a generalization of the multi-tau algorithm which retains\n  high execution speed while allowing arbitrary time-lag bins.\n\nPycorrelate is implemented in Python 3 and operates on standard numpy arrays.\nExecution speed is optimized using `numba <https://numba.pydata.org/>`__.\n\n* Free software: GNU General Public License v3\n* Documentation: https://pycorrelate.readthedocs.io.\n\n\n=======\nHistory\n=======\n\n0.2.1 (2017-11-15)\n------------------\n\n- Added normalization for FCS curves (see `pnormalize <http://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.pnormalize>`__).\n- Added example notebook showing how to fit a simple FCS curve\n- Renamed `ucorrelate <http://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.ucorrelate>`__ argument from `maxlags` to `maxlag`.\n- Added `theory page <http://pycorrelate.readthedocs.io/en/latest/theory.html>`__ in the documentation, showing the exact formula used for CCF calculations.\n\n0.1.0 (2017-07-23)\n------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tritemio/pycorrelate", "keywords": "pycorrelate", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "pycorrelate", "package_url": "https://pypi.org/project/pycorrelate/", "platform": "", "project_url": "https://pypi.org/project/pycorrelate/", "project_urls": {"Homepage": "https://github.com/tritemio/pycorrelate"}, "release_url": "https://pypi.org/project/pycorrelate/0.3/", "requires_dist": null, "requires_python": "", "summary": "Fast and accurate timestamps correlation in python.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pycorrelate\">\n<h2>Pycorrelate</h2>\n<a href=\"https://pypi.python.org/pypi/pycorrelate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pycorrelate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7325a649a4b41316796cc193a0a8df7776fdc730/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079636f7272656c6174652e737667\"></a>\n<a href=\"https://travis-ci.org/tritemio/pycorrelate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/tritemio/pycorrelate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11b62dbfe998599c8fc42d61c1350fcf4b7c461d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f74726974656d696f2f7079636f7272656c6174652e737667\"></a>\n<a href=\"https://ci.appveyor.com/project/tritemio/pycorrelate/branch/master\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/dcanybpqi2o1ecwi/branch/master?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7c2bb78590fac66e8d7152468efa6df2c72c443/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6463616e7962707169326f31656377692f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://pycorrelate.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17cd44fe5dacbc95feec6bcf384a5aaf5b541933/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079636f7272656c6174652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p><strong>Pycorrelate</strong> computes fast and accurate cross-correlation over\narbitrary time lags.\nCross-correlations can be calculated on \u201cuniformly-sampled\u201d signals\nor on \u201cpoint-processes\u201d, such as photon timestamps.\nPycorrelate allows computing cross-correlation at log-spaced lags covering\nseveral orders of magnitude. This type of cross-correlation is\ncommonly used in physics or biophysics for techniques such as\n<em>fluorescence correlation spectroscopy</em> (<a href=\"https://en.wikipedia.org/wiki/Fluorescence_correlation_spectroscopy\" rel=\"nofollow\">FCS</a>) or\n<em>dynamic light scattering</em> (<a href=\"https://en.wikipedia.org/wiki/Dynamic_light_scattering\" rel=\"nofollow\">DLS</a>).</p>\n<p>Two types of correlations are implemented:</p>\n<ul>\n<li><a href=\"https://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.ucorrelate\" rel=\"nofollow\">ucorrelate</a>:\nthe classical text-book linear cross-correlation between two signals\ndefined at <strong>uniformly spaced</strong> intervals.\nOnly positive lags are computed and a max lag can be specified.\nThanks to the limit in the computed lags, this function can be much faster than\n<a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html#numpy.correlate\" rel=\"nofollow\">numpy.correlate</a>.</li>\n<li><a href=\"https://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.pcorrelate\" rel=\"nofollow\">pcorrelate</a>:\ncross-correlation of discrete events\nin a point-process. In this case input arrays can be timestamps or\npositions of \u201cevents\u201d, for example <strong>photon arrival times</strong>.\nThis function implements the algorithm in\n<a href=\"https://doi.org/10.1364/OL.31.000829\" rel=\"nofollow\">Laurence et al. Optics Letters (2006)</a>.\nThis is a generalization of the multi-tau algorithm which retains\nhigh execution speed while allowing arbitrary time-lag bins.</li>\n</ul>\n<p>Pycorrelate is implemented in Python 3 and operates on standard numpy arrays.\nExecution speed is optimized using <a href=\"https://numba.pydata.org/\" rel=\"nofollow\">numba</a>.</p>\n<ul>\n<li>Free software: GNU General Public License v3</li>\n<li>Documentation: <a href=\"https://pycorrelate.readthedocs.io\" rel=\"nofollow\">https://pycorrelate.readthedocs.io</a>.</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2017-11-15)</h3>\n<ul>\n<li>Added normalization for FCS curves (see <a href=\"http://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.pnormalize\" rel=\"nofollow\">pnormalize</a>).</li>\n<li>Added example notebook showing how to fit a simple FCS curve</li>\n<li>Renamed <a href=\"http://pycorrelate.readthedocs.io/en/latest/api.html#pycorrelate.pycorrelate.ucorrelate\" rel=\"nofollow\">ucorrelate</a> argument from <cite>maxlags</cite> to <cite>maxlag</cite>.</li>\n<li>Added <a href=\"http://pycorrelate.readthedocs.io/en/latest/theory.html\" rel=\"nofollow\">theory page</a> in the documentation, showing the exact formula used for CCF calculations.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2017-07-23)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3337072, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1954e53c0093484ea12c2b289871ae7d", "sha256": "0ca47f02d9e4331fa9d7c95d2af1a9a8d0106b0d145483f68c6f7dd8d4e109e9"}, "downloads": -1, "filename": "pycorrelate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1954e53c0093484ea12c2b289871ae7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 965260, "upload_time": "2017-08-01T19:58:35", "upload_time_iso_8601": "2017-08-01T19:58:35.587810Z", "url": "https://files.pythonhosted.org/packages/c7/be/4a396834cae52063f337eb7e00e20e0a856cea781c6fd29fc025faf1692f/pycorrelate-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6c62e08bc20b919e0045ac65c76bf1d2", "sha256": "1a34e368a2b5ed2359f3c02adcb38d82437e7b1aa96f50356dbff6937e2559d8"}, "downloads": -1, "filename": "pycorrelate-0.2.1.tar.gz", "has_sig": false, "md5_digest": "6c62e08bc20b919e0045ac65c76bf1d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2018394, "upload_time": "2017-11-15T08:58:18", "upload_time_iso_8601": "2017-11-15T08:58:18.284716Z", "url": "https://files.pythonhosted.org/packages/d2/d2/806d4e7597a9a568c9f5fa33e4f6156c05db1e0ec5faf29d9daa2304003e/pycorrelate-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ce89f421ba6aacc5d3410635fe17a090", "sha256": "bbd358b0c924c900b8b345eaa9b9ef659b18e6f639c017898362f77dc6a0cce3"}, "downloads": -1, "filename": "pycorrelate-0.3.tar.gz", "has_sig": false, "md5_digest": "ce89f421ba6aacc5d3410635fe17a090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 206015, "upload_time": "2017-11-16T01:43:03", "upload_time_iso_8601": "2017-11-16T01:43:03.806807Z", "url": "https://files.pythonhosted.org/packages/bf/b1/58b7f6001ef5ff8ca23c08f07b72b37c369ddae9f917dce2471e60582822/pycorrelate-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce89f421ba6aacc5d3410635fe17a090", "sha256": "bbd358b0c924c900b8b345eaa9b9ef659b18e6f639c017898362f77dc6a0cce3"}, "downloads": -1, "filename": "pycorrelate-0.3.tar.gz", "has_sig": false, "md5_digest": "ce89f421ba6aacc5d3410635fe17a090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 206015, "upload_time": "2017-11-16T01:43:03", "upload_time_iso_8601": "2017-11-16T01:43:03.806807Z", "url": "https://files.pythonhosted.org/packages/bf/b1/58b7f6001ef5ff8ca23c08f07b72b37c369ddae9f917dce2471e60582822/pycorrelate-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:54 2020"}