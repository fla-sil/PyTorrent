{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Attendedsysupgrade Server for OpenWrt (GSoC 2017)\n\n[![codecov](https://codecov.io/gh/aparcar/asu/branch/master/graph/badge.svg)](https://codecov.io/gh/aparcar/asu)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![PyPi](https://badge.fury.io/py/asu.svg)](https://badge.fury.io/py/asu)\n\nThis project intends to simplify the sysupgrade process of devices running\nOpenWrt or distributions based on the former like LibreMesh. The provided tools\nhere offer an easy way to reflash the router with a new version or package\nupgrades, without the need of `opkg` installed.\n\nAdditionally it offers an API (covered below) to request custom images with any\nselection of packages pre-installed, allowing to create firmware images without\nthe need of setting up a build environment, even from mobile devices.\n\n## Clients\n\n### Yet another firmware selector\n\nSimple web interface using vanilla JavaScript currently developed by @mwarning.\nIt offers a device search based on model names and show links either to\n[official images](https://downloads.openwrt.org/) or requests images via the\n_asu_ API. Please join in the development at the [GitHub\nrepository](https://github.com/mwarning/yet_another_firmware_selector)\n\n![yafs](misc/yafs.png)\n\n### LuCI app\n\nThe package\n[`luci-app-attendedsysupgrade`](https://github.com/openwrt/luci/tree/master/applications/luci-app-attendedsysupgrade)\noffers a simple view under `System > Attended Sysupgrade` to automatically\nrequest a new firmware, wait until it is build and flash it.\n\n![luci](misc/luci.png)\n\n## Server\n\nThe server listens to image requests and automatically generate them if the\nrequest was valid. This is done by automatically setting up OpenWrt\nImageBuilders and cache images in a Redis database. This allows to quickly\nrespond to requests without rebuilding existing images again.\n\n### Active server\n\n-   [chef.libremesh.org](https://chef.libremesh.org)\n\n## Run your own server\n\nRedis is required to store image requests:\n\n    sudo apt install redis-server tar\n\nInstall _asu_:\n\n    pip install asu\n\nStart the server via the following commands:\n\n    export FLASK_APP=asu  # set Flask app to asu\n    flask janitor init    # download upstream profiles/packages\n    flask run             # run development server\n\nStart the worker via the following comand:\n\n    rq worker\n\n### Production\n\nIt is recommended to run _ASU_ via `gunicorn` proxied by `nginx`. Find a\npossible `nginx` configuration in the `misc/` folder. Also the setup should not\nHTTPS to allow clients without SSL/certificates to check for upgrades.\n\nTo change the default setting place a file called `config.py` in the root of\nthe [instance\nfolder](https://flask.palletsprojects.com/en/1.1.x/config/#instance-folders).\nFind an example in the `misc/` folder.\n\n    pip install gunicorn\n    gunicorn \"asu:create_app()\"\n\n### Development\n\nAfter cloning this repository create a Python virtual environment and install\nthe dependencies:\n\n    python3 -m venv .\n    source bin/activate\n    pip install -r requirements.txt\n    export FLASK_APP=asu  # set Flask app to asu\n    export FLASK_DEBUG=1  # run Flask in debug mode (autoreload)\n    flask run\n\n## API\n\n### Upgrade check `/api/versions`\n\nThe server does no longer offer complex upgrade but only serves static JSON\nfiles including available versions. For now the client must evaluate if the\nresponded JSON contains a newer version.\n\n### Build request `/api/build`\n\n| key        | value                 | information                              |\n| ---------- | --------------------- | ---------------------------------------- |\n| `version`  | `SNAPSHOT`            | installed version                        |\n| `profile`  | `netgear_wndr4300-v2` | `board_name` of `ubus call system board` |\n| `packages` | `[\"luci\", \"vim\"]`     | Extra packages for the new image         |\n\nEach valid request returns a `request_hash` which can be used for future\npolling via `/api/build/<request_hash>`.\n\n### Response `status 200`\n\nA `200` response means the image was sucessfully created. The response is JSON\nencoded containing build information.\n\n| key            | information                                 |\n| -------------- | ------------------------------------------- |\n| `bin_dir`      | relative path to created files              |\n| `buildlog`     | boolean if buildlog.txt was created         |\n| `manifest`     | dict of all installed packages plus version |\n| `request_hash` | hashed request data stored by the server    |\n\n    {\n      \"build_at\": \"Tue, 25 Feb 2020 08:49:48 GMT\",\n      \"enqueued_at\": \"Tue, 25 Feb 2020 08:49:09 GMT\",\n      \"id\": \"avm_fritzbox-4040\",\n      \"image_prefix\": \"openwrt-387e9d003d04-ipq40xx-generic-avm_fritzbox-4040\",\n      \"images\": [\n        {\n          \"name\": \"openwrt-387e9d003d04-ipq40xx-generic-avm_fritzbox-4040-squashfs-eva.bin\",\n          \"sha256\": \"8cb0d58bf672ed442f0813a1f04ec2f5edf6e2b64c8f117cb11158e19251aa0b\",\n          \"type\": \"eva\"\n        },\n        {\n          \"name\": \"openwrt-387e9d003d04-ipq40xx-generic-avm_fritzbox-4040-squashfs-sysupgrade.bin\",\n          \"sha256\": \"0d12ce60dd63422a63ed28f0e2a2ab2d367a407ccc32b665c28c809f3cb073f1\",\n          \"type\": \"sysupgrade\"\n        }\n      ],\n      \"manifest\": {\n        \"ath10k-firmware-qca4019-ct\": \"2019-10-03-d622d160-1\",\n        \"base-files\": \"213-r12297-7e9c7e7b2d\",\n        \"busybox\": \"1.31.1-1\",\n        \"cgi-io\": \"17\",\n        \"dnsmasq\": \"2.80-18\",\n        [...]\n        \"uclient-fetch\": \"2020-01-05-fef6d3d3-1\",\n        \"uhttpd\": \"2020-02-12-2ee323c0-1\",\n        \"urandom-seed\": \"1.0-1\",\n        \"urngd\": \"2020-01-21-c7f7b6b6-1\",\n        \"usign\": \"2019-09-21-f34a383e-1\",\n        \"vim\": \"8.1-6\",\n        \"wireless-regdb\": \"2019.06.03\",\n        \"wpad-basic\": \"2019-08-08-ca8c2bd2-6\",\n        \"zlib\": \"1.2.11-3\"\n      },\n      \"metadata_version\": 1,\n      \"request_hash\": \"5bac6cb8321f\",\n      \"supported_devices\": [\n        \"avm,fritzbox-4040\"\n      ],\n      \"target\": \"ipq40xx/generic\",\n      \"titles\": [\n        {\n          \"model\": \"FRITZ!Box 4040\",\n          \"vendor\": \"AVM\"\n        }\n      ],\n      \"version_commit\": \"r12297-7e9c7e7b2d\",\n      \"version_number\": \"SNAPSHOT\"\n    }\n\n### Response status codes\n\nThe client should check the status code:\n\n| status | meaning                              | information                                                        |\n| ------ | ------------------------------------ | ------------------------------------------------------------------ |\n| `200`  | build finish / upgrade available     | see parameters above                                               |\n| `202`  | building, queued, imagebuilder setup | building right now or in build queue                               |\n| `400`  | bad request                          | see `error` parameter                                              |\n| `404`  | not found                            | if invalid `request_hash` supplied via `/api/build/<request_hash>` |\n| `422`  | unknown package                      | unknown package in request                                         |\n| `500`  | build failed                         | see `log` for build log                                            |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aparcar/asu", "keywords": "", "license": "", "maintainer": "Paul Spooren", "maintainer_email": "mail@aparcar.org", "name": "asu", "package_url": "https://pypi.org/project/asu/", "platform": "", "project_url": "https://pypi.org/project/asu/", "project_urls": {"Homepage": "https://github.com/aparcar/asu"}, "release_url": "https://pypi.org/project/asu/0.4.1/", "requires_dist": ["Click (==7.0)", "Flask-Cors (==3.0.8)", "Flask (==1.1.1)", "Jinja2 (==2.11.1)", "MarkupSafe (==1.1.1)", "PyNaCl (==1.3.0)", "Werkzeug (==1.0.0)", "cffi (==1.14.0)", "itsdangerous (==1.1.0)", "pycparser (==2.19)", "redis (==3.4.1)", "rq (==1.2.2)", "six (==1.14.0)"], "requires_python": "", "summary": "Create images for OpenWrt on demand", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Attendedsysupgrade Server for OpenWrt (GSoC 2017)</h1>\n<p><a href=\"https://codecov.io/gh/aparcar/asu\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d479feccaddeadecb78362dec080b1961e247e7/68747470733a2f2f636f6465636f762e696f2f67682f617061726361722f6173752f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://badge.fury.io/py/asu\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95983a6f4ed965177b92901c82a1d82eddf06d0a/68747470733a2f2f62616467652e667572792e696f2f70792f6173752e737667\"></a></p>\n<p>This project intends to simplify the sysupgrade process of devices running\nOpenWrt or distributions based on the former like LibreMesh. The provided tools\nhere offer an easy way to reflash the router with a new version or package\nupgrades, without the need of <code>opkg</code> installed.</p>\n<p>Additionally it offers an API (covered below) to request custom images with any\nselection of packages pre-installed, allowing to create firmware images without\nthe need of setting up a build environment, even from mobile devices.</p>\n<h2>Clients</h2>\n<h3>Yet another firmware selector</h3>\n<p>Simple web interface using vanilla JavaScript currently developed by @mwarning.\nIt offers a device search based on model names and show links either to\n<a href=\"https://downloads.openwrt.org/\" rel=\"nofollow\">official images</a> or requests images via the\n<em>asu</em> API. Please join in the development at the <a href=\"https://github.com/mwarning/yet_another_firmware_selector\" rel=\"nofollow\">GitHub\nrepository</a></p>\n<p><img alt=\"yafs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c06fd917e27c34ebba8ca97aea8a1153896a0398/6d6973632f796166732e706e67\"></p>\n<h3>LuCI app</h3>\n<p>The package\n<a href=\"https://github.com/openwrt/luci/tree/master/applications/luci-app-attendedsysupgrade\" rel=\"nofollow\"><code>luci-app-attendedsysupgrade</code></a>\noffers a simple view under <code>System &gt; Attended Sysupgrade</code> to automatically\nrequest a new firmware, wait until it is build and flash it.</p>\n<p><img alt=\"luci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2b361c4a6c25f58c32e14ed9cba8eeb5b0c8971/6d6973632f6c7563692e706e67\"></p>\n<h2>Server</h2>\n<p>The server listens to image requests and automatically generate them if the\nrequest was valid. This is done by automatically setting up OpenWrt\nImageBuilders and cache images in a Redis database. This allows to quickly\nrespond to requests without rebuilding existing images again.</p>\n<h3>Active server</h3>\n<ul>\n<li><a href=\"https://chef.libremesh.org\" rel=\"nofollow\">chef.libremesh.org</a></li>\n</ul>\n<h2>Run your own server</h2>\n<p>Redis is required to store image requests:</p>\n<pre><code>sudo apt install redis-server tar\n</code></pre>\n<p>Install <em>asu</em>:</p>\n<pre><code>pip install asu\n</code></pre>\n<p>Start the server via the following commands:</p>\n<pre><code>export FLASK_APP=asu  # set Flask app to asu\nflask janitor init    # download upstream profiles/packages\nflask run             # run development server\n</code></pre>\n<p>Start the worker via the following comand:</p>\n<pre><code>rq worker\n</code></pre>\n<h3>Production</h3>\n<p>It is recommended to run <em>ASU</em> via <code>gunicorn</code> proxied by <code>nginx</code>. Find a\npossible <code>nginx</code> configuration in the <code>misc/</code> folder. Also the setup should not\nHTTPS to allow clients without SSL/certificates to check for upgrades.</p>\n<p>To change the default setting place a file called <code>config.py</code> in the root of\nthe <a href=\"https://flask.palletsprojects.com/en/1.1.x/config/#instance-folders\" rel=\"nofollow\">instance\nfolder</a>.\nFind an example in the <code>misc/</code> folder.</p>\n<pre><code>pip install gunicorn\ngunicorn \"asu:create_app()\"\n</code></pre>\n<h3>Development</h3>\n<p>After cloning this repository create a Python virtual environment and install\nthe dependencies:</p>\n<pre><code>python3 -m venv .\nsource bin/activate\npip install -r requirements.txt\nexport FLASK_APP=asu  # set Flask app to asu\nexport FLASK_DEBUG=1  # run Flask in debug mode (autoreload)\nflask run\n</code></pre>\n<h2>API</h2>\n<h3>Upgrade check <code>/api/versions</code></h3>\n<p>The server does no longer offer complex upgrade but only serves static JSON\nfiles including available versions. For now the client must evaluate if the\nresponded JSON contains a newer version.</p>\n<h3>Build request <code>/api/build</code></h3>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th>value</th>\n<th>information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>version</code></td>\n<td><code>SNAPSHOT</code></td>\n<td>installed version</td>\n</tr>\n<tr>\n<td><code>profile</code></td>\n<td><code>netgear_wndr4300-v2</code></td>\n<td><code>board_name</code> of <code>ubus call system board</code></td>\n</tr>\n<tr>\n<td><code>packages</code></td>\n<td><code>[\"luci\", \"vim\"]</code></td>\n<td>Extra packages for the new image</td>\n</tr></tbody></table>\n<p>Each valid request returns a <code>request_hash</code> which can be used for future\npolling via <code>/api/build/&lt;request_hash&gt;</code>.</p>\n<h3>Response <code>status 200</code></h3>\n<p>A <code>200</code> response means the image was sucessfully created. The response is JSON\nencoded containing build information.</p>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th>information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>bin_dir</code></td>\n<td>relative path to created files</td>\n</tr>\n<tr>\n<td><code>buildlog</code></td>\n<td>boolean if buildlog.txt was created</td>\n</tr>\n<tr>\n<td><code>manifest</code></td>\n<td>dict of all installed packages plus version</td>\n</tr>\n<tr>\n<td><code>request_hash</code></td>\n<td>hashed request data stored by the server</td>\n</tr></tbody></table>\n<pre><code>{\n  \"build_at\": \"Tue, 25 Feb 2020 08:49:48 GMT\",\n  \"enqueued_at\": \"Tue, 25 Feb 2020 08:49:09 GMT\",\n  \"id\": \"avm_fritzbox-4040\",\n  \"image_prefix\": \"openwrt-387e9d003d04-ipq40xx-generic-avm_fritzbox-4040\",\n  \"images\": [\n    {\n      \"name\": \"openwrt-387e9d003d04-ipq40xx-generic-avm_fritzbox-4040-squashfs-eva.bin\",\n      \"sha256\": \"8cb0d58bf672ed442f0813a1f04ec2f5edf6e2b64c8f117cb11158e19251aa0b\",\n      \"type\": \"eva\"\n    },\n    {\n      \"name\": \"openwrt-387e9d003d04-ipq40xx-generic-avm_fritzbox-4040-squashfs-sysupgrade.bin\",\n      \"sha256\": \"0d12ce60dd63422a63ed28f0e2a2ab2d367a407ccc32b665c28c809f3cb073f1\",\n      \"type\": \"sysupgrade\"\n    }\n  ],\n  \"manifest\": {\n    \"ath10k-firmware-qca4019-ct\": \"2019-10-03-d622d160-1\",\n    \"base-files\": \"213-r12297-7e9c7e7b2d\",\n    \"busybox\": \"1.31.1-1\",\n    \"cgi-io\": \"17\",\n    \"dnsmasq\": \"2.80-18\",\n    [...]\n    \"uclient-fetch\": \"2020-01-05-fef6d3d3-1\",\n    \"uhttpd\": \"2020-02-12-2ee323c0-1\",\n    \"urandom-seed\": \"1.0-1\",\n    \"urngd\": \"2020-01-21-c7f7b6b6-1\",\n    \"usign\": \"2019-09-21-f34a383e-1\",\n    \"vim\": \"8.1-6\",\n    \"wireless-regdb\": \"2019.06.03\",\n    \"wpad-basic\": \"2019-08-08-ca8c2bd2-6\",\n    \"zlib\": \"1.2.11-3\"\n  },\n  \"metadata_version\": 1,\n  \"request_hash\": \"5bac6cb8321f\",\n  \"supported_devices\": [\n    \"avm,fritzbox-4040\"\n  ],\n  \"target\": \"ipq40xx/generic\",\n  \"titles\": [\n    {\n      \"model\": \"FRITZ!Box 4040\",\n      \"vendor\": \"AVM\"\n    }\n  ],\n  \"version_commit\": \"r12297-7e9c7e7b2d\",\n  \"version_number\": \"SNAPSHOT\"\n}\n</code></pre>\n<h3>Response status codes</h3>\n<p>The client should check the status code:</p>\n<table>\n<thead>\n<tr>\n<th>status</th>\n<th>meaning</th>\n<th>information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>200</code></td>\n<td>build finish / upgrade available</td>\n<td>see parameters above</td>\n</tr>\n<tr>\n<td><code>202</code></td>\n<td>building, queued, imagebuilder setup</td>\n<td>building right now or in build queue</td>\n</tr>\n<tr>\n<td><code>400</code></td>\n<td>bad request</td>\n<td>see <code>error</code> parameter</td>\n</tr>\n<tr>\n<td><code>404</code></td>\n<td>not found</td>\n<td>if invalid <code>request_hash</code> supplied via <code>/api/build/&lt;request_hash&gt;</code></td>\n</tr>\n<tr>\n<td><code>422</code></td>\n<td>unknown package</td>\n<td>unknown package in request</td>\n</tr>\n<tr>\n<td><code>500</code></td>\n<td>build failed</td>\n<td>see <code>log</code> for build log</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6965272, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "19813147cf17f79a965257694724e2d7", "sha256": "a8f9a43a98fe5135361c81d8d20052be961d34d12bdf8ac478a06a870e4fc999"}, "downloads": -1, "filename": "asu-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "19813147cf17f79a965257694724e2d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36893, "upload_time": "2019-03-07T19:13:48", "upload_time_iso_8601": "2019-03-07T19:13:48.510805Z", "url": "https://files.pythonhosted.org/packages/1a/83/f052b920a2e3abfc07aa6ad45d19cae961d488dc9e6de1c4dae88920a2cb/asu-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbb75ffb7d61df3bd1e68b7271495c63", "sha256": "e5936cb44b735e84c41e8c6a0858f79497d6cc5be3d703f359b96f496d9e8c55"}, "downloads": -1, "filename": "asu-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bbb75ffb7d61df3bd1e68b7271495c63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35352, "upload_time": "2019-03-07T19:13:51", "upload_time_iso_8601": "2019-03-07T19:13:51.235624Z", "url": "https://files.pythonhosted.org/packages/7f/f3/b31f8e97d5a25015516a032695216d8466c955afd2356c93aac2883ed766/asu-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d8b64c5291692b03d428d453b457c29c", "sha256": "f88f539e846f79c99b4d587bf8e79a91d79191533ab2b2dbf6e60060d289ddcc"}, "downloads": -1, "filename": "asu-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d8b64c5291692b03d428d453b457c29c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37507, "upload_time": "2019-03-07T23:25:45", "upload_time_iso_8601": "2019-03-07T23:25:45.960049Z", "url": "https://files.pythonhosted.org/packages/88/a0/4abd4673f998bb1adc7838d722bb7f2a9a7316d732fe04a893f57a1aca45/asu-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6156a200990a2c51fa61fe70cfa431a", "sha256": "5c787bb983c1189b01151aee939acd9f56376d0bb9e6e51cb038ccd103518007"}, "downloads": -1, "filename": "asu-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c6156a200990a2c51fa61fe70cfa431a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36011, "upload_time": "2019-03-07T23:25:47", "upload_time_iso_8601": "2019-03-07T23:25:47.859375Z", "url": "https://files.pythonhosted.org/packages/05/2a/860081557600642ea4f2c09caeb324d1b28beeafa18e6f9a3f08176994bb/asu-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "63a3d2ce715007f2ba9f43b86a3f8bad", "sha256": "acbf0e59af0760c009c3b47d618791919e938c5d2c9e0d7d10de4584b4d84634"}, "downloads": -1, "filename": "asu-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "63a3d2ce715007f2ba9f43b86a3f8bad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37627, "upload_time": "2019-03-08T01:40:25", "upload_time_iso_8601": "2019-03-08T01:40:25.028581Z", "url": "https://files.pythonhosted.org/packages/ef/e8/8e0c406db4647b79edf980b52aaffaa78fd57c0b5045ab2f8cdbc6b9b68d/asu-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "864cf5db8a13e4a765d8af64e2300281", "sha256": "bfbe4e7e56eb22a3be2b5798bcb4ed0aed48caaf94fe595372c4b3c795b6dc51"}, "downloads": -1, "filename": "asu-0.2.2.tar.gz", "has_sig": false, "md5_digest": "864cf5db8a13e4a765d8af64e2300281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36141, "upload_time": "2019-03-08T01:40:26", "upload_time_iso_8601": "2019-03-08T01:40:26.714959Z", "url": "https://files.pythonhosted.org/packages/17/58/4990d293977a394d6a25e40bc820c8afca8cdc8acd21812009456737e733/asu-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "9c6c82c5391df3d85f86aedf99dbedce", "sha256": "2bca211f49aa8d3507f2f47458502e8ee371d955d12c289d5fe7322936393d7c"}, "downloads": -1, "filename": "asu-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9c6c82c5391df3d85f86aedf99dbedce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37736, "upload_time": "2019-03-08T02:35:05", "upload_time_iso_8601": "2019-03-08T02:35:05.065127Z", "url": "https://files.pythonhosted.org/packages/59/ef/8230941d305b4197028a1324dc47f2a0591374c5df6a025b7678e0f42226/asu-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64e3559e37fa9b81760d729ae6bbae4d", "sha256": "e60027cd531cc5b9b20d3321acc06fdf0cdd894004919800575b8235343ba8ef"}, "downloads": -1, "filename": "asu-0.2.3.tar.gz", "has_sig": false, "md5_digest": "64e3559e37fa9b81760d729ae6bbae4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36251, "upload_time": "2019-03-08T02:35:06", "upload_time_iso_8601": "2019-03-08T02:35:06.899341Z", "url": "https://files.pythonhosted.org/packages/6d/1f/90c86cb1bfd3fc5cb231076b36a811d6da45e9d9fb613b5ed71821e044d2/asu-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "2e76af970ffa1f1591346301f4fba05d", "sha256": "94dea0f35e6962c140905f1f8f6ed4831a0ab2e67238491c6fd1214f9a6e8b3e"}, "downloads": -1, "filename": "asu-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2e76af970ffa1f1591346301f4fba05d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37623, "upload_time": "2019-03-11T17:07:54", "upload_time_iso_8601": "2019-03-11T17:07:54.315957Z", "url": "https://files.pythonhosted.org/packages/bf/8f/264adbe5d077673ba4a37918aa6b307ee737ff54ef3d99abb6b34fac98d3/asu-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0aae6fcff29ad9e0e13b5feb17fe0af0", "sha256": "6c4fa3b52bf826ae403f964fb0a8551dded24104c3290be25b1288b88dda8b2b"}, "downloads": -1, "filename": "asu-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0aae6fcff29ad9e0e13b5feb17fe0af0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36281, "upload_time": "2019-03-11T17:07:56", "upload_time_iso_8601": "2019-03-11T17:07:56.248482Z", "url": "https://files.pythonhosted.org/packages/4a/83/a7cddad442fbd8f58e0828912f335f895ecd90de144f3800db28deb9da10/asu-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "18db253b6451a9840b149aa2033a6f8d", "sha256": "b2e1a4fab49596d517a11c267dcbed93b30568c3e7925ba6bb69e34838970b0d"}, "downloads": -1, "filename": "asu-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "18db253b6451a9840b149aa2033a6f8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9112, "upload_time": "2020-02-25T01:37:43", "upload_time_iso_8601": "2020-02-25T01:37:43.957697Z", "url": "https://files.pythonhosted.org/packages/c6/6e/55b292b907639322c6b12e24d4fe31a695ec0ece35040a62c926e531e86b/asu-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2aa512b7a9a0bafd946b97bd5e8578a", "sha256": "ec09cedf394f73ce9c8e68768c9917a867a056b09d3400b964aa337e631a6282"}, "downloads": -1, "filename": "asu-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d2aa512b7a9a0bafd946b97bd5e8578a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8588, "upload_time": "2020-02-25T01:37:46", "upload_time_iso_8601": "2020-02-25T01:37:46.002651Z", "url": "https://files.pythonhosted.org/packages/a2/f8/31d053db714580bc0fb4e3c0ace85f07bfb9d64a09d9ce99c8b40f3b0348/asu-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5f8d655baa0c9f7e7d3d77a4319761b5", "sha256": "0a0f6c975c6262516dce3230ef169915b0fd25db3959322aac905b8f13267612"}, "downloads": -1, "filename": "asu-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5f8d655baa0c9f7e7d3d77a4319761b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20861, "upload_time": "2020-03-20T08:45:14", "upload_time_iso_8601": "2020-03-20T08:45:14.150784Z", "url": "https://files.pythonhosted.org/packages/17/c2/8fda66b807467421f191ee979d00581f0f9525e5a34fb091cfa418934f9f/asu-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfb490dcc8feb9d14da390e571cc135f", "sha256": "9968a49ff6ea8295927e1c4cd330bf36858075358194008abcdd8a0b62f9247e"}, "downloads": -1, "filename": "asu-0.4.0.tar.gz", "has_sig": false, "md5_digest": "bfb490dcc8feb9d14da390e571cc135f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15423, "upload_time": "2020-03-20T08:45:17", "upload_time_iso_8601": "2020-03-20T08:45:17.100641Z", "url": "https://files.pythonhosted.org/packages/1f/c9/93262c0aecc24fa2ed9b9b6f785747817d9d4590b0efb9dddec1c4cba5d4/asu-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "431f2f05fb1edd652c7e175c7b5d1a71", "sha256": "9983bb9c2b7edec84b75469ee8dd31a6a2971594190f1119ee500fee13e2e717"}, "downloads": -1, "filename": "asu-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "431f2f05fb1edd652c7e175c7b5d1a71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20991, "upload_time": "2020-04-06T22:44:38", "upload_time_iso_8601": "2020-04-06T22:44:38.617210Z", "url": "https://files.pythonhosted.org/packages/a6/82/ee9e7db4aad7879ba17f8f93bc51118fe207dce5c67af6cef53e9cd1c1ea/asu-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6debeae06f349889f9276631e1cf092", "sha256": "80cbf808df7883a58341406b9d88ca374da488ae13861b34e68c82a5284e1e63"}, "downloads": -1, "filename": "asu-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f6debeae06f349889f9276631e1cf092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16030, "upload_time": "2020-04-06T22:44:42", "upload_time_iso_8601": "2020-04-06T22:44:42.656338Z", "url": "https://files.pythonhosted.org/packages/8d/1e/b67437064fd746a0b021829301271f8344eece7e3556a22752adc74c7495/asu-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "431f2f05fb1edd652c7e175c7b5d1a71", "sha256": "9983bb9c2b7edec84b75469ee8dd31a6a2971594190f1119ee500fee13e2e717"}, "downloads": -1, "filename": "asu-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "431f2f05fb1edd652c7e175c7b5d1a71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20991, "upload_time": "2020-04-06T22:44:38", "upload_time_iso_8601": "2020-04-06T22:44:38.617210Z", "url": "https://files.pythonhosted.org/packages/a6/82/ee9e7db4aad7879ba17f8f93bc51118fe207dce5c67af6cef53e9cd1c1ea/asu-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6debeae06f349889f9276631e1cf092", "sha256": "80cbf808df7883a58341406b9d88ca374da488ae13861b34e68c82a5284e1e63"}, "downloads": -1, "filename": "asu-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f6debeae06f349889f9276631e1cf092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16030, "upload_time": "2020-04-06T22:44:42", "upload_time_iso_8601": "2020-04-06T22:44:42.656338Z", "url": "https://files.pythonhosted.org/packages/8d/1e/b67437064fd746a0b021829301271f8344eece7e3556a22752adc74c7495/asu-0.4.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:47 2020"}