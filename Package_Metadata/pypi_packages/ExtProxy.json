{"info": {"author": "SeaHOH", "author_email": "seahoh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Utilities"], "description": "# ExtProxy\nExtProxy extend urllib2's ProxyHandler to support extra proxy types: HTTPS, SOCKS. It provides a consistent user experience like HTTP proxy for the users.\n\nThis script is using a non-side-effects monkey patch, it did not applied to build-in module socket, just inject some codes into `Request`, `ProxyHandler`, `HTTPConnection`, `SSLContext` method's processing. No need to worry about the patching, you can using everything like before, or you can unpatch it at any time.\n\n# Installation\nInstall from PyPI:\n\n    pip install ExtProxy\n\nOr download and Install from source code:\n\n    python setup.py install\n\n# Compatibility \n- Python >= 2.7\n- Require PySocks to support SOCKS proxy type\n\n# Usage\n```py\n# Target can be imported before monkey patching\nfrom urllib.request import urlopen, build_opener, ProxyHandler\n\n\n# Import extproxy, auto apply monkey patching by `extproxy.patch_items`\nimport extproxy\n\n\n# Use origin HTTP proxy\nproxy = \"http://127.0.0.1:8080\"\n\n\n# Use HTTPS proxy, use `set_https_proxy` to custom proxy's SSL verify mode\nimport ssl\nproxy = \"https://127.0.0.1:8443\"\n\ncafile = \"cafile path\"\nset_https_proxy(proxy, check_hostname=False, cafile=cafile)\n\ncontext_settings = {\n    \"protocol\": ssl.PROTOCOL_TLSv1_2,\n    \"cert_reqs\": ssl.CERT_REQUIRED,  #\n    \"check_hostname\": True,          #\n    \"cafile\": \"cafile path\",         #\n    \"capath\": \"cafiles dir path\",    #\n    \"cadata\": b\"ca data\"             # Uesd to server auth\n    \"certfile\": \"certfile path\",  #\n    \"keyfile\": \"keyfile path\",    # Uesd to client auth\n}\ncontext = ssl._create_unverified_context(**context_settings)\n ...  # More custom settings\nset_https_proxy(proxy, context=context)\n\n\n# Use SOCKS proxy, `socks` can be: socks, socks4, socks4a, socks5, socks5h\n# SOCKS4 does not support remote resolving, but SOCKS4a/5 supported\n# 'socks' means SOCKS5, 'socks5h' means do not use remote resolving\nproxy = \"socks://127.0.0.1:1080\"\n\n\n# Set proxy via system/python environment variables\nimport os\nos.environ[\"HTTP_PROXY\"] = proxy\nos.environ[\"HTTPS_PROXY\"] = proxy\nprint(urlopen(\"https://httpbin.org/ip\").read().decode())\n\n\n# Set proxy via ProxyHandler\nopener = build_opener(ProxyHandler({\n    \"http\": proxy,\n    \"https\": proxy\n}))\nprint(opener.open(\"https://httpbin.org/ip\").read().decode())\n\n\n# Restore monkey patch, then HTTPS, SOCKS proxy use can not continue working\nextproxy.restore_items()\n```\n\n# License\nExtProxy is released under the [MIT license](LICENSE).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SeaHOH/extproxy", "keywords": "urllib ProxyHandler HTTPS SOCKS proxy", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ExtProxy", "package_url": "https://pypi.org/project/ExtProxy/", "platform": "any", "project_url": "https://pypi.org/project/ExtProxy/", "project_urls": {"Homepage": "https://github.com/SeaHOH/extproxy"}, "release_url": "https://pypi.org/project/ExtProxy/0.1.3/", "requires_dist": ["PySocks (>=1.7.1)"], "requires_python": ">=2.7", "summary": "ExtProxy extend urllib2's ProxyHandler to support extra proxy types: HTTPS, SOCKS.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ExtProxy</h1>\n<p>ExtProxy extend urllib2's ProxyHandler to support extra proxy types: HTTPS, SOCKS. It provides a consistent user experience like HTTP proxy for the users.</p>\n<p>This script is using a non-side-effects monkey patch, it did not applied to build-in module socket, just inject some codes into <code>Request</code>, <code>ProxyHandler</code>, <code>HTTPConnection</code>, <code>SSLContext</code> method's processing. No need to worry about the patching, you can using everything like before, or you can unpatch it at any time.</p>\n<h1>Installation</h1>\n<p>Install from PyPI:</p>\n<pre><code>pip install ExtProxy\n</code></pre>\n<p>Or download and Install from source code:</p>\n<pre><code>python setup.py install\n</code></pre>\n<h1>Compatibility</h1>\n<ul>\n<li>Python &gt;= 2.7</li>\n<li>Require PySocks to support SOCKS proxy type</li>\n</ul>\n<h1>Usage</h1>\n<pre><span class=\"c1\"># Target can be imported before monkey patching</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.request</span> <span class=\"kn\">import</span> <span class=\"n\">urlopen</span><span class=\"p\">,</span> <span class=\"n\">build_opener</span><span class=\"p\">,</span> <span class=\"n\">ProxyHandler</span>\n\n\n<span class=\"c1\"># Import extproxy, auto apply monkey patching by `extproxy.patch_items`</span>\n<span class=\"kn\">import</span> <span class=\"nn\">extproxy</span>\n\n\n<span class=\"c1\"># Use origin HTTP proxy</span>\n<span class=\"n\">proxy</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://127.0.0.1:8080\"</span>\n\n\n<span class=\"c1\"># Use HTTPS proxy, use `set_https_proxy` to custom proxy's SSL verify mode</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ssl</span>\n<span class=\"n\">proxy</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://127.0.0.1:8443\"</span>\n\n<span class=\"n\">cafile</span> <span class=\"o\">=</span> <span class=\"s2\">\"cafile path\"</span>\n<span class=\"n\">set_https_proxy</span><span class=\"p\">(</span><span class=\"n\">proxy</span><span class=\"p\">,</span> <span class=\"n\">check_hostname</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">cafile</span><span class=\"o\">=</span><span class=\"n\">cafile</span><span class=\"p\">)</span>\n\n<span class=\"n\">context_settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"protocol\"</span><span class=\"p\">:</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">PROTOCOL_TLSv1_2</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"cert_reqs\"</span><span class=\"p\">:</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">CERT_REQUIRED</span><span class=\"p\">,</span>  <span class=\"c1\">#</span>\n    <span class=\"s2\">\"check_hostname\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>          <span class=\"c1\">#</span>\n    <span class=\"s2\">\"cafile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cafile path\"</span><span class=\"p\">,</span>         <span class=\"c1\">#</span>\n    <span class=\"s2\">\"capath\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cafiles dir path\"</span><span class=\"p\">,</span>    <span class=\"c1\">#</span>\n    <span class=\"s2\">\"cadata\"</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s2\">\"ca data\"</span>             <span class=\"c1\"># Uesd to server auth</span>\n    <span class=\"s2\">\"certfile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"certfile path\"</span><span class=\"p\">,</span>  <span class=\"c1\">#</span>\n    <span class=\"s2\">\"keyfile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"keyfile path\"</span><span class=\"p\">,</span>    <span class=\"c1\"># Uesd to client auth</span>\n<span class=\"p\">}</span>\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">_create_unverified_context</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">context_settings</span><span class=\"p\">)</span>\n <span class=\"o\">...</span>  <span class=\"c1\"># More custom settings</span>\n<span class=\"n\">set_https_proxy</span><span class=\"p\">(</span><span class=\"n\">proxy</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Use SOCKS proxy, `socks` can be: socks, socks4, socks4a, socks5, socks5h</span>\n<span class=\"c1\"># SOCKS4 does not support remote resolving, but SOCKS4a/5 supported</span>\n<span class=\"c1\"># 'socks' means SOCKS5, 'socks5h' means do not use remote resolving</span>\n<span class=\"n\">proxy</span> <span class=\"o\">=</span> <span class=\"s2\">\"socks://127.0.0.1:1080\"</span>\n\n\n<span class=\"c1\"># Set proxy via system/python environment variables</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"HTTP_PROXY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">proxy</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"HTTPS_PROXY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">proxy</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"s2\">\"https://httpbin.org/ip\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n\n\n<span class=\"c1\"># Set proxy via ProxyHandler</span>\n<span class=\"n\">opener</span> <span class=\"o\">=</span> <span class=\"n\">build_opener</span><span class=\"p\">(</span><span class=\"n\">ProxyHandler</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"http\"</span><span class=\"p\">:</span> <span class=\"n\">proxy</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"https\"</span><span class=\"p\">:</span> <span class=\"n\">proxy</span>\n<span class=\"p\">}))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">opener</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"https://httpbin.org/ip\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n\n\n<span class=\"c1\"># Restore monkey patch, then HTTPS, SOCKS proxy use can not continue working</span>\n<span class=\"n\">extproxy</span><span class=\"o\">.</span><span class=\"n\">restore_items</span><span class=\"p\">()</span>\n</pre>\n<h1>License</h1>\n<p>ExtProxy is released under the <a href=\"LICENSE\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6593899, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "81f6975779ee28f1cb147a9d4a0262e9", "sha256": "806c13240e27eed2ac3371a8712efabfc07a001aea45004bdb7bb496c77cf0ce"}, "downloads": -1, "filename": "ExtProxy-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "81f6975779ee28f1cb147a9d4a0262e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 11579, "upload_time": "2019-12-14T22:42:47", "upload_time_iso_8601": "2019-12-14T22:42:47.434071Z", "url": "https://files.pythonhosted.org/packages/8a/7d/9d4d1ccf9685c21ce5556473f92f4660ca49447f13a94494b23f15e6938d/ExtProxy-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0f261ca43a1d63dc1945ba9718c010", "sha256": "7f00d40892a3e22cee5ed7cff55cb616492879af3564db0734eba5930c0d2cc6"}, "downloads": -1, "filename": "ExtProxy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7d0f261ca43a1d63dc1945ba9718c010", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 9430, "upload_time": "2019-12-14T22:42:48", "upload_time_iso_8601": "2019-12-14T22:42:48.638168Z", "url": "https://files.pythonhosted.org/packages/5b/b5/f1ab0732db57d48a62441f0ba5080ada658d572d91600b98074927d5efbe/ExtProxy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a46240ad6d1dcf801f1292cea385671d", "sha256": "c5332e8dd2ade2d4e4c100320f84c52539c0c1eb2b7af2b1d320ec5c6d0e3b33"}, "downloads": -1, "filename": "ExtProxy-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a46240ad6d1dcf801f1292cea385671d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 11578, "upload_time": "2020-02-08T14:23:40", "upload_time_iso_8601": "2020-02-08T14:23:40.450790Z", "url": "https://files.pythonhosted.org/packages/a2/45/ec6f904555afbaf1c1e9f8605e58a9ea902106d5e11f3a067c68b13d8df4/ExtProxy-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b41d5fb0b0c7f2c956a3449269fbbf62", "sha256": "474e93af8c0219fc33c9c5d0af2a7a055046862f261670893d959baf787bfec1"}, "downloads": -1, "filename": "ExtProxy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b41d5fb0b0c7f2c956a3449269fbbf62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 9458, "upload_time": "2020-02-08T14:23:42", "upload_time_iso_8601": "2020-02-08T14:23:42.968841Z", "url": "https://files.pythonhosted.org/packages/4d/10/beb3a9f53e6e2173a4536690e1f4fc60414e089149e3587ee5ca994772e0/ExtProxy-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a46240ad6d1dcf801f1292cea385671d", "sha256": "c5332e8dd2ade2d4e4c100320f84c52539c0c1eb2b7af2b1d320ec5c6d0e3b33"}, "downloads": -1, "filename": "ExtProxy-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a46240ad6d1dcf801f1292cea385671d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 11578, "upload_time": "2020-02-08T14:23:40", "upload_time_iso_8601": "2020-02-08T14:23:40.450790Z", "url": "https://files.pythonhosted.org/packages/a2/45/ec6f904555afbaf1c1e9f8605e58a9ea902106d5e11f3a067c68b13d8df4/ExtProxy-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b41d5fb0b0c7f2c956a3449269fbbf62", "sha256": "474e93af8c0219fc33c9c5d0af2a7a055046862f261670893d959baf787bfec1"}, "downloads": -1, "filename": "ExtProxy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b41d5fb0b0c7f2c956a3449269fbbf62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 9458, "upload_time": "2020-02-08T14:23:42", "upload_time_iso_8601": "2020-02-08T14:23:42.968841Z", "url": "https://files.pythonhosted.org/packages/4d/10/beb3a9f53e6e2173a4536690e1f4fc60414e089149e3587ee5ca994772e0/ExtProxy-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}