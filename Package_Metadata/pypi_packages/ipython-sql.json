{"info": {"author": "Catherine Devlin", "author_email": "catherine.devlin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: Database :: Front-Ends"], "description": "===========\nipython-sql\n===========\n\n:Author: Catherine Devlin, http://catherinedevlin.blogspot.com\n\nIntroduces a %sql (or %%sql) magic.\n\nConnect to a database, using `SQLAlchemy URL`_ connect strings, then issue SQL\ncommands within IPython or IPython Notebook.\n\n.. image:: https://raw.github.com/catherinedevlin/ipython-sql/master/examples/writers.png\n   :width: 600px\n   :alt: screenshot of ipython-sql in the Notebook\n\nExamples\n--------\n\n.. code-block:: python\n\n    In [1]: %load_ext sql\n\n    In [2]: %%sql postgresql://will:longliveliz@localhost/shakes\n       ...: select * from character\n       ...: where abbrev = 'ALICE'\n       ...:\n    Out[2]: [(u'Alice', u'Alice', u'ALICE', u'a lady attending on Princess Katherine', 22)]\n\n    In [3]: result = _\n\n    In [4]: print(result)\n    charid   charname   abbrev                description                 speechcount\n    =================================================================================\n    Alice    Alice      ALICE    a lady attending on Princess Katherine   22\n\n    In [4]: result.keys\n    Out[5]: [u'charid', u'charname', u'abbrev', u'description', u'speechcount']\n\n    In [6]: result[0][0]\n    Out[6]: u'Alice'\n\n    In [7]: result[0].description\n    Out[7]: u'a lady attending on Princess Katherine'\n\nAfter the first connection, connect info can be omitted::\n\n    In [8]: %sql select count(*) from work\n    Out[8]: [(43L,)]\n\nConnections to multiple databases can be maintained.  You can refer to\nan existing connection by username@database\n\n.. code-block:: python\n\n    In [9]: %%sql will@shakes\n       ...: select charname, speechcount from character\n       ...: where  speechcount = (select max(speechcount)\n       ...:                       from character);\n       ...:\n    Out[9]: [(u'Poet', 733)]\n\n    In [10]: print(_)\n    charname   speechcount\n    ======================\n    Poet       733\n\nIf no connect string is supplied, ``%sql`` will provide a list of existing connections;\nhowever, if no connections have yet been made and the environment variable ``DATABASE_URL``\nis available, that will be used.\n\nFor secure access, you may dynamically access your credentials (e.g. from your system environment or `getpass.getpass`) to avoid storing your password in the notebook itself. Use the `$` before any variable to access it in your `%sql` command.\n\n.. code-block:: python\n\n    In [11]: user = os.getenv('SOME_USER')\n       ....: password = os.getenv('SOME_PASSWORD')\n       ....: connection_string = \"postgresql://{user}:{password}@localhost/some_database\".format(user=user, password=password)\n       ....: %sql $connection_string\n    Out[11]: u'Connected: some_user@some_database'\n\nYou may use multiple SQL statements inside a single cell, but you will\nonly see any query results from the last of them, so this really only\nmakes sense for statements with no output\n\n.. code-block:: python\n\n    In [11]: %%sql sqlite://\n       ....: CREATE TABLE writer (first_name, last_name, year_of_death);\n       ....: INSERT INTO writer VALUES ('William', 'Shakespeare', 1616);\n       ....: INSERT INTO writer VALUES ('Bertold', 'Brecht', 1956);\n       ....:\n    Out[11]: []\n\n\nAs a convenience, dict-style access for result sets is supported, with the\nleftmost column serving as key, for unique values.\n\n.. code-block:: python\n\n    In [12]: result = %sql select * from work\n    43 rows affected.\n\n    In [13]: result['richard2']\n    Out[14]: (u'richard2', u'Richard II', u'History of Richard II', 1595, u'h', None, u'Moby', 22411, 628)\n\nResults can also be retrieved as an iterator of dictionaries (``result.dicts()``)\nor a single dictionary with a tuple of scalar values per key (``result.dict()``)\n\nVariable substitution \n---------------------\n\nBind variables (bind parameters) can be used in the \"named\" (:x) style.\nThe variable names used should be defined in the local namespace.\n\n.. code-block:: python\n\n    In [15]: name = 'Countess'\n\n    In [16]: %sql select description from character where charname = :name\n    Out[16]: [(u'mother to Bertram',)]\n\n    In [17]: %sql select description from character where charname = '{name}' \n    Out[17]: [(u'mother to Bertram',)]\n\nAlternately, ``$variable_name`` or ``{variable_name}`` can be \nused to inject variables from the local namespace into the SQL \nstatement before it is formed and passed to the SQL engine.\n(Using ``$`` and ``{}`` together, as in ``${variable_name}``, \nis not supported.)\n\nBind variables are passed through to the SQL engine and can only \nbe used to replace strings passed to SQL.  ``$`` and ``{}`` are \nsubstituted before passing to SQL and can be used to form SQL \nstatements dynamically.\n\nAssignment\n----------\n\nOrdinary IPython assignment works for single-line `%sql` queries:\n\n.. code-block:: python\n\n    In [18]: works = %sql SELECT title, year FROM work\n    43 rows affected.\n\nThe `<<` operator captures query results in a local variable, and\ncan be used in multi-line ``%%sql``:\n\n.. code-block:: python\n\n    In [19]: %%sql works << SELECT title, year\n        ...: FROM work\n        ...:\n    43 rows affected.\n    Returning data to local variable works\n\nConnecting\n----------\n\nConnection strings are `SQLAlchemy URL`_ standard.\n\nSome example connection strings::\n\n    mysql+pymysql://scott:tiger@localhost/foo\n    oracle://scott:tiger@127.0.0.1:1521/sidname\n    sqlite://\n    sqlite:///foo.db\n    mssql+pyodbc://username:password@host/database?driver=SQL+Server+Native+Client+11.0\n\n.. _`SQLAlchemy URL`: http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\n\nNote that ``mysql`` and ``mysql+pymysql`` connections (and perhaps others)\ndon't read your client character set information from .my.cnf.  You need\nto specify it in the connection string::\n\n    mysql+pymysql://scott:tiger@localhost/foo?charset=utf8\n\nNote that an ``impala`` connection with `impyla`_  for HiveServer2 requires disabling autocommit::\n\n    %config SqlMagic.autocommit=False\n    %sql impala://hserverhost:port/default?kerberos_service_name=hive&auth_mechanism=GSSAPI\n\n.. _impyla: https://github.com/cloudera/impyla\n\nConnection arguments not whitelisted by SQLALchemy can be provided as\na flag with (-a|--connection_arguments)the connection string as a JSON string.\nSee `SQLAlchemy Args`_.\n\n    %sql --connection_arguments {\"timeout\":10,\"mode\":\"ro\"} sqlite:// SELECT * FROM work;\n    %sql -a '{\"timeout\":10, \"mode\":\"ro\"}' sqlite:// SELECT * from work;\n\n.. _`SQLAlchemy Args`: https://docs.sqlalchemy.org/en/13/core/engines.html#custom-dbapi-args\n\nDSN connections\n~~~~~~~~~~~~~~~\n\nAlternately, you can store connection info in a \nconfiguration file, under a section name chosen to \nrefer to your database.\n\nFor example, if dsn.ini contains \n\n    [DB_CONFIG_1]\n    drivername=postgres\n    host=my.remote.host\n    port=5433\n    database=mydatabase\n    username=myuser\n    password=1234\n\nthen you can  \n\n    %config SqlMagic.dsn_filename='./dsn.ini'\n    %sql --section DB_CONFIG_1 \n\nConfiguration\n-------------\n\nQuery results are loaded as lists, so very large result sets may use up\nyour system's memory and/or hang your browser.  There is no autolimit\nby default.  However, `autolimit` (if set) limits the size of the result\nset (usually with a `LIMIT` clause in the SQL).  `displaylimit` is similar,\nbut the entire result set is still pulled into memory (for later analysis);\nonly the screen display is truncated.\n\n.. code-block:: python\n\n   In [2]: %config SqlMagic\n   SqlMagic options\n   --------------\n   SqlMagic.autocommit=<Bool>\n       Current: True\n       Set autocommit mode\n   SqlMagic.autolimit=<Int>\n       Current: 0\n       Automatically limit the size of the returned result sets\n   SqlMagic.autopandas=<Bool>\n       Current: False\n       Return Pandas DataFrames instead of regular result sets\n   SqlMagic.column_local_vars=<Bool>\n       Current: False\n       Return data into local variables from column names\n   SqlMagic.displaycon=<Bool>\n       Current: False\n       Show connection string after execute\n   SqlMagic.displaylimit=<Int>\n       Current: None\n       Automatically limit the number of rows displayed (full result set is still\n       stored)\n   SqlMagic.dsn_filename=<Unicode>\n       Current: 'odbc.ini'\n       Path to DSN file. When the first argument is of the form [section], a\n       sqlalchemy connection string is formed from the matching section in the DSN\n       file.\n   SqlMagic.feedback=<Bool>\n       Current: False\n       Print number of rows affected by DML\n   SqlMagic.short_errors=<Bool>\n       Current: True\n       Don't display the full traceback on SQL Programming Error\n   SqlMagic.style=<Unicode>\n       Current: 'DEFAULT'\n       Set the table printing style to any of prettytable's defined styles\n       (currently DEFAULT, MSWORD_FRIENDLY, PLAIN_COLUMNS, RANDOM)\n\n   In[3]: %config SqlMagic.feedback = False\n\nPlease note: if you have autopandas set to true, the displaylimit option will not apply. You can set the pandas display limit by using the pandas ``max_rows`` option as described in the `pandas documentation <http://pandas.pydata.org/pandas-docs/version/0.18.1/options.html#frequently-used-options>`_.\n\nPandas\n------\n\nIf you have installed ``pandas``, you can use a result set's\n``.DataFrame()`` method\n\n.. code-block:: python\n\n    In [3]: result = %sql SELECT * FROM character WHERE speechcount > 25\n\n    In [4]: dataframe = result.DataFrame()\n\n\nThe ``--persist`` argument, with the name of a \nDataFrame object in memory, \nwill create a table name\nin the database from the named DataFrame.  \nOr use ``--append`` to add rows to an existing \ntable by that name.\n\n.. code-block:: python\n\n    In [5]: %sql --persist dataframe\n\n    In [6]: %sql SELECT * FROM dataframe;\n\n.. _Pandas: http://pandas.pydata.org/\n\nGraphing\n--------\n\nIf you have installed ``matplotlib``, you can use a result set's\n``.plot()``, ``.pie()``, and ``.bar()`` methods for quick plotting\n\n.. code-block:: python\n\n    In[5]: result = %sql SELECT title, totalwords FROM work WHERE genretype = 'c'\n\n    In[6]: %matplotlib inline\n\n    In[7]: result.pie()\n\n.. image:: https://raw.github.com/catherinedevlin/ipython-sql/master/examples/wordcount.png\n   :alt: pie chart of word count of Shakespeare's comedies\n\nDumping\n-------\n\nResult sets come with a ``.csv(filename=None)`` method.  This generates\ncomma-separated text either as a return value (if ``filename`` is not\nspecified) or in a file of the given name.\n\n.. code-block:: python\n\n    In[8]: result = %sql SELECT title, totalwords FROM work WHERE genretype = 'c'\n\n    In[9]: result.csv(filename='work.csv')\n\nPostgreSQL features\n-------------------\n\n``psql``-style \"backslash\" `meta-commands`_ commands (``\\d``, ``\\dt``, etc.)\nare provided by `PGSpecial`_.  Example:\n\n.. code-block:: python\n\n    In[9]: %sql \\d\n\n.. _PGSpecial: https://pypi.python.org/pypi/pgspecial\n\n.. _meta-commands: https://www.postgresql.org/docs/9.6/static/app-psql.html#APP-PSQL-META-COMMANDS\n\nInstalling\n----------\n\nInstall the lastest release with::\n\n    pip install ipython-sql\n\nor download from https://github.com/catherinedevlin/ipython-sql and::\n\n    cd ipython-sql\n    sudo python setup.py install\n\nDevelopment\n-----------\n\nhttps://github.com/catherinedevlin/ipython-sql\n\nCredits\n-------\n\n- Matthias Bussonnier for help with configuration\n- Olivier Le Thanh Duong for ``%config`` fixes and improvements\n- Distribute_\n- Buildout_\n- modern-package-template_\n- Mike Wilson for bind variable code\n- Thomas Kluyver and Steve Holden for debugging help\n- Berton Earnshaw for DSN connection syntax\n- Bruno Harbulot for DSN example \n- Andr\u00e9s Celis for SQL Server bugfix\n- Michael Erasmus for DataFrame truth bugfix\n- Noam Finkelstein for README clarification\n- Xiaochuan Yu for `<<` operator, syntax colorization\n- Amjith Ramanujam for PGSpecial and incorporating it here\n- Alexander Maznev for better arg parsing, connections accepting specified creator\n- Jonathan Larkin for configurable displaycon \n- Jared Moore for ``connection-arguments`` support\n- Gilbert Brault for ``--append`` \n- Lucas Zeer for multi-line bugfixes for var substitution, ``<<`` \n- vkk800 for ``--file``\n\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _Buildout: http://www.buildout.org/\n.. _modern-package-template: http://pypi.python.org/pypi/modern-package-template\n\n\nNews\n----\n\n0.1\n~~~\n\n*Release date: 21-Mar-2013*\n\n* Initial release\n\n0.1.1\n~~~~~\n\n*Release date: 29-Mar-2013*\n\n* Release to PyPI\n\n* Results returned as lists\n\n* print(_) to get table form in text console\n\n* set autolimit and text wrap in configuration\n\n\n0.1.2\n~~~~~\n\n*Release date: 29-Mar-2013*\n\n* Python 3 compatibility\n\n* use prettyprint package\n\n* allow multiple SQL per cell\n\n0.2.0\n~~~~~\n\n*Release date: 30-May-2013*\n\n* Accept bind variables (Thanks Mike Wilson!)\n\n0.2.1\n~~~~~\n\n*Release date: 15-June-2013*\n\n* Recognize socket connection strings\n\n* Bugfix - issue 4 (remember existing connections by case)\n\n0.2.2\n~~~~~\n\n*Release date: 30-July-2013*\n\nConverted from an IPython Plugin to an Extension for 1.0 compatibility\n\n0.2.2.1\n~~~~~~~\n\n*Release date: 01-Aug-2013*\n\nDeleted Plugin import left behind in 0.2.2\n\n0.2.3\n~~~~~\n\n*Release date: 20-Sep-2013*\n\n* Contributions from Olivier Le Thanh Duong:\n\n  - SQL errors reported without internal IPython error stack\n\n  - Proper handling of configuration\n\n* Added .DataFrame(), .pie(), .plot(), and .bar() methods to\n  result sets\n\n0.3.0\n~~~~~\n\n*Release date: 13-Oct-2013*\n\n* displaylimit config parameter\n\n* reports number of rows affected by each query\n\n* test suite working again\n\n* dict-style access for result sets by primary key\n\n0.3.1\n~~~~~\n\n* Reporting of number of rows affected configurable with ``feedback``\n\n* Local variables usable as SQL bind variables\n\n0.3.2\n~~~~~\n\n* ``.csv(filename=None)`` method added to result sets\n\n0.3.3\n~~~~~\n\n* Python 3 compatibility restored\n* DSN access supported (thanks Berton Earnshaw)\n\n0.3.4\n~~~~~\n\n* PERSIST pseudo-SQL command added\n\n0.3.5\n~~~~~\n\n* Indentations visible in HTML cells\n* COMMIT each SQL statement immediately - prevent locks\n\n0.3.6\n~~~~~\n\n* Fixed issue #30, commit failures for sqlite (thanks stonebig, jandot)\n\n0.3.7\n~~~~~\n\n* New `column_local_vars` config option submitted by darikg\n* Avoid contaminating user namespace from locals (thanks alope107)\n\n0.3.7.1\n~~~~~~~\n\n* Avoid \"connection busy\" error for SQL Server (thanks Andr\u00e9s Celis)\n\n0.3.8\n~~~~~\n\n* Stop warnings for deprecated use of IPython 3 traitlets in IPython 4 (thanks graphaelli; also stonebig, aebrahim, mccahill)\n* README update for keeping connection info private, from eshilts\n\n0.3.9\n~~~~~\n\n* Fix truth value of DataFrame error (thanks michael-erasmus)\n* `<<` operator (thanks xiaochuanyu)\n* added README example (thanks tanhuil)\n* bugfix in executing column_local_vars (thanks tebeka)\n* pgspecial installation optional (thanks jstoebel and arjoe)\n* conceal passwords in connection strings (thanks jstoebel)\n\n0.3.9\n~~~~~\n\n* Restored Python 2 compatibility (thanks tokenmathguy)\n\n0.4.0\n~~~~~\n\n* Changed most non-SQL commands to argparse arguments (thanks pik)\n* User can specify a creator for connections (thanks pik)\n* Bogus pseudo-SQL command `PERSIST` removed, replaced with `--persist` arg\n* Turn off echo of connection information with `displaycon` in config\n* Consistent support for {} variables (thanks Lucas)\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/ipython-sql", "keywords": "database ipython postgresql mysql", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ipython-sql", "package_url": "https://pypi.org/project/ipython-sql/", "platform": "", "project_url": "https://pypi.org/project/ipython-sql/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/ipython-sql"}, "release_url": "https://pypi.org/project/ipython-sql/0.4.0/", "requires_dist": ["prettytable (<1)", "ipython (>=1.0)", "sqlalchemy (>=0.6.7)", "sqlparse", "six", "ipython-genutils (>=0.1.0)"], "requires_python": "", "summary": "RDBMS access via IPython", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Catherine Devlin, <a href=\"http://catherinedevlin.blogspot.com\" rel=\"nofollow\">http://catherinedevlin.blogspot.com</a></td></tr>\n</tbody>\n</table>\n<p>Introduces a %sql (or %%sql) magic.</p>\n<p>Connect to a database, using <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\" rel=\"nofollow\">SQLAlchemy URL</a> connect strings, then issue SQL\ncommands within IPython or IPython Notebook.</p>\n<img alt=\"screenshot of ipython-sql in the Notebook\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/119cc8696678b925bc7aef97f471e2621dd9d9c4/68747470733a2f2f7261772e6769746875622e636f6d2f636174686572696e656465766c696e2f69707974686f6e2d73716c2f6d61737465722f6578616d706c65732f777269746572732e706e67\" width=\"600px\">\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">sql</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"o\">%%</span><span class=\"n\">sql</span> <span class=\"n\">postgresql</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">will</span><span class=\"p\">:</span><span class=\"n\">longliveliz</span><span class=\"nd\">@localhost</span><span class=\"o\">/</span><span class=\"n\">shakes</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">select</span> <span class=\"o\">*</span> <span class=\"kn\">from</span> <span class=\"nn\">character</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">where</span> <span class=\"n\">abbrev</span> <span class=\"o\">=</span> <span class=\"s1\">'ALICE'</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"p\">[(</span><span class=\"sa\">u</span><span class=\"s1\">'Alice'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'Alice'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'ALICE'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'a lady attending on Princess Katherine'</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">)]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">_</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"n\">charid</span>   <span class=\"n\">charname</span>   <span class=\"n\">abbrev</span>                <span class=\"n\">description</span>                 <span class=\"n\">speechcount</span>\n<span class=\"o\">=================================================================================</span>\n<span class=\"n\">Alice</span>    <span class=\"n\">Alice</span>      <span class=\"n\">ALICE</span>    <span class=\"n\">a</span> <span class=\"n\">lady</span> <span class=\"n\">attending</span> <span class=\"n\">on</span> <span class=\"n\">Princess</span> <span class=\"n\">Katherine</span>   <span class=\"mi\">22</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'charid'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'charname'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'abbrev'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'description'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'speechcount'</span><span class=\"p\">]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"sa\">u</span><span class=\"s1\">'Alice'</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">description</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"sa\">u</span><span class=\"s1\">'a lady attending on Princess Katherine'</span>\n</pre>\n<p>After the first connection, connect info can be omitted:</p>\n<pre>In [8]: %sql select count(*) from work\nOut[8]: [(43L,)]\n</pre>\n<p>Connections to multiple databases can be maintained.  You can refer to\nan existing connection by <a href=\"mailto:username%40database\">username<span>@</span>database</a></p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"o\">%%</span><span class=\"n\">sql</span> <span class=\"n\">will</span><span class=\"nd\">@shakes</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">select</span> <span class=\"n\">charname</span><span class=\"p\">,</span> <span class=\"n\">speechcount</span> <span class=\"kn\">from</span> <span class=\"nn\">character</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">where</span>  <span class=\"n\">speechcount</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">select</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">speechcount</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>                       <span class=\"kn\">from</span> <span class=\"nn\">character</span><span class=\"p\">);</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"p\">[(</span><span class=\"sa\">u</span><span class=\"s1\">'Poet'</span><span class=\"p\">,</span> <span class=\"mi\">733</span><span class=\"p\">)]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span>\n<span class=\"n\">charname</span>   <span class=\"n\">speechcount</span>\n<span class=\"o\">======================</span>\n<span class=\"n\">Poet</span>       <span class=\"mi\">733</span>\n</pre>\n<p>If no connect string is supplied, <tt>%sql</tt> will provide a list of existing connections;\nhowever, if no connections have yet been made and the environment variable <tt>DATABASE_URL</tt>\nis available, that will be used.</p>\n<p>For secure access, you may dynamically access your credentials (e.g. from your system environment or <cite>getpass.getpass</cite>) to avoid storing your password in the notebook itself. Use the <cite>$</cite> before any variable to access it in your <cite>%sql</cite> command.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'SOME_USER'</span><span class=\"p\">)</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span> <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'SOME_PASSWORD'</span><span class=\"p\">)</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span> <span class=\"n\">connection_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"postgresql://</span><span class=\"si\">{user}</span><span class=\"s2\">:</span><span class=\"si\">{password}</span><span class=\"s2\">@localhost/some_database\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">password</span><span class=\"p\">)</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"err\">$</span><span class=\"n\">connection_string</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"sa\">u</span><span class=\"s1\">'Connected: some_user@some_database'</span>\n</pre>\n<p>You may use multiple SQL statements inside a single cell, but you will\nonly see any query results from the last of them, so this really only\nmakes sense for statements with no output</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"o\">%%</span><span class=\"n\">sql</span> <span class=\"n\">sqlite</span><span class=\"p\">:</span><span class=\"o\">//</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span> <span class=\"n\">CREATE</span> <span class=\"n\">TABLE</span> <span class=\"n\">writer</span> <span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"p\">,</span> <span class=\"n\">last_name</span><span class=\"p\">,</span> <span class=\"n\">year_of_death</span><span class=\"p\">);</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span> <span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">writer</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"s1\">'William'</span><span class=\"p\">,</span> <span class=\"s1\">'Shakespeare'</span><span class=\"p\">,</span> <span class=\"mi\">1616</span><span class=\"p\">);</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span> <span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">writer</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"s1\">'Bertold'</span><span class=\"p\">,</span> <span class=\"s1\">'Brecht'</span><span class=\"p\">,</span> <span class=\"mi\">1956</span><span class=\"p\">);</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"p\">[]</span>\n</pre>\n<p>As a convenience, dict-style access for result sets is supported, with the\nleftmost column serving as key, for unique values.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">]:</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">select</span> <span class=\"o\">*</span> <span class=\"kn\">from</span> <span class=\"nn\">work</span>\n<span class=\"mi\">43</span> <span class=\"n\">rows</span> <span class=\"n\">affected</span><span class=\"o\">.</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">]:</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'richard2'</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">]:</span> <span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'richard2'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'Richard II'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'History of Richard II'</span><span class=\"p\">,</span> <span class=\"mi\">1595</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'h'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'Moby'</span><span class=\"p\">,</span> <span class=\"mi\">22411</span><span class=\"p\">,</span> <span class=\"mi\">628</span><span class=\"p\">)</span>\n</pre>\n<p>Results can also be retrieved as an iterator of dictionaries (<tt>result.dicts()</tt>)\nor a single dictionary with a tuple of scalar values per key (<tt>result.dict()</tt>)</p>\n</div>\n<div id=\"variable-substitution\">\n<h2>Variable substitution</h2>\n<p>Bind variables (bind parameters) can be used in the \u201cnamed\u201d (:x) style.\nThe variable names used should be defined in the local namespace.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">]:</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'Countess'</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">select</span> <span class=\"n\">description</span> <span class=\"kn\">from</span> <span class=\"nn\">character</span> <span class=\"n\">where</span> <span class=\"n\">charname</span> <span class=\"o\">=</span> <span class=\"p\">:</span><span class=\"n\">name</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]:</span> <span class=\"p\">[(</span><span class=\"sa\">u</span><span class=\"s1\">'mother to Bertram'</span><span class=\"p\">,)]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">select</span> <span class=\"n\">description</span> <span class=\"kn\">from</span> <span class=\"nn\">character</span> <span class=\"n\">where</span> <span class=\"n\">charname</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">{name}</span><span class=\"s1\">'</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]:</span> <span class=\"p\">[(</span><span class=\"sa\">u</span><span class=\"s1\">'mother to Bertram'</span><span class=\"p\">,)]</span>\n</pre>\n<p>Alternately, <tt>$variable_name</tt> or <tt>{variable_name}</tt> can be\nused to inject variables from the local namespace into the SQL\nstatement before it is formed and passed to the SQL engine.\n(Using <tt>$</tt> and <tt>{}</tt> together, as in <tt>${variable_name}</tt>,\nis not supported.)</p>\n<p>Bind variables are passed through to the SQL engine and can only\nbe used to replace strings passed to SQL.  <tt>$</tt> and <tt>{}</tt> are\nsubstituted before passing to SQL and can be used to form SQL\nstatements dynamically.</p>\n</div>\n<div id=\"assignment\">\n<h2>Assignment</h2>\n<p>Ordinary IPython assignment works for single-line <cite>%sql</cite> queries:</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]:</span> <span class=\"n\">works</span> <span class=\"o\">=</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">SELECT</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">year</span> <span class=\"n\">FROM</span> <span class=\"n\">work</span>\n<span class=\"mi\">43</span> <span class=\"n\">rows</span> <span class=\"n\">affected</span><span class=\"o\">.</span>\n</pre>\n<p>The <cite>&lt;&lt;</cite> operator captures query results in a local variable, and\ncan be used in multi-line <tt>%%sql</tt>:</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">]:</span> <span class=\"o\">%%</span><span class=\"n\">sql</span> <span class=\"n\">works</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">SELECT</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">year</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">FROM</span> <span class=\"n\">work</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"mi\">43</span> <span class=\"n\">rows</span> <span class=\"n\">affected</span><span class=\"o\">.</span>\n<span class=\"n\">Returning</span> <span class=\"n\">data</span> <span class=\"n\">to</span> <span class=\"n\">local</span> <span class=\"n\">variable</span> <span class=\"n\">works</span>\n</pre>\n</div>\n<div id=\"connecting\">\n<h2>Connecting</h2>\n<p>Connection strings are <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\" rel=\"nofollow\">SQLAlchemy URL</a> standard.</p>\n<p>Some example connection strings:</p>\n<pre>mysql+pymysql://scott:tiger@localhost/foo\noracle://scott:tiger@127.0.0.1:1521/sidname\nsqlite://\nsqlite:///foo.db\nmssql+pyodbc://username:password@host/database?driver=SQL+Server+Native+Client+11.0\n</pre>\n<p>Note that <tt>mysql</tt> and <tt>mysql+pymysql</tt> connections (and perhaps others)\ndon\u2019t read your client character set information from .my.cnf.  You need\nto specify it in the connection string:</p>\n<pre>mysql+pymysql://scott:tiger@localhost/foo?charset=utf8\n</pre>\n<p>Note that an <tt>impala</tt> connection with <a href=\"https://github.com/cloudera/impyla\" rel=\"nofollow\">impyla</a>  for HiveServer2 requires disabling autocommit:</p>\n<pre>%config SqlMagic.autocommit=False\n%sql impala://hserverhost:port/default?kerberos_service_name=hive&amp;auth_mechanism=GSSAPI\n</pre>\n<p>Connection arguments not whitelisted by SQLALchemy can be provided as\na flag with (-a|\u2013connection_arguments)the connection string as a JSON string.\nSee <a href=\"https://docs.sqlalchemy.org/en/13/core/engines.html#custom-dbapi-args\" rel=\"nofollow\">SQLAlchemy Args</a>.</p>\n<blockquote>\n%sql \u2013connection_arguments {\u201ctimeout\u201d:10,\u201dmode\u201d:\u201dro\u201d} sqlite:// SELECT * FROM work;\n%sql -a \u2018{\u201ctimeout\u201d:10, \u201cmode\u201d:\u201dro\u201d}\u2019 sqlite:// SELECT * from work;</blockquote>\n<div id=\"dsn-connections\">\n<h3>DSN connections</h3>\n<p>Alternately, you can store connection info in a\nconfiguration file, under a section name chosen to\nrefer to your database.</p>\n<p>For example, if dsn.ini contains</p>\n<blockquote>\n[DB_CONFIG_1]\ndrivername=postgres\nhost=my.remote.host\nport=5433\ndatabase=mydatabase\nusername=myuser\npassword=1234</blockquote>\n<p>then you can</p>\n<blockquote>\n%config SqlMagic.dsn_filename=\u2019./dsn.ini\u2019\n%sql \u2013section DB_CONFIG_1</blockquote>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Query results are loaded as lists, so very large result sets may use up\nyour system\u2019s memory and/or hang your browser.  There is no autolimit\nby default.  However, <cite>autolimit</cite> (if set) limits the size of the result\nset (usually with a <cite>LIMIT</cite> clause in the SQL).  <cite>displaylimit</cite> is similar,\nbut the entire result set is still pulled into memory (for later analysis);\nonly the screen display is truncated.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">config</span> <span class=\"n\">SqlMagic</span>\n<span class=\"n\">SqlMagic</span> <span class=\"n\">options</span>\n<span class=\"o\">--------------</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">autocommit</span><span class=\"o\">=&lt;</span><span class=\"n\">Bool</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n    <span class=\"n\">Set</span> <span class=\"n\">autocommit</span> <span class=\"n\">mode</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">autolimit</span><span class=\"o\">=&lt;</span><span class=\"n\">Int</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n    <span class=\"n\">Automatically</span> <span class=\"n\">limit</span> <span class=\"n\">the</span> <span class=\"n\">size</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">returned</span> <span class=\"n\">result</span> <span class=\"n\">sets</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">autopandas</span><span class=\"o\">=&lt;</span><span class=\"n\">Bool</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"n\">Return</span> <span class=\"n\">Pandas</span> <span class=\"n\">DataFrames</span> <span class=\"n\">instead</span> <span class=\"n\">of</span> <span class=\"n\">regular</span> <span class=\"n\">result</span> <span class=\"n\">sets</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">column_local_vars</span><span class=\"o\">=&lt;</span><span class=\"n\">Bool</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"n\">Return</span> <span class=\"n\">data</span> <span class=\"n\">into</span> <span class=\"n\">local</span> <span class=\"n\">variables</span> <span class=\"kn\">from</span> <span class=\"nn\">column</span> <span class=\"n\">names</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">displaycon</span><span class=\"o\">=&lt;</span><span class=\"n\">Bool</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"n\">Show</span> <span class=\"n\">connection</span> <span class=\"n\">string</span> <span class=\"n\">after</span> <span class=\"n\">execute</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">displaylimit</span><span class=\"o\">=&lt;</span><span class=\"n\">Int</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">None</span>\n    <span class=\"n\">Automatically</span> <span class=\"n\">limit</span> <span class=\"n\">the</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">rows</span> <span class=\"n\">displayed</span> <span class=\"p\">(</span><span class=\"n\">full</span> <span class=\"n\">result</span> <span class=\"nb\">set</span> <span class=\"ow\">is</span> <span class=\"n\">still</span>\n    <span class=\"n\">stored</span><span class=\"p\">)</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">dsn_filename</span><span class=\"o\">=&lt;</span><span class=\"n\">Unicode</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"s1\">'odbc.ini'</span>\n    <span class=\"n\">Path</span> <span class=\"n\">to</span> <span class=\"n\">DSN</span> <span class=\"n\">file</span><span class=\"o\">.</span> <span class=\"n\">When</span> <span class=\"n\">the</span> <span class=\"n\">first</span> <span class=\"n\">argument</span> <span class=\"ow\">is</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"p\">[</span><span class=\"n\">section</span><span class=\"p\">],</span> <span class=\"n\">a</span>\n    <span class=\"n\">sqlalchemy</span> <span class=\"n\">connection</span> <span class=\"n\">string</span> <span class=\"ow\">is</span> <span class=\"n\">formed</span> <span class=\"kn\">from</span> <span class=\"nn\">the</span> <span class=\"n\">matching</span> <span class=\"n\">section</span> <span class=\"ow\">in</span> <span class=\"n\">the</span> <span class=\"n\">DSN</span>\n    <span class=\"n\">file</span><span class=\"o\">.</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">feedback</span><span class=\"o\">=&lt;</span><span class=\"n\">Bool</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"n\">Print</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">rows</span> <span class=\"n\">affected</span> <span class=\"n\">by</span> <span class=\"n\">DML</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">short_errors</span><span class=\"o\">=&lt;</span><span class=\"n\">Bool</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n    <span class=\"n\">Don</span><span class=\"s1\">'t display the full traceback on SQL Programming Error</span>\n<span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">=&lt;</span><span class=\"n\">Unicode</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">Current</span><span class=\"p\">:</span> <span class=\"s1\">'DEFAULT'</span>\n    <span class=\"n\">Set</span> <span class=\"n\">the</span> <span class=\"n\">table</span> <span class=\"n\">printing</span> <span class=\"n\">style</span> <span class=\"n\">to</span> <span class=\"nb\">any</span> <span class=\"n\">of</span> <span class=\"n\">prettytable</span><span class=\"s1\">'s defined styles</span>\n    <span class=\"p\">(</span><span class=\"n\">currently</span> <span class=\"n\">DEFAULT</span><span class=\"p\">,</span> <span class=\"n\">MSWORD_FRIENDLY</span><span class=\"p\">,</span> <span class=\"n\">PLAIN_COLUMNS</span><span class=\"p\">,</span> <span class=\"n\">RANDOM</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">config</span> <span class=\"n\">SqlMagic</span><span class=\"o\">.</span><span class=\"n\">feedback</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<p>Please note: if you have autopandas set to true, the displaylimit option will not apply. You can set the pandas display limit by using the pandas <tt>max_rows</tt> option as described in the <a href=\"http://pandas.pydata.org/pandas-docs/version/0.18.1/options.html#frequently-used-options\" rel=\"nofollow\">pandas documentation</a>.</p>\n</div>\n<div id=\"pandas\">\n<h2>Pandas</h2>\n<p>If you have installed <tt>pandas</tt>, you can use a result set\u2019s\n<tt>.DataFrame()</tt> method</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">character</span> <span class=\"n\">WHERE</span> <span class=\"n\">speechcount</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">dataframe</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">()</span>\n</pre>\n<p>The <tt><span class=\"pre\">--persist</span></tt> argument, with the name of a\nDataFrame object in memory,\nwill create a table name\nin the database from the named DataFrame.\nOr use <tt><span class=\"pre\">--append</span></tt> to add rows to an existing\ntable by that name.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"o\">--</span><span class=\"n\">persist</span> <span class=\"n\">dataframe</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">dataframe</span><span class=\"p\">;</span>\n</pre>\n</div>\n<div id=\"graphing\">\n<h2>Graphing</h2>\n<p>If you have installed <tt>matplotlib</tt>, you can use a result set\u2019s\n<tt>.plot()</tt>, <tt>.pie()</tt>, and <tt>.bar()</tt> methods for quick plotting</p>\n<pre><span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">SELECT</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">totalwords</span> <span class=\"n\">FROM</span> <span class=\"n\">work</span> <span class=\"n\">WHERE</span> <span class=\"n\">genretype</span> <span class=\"o\">=</span> <span class=\"s1\">'c'</span>\n\n<span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n\n<span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">pie</span><span class=\"p\">()</span>\n</pre>\n<img alt=\"pie chart of word count of Shakespeare's comedies\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fc51d9544dff20f44fe967a979c0d5089105ad0/68747470733a2f2f7261772e6769746875622e636f6d2f636174686572696e656465766c696e2f69707974686f6e2d73716c2f6d61737465722f6578616d706c65732f776f7264636f756e742e706e67\">\n</div>\n<div id=\"dumping\">\n<h2>Dumping</h2>\n<p>Result sets come with a <tt>.csv(filename=None)</tt> method.  This generates\ncomma-separated text either as a return value (if <tt>filename</tt> is not\nspecified) or in a file of the given name.</p>\n<pre><span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"o\">%</span><span class=\"n\">sql</span> <span class=\"n\">SELECT</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">totalwords</span> <span class=\"n\">FROM</span> <span class=\"n\">work</span> <span class=\"n\">WHERE</span> <span class=\"n\">genretype</span> <span class=\"o\">=</span> <span class=\"s1\">'c'</span>\n\n<span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">csv</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'work.csv'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"postgresql-features\">\n<h2>PostgreSQL features</h2>\n<p><tt>psql</tt>-style \u201cbackslash\u201d <a href=\"https://www.postgresql.org/docs/9.6/static/app-psql.html#APP-PSQL-META-COMMANDS\" rel=\"nofollow\">meta-commands</a> commands (<tt>\\d</tt>, <tt>\\dt</tt>, etc.)\nare provided by <a href=\"https://pypi.python.org/pypi/pgspecial\" rel=\"nofollow\">PGSpecial</a>.  Example:</p>\n<pre><span class=\"n\">In</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">sql</span> \\<span class=\"n\">d</span>\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Install the lastest release with:</p>\n<pre>pip install ipython-sql\n</pre>\n<p>or download from <a href=\"https://github.com/catherinedevlin/ipython-sql\" rel=\"nofollow\">https://github.com/catherinedevlin/ipython-sql</a> and:</p>\n<pre>cd ipython-sql\nsudo python setup.py install\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p><a href=\"https://github.com/catherinedevlin/ipython-sql\" rel=\"nofollow\">https://github.com/catherinedevlin/ipython-sql</a></p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Matthias Bussonnier for help with configuration</li>\n<li>Olivier Le Thanh Duong for <tt>%config</tt> fixes and improvements</li>\n<li><a href=\"http://pypi.python.org/pypi/distribute\" rel=\"nofollow\">Distribute</a></li>\n<li><a href=\"http://www.buildout.org/\" rel=\"nofollow\">Buildout</a></li>\n<li><a href=\"http://pypi.python.org/pypi/modern-package-template\" rel=\"nofollow\">modern-package-template</a></li>\n<li>Mike Wilson for bind variable code</li>\n<li>Thomas Kluyver and Steve Holden for debugging help</li>\n<li>Berton Earnshaw for DSN connection syntax</li>\n<li>Bruno Harbulot for DSN example</li>\n<li>Andr\u00e9s Celis for SQL Server bugfix</li>\n<li>Michael Erasmus for DataFrame truth bugfix</li>\n<li>Noam Finkelstein for README clarification</li>\n<li>Xiaochuan Yu for <cite>&lt;&lt;</cite> operator, syntax colorization</li>\n<li>Amjith Ramanujam for PGSpecial and incorporating it here</li>\n<li>Alexander Maznev for better arg parsing, connections accepting specified creator</li>\n<li>Jonathan Larkin for configurable displaycon</li>\n<li>Jared Moore for <tt><span class=\"pre\">connection-arguments</span></tt> support</li>\n<li>Gilbert Brault for <tt><span class=\"pre\">--append</span></tt></li>\n<li>Lucas Zeer for multi-line bugfixes for var substitution, <tt>&lt;&lt;</tt></li>\n<li>vkk800 for <tt><span class=\"pre\">--file</span></tt></li>\n</ul>\n</div>\n<div id=\"news\">\n<h2>News</h2>\n<div id=\"id2\">\n<h3>0.1</h3>\n<p><em>Release date: 21-Mar-2013</em></p>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.1</h3>\n<p><em>Release date: 29-Mar-2013</em></p>\n<ul>\n<li>Release to PyPI</li>\n<li>Results returned as lists</li>\n<li>print(_) to get table form in text console</li>\n<li>set autolimit and text wrap in configuration</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.2</h3>\n<p><em>Release date: 29-Mar-2013</em></p>\n<ul>\n<li>Python 3 compatibility</li>\n<li>use prettyprint package</li>\n<li>allow multiple SQL per cell</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.0</h3>\n<p><em>Release date: 30-May-2013</em></p>\n<ul>\n<li>Accept bind variables (Thanks Mike Wilson!)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2.1</h3>\n<p><em>Release date: 15-June-2013</em></p>\n<ul>\n<li>Recognize socket connection strings</li>\n<li>Bugfix - issue 4 (remember existing connections by case)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.2.2</h3>\n<p><em>Release date: 30-July-2013</em></p>\n<p>Converted from an IPython Plugin to an Extension for 1.0 compatibility</p>\n</div>\n<div id=\"id8\">\n<h3>0.2.2.1</h3>\n<p><em>Release date: 01-Aug-2013</em></p>\n<p>Deleted Plugin import left behind in 0.2.2</p>\n</div>\n<div id=\"id9\">\n<h3>0.2.3</h3>\n<p><em>Release date: 20-Sep-2013</em></p>\n<ul>\n<li>Contributions from Olivier Le Thanh Duong:<ul>\n<li>SQL errors reported without internal IPython error stack</li>\n<li>Proper handling of configuration</li>\n</ul>\n</li>\n<li>Added .DataFrame(), .pie(), .plot(), and .bar() methods to\nresult sets</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.3.0</h3>\n<p><em>Release date: 13-Oct-2013</em></p>\n<ul>\n<li>displaylimit config parameter</li>\n<li>reports number of rows affected by each query</li>\n<li>test suite working again</li>\n<li>dict-style access for result sets by primary key</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.3.1</h3>\n<ul>\n<li>Reporting of number of rows affected configurable with <tt>feedback</tt></li>\n<li>Local variables usable as SQL bind variables</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.3.2</h3>\n<ul>\n<li><tt>.csv(filename=None)</tt> method added to result sets</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.3.3</h3>\n<ul>\n<li>Python 3 compatibility restored</li>\n<li>DSN access supported (thanks Berton Earnshaw)</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.3.4</h3>\n<ul>\n<li>PERSIST pseudo-SQL command added</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.3.5</h3>\n<ul>\n<li>Indentations visible in HTML cells</li>\n<li>COMMIT each SQL statement immediately - prevent locks</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.3.6</h3>\n<ul>\n<li>Fixed issue #30, commit failures for sqlite (thanks stonebig, jandot)</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.3.7</h3>\n<ul>\n<li>New <cite>column_local_vars</cite> config option submitted by darikg</li>\n<li>Avoid contaminating user namespace from locals (thanks alope107)</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.3.7.1</h3>\n<ul>\n<li>Avoid \u201cconnection busy\u201d error for SQL Server (thanks Andr\u00e9s Celis)</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.3.8</h3>\n<ul>\n<li>Stop warnings for deprecated use of IPython 3 traitlets in IPython 4 (thanks graphaelli; also stonebig, aebrahim, mccahill)</li>\n<li>README update for keeping connection info private, from eshilts</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.3.9</h3>\n<ul>\n<li>Fix truth value of DataFrame error (thanks michael-erasmus)</li>\n<li><cite>&lt;&lt;</cite> operator (thanks xiaochuanyu)</li>\n<li>added README example (thanks tanhuil)</li>\n<li>bugfix in executing column_local_vars (thanks tebeka)</li>\n<li>pgspecial installation optional (thanks jstoebel and arjoe)</li>\n<li>conceal passwords in connection strings (thanks jstoebel)</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.3.9</h3>\n<ul>\n<li>Restored Python 2 compatibility (thanks tokenmathguy)</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>0.4.0</h3>\n<ul>\n<li>Changed most non-SQL commands to argparse arguments (thanks pik)</li>\n<li>User can specify a creator for connections (thanks pik)</li>\n<li>Bogus pseudo-SQL command <cite>PERSIST</cite> removed, replaced with <cite>\u2013persist</cite> arg</li>\n<li>Turn off echo of connection information with <cite>displaycon</cite> in config</li>\n<li>Consistent support for {} variables (thanks Lucas)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7151998, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "57502c95ec777e3b8a0e499e1ed9dcd5", "sha256": "a643bb9978ea67f4d519f10bbdd533fb1882a5371b0ea821884608090a84a8f3"}, "downloads": -1, "filename": "ipython_sql-0.1.2-py2.7.egg", "has_sig": false, "md5_digest": "57502c95ec777e3b8a0e499e1ed9dcd5", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9987, "upload_time": "2013-03-29T17:57:39", "upload_time_iso_8601": "2013-03-29T17:57:39.700382Z", "url": "https://files.pythonhosted.org/packages/43/bb/6cc63d2cba5409801770bfab7cc7ecdcab6249d61cf9914cb8c7c9d9d1a5/ipython_sql-0.1.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "da9f038fef60b24220379ce09b284143", "sha256": "2738c7cfd09f693fc1c8930b4f953c6da522c4ded50a949790b787bc79f5a0be"}, "downloads": -1, "filename": "ipython_sql-0.1.2-py3.2.egg", "has_sig": false, "md5_digest": "da9f038fef60b24220379ce09b284143", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 10268, "upload_time": "2013-03-29T17:57:03", "upload_time_iso_8601": "2013-03-29T17:57:03.488721Z", "url": "https://files.pythonhosted.org/packages/2a/d6/df0f305ab0130f4374a8166959cf4ae7f261bdae0c671319252c0eb27472/ipython_sql-0.1.2-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "95aca091c27a56f05e21e7044a4ee8e2", "sha256": "45602466b9d99a86026dbb2ae801b4cba61bd3962342a70299833d35dc1b12dd"}, "downloads": -1, "filename": "ipython-sql-0.1.2.tar.gz", "has_sig": false, "md5_digest": "95aca091c27a56f05e21e7044a4ee8e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5498, "upload_time": "2013-03-29T17:57:00", "upload_time_iso_8601": "2013-03-29T17:57:00.548810Z", "url": "https://files.pythonhosted.org/packages/7b/99/7f717ecae64c942e7ab984c217f5d9ab2662dde47c62474f78a475a95f30/ipython-sql-0.1.2.tar.gz", "yanked": false}], "0.1.2.1": [{"comment_text": "", "digests": {"md5": "3ae3e4ba48658c89ea2b1c916e50633d", "sha256": "1ab3c9517118e79c80196bc9aec689696b6f7c64bcc1779db137c207292d21ce"}, "downloads": -1, "filename": "ipython_sql-0.1.2.1-py3.2.egg", "has_sig": false, "md5_digest": "3ae3e4ba48658c89ea2b1c916e50633d", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 10267, "upload_time": "2013-03-29T18:02:39", "upload_time_iso_8601": "2013-03-29T18:02:39.041590Z", "url": "https://files.pythonhosted.org/packages/fb/ef/64635e4091fb34e0fba6f106fb080f5af6a083c11b00e50e2c17d73b13fa/ipython_sql-0.1.2.1-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "41d7f1911dc0b657396dab560e696609", "sha256": "5aa385966de08f91fb436a5797d1870b23b31a70cf555dc0213a2c1cf9ee6d97"}, "downloads": -1, "filename": "ipython-sql-0.1.2.1.tar.gz", "has_sig": false, "md5_digest": "41d7f1911dc0b657396dab560e696609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5527, "upload_time": "2013-03-29T18:02:36", "upload_time_iso_8601": "2013-03-29T18:02:36.508661Z", "url": "https://files.pythonhosted.org/packages/91/d7/7f6e891b3fbf4c7988b8a57f0cfec13c3b5f8a006ccacdd6742c1a90d6fd/ipython-sql-0.1.2.1.tar.gz", "yanked": false}], "0.1.2.2": [{"comment_text": "", "digests": {"md5": "0e086bdd98a9b03539392de2856aa18a", "sha256": "435de8861aa7e9beba1c7bea4ae73836484e29fe4187114b7a3e67bd21abe6b2"}, "downloads": -1, "filename": "ipython_sql-0.1.2.2-py2.6.egg", "has_sig": false, "md5_digest": "0e086bdd98a9b03539392de2856aa18a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10063, "upload_time": "2013-03-29T18:17:46", "upload_time_iso_8601": "2013-03-29T18:17:46.648544Z", "url": "https://files.pythonhosted.org/packages/98/49/d8e4f68058f00d2030bc7c7b181fa59bf05c540f147b4b680bbd310046e0/ipython_sql-0.1.2.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d226913c3f41c7194bccb600657553f8", "sha256": "2ba51bc2a654f9fc4413924cee8e7e70a96a0d399541e9f8a295d2bf52919a9e"}, "downloads": -1, "filename": "ipython_sql-0.1.2.2-py2.7.egg", "has_sig": false, "md5_digest": "d226913c3f41c7194bccb600657553f8", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10031, "upload_time": "2013-03-29T18:17:58", "upload_time_iso_8601": "2013-03-29T18:17:58.862901Z", "url": "https://files.pythonhosted.org/packages/01/bf/49a11dad4f607c08295daf5cf69d4a6938fc86c83bc6154f2429ab4107a1/ipython_sql-0.1.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7010b37be22d809cc5204cdcf154d0e", "sha256": "2aac3235d09a36b244f40d5c9eb8b4a9ffa2ab6bafd4ae2c3e470bf6d811954f"}, "downloads": -1, "filename": "ipython_sql-0.1.2.2-py3.2.egg", "has_sig": false, "md5_digest": "f7010b37be22d809cc5204cdcf154d0e", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 10291, "upload_time": "2013-03-29T18:05:09", "upload_time_iso_8601": "2013-03-29T18:05:09.747367Z", "url": "https://files.pythonhosted.org/packages/29/e9/a5736811dc942f99a61e10b21cb36388c8bbc13c0f5369ce88ecd89a4cf4/ipython_sql-0.1.2.2-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c9735093197a7bd05824692a9171c1b", "sha256": "25e5681185fea439e8fb7829c78d08c7ca8b0af5157bf74b2a497c9144d24d01"}, "downloads": -1, "filename": "ipython-sql-0.1.2.2.tar.gz", "has_sig": false, "md5_digest": "1c9735093197a7bd05824692a9171c1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5554, "upload_time": "2013-03-29T18:05:07", "upload_time_iso_8601": "2013-03-29T18:05:07.383340Z", "url": "https://files.pythonhosted.org/packages/9e/69/7f5d210cb3957bcc14598dfe190fa54a8b40560bcb12d7c01586f61c3c08/ipython-sql-0.1.2.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e353a2f301a675fe9f88524cde2763ab", "sha256": "ebf68c05da7dffb596eb741c3793777a5da0edc6e8765064a1726bb63d1694b0"}, "downloads": -1, "filename": "ipython_sql-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "e353a2f301a675fe9f88524cde2763ab", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10534, "upload_time": "2013-05-30T21:06:02", "upload_time_iso_8601": "2013-05-30T21:06:02.820980Z", "url": "https://files.pythonhosted.org/packages/b6/c5/ad3c1a375710a92d5018c0b6a15776a36f03af76474b3c6c3c6bccbee83a/ipython_sql-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "141abc2d2180f5902b0df333b04d10b2", "sha256": "112a2bddf4543ca7557018fe6a70caec9d8dfee1a8978829d34a7702df81c369"}, "downloads": -1, "filename": "ipython-sql-0.2.0.tar.gz", "has_sig": false, "md5_digest": "141abc2d2180f5902b0df333b04d10b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6072, "upload_time": "2013-05-30T21:05:59", "upload_time_iso_8601": "2013-05-30T21:05:59.223193Z", "url": "https://files.pythonhosted.org/packages/60/c6/5dd3fae513d00d19c036720dc356082e3e049125f1670663fb17f1717f1e/ipython-sql-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "09b339286f6618ff963c6332a9c78d86", "sha256": "5c65a6f71b6dce55d4d43349d2a83faa1f4728ba87abe74f5b4ebce75b0e1fe4"}, "downloads": -1, "filename": "ipython_sql-0.2.1-py3.3.egg", "has_sig": false, "md5_digest": "09b339286f6618ff963c6332a9c78d86", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 11197, "upload_time": "2013-06-15T17:49:56", "upload_time_iso_8601": "2013-06-15T17:49:56.133355Z", "url": "https://files.pythonhosted.org/packages/f3/f5/db1c2b7614fff55bff4360c99a5f829b6aa530261ea98c2c2d6bc04b9b41/ipython_sql-0.2.1-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1ba644e6d69970088bfb611301934e9", "sha256": "4a911b448d2625d230de4b8425257c1875b2e962d7fca51f548323b974a81978"}, "downloads": -1, "filename": "ipython-sql-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f1ba644e6d69970088bfb611301934e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6348, "upload_time": "2013-06-15T17:49:53", "upload_time_iso_8601": "2013-06-15T17:49:53.494092Z", "url": "https://files.pythonhosted.org/packages/46/26/cc946f153040d2b64471f8af6894f7b22fbf23ed22bdb218773af657d3ee/ipython-sql-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "463ad6f28e6006c15a4a846301007ff8", "sha256": "f26cfc22949985950d4403dc24f36a304233439951085d3abe5dec8a03ef2ee2"}, "downloads": -1, "filename": "ipython_sql-0.2.2-py2.7.egg", "has_sig": false, "md5_digest": "463ad6f28e6006c15a4a846301007ff8", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10276, "upload_time": "2013-07-30T04:41:24", "upload_time_iso_8601": "2013-07-30T04:41:24.838942Z", "url": "https://files.pythonhosted.org/packages/f0/fe/09ce06b43a5b22dbb3da5923beb4dbf1b73479a34527dd1db365acc9cadf/ipython_sql-0.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "db37edfc9a46684a5d879bd18ec788aa", "sha256": "08cb478ca3c8cab440a9cb9ea9270fd35677777468d375551866082253bdc762"}, "downloads": -1, "filename": "ipython_sql-0.2.2-py3.3.egg", "has_sig": false, "md5_digest": "db37edfc9a46684a5d879bd18ec788aa", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 10671, "upload_time": "2013-07-30T04:41:15", "upload_time_iso_8601": "2013-07-30T04:41:15.652019Z", "url": "https://files.pythonhosted.org/packages/c5/42/fd4ca91bce85713dcc897cb0a1a2b1aeb87141a1153e9666ce1795087db3/ipython_sql-0.2.2-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b74cc5220d135982f9d5d680d39cf73", "sha256": "c5bda13560f8e51b3dd21f1e3493c88fecc04ad44478931eaaa538b77de2d327"}, "downloads": -1, "filename": "ipython-sql-0.2.2.tar.gz", "has_sig": false, "md5_digest": "2b74cc5220d135982f9d5d680d39cf73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6234, "upload_time": "2013-07-30T04:41:12", "upload_time_iso_8601": "2013-07-30T04:41:12.558251Z", "url": "https://files.pythonhosted.org/packages/09/ba/e715762589025ceff0ae2b1cb8c3535a724cd2f344b664829037b3750afb/ipython-sql-0.2.2.tar.gz", "yanked": false}], "0.2.2.1": [{"comment_text": "", "digests": {"md5": "bcd9afa1a9e3116a07851fad1e3377bf", "sha256": "7356d4fa38ada4f362effd1b273fce812881010d04af034abe811881ff9a0751"}, "downloads": -1, "filename": "ipython_sql-0.2.2.1-py2.7.egg", "has_sig": false, "md5_digest": "bcd9afa1a9e3116a07851fad1e3377bf", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10270, "upload_time": "2013-08-01T19:49:59", "upload_time_iso_8601": "2013-08-01T19:49:59.735046Z", "url": "https://files.pythonhosted.org/packages/2c/ec/61836d41ce2380ba189fb15888dc1f6bbf62d99322c8aed1a99d6eaa159c/ipython_sql-0.2.2.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "37e5616cb57091c4898fbbf52398bb05", "sha256": "09fab902ebf950efbed7071b64c6a326cf0804827739db4f082423a3fab327c3"}, "downloads": -1, "filename": "ipython-sql-0.2.2.1.tar.gz", "has_sig": false, "md5_digest": "37e5616cb57091c4898fbbf52398bb05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6267, "upload_time": "2013-08-01T19:49:57", "upload_time_iso_8601": "2013-08-01T19:49:57.068056Z", "url": "https://files.pythonhosted.org/packages/c7/43/594086310c105187ff65758135967dd77d47c70e81d8c2046bfe7aebac4a/ipython-sql-0.2.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e82b908271314b5a56f93102f9db8c6a", "sha256": "2002510b9f423bc910f9f25a8867032a8f766bd286d7f206a9fd2c69bacf47e1"}, "downloads": -1, "filename": "ipython_sql-0.2.3-py2.7.egg", "has_sig": false, "md5_digest": "e82b908271314b5a56f93102f9db8c6a", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 16799, "upload_time": "2013-09-21T02:48:33", "upload_time_iso_8601": "2013-09-21T02:48:33.218495Z", "url": "https://files.pythonhosted.org/packages/fa/40/6c69f433570335686724c192ec70046bc0051eb044377e9f5350fcac34f7/ipython_sql-0.2.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bae8e264d813eb5340b29b2ed0c841ad", "sha256": "97951421413f6cb4782506ece64fbd20729f8ae2b971996659f5c23e7abcf0b6"}, "downloads": -1, "filename": "ipython_sql-0.2.3-py3.3.egg", "has_sig": false, "md5_digest": "bae8e264d813eb5340b29b2ed0c841ad", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 17577, "upload_time": "2013-09-21T02:48:45", "upload_time_iso_8601": "2013-09-21T02:48:45.084218Z", "url": "https://files.pythonhosted.org/packages/5d/be/a5b80cd8645747ad6dac97decaf082c71ca7b0ed9c83f408b26718f4f499/ipython_sql-0.2.3-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3025a5c39db36a0e2688e43f5274521", "sha256": "13c409d8a346c835bb9ae9efa8751265d20887bade19100cfd29d6db01a6fbd3"}, "downloads": -1, "filename": "ipython-sql-0.2.3.tar.gz", "has_sig": false, "md5_digest": "e3025a5c39db36a0e2688e43f5274521", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8556, "upload_time": "2013-09-21T02:48:19", "upload_time_iso_8601": "2013-09-21T02:48:19.652135Z", "url": "https://files.pythonhosted.org/packages/3c/47/bdcee08bc074f3f7fa355debf0dcac522a99882e4bf8ecd600d13926eaae/ipython-sql-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "71ac053a132444140e9622899906c3c7", "sha256": "5bb07386a12c45e7a5b000f4575260c84f98e2ca3667d28184d119810a48e026"}, "downloads": -1, "filename": "ipython_sql-0.3.0-py2.7.egg", "has_sig": false, "md5_digest": "71ac053a132444140e9622899906c3c7", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 18468, "upload_time": "2013-10-14T03:44:06", "upload_time_iso_8601": "2013-10-14T03:44:06.761767Z", "url": "https://files.pythonhosted.org/packages/3c/b8/ba6e77837b125da28867969001fb0bb93bbb279edf40c0177d6450b14164/ipython_sql-0.3.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7d5335fc45b515fc3387cbbdb689aef", "sha256": "7260509db88620e3f32dfd13364ec269df4e7de3c0a3d04477f454ab9a835be5"}, "downloads": -1, "filename": "ipython-sql-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c7d5335fc45b515fc3387cbbdb689aef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12013, "upload_time": "2013-10-14T03:44:03", "upload_time_iso_8601": "2013-10-14T03:44:03.320235Z", "url": "https://files.pythonhosted.org/packages/33/fd/c8b23e69108804b4a555929ac7fb2e55d5e01a342e52e7597156a6b55295/ipython-sql-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "308e855a153ad9cf2b5d7b512a1c803d", "sha256": "499e1448b984eb341a6568a363dc743503a8940b087de7c65e5156608e14313a"}, "downloads": -1, "filename": "ipython_sql-0.3.1-py2.7.egg", "has_sig": false, "md5_digest": "308e855a153ad9cf2b5d7b512a1c803d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 18792, "upload_time": "2013-11-13T19:25:04", "upload_time_iso_8601": "2013-11-13T19:25:04.092520Z", "url": "https://files.pythonhosted.org/packages/e2/09/faa8b695a73170cbad2f731348815634f32c42f4d2b4c63dc16bdf24b82b/ipython_sql-0.3.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6435b2238e884371a5d6da7cc79c4ed6", "sha256": "f96b4a014ba00e8ff12333e3271dfbba32d648e9d5a23d9782c438fb3e626863"}, "downloads": -1, "filename": "ipython-sql-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6435b2238e884371a5d6da7cc79c4ed6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12441, "upload_time": "2013-11-13T19:25:01", "upload_time_iso_8601": "2013-11-13T19:25:01.226637Z", "url": "https://files.pythonhosted.org/packages/b3/26/7baa776ab2dcb26e545d5a2a5634ef8e7ac4e544ceddd0baa447f8b7101b/ipython-sql-0.3.1.tar.gz", "yanked": false}], "0.3.3": [], "0.3.4": [{"comment_text": "", "digests": {"md5": "ee0ed6401618dfde4eb51de5cece726b", "sha256": "130773c38522a1e0989c046e559649f7d71afbd171898540a05a8a88ed97206b"}, "downloads": -1, "filename": "ipython_sql-0.3.4-py3.4.egg", "has_sig": false, "md5_digest": "ee0ed6401618dfde4eb51de5cece726b", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 23303, "upload_time": "2014-08-26T10:39:36", "upload_time_iso_8601": "2014-08-26T10:39:36.069257Z", "url": "https://files.pythonhosted.org/packages/56/57/1567169a644215cab0029ad0f15df84097b224c5359d000cbfecef2b5637/ipython_sql-0.3.4-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a68076f11ae62197a16ed4000dcbe8d3", "sha256": "a1f601d9a22d77524b25996d5f8670f47122521f4593272f6f30015ad47738f1"}, "downloads": -1, "filename": "ipython-sql-0.3.4.tar.gz", "has_sig": false, "md5_digest": "a68076f11ae62197a16ed4000dcbe8d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11243, "upload_time": "2014-08-26T10:39:32", "upload_time_iso_8601": "2014-08-26T10:39:32.421023Z", "url": "https://files.pythonhosted.org/packages/a4/b5/48b9c99456c362efd7436f6dcab9bf7c3dd95887231bab72e2d51d5d0a18/ipython-sql-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "466fb69311ce1a7beef942ef94280cf8", "sha256": "a29fe075d6c993b110b85a3c8956bbdf294251c96dce2c087af9c9ffc87a0774"}, "downloads": -1, "filename": "ipython_sql-0.3.5-py3.4.egg", "has_sig": false, "md5_digest": "466fb69311ce1a7beef942ef94280cf8", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 24017, "upload_time": "2015-01-30T20:00:53", "upload_time_iso_8601": "2015-01-30T20:00:53.243066Z", "url": "https://files.pythonhosted.org/packages/da/24/3c4fd1119818c56a7b94bb7e61485b2df2e527bcb02315ca31c74db9e9f1/ipython_sql-0.3.5-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e28cc41c6321c6142a4a6ee4049859a7", "sha256": "92d2129b64f7ca6a02963e720cf89d1c476c05a9c3bd0d4c0beaf8033cd93227"}, "downloads": -1, "filename": "ipython-sql-0.3.5.tar.gz", "has_sig": false, "md5_digest": "e28cc41c6321c6142a4a6ee4049859a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11644, "upload_time": "2015-01-30T20:00:49", "upload_time_iso_8601": "2015-01-30T20:00:49.283755Z", "url": "https://files.pythonhosted.org/packages/a6/74/a8cbe7b1510794cd398771a054d2f21ebd4b4753e1ea03656d195cf1af91/ipython-sql-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "ed0d93e8ebdd027fad5940924ecab2c2", "sha256": "9fdad528eeef10cbbd1384a3ee72b86bf3f0ecf4701858f8aa70ac5420db9542"}, "downloads": -1, "filename": "ipython_sql-0.3.6-py3.4.egg", "has_sig": false, "md5_digest": "ed0d93e8ebdd027fad5940924ecab2c2", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 24258, "upload_time": "2015-05-20T01:14:43", "upload_time_iso_8601": "2015-05-20T01:14:43.835788Z", "url": "https://files.pythonhosted.org/packages/e7/c7/8af20eb8c962e73cb918431903ef7fadd8ef6a5fd336e0d6a1384343e6ed/ipython_sql-0.3.6-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4feb00ac5806d7640b2545a43974766", "sha256": "7af7e5342a86d79d4d3f73211c6aca076a2c41f0b702590e5515552af169b47b"}, "downloads": -1, "filename": "ipython-sql-0.3.6.tar.gz", "has_sig": false, "md5_digest": "d4feb00ac5806d7640b2545a43974766", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11812, "upload_time": "2015-05-20T01:14:39", "upload_time_iso_8601": "2015-05-20T01:14:39.016930Z", "url": "https://files.pythonhosted.org/packages/80/6f/f0db647035f805a50f99bc28975657a12d7f425bf09c89992ee5fd0848ba/ipython-sql-0.3.6.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "2565736f946dbe2629ea1688191b3146", "sha256": "53f083b0a478bf534b5da52cd5baf49c4c235fe1b6962d508253961894f885a6"}, "downloads": -1, "filename": "ipython_sql-0.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "2565736f946dbe2629ea1688191b3146", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17960, "upload_time": "2016-10-09T23:05:07", "upload_time_iso_8601": "2016-10-09T23:05:07.460780Z", "url": "https://files.pythonhosted.org/packages/74/53/eca4c2d302ba3623003cb79360f24691e9828efe18a0478fc63a784affee/ipython_sql-0.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89080b1bd4f383006a07164673af5d0d", "sha256": "62f3689f4e2b4071eb9fd743386f358bfca8f76c942d50abf306914580fc149d"}, "downloads": -1, "filename": "ipython-sql-0.3.8.tar.gz", "has_sig": false, "md5_digest": "89080b1bd4f383006a07164673af5d0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12770, "upload_time": "2016-10-09T23:05:10", "upload_time_iso_8601": "2016-10-09T23:05:10.047687Z", "url": "https://files.pythonhosted.org/packages/4b/4d/d62e65d8f501a305f45ff0b5a317163b742ea0c61e01ae85595ef5d1a54f/ipython-sql-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "ad353d79070b251b160ff428a15c5d9e", "sha256": "bbeebb6c0b520350cc8fc86061c202ecc52ba8525a883541f35578513b43f112"}, "downloads": -1, "filename": "ipython_sql-0.3.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ad353d79070b251b160ff428a15c5d9e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21606, "upload_time": "2018-04-06T02:20:51", "upload_time_iso_8601": "2018-04-06T02:20:51.779763Z", "url": "https://files.pythonhosted.org/packages/ab/df/427e7cf05ffc67e78672ad57dce2436c1e825129033effe6fcaf804d0c60/ipython_sql-0.3.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69407492ac7fcb92520e10d24b3b3194", "sha256": "7187f6371f38b89d8fb63c2c7c4233d9000fb53b460dae79e4a359df366cc3ed"}, "downloads": -1, "filename": "ipython-sql-0.3.9.tar.gz", "has_sig": false, "md5_digest": "69407492ac7fcb92520e10d24b3b3194", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18028, "upload_time": "2018-04-06T02:20:53", "upload_time_iso_8601": "2018-04-06T02:20:53.649851Z", "url": "https://files.pythonhosted.org/packages/83/ed/f6c8ece48f0f10a7543c971cdb1a62e6f91b374e31f6b579b7a37fb0a6a3/ipython-sql-0.3.9.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "cb43cb80967b1778360f443e183e4f8f", "sha256": "57b5be9f27809cdcc9c20e1077e0a5c5a9d7e4ae6328cbb83b8bede160b819e9"}, "downloads": -1, "filename": "ipython_sql-0.4.0-py3.8.egg", "has_sig": false, "md5_digest": "cb43cb80967b1778360f443e183e4f8f", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 34413, "upload_time": "2020-05-02T15:29:58", "upload_time_iso_8601": "2020-05-02T15:29:58.347159Z", "url": "https://files.pythonhosted.org/packages/98/11/cf7b3f368b76216f16aa518cb37ac6f3b2c06ca0e088229b747469634ff0/ipython_sql-0.4.0-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce1d6156d4a0dac599e0d187d8cc61d8", "sha256": "7f93dbde77417af6647543558f7c71a90007e68d1c646868e74f4482415000c7"}, "downloads": -1, "filename": "ipython_sql-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce1d6156d4a0dac599e0d187d8cc61d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19122, "upload_time": "2020-05-02T15:29:56", "upload_time_iso_8601": "2020-05-02T15:29:56.511330Z", "url": "https://files.pythonhosted.org/packages/ab/3d/0d38357c620df31cebb056ca1804027112e5c008f4c2c0e16d879996ad9f/ipython_sql-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06a077fc2ff22ad8436d8e043ac2c6c4", "sha256": "3e888e59bf57277cbd6f383cb232858b2d7c71219e5749257128f16d9857e46c"}, "downloads": -1, "filename": "ipython-sql-0.4.0.tar.gz", "has_sig": false, "md5_digest": "06a077fc2ff22ad8436d8e043ac2c6c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21570, "upload_time": "2020-05-02T15:29:59", "upload_time_iso_8601": "2020-05-02T15:29:59.971288Z", "url": "https://files.pythonhosted.org/packages/f9/6a/286fa8e95db0567b50e2e207f9e45d65223b51b43fc5614729e4275c074b/ipython-sql-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb43cb80967b1778360f443e183e4f8f", "sha256": "57b5be9f27809cdcc9c20e1077e0a5c5a9d7e4ae6328cbb83b8bede160b819e9"}, "downloads": -1, "filename": "ipython_sql-0.4.0-py3.8.egg", "has_sig": false, "md5_digest": "cb43cb80967b1778360f443e183e4f8f", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 34413, "upload_time": "2020-05-02T15:29:58", "upload_time_iso_8601": "2020-05-02T15:29:58.347159Z", "url": "https://files.pythonhosted.org/packages/98/11/cf7b3f368b76216f16aa518cb37ac6f3b2c06ca0e088229b747469634ff0/ipython_sql-0.4.0-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce1d6156d4a0dac599e0d187d8cc61d8", "sha256": "7f93dbde77417af6647543558f7c71a90007e68d1c646868e74f4482415000c7"}, "downloads": -1, "filename": "ipython_sql-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce1d6156d4a0dac599e0d187d8cc61d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19122, "upload_time": "2020-05-02T15:29:56", "upload_time_iso_8601": "2020-05-02T15:29:56.511330Z", "url": "https://files.pythonhosted.org/packages/ab/3d/0d38357c620df31cebb056ca1804027112e5c008f4c2c0e16d879996ad9f/ipython_sql-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06a077fc2ff22ad8436d8e043ac2c6c4", "sha256": "3e888e59bf57277cbd6f383cb232858b2d7c71219e5749257128f16d9857e46c"}, "downloads": -1, "filename": "ipython-sql-0.4.0.tar.gz", "has_sig": false, "md5_digest": "06a077fc2ff22ad8436d8e043ac2c6c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21570, "upload_time": "2020-05-02T15:29:59", "upload_time_iso_8601": "2020-05-02T15:29:59.971288Z", "url": "https://files.pythonhosted.org/packages/f9/6a/286fa8e95db0567b50e2e207f9e45d65223b51b43fc5614729e4275c074b/ipython-sql-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:23 2020"}