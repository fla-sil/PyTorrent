{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3"], "description": "\n# GoBattleSim-Python\n\nTools to play around with [GoBattleSim-Engine](https://github.com/biowpn/GoBattleSim-Engine), including GameMaster parser & PokeQuery builder.\n\n\n## Prerequisites\n\n64-bit Windows\n\n64-bit Python 3.5+\n\n## Installing\n\n```\npip install gobattlesim\n```\n\nI'll introduce each module by a step-by-step example of generating a **kanto starter battle matrix** from raw GAME MASTER.\n\n## Module: Game Master\n\nThe official Game Master [GAME_MASTER.json](game_master/GAME_MASTER.json) can be found in online resources such as [this repository](https://github.com/pokemongo-dev-contrib/pokemongo-game-master).\n\nLet's make the big and heavy Game Master more organized:\n\n```\npython -m gobattlesim.GameMaster game_master/GAME_MASTER.json -o examples/gbs_game_master.json\n```\n\nThe result [gbs_game_master.json](examples/gbs_game_master.json) can be used to configure GoBattleSim Engine.\n\n## Module: PokeQuery\n\nWe usually simulate many combinations of Pokemon and Move at a time (batch simulation). Specifying each one of them by hand could sometimes be very tedious. Module `PokeQuery` is here to help. It generates such combinations based on special queries (let's called them `PokeQuery`), which works much like the in-game search bar.\n\nIn our example, we can do:\n\n```\npython -m gobattlesim.PokeQuery \"(charmander,bulbasaur,squirtle) & !(purified,shadow,fall,norm)\" \"*\" \"*\" -c examples/gbs_game_master.json -o examples/kanto_starters.csv\n```\n\n- The nasty term \"`& !(purified,shadow,fall,norm)`\" is used to filter out those special forms, leaving only the OG starters.\n\n- \"`*`\" matches all moves in the Pokemon's movepool.\n\n- \"`-c examples/gbs_game_master.json`\" uses our Game Master from the previous step.\n\n- \"`-o examples/kanto_starters.csv`\" saves the generated Pokemon list to the file we desire. Other format options are available; run with \"`-h`\" for details.\n\n## Module: Battle Matrix\n\nGreat, now we have species and moves information ready, but we are still missing the Pokemon stats (attack, defense, maxHP). Our next Module `Matrix` can derive stats for each Pokemon based on the targe PvP league.\n\nLet's do:\n\n```\npython -m gobattlesim.Matrix examples/kanto_starters.csv -c examples/gbs_game_master.json --league great --pokemon -o examples/kanto_starters_with_stats.csv\n```\n\n- \"`--league great`\" tells the tool to derive the stats based on target CP 1500.\n\n- \"`--pokemon`\" tells the tool to only export the pokemon pool and not run the matrix. It is a good habit to verify the input before simulation. In this instance we want to check whether the derived stats are correct.\n\nTo run the matrix simulations, just remove the \"`--pokemon`\" flag (and change the output path):\n\n```\npython -m gobattlesim.Matrix examples/kanto_starters.csv -c examples/gbs_game_master.json --league great -o examples/matrix.csv\n```\n\nNote that we can also use [kanto_starters_with_stats.csv](examples/kanto_starters_with_stats.csv) from earlier step. This way the tool can grab the derived stats instead of doing the derivation again.\n\n## Module: Engine\n\nThis is the core module, the juice of the meat.\n\nTo test the `Engine` module works with your machine:\n\n```\npython -m gobattlesim\n```\n\nIf no error pops up, then you are good to go!\n\nIf othwerise the error says:\n\n```\nWindowsError: ... not a valid Win32 application\n```\n\nThis could be that your Python is 32-bit. I only compiled a 64-bit `libGoBattleSim.dll`. \nYou can either install a 64-bit Python, or build the library from [source](https://github.com/biowpn/GoBattleSim-Engine) yourself.\n\nOf course, it's 100% fine to use the other tools without the `Engine` module.\n\n`Engine` takes different types of simulation input, including `BattleMatrix`. Refer to [GoBattleSim-Engine/examples](https://github.com/biowpn/GoBattleSim-Engine/tree/master/examples) for other types of simulation input supported.\n\nUsing above `Matrix` module, we can alternatively save the actual simulation input and check it:\n\n```\npython -m gobattlesim.Matrix examples/kanto_starters.csv -c examples/gbs_game_master.json --league great -iz -o examples/matrix_input.json\n```\n\n- The \"`-i`\" exports the simulation input instead of running the matrix.\n\n- The \"`-z`\" keeps only the necessary fields for Pokemon.\n\nWe can then directly use `Engine` to process the input:\n\n```\npython -m gobattlesim examples/matrix_input.json -c examples/gbs_game_master.json\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ymenghank/GoBattleSim-Python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gobattlesim", "package_url": "https://pypi.org/project/gobattlesim/", "platform": "", "project_url": "https://pypi.org/project/gobattlesim/", "project_urls": {"Homepage": "https://github.com/ymenghank/GoBattleSim-Python"}, "release_url": "https://pypi.org/project/gobattlesim/0.8.1/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GoBattleSim-Python</h1>\n<p>Tools to play around with <a href=\"https://github.com/biowpn/GoBattleSim-Engine\" rel=\"nofollow\">GoBattleSim-Engine</a>, including GameMaster parser &amp; PokeQuery builder.</p>\n<h2>Prerequisites</h2>\n<p>64-bit Windows</p>\n<p>64-bit Python 3.5+</p>\n<h2>Installing</h2>\n<pre><code>pip install gobattlesim\n</code></pre>\n<p>I'll introduce each module by a step-by-step example of generating a <strong>kanto starter battle matrix</strong> from raw GAME MASTER.</p>\n<h2>Module: Game Master</h2>\n<p>The official Game Master <a href=\"game_master/GAME_MASTER.json\" rel=\"nofollow\">GAME_MASTER.json</a> can be found in online resources such as <a href=\"https://github.com/pokemongo-dev-contrib/pokemongo-game-master\" rel=\"nofollow\">this repository</a>.</p>\n<p>Let's make the big and heavy Game Master more organized:</p>\n<pre><code>python -m gobattlesim.GameMaster game_master/GAME_MASTER.json -o examples/gbs_game_master.json\n</code></pre>\n<p>The result <a href=\"examples/gbs_game_master.json\" rel=\"nofollow\">gbs_game_master.json</a> can be used to configure GoBattleSim Engine.</p>\n<h2>Module: PokeQuery</h2>\n<p>We usually simulate many combinations of Pokemon and Move at a time (batch simulation). Specifying each one of them by hand could sometimes be very tedious. Module <code>PokeQuery</code> is here to help. It generates such combinations based on special queries (let's called them <code>PokeQuery</code>), which works much like the in-game search bar.</p>\n<p>In our example, we can do:</p>\n<pre><code>python -m gobattlesim.PokeQuery \"(charmander,bulbasaur,squirtle) &amp; !(purified,shadow,fall,norm)\" \"*\" \"*\" -c examples/gbs_game_master.json -o examples/kanto_starters.csv\n</code></pre>\n<ul>\n<li>\n<p>The nasty term \"<code>&amp; !(purified,shadow,fall,norm)</code>\" is used to filter out those special forms, leaving only the OG starters.</p>\n</li>\n<li>\n<p>\"<code>*</code>\" matches all moves in the Pokemon's movepool.</p>\n</li>\n<li>\n<p>\"<code>-c examples/gbs_game_master.json</code>\" uses our Game Master from the previous step.</p>\n</li>\n<li>\n<p>\"<code>-o examples/kanto_starters.csv</code>\" saves the generated Pokemon list to the file we desire. Other format options are available; run with \"<code>-h</code>\" for details.</p>\n</li>\n</ul>\n<h2>Module: Battle Matrix</h2>\n<p>Great, now we have species and moves information ready, but we are still missing the Pokemon stats (attack, defense, maxHP). Our next Module <code>Matrix</code> can derive stats for each Pokemon based on the targe PvP league.</p>\n<p>Let's do:</p>\n<pre><code>python -m gobattlesim.Matrix examples/kanto_starters.csv -c examples/gbs_game_master.json --league great --pokemon -o examples/kanto_starters_with_stats.csv\n</code></pre>\n<ul>\n<li>\n<p>\"<code>--league great</code>\" tells the tool to derive the stats based on target CP 1500.</p>\n</li>\n<li>\n<p>\"<code>--pokemon</code>\" tells the tool to only export the pokemon pool and not run the matrix. It is a good habit to verify the input before simulation. In this instance we want to check whether the derived stats are correct.</p>\n</li>\n</ul>\n<p>To run the matrix simulations, just remove the \"<code>--pokemon</code>\" flag (and change the output path):</p>\n<pre><code>python -m gobattlesim.Matrix examples/kanto_starters.csv -c examples/gbs_game_master.json --league great -o examples/matrix.csv\n</code></pre>\n<p>Note that we can also use <a href=\"examples/kanto_starters_with_stats.csv\" rel=\"nofollow\">kanto_starters_with_stats.csv</a> from earlier step. This way the tool can grab the derived stats instead of doing the derivation again.</p>\n<h2>Module: Engine</h2>\n<p>This is the core module, the juice of the meat.</p>\n<p>To test the <code>Engine</code> module works with your machine:</p>\n<pre><code>python -m gobattlesim\n</code></pre>\n<p>If no error pops up, then you are good to go!</p>\n<p>If othwerise the error says:</p>\n<pre><code>WindowsError: ... not a valid Win32 application\n</code></pre>\n<p>This could be that your Python is 32-bit. I only compiled a 64-bit <code>libGoBattleSim.dll</code>.\nYou can either install a 64-bit Python, or build the library from <a href=\"https://github.com/biowpn/GoBattleSim-Engine\" rel=\"nofollow\">source</a> yourself.</p>\n<p>Of course, it's 100% fine to use the other tools without the <code>Engine</code> module.</p>\n<p><code>Engine</code> takes different types of simulation input, including <code>BattleMatrix</code>. Refer to <a href=\"https://github.com/biowpn/GoBattleSim-Engine/tree/master/examples\" rel=\"nofollow\">GoBattleSim-Engine/examples</a> for other types of simulation input supported.</p>\n<p>Using above <code>Matrix</code> module, we can alternatively save the actual simulation input and check it:</p>\n<pre><code>python -m gobattlesim.Matrix examples/kanto_starters.csv -c examples/gbs_game_master.json --league great -iz -o examples/matrix_input.json\n</code></pre>\n<ul>\n<li>\n<p>The \"<code>-i</code>\" exports the simulation input instead of running the matrix.</p>\n</li>\n<li>\n<p>The \"<code>-z</code>\" keeps only the necessary fields for Pokemon.</p>\n</li>\n</ul>\n<p>We can then directly use <code>Engine</code> to process the input:</p>\n<pre><code>python -m gobattlesim examples/matrix_input.json -c examples/gbs_game_master.json\n</code></pre>\n\n          </div>"}, "last_serial": 6440837, "releases": {"0.7.2": [{"comment_text": "", "digests": {"md5": "2951e604dc07db9d4533a77f575fb873", "sha256": "aec7b11113ebf777b153eaf252d4595d4d58c638ea1bf54c5689699a3ba04108"}, "downloads": -1, "filename": "gobattlesim-0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2951e604dc07db9d4533a77f575fb873", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 100071, "upload_time": "2019-05-27T13:52:50", "upload_time_iso_8601": "2019-05-27T13:52:50.418895Z", "url": "https://files.pythonhosted.org/packages/f8/80/23c51ffc674ba352302c8b3300999da130f522eef4360e84f833091c48d4/gobattlesim-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64f6a6cc76a285b445a4588f55cf5934", "sha256": "1a10e7020656b992aae74721b0d1aaf503047906aa62b47209e0e9b8c43b6343"}, "downloads": -1, "filename": "gobattlesim-0.7.2.tar.gz", "has_sig": false, "md5_digest": "64f6a6cc76a285b445a4588f55cf5934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100282, "upload_time": "2019-05-27T13:52:52", "upload_time_iso_8601": "2019-05-27T13:52:52.155495Z", "url": "https://files.pythonhosted.org/packages/38/16/f2c40d0354471f43d05b2e7ba4f4474ab2b6313f3fd2a9da715c5ae01fa3/gobattlesim-0.7.2.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "352d6d0feb50fbf6e646544953cb04eb", "sha256": "f1f77b417705427ccc932fe39f18ec05d8c45bce0022a9f211279e8f50c1b10a"}, "downloads": -1, "filename": "gobattlesim-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "352d6d0feb50fbf6e646544953cb04eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 198144, "upload_time": "2020-01-12T18:37:11", "upload_time_iso_8601": "2020-01-12T18:37:11.429166Z", "url": "https://files.pythonhosted.org/packages/3a/03/e2616798a6ed67201a0cf8eef2679819634880103151a1532ea55975cabd/gobattlesim-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bbcad9f2bdf59c3a3d09289376ae04d", "sha256": "a01dbc15aa8cd941da73941c376aad8ebd7afdfadde224ae0fa60b097f35cab7"}, "downloads": -1, "filename": "gobattlesim-0.8.1.tar.gz", "has_sig": false, "md5_digest": "4bbcad9f2bdf59c3a3d09289376ae04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 184471, "upload_time": "2020-01-12T18:37:13", "upload_time_iso_8601": "2020-01-12T18:37:13.216727Z", "url": "https://files.pythonhosted.org/packages/a8/90/7fdc2124b043f95b8791a11a7e37e22db4f1fb1793ee9922d83cc1fab2d0/gobattlesim-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "352d6d0feb50fbf6e646544953cb04eb", "sha256": "f1f77b417705427ccc932fe39f18ec05d8c45bce0022a9f211279e8f50c1b10a"}, "downloads": -1, "filename": "gobattlesim-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "352d6d0feb50fbf6e646544953cb04eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 198144, "upload_time": "2020-01-12T18:37:11", "upload_time_iso_8601": "2020-01-12T18:37:11.429166Z", "url": "https://files.pythonhosted.org/packages/3a/03/e2616798a6ed67201a0cf8eef2679819634880103151a1532ea55975cabd/gobattlesim-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bbcad9f2bdf59c3a3d09289376ae04d", "sha256": "a01dbc15aa8cd941da73941c376aad8ebd7afdfadde224ae0fa60b097f35cab7"}, "downloads": -1, "filename": "gobattlesim-0.8.1.tar.gz", "has_sig": false, "md5_digest": "4bbcad9f2bdf59c3a3d09289376ae04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 184471, "upload_time": "2020-01-12T18:37:13", "upload_time_iso_8601": "2020-01-12T18:37:13.216727Z", "url": "https://files.pythonhosted.org/packages/a8/90/7fdc2124b043f95b8791a11a7e37e22db4f1fb1793ee9922d83cc1fab2d0/gobattlesim-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:05 2020"}