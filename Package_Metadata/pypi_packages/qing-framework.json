{"info": {"author": "AlSayedGamal", "author_email": "mail.gamal@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Framework for building Data pipelines that scales.\n\nInstallation\n====\n```\npip install qing-framework\n```\n\nUsage\n=====\nBuild your first worker\n-----------------------\n``` python\n# normalizer_worker.py\nfrom qing_framework import QingWorker\nfrom qing_framework import QingMessage as QM\n\nclass Normalizer(QingWorker):\n    def process(self, qs):\n        #do your magic\n        formatted_messages = []\n        # messages from queue named 'dummy' are loaded for you automagically inside the qs variable.\n        while message in qs['dummy']:\n            # Each QingMessage has a payload and now you can create your own after modifying!\n            formatted_message = QM( payload=\"formatted: \" + message.payload )\n            formatted_messages.append(formatted_message) \n        #returned messages are automatically writted to output queue!\n        return formatted_messages\n```\n\n``` python\n# normalizer_manifest.py\n# This file describes worker's responsibility and dependencies.\n{\n\t'name':'normalizer',\n\t'author': 'AlSayed Gamal',\n\t'version': '0.0.1',\n\t'description': 'normalizes messages into proper format!',\n\t'in-queues': ['dummy'],\n\t'out-queues': ['normalized'],\n\t'activity-rate': '5000',\n\t'class': 'Normalizer'\n}\n```\nRun worker using CLI\n--------------------\nYou can start qing as a server and use qing's CLI to run and scale the worker\n```bash\n#queen cli and UI for qing framework.\nqing --help # just in case you needed help.\nqingd # qing deamon, you will need sudo permission\nqing run Normalizer # run a specific worker\nqing kill Normalizer --job-id=123 #kill specific worker job\n```\n\nMonitor the data-pipeline using Web-UI\n--------------------------------------\n```bash\nqing --webserver --port=8910 # you can view data pipelines, queues, jobs and workers.\n```\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/alsayedgamal/qing-framework", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "qing-framework", "package_url": "https://pypi.org/project/qing-framework/", "platform": "", "project_url": "https://pypi.org/project/qing-framework/", "project_urls": {"Homepage": "http://github.com/alsayedgamal/qing-framework"}, "release_url": "https://pypi.org/project/qing-framework/0.0.1rc0/", "requires_dist": null, "requires_python": "", "summary": "The qing of pipes", "version": "0.0.1rc0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Framework for building Data pipelines that scales.<br><br>Installation<br>====<br>```<br>pip install qing-framework<br>```<br><br>Usage<br>=====<br>Build your first worker<br>-----------------------<br>``` python<br># normalizer_worker.py<br>from qing_framework import QingWorker<br>from qing_framework import QingMessage as QM<br><br>class Normalizer(QingWorker):<br>    def process(self, qs):<br>        #do your magic<br>        formatted_messages = []<br>        # messages from queue named 'dummy' are loaded for you automagically inside the qs variable.<br>        while message in qs['dummy']:<br>            # Each QingMessage has a payload and now you can create your own after modifying!<br>            formatted_message = QM( payload=\"formatted: \" + message.payload )<br>            formatted_messages.append(formatted_message) <br>        #returned messages are automatically writted to output queue!<br>        return formatted_messages<br>```<br><br>``` python<br># normalizer_manifest.py<br># This file describes worker's responsibility and dependencies.<br>{<br>\t'name':'normalizer',<br>\t'author': 'AlSayed Gamal',<br>\t'version': '0.0.1',<br>\t'description': 'normalizes messages into proper format!',<br>\t'in-queues': ['dummy'],<br>\t'out-queues': ['normalized'],<br>\t'activity-rate': '5000',<br>\t'class': 'Normalizer'<br>}<br>```<br>Run worker using CLI<br>--------------------<br>You can start qing as a server and use qing's CLI to run and scale the worker<br>```bash<br>#queen cli and UI for qing framework.<br>qing --help # just in case you needed help.<br>qingd # qing deamon, you will need sudo permission<br>qing run Normalizer # run a specific worker<br>qing kill Normalizer --job-id=123 #kill specific worker job<br>```<br><br>Monitor the data-pipeline using Web-UI<br>--------------------------------------<br>```bash<br>qing --webserver --port=8910 # you can view data pipelines, queues, jobs and workers.<br>```<br><br>\n          </div>"}, "last_serial": 3844907, "releases": {"0.0.1b0": [{"comment_text": "", "digests": {"md5": "9f0cbb0f763c04543439561b707038db", "sha256": "27d5b30371a3f1f021d61f0dbbf0f699bf45975a0fca395529bdd7bee55386fb"}, "downloads": -1, "filename": "qing_framework-0.0.1b0-py2-none-any.whl", "has_sig": false, "md5_digest": "9f0cbb0f763c04543439561b707038db", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3235, "upload_time": "2018-05-08T17:15:05", "upload_time_iso_8601": "2018-05-08T17:15:05.179319Z", "url": "https://files.pythonhosted.org/packages/94/a2/cc13293a351304a5a3ad6f9c54add42672d7fb40e080f6513910184b5bbd/qing_framework-0.0.1b0-py2-none-any.whl", "yanked": false}], "0.0.1rc0": [{"comment_text": "", "digests": {"md5": "b1406ce2b8bb7cd60e450f78b8abdf09", "sha256": "0b1d79e51cb4d4f0d0eff21ce2eaef8a72803fdc68b9e94e57651b86b1391b27"}, "downloads": -1, "filename": "qing_framework-0.0.1rc0-py2-none-any.whl", "has_sig": false, "md5_digest": "b1406ce2b8bb7cd60e450f78b8abdf09", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4878, "upload_time": "2018-05-08T17:26:38", "upload_time_iso_8601": "2018-05-08T17:26:38.316401Z", "url": "https://files.pythonhosted.org/packages/44/37/bada04b2e5429b7ae5e2f4574bf2e6419eaa93812d6477c5faa1ed7f91db/qing_framework-0.0.1rc0-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1406ce2b8bb7cd60e450f78b8abdf09", "sha256": "0b1d79e51cb4d4f0d0eff21ce2eaef8a72803fdc68b9e94e57651b86b1391b27"}, "downloads": -1, "filename": "qing_framework-0.0.1rc0-py2-none-any.whl", "has_sig": false, "md5_digest": "b1406ce2b8bb7cd60e450f78b8abdf09", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4878, "upload_time": "2018-05-08T17:26:38", "upload_time_iso_8601": "2018-05-08T17:26:38.316401Z", "url": "https://files.pythonhosted.org/packages/44/37/bada04b2e5429b7ae5e2f4574bf2e6419eaa93812d6477c5faa1ed7f91db/qing_framework-0.0.1rc0-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:09:33 2020"}