{"info": {"author": "Jeremy Gonzalez", "author_email": "jeremy@jeremyg.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "=============================\nDjango Dropbox Upload Handler\n=============================\n\n.. image:: https://badge.fury.io/py/django-dropbox-upload-handler.svg\n    :target: https://badge.fury.io/py/django-dropbox-upload-handler\n\n.. image:: https://travis-ci.org/jagonalez/django-dropbox-upload-handler.svg?branch=master\n    :target: https://travis-ci.org/jagonalez/django-dropbox-upload-handler\n\n.. image:: https://codecov.io/gh/jagonalez/django-dropbox-upload-handler/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jagonalez/django-dropbox-upload-handler\n\nTransfer Uploaded Files to Dropbox\n\nQuickstart\n----------\n\nInstall Django Dropbox Upload Handler::\n\n    pip install django-dropbox-upload-handler\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'django_dropbox_upload_handler.apps.DjangoDropboxUploadHandlerConfig',\n        ...\n    )\n\nAdd DropboxFileUploadHandler to the default Upload Handlers:\n\n.. code-block:: python\n\n    FILE_UPLOAD_HANDLERS = [\n        'django_dropbox_upload_handler.handler.DropboxFileUploadHandler'\n    ]\n\nTo Enable DropboxFileUploadHandler within a single view:\n\nforms.py\n\n.. code-block:: python\n\n    from django import forms\n\n    class UploadFileForm(forms.Form):\n      title = forms.CharField(max_length=50)\n      file = forms.FileField()\n\n\nviews.py\n\n.. code-block:: python\n\n    from django.http import HttpResponseRedirect\n    from django.shortcuts import render\n    from .forms import UploadFileForm\n\n    # Imaginary function to handle the uploaded file dropbox file.\n    from somewhere import handle_uploaded_file\n\n    def upload_file(request):\n        if request.method == 'POST':\n            self.request.upload_handlers.insert(0, DropboxFileUploadHandler(request))\n            form = UploadFileForm(request.POST, request.FILES)\n            if form.is_valid():\n                handle_uploaded_file(request.FILES['file'])\n                return HttpResponseRedirect('/success/url/')\n        else:\n            form = UploadFileForm()\n        return render(request, 'upload.html', {'form': form})\n\n\nAdd Django Dropbox Upload Handler's URL patterns:\n\n.. code-block:: python\n\n    from django_dropbox_upload_handler import urls as django_dropbox_upload_handler_urls\n\n\n    urlpatterns = [\n        ...\n        url(r'^', include(django_dropbox_upload_handler_urls)),\n        ...\n    ]\n\nChecking upload progress for API:\n\nWhen submitting the file include the parameter progres_id in the URL. ex:\n\n.. code-block:: javascript\n\n    function getUUID() {\n      let uuid = \"\"\n      for (let i=0; i < 32; i++) {\n        uuid += Math.floor(Math.random() * 16).toString(16);\n      }\n      return uuid\n    }\n\n    function upload(file) {\n      let data = new FormData()\n      data.append('file', file)\n      fetch('/path/to/upload?progress_id=' + getUUID(), {\n        method: \"post\",\n        body: data\n      })\n      .then(response => {\n        //...\n      })\n      checkProgress(0, progressId, file.size)\n    }\n\n    function checkProgress(progressId, size) {\n      fetch('/upload_progress?progress_id=' = progiressId)\n      .then(response => {\n        if (r.status === 201)\n          return {done: 'true'}\n        return response.json()\n      })\n      .then(data => {\n        if (data.done) {\n          //..upload is completed\n        } else {\n          //.. still uploading - progress can be checked using:\n          progress = Math.round(parseInt(data.uploaded) / parseInt(data.length) * 100)\n          setTimeout(() => { checkProgress( progressId, size) }, 500)\n        }\n      })\n    }\n\nFeatures\n--------\n\n* Transfers files uploaded through Django to Dropbox\n* Includes a upload_progress view for ajax calls\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2017-09-03)\n++++++++++++++++++\n\n* First release on PyPI.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jagonalez/django-dropbox-upload-handler", "keywords": "django-dropbox-upload-handler", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-dropbox-upload-handler", "package_url": "https://pypi.org/project/django-dropbox-upload-handler/", "platform": "", "project_url": "https://pypi.org/project/django-dropbox-upload-handler/", "project_urls": {"Homepage": "https://github.com/jagonalez/django-dropbox-upload-handler"}, "release_url": "https://pypi.org/project/django-dropbox-upload-handler/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Transfer Uploaded Files to Dropbox", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/django-dropbox-upload-handler\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-dropbox-upload-handler.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7c3a4a217ee4c002b1faede8fc3ae890c68d58c/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d64726f70626f782d75706c6f61642d68616e646c65722e737667\"></a>\n<a href=\"https://travis-ci.org/jagonalez/django-dropbox-upload-handler\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jagonalez/django-dropbox-upload-handler.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba8fe55ef06c90114677f331faa92342d6d81e9b/68747470733a2f2f7472617669732d63692e6f72672f6a61676f6e616c657a2f646a616e676f2d64726f70626f782d75706c6f61642d68616e646c65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/jagonalez/django-dropbox-upload-handler\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/jagonalez/django-dropbox-upload-handler/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78a2c5c8cdc53fb1b00b92107217a67dff639467/68747470733a2f2f636f6465636f762e696f2f67682f6a61676f6e616c657a2f646a616e676f2d64726f70626f782d75706c6f61642d68616e646c65722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Transfer Uploaded Files to Dropbox</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install Django Dropbox Upload Handler:</p>\n<pre>pip install django-dropbox-upload-handler\n</pre>\n<p>Add it to your <cite>INSTALLED_APPS</cite>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_dropbox_upload_handler.apps.DjangoDropboxUploadHandlerConfig'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Add DropboxFileUploadHandler to the default Upload Handlers:</p>\n<pre><span class=\"n\">FILE_UPLOAD_HANDLERS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'django_dropbox_upload_handler.handler.DropboxFileUploadHandler'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>To Enable DropboxFileUploadHandler within a single view:</p>\n<p>forms.py</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UploadFileForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n  <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n  <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">()</span>\n</pre>\n<p>views.py</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponseRedirect</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.forms</span> <span class=\"kn\">import</span> <span class=\"n\">UploadFileForm</span>\n\n<span class=\"c1\"># Imaginary function to handle the uploaded file dropbox file.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">somewhere</span> <span class=\"kn\">import</span> <span class=\"n\">handle_uploaded_file</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">upload_file</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s1\">'POST'</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">upload_handlers</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">DropboxFileUploadHandler</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">))</span>\n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">UploadFileForm</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">FILES</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">():</span>\n            <span class=\"n\">handle_uploaded_file</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">FILES</span><span class=\"p\">[</span><span class=\"s1\">'file'</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"s1\">'/success/url/'</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">UploadFileForm</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'upload.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'form'</span><span class=\"p\">:</span> <span class=\"n\">form</span><span class=\"p\">})</span>\n</pre>\n<p>Add Django Dropbox Upload Handler\u2019s URL patterns:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_dropbox_upload_handler</span> <span class=\"kn\">import</span> <span class=\"n\">urls</span> <span class=\"k\">as</span> <span class=\"n\">django_dropbox_upload_handler_urls</span>\n\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">django_dropbox_upload_handler_urls</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Checking upload progress for API:</p>\n<p>When submitting the file include the parameter progres_id in the URL. ex:</p>\n<pre><span class=\"kd\">function</span> <span class=\"nx\">getUUID</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">uuid</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">32</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">uuid</span> <span class=\"o\">+=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">floor</span><span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">random</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">16</span><span class=\"p\">).</span><span class=\"nx\">toString</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"nx\">uuid</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">upload</span><span class=\"p\">(</span><span class=\"nx\">file</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">FormData</span><span class=\"p\">()</span>\n  <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"s1\">'file'</span><span class=\"p\">,</span> <span class=\"nx\">file</span><span class=\"p\">)</span>\n  <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/upload?progress_id='</span> <span class=\"o\">+</span> <span class=\"nx\">getUUID</span><span class=\"p\">(),</span> <span class=\"p\">{</span>\n    <span class=\"nx\">method</span><span class=\"o\">:</span> <span class=\"s2\">\"post\"</span><span class=\"p\">,</span>\n    <span class=\"nx\">body</span><span class=\"o\">:</span> <span class=\"nx\">data</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">response</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">//...\n</span>  <span class=\"p\">})</span>\n  <span class=\"nx\">checkProgress</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">progressId</span><span class=\"p\">,</span> <span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">size</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">checkProgress</span><span class=\"p\">(</span><span class=\"nx\">progressId</span><span class=\"p\">,</span> <span class=\"nx\">size</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'/upload_progress?progress_id='</span> <span class=\"o\">=</span> <span class=\"nx\">progiressId</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">response</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">r</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">===</span> <span class=\"mi\">201</span><span class=\"p\">)</span>\n      <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"nx\">done</span><span class=\"o\">:</span> <span class=\"s1\">'true'</span><span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">()</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">data</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">done</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"c1\">//..upload is completed\n</span>    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"c1\">//.. still uploading - progress can be checked using:\n</span>      <span class=\"nx\">progress</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span><span class=\"nb\">parseInt</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">uploaded</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"nb\">parseInt</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n      <span class=\"nx\">setTimeout</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span> <span class=\"nx\">checkProgress</span><span class=\"p\">(</span> <span class=\"nx\">progressId</span><span class=\"p\">,</span> <span class=\"nx\">size</span><span class=\"p\">)</span> <span class=\"p\">},</span> <span class=\"mi\">500</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Transfers files uploaded through Django to Dropbox</li>\n<li>Includes a upload_progress view for ajax calls</li>\n</ul>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Does the code actually work?</p>\n<pre>source &lt;YOURVIRTUALENV&gt;/bin/activate\n(myenv) $ pip install tox\n(myenv) $ tox\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2017-09-03)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3146199, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "745929a2fbe9c87efa7b13b77da964d4", "sha256": "52faf7b8b4c561eb898decb4468e1c41346d1a217b3d7439d95f25305569c42d"}, "downloads": -1, "filename": "django_dropbox_upload_handler-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "745929a2fbe9c87efa7b13b77da964d4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8236, "upload_time": "2017-09-03T21:53:57", "upload_time_iso_8601": "2017-09-03T21:53:57.433707Z", "url": "https://files.pythonhosted.org/packages/63/57/b1d5dfa367dcd1ff4b98e699e7804337023b3848dde0c1af29cb493f2416/django_dropbox_upload_handler-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "977e50764ca3277f47f33cbe918b3b5c", "sha256": "36f3218c9337f77aab26651565e3864e38896a6bec501c94606903302bf591f6"}, "downloads": -1, "filename": "django-dropbox-upload-handler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "977e50764ca3277f47f33cbe918b3b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7712, "upload_time": "2017-09-03T21:53:54", "upload_time_iso_8601": "2017-09-03T21:53:54.525029Z", "url": "https://files.pythonhosted.org/packages/0e/a9/9238ad2709b69511f9cb459e0f95c48ff5a337de1cff1443aa1e5d68d878/django-dropbox-upload-handler-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "745929a2fbe9c87efa7b13b77da964d4", "sha256": "52faf7b8b4c561eb898decb4468e1c41346d1a217b3d7439d95f25305569c42d"}, "downloads": -1, "filename": "django_dropbox_upload_handler-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "745929a2fbe9c87efa7b13b77da964d4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8236, "upload_time": "2017-09-03T21:53:57", "upload_time_iso_8601": "2017-09-03T21:53:57.433707Z", "url": "https://files.pythonhosted.org/packages/63/57/b1d5dfa367dcd1ff4b98e699e7804337023b3848dde0c1af29cb493f2416/django_dropbox_upload_handler-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "977e50764ca3277f47f33cbe918b3b5c", "sha256": "36f3218c9337f77aab26651565e3864e38896a6bec501c94606903302bf591f6"}, "downloads": -1, "filename": "django-dropbox-upload-handler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "977e50764ca3277f47f33cbe918b3b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7712, "upload_time": "2017-09-03T21:53:54", "upload_time_iso_8601": "2017-09-03T21:53:54.525029Z", "url": "https://files.pythonhosted.org/packages/0e/a9/9238ad2709b69511f9cb459e0f95c48ff5a337de1cff1443aa1e5d68d878/django-dropbox-upload-handler-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:30 2020"}