{"info": {"author": "Gustavo Rosa", "author_email": "gth.rosa@uol.com.br", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# NALP: Natural Adversarial Language Processing\n\n[![Latest release](https://img.shields.io/github/release/gugarosa/nalp.svg)](https://github.com/gugarosa/nalp/releases)\n[![Open issues](https://img.shields.io/github/issues/gugarosa/nalp.svg)](https://github.com/gugarosa/nalp/issues)\n[![License](https://img.shields.io/github/license/gugarosa/nalp.svg)](https://github.com/gugarosa/nalp/blob/master/LICENSE)\n\n## Welcome to NALP.\n\nHave you ever wanted to create natural text from raw sources? If yes, NALP is for you! This package is an innovative way of dealing with natural language processing and adversarial learning. From bottom to top, from embeddings to neural networks, we will foster all research related to this new trend.\n\nUse NALP if you need a library or wish to:\n* Create your embeddings.\n* Design or use pre-loaded state-of-art neural networks.\n* Mix-and-match different strategies to solve your problem.\n* Because it is cool to play with text.\n\nRead the docs at [nalp.readthedocs.io](https://nalp.readthedocs.io).\n\nNALP is compatible with: **Python 3.6+** and **PyPy 3.5**.\n\n---\n\n## Package guidelines\n\n1. The very first information you need is in the very **next** section.\n2. **Installing** is also easy if you wish to read the code and bump yourself into, follow along.\n3. Note that there might be some **additional** steps in order to use our solutions.\n4. If there is a problem, please do not **hesitate**, call us.\n\n---\n\n## Getting started: 60 seconds with NALP\n\nFirst of all. We have examples. Yes, they are commented. Just browse to `examples/`, chose your subpackage, and follow the example. We have high-level examples for most tasks we could think of.\n\nAlternatively, if you wish to learn even more, please take a minute:\n\nNALP is based on the following structure, and you should pay attention to its tree:\n\n```\n- nalp\n    - core\n        - corpus\n        - dataset\n        - encoder\n    - corpus\n        - audio\n        - document\n        - text\n    - datasets\n        - next\n    - encoders\n        - count\n        - integer\n        - tfidf\n        - word2vec\n    - models\n        - gru\n        - lstm\n        - rnn\n    - neurals\n        - complex\n        - simple\n    - utils\n        - loader\n        - logging\n        - preprocess\n```\n\n### Core\n\nThe core is the core. Essentially, it is the parent of everything. You should find parent classes defining the basis of our structure. They should provide variables and methods that will help to construct other modules.\n\n### Corpus\n\nEvery pipeline has its first step, right? The corpus package serves as a basic class to load raw text, documents (list of sentences), and audio.\n\n### Datasets\n\nBecause we need data, right? Datasets are composed of classes and methods that allow preparing data for further neural networks.\n\n### Encoders\n\nText or Numbers? Encodings are used to make embeddings. Embeddings are used to feed into neural networks. Remember that networks cannot read raw data; therefore, you might want to pre-encode your data using well-known encoders.\n\n### Models\n\nEach neural network architecture is defined in this package. From na\u00efve RNNs to BiLSTMs, you can use whatever suits your needs.\n\n### Neurals\n\nThe neurals package provides simple or complex implementations using Tensorflow. You can choose straightforward examples using the Simple class or more advanced customization methods using the Complex class.\n\n### Utils\n\nThis is a utility package. Common things shared across the application should be implemented here. It is better to implement once and use as you wish than re-implementing the same thing over and over again.\n\n---\n\n## Installation\n\nWe believe that everything has to be easy. Not tricky or daunting, NALP will be the one-to-go package that you will need, from the very first installation to the daily-tasks implementing needs. If you may just run the following under your most preferred Python environment (raw, conda, virtualenv, whatever)!:\n\n```Python\npip install nalp\n```\n\nAlternatively, if you prefer to install the bleeding-edge version, please clone this repository and use:\n\n```Python\npip install .\n```\n\n---\n\n## Environment configuration\n\nNote that sometimes, there is a need for additional implementation. If needed, from here you will be the one to know all of its details.\n\n### Ubuntu\n\nNo specific additional commands needed.\n\n### Windows\n\nNo specific additional commands needed.\n\n### MacOS\n\nNo specific additional commands needed.\n\n---\n\n## Support\n\nWe know that we do our best, but it is inevitable to acknowledge that we make mistakes. If you ever need to report a bug, report a problem, talk to us, please do so! We will be available at our bests at this repository or gustavo.rosa@unesp.br.\n\n---\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gugarosa/nalp", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nalp", "package_url": "https://pypi.org/project/nalp/", "platform": "", "project_url": "https://pypi.org/project/nalp/", "project_urls": {"Homepage": "https://github.com/gugarosa/nalp"}, "release_url": "https://pypi.org/project/nalp/1.1.0/", "requires_dist": ["coverage (>=4.5.2)", "gensim (>=3.5.0)", "mido (>=1.2.9)", "nltk (>=3.2.5)", "numpy (>=1.13.3)", "pylint (>=1.7.4)", "pytest (>=3.2.3)", "tensorflow (>=2.0.0-beta1)", "coverage ; extra == 'tests'", "pytest ; extra == 'tests'", "pytest-pep8 ; extra == 'tests'"], "requires_python": "", "summary": "Natural Adversarial Language Processing", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NALP: Natural Adversarial Language Processing</h1>\n<p><a href=\"https://github.com/gugarosa/nalp/releases\" rel=\"nofollow\"><img alt=\"Latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96a1f914b830f9a571c1a95f9a9021ffd2854c72/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f67756761726f73612f6e616c702e737667\"></a>\n<a href=\"https://github.com/gugarosa/nalp/issues\" rel=\"nofollow\"><img alt=\"Open issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0142522aa06ebaa9a76ac5eef55d2bb1d1f76325/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f67756761726f73612f6e616c702e737667\"></a>\n<a href=\"https://github.com/gugarosa/nalp/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/048bedab3960b0109461469b04a28284348c0473/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f67756761726f73612f6e616c702e737667\"></a></p>\n<h2>Welcome to NALP.</h2>\n<p>Have you ever wanted to create natural text from raw sources? If yes, NALP is for you! This package is an innovative way of dealing with natural language processing and adversarial learning. From bottom to top, from embeddings to neural networks, we will foster all research related to this new trend.</p>\n<p>Use NALP if you need a library or wish to:</p>\n<ul>\n<li>Create your embeddings.</li>\n<li>Design or use pre-loaded state-of-art neural networks.</li>\n<li>Mix-and-match different strategies to solve your problem.</li>\n<li>Because it is cool to play with text.</li>\n</ul>\n<p>Read the docs at <a href=\"https://nalp.readthedocs.io\" rel=\"nofollow\">nalp.readthedocs.io</a>.</p>\n<p>NALP is compatible with: <strong>Python 3.6+</strong> and <strong>PyPy 3.5</strong>.</p>\n<hr>\n<h2>Package guidelines</h2>\n<ol>\n<li>The very first information you need is in the very <strong>next</strong> section.</li>\n<li><strong>Installing</strong> is also easy if you wish to read the code and bump yourself into, follow along.</li>\n<li>Note that there might be some <strong>additional</strong> steps in order to use our solutions.</li>\n<li>If there is a problem, please do not <strong>hesitate</strong>, call us.</li>\n</ol>\n<hr>\n<h2>Getting started: 60 seconds with NALP</h2>\n<p>First of all. We have examples. Yes, they are commented. Just browse to <code>examples/</code>, chose your subpackage, and follow the example. We have high-level examples for most tasks we could think of.</p>\n<p>Alternatively, if you wish to learn even more, please take a minute:</p>\n<p>NALP is based on the following structure, and you should pay attention to its tree:</p>\n<pre><code>- nalp\n    - core\n        - corpus\n        - dataset\n        - encoder\n    - corpus\n        - audio\n        - document\n        - text\n    - datasets\n        - next\n    - encoders\n        - count\n        - integer\n        - tfidf\n        - word2vec\n    - models\n        - gru\n        - lstm\n        - rnn\n    - neurals\n        - complex\n        - simple\n    - utils\n        - loader\n        - logging\n        - preprocess\n</code></pre>\n<h3>Core</h3>\n<p>The core is the core. Essentially, it is the parent of everything. You should find parent classes defining the basis of our structure. They should provide variables and methods that will help to construct other modules.</p>\n<h3>Corpus</h3>\n<p>Every pipeline has its first step, right? The corpus package serves as a basic class to load raw text, documents (list of sentences), and audio.</p>\n<h3>Datasets</h3>\n<p>Because we need data, right? Datasets are composed of classes and methods that allow preparing data for further neural networks.</p>\n<h3>Encoders</h3>\n<p>Text or Numbers? Encodings are used to make embeddings. Embeddings are used to feed into neural networks. Remember that networks cannot read raw data; therefore, you might want to pre-encode your data using well-known encoders.</p>\n<h3>Models</h3>\n<p>Each neural network architecture is defined in this package. From na\u00efve RNNs to BiLSTMs, you can use whatever suits your needs.</p>\n<h3>Neurals</h3>\n<p>The neurals package provides simple or complex implementations using Tensorflow. You can choose straightforward examples using the Simple class or more advanced customization methods using the Complex class.</p>\n<h3>Utils</h3>\n<p>This is a utility package. Common things shared across the application should be implemented here. It is better to implement once and use as you wish than re-implementing the same thing over and over again.</p>\n<hr>\n<h2>Installation</h2>\n<p>We believe that everything has to be easy. Not tricky or daunting, NALP will be the one-to-go package that you will need, from the very first installation to the daily-tasks implementing needs. If you may just run the following under your most preferred Python environment (raw, conda, virtualenv, whatever)!:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nalp</span>\n</pre>\n<p>Alternatively, if you prefer to install the bleeding-edge version, please clone this repository and use:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">.</span>\n</pre>\n<hr>\n<h2>Environment configuration</h2>\n<p>Note that sometimes, there is a need for additional implementation. If needed, from here you will be the one to know all of its details.</p>\n<h3>Ubuntu</h3>\n<p>No specific additional commands needed.</p>\n<h3>Windows</h3>\n<p>No specific additional commands needed.</p>\n<h3>MacOS</h3>\n<p>No specific additional commands needed.</p>\n<hr>\n<h2>Support</h2>\n<p>We know that we do our best, but it is inevitable to acknowledge that we make mistakes. If you ever need to report a bug, report a problem, talk to us, please do so! We will be available at our bests at this repository or <a href=\"mailto:gustavo.rosa@unesp.br\">gustavo.rosa@unesp.br</a>.</p>\n<hr>\n\n          </div>"}, "last_serial": 5851204, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "f3adf90315bf3c081f8a22aff8a908f6", "sha256": "07269b2ce76cddc577ca1ba513f1bc81669c33ffe6ed8c33b31bc0f60388ff0a"}, "downloads": -1, "filename": "nalp-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f3adf90315bf3c081f8a22aff8a908f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23437, "upload_time": "2019-06-21T14:42:04", "upload_time_iso_8601": "2019-06-21T14:42:04.859970Z", "url": "https://files.pythonhosted.org/packages/f2/ac/8470718ed253b70eaab7f5dc4b8f1a829cdf1782fee8815e230e834971bc/nalp-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3218a7ad4e92cbcabedfe83f13163e3d", "sha256": "afc187f8ef4c3ce9dbf597e79acfb4c28dd1155c85c8d3a119dcf2e19ac348e5"}, "downloads": -1, "filename": "nalp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3218a7ad4e92cbcabedfe83f13163e3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16738, "upload_time": "2019-06-21T14:42:07", "upload_time_iso_8601": "2019-06-21T14:42:07.740391Z", "url": "https://files.pythonhosted.org/packages/7e/d7/f4658943ba148b091a887739a65a5658cc658ef6386d912e31218b9bb27c/nalp-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e4c68db190748a85f2c3403164e53794", "sha256": "9f48690eb201e384f1e1c76edeeebf3f738430ea1a7161ee79ab893ff2f896c0"}, "downloads": -1, "filename": "nalp-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e4c68db190748a85f2c3403164e53794", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26063, "upload_time": "2019-09-18T16:09:13", "upload_time_iso_8601": "2019-09-18T16:09:13.321358Z", "url": "https://files.pythonhosted.org/packages/2a/fb/5a707c1808d61c78b775231da9c46eeb18f8d053b5bd66ac2dd89dafa2a9/nalp-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01479782433dc43741b9826cb975f68d", "sha256": "efbc009dcdc0baa11f153ce9ad8f7c3fd3240f3fad098b865c4f906473228a2b"}, "downloads": -1, "filename": "nalp-1.1.0.tar.gz", "has_sig": false, "md5_digest": "01479782433dc43741b9826cb975f68d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15590, "upload_time": "2019-09-18T16:09:14", "upload_time_iso_8601": "2019-09-18T16:09:14.863466Z", "url": "https://files.pythonhosted.org/packages/2a/92/245c6c81bcc5b5c0d6ea444a079f0fd42d0ba2c59aa2499dc286a8c8d66e/nalp-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4c68db190748a85f2c3403164e53794", "sha256": "9f48690eb201e384f1e1c76edeeebf3f738430ea1a7161ee79ab893ff2f896c0"}, "downloads": -1, "filename": "nalp-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e4c68db190748a85f2c3403164e53794", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26063, "upload_time": "2019-09-18T16:09:13", "upload_time_iso_8601": "2019-09-18T16:09:13.321358Z", "url": "https://files.pythonhosted.org/packages/2a/fb/5a707c1808d61c78b775231da9c46eeb18f8d053b5bd66ac2dd89dafa2a9/nalp-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01479782433dc43741b9826cb975f68d", "sha256": "efbc009dcdc0baa11f153ce9ad8f7c3fd3240f3fad098b865c4f906473228a2b"}, "downloads": -1, "filename": "nalp-1.1.0.tar.gz", "has_sig": false, "md5_digest": "01479782433dc43741b9826cb975f68d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15590, "upload_time": "2019-09-18T16:09:14", "upload_time_iso_8601": "2019-09-18T16:09:14.863466Z", "url": "https://files.pythonhosted.org/packages/2a/92/245c6c81bcc5b5c0d6ea444a079f0fd42d0ba2c59aa2499dc286a8c8d66e/nalp-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:48 2020"}