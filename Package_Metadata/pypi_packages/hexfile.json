{"info": {"author": "Ryan Sturmer", "author_email": "ryansturmer@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "hexfile\n=======\n\nThis is a simple library for parsing hex files.  Currently only intel hex files are supported.\n\nInstallation\n------------\nYou can use the included setup.py or use your pip to install it from PyPI\n\nUsage\n-----\nTo create a HexFile object use hexfile.load:\n\n```python\nimport hexfile\n\nf = hexfile.load('memory.hex')\n```\n\nThe `HexFile` object is composed of one or more memory segments, which may be discontinuous.  You can access the contents of the hex file as though it were an array of bytes:\n\n```python\nprint f.size       # Total number of bytes in the hexfile (NOT the total span of all addresses)\n\nbyte = f[16]       # Returns the byte at address 16 (as an int)\n\nbytes = f[256:512] # Returns 256 bytes as a list\n\nprint f.segments   # Display all the segments in the hex file\n\n```\n\nThe `HexFile` object also supports iteration, but rather than iterating over byte values as if it were a list, it includes the byte addresses, as if it were enumerated.  This is because the file might be discontinuous, so addresses are frequently needed during iteration.\n\n```\nfor addr, data in f:\n    print '0x%08x : 0x%02x' % (addr, data) # Print every byte in the hex file and its 32-bit address\n```\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/ryansturmer/hexfile", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "hexfile", "package_url": "https://pypi.org/project/hexfile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hexfile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.github.com/ryansturmer/hexfile"}, "release_url": "https://pypi.org/project/hexfile/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Library for loading and manipulating hex files.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            hexfile<br>=======<br><br>This is a simple library for parsing hex files.  Currently only intel hex files are supported.<br><br>Installation<br>------------<br>You can use the included setup.py or use your pip to install it from PyPI<br><br>Usage<br>-----<br>To create a HexFile object use hexfile.load:<br><br>```python<br>import hexfile<br><br>f = hexfile.load('memory.hex')<br>```<br><br>The `HexFile` object is composed of one or more memory segments, which may be discontinuous.  You can access the contents of the hex file as though it were an array of bytes:<br><br>```python<br>print f.size       # Total number of bytes in the hexfile (NOT the total span of all addresses)<br><br>byte = f[16]       # Returns the byte at address 16 (as an int)<br><br>bytes = f[256:512] # Returns 256 bytes as a list<br><br>print f.segments   # Display all the segments in the hex file<br><br>```<br><br>The `HexFile` object also supports iteration, but rather than iterating over byte values as if it were a list, it includes the byte addresses, as if it were enumerated.  This is because the file might be discontinuous, so addresses are frequently needed during iteration.<br><br>```<br>for addr, data in f:<br>    print '0x%08x : 0x%02x' % (addr, data) # Print every byte in the hex file and its 32-bit address<br>```<br>\n          </div>"}, "last_serial": 1227100, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "93f070895eddaa57aff8696c5546b886", "sha256": "2cb0900dfef7c158e0548156e6720ce53f650acd62335141a9e337c83dd68f1f"}, "downloads": -1, "filename": "hexfile-0.0.1.tar.gz", "has_sig": false, "md5_digest": "93f070895eddaa57aff8696c5546b886", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3062, "upload_time": "2014-09-04T18:55:58", "upload_time_iso_8601": "2014-09-04T18:55:58.962672Z", "url": "https://files.pythonhosted.org/packages/db/e6/fd57630bc4dd7e5e6b7df6209a20dff273f8a0c5692936161c7c71e05900/hexfile-0.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5d7c30475959d8dee2b454f06db21506", "sha256": "44bc78c7f6ff531c1af7c1e5bcea8a327d17139d789e9f4fc3ad228030009459"}, "downloads": -1, "filename": "hexfile-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5d7c30475959d8dee2b454f06db21506", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2914, "upload_time": "2014-09-16T19:15:25", "upload_time_iso_8601": "2014-09-16T19:15:25.296732Z", "url": "https://files.pythonhosted.org/packages/db/33/449e0144debb721085bd7d09689029cdbb927c7f0dd2000cb726420db746/hexfile-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d7c30475959d8dee2b454f06db21506", "sha256": "44bc78c7f6ff531c1af7c1e5bcea8a327d17139d789e9f4fc3ad228030009459"}, "downloads": -1, "filename": "hexfile-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5d7c30475959d8dee2b454f06db21506", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2914, "upload_time": "2014-09-16T19:15:25", "upload_time_iso_8601": "2014-09-16T19:15:25.296732Z", "url": "https://files.pythonhosted.org/packages/db/33/449e0144debb721085bd7d09689029cdbb927c7f0dd2000cb726420db746/hexfile-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:27 2020"}