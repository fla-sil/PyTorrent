{"info": {"author": "Will Thames", "author_email": "will@thames.id.au", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: Jython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Bug Tracking", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": ".. image:: https://img.shields.io/pypi/v/ansible-lint.svg\n   :target: https://pypi.org/project/ansible-lint\n   :alt: PyPI version\n\n.. image:: https://img.shields.io/badge/Ansible--lint-rules%20table-blue.svg\n   :target: https://docs.ansible.com/ansible-lint/rules/default_rules.html\n   :alt: Ansible-lint rules explanation\n\n.. image:: https://img.shields.io/badge/Code%20of%20Conduct-Ansible-silver.svg\n   :target: https://docs.ansible.com/ansible/latest/community/code_of_conduct.html\n   :alt: Ansible Code of Conduct\n\n.. image:: https://img.shields.io/badge/Mailing%20lists-Ansible-orange.svg\n   :target: https://docs.ansible.com/ansible/latest/community/communication.html#mailing-list-information\n   :alt: Ansible mailing lists\n\n.. image:: https://img.shields.io/travis/com/ansible/ansible-lint/master.svg?label=Linux%20builds%20%40%20Travis%20CI\n   :target: https://travis-ci.com/ansible/ansible-lint\n   :alt: Travis CI build status\n\n.. image:: https://github.com/ansible/ansible-lint/workflows/%F0%9F%91%B7/badge.svg\n   :target: https://github.com/ansible/ansible-lint/actions?query=workflow%3A%F0%9F%91%B7\n   :alt: \ud83d\udc77 GitHub Actions CI/CD build status \u2014 tests\n\n.. image:: https://github.com/ansible/ansible-lint/workflows/%F0%9F%9A%A8/badge.svg\n   :target: https://github.com/ansible/ansible-lint/actions?query=workflow%3A%F0%9F%9A%A8\n   :alt: \ud83d\udea8 GitHub Actions CI/CD build status \u2014 linters\n\n.. image:: https://img.shields.io/lgtm/grade/python/g/ansible/ansible-lint.svg?logo=lgtm&logoWidth=18\n   :target: https://lgtm.com/projects/g/ansible/ansible-lint/context:python\n   :alt: Language grade: Python\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n\n\nAnsible-lint\n============\n\n``ansible-lint`` checks playbooks for practices and behaviour that could\npotentially be improved.\n\n`Visit the Ansible Lint docs site <https://docs.ansible.com/ansible-lint/>`_\n\nInstalling\n==========\n\n.. installing-docs-inclusion-marker-do-not-remove\n\nUsing Pip\n---------\n\n.. code-block:: bash\n\n    pip install ansible-lint\n\n.. _installing_from_source:\n\nFrom Source\n-----------\n\n**Note**: pip 19.0+ is required for installation. Please consult with the `PyPA User Guide`_\nto learn more about managing Pip versions.\n\n.. code-block:: bash\n\n    pip install git+https://github.com/ansible/ansible-lint.git\n\n.. _PyPA User Guide: https://packaging.python.org/tutorials/installing-packages/#ensure-pip-setuptools-and-wheel-are-up-to-date\n\n.. installing-docs-inclusion-marker-end-do-not-remove\n\nUsage\n=====\n\n.. usage-docs-inclusion-marker-do-not-remove\n\nCommand Line Options\n--------------------\n\nThe following is the output from ``ansible-lint --help``, providing an overview of the basic command line options:\n\n.. code-block:: bash\n\n    Usage: ansible-lint [options] [playbook.yml [playbook2 ...]]|roledirectory\n\n    Options:\n      --version             show program's version number and exit\n      -h, --help            show this help message and exit\n      -L                    list all the rules\n      -q                    quieter, although not silent output\n      -p                    parseable output in the format of pep8\n      --parseable-severity  parseable output including severity of rule\n      -r RULESDIR           specify one or more rules directories using one or\n                            more -r arguments. Any -r flags override the default\n                            rules in ['/path/to/ansible-\n                            lint/lib/ansiblelint/rules'], unless -R is also used.\n      -R                    Use default rules ['/path/to/ansible-\n                            lint/lib/ansiblelint/rules'] in addition to any extra\n                            rules directories specified with -r. There is no need\n                            to specify this if no -r flags are used\n      -t TAGS               only check rules whose id/tags match these values\n      -T                    list all the tags\n      -v                    Increase verbosity level\n      -x SKIP_LIST          only check rules whose id/tags do not match these\n                            values\n      --nocolor             disable colored output\n      --force-color         Try force colored output (relying on ansible's code)\n      --exclude=EXCLUDE_PATHS\n                            path to directories or files to skip. This option is\n                            repeatable.\n      -c /path/to/file      Specify configuration file to use.  Defaults to\n                              \".ansible-lint\"\n\n\n\nLinting Playbooks and Roles\n---------------------------\n\nIt's important to note that ``ansible-lint`` accepts a list of Ansible playbook files or a list of role directories. Starting from a directory that contains the following, the playbook file, ``playbook.yml``, or one of the role subdirectories, such as ``geerlingguy.apache``, can be passed:\n\n.. code-block:: bash\n\n  playbook.yml\n  roles/\n      geerlingguy.apache/\n          tasks/\n          handlers/\n          files/\n          templates/\n          vars/\n          defaults/\n          meta/\n      geerlingguy.elasticsearch/\n          tasks/\n          handlers/\n          files/\n          templates/\n          vars/\n          defaults/\n          meta/\n\nThe following lints the role ``geerlingguy.apache``:\n\n.. code-block:: bash\n\n    $ ansible-lint geerlingguy.apache\n\n    [305] Use shell only when shell functionality is required\n    /Users/chouseknecht/.ansible/roles/geerlingguy.apache/tasks/main.yml:19\n    Task/Handler: Get installed version of Apache.\n\n    [502] All tasks should be named\n    /Users/chouseknecht/.ansible/roles/geerlingguy.apache/tasks/main.yml:29\n    Task/Handler: include_vars apache-22.yml\n\n    [502] All tasks should be named\n    /Users/chouseknecht/.ansible/roles/geerlingguy.apache/tasks/main.yml:32\n    Task/Handler: include_vars apache-24.yml\n\nHere's the contents of ``playbook.yml``, which references multiples roles:\n\n.. code-block:: yaml\n\n  - name: Lint multiple roles\n    hosts: all\n    tasks:\n\n    - include_role:\n      name: geerlingguy.apache\n\n    - include_role:\n      name: geerlingguy.elasticsearch\n\nThe following lints ``playbook.yml``, which evaluates both the playbook and the referenced roles:\n\n.. code-block:: bash\n\n    $ ansible-lint playbook.yml\n\n    [305] Use shell only when shell functionality is required\n    /Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:19\n    Task/Handler: Get installed version of Apache.\n\n    [502] All tasks should be named\n    /Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:29\n    Task/Handler: include_vars apache-22.yml\n\n    [502] All tasks should be named\n    /Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:32\n    Task/Handler: include_vars apache-24.yml\n\n    [502] All tasks should be named\n    /Users/chouseknecht/roles/geerlingguy.elasticsearch/tasks/main.yml:17\n    Task/Handler: service state=started name=elasticsearch enabled=yes\n\nSince ``ansible-lint`` accepts a list of roles or playbooks, the following works as well, producing the same output as the example above:\n\n.. code-block:: bash\n\n    $ ansible-lint geerlingguy.apache geerlingguy.elasticsearch\n\n    [305] Use shell only when shell functionality is required\n    /Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:19\n    Task/Handler: Get installed version of Apache.\n\n    [502] All tasks should be named\n    /Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:29\n    Task/Handler: include_vars apache-22.yml\n\n    [502] All tasks should be named\n    /Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:32\n    Task/Handler: include_vars apache-24.yml\n\n    [502] All tasks should be named\n    /Users/chouseknecht/roles/geerlingguy.elasticsearch/tasks/main.yml:17\n    Task/Handler: service state=started name=elasticsearch enabled=yes\n\nExamples\n--------\n\nIncluded in ``ansible-lint/examples`` are some example playbooks with undesirable features. Running ansible-lint on them works, as demonstrated in the following:\n\n.. code-block:: bash\n\n    $ ansible-lint examples/example.yml\n\n    [301] Commands should not change things if nothing needs doing\n    examples/example.yml:9\n    Task/Handler: unset variable\n\n    [206] Variables should have spaces before and after: {{ var_name }}\n    examples/example.yml:10\n        action: command echo {{thisvariable}} is not set in this playbook\n\n    [301] Commands should not change things if nothing needs doing\n    examples/example.yml:12\n    Task/Handler: trailing whitespace\n\n    [201] Trailing whitespace\n    examples/example.yml:13\n        action: command echo do nothing\n\n    [401] Git checkouts must contain explicit version\n    examples/example.yml:15\n    Task/Handler: git check\n\n    [401] Git checkouts must contain explicit version\n    examples/example.yml:18\n    Task/Handler: git check 2\n\n    [301] Commands should not change things if nothing needs doing\n    examples/example.yml:24\n    Task/Handler: executing git through command\n\n    [303] git used in place of git module\n    examples/example.yml:24\n    Task/Handler: executing git through command\n\n    [303] git used in place of git module\n    examples/example.yml:27\n    Task/Handler: executing git through command\n\n    [401] Git checkouts must contain explicit version\n    examples/example.yml:30\n    Task/Handler: using git module\n\n    [206] Variables should have spaces before and after: {{ var_name }}\n    examples/example.yml:34\n        action: debug msg=\"{{item}}\"\n\n    [201] Trailing whitespace\n    examples/example.yml:35\n        with_items:\n\n    [403] Package installs should not use latest\n    examples/example.yml:39\n    Task/Handler: yum latest\n\n    [403] Package installs should not use latest\n    examples/example.yml:44\n    Task/Handler: apt latest\n\n    [101] Deprecated always_run\n    examples/example.yml:47\n    Task/Handler: always run\n\n\nIf playbooks include other playbooks, or tasks, or handlers or roles, these are also handled:\n\n.. code-block:: bash\n\n    $ ansible-lint examples/include.yml\n\n    [301] Commands should not change things if nothing needs doing\n    examples/play.yml:5\n    Task/Handler: a bad play\n\n    [303] service used in place of service module\n    examples/play.yml:5\n    Task/Handler: a bad play\n\n    [401] Git checkouts must contain explicit version\n    examples/roles/bobbins/tasks/main.yml:2\n    Task/Handler: test tasks\n\n    [701] No 'galaxy_info' found\n    examples/roles/hello/meta/main.yml:1\n    {'meta/main.yml': {'dependencies': [{'role': 'bobbins', '__line__': 3, '__file__': '/Users/akx/build/ansible-lint/examples/roles/hello/meta/main.yml'}], '__line__': 1, '__file__': '/Users/akx/build/ansible-lint/examples/roles/hello/meta/main.yml', 'skipped_rules': []}}\n\n    [303] service used in place of service module\n    examples/roles/morecomplex/handlers/main.yml:1\n    Task/Handler: restart service using command\n\n    [301] Commands should not change things if nothing needs doing\n    examples/roles/morecomplex/tasks/main.yml:1\n    Task/Handler: test bad command\n\n    [302] mkdir used in place of argument state=directory to file module\n    examples/roles/morecomplex/tasks/main.yml:1\n    Task/Handler: test bad command\n\n    [301] Commands should not change things if nothing needs doing\n    examples/roles/morecomplex/tasks/main.yml:4\n    Task/Handler: test bad command v2\n\n    [302] mkdir used in place of argument state=directory to file module\n    examples/roles/morecomplex/tasks/main.yml:4\n    Task/Handler: test bad command v2\n\n    [301] Commands should not change things if nothing needs doing\n    examples/roles/morecomplex/tasks/main.yml:7\n    Task/Handler: test bad local command\n\n    [305] Use shell only when shell functionality is required\n    examples/roles/morecomplex/tasks/main.yml:7\n    Task/Handler: test bad local command\n\n    [504] Do not use 'local_action', use 'delegate_to: localhost'\n    examples/roles/morecomplex/tasks/main.yml:8\n      local_action: shell touch foo\n\n    [201] Trailing whitespace\n    examples/tasks/x.yml:3\n      args:\n\n    [201] Trailing whitespace\n    examples/tasks/x.yml:3\n      args:\n\n.. usage-docs-inclusion-marker-end-do-not-remove\n\nConfiguring\n===========\n\n.. configuring-docs-inclusion-marker-do-not-remove\n\nConfiguration File\n------------------\n\nAnsible-lint supports local configuration via a ``.ansible-lint`` configuration file. Ansible-lint checks the working directory for the presence of this file and applies any configuration found there. The configuration file location can also be overridden via the ``-c path/to/file`` CLI flag.\n\nIf a value is provided on both the command line and via a config file, the values will be merged (if a list like **exclude_paths**), or the **True** value will be preferred, in the case of something like **quiet**.\n\nThe following values are supported, and function identically to their CLI counterparts:\n\n.. code-block:: yaml\n\n    exclude_paths:\n      - ./my/excluded/directory/\n      - ./my/other/excluded/directory/\n      - ./last/excluded/directory/\n    parseable: true\n    quiet: true\n    rulesdir:\n      - ./rule/directory/\n    skip_list:\n      - skip_this_tag\n      - and_this_one_too\n      - skip_this_id\n      - '401'\n    tags:\n      - run_this_tag\n    use_default_rules: true\n    verbosity: 1\n\n\nPre-commit Setup\n----------------\n\nTo use ansible-lint with `pre-commit`_, just add the following to your local repo's ``.pre-commit-config.yaml`` file. Make sure to change **rev:** to be either a git commit sha or tag of ansible-lint containing ``hooks.yaml``.\n\n.. code-block:: yaml\n\n    - repo: https://github.com/ansible/ansible-lint.git\n      rev: v4.1.0\n      hooks:\n        - id: ansible-lint\n          files: \\.(yaml|yml)$\n\n.. _pre-commit: https://pre-commit.com\n\n.. configuring-docs-inclusion-marker-end-do-not-remove\n\nRules\n=====\n\n.. rules-docs-inclusion-marker-do-not-remove\n\nSpecifying Rules at Runtime\n---------------------------\n\nBy default, ``ansible-lint`` uses the rules found in ``ansible-lint/lib/ansiblelint/rules``. To override this behavior and use a custom set of rules, use the ``-r /path/to/custom-rules`` option to provide a directory path containing the custom rules. For multiple rule sets, pass multiple ``-r`` options.\n\nIt's also possilbe to use the default rules, plus custom rules. This can be done by passing the ``-R`` to indicate that the deault rules are to be used, along with one or more ``-r`` options.\n\nUsing Tags to Include Rules\n```````````````````````````\n\nEach rule has an associated set of one or more tags. To view the list of tags for each available rule, use the ``-T`` option.\n\nThe following shows the available tags in an example set of rules, and the rules associated with each tag:\n\n.. code-block:: bash\n\n    $ ansible-lint -v -T\n\n    behaviour ['[503]']\n    bug ['[304]']\n    command-shell ['[305]', '[302]', '[304]', '[306]', '[301]', '[303]']\n    deprecated ['[105]', '[104]', '[103]', '[101]', '[102]']\n    formatting ['[104]', '[203]', '[201]', '[204]', '[206]', '[205]', '[202]']\n    idempotency ['[301]']\n    idiom ['[601]', '[602]']\n    metadata ['[701]', '[704]', '[703]', '[702]']\n    module ['[404]', '[401]', '[403]', '[402]']\n    oddity ['[501]']\n    readability ['[502]']\n    repeatability ['[401]', '[403]', '[402]']\n    resources ['[302]', '[303]']\n    safety ['[305]']\n    task ['[502]', '[503]', '[504]', '[501]']\n\nTo run just the *idempotency* rules, for example, run the following:\n\n.. code-block:: bash\n\n    $ ansible-lint -t idempotency playbook.yml\n\nExcluding Rules\n```````````````\n\nTo exclude rules from the available set of rules, use the ``-x SKIP_LIST`` option. For example, the following runs all of the rules except those with the tags *readability* and *safety*:\n\n.. code-block:: bash\n\n    $ ansible-lint -x readability,safety playbook.yml\n\nIt's also possible to skip specific rules by passing the rule ID. For example, the following excludes rule *502*:\n\n.. code-block:: bash\n\n    $ ansible-lint -x 502 playbook.yml\n\nFalse Positives: Skipping Rules\n-------------------------------\n\nSome rules are a bit of a rule of thumb. Advanced *git*, *yum* or *apt* usage, for example, is typically difficult to achieve through the modules. In this case, you should mark the task so that warnings aren't produced.\n\nTo skip a specific rule for a specific task, inside your ansible yaml add ``# noqa [rule_id]`` at the end of the line. If the rule is task-based (most are), add at the end of any line in the task. You can skip multiple rules via a space-separated list.\n\n.. code-block:: yaml\n\n    - name: this would typically fire GitHasVersionRule 401 and BecomeUserWithoutBecomeRule 501\n      become_user: alice  # noqa 401 501\n      git: src=/path/to/git/repo dest=checkout\n\nIf the rule is line-based, ``# noqa [rule_id]`` must be at the end of the particular line to be skipped\n\n.. code-block:: yaml\n\n    - name: this would typically fire LineTooLongRule 204 and VariableHasSpacesRule 206\n      get_url:\n        url: http://example.com/really_long_path/really_long_path/really_long_path/really_long_path/really_long_path/really_long_path/file.conf  # noqa 204\n        dest: \"{{dest_proj_path}}/foo.conf\"  # noqa 206\n\n\nIt's also a good practice to comment the reasons why a task is being skipped.\n\nIf you want skip running a rule entirely, you can use either:\n\n* `command-line skip_list`_ via ``-x``\n* `config file skip_list`_\n\nA less-preferred method of skipping is to skip all task-based rules for a task (this does not skip line-based rules). There are two mechanisms for this: the ``skip_ansible_lint`` tag works with all tasks, and the ``warn`` parameter works with the *command* or *shell* modules only. Examples:\n\n.. code-block:: yaml\n\n    - name: this would typically fire CommandsInsteadOfArgumentRule 302\n      command: warn=no chmod 644 X\n\n    - name: this would typically fire CommandsInsteadOfModuleRule 303\n      command: git pull --rebase\n      args:\n        warn: False\n\n    - name: this would typically fire GitHasVersionRule 401\n      git: src=/path/to/git/repo dest=checkout\n      tags:\n      - skip_ansible_lint\n\nCreating Custom Rules\n---------------------\n\nRules are described using a class file per rule. Default rules are named *DeprecatedVariableRule.py*, etc.\n\nEach rule definition should have the following:\n\n* ID: A unique identifier\n* Short description: Brief description of the rule\n* Description: Behaviour the rule is looking for\n* Tags: one or more tags that may be used to include or exclude the rule\n* At least one of the following methods:\n\n  * ``match`` that takes a line and returns None or False, if the line doesn't match the test, and True or a custom message, when it does. (This allows one rule to test multiple behaviours - see e.g. the *CommandsInsteadOfModulesRule*.)\n  * ``matchtask`` that operates on a single task or handler, such that tasks get standardized to always contain a *module* key and *module_arguments* key. Other common task modifiers, such as *when*, *with_items*, etc., are also available as keys, if present in the task.\n\nAn example rule using ``match`` is:\n\n.. code-block:: python\n\n    from ansiblelint import AnsibleLintRule\n\n    class DeprecatedVariableRule(AnsibleLintRule):\n\n        id = 'EXAMPLE002'\n        shortdesc = 'Deprecated variable declarations'\n        description = 'Check for lines that have old style ${var} ' + \\\n                      'declarations'\n        tags = { 'deprecated' }\n\n        def match(self, file, line):\n            return '${' in line\n\nAn example rule using ``matchtask`` is:\n\n.. code-block:: python\n\n    import ansiblelint.utils\n    from ansiblelint import AnsibleLintRule\n\n    class TaskHasTag(AnsibleLintRule):\n        id = 'EXAMPLE001'\n        shortdesc = 'Tasks must have tag'\n        description = 'Tasks must have tag'\n        tags = ['productivity']\n\n        def matchtask(self, file, task):\n            # If the task include another task or make the playbook fail\n            # Don't force to have a tag\n            if not set(task.keys()).isdisjoint(['include','fail']):\n                return False\n\n            # Task should have tags\n            if not task.has_key('tags'):\n                  return True\n\n        return False\n\nThe task argument to ``matchtask`` contains a number of keys - the critical one is *action*. The value of *task['action']* contains the module being used, and the arguments passed, both as key-value pairs and a list of other arguments (e.g. the command used with shell).\n\nIn ansible-lint 2.0.0, *task['action']['args']* was renamed *task['action']['module_arguments']* to avoid a clash when a module actually takes args as a parameter key (e.g. ec2_tag)\n\nIn ansible-lint 3.0.0 *task['action']['module']* was renamed *task['action']['__ansible_module__']* to avoid a clash when a module take module as an argument. As a precaution, *task['action']['module_arguments']* was renamed *task['action']['__ansible_arguments__']*.\n\n.. rules-docs-inclusion-marker-end-do-not-remove\n\nContributing\n============\n\nPlease read `Contribution guidelines`_ if you wish to contribute.\n\nAuthors\n=======\n\nansible-lint was created by `Will Thames`_ and is now maintained as part of the `Ansible`_ by `Red Hat`_ project.\n\n.. _Contribution guidelines: https://github.com/ansible/ansible-lint/blob/master/CONTRIBUTING.md\n.. _Will Thames: https://github.com/willthames\n.. _Ansible: https://ansible.com\n.. _Red Hat: https://redhat.com\n.. _command-line skip_list: https://docs.ansible.com/ansible-lint/usage/usage.html#command-line-options\n.. _config file skip_list: https://docs.ansible.com/ansible-lint/configuring/configuring.html#configuration-file\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ansible/ansible-lint", "keywords": "ansible,lint", "license": "MIT", "maintainer": "Ansible by Red Hat", "maintainer_email": "info@ansible.com", "name": "ansible-lint-fixed", "package_url": "https://pypi.org/project/ansible-lint-fixed/", "platform": "", "project_url": "https://pypi.org/project/ansible-lint-fixed/", "project_urls": {"Bug Tracker": "https://github.com/ansible/ansible-lint/issues", "CI: Azure": "https://dev.azure.com/ansible/ansible-lint/_build?view=runs", "CI: GitHub": "https://github.com/ansible/ansible-lint/actions", "CI: Travis": "https://travis-ci.com/ansible/ansible-lint", "Code of Conduct": "https://docs.ansible.com/ansible/latest/community/code_of_conduct.html", "Documentation": "https://docs.ansible.com/ansible-lint/", "Homepage": "https://github.com/ansible/ansible-lint", "Mailing lists": "https://docs.ansible.com/ansible/latest/community/communication.html#mailing-list-information", "Source Code": "https://github.com/ansible/ansible-lint"}, "release_url": "https://pypi.org/project/ansible-lint-fixed/4.2.0.1/", "requires_dist": ["ansible (>=2.7)", "pyyaml", "six", "pathlib2 ; python_version < \"3.2\"", "ruamel.yaml (<1,>=0.15.34) ; python_version < \"3.7\"", "ruamel.yaml (<1,>=0.15.37) ; python_version >= \"3.7\""], "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "summary": "Checks playbooks for practices and behaviour that could potentially be improved", "version": "4.2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/ansible-lint\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/063a155c4063c16a33001bbcc30c67d5e75c34b6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616e7369626c652d6c696e742e737667\"></a>\n<a href=\"https://docs.ansible.com/ansible-lint/rules/default_rules.html\" rel=\"nofollow\"><img alt=\"Ansible-lint rules explanation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f584a6b0cc1e0e959a24f9a90b506e0187f9aee9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e7369626c652d2d6c696e742d72756c65732532307461626c652d626c75652e737667\"></a>\n<a href=\"https://docs.ansible.com/ansible/latest/community/code_of_conduct.html\" rel=\"nofollow\"><img alt=\"Ansible Code of Conduct\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45c491b54604d930ed5cb5b8445aaed6668aaa35/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f64652532306f66253230436f6e647563742d416e7369626c652d73696c7665722e737667\"></a>\n<a href=\"https://docs.ansible.com/ansible/latest/community/communication.html#mailing-list-information\" rel=\"nofollow\"><img alt=\"Ansible mailing lists\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e7fa6d7b2889dde75c0becab08b971fab64795b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696c696e672532306c697374732d416e7369626c652d6f72616e67652e737667\"></a>\n<a href=\"https://travis-ci.com/ansible/ansible-lint\" rel=\"nofollow\"><img alt=\"Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/180c83427ed8a1c7216f7573e8d5f42d289e80b0/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f616e7369626c652f616e7369626c652d6c696e742f6d61737465722e7376673f6c6162656c3d4c696e75782532306275696c64732532302534302532305472617669732532304349\"></a>\n<a href=\"https://github.com/ansible/ansible-lint/actions?query=workflow%3A%F0%9F%91%B7\" rel=\"nofollow\"><img alt=\"\ud83d\udc77 GitHub Actions CI/CD build status \u2014 tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/649ee348fece8c3d3c5852a25ebd00a6ab74a244/68747470733a2f2f6769746875622e636f6d2f616e7369626c652f616e7369626c652d6c696e742f776f726b666c6f77732f2546302539462539312542372f62616467652e737667\"></a>\n<a href=\"https://github.com/ansible/ansible-lint/actions?query=workflow%3A%F0%9F%9A%A8\" rel=\"nofollow\"><img alt=\"\ud83d\udea8 GitHub Actions CI/CD build status \u2014 linters\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd24c8022676099a37a1d31aed5d777a8c71fd91/68747470733a2f2f6769746875622e636f6d2f616e7369626c652f616e7369626c652d6c696e742f776f726b666c6f77732f2546302539462539412541382f62616467652e737667\"></a>\n<a href=\"https://lgtm.com/projects/g/ansible/ansible-lint/context:python\" rel=\"nofollow\"><img alt=\"Language grade: Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c44abd3e43a39150891fcdf9fd2945f4e592f8e0/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f616e7369626c652f616e7369626c652d6c696e742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a>\n<a href=\"https://github.com/pre-commit/pre-commit\" rel=\"nofollow\"><img alt=\"pre-commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d861174d9af84b80d393b2e7c89badabc5e04097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7072652d2d636f6d6d69742d656e61626c65642d627269676874677265656e3f6c6f676f3d7072652d636f6d6d6974266c6f676f436f6c6f723d7768697465\"></a>\n<div id=\"ansible-lint\">\n<h2>Ansible-lint</h2>\n<p><tt><span class=\"pre\">ansible-lint</span></tt> checks playbooks for practices and behaviour that could\npotentially be improved.</p>\n<p><a href=\"https://docs.ansible.com/ansible-lint/\" rel=\"nofollow\">Visit the Ansible Lint docs site</a></p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<div id=\"using-pip\">\n<h3>Using Pip</h3>\n<pre>pip install ansible-lint\n</pre>\n</div>\n<div id=\"from-source\">\n<span id=\"installing-from-source\"></span><h3>From Source</h3>\n<p><strong>Note</strong>: pip 19.0+ is required for installation. Please consult with the <a href=\"https://packaging.python.org/tutorials/installing-packages/#ensure-pip-setuptools-and-wheel-are-up-to-date\" rel=\"nofollow\">PyPA User Guide</a>\nto learn more about managing Pip versions.</p>\n<pre>pip install git+https://github.com/ansible/ansible-lint.git\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"command-line-options\">\n<h3>Command Line Options</h3>\n<p>The following is the output from <tt><span class=\"pre\">ansible-lint</span> <span class=\"pre\">--help</span></tt>, providing an overview of the basic command line options:</p>\n<pre>Usage: ansible-lint <span class=\"o\">[</span>options<span class=\"o\">]</span> <span class=\"o\">[</span>playbook.yml <span class=\"o\">[</span>playbook2 ...<span class=\"o\">]]</span><span class=\"p\">|</span>roledirectory\n\nOptions:\n  --version             show program<span class=\"s1\">'s version number and exit\n  -h, --help            show this help message and exit\n  -L                    list all the rules\n  -q                    quieter, although not silent output\n  -p                    parseable output in the format of pep8\n  --parseable-severity  parseable output including severity of rule\n  -r RULESDIR           specify one or more rules directories using one or\n                        more -r arguments. Any -r flags override the default\n                        rules in ['</span>/path/to/ansible-\n                        lint/lib/ansiblelint/rules<span class=\"s1\">'], unless -R is also used.\n  -R                    Use default rules ['</span>/path/to/ansible-\n                        lint/lib/ansiblelint/rules<span class=\"s1\">'] in addition to any extra\n                        rules directories specified with -r. There is no need\n                        to specify this if no -r flags are used\n  -t TAGS               only check rules whose id/tags match these values\n  -T                    list all the tags\n  -v                    Increase verbosity level\n  -x SKIP_LIST          only check rules whose id/tags do not match these\n                        values\n  --nocolor             disable colored output\n  --force-color         Try force colored output (relying on ansible'</span>s code<span class=\"o\">)</span>\n  --exclude<span class=\"o\">=</span>EXCLUDE_PATHS\n                        path to directories or files to skip. This option is\n                        repeatable.\n  -c /path/to/file      Specify configuration file to use.  Defaults to\n                          <span class=\"s2\">\".ansible-lint\"</span>\n</pre>\n</div>\n<div id=\"linting-playbooks-and-roles\">\n<h3>Linting Playbooks and Roles</h3>\n<p>It\u2019s important to note that <tt><span class=\"pre\">ansible-lint</span></tt> accepts a list of Ansible playbook files or a list of role directories. Starting from a directory that contains the following, the playbook file, <tt>playbook.yml</tt>, or one of the role subdirectories, such as <tt>geerlingguy.apache</tt>, can be passed:</p>\n<pre>playbook.yml\nroles/\n    geerlingguy.apache/\n        tasks/\n        handlers/\n        files/\n        templates/\n        vars/\n        defaults/\n        meta/\n    geerlingguy.elasticsearch/\n        tasks/\n        handlers/\n        files/\n        templates/\n        vars/\n        defaults/\n        meta/\n</pre>\n<p>The following lints the role <tt>geerlingguy.apache</tt>:</p>\n<pre>$ ansible-lint geerlingguy.apache\n\n<span class=\"o\">[</span><span class=\"m\">305</span><span class=\"o\">]</span> Use shell only when shell functionality is required\n/Users/chouseknecht/.ansible/roles/geerlingguy.apache/tasks/main.yml:19\nTask/Handler: Get installed version of Apache.\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/.ansible/roles/geerlingguy.apache/tasks/main.yml:29\nTask/Handler: include_vars apache-22.yml\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/.ansible/roles/geerlingguy.apache/tasks/main.yml:32\nTask/Handler: include_vars apache-24.yml\n</pre>\n<p>Here\u2019s the contents of <tt>playbook.yml</tt>, which references multiples roles:</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Lint multiple roles</span>\n  <span class=\"nt\">hosts</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">all</span>\n  <span class=\"nt\">tasks</span><span class=\"p\">:</span>\n\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">include_role</span><span class=\"p\">:</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">geerlingguy.apache</span>\n\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">include_role</span><span class=\"p\">:</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">geerlingguy.elasticsearch</span>\n</pre>\n<p>The following lints <tt>playbook.yml</tt>, which evaluates both the playbook and the referenced roles:</p>\n<pre>$ ansible-lint playbook.yml\n\n<span class=\"o\">[</span><span class=\"m\">305</span><span class=\"o\">]</span> Use shell only when shell functionality is required\n/Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:19\nTask/Handler: Get installed version of Apache.\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:29\nTask/Handler: include_vars apache-22.yml\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:32\nTask/Handler: include_vars apache-24.yml\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/roles/geerlingguy.elasticsearch/tasks/main.yml:17\nTask/Handler: service <span class=\"nv\">state</span><span class=\"o\">=</span>started <span class=\"nv\">name</span><span class=\"o\">=</span>elasticsearch <span class=\"nv\">enabled</span><span class=\"o\">=</span>yes\n</pre>\n<p>Since <tt><span class=\"pre\">ansible-lint</span></tt> accepts a list of roles or playbooks, the following works as well, producing the same output as the example above:</p>\n<pre>$ ansible-lint geerlingguy.apache geerlingguy.elasticsearch\n\n<span class=\"o\">[</span><span class=\"m\">305</span><span class=\"o\">]</span> Use shell only when shell functionality is required\n/Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:19\nTask/Handler: Get installed version of Apache.\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:29\nTask/Handler: include_vars apache-22.yml\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/roles/geerlingguy.apache/tasks/main.yml:32\nTask/Handler: include_vars apache-24.yml\n\n<span class=\"o\">[</span><span class=\"m\">502</span><span class=\"o\">]</span> All tasks should be named\n/Users/chouseknecht/roles/geerlingguy.elasticsearch/tasks/main.yml:17\nTask/Handler: service <span class=\"nv\">state</span><span class=\"o\">=</span>started <span class=\"nv\">name</span><span class=\"o\">=</span>elasticsearch <span class=\"nv\">enabled</span><span class=\"o\">=</span>yes\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Included in <tt><span class=\"pre\">ansible-lint/examples</span></tt> are some example playbooks with undesirable features. Running ansible-lint on them works, as demonstrated in the following:</p>\n<pre>$ ansible-lint examples/example.yml\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/example.yml:9\nTask/Handler: <span class=\"nb\">unset</span> variable\n\n<span class=\"o\">[</span><span class=\"m\">206</span><span class=\"o\">]</span> Variables should have spaces before and after: <span class=\"o\">{{</span> var_name <span class=\"o\">}}</span>\nexamples/example.yml:10\n    action: <span class=\"nb\">command</span> <span class=\"nb\">echo</span> <span class=\"o\">{{</span>thisvariable<span class=\"o\">}}</span> is not <span class=\"nb\">set</span> in this playbook\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/example.yml:12\nTask/Handler: trailing whitespace\n\n<span class=\"o\">[</span><span class=\"m\">201</span><span class=\"o\">]</span> Trailing whitespace\nexamples/example.yml:13\n    action: <span class=\"nb\">command</span> <span class=\"nb\">echo</span> <span class=\"k\">do</span> nothing\n\n<span class=\"o\">[</span><span class=\"m\">401</span><span class=\"o\">]</span> Git checkouts must contain explicit version\nexamples/example.yml:15\nTask/Handler: git check\n\n<span class=\"o\">[</span><span class=\"m\">401</span><span class=\"o\">]</span> Git checkouts must contain explicit version\nexamples/example.yml:18\nTask/Handler: git check <span class=\"m\">2</span>\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/example.yml:24\nTask/Handler: executing git through <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">303</span><span class=\"o\">]</span> git used in place of git module\nexamples/example.yml:24\nTask/Handler: executing git through <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">303</span><span class=\"o\">]</span> git used in place of git module\nexamples/example.yml:27\nTask/Handler: executing git through <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">401</span><span class=\"o\">]</span> Git checkouts must contain explicit version\nexamples/example.yml:30\nTask/Handler: using git module\n\n<span class=\"o\">[</span><span class=\"m\">206</span><span class=\"o\">]</span> Variables should have spaces before and after: <span class=\"o\">{{</span> var_name <span class=\"o\">}}</span>\nexamples/example.yml:34\n    action: debug <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"{{item}}\"</span>\n\n<span class=\"o\">[</span><span class=\"m\">201</span><span class=\"o\">]</span> Trailing whitespace\nexamples/example.yml:35\n    with_items:\n\n<span class=\"o\">[</span><span class=\"m\">403</span><span class=\"o\">]</span> Package installs should not use latest\nexamples/example.yml:39\nTask/Handler: yum latest\n\n<span class=\"o\">[</span><span class=\"m\">403</span><span class=\"o\">]</span> Package installs should not use latest\nexamples/example.yml:44\nTask/Handler: apt latest\n\n<span class=\"o\">[</span><span class=\"m\">101</span><span class=\"o\">]</span> Deprecated always_run\nexamples/example.yml:47\nTask/Handler: always run\n</pre>\n<p>If playbooks include other playbooks, or tasks, or handlers or roles, these are also handled:</p>\n<pre>$ ansible-lint examples/include.yml\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/play.yml:5\nTask/Handler: a bad play\n\n<span class=\"o\">[</span><span class=\"m\">303</span><span class=\"o\">]</span> service used in place of service module\nexamples/play.yml:5\nTask/Handler: a bad play\n\n<span class=\"o\">[</span><span class=\"m\">401</span><span class=\"o\">]</span> Git checkouts must contain explicit version\nexamples/roles/bobbins/tasks/main.yml:2\nTask/Handler: <span class=\"nb\">test</span> tasks\n\n<span class=\"o\">[</span><span class=\"m\">701</span><span class=\"o\">]</span> No <span class=\"s1\">'galaxy_info'</span> found\nexamples/roles/hello/meta/main.yml:1\n<span class=\"o\">{</span><span class=\"s1\">'meta/main.yml'</span>: <span class=\"o\">{</span><span class=\"s1\">'dependencies'</span>: <span class=\"o\">[{</span><span class=\"s1\">'role'</span>: <span class=\"s1\">'bobbins'</span>, <span class=\"s1\">'__line__'</span>: <span class=\"m\">3</span>, <span class=\"s1\">'__file__'</span>: <span class=\"s1\">'/Users/akx/build/ansible-lint/examples/roles/hello/meta/main.yml'</span><span class=\"o\">}]</span>, <span class=\"s1\">'__line__'</span>: <span class=\"m\">1</span>, <span class=\"s1\">'__file__'</span>: <span class=\"s1\">'/Users/akx/build/ansible-lint/examples/roles/hello/meta/main.yml'</span>, <span class=\"s1\">'skipped_rules'</span>: <span class=\"o\">[]}}</span>\n\n<span class=\"o\">[</span><span class=\"m\">303</span><span class=\"o\">]</span> service used in place of service module\nexamples/roles/morecomplex/handlers/main.yml:1\nTask/Handler: restart service using <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/roles/morecomplex/tasks/main.yml:1\nTask/Handler: <span class=\"nb\">test</span> bad <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">302</span><span class=\"o\">]</span> mkdir used in place of argument <span class=\"nv\">state</span><span class=\"o\">=</span>directory to file module\nexamples/roles/morecomplex/tasks/main.yml:1\nTask/Handler: <span class=\"nb\">test</span> bad <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/roles/morecomplex/tasks/main.yml:4\nTask/Handler: <span class=\"nb\">test</span> bad <span class=\"nb\">command</span> v2\n\n<span class=\"o\">[</span><span class=\"m\">302</span><span class=\"o\">]</span> mkdir used in place of argument <span class=\"nv\">state</span><span class=\"o\">=</span>directory to file module\nexamples/roles/morecomplex/tasks/main.yml:4\nTask/Handler: <span class=\"nb\">test</span> bad <span class=\"nb\">command</span> v2\n\n<span class=\"o\">[</span><span class=\"m\">301</span><span class=\"o\">]</span> Commands should not change things <span class=\"k\">if</span> nothing needs doing\nexamples/roles/morecomplex/tasks/main.yml:7\nTask/Handler: <span class=\"nb\">test</span> bad <span class=\"nb\">local</span> <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">305</span><span class=\"o\">]</span> Use shell only when shell functionality is required\nexamples/roles/morecomplex/tasks/main.yml:7\nTask/Handler: <span class=\"nb\">test</span> bad <span class=\"nb\">local</span> <span class=\"nb\">command</span>\n\n<span class=\"o\">[</span><span class=\"m\">504</span><span class=\"o\">]</span> Do not use <span class=\"s1\">'local_action'</span>, use <span class=\"s1\">'delegate_to: localhost'</span>\nexamples/roles/morecomplex/tasks/main.yml:8\n  local_action: shell touch foo\n\n<span class=\"o\">[</span><span class=\"m\">201</span><span class=\"o\">]</span> Trailing whitespace\nexamples/tasks/x.yml:3\n  args:\n\n<span class=\"o\">[</span><span class=\"m\">201</span><span class=\"o\">]</span> Trailing whitespace\nexamples/tasks/x.yml:3\n  args:\n</pre>\n</div>\n</div>\n<div id=\"configuring\">\n<h2>Configuring</h2>\n<div id=\"configuration-file\">\n<h3>Configuration File</h3>\n<p>Ansible-lint supports local configuration via a <tt><span class=\"pre\">.ansible-lint</span></tt> configuration file. Ansible-lint checks the working directory for the presence of this file and applies any configuration found there. The configuration file location can also be overridden via the <tt><span class=\"pre\">-c</span> path/to/file</tt> CLI flag.</p>\n<p>If a value is provided on both the command line and via a config file, the values will be merged (if a list like <strong>exclude_paths</strong>), or the <strong>True</strong> value will be preferred, in the case of something like <strong>quiet</strong>.</p>\n<p>The following values are supported, and function identically to their CLI counterparts:</p>\n<pre><span class=\"nt\">exclude_paths</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">./my/excluded/directory/</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">./my/other/excluded/directory/</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">./last/excluded/directory/</span>\n<span class=\"nt\">parseable</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n<span class=\"nt\">quiet</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n<span class=\"nt\">rulesdir</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">./rule/directory/</span>\n<span class=\"nt\">skip_list</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">skip_this_tag</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">and_this_one_too</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">skip_this_id</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">'401'</span>\n<span class=\"nt\">tags</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">run_this_tag</span>\n<span class=\"nt\">use_default_rules</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n<span class=\"nt\">verbosity</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">1</span>\n</pre>\n</div>\n<div id=\"pre-commit-setup\">\n<h3>Pre-commit Setup</h3>\n<p>To use ansible-lint with <a href=\"https://pre-commit.com\" rel=\"nofollow\">pre-commit</a>, just add the following to your local repo\u2019s <tt><span class=\"pre\">.pre-commit-config.yaml</span></tt> file. Make sure to change <strong>rev:</strong> to be either a git commit sha or tag of ansible-lint containing <tt>hooks.yaml</tt>.</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">repo</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://github.com/ansible/ansible-lint.git</span>\n  <span class=\"nt\">rev</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">v4.1.0</span>\n  <span class=\"nt\">hooks</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">ansible-lint</span>\n      <span class=\"nt\">files</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">\\.(yaml|yml)$</span>\n</pre>\n</div>\n</div>\n<div id=\"rules\">\n<h2>Rules</h2>\n<div id=\"specifying-rules-at-runtime\">\n<h3>Specifying Rules at Runtime</h3>\n<p>By default, <tt><span class=\"pre\">ansible-lint</span></tt> uses the rules found in <tt><span class=\"pre\">ansible-lint/lib/ansiblelint/rules</span></tt>. To override this behavior and use a custom set of rules, use the <tt><span class=\"pre\">-r</span> <span class=\"pre\">/path/to/custom-rules</span></tt> option to provide a directory path containing the custom rules. For multiple rule sets, pass multiple <tt><span class=\"pre\">-r</span></tt> options.</p>\n<p>It\u2019s also possilbe to use the default rules, plus custom rules. This can be done by passing the <tt><span class=\"pre\">-R</span></tt> to indicate that the deault rules are to be used, along with one or more <tt><span class=\"pre\">-r</span></tt> options.</p>\n<div id=\"using-tags-to-include-rules\">\n<h4>Using Tags to Include Rules</h4>\n<p>Each rule has an associated set of one or more tags. To view the list of tags for each available rule, use the <tt><span class=\"pre\">-T</span></tt> option.</p>\n<p>The following shows the available tags in an example set of rules, and the rules associated with each tag:</p>\n<pre>$ ansible-lint -v -T\n\nbehaviour <span class=\"o\">[</span><span class=\"s1\">'[503]'</span><span class=\"o\">]</span>\nbug <span class=\"o\">[</span><span class=\"s1\">'[304]'</span><span class=\"o\">]</span>\ncommand-shell <span class=\"o\">[</span><span class=\"s1\">'[305]'</span>, <span class=\"s1\">'[302]'</span>, <span class=\"s1\">'[304]'</span>, <span class=\"s1\">'[306]'</span>, <span class=\"s1\">'[301]'</span>, <span class=\"s1\">'[303]'</span><span class=\"o\">]</span>\ndeprecated <span class=\"o\">[</span><span class=\"s1\">'[105]'</span>, <span class=\"s1\">'[104]'</span>, <span class=\"s1\">'[103]'</span>, <span class=\"s1\">'[101]'</span>, <span class=\"s1\">'[102]'</span><span class=\"o\">]</span>\nformatting <span class=\"o\">[</span><span class=\"s1\">'[104]'</span>, <span class=\"s1\">'[203]'</span>, <span class=\"s1\">'[201]'</span>, <span class=\"s1\">'[204]'</span>, <span class=\"s1\">'[206]'</span>, <span class=\"s1\">'[205]'</span>, <span class=\"s1\">'[202]'</span><span class=\"o\">]</span>\nidempotency <span class=\"o\">[</span><span class=\"s1\">'[301]'</span><span class=\"o\">]</span>\nidiom <span class=\"o\">[</span><span class=\"s1\">'[601]'</span>, <span class=\"s1\">'[602]'</span><span class=\"o\">]</span>\nmetadata <span class=\"o\">[</span><span class=\"s1\">'[701]'</span>, <span class=\"s1\">'[704]'</span>, <span class=\"s1\">'[703]'</span>, <span class=\"s1\">'[702]'</span><span class=\"o\">]</span>\nmodule <span class=\"o\">[</span><span class=\"s1\">'[404]'</span>, <span class=\"s1\">'[401]'</span>, <span class=\"s1\">'[403]'</span>, <span class=\"s1\">'[402]'</span><span class=\"o\">]</span>\noddity <span class=\"o\">[</span><span class=\"s1\">'[501]'</span><span class=\"o\">]</span>\nreadability <span class=\"o\">[</span><span class=\"s1\">'[502]'</span><span class=\"o\">]</span>\nrepeatability <span class=\"o\">[</span><span class=\"s1\">'[401]'</span>, <span class=\"s1\">'[403]'</span>, <span class=\"s1\">'[402]'</span><span class=\"o\">]</span>\nresources <span class=\"o\">[</span><span class=\"s1\">'[302]'</span>, <span class=\"s1\">'[303]'</span><span class=\"o\">]</span>\nsafety <span class=\"o\">[</span><span class=\"s1\">'[305]'</span><span class=\"o\">]</span>\ntask <span class=\"o\">[</span><span class=\"s1\">'[502]'</span>, <span class=\"s1\">'[503]'</span>, <span class=\"s1\">'[504]'</span>, <span class=\"s1\">'[501]'</span><span class=\"o\">]</span>\n</pre>\n<p>To run just the <em>idempotency</em> rules, for example, run the following:</p>\n<pre>$ ansible-lint -t idempotency playbook.yml\n</pre>\n</div>\n<div id=\"excluding-rules\">\n<h4>Excluding Rules</h4>\n<p>To exclude rules from the available set of rules, use the <tt><span class=\"pre\">-x</span> SKIP_LIST</tt> option. For example, the following runs all of the rules except those with the tags <em>readability</em> and <em>safety</em>:</p>\n<pre>$ ansible-lint -x readability,safety playbook.yml\n</pre>\n<p>It\u2019s also possible to skip specific rules by passing the rule ID. For example, the following excludes rule <em>502</em>:</p>\n<pre>$ ansible-lint -x <span class=\"m\">502</span> playbook.yml\n</pre>\n</div>\n</div>\n<div id=\"false-positives-skipping-rules\">\n<h3>False Positives: Skipping Rules</h3>\n<p>Some rules are a bit of a rule of thumb. Advanced <em>git</em>, <em>yum</em> or <em>apt</em> usage, for example, is typically difficult to achieve through the modules. In this case, you should mark the task so that warnings aren\u2019t produced.</p>\n<p>To skip a specific rule for a specific task, inside your ansible yaml add <tt># noqa [rule_id]</tt> at the end of the line. If the rule is task-based (most are), add at the end of any line in the task. You can skip multiple rules via a space-separated list.</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">this would typically fire GitHasVersionRule 401 and BecomeUserWithoutBecomeRule 501</span>\n  <span class=\"nt\">become_user</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">alice</span>  <span class=\"c1\"># noqa 401 501</span>\n  <span class=\"nt\">git</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">src=/path/to/git/repo dest=checkout</span>\n</pre>\n<p>If the rule is line-based, <tt># noqa [rule_id]</tt> must be at the end of the particular line to be skipped</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">this would typically fire LineTooLongRule 204 and VariableHasSpacesRule 206</span>\n  <span class=\"nt\">get_url</span><span class=\"p\">:</span>\n    <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">http://example.com/really_long_path/really_long_path/really_long_path/really_long_path/really_long_path/really_long_path/file.conf</span>  <span class=\"c1\"># noqa 204</span>\n    <span class=\"nt\">dest</span><span class=\"p\">:</span> <span class=\"s\">\"{{dest_proj_path}}/foo.conf\"</span>  <span class=\"c1\"># noqa 206</span>\n</pre>\n<p>It\u2019s also a good practice to comment the reasons why a task is being skipped.</p>\n<p>If you want skip running a rule entirely, you can use either:</p>\n<ul>\n<li><a href=\"https://docs.ansible.com/ansible-lint/usage/usage.html#command-line-options\" rel=\"nofollow\">command-line skip_list</a> via <tt><span class=\"pre\">-x</span></tt></li>\n<li><a href=\"https://docs.ansible.com/ansible-lint/configuring/configuring.html#configuration-file\" rel=\"nofollow\">config file skip_list</a></li>\n</ul>\n<p>A less-preferred method of skipping is to skip all task-based rules for a task (this does not skip line-based rules). There are two mechanisms for this: the <tt>skip_ansible_lint</tt> tag works with all tasks, and the <tt>warn</tt> parameter works with the <em>command</em> or <em>shell</em> modules only. Examples:</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">this would typically fire CommandsInsteadOfArgumentRule 302</span>\n  <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">warn=no chmod 644 X</span>\n\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">this would typically fire CommandsInsteadOfModuleRule 303</span>\n  <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">git pull --rebase</span>\n  <span class=\"nt\">args</span><span class=\"p\">:</span>\n    <span class=\"nt\">warn</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">False</span>\n\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">this would typically fire GitHasVersionRule 401</span>\n  <span class=\"nt\">git</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">src=/path/to/git/repo dest=checkout</span>\n  <span class=\"nt\">tags</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">skip_ansible_lint</span>\n</pre>\n</div>\n<div id=\"creating-custom-rules\">\n<h3>Creating Custom Rules</h3>\n<p>Rules are described using a class file per rule. Default rules are named <em>DeprecatedVariableRule.py</em>, etc.</p>\n<p>Each rule definition should have the following:</p>\n<ul>\n<li>ID: A unique identifier</li>\n<li>Short description: Brief description of the rule</li>\n<li>Description: Behaviour the rule is looking for</li>\n<li>Tags: one or more tags that may be used to include or exclude the rule</li>\n<li>At least one of the following methods:<ul>\n<li><tt>match</tt> that takes a line and returns None or False, if the line doesn\u2019t match the test, and True or a custom message, when it does. (This allows one rule to test multiple behaviours - see e.g. the <em>CommandsInsteadOfModulesRule</em>.)</li>\n<li><tt>matchtask</tt> that operates on a single task or handler, such that tasks get standardized to always contain a <em>module</em> key and <em>module_arguments</em> key. Other common task modifiers, such as <em>when</em>, <em>with_items</em>, etc., are also available as keys, if present in the task.</li>\n</ul>\n</li>\n</ul>\n<p>An example rule using <tt>match</tt> is:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ansiblelint</span> <span class=\"kn\">import</span> <span class=\"n\">AnsibleLintRule</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">DeprecatedVariableRule</span><span class=\"p\">(</span><span class=\"n\">AnsibleLintRule</span><span class=\"p\">):</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"s1\">'EXAMPLE002'</span>\n    <span class=\"n\">shortdesc</span> <span class=\"o\">=</span> <span class=\"s1\">'Deprecated variable declarations'</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s1\">'Check for lines that have old style $</span><span class=\"si\">{var}</span><span class=\"s1\"> '</span> <span class=\"o\">+</span> \\\n                  <span class=\"s1\">'declarations'</span>\n    <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'deprecated'</span> <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">match</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'${'</span> <span class=\"ow\">in</span> <span class=\"n\">line</span>\n</pre>\n<p>An example rule using <tt>matchtask</tt> is:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ansiblelint.utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ansiblelint</span> <span class=\"kn\">import</span> <span class=\"n\">AnsibleLintRule</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TaskHasTag</span><span class=\"p\">(</span><span class=\"n\">AnsibleLintRule</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"s1\">'EXAMPLE001'</span>\n    <span class=\"n\">shortdesc</span> <span class=\"o\">=</span> <span class=\"s1\">'Tasks must have tag'</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s1\">'Tasks must have tag'</span>\n    <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'productivity'</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">matchtask</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">):</span>\n        <span class=\"c1\"># If the task include another task or make the playbook fail</span>\n        <span class=\"c1\"># Don't force to have a tag</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">isdisjoint</span><span class=\"p\">([</span><span class=\"s1\">'include'</span><span class=\"p\">,</span><span class=\"s1\">'fail'</span><span class=\"p\">]):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"c1\"># Task should have tags</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">has_key</span><span class=\"p\">(</span><span class=\"s1\">'tags'</span><span class=\"p\">):</span>\n              <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</pre>\n<p>The task argument to <tt>matchtask</tt> contains a number of keys - the critical one is <em>action</em>. The value of <em>task[\u2018action\u2019]</em> contains the module being used, and the arguments passed, both as key-value pairs and a list of other arguments (e.g. the command used with shell).</p>\n<p>In ansible-lint 2.0.0, <em>task[\u2018action\u2019][\u2018args\u2019]</em> was renamed <em>task[\u2018action\u2019][\u2018module_arguments\u2019]</em> to avoid a clash when a module actually takes args as a parameter key (e.g. ec2_tag)</p>\n<p>In ansible-lint 3.0.0 <em>task[\u2018action\u2019][\u2018module\u2019]</em> was renamed <em>task[\u2018action\u2019][\u2018__ansible_module__\u2019]</em> to avoid a clash when a module take module as an argument. As a precaution, <em>task[\u2018action\u2019][\u2018module_arguments\u2019]</em> was renamed <em>task[\u2018action\u2019][\u2018__ansible_arguments__\u2019]</em>.</p>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please read <a href=\"https://github.com/ansible/ansible-lint/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">Contribution guidelines</a> if you wish to contribute.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>ansible-lint was created by <a href=\"https://github.com/willthames\" rel=\"nofollow\">Will Thames</a> and is now maintained as part of the <a href=\"https://ansible.com\" rel=\"nofollow\">Ansible</a> by <a href=\"https://redhat.com\" rel=\"nofollow\">Red Hat</a> project.</p>\n</div>\n\n          </div>"}, "last_serial": 6716605, "releases": {"4.2.0.1": [{"comment_text": "", "digests": {"md5": "73cf8e7c77b655aa775d4916a7cb440b", "sha256": "0138188d4f8a22966a302b986452c72d097cc495742ef8d1ea45574c58fa58f9"}, "downloads": -1, "filename": "ansible_lint_fixed-4.2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73cf8e7c77b655aa775d4916a7cb440b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "size": 58972, "upload_time": "2020-02-28T11:03:35", "upload_time_iso_8601": "2020-02-28T11:03:35.101040Z", "url": "https://files.pythonhosted.org/packages/33/0a/ba7581c4924880a04dd7d1622ae850715b5c657e6ced1a34957e9939c421/ansible_lint_fixed-4.2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9540dc3f3f4dead86c8cf01ce0f55dc8", "sha256": "a60da92f1696ec640bd1c622438494ee335fcfa6cb6094407ce70c22203ad472"}, "downloads": -1, "filename": "ansible-lint-fixed-4.2.0.1.tar.gz", "has_sig": false, "md5_digest": "9540dc3f3f4dead86c8cf01ce0f55dc8", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "size": 2926660, "upload_time": "2020-02-28T11:03:41", "upload_time_iso_8601": "2020-02-28T11:03:41.077083Z", "url": "https://files.pythonhosted.org/packages/39/26/ea67979f0fd9c285674935114519816c437d4ce759019c5e32ac4b04251f/ansible-lint-fixed-4.2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73cf8e7c77b655aa775d4916a7cb440b", "sha256": "0138188d4f8a22966a302b986452c72d097cc495742ef8d1ea45574c58fa58f9"}, "downloads": -1, "filename": "ansible_lint_fixed-4.2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73cf8e7c77b655aa775d4916a7cb440b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "size": 58972, "upload_time": "2020-02-28T11:03:35", "upload_time_iso_8601": "2020-02-28T11:03:35.101040Z", "url": "https://files.pythonhosted.org/packages/33/0a/ba7581c4924880a04dd7d1622ae850715b5c657e6ced1a34957e9939c421/ansible_lint_fixed-4.2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9540dc3f3f4dead86c8cf01ce0f55dc8", "sha256": "a60da92f1696ec640bd1c622438494ee335fcfa6cb6094407ce70c22203ad472"}, "downloads": -1, "filename": "ansible-lint-fixed-4.2.0.1.tar.gz", "has_sig": false, "md5_digest": "9540dc3f3f4dead86c8cf01ce0f55dc8", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "size": 2926660, "upload_time": "2020-02-28T11:03:41", "upload_time_iso_8601": "2020-02-28T11:03:41.077083Z", "url": "https://files.pythonhosted.org/packages/39/26/ea67979f0fd9c285674935114519816c437d4ce759019c5e32ac4b04251f/ansible-lint-fixed-4.2.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:04 2020"}