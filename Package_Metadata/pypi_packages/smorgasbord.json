{"info": {"author": "Jack Jennings", "author_email": "j@ckjennin.gs", "bugtrack_url": null, "classifiers": [], "description": "Sm\u00f6rg\u00e5sbord\n===========\n\n.. image:: https://travis-ci.org/jackjennings/smorgasbord.svg?branch=master\n    :target: https://travis-ci.org/jackjennings/smorgasbord\n\nSm\u00f6rg\u00e5sbord tests coverage over unicode character sets.\n\nThe ``Smorgasbord`` class inherits from ``UnicodeSet`` and supports `the same features <https://github.com/jackjennings/unicodeset>`_.\n\nSupports Python 2.6 \u2013 3.x\n\n.. code-block:: bash\n\n    $ pip install smorgasbord\n\n.. code-block:: python\n\n    from smorgasbord import Smorgasbord\n\n    # Provide a path to a file or folder of character sets\n    Smorgasbord.paths.prepend(\"/my/path/to/language/en.txt\")\n\n    >>> bord = Smorgasbord([97, \"b\", \"c\", u\"\u00fc\", u\"\\u0660\"])\n    Smorgasbord([u\"a\", u\"c\", u\"b\", u\"\\xfc\", u\"\\u0660\"])\n\n    # Reports are accessed though the \"reports\" dict using the language code\n    >>> en = bord.reports[\"en\"]\n    \n    # Basic information about the report's language is accessible\n    >>> en.language.code\n    \"en\"\n    >>> en.language.name\n    \"English\"\n    >>> en.language.characters\n    FrozenUnicodeSet([u\"a\", u\"b\", u\"c\", ...])\n    \n    # Amount of coverage is availbe as float and string representations\n    >>> en.coverage\n    0.057\n    >>> en.coverage.percentage\n    u\"5.7%\"\n    \n    # Sets of glyphs can be accessed\n    >>> en.covered\n    FrozenUnicodeSet([u\"a\", u\"b\", u\"c\"])\n    >>> en.uncovered\n    FrozenUnicodeSet([u\"d\", u\"e\", u\"f\", ...])\n    \n    # Reports can also return a boolean value for completeness:\n    >>> en.complete\n    False\n    >>> en.incomplete\n    True\n\nCharacter Set Files\n-------------------\n\nEach character set is defined in a text file. Characters are separated by spaces, and lines starting with a ``#`` are ignored as comments. Line breaks can and should be used to wrap lines to 80 characters maximum.\n\nFor example, an ``en.txt`` definition for an English coverage character set:\n\n.. code-block:: python\n\n    # Language: English\n    a b c d e f g h i j k l m n o p q r s t u v w x y z\n    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\nThe first line is a special comment that will be parsed as the language name. Other special comments may be added in the future, but for now only ``Language`` is supported.\n\nSupplying Character Sets\n------------------------\n\nCharacter sets are made available by supplying a path to a folder, or directly to a language file.\n\n.. code-block:: python\n\n    Smorgasbord.paths.prepend(\"/my/path/to/language/files/dir\")\n    Smorgasbord.paths.prepend(\"/my/path/to/language/file.txt\")\n\nCharacter set files are searched for in each succesive folder, using the first matching file.\n\nAlternatively, the ``paths`` array can be replaced entirely:\n\n.. code-block:: python\n\n    Smorgasbord.paths = [\"/my/path/to/language/files/dir\"]\n\nRoadmap\n-------\n\nThis is a quick list of features that will need to be added in the near future (and will probably comprise a 1.0 release).\n\n* Lazily evaluate reports. Currently the library loads all language files when a Smorgasbord is initialized, which will get slow, fast. This should happen at the latest possible moment.\n* Unicode ranges in language files. Adding support for unicode ranges will probably be necesary for languages with large character sets.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jackjennings/smorgasbord", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "smorgasbord", "package_url": "https://pypi.org/project/smorgasbord/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/smorgasbord/", "project_urls": {"Homepage": "http://github.com/jackjennings/smorgasbord"}, "release_url": "https://pypi.org/project/smorgasbord/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Reports coverage given a set of unicode values", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jackjennings/smorgasbord\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jackjennings/smorgasbord.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b765a1c01b9696be791711096f9218c8d7dc3fb/68747470733a2f2f7472617669732d63692e6f72672f6a61636b6a656e6e696e67732f736d6f72676173626f72642e7376673f6272616e63683d6d6173746572\"></a>\n<p>Sm\u00f6rg\u00e5sbord tests coverage over unicode character sets.</p>\n<p>The <tt>Smorgasbord</tt> class inherits from <tt>UnicodeSet</tt> and supports <a href=\"https://github.com/jackjennings/unicodeset\" rel=\"nofollow\">the same features</a>.</p>\n<p>Supports Python 2.6 \u2013 3.x</p>\n<pre>$ pip install smorgasbord\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smorgasbord</span> <span class=\"kn\">import</span> <span class=\"n\">Smorgasbord</span>\n\n<span class=\"c1\"># Provide a path to a file or folder of character sets</span>\n<span class=\"n\">Smorgasbord</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">prepend</span><span class=\"p\">(</span><span class=\"s2\">\"/my/path/to/language/en.txt\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bord</span> <span class=\"o\">=</span> <span class=\"n\">Smorgasbord</span><span class=\"p\">([</span><span class=\"mi\">97</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"\u00fc\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"</span><span class=\"se\">\\u0660</span><span class=\"s2\">\"</span><span class=\"p\">])</span>\n<span class=\"n\">Smorgasbord</span><span class=\"p\">([</span><span class=\"sa\">u</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"</span><span class=\"se\">\\xfc</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"</span><span class=\"se\">\\u0660</span><span class=\"s2\">\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Reports are accessed though the \"reports\" dict using the language code</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span> <span class=\"o\">=</span> <span class=\"n\">bord</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">[</span><span class=\"s2\">\"en\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Basic information about the report's language is accessible</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">code</span>\n<span class=\"s2\">\"en\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"s2\">\"English\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">characters</span>\n<span class=\"n\">FrozenUnicodeSet</span><span class=\"p\">([</span><span class=\"sa\">u</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Amount of coverage is availbe as float and string representations</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">coverage</span>\n<span class=\"mf\">0.057</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">coverage</span><span class=\"o\">.</span><span class=\"n\">percentage</span>\n<span class=\"sa\">u</span><span class=\"s2\">\"5.7%\"</span>\n\n<span class=\"c1\"># Sets of glyphs can be accessed</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">covered</span>\n<span class=\"n\">FrozenUnicodeSet</span><span class=\"p\">([</span><span class=\"sa\">u</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"c\"</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">uncovered</span>\n<span class=\"n\">FrozenUnicodeSet</span><span class=\"p\">([</span><span class=\"sa\">u</span><span class=\"s2\">\"d\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"f\"</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Reports can also return a boolean value for completeness:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">complete</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">incomplete</span>\n<span class=\"kc\">True</span>\n</pre>\n<div id=\"character-set-files\">\n<h2>Character Set Files</h2>\n<p>Each character set is defined in a text file. Characters are separated by spaces, and lines starting with a <tt>#</tt> are ignored as comments. Line breaks can and should be used to wrap lines to 80 characters maximum.</p>\n<p>For example, an <tt>en.txt</tt> definition for an English coverage character set:</p>\n<pre><span class=\"c1\"># Language: English</span>\n<span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">l</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">o</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span>\n<span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span> <span class=\"n\">H</span> <span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"n\">K</span> <span class=\"n\">L</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">O</span> <span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"n\">T</span> <span class=\"n\">U</span> <span class=\"n\">V</span> <span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span>\n</pre>\n<p>The first line is a special comment that will be parsed as the language name. Other special comments may be added in the future, but for now only <tt>Language</tt> is supported.</p>\n</div>\n<div id=\"supplying-character-sets\">\n<h2>Supplying Character Sets</h2>\n<p>Character sets are made available by supplying a path to a folder, or directly to a language file.</p>\n<pre><span class=\"n\">Smorgasbord</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">prepend</span><span class=\"p\">(</span><span class=\"s2\">\"/my/path/to/language/files/dir\"</span><span class=\"p\">)</span>\n<span class=\"n\">Smorgasbord</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">prepend</span><span class=\"p\">(</span><span class=\"s2\">\"/my/path/to/language/file.txt\"</span><span class=\"p\">)</span>\n</pre>\n<p>Character set files are searched for in each succesive folder, using the first matching file.</p>\n<p>Alternatively, the <tt>paths</tt> array can be replaced entirely:</p>\n<pre><span class=\"n\">Smorgasbord</span><span class=\"o\">.</span><span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"/my/path/to/language/files/dir\"</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<p>This is a quick list of features that will need to be added in the near future (and will probably comprise a 1.0 release).</p>\n<ul>\n<li>Lazily evaluate reports. Currently the library loads all language files when a Smorgasbord is initialized, which will get slow, fast. This should happen at the latest possible moment.</li>\n<li>Unicode ranges in language files. Adding support for unicode ranges will probably be necesary for languages with large character sets.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1235359, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8c76f0225176620504286ac0ce3bb103", "sha256": "c0062ed067e6bddbce5a967484b0333f70ca916926dbdcca75bf40ff5f474b5d"}, "downloads": -1, "filename": "smorgasbord-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "8c76f0225176620504286ac0ce3bb103", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10615, "upload_time": "2014-09-18T20:48:07", "upload_time_iso_8601": "2014-09-18T20:48:07.599338Z", "url": "https://files.pythonhosted.org/packages/e9/7c/aa83ba355bc7985d5e506bea854963bd180d81def45dd393135c93758ad0/smorgasbord-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "853b1ebbc4aed38cccdba9aef8fc93ae", "sha256": "c613342e49d158bb4208d5529d24d6651bed5044cf30f7979b47573c16170af1"}, "downloads": -1, "filename": "smorgasbord-0.0.1.tar.gz", "has_sig": false, "md5_digest": "853b1ebbc4aed38cccdba9aef8fc93ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5741, "upload_time": "2014-09-18T20:48:11", "upload_time_iso_8601": "2014-09-18T20:48:11.227996Z", "url": "https://files.pythonhosted.org/packages/c8/9c/468e9440a2919760124b0b9d4a3335e19a3fe4622b683349b4d2cede5904/smorgasbord-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "605ea49164892c637369235b7f8f2ef0", "sha256": "c7994838dec4eb6ef57c2d905903e9e863de797495132de13688cfb01ce7a281"}, "downloads": -1, "filename": "smorgasbord-0.0.2.tar.gz", "has_sig": false, "md5_digest": "605ea49164892c637369235b7f8f2ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5227, "upload_time": "2014-09-23T19:05:35", "upload_time_iso_8601": "2014-09-23T19:05:35.087258Z", "url": "https://files.pythonhosted.org/packages/26/48/5a74059e7bd2f12347134454a0e086e11f6a3d213368a2aa34cdbdccd9be/smorgasbord-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "605ea49164892c637369235b7f8f2ef0", "sha256": "c7994838dec4eb6ef57c2d905903e9e863de797495132de13688cfb01ce7a281"}, "downloads": -1, "filename": "smorgasbord-0.0.2.tar.gz", "has_sig": false, "md5_digest": "605ea49164892c637369235b7f8f2ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5227, "upload_time": "2014-09-23T19:05:35", "upload_time_iso_8601": "2014-09-23T19:05:35.087258Z", "url": "https://files.pythonhosted.org/packages/26/48/5a74059e7bd2f12347134454a0e086e11f6a3d213368a2aa34cdbdccd9be/smorgasbord-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:48 2020"}