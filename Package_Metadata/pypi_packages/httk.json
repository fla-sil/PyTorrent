{"info": {"author": "Rickard Armiento, et al.", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries"], "description": "==================================\nThe High-Throughput Toolkit (httk)\n==================================\n\n|  The High-Throughput Toolkit (httk)\n|  Copyright (c) 2012 - 2018, Rickard Armiento, et al.\n|  For License information see the file COPYING.\n|  Contact: httk [at] openmaterialsdb.se\n\nAbout the High-Throughput Toolkit\n---------------------------------\n\nThe High-Throughput Toolkit (*httk*) is a toolkit for:\n\n- Preparing and running calculations.\n- Analyzing the results.\n- Store the results and outcome in a global and/or in a personalized database.\n\n*httk* is an independent implementation of the database-centric high-throughput methodology\npioneered by Ceder et al., and others. [see, e.g., Comp. Mat. Sci. 50, 2295 (2011)].\n*httk* is presently targeted at atomistic calculations in materials science and electronic\nstructure, but aims to be extended into a library useful also outside those areas.\n\nQuickstart\n----------\n\nHttk presently consists of a python library and a few programs. If you just want access to use (rather than develop)\nthe python library, and do not need the external programs, the install is very easy.\n\n(Note: for *httk* version 2.0 we will go over to a single 'script' endpoint,\n``httk``, for which the pip install step should be sufficient to get a full install.)\n\n\nInstall to access just the python library\n*****************************************\n\n1. You need Python 2.7 and access to pip in your terminal\n   window. (You can get Python and pip, e.g., by installing the Python 2.7 version\n   of Anaconda, https://www.anaconda.com/download, which should give you\n   all you need on Linux, macOS and Windows.)\n\n2. Issue in your terminal window::\n\n     pip install httk \n\n   If you at a later point want to upgrade your installation, just\n   issue::\n\n     pip install httk --upgrade\n\nYou should now be able to simply do ``import httk`` in your python programs to use the *httk* python library.\n\nAlternative install: python library + binaries + ability to develop *httk*\n**************************************************************************\n\n1. In addition to Python 2.7 and pip, you also need git.\n   You can get git from here: https://git-scm.com/ \n\n2. Issue in your terminal window::\n\n     git clone https://github.com/rartino/httk\n     cd httk\n     pip install --editable . --user\n\n   If you at a later point want to upgrade your installation, just go\n   back to the *httk* directory and issue::\n\n     git pull\n     pip install . --upgrade --user\n\n3. To setup the paths to the *httk* programs you also need to run::\n\n     source /path/to/httk/init.shell\n\n   where ``/path/to/httk`` should be the path to where you downloaded\n   *httk* in the steps above. To make this permanent, please add this\n   line to your shell initialization script, e.g., ~/.bashrc\n\nYou are now ready to use *httk*.\n\n  Notes:\n\n  * The above instructions give you access to the latest stable release of httk.\n    To get the latest developer relase (which may or may not work), issue::\n\n\t git checkout devel\n\t pip install . --upgrade --user\n\n    in your httk directory. To switch back to the stable release, do::\n\n\t git checkout master\n\t pip install . --upgrade --user\t\n\n  * An alternative to installing with ``pip install`` is to just run httk out of the\n    httk directory. In that case, skip the pip install step above and just append\n    ``source ~/path/to/httk/init.shell`` to your shell init files,\n    with ``~/path/to/httk`` replaced by the path of your httk directory.)*\n\n\n\nA few simple usage examples\n***************************\n\nLoad a cif file or poscar\n+++++++++++++++++++++++++\n\nThis is a very simple example of just loading a structure from a ``.cif`` file and writing out some information about it.\n\n.. code:: python\n\n  import httk\n\n  struct = httk.load(\"example.cif\")\n\n  print(\"Formula:\", struct.formula)\n  print(\"Volume:\", float(struct.uc_volume))\n  print(\"Assignments:\", struct.uc_formula_symbols)\n  print(\"Counts:\", struct.uc_counts )\n  print(\"Coords:\", struct.uc_reduced_coords)\n\nRunning this generates the output::\n\n  ('Formula:', 'BO2Tl')\n  ('Volume', 509.24213999999984)\n  ('Assignments',['B', 'O', 'Tl'])\n  ('Counts:', [8, 16, 8])\n  ('Coords', FracVector(((1350,4550,4250) , ... , ,10000)))\n\n..\n\nCreate structures in code\n+++++++++++++++++++++++++\n\n.. code:: python\n\n  from httk.atomistic import Structure\n\n  cell = [[1.0, 0.0, 0.0] ,\n          [0.0, 1.0, 0.0] ,\n          [0.0, 0.0, 1.0]]\n  coordgroups = [[\n                    [0.5, 0.5, 0.5]\n                 ],[\n                    [0.0, 0.0, 0.0]\n                 ],[\n                    [0.5, 0.0, 0.0], [0.0, 0.5, 0.0], [0.0, 0.0, 0.5]\n                 ]]\n\n  assignments = ['Pb' ,'Ti' ,'O']\n  volume =62.79\n  struct = Structure.create(uc_cell = cell,\n               uc_reduced_coordgroups = coordgroups,\n               assignments = assignments,\n               uc_volume = volume)\n\n\nCreate database file, store a structure in it, and retrive it\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n.. code:: python\n\n  import httk, httk.db\n  from httk.atomistic import Structure\n\n  backend = httk.db.backend.Sqlite('example.sqlite')\n  store = httk.db.store.SqlStore(backend)\n\n  tablesalt = httk.load('NaCl.cif')\n  store.save(tablesalt)\n\n  arsenic = httk.load('As.cif')\n  store.save(arsenic)\n\n  # Search for anything with Na\n  search = store.searcher()\n  search_struct = search.variable(Structure)\n  search.add(search_struct.formula_symbols.is_in('Na'))\n\n  search.output(search_struct, 'structure')\n\n  for match, header in list(search):\n      struct = match[0]\n      print \"Found structure\", struct.formula, [str(struct.get_tags()[x]) for x in struct.get_tags()]\n\n\n\nCreate database file and store your own data in it\n++++++++++++++++++++++++++++++++++++++++++++++++++\n.. code:: python\n\n  #!/usr/bin/env python\n\n  import httk, httk.db\n  from httk.atomistic import Structure\n\n  class StructureIsEdible(httk.HttkObject):\n\n      @httk.httk_typed_init({'structure': Structure, 'is_edible': bool})\n      def __init__(self, structure, is_edible):\n\t  self.structure = structure\n\t  self.is_edible = is_edible\n\n  backend = httk.db.backend.Sqlite('example.sqlite')\n  store = httk.db.store.SqlStore(backend)\n\n  tablesalt = httk.load('NaCl.cif')\n  edible = StructureIsEdible(tablesalt, True)\n  store.save(edible)\n\n  arsenic = httk.load('As.cif')  \n  edible = StructureIsEdible(arsenic, False)\n  store.save(edible)\n\n\n\nTutorial\n********\nUnder ``Tutorial/Step1, 2, ...`` in your *httk* directory you find a series of code snippets to run to see *httk* in action. \nYou can either just execute them there, or try them out in, e.g., a Jupyter notebook.\n\nIn addition to the Tutorial, there is a lot of straightforward examples of various things that can be done with httk\nin the ``Examples`` subdirectory. Check the source files for information about what the various examples does.\n\n\nReporting bugs\n--------------\n\nWe track our bugs using the issue tracker at github. \nIf you find a bug, please search to see if someone else\nhas reported it here:\n\n  https://github.com/rartino/httk/issues\n\nIf you cannot find it already reported, please click the 'new issue' \nbutton and report the bug.\n\nCiting *httk* in scientific works\n---------------------------------\n\nThis is presently the preferred citation to the httk framework itself:\n\n   The High-Throughput Toolkit (httk), R. Armiento et al., http://httk.openmaterialsdb.se/.\n\nSince *httk* can call upon many other pieces of software quite\ntransparently, it may not be initially obvious what other software\nshould be cited. Unless configured otherwise, *httk* prints out a list\nof citations when the program ends. You should take note of those\ncitations and include them in your publications if relevant.\n\nMore info and help\n------------------\n\nInstallation: For more details on installation options refer to INSTALL.txt, distributed with *httk*.\n\nUser's guide: see USERS_GUIDE.txt, distributed with *httk*.\n\nWorkflows: for more details on how high-throughput computational workflows are\nexecuted via the runmanager.sh program, see RUNMANAGER_DETAILS.txt distributed with *httk*.\nThis may be useful if you plan to design your own workflows using *httk*.\n\nDeveloping / contributing to *httk*: refer to DEVELOPERS_GUIDE.txt distributed with *httk*.\n\nContributors\n------------\n\nSee AUTHORS.txt, distributed with *httk*.\n\nAcknowledgements\n----------------\n\n*httk* has kindly been funded in part by:\n   * The Swedish Research Council (VR) Grant No. 621-2011-4249\n\n   * The Linnaeus Environment at Link\u00f6ping on Nanoscale Functional\n     Materials (LiLi-NFM) funded by the Swedish Research Council (VR).\n\nLicense and redistribution\n--------------------------\n\nThe High-Throughput Toolkit uses the GNU Affero General Public\nLicense, which is an open source license that allows redistribution\nand re-use if the license requirements are met. (Note that this\nlicense contains clauses that are not in the GNU Public License, and\nsource code from httk thus cannot be imported into GPL licensed\nprojects.)\n\nThe full license text is present in the file ``COPYING`` distributed\nwith *httk*.\n\nContact\n-------\n\nOur primary point of contact is email to: httk [at] openmaterialsdb.se\n(where [at] is replaced by @)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://httk.openmaterialsdb.se", "keywords": "high-throughput workflow project-management storage database analysis computational atomistic", "license": "", "maintainer": "", "maintainer_email": "", "name": "httk", "package_url": "https://pypi.org/project/httk/", "platform": "", "project_url": "https://pypi.org/project/httk/", "project_urls": {"Homepage": "https://httk.openmaterialsdb.se"}, "release_url": "https://pypi.org/project/httk/1.1.14/", "requires_dist": null, "requires_python": "", "summary": "The high-thoughput toolkit: workflow, project management, storage, and data analysis for large-scale computational projects", "version": "1.1.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div>The High-Throughput Toolkit (httk)</div>\n<div>Copyright (c) 2012 - 2018, Rickard Armiento, et al.</div>\n<div>For License information see the file COPYING.</div>\n<div>Contact: httk [at] openmaterialsdb.se</div>\n</div>\n<div id=\"about-the-high-throughput-toolkit\">\n<h2>About the High-Throughput Toolkit</h2>\n<p>The High-Throughput Toolkit (<em>httk</em>) is a toolkit for:</p>\n<ul>\n<li>Preparing and running calculations.</li>\n<li>Analyzing the results.</li>\n<li>Store the results and outcome in a global and/or in a personalized database.</li>\n</ul>\n<p><em>httk</em> is an independent implementation of the database-centric high-throughput methodology\npioneered by Ceder et al., and others. [see, e.g., Comp. Mat. Sci. 50, 2295 (2011)].\n<em>httk</em> is presently targeted at atomistic calculations in materials science and electronic\nstructure, but aims to be extended into a library useful also outside those areas.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Httk presently consists of a python library and a few programs. If you just want access to use (rather than develop)\nthe python library, and do not need the external programs, the install is very easy.</p>\n<p>(Note: for <em>httk</em> version 2.0 we will go over to a single \u2018script\u2019 endpoint,\n<tt>httk</tt>, for which the pip install step should be sufficient to get a full install.)</p>\n<div id=\"install-to-access-just-the-python-library\">\n<h3>Install to access just the python library</h3>\n<ol>\n<li><p>You need Python 2.7 and access to pip in your terminal\nwindow. (You can get Python and pip, e.g., by installing the Python 2.7 version\nof Anaconda, <a href=\"https://www.anaconda.com/download\" rel=\"nofollow\">https://www.anaconda.com/download</a>, which should give you\nall you need on Linux, macOS and Windows.)</p>\n</li>\n<li><p>Issue in your terminal window:</p>\n<pre>pip install httk\n</pre>\n<p>If you at a later point want to upgrade your installation, just\nissue:</p>\n<pre>pip install httk --upgrade\n</pre>\n</li>\n</ol>\n<p>You should now be able to simply do <tt>import httk</tt> in your python programs to use the <em>httk</em> python library.</p>\n</div>\n<div id=\"alternative-install-python-library-binaries-ability-to-develop-httk\">\n<h3>Alternative install: python library + binaries + ability to develop <em>httk</em></h3>\n<ol>\n<li><p>In addition to Python 2.7 and pip, you also need git.\nYou can get git from here: <a href=\"https://git-scm.com/\" rel=\"nofollow\">https://git-scm.com/</a></p>\n</li>\n<li><p>Issue in your terminal window:</p>\n<pre>git clone https://github.com/rartino/httk\ncd httk\npip install --editable . --user\n</pre>\n<p>If you at a later point want to upgrade your installation, just go\nback to the <em>httk</em> directory and issue:</p>\n<pre>git pull\npip install . --upgrade --user\n</pre>\n</li>\n<li><p>To setup the paths to the <em>httk</em> programs you also need to run:</p>\n<pre>source /path/to/httk/init.shell\n</pre>\n<p>where <tt>/path/to/httk</tt> should be the path to where you downloaded\n<em>httk</em> in the steps above. To make this permanent, please add this\nline to your shell initialization script, e.g., ~/.bashrc</p>\n</li>\n</ol>\n<p>You are now ready to use <em>httk</em>.</p>\n<blockquote>\n<p>Notes:</p>\n<ul>\n<li><p>The above instructions give you access to the latest stable release of httk.\nTo get the latest developer relase (which may or may not work), issue:</p>\n<pre>git checkout devel\npip install . --upgrade --user\n</pre>\n<p>in your httk directory. To switch back to the stable release, do:</p>\n<pre>git checkout master\npip install . --upgrade --user\n</pre>\n</li>\n<li><p>An alternative to installing with <tt>pip install</tt> is to just run httk out of the\nhttk directory. In that case, skip the pip install step above and just append\n<tt>source ~/path/to/httk/init.shell</tt> to your shell init files,\nwith <tt>~/path/to/httk</tt> replaced by the path of your httk directory.)*</p>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"a-few-simple-usage-examples\">\n<h3>A few simple usage examples</h3>\n<div id=\"load-a-cif-file-or-poscar\">\n<h4>Load a cif file or poscar</h4>\n<p>This is a very simple example of just loading a structure from a <tt>.cif</tt> file and writing out some information about it.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">httk</span>\n\n<span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"example.cif\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Formula:\"</span><span class=\"p\">,</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">formula</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Volume:\"</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">uc_volume</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Assignments:\"</span><span class=\"p\">,</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">uc_formula_symbols</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Counts:\"</span><span class=\"p\">,</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">uc_counts</span> <span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Coords:\"</span><span class=\"p\">,</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">uc_reduced_coords</span><span class=\"p\">)</span>\n</pre>\n<p>Running this generates the output:</p>\n<pre>('Formula:', 'BO2Tl')\n('Volume', 509.24213999999984)\n('Assignments',['B', 'O', 'Tl'])\n('Counts:', [8, 16, 8])\n('Coords', FracVector(((1350,4550,4250) , ... , ,10000)))\n</pre>\n</div>\n<div id=\"create-structures-in-code\">\n<h4>Create structures in code</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">httk.atomistic</span> <span class=\"kn\">import</span> <span class=\"n\">Structure</span>\n\n<span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span> <span class=\"p\">,</span>\n        <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span> <span class=\"p\">,</span>\n        <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">]]</span>\n<span class=\"n\">coordgroups</span> <span class=\"o\">=</span> <span class=\"p\">[[</span>\n                  <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">]</span>\n               <span class=\"p\">],[</span>\n                  <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n               <span class=\"p\">],[</span>\n                  <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">]</span>\n               <span class=\"p\">]]</span>\n\n<span class=\"n\">assignments</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Pb'</span> <span class=\"p\">,</span><span class=\"s1\">'Ti'</span> <span class=\"p\">,</span><span class=\"s1\">'O'</span><span class=\"p\">]</span>\n<span class=\"n\">volume</span> <span class=\"o\">=</span><span class=\"mf\">62.79</span>\n<span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"n\">Structure</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">uc_cell</span> <span class=\"o\">=</span> <span class=\"n\">cell</span><span class=\"p\">,</span>\n             <span class=\"n\">uc_reduced_coordgroups</span> <span class=\"o\">=</span> <span class=\"n\">coordgroups</span><span class=\"p\">,</span>\n             <span class=\"n\">assignments</span> <span class=\"o\">=</span> <span class=\"n\">assignments</span><span class=\"p\">,</span>\n             <span class=\"n\">uc_volume</span> <span class=\"o\">=</span> <span class=\"n\">volume</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"create-database-file-store-a-structure-in-it-and-retrive-it\">\n<h4>Create database file, store a structure in it, and retrive it</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">httk</span><span class=\"o\">,</span> <span class=\"nn\">httk.db</span>\n<span class=\"kn\">from</span> <span class=\"nn\">httk.atomistic</span> <span class=\"kn\">import</span> <span class=\"n\">Structure</span>\n\n<span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">Sqlite</span><span class=\"p\">(</span><span class=\"s1\">'example.sqlite'</span><span class=\"p\">)</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">SqlStore</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"p\">)</span>\n\n<span class=\"n\">tablesalt</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'NaCl.cif'</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">tablesalt</span><span class=\"p\">)</span>\n\n<span class=\"n\">arsenic</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'As.cif'</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">arsenic</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Search for anything with Na</span>\n<span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">searcher</span><span class=\"p\">()</span>\n<span class=\"n\">search_struct</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">variable</span><span class=\"p\">(</span><span class=\"n\">Structure</span><span class=\"p\">)</span>\n<span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">search_struct</span><span class=\"o\">.</span><span class=\"n\">formula_symbols</span><span class=\"o\">.</span><span class=\"n\">is_in</span><span class=\"p\">(</span><span class=\"s1\">'Na'</span><span class=\"p\">))</span>\n\n<span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"n\">search_struct</span><span class=\"p\">,</span> <span class=\"s1\">'structure'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">header</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">search</span><span class=\"p\">):</span>\n    <span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Found structure\"</span><span class=\"p\">,</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">get_tags</span><span class=\"p\">()[</span><span class=\"n\">x</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">get_tags</span><span class=\"p\">()]</span>\n</pre>\n</div>\n<div id=\"create-database-file-and-store-your-own-data-in-it\">\n<h4>Create database file and store your own data in it</h4>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">httk</span><span class=\"o\">,</span> <span class=\"nn\">httk.db</span>\n<span class=\"kn\">from</span> <span class=\"nn\">httk.atomistic</span> <span class=\"kn\">import</span> <span class=\"n\">Structure</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">StructureIsEdible</span><span class=\"p\">(</span><span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">HttkObject</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@httk</span><span class=\"o\">.</span><span class=\"n\">httk_typed_init</span><span class=\"p\">({</span><span class=\"s1\">'structure'</span><span class=\"p\">:</span> <span class=\"n\">Structure</span><span class=\"p\">,</span> <span class=\"s1\">'is_edible'</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">})</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"p\">,</span> <span class=\"n\">is_edible</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">structure</span> <span class=\"o\">=</span> <span class=\"n\">structure</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_edible</span> <span class=\"o\">=</span> <span class=\"n\">is_edible</span>\n\n<span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">Sqlite</span><span class=\"p\">(</span><span class=\"s1\">'example.sqlite'</span><span class=\"p\">)</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">SqlStore</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"p\">)</span>\n\n<span class=\"n\">tablesalt</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'NaCl.cif'</span><span class=\"p\">)</span>\n<span class=\"n\">edible</span> <span class=\"o\">=</span> <span class=\"n\">StructureIsEdible</span><span class=\"p\">(</span><span class=\"n\">tablesalt</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">edible</span><span class=\"p\">)</span>\n\n<span class=\"n\">arsenic</span> <span class=\"o\">=</span> <span class=\"n\">httk</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'As.cif'</span><span class=\"p\">)</span>\n<span class=\"n\">edible</span> <span class=\"o\">=</span> <span class=\"n\">StructureIsEdible</span><span class=\"p\">(</span><span class=\"n\">arsenic</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">edible</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"tutorial\">\n<h3>Tutorial</h3>\n<p>Under <tt>Tutorial/Step1, 2, ...</tt> in your <em>httk</em> directory you find a series of code snippets to run to see <em>httk</em> in action.\nYou can either just execute them there, or try them out in, e.g., a Jupyter notebook.</p>\n<p>In addition to the Tutorial, there is a lot of straightforward examples of various things that can be done with httk\nin the <tt>Examples</tt> subdirectory. Check the source files for information about what the various examples does.</p>\n</div>\n</div>\n<div id=\"reporting-bugs\">\n<h2>Reporting bugs</h2>\n<p>We track our bugs using the issue tracker at github.\nIf you find a bug, please search to see if someone else\nhas reported it here:</p>\n<blockquote>\n<a href=\"https://github.com/rartino/httk/issues\" rel=\"nofollow\">https://github.com/rartino/httk/issues</a></blockquote>\n<p>If you cannot find it already reported, please click the \u2018new issue\u2019\nbutton and report the bug.</p>\n</div>\n<div id=\"citing-httk-in-scientific-works\">\n<h2>Citing <em>httk</em> in scientific works</h2>\n<p>This is presently the preferred citation to the httk framework itself:</p>\n<blockquote>\nThe High-Throughput Toolkit (httk), R. Armiento et al., <a href=\"http://httk.openmaterialsdb.se/\" rel=\"nofollow\">http://httk.openmaterialsdb.se/</a>.</blockquote>\n<p>Since <em>httk</em> can call upon many other pieces of software quite\ntransparently, it may not be initially obvious what other software\nshould be cited. Unless configured otherwise, <em>httk</em> prints out a list\nof citations when the program ends. You should take note of those\ncitations and include them in your publications if relevant.</p>\n</div>\n<div id=\"more-info-and-help\">\n<h2>More info and help</h2>\n<p>Installation: For more details on installation options refer to INSTALL.txt, distributed with <em>httk</em>.</p>\n<p>User\u2019s guide: see USERS_GUIDE.txt, distributed with <em>httk</em>.</p>\n<p>Workflows: for more details on how high-throughput computational workflows are\nexecuted via the runmanager.sh program, see RUNMANAGER_DETAILS.txt distributed with <em>httk</em>.\nThis may be useful if you plan to design your own workflows using <em>httk</em>.</p>\n<p>Developing / contributing to <em>httk</em>: refer to DEVELOPERS_GUIDE.txt distributed with <em>httk</em>.</p>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>See AUTHORS.txt, distributed with <em>httk</em>.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<dl>\n<dt><em>httk</em> has kindly been funded in part by:</dt>\n<dd><ul>\n<li>The Swedish Research Council (VR) Grant No. 621-2011-4249</li>\n<li>The Linnaeus Environment at Link\u00f6ping on Nanoscale Functional\nMaterials (LiLi-NFM) funded by the Swedish Research Council (VR).</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"license-and-redistribution\">\n<h2>License and redistribution</h2>\n<p>The High-Throughput Toolkit uses the GNU Affero General Public\nLicense, which is an open source license that allows redistribution\nand re-use if the license requirements are met. (Note that this\nlicense contains clauses that are not in the GNU Public License, and\nsource code from httk thus cannot be imported into GPL licensed\nprojects.)</p>\n<p>The full license text is present in the file <tt>COPYING</tt> distributed\nwith <em>httk</em>.</p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Our primary point of contact is email to: httk [at] openmaterialsdb.se\n(where [at] is replaced by @)</p>\n</div>\n\n          </div>"}, "last_serial": 4310599, "releases": {"1.1.14": [{"comment_text": "", "digests": {"md5": "c040ddbee4a54fe88abd7e20accfec24", "sha256": "fd101f893aaafb30bdd933edcf4bcdf494145c731692eaba434fb273d9470011"}, "downloads": -1, "filename": "httk-1.1.14-py2-none-any.whl", "has_sig": false, "md5_digest": "c040ddbee4a54fe88abd7e20accfec24", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 628362, "upload_time": "2018-09-25T23:35:23", "upload_time_iso_8601": "2018-09-25T23:35:23.691459Z", "url": "https://files.pythonhosted.org/packages/0a/21/771cc2c8602b09c414c7421ffbd8152d91f252228707ec8ee1c5fc201d74/httk-1.1.14-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2c7e6cf0fbb7723726911a727840474", "sha256": "00bc35c1b26a81fe5eaf6b6aa8f8a207a5b984838c855b0700b642457f2d3af5"}, "downloads": -1, "filename": "httk-1.1.14.tar.gz", "has_sig": false, "md5_digest": "a2c7e6cf0fbb7723726911a727840474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 524440, "upload_time": "2018-09-25T23:35:26", "upload_time_iso_8601": "2018-09-25T23:35:26.364487Z", "url": "https://files.pythonhosted.org/packages/43/75/970bac25dfce55888832a43cffd28420d9a19dd6c994a5736b5ced117097/httk-1.1.14.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c040ddbee4a54fe88abd7e20accfec24", "sha256": "fd101f893aaafb30bdd933edcf4bcdf494145c731692eaba434fb273d9470011"}, "downloads": -1, "filename": "httk-1.1.14-py2-none-any.whl", "has_sig": false, "md5_digest": "c040ddbee4a54fe88abd7e20accfec24", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 628362, "upload_time": "2018-09-25T23:35:23", "upload_time_iso_8601": "2018-09-25T23:35:23.691459Z", "url": "https://files.pythonhosted.org/packages/0a/21/771cc2c8602b09c414c7421ffbd8152d91f252228707ec8ee1c5fc201d74/httk-1.1.14-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2c7e6cf0fbb7723726911a727840474", "sha256": "00bc35c1b26a81fe5eaf6b6aa8f8a207a5b984838c855b0700b642457f2d3af5"}, "downloads": -1, "filename": "httk-1.1.14.tar.gz", "has_sig": false, "md5_digest": "a2c7e6cf0fbb7723726911a727840474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 524440, "upload_time": "2018-09-25T23:35:26", "upload_time_iso_8601": "2018-09-25T23:35:26.364487Z", "url": "https://files.pythonhosted.org/packages/43/75/970bac25dfce55888832a43cffd28420d9a19dd6c994a5736b5ced117097/httk-1.1.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:10 2020"}