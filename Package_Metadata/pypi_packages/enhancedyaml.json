{"info": {"author": "Mosky", "author_email": "mosky.tw@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Enhanced PyYAML\n===============\n\nIt makes PyYAML more convenient and avoids duplicate YAML data.\n\nHere is the features:\n\n- by deafult, use name of class as the `yaml_tag` of YAMLObject\n- load anchor `&` as an attribute `anchor` of YAMLObject instance\n- dump the attribute `anchor` of YAMLObject instance as the anchor `&` name\n\nInstallation\n------------\n\nYou can install it via PyPI,\n\n::\n\n    sudo pip install enhancedyaml\n\nor download it manually.\n\nExamples\n--------\n\nHere is the yaml file:\n\n::\n\n    # examples/enhanced_data.yaml\n\n    %YAML 1.1\n    ---\n    examples:\n        - !Example &first\n            data: I am the first one.\n        - !Example &second\n            data: I am the second one.\n    order:\n        - \\*first\n        - \\*second\n\nCreate an YAMLObject without specifiying `yaml_tag`\n===================================================\n\n::\n\n    import enhancedyaml\n\n    class Example(enhancedyaml.YAMLObject): pass\n\nLoaded YAML\n===========\n\nCode:\n\n::\n\n    from pprint import pprint\n\n    data = enhancedyaml.load(open('data/enhanced_data.yaml'))\n    pprint(data)\n\nOutput:\n\n::\n\n    {'examples': [<__main__.Example object at 0x7fa825fb4fd0>,\n\n                  <__main__.Example object at 0x7fa825fb4cd0>],\n     'order': [<__main__.Example object at 0x7fa825fb4fd0>,\n               <__main__.Example object at 0x7fa825fb4cd0>]}\n\nContent of `data['order']`\n==========================\n\nCode:\n\n::\n\n    pprint(list(example.__dict__ for example in data['order']))\n\nOutput:\n\n::\n\n    [{'anchor': u'first', 'data': 'I am the first one.'},\n     {'anchor': u'second', 'data': 'I am the second one.'}]\n\n`Example` has addational attribute `anchor`.\n\nDump Data Again\n===============\n\nCode:\n\n::\n\n    print enhancedyaml.dump(data, default_flow_style=False)\n\nOutput:\n\n::\n\n    examples:\n    - &first !Example\n      data: I am the first one.\n    - &second !Example\n      data: I am the second one.\n    order:\n    - \\*first\n    - \\*second\n\nIt is almost same as the original YAML.\n\nDump Objects Which are Generated in Runtime\n===========================================\n\nCode:\n\n::\n\n    e1 = Example()\n    e2 = Example()\n    e1.data = \"I don't have `anchor`.\"\n    e2.data = \"I don't have `anchor`, too.\"\n    es = [e1, e2, e2, e1]\n    print enhancedyaml.dump(es, default_flow_style=False)\n\nOutput:\n\n::\n\n    - &example002 !Example\n      data: I don't have `anchor`.\n    - &example001 !Example\n      data: I don't have `anchor`, too.\n    - \\*example001\n    - \\*example002\n\nYou can find more examples in `enhancedyaml/examples` directory.\n\nHave fun!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "enhancedyaml", "package_url": "https://pypi.org/project/enhancedyaml/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/enhancedyaml/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/enhancedyaml/v0.1.1/", "requires_dist": null, "requires_python": null, "summary": "It makes it more convenient to use PyYAML.", "version": "v0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"enhanced-pyyaml\">\n<h2>Enhanced PyYAML</h2>\n<p>It makes PyYAML more convenient and avoids duplicate YAML data.</p>\n<p>Here is the features:</p>\n<ul>\n<li>by deafult, use name of class as the <cite>yaml_tag</cite> of YAMLObject</li>\n<li>load anchor <cite>&amp;</cite> as an attribute <cite>anchor</cite> of YAMLObject instance</li>\n<li>dump the attribute <cite>anchor</cite> of YAMLObject instance as the anchor <cite>&amp;</cite> name</li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>You can install it via PyPI,</p>\n<pre>sudo pip install enhancedyaml\n</pre>\n<p>or download it manually.</p>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Here is the yaml file:</p>\n<pre># examples/enhanced_data.yaml\n\n%YAML 1.1\n---\nexamples:\n    - !Example &amp;first\n        data: I am the first one.\n    - !Example &amp;second\n        data: I am the second one.\norder:\n    - \\*first\n    - \\*second\n</pre>\n</div>\n</div>\n<div id=\"create-an-yamlobject-without-specifiying-yaml-tag\">\n<h2>Create an YAMLObject without specifiying <cite>yaml_tag</cite></h2>\n<pre>import enhancedyaml\n\nclass Example(enhancedyaml.YAMLObject): pass\n</pre>\n</div>\n<div id=\"loaded-yaml\">\n<h2>Loaded YAML</h2>\n<p>Code:</p>\n<pre>from pprint import pprint\n\ndata = enhancedyaml.load(open('data/enhanced_data.yaml'))\npprint(data)\n</pre>\n<p>Output:</p>\n<pre>{'examples': [&lt;__main__.Example object at 0x7fa825fb4fd0&gt;,\n\n              &lt;__main__.Example object at 0x7fa825fb4cd0&gt;],\n 'order': [&lt;__main__.Example object at 0x7fa825fb4fd0&gt;,\n           &lt;__main__.Example object at 0x7fa825fb4cd0&gt;]}\n</pre>\n</div>\n<div id=\"content-of-data-order\">\n<h2>Content of <cite>data[\u2018order\u2019]</cite></h2>\n<p>Code:</p>\n<pre>pprint(list(example.__dict__ for example in data['order']))\n</pre>\n<p>Output:</p>\n<pre>[{'anchor': u'first', 'data': 'I am the first one.'},\n {'anchor': u'second', 'data': 'I am the second one.'}]\n</pre>\n<p><cite>Example</cite> has addational attribute <cite>anchor</cite>.</p>\n</div>\n<div id=\"dump-data-again\">\n<h2>Dump Data Again</h2>\n<p>Code:</p>\n<pre>print enhancedyaml.dump(data, default_flow_style=False)\n</pre>\n<p>Output:</p>\n<pre>examples:\n- &amp;first !Example\n  data: I am the first one.\n- &amp;second !Example\n  data: I am the second one.\norder:\n- \\*first\n- \\*second\n</pre>\n<p>It is almost same as the original YAML.</p>\n</div>\n<div id=\"dump-objects-which-are-generated-in-runtime\">\n<h2>Dump Objects Which are Generated in Runtime</h2>\n<p>Code:</p>\n<pre>e1 = Example()\ne2 = Example()\ne1.data = \"I don't have `anchor`.\"\ne2.data = \"I don't have `anchor`, too.\"\nes = [e1, e2, e2, e1]\nprint enhancedyaml.dump(es, default_flow_style=False)\n</pre>\n<p>Output:</p>\n<pre>- &amp;example002 !Example\n  data: I don't have `anchor`.\n- &amp;example001 !Example\n  data: I don't have `anchor`, too.\n- \\*example001\n- \\*example002\n</pre>\n<p>You can find more examples in <cite>enhancedyaml/examples</cite> directory.</p>\n<p>Have fun!</p>\n</div>\n\n          </div>"}, "last_serial": 656638, "releases": {"v0.1.1": [{"comment_text": "", "digests": {"md5": "ddda839963ce6c8562742c5820b981d4", "sha256": "d8beb714f802b3b7962709b98bd7279ac0f1a500167e590fd949825980eaef32"}, "downloads": -1, "filename": "enhancedyaml-v0.1.1.tar.gz", "has_sig": false, "md5_digest": "ddda839963ce6c8562742c5820b981d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3127, "upload_time": "2013-05-20T21:27:40", "upload_time_iso_8601": "2013-05-20T21:27:40.276804Z", "url": "https://files.pythonhosted.org/packages/a2/0a/d17dbc6e93b4bed8a969200e048de7d68cc254b76151a3b627950f35f3d9/enhancedyaml-v0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ddda839963ce6c8562742c5820b981d4", "sha256": "d8beb714f802b3b7962709b98bd7279ac0f1a500167e590fd949825980eaef32"}, "downloads": -1, "filename": "enhancedyaml-v0.1.1.tar.gz", "has_sig": false, "md5_digest": "ddda839963ce6c8562742c5820b981d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3127, "upload_time": "2013-05-20T21:27:40", "upload_time_iso_8601": "2013-05-20T21:27:40.276804Z", "url": "https://files.pythonhosted.org/packages/a2/0a/d17dbc6e93b4bed8a969200e048de7d68cc254b76151a3b627950f35f3d9/enhancedyaml-v0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:20 2020"}