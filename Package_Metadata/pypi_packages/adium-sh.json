{"info": {"author": "Shichao An", "author_email": "shichao.an@nyu.edu", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "Adium Shell\n===========\n\n.. image:: https://pypip.in/v/adium-sh/badge.png\n        :target: https://pypi.python.org/pypi/adium-sh\n\nAdium Shell (adium-sh) is a command-line tool and Python wrapper for Adium.\n\nDescription\n-----------\nadium-sh provides shell utilities and Python wrapper based on `AppleScript support <https://trac.adium.im/wiki/AppleScript_Support_1.2>`_ of Adium.\n\nFeature\n-------\n\nThe current features are:\n\n* Set default service and account\n* Send messages using exact account name or alias\n* Receive and reply to messages using patterns or external API (SimSimi currently supported)\n* React to events\n\nInstallation\n------------\n::\n\n    $ pip install adium-sh\n\nUsage\n-----\nYou must specify the account and service to associate with the current use, either as command-line arguments or in the config file. When specifying them as arguments, you must put them before the sub-commands.\n\nSend messages\n~~~~~~~~~~~~~\nSend a message using account name:\n::\n\n    $ adiumsh -s GTalk -t yourname@gmail send -b buddy@gmail.com\n    Hello, there\n    <<EOF\n\nSend a message using alias:\n::\n\n    $ adiumsh -s GTalk -t yourname@gmail.com send -a 'John Smith'\n    Hello, there\n    <<EOF\n\nSet default configuration file at ``~/.adiumsh``:\n::\n\n    [default]\n    service = GTalk\n    account = yourname@gmail.com\n\nThen you can send messages without specifying ``-s/--service`` and ``-t/--account``:\n::\n\n    $ adiumsh send -a 'John Smith'\n\nYou can also pass as argument your message:\n::\n\n    $ adiumsh send -a 'John Smith' -m 'Hello, there'\n\nReceive messages\n~~~~~~~~~~~~~~~~\nYou must specify a chat method to receive messages. By default, adium-sh uses \"Simple Chat\", which basically replies to received messages according to the patterns you set. You must set the patterns in the config file, possibly like the following settings::\n\n    [default]\n    service = GTalk\n    account = yourname@gmail.com\n\n    [chat-default]\n    type = wildcard\n    patterns = \n        *hello*: hi\n        *what*: sorry\t\n        *: I'm not available now\n\nThen, you can invoke the \"receive\" sub-command with the ``-c/--chat`` arguments::\n\n    $ adiumsh receive -c default \n\nThe patterns is a list of string pairs where each pair is separated by a colon. The string to the left of the colon is the pattern against which the received text will be matched, and the right one is the corresponding reply text. There is also a \"type\" option in the chat section, which defaults to \"wildcard\" that uses globbing pattern matching; another value to it is \"regex\", which uses regular expression.\n\nYou can also use \"SimSimi Chat\" which hits the SimSimi API with the messages received. You have to set the API key in the config file and the key type (\"trial\", which is default, or \"paid\")::\n\n    [chat-simi]\n    simi-key = some-really-long-key\n    simi-key-type = trial\n\nThen, invoke \"receive\" with this chat from command line::\n\n    $ adiumsh receive -c simi\n\nSet the default chat in the default settings::\n\n    [default]\n    service = GTalk\n    account = yourname@gmail.com\n    chat = default\n\n    [chat-default]\n    patterns = \n        *hello*: hi\n        *what*: sorry\t\n        *: I'm not available now\n\n    [chat-another]\n    patterns =\n        *: not here\n\nNow you can also switch between chats from the command line other than the default::\n\n    $ adiumsh receive -c another\n\nTODO\n----\n* Complete Python wrapper API to AppleScript support\n* Exhaustive commands based on the wrapper", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shichao-an/adium-sh", "keywords": "adium", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "adium-sh", "package_url": "https://pypi.org/project/adium-sh/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/adium-sh/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/shichao-an/adium-sh"}, "release_url": "https://pypi.org/project/adium-sh/0.2.4/", "requires_dist": null, "requires_python": null, "summary": "Command-line wrapper of Adium", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/adium-sh\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/adium-sh/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9600ac7c11f4a25d1b906dc509114614e5d833a6/68747470733a2f2f70797069702e696e2f762f616469756d2d73682f62616467652e706e67\"></a>\n<p>Adium Shell (adium-sh) is a command-line tool and Python wrapper for Adium.</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>adium-sh provides shell utilities and Python wrapper based on <a href=\"https://trac.adium.im/wiki/AppleScript_Support_1.2\" rel=\"nofollow\">AppleScript support</a> of Adium.</p>\n</div>\n<div id=\"feature\">\n<h2>Feature</h2>\n<p>The current features are:</p>\n<ul>\n<li>Set default service and account</li>\n<li>Send messages using exact account name or alias</li>\n<li>Receive and reply to messages using patterns or external API (SimSimi currently supported)</li>\n<li>React to events</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install adium-sh\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You must specify the account and service to associate with the current use, either as command-line arguments or in the config file. When specifying them as arguments, you must put them before the sub-commands.</p>\n<div id=\"send-messages\">\n<h3>Send messages</h3>\n<p>Send a message using account name:</p>\n<pre>$ adiumsh -s GTalk -t yourname@gmail send -b buddy@gmail.com\nHello, there\n&lt;&lt;EOF\n</pre>\n<p>Send a message using alias:</p>\n<pre>$ adiumsh -s GTalk -t yourname@gmail.com send -a 'John Smith'\nHello, there\n&lt;&lt;EOF\n</pre>\n<p>Set default configuration file at <tt><span class=\"pre\">~/.adiumsh</span></tt>:</p>\n<pre>[default]\nservice = GTalk\naccount = yourname@gmail.com\n</pre>\n<p>Then you can send messages without specifying <tt><span class=\"pre\">-s/--service</span></tt> and <tt><span class=\"pre\">-t/--account</span></tt>:</p>\n<pre>$ adiumsh send -a 'John Smith'\n</pre>\n<p>You can also pass as argument your message:</p>\n<pre>$ adiumsh send -a 'John Smith' -m 'Hello, there'\n</pre>\n</div>\n<div id=\"receive-messages\">\n<h3>Receive messages</h3>\n<p>You must specify a chat method to receive messages. By default, adium-sh uses \u201cSimple Chat\u201d, which basically replies to received messages according to the patterns you set. You must set the patterns in the config file, possibly like the following settings:</p>\n<pre>[default]\nservice = GTalk\naccount = yourname@gmail.com\n\n[chat-default]\ntype = wildcard\npatterns =\n    *hello*: hi\n    *what*: sorry\n    *: I'm not available now\n</pre>\n<p>Then, you can invoke the \u201creceive\u201d sub-command with the <tt><span class=\"pre\">-c/--chat</span></tt> arguments:</p>\n<pre>$ adiumsh receive -c default\n</pre>\n<p>The patterns is a list of string pairs where each pair is separated by a colon. The string to the left of the colon is the pattern against which the received text will be matched, and the right one is the corresponding reply text. There is also a \u201ctype\u201d option in the chat section, which defaults to \u201cwildcard\u201d that uses globbing pattern matching; another value to it is \u201cregex\u201d, which uses regular expression.</p>\n<p>You can also use \u201cSimSimi Chat\u201d which hits the SimSimi API with the messages received. You have to set the API key in the config file and the key type (\u201ctrial\u201d, which is default, or \u201cpaid\u201d):</p>\n<pre>[chat-simi]\nsimi-key = some-really-long-key\nsimi-key-type = trial\n</pre>\n<p>Then, invoke \u201creceive\u201d with this chat from command line:</p>\n<pre>$ adiumsh receive -c simi\n</pre>\n<p>Set the default chat in the default settings:</p>\n<pre>[default]\nservice = GTalk\naccount = yourname@gmail.com\nchat = default\n\n[chat-default]\npatterns =\n    *hello*: hi\n    *what*: sorry\n    *: I'm not available now\n\n[chat-another]\npatterns =\n    *: not here\n</pre>\n<p>Now you can also switch between chats from the command line other than the default:</p>\n<pre>$ adiumsh receive -c another\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Complete Python wrapper API to AppleScript support</li>\n<li>Exhaustive commands based on the wrapper</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1231324, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bc0180c247b1eff953cb5cacb7087112", "sha256": "7b0ad0e8be9c0339c42b5ad6fcc9ff5784fa5ad9d42d96466a3116850c42a877"}, "downloads": -1, "filename": "adium-sh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bc0180c247b1eff953cb5cacb7087112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4933, "upload_time": "2014-03-29T10:00:14", "upload_time_iso_8601": "2014-03-29T10:00:14.855458Z", "url": "https://files.pythonhosted.org/packages/a3/be/a75ed7d7a0aec165f99d780000143bfd6e4d2249c00109775ad9737145e8/adium-sh-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "dadf8eb5686be666cc99a2408630154f", "sha256": "ec7bb133020a11285d9ca5602771c8b7690f67053b1a553acf1ea0161e1f8f93"}, "downloads": -1, "filename": "adium-sh-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dadf8eb5686be666cc99a2408630154f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4965, "upload_time": "2014-03-30T04:28:55", "upload_time_iso_8601": "2014-03-30T04:28:55.815527Z", "url": "https://files.pythonhosted.org/packages/e1/ab/21dd93ceb98ef04ce90cc8c50cc3ac20fe8429709db90e088b9ec388df67/adium-sh-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3c3529ce4019c1e2456331c2d6fa05b3", "sha256": "331e5dec60c13f066a9fd6a1116a8c373715f613c0b17b10e48d2055ee190499"}, "downloads": -1, "filename": "adium-sh-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3c3529ce4019c1e2456331c2d6fa05b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10676, "upload_time": "2014-04-12T09:15:52", "upload_time_iso_8601": "2014-04-12T09:15:52.135052Z", "url": "https://files.pythonhosted.org/packages/94/ca/2dc62fa9e41a391c6ee82a98f06b6ad2295549e103eae8823ed4f9aa1a7d/adium-sh-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e541f19798bfb3d358fa3ea4571a558e", "sha256": "ab30d5687f13654d020f98cfd38b5e7a1f736eb401ae269c6105f97252b3bf3f"}, "downloads": -1, "filename": "adium-sh-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e541f19798bfb3d358fa3ea4571a558e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9193, "upload_time": "2014-05-01T19:03:05", "upload_time_iso_8601": "2014-05-01T19:03:05.038041Z", "url": "https://files.pythonhosted.org/packages/4c/b2/fa1052c41aa165a4e5792a5447c9bb1df24489e1e8a9e84e9450a3eec581/adium-sh-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b8e31c3393e52bb926317fa5480129a8", "sha256": "2589dc5e9d592801f8e9d3355b3504851d166c2c083b62975d3675834288eecb"}, "downloads": -1, "filename": "adium-sh-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b8e31c3393e52bb926317fa5480129a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11314, "upload_time": "2014-05-09T00:46:07", "upload_time_iso_8601": "2014-05-09T00:46:07.216973Z", "url": "https://files.pythonhosted.org/packages/5f/af/37b7c6003ff5407b0e4f49ab7bc9f97555b13cca075794e25d0023ce670f/adium-sh-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "30f8eeb1b72521a29766067430c3ee77", "sha256": "be6e1b159e3e0f468b292c7262cfdf3549e4586c0b3ea90f48ecf7f70bfc5c19"}, "downloads": -1, "filename": "adium-sh-0.2.3.tar.gz", "has_sig": false, "md5_digest": "30f8eeb1b72521a29766067430c3ee77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11384, "upload_time": "2014-05-09T02:33:24", "upload_time_iso_8601": "2014-05-09T02:33:24.767359Z", "url": "https://files.pythonhosted.org/packages/81/2c/03c3bbb237360295f9b5ec9ae2feb2046d56094af70e03d2fa2deec3da6b/adium-sh-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "ed1e6169ac360d230dbec616577bd66c", "sha256": "5a8a3d7a9bd9d43a2a9096d697a639116bbc1de52c3c7415029d2dd0743e2459"}, "downloads": -1, "filename": "adium-sh-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ed1e6169ac360d230dbec616577bd66c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11365, "upload_time": "2014-09-20T05:32:49", "upload_time_iso_8601": "2014-09-20T05:32:49.886140Z", "url": "https://files.pythonhosted.org/packages/8b/68/e06599b0198c34b91d90136ad16b12193d6cf2924abcd6577a3df7549568/adium-sh-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed1e6169ac360d230dbec616577bd66c", "sha256": "5a8a3d7a9bd9d43a2a9096d697a639116bbc1de52c3c7415029d2dd0743e2459"}, "downloads": -1, "filename": "adium-sh-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ed1e6169ac360d230dbec616577bd66c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11365, "upload_time": "2014-09-20T05:32:49", "upload_time_iso_8601": "2014-09-20T05:32:49.886140Z", "url": "https://files.pythonhosted.org/packages/8b/68/e06599b0198c34b91d90136ad16b12193d6cf2924abcd6577a3df7549568/adium-sh-0.2.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:24 2020"}