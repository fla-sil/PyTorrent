{"info": {"author": "isik-kaplan", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/isik-kaplan/django_ief.svg?branch=master)](https://travis-ci.org/isik-kaplan/django_ief)\n[![PyPI - License](https://img.shields.io/pypi/l/django-ief.svg)](https://pypi.org/project/django-ief/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/django-ief.svg)](https://pypi.org/project/django-ief/)\n \n## What is *django_ief*?\n\nIt is a field for django database models which you don't need any extra forms to edit nor save.\n\n## How to use it?\n\nFirst, install the application and add the urls.\n\n```python \n# settings.py \n\ninstalled_apps = [\n    ...,\n    'django_ief',\n    ...,\n]\n\n# urls.py\n\nurlpatterns = [\n    path('', include('django_ief.urls')),\n    # others\n]\n\n```\n\nThen just use it as a field.\n\n```python \nfrom django.db import models\nfrom django_ief.fields import InlineEditableField\n\ndef permission_function(request):\n    return get_perm_from_request(request)\n\nclass BlogPost(models.Model):\n    content = InlineEditableField(\n        can_edit=permission_function,\n        text_field_kwargs={**kwargs_for_text_field},\n        image_field_kwargs={**kwargs_for_image_field}\n    )\n```\n\nThe above creates an additional model to hold its images which looks like this:\n\n```python \nclass BlogPost_Images(models.Model):\n    owner = models.ForeignKey(BlogPost, on_delete=models.CASCADE)\n    image = models.ImageField(**kwargs_for_image_field)\n```\nwhich you can access with\n```python \nBlogPost.image_model\n```\n\nand creates a text field in the original model which looks like: \n\n```python \nclass BlogPost(models.Model):\n    content = InlineEditableField(...)\n    content_text = models.TextField(**kwargs_for_text_field)\n```\n\nIf you want you may interact with those underlying fields and models but you don't need to,\nall you need to do is to use one attribute of the `InlineEditableField` in your templates, `rendered`. \n\n```html \n<!-- you need to add the actual editor static for it to work --> \n<script src=\"{% static 'django_ief/ckeditor.js' %}\"></script> \n<!-- it is just a single file, you now can use any number of fields with the .rendered attribute on the page -->\n    \n{{ obj.content.rendered }}\n```\nAnd that's it, everything else is automatically taken care of.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isik-kaplan/django_ief", "keywords": "", "license": "APGL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-ief", "package_url": "https://pypi.org/project/django-ief/", "platform": "", "project_url": "https://pypi.org/project/django-ief/", "project_urls": {"Homepage": "https://github.com/isik-kaplan/django_ief"}, "release_url": "https://pypi.org/project/django-ief/0.1.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A model field that can be edited without needing a form.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/isik-kaplan/django_ief\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad383455d44b53588f118a2642c7344ae25d4d9f/68747470733a2f2f7472617669732d63692e6f72672f6973696b2d6b61706c616e2f646a616e676f5f6965662e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/django-ief/\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0cc2a19b92d93d95ecccb249e907d639893c5fd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f2d6965662e737667\"></a>\n<a href=\"https://pypi.org/project/django-ief/\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b70b854b7883f84615e08342344dd837cd07c54/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d6965662e737667\"></a></p>\n<h2>What is <em>django_ief</em>?</h2>\n<p>It is a field for django database models which you don't need any extra forms to edit nor save.</p>\n<h2>How to use it?</h2>\n<p>First, install the application and add the urls.</p>\n<pre><span class=\"c1\"># settings.py </span>\n\n<span class=\"n\">installed_apps</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_ief'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># urls.py</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'django_ief.urls'</span><span class=\"p\">)),</span>\n    <span class=\"c1\"># others</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Then just use it as a field.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_ief.fields</span> <span class=\"kn\">import</span> <span class=\"n\">InlineEditableField</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">permission_function</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_perm_from_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BlogPost</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">InlineEditableField</span><span class=\"p\">(</span>\n        <span class=\"n\">can_edit</span><span class=\"o\">=</span><span class=\"n\">permission_function</span><span class=\"p\">,</span>\n        <span class=\"n\">text_field_kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">**</span><span class=\"n\">kwargs_for_text_field</span><span class=\"p\">},</span>\n        <span class=\"n\">image_field_kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">**</span><span class=\"n\">kwargs_for_image_field</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>The above creates an additional model to hold its images which looks like this:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">BlogPost_Images</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">BlogPost</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImageField</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs_for_image_field</span><span class=\"p\">)</span>\n</pre>\n<p>which you can access with</p>\n<pre><span class=\"n\">BlogPost</span><span class=\"o\">.</span><span class=\"n\">image_model</span>\n</pre>\n<p>and creates a text field in the original model which looks like:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">BlogPost</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">InlineEditableField</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">content_text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs_for_text_field</span><span class=\"p\">)</span>\n</pre>\n<p>If you want you may interact with those underlying fields and models but you don't need to,\nall you need to do is to use one attribute of the <code>InlineEditableField</code> in your templates, <code>rendered</code>.</p>\n<pre><span class=\"c\">&lt;!-- you need to add the actual editor static for it to work --&gt;</span> \n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static 'django_ief/ckeditor.js' %}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span> \n<span class=\"c\">&lt;!-- it is just a single file, you now can use any number of fields with the .rendered attribute on the page --&gt;</span>\n    \n{{ obj.content.rendered }}\n</pre>\n<p>And that's it, everything else is automatically taken care of.</p>\n\n          </div>"}, "last_serial": 6350976, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "853b1ff0fea322c3adc925607eaded93", "sha256": "2dac3203cbd87d88fc529aa2add6e8f7019b20e374d2c8cbf800d4fb82ab8016"}, "downloads": -1, "filename": "django_ief-0.1.0.tar.gz", "has_sig": false, "md5_digest": "853b1ff0fea322c3adc925607eaded93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 148390, "upload_time": "2019-08-25T18:42:47", "upload_time_iso_8601": "2019-08-25T18:42:47.406066Z", "url": "https://files.pythonhosted.org/packages/27/2a/b9f8b877c75b4742a1fc4e16199bf875cae41d04210506411f08ab76c102/django_ief-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3825df4ee2185a5bdc3eec729fa0587e", "sha256": "19e73d1e9ce8bfea043c3f2ecfb7d780e75696cfb792839db0e35bcbd3a88438"}, "downloads": -1, "filename": "django_ief-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3825df4ee2185a5bdc3eec729fa0587e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 149408, "upload_time": "2019-09-08T21:26:38", "upload_time_iso_8601": "2019-09-08T21:26:38.565393Z", "url": "https://files.pythonhosted.org/packages/51/30/ca0a9dc092133726e1ffc58350732c767477ab9ca573b6e2b34b9ed03fbd/django_ief-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "db2afddf692f34f9429a8d85ab8d59e6", "sha256": "c265e26c35a4e012d6e4e8c5ed6ec6bdd9c9f18a110f87712a1c9d0dc1076e9d"}, "downloads": -1, "filename": "django_ief-0.1.2.tar.gz", "has_sig": false, "md5_digest": "db2afddf692f34f9429a8d85ab8d59e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 149402, "upload_time": "2019-12-23T14:27:29", "upload_time_iso_8601": "2019-12-23T14:27:29.606504Z", "url": "https://files.pythonhosted.org/packages/c4/3c/0aa7b65f7f08be229853b1a1970eed025ce9de7ef9dd912ac58336251d81/django_ief-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db2afddf692f34f9429a8d85ab8d59e6", "sha256": "c265e26c35a4e012d6e4e8c5ed6ec6bdd9c9f18a110f87712a1c9d0dc1076e9d"}, "downloads": -1, "filename": "django_ief-0.1.2.tar.gz", "has_sig": false, "md5_digest": "db2afddf692f34f9429a8d85ab8d59e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 149402, "upload_time": "2019-12-23T14:27:29", "upload_time_iso_8601": "2019-12-23T14:27:29.606504Z", "url": "https://files.pythonhosted.org/packages/c4/3c/0aa7b65f7f08be229853b1a1970eed025ce9de7ef9dd912ac58336251d81/django_ief-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:39 2020"}