{"info": {"author": "Steve Lime", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: C", "Programming Language :: C++", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: GIS", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "Python MapScript for MapServer 7.4.0 README\r\n===========================================\r\n\r\n:Author: MapServer Team\r\n:Last Updated: 2019-06-04\r\n\r\nIntroduction\r\n------------\r\n\r\nThe Python mapscript module provides users an interface to `MapServer <http://mapserver.org>`_\r\nclasses on any platform, and has been tested on Python versions 2.7 and 3.5+. \r\n\r\nThe Python mapscript module is created using `SWIG <http://www.swig.org.>`_ the\r\nthe Simplified Wrapper and Interface Generator. This is used to create MapServer bindings in\r\nmany different programming languages. \r\n\r\n+ Language agnostic documentation is available at http://mapserver.org/mapscript/introduction.html\r\n+ Python specific documentation is available at http://mapserver.org/mapscript/python.html\r\n\r\nFor working with Mapfiles in Python the `mappyfile <https://mappyfile.readthedocs.io/en/latest/>`_ project is \r\nalso available, this allows creating, parsing, formatting, and validating Mapfiles without any dependencies on MapServer. \r\n\r\nWheels and PyPI\r\n---------------\r\n\r\nPython `wheels <https://wheel.readthedocs.io/en/stable/>`_ have been created for Windows and uploaded to \r\n`PyPI <https://pypi.org/>`_ - the Python Package Index. Note - MapServer binaries still need to be installed on the system, \r\nand are not included in the wheel itself, see the *Installation* section below. \r\n\r\nAdvantages of ready-made wheels on PyPI include:\r\n\r\n+ easy installation using `pip <https://pypi.org/project/pip/>`_\r\n+ mapscript can be added as a dependency to `Requirements Files <https://pip.pypa.io/en/stable/user_guide/#id1>`_\r\n+ mapscript can be easily added to a Python `Virtual Environment <https://docs.python-guide.org/dev/virtualenvs/>`_\r\n+ Python2 or Python3 versions of mapscript can be installed and work with a single installation of MapServer\r\n\r\nCurrently the following wheels are built:\r\n\r\n+ Python 2.7 x64 for MapServer 7.4.0\r\n+ Python 3.6 x64 for MapServer 7.4.0\r\n\r\nThe mapscript wheels have been compiled using Visual Studio 2017 version 15.3 (``MSVC++ 14.11 _MSC_VER == 1911``). \r\nLinux wheels are also planned, using the `manylinux <https://github.com/pypa/manylinux>`_ project. \r\n\r\nNo source distributions will be provided on PyPI - to build from source requires the full MapServer source code,\r\nin which case it is easiest to take a copy of the full MapServer project and run the CMake process detailed below. \r\n\r\nThe wheels contain a full test suite and sample data that can be run to check that the installed MapServer is\r\nrunning correctly. \r\n\r\n..\r\n    py3 SWIG flag adds type annotations\r\n\r\nInstallation on Windows\r\n-----------------------\r\n\r\nTo use mapscript you will need to add the MapServer binaries to your system path. \r\nOn Windows you can use the following, replacing ``C:\\MapServer\\bin`` with the location of your MapServer binaries. \r\n\r\n.. code-block:: bat\r\n\r\n    SET PATH=C:\\MapServer\\bin;%PATH%\r\n\r\nWindows binary packages can be downloaded from `GIS Internals <https://www.gisinternals.com/stable.php>`_. \r\nTo ensure compatibility with the wheels, please use identical release packages, e.g. ``release-1911-x64-gdal-2-3-mapserver-7-4``\r\nfor mapscript 7.4. \r\n\r\nWhen using these packages the MapServer path will be similar to ``C:\\release-1911-x64-gdal-2-3-mapserver-7-2\\bin``. \r\n\r\nPrior to installing mapscript it is recommended to update pip to the latest version with the following command:\r\n\r\n.. code-block:: bat\r\n\r\n    python -m pip install --upgrade pip\r\n\r\nIf there are binary wheels available for your system, mapscript can be installed using:\r\n\r\n.. code-block:: bat\r\n\r\n    pip install mapscript\r\n\r\nIf you already have mapscript installed and wish to upgrade it to a newer version you can use:\r\n\r\n.. code-block:: bat\r\n\r\n    pip install mapscript --upgrade\r\n\r\nNow you should be able to import mapscript:\r\n\r\n.. code-block:: python\r\n\r\n    python -c \"import mapscript;print(mapscript.msGetVersion())\"\r\n    MapServer version 7.4.0 OUTPUT=PNG OUTPUT=JPEG OUTPUT=KML SUPPORTS=PROJ SUPPORTS=AGG SUPPORTS=FREETYPE SUPPORTS=CAIRO SUPPORTS=SVG_SYMBOLS SUPPORTS=SVGCAIRO SUPPORTS=ICONV SUPPORTS=FRIBIDI SUPPORTS=WMS_SERVER SUPPORTS=WMS_CLIENT SUPPORTS=WFS_SERVER SUPPORTS=WFS_CLIENT SUPPORTS=WCS_SERVER SUPPORTS=SOS_SERVER SUPPORTS=FASTCGI SUPPORTS=THREADS SUPPORTS=GEOS SUPPORTS=PBF INPUT=JPEG INPUT=POSTGIS INPUT=OGR INPUT=GDAL INPUT=SHAPEFILE\r\n\r\nIf you failed to add the MapServer binaries to your system path you may see one of the following errors:\r\n\r\n.. code-block:: python\r\n\r\n    ImportError: No module named _mapscript # Python 2.x\r\n    ModuleNotFoundError: No module named '_mapscript' # Python 3.x\r\n\r\nIf your version of mapscript does not match your version of MapServer you may instead one of the following messages:\r\n\r\n.. code-block:: python\r\n\r\n    ImportError: DLL load failed: The specified module could not be found.\r\n    ImportError: DLL load failed: The specified procedure could not be found.\r\n\r\nInstallation on Unix\r\n--------------------\r\n\r\nFor Unix users there are two approaches to installing mapscript. The first is to install the ``python-mapscript`` package using a package manager. For example on\r\nUbuntu the following command can be used:\r\n\r\n.. code-block:: bat\r\n\r\n    sudo apt-get install python-mapscript\r\n\r\nThe second approach is to build and install the Python mapscript module from source. Full details on compiling MapServer from source are detailed on the\r\n`Compiling on Unix <https://www.mapserver.org/installation/unix.html>`_ page. To make sure Python mapscript is built alongside MapServer the following flag needs to be set:\r\n\r\n.. code-block:: bat\r\n\r\n    -DWITH_PYTHON=ON\r\n\r\nTo configure the path of the mapscript installation location ``-DCMAKE_INSTALL_PREFIX`` can be set, e.g. \r\n\r\n.. code-block:: bat\r\n\r\n    sudo cmake .. -DCMAKE_INSTALL_PREFIX=/usr\r\n\r\nWhen installing the `DESTDIR <https://cmake.org/cmake/help/latest/envvar/DESTDIR.html>`_ variable can be set (note ``DESTDIR`` is not used on Windows)\r\nto install mapscript to a non-default location. E.g.\r\n\r\n.. code-block:: bat\r\n\r\n    make install DESTDIR=/tmp\r\n\r\nIn summary the ``install`` target runs the ``setup.py install`` command using custom paths (when set) similar to below:\r\n\r\n    python setup.py install --root=${DESTDIR} --prefix={CMAKE_INSTALL_PREFIX}\r\n\r\nQuickstart\r\n----------\r\n\r\nSome basic examples of what can be done with mapscript are shown below. Note - before running any scripts using mapscript, \r\nyou will need to add the MapServer binaries to your system path, see the *Installation* section above. \r\n\r\nTo open an existing Mapfile:\r\n\r\n.. code-block:: python\r\n\r\n    >>> import mapscript\r\n    >>> test_map = mapscript.mapObj(r\"C:\\Maps\\mymap.map\")\r\n    >>> extent = test_map.extent\r\n\r\nCreate a layer from a string:\r\n\r\n.. code-block:: python\r\n\r\n    >>> import mapscript\r\n    >>> layer = mapscript.fromstring(\"\"\"LAYER NAME \"test\" TYPE POINT END\"\"\")\r\n    >>> layer\r\n    <mapscript.layerObj; proxy of C layerObj instance at ...>\r\n    >>> layer.name\r\n    'test'\r\n    >>> layer.type == mapscript.MS_LAYER_POINT\r\n    True\r\n\r\nBuilding the Mapscript Module\r\n-----------------------------\r\n\r\nThe mapscript module is built as part of the MapServer CMake build process. This is configured using the ``mapserver/mapscript/CMakeLists.txt`` file. \r\n\r\nBefore the switch to CMake MapServer mapscript was built using distutils and ``setup.py``. Now the ``setup.py.in`` file is used as a template that\r\nis filled with the MapServer version number and used to created wheel files for distribution, or install mapscript directly on the build machine.  \r\n\r\nThe build process works as follows. \r\n\r\n+ CMake runs SWIG. This uses the SWIG interface files to create a ``mapscriptPYTHON_wrap.c`` file, \r\n  and a ``mapscript.py`` file containing the Python wrapper to the mapscript binary module. \r\n+ CMake then uses the appropriate compiler on the system to compile the ``mapscriptPYTHON_wrap.c`` file into a Python binary module -\r\n  ``_mapscript.pyd`` file on Windows, and a ``_mapscript.so`` file on Unix. \r\n\r\n``CMakeLists.txt`` is configured with a ``pythonmapscript-wheel`` target that copies all the required files to the output build folder where they are then packaged\r\ninto a Python wheel. The wheel can be built using the following command:\r\n\r\n.. code-block:: bat\r\n\r\n    cmake --build . --target pythonmapscript-wheel\r\n\r\nThe ``pythonmapscript-wheel`` target creates a virtual environment, creates the Python wheel, installs it to the virtual environment and finally runs the test\r\nsuite. This process runs commands similar to the following:\r\n\r\n.. code-block:: bat\r\n\r\n    python -m pip install virtualenv\r\n    virtualenv mapscriptvenv\r\n    python -m pip install --upgrade pip\r\n    pip install -r requirements-dev.txt\r\n    python setup.py bdist_wheel\r\n    pip install --no-index --find-links=dist mapscript\r\n    python -m pytest --pyargs mapscript.tests\r\n\r\nSWIG can also be run manually, without using CMake. This may allow further optimizations and control on the output. \r\n\r\n.. code-block:: bat\r\n\r\n    cd C:\\Projects\\mapserver\\build\r\n    SET PATH=C:\\MapServerBuild\\swigwin-3.0.12;%PATH%\r\n    swig -python -shadow -o mapscript_wrap.c ../mapscript.i\r\n\r\nSWIG has several command line options to control the output, examples of which are shown below:\r\n\r\n.. code-block:: bat\r\n\r\n    swig -python -shadow -modern -templatereduce -fastdispatch -fvirtual -fastproxy \r\n    -modernargs -castmode -dirvtable -fastinit -fastquery -noproxydel -nobuildnone \r\n    -o mapscript_wrap.c ../mapscript.i\r\n\r\nTesting\r\n-------\r\n\r\nThe mapscript module includes a test suite and a small sample dataset to check the output and MapServer installation. It is recommended\r\n`pytest <https://docs.pytest.org/en/latest/>`_ is used to run the tests. This can be installed using:\r\n\r\n.. code-block:: bat\r\n\r\n    pip install pytest\r\n\r\nMake sure the MapServer binaries are on the system path, and that the PROJ_LIB variable has been set as this is required for many of the tests. \r\n\r\n.. code-block:: bat\r\n\r\n    SET PATH=C:\\release-1911-x64-gdal-2-3-mapserver-7-4\\bin;%PATH%\r\n    SET PROJ_LIB=C:\\release-1911-x64-gdal-2-3-mapserver-7-4\\bin\\proj\\SHARE\r\n\r\nFinally run the command below to run the test suite: \r\n\r\n.. code-block:: bat\r\n\r\n    pytest --pyargs mapscript.tests\r\n\r\nCredits\r\n-------\r\n\r\n+ Steve Lime (developer)\r\n+ Sean Gillies (developer)\r\n+ Frank Warmerdam (developer)\r\n+ Howard Butler (developer)\r\n+ Norman Vine (cygwin and distutils guru)\r\n+ Tim Cera (install)\r\n+ Michael Schultz (documentation)\r\n+ Thomas Bonfort (developer)\r\n+ Even Rouault (developer)\r\n+ Seth Girvin (Python3 migration, documentation and builds)\r\n+ Claude Paroz (Python3 migration)\r\n\r\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.mapserver.org", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mapscript", "package_url": "https://pypi.org/project/mapscript/", "platform": "", "project_url": "https://pypi.org/project/mapscript/", "project_urls": {"Homepage": "http://www.mapserver.org"}, "release_url": "https://pypi.org/project/mapscript/7.4.0/", "requires_dist": null, "requires_python": "", "summary": "MapServer Python MapScript bindings", "version": "7.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>MapServer Team</td></tr>\n<tr><th>Last Updated:</th><td>2019-06-04</td>\n</tr>\n</tbody>\n</table>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The Python mapscript module provides users an interface to <a href=\"http://mapserver.org\" rel=\"nofollow\">MapServer</a>\nclasses on any platform, and has been tested on Python versions 2.7 and 3.5+.</p>\n<p>The Python mapscript module is created using <a href=\"http://www.swig.org.\" rel=\"nofollow\">SWIG</a> the\nthe Simplified Wrapper and Interface Generator. This is used to create MapServer bindings in\nmany different programming languages.</p>\n<ul>\n<li>Language agnostic documentation is available at <a href=\"http://mapserver.org/mapscript/introduction.html\" rel=\"nofollow\">http://mapserver.org/mapscript/introduction.html</a></li>\n<li>Python specific documentation is available at <a href=\"http://mapserver.org/mapscript/python.html\" rel=\"nofollow\">http://mapserver.org/mapscript/python.html</a></li>\n</ul>\n<p>For working with Mapfiles in Python the <a href=\"https://mappyfile.readthedocs.io/en/latest/\" rel=\"nofollow\">mappyfile</a> project is\nalso available, this allows creating, parsing, formatting, and validating Mapfiles without any dependencies on MapServer.</p>\n</div>\n<div id=\"wheels-and-pypi\">\n<h2>Wheels and PyPI</h2>\n<p>Python <a href=\"https://wheel.readthedocs.io/en/stable/\" rel=\"nofollow\">wheels</a> have been created for Windows and uploaded to\n<a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a> - the Python Package Index. Note - MapServer binaries still need to be installed on the system,\nand are not included in the wheel itself, see the <em>Installation</em> section below.</p>\n<p>Advantages of ready-made wheels on PyPI include:</p>\n<ul>\n<li>easy installation using <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a></li>\n<li>mapscript can be added as a dependency to <a href=\"https://pip.pypa.io/en/stable/user_guide/#id1\" rel=\"nofollow\">Requirements Files</a></li>\n<li>mapscript can be easily added to a Python <a href=\"https://docs.python-guide.org/dev/virtualenvs/\" rel=\"nofollow\">Virtual Environment</a></li>\n<li>Python2 or Python3 versions of mapscript can be installed and work with a single installation of MapServer</li>\n</ul>\n<p>Currently the following wheels are built:</p>\n<ul>\n<li>Python 2.7 x64 for MapServer 7.4.0</li>\n<li>Python 3.6 x64 for MapServer 7.4.0</li>\n</ul>\n<p>The mapscript wheels have been compiled using Visual Studio 2017 version 15.3 (<tt>MSVC++ 14.11 _MSC_VER == 1911</tt>).\nLinux wheels are also planned, using the <a href=\"https://github.com/pypa/manylinux\" rel=\"nofollow\">manylinux</a> project.</p>\n<p>No source distributions will be provided on PyPI - to build from source requires the full MapServer source code,\nin which case it is easiest to take a copy of the full MapServer project and run the CMake process detailed below.</p>\n<p>The wheels contain a full test suite and sample data that can be run to check that the installed MapServer is\nrunning correctly.</p>\n</div>\n<div id=\"installation-on-windows\">\n<h2>Installation on Windows</h2>\n<p>To use mapscript you will need to add the MapServer binaries to your system path.\nOn Windows you can use the following, replacing <tt><span class=\"pre\">C:\\MapServer\\bin</span></tt> with the location of your MapServer binaries.</p>\n<pre><span class=\"k\">SET</span> <span class=\"nv\">PATH</span><span class=\"p\">=</span>C:\\MapServer\\bin;<span class=\"nv\">%PATH%</span>\n</pre>\n<p>Windows binary packages can be downloaded from <a href=\"https://www.gisinternals.com/stable.php\" rel=\"nofollow\">GIS Internals</a>.\nTo ensure compatibility with the wheels, please use identical release packages, e.g. <tt><span class=\"pre\">release-1911-x64-gdal-2-3-mapserver-7-4</span></tt>\nfor mapscript 7.4.</p>\n<p>When using these packages the MapServer path will be similar to <tt><span class=\"pre\">C:\\release-1911-x64-gdal-2-3-mapserver-7-2\\bin</span></tt>.</p>\n<p>Prior to installing mapscript it is recommended to update pip to the latest version with the following command:</p>\n<pre>python -m pip install --upgrade pip\n</pre>\n<p>If there are binary wheels available for your system, mapscript can be installed using:</p>\n<pre>pip install mapscript\n</pre>\n<p>If you already have mapscript installed and wish to upgrade it to a newer version you can use:</p>\n<pre>pip install mapscript --upgrade\n</pre>\n<p>Now you should be able to import mapscript:</p>\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import mapscript;print(mapscript.msGetVersion())\"</span>\n<span class=\"n\">MapServer</span> <span class=\"n\">version</span> <span class=\"mf\">7.4</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"n\">OUTPUT</span><span class=\"o\">=</span><span class=\"n\">PNG</span> <span class=\"n\">OUTPUT</span><span class=\"o\">=</span><span class=\"n\">JPEG</span> <span class=\"n\">OUTPUT</span><span class=\"o\">=</span><span class=\"n\">KML</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">PROJ</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">AGG</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">FREETYPE</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">CAIRO</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">SVG_SYMBOLS</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">SVGCAIRO</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">ICONV</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">FRIBIDI</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">WMS_SERVER</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">WMS_CLIENT</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">WFS_SERVER</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">WFS_CLIENT</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">WCS_SERVER</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">SOS_SERVER</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">FASTCGI</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">THREADS</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">GEOS</span> <span class=\"n\">SUPPORTS</span><span class=\"o\">=</span><span class=\"n\">PBF</span> <span class=\"n\">INPUT</span><span class=\"o\">=</span><span class=\"n\">JPEG</span> <span class=\"n\">INPUT</span><span class=\"o\">=</span><span class=\"n\">POSTGIS</span> <span class=\"n\">INPUT</span><span class=\"o\">=</span><span class=\"n\">OGR</span> <span class=\"n\">INPUT</span><span class=\"o\">=</span><span class=\"n\">GDAL</span> <span class=\"n\">INPUT</span><span class=\"o\">=</span><span class=\"n\">SHAPEFILE</span>\n</pre>\n<p>If you failed to add the MapServer binaries to your system path you may see one of the following errors:</p>\n<pre><span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">module</span> <span class=\"n\">named</span> <span class=\"n\">_mapscript</span> <span class=\"c1\"># Python 2.x</span>\n<span class=\"ne\">ModuleNotFoundError</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">module</span> <span class=\"n\">named</span> <span class=\"s1\">'_mapscript'</span> <span class=\"c1\"># Python 3.x</span>\n</pre>\n<p>If your version of mapscript does not match your version of MapServer you may instead one of the following messages:</p>\n<pre><span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">DLL</span> <span class=\"n\">load</span> <span class=\"n\">failed</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">specified</span> <span class=\"n\">module</span> <span class=\"n\">could</span> <span class=\"ow\">not</span> <span class=\"n\">be</span> <span class=\"n\">found</span><span class=\"o\">.</span>\n<span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">DLL</span> <span class=\"n\">load</span> <span class=\"n\">failed</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">specified</span> <span class=\"n\">procedure</span> <span class=\"n\">could</span> <span class=\"ow\">not</span> <span class=\"n\">be</span> <span class=\"n\">found</span><span class=\"o\">.</span>\n</pre>\n</div>\n<div id=\"installation-on-unix\">\n<h2>Installation on Unix</h2>\n<p>For Unix users there are two approaches to installing mapscript. The first is to install the <tt><span class=\"pre\">python-mapscript</span></tt> package using a package manager. For example on\nUbuntu the following command can be used:</p>\n<pre>sudo apt-get install python-mapscript\n</pre>\n<p>The second approach is to build and install the Python mapscript module from source. Full details on compiling MapServer from source are detailed on the\n<a href=\"https://www.mapserver.org/installation/unix.html\" rel=\"nofollow\">Compiling on Unix</a> page. To make sure Python mapscript is built alongside MapServer the following flag needs to be set:</p>\n<pre>-DWITH_PYTHON=ON\n</pre>\n<p>To configure the path of the mapscript installation location <tt><span class=\"pre\">-DCMAKE_INSTALL_PREFIX</span></tt> can be set, e.g.</p>\n<pre>sudo cmake .. -DCMAKE_INSTALL_PREFIX=/usr\n</pre>\n<p>When installing the <a href=\"https://cmake.org/cmake/help/latest/envvar/DESTDIR.html\" rel=\"nofollow\">DESTDIR</a> variable can be set (note <tt>DESTDIR</tt> is not used on Windows)\nto install mapscript to a non-default location. E.g.</p>\n<pre>make install DESTDIR=/tmp\n</pre>\n<p>In summary the <tt>install</tt> target runs the <tt>setup.py install</tt> command using custom paths (when set) similar to below:</p>\n<blockquote>\npython setup.py install \u2013root=${DESTDIR} \u2013prefix={CMAKE_INSTALL_PREFIX}</blockquote>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Some basic examples of what can be done with mapscript are shown below. Note - before running any scripts using mapscript,\nyou will need to add the MapServer binaries to your system path, see the <em>Installation</em> section above.</p>\n<p>To open an existing Mapfile:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">mapscript</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">test_map</span> <span class=\"o\">=</span> <span class=\"n\">mapscript</span><span class=\"o\">.</span><span class=\"n\">mapObj</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"C:\\Maps\\mymap.map\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">extent</span> <span class=\"o\">=</span> <span class=\"n\">test_map</span><span class=\"o\">.</span><span class=\"n\">extent</span>\n</pre>\n<p>Create a layer from a string:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">mapscript</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"n\">mapscript</span><span class=\"o\">.</span><span class=\"n\">fromstring</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"LAYER NAME \"test\" TYPE POINT END\"\"\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">layer</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mapscript</span><span class=\"o\">.</span><span class=\"n\">layerObj</span><span class=\"p\">;</span> <span class=\"n\">proxy</span> <span class=\"n\">of</span> <span class=\"n\">C</span> <span class=\"n\">layerObj</span> <span class=\"n\">instance</span> <span class=\"n\">at</span> <span class=\"o\">...&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"s1\">'test'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">mapscript</span><span class=\"o\">.</span><span class=\"n\">MS_LAYER_POINT</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"building-the-mapscript-module\">\n<h2>Building the Mapscript Module</h2>\n<p>The mapscript module is built as part of the MapServer CMake build process. This is configured using the <tt>mapserver/mapscript/CMakeLists.txt</tt> file.</p>\n<p>Before the switch to CMake MapServer mapscript was built using distutils and <tt>setup.py</tt>. Now the <tt>setup.py.in</tt> file is used as a template that\nis filled with the MapServer version number and used to created wheel files for distribution, or install mapscript directly on the build machine.</p>\n<p>The build process works as follows.</p>\n<ul>\n<li>CMake runs SWIG. This uses the SWIG interface files to create a <tt>mapscriptPYTHON_wrap.c</tt> file,\nand a <tt>mapscript.py</tt> file containing the Python wrapper to the mapscript binary module.</li>\n<li>CMake then uses the appropriate compiler on the system to compile the <tt>mapscriptPYTHON_wrap.c</tt> file into a Python binary module -\n<tt>_mapscript.pyd</tt> file on Windows, and a <tt>_mapscript.so</tt> file on Unix.</li>\n</ul>\n<p><tt>CMakeLists.txt</tt> is configured with a <tt><span class=\"pre\">pythonmapscript-wheel</span></tt> target that copies all the required files to the output build folder where they are then packaged\ninto a Python wheel. The wheel can be built using the following command:</p>\n<pre>cmake --build . --target pythonmapscript-wheel\n</pre>\n<p>The <tt><span class=\"pre\">pythonmapscript-wheel</span></tt> target creates a virtual environment, creates the Python wheel, installs it to the virtual environment and finally runs the test\nsuite. This process runs commands similar to the following:</p>\n<pre>python -m pip install virtualenv\nvirtualenv mapscriptvenv\npython -m pip install --upgrade pip\npip install -r requirements-dev.txt\npython setup.py bdist_wheel\npip install --no-index --find-links=dist mapscript\npython -m pytest --pyargs mapscript.tests\n</pre>\n<p>SWIG can also be run manually, without using CMake. This may allow further optimizations and control on the output.</p>\n<pre><span class=\"k\">cd</span> C:\\Projects\\mapserver\\build\n<span class=\"k\">SET</span> <span class=\"nv\">PATH</span><span class=\"p\">=</span>C:\\MapServerBuild\\swigwin-3.0.12;<span class=\"nv\">%PATH%</span>\nswig -python -shadow -o mapscript_wrap.c ../mapscript.i\n</pre>\n<p>SWIG has several command line options to control the output, examples of which are shown below:</p>\n<pre>swig -python -shadow -modern -templatereduce -fastdispatch -fvirtual -fastproxy\n-modernargs -castmode -dirvtable -fastinit -fastquery -noproxydel -nobuildnone\n-o mapscript_wrap.c ../mapscript.i\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>The mapscript module includes a test suite and a small sample dataset to check the output and MapServer installation. It is recommended\n<a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a> is used to run the tests. This can be installed using:</p>\n<pre>pip install pytest\n</pre>\n<p>Make sure the MapServer binaries are on the system path, and that the PROJ_LIB variable has been set as this is required for many of the tests.</p>\n<pre><span class=\"k\">SET</span> <span class=\"nv\">PATH</span><span class=\"p\">=</span>C:\\release-1911-x64-gdal-2-3-mapserver-7-4\\bin;<span class=\"nv\">%PATH%</span>\n<span class=\"k\">SET</span> <span class=\"nv\">PROJ_LIB</span><span class=\"p\">=</span>C:\\release-1911-x64-gdal-2-3-mapserver-7-4\\bin\\proj\\SHARE\n</pre>\n<p>Finally run the command below to run the test suite:</p>\n<pre>pytest --pyargs mapscript.tests\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Steve Lime (developer)</li>\n<li>Sean Gillies (developer)</li>\n<li>Frank Warmerdam (developer)</li>\n<li>Howard Butler (developer)</li>\n<li>Norman Vine (cygwin and distutils guru)</li>\n<li>Tim Cera (install)</li>\n<li>Michael Schultz (documentation)</li>\n<li>Thomas Bonfort (developer)</li>\n<li>Even Rouault (developer)</li>\n<li>Seth Girvin (Python3 migration, documentation and builds)</li>\n<li>Claude Paroz (Python3 migration)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7032984, "releases": {"5.02.2.33": [{"comment_text": "", "digests": {"md5": "7401fb50c93f032a987f2a59c1f71f5e", "sha256": "245e3c5f01c7b235955d23ab8b1ad081e5e18e837f9ec469d06802a196f4a542"}, "downloads": -1, "filename": "mapscript-5.02.2.33.tar.gz", "has_sig": false, "md5_digest": "7401fb50c93f032a987f2a59c1f71f5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147424, "upload_time": "2009-08-07T15:23:18", "upload_time_iso_8601": "2009-08-07T15:23:18.833574Z", "url": "https://files.pythonhosted.org/packages/9b/d6/d6232ed0a920c9ba8290c3d7a427fc3d42be1bba815eb921081d143e13e8/mapscript-5.02.2.33.tar.gz", "yanked": false}], "5.4.2.1": [{"comment_text": "", "digests": {"md5": "67e176650771af6466ca6f01448bb933", "sha256": "e69511cbdf3e0800d393141e2f16ecf6f11d77f00602ce3333fa9ef432b65be5"}, "downloads": -1, "filename": "mapscript-5.4.2.1.tar.gz", "has_sig": false, "md5_digest": "67e176650771af6466ca6f01448bb933", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 153651, "upload_time": "2009-08-07T17:19:55", "upload_time_iso_8601": "2009-08-07T17:19:55.342468Z", "url": "https://files.pythonhosted.org/packages/8f/7d/92af154e6b0d99fec444ff6ea345faad7850fab4efd6c2a0cbe67566cf9c/mapscript-5.4.2.1.tar.gz", "yanked": false}], "5.6.3.0": [{"comment_text": "", "digests": {"md5": "6764e8216204ba6c48bcafe2c5bbea6a", "sha256": "52af6d6dcb544151526311bdb9a06242e061f0e63f741ef762749f97712dd995"}, "downloads": -1, "filename": "mapscript-5.6.3.0.zip", "has_sig": false, "md5_digest": "6764e8216204ba6c48bcafe2c5bbea6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204130, "upload_time": "2010-03-30T17:31:08", "upload_time_iso_8601": "2010-03-30T17:31:08.999740Z", "url": "https://files.pythonhosted.org/packages/2a/4a/89ac6d24d2a93ee4f4bb1d3d9bdc0af8e86ba000a12a69fd3ed1e1907948/mapscript-5.6.3.0.zip", "yanked": false}], "7.2": [{"comment_text": "", "digests": {"md5": "0d9e25b662ac738ac45810c1eb6f7779", "sha256": "5dd45d2f4f1aae9a8fb7d770cb37ab0269dbbb0c8440f50f4f26a870d64f04a9"}, "downloads": -1, "filename": "mapscript-7.2-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "0d9e25b662ac738ac45810c1eb6f7779", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 266776, "upload_time": "2018-08-17T17:57:28", "upload_time_iso_8601": "2018-08-17T17:57:28.364834Z", "url": "https://files.pythonhosted.org/packages/29/a4/1b2052c2c8d8246b2c5e54177e4bd48887eacec78af1b5cfde8bd9f732ba/mapscript-7.2-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "916b29a5f9a175b2b60851beabdd2118", "sha256": "4cd80d479b54ffe64b7962771e85db0f502351c83c7ea7a5494a84900590fe07"}, "downloads": -1, "filename": "mapscript-7.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "916b29a5f9a175b2b60851beabdd2118", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 266057, "upload_time": "2018-08-17T17:58:07", "upload_time_iso_8601": "2018-08-17T17:58:07.142252Z", "url": "https://files.pythonhosted.org/packages/e4/e3/a2726e8b6b8c8c22e1ca015380fa0c04c60450f714e208b42982bda63c70/mapscript-7.2-cp36-cp36m-win_amd64.whl", "yanked": false}], "7.2.1": [{"comment_text": "", "digests": {"md5": "bc3a046742fec1496b421bd64da7f065", "sha256": "c38fdbb797f5bccb70f6d0ac99f60bdceb4d9cf684a492b4569701c1fb5ebc75"}, "downloads": -1, "filename": "mapscript-7.2.1-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "bc3a046742fec1496b421bd64da7f065", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 416210, "upload_time": "2018-10-11T22:45:08", "upload_time_iso_8601": "2018-10-11T22:45:08.546498Z", "url": "https://files.pythonhosted.org/packages/26/7b/03e631eb124813fabfd884f2d7bd76db04c3c8252192dbc837bcfe58bf30/mapscript-7.2.1-cp27-cp27m-win_amd64.whl", "yanked": false}], "7.2.1.post1": [{"comment_text": "", "digests": {"md5": "ce701ce9ce00a804f04edadbfe5a025c", "sha256": "9ca8a7d96337f070efd8da8587c1e00fbc536fbbb62703674965b96cffa498b3"}, "downloads": -1, "filename": "mapscript-7.2.1.post1-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "ce701ce9ce00a804f04edadbfe5a025c", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 417021, "upload_time": "2018-10-11T23:01:43", "upload_time_iso_8601": "2018-10-11T23:01:43.709228Z", "url": "https://files.pythonhosted.org/packages/05/bc/f36accc29beb753afa5f0c166be9dccdfe3569e35bd0f403a1e62f2a4864/mapscript-7.2.1.post1-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48c8aabe73974fe0cc6ea884551c2544", "sha256": "693afd627cffc3250ef257fa8b6a0928ee144ccfa127f829f7044167f7a85c13"}, "downloads": -1, "filename": "mapscript-7.2.1.post1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "48c8aabe73974fe0cc6ea884551c2544", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 417722, "upload_time": "2018-10-11T23:01:58", "upload_time_iso_8601": "2018-10-11T23:01:58.482777Z", "url": "https://files.pythonhosted.org/packages/9e/03/5b859f95622266665e1f7215aabc3c268e19042d2fdfa3acd0b2cc2974c6/mapscript-7.2.1.post1-cp36-cp36m-win_amd64.whl", "yanked": false}], "7.2.2": [{"comment_text": "", "digests": {"md5": "aa8adb471c5d95cc3e7d31d96d27c9bc", "sha256": "5d9ecc6dd021af64efa0d33d5ee5aee8f7fdf0a8815cf4aa1e4a576123576569"}, "downloads": -1, "filename": "mapscript-7.2.2-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "aa8adb471c5d95cc3e7d31d96d27c9bc", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 415490, "upload_time": "2019-03-01T05:50:30", "upload_time_iso_8601": "2019-03-01T05:50:30.140997Z", "url": "https://files.pythonhosted.org/packages/54/53/8d90fd78006da7b4cf35d6296c4b0accdc80e1fcbbc541ea93437c3ede8a/mapscript-7.2.2-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "892cea45a31da1f11dd1881df37e3d0b", "sha256": "1cca3f2d3bb3e99cc5491699bc913374fd08edaa4fc7ca584937e1a74609dc02"}, "downloads": -1, "filename": "mapscript-7.2.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "892cea45a31da1f11dd1881df37e3d0b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 416343, "upload_time": "2019-03-01T05:51:06", "upload_time_iso_8601": "2019-03-01T05:51:06.602216Z", "url": "https://files.pythonhosted.org/packages/b2/9f/64ab21687d6fb9c6c6a0f1162312a6418a8d9599c2dd4b6f5973c856f2b9/mapscript-7.2.2-cp37-cp37m-win_amd64.whl", "yanked": false}], "7.4.0": [{"comment_text": "", "digests": {"md5": "adf31f5a32ef2d18a2e5ddc3e46f281c", "sha256": "3fb3bf6088f60e5b21aa953ab3f4c6e56e7cff345615a001ab0650ca21351317"}, "downloads": -1, "filename": "mapscript-7.4.0-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "adf31f5a32ef2d18a2e5ddc3e46f281c", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 420059, "upload_time": "2019-06-04T23:02:13", "upload_time_iso_8601": "2019-06-04T23:02:13.085976Z", "url": "https://files.pythonhosted.org/packages/1f/26/7f6a680833620429369d726ba866f4a5f3b981f1d41a15db697f1ffcaa89/mapscript-7.4.0-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57247f9ce7062c21b3114fd33afcf566", "sha256": "d1e4f6f73fa3c472dfc81395445f1121ce80bbbfc10aaf00aa377f9b31c472ef"}, "downloads": -1, "filename": "mapscript-7.4.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "57247f9ce7062c21b3114fd33afcf566", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 423210, "upload_time": "2020-04-16T15:11:15", "upload_time_iso_8601": "2020-04-16T15:11:15.006052Z", "url": "https://files.pythonhosted.org/packages/59/8c/b924d6e92f696ff64dc2ebcd99822ec7fbc9d7053d64ef876d56956c0c23/mapscript-7.4.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64c617030ea1ba1dcf307693c19bc3ba", "sha256": "27ed0e0e3400a34edf6e262f1497f1cb2620327e66fd0cfa78dfa2a64300dcb4"}, "downloads": -1, "filename": "mapscript-7.4.0-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "64c617030ea1ba1dcf307693c19bc3ba", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 338705, "upload_time": "2020-04-16T15:35:19", "upload_time_iso_8601": "2020-04-16T15:35:19.750701Z", "url": "https://files.pythonhosted.org/packages/e9/3f/78fe0edd47d222b9101ea05555305497a6042efe31da1ee5f2794cfd8aef/mapscript-7.4.0-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d83daf4015a1cb1389db4df64535eb5", "sha256": "8bf50ca5a205f34a15101bf680359661a596f00bbde7d1fb57a07af75a632509"}, "downloads": -1, "filename": "mapscript-7.4.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "4d83daf4015a1cb1389db4df64535eb5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 420841, "upload_time": "2019-06-04T23:02:35", "upload_time_iso_8601": "2019-06-04T23:02:35.553383Z", "url": "https://files.pythonhosted.org/packages/23/1f/48299e6561e24ff4efbaf115219075067fcf28b57e03414b7b0897d33543/mapscript-7.4.0-cp37-cp37m-win_amd64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "adf31f5a32ef2d18a2e5ddc3e46f281c", "sha256": "3fb3bf6088f60e5b21aa953ab3f4c6e56e7cff345615a001ab0650ca21351317"}, "downloads": -1, "filename": "mapscript-7.4.0-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "adf31f5a32ef2d18a2e5ddc3e46f281c", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 420059, "upload_time": "2019-06-04T23:02:13", "upload_time_iso_8601": "2019-06-04T23:02:13.085976Z", "url": "https://files.pythonhosted.org/packages/1f/26/7f6a680833620429369d726ba866f4a5f3b981f1d41a15db697f1ffcaa89/mapscript-7.4.0-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57247f9ce7062c21b3114fd33afcf566", "sha256": "d1e4f6f73fa3c472dfc81395445f1121ce80bbbfc10aaf00aa377f9b31c472ef"}, "downloads": -1, "filename": "mapscript-7.4.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "57247f9ce7062c21b3114fd33afcf566", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 423210, "upload_time": "2020-04-16T15:11:15", "upload_time_iso_8601": "2020-04-16T15:11:15.006052Z", "url": "https://files.pythonhosted.org/packages/59/8c/b924d6e92f696ff64dc2ebcd99822ec7fbc9d7053d64ef876d56956c0c23/mapscript-7.4.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64c617030ea1ba1dcf307693c19bc3ba", "sha256": "27ed0e0e3400a34edf6e262f1497f1cb2620327e66fd0cfa78dfa2a64300dcb4"}, "downloads": -1, "filename": "mapscript-7.4.0-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "64c617030ea1ba1dcf307693c19bc3ba", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 338705, "upload_time": "2020-04-16T15:35:19", "upload_time_iso_8601": "2020-04-16T15:35:19.750701Z", "url": "https://files.pythonhosted.org/packages/e9/3f/78fe0edd47d222b9101ea05555305497a6042efe31da1ee5f2794cfd8aef/mapscript-7.4.0-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d83daf4015a1cb1389db4df64535eb5", "sha256": "8bf50ca5a205f34a15101bf680359661a596f00bbde7d1fb57a07af75a632509"}, "downloads": -1, "filename": "mapscript-7.4.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "4d83daf4015a1cb1389db4df64535eb5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 420841, "upload_time": "2019-06-04T23:02:35", "upload_time_iso_8601": "2019-06-04T23:02:35.553383Z", "url": "https://files.pythonhosted.org/packages/23/1f/48299e6561e24ff4efbaf115219075067fcf28b57e03414b7b0897d33543/mapscript-7.4.0-cp37-cp37m-win_amd64.whl", "yanked": false}], "timestamp": "Fri May  8 00:57:52 2020"}