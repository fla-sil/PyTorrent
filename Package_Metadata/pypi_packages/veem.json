{"info": {"author": "Veem", "author_email": "devsupport@veem.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Veem-Python-Sdk\n===============\n\nThe Veem Python SDK provides an interface to make it easier to call [Veem Global Payments APIs](https://developer.veem.com/reference).\n\n## Version information\n- Latest SDK Version: ```3.0.0```\n- Latest supported API Endpoint Version: ```v1.1```\n\n\n## Documentation\n\n- [Veem Global Payments APIs](https://developer.veem.com/reference)\n- [Developer Dashboard](https://developer.veem.com/page/dev-dashboard-sandbox)\n\n\n## System Requirements\n1. The SDK works on **Python 2.7, Python 3.4 and beyond**.\n2. A [developer](https://developer.veem.com/page/dev-dashboard-sandbox) account\n3. An [application with a customer account](https://developer.veem.com/page/dev-dashboard-sandbox)\n   and the associated client id and secret (Authorization flow / Client\n   Credentials flow)\n\n## First Use Instructions\n1. pypi install with command: ```pip install veem```\n2. Import the package to your python\n\nOr\n\n1. Clone the GitHub repo to your computer.\n2. Run installation with command ```python setup.py install```\n3. Import the package to your python script\n\n\n## Configuration YAML\nVeem Python SDK utilize configuration YAML file to manage your SDK credential.\nHere is the sample content:\n```\nclient_id: VeemTester-1234abcd\nclient_secret: 8djduf8e-d798-3534-afe3-123sdc3r4fe\nurl: https://sandbox-api.veem.com/\nauthorizationCode: VeemAbckeieifh\nredirectUrl: http://your-veem-redirct.yourbusiness.com\n```\n\n\n## Testing the Code\n\nTo test the code locally, follow the steps below:\n\n1. cd to the project directory\n2. Client can either integrate with Authorization flow or Client Credential Flow;\n3. For Authorization flow, fill in the `clientId`, `clientSecret`,\n   `authorizationCode`, and `redirectUrl`(optional) in your configuration yaml.\n4. For Client Credentials flow, fill in the `clientId`, and `clientSecret` in\n   your configuration yaml.\n5. To exercise all Veem Global Payment APIs, fill access_token received from\n   either step 3 or 4 to your configuration yaml.\n6. Save the configuration yaml to a readable location or passing the content of\n   yaml file as a yaml loadable string.\n\n## Getting the OAuth Tokens\n\nIn order to get the access tokens from the Developer Portal;\n\n**Sign In with Veem** - Sign into [developer Portal ](https://developer.veem.com/page/dev-dashboard-sandbox).\n\n**Create an Application**- Create a new application by providing the `Name`, `OAuth2 Redirection URLs` and `Payment Status Webhooks`.\n\n**Create a Customer**- Create a new customer by providing `Business Name`, `Country` and `Primary Email`\n\n**Get Credentials**- Go the Application and select the `Customer` and copy the `Access Token`.\n\nIn order to get the `access token` programmatically, get the client id, client secrets (Optional redirect url for Authorization flow).\n\n```\nfrom veem.configuration import ConfigLoader\nfrom veem.client.authentication import AuthenticationClient\n\n# loading SDK configuration from your yaml file\nconfig = ConfigLoader(yaml_file='/path/to/your/configuration.yaml')\n# login to Veem server with client credentials\ntokenResponse= AuthenticationClient(config).getTokenFromClientCredentials()\n```\n\n## Invoice Client Example\n\nThe following example is to send invoice using `Invoice Client`\n\n```\n\nfrom veem.client.veem import VeemClient\nfrom veem.client.requests.invoice import InvoiceRequest\n\n# define a VeemClient Context Manager with yaml+file and auto login.\nwith VeemClient(yaml_file='/path/to/your/configuration.yaml',\n                useClientCredentials=True) as veem:\n    # define an InvoiceRequest\n    invoice = InvoiceRequest(payer=dict(type='Business',\n                                        email='username@yourbusiness.com',\n                                        firstName='Joe',\n                                        lastName='Doe',\n                                        businessName='Your Business Inc.',\n                                        countryCode='US',\n                                        phoneCountryCode='1',\n                                        phone='02222222222'),\n         amount=dict(number=50, currency='USD'))\n    # create an invoice\n    sentInvoice = veem.inoviceClient.create(invoice)\n\n```\n\n**More Examples can be found under examples folder**\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/veeminc/veem-python-sdk", "keywords": "veem python sdk b2b payment", "license": "", "maintainer": "", "maintainer_email": "", "name": "veem", "package_url": "https://pypi.org/project/veem/", "platform": "", "project_url": "https://pypi.org/project/veem/", "project_urls": {"Homepage": "https://github.com/veeminc/veem-python-sdk"}, "release_url": "https://pypi.org/project/veem/3.0.0/", "requires_dist": ["six", "pyyaml", "urllib3", "attrdict", "requests"], "requires_python": "", "summary": "Veem Python SDK provides an interface to call Veem Global Payments APIs (https://www.veem.com).", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Veem-Python-Sdk</h1>\n<p>The Veem Python SDK provides an interface to make it easier to call <a href=\"https://developer.veem.com/reference\" rel=\"nofollow\">Veem Global Payments APIs</a>.</p>\n<h2>Version information</h2>\n<ul>\n<li>Latest SDK Version: <code>3.0.0</code></li>\n<li>Latest supported API Endpoint Version: <code>v1.1</code></li>\n</ul>\n<h2>Documentation</h2>\n<ul>\n<li><a href=\"https://developer.veem.com/reference\" rel=\"nofollow\">Veem Global Payments APIs</a></li>\n<li><a href=\"https://developer.veem.com/page/dev-dashboard-sandbox\" rel=\"nofollow\">Developer Dashboard</a></li>\n</ul>\n<h2>System Requirements</h2>\n<ol>\n<li>The SDK works on <strong>Python 2.7, Python 3.4 and beyond</strong>.</li>\n<li>A <a href=\"https://developer.veem.com/page/dev-dashboard-sandbox\" rel=\"nofollow\">developer</a> account</li>\n<li>An <a href=\"https://developer.veem.com/page/dev-dashboard-sandbox\" rel=\"nofollow\">application with a customer account</a>\nand the associated client id and secret (Authorization flow / Client\nCredentials flow)</li>\n</ol>\n<h2>First Use Instructions</h2>\n<ol>\n<li>pypi install with command: <code>pip install veem</code></li>\n<li>Import the package to your python</li>\n</ol>\n<p>Or</p>\n<ol>\n<li>Clone the GitHub repo to your computer.</li>\n<li>Run installation with command <code>python setup.py install</code></li>\n<li>Import the package to your python script</li>\n</ol>\n<h2>Configuration YAML</h2>\n<p>Veem Python SDK utilize configuration YAML file to manage your SDK credential.\nHere is the sample content:</p>\n<pre><code>client_id: VeemTester-1234abcd\nclient_secret: 8djduf8e-d798-3534-afe3-123sdc3r4fe\nurl: https://sandbox-api.veem.com/\nauthorizationCode: VeemAbckeieifh\nredirectUrl: http://your-veem-redirct.yourbusiness.com\n</code></pre>\n<h2>Testing the Code</h2>\n<p>To test the code locally, follow the steps below:</p>\n<ol>\n<li>cd to the project directory</li>\n<li>Client can either integrate with Authorization flow or Client Credential Flow;</li>\n<li>For Authorization flow, fill in the <code>clientId</code>, <code>clientSecret</code>,\n<code>authorizationCode</code>, and <code>redirectUrl</code>(optional) in your configuration yaml.</li>\n<li>For Client Credentials flow, fill in the <code>clientId</code>, and <code>clientSecret</code> in\nyour configuration yaml.</li>\n<li>To exercise all Veem Global Payment APIs, fill access_token received from\neither step 3 or 4 to your configuration yaml.</li>\n<li>Save the configuration yaml to a readable location or passing the content of\nyaml file as a yaml loadable string.</li>\n</ol>\n<h2>Getting the OAuth Tokens</h2>\n<p>In order to get the access tokens from the Developer Portal;</p>\n<p><strong>Sign In with Veem</strong> - Sign into <a href=\"https://developer.veem.com/page/dev-dashboard-sandbox\" rel=\"nofollow\">developer Portal </a>.</p>\n<p><strong>Create an Application</strong>- Create a new application by providing the <code>Name</code>, <code>OAuth2 Redirection URLs</code> and <code>Payment Status Webhooks</code>.</p>\n<p><strong>Create a Customer</strong>- Create a new customer by providing <code>Business Name</code>, <code>Country</code> and <code>Primary Email</code></p>\n<p><strong>Get Credentials</strong>- Go the Application and select the <code>Customer</code> and copy the <code>Access Token</code>.</p>\n<p>In order to get the <code>access token</code> programmatically, get the client id, client secrets (Optional redirect url for Authorization flow).</p>\n<pre><code>from veem.configuration import ConfigLoader\nfrom veem.client.authentication import AuthenticationClient\n\n# loading SDK configuration from your yaml file\nconfig = ConfigLoader(yaml_file='/path/to/your/configuration.yaml')\n# login to Veem server with client credentials\ntokenResponse= AuthenticationClient(config).getTokenFromClientCredentials()\n</code></pre>\n<h2>Invoice Client Example</h2>\n<p>The following example is to send invoice using <code>Invoice Client</code></p>\n<pre><code>\nfrom veem.client.veem import VeemClient\nfrom veem.client.requests.invoice import InvoiceRequest\n\n# define a VeemClient Context Manager with yaml+file and auto login.\nwith VeemClient(yaml_file='/path/to/your/configuration.yaml',\n                useClientCredentials=True) as veem:\n    # define an InvoiceRequest\n    invoice = InvoiceRequest(payer=dict(type='Business',\n                                        email='username@yourbusiness.com',\n                                        firstName='Joe',\n                                        lastName='Doe',\n                                        businessName='Your Business Inc.',\n                                        countryCode='US',\n                                        phoneCountryCode='1',\n                                        phone='02222222222'),\n         amount=dict(number=50, currency='USD'))\n    # create an invoice\n    sentInvoice = veem.inoviceClient.create(invoice)\n\n</code></pre>\n<p><strong>More Examples can be found under examples folder</strong></p>\n\n          </div>"}, "last_serial": 5826082, "releases": {"3.0.0": [{"comment_text": "", "digests": {"md5": "206199978ec0bab4ee232c475404b5d3", "sha256": "8bff58260091d78745e420c74833a13b6355922d7d67e11b3cb636b6e60a55bf"}, "downloads": -1, "filename": "veem-3.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "206199978ec0bab4ee232c475404b5d3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 37611, "upload_time": "2019-09-13T14:47:06", "upload_time_iso_8601": "2019-09-13T14:47:06.461720Z", "url": "https://files.pythonhosted.org/packages/fb/d7/5c5c69aea31f55f462a65fc4dc297a8142b72af15a9b0a78ea048ca3fa88/veem-3.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e564f121191ca6188758e646ceeb99a8", "sha256": "8de8b3265f4b34407a638340ec3d86acad9f6131666bd2a25f8bbeec3c2631d6"}, "downloads": -1, "filename": "veem-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e564f121191ca6188758e646ceeb99a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37611, "upload_time": "2019-09-13T14:47:08", "upload_time_iso_8601": "2019-09-13T14:47:08.034191Z", "url": "https://files.pythonhosted.org/packages/65/22/436a34a491f30943367afdb46b32f23689dc7be2fc0c6cf2d11a9ec126cd/veem-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f47aa1a6f70c06dc805603e721ea3e18", "sha256": "c79a7802f4b84afbc1ca4642b397e456b187626125d9f1294fe1d38906f40ecf"}, "downloads": -1, "filename": "veem-3.0.0.tar.gz", "has_sig": false, "md5_digest": "f47aa1a6f70c06dc805603e721ea3e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20102, "upload_time": "2019-09-13T14:47:09", "upload_time_iso_8601": "2019-09-13T14:47:09.342778Z", "url": "https://files.pythonhosted.org/packages/e7/a5/cff703e676d3895dbcbaee0e403087a32a0da96e44030c827dfc80d87383/veem-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "206199978ec0bab4ee232c475404b5d3", "sha256": "8bff58260091d78745e420c74833a13b6355922d7d67e11b3cb636b6e60a55bf"}, "downloads": -1, "filename": "veem-3.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "206199978ec0bab4ee232c475404b5d3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 37611, "upload_time": "2019-09-13T14:47:06", "upload_time_iso_8601": "2019-09-13T14:47:06.461720Z", "url": "https://files.pythonhosted.org/packages/fb/d7/5c5c69aea31f55f462a65fc4dc297a8142b72af15a9b0a78ea048ca3fa88/veem-3.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e564f121191ca6188758e646ceeb99a8", "sha256": "8de8b3265f4b34407a638340ec3d86acad9f6131666bd2a25f8bbeec3c2631d6"}, "downloads": -1, "filename": "veem-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e564f121191ca6188758e646ceeb99a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37611, "upload_time": "2019-09-13T14:47:08", "upload_time_iso_8601": "2019-09-13T14:47:08.034191Z", "url": "https://files.pythonhosted.org/packages/65/22/436a34a491f30943367afdb46b32f23689dc7be2fc0c6cf2d11a9ec126cd/veem-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f47aa1a6f70c06dc805603e721ea3e18", "sha256": "c79a7802f4b84afbc1ca4642b397e456b187626125d9f1294fe1d38906f40ecf"}, "downloads": -1, "filename": "veem-3.0.0.tar.gz", "has_sig": false, "md5_digest": "f47aa1a6f70c06dc805603e721ea3e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20102, "upload_time": "2019-09-13T14:47:09", "upload_time_iso_8601": "2019-09-13T14:47:09.342778Z", "url": "https://files.pythonhosted.org/packages/e7/a5/cff703e676d3895dbcbaee0e403087a32a0da96e44030c827dfc80d87383/veem-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:09 2020"}