{"info": {"author": "Benjamin Dummer", "author_email": "dummerbd@appstate.edu", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "==========\nGroundwork\n==========\n\nGroundwork is a small set of template tags and filters that simplifies\nworking with Zurb Foundation. Many common django components like paginators,\nmessages, and forms can be used natively with this package. These components\nget wrapped in nice pretty Foundation goodness.\n\nNaming Note\n-----------\nThis package was called Groundwork instead of Foundation to avoid collision\nwith other packages of that name (or similar). It also symbolizes the simplicity\nof the tools this package provides. Like Foundation itself, this package just\nprovides you with the groundwork needed to make sexy web apps. It is not\nintended to be an entire framework or provide programmtic equivalences to all\nthe foundation components.\n\n\nQuick Start\n-----------\n1. Install Groundwork using pip::\n\n    pip install django-groundwork\n\n2. Add \"groundwork\" to your INSTALLED_APPS like so::\n\n    INSTALLED_APPS = (\n        ...\n        'groundwork',\n    )\n\nAvailable Tags/Filters\n----------------------\nTo use the Groundwork tags in your template, include at the top::\n\n    {% load groundwork_tags %}\n\nSee templates/goundwork/examples/base.html for examples on how to get started \nwith Foundation quickly. Or, you can choose to use is as your base page to help\nyou get started. Simply put as the first line in your templates::\n\n    {% extends 'groundwork/examples/base.html' %}\n\nTo include the Foundation Javascript files (in your html <head>), use the\ngroundwork_js tag. You can specify a filename like `foundation.abide.js` or\nyou can leave it blank to include the `foundation.min.js` file::\n\n    {% groundwork_js %}\n    {% groundwork_js 'foundation.abide' %}\n\nTo include the Foundation vendor Javascript files, use the groundwork_vendor\ntag with the name of the script name::\n\n    {% groundwork_vendor 'jquery' %}\n\nTo include the Foundation StyleSheet files (in your html <head>), use the\ngroundwork_css tag::\n\n    {% groundwork_css 'normalize' %}\n    {% groundwork_css 'foundation.min' %}\n\nTo use the Foundation Icons pack use the groundwork_icon tag with the name of\nthe Icon class. You can find examples of all the included icons by going to\n/groundwork/icons after adding the Groundwork URLConf, it also accepts optional\n`size` and `classes` arguments::\n\n    {% groundwork_icon 'info' %}\n    {% groundwork_icon 'info' '5em' 'text-centered' %}\n\nFoundation alert boxes are a really nice way to inform the user of the result of\ncompleting some action, like logging in, or saving a file. Much of Django uses\nthe django.contrib.messages framework to do that, and Groundwork provides a nice\nwrapper to display them with Foundation alerts. The included example base.html\nwill automatically display messages from the messages framework for you, but you\ncan also use the groundwork_alert tag for custom alerts::\n\n    {% groundwork_alert 'this is a message!' %}\n\nSome views that display a list of models, like the generic ListView class can\nmake good use of paginators. Groundwork provides a super easy to use paginator\ntag called groundwork_paginator. Just make sure to set the `paginate_by`\nattribute on your ListView view to enable automatic pagination. The tag takes\nno arguments::\n\n    {% groundwork_paginator %}\n\nReferences\n----------\nGithub: https://github.com/dummerbd/django-groundwork\n\nPyPI: https://pypi.python.org/pypi/django-groundwork\n\nThis package was inspired by: https://github.com/amarsahinovic/django-zurb-foundation", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dummerbd/django-groundwork", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-groundwork", "package_url": "https://pypi.org/project/django-groundwork/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-groundwork/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dummerbd/django-groundwork"}, "release_url": "https://pypi.org/project/django-groundwork/0.2.5/", "requires_dist": null, "requires_python": null, "summary": "A simple Django wrapper for Zurb Foundation", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Groundwork is a small set of template tags and filters that simplifies\nworking with Zurb Foundation. Many common django components like paginators,\nmessages, and forms can be used natively with this package. These components\nget wrapped in nice pretty Foundation goodness.</p>\n<div id=\"naming-note\">\n<h2>Naming Note</h2>\n<p>This package was called Groundwork instead of Foundation to avoid collision\nwith other packages of that name (or similar). It also symbolizes the simplicity\nof the tools this package provides. Like Foundation itself, this package just\nprovides you with the groundwork needed to make sexy web apps. It is not\nintended to be an entire framework or provide programmtic equivalences to all\nthe foundation components.</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<ol>\n<li><p>Install Groundwork using pip:</p>\n<pre>pip install django-groundwork\n</pre>\n</li>\n<li><p>Add \u201cgroundwork\u201d to your INSTALLED_APPS like so:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'groundwork',\n)\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"available-tags-filters\">\n<h2>Available Tags/Filters</h2>\n<p>To use the Groundwork tags in your template, include at the top:</p>\n<pre>{% load groundwork_tags %}\n</pre>\n<p>See templates/goundwork/examples/base.html for examples on how to get started\nwith Foundation quickly. Or, you can choose to use is as your base page to help\nyou get started. Simply put as the first line in your templates:</p>\n<pre>{% extends 'groundwork/examples/base.html' %}\n</pre>\n<p>To include the Foundation Javascript files (in your html &lt;head&gt;), use the\ngroundwork_js tag. You can specify a filename like <cite>foundation.abide.js</cite> or\nyou can leave it blank to include the <cite>foundation.min.js</cite> file:</p>\n<pre>{% groundwork_js %}\n{% groundwork_js 'foundation.abide' %}\n</pre>\n<p>To include the Foundation vendor Javascript files, use the groundwork_vendor\ntag with the name of the script name:</p>\n<pre>{% groundwork_vendor 'jquery' %}\n</pre>\n<p>To include the Foundation StyleSheet files (in your html &lt;head&gt;), use the\ngroundwork_css tag:</p>\n<pre>{% groundwork_css 'normalize' %}\n{% groundwork_css 'foundation.min' %}\n</pre>\n<p>To use the Foundation Icons pack use the groundwork_icon tag with the name of\nthe Icon class. You can find examples of all the included icons by going to\n/groundwork/icons after adding the Groundwork URLConf, it also accepts optional\n<cite>size</cite> and <cite>classes</cite> arguments:</p>\n<pre>{% groundwork_icon 'info' %}\n{% groundwork_icon 'info' '5em' 'text-centered' %}\n</pre>\n<p>Foundation alert boxes are a really nice way to inform the user of the result of\ncompleting some action, like logging in, or saving a file. Much of Django uses\nthe django.contrib.messages framework to do that, and Groundwork provides a nice\nwrapper to display them with Foundation alerts. The included example base.html\nwill automatically display messages from the messages framework for you, but you\ncan also use the groundwork_alert tag for custom alerts:</p>\n<pre>{% groundwork_alert 'this is a message!' %}\n</pre>\n<p>Some views that display a list of models, like the generic ListView class can\nmake good use of paginators. Groundwork provides a super easy to use paginator\ntag called groundwork_paginator. Just make sure to set the <cite>paginate_by</cite>\nattribute on your ListView view to enable automatic pagination. The tag takes\nno arguments:</p>\n<pre>{% groundwork_paginator %}\n</pre>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<p>Github: <a href=\"https://github.com/dummerbd/django-groundwork\" rel=\"nofollow\">https://github.com/dummerbd/django-groundwork</a></p>\n<p>PyPI: <a href=\"https://pypi.python.org/pypi/django-groundwork\" rel=\"nofollow\">https://pypi.python.org/pypi/django-groundwork</a></p>\n<p>This package was inspired by: <a href=\"https://github.com/amarsahinovic/django-zurb-foundation\" rel=\"nofollow\">https://github.com/amarsahinovic/django-zurb-foundation</a></p>\n</div>\n\n          </div>"}, "last_serial": 1082991, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ddd1a1a040748f8412a5fd7376529490", "sha256": "4b7736dc0551016178cb69f0d8f6bc066fbf75e38d99dca9e45cf97e56ef8b61"}, "downloads": -1, "filename": "django-groundwork-0.1.tar.gz", "has_sig": false, "md5_digest": "ddd1a1a040748f8412a5fd7376529490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 306545, "upload_time": "2014-05-04T17:04:57", "upload_time_iso_8601": "2014-05-04T17:04:57.448220Z", "url": "https://files.pythonhosted.org/packages/39/9d/da6f8645548b9387cb01c4093a29b921d4ff3c931e845bd1f71f14a4cc1a/django-groundwork-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "488c6783e1226f49ef45d998ed58d5e9", "sha256": "3b849652201470cc87f929a3b982127e5ac4b9bddee563a5c2bc5cd69ce6cac8"}, "downloads": -1, "filename": "django-groundwork-0.2.tar.gz", "has_sig": false, "md5_digest": "488c6783e1226f49ef45d998ed58d5e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 308638, "upload_time": "2014-05-05T14:56:51", "upload_time_iso_8601": "2014-05-05T14:56:51.127878Z", "url": "https://files.pythonhosted.org/packages/f6/db/9eed7104f35051aa169be0146f83e73ebdb8c2710d3c623204c17ec6aad0/django-groundwork-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fb2d86bf02d55e38d264f788a2479d0f", "sha256": "611090ed1122e973cf589e0b2b7994b1ac394e4af4608308750b2642bb76676e"}, "downloads": -1, "filename": "django-groundwork-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fb2d86bf02d55e38d264f788a2479d0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 307607, "upload_time": "2014-05-05T15:00:27", "upload_time_iso_8601": "2014-05-05T15:00:27.296028Z", "url": "https://files.pythonhosted.org/packages/ff/d7/e7492b6d94929ca496e9d5d9d672aa26ef619ca7585b789d9608c3986452/django-groundwork-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b11ca67041c19d4ee3d0b1a9774a44b8", "sha256": "17ae8a16e91422c89db5b0f5de349bd61a62f504f05672bd5ba1bb1c5db2e65a"}, "downloads": -1, "filename": "django-groundwork-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b11ca67041c19d4ee3d0b1a9774a44b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 306733, "upload_time": "2014-05-06T14:42:43", "upload_time_iso_8601": "2014-05-06T14:42:43.920660Z", "url": "https://files.pythonhosted.org/packages/68/7c/e39010ad56ea912d8a144010cf3ddaa431f5cd25d867f5ef7ef9c281ebcd/django-groundwork-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b4bf275b079bc2bec4d82d2e41f58f65", "sha256": "1ad591d640af339a9be805e8995edcd6d8a536c2a9c8fd4f42a62603b2fc2c48"}, "downloads": -1, "filename": "django-groundwork-0.2.3.tar.gz", "has_sig": false, "md5_digest": "b4bf275b079bc2bec4d82d2e41f58f65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 306721, "upload_time": "2014-05-06T14:56:03", "upload_time_iso_8601": "2014-05-06T14:56:03.249621Z", "url": "https://files.pythonhosted.org/packages/bd/e6/eff9289753f57ef506dcee241f442df38796d7dee3002ff037d6d92edf51/django-groundwork-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "ba9c4716375c8a62d699b11a30a4ecdc", "sha256": "69d32f5a20bd256f0fd8cc91e141cd5c0a5769258896a849e89cd00ae76f67a4"}, "downloads": -1, "filename": "django-groundwork-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ba9c4716375c8a62d699b11a30a4ecdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 293864, "upload_time": "2014-05-06T15:03:22", "upload_time_iso_8601": "2014-05-06T15:03:22.580140Z", "url": "https://files.pythonhosted.org/packages/c7/05/00b3dc338ce34fcaf6fc1a250efaef71ff808ef5b6834b7c36154d2d70b6/django-groundwork-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "caec7e04cc17703880687c66308836e0", "sha256": "a277fdb750d7dd26849db3ec56e868998a7942ef666a027d0b09e70fe4350932"}, "downloads": -1, "filename": "django-groundwork-0.2.5.tar.gz", "has_sig": false, "md5_digest": "caec7e04cc17703880687c66308836e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 293890, "upload_time": "2014-05-06T18:08:01", "upload_time_iso_8601": "2014-05-06T18:08:01.670818Z", "url": "https://files.pythonhosted.org/packages/f9/a6/c85920877a3c968c97f15c16f434e09ccfcf4d6380f8487b94bdfb79da3a/django-groundwork-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "caec7e04cc17703880687c66308836e0", "sha256": "a277fdb750d7dd26849db3ec56e868998a7942ef666a027d0b09e70fe4350932"}, "downloads": -1, "filename": "django-groundwork-0.2.5.tar.gz", "has_sig": false, "md5_digest": "caec7e04cc17703880687c66308836e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 293890, "upload_time": "2014-05-06T18:08:01", "upload_time_iso_8601": "2014-05-06T18:08:01.670818Z", "url": "https://files.pythonhosted.org/packages/f9/a6/c85920877a3c968c97f15c16f434e09ccfcf4d6380f8487b94bdfb79da3a/django-groundwork-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:47 2020"}