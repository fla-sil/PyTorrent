{"info": {"author": "Anthony Scopatz", "author_email": "xdress@googlegroups.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: C", "Programming Language :: C++", "Programming Language :: Cython", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Compilers", "Topic :: Utilities"], "description": "XDress\r\n==================================\r\nXDress is an automatic wrapper generator for C/C++ written in pure Python. Currently,\r\nxdress may generate Python bindings (via Cython) for C++ classes & functions \r\nand in-memory wrappers for C++ standard library containers (sets, vectors, maps).  \r\nIn the future, other tools and bindings will be supported.  \r\n\r\nThe main enabling feature of xdress is a dynamic type system that was designed with \r\nthe purpose of API generation in mind.\r\n\r\n`Go here for the latest version of the docs! <http://xdress.org/latest>`_\r\n\r\n\r\n--------\r\nContents\r\n--------\r\n\r\n\r\n    tutorial\r\n    advtut\r\n    libclang\r\n    libref/index\r\n    rcdocs\r\n    previous/index\r\n    other/index\r\n    faq\r\n    authors\r\n\r\n============\r\nInstallation\r\n============\r\nSince xdress is pure Python code, the ``pip`` or ``easy_install`` may be used\r\nto grab and install the code::\r\n\r\n    $ pip install xdress\r\n\r\n    $ easy_install xdress\r\n\r\n\r\nThe source code repository for xdress may be found at the \r\n`GitHub project site <http://github.com/xdress/xdress>`_.\r\nYou may simply clone the development branch using git::\r\n\r\n    git clone git://github.com/xdress/xdress.git\r\n\r\nAlso, if you wish to have the optional BASH completion, please add the \r\nfollowing lines to your ``~/.bashrc`` file::\r\n\r\n    # Enable completion for xdress\r\n    eval \"$(register-python-argcomplete xdress)\"\r\n\r\n============\r\nDependencies\r\n============\r\nXDress currently has the following external dependencies,\r\n\r\n*Run Time:*\r\n\r\n    #. `Clang/LLVM <http://llvm.org/releases/>`_, optional for C/C++\r\n    #. `pycparser <https://bitbucket.org/eliben/pycparser>`_, optional for C\r\n    #. `GCC-XML <http://www.gccxml.org/HTML/Index.html>`_, optional for C++\r\n    #. `dOxygen <http://www.doxygen.org/>`_, optional for docstrings\r\n    #. `lxml <http://lxml.de/>`_, optional (but nice!)\r\n    #. `argcomplete <https://argcomplete.readthedocs.org/en/latest/>`_, optional for BASH completion\r\n\r\n*Compile Time:*\r\n\r\n    #. `Cython <http://cython.org/>`_\r\n    #. `NumPy <http://numpy.scipy.org/>`_\r\n\r\n*Test Time:*\r\n\r\n    #. `nose <https://nose.readthedocs.org/en/latest/>`_\r\n    #. `CMake <http://www.cmake.org/>`_, optional for integration tests\r\n\r\n===============\r\nExamples of Use\r\n===============\r\nTo see examples of xdress in action (and sample run control files), here are a\r\nfew places to look:\r\n\r\n* `xdress/tests/cproj <https://github.com/xdress/xdress/tree/master/tests/cproj>`_: \r\n  This is a fully functioning sample C project which uses xdress locally.\r\n* `xdress/tests/cppproj <https://github.com/xdress/xdress/tree/master/tests/cppproj>`_: \r\n  This is a fully functioning sample C++ project which uses xdress locally.\r\n* `PyNE <http://pynesim.org/>`_: This uses xdress to generate STL container wrappers.\r\n* `Bright <http://bright-dev.github.com/>`_: This uses xdress to automatically\r\n  wrap a suite of interacting C++ class.  This was the motivating use case for the\r\n  xdress project.\r\n\r\n=======\r\nTesting\r\n=======\r\nXDress has two major test types: unit tests which test library functionality and \r\nintegration tests which test the command line tool, the parsers, compilers, etc.  \r\nThe unit tests are generally fast while the integration are slower.  From the \r\n`tests/` directory you may use nose to run the tests together or individually::\r\n\r\n    # Go into the tests dir\r\n    $ cd tests\r\n\r\n    # Run just the unit tests\r\n    tests $ nosetests -a unit\r\n\r\n    # Run just the integration tests\r\n    tests $ nosetests -a integration\r\n\r\n    # Run all of the tests together\r\n    tests $ nosetests\r\n\r\nNote that the integration tests require CMake in order to build the sample\r\nprojects.\r\n\r\n==========\r\nContact Us\r\n==========\r\nIf you have questions or comments, please sign up for the the mailing list\r\nat https://groups.google.com/forum/#!forum/xdress and send an email to\r\nxdress@googlegroups.com. Alternatively, please contact the authors directly or \r\nopen an issue on GitHub.\r\n\r\n============\r\nContributing\r\n============\r\nWe highly encourage contributions to xdress!  If you would like to contribute, \r\nit is as easy as forking the repository on GitHub, making your changes, and \r\nissuing a pull request.  If you have any questions about this process don't \r\nhesitate to ask the mailing list (xdress@googlegroups.com).\r\n\r\n=============\r\nHelpful Links\r\n=============\r\n\r\n* `Documentation <http://xdress.org>`_\r\n* `Mailing list website <https://groups.google.com/forum/#!forum/xdress>`_\r\n* `Mailing list address <mailto:xdress@googlegroups.com>`_", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/scopatz/xdress/zipball/0..", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://xdress.org/", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "xdress", "package_url": "https://pypi.org/project/xdress/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xdress/", "project_urls": {"Download": "https://github.com/scopatz/xdress/zipball/0..", "Homepage": "http://xdress.org/"}, "release_url": "https://pypi.org/project/xdress/0.4/", "requires_dist": null, "requires_python": null, "summary": "Cython-based, NumPy-aware automatic wrapper generation for C / C++.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>XDress is an automatic wrapper generator for C/C++ written in pure Python. Currently,\nxdress may generate Python bindings (via Cython) for C++ classes &amp; functions\nand in-memory wrappers for C++ standard library containers (sets, vectors, maps).\nIn the future, other tools and bindings will be supported.</p>\n<p>The main enabling feature of xdress is a dynamic type system that was designed with\nthe purpose of API generation in mind.</p>\n<p><a href=\"http://xdress.org/latest\" rel=\"nofollow\">Go here for the latest version of the docs!</a></p>\n<div id=\"contents\">\n<h2>Contents</h2>\n<blockquote>\ntutorial\nadvtut\nlibclang\nlibref/index\nrcdocs\nprevious/index\nother/index\nfaq\nauthors</blockquote>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Since xdress is pure Python code, the <tt>pip</tt> or <tt>easy_install</tt> may be used\nto grab and install the code:</p>\n<pre>$ pip install xdress\n\n$ easy_install xdress\n</pre>\n<p>The source code repository for xdress may be found at the\n<a href=\"http://github.com/xdress/xdress\" rel=\"nofollow\">GitHub project site</a>.\nYou may simply clone the development branch using git:</p>\n<pre>git clone git://github.com/xdress/xdress.git\n</pre>\n<p>Also, if you wish to have the optional BASH completion, please add the\nfollowing lines to your <tt><span class=\"pre\">~/.bashrc</span></tt> file:</p>\n<pre># Enable completion for xdress\neval \"$(register-python-argcomplete xdress)\"\n</pre>\n</div>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>XDress currently has the following external dependencies,</p>\n<p><em>Run Time:</em></p>\n<blockquote>\n<ol>\n<li><a href=\"http://llvm.org/releases/\" rel=\"nofollow\">Clang/LLVM</a>, optional for C/C++</li>\n<li><a href=\"https://bitbucket.org/eliben/pycparser\" rel=\"nofollow\">pycparser</a>, optional for C</li>\n<li><a href=\"http://www.gccxml.org/HTML/Index.html\" rel=\"nofollow\">GCC-XML</a>, optional for C++</li>\n<li><a href=\"http://www.doxygen.org/\" rel=\"nofollow\">dOxygen</a>, optional for docstrings</li>\n<li><a href=\"http://lxml.de/\" rel=\"nofollow\">lxml</a>, optional (but nice!)</li>\n<li><a href=\"https://argcomplete.readthedocs.org/en/latest/\" rel=\"nofollow\">argcomplete</a>, optional for BASH completion</li>\n</ol>\n</blockquote>\n<p><em>Compile Time:</em></p>\n<blockquote>\n<ol>\n<li><a href=\"http://cython.org/\" rel=\"nofollow\">Cython</a></li>\n<li><a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">NumPy</a></li>\n</ol>\n</blockquote>\n<p><em>Test Time:</em></p>\n<blockquote>\n<ol>\n<li><a href=\"https://nose.readthedocs.org/en/latest/\" rel=\"nofollow\">nose</a></li>\n<li><a href=\"http://www.cmake.org/\" rel=\"nofollow\">CMake</a>, optional for integration tests</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"examples-of-use\">\n<h3>Examples of Use</h3>\n<p>To see examples of xdress in action (and sample run control files), here are a\nfew places to look:</p>\n<ul>\n<li><a href=\"https://github.com/xdress/xdress/tree/master/tests/cproj\" rel=\"nofollow\">xdress/tests/cproj</a>:\nThis is a fully functioning sample C project which uses xdress locally.</li>\n<li><a href=\"https://github.com/xdress/xdress/tree/master/tests/cppproj\" rel=\"nofollow\">xdress/tests/cppproj</a>:\nThis is a fully functioning sample C++ project which uses xdress locally.</li>\n<li><a href=\"http://pynesim.org/\" rel=\"nofollow\">PyNE</a>: This uses xdress to generate STL container wrappers.</li>\n<li><a href=\"http://bright-dev.github.com/\" rel=\"nofollow\">Bright</a>: This uses xdress to automatically\nwrap a suite of interacting C++ class.  This was the motivating use case for the\nxdress project.</li>\n</ul>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>XDress has two major test types: unit tests which test library functionality and\nintegration tests which test the command line tool, the parsers, compilers, etc.\nThe unit tests are generally fast while the integration are slower.  From the\n<cite>tests/</cite> directory you may use nose to run the tests together or individually:</p>\n<pre># Go into the tests dir\n$ cd tests\n\n# Run just the unit tests\ntests $ nosetests -a unit\n\n# Run just the integration tests\ntests $ nosetests -a integration\n\n# Run all of the tests together\ntests $ nosetests\n</pre>\n<p>Note that the integration tests require CMake in order to build the sample\nprojects.</p>\n</div>\n<div id=\"contact-us\">\n<h3>Contact Us</h3>\n<p>If you have questions or comments, please sign up for the the mailing list\nat <a href=\"https://groups.google.com/forum/#!forum/xdress\" rel=\"nofollow\">https://groups.google.com/forum/#!forum/xdress</a> and send an email to\n<a href=\"mailto:xdress%40googlegroups.com\">xdress<span>@</span>googlegroups<span>.</span>com</a>. Alternatively, please contact the authors directly or\nopen an issue on GitHub.</p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>We highly encourage contributions to xdress!  If you would like to contribute,\nit is as easy as forking the repository on GitHub, making your changes, and\nissuing a pull request.  If you have any questions about this process don\u2019t\nhesitate to ask the mailing list (<a href=\"mailto:xdress%40googlegroups.com\">xdress<span>@</span>googlegroups<span>.</span>com</a>).</p>\n</div>\n<div id=\"helpful-links\">\n<h3>Helpful Links</h3>\n<ul>\n<li><a href=\"http://xdress.org\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/xdress\" rel=\"nofollow\">Mailing list website</a></li>\n<li><a href=\"mailto:xdress%40googlegroups.com\">Mailing list address</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1013524, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "d25cd7820a097eff0eced5e9a42a374d", "sha256": "57405676ddb44eb5de854a3decc1ecac5b4f0fc672f16254aab89544c8efa0af"}, "downloads": -1, "filename": "xdress-0.2.tar.gz", "has_sig": false, "md5_digest": "d25cd7820a097eff0eced5e9a42a374d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72437, "upload_time": "2013-07-23T03:41:08", "upload_time_iso_8601": "2013-07-23T03:41:08.965497Z", "url": "https://files.pythonhosted.org/packages/92/04/55a838df28d8747c32d48494504376c8496367214bb7af83f76395fed52a/xdress-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "fbdc1441fb311ab293f51f8bc2f657f3", "sha256": "a9a1b450cb28b0a9b0eab0a1d3890862e4d6fbb6284de07fdbe5371f033b4f96"}, "downloads": -1, "filename": "xdress-0.3.tar.gz", "has_sig": false, "md5_digest": "fbdc1441fb311ab293f51f8bc2f657f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102256, "upload_time": "2013-08-19T17:11:28", "upload_time_iso_8601": "2013-08-19T17:11:28.327275Z", "url": "https://files.pythonhosted.org/packages/2f/23/4db2687021fe1266ab56a2758725ae79f96cdee111ad24463a1fece6c842/xdress-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4f941c39e7009bad0cd800d33806cf8d", "sha256": "ad6efc1389e002a51e453d592bbb3ad4e3f8b0f3c3e51b7b4c9d54c3ba5a4d50"}, "downloads": -1, "filename": "xdress-0.4.tar.gz", "has_sig": false, "md5_digest": "4f941c39e7009bad0cd800d33806cf8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163221, "upload_time": "2014-02-27T00:01:06", "upload_time_iso_8601": "2014-02-27T00:01:06.993234Z", "url": "https://files.pythonhosted.org/packages/e3/7a/c28916dc4b2dd2a242d0a0ad9a3f9c7aa2caa1edfba22be917cc234f991f/xdress-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f941c39e7009bad0cd800d33806cf8d", "sha256": "ad6efc1389e002a51e453d592bbb3ad4e3f8b0f3c3e51b7b4c9d54c3ba5a4d50"}, "downloads": -1, "filename": "xdress-0.4.tar.gz", "has_sig": false, "md5_digest": "4f941c39e7009bad0cd800d33806cf8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163221, "upload_time": "2014-02-27T00:01:06", "upload_time_iso_8601": "2014-02-27T00:01:06.993234Z", "url": "https://files.pythonhosted.org/packages/e3/7a/c28916dc4b2dd2a242d0a0ad9a3f9c7aa2caa1edfba22be917cc234f991f/xdress-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:50 2020"}