{"info": {"author": "Riccardo Coccioli", "author_email": "rcoccioli@wikimedia.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: System :: Networking", "Topic :: System :: Systems Administration"], "description": "Homer - Configuration manager for network devices\n-------------------------------------------------\n\nHomer allows to manage the lifecycle of the configuration for network devices, generating and deploying their\nconfiguration.\n\nThe configuration generation is based on ``YAML`` files to define variables and ``Jinja2`` templates.\nThe ``YAML`` files allow for hierarchical override of variables based on the device role, site or hostname.\nOnce generated, the configuration can be deployed to the selected devices.\n\nThe device list can either live hardcoded in the configuration files or be dynamically gathered from Netbox.\nWhen using Netbox as inventory both the Virtual Chassis endpoint and the Device endpoint are used to select\nall the devices that matches the configured whitelist of device roles and statuses.\n\nAlso when using Netbox as inventory for each device additional metadata is exposed to the templates, namely:\n\n- ``role``: device role slug\n- ``site``: device site slug\n- ``type``: device type slug\n- ``ip4``: primary IPv4 without netmask\n- ``ip6``: primary IPv6 without netmask\n- ``netbox_object``: the Netbox device object. Directly exposed data should always be preferred in templates.\n  It is exposed to not be a blocker in case some additional data is needed that is not yet exposed by\n  Homer explicitely. It could be removed in a future release.\n\nWhen using Netbox to gather dynamic configuration, it's also possible to write a custom plugin in the form of a\nPython module that implements a class called ``NetboxDeviceDataPlugin`` that inherits from\n`homer.netbox.BaseNetboxDeviceData` and is in the Python ``PATH``.\nAssuming that the plugin class implements a method named ``_get_name``, it will be accessible within the templates\nwith ``netbox.device_plugin.name``.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gerrit.wikimedia.org/r/plugins/gitiles/operations/software/homer", "keywords": "network,switch,router,configuration,deploy", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "homer", "package_url": "https://pypi.org/project/homer/", "platform": "GNU/Linux", "project_url": "https://pypi.org/project/homer/", "project_urls": {"Homepage": "https://gerrit.wikimedia.org/r/plugins/gitiles/operations/software/homer"}, "release_url": "https://pypi.org/project/homer/0.2.2/", "requires_dist": ["Jinja2 (>=2.10)", "junos-eznc (<3,>=2.2.1)", "pynetbox (>=4.0.6)", "pyyaml (>=3.11)", "bandit (>=1.1.0) ; extra == 'tests'", "flake8 (>=3.2.1) ; extra == 'tests'", "flake8-import-order (>=0.18.1) ; extra == 'tests'", "mypy (>=0.470) ; extra == 'tests'", "prospector[with_everything] (>=0.12.4) ; extra == 'tests'", "pytest-cov (>=1.8.0) ; extra == 'tests'", "pytest-xdist (>=1.15.0) ; extra == 'tests'", "pytest (>=3.3.0) ; extra == 'tests'", "sphinx-rtd-theme (>=0.1.6) ; extra == 'tests'", "sphinx-argparse (>=0.1.15) ; extra == 'tests'", "Sphinx (>=1.4.9) ; extra == 'tests'"], "requires_python": "", "summary": "Configuration manager for network devices", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Homer allows to manage the lifecycle of the configuration for network devices, generating and deploying their\nconfiguration.</p>\n<p>The configuration generation is based on <tt>YAML</tt> files to define variables and <tt>Jinja2</tt> templates.\nThe <tt>YAML</tt> files allow for hierarchical override of variables based on the device role, site or hostname.\nOnce generated, the configuration can be deployed to the selected devices.</p>\n<p>The device list can either live hardcoded in the configuration files or be dynamically gathered from Netbox.\nWhen using Netbox as inventory both the Virtual Chassis endpoint and the Device endpoint are used to select\nall the devices that matches the configured whitelist of device roles and statuses.</p>\n<p>Also when using Netbox as inventory for each device additional metadata is exposed to the templates, namely:</p>\n<ul>\n<li><tt>role</tt>: device role slug</li>\n<li><tt>site</tt>: device site slug</li>\n<li><tt>type</tt>: device type slug</li>\n<li><tt>ip4</tt>: primary IPv4 without netmask</li>\n<li><tt>ip6</tt>: primary IPv6 without netmask</li>\n<li><tt>netbox_object</tt>: the Netbox device object. Directly exposed data should always be preferred in templates.\nIt is exposed to not be a blocker in case some additional data is needed that is not yet exposed by\nHomer explicitely. It could be removed in a future release.</li>\n</ul>\n<p>When using Netbox to gather dynamic configuration, it\u2019s also possible to write a custom plugin in the form of a\nPython module that implements a class called <tt>NetboxDeviceDataPlugin</tt> that inherits from\n<cite>homer.netbox.BaseNetboxDeviceData</cite> and is in the Python <tt>PATH</tt>.\nAssuming that the plugin class implements a method named <tt>_get_name</tt>, it will be accessible within the templates\nwith <tt>netbox.device_plugin.name</tt>.</p>\n\n          </div>"}, "last_serial": 7182319, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "d571cf837aa98dd0b9110e8ff8861964", "sha256": "d317a451851fd766a000d571b65e8fc0295248c4d829bfc0723efc83ae3fa0dc"}, "downloads": -1, "filename": "homer-0.0.1a0-py3-none-any.whl", "has_sig": true, "md5_digest": "d571cf837aa98dd0b9110e8ff8861964", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17866, "upload_time": "2019-08-20T16:19:14", "upload_time_iso_8601": "2019-08-20T16:19:14.639777Z", "url": "https://files.pythonhosted.org/packages/fa/82/8fa50461eaa10cb859fe3a5a9bec551a00cf9ebe51bb7e410f85f474d78e/homer-0.0.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "800b955009785c8ba86b2143086dd44a", "sha256": "29a20fe9639c6ba97af1c03c0a77f2f5967f1f645de1c051ed7e85fe20e89ad2"}, "downloads": -1, "filename": "homer-0.0.1a0.tar.gz", "has_sig": true, "md5_digest": "800b955009785c8ba86b2143086dd44a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24763, "upload_time": "2019-08-20T16:19:16", "upload_time_iso_8601": "2019-08-20T16:19:16.764417Z", "url": "https://files.pythonhosted.org/packages/1b/43/fe160e0c425a1a25f2ce83e7b2f3af8ff911949ff250bfb381c3b91eaacb/homer-0.0.1a0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "45164e314e45da8e4071d04b02179f7b", "sha256": "fb67272ce2d416e3c963559e6d5d75af62379c48ab2d392c05ec1f09b7e734b5"}, "downloads": -1, "filename": "homer-0.2.1-py3-none-any.whl", "has_sig": true, "md5_digest": "45164e314e45da8e4071d04b02179f7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29508, "upload_time": "2020-04-30T13:47:28", "upload_time_iso_8601": "2020-04-30T13:47:28.169673Z", "url": "https://files.pythonhosted.org/packages/8c/9b/e902a2b710f63cb123c17c51217d8beba8f68cad77c32ffddde971136a92/homer-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f6d9a59bae43a182e8b4d252e80668a", "sha256": "495868023c973eaf178a5a4e6e1f5312ce2730eb3d427a9b5403559667dd7d5b"}, "downloads": -1, "filename": "homer-0.2.1.tar.gz", "has_sig": true, "md5_digest": "2f6d9a59bae43a182e8b4d252e80668a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44986, "upload_time": "2020-04-30T13:47:29", "upload_time_iso_8601": "2020-04-30T13:47:29.778503Z", "url": "https://files.pythonhosted.org/packages/a1/46/fabbd3b64625383309548b66e8fd5d8691a4ae2cac81f73b15e4725f96d6/homer-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "60a0c38ffffb00aa0a182b46cff400da", "sha256": "683911ca64dcc12dd3c192216c4de020be6bf508b258072ff7d835f93346bb28"}, "downloads": -1, "filename": "homer-0.2.2-py3-none-any.whl", "has_sig": true, "md5_digest": "60a0c38ffffb00aa0a182b46cff400da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29375, "upload_time": "2020-05-06T18:37:27", "upload_time_iso_8601": "2020-05-06T18:37:27.465423Z", "url": "https://files.pythonhosted.org/packages/8f/d9/4c8bf492b34ba283baa7ecaf718bebf1c92ecd28a4c29ed80c8ab53db62c/homer-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82df2bc3530eb406c3cdf702e236f78a", "sha256": "ed1a5b25926bd56b456b8a5159d09d73e53c6c414bd67fff8083c598bebbd875"}, "downloads": -1, "filename": "homer-0.2.2.tar.gz", "has_sig": true, "md5_digest": "82df2bc3530eb406c3cdf702e236f78a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44916, "upload_time": "2020-05-06T18:37:29", "upload_time_iso_8601": "2020-05-06T18:37:29.387958Z", "url": "https://files.pythonhosted.org/packages/79/c4/b4b8030955d37eb9bc70ce6ceea15ec225dbd24afbfc7b91b2af72f6ea77/homer-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60a0c38ffffb00aa0a182b46cff400da", "sha256": "683911ca64dcc12dd3c192216c4de020be6bf508b258072ff7d835f93346bb28"}, "downloads": -1, "filename": "homer-0.2.2-py3-none-any.whl", "has_sig": true, "md5_digest": "60a0c38ffffb00aa0a182b46cff400da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29375, "upload_time": "2020-05-06T18:37:27", "upload_time_iso_8601": "2020-05-06T18:37:27.465423Z", "url": "https://files.pythonhosted.org/packages/8f/d9/4c8bf492b34ba283baa7ecaf718bebf1c92ecd28a4c29ed80c8ab53db62c/homer-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82df2bc3530eb406c3cdf702e236f78a", "sha256": "ed1a5b25926bd56b456b8a5159d09d73e53c6c414bd67fff8083c598bebbd875"}, "downloads": -1, "filename": "homer-0.2.2.tar.gz", "has_sig": true, "md5_digest": "82df2bc3530eb406c3cdf702e236f78a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44916, "upload_time": "2020-05-06T18:37:29", "upload_time_iso_8601": "2020-05-06T18:37:29.387958Z", "url": "https://files.pythonhosted.org/packages/79/c4/b4b8030955d37eb9bc70ce6ceea15ec225dbd24afbfc7b91b2af72f6ea77/homer-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:43 2020"}