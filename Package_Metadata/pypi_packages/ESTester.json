{"info": {"author": "Tatiana Al-Chueyr Pereira Martins", "author_email": "tatiana.alchueyr@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "ESTester\n========\n\nESTester is a Python package to help testing ElasticSearch queries.\n\nIt provides a TestCase which allows you to load data to a test index\nand validate the behavior of your search queries.\n\n\nHow to install\n--------------\n\nUsing pip to install from Cheeseshop ::\n\n    pip install estester\n\nOr, install from the source ::\n\n    git clone git://github.com/tatiana/estester.git\n    python setup.py install\n\n\nHow to use\n----------\n\nESTester defines a main testing class, called ElasticSearchQueryTestCase.\n\nIn order to use it, you should subclass it and redefine one or more class attributes:\n\n- index: name of the index (default: sample.test)\n- host: ElasticSearch host (default: http://localhost:9200/)\n- fixtures: list of items to be loaded (default: [])\n- timeout: time in seconds to wait index load (default: 5s)\n- reset_index: delete index after running tests (default: True)\n\nBasic example, only re-defining fixtures: ::\n\n    from estester import ElasticSearchQueryTestCase\n\n    SAMPLE_QUERY = {\n        \"query\": {\n            \"query_string\": {\n                \"fields\": [\n                    \"name\"\n                ],\n                \"query\": \"nina\"\n            }\n        }\n    }\n\n    class QueryTestCase(ElasticSearchQueryTestCase):\n\n        fixtures = [\n            {\n                \"type\": \"dog\",\n                \"id\": \"1\",\n                \"body\": {\"name\": \"Nina Fox\"}\n            },\n            {\n                \"type\": \"dog\",\n                \"id\": \"2\",\n                \"body\": {\"name\": \"Charles M.\"}\n            }\n        ]\n\n        def test_query_by_nina_returns_one_result(self):\n            response = self.query(SAMPLE_QUERY)\n            self.assertEqual(response[\"hits\"][\"total\"], 1)\n            self.assertEqual(response[\"hits\"][\"hits\"][0][\"_id\"], u\"1\")\n            self.assertEqual(response[\"hits\"][\"hits\"][0][\"_source\"], {u\"name\": u\"Nina Fox\"})\n\n\nESTester tests\n--------------\n\nIn order to run ESTester tests, make sure you have ElasticSearch installed locally and it is up ::\n    make setup\n    make test\n\n\nCompatibility\n-------------\n\nESTester was successfully used to test queries on top of versions 19.x and 90.x of ElasticSearch.\n\nFor more information on this amazing open-source search engine, read:\nhttp://www.elasticsearch.org/\n\n\nLicense\n-------\n\nESTester is GNU GPL 2: ::\n\n    < ESTester: ElasticSearch Tester >\n    Copyright (C) 2013 - Tatiana Al-Chueyr Pereira Martins\n\n    ESTester is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, version 2 of the License.\n\n    ESTester is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with ESTester. If not, see <http://www.gnu.org/licenses/>.", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/ESTester", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tatiana/estester", "keywords": null, "license": "GNU GPLv2", "maintainer": null, "maintainer_email": null, "name": "ESTester", "package_url": "https://pypi.org/project/ESTester/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ESTester/", "project_urls": {"Download": "http://pypi.python.org/pypi/ESTester", "Homepage": "http://github.com/tatiana/estester"}, "release_url": "https://pypi.org/project/ESTester/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "Utilities for testing ElasticSearch queries", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ESTester is a Python package to help testing ElasticSearch queries.</p>\n<p>It provides a TestCase which allows you to load data to a test index\nand validate the behavior of your search queries.</p>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>Using pip to install from Cheeseshop</p>\n<pre>pip install estester\n</pre>\n<p>Or, install from the source</p>\n<pre>git clone git://github.com/tatiana/estester.git\npython setup.py install\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>ESTester defines a main testing class, called ElasticSearchQueryTestCase.</p>\n<p>In order to use it, you should subclass it and redefine one or more class attributes:</p>\n<ul>\n<li>index: name of the index (default: sample.test)</li>\n<li>host: ElasticSearch host (default: <a href=\"http://localhost:9200/\" rel=\"nofollow\">http://localhost:9200/</a>)</li>\n<li>fixtures: list of items to be loaded (default: [])</li>\n<li>timeout: time in seconds to wait index load (default: 5s)</li>\n<li>reset_index: delete index after running tests (default: True)</li>\n</ul>\n<p>Basic example, only re-defining fixtures:</p>\n<pre>from estester import ElasticSearchQueryTestCase\n\nSAMPLE_QUERY = {\n    \"query\": {\n        \"query_string\": {\n            \"fields\": [\n                \"name\"\n            ],\n            \"query\": \"nina\"\n        }\n    }\n}\n\nclass QueryTestCase(ElasticSearchQueryTestCase):\n\n    fixtures = [\n        {\n            \"type\": \"dog\",\n            \"id\": \"1\",\n            \"body\": {\"name\": \"Nina Fox\"}\n        },\n        {\n            \"type\": \"dog\",\n            \"id\": \"2\",\n            \"body\": {\"name\": \"Charles M.\"}\n        }\n    ]\n\n    def test_query_by_nina_returns_one_result(self):\n        response = self.query(SAMPLE_QUERY)\n        self.assertEqual(response[\"hits\"][\"total\"], 1)\n        self.assertEqual(response[\"hits\"][\"hits\"][0][\"_id\"], u\"1\")\n        self.assertEqual(response[\"hits\"][\"hits\"][0][\"_source\"], {u\"name\": u\"Nina Fox\"})\n</pre>\n</div>\n<div id=\"estester-tests\">\n<h2>ESTester tests</h2>\n<dl>\n<dt>In order to run ESTester tests, make sure you have ElasticSearch installed locally and it is up ::</dt>\n<dd>make setup\nmake test</dd>\n</dl>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>ESTester was successfully used to test queries on top of versions 19.x and 90.x of ElasticSearch.</p>\n<p>For more information on this amazing open-source search engine, read:\n<a href=\"http://www.elasticsearch.org/\" rel=\"nofollow\">http://www.elasticsearch.org/</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>ESTester is GNU GPL 2:</p>\n<pre>&lt; ESTester: ElasticSearch Tester &gt;\nCopyright (C) 2013 - Tatiana Al-Chueyr Pereira Martins\n\nESTester is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, version 2 of the License.\n\nESTester is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with ESTester. If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 900999, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b077c0f0f0e962bb3f81dbba75248f4e", "sha256": "3d68d9b1f6a221b1adbec1be4acf67b711edc1328263d883a5ddd6bde5515d86"}, "downloads": -1, "filename": "ESTester-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b077c0f0f0e962bb3f81dbba75248f4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4016, "upload_time": "2013-10-20T06:40:05", "upload_time_iso_8601": "2013-10-20T06:40:05.741742Z", "url": "https://files.pythonhosted.org/packages/29/eb/283d474eb9815379ad61e0eac1ea46bd6263ff022073f1e5b3ab60813c0e/ESTester-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c7c4bec129045648a8b95ec9ba911de3", "sha256": "22b1c5406273c871a3cfe4746e54c55bfb67ed1c8d7c2d5d28990066e398d63b"}, "downloads": -1, "filename": "ESTester-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c7c4bec129045648a8b95ec9ba911de3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4157, "upload_time": "2013-10-22T20:57:55", "upload_time_iso_8601": "2013-10-22T20:57:55.702851Z", "url": "https://files.pythonhosted.org/packages/e9/11/7964e0e30e0e2f318108b029c03ac6f5556f33e74b89a8efc1852c7dd652/ESTester-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7c4bec129045648a8b95ec9ba911de3", "sha256": "22b1c5406273c871a3cfe4746e54c55bfb67ed1c8d7c2d5d28990066e398d63b"}, "downloads": -1, "filename": "ESTester-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c7c4bec129045648a8b95ec9ba911de3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4157, "upload_time": "2013-10-22T20:57:55", "upload_time_iso_8601": "2013-10-22T20:57:55.702851Z", "url": "https://files.pythonhosted.org/packages/e9/11/7964e0e30e0e2f318108b029c03ac6f5556f33e74b89a8efc1852c7dd652/ESTester-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:34 2020"}