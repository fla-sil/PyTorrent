{"info": {"author": "Chunxiao Li", "author_email": "lcx366@126.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# Welcome to ATMOS\n\nThe pyatmos package is an archive of scientific routines that aims to implement the estimation of atmospheric properties for various atmosphere models. Currently, feasible atmosphere models include:\n\n1. International Standard Atmosphere(ISA) Model up to 86km\n2. NRLMSISE-00\n\n## How to install\n\npyatmos can be installed with\n\n```sh\npip install pyatmos\n```\n\n## How to use\n\n### International Standard Atmosphere\n\nCalculate the ISA at an altitude(default is geometric) of 10km.\n\n```python\n>>> from pyatmos import isa\n>>> isa(10)\n{'temperature[K]': 223.25186489868483,\n 'pressure[Pa]': 26499.756053713343,\n 'density[kg/m^3]': 0.41350863360218376}\n```\n\nCalculate the ISA at a geopotential altitude of 50km.\n\n```python\n>>> isa(50,'geopotential')\n{'temperature[K]': 270.65,\n 'pressure[Pa]': 75.94476758456234,\n 'density[kg/m^3]': 0.0009775244455727493}\n```\n\nCalculate the ISA at 90km.\n\n```python\n>>> isa(90)\nException: geometric altitude should be in [-0.611, 86.0] km\n>>> isa(90,'geopotential')    \nException: geopotential altitude should be in [-0.610, 84.852] km    \n```\n\n### NRLMSISE-00\n\nGet the space weather data\n\n```python\n>>> from pyatmos import download_sw,read_sw\n>>> # Download or update the space weather file from www.celestrak.com\n>>> swfile = download_sw() \n>>> # Read the space weather data\n>>> swdata = read_sw(swfile) \nUpdating the space weather data ... Finished\n```\n\nCalculate the temperatures, densities not including anomalous oxygen using the NRLMSISE-00 model at 70km, 25 degrees latitude, 102 degrees longitude on the date October 5, 2015 at 03:00:00 UTC.\n\n```\n>>> from pyatmos import nrlmsise00\n>>> # Set a specific time and location\n>>> t = '2015-10-05 03:00:00' # time(UTC)\n>>> lat,lon = 25,102 # latitude and longitude [degree]\n>>> alt = 70 # altitude [km]\n>>> para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata)\n>>> print(para_input,'\\n')\n>>> print(para_output)\n{'Year': 2015, 'DayOfYear': 278, 'SecondOfDay': 10800.0, 'Latitude[deg]': 25, 'Longitude[deg]': 102, 'Altitude[km]': 70, 'LocalSolarTime[hours]': 9.8, 'f107Average[10^-22 W/m^2/Hz]': 150, 'f107Daily[10^-22 W/m^2/Hz]': 150, 'ApDaily': 4, 'Ap3Hourly': array([4, 4, 4, 4, 4, 4, 4])} \n\n{'Density': {'He[1/m^3]': 9100292488300570.0, 'O[1/m^3]': 0, 'N2[1/m^3]': 1.3439413974205876e+21, 'O2[1/m^3]': 3.52551376755781e+20, 'AR[1/m^3]': 1.6044163757370681e+19, 'H[1/m^3]': 0, 'N[1/m^3]': 0, 'ANM O[1/m^3]': 0, 'RHO[kg/m^3]': 8.225931818480755e-05}, 'Temperature': {'TINF[K]': 1027.3184649, 'TG[K]': 219.9649472491653}}\n```\n\nCalculate the temperatures, densities not including anomalous oxygen using the NRLMSISE-00 model at 100km, -65 degrees latitude, -120 degrees longitude on the date July 8, 2004 at 10:30:50 UTC.\n\n```\n>>> t = '2004-07-08 10:30:50' \n>>> lat,lon,alt = -65,-120,100 \n>>> para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata)\n>>> print(para_input,'\\n')\n>>> print(para_output)\n{'Year': 2004, 'DayOfYear': 190, 'SecondOfDay': 37850.0, 'Latitude[deg]': -65, 'Longitude[deg]': -120, 'Altitude[km]': 100, 'LocalSolarTime[hours]': 2.5138888888888893, 'f107Average[10^-22 W/m^2/Hz]': 109.0, 'f107Daily[10^-22 W/m^2/Hz]': 79.3, 'ApDaily': 2, 'Ap3Hourly': array([2.   , 2.   , 2.   , 2.   , 2.   , 3.125, 4.625])} \n\n{'Density': {'He[1/m^3]': 119477307274636.89, 'O[1/m^3]': 4.1658304136233e+17, 'N2[1/m^3]': 7.521248904485598e+18, 'O2[1/m^3]': 1.7444969074975662e+18, 'AR[1/m^3]': 7.739495767665198e+16, 'H[1/m^3]': 22215754381448.5, 'N[1/m^3]': 152814261016.3964, 'ANM O[1/m^3]': 1.8278224834873257e-37, 'RHO[kg/m^3]': 4.584596293339505e-07}, 'Temperature': {'TINF[K]': 1027.3184649, 'TG[K]': 192.5868649143824}}\n```\n\nCalculate the temperatures, densities including anomalous oxygen using the NRLMSISE-00 model at 500km, 85 degrees latitude, 210 degrees longitude on the date February 15, 2010 at 12:18:37 UTC.\n\n```\n>>> t = '2010-02-15 12:18:37' \n>>> lat,lon,alt = 85,210,500 \n>>> para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata,omode='Oxygen')\n>>> print(para_input,'\\n')\n>>> print(para_output)\n{'Year': 2010, 'DayOfYear': 46, 'SecondOfDay': 44317.0, 'Latitude[deg]': 85, 'Longitude[deg]': 210, 'Altitude[km]': 500, 'LocalSolarTime[hours]': 2.310277777777779, 'f107Average[10^-22 W/m^2/Hz]': 83.4, 'f107Daily[10^-22 W/m^2/Hz]': 89.4, 'ApDaily': 14, 'Ap3Hourly': array([14.   ,  5.   ,  7.   ,  6.   , 15.   ,  5.375,  4.   ])} \n\n{'Density': {'He[1/m^3]': 2830075020953.2334, 'O[1/m^3]': 5866534735436.941, 'N2[1/m^3]': 59516979995.87239, 'O2[1/m^3]': 1558775273.2950978, 'AR[1/m^3]': 825564.7467165776, 'H[1/m^3]': 142697077779.00586, 'N[1/m^3]': 53473812381.891624, 'ANM O[1/m^3]': 4258921381.0652237, 'RHO[kg/m^3]': 1.790487924033088e-13}, 'Temperature': {'TINF[K]': 850.5598890315023, 'TG[K]': 850.5507885501303}}\n```\n\nCalculate the temperatures, densities including anomalous oxygen using the NRLMSISE-00 model at 900km, 3 degrees latitude, 5 degrees longitude on the date August 20, 2019 at 23:10:59 UTC. It uses not only Daily AP but also 3-hour AP magnetic index.\n\n```\n>>> t = '2019-08-20 23:10:59' \n>>> lat,lon,alt = 3,5,900 \n>>> para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata,omode='Oxygen',aphmode = 'Aph')\n>>> print(para_input,'\\n')\n>>> print(para_output)\n{'Year': 2019, 'DayOfYear': 232, 'SecondOfDay': 83459.0, 'Latitude[deg]': 3, 'Longitude[deg]': 5, 'Altitude[km]': 900, 'LocalSolarTime[hours]': 23.51638888888889, 'f107Average[10^-22 W/m^2/Hz]': 67.4, 'f107Daily[10^-22 W/m^2/Hz]': 67.7, 'ApDaily': 4, 'Ap3Hourly': array([4.   , 4.   , 3.   , 3.   , 5.   , 3.625, 3.5  ])} \n\n{'Density': {'He[1/m^3]': 74934329990.0412, 'O[1/m^3]': 71368139.39199762, 'N2[1/m^3]': 104.72048033793158, 'O2[1/m^3]': 0.09392848471935447, 'AR[1/m^3]': 1.3231114543012155e-07, 'H[1/m^3]': 207405192640.34592, 'N[1/m^3]': 3785341.821909535, 'ANM O[1/m^3]': 1794317839.638502, 'RHO[kg/m^3]': 8.914971667362366e-16}, 'Temperature': {'TINF[K]': 646.8157488121493, 'TG[K]': 646.8157488108872}}\n```\n\n## Change log\n- **1.1.0 \u2014 Mar 29,  2020**\n  - Added the International Standard Atmosphere(ISA) Model up to 86kms  \n\n## Next release\n\n- Complete the help documentation\n- Improve the code structure to make it easier to read\n- Add other atmospheric models, such as the **U.S. Standard Atmosphere 1976(USSA1976)** or **Committee on Extension to the Standard Atmosphere(COESA)** up to 1000km, **Unofficial Australian Standard Atmosphere 2000(UASA2000)**, and the **Jacchia-Bowman 2008 Empirical Thermospheric Density Model(JB2008)**\n\n## Reference\n\n- U.S. Standard Atmosphere, 1976, U.S. Government Printing Office, Washington, D.C. \n- [Public Domain Aeronautical Software](http://www.pdas.com/atmos.html) \n- https://gist.github.com/buzzerrookie/5b6438c603eabf13d07e\n- https://ww2.mathworks.cn/help/aerotbx/ug/atmosisa.html\n\n* [Original Fortran and C code](https://ccmc.gsfc.nasa.gov/pub/modelweb/atmospheric/msis/)\n* [MSISE-00 in Python and Matlab](https://github.com/space-physics/msise00)\n* [NRLMSISE-00 Atmosphere Model - Matlab](https://ww2.mathworks.cn/matlabcentral/fileexchange/56253-nrlmsise-00-atmosphere-model?requestedDomain=zh)\n* [NRLMSISE-00 Atmosphere Model - Aerospace Blockset](https://www.mathworks.com/help/aeroblks/nrlmsise00atmospheremodel.html?requestedDomain=)\n* [NRLMSISE-00 Atmosphere Model - CCMC](https://ccmc.gsfc.nasa.gov/modelweb/models/nrlmsise00.php)\n* [NRLMSISE-00 empirical model of the atmosphere: Statistical comparisons and scientific issues](http://onlinelibrary.wiley.com/doi/10.1029/2002JA009430/pdf)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lcx366/ATMOS", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyatmos", "package_url": "https://pypi.org/project/pyatmos/", "platform": "", "project_url": "https://pypi.org/project/pyatmos/", "project_urls": {"Homepage": "https://github.com/lcx366/ATMOS"}, "release_url": "https://pypi.org/project/pyatmos/1.1.0/", "requires_dist": ["scipy", "numpy", "pyshtools", "astropy"], "requires_python": "", "summary": "A package to estimate the atmosphere parameters", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome to ATMOS</h1>\n<p>The pyatmos package is an archive of scientific routines that aims to implement the estimation of atmospheric properties for various atmosphere models. Currently, feasible atmosphere models include:</p>\n<ol>\n<li>International Standard Atmosphere(ISA) Model up to 86km</li>\n<li>NRLMSISE-00</li>\n</ol>\n<h2>How to install</h2>\n<p>pyatmos can be installed with</p>\n<pre>pip install pyatmos\n</pre>\n<h2>How to use</h2>\n<h3>International Standard Atmosphere</h3>\n<p>Calculate the ISA at an altitude(default is geometric) of 10km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyatmos</span> <span class=\"kn\">import</span> <span class=\"n\">isa</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">isa</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'temperature[K]'</span><span class=\"p\">:</span> <span class=\"mf\">223.25186489868483</span><span class=\"p\">,</span>\n <span class=\"s1\">'pressure[Pa]'</span><span class=\"p\">:</span> <span class=\"mf\">26499.756053713343</span><span class=\"p\">,</span>\n <span class=\"s1\">'density[kg/m^3]'</span><span class=\"p\">:</span> <span class=\"mf\">0.41350863360218376</span><span class=\"p\">}</span>\n</pre>\n<p>Calculate the ISA at a geopotential altitude of 50km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">isa</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"s1\">'geopotential'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'temperature[K]'</span><span class=\"p\">:</span> <span class=\"mf\">270.65</span><span class=\"p\">,</span>\n <span class=\"s1\">'pressure[Pa]'</span><span class=\"p\">:</span> <span class=\"mf\">75.94476758456234</span><span class=\"p\">,</span>\n <span class=\"s1\">'density[kg/m^3]'</span><span class=\"p\">:</span> <span class=\"mf\">0.0009775244455727493</span><span class=\"p\">}</span>\n</pre>\n<p>Calculate the ISA at 90km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">isa</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"ne\">Exception</span><span class=\"p\">:</span> <span class=\"n\">geometric</span> <span class=\"n\">altitude</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.611</span><span class=\"p\">,</span> <span class=\"mf\">86.0</span><span class=\"p\">]</span> <span class=\"n\">km</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">isa</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"s1\">'geopotential'</span><span class=\"p\">)</span>    \n<span class=\"ne\">Exception</span><span class=\"p\">:</span> <span class=\"n\">geopotential</span> <span class=\"n\">altitude</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.610</span><span class=\"p\">,</span> <span class=\"mf\">84.852</span><span class=\"p\">]</span> <span class=\"n\">km</span>    \n</pre>\n<h3>NRLMSISE-00</h3>\n<p>Get the space weather data</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyatmos</span> <span class=\"kn\">import</span> <span class=\"n\">download_sw</span><span class=\"p\">,</span><span class=\"n\">read_sw</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Download or update the space weather file from www.celestrak.com</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">swfile</span> <span class=\"o\">=</span> <span class=\"n\">download_sw</span><span class=\"p\">()</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Read the space weather data</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">swdata</span> <span class=\"o\">=</span> <span class=\"n\">read_sw</span><span class=\"p\">(</span><span class=\"n\">swfile</span><span class=\"p\">)</span> \n<span class=\"n\">Updating</span> <span class=\"n\">the</span> <span class=\"n\">space</span> <span class=\"n\">weather</span> <span class=\"n\">data</span> <span class=\"o\">...</span> <span class=\"n\">Finished</span>\n</pre>\n<p>Calculate the temperatures, densities not including anomalous oxygen using the NRLMSISE-00 model at 70km, 25 degrees latitude, 102 degrees longitude on the date October 5, 2015 at 03:00:00 UTC.</p>\n<pre><code>&gt;&gt;&gt; from pyatmos import nrlmsise00\n&gt;&gt;&gt; # Set a specific time and location\n&gt;&gt;&gt; t = '2015-10-05 03:00:00' # time(UTC)\n&gt;&gt;&gt; lat,lon = 25,102 # latitude and longitude [degree]\n&gt;&gt;&gt; alt = 70 # altitude [km]\n&gt;&gt;&gt; para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata)\n&gt;&gt;&gt; print(para_input,'\\n')\n&gt;&gt;&gt; print(para_output)\n{'Year': 2015, 'DayOfYear': 278, 'SecondOfDay': 10800.0, 'Latitude[deg]': 25, 'Longitude[deg]': 102, 'Altitude[km]': 70, 'LocalSolarTime[hours]': 9.8, 'f107Average[10^-22 W/m^2/Hz]': 150, 'f107Daily[10^-22 W/m^2/Hz]': 150, 'ApDaily': 4, 'Ap3Hourly': array([4, 4, 4, 4, 4, 4, 4])} \n\n{'Density': {'He[1/m^3]': 9100292488300570.0, 'O[1/m^3]': 0, 'N2[1/m^3]': 1.3439413974205876e+21, 'O2[1/m^3]': 3.52551376755781e+20, 'AR[1/m^3]': 1.6044163757370681e+19, 'H[1/m^3]': 0, 'N[1/m^3]': 0, 'ANM O[1/m^3]': 0, 'RHO[kg/m^3]': 8.225931818480755e-05}, 'Temperature': {'TINF[K]': 1027.3184649, 'TG[K]': 219.9649472491653}}\n</code></pre>\n<p>Calculate the temperatures, densities not including anomalous oxygen using the NRLMSISE-00 model at 100km, -65 degrees latitude, -120 degrees longitude on the date July 8, 2004 at 10:30:50 UTC.</p>\n<pre><code>&gt;&gt;&gt; t = '2004-07-08 10:30:50' \n&gt;&gt;&gt; lat,lon,alt = -65,-120,100 \n&gt;&gt;&gt; para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata)\n&gt;&gt;&gt; print(para_input,'\\n')\n&gt;&gt;&gt; print(para_output)\n{'Year': 2004, 'DayOfYear': 190, 'SecondOfDay': 37850.0, 'Latitude[deg]': -65, 'Longitude[deg]': -120, 'Altitude[km]': 100, 'LocalSolarTime[hours]': 2.5138888888888893, 'f107Average[10^-22 W/m^2/Hz]': 109.0, 'f107Daily[10^-22 W/m^2/Hz]': 79.3, 'ApDaily': 2, 'Ap3Hourly': array([2.   , 2.   , 2.   , 2.   , 2.   , 3.125, 4.625])} \n\n{'Density': {'He[1/m^3]': 119477307274636.89, 'O[1/m^3]': 4.1658304136233e+17, 'N2[1/m^3]': 7.521248904485598e+18, 'O2[1/m^3]': 1.7444969074975662e+18, 'AR[1/m^3]': 7.739495767665198e+16, 'H[1/m^3]': 22215754381448.5, 'N[1/m^3]': 152814261016.3964, 'ANM O[1/m^3]': 1.8278224834873257e-37, 'RHO[kg/m^3]': 4.584596293339505e-07}, 'Temperature': {'TINF[K]': 1027.3184649, 'TG[K]': 192.5868649143824}}\n</code></pre>\n<p>Calculate the temperatures, densities including anomalous oxygen using the NRLMSISE-00 model at 500km, 85 degrees latitude, 210 degrees longitude on the date February 15, 2010 at 12:18:37 UTC.</p>\n<pre><code>&gt;&gt;&gt; t = '2010-02-15 12:18:37' \n&gt;&gt;&gt; lat,lon,alt = 85,210,500 \n&gt;&gt;&gt; para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata,omode='Oxygen')\n&gt;&gt;&gt; print(para_input,'\\n')\n&gt;&gt;&gt; print(para_output)\n{'Year': 2010, 'DayOfYear': 46, 'SecondOfDay': 44317.0, 'Latitude[deg]': 85, 'Longitude[deg]': 210, 'Altitude[km]': 500, 'LocalSolarTime[hours]': 2.310277777777779, 'f107Average[10^-22 W/m^2/Hz]': 83.4, 'f107Daily[10^-22 W/m^2/Hz]': 89.4, 'ApDaily': 14, 'Ap3Hourly': array([14.   ,  5.   ,  7.   ,  6.   , 15.   ,  5.375,  4.   ])} \n\n{'Density': {'He[1/m^3]': 2830075020953.2334, 'O[1/m^3]': 5866534735436.941, 'N2[1/m^3]': 59516979995.87239, 'O2[1/m^3]': 1558775273.2950978, 'AR[1/m^3]': 825564.7467165776, 'H[1/m^3]': 142697077779.00586, 'N[1/m^3]': 53473812381.891624, 'ANM O[1/m^3]': 4258921381.0652237, 'RHO[kg/m^3]': 1.790487924033088e-13}, 'Temperature': {'TINF[K]': 850.5598890315023, 'TG[K]': 850.5507885501303}}\n</code></pre>\n<p>Calculate the temperatures, densities including anomalous oxygen using the NRLMSISE-00 model at 900km, 3 degrees latitude, 5 degrees longitude on the date August 20, 2019 at 23:10:59 UTC. It uses not only Daily AP but also 3-hour AP magnetic index.</p>\n<pre><code>&gt;&gt;&gt; t = '2019-08-20 23:10:59' \n&gt;&gt;&gt; lat,lon,alt = 3,5,900 \n&gt;&gt;&gt; para_input,para_output = nrlmsise00(t,lat,lon,alt,swdata,omode='Oxygen',aphmode = 'Aph')\n&gt;&gt;&gt; print(para_input,'\\n')\n&gt;&gt;&gt; print(para_output)\n{'Year': 2019, 'DayOfYear': 232, 'SecondOfDay': 83459.0, 'Latitude[deg]': 3, 'Longitude[deg]': 5, 'Altitude[km]': 900, 'LocalSolarTime[hours]': 23.51638888888889, 'f107Average[10^-22 W/m^2/Hz]': 67.4, 'f107Daily[10^-22 W/m^2/Hz]': 67.7, 'ApDaily': 4, 'Ap3Hourly': array([4.   , 4.   , 3.   , 3.   , 5.   , 3.625, 3.5  ])} \n\n{'Density': {'He[1/m^3]': 74934329990.0412, 'O[1/m^3]': 71368139.39199762, 'N2[1/m^3]': 104.72048033793158, 'O2[1/m^3]': 0.09392848471935447, 'AR[1/m^3]': 1.3231114543012155e-07, 'H[1/m^3]': 207405192640.34592, 'N[1/m^3]': 3785341.821909535, 'ANM O[1/m^3]': 1794317839.638502, 'RHO[kg/m^3]': 8.914971667362366e-16}, 'Temperature': {'TINF[K]': 646.8157488121493, 'TG[K]': 646.8157488108872}}\n</code></pre>\n<h2>Change log</h2>\n<ul>\n<li><strong>1.1.0 \u2014 Mar 29,  2020</strong>\n<ul>\n<li>Added the International Standard Atmosphere(ISA) Model up to 86kms</li>\n</ul>\n</li>\n</ul>\n<h2>Next release</h2>\n<ul>\n<li>Complete the help documentation</li>\n<li>Improve the code structure to make it easier to read</li>\n<li>Add other atmospheric models, such as the <strong>U.S. Standard Atmosphere 1976(USSA1976)</strong> or <strong>Committee on Extension to the Standard Atmosphere(COESA)</strong> up to 1000km, <strong>Unofficial Australian Standard Atmosphere 2000(UASA2000)</strong>, and the <strong>Jacchia-Bowman 2008 Empirical Thermospheric Density Model(JB2008)</strong></li>\n</ul>\n<h2>Reference</h2>\n<ul>\n<li>U.S. Standard Atmosphere, 1976, U.S. Government Printing Office, Washington, D.C.</li>\n<li><a href=\"http://www.pdas.com/atmos.html\" rel=\"nofollow\">Public Domain Aeronautical Software</a></li>\n<li><a href=\"https://gist.github.com/buzzerrookie/5b6438c603eabf13d07e\" rel=\"nofollow\">https://gist.github.com/buzzerrookie/5b6438c603eabf13d07e</a></li>\n<li><a href=\"https://ww2.mathworks.cn/help/aerotbx/ug/atmosisa.html\" rel=\"nofollow\">https://ww2.mathworks.cn/help/aerotbx/ug/atmosisa.html</a></li>\n</ul>\n<ul>\n<li><a href=\"https://ccmc.gsfc.nasa.gov/pub/modelweb/atmospheric/msis/\" rel=\"nofollow\">Original Fortran and C code</a></li>\n<li><a href=\"https://github.com/space-physics/msise00\" rel=\"nofollow\">MSISE-00 in Python and Matlab</a></li>\n<li><a href=\"https://ww2.mathworks.cn/matlabcentral/fileexchange/56253-nrlmsise-00-atmosphere-model?requestedDomain=zh\" rel=\"nofollow\">NRLMSISE-00 Atmosphere Model - Matlab</a></li>\n<li><a href=\"https://www.mathworks.com/help/aeroblks/nrlmsise00atmospheremodel.html?requestedDomain=\" rel=\"nofollow\">NRLMSISE-00 Atmosphere Model - Aerospace Blockset</a></li>\n<li><a href=\"https://ccmc.gsfc.nasa.gov/modelweb/models/nrlmsise00.php\" rel=\"nofollow\">NRLMSISE-00 Atmosphere Model - CCMC</a></li>\n<li><a href=\"http://onlinelibrary.wiley.com/doi/10.1029/2002JA009430/pdf\" rel=\"nofollow\">NRLMSISE-00 empirical model of the atmosphere: Statistical comparisons and scientific issues</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6910018, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4145a8fe5f935cda351646a6fb0209c0", "sha256": "fdc76ed700a3fa0eabe75ee4e17bd21f473624b50353b77f8d72bdbdb82897e5"}, "downloads": -1, "filename": "pyatmos-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4145a8fe5f935cda351646a6fb0209c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18550, "upload_time": "2019-11-24T15:37:39", "upload_time_iso_8601": "2019-11-24T15:37:39.489936Z", "url": "https://files.pythonhosted.org/packages/9f/13/99b288dc5117a242e2e9f0cbb432e723600c744c7a9382d30c5c008dc737/pyatmos-1.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5a582ecbab993d44745f05acd19968ff", "sha256": "811e8bedddbab71ad8ac27f587a54950857bae81f2c8c6356960dd211be6901a"}, "downloads": -1, "filename": "pyatmos-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a582ecbab993d44745f05acd19968ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28762, "upload_time": "2019-12-16T15:38:12", "upload_time_iso_8601": "2019-12-16T15:38:12.568751Z", "url": "https://files.pythonhosted.org/packages/ba/0e/c7c7e0e9148ab20f0882c1815cf20c9d2ca269be88c86e736c775d54e887/pyatmos-1.0.1-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "74686062cdc5ab954583839f99903b9a", "sha256": "378951d4d79b48111b5697193907f1ba0956ed1b8caf493a1f37cf4848644b39"}, "downloads": -1, "filename": "pyatmos-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "74686062cdc5ab954583839f99903b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30009, "upload_time": "2020-03-30T03:25:37", "upload_time_iso_8601": "2020-03-30T03:25:37.192221Z", "url": "https://files.pythonhosted.org/packages/11/67/afede0fd4617b9b38b56bd29a114222382c31bd132540bf60c31cdb70c39/pyatmos-1.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74686062cdc5ab954583839f99903b9a", "sha256": "378951d4d79b48111b5697193907f1ba0956ed1b8caf493a1f37cf4848644b39"}, "downloads": -1, "filename": "pyatmos-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "74686062cdc5ab954583839f99903b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30009, "upload_time": "2020-03-30T03:25:37", "upload_time_iso_8601": "2020-03-30T03:25:37.192221Z", "url": "https://files.pythonhosted.org/packages/11/67/afede0fd4617b9b38b56bd29a114222382c31bd132540bf60c31cdb70c39/pyatmos-1.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:10:00 2020"}