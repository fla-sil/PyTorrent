{"info": {"author": "Cornelius Brooks", "author_email": "cbedroid1614@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Multimedia :: Sound/Audio :: Players", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\n\n<img src=\"https://raw.github.com/cbedroid/pydatpiff/master/github/Logo.png\" width=\"800\" height=\"200\">\n\n[![PyPI](https://img.shields.io/pypi/v/pydatpiff.svg?color=blue)](https://pypi.python.org/pypi/pydatpiff)  ![Build](https://api.travis-ci.org/cbedroid/pydatpiff.svg?branch=master)\n# Introduction\n\n**PyDatpiff**   -  Unofficial [Datpiff](https://www.datpiff.com) Mixtapes. Listen and download the newest release songs to the oldies.\n\n  - supports windows, mac, and linux\n  - python 3.3 - above\n\n## Dependencies\n\n**PyDatpiff requires:**\n - see requirements:  [requirements.txt](https://github.com/cbedroid/pydatpiff/blob/master/requirements.txt)\n- *python >= 3.3*\n\n# Installation\n Initial media player uses VLC to play music.\n For systems that are incompatible with  VLC,  MPV will be used as a fallback  player.\n\n&nbsp; &nbsp;  &nbsp;   &nbsp;  &nbsp;  &nbsp;  &nbsp; *click link to download*\n\n[VLC](https://www.videolan.org/vlc/index.html)- VideoLan Client media player and framework.\n\n[MPV](https://mpv.io/installation/) -  MPV Framework. ( For Android and Linux Support )\n\nFor linux systems,  &nbsp; use `apt-get` to  install required repos\n\n#### VLC\n```bash \nsudo apt-get install vlc \n```\n#### MPV\n```bash \nsudo apt-get install mpv \n```\n\n#### Install Pydatpiff Module\n```bash\npip3 install pydatpiff\n```\n\n# Quick Start\n ##  Mixtapes\n __Import PyDatpiff module and Intialize Mixtapes class__\n\nThere are two parameters that can be pass to Mixtapes Instance.\n\nOnly one parameter should be called at a time. If no parameter is pass, category will be set to   __\"hot\"__ by default. \n- **params:** `category` and `search`:\n\t - __*category*__ :\n\n        - *'hot' , 'new', 'top',celebrated', 'popular', 'exclusive', 'most download', ' most listen', 'most favorite',' highest rating'*\n\n     - __*search*__:\n\n        - artist name or artist mixtape name.\n\n\n---\n | Category                |               Description     |\n|-------------------|-------------------|\n|__\"hot\"__                      | Mixtapes that are hot for the week.\n|__\"new\"__                      | Mixtapes that are brand-new or just release.\n|__\"top\"__                      | Mixtapes that are top-ranking.\n|__\"celebrated\"__       | Top ranking celebrity mixtapes.\n|__\"popular\"__          | Popular mixtapes  available.\n|__\"exclusive\"__        | Exclusive mixtapes.\n|__\"most download\"__| Most downloaded mixtapes.\n|__\"most listen\"__      | Most listen mixtapes.\n|__\"most favorite\"__| Favorite mixtapes.\n|__\"highest rating\"__| Mixtapes with the highest rating.\n---\n# Let's Get Started...\n*Create an Instance of the Mixtapes class*\n```python\nimport pydatpiff\n>>> mix = pydatpiff.Mixtapes(category='hot')\n#OR\n#Search for an artist's mixtape\n>>> mix = pydatpiff.Mixtapes(search='Jay-Z')\n\n# To view all available mixtapes\n>>> mix.mixtapes\n```\n\n['Creative Control', 'Carter Collection (15th Anniversary)', 'Viva La Hova', 'The Best Of Jay-z                                                                                                : 25th Anniversary', 'Jay-z - If I Should Die Vol. 1 (the Best Of Jay-z)', 'Jay-Z: The Unheard C                                                                                                lassics', 'Jay-z Underground Mixes And Mashes Disk 2', 'Iceburgz Ent Dj Smokeshop Presents -big                                                                                                 Tingz-pt.1 Classic Beefs Nas,jay-z And More', 'The Best Of Jay-z Old Vs New', 'The Best Of Jay-z                                                                                                 & Biggie Smalls', 'Jay-z Live From Glastonbury ', 'Jay-z Underground Mixes And Mashes disk 1',                                                                                                 'Jay-z - Remixes',..etc ]\n\n\n# Media\n### Now Lets create a Media object to play  some songs !!\n\n**pydatpiff.Media** -  is a class that controls the PyDatpiff Media Player.\n\n _THINGS YOU CAN DO:_\n - `findSong` - find any song made by an artist\n - `play`  - plays songs from album\n - `download` - download song\n - `downloadAlbum` - download all songs from album\n\n ### Setup media player with an album\n Setting media player with an album from above.\n>`Albums`__:__ *['Creative Control', 'Carter Collection (15th Anniversary)', ..etc]*\n\n Mixtape's ablum can be reference either by `index`  or by its  `album name`.\n  Index starts at __one (1)__  not __~~zero (0)~~__ .\n\n```python\n\n#We pass in the \"mix\" object from Mixtapes class\n>>> media = pydatpiff.Media(mix)\n\n#Set the media player to an ablum.\n>>> media.setMedia('Creative Control')\n#OR\n>>> media.setMedia(1) # set media by index.  1='Creative Control'\n\n#TO VIEW ALL AVAILABLE SONGS\n>>> media.songs\n\n[ 'Jay-Z - Intro', 'Jay-Z - Advantage Carter (Prod. By Green Lantern)', \n  'Jay-Z - Welcome 2 Atlanta V103 Feat. Young Jeezy & DJ Greg Street'                                                                                         , \"Jay-Z - Jay's Back ASAP\", \n  'Jay-Z - Live In London',                                                                                               \n  'Jay-Z - Green Magic',\n  'Jay-Z - Brooklyn Sound Boy', \n  'Jay-Z - Child Abuse (Prod. By Green Lantern)',                                                                                               \n  'Jay-Z - Jay-Z Speaks On Green Lantern', \n  'Jay-Z - Flashy Life',\n  'Jay-Z - Got Me On My Shit (Prod. By Green Lantern)',\n  ..etc\n ]                         \n```\n\n--- --- \n\n&nbsp; &nbsp; &nbsp; <a><img src=\"https://github.com/cbedroid/pydatpiff/blob/master/github/gif/gif_mixtapes.gif \" align=center width=550 height=400/></a>\n\n\n## PLAY A SONG\n>Songs can be played either by referencing the song  **index** or   **name**.\n\n>Song's name __do not__ have to be an exact match.\n\n\n```python\n>>> media.play('Welcome')\n\n#OR\n\n>>> media.play(3)\n```\n---\n\n ### Play Song -  &#9836;&#9836;&#9836;  \n  Artist: Jay-Z\n\n  Song: Jay-Z - Welcome 2 Atlanta V103 Feat. Young Jeezy & DJ Greg Street\n\n  Size:  1.91 MB\n\n---\n\n&nbsp; &nbsp; &nbsp; <a><img src =\"https://github.com/cbedroid/pydatpiff/blob/master/github/gif/gif_media.gif \" align=center width=550 height=400/></a>\n\n# Find A Song \n\n<img src=\"https://raw.github.com/cbedroid/pydatpiff/master/github/EmojiThinking.png\" width=\"100\" height=\"100\"> **. . . CANT FIND A SONG ??**\n```python\n   #Search for a song\n   >>> media.findSong('green lan') # returns mixtape's index and name\n\n   #results\n   [(1, 'Creative Control'),\n    (36, 'Headliner & Legends (Jay-Z Freestyles) '), \n    (69, 'Power Us Up( Jay-z, Kanye West, Swizz Beatz)'), \n    (172, 'J3 Rocnation '),(254, \"Bakin' Session\")\n   ]\n```\n--- \n\n ## CONTROLLING MEDIA PLAYER\n Media player *can    `rewind` , `fast-forward` , `pause` ,  `stop` and control `volume`* of song.\n\n``` python\n # create an object of the player class\n >>> player = media.player\n\n # Rewind \u23ea\n>>> player.rewind() \n>>> player.rewind(10) # rewind 10 sec ago\n\n# Fast-Forward \u23e9\n>>> player.ffwd() \n>>> player.ffwd(10) # fast-forward 10 sec ahead\n\n# Pause \u23f8\n>>> player.pause\n\n# Stop \u23f9\n>>> player.stop # stop song\n\n# Volume \ud83d\udd0a\n>>> player.volume(50) # set media volume to 50\n>>> player.volumeDown(5) # set media volume down 5 steps\n>>> player.volumeUp(5) # set media volume up 5 steps\n\n```\n\n ## DOWNLOAD SONGS AND ALBUMS\n> ## Download Song\n\n  - **media.download**\n\t   - __params__: `song` , `output`, and `rename`\n\n            - *__song__* : index or name of song.\n\n\t        - *__output__* : directory to save song. *(default: current directory)\n\n            - *__rename__* : rename song. *(optional)*\n\n\n\n > ## Download Album \n\n  -\t **media.downloadAlbum**\n        - __params__: `output`\n\n            - *__output__* : directory to save song. *(default: current directory)*\n\n\n```python\n#Download a single song\n>>> media.download(3,output=\"directory_to_save_song\")\n#OR\n>>> media.download('Welcome',output=\"directory_to_save_song\")\n\n\n#Download full album\n>>> media.downloadAlbum(output='directory_to_save_album')\n```\n\n--- ---\n## LINKS\n- [Code](https://github.com/cbedroid/pydatpiff)\n- [PyPI](https://pypi.org/project/pydatpiff/)\n- [Issues & Bugs](https://github.com/cbedroid/pydatpiff/issues)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cbedroid/pydatpiff", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pydatpiff", "package_url": "https://pypi.org/project/pydatpiff/", "platform": "", "project_url": "https://pypi.org/project/pydatpiff/", "project_urls": {"Homepage": "https://github.com/cbedroid/pydatpiff"}, "release_url": "https://pypi.org/project/pydatpiff/1.2.1/", "requires_dist": ["requests"], "requires_python": "", "summary": "Unofficial Datpiff Mixtape player - Download and play the newest Hip-Hop and RnB Songs.", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc876568e17340316249c108644b4ab46e937550/68747470733a2f2f7261772e6769746875622e636f6d2f63626564726f69642f7079646174706966662f6d61737465722f6769746875622f4c6f676f2e706e67\" width=\"800\">\n<p><a href=\"https://pypi.python.org/pypi/pydatpiff\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0a608266d54833c411931922e1a672d024d66b4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079646174706966662e7376673f636f6c6f723d626c7565\"></a>  <img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53998458ecd05910c779b6aee0f9bfcf583120ca/68747470733a2f2f6170692e7472617669732d63692e6f72672f63626564726f69642f7079646174706966662e7376673f6272616e63683d6d6173746572\"></p>\n<h1>Introduction</h1>\n<p><strong>PyDatpiff</strong>   -  Unofficial <a href=\"https://www.datpiff.com\" rel=\"nofollow\">Datpiff</a> Mixtapes. Listen and download the newest release songs to the oldies.</p>\n<ul>\n<li>supports windows, mac, and linux</li>\n<li>python 3.3 - above</li>\n</ul>\n<h2>Dependencies</h2>\n<p><strong>PyDatpiff requires:</strong></p>\n<ul>\n<li>see requirements:  <a href=\"https://github.com/cbedroid/pydatpiff/blob/master/requirements.txt\" rel=\"nofollow\">requirements.txt</a></li>\n<li><em>python &gt;= 3.3</em></li>\n</ul>\n<h1>Installation</h1>\n<p>Initial media player uses VLC to play music.\nFor systems that are incompatible with  VLC,  MPV will be used as a fallback  player.</p>\n<p>\u00a0 \u00a0  \u00a0   \u00a0  \u00a0  \u00a0  \u00a0 <em>click link to download</em></p>\n<p><a href=\"https://www.videolan.org/vlc/index.html\" rel=\"nofollow\">VLC</a>- VideoLan Client media player and framework.</p>\n<p><a href=\"https://mpv.io/installation/\" rel=\"nofollow\">MPV</a> -  MPV Framework. ( For Android and Linux Support )</p>\n<p>For linux systems,  \u00a0 use <code>apt-get</code> to  install required repos</p>\n<h4>VLC</h4>\n<pre>sudo apt-get install vlc \n</pre>\n<h4>MPV</h4>\n<pre>sudo apt-get install mpv \n</pre>\n<h4>Install Pydatpiff Module</h4>\n<pre>pip3 install pydatpiff\n</pre>\n<h1>Quick Start</h1>\n<h2>Mixtapes</h2>\n<p><strong>Import PyDatpiff module and Intialize Mixtapes class</strong></p>\n<p>There are two parameters that can be pass to Mixtapes Instance.</p>\n<p>Only one parameter should be called at a time. If no parameter is pass, category will be set to   <strong>\"hot\"</strong> by default.</p>\n<ul>\n<li><strong>params:</strong> <code>category</code> and <code>search</code>:\n<ul>\n<li>\n<p><strong><em>category</em></strong> :</p>\n<ul>\n<li><em>'hot' , 'new', 'top',celebrated', 'popular', 'exclusive', 'most download', ' most listen', 'most favorite',' highest rating'</em></li>\n</ul>\n</li>\n<li>\n<p><strong><em>search</em></strong>:</p>\n<ul>\n<li>artist name or artist mixtape name.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>\"hot\"</strong></td>\n<td>Mixtapes that are hot for the week.</td>\n</tr>\n<tr>\n<td><strong>\"new\"</strong></td>\n<td>Mixtapes that are brand-new or just release.</td>\n</tr>\n<tr>\n<td><strong>\"top\"</strong></td>\n<td>Mixtapes that are top-ranking.</td>\n</tr>\n<tr>\n<td><strong>\"celebrated\"</strong></td>\n<td>Top ranking celebrity mixtapes.</td>\n</tr>\n<tr>\n<td><strong>\"popular\"</strong></td>\n<td>Popular mixtapes  available.</td>\n</tr>\n<tr>\n<td><strong>\"exclusive\"</strong></td>\n<td>Exclusive mixtapes.</td>\n</tr>\n<tr>\n<td><strong>\"most download\"</strong></td>\n<td>Most downloaded mixtapes.</td>\n</tr>\n<tr>\n<td><strong>\"most listen\"</strong></td>\n<td>Most listen mixtapes.</td>\n</tr>\n<tr>\n<td><strong>\"most favorite\"</strong></td>\n<td>Favorite mixtapes.</td>\n</tr>\n<tr>\n<td><strong>\"highest rating\"</strong></td>\n<td>Mixtapes with the highest rating.</td>\n</tr></tbody></table>\n<hr>\n<h1>Let's Get Started...</h1>\n<p><em>Create an Instance of the Mixtapes class</em></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydatpiff</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mix</span> <span class=\"o\">=</span> <span class=\"n\">pydatpiff</span><span class=\"o\">.</span><span class=\"n\">Mixtapes</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'hot'</span><span class=\"p\">)</span>\n<span class=\"c1\">#OR</span>\n<span class=\"c1\">#Search for an artist's mixtape</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mix</span> <span class=\"o\">=</span> <span class=\"n\">pydatpiff</span><span class=\"o\">.</span><span class=\"n\">Mixtapes</span><span class=\"p\">(</span><span class=\"n\">search</span><span class=\"o\">=</span><span class=\"s1\">'Jay-Z'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To view all available mixtapes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mix</span><span class=\"o\">.</span><span class=\"n\">mixtapes</span>\n</pre>\n<p>['Creative Control', 'Carter Collection (15th Anniversary)', 'Viva La Hova', 'The Best Of Jay-z                                                                                                : 25th Anniversary', 'Jay-z - If I Should Die Vol. 1 (the Best Of Jay-z)', 'Jay-Z: The Unheard C                                                                                                lassics', 'Jay-z Underground Mixes And Mashes Disk 2', 'Iceburgz Ent Dj Smokeshop Presents -big                                                                                                 Tingz-pt.1 Classic Beefs Nas,jay-z And More', 'The Best Of Jay-z Old Vs New', 'The Best Of Jay-z                                                                                                 &amp; Biggie Smalls', 'Jay-z Live From Glastonbury ', 'Jay-z Underground Mixes And Mashes disk 1',                                                                                                 'Jay-z - Remixes',..etc ]</p>\n<h1>Media</h1>\n<h3>Now Lets create a Media object to play  some songs !!</h3>\n<p><strong>pydatpiff.Media</strong> -  is a class that controls the PyDatpiff Media Player.</p>\n<p><em>THINGS YOU CAN DO:</em></p>\n<ul>\n<li><code>findSong</code> - find any song made by an artist</li>\n<li><code>play</code>  - plays songs from album</li>\n<li><code>download</code> - download song</li>\n<li><code>downloadAlbum</code> - download all songs from album</li>\n</ul>\n<h3>Setup media player with an album</h3>\n<p>Setting media player with an album from above.</p>\n<blockquote>\n<p><code>Albums</code><strong>:</strong> <em>['Creative Control', 'Carter Collection (15th Anniversary)', ..etc]</em></p>\n</blockquote>\n<p>Mixtape's ablum can be reference either by <code>index</code>  or by its  <code>album name</code>.\nIndex starts at <strong>one (1)</strong>  not <strong><del>zero (0)</del></strong> .</p>\n<pre><span class=\"c1\">#We pass in the \"mix\" object from Mixtapes class</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span> <span class=\"o\">=</span> <span class=\"n\">pydatpiff</span><span class=\"o\">.</span><span class=\"n\">Media</span><span class=\"p\">(</span><span class=\"n\">mix</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#Set the media player to an ablum.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">setMedia</span><span class=\"p\">(</span><span class=\"s1\">'Creative Control'</span><span class=\"p\">)</span>\n<span class=\"c1\">#OR</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">setMedia</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># set media by index.  1='Creative Control'</span>\n\n<span class=\"c1\">#TO VIEW ALL AVAILABLE SONGS</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">songs</span>\n\n<span class=\"p\">[</span> <span class=\"s1\">'Jay-Z - Intro'</span><span class=\"p\">,</span> <span class=\"s1\">'Jay-Z - Advantage Carter (Prod. By Green Lantern)'</span><span class=\"p\">,</span> \n  <span class=\"s1\">'Jay-Z - Welcome 2 Atlanta V103 Feat. Young Jeezy &amp; DJ Greg Street'</span>                                                                                         <span class=\"p\">,</span> <span class=\"s2\">\"Jay-Z - Jay's Back ASAP\"</span><span class=\"p\">,</span> \n  <span class=\"s1\">'Jay-Z - Live In London'</span><span class=\"p\">,</span>                                                                                               \n  <span class=\"s1\">'Jay-Z - Green Magic'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'Jay-Z - Brooklyn Sound Boy'</span><span class=\"p\">,</span> \n  <span class=\"s1\">'Jay-Z - Child Abuse (Prod. By Green Lantern)'</span><span class=\"p\">,</span>                                                                                               \n  <span class=\"s1\">'Jay-Z - Jay-Z Speaks On Green Lantern'</span><span class=\"p\">,</span> \n  <span class=\"s1\">'Jay-Z - Flashy Life'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'Jay-Z - Got Me On My Shit (Prod. By Green Lantern)'</span><span class=\"p\">,</span>\n  <span class=\"o\">..</span><span class=\"n\">etc</span>\n <span class=\"p\">]</span>                         \n</pre>\n<hr>\n<p>\u00a0 \u00a0 \u00a0 <a><img align=\"center\" height=\"400/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b23ef62e2b9b22b9fb8fcafb40aac09fbc2a510/68747470733a2f2f6769746875622e636f6d2f63626564726f69642f7079646174706966662f626c6f622f6d61737465722f6769746875622f6769662f6769665f6d697874617065732e67696620\" width=\"550\"></a></p>\n<h2>PLAY A SONG</h2>\n<blockquote>\n<p>Songs can be played either by referencing the song  <strong>index</strong> or   <strong>name</strong>.</p>\n</blockquote>\n<blockquote>\n<p>Song's name <strong>do not</strong> have to be an exact match.</p>\n</blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">(</span><span class=\"s1\">'Welcome'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#OR</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h3>Play Song -  \u266c\u266c\u266c</h3>\n<p>Artist: Jay-Z</p>\n<p>Song: Jay-Z - Welcome 2 Atlanta V103 Feat. Young Jeezy &amp; DJ Greg Street</p>\n<p>Size:  1.91 MB</p>\n<hr>\n<p>\u00a0 \u00a0 \u00a0 <a><img align=\"center\" height=\"400/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b74c2f73ff82251e9aa5c6ab7ce219695dfe3a18/68747470733a2f2f6769746875622e636f6d2f63626564726f69642f7079646174706966662f626c6f622f6d61737465722f6769746875622f6769662f6769665f6d656469612e67696620\" width=\"550\"></a></p>\n<h1>Find A Song</h1>\n<p><img height=\"100\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9370b6d7ddde129a7fbe2bd0f93d68b8c95c53a9/68747470733a2f2f7261772e6769746875622e636f6d2f63626564726f69642f7079646174706966662f6d61737465722f6769746875622f456d6f6a695468696e6b696e672e706e67\" width=\"100\"> <strong>. . . CANT FIND A SONG ??</strong></p>\n<pre>   <span class=\"c1\">#Search for a song</span>\n   <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">findSong</span><span class=\"p\">(</span><span class=\"s1\">'green lan'</span><span class=\"p\">)</span> <span class=\"c1\"># returns mixtape's index and name</span>\n\n   <span class=\"c1\">#results</span>\n   <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'Creative Control'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"s1\">'Headliner &amp; Legends (Jay-Z Freestyles) '</span><span class=\"p\">),</span> \n    <span class=\"p\">(</span><span class=\"mi\">69</span><span class=\"p\">,</span> <span class=\"s1\">'Power Us Up( Jay-z, Kanye West, Swizz Beatz)'</span><span class=\"p\">),</span> \n    <span class=\"p\">(</span><span class=\"mi\">172</span><span class=\"p\">,</span> <span class=\"s1\">'J3 Rocnation '</span><span class=\"p\">),(</span><span class=\"mi\">254</span><span class=\"p\">,</span> <span class=\"s2\">\"Bakin' Session\"</span><span class=\"p\">)</span>\n   <span class=\"p\">]</span>\n</pre>\n<hr>\n<h2>CONTROLLING MEDIA PLAYER</h2>\n<p>Media player <em>can    <code>rewind</code> , <code>fast-forward</code> , <code>pause</code> ,  <code>stop</code> and control <code>volume</code></em> of song.</p>\n<pre> <span class=\"c1\"># create an object of the player class</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span> <span class=\"o\">=</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">player</span>\n\n <span class=\"c1\"># Rewind \u23ea</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">rewind</span><span class=\"p\">()</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">rewind</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"c1\"># rewind 10 sec ago</span>\n\n<span class=\"c1\"># Fast-Forward \u23e9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">ffwd</span><span class=\"p\">()</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">ffwd</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"c1\"># fast-forward 10 sec ahead</span>\n\n<span class=\"c1\"># Pause \u23f8</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">pause</span>\n\n<span class=\"c1\"># Stop \u23f9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">stop</span> <span class=\"c1\"># stop song</span>\n\n<span class=\"c1\"># Volume \ud83d\udd0a</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">volume</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"c1\"># set media volume to 50</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">volumeDown</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># set media volume down 5 steps</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">volumeUp</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># set media volume up 5 steps</span>\n</pre>\n<h2>DOWNLOAD SONGS AND ALBUMS</h2>\n<blockquote>\n<h2>Download Song</h2>\n</blockquote>\n<ul>\n<li><strong>media.download</strong>\n<ul>\n<li>\n<p><strong>params</strong>: <code>song</code> , <code>output</code>, and <code>rename</code></p>\n<ul>\n<li>\n<p><em><strong>song</strong></em> : index or name of song.</p>\n</li>\n<li>\n<p><em><strong>output</strong></em> : directory to save song. *(default: current directory)</p>\n</li>\n<li>\n<p><em><strong>rename</strong></em> : rename song. <em>(optional)</em></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<h2>Download Album</h2>\n</blockquote>\n<ul>\n<li><strong>media.downloadAlbum</strong>\n<ul>\n<li>\n<p><strong>params</strong>: <code>output</code></p>\n<ul>\n<li><em><strong>output</strong></em> : directory to save song. <em>(default: current directory)</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"c1\">#Download a single song</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s2\">\"directory_to_save_song\"</span><span class=\"p\">)</span>\n<span class=\"c1\">#OR</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'Welcome'</span><span class=\"p\">,</span><span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s2\">\"directory_to_save_song\"</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">#Download full album</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">media</span><span class=\"o\">.</span><span class=\"n\">downloadAlbum</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s1\">'directory_to_save_album'</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h2>LINKS</h2>\n<ul>\n<li><a href=\"https://github.com/cbedroid/pydatpiff\" rel=\"nofollow\">Code</a></li>\n<li><a href=\"https://pypi.org/project/pydatpiff/\" rel=\"nofollow\">PyPI</a></li>\n<li><a href=\"https://github.com/cbedroid/pydatpiff/issues\" rel=\"nofollow\">Issues &amp; Bugs</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6871664, "releases": {"0.1.8": [{"comment_text": "", "digests": {"md5": "c6c9ff849728d5aa8adf6dd407435ca6", "sha256": "c8b6574dbf874237d018b4d5d14b4ac553b645dd02be3b24e2855501ba15c57a"}, "downloads": -1, "filename": "pydatpiff-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "c6c9ff849728d5aa8adf6dd407435ca6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18973, "upload_time": "2019-11-19T22:00:17", "upload_time_iso_8601": "2019-11-19T22:00:17.389943Z", "url": "https://files.pythonhosted.org/packages/5d/55/6c3c1b7230c34504fff7aca6952f4d674f5f144559ad534fb353b0c5f1a7/pydatpiff-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73c6f848020ea8cd44acca8af8e36d74", "sha256": "e2920d8195b298781c944f5f9d72da5d2178a812df8ba9d9697e87e94a927c6c"}, "downloads": -1, "filename": "pydatpiff-0.1.8.tar.gz", "has_sig": false, "md5_digest": "73c6f848020ea8cd44acca8af8e36d74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18957, "upload_time": "2019-11-19T22:00:19", "upload_time_iso_8601": "2019-11-19T22:00:19.583214Z", "url": "https://files.pythonhosted.org/packages/4b/df/cb705845dd8391ad3408fb89a323d4950321533f116c94d7ee5773f27488/pydatpiff-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "430ba599fed3ae94f1b871972d15594b", "sha256": "297bec30d9e3bf067aaccd14702ee8b6c17cda82c2a21188fb10325404e4471f"}, "downloads": -1, "filename": "pydatpiff-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "430ba599fed3ae94f1b871972d15594b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19194, "upload_time": "2019-11-20T00:50:04", "upload_time_iso_8601": "2019-11-20T00:50:04.818248Z", "url": "https://files.pythonhosted.org/packages/7e/71/222572c4a785e78840a1778b610592f377ef8252a8b2b0142cc02e40624d/pydatpiff-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9dd8f81000fa7161b806959a3bd73ce", "sha256": "41bd5fcc0bc1a3064afbfaf40b2954e437821ab2e35030ed5ba74954d61d7fba"}, "downloads": -1, "filename": "pydatpiff-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d9dd8f81000fa7161b806959a3bd73ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19479, "upload_time": "2019-11-20T00:50:06", "upload_time_iso_8601": "2019-11-20T00:50:06.586436Z", "url": "https://files.pythonhosted.org/packages/74/53/4e368be458431a25ab3367280905205911cb7474f3c265d8ce8561dc2aad/pydatpiff-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e65b601c21e6d5aab6ef0a2b12fd391d", "sha256": "12bde6c48c4f1b237fa0619914ad57024f84b73077853ff41cad33676bb915c1"}, "downloads": -1, "filename": "pydatpiff-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e65b601c21e6d5aab6ef0a2b12fd391d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19224, "upload_time": "2019-11-20T01:16:12", "upload_time_iso_8601": "2019-11-20T01:16:12.401723Z", "url": "https://files.pythonhosted.org/packages/3f/8c/4811a8811249ad1ccc264fdd8612ba83502d45d76a3036a24b86cdf922b2/pydatpiff-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6077154b4422841c5543b5ab026d231", "sha256": "4152e1e837148068bb0f2204d80ea9548bf612d4b2f8b42b1a9d169843602474"}, "downloads": -1, "filename": "pydatpiff-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c6077154b4422841c5543b5ab026d231", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19486, "upload_time": "2019-11-20T01:16:14", "upload_time_iso_8601": "2019-11-20T01:16:14.118353Z", "url": "https://files.pythonhosted.org/packages/70/95/dbc7f88cef9600a3c5c4d615beecd8bf96cf4be1b41756a8cf696cfce0f2/pydatpiff-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "6f2fb202ec31ea8dd94f786aff0612ab", "sha256": "37d5947a4bc3ab54596fde4a6e43ddd3874e09adc6fdf6d473021b17a724c05b"}, "downloads": -1, "filename": "pydatpiff-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f2fb202ec31ea8dd94f786aff0612ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21049, "upload_time": "2019-12-10T21:19:25", "upload_time_iso_8601": "2019-12-10T21:19:25.113260Z", "url": "https://files.pythonhosted.org/packages/d7/4a/0a0ee02b2e9a910d7c73716b39213bb5e74f0d45ba43c44428b367c245fb/pydatpiff-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88fe3146808e3e9270da7cad858c7748", "sha256": "4a3038dab3faf042aaede191305741862523b57be0fb35606b550ab4c60dff93"}, "downloads": -1, "filename": "pydatpiff-0.2.2.tar.gz", "has_sig": false, "md5_digest": "88fe3146808e3e9270da7cad858c7748", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20790, "upload_time": "2019-12-10T21:19:26", "upload_time_iso_8601": "2019-12-10T21:19:26.344658Z", "url": "https://files.pythonhosted.org/packages/29/e4/7446fc949f7de652cad24b02d04c6e5a33da1bae5e9337d78fdc58ca3940/pydatpiff-0.2.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "64b9915ae55b6d2c1a6b6e418c86e9e5", "sha256": "ebe83f1cf483b401bf32699e7b6a2fb3b2613b72fb4b7ffea05dc5300638cf51"}, "downloads": -1, "filename": "pydatpiff-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "64b9915ae55b6d2c1a6b6e418c86e9e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21177, "upload_time": "2019-12-11T03:41:25", "upload_time_iso_8601": "2019-12-11T03:41:25.018347Z", "url": "https://files.pythonhosted.org/packages/a2/03/ec0ebcbba77dad4cb9d3197708fb8549cf819c9acfd7ea6af26ac0b4f5ed/pydatpiff-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d34894fc93c4dae436cd7056add6539c", "sha256": "abf2162a115248e4f1ac3ef027bdb411c9c761efcaed39cfd66648509ed069d6"}, "downloads": -1, "filename": "pydatpiff-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d34894fc93c4dae436cd7056add6539c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20897, "upload_time": "2019-12-11T03:41:26", "upload_time_iso_8601": "2019-12-11T03:41:26.766869Z", "url": "https://files.pythonhosted.org/packages/11/ca/a3b2283a748498aecba089c06424f0817f8bb91858083b250a5544e3d2ee/pydatpiff-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "e9f85d23022a1aff780638d7eed4c743", "sha256": "e868542aa2d091bf9ff34440414c81a7b5a6d3a379ee0af63bd7c5ef1fc40eb1"}, "downloads": -1, "filename": "pydatpiff-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "e9f85d23022a1aff780638d7eed4c743", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21291, "upload_time": "2019-12-11T05:08:31", "upload_time_iso_8601": "2019-12-11T05:08:31.144356Z", "url": "https://files.pythonhosted.org/packages/43/fd/e4363f9b77c5038d3a9b5832ff2e4478ba2e020488e0cd6212d19cb3711b/pydatpiff-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "253dde1f3024e21235a8351f6ee66260", "sha256": "418ae9c812346745ec3d5989ed1c5efa15dcbe65551f659a5672d9d7946e6ca9"}, "downloads": -1, "filename": "pydatpiff-0.2.5.tar.gz", "has_sig": false, "md5_digest": "253dde1f3024e21235a8351f6ee66260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20997, "upload_time": "2019-12-11T05:08:32", "upload_time_iso_8601": "2019-12-11T05:08:32.685709Z", "url": "https://files.pythonhosted.org/packages/02/2a/823dd39703624c151cf01c70aaf4b6499c916041bcb38379257310dcac77/pydatpiff-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "e8c1f4f520907689672d30986e19f34d", "sha256": "701c3ee7ed96bde8d9342e2bf85d04676d6670dc3d05aaeabb2727efddf6a414"}, "downloads": -1, "filename": "pydatpiff-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e8c1f4f520907689672d30986e19f34d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21344, "upload_time": "2019-12-11T17:06:33", "upload_time_iso_8601": "2019-12-11T17:06:33.454532Z", "url": "https://files.pythonhosted.org/packages/f5/ae/afd57e7c734722b4bdcb9b54bf5265c3d1039a8979ca598d20a9b76dd99a/pydatpiff-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5add46785c7ea53639431c57e7c7e1b3", "sha256": "70c2aa5d692851580a51d9b3acb973e6df20de6cb69100d30cbcc55ce613a6c8"}, "downloads": -1, "filename": "pydatpiff-0.2.6.tar.gz", "has_sig": false, "md5_digest": "5add46785c7ea53639431c57e7c7e1b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21023, "upload_time": "2019-12-11T17:06:34", "upload_time_iso_8601": "2019-12-11T17:06:34.920304Z", "url": "https://files.pythonhosted.org/packages/b9/2d/c395b82e47eade2f0272586aeab290d79a9b44d7b600d90251749777f74f/pydatpiff-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "71e8c1450cb3effecc25841ed2738931", "sha256": "41c7f8a3309441cc65627836035b0b43f40ce6fafd3012e61e9fddaf2a178ab6"}, "downloads": -1, "filename": "pydatpiff-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "71e8c1450cb3effecc25841ed2738931", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24326, "upload_time": "2019-12-27T11:46:55", "upload_time_iso_8601": "2019-12-27T11:46:55.054498Z", "url": "https://files.pythonhosted.org/packages/11/55/59f6c365307b20c079cce63a97321eb22b84acc5b4fa67c55ceadc8d8551/pydatpiff-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd9d1fdf370e5d0b982d64a9f2deee42", "sha256": "d25a4d687d25e9cdae4f943da8f500d2a33b6cc70c7069a95b77914c7c532ff8"}, "downloads": -1, "filename": "pydatpiff-0.2.7.tar.gz", "has_sig": false, "md5_digest": "fd9d1fdf370e5d0b982d64a9f2deee42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19860, "upload_time": "2019-12-27T11:46:57", "upload_time_iso_8601": "2019-12-27T11:46:57.109022Z", "url": "https://files.pythonhosted.org/packages/45/a2/d95fe8a6b962701e2a583fb498834e2dcccf7eda70474f14863a438d0bea/pydatpiff-0.2.7.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "5993f2105a41315f2910c7190e47737e", "sha256": "71d98a0313f7be0da8e4970ff1ca4c68d34546ade8a95300c1cf69e0614acbe0"}, "downloads": -1, "filename": "pydatpiff-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "5993f2105a41315f2910c7190e47737e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25125, "upload_time": "2020-02-29T19:57:02", "upload_time_iso_8601": "2020-02-29T19:57:02.829989Z", "url": "https://files.pythonhosted.org/packages/46/61/b9e4d001c47fff175839232ea5884095a695cceccfc82c51c337a49f06c5/pydatpiff-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "651a3d02cc3e82519dfd0265af197767", "sha256": "95391ceeb36d856ef558ca890d9d8266beaa2fbe2528f81e080bc61917e67418"}, "downloads": -1, "filename": "pydatpiff-0.2.9.tar.gz", "has_sig": false, "md5_digest": "651a3d02cc3e82519dfd0265af197767", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24437, "upload_time": "2020-02-29T19:57:04", "upload_time_iso_8601": "2020-02-29T19:57:04.611104Z", "url": "https://files.pythonhosted.org/packages/83/bb/1c7ef00587ba5a69f6c933a39775e29301ec39348be2c6a6c39caf282059/pydatpiff-0.2.9.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "d4a9f663183e889a7a25e2aa44a037c6", "sha256": "f3d2d48aba52d240de592d23d30140c9248b94f58ead66b557df82dd0c7641db"}, "downloads": -1, "filename": "pydatpiff-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d4a9f663183e889a7a25e2aa44a037c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40146, "upload_time": "2020-03-20T23:50:38", "upload_time_iso_8601": "2020-03-20T23:50:38.574926Z", "url": "https://files.pythonhosted.org/packages/b1/ea/fb4392b60b62112ca48205dade652fc633d701bab20b90a727fb195fe778/pydatpiff-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4031c69e8ac0c08b5296b7aa30535f08", "sha256": "655b95a3e8975749691a38faf20bdaa04f2e6a7e631f98ef89928d90c60e6cf0"}, "downloads": -1, "filename": "pydatpiff-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4031c69e8ac0c08b5296b7aa30535f08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35658, "upload_time": "2020-03-20T23:50:40", "upload_time_iso_8601": "2020-03-20T23:50:40.085076Z", "url": "https://files.pythonhosted.org/packages/a8/e3/1c679fd2cd5ac55204d2c8eafb0174800593f7bb1bd768c8b0d52e24dbe9/pydatpiff-1.1.1.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "965e79d2837fe4fc1e5f3454ce648fd4", "sha256": "6961bfa1988e7bf9f9c031d966bab5b2d23342b154d3486d2273747c48e8783b"}, "downloads": -1, "filename": "pydatpiff-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "965e79d2837fe4fc1e5f3454ce648fd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40744, "upload_time": "2020-03-24T08:52:11", "upload_time_iso_8601": "2020-03-24T08:52:11.277628Z", "url": "https://files.pythonhosted.org/packages/b3/e1/55cf053dac6a90c8f686724d25c989a9e56f263b113268a104992ddf98ea/pydatpiff-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99ed021d6f458a686889f825a586b3bb", "sha256": "28efd4d5f35dd5c985ede7697a9468906d8bcd0683b14abe44c1c44a3c4415a0"}, "downloads": -1, "filename": "pydatpiff-1.2.1.tar.gz", "has_sig": false, "md5_digest": "99ed021d6f458a686889f825a586b3bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36397, "upload_time": "2020-03-24T08:52:13", "upload_time_iso_8601": "2020-03-24T08:52:13.085510Z", "url": "https://files.pythonhosted.org/packages/53/fa/5042f5f8eb6929ee387f18a970f44bd42a903bb894eb1a572c7bba908199/pydatpiff-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "965e79d2837fe4fc1e5f3454ce648fd4", "sha256": "6961bfa1988e7bf9f9c031d966bab5b2d23342b154d3486d2273747c48e8783b"}, "downloads": -1, "filename": "pydatpiff-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "965e79d2837fe4fc1e5f3454ce648fd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40744, "upload_time": "2020-03-24T08:52:11", "upload_time_iso_8601": "2020-03-24T08:52:11.277628Z", "url": "https://files.pythonhosted.org/packages/b3/e1/55cf053dac6a90c8f686724d25c989a9e56f263b113268a104992ddf98ea/pydatpiff-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99ed021d6f458a686889f825a586b3bb", "sha256": "28efd4d5f35dd5c985ede7697a9468906d8bcd0683b14abe44c1c44a3c4415a0"}, "downloads": -1, "filename": "pydatpiff-1.2.1.tar.gz", "has_sig": false, "md5_digest": "99ed021d6f458a686889f825a586b3bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36397, "upload_time": "2020-03-24T08:52:13", "upload_time_iso_8601": "2020-03-24T08:52:13.085510Z", "url": "https://files.pythonhosted.org/packages/53/fa/5042f5f8eb6929ee387f18a970f44bd42a903bb894eb1a572c7bba908199/pydatpiff-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:19 2020"}