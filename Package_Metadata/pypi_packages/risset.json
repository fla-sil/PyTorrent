{"info": {"author": "Eduardo Moguillansky", "author_email": "eduardo.moguillansky@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# risset: a package manager for csound\n\nThis is the repository of risset, a package manager for csound external\nplugins and user-defined-opcodes. All plugins are kept in a separate\nrepository at [risset-data](https://github.com/csound-plugins/risset-data)\n\n# Installation\n\n`risset` depends only on `git` and `python3` (>= 3.6) being installed. For linux this is \nalready the case, for macos and windows both need to be installed.\n\n```\npip3 install risset\n```\n\nor via git:\n\n```bash\ngit clone https://github.com/csound-plugins/risset\ncd risset\npython3 setup.py install\n```\n\nThese commands will install the script \"risset\" into your path.\n\n# Quick start\n\n```bash\n# list all defined packages\n$ risset list\n\n* else  @ 0.2.0        | Miscellaneous plugins\n* poly  @ 0.2.0        | Run multiple copies of an opcode in parallel/series\n* klib  @ 0.2.0        | hashtable / pool / string cache plugins [installed 0.2.0]\n* jsfx  @ 0.2.0        | Jesusonics effects in csound\n* mverb @ 1.3.7        | Artificial reverb based on a 2D waveguide mesh\n\n# Install some packages\n\n$ risset install else jsfx\n\n# Show information about a specific package\n\n$ risset show poly\n\nPlugin     : poly\nInstalled  : not installed\nAbstract   : Run multiple copies of an opcode in parallel/series\nMinimal csound version : 6.14\nAuthor     : Eduardo Moguillansky\nPlatforms  :\n    * linux: Ubuntu 16.04\n    * macos: 10.14.0\n    * windows: Windows 10\nOpcodes    :\n             poly, polyseq, poly0\n\n# Show documentation of a given opcode in the default browser\n\n$ risset doc poly\n\n\n# Remove a plugin\n\n$ risset remove poly\n\n\n# Check for plugin updates\n\n$ risset update\n\n```\n\n## Risset commands\n\n#### list\n\nList all available plugins for your platform\n\n    $ risset list\n\n#### show\n\nShow information about a plugin\n\n    $ risset show <plugin>\n\n\n#### install\n\nInstall one or multiple plugins\n\n    $ risset install <plugin> [<plugin2>, ...]\n\nInstall a given plugin for the current platform. Plugins are installed into\nthe system folder where all other builtin plugins are installed (this requires administrator rights in some platforms). \nIf the `--user` flag is given, plugins are installed into the user path:\n\n* linux: `$HOME/.local/share/csound6/plugins64`\n* macos: `$HOME/Library/Application Support/csound6/plugins64`\n* windows: `C:\\Users\\<username>\\AppData\\Local\\csound6\\plugins64`\n\nIn order for the `--user` option to be available the user should have modified its `OPCODE6DIR64`\nenvironment variable to include both the system plugin path and this path. If you attempt to install \na plugin with the `--user` flag and your system is not correctly setup, `risset` will fail and inform \nyou how to modify your `OPCODE6DIR64` variable to set it up correctly. \n\n\n#### remove\n\nRemove an installed plugin\n\n    $ risset remove <plugin>\n    \n-------\n\n# Upgrading risset \n\nIf installed via `pip`, do:\n\n    pip3 install risset -U\n\nIf installed via `git`, go to the repository and do:\n\n    git pull\n    python3 setup.py install\n\n\n-----\n\n# Contributing\n\nIn order to add/modify a plugin, clone [risset-data](https://github.com/csound-plugins/risset-data)\n\nAt the root of the repository there is an index file `plugins.json`, listing all available\nplugins. Each entry in the index has the form\n\n```json\n{\n    \"plugins\": {\n        \"myplugin@1.0.0\": \"plugins/<collection>/<version>/manifests/myplugin.json\",\n        \"...\" : \"...\"\n    }\n}\n```\n\nThe path to the manifest is relative to the plugins.json file inside the git repository.\n\n## Manifest\n\nEach plugin has an accompanying manifest in the .json format. The name of this file\nshould correspond to the name of the plugin: \"myplugin.json\"\n\n#### Example of a manifest for a plugin\n\n```json\n{\n    \"name\": \"name_of_the_plugin\",\n    \"libname\": \"name_of_the_shared_library\",\n    \"version\": \"major.minor.patch\",\n    \"short_description\": \"a short description\",\n    \"long_description\": \"a long description\",\n    \"csound_version\": \"minimal_csound_version\",\n    \"binaries\": {\n        \"linux\": {\n            \"url\": \"path_or_url_of_binary\",\n            \"build_platform\": \"major.minor.patch\",\n            \"extra_binaries\": [\"url1\", \"url2\", \"...\"]\n        },\n        \"macos\": {\n            \"url\": \"...\",\n            \"build_platform\": \"...\"\n        },\n        \"windows\": \"...\"\n    },\n    \"manual\": \"manual_zip_download_url\",\n    \"opcodes\": [\"foo\", \"bar\", \"baz\"],\n    \"author\": \"Plugin Author\",\n    \"email\": \"author@email.org\",\n    \"repository\": \"https://url/to/were/the/source/is/developed\"\n}\n```\n\n#### Explanation of each term\n\nIn general, each field holding a url can be either a link or a path relative to\nthe manifest itself.\n\n* `name`: name of the plugin. For example, \"chaoticoscils\". This name must be unique\n* `libname`: the name of the shared library, without extension (example: `libchaoticoscils`).\n    This is used to check if the plugin is installed.\n* `version`: a version string indicating the version of these binaries. The version\n    should have the form \"MAYOR.MINOR.PATCH\" or \"MAJOR.MINOR\", where each term is\n    an integer\n* `short_description`: \"A series of chaotic oscillators / noise generators\"\n* `long_description` (optional): \"A longer description of what these opcodes do\"\n* `csound_version`: The minimal version of csound needed to run these opcodes.\n    Example \"6.14.0\" (a string)\n* `binaries`: A dictionary with platforms as keys. Possible platforms: \"linux\", \"macos\", \"windows\".\n    The value for each entry should be itself a dictionary of the form:\n    * `url`: the path to the shared binary itself (relative to the manifest), or\n    a downloadable url pointing to the shared library.\n    * `extra_binaries`: an **optional** field holding an array of other binaries needed\n    * `build_platform`: a string identifying the platform used to build the binary\n* `manual`: A path/url to a .zip file holding one .md file for each opcode\n* `opcodes`: A list of all opcodes included in this plugin (for documentation purposes)\n* `author`: The name of the author / mainteiner\n* `email`: email of the author / mainteiner\n\n### Platform support\n\nIt is desirable, but not a requirement, that all opcodes support the three major desktop\nplatforms: linux, macos and windows. Support for a given platform is indicated by the availability of\na binary for the given platform in the manifest.json file.\n\n\n## TODO\n\n* subcommand `doc`: show documentation about an opcode inside a plugin", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/csound-plugins/risset", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "risset", "package_url": "https://pypi.org/project/risset/", "platform": "", "project_url": "https://pypi.org/project/risset/", "project_urls": {"Homepage": "https://github.com/csound-plugins/risset"}, "release_url": "https://pypi.org/project/risset/0.1.7/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package manager for csound", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>risset: a package manager for csound</h1>\n<p>This is the repository of risset, a package manager for csound external\nplugins and user-defined-opcodes. All plugins are kept in a separate\nrepository at <a href=\"https://github.com/csound-plugins/risset-data\" rel=\"nofollow\">risset-data</a></p>\n<h1>Installation</h1>\n<p><code>risset</code> depends only on <code>git</code> and <code>python3</code> (&gt;= 3.6) being installed. For linux this is\nalready the case, for macos and windows both need to be installed.</p>\n<pre><code>pip3 install risset\n</code></pre>\n<p>or via git:</p>\n<pre>git clone https://github.com/csound-plugins/risset\n<span class=\"nb\">cd</span> risset\npython3 setup.py install\n</pre>\n<p>These commands will install the script \"risset\" into your path.</p>\n<h1>Quick start</h1>\n<pre><span class=\"c1\"># list all defined packages</span>\n$ risset list\n\n* <span class=\"k\">else</span>  @ <span class=\"m\">0</span>.2.0        <span class=\"p\">|</span> Miscellaneous plugins\n* poly  @ <span class=\"m\">0</span>.2.0        <span class=\"p\">|</span> Run multiple copies of an opcode in parallel/series\n* klib  @ <span class=\"m\">0</span>.2.0        <span class=\"p\">|</span> hashtable / pool / string cache plugins <span class=\"o\">[</span>installed <span class=\"m\">0</span>.2.0<span class=\"o\">]</span>\n* jsfx  @ <span class=\"m\">0</span>.2.0        <span class=\"p\">|</span> Jesusonics effects in csound\n* mverb @ <span class=\"m\">1</span>.3.7        <span class=\"p\">|</span> Artificial reverb based on a 2D waveguide mesh\n\n<span class=\"c1\"># Install some packages</span>\n\n$ risset install <span class=\"k\">else</span> jsfx\n\n<span class=\"c1\"># Show information about a specific package</span>\n\n$ risset show poly\n\nPlugin     : poly\nInstalled  : not installed\nAbstract   : Run multiple copies of an opcode in parallel/series\nMinimal csound version : <span class=\"m\">6</span>.14\nAuthor     : Eduardo Moguillansky\nPlatforms  :\n    * linux: Ubuntu <span class=\"m\">16</span>.04\n    * macos: <span class=\"m\">10</span>.14.0\n    * windows: Windows <span class=\"m\">10</span>\nOpcodes    :\n             poly, polyseq, poly0\n\n<span class=\"c1\"># Show documentation of a given opcode in the default browser</span>\n\n$ risset doc poly\n\n\n<span class=\"c1\"># Remove a plugin</span>\n\n$ risset remove poly\n\n\n<span class=\"c1\"># Check for plugin updates</span>\n\n$ risset update\n</pre>\n<h2>Risset commands</h2>\n<h4>list</h4>\n<p>List all available plugins for your platform</p>\n<pre><code>$ risset list\n</code></pre>\n<h4>show</h4>\n<p>Show information about a plugin</p>\n<pre><code>$ risset show &lt;plugin&gt;\n</code></pre>\n<h4>install</h4>\n<p>Install one or multiple plugins</p>\n<pre><code>$ risset install &lt;plugin&gt; [&lt;plugin2&gt;, ...]\n</code></pre>\n<p>Install a given plugin for the current platform. Plugins are installed into\nthe system folder where all other builtin plugins are installed (this requires administrator rights in some platforms).\nIf the <code>--user</code> flag is given, plugins are installed into the user path:</p>\n<ul>\n<li>linux: <code>$HOME/.local/share/csound6/plugins64</code></li>\n<li>macos: <code>$HOME/Library/Application Support/csound6/plugins64</code></li>\n<li>windows: <code>C:\\Users\\&lt;username&gt;\\AppData\\Local\\csound6\\plugins64</code></li>\n</ul>\n<p>In order for the <code>--user</code> option to be available the user should have modified its <code>OPCODE6DIR64</code>\nenvironment variable to include both the system plugin path and this path. If you attempt to install\na plugin with the <code>--user</code> flag and your system is not correctly setup, <code>risset</code> will fail and inform\nyou how to modify your <code>OPCODE6DIR64</code> variable to set it up correctly.</p>\n<h4>remove</h4>\n<p>Remove an installed plugin</p>\n<pre><code>$ risset remove &lt;plugin&gt;\n</code></pre>\n<hr>\n<h1>Upgrading risset</h1>\n<p>If installed via <code>pip</code>, do:</p>\n<pre><code>pip3 install risset -U\n</code></pre>\n<p>If installed via <code>git</code>, go to the repository and do:</p>\n<pre><code>git pull\npython3 setup.py install\n</code></pre>\n<hr>\n<h1>Contributing</h1>\n<p>In order to add/modify a plugin, clone <a href=\"https://github.com/csound-plugins/risset-data\" rel=\"nofollow\">risset-data</a></p>\n<p>At the root of the repository there is an index file <code>plugins.json</code>, listing all available\nplugins. Each entry in the index has the form</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"myplugin@1.0.0\"</span><span class=\"p\">:</span> <span class=\"s2\">\"plugins/&lt;collection&gt;/&lt;version&gt;/manifests/myplugin.json\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"...\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"...\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The path to the manifest is relative to the plugins.json file inside the git repository.</p>\n<h2>Manifest</h2>\n<p>Each plugin has an accompanying manifest in the .json format. The name of this file\nshould correspond to the name of the plugin: \"myplugin.json\"</p>\n<h4>Example of a manifest for a plugin</h4>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name_of_the_plugin\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"libname\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name_of_the_shared_library\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"major.minor.patch\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"short_description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"a short description\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"long_description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"a long description\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"csound_version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"minimal_csound_version\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"binaries\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"linux\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"path_or_url_of_binary\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"build_platform\"</span><span class=\"p\">:</span> <span class=\"s2\">\"major.minor.patch\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"extra_binaries\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"url1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"url2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"...\"</span><span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"macos\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"build_platform\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"windows\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"manual\"</span><span class=\"p\">:</span> <span class=\"s2\">\"manual_zip_download_url\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"opcodes\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">,</span> <span class=\"s2\">\"baz\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"author\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Plugin Author\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"author@email.org\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"repository\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://url/to/were/the/source/is/developed\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>Explanation of each term</h4>\n<p>In general, each field holding a url can be either a link or a path relative to\nthe manifest itself.</p>\n<ul>\n<li><code>name</code>: name of the plugin. For example, \"chaoticoscils\". This name must be unique</li>\n<li><code>libname</code>: the name of the shared library, without extension (example: <code>libchaoticoscils</code>).\nThis is used to check if the plugin is installed.</li>\n<li><code>version</code>: a version string indicating the version of these binaries. The version\nshould have the form \"MAYOR.MINOR.PATCH\" or \"MAJOR.MINOR\", where each term is\nan integer</li>\n<li><code>short_description</code>: \"A series of chaotic oscillators / noise generators\"</li>\n<li><code>long_description</code> (optional): \"A longer description of what these opcodes do\"</li>\n<li><code>csound_version</code>: The minimal version of csound needed to run these opcodes.\nExample \"6.14.0\" (a string)</li>\n<li><code>binaries</code>: A dictionary with platforms as keys. Possible platforms: \"linux\", \"macos\", \"windows\".\nThe value for each entry should be itself a dictionary of the form:\n<ul>\n<li><code>url</code>: the path to the shared binary itself (relative to the manifest), or\na downloadable url pointing to the shared library.</li>\n<li><code>extra_binaries</code>: an <strong>optional</strong> field holding an array of other binaries needed</li>\n<li><code>build_platform</code>: a string identifying the platform used to build the binary</li>\n</ul>\n</li>\n<li><code>manual</code>: A path/url to a .zip file holding one .md file for each opcode</li>\n<li><code>opcodes</code>: A list of all opcodes included in this plugin (for documentation purposes)</li>\n<li><code>author</code>: The name of the author / mainteiner</li>\n<li><code>email</code>: email of the author / mainteiner</li>\n</ul>\n<h3>Platform support</h3>\n<p>It is desirable, but not a requirement, that all opcodes support the three major desktop\nplatforms: linux, macos and windows. Support for a given platform is indicated by the availability of\na binary for the given platform in the manifest.json file.</p>\n<h2>TODO</h2>\n<ul>\n<li>subcommand <code>doc</code>: show documentation about an opcode inside a plugin</li>\n</ul>\n\n          </div>"}, "last_serial": 7156749, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "f2f8105f5afef43b0fc1dce1dc7319e5", "sha256": "bb0da24b5f5d8424d3dc16d8d489f486cefe98b39b60274f5cc77d9e534dc9b0"}, "downloads": -1, "filename": "risset-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f2f8105f5afef43b0fc1dce1dc7319e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15485, "upload_time": "2020-04-29T09:51:27", "upload_time_iso_8601": "2020-04-29T09:51:27.841205Z", "url": "https://files.pythonhosted.org/packages/bd/dd/fb64c9998c5bb65ddff484592621adea576a7900c270ac3eda908c6a1c91/risset-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3c427c6595ef0704dde4dee9635a27bc", "sha256": "0f86435ed594080faff779e695d56f74155b16be2cd0eb2a787fa84d779ca949"}, "downloads": -1, "filename": "risset-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3c427c6595ef0704dde4dee9635a27bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15552, "upload_time": "2020-04-29T10:14:13", "upload_time_iso_8601": "2020-04-29T10:14:13.859513Z", "url": "https://files.pythonhosted.org/packages/8f/11/028170bc68e8361f54b462f607a2190d46758a663559d9d3dca22f6d3346/risset-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e6959c1740a29489ab604cd6841806e1", "sha256": "f9b05e606e1f5880c74ecf0e30129f510ee58799870b613d7b72d65a4a4a1223"}, "downloads": -1, "filename": "risset-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e6959c1740a29489ab604cd6841806e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15553, "upload_time": "2020-04-29T10:15:54", "upload_time_iso_8601": "2020-04-29T10:15:54.686382Z", "url": "https://files.pythonhosted.org/packages/50/ab/475770599e3ad4d6e2e6d8dfaee2f8e33b894dfaf63e87e1249e28cb9f68/risset-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "7a32cd823a4a915d83dd08cb54fb1c81", "sha256": "c3343ddc85ad22b47b7473a98c2d4f7d4163b9fa4abbd1e557a3926ff9d3adf6"}, "downloads": -1, "filename": "risset-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7a32cd823a4a915d83dd08cb54fb1c81", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13562, "upload_time": "2020-04-29T10:55:35", "upload_time_iso_8601": "2020-04-29T10:55:35.242571Z", "url": "https://files.pythonhosted.org/packages/32/62/15b134e4b745eec1ad83bc1bc5b326278c70c0d2ead34239fac6d98904db/risset-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "86f9c04cec6c5e68097099b4e93b011d", "sha256": "33ec6b1ee9731b767b1ec4e16828c323b9d1939f82c376a79bd85c9615736cbb"}, "downloads": -1, "filename": "risset-0.1.5.tar.gz", "has_sig": false, "md5_digest": "86f9c04cec6c5e68097099b4e93b011d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13567, "upload_time": "2020-04-29T11:45:07", "upload_time_iso_8601": "2020-04-29T11:45:07.375037Z", "url": "https://files.pythonhosted.org/packages/57/5e/a398e83bbf185671b083094d5d758bb3560616dc46c2a38d9fb1a86e0f1f/risset-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "228fa9e54b049c16e1e18258de75105d", "sha256": "5cce040888326ac2c2749b1c6a85196631dec6de77e005915fbf847db3e1211d"}, "downloads": -1, "filename": "risset-0.1.6.tar.gz", "has_sig": false, "md5_digest": "228fa9e54b049c16e1e18258de75105d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13562, "upload_time": "2020-04-29T11:49:42", "upload_time_iso_8601": "2020-04-29T11:49:42.370701Z", "url": "https://files.pythonhosted.org/packages/7c/85/20dd855c000d8f8b9694ebbd6219a3a429c0431d5f9b01bf6ee3c22d7cd5/risset-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "6a390d1e13f1164ace060c1168bc9afb", "sha256": "a295bf684ca27c293bb46c4269d9b9c4e8bfa43848b705e70ca5287d187199d3"}, "downloads": -1, "filename": "risset-0.1.7.tar.gz", "has_sig": false, "md5_digest": "6a390d1e13f1164ace060c1168bc9afb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14143, "upload_time": "2020-05-03T12:58:31", "upload_time_iso_8601": "2020-05-03T12:58:31.271500Z", "url": "https://files.pythonhosted.org/packages/ec/17/d7f11cb95e33cdb5d3efe730a2cfa42eba25ad3705a4d1142dde15ac129e/risset-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a390d1e13f1164ace060c1168bc9afb", "sha256": "a295bf684ca27c293bb46c4269d9b9c4e8bfa43848b705e70ca5287d187199d3"}, "downloads": -1, "filename": "risset-0.1.7.tar.gz", "has_sig": false, "md5_digest": "6a390d1e13f1164ace060c1168bc9afb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14143, "upload_time": "2020-05-03T12:58:31", "upload_time_iso_8601": "2020-05-03T12:58:31.271500Z", "url": "https://files.pythonhosted.org/packages/ec/17/d7f11cb95e33cdb5d3efe730a2cfa42eba25ad3705a4d1142dde15ac129e/risset-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:24 2020"}