{"info": {"author": "Samuel Kurath", "author_email": "geometalab@hsr.ch", "bugtrack_url": null, "classifiers": [], "description": "Usage\n-----\ngeojson2vt\n**********\n.. code:: python\n\n    # build an initial index of tiles\n    tile_index = geojson2vt(geojson, {})\n\n    # request a particular tile\n    features = tile_index.get_tile(z, x, y).get('features')\n\n    # show an array of tile coordinates created so far\n    print(tile_index.tile_coords) # [{'z': 0, 'x': 0, 'y': 0}, ...]\n\nYou can fine-tune the results with an options object,\nalthough the defaults are sensible and work well for most use cases.\n\nBy default, tiles at zoom levels above ``indexMaxZoom`` are generated on the fly, but you can pre-generate all possible tiles for data by setting ``indexMaxZoom`` and ``maxZoom`` to the same value, setting ``indexMaxPoints`` to 0, and then accessing the resulting tile coordinates from the ``tile_coords`` property of ``tile_index``.\n\nThe ``promoteId`` and ``generateId`` options ignore existing ``id`` values on the feature objects.\n\ngeojson2vt only operates on zoom levels up to 24.\n\n\n.. code:: python\n\n    tile_index = geojson2vt(data, {\n        'maxZoom': 14,  # max zoom to preserve detail on; can't be higher than 24\n        'tolerance': 3, # simplification tolerance (higher means simpler)\n        'extent': 4096, # tile extent (both width and height)\n        'buffer': 64,   # tile buffer on each side\n        'lineMetrics': False, # whether to enable line metrics tracking for LineString/MultiLineString features\n        'promoteId': None,    # name of a feature property to promote to feature.id. Cannot be used with `generateId`\n        'generateId': False,  # whether to generate feature ids. Cannot be used with `promoteId`\n        'indexMaxZoom': 5,       # max zoom in the initial tile index\n        'indexMaxPoints': 100000 # max number of points per tile in the index\n    }, logging.INFO)\n    \n\n\nvt2geojson\n**********\n.. code:: python\n\n    # build an initial index of tiles\n    tile_index = geojson2vt(geojson_data, {})\n\n    # get a specific tile\n    vt_tile = tile_index.get_tile(z, x, y)\n\n    # convert a specific vector tile to GeoJSON\n    geojson = vt2geojson(vt_tile)\n\n\nAcknowledgements\n----------------\n\nAll the credit belongs to the collaborators of JS GeoJSON-VT.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/geometalab/geojson2vt", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "geojson2vt", "package_url": "https://pypi.org/project/geojson2vt/", "platform": "", "project_url": "https://pypi.org/project/geojson2vt/", "project_urls": {"Homepage": "https://github.com/geometalab/geojson2vt"}, "release_url": "https://pypi.org/project/geojson2vt/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Python package to convert GeoJSON to vector tiles", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"geojson2vt\">\n<h3>geojson2vt</h3>\n<pre><span class=\"c1\"># build an initial index of tiles</span>\n<span class=\"n\">tile_index</span> <span class=\"o\">=</span> <span class=\"n\">geojson2vt</span><span class=\"p\">(</span><span class=\"n\">geojson</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n\n<span class=\"c1\"># request a particular tile</span>\n<span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"n\">tile_index</span><span class=\"o\">.</span><span class=\"n\">get_tile</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'features'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># show an array of tile coordinates created so far</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tile_index</span><span class=\"o\">.</span><span class=\"n\">tile_coords</span><span class=\"p\">)</span> <span class=\"c1\"># [{'z': 0, 'x': 0, 'y': 0}, ...]</span>\n</pre>\n<p>You can fine-tune the results with an options object,\nalthough the defaults are sensible and work well for most use cases.</p>\n<p>By default, tiles at zoom levels above <tt>indexMaxZoom</tt> are generated on the fly, but you can pre-generate all possible tiles for data by setting <tt>indexMaxZoom</tt> and <tt>maxZoom</tt> to the same value, setting <tt>indexMaxPoints</tt> to 0, and then accessing the resulting tile coordinates from the <tt>tile_coords</tt> property of <tt>tile_index</tt>.</p>\n<p>The <tt>promoteId</tt> and <tt>generateId</tt> options ignore existing <tt>id</tt> values on the feature objects.</p>\n<p>geojson2vt only operates on zoom levels up to 24.</p>\n<pre><span class=\"n\">tile_index</span> <span class=\"o\">=</span> <span class=\"n\">geojson2vt</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'maxZoom'</span><span class=\"p\">:</span> <span class=\"mi\">14</span><span class=\"p\">,</span>  <span class=\"c1\"># max zoom to preserve detail on; can't be higher than 24</span>\n    <span class=\"s1\">'tolerance'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"c1\"># simplification tolerance (higher means simpler)</span>\n    <span class=\"s1\">'extent'</span><span class=\"p\">:</span> <span class=\"mi\">4096</span><span class=\"p\">,</span> <span class=\"c1\"># tile extent (both width and height)</span>\n    <span class=\"s1\">'buffer'</span><span class=\"p\">:</span> <span class=\"mi\">64</span><span class=\"p\">,</span>   <span class=\"c1\"># tile buffer on each side</span>\n    <span class=\"s1\">'lineMetrics'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"c1\"># whether to enable line metrics tracking for LineString/MultiLineString features</span>\n    <span class=\"s1\">'promoteId'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>    <span class=\"c1\"># name of a feature property to promote to feature.id. Cannot be used with `generateId`</span>\n    <span class=\"s1\">'generateId'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># whether to generate feature ids. Cannot be used with `promoteId`</span>\n    <span class=\"s1\">'indexMaxZoom'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>       <span class=\"c1\"># max zoom in the initial tile index</span>\n    <span class=\"s1\">'indexMaxPoints'</span><span class=\"p\">:</span> <span class=\"mi\">100000</span> <span class=\"c1\"># max number of points per tile in the index</span>\n<span class=\"p\">},</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"vt2geojson\">\n<h3>vt2geojson</h3>\n<pre><span class=\"c1\"># build an initial index of tiles</span>\n<span class=\"n\">tile_index</span> <span class=\"o\">=</span> <span class=\"n\">geojson2vt</span><span class=\"p\">(</span><span class=\"n\">geojson_data</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n\n<span class=\"c1\"># get a specific tile</span>\n<span class=\"n\">vt_tile</span> <span class=\"o\">=</span> <span class=\"n\">tile_index</span><span class=\"o\">.</span><span class=\"n\">get_tile</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># convert a specific vector tile to GeoJSON</span>\n<span class=\"n\">geojson</span> <span class=\"o\">=</span> <span class=\"n\">vt2geojson</span><span class=\"p\">(</span><span class=\"n\">vt_tile</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>All the credit belongs to the collaborators of JS GeoJSON-VT.</p>\n</div>\n\n          </div>"}, "last_serial": 7037672, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0ccc01f6dbd9dd6562facdd71e76cd64", "sha256": "408f838218293ed9a836021c8650554766cae1f3cc39c7b290ad1251bc9bc1aa"}, "downloads": -1, "filename": "geojson2vt-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0ccc01f6dbd9dd6562facdd71e76cd64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12293, "upload_time": "2020-04-15T08:30:57", "upload_time_iso_8601": "2020-04-15T08:30:57.189208Z", "url": "https://files.pythonhosted.org/packages/39/96/b335592913e0bb5f45d5c2dc66153653aaad7bc85877603c1dff259af5f1/geojson2vt-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad39c7664fc4c927be91c398f41462b4", "sha256": "81ce25925327be97d546dc0284fad93c0383f1d1b4ef2b434ccc2ea847c8a89f"}, "downloads": -1, "filename": "geojson2vt-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ad39c7664fc4c927be91c398f41462b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8896, "upload_time": "2020-04-15T08:30:59", "upload_time_iso_8601": "2020-04-15T08:30:59.327825Z", "url": "https://files.pythonhosted.org/packages/dd/03/b1c450d02fae8681bc160149f7d50e4950cf64c7ee527e4ba0fd2b03d8da/geojson2vt-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "10fe22f8e2d770e198e81a3d5ab1b544", "sha256": "eb5116c76c613ab3600196f38f7664d0a0ced92a4d318610b9d3eb1c91602d70"}, "downloads": -1, "filename": "geojson2vt-0.0.2.tar.gz", "has_sig": false, "md5_digest": "10fe22f8e2d770e198e81a3d5ab1b544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9447, "upload_time": "2020-04-15T08:58:12", "upload_time_iso_8601": "2020-04-15T08:58:12.300608Z", "url": "https://files.pythonhosted.org/packages/5c/4b/72d0437dd6fe2b27865e71374fe69b1d4249e2fe597a180645ca3e9a6278/geojson2vt-0.0.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "850b9ea7188cc6066b62740a34759b64", "sha256": "1e52a0c047a5bfcf6ec1bee41eb7ead0442cb06d17e887c080d95ad46532564d"}, "downloads": -1, "filename": "geojson2vt-1.0.0.tar.gz", "has_sig": false, "md5_digest": "850b9ea7188cc6066b62740a34759b64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9953, "upload_time": "2020-04-16T12:11:02", "upload_time_iso_8601": "2020-04-16T12:11:02.496705Z", "url": "https://files.pythonhosted.org/packages/16/8e/6ff96970862959c22efb47d88a7e905def53b480f4e84c6076392d459d5e/geojson2vt-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7506d6afa8e9ea76160b4a457ff2ea49", "sha256": "d03311dfa28e681d702e604595f8894a42bb48a717db7763d4fdbe11aff1f507"}, "downloads": -1, "filename": "geojson2vt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7506d6afa8e9ea76160b4a457ff2ea49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9961, "upload_time": "2020-04-17T05:39:57", "upload_time_iso_8601": "2020-04-17T05:39:57.232028Z", "url": "https://files.pythonhosted.org/packages/b8/87/86455da7e587c10cfd9e264f69d62e3ca2c82fbc7304d18289a174a063b5/geojson2vt-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7506d6afa8e9ea76160b4a457ff2ea49", "sha256": "d03311dfa28e681d702e604595f8894a42bb48a717db7763d4fdbe11aff1f507"}, "downloads": -1, "filename": "geojson2vt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7506d6afa8e9ea76160b4a457ff2ea49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9961, "upload_time": "2020-04-17T05:39:57", "upload_time_iso_8601": "2020-04-17T05:39:57.232028Z", "url": "https://files.pythonhosted.org/packages/b8/87/86455da7e587c10cfd9e264f69d62e3ca2c82fbc7304d18289a174a063b5/geojson2vt-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:04 2020"}