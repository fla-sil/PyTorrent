{"info": {"author": "ranjith", "author_email": "abranjith@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# pybrowser\n\nFor documentation, refer [here](https://pybrowser.readthedocs.io/en/latest/)\n\nHere is a quick example,\n\n```python\nfrom pybrowser import Browser \n    with Browser(browser_name=Browser.CHROME) as b:\n        b.goto(\"https://www.google.com/\")\n        b.input(\"name:=q\").enter(\"news\")\n        b.button(\"name:=btnK\").click()\n        screenshot_path = b.take_screenshot()\n        print(b.html().elements.links())\n```\n\n## Release Notes:\n\n**0.2.0**\n---------\n\n*   **Changes**\n\n    *   Changes in underlying `Browser.requests_session` object,\n\n        *   `requests_session.result` has been removed. There is just `requests_session.response` which is a blocking call (in case `asynch` flag is set). Also note, `requests_session.is_request_done` is still available to see if request is complete of not. There are no changes to other properties and are blocking in case of asynchronous call.\n\n        *   `requests_session.content()` method with options for bytes and text has been changed to properties, just like in underlying requests. That is now you call, `requests_session.content` for bytes and `requests_session.text` for text.\n\n        *   In context of above changes, `Browser` object also has below changes,\n\n            *   `Browser.get` and `Browser.post` now returns `requests_session` object (used to be `requests_session.response`).\n            *   `Browser.content()` has been changed to properties. That is now you call, `Browser.content` for bytes and `Browser.text` for text.\n\n*   **New features**\n\n    *   Support for remote url. Please note this requires [Selenium Grid](https://www.seleniumhq.org/docs/07_selenium_grid.jsp) to be setup explicitly. Once done use the URL here.\n\n    * Flags for Opera browser (`Browser.OPERA`). Webdriver executable needs to be present in `driver_path`.\n    Please note `EDGE` and `SAFARI` are also supported the same way. That is, webdriver isn't automatically downloaded, instead path needs to be provided.\n\n**0.1.0**\n---------\n\n*   **Changes**\n\n    **Please note some key changes with regards to properties changing to methods**.\n\n    *   Methods which were properties in initial release are now method calls. Below is the impacted list.\n\n        In Browser,\n\n        *   `Browser.refresh()`\n        *   `Browser.back()`\n        *   `Browser.forward()`\n        *   `Browser.maximize_window()`\n        *   `Browser.minimize_window()`\n        *   `Browser.fullscreen_window()`\n        *   `Browser.delete_all_cookies()`\n        *   `Browser.close()`\n\n        In Action (used by all elements),\n\n        *   `Action.refresh()`\n        *   `Action.highlight()`\n        *   `Action.double_click()`\n        *   `Action.move_to_element()`\n\n        Specific elements also,\n\n        *   `Checkbox.check()`\n        *   `Checkbox.uncheck()`\n        *   `Radio.select()`\n        *   `Radio.unselect()`\n        *   `Input.clear()`\n\n    *   Browser class `__init__` method now has more options,\n\n        *   `firefox_binary_path`\n        *   `firefox_profile_path`\n        *   `http_proxy`\n        *   `driver_path`\n\n    *   Select element has below method changes,\n\n        `Select.options(get=\"text\")` method has been split to multiple properties to keep it simple,\n\n        *   `Select.options_text`\n        *   `Select.options_value`\n        *   `Select.options_element`\n\n        Similar change has been done for `Select.all_selected_options(get=\"text\")`,\n\n        *   `Select.all_selected_options_text`\n        *   `Select.all_selected_options_value`\n        *   `Select.all_selected_options_element`\n\n    *   File element changes,\n\n        Below enhancements have been made to download feature,\n\n        *   Added more parameters - \n\n            *   `unzip` - Set this flag to unzip file. Default is `False`\n            *   `del_zipfile` - Set this flag to delete zip file after it has been unzipped. Default is `False`\n            *   `add_to_ospath` - Set this flag to add directory to `PATH`. Default is `False`\n\n        *   New properties - \n\n            As you might already know, download happens in background (asynchronous) by default and can of course be changed with `asynch`. To check if download was successful, below properties are available,\n\n            *   `is_download_complete` - `True` or `False`\n            *   `downloaded_files` - list of downloaded files\n\n    *   HTML links method has below method changes,\n\n        This is the one you would invoke via Browser as `Browser.html().elements.link()`.\n\n        *   Added more parameters - \n\n            *   `images` - You can filter out images. Default is `False` that means to include `images`, you will need to set this to `True`\n            *   `name_length_limit` - This limits the length of name of the url. Default is 60\n\n        *   Change in return type. Before this change, return type was a list of types (name, url). This has been changed to list of [named_tuples](https://docs.python.org/3.7/library/collections.html#collections.namedtuple) of form `('Link', ['name', 'url'])`\n\n    *   Changes in some env options.\n\n        Removed below options as they don't have sense. Either you provide complete driver download url or provide version\n        so that the API tries to download,\n\n        *   `CHROME_FILENAME`\n        *   `IE_FILENAME`\n        *   `CHROMEDRIVER_DEFAULT_VERSION`\n\n        Added below for Firefox support,\n\n        *   `FIREFOX_HOME_URL`\n        *   `FIREFOX_DOWNLOAD_URL`\n        *   `FIREFOXDRIVER_VERSION`\n\n    *   Refactoring (non functional) in code and tests. Lot more testing needed still :-\\\n\n*   **New features**\n\n    *   Support for Firefox !\n\n**0.0.1**\n---------\n\n*   Very first release !\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/abranjith/pybrowser", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "get-pybrowser", "package_url": "https://pypi.org/project/get-pybrowser/", "platform": "", "project_url": "https://pypi.org/project/get-pybrowser/", "project_urls": {"Homepage": "https://github.com/abranjith/pybrowser"}, "release_url": "https://pypi.org/project/get-pybrowser/0.2.0/", "requires_dist": ["requests", "selenium (==3.141.0)", "pyquery (==1.4.0)", "pyppeteer (==0.0.25)"], "requires_python": ">=3.7.0", "summary": "Selenium based, user friendly Browser Automation API", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pybrowser</h1>\n<p>For documentation, refer <a href=\"https://pybrowser.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a></p>\n<p>Here is a quick example,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pybrowser</span> <span class=\"kn\">import</span> <span class=\"n\">Browser</span> \n    <span class=\"k\">with</span> <span class=\"n\">Browser</span><span class=\"p\">(</span><span class=\"n\">browser_name</span><span class=\"o\">=</span><span class=\"n\">Browser</span><span class=\"o\">.</span><span class=\"n\">CHROME</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">b</span><span class=\"p\">:</span>\n        <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">goto</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.google.com/\"</span><span class=\"p\">)</span>\n        <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">(</span><span class=\"s2\">\"name:=q\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">enter</span><span class=\"p\">(</span><span class=\"s2\">\"news\"</span><span class=\"p\">)</span>\n        <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">button</span><span class=\"p\">(</span><span class=\"s2\">\"name:=btnK\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">()</span>\n        <span class=\"n\">screenshot_path</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">take_screenshot</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"o\">.</span><span class=\"n\">links</span><span class=\"p\">())</span>\n</pre>\n<h2>Release Notes:</h2>\n<h2><strong>0.2.0</strong></h2>\n<ul>\n<li>\n<p><strong>Changes</strong></p>\n<ul>\n<li>\n<p>Changes in underlying <code>Browser.requests_session</code> object,</p>\n<ul>\n<li>\n<p><code>requests_session.result</code> has been removed. There is just <code>requests_session.response</code> which is a blocking call (in case <code>asynch</code> flag is set). Also note, <code>requests_session.is_request_done</code> is still available to see if request is complete of not. There are no changes to other properties and are blocking in case of asynchronous call.</p>\n</li>\n<li>\n<p><code>requests_session.content()</code> method with options for bytes and text has been changed to properties, just like in underlying requests. That is now you call, <code>requests_session.content</code> for bytes and <code>requests_session.text</code> for text.</p>\n</li>\n<li>\n<p>In context of above changes, <code>Browser</code> object also has below changes,</p>\n<ul>\n<li><code>Browser.get</code> and <code>Browser.post</code> now returns <code>requests_session</code> object (used to be <code>requests_session.response</code>).</li>\n<li><code>Browser.content()</code> has been changed to properties. That is now you call, <code>Browser.content</code> for bytes and <code>Browser.text</code> for text.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>New features</strong></p>\n<ul>\n<li>\n<p>Support for remote url. Please note this requires <a href=\"https://www.seleniumhq.org/docs/07_selenium_grid.jsp\" rel=\"nofollow\">Selenium Grid</a> to be setup explicitly. Once done use the URL here.</p>\n</li>\n<li>\n<p>Flags for Opera browser (<code>Browser.OPERA</code>). Webdriver executable needs to be present in <code>driver_path</code>.\nPlease note <code>EDGE</code> and <code>SAFARI</code> are also supported the same way. That is, webdriver isn't automatically downloaded, instead path needs to be provided.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2><strong>0.1.0</strong></h2>\n<ul>\n<li>\n<p><strong>Changes</strong></p>\n<p><strong>Please note some key changes with regards to properties changing to methods</strong>.</p>\n<ul>\n<li>\n<p>Methods which were properties in initial release are now method calls. Below is the impacted list.</p>\n<p>In Browser,</p>\n<ul>\n<li><code>Browser.refresh()</code></li>\n<li><code>Browser.back()</code></li>\n<li><code>Browser.forward()</code></li>\n<li><code>Browser.maximize_window()</code></li>\n<li><code>Browser.minimize_window()</code></li>\n<li><code>Browser.fullscreen_window()</code></li>\n<li><code>Browser.delete_all_cookies()</code></li>\n<li><code>Browser.close()</code></li>\n</ul>\n<p>In Action (used by all elements),</p>\n<ul>\n<li><code>Action.refresh()</code></li>\n<li><code>Action.highlight()</code></li>\n<li><code>Action.double_click()</code></li>\n<li><code>Action.move_to_element()</code></li>\n</ul>\n<p>Specific elements also,</p>\n<ul>\n<li><code>Checkbox.check()</code></li>\n<li><code>Checkbox.uncheck()</code></li>\n<li><code>Radio.select()</code></li>\n<li><code>Radio.unselect()</code></li>\n<li><code>Input.clear()</code></li>\n</ul>\n</li>\n<li>\n<p>Browser class <code>__init__</code> method now has more options,</p>\n<ul>\n<li><code>firefox_binary_path</code></li>\n<li><code>firefox_profile_path</code></li>\n<li><code>http_proxy</code></li>\n<li><code>driver_path</code></li>\n</ul>\n</li>\n<li>\n<p>Select element has below method changes,</p>\n<p><code>Select.options(get=\"text\")</code> method has been split to multiple properties to keep it simple,</p>\n<ul>\n<li><code>Select.options_text</code></li>\n<li><code>Select.options_value</code></li>\n<li><code>Select.options_element</code></li>\n</ul>\n<p>Similar change has been done for <code>Select.all_selected_options(get=\"text\")</code>,</p>\n<ul>\n<li><code>Select.all_selected_options_text</code></li>\n<li><code>Select.all_selected_options_value</code></li>\n<li><code>Select.all_selected_options_element</code></li>\n</ul>\n</li>\n<li>\n<p>File element changes,</p>\n<p>Below enhancements have been made to download feature,</p>\n<ul>\n<li>\n<p>Added more parameters -</p>\n<ul>\n<li><code>unzip</code> - Set this flag to unzip file. Default is <code>False</code></li>\n<li><code>del_zipfile</code> - Set this flag to delete zip file after it has been unzipped. Default is <code>False</code></li>\n<li><code>add_to_ospath</code> - Set this flag to add directory to <code>PATH</code>. Default is <code>False</code></li>\n</ul>\n</li>\n<li>\n<p>New properties -</p>\n<p>As you might already know, download happens in background (asynchronous) by default and can of course be changed with <code>asynch</code>. To check if download was successful, below properties are available,</p>\n<ul>\n<li><code>is_download_complete</code> - <code>True</code> or <code>False</code></li>\n<li><code>downloaded_files</code> - list of downloaded files</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>HTML links method has below method changes,</p>\n<p>This is the one you would invoke via Browser as <code>Browser.html().elements.link()</code>.</p>\n<ul>\n<li>\n<p>Added more parameters -</p>\n<ul>\n<li><code>images</code> - You can filter out images. Default is <code>False</code> that means to include <code>images</code>, you will need to set this to <code>True</code></li>\n<li><code>name_length_limit</code> - This limits the length of name of the url. Default is 60</li>\n</ul>\n</li>\n<li>\n<p>Change in return type. Before this change, return type was a list of types (name, url). This has been changed to list of <a href=\"https://docs.python.org/3.7/library/collections.html#collections.namedtuple\" rel=\"nofollow\">named_tuples</a> of form <code>('Link', ['name', 'url'])</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Changes in some env options.</p>\n<p>Removed below options as they don't have sense. Either you provide complete driver download url or provide version\nso that the API tries to download,</p>\n<ul>\n<li><code>CHROME_FILENAME</code></li>\n<li><code>IE_FILENAME</code></li>\n<li><code>CHROMEDRIVER_DEFAULT_VERSION</code></li>\n</ul>\n<p>Added below for Firefox support,</p>\n<ul>\n<li><code>FIREFOX_HOME_URL</code></li>\n<li><code>FIREFOX_DOWNLOAD_URL</code></li>\n<li><code>FIREFOXDRIVER_VERSION</code></li>\n</ul>\n</li>\n<li>\n<p>Refactoring (non functional) in code and tests. Lot more testing needed still :-\\</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>New features</strong></p>\n<ul>\n<li>Support for Firefox !</li>\n</ul>\n</li>\n</ul>\n<h2><strong>0.0.1</strong></h2>\n<ul>\n<li>Very first release !</li>\n</ul>\n\n          </div>"}, "last_serial": 5198365, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "aa72002ddc2191e27c4fead419527d53", "sha256": "03e5097b60512fb8be6d132ad653f13fbae1a116bd297ae6d8ac462652168a85"}, "downloads": -1, "filename": "get_pybrowser-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aa72002ddc2191e27c4fead419527d53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 47511, "upload_time": "2019-04-28T02:29:28", "upload_time_iso_8601": "2019-04-28T02:29:28.830858Z", "url": "https://files.pythonhosted.org/packages/9a/53/1adda79b79a920ca777d458dbceeaf00ce4738e3db941fef833efa91b126/get_pybrowser-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c94bbf95812924154629f51d188044b2", "sha256": "c306744569d2af04b07a917ef9fe8591e7daaedd7dd9661b0167b255c327f22d"}, "downloads": -1, "filename": "get-pybrowser-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c94bbf95812924154629f51d188044b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 38956, "upload_time": "2019-04-28T02:29:41", "upload_time_iso_8601": "2019-04-28T02:29:41.086781Z", "url": "https://files.pythonhosted.org/packages/67/4e/01a7dcac75fd754ff188202f9f328196e1be08fbee361d3e51d0383565b6/get-pybrowser-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa72002ddc2191e27c4fead419527d53", "sha256": "03e5097b60512fb8be6d132ad653f13fbae1a116bd297ae6d8ac462652168a85"}, "downloads": -1, "filename": "get_pybrowser-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aa72002ddc2191e27c4fead419527d53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 47511, "upload_time": "2019-04-28T02:29:28", "upload_time_iso_8601": "2019-04-28T02:29:28.830858Z", "url": "https://files.pythonhosted.org/packages/9a/53/1adda79b79a920ca777d458dbceeaf00ce4738e3db941fef833efa91b126/get_pybrowser-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c94bbf95812924154629f51d188044b2", "sha256": "c306744569d2af04b07a917ef9fe8591e7daaedd7dd9661b0167b255c327f22d"}, "downloads": -1, "filename": "get-pybrowser-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c94bbf95812924154629f51d188044b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 38956, "upload_time": "2019-04-28T02:29:41", "upload_time_iso_8601": "2019-04-28T02:29:41.086781Z", "url": "https://files.pythonhosted.org/packages/67/4e/01a7dcac75fd754ff188202f9f328196e1be08fbee361d3e51d0383565b6/get-pybrowser-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:44 2020"}