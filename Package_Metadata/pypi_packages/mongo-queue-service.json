{"info": {"author": "Amit Chotaliya", "author_email": "amit@shunyeka.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# mongo_queue\nTask queue built on mongo with channels and unique job id.\n\n[Website](http://www.shunyeka.com) \u2022 [autobotAI Cloud Governance](https://autobot.live/)\n\nInspired from [kapilt/mongoqueue](https://github.com/kapilt/mongoqueue)\n\n### Change Log:\n\n#### v0.0.3\n\n-  Added unique index with job_id and channel. This is to make sure that the same job is not added multiple times. If not job id provided an unique id generated by default. \n\n## Usage\n\nInstall the package.\n\n```\npip install mongo_queue\n```\n\n###  Usage Example:\n\n*  Create Queue Object\n```python\nfrom mongo_queue.queue import Queue\nfrom pymongo import MongoClient\n\nqueue = Queue(MongoClient('localhost', 27017).task_queue, consumer_id=\"consumer-1\", timeout=300, max_attempts=3)\n```\n* Add task to queue default channel\n\n```python\nqueue.put({\"task_id\": 1})\n```\n\n* Add task to queue with priority to default channel\n\n```python\nqueue.put({\"task_id\": 1}, priority=1)\n```\n\n* Add task to queue in a specific channel\n\n```python\nqueue.put({\"task_id\": 1}, priority=1, channel=\"channel_1\")\n```\n\n* Add task to queue with unique job_id\n\n```python\nqueue.put({\"task_id\": 1}, priority=1, channel=\"channel_1\", job_id=\"x_job\")\n```\n\n* Get the next job to be executed from the default channel\n\n```python\njob = queue.next()\n```\n\n* Get the next job to be executed from a specific channel\n\n```python\njob = queue.next(channel=\"channel_1\")\n```\n\n* Update job progress for long running jobs\n\n```python\njob.progress(count=10)\n```\n\n* Put the job back in queue, this will be picked up again later, this will update attempts after max attempts the job will not be picked up again.\n\n```python\njob.release()\n```\n\n* Put the job back in queue with error, this will be picked up again later, this will update attempts after max attempts the job will not be picked up again.\n\n```python\njob.error(\"Some error occured\")\n```\n\n* Complete the job. This will delete job from the database.\n\n```python\njob.complete()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/shunyeka/mongo_queue/archive/v0.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shunyeka/mongo_queue/", "keywords": "mongo,queue,priority queue,task queue", "license": "", "maintainer": "", "maintainer_email": "", "name": "mongo-queue-service", "package_url": "https://pypi.org/project/mongo-queue-service/", "platform": "", "project_url": "https://pypi.org/project/mongo-queue-service/", "project_urls": {"Download": "https://github.com/shunyeka/mongo_queue/archive/v0.0.1.tar.gz", "Homepage": "https://github.com/shunyeka/mongo_queue/"}, "release_url": "https://pypi.org/project/mongo-queue-service/0.0.3/", "requires_dist": ["pymongo"], "requires_python": ">=3.6", "summary": "Queue service built on top of mongo.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mongo_queue</h1>\n<p>Task queue built on mongo with channels and unique job id.</p>\n<p><a href=\"http://www.shunyeka.com\" rel=\"nofollow\">Website</a> \u2022 <a href=\"https://autobot.live/\" rel=\"nofollow\">autobotAI Cloud Governance</a></p>\n<p>Inspired from <a href=\"https://github.com/kapilt/mongoqueue\" rel=\"nofollow\">kapilt/mongoqueue</a></p>\n<h3>Change Log:</h3>\n<h4>v0.0.3</h4>\n<ul>\n<li>Added unique index with job_id and channel. This is to make sure that the same job is not added multiple times. If not job id provided an unique id generated by default.</li>\n</ul>\n<h2>Usage</h2>\n<p>Install the package.</p>\n<pre><code>pip install mongo_queue\n</code></pre>\n<h3>Usage Example:</h3>\n<ul>\n<li>Create Queue Object</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mongo_queue.queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymongo</span> <span class=\"kn\">import</span> <span class=\"n\">MongoClient</span>\n\n<span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">(</span><span class=\"n\">MongoClient</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">27017</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">task_queue</span><span class=\"p\">,</span> <span class=\"n\">consumer_id</span><span class=\"o\">=</span><span class=\"s2\">\"consumer-1\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">max_attempts</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Add task to queue default channel</li>\n</ul>\n<pre><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">({</span><span class=\"s2\">\"task_id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n</pre>\n<ul>\n<li>Add task to queue with priority to default channel</li>\n</ul>\n<pre><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">({</span><span class=\"s2\">\"task_id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Add task to queue in a specific channel</li>\n</ul>\n<pre><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">({</span><span class=\"s2\">\"task_id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"channel_1\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Add task to queue with unique job_id</li>\n</ul>\n<pre><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">({</span><span class=\"s2\">\"task_id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"channel_1\"</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">\"x_job\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Get the next job to be executed from the default channel</li>\n</ul>\n<pre><span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Get the next job to be executed from a specific channel</li>\n</ul>\n<pre><span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"channel_1\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Update job progress for long running jobs</li>\n</ul>\n<pre><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">progress</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Put the job back in queue, this will be picked up again later, this will update attempts after max attempts the job will not be picked up again.</li>\n</ul>\n<pre><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Put the job back in queue with error, this will be picked up again later, this will update attempts after max attempts the job will not be picked up again.</li>\n</ul>\n<pre><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">\"Some error occured\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Complete the job. This will delete job from the database.</li>\n</ul>\n<pre><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">complete</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6457195, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "cea21465f7a9825b464bc1a009535f70", "sha256": "8e1a49819bcb74ed65dd213018d128c038c6ceb954faa25fb92f020c8791d6b5"}, "downloads": -1, "filename": "mongo_queue_service-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cea21465f7a9825b464bc1a009535f70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7271, "upload_time": "2019-12-28T13:48:18", "upload_time_iso_8601": "2019-12-28T13:48:18.972589Z", "url": "https://files.pythonhosted.org/packages/58/6e/b90d9bdbb3b3237b0e09a42ca3acdb6cbf1f9210c66c40e36d41fa753c1a/mongo_queue_service-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dfa9f14f4f82645420bc7511514796b", "sha256": "61cbb6e7889861bfbf7b5abaa10ddfa39fdec27646bfd7c002096a08b805c39d"}, "downloads": -1, "filename": "mongo_queue_service-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2dfa9f14f4f82645420bc7511514796b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5081, "upload_time": "2019-12-28T13:48:21", "upload_time_iso_8601": "2019-12-28T13:48:21.493923Z", "url": "https://files.pythonhosted.org/packages/42/ca/8d7e3254d638a8d1c526b74b482b69697eae725d74ded2fabacc6549f448/mongo_queue_service-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e6cee436d8062b8184cb9dd5fa447be2", "sha256": "36bb004f0226febb237e0f80c509e879bf802030da029e086cb5d3ad1138a68b"}, "downloads": -1, "filename": "mongo_queue_service-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e6cee436d8062b8184cb9dd5fa447be2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7547, "upload_time": "2020-01-15T08:23:41", "upload_time_iso_8601": "2020-01-15T08:23:41.228210Z", "url": "https://files.pythonhosted.org/packages/15/7e/7d175d8a5800ae9594abd4c966b2151c1db8a7a94eecf7927fcb5d8b36d5/mongo_queue_service-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dedcceace5efe1943bcb8aca04d5b53c", "sha256": "3ae8d6213fbb93a25ff5facf3af2f4b9ab8e68c12b7a5e68bf64d18261821478"}, "downloads": -1, "filename": "mongo_queue_service-0.0.3.tar.gz", "has_sig": false, "md5_digest": "dedcceace5efe1943bcb8aca04d5b53c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5337, "upload_time": "2020-01-15T08:23:43", "upload_time_iso_8601": "2020-01-15T08:23:43.681183Z", "url": "https://files.pythonhosted.org/packages/29/3e/a0641d5ae7b9367d67daa84215ce686fb9569c9f8893affff82cdb791c0f/mongo_queue_service-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6cee436d8062b8184cb9dd5fa447be2", "sha256": "36bb004f0226febb237e0f80c509e879bf802030da029e086cb5d3ad1138a68b"}, "downloads": -1, "filename": "mongo_queue_service-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e6cee436d8062b8184cb9dd5fa447be2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7547, "upload_time": "2020-01-15T08:23:41", "upload_time_iso_8601": "2020-01-15T08:23:41.228210Z", "url": "https://files.pythonhosted.org/packages/15/7e/7d175d8a5800ae9594abd4c966b2151c1db8a7a94eecf7927fcb5d8b36d5/mongo_queue_service-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dedcceace5efe1943bcb8aca04d5b53c", "sha256": "3ae8d6213fbb93a25ff5facf3af2f4b9ab8e68c12b7a5e68bf64d18261821478"}, "downloads": -1, "filename": "mongo_queue_service-0.0.3.tar.gz", "has_sig": false, "md5_digest": "dedcceace5efe1943bcb8aca04d5b53c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5337, "upload_time": "2020-01-15T08:23:43", "upload_time_iso_8601": "2020-01-15T08:23:43.681183Z", "url": "https://files.pythonhosted.org/packages/29/3e/a0641d5ae7b9367d67daa84215ce686fb9569c9f8893affff82cdb791c0f/mongo_queue_service-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:14 2020"}