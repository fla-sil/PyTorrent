{"info": {"author": "Raphael Ritz", "author_email": "raphael.ritz@incf.org", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\nA facade storage for Archetypes which delegates to \na Plone site's Memberdata Tool for storing content \nitem field values as memberdata properties. \n\nThis heavily relies on name magic.\nIt is assumed that the correponding member and content \ninstances have corresponding ids. Correspondence is established\nwith the help of ``Products.PlonePAS.utils.[de]cleanId`` - the\nsame way Plone 4 uses to keep track of member folders. \n\nThe use case driving its development has been to support\ncustom Archetypes-based content types which can be used\nas home folders for members and mirroring some of the\nmember properties. That way, people can change member \nproperties by editing their home folder settings.\n\n``archetypes.memberdata`` is used in production on http://www.incf.org.\n\n\nUsage\n=====\n\nIn your Archetypes schema definition you can use the ``MemberPropertyField``\ninstead of a regular StringField to get and set the field's value in a\ncorresponding member property. Per default, a property with the same\nname as the field is used unless the ``member_property_id`` is set to point\nto a different property.\n\nFor other field types one can use ``MemberdataStorage`` as well as long as\nthe data type can be handled by the member data tool.\n\nChangelog\n=========\n\n1.1 (2011-03-29)\n----------------\n\n* Don't break if email login is enabled [raphael]\n\n* Extend test coverage to also check for member property changes\n  being picked up in \"content space\" [robin].\n\n\n1.0 - 2009-04-03\n----------------\n\n* Adding test suite [raphael].\n\n* Adding MemberpropertyField for convenience [raphael].\n\n* Breaking this out of ResearchCommunitySite to make it more accessible\n  (from r15354 - yes, no changes in three years) [raphael].", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/archetypes.memberdatastorage", "keywords": "Plone Archetypes Storage Memberdata", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "archetypes.memberdatastorage", "package_url": "https://pypi.org/project/archetypes.memberdatastorage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/archetypes.memberdatastorage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/archetypes.memberdatastorage"}, "release_url": "https://pypi.org/project/archetypes.memberdatastorage/1.1/", "requires_dist": null, "requires_python": null, "summary": "A facade storage layer for Archetypes delegating to the Plone memberdata tool", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>A facade storage for Archetypes which delegates to\na Plone site\u2019s Memberdata Tool for storing content\nitem field values as memberdata properties.</p>\n<p>This heavily relies on name magic.\nIt is assumed that the correponding member and content\ninstances have corresponding ids. Correspondence is established\nwith the help of <tt><span class=\"pre\">Products.PlonePAS.utils.[de]cleanId</span></tt> - the\nsame way Plone 4 uses to keep track of member folders.</p>\n<p>The use case driving its development has been to support\ncustom Archetypes-based content types which can be used\nas home folders for members and mirroring some of the\nmember properties. That way, people can change member\nproperties by editing their home folder settings.</p>\n<p><tt>archetypes.memberdata</tt> is used in production on <a href=\"http://www.incf.org\" rel=\"nofollow\">http://www.incf.org</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In your Archetypes schema definition you can use the <tt>MemberPropertyField</tt>\ninstead of a regular StringField to get and set the field\u2019s value in a\ncorresponding member property. Per default, a property with the same\nname as the field is used unless the <tt>member_property_id</tt> is set to point\nto a different property.</p>\n<p>For other field types one can use <tt>MemberdataStorage</tt> as well as long as\nthe data type can be handled by the member data tool.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.1 (2011-03-29)</h3>\n<ul>\n<li>Don\u2019t break if email login is enabled [raphael]</li>\n<li>Extend test coverage to also check for member property changes\nbeing picked up in \u201ccontent space\u201d [robin].</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0 - 2009-04-03</h3>\n<ul>\n<li>Adding test suite [raphael].</li>\n<li>Adding MemberpropertyField for convenience [raphael].</li>\n<li>Breaking this out of ResearchCommunitySite to make it more accessible\n(from r15354 - yes, no changes in three years) [raphael].</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 286895, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "88dcbcaeefdb2468cf48b72eb704a5fc", "sha256": "ef2d8a7b4d06287001113b0988cbd588d1c988952b4a77af78dc964be6b45d00"}, "downloads": -1, "filename": "archetypes.memberdatastorage-1.0.tar.gz", "has_sig": false, "md5_digest": "88dcbcaeefdb2468cf48b72eb704a5fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5369, "upload_time": "2009-04-03T14:35:46", "upload_time_iso_8601": "2009-04-03T14:35:46.375956Z", "url": "https://files.pythonhosted.org/packages/55/d2/9de209ec6621713ee0d196e08c4ed75dc5559999eed394da3b15c647a1ee/archetypes.memberdatastorage-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "57c9a621ba093e79f95a1047888414a8", "sha256": "3ba5afb6125c4b2fc7a44b9f6972548491db96099bee756812eaa4ab3bc75eb2"}, "downloads": -1, "filename": "archetypes.memberdatastorage-1.1.tar.gz", "has_sig": false, "md5_digest": "57c9a621ba093e79f95a1047888414a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5926, "upload_time": "2011-03-29T12:43:56", "upload_time_iso_8601": "2011-03-29T12:43:56.856784Z", "url": "https://files.pythonhosted.org/packages/f2/51/c3507dbda6b644f60094bd467a809adea106bda8127b4cc3005625203fb3/archetypes.memberdatastorage-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "57c9a621ba093e79f95a1047888414a8", "sha256": "3ba5afb6125c4b2fc7a44b9f6972548491db96099bee756812eaa4ab3bc75eb2"}, "downloads": -1, "filename": "archetypes.memberdatastorage-1.1.tar.gz", "has_sig": false, "md5_digest": "57c9a621ba093e79f95a1047888414a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5926, "upload_time": "2011-03-29T12:43:56", "upload_time_iso_8601": "2011-03-29T12:43:56.856784Z", "url": "https://files.pythonhosted.org/packages/f2/51/c3507dbda6b644f60094bd467a809adea106bda8127b4cc3005625203fb3/archetypes.memberdatastorage-1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:24 2020"}