{"info": {"author": "Nicolas Peugnet", "author_email": "n.peugnet@free.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Jellyfin Music Player\n\nAKA jfmp, a minimalist cross-platform gapless music player for Jellyfin.\n\n![screenshot 1](docs/screenshot_04.png)\n\n## Features/ToDo\n\n- [x] Gapless playback\n- [x] In-memory streaming + cache\n- [ ] Limit cache to a maximum size (LRU ? FIFO ?)\n- [ ] Lists\n  - [ ] List all with lazy loading (Check Qt possibilities)\n  - [ ] Songs\n  - [ ] Artists\n  - [ ] Sort lists (QTableWidgets ?)\n  - [ ] Filter (by Artist, Album, Genre)\n- [ ] Keyboard controls\n  - [ ] <kbd>A-Z</kbd> : Quick jump in sorted list\n  - [x] <kbd>Spacebar</kbd> : Play/Pause\n  - [x] <kbd>\ud83e\udc06</kbd> : Next\n  - [x] <kbd>Enter</kbd> : Play selected\n  - [x] <kbd>Ctrl</kbd>+<kbd>Tab</kbd> : Change tab\n- [ ] Search functionality\n- [ ] Playback bar with seek functionality\n- [ ] Queue managment\n  - [ ] Reorder queue\n  - [ ] Play next\n  - [ ] Add to Queue\n- [ ] Remote Jellyfin control\n- [ ] Desktop integration (using DBUS ? Needs research)\n- [ ] Packaging\n  - [ ] Debian\n  - [ ] Pip with Wheel dist\n\n## Install from sources\n\n### Requirements\n\nAs the wheel for music-player-core is not yet provided you have to build it yourself from sources, this is why you need these requirements:\n\n* boost >=1.55.0\n* ffmpeg >= 2.0 (including libswresample)\n* portaudio >=v19\n* chromaprint\n\n#### Debian and derivatives\n\n```bash\napt-get install python-dev libsnappy-dev libtool yasm libchromaprint-dev portaudio19-dev libboost-dev\n\n# FFmpeg\napt-get install libavformat-dev libavresample-dev\n```\n\n### Install and build\n\n    git clone https://github.com/n-peugnet/jfmp\n    pip install --user pipenv\n    pipenv install\n\n_Note: if you want to use your system theme you will have to symlink your virtualenv's `PySide2` folder to your system one. It is probably located around `/usr/lib/python3/dist-packages/PySide2`._\n\n### Run\n\n    pipenv run ./main.py\n\n## Built With\n\n-   [albertz/music-player-core](https://github.com/albertz/music-player-core)\n-   [iwalton3/jellyfin-apiclient-python](https://github.com/iwalton3/jellyfin-apiclient-python)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/n-peugnet/jfmp", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jfmp", "package_url": "https://pypi.org/project/jfmp/", "platform": "", "project_url": "https://pypi.org/project/jfmp/", "project_urls": {"Homepage": "https://github.com/n-peugnet/jfmp"}, "release_url": "https://pypi.org/project/jfmp/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A minimalist cross-platform gapless music player for Jellyfin", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Jellyfin Music Player</h1>\n<p>AKA jfmp, a minimalist cross-platform gapless music player for Jellyfin.</p>\n<p><img alt=\"screenshot 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e368271834a1c4566a42644f7f2aed96808b0702/646f63732f73637265656e73686f745f30342e706e67\"></p>\n<h2>Features/ToDo</h2>\n<ul>\n<li>[x] Gapless playback</li>\n<li>[x] In-memory streaming + cache</li>\n<li>[ ] Limit cache to a maximum size (LRU ? FIFO ?)</li>\n<li>[ ] Lists\n<ul>\n<li>[ ] List all with lazy loading (Check Qt possibilities)</li>\n<li>[ ] Songs</li>\n<li>[ ] Artists</li>\n<li>[ ] Sort lists (QTableWidgets ?)</li>\n<li>[ ] Filter (by Artist, Album, Genre)</li>\n</ul>\n</li>\n<li>[ ] Keyboard controls\n<ul>\n<li>[ ] <kbd>A-Z</kbd> : Quick jump in sorted list</li>\n<li>[x] <kbd>Spacebar</kbd> : Play/Pause</li>\n<li>[x] <kbd>\ud83e\udc06</kbd> : Next</li>\n<li>[x] <kbd>Enter</kbd> : Play selected</li>\n<li>[x] <kbd>Ctrl</kbd>+<kbd>Tab</kbd> : Change tab</li>\n</ul>\n</li>\n<li>[ ] Search functionality</li>\n<li>[ ] Playback bar with seek functionality</li>\n<li>[ ] Queue managment\n<ul>\n<li>[ ] Reorder queue</li>\n<li>[ ] Play next</li>\n<li>[ ] Add to Queue</li>\n</ul>\n</li>\n<li>[ ] Remote Jellyfin control</li>\n<li>[ ] Desktop integration (using DBUS ? Needs research)</li>\n<li>[ ] Packaging\n<ul>\n<li>[ ] Debian</li>\n<li>[ ] Pip with Wheel dist</li>\n</ul>\n</li>\n</ul>\n<h2>Install from sources</h2>\n<h3>Requirements</h3>\n<p>As the wheel for music-player-core is not yet provided you have to build it yourself from sources, this is why you need these requirements:</p>\n<ul>\n<li>boost &gt;=1.55.0</li>\n<li>ffmpeg &gt;= 2.0 (including libswresample)</li>\n<li>portaudio &gt;=v19</li>\n<li>chromaprint</li>\n</ul>\n<h4>Debian and derivatives</h4>\n<pre>apt-get install python-dev libsnappy-dev libtool yasm libchromaprint-dev portaudio19-dev libboost-dev\n\n<span class=\"c1\"># FFmpeg</span>\napt-get install libavformat-dev libavresample-dev\n</pre>\n<h3>Install and build</h3>\n<pre><code>git clone https://github.com/n-peugnet/jfmp\npip install --user pipenv\npipenv install\n</code></pre>\n<p><em>Note: if you want to use your system theme you will have to symlink your virtualenv's <code>PySide2</code> folder to your system one. It is probably located around <code>/usr/lib/python3/dist-packages/PySide2</code>.</em></p>\n<h3>Run</h3>\n<pre><code>pipenv run ./main.py\n</code></pre>\n<h2>Built With</h2>\n<ul>\n<li><a href=\"https://github.com/albertz/music-player-core\" rel=\"nofollow\">albertz/music-player-core</a></li>\n<li><a href=\"https://github.com/iwalton3/jellyfin-apiclient-python\" rel=\"nofollow\">iwalton3/jellyfin-apiclient-python</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6540272, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e3580924fff83085dd660d57e48593d5", "sha256": "a75fa261ec04513a06cb3720cdaa5fa6fe9b2c227b191a151816b55070931967"}, "downloads": -1, "filename": "jfmp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e3580924fff83085dd660d57e48593d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 119747, "upload_time": "2020-01-29T21:39:25", "upload_time_iso_8601": "2020-01-29T21:39:25.132955Z", "url": "https://files.pythonhosted.org/packages/76/ce/028fdbbee49389039d700a5b3eff526d91911a1ddaea67d4c3a8edb5e3cc/jfmp-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3580924fff83085dd660d57e48593d5", "sha256": "a75fa261ec04513a06cb3720cdaa5fa6fe9b2c227b191a151816b55070931967"}, "downloads": -1, "filename": "jfmp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e3580924fff83085dd660d57e48593d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 119747, "upload_time": "2020-01-29T21:39:25", "upload_time_iso_8601": "2020-01-29T21:39:25.132955Z", "url": "https://files.pythonhosted.org/packages/76/ce/028fdbbee49389039d700a5b3eff526d91911a1ddaea67d4c3a8edb5e3cc/jfmp-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:47 2020"}