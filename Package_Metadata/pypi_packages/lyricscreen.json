{"info": {"author": "Daniel \"lytedev\" Flanagan", "author_email": "daniel@lytedev.io", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Information Technology", "Intended Audience :: Religion", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Communications", "Topic :: Communications :: Conferencing", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Multimedia :: Graphics :: Viewers", "Topic :: Religion"], "description": "LyricScreen\n===========\n\nA probably-overkill and powerful way of managing lyrics or verse\ndisplays for concerts or church services.\n\n.. figure:: https://raw.githubusercontent.com/lytedev/lyricscreen/dev/docs/screenshots/Laptop-Mobile-screenshot-render.png\n   :alt: Glamour shot\n\n   Glamour shot\n\n**NOTE**: This project is under heavy development and is not recommended\nfor mission-critical functions. There isn't even a changelog at this\npoint since stuff is changing all the time, ok?!\n\nInstallation\n------------\n\npip\n~~~\n\nYou can get LyricScreen easily through PyPI! You can check out the\n`package page <https://pypi.python.org/pypi/lyricscreen>`__ or use\n`pip <https://pip.pypa.io/en/stable/>`__ as follows:\n\n.. code:: bash\n\n    pip install lyricscreen\n\n**NOTE**: Windows Users: When you run ``lyricscreen`` for the first\ntime, it will try to symlink the ``web_client`` which will fail unless\nyou run it in an elevated command prompt or as Administrator. So, when\nyou run it for the first time (per user), you will need to do so from a\ncommand prompt running as Administrator.\n\nGit\n~~~\n\nTo build from source:\n\n-  Clone this repo\n   (``git clone https://github.com/lytedev/lyricscreen``)\n-  Move into the directory (``cd lyricscreen``)\n-  Run the install script\n-  ``make install`` for the \\*nix folks (I hope)\n-  Windows users will have to run the following command (you'll need the\n   proper PATH setup to run Python from your command prompt!)\n   ``python setup.py bdist_msi`` and then run the newly built\n   ``dist/lyricscreen-X.X.X.win32.msi`` to install the program.\n\n**NOTE**: Windows Users: When you run ``lyricscreen`` for the first\ntime, it will try to symlink the ``web_client`` which will fail unless\nyou run it in an elevated command prompt or as Administrator. So, when\nyou run it for the first time (per user), you will need to do so from a\ncommand prompt running as Administrator.\n\nWindows Installer\n~~~~~~~~~~~~~~~~~\n\n**TODO**: Coming soon! I need to implement building this via wine on\nLinux and make it happen on PyPi updates. For now, refer to installation\nvia Git instructions on how to build a Windows installer.\n\nBasic Usage\n-----------\n\nCommand Line\n~~~~~~~~~~~~\n\nIf you installed LyricScreen through ``pip``, as long as your ``PATH``\nis properly configured, you should be able to just run ``lyricscreen``\nfrom your terminal. LyricScreen should automatically fire up and open a\nbrowser page with access to the web console. It's that simple!\n\n``lyricscreen --help`` will show all the command line flags and options.\n\nWindows Installation\n~~~~~~~~~~~~~~~~~~~~\n\n**TODO**: Windows installation usage. For now, you'll have to have\nPython scripts and such setup in your PATH and follow the Command line\nusage.\n\nConfiguration\n-------------\n\nGenerate the default config with ``lyricscreen --create-config``. It\nwill tell you the location of the generated default config file. Open\nthe file in your favorite text editor and modify the values to suit your\nneeds.\n\nThe command line binary accepts an argument pointing to your preferred\nconfig file if you require multiple configurations and switch between\nthem frequently.\n\nDevelopment\n-----------\n\nBackend\n~~~~~~~\n\nThe module is contained in the ``lyricscreen`` directory.\n\nWeb Client\n~~~~~~~~~~\n\nThe web client is found in the ``lyricscreen/http`` directory, but\nyou'll need to do a bit of setup to contribute properly. It runs on\n``lyricscreen/httpserver.py``, though it's capable of running through\nother HTTP servers such as Apache or nginx, since the web client is\nreally just some html files, stylesheets, and some fairly\nstraightforward JavaScript.\n\nTo get setup for contributing to the Web Client, you'll need the\nfollowing packages installed.\n\n-  ``npm`` **N**\\ ode **P**\\ ackage **M**\\ anager (You'll need\n   ``node.js`` installed)\n-  ``gulp`` Streaming build system (``npm install -g gulp``)\n-  ``bower`` Front-end package manager (``npm install -g bower``)\n\nOnce that's done, navigate to the web client directory\n(``lyricscreen/http``) and do the following to build the assets.\n\n.. code:: bash\n\n    npm install\n    bower install\n    gulp\n\nYou can also use ``gulp watch`` to continually build as changes are\nmade. If you use a LiveReload plugin, this also sends refresh messages\non file changes for a reload.\n\nIt's highly recommended to symlink the development directory's web\nclient to the directory LyricScreen uses by default by running this:\n\n::\n\n    ln -s \"$PWD/lyricscreen/http\" \"$HOME/.config/lyricscreen/web_client\"\n\nConcerns\n--------\n\n-  There is zero security currently implemented. Anyone could\n   theoretically open up their browser and open a console through your\n   http server and do whatever they want.\n-  Currently absolutely zero ease-of-use and UX. Eventual goal is run\n   the program and have everything pre configured and managable from one\n   interface without needing to edit configs or restart stuff. See TODO\n   list.\n\nTODO\n----\n\n-  Authentication info/system for console connections?\n-  Idea: on-run, prompt or generate an admin password, require initial\n   auth from \"console\" connections. Should be fine enough for short\n   term?\n-  Better UX for default web admin client\n-  More complex, optional song formatting options for fancier slides\n   (background images? text-align? Google fonts?)\n-  Playlist creation/saving/modification/loading/listing/viewing\n-  Song creation/saving/modification/loading/listing/viewing\n-  Always: prettier, better organized code (conform to Python code\n   standards and have properly formatted docstrings... or docstrings *at\n   all*)\n-  YAML config files as an option?\n-  Nice introduction page for users on web client", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lytedev/lyricscreen", "keywords": "lyrics lyric display presentation project projector", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "lyricscreen", "package_url": "https://pypi.org/project/lyricscreen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lyricscreen/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/lytedev/lyricscreen"}, "release_url": "https://pypi.org/project/lyricscreen/0.6.10/", "requires_dist": null, "requires_python": null, "summary": "A lyrics management and display web app and server.", "version": "0.6.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A probably-overkill and powerful way of managing lyrics or verse\ndisplays for concerts or church services.</p>\n<div>\n<img alt=\"Glamour shot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1e2b771e9b922c0acdb3deaa3dbd93a6d2ee429/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c7974656465762f6c7972696373637265656e2f6465762f646f63732f73637265656e73686f74732f4c6170746f702d4d6f62696c652d73637265656e73686f742d72656e6465722e706e67\">\n<p>Glamour shot</p>\n</div>\n<p><strong>NOTE</strong>: This project is under heavy development and is not recommended\nfor mission-critical functions. There isn\u2019t even a changelog at this\npoint since stuff is changing all the time, ok?!</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"pip\">\n<h3>pip</h3>\n<p>You can get LyricScreen easily through PyPI! You can check out the\n<a href=\"https://pypi.python.org/pypi/lyricscreen\" rel=\"nofollow\">package page</a> or use\n<a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> as follows:</p>\n<pre>pip install lyricscreen\n</pre>\n<p><strong>NOTE</strong>: Windows Users: When you run <tt>lyricscreen</tt> for the first\ntime, it will try to symlink the <tt>web_client</tt> which will fail unless\nyou run it in an elevated command prompt or as Administrator. So, when\nyou run it for the first time (per user), you will need to do so from a\ncommand prompt running as Administrator.</p>\n</div>\n<div id=\"git\">\n<h3>Git</h3>\n<p>To build from source:</p>\n<ul>\n<li>Clone this repo\n(<tt>git clone <span class=\"pre\">https://github.com/lytedev/lyricscreen</span></tt>)</li>\n<li>Move into the directory (<tt>cd lyricscreen</tt>)</li>\n<li>Run the install script</li>\n<li><tt>make install</tt> for the *nix folks (I hope)</li>\n<li>Windows users will have to run the following command (you\u2019ll need the\nproper PATH setup to run Python from your command prompt!)\n<tt>python setup.py bdist_msi</tt> and then run the newly built\n<tt><span class=\"pre\">dist/lyricscreen-X.X.X.win32.msi</span></tt> to install the program.</li>\n</ul>\n<p><strong>NOTE</strong>: Windows Users: When you run <tt>lyricscreen</tt> for the first\ntime, it will try to symlink the <tt>web_client</tt> which will fail unless\nyou run it in an elevated command prompt or as Administrator. So, when\nyou run it for the first time (per user), you will need to do so from a\ncommand prompt running as Administrator.</p>\n</div>\n<div id=\"windows-installer\">\n<h3>Windows Installer</h3>\n<p><strong>TODO</strong>: Coming soon! I need to implement building this via wine on\nLinux and make it happen on PyPi updates. For now, refer to installation\nvia Git instructions on how to build a Windows installer.</p>\n</div>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<div id=\"command-line\">\n<h3>Command Line</h3>\n<p>If you installed LyricScreen through <tt>pip</tt>, as long as your <tt>PATH</tt>\nis properly configured, you should be able to just run <tt>lyricscreen</tt>\nfrom your terminal. LyricScreen should automatically fire up and open a\nbrowser page with access to the web console. It\u2019s that simple!</p>\n<p><tt>lyricscreen <span class=\"pre\">--help</span></tt> will show all the command line flags and options.</p>\n</div>\n<div id=\"windows-installation\">\n<h3>Windows Installation</h3>\n<p><strong>TODO</strong>: Windows installation usage. For now, you\u2019ll have to have\nPython scripts and such setup in your PATH and follow the Command line\nusage.</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Generate the default config with <tt>lyricscreen <span class=\"pre\">--create-config</span></tt>. It\nwill tell you the location of the generated default config file. Open\nthe file in your favorite text editor and modify the values to suit your\nneeds.</p>\n<p>The command line binary accepts an argument pointing to your preferred\nconfig file if you require multiple configurations and switch between\nthem frequently.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<div id=\"backend\">\n<h3>Backend</h3>\n<p>The module is contained in the <tt>lyricscreen</tt> directory.</p>\n</div>\n<div id=\"web-client\">\n<h3>Web Client</h3>\n<p>The web client is found in the <tt>lyricscreen/http</tt> directory, but\nyou\u2019ll need to do a bit of setup to contribute properly. It runs on\n<tt>lyricscreen/httpserver.py</tt>, though it\u2019s capable of running through\nother HTTP servers such as Apache or nginx, since the web client is\nreally just some html files, stylesheets, and some fairly\nstraightforward JavaScript.</p>\n<p>To get setup for contributing to the Web Client, you\u2019ll need the\nfollowing packages installed.</p>\n<ul>\n<li><tt>npm</tt> <strong>N</strong>ode <strong>P</strong>ackage <strong>M</strong>anager (You\u2019ll need\n<tt>node.js</tt> installed)</li>\n<li><tt>gulp</tt> Streaming build system (<tt>npm install <span class=\"pre\">-g</span> gulp</tt>)</li>\n<li><tt>bower</tt> Front-end package manager (<tt>npm install <span class=\"pre\">-g</span> bower</tt>)</li>\n</ul>\n<p>Once that\u2019s done, navigate to the web client directory\n(<tt>lyricscreen/http</tt>) and do the following to build the assets.</p>\n<pre>npm install\nbower install\ngulp\n</pre>\n<p>You can also use <tt>gulp watch</tt> to continually build as changes are\nmade. If you use a LiveReload plugin, this also sends refresh messages\non file changes for a reload.</p>\n<p>It\u2019s highly recommended to symlink the development directory\u2019s web\nclient to the directory LyricScreen uses by default by running this:</p>\n<pre>ln -s \"$PWD/lyricscreen/http\" \"$HOME/.config/lyricscreen/web_client\"\n</pre>\n</div>\n</div>\n<div id=\"concerns\">\n<h2>Concerns</h2>\n<ul>\n<li>There is zero security currently implemented. Anyone could\ntheoretically open up their browser and open a console through your\nhttp server and do whatever they want.</li>\n<li>Currently absolutely zero ease-of-use and UX. Eventual goal is run\nthe program and have everything pre configured and managable from one\ninterface without needing to edit configs or restart stuff. See TODO\nlist.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Authentication info/system for console connections?</li>\n<li>Idea: on-run, prompt or generate an admin password, require initial\nauth from \u201cconsole\u201d connections. Should be fine enough for short\nterm?</li>\n<li>Better UX for default web admin client</li>\n<li>More complex, optional song formatting options for fancier slides\n(background images? text-align? Google fonts?)</li>\n<li>Playlist creation/saving/modification/loading/listing/viewing</li>\n<li>Song creation/saving/modification/loading/listing/viewing</li>\n<li>Always: prettier, better organized code (conform to Python code\nstandards and have properly formatted docstrings\u2026 or docstrings <em>at\nall</em>)</li>\n<li>YAML config files as an option?</li>\n<li>Nice introduction page for users on web client</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1712191, "releases": {"0.5.1": [], "0.5.10": [{"comment_text": "", "digests": {"md5": "d6f1886304c846b6758278b2467388bc", "sha256": "b96ba911fb94718dfc26dc53007e5b762e478cc2be1353c226221a7760cc24f7"}, "downloads": -1, "filename": "lyricscreen-0.5.10.tar.gz", "has_sig": false, "md5_digest": "d6f1886304c846b6758278b2467388bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427272, "upload_time": "2015-05-12T22:33:21", "upload_time_iso_8601": "2015-05-12T22:33:21.380526Z", "url": "https://files.pythonhosted.org/packages/d1/8e/94d69771fbac371fa479d333850aeb58e33ee873e755fc302828152f2e9d/lyricscreen-0.5.10.tar.gz", "yanked": false}], "0.5.11": [{"comment_text": "", "digests": {"md5": "3937d465e1e329294e64f35e61d6479c", "sha256": "77b6d9b0cba7190484a9b3c910243cb1487acfc820e3569b23ac08a875845811"}, "downloads": -1, "filename": "lyricscreen-0.5.11.tar.gz", "has_sig": false, "md5_digest": "3937d465e1e329294e64f35e61d6479c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427273, "upload_time": "2015-05-12T22:35:23", "upload_time_iso_8601": "2015-05-12T22:35:23.724375Z", "url": "https://files.pythonhosted.org/packages/be/6d/35d2ec8f352f205c6413ec0c3bddca21fa51004c13afa34698b3f16c5d1e/lyricscreen-0.5.11.tar.gz", "yanked": false}], "0.5.12": [{"comment_text": "", "digests": {"md5": "11e5a9eaf9f768e582c783144f3f9fb1", "sha256": "d1764468e6cd7c6851d14d9f8571aab0b47cc9d8baa07ee6fe37278ead771160"}, "downloads": -1, "filename": "lyricscreen-0.5.12.tar.gz", "has_sig": false, "md5_digest": "11e5a9eaf9f768e582c783144f3f9fb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 396425, "upload_time": "2015-05-12T22:36:35", "upload_time_iso_8601": "2015-05-12T22:36:35.436865Z", "url": "https://files.pythonhosted.org/packages/ec/a7/356898b4a59f646eb7bd693f8943e3dbc7e98b51253db431cb545dc338da/lyricscreen-0.5.12.tar.gz", "yanked": false}], "0.5.13": [{"comment_text": "", "digests": {"md5": "2bef7293e488afd8978f7084128561ad", "sha256": "bb17bc69c27e36d80e4d5f595a07811f79bd40bfb9a1ea34f69c9238bc120eb9"}, "downloads": -1, "filename": "lyricscreen-0.5.13.tar.gz", "has_sig": false, "md5_digest": "2bef7293e488afd8978f7084128561ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427473, "upload_time": "2015-05-13T01:27:28", "upload_time_iso_8601": "2015-05-13T01:27:28.427210Z", "url": "https://files.pythonhosted.org/packages/23/e0/5ae5128b4e889b3e97d0056a13a680de52fb3a61af24f4128b50001b1935/lyricscreen-0.5.13.tar.gz", "yanked": false}], "0.5.14": [{"comment_text": "", "digests": {"md5": "1e7527ac1bc82336d160c35302059c44", "sha256": "2995a8fd2ffe1608244460da38778f1d62067ead1d0c5ca7ce4e95570ae4c25f"}, "downloads": -1, "filename": "lyricscreen-0.5.14.tar.gz", "has_sig": false, "md5_digest": "1e7527ac1bc82336d160c35302059c44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427470, "upload_time": "2015-05-13T01:28:32", "upload_time_iso_8601": "2015-05-13T01:28:32.426534Z", "url": "https://files.pythonhosted.org/packages/fe/7c/3a351388071cae4cbc5177611800f5a6f25ae025cf6ae966075c8d525f8a/lyricscreen-0.5.14.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "2f40d6eb1c8aeb33c7d4da75bd31e86a", "sha256": "8272afbddf03cf82ec0a72a471fdbaf187c0424c5c9bd9afd11f76b318c84e8c"}, "downloads": -1, "filename": "lyricscreen-0.5.2.tar.gz", "has_sig": false, "md5_digest": "2f40d6eb1c8aeb33c7d4da75bd31e86a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 393266, "upload_time": "2015-05-11T21:32:36", "upload_time_iso_8601": "2015-05-11T21:32:36.229415Z", "url": "https://files.pythonhosted.org/packages/74/17/80647501bc234f4c495198b87e40066f0ab0a5485521dce972c0093fbfa0/lyricscreen-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "a2dbef95c1a54af85eb97b2fb97036e5", "sha256": "94ce9ee8c99ac89782ca78d3b8fd14786ae6fee78818a5fd462ff68c9fd0fd9a"}, "downloads": -1, "filename": "lyricscreen-0.5.3.tar.gz", "has_sig": false, "md5_digest": "a2dbef95c1a54af85eb97b2fb97036e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14418, "upload_time": "2015-05-11T21:38:33", "upload_time_iso_8601": "2015-05-11T21:38:33.132229Z", "url": "https://files.pythonhosted.org/packages/f2/78/8c44ea4649ec1ea475692ee15b8690df5bf2ee91fae8f898be0e60cd0469/lyricscreen-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "9d0e055f72f40726a531e5e74536a676", "sha256": "1bb63c3fdc89f9f0ea9118d2edae032f366fb827b477a6cc01e1f68c48684fcb"}, "downloads": -1, "filename": "lyricscreen-0.5.4.tar.gz", "has_sig": false, "md5_digest": "9d0e055f72f40726a531e5e74536a676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 395144, "upload_time": "2015-05-11T21:42:41", "upload_time_iso_8601": "2015-05-11T21:42:41.611954Z", "url": "https://files.pythonhosted.org/packages/ef/f0/dd29db157a79b4cdac15ec6796e3b07ecb267b4ec87e971c135a892c6f92/lyricscreen-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "fd90a5e64b76c20bf8f3f1d7a581fe0c", "sha256": "518706c50d4acb9b7900e721b8a0e069a14c8f707ae69b22858bd452e28afa91"}, "downloads": -1, "filename": "lyricscreen-0.5.5.tar.gz", "has_sig": false, "md5_digest": "fd90a5e64b76c20bf8f3f1d7a581fe0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 395143, "upload_time": "2015-05-11T21:48:56", "upload_time_iso_8601": "2015-05-11T21:48:56.507246Z", "url": "https://files.pythonhosted.org/packages/36/c3/ba4006762828e0a24232a5270cf4c09dcf524092f992042d0076918b680c/lyricscreen-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "10c9de560bb103c04bd170a8aa48f1e2", "sha256": "151b244f97d83229585d50591f6028e93e9d0d533edd53877a1617e8d09cea76"}, "downloads": -1, "filename": "lyricscreen-0.5.6.tar.gz", "has_sig": false, "md5_digest": "10c9de560bb103c04bd170a8aa48f1e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 383081, "upload_time": "2015-05-12T21:34:43", "upload_time_iso_8601": "2015-05-12T21:34:43.596718Z", "url": "https://files.pythonhosted.org/packages/e1/54/f6f4ea86ae1c9c42f2d741f28442fa979c8d297b6e3e52f6b51d503df427/lyricscreen-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "4c78dd453024679b0b6aa47bb4137ee8", "sha256": "e5cf331c339963e56048036dfbae4b0b7134564fd7f3113d4d24f21f425d057c"}, "downloads": -1, "filename": "lyricscreen-0.5.7.tar.gz", "has_sig": false, "md5_digest": "4c78dd453024679b0b6aa47bb4137ee8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 383070, "upload_time": "2015-05-12T21:36:48", "upload_time_iso_8601": "2015-05-12T21:36:48.032259Z", "url": "https://files.pythonhosted.org/packages/04/67/0e872445a78e2ea3a9f651579401a416019649a0b9084888c084b1507e87/lyricscreen-0.5.7.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "2552cbe0711e830256e285ccd13e45e2", "sha256": "343d9ca1d053ae863667dc9ed90bb86d17077780e492ce4f73111c40323485b8"}, "downloads": -1, "filename": "lyricscreen-0.5.8.tar.gz", "has_sig": false, "md5_digest": "2552cbe0711e830256e285ccd13e45e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 397981, "upload_time": "2015-05-12T21:48:15", "upload_time_iso_8601": "2015-05-12T21:48:15.272253Z", "url": "https://files.pythonhosted.org/packages/a5/d5/75593cb6e4db0d5cc732a4f56c827198c38e624f76f21d51d3f30ea3d822/lyricscreen-0.5.8.tar.gz", "yanked": false}], "0.5.9": [{"comment_text": "", "digests": {"md5": "7c100dc6a5f1ac8971b37c6471c19dbe", "sha256": "b51b08c15410acb01be5f98ff21a22e83c5c08f43f55fa580fd57722250a042e"}, "downloads": -1, "filename": "lyricscreen-0.5.9.tar.gz", "has_sig": false, "md5_digest": "7c100dc6a5f1ac8971b37c6471c19dbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 398467, "upload_time": "2015-05-12T22:11:45", "upload_time_iso_8601": "2015-05-12T22:11:45.968431Z", "url": "https://files.pythonhosted.org/packages/f2/7f/f824f9d39d20693311b3d0ca55ca0f79fa79d5d9f8bda426eee422fed5ca/lyricscreen-0.5.9.tar.gz", "yanked": false}], "0.6.0": [], "0.6.1": [], "0.6.10": [], "0.6.2": [{"comment_text": "", "digests": {"md5": "a9810a68cbed168379f76accadf0780f", "sha256": "15ea8deee07419172da84459e3d3f5463d982b152f145afd0e8963e2c2b10612"}, "downloads": -1, "filename": "lyricscreen-0.6.2.tar.gz", "has_sig": false, "md5_digest": "a9810a68cbed168379f76accadf0780f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 423663, "upload_time": "2015-08-18T04:24:06", "upload_time_iso_8601": "2015-08-18T04:24:06.010508Z", "url": "https://files.pythonhosted.org/packages/bd/76/2ca7d0191f7ceb78bbefa432eb012ed6f1997484965ca4ed1726df76b2b9/lyricscreen-0.6.2.tar.gz", "yanked": false}], "0.6.3": [], "0.6.4": [{"comment_text": "", "digests": {"md5": "d0fb75d64c81dd7f3d52e513e684aa4b", "sha256": "f675ebe560104c0dfe80bc9dd4caef1f77d8291543261c21cabbd48dac8ba794"}, "downloads": -1, "filename": "lyricscreen-0.6.4.tar.gz", "has_sig": false, "md5_digest": "d0fb75d64c81dd7f3d52e513e684aa4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 423640, "upload_time": "2015-08-18T04:31:22", "upload_time_iso_8601": "2015-08-18T04:31:22.602597Z", "url": "https://files.pythonhosted.org/packages/c6/ea/d7e991ebf53ebe1389272491d801f6227b48e38db3dfd2f9b89b1251de21/lyricscreen-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "a8092e2df52a2dc93d59a274cc813858", "sha256": "601265b583d9001d259488ef13f131cb943e40892c72bb964a0c10d299287e78"}, "downloads": -1, "filename": "lyricscreen-0.6.5.tar.gz", "has_sig": false, "md5_digest": "a8092e2df52a2dc93d59a274cc813858", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 423622, "upload_time": "2015-08-18T04:33:13", "upload_time_iso_8601": "2015-08-18T04:33:13.239305Z", "url": "https://files.pythonhosted.org/packages/7f/bb/991fe5a4498ca851c6fc4432cb99fe1792a7428855f3165e4bd0dea52864/lyricscreen-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "7e8f77b7c7ab73b5c3aa4ea57037d8a3", "sha256": "5a45e7eb4b7fdc30ea6d68aefcb63cf9c691ba43c7052c18c36f65dbc74aa829"}, "downloads": -1, "filename": "lyricscreen-0.6.6.tar.gz", "has_sig": false, "md5_digest": "7e8f77b7c7ab73b5c3aa4ea57037d8a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 424259, "upload_time": "2015-08-18T04:40:34", "upload_time_iso_8601": "2015-08-18T04:40:34.259882Z", "url": "https://files.pythonhosted.org/packages/66/a7/492a7ea574f3a4bb0d7e74c5d5cd0e498e9e6db5794ae4b49ea76b5783d5/lyricscreen-0.6.6.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "4be508913764f61f8c79a53a35fd42c3", "sha256": "75af1b49413be8e415b8d7fecb155db66adeff77f48e2e178442e69891979138"}, "downloads": -1, "filename": "lyricscreen-0.6.7.tar.gz", "has_sig": false, "md5_digest": "4be508913764f61f8c79a53a35fd42c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 424697, "upload_time": "2015-08-18T05:13:58", "upload_time_iso_8601": "2015-08-18T05:13:58.128913Z", "url": "https://files.pythonhosted.org/packages/90/2c/46625a865060ac5ba1eef88dfd3faac74ca2470f39cbc72f66b53608e25a/lyricscreen-0.6.7.tar.gz", "yanked": false}], "0.6.8": [{"comment_text": "", "digests": {"md5": "888cf33606447ea034940e25b9885b35", "sha256": "3e6be30f31ed03fdd72aeac6f827aa092517112547251105f09e46384fb25e3b"}, "downloads": -1, "filename": "lyricscreen-0.6.8.tar.gz", "has_sig": false, "md5_digest": "888cf33606447ea034940e25b9885b35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 424714, "upload_time": "2015-08-18T05:42:02", "upload_time_iso_8601": "2015-08-18T05:42:02.554761Z", "url": "https://files.pythonhosted.org/packages/d8/e7/d412b2e516e3417f5e59387f689db28da8ffcca085eeccb2a77268bcd7b6/lyricscreen-0.6.8.tar.gz", "yanked": false}], "0.6.9": [{"comment_text": "", "digests": {"md5": "31e4a0bdf1b42aad480e3c31ff81d676", "sha256": "9669900422f35ebdd8f5210aecdd593c81b50b7b751ac20bd0f49153804ce785"}, "downloads": -1, "filename": "lyricscreen-0.6.9.tar.gz", "has_sig": false, "md5_digest": "31e4a0bdf1b42aad480e3c31ff81d676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 425008, "upload_time": "2015-08-18T05:46:11", "upload_time_iso_8601": "2015-08-18T05:46:11.331898Z", "url": "https://files.pythonhosted.org/packages/02/da/add760bb06a602a30c0cf413811a3670499d642d522d5e0be746f2b1e035/lyricscreen-0.6.9.tar.gz", "yanked": false}]}, "urls": [], "timestamp": "Fri May  8 00:42:42 2020"}