{"info": {"author": "InfrasCloudy, @allanice001", "author_email": "support@linaccess.za.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Admin\n===========\n\nThis is a clone of https://github.com/flask-admin/flask-admin for flaskpress.\n\nIntroduction\n------------\n\nFlask-Admin is a batteries-included, simple-to-use `Flask <http://flask.pocoo.org/>`_ extension that lets you\nadd admin interfaces to Flask applications. It is inspired by the *django-admin* package, but implemented in such\na way that the developer has total control of the look, feel and functionality of the resulting application.\n\nOut-of-the-box, Flask-Admin plays nicely with various ORM's, including\n\n- `SQLAlchemy <http://www.sqlalchemy.org/>`_,\n\n- `MongoEngine <http://mongoengine.org/>`_,\n\n- `pymongo <http://api.mongodb.org/python/current/>`_ and\n\n- `Peewee <https://github.com/coleifer/peewee>`_.\n\nIt also boasts a simple file management interface and a `redis client <http://redis.io/>`_ console.\n\nThe biggest feature of Flask-Admin is flexibility. It aims to provide a set of simple tools that can be used for\nbuilding admin interfaces of any complexity. So, to start off with you can create a very simple application in no time,\nwith auto-generated CRUD-views for each of your models. But then you can go further and customize those views & forms\nas the need arises.\n\nFlask-Admin is an active project, well-tested and production ready.\n\nExamples\n--------\nSeveral usage examples are included in the */examples* folder. Please feel free to add your own examples, or improve\non some of the existing ones, and then submit them via GitHub as a *pull-request*.\n\nYou can see some of these examples in action at `http://examples.flask-admin.org <http://examples.flask-admin.org/>`_.\nTo run the examples on your local environment, one at a time, do something like::\n\n    cd flask-admin\n    python examples/simple/app.py\n\n\nDocumentation\n-------------\nFlask-Admin is extensively documented, you can find all of the documentation at `https://flask-admin.readthedocs.io/en/latest/ <https://flask-admin.readthedocs.io/en/latest/>`_.\n\nThe docs are auto-generated from the *.rst* files in the */doc* folder. So if you come across any errors, or\nif you think of anything else that should be included, then please make the changes and submit them as a *pull-request*.\n\nTo build the docs in your local environment, from the project directory::\n\n    pip install -r requirements-dev.txt\n    sudo make html\n\nAnd if you want to preview any *.rst* snippets that you may want to contribute, go to `http://rst.ninjs.org/ <http://rst.ninjs.org/>`_.\n\nInstallation\n------------\nTo install Flask-Admin, simply::\n\n    pip install flask-admin\n\nOr alternatively, you can download the repository and install manually by doing::\n\n    git clone git@github.com:flask-admin/flask-admin.git\n    cd flask-admin\n    python setup.py install\n\nTests\n-----\nTest are run with *nose*. If you are not familiar with this package you can get some more info from `their website <https://nose.readthedocs.io/>`_.\n\nTo run the tests, from the project directory, simply::\n\n    pip install -r requirements-dev.txt\n    nosetests\n\nYou should see output similar to::\n\n    .............................................\n    ----------------------------------------------------------------------\n    Ran 102 tests in 13.132s\n\n    OK\n\nFor all the tests to pass successfully, you'll need Postgres & MongoDB to be running locally. For Postgres::\n\n    CREATE DATABASE flask_admin_test;\n    CREATE EXTENSION postgis;\n\n3rd Party Stuff\n---------------\n\nFlask-Admin is built with the help of `Bootstrap <http://getbootstrap.com/>`_ and `Select2 <https://github.com/ivaynberg/select2>`_.\n\nIf you want to localize your application, install the `Flask-BabelEx <https://pypi.python.org/pypi/Flask-BabelEx>`_ package.\n\nYou can help improve Flask-Admin's translations through Crowdin: https://crowdin.com/project/flask-admin\n\n\nChangelog\n=========\n\n1.4.2\n-----\n\n* Small bug fix release. Fixes regression that prevented usage of \"virtual\" columns with a custom formatter.\n\n1.4.1\n-----\n\n* Official Python 3.5 support\n* Customizable row actions\n* Tablib support (exporting to XLS, XLSX, CSV, etc)\n* Updated external dependencies (jQuery, x-editable, etc)\n* Added settings that allows exceptions to be raised on view errors\n* Bug fixes\n\n1.4.0\n-----\n\n* Updated and reworked documentation\n* FileAdmin went through minor refactoring and now supports remote file systems. Comes with the new, optional, AWS S3 file management interface\n* Configurable CSV export for model views\n* Added overridable URL generation logic. Allows using custom URLs with parameters for administrative views\n* Added column_display_actions to ModelView control visibility of the action column without overriding the template\n* Added support for the latest MongoEngine\n* New SecureForm base class for easier CSRF validation\n* Lots of translation-related fixes and updated translations\n* Bug fixes\n\n1.3.0\n-----\n\n* New feature: Edit models in the list view in a popup\n* New feature: Read-only model details view\n* Fixed XSS in column_editable_list values\n* Improved navigation consistency in model create and edit views\n* Ability to choose page size in model list view\n* Updated client-side dependencies (jQuery, Select2, etc)\n* Updated documentation and examples\n* Updated translations\n* Bug fixes\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/infrascloudy/flaskpress-flask-admin", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "flaskpress-flask-admin", "package_url": "https://pypi.org/project/flaskpress-flask-admin/", "platform": "any", "project_url": "https://pypi.org/project/flaskpress-flask-admin/", "project_urls": {"Homepage": "https://github.com/infrascloudy/flaskpress-flask-admin"}, "release_url": "https://pypi.org/project/flaskpress-flask-admin/1.4.2.2/", "requires_dist": ["Flask (>=0.7)", "wtforms"], "requires_python": "", "summary": "Fork of Flask-Admin for flaskpress", "version": "1.4.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"flask-admin\">\n<h2>Flask-Admin</h2>\n<p>This is a clone of <a href=\"https://github.com/flask-admin/flask-admin\" rel=\"nofollow\">https://github.com/flask-admin/flask-admin</a> for flaskpress.</p>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>Flask-Admin is a batteries-included, simple-to-use <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> extension that lets you\nadd admin interfaces to Flask applications. It is inspired by the <em>django-admin</em> package, but implemented in such\na way that the developer has total control of the look, feel and functionality of the resulting application.</p>\n<p>Out-of-the-box, Flask-Admin plays nicely with various ORM\u2019s, including</p>\n<ul>\n<li><a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a>,</li>\n<li><a href=\"http://mongoengine.org/\" rel=\"nofollow\">MongoEngine</a>,</li>\n<li><a href=\"http://api.mongodb.org/python/current/\" rel=\"nofollow\">pymongo</a> and</li>\n<li><a href=\"https://github.com/coleifer/peewee\" rel=\"nofollow\">Peewee</a>.</li>\n</ul>\n<p>It also boasts a simple file management interface and a <a href=\"http://redis.io/\" rel=\"nofollow\">redis client</a> console.</p>\n<p>The biggest feature of Flask-Admin is flexibility. It aims to provide a set of simple tools that can be used for\nbuilding admin interfaces of any complexity. So, to start off with you can create a very simple application in no time,\nwith auto-generated CRUD-views for each of your models. But then you can go further and customize those views &amp; forms\nas the need arises.</p>\n<p>Flask-Admin is an active project, well-tested and production ready.</p>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Several usage examples are included in the <em>/examples</em> folder. Please feel free to add your own examples, or improve\non some of the existing ones, and then submit them via GitHub as a <em>pull-request</em>.</p>\n<p>You can see some of these examples in action at <a href=\"http://examples.flask-admin.org/\" rel=\"nofollow\">http://examples.flask-admin.org</a>.\nTo run the examples on your local environment, one at a time, do something like:</p>\n<pre>cd flask-admin\npython examples/simple/app.py\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Flask-Admin is extensively documented, you can find all of the documentation at <a href=\"https://flask-admin.readthedocs.io/en/latest/\" rel=\"nofollow\">https://flask-admin.readthedocs.io/en/latest/</a>.</p>\n<p>The docs are auto-generated from the <em>.rst</em> files in the <em>/doc</em> folder. So if you come across any errors, or\nif you think of anything else that should be included, then please make the changes and submit them as a <em>pull-request</em>.</p>\n<p>To build the docs in your local environment, from the project directory:</p>\n<pre>pip install -r requirements-dev.txt\nsudo make html\n</pre>\n<p>And if you want to preview any <em>.rst</em> snippets that you may want to contribute, go to <a href=\"http://rst.ninjs.org/\" rel=\"nofollow\">http://rst.ninjs.org/</a>.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install Flask-Admin, simply:</p>\n<pre>pip install flask-admin\n</pre>\n<p>Or alternatively, you can download the repository and install manually by doing:</p>\n<pre>git clone git@github.com:flask-admin/flask-admin.git\ncd flask-admin\npython setup.py install\n</pre>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>Test are run with <em>nose</em>. If you are not familiar with this package you can get some more info from <a href=\"https://nose.readthedocs.io/\" rel=\"nofollow\">their website</a>.</p>\n<p>To run the tests, from the project directory, simply:</p>\n<pre>pip install -r requirements-dev.txt\nnosetests\n</pre>\n<p>You should see output similar to:</p>\n<pre>.............................................\n----------------------------------------------------------------------\nRan 102 tests in 13.132s\n\nOK\n</pre>\n<p>For all the tests to pass successfully, you\u2019ll need Postgres &amp; MongoDB to be running locally. For Postgres:</p>\n<pre>CREATE DATABASE flask_admin_test;\nCREATE EXTENSION postgis;\n</pre>\n</div>\n<div id=\"rd-party-stuff\">\n<h3>3rd Party Stuff</h3>\n<p>Flask-Admin is built with the help of <a href=\"http://getbootstrap.com/\" rel=\"nofollow\">Bootstrap</a> and <a href=\"https://github.com/ivaynberg/select2\" rel=\"nofollow\">Select2</a>.</p>\n<p>If you want to localize your application, install the <a href=\"https://pypi.python.org/pypi/Flask-BabelEx\" rel=\"nofollow\">Flask-BabelEx</a> package.</p>\n<p>You can help improve Flask-Admin\u2019s translations through Crowdin: <a href=\"https://crowdin.com/project/flask-admin\" rel=\"nofollow\">https://crowdin.com/project/flask-admin</a></p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.4.2</h3>\n<ul>\n<li>Small bug fix release. Fixes regression that prevented usage of \u201cvirtual\u201d columns with a custom formatter.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.4.1</h3>\n<ul>\n<li>Official Python 3.5 support</li>\n<li>Customizable row actions</li>\n<li>Tablib support (exporting to XLS, XLSX, CSV, etc)</li>\n<li>Updated external dependencies (jQuery, x-editable, etc)</li>\n<li>Added settings that allows exceptions to be raised on view errors</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.4.0</h3>\n<ul>\n<li>Updated and reworked documentation</li>\n<li>FileAdmin went through minor refactoring and now supports remote file systems. Comes with the new, optional, AWS S3 file management interface</li>\n<li>Configurable CSV export for model views</li>\n<li>Added overridable URL generation logic. Allows using custom URLs with parameters for administrative views</li>\n<li>Added column_display_actions to ModelView control visibility of the action column without overriding the template</li>\n<li>Added support for the latest MongoEngine</li>\n<li>New SecureForm base class for easier CSRF validation</li>\n<li>Lots of translation-related fixes and updated translations</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.3.0</h3>\n<ul>\n<li>New feature: Edit models in the list view in a popup</li>\n<li>New feature: Read-only model details view</li>\n<li>Fixed XSS in column_editable_list values</li>\n<li>Improved navigation consistency in model create and edit views</li>\n<li>Ability to choose page size in model list view</li>\n<li>Updated client-side dependencies (jQuery, Select2, etc)</li>\n<li>Updated documentation and examples</li>\n<li>Updated translations</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2976119, "releases": {"1.4.2.2": [{"comment_text": "", "digests": {"md5": "d0b7fac3425a57b0c6b1d515276c14ca", "sha256": "eb5595b76ba179be0c73a7bf01b4f226032d4f90fd7fc8cc2b4a4532ad19d703"}, "downloads": -1, "filename": "flaskpress_flask_admin-1.4.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d0b7fac3425a57b0c6b1d515276c14ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 199512, "upload_time": "2017-06-24T18:16:45", "upload_time_iso_8601": "2017-06-24T18:16:45.357905Z", "url": "https://files.pythonhosted.org/packages/16/c7/8cc15590b5017c4d8ae7efe54616941eff66ba26457f67eb2f99c57ef603/flaskpress_flask_admin-1.4.2.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d0b7fac3425a57b0c6b1d515276c14ca", "sha256": "eb5595b76ba179be0c73a7bf01b4f226032d4f90fd7fc8cc2b4a4532ad19d703"}, "downloads": -1, "filename": "flaskpress_flask_admin-1.4.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d0b7fac3425a57b0c6b1d515276c14ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 199512, "upload_time": "2017-06-24T18:16:45", "upload_time_iso_8601": "2017-06-24T18:16:45.357905Z", "url": "https://files.pythonhosted.org/packages/16/c7/8cc15590b5017c4d8ae7efe54616941eff66ba26457f67eb2f99c57ef603/flaskpress_flask_admin-1.4.2.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:02:31 2020"}