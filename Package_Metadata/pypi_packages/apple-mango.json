{"info": {"author": "Jun Young Lee", "author_email": "legshort@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# Light weight BDD Pattern\n\n## Installation\n* `pip install apple-mango`\n\n## Goal\n* Easy to Use\n* Compatible with Python unittest\n* Compatible with existing test code\n* Support Python3\n\n## Next Step\n* Register to pypi\n* Add CI\n* Support pytest\n\n## Usage\n* Define regular test class\n* Define regular test method with `@mango.given()`\n* Define inner `when` method with `@mango.when()`\n* Define inner `then` method with `@mango.then()`\n* Run python test: `python -m unittest test_file.py`\n* No need to call inner `when` and `then` method becuase `given(), when(), then()` decorators will take care of it\n\n### Example\n```python\n# test_exampel.py\n\nclass MangoUseCase(TestCase):\n    def setUp(self):\n        self.user = 'jun'\n\n    @mango.given('I am logged-in user')\n    def test_profile(self):\n        self.given.user_profile = 'my_profile'\n        self.given.user_photo = 'my_photo'\n\n        self.given.notifications_count = 3\n        self.given.unread_notifications_count = 1\n\n        @mango.when('I click profile')\n        def when_click_profile():\n            print('click')\n\n            @mango.then('I see profile')\n            def then_profile():\n                self.assertEqual(self.given.user_profile, 'my_profile')\n\n            @mango.then('I see my photo')\n            def then_photo():\n                self.assertEqual(self.given.user_photo, 'my_photo')\n\n        @mango.when('I click notification')\n        def when_click_notification():\n            print('click')\n\n            @mango.then('I see 3 notifications')\n            def then_notification():\n                self.assertEqual(self.given.notifications_count, 3)\n\n            @mango.then('I see 1 unread notification')\n            def then_unread_notification():\n                self.assertEqual(self.given.unread_notifications_count, 1)\n\n    @mango.given('I am logged-out user')\n    def test_auth(self):\n        self.given.status_code = 401\n\n        @mango.when('I access profile by url')\n        def when_access_profile():\n            print('access profile')\n\n            @mango.then('I see 401 error')\n            def then_error():\n                self.assertEqual(self.given.status_code, 401)\n\n```\n\n### Run Example\n```python\npython -m unittest test_example.py\n```\n\n## Contributing\n\n### Run Test\n```python\npython -m unittest tests/test_mango.py\n```\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/legshort/apple-mango/", "keywords": "tdd,bdd,test", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "apple-mango", "package_url": "https://pypi.org/project/apple-mango/", "platform": "", "project_url": "https://pypi.org/project/apple-mango/", "project_urls": {"Homepage": "https://github.com/legshort/apple-mango/"}, "release_url": "https://pypi.org/project/apple-mango/0.2/", "requires_dist": ["wrapt (>=1.10.0)"], "requires_python": "", "summary": "Light weight BDD Pattern", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Light weight BDD Pattern<br><br>## Installation<br>* `pip install apple-mango`<br><br>## Goal<br>* Easy to Use<br>* Compatible with Python unittest<br>* Compatible with existing test code<br>* Support Python3<br><br>## Next Step<br>* Register to pypi<br>* Add CI<br>* Support pytest<br><br>## Usage<br>* Define regular test class<br>* Define regular test method with `@mango.given()`<br>* Define inner `when` method with `@mango.when()`<br>* Define inner `then` method with `@mango.then()`<br>* Run python test: `python -m unittest test_file.py`<br>* No need to call inner `when` and `then` method becuase `given(), when(), then()` decorators will take care of it<br><br>### Example<br>```python<br># test_exampel.py<br><br>class MangoUseCase(TestCase):<br>    def setUp(self):<br>        self.user = 'jun'<br><br>    @mango.given('I am logged-in user')<br>    def test_profile(self):<br>        self.given.user_profile = 'my_profile'<br>        self.given.user_photo = 'my_photo'<br><br>        self.given.notifications_count = 3<br>        self.given.unread_notifications_count = 1<br><br>        @mango.when('I click profile')<br>        def when_click_profile():<br>            print('click')<br><br>            @mango.then('I see profile')<br>            def then_profile():<br>                self.assertEqual(self.given.user_profile, 'my_profile')<br><br>            @mango.then('I see my photo')<br>            def then_photo():<br>                self.assertEqual(self.given.user_photo, 'my_photo')<br><br>        @mango.when('I click notification')<br>        def when_click_notification():<br>            print('click')<br><br>            @mango.then('I see 3 notifications')<br>            def then_notification():<br>                self.assertEqual(self.given.notifications_count, 3)<br><br>            @mango.then('I see 1 unread notification')<br>            def then_unread_notification():<br>                self.assertEqual(self.given.unread_notifications_count, 1)<br><br>    @mango.given('I am logged-out user')<br>    def test_auth(self):<br>        self.given.status_code = 401<br><br>        @mango.when('I access profile by url')<br>        def when_access_profile():<br>            print('access profile')<br><br>            @mango.then('I see 401 error')<br>            def then_error():<br>                self.assertEqual(self.given.status_code, 401)<br><br>```<br><br>### Run Example<br>```python<br>python -m unittest test_example.py<br>```<br><br>## Contributing<br><br>### Run Test<br>```python<br>python -m unittest tests/test_mango.py<br>```<br><br><br>\n          </div>"}, "last_serial": 3590164, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ce19699bde1c9e09a31288d880e2d57a", "sha256": "481ab68cbadcaf05799a826986910ede9137f1f58c1c6c06b95bf4a4239b4b64"}, "downloads": -1, "filename": "apple_mango-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce19699bde1c9e09a31288d880e2d57a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4038, "upload_time": "2018-02-06T13:28:34", "upload_time_iso_8601": "2018-02-06T13:28:34.072026Z", "url": "https://files.pythonhosted.org/packages/dd/84/31bec0af333bd300a03d2f7a7f560847209a842dcce7e1eb334ca52933c3/apple_mango-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f5503ca4b792254fbfbea498bb8ecc43", "sha256": "ad3b069b9e7afb1d8b18d7dcb7e6847b4aa435c67574f0195a95455248192f1b"}, "downloads": -1, "filename": "apple_mango-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f5503ca4b792254fbfbea498bb8ecc43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4583, "upload_time": "2018-02-17T08:29:46", "upload_time_iso_8601": "2018-02-17T08:29:46.437624Z", "url": "https://files.pythonhosted.org/packages/0f/00/541ab2ffdf4e67933b7ad984ff0d7784fd05f547d70317b7f07fd9fe9f9d/apple_mango-0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5503ca4b792254fbfbea498bb8ecc43", "sha256": "ad3b069b9e7afb1d8b18d7dcb7e6847b4aa435c67574f0195a95455248192f1b"}, "downloads": -1, "filename": "apple_mango-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f5503ca4b792254fbfbea498bb8ecc43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4583, "upload_time": "2018-02-17T08:29:46", "upload_time_iso_8601": "2018-02-17T08:29:46.437624Z", "url": "https://files.pythonhosted.org/packages/0f/00/541ab2ffdf4e67933b7ad984ff0d7784fd05f547d70317b7f07fd9fe9f9d/apple_mango-0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:17:37 2020"}