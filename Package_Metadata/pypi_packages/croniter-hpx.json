{"info": {"author": "Matsumoto Taichi, kiorky", "author_email": "taichino@gmail.com, kiorky@cryptelium.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\n.. contents::\n\n\ncroniter provides iteration for datetime object with cron like format.\n\n::\n\n                          _ _\n      ___ _ __ ___  _ __ (_) |_ ___ _ __\n     / __| '__/ _ \\| '_ \\| | __/ _ \\ '__|\n    | (__| | | (_) | | | | | ||  __/ |\n     \\___|_|  \\___/|_| |_|_|\\__\\___|_|\n\n\nWebsite: https://github.com/kiorky/croniter\n\nTravis badge\n=============\n.. image:: https://travis-ci.org/kiorky/croniter.png\n    :target: http://travis-ci.org/kiorky/croniter\n\nUsage\n============\n\nSimple example of usage is followings::\n\n    >>> from croniter import croniter\n    >>> from datetime import datetime\n    >>> base = datetime(2010, 1, 25, 4, 46)\n    >>> iter = croniter('*/5 * * * *', base)  # every 5 minites\n    >>> print iter.get_next(datetime)   # 2010-01-25 04:50:00\n    >>> print iter.get_next(datetime)   # 2010-01-25 04:55:00\n    >>> print iter.get_next(datetime)   # 2010-01-25 05:00:00\n    >>>\n    >>> iter = croniter('2 4 * * mon,fri', base)  # 04:02 on every Monday and Friday\n    >>> print iter.get_next(datetime)   # 2010-01-26 04:02:00\n    >>> print iter.get_next(datetime)   # 2010-01-30 04:02:00\n    >>> print iter.get_next(datetime)   # 2010-02-02 04:02:00\n\nAll you need to know is constructor and get_next, these signature are following::\n\n    >>> def __init__(self, cron_format, start_time=time.time())\n\ncroniter iterate along with 'cron_format' from 'start_time'.\ncron_format is 'min hour day month day_of_week', and please refer to\nhttp://en.wikipedia.org/wiki/Cron for details.::\n\n    >>> def get_next(self, ret_type=float)\n\nget_next return next time in iteration with 'ret_type'.\nAnd ret_type accept only 'float' or 'datetime'.\n\nNow, supported get_prev method. (>= 0.2.0)::\n\n    >>> base = datetime(2010, 8, 25)\n    >>> itr = croniter('0 0 1 * *', base)\n    >>> print itr.get_prev(datetime)  # 2010-08-01 00:00:00\n    >>> print itr.get_prev(datetime)  # 2010-07-01 00:00:00\n    >>> print itr.get_prev(datetime)  # 2010-06-01 00:00:00\n\n\nDevelop this package\n====================\n\n::\n\n    git clone https://github.com/kiorky/croniter.git\n    cd croniter\n    python bootstrap.py -d\n    bin/buildout -vvvvvvN\n    bin/test\n\n\nMake a new release\n====================\nWe use zest.fullreleaser, a great releaser infrastructure.\n\nDo and follow the instructions\n::\n\n    bin/fullrelease\n\n\nContributors\n===============\nThank you to all who have contributed to this project!\nIf you contributed and not listed below please let me know.\n\n    - mrmachine\n    - Hinnack\n    - shazow\n    - kiorky\n    - jlsandell\n    - mag009\n    - djmitche\n    - GreatCombinator\n    - chris-baynes\n    - ipartola\n    - yuzawa-san\n\n\n\nChangelog\n==============\n\n0.3.12 (unreleased)\n-------------------\n\n- Nothing changed yet.\n\n\n0.3.11 (2016-01-13)\n-------------------\n\n- Bug fix: The get_prev API crashed when last day of month token was used. Some\n  essential logic was missing.\n  [Iddo Aviram <iddo.aviram@similarweb.com>]\n\n\n0.3.10 (2015-11-29)\n-------------------\n\n- The fuctionality of 'l' as day of month was broken, since the month variable\n  was not properly updated\n  [Iddo Aviram <iddo.aviram@similarweb.com>]\n\n0.3.9 (2015-11-19)\n------------------\n\n- Don't use datetime functions python 2.6 doesn't support\n  [petervtzand]\n\n0.3.8 (2015-06-23)\n------------------\n- Truncate microseconds by setting to 0\n  [Corey Wright]\n\n\n0.3.7 (2015-06-01)\n------------------\n\n- converting sun in range sun-thu transforms to int 0 which is\n  recognized as empty string; the solution was to convert sun to string \"0\"\n\n0.3.6 (2015-05-29)\n------------------\n\n- Fix default behavior when no start_time given\n  Default value for `start_time` parameter is calculated at module init time rather than call time.\n- Fix timezone support and stop depending on the system time zone\n\n\n\n0.3.5 (2014-08-01)\n------------------\n\n- support for 'l' (last day of month)\n\n\n0.3.4 (2014-01-30)\n------------------\n\n- Python 3 compat\n- QA Relase\n\n\n0.3.3 (2012-09-29)\n------------------\n- proper packaging", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/kiorky/croniter", "keywords": "datetime,iterator,cron", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "croniter-hpx", "package_url": "https://pypi.org/project/croniter-hpx/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/croniter-hpx/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/kiorky/croniter"}, "release_url": "https://pypi.org/project/croniter-hpx/0.3.12.dev0/", "requires_dist": null, "requires_python": null, "summary": "croniter provides iteration for datetime object with cron like format", "version": "0.3.12.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Introduction</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id10\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#travis-badge\" id=\"id11\" rel=\"nofollow\">Travis badge</a></li>\n<li><a href=\"#usage\" id=\"id12\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#develop-this-package\" id=\"id13\" rel=\"nofollow\">Develop this package</a></li>\n<li><a href=\"#make-a-new-release\" id=\"id14\" rel=\"nofollow\">Make a new release</a></li>\n<li><a href=\"#contributors\" id=\"id15\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#changelog\" id=\"id16\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#unreleased\" id=\"id17\" rel=\"nofollow\">0.3.12 (unreleased)</a></li>\n<li><a href=\"#id1\" id=\"id18\" rel=\"nofollow\">0.3.11 (2016-01-13)</a></li>\n<li><a href=\"#id2\" id=\"id19\" rel=\"nofollow\">0.3.10 (2015-11-29)</a></li>\n<li><a href=\"#id3\" id=\"id20\" rel=\"nofollow\">0.3.9 (2015-11-19)</a></li>\n<li><a href=\"#id4\" id=\"id21\" rel=\"nofollow\">0.3.8 (2015-06-23)</a></li>\n<li><a href=\"#id5\" id=\"id22\" rel=\"nofollow\">0.3.7 (2015-06-01)</a></li>\n<li><a href=\"#id6\" id=\"id23\" rel=\"nofollow\">0.3.6 (2015-05-29)</a></li>\n<li><a href=\"#id7\" id=\"id24\" rel=\"nofollow\">0.3.5 (2014-08-01)</a></li>\n<li><a href=\"#id8\" id=\"id25\" rel=\"nofollow\">0.3.4 (2014-01-30)</a></li>\n<li><a href=\"#id9\" id=\"id26\" rel=\"nofollow\">0.3.3 (2012-09-29)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p>croniter provides iteration for datetime object with cron like format.</p>\n<pre>                      _ _\n  ___ _ __ ___  _ __ (_) |_ ___ _ __\n / __| '__/ _ \\| '_ \\| | __/ _ \\ '__|\n| (__| | | (_) | | | | | ||  __/ |\n \\___|_|  \\___/|_| |_|_|\\__\\___|_|\n</pre>\n<p>Website: <a href=\"https://github.com/kiorky/croniter\" rel=\"nofollow\">https://github.com/kiorky/croniter</a></p>\n</div>\n<div id=\"travis-badge\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Travis badge</a></h2>\n<a href=\"http://travis-ci.org/kiorky/croniter\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/kiorky/croniter.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ee0a45448233f069cf4cfc4dc22ec75ef226853/68747470733a2f2f7472617669732d63692e6f72672f6b696f726b792f63726f6e697465722e706e67\"></a>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Usage</a></h2>\n<p>Simple example of usage is followings:</p>\n<pre>&gt;&gt;&gt; from croniter import croniter\n&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; base = datetime(2010, 1, 25, 4, 46)\n&gt;&gt;&gt; iter = croniter('*/5 * * * *', base)  # every 5 minites\n&gt;&gt;&gt; print iter.get_next(datetime)   # 2010-01-25 04:50:00\n&gt;&gt;&gt; print iter.get_next(datetime)   # 2010-01-25 04:55:00\n&gt;&gt;&gt; print iter.get_next(datetime)   # 2010-01-25 05:00:00\n&gt;&gt;&gt;\n&gt;&gt;&gt; iter = croniter('2 4 * * mon,fri', base)  # 04:02 on every Monday and Friday\n&gt;&gt;&gt; print iter.get_next(datetime)   # 2010-01-26 04:02:00\n&gt;&gt;&gt; print iter.get_next(datetime)   # 2010-01-30 04:02:00\n&gt;&gt;&gt; print iter.get_next(datetime)   # 2010-02-02 04:02:00\n</pre>\n<p>All you need to know is constructor and get_next, these signature are following:</p>\n<pre>&gt;&gt;&gt; def __init__(self, cron_format, start_time=time.time())\n</pre>\n<p>croniter iterate along with \u2018cron_format\u2019 from \u2018start_time\u2019.\ncron_format is \u2018min hour day month day_of_week\u2019, and please refer to\n<a href=\"http://en.wikipedia.org/wiki/Cron\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Cron</a> for details.:</p>\n<pre>&gt;&gt;&gt; def get_next(self, ret_type=float)\n</pre>\n<p>get_next return next time in iteration with \u2018ret_type\u2019.\nAnd ret_type accept only \u2018float\u2019 or \u2018datetime\u2019.</p>\n<p>Now, supported get_prev method. (&gt;= 0.2.0):</p>\n<pre>&gt;&gt;&gt; base = datetime(2010, 8, 25)\n&gt;&gt;&gt; itr = croniter('0 0 1 * *', base)\n&gt;&gt;&gt; print itr.get_prev(datetime)  # 2010-08-01 00:00:00\n&gt;&gt;&gt; print itr.get_prev(datetime)  # 2010-07-01 00:00:00\n&gt;&gt;&gt; print itr.get_prev(datetime)  # 2010-06-01 00:00:00\n</pre>\n</div>\n<div id=\"develop-this-package\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Develop this package</a></h2>\n<pre>git clone https://github.com/kiorky/croniter.git\ncd croniter\npython bootstrap.py -d\nbin/buildout -vvvvvvN\nbin/test\n</pre>\n</div>\n<div id=\"make-a-new-release\">\n<h2><a href=\"#id14\" rel=\"nofollow\">Make a new release</a></h2>\n<p>We use zest.fullreleaser, a great releaser infrastructure.</p>\n<p>Do and follow the instructions</p>\n<pre>bin/fullrelease\n</pre>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Contributors</a></h2>\n<p>Thank you to all who have contributed to this project!\nIf you contributed and not listed below please let me know.</p>\n<blockquote>\n<ul>\n<li>mrmachine</li>\n<li>Hinnack</li>\n<li>shazow</li>\n<li>kiorky</li>\n<li>jlsandell</li>\n<li>mag009</li>\n<li>djmitche</li>\n<li>GreatCombinator</li>\n<li>chris-baynes</li>\n<li>ipartola</li>\n<li>yuzawa-san</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id16\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"unreleased\">\n<h3><a href=\"#id17\" rel=\"nofollow\">0.3.12 (unreleased)</a></h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3><a href=\"#id18\" rel=\"nofollow\">0.3.11 (2016-01-13)</a></h3>\n<ul>\n<li>Bug fix: The get_prev API crashed when last day of month token was used. Some\nessential logic was missing.\n[Iddo Aviram &lt;<a href=\"mailto:iddo.aviram%40similarweb.com\">iddo<span>.</span>aviram<span>@</span>similarweb<span>.</span>com</a>&gt;]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id19\" rel=\"nofollow\">0.3.10 (2015-11-29)</a></h3>\n<ul>\n<li>The fuctionality of \u2018l\u2019 as day of month was broken, since the month variable\nwas not properly updated\n[Iddo Aviram &lt;<a href=\"mailto:iddo.aviram%40similarweb.com\">iddo<span>.</span>aviram<span>@</span>similarweb<span>.</span>com</a>&gt;]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id20\" rel=\"nofollow\">0.3.9 (2015-11-19)</a></h3>\n<ul>\n<li>Don\u2019t use datetime functions python 2.6 doesn\u2019t support\n[petervtzand]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id21\" rel=\"nofollow\">0.3.8 (2015-06-23)</a></h3>\n<ul>\n<li>Truncate microseconds by setting to 0\n[Corey Wright]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id22\" rel=\"nofollow\">0.3.7 (2015-06-01)</a></h3>\n<ul>\n<li>converting sun in range sun-thu transforms to int 0 which is\nrecognized as empty string; the solution was to convert sun to string \u201c0\u201d</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id23\" rel=\"nofollow\">0.3.6 (2015-05-29)</a></h3>\n<ul>\n<li>Fix default behavior when no start_time given\nDefault value for <cite>start_time</cite> parameter is calculated at module init time rather than call time.</li>\n<li>Fix timezone support and stop depending on the system time zone</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id24\" rel=\"nofollow\">0.3.5 (2014-08-01)</a></h3>\n<ul>\n<li>support for \u2018l\u2019 (last day of month)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id25\" rel=\"nofollow\">0.3.4 (2014-01-30)</a></h3>\n<ul>\n<li>Python 3 compat</li>\n<li>QA Relase</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id26\" rel=\"nofollow\">0.3.3 (2012-09-29)</a></h3>\n<ul>\n<li>proper packaging</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1982957, "releases": {"0.3.12.dev0": [{"comment_text": "", "digests": {"md5": "cd7fc59a1149cc3679e29df7f6f0a7fa", "sha256": "4d9780e0e94779f8897e2ae33781f3cda50a6cb47e3dc1ed1a2e9ab517a3ed36"}, "downloads": -1, "filename": "croniter-hpx-0.3.12.dev0.tar.gz", "has_sig": false, "md5_digest": "cd7fc59a1149cc3679e29df7f6f0a7fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14055, "upload_time": "2016-02-29T22:37:00", "upload_time_iso_8601": "2016-02-29T22:37:00.625115Z", "url": "https://files.pythonhosted.org/packages/eb/98/d22b1b808b5c855025ee18d79de7e99b5d0436ab23826b134e48cded5cbf/croniter-hpx-0.3.12.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd7fc59a1149cc3679e29df7f6f0a7fa", "sha256": "4d9780e0e94779f8897e2ae33781f3cda50a6cb47e3dc1ed1a2e9ab517a3ed36"}, "downloads": -1, "filename": "croniter-hpx-0.3.12.dev0.tar.gz", "has_sig": false, "md5_digest": "cd7fc59a1149cc3679e29df7f6f0a7fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14055, "upload_time": "2016-02-29T22:37:00", "upload_time_iso_8601": "2016-02-29T22:37:00.625115Z", "url": "https://files.pythonhosted.org/packages/eb/98/d22b1b808b5c855025ee18d79de7e99b5d0436ab23826b134e48cded5cbf/croniter-hpx-0.3.12.dev0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:14 2020"}