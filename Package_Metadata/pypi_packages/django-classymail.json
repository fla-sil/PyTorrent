{"info": {"author": "Rafal Stozek", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "Django-ClassyMail\n=================\n\n.. image:: https://secure.travis-ci.org/rafales/django-classymail.png?branch=master\n   :target: http://travis-ci.org/rafales/django-classymail\n\nDjango makes it really easy to send simple e-mail messages. But e-mails\nsometimes gets really complicated and un-DRY. That's where ClassyMail\nsteps in.\n\nDjango-ClassyMail is a library for building e-mail messages in a fashion\nsimilar to django's class based views.\n\nYou can create mixins, override attributes with keyword arguments and\nthere's a lot of builtin functionality. Just like class based views.\n\nDjango-ClassyMail will handle css inlining, timezone, language and urls\nfor you.\n\nRead the docs for more info:\n\nhttps://django-classymail.readthedocs.org/en/latest/\n\nAnd here's an example::\n\n    class UserMixin(ClassyMail):\n        \"\"\"\n        Sets language and timezone according to user preferences, adds \"user\" to\n        template context and sets recipient to user's email address.\n        \"\"\"\n        user = None\n\n        def get_timezone(self):\n            return self.user.get_profile().timezone\n\n        def get_language(self):\n            return self.user.get_profile().language\n\n        def get_to(self):\n            return [self.user.email]\n\n        def get_context_data(self):\n            data = super(UserMixin, self).get_context_data()\n            data['user'] = self.user\n            return data\n\n    class WelcomeEmail(UserMixin, ClassyMail):\n        html_template_name = 'emails/welcome.html'\n        text_template_name = 'emails/welcome.txt'\n\n        def get_subject(self):\n            return _(\"Welcome %s! Thanks for joining us!\") % self.user.first_name\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-classymail", "package_url": "https://pypi.org/project/django-classymail/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-classymail/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-classymail/0.2/", "requires_dist": null, "requires_python": null, "summary": "E-mails in Django. Classy.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/rafales/django-classymail\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/rafales/django-classymail.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d100bf93156b6a6eb77e05988a83a0b7286cc55/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f726166616c65732f646a616e676f2d636c617373796d61696c2e706e673f6272616e63683d6d6173746572\"></a>\n<p>Django makes it really easy to send simple e-mail messages. But e-mails\nsometimes gets really complicated and un-DRY. That\u2019s where ClassyMail\nsteps in.</p>\n<p>Django-ClassyMail is a library for building e-mail messages in a fashion\nsimilar to django\u2019s class based views.</p>\n<p>You can create mixins, override attributes with keyword arguments and\nthere\u2019s a lot of builtin functionality. Just like class based views.</p>\n<p>Django-ClassyMail will handle css inlining, timezone, language and urls\nfor you.</p>\n<p>Read the docs for more info:</p>\n<p><a href=\"https://django-classymail.readthedocs.org/en/latest/\" rel=\"nofollow\">https://django-classymail.readthedocs.org/en/latest/</a></p>\n<p>And here\u2019s an example:</p>\n<pre>class UserMixin(ClassyMail):\n    \"\"\"\n    Sets language and timezone according to user preferences, adds \"user\" to\n    template context and sets recipient to user's email address.\n    \"\"\"\n    user = None\n\n    def get_timezone(self):\n        return self.user.get_profile().timezone\n\n    def get_language(self):\n        return self.user.get_profile().language\n\n    def get_to(self):\n        return [self.user.email]\n\n    def get_context_data(self):\n        data = super(UserMixin, self).get_context_data()\n        data['user'] = self.user\n        return data\n\nclass WelcomeEmail(UserMixin, ClassyMail):\n    html_template_name = 'emails/welcome.html'\n    text_template_name = 'emails/welcome.txt'\n\n    def get_subject(self):\n        return _(\"Welcome %s! Thanks for joining us!\") % self.user.first_name\n</pre>\n\n          </div>"}, "last_serial": 789298, "releases": {"0.1dev": [{"comment_text": "", "digests": {"md5": "73296da26f20f7348c0256bb847992e9", "sha256": "d5a570e3c7fddbf453e58c0f0693f409761b33e76bb06769016f0c15a62faeb1"}, "downloads": -1, "filename": "django-classymail-0.1dev.tar.gz", "has_sig": false, "md5_digest": "73296da26f20f7348c0256bb847992e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3650, "upload_time": "2013-02-10T17:53:53", "upload_time_iso_8601": "2013-02-10T17:53:53.993446Z", "url": "https://files.pythonhosted.org/packages/e0/83/3606bc4c882e2488b687dbb99f8cffb57a183351156a9479b38091ced9fa/django-classymail-0.1dev.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "bcf7f314530cfbe587ea99220c85d101", "sha256": "ef39a2a93f3567cb5b2fe4739db4f0cd1b176267d4262b9ed3792caf8b807954"}, "downloads": -1, "filename": "django-classymail-0.2.tar.gz", "has_sig": false, "md5_digest": "bcf7f314530cfbe587ea99220c85d101", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5763, "upload_time": "2013-03-18T09:58:15", "upload_time_iso_8601": "2013-03-18T09:58:15.504817Z", "url": "https://files.pythonhosted.org/packages/46/c8/3d22db25fa36e8c273824108f0fd1b3b694188567c70f9298708a2150fe8/django-classymail-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bcf7f314530cfbe587ea99220c85d101", "sha256": "ef39a2a93f3567cb5b2fe4739db4f0cd1b176267d4262b9ed3792caf8b807954"}, "downloads": -1, "filename": "django-classymail-0.2.tar.gz", "has_sig": false, "md5_digest": "bcf7f314530cfbe587ea99220c85d101", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5763, "upload_time": "2013-03-18T09:58:15", "upload_time_iso_8601": "2013-03-18T09:58:15.504817Z", "url": "https://files.pythonhosted.org/packages/46/c8/3d22db25fa36e8c273824108f0fd1b3b694188567c70f9298708a2150fe8/django-classymail-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:07 2020"}