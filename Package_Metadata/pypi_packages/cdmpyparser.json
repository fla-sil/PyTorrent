{"info": {"author": "Sergey Satskiy", "author_email": "sergey.satskiy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX :: Linux", "Programming Language :: C", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "cdm-pythonparser \n-------------------------------\n\n`cdm-pythonparser\nproject <https://github.com/SergeySatskiy/cdm-pythonparser>`__ is a\nPython 3 (Python 2 support is limited) extension module. The module\nprovided functions can take a file with a python code or a character\nbuffer, parse it and provide back what is found in the code: functions,\nclasses, global variables etc.\n\nThe module is used in the `Codimension Python\nIDE <http://codimension.org>`__ to show in a structured way a content of\nan arbitrary python code and for some other features however, it could\nbe used in other projects which need a python code retrospection.\n\nPython 3 Installation and Building\n----------------------------------\n\nThe `master\nbranch <https://github.com/SergeySatskiy/cdm-pythonparser>`__ on github\ncontains code for Python 3 (3.5/3.6/3.7 grammar is covered).\n\nThe module can be installed using pip:\n\n.. code:: shell\n\n   pip install cdmpyparser\n\nYou can also retrieve the full source code which in addition has some\nutilities. In order to do that you can follow these steps:\n\n.. code:: shell\n\n   git clone https://github.com/SergeySatskiy/cdm-pythonparser.git\n   cd cdm-pythonparser\n   make\n   make check\n   make localinstall\n\nPython 3 Usage\n--------------\n\nSuppose there is the following file ~/my-file.py with the following\ncontent:\n\n.. code:: python\n\n   #!/bin/env python\n   import sys\n\n   # global variable\n   a = 154\n\n   class C(BaseClass):\n       \"\"\"Class docstring\"\"\"\n       @staticmethod\n       def getValue(arg):\n           \"\"\"Method docstring\"\"\"\n           return arg + 154\n\nThen the following python session may take place:\n\n.. code:: shell\n\n   $ python\n   Python 3.6.2 (default, Aug  9 2017, 11:11:12)\n   [GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux\n   Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n   >>> import cdmpyparser\n   >>> c = cdmpyparser.getBriefModuleInfoFromFile('my-file.py')\n   >>> print(c.niceStringify())\n   Import[2:8:25]: 'sys'\n   Global[5:1:48]: 'a'\n   Class[7:1:7:7:63:7:19]: 'C'\n   Base class: 'BaseClass'\n   Docstring[8]: 'Class docstring'\n       Function[10:5:10:9:129:10:22]: 'getValue'\n       Argument: 'arg'\n       Decorator[9:6:108]: 'staticmethod\n       Docstring[11]: 'Method docstring'\n   >>> len(c.imports)\n   1\n   >>> c.imports[0].name\n   'sys'\n   >>> c.imports[0].line\n   2\n   >>> c.imports[0].pos\n   8\n\n**Note:** Python 3 and Python 2 modules use different names. Python 3\nuses ``cdmpyparser``. Python 2 uses ``cdmbriefparser``.\n\nSee the \u2018cdmpyparser.py\u2019 file for the members which are supplied along\nwith all the recognized items.\n\nPython 2 Installation and Building\n----------------------------------\n\n**Attention:** Python 2 version is not supported anymore. There will be\nno more Python 2 releases.\n\nThe latest Python 2 release is 2.0.1. Both pre-built modules and source\ncode are available in the releases area on github: `latest Python 2\nrelease\n2.0.1 <https://github.com/SergeySatskiy/cdm-pythonparser/releases/tag/v2.0.1>`__.\n\nTo build a Python 2 module from sources please follow these steps:\n\n.. code:: shell\n\n   cd\n   wget https://github.com/SergeySatskiy/cdm-pythonparser/archive/v2.0.1.tar.gz\n   gunzip v2.0.1.tar.gz\n   tar -xf v2.0.1.tar\n   cd cdm-pythonparser-2.0.1/\n   make\n   make localinstall\n   make check\n\nPython 2 Usage\n--------------\n\nSuppose there is the following file ~/my-file.py with the following\ncontent:\n\n.. code:: python\n\n   #!/bin/env python\n   import sys\n\n   # global variable\n   a = 154\n\n   class C(BaseClass):\n       \"\"\"Class docstring\"\"\"\n       @staticmethod\n       def getValue(arg):\n           \"\"\"Method docstring\"\"\"\n           return arg + 154\n\nThen the following python session may take place:\n\n.. code:: shell\n\n   $ python\n   Python 2.7.12 (default, Sep 13 2016, 16:46:03)\n   [GCC 4.8.5 20150623 (Red Hat 4.8.5-4)] on linux2\n   Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n   >>> import cdmbriefparser\n   >>> c = cdmbriefparser.getBriefModuleInfoFromFile('my-file.py')\n   >>> print c.niceStringify()\n   Import[2:8:25]: 'sys'\n   Global[5:1:48]: 'a'\n   Class[7:1:7:7:63:7:19]: 'C'\n   Base class: 'BaseClass'\n   Docstring[8]: 'Class docstring'\n       Function[10:5:10:9:129:10:22]: 'getValue'\n       Argument: 'arg'\n       Decorator[9:6:108]: 'staticmethod\n       Docstring[11]: 'Method docstring'\n   >>> len(c.imports)\n   1\n   >>> c.imports[0].name\n   'sys'\n   >>> c.imports[0].line\n   2\n   >>> c.imports[0].pos\n   8\n\n**Note:** Python 3 and Python 2 modules use different names. Python 3\nuses ``cdmpyparser``. Python 2 uses ``cdmbriefparser``.\n\nSee the \u2018cdmbriefparser.py\u2019 file for the members which are supplied\nalong with all the recognized items.\n\nComparison to the Standard pyclbr Module\n----------------------------------------\n\n**Note:** the comparison results are provided for the Python 2 module.\nThe Python 3 module yeilds pretty much the same results in terms of\nperformance while extracts more information because the grammar was\nextended for Python 3.\n\nThe table below shows the comparison between the standard ``pyclbr``\nmodule and the Codimension\u2019s ``cdmbriefparser`` module.\n\n+-------------------+-----------------+--------------------------------+\n| *feature*         | *pyclbr*        | *cdmbriefparser*               |\n+===================+=================+================================+\n| Extracting coding | N               | Y                              |\n| string            |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting module | N               | Y                              |\n| docstring         |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting global | N               | Y                              |\n| variables         |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| imports           |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting top    | Y               | Y                              |\n| level functions   |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting nested | N               | Y                              |\n| functions         |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| functions         |                 |                                |\n| arguments         |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| functions         |                 |                                |\n| docstrings        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| functions         |                 |                                |\n| decorators        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | Y               | Y                              |\n| classes           |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting base   | Y               | Y                              |\n| classes           |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting class  | N               | Y                              |\n| attributes        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting class  | N               | Y                              |\n| instance          |                 |                                |\n| attributes        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting class  | Y               | Y                              |\n| methods           |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting class  | N               | Y                              |\n| methods arguments |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting nested | N               | Y                              |\n| classes           |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| classes           |                 |                                |\n| docstrings        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting class  | N               | Y                              |\n| methods           |                 |                                |\n| docstrings        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| classes           |                 |                                |\n| decorators        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| decorators        |                 |                                |\n| arguments         |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Keeping the       | N               | Y                              |\n| hierarchy of the  |                 |                                |\n| classes/functions |                 |                                |\n| of the arbitrary  |                 |                                |\n| depth             |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Ability to work   | Y (silent)      | Y (error messages are          |\n| with partially    |                 | provided)                      |\n| syntactically     |                 |                                |\n| correct files     |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Ability to parse  | Y               | Y                              |\n| python code from  |                 |                                |\n| a file            |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Ability to parse  | N               | Y                              |\n| python code from  |                 |                                |\n| memory            |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Extracting        | N               | Y                              |\n| classes and       |                 |                                |\n| functions with    |                 |                                |\n| the same names    |                 |                                |\n+-------------------+-----------------+--------------------------------+\n| Supported python  | ANY             | Up to 2.7 (series 3 has not    |\n| version           |                 | been tested)                   |\n+-------------------+-----------------+--------------------------------+\n| Time to process   | 2 min 37 sec    | 24 sec                         |\n| 11365 python      |                 |                                |\n| files (python 2.7 |                 |                                |\n| distribution and  |                 |                                |\n| some third party  |                 |                                |\n| packages).        |                 |                                |\n+-------------------+-----------------+--------------------------------+\n\nEssential Links\n---------------\n\n-  `Codimension Python IDE <http://codimension.org>`__ home page\n-  `latest Python 2 release\n   2.0.1 <https://github.com/SergeySatskiy/cdm-pythonparser/releases/tag/v2.0.1>`__\n-  `Python 3 Pypi\n   package <https://pypi.python.org/pypi?name=cdmpyparser&:action=display>`__\n   page\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SergeySatskiy/cdm-pythonparser", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "cdmpyparser", "package_url": "https://pypi.org/project/cdmpyparser/", "platform": "any", "project_url": "https://pypi.org/project/cdmpyparser/", "project_urls": {"Homepage": "https://github.com/SergeySatskiy/cdm-pythonparser"}, "release_url": "https://pypi.org/project/cdmpyparser/3.2.1/", "requires_dist": null, "requires_python": "", "summary": "Fast and comprehensive Python language parser. Written as a part of the Codimension project, this parser aims at pulling the most data from Python sources while exceeding the speed of existing parsers.", "version": "3.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"cdm-pythonparser\">\n<h2>cdm-pythonparser</h2>\n<p><a href=\"https://github.com/SergeySatskiy/cdm-pythonparser\" rel=\"nofollow\">cdm-pythonparser\nproject</a> is a\nPython 3 (Python 2 support is limited) extension module. The module\nprovided functions can take a file with a python code or a character\nbuffer, parse it and provide back what is found in the code: functions,\nclasses, global variables etc.</p>\n<p>The module is used in the <a href=\"http://codimension.org\" rel=\"nofollow\">Codimension Python\nIDE</a> to show in a structured way a content of\nan arbitrary python code and for some other features however, it could\nbe used in other projects which need a python code retrospection.</p>\n</div>\n<div id=\"python-3-installation-and-building\">\n<h2>Python 3 Installation and Building</h2>\n<p>The <a href=\"https://github.com/SergeySatskiy/cdm-pythonparser\" rel=\"nofollow\">master\nbranch</a> on github\ncontains code for Python 3 (3.5/3.6/3.7 grammar is covered).</p>\n<p>The module can be installed using pip:</p>\n<pre>pip install cdmpyparser\n</pre>\n<p>You can also retrieve the full source code which in addition has some\nutilities. In order to do that you can follow these steps:</p>\n<pre>git clone https://github.com/SergeySatskiy/cdm-pythonparser.git\n<span class=\"nb\">cd</span> cdm-pythonparser\nmake\nmake check\nmake localinstall\n</pre>\n</div>\n<div id=\"python-3-usage\">\n<h2>Python 3 Usage</h2>\n<p>Suppose there is the following file ~/my-file.py with the following\ncontent:</p>\n<pre><span class=\"ch\">#!/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"c1\"># global variable</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">154</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">(</span><span class=\"n\">BaseClass</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Class docstring\"\"\"</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getValue</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Method docstring\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"n\">arg</span> <span class=\"o\">+</span> <span class=\"mi\">154</span>\n</pre>\n<p>Then the following python session may take place:</p>\n<pre>$ python\nPython <span class=\"m\">3</span>.6.2 <span class=\"o\">(</span>default, Aug  <span class=\"m\">9</span> <span class=\"m\">2017</span>, <span class=\"m\">11</span>:11:12<span class=\"o\">)</span>\n<span class=\"o\">[</span>GCC <span class=\"m\">4</span>.8.5 <span class=\"m\">20150623</span> <span class=\"o\">(</span>Red Hat <span class=\"m\">4</span>.8.5-11<span class=\"o\">)]</span> on linux\nType <span class=\"s2\">\"help\"</span>, <span class=\"s2\">\"copyright\"</span>, <span class=\"s2\">\"credits\"</span> or <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> more information.\n&gt;&gt;&gt; import cdmpyparser\n&gt;&gt;&gt; <span class=\"nv\">c</span> <span class=\"o\">=</span> cdmpyparser.getBriefModuleInfoFromFile<span class=\"o\">(</span><span class=\"s1\">'my-file.py'</span><span class=\"o\">)</span>\n&gt;&gt;&gt; print<span class=\"o\">(</span>c.niceStringify<span class=\"o\">())</span>\nImport<span class=\"o\">[</span><span class=\"m\">2</span>:8:25<span class=\"o\">]</span>: <span class=\"s1\">'sys'</span>\nGlobal<span class=\"o\">[</span><span class=\"m\">5</span>:1:48<span class=\"o\">]</span>: <span class=\"s1\">'a'</span>\nClass<span class=\"o\">[</span><span class=\"m\">7</span>:1:7:7:63:7:19<span class=\"o\">]</span>: <span class=\"s1\">'C'</span>\nBase class: <span class=\"s1\">'BaseClass'</span>\nDocstring<span class=\"o\">[</span><span class=\"m\">8</span><span class=\"o\">]</span>: <span class=\"s1\">'Class docstring'</span>\n    Function<span class=\"o\">[</span><span class=\"m\">10</span>:5:10:9:129:10:22<span class=\"o\">]</span>: <span class=\"s1\">'getValue'</span>\n    Argument: <span class=\"s1\">'arg'</span>\n    Decorator<span class=\"o\">[</span><span class=\"m\">9</span>:6:108<span class=\"o\">]</span>: <span class=\"s1\">'staticmethod\n    Docstring[11]: '</span>Method docstring<span class=\"s1\">'\n&gt;&gt;&gt; len(c.imports)\n1\n&gt;&gt;&gt; c.imports[0].name\n'</span>sys<span class=\"err\">'</span>\n&gt;&gt;&gt; c.imports<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.line\n<span class=\"m\">2</span>\n&gt;&gt;&gt; c.imports<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.pos\n<span class=\"m\">8</span>\n</pre>\n<p><strong>Note:</strong> Python 3 and Python 2 modules use different names. Python 3\nuses <tt>cdmpyparser</tt>. Python 2 uses <tt>cdmbriefparser</tt>.</p>\n<p>See the \u2018cdmpyparser.py\u2019 file for the members which are supplied along\nwith all the recognized items.</p>\n</div>\n<div id=\"python-2-installation-and-building\">\n<h2>Python 2 Installation and Building</h2>\n<p><strong>Attention:</strong> Python 2 version is not supported anymore. There will be\nno more Python 2 releases.</p>\n<p>The latest Python 2 release is 2.0.1. Both pre-built modules and source\ncode are available in the releases area on github: <a href=\"https://github.com/SergeySatskiy/cdm-pythonparser/releases/tag/v2.0.1\" rel=\"nofollow\">latest Python 2\nrelease\n2.0.1</a>.</p>\n<p>To build a Python 2 module from sources please follow these steps:</p>\n<pre><span class=\"nb\">cd</span>\nwget https://github.com/SergeySatskiy/cdm-pythonparser/archive/v2.0.1.tar.gz\ngunzip v2.0.1.tar.gz\ntar -xf v2.0.1.tar\n<span class=\"nb\">cd</span> cdm-pythonparser-2.0.1/\nmake\nmake localinstall\nmake check\n</pre>\n</div>\n<div id=\"python-2-usage\">\n<h2>Python 2 Usage</h2>\n<p>Suppose there is the following file ~/my-file.py with the following\ncontent:</p>\n<pre><span class=\"ch\">#!/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"c1\"># global variable</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">154</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">(</span><span class=\"n\">BaseClass</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Class docstring\"\"\"</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getValue</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Method docstring\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"n\">arg</span> <span class=\"o\">+</span> <span class=\"mi\">154</span>\n</pre>\n<p>Then the following python session may take place:</p>\n<pre>$ python\nPython <span class=\"m\">2</span>.7.12 <span class=\"o\">(</span>default, Sep <span class=\"m\">13</span> <span class=\"m\">2016</span>, <span class=\"m\">16</span>:46:03<span class=\"o\">)</span>\n<span class=\"o\">[</span>GCC <span class=\"m\">4</span>.8.5 <span class=\"m\">20150623</span> <span class=\"o\">(</span>Red Hat <span class=\"m\">4</span>.8.5-4<span class=\"o\">)]</span> on linux2\nType <span class=\"s2\">\"help\"</span>, <span class=\"s2\">\"copyright\"</span>, <span class=\"s2\">\"credits\"</span> or <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> more information.\n&gt;&gt;&gt; import cdmbriefparser\n&gt;&gt;&gt; <span class=\"nv\">c</span> <span class=\"o\">=</span> cdmbriefparser.getBriefModuleInfoFromFile<span class=\"o\">(</span><span class=\"s1\">'my-file.py'</span><span class=\"o\">)</span>\n&gt;&gt;&gt; print c.niceStringify<span class=\"o\">()</span>\nImport<span class=\"o\">[</span><span class=\"m\">2</span>:8:25<span class=\"o\">]</span>: <span class=\"s1\">'sys'</span>\nGlobal<span class=\"o\">[</span><span class=\"m\">5</span>:1:48<span class=\"o\">]</span>: <span class=\"s1\">'a'</span>\nClass<span class=\"o\">[</span><span class=\"m\">7</span>:1:7:7:63:7:19<span class=\"o\">]</span>: <span class=\"s1\">'C'</span>\nBase class: <span class=\"s1\">'BaseClass'</span>\nDocstring<span class=\"o\">[</span><span class=\"m\">8</span><span class=\"o\">]</span>: <span class=\"s1\">'Class docstring'</span>\n    Function<span class=\"o\">[</span><span class=\"m\">10</span>:5:10:9:129:10:22<span class=\"o\">]</span>: <span class=\"s1\">'getValue'</span>\n    Argument: <span class=\"s1\">'arg'</span>\n    Decorator<span class=\"o\">[</span><span class=\"m\">9</span>:6:108<span class=\"o\">]</span>: <span class=\"s1\">'staticmethod\n    Docstring[11]: '</span>Method docstring<span class=\"s1\">'\n&gt;&gt;&gt; len(c.imports)\n1\n&gt;&gt;&gt; c.imports[0].name\n'</span>sys<span class=\"err\">'</span>\n&gt;&gt;&gt; c.imports<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.line\n<span class=\"m\">2</span>\n&gt;&gt;&gt; c.imports<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.pos\n<span class=\"m\">8</span>\n</pre>\n<p><strong>Note:</strong> Python 3 and Python 2 modules use different names. Python 3\nuses <tt>cdmpyparser</tt>. Python 2 uses <tt>cdmbriefparser</tt>.</p>\n<p>See the \u2018cdmbriefparser.py\u2019 file for the members which are supplied\nalong with all the recognized items.</p>\n</div>\n<div id=\"comparison-to-the-standard-pyclbr-module\">\n<h2>Comparison to the Standard pyclbr Module</h2>\n<p><strong>Note:</strong> the comparison results are provided for the Python 2 module.\nThe Python 3 module yeilds pretty much the same results in terms of\nperformance while extracts more information because the grammar was\nextended for Python 3.</p>\n<p>The table below shows the comparison between the standard <tt>pyclbr</tt>\nmodule and the Codimension\u2019s <tt>cdmbriefparser</tt> module.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th><em>feature</em></th>\n<th><em>pyclbr</em></th>\n<th><em>cdmbriefparser</em></th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Extracting coding\nstring</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting module\ndocstring</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting global\nvariables</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nimports</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting top\nlevel functions</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting nested\nfunctions</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nfunctions\narguments</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nfunctions\ndocstrings</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nfunctions\ndecorators</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nclasses</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting base\nclasses</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting class\nattributes</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting class\ninstance\nattributes</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting class\nmethods</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting class\nmethods arguments</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting nested\nclasses</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nclasses\ndocstrings</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting class\nmethods\ndocstrings</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nclasses\ndecorators</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\ndecorators\narguments</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Keeping the\nhierarchy of the\nclasses/functions\nof the arbitrary\ndepth</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Ability to work\nwith partially\nsyntactically\ncorrect files</td>\n<td>Y (silent)</td>\n<td>Y (error messages are\nprovided)</td>\n</tr>\n<tr><td>Ability to parse\npython code from\na file</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>Ability to parse\npython code from\nmemory</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Extracting\nclasses and\nfunctions with\nthe same names</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr><td>Supported python\nversion</td>\n<td>ANY</td>\n<td>Up to 2.7 (series 3 has not\nbeen tested)</td>\n</tr>\n<tr><td>Time to process\n11365 python\nfiles (python 2.7\ndistribution and\nsome third party\npackages).</td>\n<td>2 min 37 sec</td>\n<td>24 sec</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"essential-links\">\n<h2>Essential Links</h2>\n<ul>\n<li><a href=\"http://codimension.org\" rel=\"nofollow\">Codimension Python IDE</a> home page</li>\n<li><a href=\"https://github.com/SergeySatskiy/cdm-pythonparser/releases/tag/v2.0.1\" rel=\"nofollow\">latest Python 2 release\n2.0.1</a></li>\n<li><a href=\"https://pypi.python.org/pypi?name=cdmpyparser&amp;:action=display\" rel=\"nofollow\">Python 3 Pypi\npackage</a>\npage</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6973198, "releases": {"3.0.0": [{"comment_text": "", "digests": {"md5": "1db3c4ca2524bfe94c59060eb813e2c5", "sha256": "39294de350db3884715cde9290e932f7aa1ddc75ec21a4e90e14e4a88dd26baf"}, "downloads": -1, "filename": "cdmpyparser-3.0.0.tar.gz", "has_sig": false, "md5_digest": "1db3c4ca2524bfe94c59060eb813e2c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42333, "upload_time": "2017-08-21T03:59:42", "upload_time_iso_8601": "2017-08-21T03:59:42.157285Z", "url": "https://files.pythonhosted.org/packages/53/d7/ac57904695c662aa2af4d4d27c826a11d9731d997c87708d3162cf17ae7f/cdmpyparser-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "ce470d2daac0b86b1525487647cfffe4", "sha256": "cbb80d8131e093674a190852b51228ed0a46dd637fd096b8b63921090916a87d"}, "downloads": -1, "filename": "cdmpyparser-3.0.1.tar.gz", "has_sig": false, "md5_digest": "ce470d2daac0b86b1525487647cfffe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42605, "upload_time": "2017-08-22T00:35:24", "upload_time_iso_8601": "2017-08-22T00:35:24.042505Z", "url": "https://files.pythonhosted.org/packages/a6/ea/71c1cdf67a363015c89ce6e754668e2e8930cda20d8409abfb044d6335c9/cdmpyparser-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "955d57fa808ffc7fbbbf16fca82f6019", "sha256": "30b52b1fb1cd1537f791d224ca10e7a72b42ad5e4854aff22dae2ada98e9e621"}, "downloads": -1, "filename": "cdmpyparser-3.0.2.tar.gz", "has_sig": false, "md5_digest": "955d57fa808ffc7fbbbf16fca82f6019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42818, "upload_time": "2017-11-17T03:41:48", "upload_time_iso_8601": "2017-11-17T03:41:48.392604Z", "url": "https://files.pythonhosted.org/packages/9b/c2/09b4bde3c706eeb9de8902f1bfd1436854650cc085f8ba3130bb1c61dcec/cdmpyparser-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "e8ccf86d1717be1376499314745d74de", "sha256": "aba2e78e09859bd885f6f32664d5d8371b45fae6d1921b449d50ab84b731eec5"}, "downloads": -1, "filename": "cdmpyparser-3.0.3.tar.gz", "has_sig": false, "md5_digest": "e8ccf86d1717be1376499314745d74de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42855, "upload_time": "2018-08-02T02:43:31", "upload_time_iso_8601": "2018-08-02T02:43:31.164670Z", "url": "https://files.pythonhosted.org/packages/57/f1/ff694f525da35487ce8d95e8310d559c453095c75b14bb5092eec1bf68da/cdmpyparser-3.0.3.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "bd89881ae0f30e40922ce170b4e144e8", "sha256": "680c037f5c0ac15baddd0ded043e59b3a24735995abba2ca9aa9a3d57a720938"}, "downloads": -1, "filename": "cdmpyparser-3.1.0.tar.gz", "has_sig": false, "md5_digest": "bd89881ae0f30e40922ce170b4e144e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42893, "upload_time": "2019-04-25T23:24:34", "upload_time_iso_8601": "2019-04-25T23:24:34.822781Z", "url": "https://files.pythonhosted.org/packages/34/18/b610d76cccb3a824ce65f28b80b0a197b617f7307d10f12d8d8078924c89/cdmpyparser-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "62604087f9e19433b7c0ef9b3db12f96", "sha256": "f0719186ca5eb745954c9c9fbd6cfa22e73627779a831b6339f575089430568f"}, "downloads": -1, "filename": "cdmpyparser-3.1.1.tar.gz", "has_sig": false, "md5_digest": "62604087f9e19433b7c0ef9b3db12f96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42948, "upload_time": "2019-07-30T01:32:43", "upload_time_iso_8601": "2019-07-30T01:32:43.853663Z", "url": "https://files.pythonhosted.org/packages/b9/78/7d0bdc6d1e87551d78523a0746aa25f770a93a1024f7832423c5ac9a791c/cdmpyparser-3.1.1.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "01479562091ccddc0963cf71968d3b09", "sha256": "4a5ee3f645d0b40d042c0f8b010fbde802721a748928b45f95f3c33e5ec0d52d"}, "downloads": -1, "filename": "cdmpyparser-3.2.0.tar.gz", "has_sig": false, "md5_digest": "01479562091ccddc0963cf71968d3b09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42024, "upload_time": "2020-04-07T00:18:20", "upload_time_iso_8601": "2020-04-07T00:18:20.093964Z", "url": "https://files.pythonhosted.org/packages/40/10/ea738520805fe17581c325174398b7ebe71eab8f12107bfda4885456bbfd/cdmpyparser-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "319ba675a5d8ff3f9be0e5aceedd72c8", "sha256": "526c676c177137e019e225d68a99924a9c3cc41d419dd07424abad54c980a552"}, "downloads": -1, "filename": "cdmpyparser-3.2.1.tar.gz", "has_sig": false, "md5_digest": "319ba675a5d8ff3f9be0e5aceedd72c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42044, "upload_time": "2020-04-07T22:01:31", "upload_time_iso_8601": "2020-04-07T22:01:31.259333Z", "url": "https://files.pythonhosted.org/packages/8b/15/30ef6553daaaabd7784b85f42dc5b1fa9249af00454d5d0366b8f480ba92/cdmpyparser-3.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "319ba675a5d8ff3f9be0e5aceedd72c8", "sha256": "526c676c177137e019e225d68a99924a9c3cc41d419dd07424abad54c980a552"}, "downloads": -1, "filename": "cdmpyparser-3.2.1.tar.gz", "has_sig": false, "md5_digest": "319ba675a5d8ff3f9be0e5aceedd72c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42044, "upload_time": "2020-04-07T22:01:31", "upload_time_iso_8601": "2020-04-07T22:01:31.259333Z", "url": "https://files.pythonhosted.org/packages/8b/15/30ef6553daaaabd7784b85f42dc5b1fa9249af00454d5d0366b8f480ba92/cdmpyparser-3.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:56 2020"}