{"info": {"author": "Matthew Adams", "author_email": "Matthew.Adams@ucalgary.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Mathematics"], "description": "differint\n---------\n\nThis package is used for numerically calculating fractional derivatives\nand integrals (differintegrals). Options for varying definitions of the\ndifferintegral are available, including the Grunwald-Letnikov (GL), the\n\u00e2\u20ac\u02dcimproved\u00e2\u20ac\u2122 Grunwald-Letnikov (GLI), the Riemann-Liouville (RL), and the\nCaputo (coming soon!). Through the API, you can compute differintegrals\nat a point or over an array of function values.\n\nMotivation\n----------\n\nThere is little in the way of readily available, easy-to-use code for\nnumerical fractional calculus. What is currently available are functions\nthat are generally either smart parts of a much larger package, or only\noffer one numerical algorithm. The *differint* package offers a variety\nof algorithms for computing differintegrals and several auxiliary\nfunctions relating to generalized binomial coefficients.\n\nInstallation\n------------\n\nThis project requires Python 3+ and NumPy to run.\n\nInstallation from the Python Packaging index\n(https://pypi.python.org/pypi) is simple using pip.\n\n.. code:: python\n\n    pip install differint\n\nExample Usage\n-------------\n\nTaking a fractional derivative is easy with the *differint* package.\nLet\u00e2\u20ac\u2122s take the 1/2 derivative of the square root function on the\ninterval [0,1], using the Riemann-Liouville definition of the fractional\nderivative.\n\n.. code:: python\n\n    import numpy as np\n    import differint.differint as df\n\n    def f(x):\n       return x**0.5\n\n    DF = df.RL(0.5, f)\n    print(DF)\n\nYou can also specify the endpoints of the domain and the number of\npoints used as follows.\n\n.. code:: python\n\n    DF = df.RL(0.5, f, 0, 1, 128)\n\nTests\n-----\n\nAll tests can be run with nose from the command line. Setup will\nautomatically install nose if it is not present on your machine.\n\n.. code:: python\n\n    python setup.py tests\n\nAlternatively, you can run the test script directly.\n\n.. code:: python\n\n    cd <file_path>/differint/tests/\n    python test.py\n\nAPI Reference\n-------------\n\nIn this section we cover the usage of the various functions within the\n*differint* package.\n\n+---------------------------------------------------+-------------------+\n| Main Function                                     | Usage             |\n+===================================================+===================+\n| GLpoint                                           | Computes the GL   |\n|                                                   | differintegral at |\n|                                                   | a point           |\n+---------------------------------------------------+-------------------+\n| GL                                                | Computes the GL   |\n|                                                   | differintegral    |\n|                                                   | over an entire    |\n|                                                   | array of function |\n|                                                   | values using the  |\n|                                                   | Fast Fourier      |\n|                                                   | Transform         |\n+---------------------------------------------------+-------------------+\n| GLI                                               | Computes the      |\n|                                                   | improved GL       |\n|                                                   | differintegral    |\n|                                                   | over an entire    |\n|                                                   | array of function |\n|                                                   | values            |\n+---------------------------------------------------+-------------------+\n| RLpoint                                           | Computes the RL   |\n|                                                   | differintegral at |\n|                                                   | a point           |\n+---------------------------------------------------+-------------------+\n| RL                                                | Computes the RL   |\n|                                                   | differintegral    |\n|                                                   | over an entire    |\n|                                                   | array of function |\n|                                                   | values using      |\n|                                                   | matrix methods    |\n+---------------------------------------------------+-------------------+\n\n+-------------------------------------------------------+--------------+\n| Auxiliary Function                                    | Usage        |\n+=======================================================+==============+\n| isInteger                                             | Determine if |\n|                                                       | a number is  |\n|                                                       | an integer   |\n+-------------------------------------------------------+--------------+\n| checkValues                                           | Used to      |\n|                                                       | check for    |\n|                                                       | valid        |\n|                                                       | algorithm    |\n|                                                       | input types  |\n+-------------------------------------------------------+--------------+\n| GLIinterpolat                                         | Define       |\n|                                                       | interpolatin |\n|                                                       | g            |\n|                                                       | coefficients |\n|                                                       | for the      |\n|                                                       | improved GL  |\n|                                                       | algorithm    |\n+-------------------------------------------------------+--------------+\n| functionCheck                                         | Determines   |\n|                                                       | if algorithm |\n|                                                       | function     |\n|                                                       | input is     |\n|                                                       | callable or  |\n|                                                       | an array of  |\n|                                                       | numbers      |\n+-------------------------------------------------------+--------------+\n| test_func                                             | Testing      |\n|                                                       | function for |\n|                                                       | docstring    |\n|                                                       | examples     |\n+-------------------------------------------------------+--------------+\n| poch                                                  | Computes the |\n|                                                       | Pochhammer   |\n|                                                       | symbol       |\n+-------------------------------------------------------+--------------+\n| GLcoeffs                                              | Determines   |\n|                                                       | the          |\n|                                                       | convolution  |\n|                                                       | filter       |\n|                                                       | composed of  |\n|                                                       | generalized  |\n|                                                       | binomial     |\n|                                                       | coefficients |\n|                                                       | used in the  |\n|                                                       | GL algorithm |\n+-------------------------------------------------------+--------------+\n| RLcoeffs                                              | Calculates   |\n|                                                       | the          |\n|                                                       | coefficients |\n|                                                       | used in the  |\n|                                                       | RLpoint and  |\n|                                                       | RL           |\n|                                                       | algorithms   |\n+-------------------------------------------------------+--------------+\n| RLmatrix                                              | Determines   |\n|                                                       | the matrix   |\n|                                                       | used in the  |\n|                                                       | RL algorithm |\n+-------------------------------------------------------+--------------+\n\nContribute\n----------\n\nTo contribute to this project, see the `contributing guidelines`_.\n\nCredits\n-------\n\nBaleanu, D., Diethelm, K., Scalas, E., & Trujillo, J.J. (2012).\nFractional Calculus: Models and Numerical Methods. World Scientific.\n\nOldham, K.B. & Spanier, J. (1974). The Fractional Calculus: Theory and\nApplications of Differentiation and Integration to Arbitrary Order.\nAcademic Press Inc.\n\nLicense\n-------\n\nMIT \u00c2\u00a9 `Matthew Adams`_\n\n.. _contributing guidelines: https://github.com/snimpids/differint/blob/master/CONTRIBUTING.md\n.. _Matthew Adams: 2018\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/differint/differint", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "differint", "package_url": "https://pypi.org/project/differint/", "platform": "", "project_url": "https://pypi.org/project/differint/", "project_urls": {"Homepage": "http://github.com/differint/differint"}, "release_url": "https://pypi.org/project/differint/0.3.2/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Collection of algorithms for numerically calculating fractional derivatives.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"differint\">\n<h2>differint</h2>\n<p>This package is used for numerically calculating fractional derivatives\nand integrals (differintegrals). Options for varying definitions of the\ndifferintegral are available, including the Grunwald-Letnikov (GL), the\n\u00e2\u20ac\u02dcimproved\u00e2\u20ac\u2122 Grunwald-Letnikov (GLI), the Riemann-Liouville (RL), and the\nCaputo (coming soon!). Through the API, you can compute differintegrals\nat a point or over an array of function values.</p>\n</div>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>There is little in the way of readily available, easy-to-use code for\nnumerical fractional calculus. What is currently available are functions\nthat are generally either smart parts of a much larger package, or only\noffer one numerical algorithm. The <em>differint</em> package offers a variety\nof algorithms for computing differintegrals and several auxiliary\nfunctions relating to generalized binomial coefficients.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This project requires Python 3+ and NumPy to run.</p>\n<p>Installation from the Python Packaging index\n(<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">https://pypi.python.org/pypi</a>) is simple using pip.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">differint</span>\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<p>Taking a fractional derivative is easy with the <em>differint</em> package.\nLet\u00e2\u20ac\u2122s take the 1/2 derivative of the square root function on the\ninterval [0,1], using the Riemann-Liouville definition of the fractional\nderivative.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">differint.differint</span> <span class=\"k\">as</span> <span class=\"nn\">df</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mf\">0.5</span>\n\n<span class=\"n\">DF</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">RL</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">DF</span><span class=\"p\">)</span>\n</pre>\n<p>You can also specify the endpoints of the domain and the number of\npoints used as follows.</p>\n<pre><span class=\"n\">DF</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">RL</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>All tests can be run with nose from the command line. Setup will\nautomatically install nose if it is not present on your machine.</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">tests</span>\n</pre>\n<p>Alternatively, you can run the test script directly.</p>\n<pre><span class=\"n\">cd</span> <span class=\"o\">&lt;</span><span class=\"n\">file_path</span><span class=\"o\">&gt;/</span><span class=\"n\">differint</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span>\n<span class=\"n\">python</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre>\n</div>\n<div id=\"api-reference\">\n<h2>API Reference</h2>\n<p>In this section we cover the usage of the various functions within the\n<em>differint</em> package.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Main Function</th>\n<th>Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>GLpoint</td>\n<td>Computes the GL\ndifferintegral at\na point</td>\n</tr>\n<tr><td>GL</td>\n<td>Computes the GL\ndifferintegral\nover an entire\narray of function\nvalues using the\nFast Fourier\nTransform</td>\n</tr>\n<tr><td>GLI</td>\n<td>Computes the\nimproved GL\ndifferintegral\nover an entire\narray of function\nvalues</td>\n</tr>\n<tr><td>RLpoint</td>\n<td>Computes the RL\ndifferintegral at\na point</td>\n</tr>\n<tr><td>RL</td>\n<td>Computes the RL\ndifferintegral\nover an entire\narray of function\nvalues using\nmatrix methods</td>\n</tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Auxiliary Function</th>\n<th>Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>isInteger</td>\n<td>Determine if\na number is\nan integer</td>\n</tr>\n<tr><td>checkValues</td>\n<td>Used to\ncheck for\nvalid\nalgorithm\ninput types</td>\n</tr>\n<tr><td>GLIinterpolat</td>\n<td>Define\ninterpolatin\ng\ncoefficients\nfor the\nimproved GL\nalgorithm</td>\n</tr>\n<tr><td>functionCheck</td>\n<td>Determines\nif algorithm\nfunction\ninput is\ncallable or\nan array of\nnumbers</td>\n</tr>\n<tr><td>test_func</td>\n<td>Testing\nfunction for\ndocstring\nexamples</td>\n</tr>\n<tr><td>poch</td>\n<td>Computes the\nPochhammer\nsymbol</td>\n</tr>\n<tr><td>GLcoeffs</td>\n<td>Determines\nthe\nconvolution\nfilter\ncomposed of\ngeneralized\nbinomial\ncoefficients\nused in the\nGL algorithm</td>\n</tr>\n<tr><td>RLcoeffs</td>\n<td>Calculates\nthe\ncoefficients\nused in the\nRLpoint and\nRL\nalgorithms</td>\n</tr>\n<tr><td>RLmatrix</td>\n<td>Determines\nthe matrix\nused in the\nRL algorithm</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>To contribute to this project, see the <a href=\"https://github.com/snimpids/differint/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">contributing guidelines</a>.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Baleanu, D., Diethelm, K., Scalas, E., &amp; Trujillo, J.J. (2012).\nFractional Calculus: Models and Numerical Methods. World Scientific.</p>\n<p>Oldham, K.B. &amp; Spanier, J. (1974). The Fractional Calculus: Theory and\nApplications of Differentiation and Integration to Arbitrary Order.\nAcademic Press Inc.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT \u00c2\u00a9 <a href=\"2018\" rel=\"nofollow\">Matthew Adams</a></p>\n</div>\n\n          </div>"}, "last_serial": 3539232, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9347f9d0038a394d9086f464707578ed", "sha256": "3d9ca9f81ab7e7fb8d1a09b0393703bfdaaccf5f37ce49bf39a005b947837d9e"}, "downloads": -1, "filename": "differint-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9347f9d0038a394d9086f464707578ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3876, "upload_time": "2017-11-23T03:17:05", "upload_time_iso_8601": "2017-11-23T03:17:05.684160Z", "url": "https://files.pythonhosted.org/packages/16/a9/0e225656873d471d1b4df4e4aee41f3f3fa30ccd0eb473ab4fcf2aec96ba/differint-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bde8321a598fa6587bab6cfd918ba15", "sha256": "d49475ca759fe2511b1032aa71cdb354c8530e4d4649cf1f60cdb800857ea4c4"}, "downloads": -1, "filename": "differint-0.1.tar.gz", "has_sig": false, "md5_digest": "7bde8321a598fa6587bab6cfd918ba15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2358, "upload_time": "2017-11-23T03:17:07", "upload_time_iso_8601": "2017-11-23T03:17:07.247265Z", "url": "https://files.pythonhosted.org/packages/b4/a6/4b48b378dcf6044cbaf83cb8a33620c9112d86f3cfb69dffc1c41cef58c4/differint-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "954077f1f6a2fae0a2d24f6833d98b4f", "sha256": "953fe1a0ff8f613f67f7c67438c29be273f8f8d32d17c5aa14ac093daf7675e3"}, "downloads": -1, "filename": "differint-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "954077f1f6a2fae0a2d24f6833d98b4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4216, "upload_time": "2017-11-24T22:26:42", "upload_time_iso_8601": "2017-11-24T22:26:42.554945Z", "url": "https://files.pythonhosted.org/packages/f2/25/f5d20e29c3786957a3843c3b56de8ff42a2c67ff572cb12bd0abee0f0954/differint-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75efd2793d3ef80d8139019c472d756e", "sha256": "86d902b536ef958397bee87e439a99049c58e735b0567c6314186d3cec99e99d"}, "downloads": -1, "filename": "differint-0.2.tar.gz", "has_sig": false, "md5_digest": "75efd2793d3ef80d8139019c472d756e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2677, "upload_time": "2017-11-24T22:26:44", "upload_time_iso_8601": "2017-11-24T22:26:44.430179Z", "url": "https://files.pythonhosted.org/packages/f0/5a/77d324dface0dcbc3a9c557f3d830146109237401ab25e2d220066d74bf6/differint-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6f3eef4e64fc1e773ed29dceb68a9ec2", "sha256": "2a6f8a06d161f80a936006cb281d2a0636bce01acacfc4747c760de8335ef97d"}, "downloads": -1, "filename": "differint-0.3.tar.gz", "has_sig": false, "md5_digest": "6f3eef4e64fc1e773ed29dceb68a9ec2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5559, "upload_time": "2018-01-29T18:39:18", "upload_time_iso_8601": "2018-01-29T18:39:18.311252Z", "url": "https://files.pythonhosted.org/packages/31/5d/e959d9470771067d52878c872d4b9f54e7d5f57f2a43900e4b8619834549/differint-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "bf882ceefa32e7b7e3c057d97d86eb19", "sha256": "82427a5aaf5a504813850987a48513b8e6001afc28d546155d29ccce5cef4d1b"}, "downloads": -1, "filename": "differint-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bf882ceefa32e7b7e3c057d97d86eb19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6853, "upload_time": "2018-01-29T18:52:08", "upload_time_iso_8601": "2018-01-29T18:52:08.373966Z", "url": "https://files.pythonhosted.org/packages/5c/a2/5d621b50efc178bc06ef14184ca76352177f33759bed15ef31241c9641ff/differint-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "166d19380c829fad6de0ba276347c044", "sha256": "40f3e4f8666dc673b1edb0fea4faa97fc03d46bb7b860f337d54d474402b2220"}, "downloads": -1, "filename": "differint-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "166d19380c829fad6de0ba276347c044", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8988, "upload_time": "2018-01-31T18:58:12", "upload_time_iso_8601": "2018-01-31T18:58:12.433332Z", "url": "https://files.pythonhosted.org/packages/33/3a/6097c7a3ff780b8a8b9288cd1f07614be8e83265f3e1596e39bea5e1e7c5/differint-0.3.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "166d19380c829fad6de0ba276347c044", "sha256": "40f3e4f8666dc673b1edb0fea4faa97fc03d46bb7b860f337d54d474402b2220"}, "downloads": -1, "filename": "differint-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "166d19380c829fad6de0ba276347c044", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8988, "upload_time": "2018-01-31T18:58:12", "upload_time_iso_8601": "2018-01-31T18:58:12.433332Z", "url": "https://files.pythonhosted.org/packages/33/3a/6097c7a3ff780b8a8b9288cd1f07614be8e83265f3e1596e39bea5e1e7c5/differint-0.3.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:38:29 2020"}