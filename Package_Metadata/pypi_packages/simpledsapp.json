{"info": {"author": "Rudolph Pienaar", "author_email": "rudolph.pienaar@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pl-simpledsapp\n==============\n\n.. image:: https://badge.fury.io/py/simpledsapp.svg\n    :target: https://badge.fury.io/py/simpledsapp\n\n.. image:: https://travis-ci.org/FNNDSC/simpledsapp.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/simpledsapp\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pl-simpledsapp\n\n.. contents:: Table of Contents\n\n\nAbstract\n--------\n\n``simpledsapp`` is a simple DS plugin that copies directories file from an ``input`` to ``output``. If called with an optional ``--ignoreInputDir`` the plugin will simply write a JSON formatted timestamp to the output directory.\n\nSynopsis\n--------\n\n.. code::\n\n    python simpledsapp.py                                           \\\n        [-v <level>] [--verbosity <level>]                          \\\n        [--prefix <filePrefixString>]                               \\\n        [--sleepLength <sleepLength>]                               \\\n        [--ignoreInputDir]                                          \\\n        [--version]                                                 \\\n        [--man]                                                     \\\n        [--meta]                                                    \\\n        <inputDir>\n        <outputDir> \n\n\nRun\n----\n\nThis ``plugin`` can be run in two modes: natively as a python package or as a containerized docker image.\n\nUsing PyPI\n~~~~~~~~~~\n\nTo run from PyPI, simply do a \n\n.. code:: bash\n\n    pip install simpledsapp\n\nand run with\n\n.. code:: bash\n\n    simpledsapp.py --man /tmp /tmp\n\nto get inline help. To copy from one directory to another, simply do\n\n.. code:: bash\n\n    simpledsapp.py /some/input/directory /destination/directory\n\n\nUsing ``docker run``\n~~~~~~~~~~~~~~~~~~~~\n\nTo run using ``docker``, be sure to assign an \"input\" directory to ``/incoming`` and an output directory to ``/outgoing``. *Make sure that the* ``$(pwd)/out`` *directory is world writable!*\n\nNow, prefix all calls with \n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/out:/outgoing                             \\\n            fnndsc/pl-simpledsapp simpledsapp.py                        \\\n\nThus, getting inline help is:\n\n.. code:: bash\n\n    mkdir in out && chmod 777 out\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-simpledsapp simpledsapp.py                        \\\n            --man                                                       \\\n            /incoming /outgoing\n\nExamples\n--------\n\nCopy from input to output with a prefix\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAssign an \"input\" directory to ``/incoming`` and an output directory to ``/outgoing``\n\n.. code-block:: bash\n\n    mkdir in out && chmod 777 out\n    docker run -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing       \\\n            fnndsc/pl-simpledsapp simpledsapp.py                    \\\n            --prefix test-                                          \\\n            --sleepLength 0                                         \\\n            /incoming /outgoing\n\nThe above will create a copy of each file in the container's ``/incoming`` and prefix the file copied with the ``prefix`` text (in this case \"test-\"). The copies will be stored in the container's ``/outgoing`` directory.\n\nSimply write a timestamp to the output directory, ignoring the input completely\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAssign an \"input\" directory to ``/incoming`` and an output directory to ``/outgoing``\n\n.. code-block:: bash\n\n    mkdir in out && chmod 777 out\n    docker run -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing       \\\n            fnndsc/pl-simpledsapp simpledsapp.py                    \\\n            --ignoreInputDir                                        \\\n            /incoming /outgoing\n\nThis will simply create a file called ``timestamp.json`` in the output directory. This mode is useful to just create mock nodes in a Feed tree.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/pl-simpledsapp", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "simpledsapp", "package_url": "https://pypi.org/project/simpledsapp/", "platform": "", "project_url": "https://pypi.org/project/simpledsapp/", "project_urls": {"Homepage": "https://github.com/FNNDSC/pl-simpledsapp"}, "release_url": "https://pypi.org/project/simpledsapp/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "A simple/dummy ChRIS DS app", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/simpledsapp\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/simpledsapp.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f692f9df47cef67f94c3df49d46bbaeec4a3db3b/68747470733a2f2f62616467652e667572792e696f2f70792f73696d706c6564736170702e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/simpledsapp\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/simpledsapp.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5c4b8f2e3e535c556fe2ce64b5782dfb4ce79f0/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f73696d706c6564736170702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pl-simpledsapp\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#abstract\" id=\"id1\" rel=\"nofollow\">Abstract</a></li>\n<li><a href=\"#synopsis\" id=\"id2\" rel=\"nofollow\">Synopsis</a></li>\n<li><a href=\"#run\" id=\"id3\" rel=\"nofollow\">Run</a><ul>\n<li><a href=\"#using-pypi\" id=\"id4\" rel=\"nofollow\">Using PyPI</a></li>\n<li><a href=\"#using-docker-run\" id=\"id5\" rel=\"nofollow\">Using <tt>docker run</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#examples\" id=\"id6\" rel=\"nofollow\">Examples</a><ul>\n<li><a href=\"#copy-from-input-to-output-with-a-prefix\" id=\"id7\" rel=\"nofollow\">Copy from input to output with a prefix</a></li>\n<li><a href=\"#simply-write-a-timestamp-to-the-output-directory-ignoring-the-input-completely\" id=\"id8\" rel=\"nofollow\">Simply write a timestamp to the output directory, ignoring the input completely</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"abstract\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Abstract</a></h2>\n<p><tt>simpledsapp</tt> is a simple DS plugin that copies directories file from an <tt>input</tt> to <tt>output</tt>. If called with an optional <tt><span class=\"pre\">--ignoreInputDir</span></tt> the plugin will simply write a JSON formatted timestamp to the output directory.</p>\n</div>\n<div id=\"synopsis\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Synopsis</a></h2>\n<pre>python simpledsapp.py                                           \\\n    [-v &lt;level&gt;] [--verbosity &lt;level&gt;]                          \\\n    [--prefix &lt;filePrefixString&gt;]                               \\\n    [--sleepLength &lt;sleepLength&gt;]                               \\\n    [--ignoreInputDir]                                          \\\n    [--version]                                                 \\\n    [--man]                                                     \\\n    [--meta]                                                    \\\n    &lt;inputDir&gt;\n    &lt;outputDir&gt;\n</pre>\n</div>\n<div id=\"run\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Run</a></h2>\n<p>This <tt>plugin</tt> can be run in two modes: natively as a python package or as a containerized docker image.</p>\n<div id=\"using-pypi\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Using PyPI</a></h3>\n<p>To run from PyPI, simply do a</p>\n<pre>pip install simpledsapp\n</pre>\n<p>and run with</p>\n<pre>simpledsapp.py --man /tmp /tmp\n</pre>\n<p>to get inline help. To copy from one directory to another, simply do</p>\n<pre>simpledsapp.py /some/input/directory /destination/directory\n</pre>\n</div>\n<div id=\"using-docker-run\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Using <tt>docker run</tt></a></h3>\n<p>To run using <tt>docker</tt>, be sure to assign an \u201cinput\u201d directory to <tt>/incoming</tt> and an output directory to <tt>/outgoing</tt>. <em>Make sure that the</em> <tt><span class=\"pre\">$(pwd)/out</span></tt> <em>directory is world writable!</em></p>\n<p>Now, prefix all calls with</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing                             <span class=\"se\">\\\n</span>        fnndsc/pl-simpledsapp simpledsapp.py                        <span class=\"se\">\\</span>\n</pre>\n<p>Thus, getting inline help is:</p>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-simpledsapp simpledsapp.py                        <span class=\"se\">\\\n</span>        --man                                                       <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n</div>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Examples</a></h2>\n<div id=\"copy-from-input-to-output-with-a-prefix\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Copy from input to output with a prefix</a></h3>\n<p>Assign an \u201cinput\u201d directory to <tt>/incoming</tt> and an output directory to <tt>/outgoing</tt></p>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing       <span class=\"se\">\\\n</span>        fnndsc/pl-simpledsapp simpledsapp.py                    <span class=\"se\">\\\n</span>        --prefix test-                                          <span class=\"se\">\\\n</span>        --sleepLength <span class=\"m\">0</span>                                         <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n<p>The above will create a copy of each file in the container\u2019s <tt>/incoming</tt> and prefix the file copied with the <tt>prefix</tt> text (in this case \u201ctest-\u201c). The copies will be stored in the container\u2019s <tt>/outgoing</tt> directory.</p>\n</div>\n<div id=\"simply-write-a-timestamp-to-the-output-directory-ignoring-the-input-completely\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Simply write a timestamp to the output directory, ignoring the input completely</a></h3>\n<p>Assign an \u201cinput\u201d directory to <tt>/incoming</tt> and an output directory to <tt>/outgoing</tt></p>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing       <span class=\"se\">\\\n</span>        fnndsc/pl-simpledsapp simpledsapp.py                    <span class=\"se\">\\\n</span>        --ignoreInputDir                                        <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n<p>This will simply create a file called <tt>timestamp.json</tt> in the output directory. This mode is useful to just create mock nodes in a Feed tree.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5000052, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1cb685e6dd9d190cae58071d034ab709", "sha256": "6b718b0d5ffba5c102287c4775d62b86d3a2be9ab8f4a7f2e4885fbce963ceb4"}, "downloads": -1, "filename": "simpledsapp-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1cb685e6dd9d190cae58071d034ab709", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4989, "upload_time": "2019-03-28T20:10:32", "upload_time_iso_8601": "2019-03-28T20:10:32.803868Z", "url": "https://files.pythonhosted.org/packages/c5/bb/a11ee200f5c948e2d1bc742b7aed2a774ebb0fc323283d162ef3984f577d/simpledsapp-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "60534ac62bfe3a144debca9d631e7979", "sha256": "b6e5da05e304e95a53c057248e0075f132b6693cc1b3ca7d47d845326b4a841b"}, "downloads": -1, "filename": "simpledsapp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "60534ac62bfe3a144debca9d631e7979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4995, "upload_time": "2019-03-28T20:13:10", "upload_time_iso_8601": "2019-03-28T20:13:10.542061Z", "url": "https://files.pythonhosted.org/packages/33/f8/e20fd0119d65808505baa93e64900652f2961c645971622bb621ef31c299/simpledsapp-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4ad52d36b999f95d1044d1163a670782", "sha256": "8e956e6037a9c3be234b825aeaaa2e11bb195482e66f8f812aa7efaa499bc601"}, "downloads": -1, "filename": "simpledsapp-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4ad52d36b999f95d1044d1163a670782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4974, "upload_time": "2019-03-28T20:23:25", "upload_time_iso_8601": "2019-03-28T20:23:25.843643Z", "url": "https://files.pythonhosted.org/packages/fc/90/2abb50a9a7666ff58e522dec008f8945272e2e144d4fbd4379e298c759ef/simpledsapp-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f47c266b5305f737e996de7ff4c473c9", "sha256": "9a7a2245113c00ea8cff8a65e57e7bb7f452e51b25c43fe25f0201d6089ed7f4"}, "downloads": -1, "filename": "simpledsapp-1.0.3.tar.gz", "has_sig": false, "md5_digest": "f47c266b5305f737e996de7ff4c473c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4989, "upload_time": "2019-03-28T20:30:34", "upload_time_iso_8601": "2019-03-28T20:30:34.328501Z", "url": "https://files.pythonhosted.org/packages/b8/8b/cdc8d01566e262ae15df0f76640d446fb2c1321b0c6e8309b2c9f72c4b66/simpledsapp-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f47c266b5305f737e996de7ff4c473c9", "sha256": "9a7a2245113c00ea8cff8a65e57e7bb7f452e51b25c43fe25f0201d6089ed7f4"}, "downloads": -1, "filename": "simpledsapp-1.0.3.tar.gz", "has_sig": false, "md5_digest": "f47c266b5305f737e996de7ff4c473c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4989, "upload_time": "2019-03-28T20:30:34", "upload_time_iso_8601": "2019-03-28T20:30:34.328501Z", "url": "https://files.pythonhosted.org/packages/b8/8b/cdc8d01566e262ae15df0f76640d446fb2c1321b0c6e8309b2c9f72c4b66/simpledsapp-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:51 2020"}