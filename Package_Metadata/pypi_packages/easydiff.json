{"info": {"author": "Yang Zhou, Ruby Zhang, Kangli Wu, and Emily Gould", "author_email": "yangzhou@g.harvard.edu, yiqingzhang@fas.harvard.edu, kangliwu@hsph.harvard.edu, egould@mba2020.hbs.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# EasyDiff [![Build Status](https://travis-ci.com/CrackAD/cs207-FinalProject.svg?branch=master)](https://travis-ci.com/CrackAD/cs207-FinalProject) [![codecov](https://codecov.io/gh/CrackAD/cs207-FinalProject/branch/master/graph/badge.svg)](https://codecov.io/gh/CrackAD/cs207-FinalProject)\n\n\nEasyDiff is an automatic differentiation python library with forward and reverse mode supported. EasyDiff is developed as a Harvard CS207 (19Fall) course project by **Group 18: [Yang Zhou](https://github.com/YangZhou1997), [Ruby Zhang](https://github.com/Ruby122), [Kangli Wu](https://github.com/KangliMalorie), and [Emily Gould](https://github.com/coolcilantro).** Check our [documentation](./docs/documentation.md) for more details.  \n\n## How to use CrackAD\n\n#### Installation\n\n##### Option One: Downloading Using Pip\n\n**Get The Package**\n\nSimply open your terminal and type the following command:\n```\npip install EasyDiff\n```\n**Update The Package**\n\nTo get new releases, paste this into your terminal:\n```\npip install EasyDiff --upgrade\n```\nWe highly recommend installing the package with `pip`. Yet, if that doesn't work for you, you can still get our package with the second option below.\n\n##### Option Two: Downloading From GitHub\n\n**Clone the Repository**\n\nClone our GitHub repository and navigate into this directory in your terminal:\n```\ngit clone https://github.com/CrackAD/cs207-FinalProject.git\n```\nIn order to use the CrackAD package, you'll need to create a virtual environment. We recommend conda because it is both a package and environment manager and is language agnostic. Please run the following commands in a terminal:\n\n**Create Conda Environment** \n\nCreate an environment with the command, where `env_name` is the name of your choice. Since our package requires the  `NumPy` package, we also install it at this step: \n```\nconda create --name env_name python numpy\n```\n\n**Activate the Environment**\n\nTo activate the Conda environment just created, run the following line:\n```\nsource activate env_name\n```\nOr \n```\nconda activate env_name\n```\nYet, it is possible that the second one doesn't work because conda will complain that the shell hasn't been configured to use conda activate. So we would recommend using the first line.\n\n**Install Packages**\n\nIf you haven't installed `NumPy` in the first step, or if you ever need to install another package, simply do the following:\n```\nconda install numpy\n```\n\nTo check whether the installation succeeded, we could list out all installed packages in this environment:\n```\nconda list\n```\n\nIf the `conda install` did not work, try `pip install`:\n```\npip install Numpy\n```\nNote that it is suggested to always try `conda install` first.\n\n#### Demonstration\n\nTo use CrackAD, create a .py file (eg, `driver.py`) with the following lines of code:\n```\nfrom EasyDiff.ad import AD\nfrom EasyDiff.var import Var\nfrom EasyDiff.rev_var import Rev_Var\nfrom EasyDiff.ad import AD_Mode\nimport numpy as np\n\n# test forward mode. \n# give it a function of your choice\nfunc = lambda x,y: Var.log(x) ** Var.sin(y)\n\n# give the initial values to take the derivatives at\nad = AD(vals=np.array([2, 2]), ders=np.array([1, 1]), mode=AD_Mode.FORWARD)\n\n# calculate and print the derivatives\nprint(\"Var.log(x) ** Var.sin(y): {}\".format(vars(ad.auto_diff(func))))\n\n# test reverse mode. \nfunc = lambda x,y: Rev_Var.log(x) ** Rev_Var.sin(y)\nad = AD(vals=np.array([2, 2]), ders=np.array([1, 1]), mode=AD_Mode.REVERSE)\nprint(\"Rev_Var.log(x) ** Rev_Var.sin(y): {}\".format(vars(ad.auto_diff(func))))\n```\nThen, you can run the file in a terminal as follows:\n```\npython3 driver.py\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CrackAD/cs207-FinalProject", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "easydiff", "package_url": "https://pypi.org/project/easydiff/", "platform": "", "project_url": "https://pypi.org/project/easydiff/", "project_urls": {"Homepage": "https://github.com/CrackAD/cs207-FinalProject"}, "release_url": "https://pypi.org/project/easydiff/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An automatic differentiation library (support forward and reverse mode)", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>EasyDiff <a href=\"https://travis-ci.com/CrackAD/cs207-FinalProject\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfeb8411d54990b442925f65c7c97e3f76ba6d78/68747470733a2f2f7472617669732d63692e636f6d2f437261636b41442f63733230372d46696e616c50726f6a6563742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/CrackAD/cs207-FinalProject\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d15b2335e829bcc5d8e37edf5b000ba95d687f7/68747470733a2f2f636f6465636f762e696f2f67682f437261636b41442f63733230372d46696e616c50726f6a6563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></h1>\n<p>EasyDiff is an automatic differentiation python library with forward and reverse mode supported. EasyDiff is developed as a Harvard CS207 (19Fall) course project by <strong>Group 18: <a href=\"https://github.com/YangZhou1997\" rel=\"nofollow\">Yang Zhou</a>, <a href=\"https://github.com/Ruby122\" rel=\"nofollow\">Ruby Zhang</a>, <a href=\"https://github.com/KangliMalorie\" rel=\"nofollow\">Kangli Wu</a>, and <a href=\"https://github.com/coolcilantro\" rel=\"nofollow\">Emily Gould</a>.</strong> Check our <a href=\"./docs/documentation.md\" rel=\"nofollow\">documentation</a> for more details.</p>\n<h2>How to use CrackAD</h2>\n<h4>Installation</h4>\n<h5>Option One: Downloading Using Pip</h5>\n<p><strong>Get The Package</strong></p>\n<p>Simply open your terminal and type the following command:</p>\n<pre><code>pip install EasyDiff\n</code></pre>\n<p><strong>Update The Package</strong></p>\n<p>To get new releases, paste this into your terminal:</p>\n<pre><code>pip install EasyDiff --upgrade\n</code></pre>\n<p>We highly recommend installing the package with <code>pip</code>. Yet, if that doesn't work for you, you can still get our package with the second option below.</p>\n<h5>Option Two: Downloading From GitHub</h5>\n<p><strong>Clone the Repository</strong></p>\n<p>Clone our GitHub repository and navigate into this directory in your terminal:</p>\n<pre><code>git clone https://github.com/CrackAD/cs207-FinalProject.git\n</code></pre>\n<p>In order to use the CrackAD package, you'll need to create a virtual environment. We recommend conda because it is both a package and environment manager and is language agnostic. Please run the following commands in a terminal:</p>\n<p><strong>Create Conda Environment</strong></p>\n<p>Create an environment with the command, where <code>env_name</code> is the name of your choice. Since our package requires the  <code>NumPy</code> package, we also install it at this step:</p>\n<pre><code>conda create --name env_name python numpy\n</code></pre>\n<p><strong>Activate the Environment</strong></p>\n<p>To activate the Conda environment just created, run the following line:</p>\n<pre><code>source activate env_name\n</code></pre>\n<p>Or</p>\n<pre><code>conda activate env_name\n</code></pre>\n<p>Yet, it is possible that the second one doesn't work because conda will complain that the shell hasn't been configured to use conda activate. So we would recommend using the first line.</p>\n<p><strong>Install Packages</strong></p>\n<p>If you haven't installed <code>NumPy</code> in the first step, or if you ever need to install another package, simply do the following:</p>\n<pre><code>conda install numpy\n</code></pre>\n<p>To check whether the installation succeeded, we could list out all installed packages in this environment:</p>\n<pre><code>conda list\n</code></pre>\n<p>If the <code>conda install</code> did not work, try <code>pip install</code>:</p>\n<pre><code>pip install Numpy\n</code></pre>\n<p>Note that it is suggested to always try <code>conda install</code> first.</p>\n<h4>Demonstration</h4>\n<p>To use CrackAD, create a .py file (eg, <code>driver.py</code>) with the following lines of code:</p>\n<pre><code>from EasyDiff.ad import AD\nfrom EasyDiff.var import Var\nfrom EasyDiff.rev_var import Rev_Var\nfrom EasyDiff.ad import AD_Mode\nimport numpy as np\n\n# test forward mode. \n# give it a function of your choice\nfunc = lambda x,y: Var.log(x) ** Var.sin(y)\n\n# give the initial values to take the derivatives at\nad = AD(vals=np.array([2, 2]), ders=np.array([1, 1]), mode=AD_Mode.FORWARD)\n\n# calculate and print the derivatives\nprint(\"Var.log(x) ** Var.sin(y): {}\".format(vars(ad.auto_diff(func))))\n\n# test reverse mode. \nfunc = lambda x,y: Rev_Var.log(x) ** Rev_Var.sin(y)\nad = AD(vals=np.array([2, 2]), ders=np.array([1, 1]), mode=AD_Mode.REVERSE)\nprint(\"Rev_Var.log(x) ** Rev_Var.sin(y): {}\".format(vars(ad.auto_diff(func))))\n</code></pre>\n<p>Then, you can run the file in a terminal as follows:</p>\n<pre><code>python3 driver.py\n</code></pre>\n\n          </div>"}, "last_serial": 6268506, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "0c03ba8b4fb55aeaa39703d826d692aa", "sha256": "8d30709671b5ae3bd107b71dcca3126f4e8901ad8e646529070c22fe4e1197be"}, "downloads": -1, "filename": "easydiff-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0c03ba8b4fb55aeaa39703d826d692aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16959, "upload_time": "2019-12-09T20:30:54", "upload_time_iso_8601": "2019-12-09T20:30:54.826361Z", "url": "https://files.pythonhosted.org/packages/dc/d8/93ba1805a9537dd0100376dcaa0d4ec6df52c5405ede43c921fc74348b66/easydiff-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29e9829874ea3d020a4b3536da7ef41e", "sha256": "0cf6a4084819f1dc284cb18a96e3083b9895b6aa226dbfa5fe2f32a9b395e470"}, "downloads": -1, "filename": "easydiff-0.0.3.tar.gz", "has_sig": false, "md5_digest": "29e9829874ea3d020a4b3536da7ef41e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12986, "upload_time": "2019-12-09T20:30:57", "upload_time_iso_8601": "2019-12-09T20:30:57.089865Z", "url": "https://files.pythonhosted.org/packages/56/6d/70508990759d03211eaba6a962cbfac01238a9070c95cc9b60712f835a7a/easydiff-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c03ba8b4fb55aeaa39703d826d692aa", "sha256": "8d30709671b5ae3bd107b71dcca3126f4e8901ad8e646529070c22fe4e1197be"}, "downloads": -1, "filename": "easydiff-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0c03ba8b4fb55aeaa39703d826d692aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16959, "upload_time": "2019-12-09T20:30:54", "upload_time_iso_8601": "2019-12-09T20:30:54.826361Z", "url": "https://files.pythonhosted.org/packages/dc/d8/93ba1805a9537dd0100376dcaa0d4ec6df52c5405ede43c921fc74348b66/easydiff-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29e9829874ea3d020a4b3536da7ef41e", "sha256": "0cf6a4084819f1dc284cb18a96e3083b9895b6aa226dbfa5fe2f32a9b395e470"}, "downloads": -1, "filename": "easydiff-0.0.3.tar.gz", "has_sig": false, "md5_digest": "29e9829874ea3d020a4b3536da7ef41e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12986, "upload_time": "2019-12-09T20:30:57", "upload_time_iso_8601": "2019-12-09T20:30:57.089865Z", "url": "https://files.pythonhosted.org/packages/56/6d/70508990759d03211eaba6a962cbfac01238a9070c95cc9b60712f835a7a/easydiff-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:24 2020"}