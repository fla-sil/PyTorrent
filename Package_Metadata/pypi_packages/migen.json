{"info": {"author": "Sebastien Bourdeauducq", "author_email": "sb@m-labs.hk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"], "description": "### Migen (Milkymist generator)\n\n<img src=\"https://github.com/m-labs/migen/raw/master/doc/migen_logo.png\" alt=\"migen logo\" width=\"150\"/>\n\n#### A Python toolbox for building complex digital hardware\n\nDespite being faster than schematics entry, hardware design with Verilog and\nVHDL remains tedious and inefficient for several reasons. The event-driven\nmodel introduces issues and manual coding that are unnecessary for synchronous\ncircuits, which represent the lion's share of today's logic designs. Counter-\nintuitive arithmetic rules result in steeper learning curves and provide a\nfertile ground for subtle bugs in designs. Finally, support for procedural\ngeneration of logic (metaprogramming) through \"generate\" statements is very\nlimited and restricts the ways code can be made generic, reused and organized.\n\nTo address those issues, we have developed the **Migen FHDL** library that\nreplaces the event-driven paradigm with the notions of combinatorial and\nsynchronous statements, has arithmetic rules that make integers always behave\nlike mathematical integers, and most importantly allows the design's logic to\nbe constructed by a Python program. This last point enables hardware designers\nto take advantage of the richness of the Python language - object oriented\nprogramming, function parameters, generators, operator overloading, libraries,\netc. - to build well organized, reusable and elegant designs.\n\nOther Migen libraries are built on FHDL and provide various tools such as a\nsystem-on-chip interconnect infrastructure, a dataflow programming system, a\nmore traditional high-level synthesizer that compiles Python routines into\nstate machines with datapaths, and a simulator that allows test benches to be\nwritten in Python.\n\nSee the doc/ folder for more technical information.\n\nMigen is designed for Python 3.5. Note that Migen is **not** spelled MiGen.\n\n#### Quick Links\n\nCode repository:\nhttps://github.com/m-labs/migen\n\nSystem-on-chip design based on Migen:\nhttps://github.com/m-labs/misoc\n\nOnline documentation:\nhttps://m-labs.hk/migen/manual/\n\n#### Quick intro\n\n```python\nfrom migen import *\nfrom migen.build.platforms import m1\nplat = m1.Platform()\nled = plat.request(\"user_led\")\nm = Module()\ncounter = Signal(26)\nm.comb += led.eq(counter[25])\nm.sync += counter.eq(counter + 1)\nplat.build(m)\n```\n\n#### License\n\nMigen is released under the very permissive two-clause BSD license. Under the\nterms of this license, you are authorized to use Migen for closed-source\nproprietary designs.\nEven though we do not require you to do so, those things are awesome, so please\ndo them if possible:\n* tell us that you are using Migen\n* put the Migen logo (doc/migen_logo.svg) on the page of a product using it,\n  with a link to http://m-labs.hk\n* cite Migen in publications related to research it has helped\n* send us feedback and suggestions for improvements\n* send us bug reports when something goes wrong\n* send us the modifications and improvements you have done to Migen. The use\n   of \"git format-patch\" is recommended. If your submission is large and\n   complex and/or you are not sure how to proceed, feel free to discuss it on\n   the mailing list or IRC (#m-labs on Freenode) beforehand.\n\nSee LICENSE file for full copyright and license info. You can contact us on the\npublic mailing list devel [AT] lists.m-labs.hk.\n\n  \"Electricity! It's like magic!\"", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/m-labs/migen", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://m-labs.hk", "keywords": "HDL,ASIC,FPGA,hardware design", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "migen", "package_url": "https://pypi.org/project/migen/", "platform": "Any", "project_url": "https://pypi.org/project/migen/", "project_urls": {"Download": "https://github.com/m-labs/migen", "Homepage": "https://m-labs.hk"}, "release_url": "https://pypi.org/project/migen/0.9.2/", "requires_dist": null, "requires_python": "", "summary": "Python toolbox for building complex digital hardware", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>Migen (Milkymist generator)</h3>\n<img alt=\"migen logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68e0446e5bda91c24854a49a2c9a2501fa64a075/68747470733a2f2f6769746875622e636f6d2f6d2d6c6162732f6d6967656e2f7261772f6d61737465722f646f632f6d6967656e5f6c6f676f2e706e67\" width=\"150\">\n<h4>A Python toolbox for building complex digital hardware</h4>\n<p>Despite being faster than schematics entry, hardware design with Verilog and\nVHDL remains tedious and inefficient for several reasons. The event-driven\nmodel introduces issues and manual coding that are unnecessary for synchronous\ncircuits, which represent the lion's share of today's logic designs. Counter-\nintuitive arithmetic rules result in steeper learning curves and provide a\nfertile ground for subtle bugs in designs. Finally, support for procedural\ngeneration of logic (metaprogramming) through \"generate\" statements is very\nlimited and restricts the ways code can be made generic, reused and organized.</p>\n<p>To address those issues, we have developed the <strong>Migen FHDL</strong> library that\nreplaces the event-driven paradigm with the notions of combinatorial and\nsynchronous statements, has arithmetic rules that make integers always behave\nlike mathematical integers, and most importantly allows the design's logic to\nbe constructed by a Python program. This last point enables hardware designers\nto take advantage of the richness of the Python language - object oriented\nprogramming, function parameters, generators, operator overloading, libraries,\netc. - to build well organized, reusable and elegant designs.</p>\n<p>Other Migen libraries are built on FHDL and provide various tools such as a\nsystem-on-chip interconnect infrastructure, a dataflow programming system, a\nmore traditional high-level synthesizer that compiles Python routines into\nstate machines with datapaths, and a simulator that allows test benches to be\nwritten in Python.</p>\n<p>See the doc/ folder for more technical information.</p>\n<p>Migen is designed for Python 3.5. Note that Migen is <strong>not</strong> spelled MiGen.</p>\n<h4>Quick Links</h4>\n<p>Code repository:\n<a href=\"https://github.com/m-labs/migen\" rel=\"nofollow\">https://github.com/m-labs/migen</a></p>\n<p>System-on-chip design based on Migen:\n<a href=\"https://github.com/m-labs/misoc\" rel=\"nofollow\">https://github.com/m-labs/misoc</a></p>\n<p>Online documentation:\n<a href=\"https://m-labs.hk/migen/manual/\" rel=\"nofollow\">https://m-labs.hk/migen/manual/</a></p>\n<h4>Quick intro</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">migen</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">migen.build.platforms</span> <span class=\"kn\">import</span> <span class=\"n\">m1</span>\n<span class=\"n\">plat</span> <span class=\"o\">=</span> <span class=\"n\">m1</span><span class=\"o\">.</span><span class=\"n\">Platform</span><span class=\"p\">()</span>\n<span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">plat</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s2\">\"user_led\"</span><span class=\"p\">)</span>\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">()</span>\n<span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"n\">Signal</span><span class=\"p\">(</span><span class=\"mi\">26</span><span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">comb</span> <span class=\"o\">+=</span> <span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">[</span><span class=\"mi\">25</span><span class=\"p\">])</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">sync</span> <span class=\"o\">+=</span> <span class=\"n\">counter</span><span class=\"o\">.</span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">counter</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">plat</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span>\n</pre>\n<h4>License</h4>\n<p>Migen is released under the very permissive two-clause BSD license. Under the\nterms of this license, you are authorized to use Migen for closed-source\nproprietary designs.\nEven though we do not require you to do so, those things are awesome, so please\ndo them if possible:</p>\n<ul>\n<li>tell us that you are using Migen</li>\n<li>put the Migen logo (doc/migen_logo.svg) on the page of a product using it,\nwith a link to <a href=\"http://m-labs.hk\" rel=\"nofollow\">http://m-labs.hk</a></li>\n<li>cite Migen in publications related to research it has helped</li>\n<li>send us feedback and suggestions for improvements</li>\n<li>send us bug reports when something goes wrong</li>\n<li>send us the modifications and improvements you have done to Migen. The use\nof \"git format-patch\" is recommended. If your submission is large and\ncomplex and/or you are not sure how to proceed, feel free to discuss it on\nthe mailing list or IRC (#m-labs on Freenode) beforehand.</li>\n</ul>\n<p>See LICENSE file for full copyright and license info. You can contact us on the\npublic mailing list devel [AT] lists.m-labs.hk.</p>\n<p>\"Electricity! It's like magic!\"</p>\n\n          </div>"}, "last_serial": 6071719, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "a87052a24962d5afa8f8b76145772537", "sha256": "dbdda1172dd5c49d9a6fdafdc62219d064d2b694ad89730142b93577a00cc36e"}, "downloads": -1, "filename": "migen-0.9.tar.gz", "has_sig": false, "md5_digest": "a87052a24962d5afa8f8b76145772537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196453, "upload_time": "2019-06-03T10:25:46", "upload_time_iso_8601": "2019-06-03T10:25:46.634866Z", "url": "https://files.pythonhosted.org/packages/06/98/f4fe3af8acadd348c5cdefe97958bf95854921a79f128d2564070d3ee68b/migen-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "a5e7d037d67f41dbb50b3af58ec2ad8a", "sha256": "be5dddbb77ea7e7011cc3134afe2a0fc0d78789da504866b007a4ed0f385fb29"}, "downloads": -1, "filename": "migen-0.9.1.tar.gz", "has_sig": false, "md5_digest": "a5e7d037d67f41dbb50b3af58ec2ad8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196632, "upload_time": "2019-06-04T10:42:54", "upload_time_iso_8601": "2019-06-04T10:42:54.857154Z", "url": "https://files.pythonhosted.org/packages/52/79/7f5f7fc6736ec719ab888eb9f015147a0a408574bb40341ffed1fd327995/migen-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "6ddab129fad17bac245744667065f3ae", "sha256": "8fdb776d3556fda82aaa95e936b54196a92afc8427564e94f5ecc34a5681085d"}, "downloads": -1, "filename": "migen-0.9.2.tar.gz", "has_sig": false, "md5_digest": "6ddab129fad17bac245744667065f3ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129103, "upload_time": "2019-11-03T18:16:27", "upload_time_iso_8601": "2019-11-03T18:16:27.607725Z", "url": "https://files.pythonhosted.org/packages/cc/f0/b38382ac821861c193992817e3687e49122d09f130f6a33a7d01a4f01bc1/migen-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ddab129fad17bac245744667065f3ae", "sha256": "8fdb776d3556fda82aaa95e936b54196a92afc8427564e94f5ecc34a5681085d"}, "downloads": -1, "filename": "migen-0.9.2.tar.gz", "has_sig": false, "md5_digest": "6ddab129fad17bac245744667065f3ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129103, "upload_time": "2019-11-03T18:16:27", "upload_time_iso_8601": "2019-11-03T18:16:27.607725Z", "url": "https://files.pythonhosted.org/packages/cc/f0/b38382ac821861c193992817e3687e49122d09f130f6a33a7d01a4f01bc1/migen-0.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:46 2020"}