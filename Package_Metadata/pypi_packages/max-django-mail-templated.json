{"info": {"author": "Artem Rizhov, Max hurl", "author_email": "artem.rizhov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==========\nDjango-Mail-Templated\n==========\n\nThis is a fork of `https://github.com/artemrizhov/django-mail-templated\n<https://github.com/artemrizhov/django-mail-templated/>`_. that includes support for template extension and supports Django 1.8\n\n.. image:: https://travis-ci.org/maximilianhurl/django-mail-templated.svg\n   :target: https://travis-ci.org/maximilianhurl/django-mail-templated\n\n\nOverview\n=================\nThis is a tiny wrapper around the standard EmailMessage class and send_mail()\nfunction. Just pass template_name and context as the first parameters then use\nas normal.\n\nInstallation\n=================\nRun::\n\n    $ pip install max-django-mail-templated\n\nAnd register the app in your settings file::\n\n    INSTALLED_APPS = (\n        ...\n        'mail_templated'\n    )\n\nUsage\n=================\nWrite a template to send a plain text message. Note that first and last newline\nwill be removed::\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\nOr for an html message::\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block html %}\n    This is an <strong>html</strong> message.\n    {% endblock %}\n\nOr for a multipart message you can use both blocks::\n\n    {% block subject %}\n    Hello {{ user.name }}\n    {% endblock %}\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\n    {% block html %}\n    This is an <strong>html</strong> message.\n    {% endblock %}\n\nOr leave out some block to set it manually later with EmailMessage class::\n\n    {% block body %}\n    This is a plain text message.\n    {% endblock %}\n\nNow you can send it::\n\n    from mail_templated import send_mail\n    send_mail('email/hello.tpl', {'user': user}, from_email, [user.email])\n\n\nYou can add in BCC like this::\n\n    send_mail('email/hello.tpl', {'user': user}, from_email, [user.email], bcc=[user2.email])\n\nYou can also add an attachment like this::\n\n\tsend_mail('email/hello.tpl', {'user': user}, from_email, [user.email], attachment=\"file/path.pdf\")\n\nOr if you wish to add more control over message creation then use the class form::\n\n    from mail_templated import EmailMessage\n    message = EmailMessage('email/hello.tpl', {'user': user}, to=[user.email])\n    # ... attach a file, etc\n    message.send()\n\nThat's all. Please create an issue at GitHub if you have any notes,\n...or just email :)\n\nExtends\n=================\n\nYou can extend templates like so::\n\n\t{% extends \"email_base.tpl\" %}\n\n\t{% block subjectcontent %}\n\tSubject\n\t{% endblock %}\n\n\t{% block bodycontent %}\n\t This is a plain text message.\n\t{% endblock %}\n\n\t{% block htmlcontent %}\n\tThis is an <strong>html</strong> message.\n\t{% endblock %}\n\n\nand email_base.tpl would look like this::\n\n\t{% block subject %}\n\t{% block subjectcontent %}{% endblock %}\n\t{% endblock %}\n\n\t{% block body %}\n\tA heading or logo\n\t{% block bodycontent %}{% endblock %}\n\t{% endblock %}\n\n\t{% block html %}\n\tA heading or logo\n\t{% block htmlcontent %}{% endblock %}\n\t{% endblock %}\n\n**Please note that you must include all blocks in the base template file.**\n\nIf you dont include one of the blocks in the base template it will not be shown. So you cannot, for example, move the subject block into the top file.\n\n\nTests\n=================\n\nTo run the unit tests you first need to create a virutal env in project root directory.\n\n    virtualenv env\n\nThen you need to install the test requriements.\n\n    env/bin/pip install -r requirements.txt\n\nNow you can run the unit tests using the following command.\n\n    env/bin/python mail_templated/tests/runtests.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maximilianhurl/django-mail-templated", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "max-django-mail-templated", "package_url": "https://pypi.org/project/max-django-mail-templated/", "platform": "any", "project_url": "https://pypi.org/project/max-django-mail-templated/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/maximilianhurl/django-mail-templated"}, "release_url": "https://pypi.org/project/max-django-mail-templated/1.3/", "requires_dist": null, "requires_python": null, "summary": "Send emails with Django template system", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==========<br>Django-Mail-Templated<br>==========<br><br>This is a fork of `https://github.com/artemrizhov/django-mail-templated<br>&lt;https://github.com/artemrizhov/django-mail-templated/&gt;`_. that includes support for template extension and supports Django 1.8<br><br>.. image:: https://travis-ci.org/maximilianhurl/django-mail-templated.svg<br>   :target: https://travis-ci.org/maximilianhurl/django-mail-templated<br><br><br>Overview<br>=================<br>This is a tiny wrapper around the standard EmailMessage class and send_mail()<br>function. Just pass template_name and context as the first parameters then use<br>as normal.<br><br>Installation<br>=================<br>Run::<br><br>    $ pip install max-django-mail-templated<br><br>And register the app in your settings file::<br><br>    INSTALLED_APPS = (<br>        ...<br>        'mail_templated'<br>    )<br><br>Usage<br>=================<br>Write a template to send a plain text message. Note that first and last newline<br>will be removed::<br><br>    {% block subject %}<br>    Hello {{ user.name }}<br>    {% endblock %}<br><br>    {% block body %}<br>    This is a plain text message.<br>    {% endblock %}<br><br>Or for an html message::<br><br>    {% block subject %}<br>    Hello {{ user.name }}<br>    {% endblock %}<br><br>    {% block html %}<br>    This is an &lt;strong&gt;html&lt;/strong&gt; message.<br>    {% endblock %}<br><br>Or for a multipart message you can use both blocks::<br><br>    {% block subject %}<br>    Hello {{ user.name }}<br>    {% endblock %}<br><br>    {% block body %}<br>    This is a plain text message.<br>    {% endblock %}<br><br>    {% block html %}<br>    This is an &lt;strong&gt;html&lt;/strong&gt; message.<br>    {% endblock %}<br><br>Or leave out some block to set it manually later with EmailMessage class::<br><br>    {% block body %}<br>    This is a plain text message.<br>    {% endblock %}<br><br>Now you can send it::<br><br>    from mail_templated import send_mail<br>    send_mail('email/hello.tpl', {'user': user}, from_email, [user.email])<br><br><br>You can add in BCC like this::<br><br>    send_mail('email/hello.tpl', {'user': user}, from_email, [user.email], bcc=[user2.email])<br><br>You can also add an attachment like this::<br><br>\tsend_mail('email/hello.tpl', {'user': user}, from_email, [user.email], attachment=\"file/path.pdf\")<br><br>Or if you wish to add more control over message creation then use the class form::<br><br>    from mail_templated import EmailMessage<br>    message = EmailMessage('email/hello.tpl', {'user': user}, to=[user.email])<br>    # ... attach a file, etc<br>    message.send()<br><br>That's all. Please create an issue at GitHub if you have any notes,<br>...or just email :)<br><br>Extends<br>=================<br><br>You can extend templates like so::<br><br>\t{% extends \"email_base.tpl\" %}<br><br>\t{% block subjectcontent %}<br>\tSubject<br>\t{% endblock %}<br><br>\t{% block bodycontent %}<br>\t This is a plain text message.<br>\t{% endblock %}<br><br>\t{% block htmlcontent %}<br>\tThis is an &lt;strong&gt;html&lt;/strong&gt; message.<br>\t{% endblock %}<br><br><br>and email_base.tpl would look like this::<br><br>\t{% block subject %}<br>\t{% block subjectcontent %}{% endblock %}<br>\t{% endblock %}<br><br>\t{% block body %}<br>\tA heading or logo<br>\t{% block bodycontent %}{% endblock %}<br>\t{% endblock %}<br><br>\t{% block html %}<br>\tA heading or logo<br>\t{% block htmlcontent %}{% endblock %}<br>\t{% endblock %}<br><br>**Please note that you must include all blocks in the base template file.**<br><br>If you dont include one of the blocks in the base template it will not be shown. So you cannot, for example, move the subject block into the top file.<br><br><br>Tests<br>=================<br><br>To run the unit tests you first need to create a virutal env in project root directory.<br><br>    virtualenv env<br><br>Then you need to install the test requriements.<br><br>    env/bin/pip install -r requirements.txt<br><br>Now you can run the unit tests using the following command.<br><br>    env/bin/python mail_templated/tests/runtests.py\n          </div>"}, "last_serial": 1677264, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "261e51c60ffc3c744dedd2f012b5dc18", "sha256": "bdf4b718eac8e9f8af50e9094b7a7a82c015200d13f56df739f581d19b738cec"}, "downloads": -1, "filename": "max-django-mail-templated-1.0.tar.gz", "has_sig": false, "md5_digest": "261e51c60ffc3c744dedd2f012b5dc18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4241, "upload_time": "2015-04-30T22:26:11", "upload_time_iso_8601": "2015-04-30T22:26:11.712852Z", "url": "https://files.pythonhosted.org/packages/aa/e2/d19d5958ce9dad11f7aafa912b89370c62fadbdb9d214545ed83a4520e4c/max-django-mail-templated-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "276182f2392277161739286047064b28", "sha256": "49a4520c88f75fd19f2b8327708cb3b8b78f86c2ae7010c6d774eb3d5cde703f"}, "downloads": -1, "filename": "max-django-mail-templated-1.1.tar.gz", "has_sig": false, "md5_digest": "276182f2392277161739286047064b28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4236, "upload_time": "2015-04-30T23:19:01", "upload_time_iso_8601": "2015-04-30T23:19:01.763120Z", "url": "https://files.pythonhosted.org/packages/83/57/3d6362dfd38dffdc8f2d946bdb67b990228630b06fcb2f84c12eeaef46fb/max-django-mail-templated-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "58eea3e6dde091681773fbb5904c7fc1", "sha256": "761c28c32a4725673853cc4a40b810b1d552367143decf7d03e11185113a2028"}, "downloads": -1, "filename": "max-django-mail-templated-1.2.tar.gz", "has_sig": false, "md5_digest": "58eea3e6dde091681773fbb5904c7fc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4246, "upload_time": "2015-05-05T15:32:30", "upload_time_iso_8601": "2015-05-05T15:32:30.799059Z", "url": "https://files.pythonhosted.org/packages/31/44/0d51c9018da950b19c2c209fe4d8b475b343b7c139e6f37a251494ceedda/max-django-mail-templated-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "b9c8073d3ff4e3718fb507f315561a99", "sha256": "f13389cbf2625dc8da2d2a4db7f7e12625fef0a6b9f53b579dbd5107f5357fd6"}, "downloads": -1, "filename": "max-django-mail-templated-1.3.tar.gz", "has_sig": false, "md5_digest": "b9c8073d3ff4e3718fb507f315561a99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4251, "upload_time": "2015-08-14T10:45:31", "upload_time_iso_8601": "2015-08-14T10:45:31.640894Z", "url": "https://files.pythonhosted.org/packages/dd/18/8f30fd31190bea5bb523ab1c8d31599da4845f021aa4f145742276cad6ec/max-django-mail-templated-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9c8073d3ff4e3718fb507f315561a99", "sha256": "f13389cbf2625dc8da2d2a4db7f7e12625fef0a6b9f53b579dbd5107f5357fd6"}, "downloads": -1, "filename": "max-django-mail-templated-1.3.tar.gz", "has_sig": false, "md5_digest": "b9c8073d3ff4e3718fb507f315561a99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4251, "upload_time": "2015-08-14T10:45:31", "upload_time_iso_8601": "2015-08-14T10:45:31.640894Z", "url": "https://files.pythonhosted.org/packages/dd/18/8f30fd31190bea5bb523ab1c8d31599da4845f021aa4f145742276cad6ec/max-django-mail-templated-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:08 2020"}