{"info": {"author": "M. Linfoot, N. Freundlich", "author_email": "linfoot2@illinois.edu, norbert4@illinois.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ColorizeXL\nPython implementation of the following [paper](https://www.cse.huji.ac.il/~yweiss/Colorization/) by Anat Levin, Dani Lischinski, Yair Weiss, puublished in SIGGRAPH04.\n\nWe have adapted their technique to make it suitable for large images, by using overlapping patches with annotations.\n\n\n## Installation:\n\n`pip install colorizexl`\n\n\n# Usage\n\n## Colorization of Black & White images\nPrevious to using the package, you have to setup the following:\n* original black & white image\n* annotation color image (please check details in the paper)\n\n\n## Recolorization of color images\nPrevious to using the package, you have to setup the following:\n* original color image\n* annotation image (please check details in the paper): white where the color stays the same, different color where you want to recolorize\n\n## Command line\nCall the `colorizexl.py` from command line, to colorize or recolorize images.\n\n`python colorizexl.py --annotated=<path_to_annotated_image>\n                      --grayscale=<path_to_image_to_(re)colorize> \n                      --output=<path_to_(re)colorized_image>\n                      --recolorize=True/False`\n\n## Python code\n```\nfrom colorizexl import ColorizeXL\n\ncolorizer = ColorizeXL(\n        input_grayscale_name, input_annotation_name, recolorize=False\n    )\n\noutput = colorizer.colorize(step_size=patch_size, overlap=overlap, n=neighbour)\n```\n\n# Customization\n\nFrom `Python` you have the options to finetune the following parameters:\n* `step_size` (default 100), defines the size of the square patches\n* `overlap` (default 2), defines the overlap of the patches\n* `n` (default 10), defines the radius of the neighbours in a circle for computing the color \n\n# Package organization\n\n## colorizexl\nContains the ColorizeXL class, the engine behind the (re)colorization.\nIts functioning is as follows:\n* *__colorize*: will take an `image` and an `annotation` as inputs and will colorize the image; it will return a colorized image\n* *colorize*: main entry point in the algorithm, this method will split the initial image in patches and send them to *__colorize*. It will also take care of the overlaps to ensure smooth transition between colorized regions\n* *colorize_no_patch*: wrapper for *__colorize* method, this function is the initial implementation of the algorithm, which is slow and will crash for large images\n\n## notebooks\nContains the notebooks used for experimenting:\n* *CS445_usage*: example code for colorizing and recolorizing images (example images from the original paper are provided); output of the example images can be seen [here](https://github.com/nfreundlich/colorizexl/blob/master/notebooks/CS445_usage.ipynb)\n* *CS445_master*: our inital experiments with colorization\n* *CS445_patch_sort*: experiments with intelligent sorting of patches to be recolorized\n\n\n## tests\nContains the test code used for fine-tuning and evaluating our package.\n* *test_hyperparameters*: loops over the hyperparameters (patch size, overlap and neighbours) to compute the MSE (mean squared error), SSIM (structural similarity) and PSNR (peak signal to noise ratio); from these, we have mainly relied on  MSE; it also saves an image for each combination, to allow manual selection of the most pleasing visual effect\n* *test_timing*: downscales a large image by a factor of 0.1 to 1.0 (step 0.1) and measures the time needed for computation (please note that the images resulting from downscaling will not necessarily be of a high quality); execution time of our code scales linearly with the number of pixels to recolorize\n* *test_timing_no_patch*: similar to *test_timing* but using a one-shot colorization; this original method presents an exponential increase in time per pixels to be colorized\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nfreundlich/colorizexl", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "colorizexl", "package_url": "https://pypi.org/project/colorizexl/", "platform": "", "project_url": "https://pypi.org/project/colorizexl/", "project_urls": {"Homepage": "https://github.com/nfreundlich/colorizexl"}, "release_url": "https://pypi.org/project/colorizexl/0.2.1/", "requires_dist": ["absl-py (==0.9.0)", "appdirs (==1.4.3)", "appnope (==0.1.0)", "astor (==0.8.1)", "attrs (==19.3.0)", "backcall (==0.1.0)", "black (==19.10b0)", "bleach (==3.1.4)", "cachetools (==4.1.0)", "certifi (==2020.4.5.1)", "chardet (==3.0.4)", "click (==7.1.1)", "cycler (==0.10.0)", "decorator (==4.4.2)", "defusedxml (==0.6.0)", "entrypoints (==0.3)", "gast (==0.2.2)", "google-auth (==1.13.1)", "google-auth-oauthlib (==0.4.1)", "google-pasta (==0.2.0)", "grpcio (==1.28.1)", "h5py (==2.10.0)", "idna (==2.9)", "imageio (==2.8.0)", "importlib-metadata (==1.6.0)", "ipykernel (==5.2.0)", "ipython (==7.13.0)", "ipython-genutils (==0.2.0)", "ipywidgets (==7.5.1)", "jedi (==0.16.0)", "Jinja2 (==2.11.1)", "joblib (==0.14.1)", "jsonschema (==3.2.0)", "jupyter (==1.0.0)", "jupyter-client (==6.1.2)", "jupyter-console (==6.1.0)", "jupyter-core (==4.6.3)", "jupyter-http-over-ws (==0.0.8)", "Keras-Applications (==1.0.8)", "Keras-Preprocessing (==1.1.0)", "kiwisolver (==1.2.0)", "Markdown (==3.2.1)", "MarkupSafe (==1.1.1)", "matplotlib (==3.2.1)", "mistune (==0.8.4)", "nbconvert (==5.6.1)", "nbformat (==5.0.5)", "networkx (==2.4)", "notebook (==6.0.3)", "numpy (==1.18.2)", "oauthlib (==3.1.0)", "opencv-python (==4.2.0.34)", "opt-einsum (==3.2.0)", "pandas (==1.0.3)", "pandocfilters (==1.4.2)", "parso (==0.6.2)", "pathspec (==0.8.0)", "pexpect (==4.8.0)", "pickleshare (==0.7.5)", "Pillow (==7.1.1)", "prometheus-client (==0.7.1)", "prompt-toolkit (==3.0.5)", "protobuf (==3.11.3)", "ptyprocess (==0.6.0)", "pyasn1 (==0.4.8)", "pyasn1-modules (==0.2.8)", "Pygments (==2.6.1)", "pyparsing (==2.4.7)", "pyrsistent (==0.16.0)", "python-dateutil (==2.8.1)", "pytz (==2019.3)", "PyWavelets (==1.1.1)", "pyzmq (==19.0.0)", "qtconsole (==4.7.2)", "QtPy (==1.9.0)", "regex (==2020.4.4)", "requests (==2.23.0)", "requests-oauthlib (==1.3.0)", "rsa (==4.0)", "scikit-image (==0.16.2)", "scikit-learn (==0.22.2.post1)", "scipy (==1.4.1)", "Send2Trash (==1.5.0)", "six (==1.14.0)", "tensorboard (==2.1.1)", "tensorflow (==2.1.0)", "tensorflow-estimator (==2.1.0)", "termcolor (==1.1.0)", "terminado (==0.8.3)", "testpath (==0.4.4)", "toml (==0.10.0)", "torch (==1.4.0)", "torchvision (==0.5.0)", "tornado (==6.0.4)", "traitlets (==4.3.3)", "typed-ast (==1.4.1)", "urllib3 (==1.25.8)", "wcwidth (==0.1.9)", "webencodings (==0.5.1)", "Werkzeug (==1.0.1)", "widgetsnbextension (==3.5.1)", "wrapt (==1.12.1)", "zipp (==3.1.0)"], "requires_python": "", "summary": "Colorize and recolorize large images", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ColorizeXL</h1>\n<p>Python implementation of the following <a href=\"https://www.cse.huji.ac.il/%7Eyweiss/Colorization/\" rel=\"nofollow\">paper</a> by Anat Levin, Dani Lischinski, Yair Weiss, puublished in SIGGRAPH04.</p>\n<p>We have adapted their technique to make it suitable for large images, by using overlapping patches with annotations.</p>\n<h2>Installation:</h2>\n<p><code>pip install colorizexl</code></p>\n<h1>Usage</h1>\n<h2>Colorization of Black &amp; White images</h2>\n<p>Previous to using the package, you have to setup the following:</p>\n<ul>\n<li>original black &amp; white image</li>\n<li>annotation color image (please check details in the paper)</li>\n</ul>\n<h2>Recolorization of color images</h2>\n<p>Previous to using the package, you have to setup the following:</p>\n<ul>\n<li>original color image</li>\n<li>annotation image (please check details in the paper): white where the color stays the same, different color where you want to recolorize</li>\n</ul>\n<h2>Command line</h2>\n<p>Call the <code>colorizexl.py</code> from command line, to colorize or recolorize images.</p>\n<p><code>python colorizexl.py --annotated=&lt;path_to_annotated_image&gt; --grayscale=&lt;path_to_image_to_(re)colorize&gt; --output=&lt;path_to_(re)colorized_image&gt; --recolorize=True/False</code></p>\n<h2>Python code</h2>\n<pre><code>from colorizexl import ColorizeXL\n\ncolorizer = ColorizeXL(\n        input_grayscale_name, input_annotation_name, recolorize=False\n    )\n\noutput = colorizer.colorize(step_size=patch_size, overlap=overlap, n=neighbour)\n</code></pre>\n<h1>Customization</h1>\n<p>From <code>Python</code> you have the options to finetune the following parameters:</p>\n<ul>\n<li><code>step_size</code> (default 100), defines the size of the square patches</li>\n<li><code>overlap</code> (default 2), defines the overlap of the patches</li>\n<li><code>n</code> (default 10), defines the radius of the neighbours in a circle for computing the color</li>\n</ul>\n<h1>Package organization</h1>\n<h2>colorizexl</h2>\n<p>Contains the ColorizeXL class, the engine behind the (re)colorization.\nIts functioning is as follows:</p>\n<ul>\n<li><em>__colorize</em>: will take an <code>image</code> and an <code>annotation</code> as inputs and will colorize the image; it will return a colorized image</li>\n<li><em>colorize</em>: main entry point in the algorithm, this method will split the initial image in patches and send them to <em>__colorize</em>. It will also take care of the overlaps to ensure smooth transition between colorized regions</li>\n<li><em>colorize_no_patch</em>: wrapper for <em>__colorize</em> method, this function is the initial implementation of the algorithm, which is slow and will crash for large images</li>\n</ul>\n<h2>notebooks</h2>\n<p>Contains the notebooks used for experimenting:</p>\n<ul>\n<li><em>CS445_usage</em>: example code for colorizing and recolorizing images (example images from the original paper are provided); output of the example images can be seen <a href=\"https://github.com/nfreundlich/colorizexl/blob/master/notebooks/CS445_usage.ipynb\" rel=\"nofollow\">here</a></li>\n<li><em>CS445_master</em>: our inital experiments with colorization</li>\n<li><em>CS445_patch_sort</em>: experiments with intelligent sorting of patches to be recolorized</li>\n</ul>\n<h2>tests</h2>\n<p>Contains the test code used for fine-tuning and evaluating our package.</p>\n<ul>\n<li><em>test_hyperparameters</em>: loops over the hyperparameters (patch size, overlap and neighbours) to compute the MSE (mean squared error), SSIM (structural similarity) and PSNR (peak signal to noise ratio); from these, we have mainly relied on  MSE; it also saves an image for each combination, to allow manual selection of the most pleasing visual effect</li>\n<li><em>test_timing</em>: downscales a large image by a factor of 0.1 to 1.0 (step 0.1) and measures the time needed for computation (please note that the images resulting from downscaling will not necessarily be of a high quality); execution time of our code scales linearly with the number of pixels to recolorize</li>\n<li><em>test_timing_no_patch</em>: similar to <em>test_timing</em> but using a one-shot colorization; this original method presents an exponential increase in time per pixels to be colorized</li>\n</ul>\n\n          </div>"}, "last_serial": 7172213, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c0ca3fca40f4fe490e15b0a626b3c1c2", "sha256": "b05d0800564379631eb950c6fbc14bae9f4924467524722c2498a60e6d535f5c"}, "downloads": -1, "filename": "colorizexl-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c0ca3fca40f4fe490e15b0a626b3c1c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 679164, "upload_time": "2020-04-27T14:02:01", "upload_time_iso_8601": "2020-04-27T14:02:01.496445Z", "url": "https://files.pythonhosted.org/packages/18/f5/6b7a773d54350e61a18c0312a8d8bc0e2cc20ae79658eb53c4af2a141865/colorizexl-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0129d0804d750fb9844c09aaf8eb2402", "sha256": "fbbfc804181defcccbe6f8e40f7eeeed0035565872ec925846ed2b72b9e9bb15"}, "downloads": -1, "filename": "colorizexl-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0129d0804d750fb9844c09aaf8eb2402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 679565, "upload_time": "2020-04-27T14:02:05", "upload_time_iso_8601": "2020-04-27T14:02:05.516967Z", "url": "https://files.pythonhosted.org/packages/4f/39/11df49abd6e1c1a25d99354f7c721f264addd3893e9885e92f39bba380c7/colorizexl-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7b6ce6f4d0b48bbd6f662f8e25b70504", "sha256": "5570a45f244491cfa1dcd17d011aee6deccfdf79a54232dce4fe28dccf5fb595"}, "downloads": -1, "filename": "colorizexl-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7b6ce6f4d0b48bbd6f662f8e25b70504", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 679823, "upload_time": "2020-05-01T11:02:39", "upload_time_iso_8601": "2020-05-01T11:02:39.279111Z", "url": "https://files.pythonhosted.org/packages/3c/f6/d98a39c1e718f0f9554870672ee197ac6dcb9642f36e1a28109987caaf1d/colorizexl-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e3c3226d482854e558860ea500bb484", "sha256": "0cedbc25e14eba2d895a5ffa5235ecd19d083f9b1e1df7cb99cb3ba614b4a2db"}, "downloads": -1, "filename": "colorizexl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6e3c3226d482854e558860ea500bb484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 680902, "upload_time": "2020-05-01T11:02:43", "upload_time_iso_8601": "2020-05-01T11:02:43.877391Z", "url": "https://files.pythonhosted.org/packages/da/61/b273c272224a716028c5d1125009b527b4710e3f2724e1cdddf7a191179d/colorizexl-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a8e5a3f07adfe8c168670a2c99c5a7f8", "sha256": "10bd1bb5768d92f32aa78ca9bd72feb72a494c4efe86cb28bee628b0a27b1985"}, "downloads": -1, "filename": "colorizexl-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a8e5a3f07adfe8c168670a2c99c5a7f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 478793, "upload_time": "2020-05-05T07:56:55", "upload_time_iso_8601": "2020-05-05T07:56:55.005602Z", "url": "https://files.pythonhosted.org/packages/50/37/fc1efa54e499dde5d027f45fcb49512693bbf0f9b2eef4a58ad6638d7874/colorizexl-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "371049b42fd7afaaeb56a98f64980ff5", "sha256": "d5d315d94115e4aaf6f21031a72cb4ad900a454d03f2c335dc5a5d152f15d52a"}, "downloads": -1, "filename": "colorizexl-0.2.0.tar.gz", "has_sig": false, "md5_digest": "371049b42fd7afaaeb56a98f64980ff5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 479156, "upload_time": "2020-05-05T07:56:59", "upload_time_iso_8601": "2020-05-05T07:56:59.470722Z", "url": "https://files.pythonhosted.org/packages/8e/3a/134e2bdd0c16f620f5f86a55974728d69cf72a8dd6ceb6b445486ea7acad/colorizexl-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d42c5662328cd04383d73cdcbefa7e7a", "sha256": "454dc74f66c9d734beb4e5e235a4f2591eb262121ca124a5547f99432c813f70"}, "downloads": -1, "filename": "colorizexl-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d42c5662328cd04383d73cdcbefa7e7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 478791, "upload_time": "2020-05-05T14:04:21", "upload_time_iso_8601": "2020-05-05T14:04:21.936812Z", "url": "https://files.pythonhosted.org/packages/d1/33/15af08fddfd9ca3b5f843873b65a92227021af38eebfb23f1f9557049d70/colorizexl-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "987feb3ced6a1302df3eadbcb0a9c65a", "sha256": "b63ed9362a4bd8af3ecb715042f1676903daf97dae732cd4cbd1ab90e6303921"}, "downloads": -1, "filename": "colorizexl-0.2.1.tar.gz", "has_sig": false, "md5_digest": "987feb3ced6a1302df3eadbcb0a9c65a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 479154, "upload_time": "2020-05-05T14:04:25", "upload_time_iso_8601": "2020-05-05T14:04:25.509567Z", "url": "https://files.pythonhosted.org/packages/63/88/d90d47dd6fc40c787f19ac38439ed1cc5ae7eea51a914eff7b64989515fd/colorizexl-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d42c5662328cd04383d73cdcbefa7e7a", "sha256": "454dc74f66c9d734beb4e5e235a4f2591eb262121ca124a5547f99432c813f70"}, "downloads": -1, "filename": "colorizexl-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d42c5662328cd04383d73cdcbefa7e7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 478791, "upload_time": "2020-05-05T14:04:21", "upload_time_iso_8601": "2020-05-05T14:04:21.936812Z", "url": "https://files.pythonhosted.org/packages/d1/33/15af08fddfd9ca3b5f843873b65a92227021af38eebfb23f1f9557049d70/colorizexl-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "987feb3ced6a1302df3eadbcb0a9c65a", "sha256": "b63ed9362a4bd8af3ecb715042f1676903daf97dae732cd4cbd1ab90e6303921"}, "downloads": -1, "filename": "colorizexl-0.2.1.tar.gz", "has_sig": false, "md5_digest": "987feb3ced6a1302df3eadbcb0a9c65a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 479154, "upload_time": "2020-05-05T14:04:25", "upload_time_iso_8601": "2020-05-05T14:04:25.509567Z", "url": "https://files.pythonhosted.org/packages/63/88/d90d47dd6fc40c787f19ac38439ed1cc5ae7eea51a914eff7b64989515fd/colorizexl-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:36 2020"}