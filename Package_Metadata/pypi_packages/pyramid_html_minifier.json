{"info": {"author": "Davide Moro", "author_email": "davide.moro@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "pyramid_html_minifier\n=====================\n\n|build status|_\n|code coverage|_\n\n.. |build status| image:: https://secure.travis-ci.org/davidemoro/pyramid_html_minifier.png?branch=master\n.. _build status: http://travis-ci.org/davidemoro/pyramid_html_minifier\n.. |code coverage| image:: http://codecov.io/github/davidemoro/pyramid_html_minifier/coverage.svg?branch=master\n.. _code coverage: http://codecov.io/github/davidemoro/pyramid_html_minifier?branch=master\n\n``pyramid_html_minifier`` introduces *safe* html minification\nwith *no overhead* for ``Pylons/Pyramid`` applications powered by:\n\n* ``Chameleon`` templates (``ZPT`` based template implementation). ``Chameleon``\n  templates are still valid ``XML``, so they can be safely minified with not\n  too aggressive minification options\n\nWhat you get with pyramid_html_minifier\n---------------------------------------\n\n* **bandwith and performance.** Save precious kilobytes (~50-80% depending on your templates).\n  It is quite important for bandwith usage and improved performance,\n  even more important if you have to manage a big and fat\n  ``Pylons/Pyramid`` based website with a lot of traffic.\n  See https://www.npmjs.com/package/html-minifier\n\n* **no overhead.** The minification is based on a build step (a sort of\n  gulp/grunt based collectstatic). So no minification on the fly\n\n* **safe template/html minification**. It works even with ``macros``\n  and ``slots``.\n  This pattern has been adopted on production websites with no issues\n  after 1 year. So I dare say it is a safe pattern after a\n  1-year quarantine without any sort of problems. You should only\n  remember to disable too aggressive minification options (see next\n  sections)\n\nWhat pyramid_html_minifier does\n-------------------------------\n\nWhat ``pyramid_html_minifier`` introduces:\n\n* a custom ``.html`` renderer (interpreted as ``Chameleon`` templates)\n\n* support for ``dist`` vs ``app``, commonly used in ``Yeoman``\n  projects. ``app`` will be used for development, while ``dist``\n  in production mode (based on a template minification build).\n\nThis way you can start developing static mock applications (even\nheavily Javascript based) using the ``Yeoman`` workflow and use your\nmodified html files enriched by macros and slots as ``Chameleon``\ntemplates.\n\nHow to use pyramid_html_minifier\n--------------------------------\n\nHere you can see how to enable Chameleon templates minification in your\n``Pylons/Pyramid`` web application:\n\n* put your ``Chameleon`` template file in ``templates/app/master.html`` and its\n  minified version in ``templates/dist/master.html`` (the ``.html`` extension is\n  important). Obviously don't do minification by hand, add ``Yeoman`` in your\n  development workflow with its related tools for automation.\n  This package does not provide any ``gulp`` or ``grunt`` configuration,\n  you are supposed to create your own setup\n\n* register a normal ``Pylons/Pyramid`` callable view with\n  ``renderer=\"your_plugin:templates/{0}/master.html\"``. The ``{0}`` is only\n  a placeholder that ``pyramid_html_minifier`` will fill depending on your\n  settings. See next step\n\n* tell ``pyramid_html_minifier`` if you want to pick up standard templates or\n  minified ones adding the ``pyramid_html_minifier.placeholder`` setting to your\n  ``.ini`` file. Typical value for development is ``app`` (the default one),\n  while ``dist`` is usually used for prodcution environments.\n  Example: ``pyramid_html_minifier.placeholder = dist``\n\n* add ``pyramid_html_minifier`` to your pyramid.includes setting\n\nThe final .ini file should looks like the following one::\n\n    pyramid.includes =\n        ...\n        pyramid_html_minifier\n    \n    ...\n    \n    pyramid_html_minifier.placeholder = dist\n\nSafe minification options\n-------------------------\n\nI suggest to automate the build process integrating the ``Yeoman`` workflow into your\n``Pylons/Pyramid`` project for the best developing experience.\n\nI suggest to use the ``html-minifier`` minificator and its friend ``gulp-html-minifier``\ndisabling too aggressive html minification options.\n\nIn particular be sure that the ``keepClosingSlash`` option is enabled and\n``removeAttributeQuotes`` is disabled.\n\nHere you can see a real example working configuration::\n\n    const htmlMinifierOptions = {\n      collapseBooleanAttributes: true,\n      collapseWhitespace: true,\n      removeComments: true,\n      removeCommentsFromCDATA: true,\n      removeEmptyAttributes: true,\n      removeRedundantAttributes: true,\n      useShortDoctype: true,\n      keepClosingSlash: true,\n      }\n    \n    ...\n    \n    gulp.task('html', ['styles'], () => {\n      const assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\n    \n      return gulp.src('app/*.html')\n        ..\n        .pipe($.if('*.html', $.htmlMinifier(htmlMinifierOptions)))\n        ...\n        .pipe(gulp.dest('dist'));\n\nWhy Yeoman\n----------\n\nWhy ``Yeoman``:\n\n* better and more modern web development experience\n\n* minification and/or resources concatenation (images, css, Javascript)\n\n* more. See http://yeoman.io/\n\nLinks\n-----\n\nHere you can find a project using ``pyramid_html_minifier``:\n\n* https://github.com/Kotti/kotti_frontend\n\nMore details about case studies using the same pattern:\n\n* http://davidemoro.blogspot.it/2014/09/plone-angularjs-yeoman-starter.html\n\n* http://davidemoro.blogspot.com/2014/09/pyramid-starter-seed-yeomam-part-1.html\n\n* http://davidemoro.blogspot.it/2013/08/yeoman-express-and-angularjs.html\n\nAuthors\n-------\n\n* Davide Moro (https://twitter.com/davidemoro)\n\n\n0.1 (2015-08-03)\n----------------\n\n-  Initial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davidemoro/pyramid_html_minifier", "keywords": "web pyramid pylons", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pyramid_html_minifier", "package_url": "https://pypi.org/project/pyramid_html_minifier/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyramid_html_minifier/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/davidemoro/pyramid_html_minifier"}, "release_url": "https://pypi.org/project/pyramid_html_minifier/0.1/", "requires_dist": null, "requires_python": null, "summary": "pyramid_html_minifier", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://travis-ci.org/davidemoro/pyramid_html_minifier\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77a81f084b3ad6c67e2b080be834d95be57d17ff/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6461766964656d6f726f2f707972616d69645f68746d6c5f6d696e69666965722e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://codecov.io/github/davidemoro/pyramid_html_minifier?branch=master\" rel=\"nofollow\"><img alt=\"code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db94ced20549b5c2df0b5cc30405b5b6dddc5d87/687474703a2f2f636f6465636f762e696f2f6769746875622f6461766964656d6f726f2f707972616d69645f68746d6c5f6d696e69666965722f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><tt>pyramid_html_minifier</tt> introduces <em>safe</em> html minification\nwith <em>no overhead</em> for <tt>Pylons/Pyramid</tt> applications powered by:</p>\n<ul>\n<li><tt>Chameleon</tt> templates (<tt>ZPT</tt> based template implementation). <tt>Chameleon</tt>\ntemplates are still valid <tt>XML</tt>, so they can be safely minified with not\ntoo aggressive minification options</li>\n</ul>\n<div id=\"what-you-get-with-pyramid-html-minifier\">\n<h2>What you get with pyramid_html_minifier</h2>\n<ul>\n<li><strong>bandwith and performance.</strong> Save precious kilobytes (~50-80% depending on your templates).\nIt is quite important for bandwith usage and improved performance,\neven more important if you have to manage a big and fat\n<tt>Pylons/Pyramid</tt> based website with a lot of traffic.\nSee <a href=\"https://www.npmjs.com/package/html-minifier\" rel=\"nofollow\">https://www.npmjs.com/package/html-minifier</a></li>\n<li><strong>no overhead.</strong> The minification is based on a build step (a sort of\ngulp/grunt based collectstatic). So no minification on the fly</li>\n<li><strong>safe template/html minification</strong>. It works even with <tt>macros</tt>\nand <tt>slots</tt>.\nThis pattern has been adopted on production websites with no issues\nafter 1 year. So I dare say it is a safe pattern after a\n1-year quarantine without any sort of problems. You should only\nremember to disable too aggressive minification options (see next\nsections)</li>\n</ul>\n</div>\n<div id=\"what-pyramid-html-minifier-does\">\n<h2>What pyramid_html_minifier does</h2>\n<p>What <tt>pyramid_html_minifier</tt> introduces:</p>\n<ul>\n<li>a custom <tt>.html</tt> renderer (interpreted as <tt>Chameleon</tt> templates)</li>\n<li>support for <tt>dist</tt> vs <tt>app</tt>, commonly used in <tt>Yeoman</tt>\nprojects. <tt>app</tt> will be used for development, while <tt>dist</tt>\nin production mode (based on a template minification build).</li>\n</ul>\n<p>This way you can start developing static mock applications (even\nheavily Javascript based) using the <tt>Yeoman</tt> workflow and use your\nmodified html files enriched by macros and slots as <tt>Chameleon</tt>\ntemplates.</p>\n</div>\n<div id=\"how-to-use-pyramid-html-minifier\">\n<h2>How to use pyramid_html_minifier</h2>\n<p>Here you can see how to enable Chameleon templates minification in your\n<tt>Pylons/Pyramid</tt> web application:</p>\n<ul>\n<li>put your <tt>Chameleon</tt> template file in <tt>templates/app/master.html</tt> and its\nminified version in <tt>templates/dist/master.html</tt> (the <tt>.html</tt> extension is\nimportant). Obviously don\u2019t do minification by hand, add <tt>Yeoman</tt> in your\ndevelopment workflow with its related tools for automation.\nThis package does not provide any <tt>gulp</tt> or <tt>grunt</tt> configuration,\nyou are supposed to create your own setup</li>\n<li>register a normal <tt>Pylons/Pyramid</tt> callable view with\n<tt><span class=\"pre\">renderer=\"your_plugin:templates/{0}/master.html\"</span></tt>. The <tt>{0}</tt> is only\na placeholder that <tt>pyramid_html_minifier</tt> will fill depending on your\nsettings. See next step</li>\n<li>tell <tt>pyramid_html_minifier</tt> if you want to pick up standard templates or\nminified ones adding the <tt>pyramid_html_minifier.placeholder</tt> setting to your\n<tt>.ini</tt> file. Typical value for development is <tt>app</tt> (the default one),\nwhile <tt>dist</tt> is usually used for prodcution environments.\nExample: <tt>pyramid_html_minifier.placeholder = dist</tt></li>\n<li>add <tt>pyramid_html_minifier</tt> to your pyramid.includes setting</li>\n</ul>\n<p>The final .ini file should looks like the following one:</p>\n<pre>pyramid.includes =\n    ...\n    pyramid_html_minifier\n\n...\n\npyramid_html_minifier.placeholder = dist\n</pre>\n</div>\n<div id=\"safe-minification-options\">\n<h2>Safe minification options</h2>\n<p>I suggest to automate the build process integrating the <tt>Yeoman</tt> workflow into your\n<tt>Pylons/Pyramid</tt> project for the best developing experience.</p>\n<p>I suggest to use the <tt><span class=\"pre\">html-minifier</span></tt> minificator and its friend <tt><span class=\"pre\">gulp-html-minifier</span></tt>\ndisabling too aggressive html minification options.</p>\n<p>In particular be sure that the <tt>keepClosingSlash</tt> option is enabled and\n<tt>removeAttributeQuotes</tt> is disabled.</p>\n<p>Here you can see a real example working configuration:</p>\n<pre>const htmlMinifierOptions = {\n  collapseBooleanAttributes: true,\n  collapseWhitespace: true,\n  removeComments: true,\n  removeCommentsFromCDATA: true,\n  removeEmptyAttributes: true,\n  removeRedundantAttributes: true,\n  useShortDoctype: true,\n  keepClosingSlash: true,\n  }\n\n...\n\ngulp.task('html', ['styles'], () =&gt; {\n  const assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\n\n  return gulp.src('app/*.html')\n    ..\n    .pipe($.if('*.html', $.htmlMinifier(htmlMinifierOptions)))\n    ...\n    .pipe(gulp.dest('dist'));\n</pre>\n</div>\n<div id=\"why-yeoman\">\n<h2>Why Yeoman</h2>\n<p>Why <tt>Yeoman</tt>:</p>\n<ul>\n<li>better and more modern web development experience</li>\n<li>minification and/or resources concatenation (images, css, Javascript)</li>\n<li>more. See <a href=\"http://yeoman.io/\" rel=\"nofollow\">http://yeoman.io/</a></li>\n</ul>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<p>Here you can find a project using <tt>pyramid_html_minifier</tt>:</p>\n<ul>\n<li><a href=\"https://github.com/Kotti/kotti_frontend\" rel=\"nofollow\">https://github.com/Kotti/kotti_frontend</a></li>\n</ul>\n<p>More details about case studies using the same pattern:</p>\n<ul>\n<li><a href=\"http://davidemoro.blogspot.it/2014/09/plone-angularjs-yeoman-starter.html\" rel=\"nofollow\">http://davidemoro.blogspot.it/2014/09/plone-angularjs-yeoman-starter.html</a></li>\n<li><a href=\"http://davidemoro.blogspot.com/2014/09/pyramid-starter-seed-yeomam-part-1.html\" rel=\"nofollow\">http://davidemoro.blogspot.com/2014/09/pyramid-starter-seed-yeomam-part-1.html</a></li>\n<li><a href=\"http://davidemoro.blogspot.it/2013/08/yeoman-express-and-angularjs.html\" rel=\"nofollow\">http://davidemoro.blogspot.it/2013/08/yeoman-express-and-angularjs.html</a></li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Davide Moro (<a href=\"https://twitter.com/davidemoro\" rel=\"nofollow\">https://twitter.com/davidemoro</a>)</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h2>0.1 (2015-08-03)</h2>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1661845, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "674768c4b305ec4ba90c6e01499a8692", "sha256": "81689dfb584e4e857f2a55d4b492f3555c0e0dbd6c4441386b9c578ded9d6ce2"}, "downloads": -1, "filename": "pyramid_html_minifier-0.1.tar.gz", "has_sig": false, "md5_digest": "674768c4b305ec4ba90c6e01499a8692", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6972, "upload_time": "2015-08-03T12:46:07", "upload_time_iso_8601": "2015-08-03T12:46:07.223032Z", "url": "https://files.pythonhosted.org/packages/4f/b6/b1538707d8b7991e278cea9c4c8957aca7c429cf9ca17f7f585974127d88/pyramid_html_minifier-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "674768c4b305ec4ba90c6e01499a8692", "sha256": "81689dfb584e4e857f2a55d4b492f3555c0e0dbd6c4441386b9c578ded9d6ce2"}, "downloads": -1, "filename": "pyramid_html_minifier-0.1.tar.gz", "has_sig": false, "md5_digest": "674768c4b305ec4ba90c6e01499a8692", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6972, "upload_time": "2015-08-03T12:46:07", "upload_time_iso_8601": "2015-08-03T12:46:07.223032Z", "url": "https://files.pythonhosted.org/packages/4f/b6/b1538707d8b7991e278cea9c4c8957aca7c429cf9ca17f7f585974127d88/pyramid_html_minifier-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:26 2020"}