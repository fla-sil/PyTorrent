{"info": {"author": "Qianqian Fang", "author_email": "fangqq@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# JData for Python - a lightweight and portable data annotation method\n\n- Copyright: (C) Qianqian Fang (2019) <q.fang at neu.edu>\n- License: Apache License, Version 2.0\n- Version: 0.2\n- URL: https://github.com/fangq/pyjdata\n\n\nThe [JData Specification](https://github.com/fangq/jdata/) defines a lightweight \nlanguage-independent data annotation interface targetted at\nstoring and sharing complex data structures across different programming\nlanguages such as MATLAB, JavaScript, Python etc. Using JData formats, a \ncomplex Python data structure can be encoded as a `dict` object that is easily \nserialized as a JSON/binary JSON file and share such data between\nprograms of different languages.\n\n## How to install\n\n* Github: download from https://github.com/fangq/pyjdata\n* PIP: run `pip install jdata` see https://pypi.org/project/jdata/\n\n## How to use\n\nThe PyJData module is easy to use. You can use the `encode()/decode()` functions to\nencode Python data into JData annotation format, or decode JData structures into\nnative Python data, for example\n\n```\nimport jdata as jd\nimport numpy as np\na={'str':'test','num':1.2,'list':[1.1,[2.1]],'nan':float('nan'),'np':np.arange(1,5,dtype=np.uint8)}\njd.encode(a)\njd.decode(jd.encode(a))\nd1=jd.encode(a,{'compression':'zlib','base64':1})\nd1\njd.decode(d1,{'base64':1})\n```\n\nOne can further save the JData annotated data into JSON or binary JSON (UBJSON) files using\nthe `jdata.save` function, or loading JData-formatted data to Python using `jdata.load`\n\n```\nimport jdata as jd\nimport numpy as np\na={'str':'test','num':1.2,'list':[1.1,[2.1]],'nan':float('nan'),'np':np.arange(1,5,dtype=np.uint8)}\njd.save(a,'test.json')\nnewdata=jd.load('test.json')\nnewdata\n```", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/fangq/pyjdata/archive/v0.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fangq/pyjdata", "keywords": "JSON,JData,UBJSON,OpenJData,NeuroJData,JNIfTI,Encoder,Decoder", "license": "Apache license 2.0", "maintainer": "Qianqian Fang", "maintainer_email": "", "name": "jdata", "package_url": "https://pypi.org/project/jdata/", "platform": "any", "project_url": "https://pypi.org/project/jdata/", "project_urls": {"Download": "https://github.com/fangq/pyjdata/archive/v0.2.tar.gz", "Homepage": "https://github.com/fangq/pyjdata"}, "release_url": "https://pypi.org/project/jdata/0.2.4/", "requires_dist": null, "requires_python": "", "summary": "Encoding and decoding Python data structrues using portable JData-annotated formats", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># JData for Python - a lightweight and portable data annotation method</p>\n<ul>\n<li>Copyright: (C) Qianqian Fang (2019) &lt;q.fang at neu.edu&gt;</li>\n<li>License: Apache License, Version 2.0</li>\n<li>Version: 0.2</li>\n<li>URL: <a href=\"https://github.com/fangq/pyjdata\" rel=\"nofollow\">https://github.com/fangq/pyjdata</a></li>\n</ul>\n<p>The [JData Specification](<a href=\"https://github.com/fangq/jdata/\" rel=\"nofollow\">https://github.com/fangq/jdata/</a>) defines a lightweight\nlanguage-independent data annotation interface targetted at\nstoring and sharing complex data structures across different programming\nlanguages such as MATLAB, JavaScript, Python etc. Using JData formats, a\ncomplex Python data structure can be encoded as a <cite>dict</cite> object that is easily\nserialized as a JSON/binary JSON file and share such data between\nprograms of different languages.</p>\n<p>## How to install</p>\n<ul>\n<li>Github: download from <a href=\"https://github.com/fangq/pyjdata\" rel=\"nofollow\">https://github.com/fangq/pyjdata</a></li>\n<li>PIP: run <cite>pip install jdata</cite> see <a href=\"https://pypi.org/project/jdata/\" rel=\"nofollow\">https://pypi.org/project/jdata/</a></li>\n</ul>\n<p>## How to use</p>\n<p>The PyJData module is easy to use. You can use the <cite>encode()/decode()</cite> functions to\nencode Python data into JData annotation format, or decode JData structures into\nnative Python data, for example</p>\n<p><tt>`\nimport jdata as jd\nimport numpy as np\n<span class=\"pre\">a={'str':'test','num':1.2,'list':[1.1,[2.1]],'nan':float('nan'),'np':np.arange(1,5,dtype=np.uint8)}</span>\njd.encode(a)\njd.decode(jd.encode(a))\n<span class=\"pre\">d1=jd.encode(a,{'compression':'zlib','base64':1})</span>\nd1\n<span class=\"pre\">jd.decode(d1,{'base64':1})</span>\n`</tt></p>\n<p>One can further save the JData annotated data into JSON or binary JSON (UBJSON) files using\nthe <cite>jdata.save</cite> function, or loading JData-formatted data to Python using <cite>jdata.load</cite></p>\n<p><tt>`\nimport jdata as jd\nimport numpy as np\n<span class=\"pre\">a={'str':'test','num':1.2,'list':[1.1,[2.1]],'nan':float('nan'),'np':np.arange(1,5,dtype=np.uint8)}</span>\n<span class=\"pre\">jd.save(a,'test.json')</span>\n<span class=\"pre\">newdata=jd.load('test.json')</span>\nnewdata\n`</tt></p>\n\n          </div>"}, "last_serial": 6184789, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "65e2c9b59ad29e0d60c804d3e4ed2b4f", "sha256": "af845826b1337d60abfa8d50f64ca055850736b4e3373c8d3150f02edefaa3ec"}, "downloads": -1, "filename": "jdata-0.2.tar.gz", "has_sig": false, "md5_digest": "65e2c9b59ad29e0d60c804d3e4ed2b4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5449, "upload_time": "2019-11-22T20:52:23", "upload_time_iso_8601": "2019-11-22T20:52:23.636151Z", "url": "https://files.pythonhosted.org/packages/0d/15/13c2ffab71853bd1cce82c6d4fc905e2aea3683a3e121da9fb65e6420126/jdata-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "478f2adffa6ea1af7ab53456037e184c", "sha256": "2addca392ad5fd2f229f59eb12118c5fee6af1b8da2e17806a825ca9a5671807"}, "downloads": -1, "filename": "jdata-0.2.1.tar.gz", "has_sig": false, "md5_digest": "478f2adffa6ea1af7ab53456037e184c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6111, "upload_time": "2019-11-22T20:57:58", "upload_time_iso_8601": "2019-11-22T20:57:58.356347Z", "url": "https://files.pythonhosted.org/packages/5b/4e/caca7dea58b68b0e6c4e614a843d2f88b401dcebda0ec294db76660b7909/jdata-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "14b2f8db858b9752357e9018afc898d8", "sha256": "8451df7c882b15ecb0e61768312162ab6c5c03346fcdee3f79300e1c72421a91"}, "downloads": -1, "filename": "jdata-0.2.2.tar.gz", "has_sig": false, "md5_digest": "14b2f8db858b9752357e9018afc898d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6678, "upload_time": "2019-11-22T23:38:19", "upload_time_iso_8601": "2019-11-22T23:38:19.098653Z", "url": "https://files.pythonhosted.org/packages/46/d9/c292c8098f1ab7b65582bd64e62011d1ffd1217810679347eaab456744e1/jdata-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "ee0bc8c6b8e867614ee3b3167ce96d68", "sha256": "b9bfa137030a3629380d6f43234bb155cb73e430eb153694dbf2e52b54f3514b"}, "downloads": -1, "filename": "jdata-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ee0bc8c6b8e867614ee3b3167ce96d68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6692, "upload_time": "2019-11-23T00:05:39", "upload_time_iso_8601": "2019-11-23T00:05:39.822978Z", "url": "https://files.pythonhosted.org/packages/e6/ce/742a2de81927b76899be05099d663d8b643a892581e42c9edd92d66119df/jdata-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "9daba1cd23d957e108b53d2ca1c7954e", "sha256": "9fa6e148bf7a535608dfff4fbb39b4aeb4de7c0e562513d7f9fd27469086430d"}, "downloads": -1, "filename": "jdata-0.2.4.tar.gz", "has_sig": false, "md5_digest": "9daba1cd23d957e108b53d2ca1c7954e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6673, "upload_time": "2019-11-23T00:25:01", "upload_time_iso_8601": "2019-11-23T00:25:01.430451Z", "url": "https://files.pythonhosted.org/packages/f5/0f/3649a36962bce795a892067317169164804405daea4c6dbdfe5bdc2f222e/jdata-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9daba1cd23d957e108b53d2ca1c7954e", "sha256": "9fa6e148bf7a535608dfff4fbb39b4aeb4de7c0e562513d7f9fd27469086430d"}, "downloads": -1, "filename": "jdata-0.2.4.tar.gz", "has_sig": false, "md5_digest": "9daba1cd23d957e108b53d2ca1c7954e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6673, "upload_time": "2019-11-23T00:25:01", "upload_time_iso_8601": "2019-11-23T00:25:01.430451Z", "url": "https://files.pythonhosted.org/packages/f5/0f/3649a36962bce795a892067317169164804405daea4c6dbdfe5bdc2f222e/jdata-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:58 2020"}