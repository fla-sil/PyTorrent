{"info": {"author": "AOS ART Team", "author_email": "aos-team-art@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# Elliott - Errata Tool Automation\n\n[![PyPI version](https://badge.fury.io/py/rh-elliott.svg)](https://badge.fury.io/py/rh-elliott)\n[![codecov](https://codecov.io/gh/openshift/elliott/branch/master/graph/badge.svg)](https://codecov.io/gh/openshift/elliott)\n\n*Elliott* is a tool for automating several aspects of the errata\nlifecycle. This exists because the Errata/Advisory process has hooks\ninto several other systems, and coordinating all of that manually is\ntedious and error prone.\n\n\n# Table of Contents\n\n   * [Basics &amp; Terminology](#basics--terminology)\n   * [Setup and Installation](#setup-and-installation)\n      * [Authenticating](#authenticating)\n   * [Tests](#tests)\n   * [Usage](#usage)\n      * [`get` - Viewing an Advisory](#advisoryget---viewing-an-advisory)\n      * [`create` - Create a New Advisory](#advisorycreate---create-a-new-advisory)\n      * [`change-state` - Change the State of an Advisory](#advisorychange-state---change-the-state-of-an-advisory)\n      * [`find-bugs` - Find Bugzilla Bugs, Add to an Advisory](#advisoryfind-bugs---find-bugzilla-bugs-add-to-an-advisory)\n      * [`find-builds` - Find Brew RPM/Image Builds, Add to an Advisory](#advisoryfind-builds---find-brew-rpmimage-builds-add-to-an-advisory)\n\n\n\n# Basics & Terminology\n\nTo operate Elliott with any skill it is beneficial to first understand\nthe language we use, as well as the errata process a little bit. Let's\ncover some basics.\n\n* Elliott is this software, write it capital or lower-case E, either\n  way is fine as long as you remember that it ends with **two** \"t\"s\n* Elliott was first created by\n  [Sam Munilla](https://www.cdc.gov/salmonella/index.html) and is a\n  reference to Steven Spielberg's 1982 summer blockbuster,\n  [E.T. the Extra-Terrestrial](http://www.imdb.com/title/tt0083866/)\n  * \"ET\" is also a short-hand way of referencing the [Errata Tool](https://errata.devel.redhat.com/), see the connection now?\n* Grammar and Synonyms\n  * **Erratum** - is the *singluar* version of the word \"Errata\"\n  * **Errata** - is *plural*, and it refers to a collection of \"Erratum\"\n  * **Advisory** - is another word we use and it is interchangable for\n  Errata and Erratum\n    * This word is mostly used by humans in conversation, or in print\n      as an informational message (\"this bug has been attached to\n      advisory RHBA-1337\")\n\t* Behind the scenes, APIs and code generally use the term erratum\n* Brew Builds - NVRs (*Name-Version-Release*) and Numeric IDs\n  * Use an NVR or a numeric build ID interchangeably in subcommands\n  * For example, `apb-1.1.16-1.el7` is an NVR for the build\n    [668623](https://brewweb.engineering.redhat.com/brew/buildinfo?buildID=668623)\n  * This is the `apb` package, version `1.1.16`, first release (`-1`),\n    for RHEL 7 (`.el7`)\n\n\nThe Errata Tool is the central record keeping location when software\nis first released or updated. An advisory is created for every new\nrelease or update in a product series. Advisory contain references to\nitems in several other public and private systems.\n\n* Bugzilla bugs are added to advisory, their status (`VERIFIED`,\n  `ON_QA`, etc) is refreshed periodically as an advisory can not move\n  forward for release until all associated bugs have passed testing\n* Brew RPM builds are attached to advisory, these contain the latest\nsoftware and bug fixes\n* When the RPM builds are signed, brew image (container) builds are\n  created using the new/updated RPMs and are attached to a separate\n  advisory\n\n# Setup and Installation\n\n`pip install rh-elliott`\n\n## Dependencies\n\n* [krb5-devel](https://apps.fedoraproject.org/packages/krb5-devel)\n* [python2-devel](https://apps.fedoraproject.org/packages/python2-devel)\n* [python2-rpm](https://apps.fedoraproject.org/packages/python2-rpm)\n* [redhat-rpm-config](https://apps.fedoraproject.org/packages/redhat-rpm-config)\n\n## Authenticating\n\nEnsure you have a valid kerberos ticket before proceeding. A valid\nkerberos ticket is required to use elliott. See the following link for\nassistance with the basics of kerberos at Red Hat:\n\n* [DOC-87898](https://mojo.redhat.com/docs/DOC-87898) - Mojo - Using Kerberos Authentication\n\nOnce you have that taken care of you should run a simple command from\nelliott. I suggest the following, it will verify that you can access\nthe Errata Tool successfully by attempting to get a list of recently\ncreated advisories:\n\n    <elliott> $ ./elliott list\n    2018-11-20T04:23:44 NEW_FILES Red Hat OpenShift Enterprise Container Image Updates https://errata.devel.redhat.com/advisory/38040\n    2018-11-15T14:36:55 QE OpenShift Container Platform 3.5 images update https://errata.devel.redhat.com/advisory/37969\n    2018-11-13T01:17:33 QE OpenShift Container Platform 3.6 images update https://errata.devel.redhat.com/advisory/37911\n    2018-10-31T15:23:47 NEW_FILES Red Hat OpenShift Enterprise Container Image Updates https://errata.devel.redhat.com/advisory/37632\n    2018-10-18T11:11:25 NEW_FILES openshift3/jenkins-agent-nodejs-8-rhel7 Container Image Updates https://errata.devel.redhat.com/advisory/37441\n\n\n# Usage\n\nHere we describe how to effectively use elliott.\n\n**NOTE:** Every elliott `<foo>` command has a thoroughly\ndetailed `--help` page. This includes examples and descriptions of all\noptions. We will not be listing each and every single option for every\ncommand here. This will focus on getting you comfortable with the\nbasics.\n\n## `get` - Viewing an Advisory\n\nYou have [already seen](#authenticating) how to list recently created\nerrata with `list`, now let's look at a single one in more\ndetail using the `get` command.\n\nTo get started, copy one of the IDs returned from the `list`\ncommand, for example `32916`, one of our test advisories from the\nprevious example. We'll pass that directly to `get`. You will\nsee the same brief output as you did before.\n\n    <elliott> $ ./elliott get 32916\n    2018-03-02T15:19:08 NEW_FILES TEST OpenShift Container Platform 3.5 bug fix and enhancement update https://errata.devel.redhat.com/advisory/32916\n\nSay you want additional information about this specific advisory. In\nwhich case you can give the `--json` option to the command (this is\nall documented in the commands `--help` output as well):\n\n    <elliott> $ ./elliott get 32916 --json\n    {\n      \"diffs\": {},\n      \"jira_issues\": {\n        \"jira_issues\": [],\n        \"id_field\": \"key\",\n        \"id_prefix\": \"jira:\",\n        \"idsfixed\": [],\n        \"to_fetch\": [],\n        \"type\": \"jira_issues\",\n        \"errata\": {\n          \"rhba\": {\n          \"rating\": 0,\n          \"rhnqa\": 0,\n    \t  ...\n\nThe returned JSON object is quite large and sprawling. I recommend\npiping it into the `jq` tool if you want to trim down the\noutput. Piping it into a pager afterwards is also nice if you want to\nscroll through it. For example, to look at just the `content` (basic\ninformation) returned from the API you could use the `.content` filter\nin `jq`:\n\n    $ ./elliott get 32916 --json | jq '.content' | less\n    {\n      \"content\": {\n        \"revision_count\": 1,\n        \"packages\": null,\n        \"errata_id\": 32916,\n        \"description\": \"Red Hat OpenShift Container Platform is the company's cloud ...\n\n## `create` - Create a New Advisory\n\nCreating an advisory with elliott requires very little input as far as\nerrata details are concerned. You MUST provide:\n\n* The product release (`openshift-3.Y`)\n\nA release date is automatically selected for you. However, you MAY\noverride this date if there is a problem with it. The kind of advisory\nthis is must be specified. Valid choices include `rpm` and `image`.\n\n**NOTE:** This command will **NOT** create an advisory without your\nexplicit instructions.\n\nHere are two examples from the `--help` option:\n\nPreview an RPM Advisory 21 days from now (the default release date)\nfor OSE 3.9. The default boilerplate text will be printed to the\nscreen in the form of the JSON object that *would* have been submitted\nto the API:\n\n    <elliott> $ ./elliott --group openshift-3.9 create --kind rpm\n\nCreate an Image Advisory for the 3.5 series on the first Monday in\nMarch. The date is given in simple `YYYY-MM-DD` format, and finally we\ngive explicit confirmation to create the advisory by providing the\n`--yes` option:\n\n    <elliott> $ ./elliott --group openshift-3.5 create \\\n        --kind image \\\n        --date 2018-May-05 \\\n        --yes\n\n## `change-state` - Change the State of an Advisory\n\nChange the state of an advisory. For example, move an advisory from\n`NEW_FILES` where bugs and builds are still being added, to `QE`\nstate where the testers are able to take over.\n\nHere we'll move our example test advisory 32916 from `NEW_FILES` to\n`QE`:\n\n    <elliott> $ ./elliott change-state --state QE 32916\n\n## `find-bugs` - Find Bugzilla Bugs, Add to an Advisory\n\nBugzilla bugs can be attached automatically to an advisory. This keeps\ntrack of which documented issues/enhancements are included in an\nadvisory when it ships. Additionally, it is important to know that an\nadvisory can not change to the QE state until attached bugs have been\nverified to a certain degree. The Errata Tool UI will show this\ninformation to you in the form of percentages indicating how many\nattached bugs are in each state.\n\nBugzilla queries are constructed for a given product release (ex:\nopenshift-3.9) to return bugs which are in a `MODIFIED` state. In\nBugzilla, this `MODIFIED` state indicates that the engineer has\nwritten code to implement the enhancement or fix the specific bug and\nthe associated code has been merged into that components git\nrepository.\n\nTechnically speaking, candidate bugs are bugs in the `MODIFIED` state\nwhich have a `TARGET RELEASE` set to the supplied product version (GA\nor ASYNC update).\n\n`find-bugs` has two modes of operation:\n\n1. Query Bugzilla automatically and attach all discovered bugs (as\n   described above)\n1. Provide bug IDs manually on the command line\n\nExample: Automatically *find* bugs for an OpenShift 3.9 update (but do\nnot attach them). Notice how we do not need to provide an\n\n\t<elliott> $ ./elliott --group openshift-3.9 find-bugs --auto\n\t2018-03-19T17:49:44.573042 Searching group directory: /home/tbielawa/rhat/cd/enterprise-images/groups/openshift-3.9\n\t2018-03-19T17:49:44.584135 Using branch from group.yml: rhaos-3.9-rhel-7\n\tWould have added 7 bugs: 1537593, 1510212, 1519365, 1529482, 1550797, 1543647, 1551904\n\nIn order to add bugs to an advisory you must provide the ID of an\nadvisory as the value to the `--add` option:\n\n    <elliott> $ ./elliott --group openshift-3.9 find-bugs --auto --add 32916\n\nFlags may be added to the identified bugs by using the `--flag`\noption.\n\nProvide one or more bugs manually by using the `--id` option.\n\nSee the `--help` output for additional examples and descriptions.\n\n`find-builds` - Find Brew RPM/Image Builds, Add to an Advisory\n\nBrew RPM and Image builds can be attached to advisory. As we noted\nalready in the `create` command, we deal with two different\ntypes of advisory, RPM and Image. When you're attaching builds ensure\nyou are attaching the right build to the matching advisory.\n\nA build must meet very specific criteria to be considered as a viable\nbuild to add to an advisory. For example, assuming\n`--group=openshift-3.7`, then a build is a VIABLE BUILD *IFF* it meets\nALL of the following criteria:\n\n  * HAS the tag in brew: `rhaos-3.7-rhel7-candidate`\n  * DOES NOT have the tag in brew: `rhaos-3.7-rhel7`\n  * IS NOT attached to any *OPEN* RHBA, RHSA, or RHEA\n\nThat is to say, a viable build is tagged as a \"candidate\", has NOT\nreceived the \"shipped\" tag yet, and is NOT attached to any *OPEN*\nadvisory (closed advisory are allowed).\n\nHere is an example of how we could look up image builds that would be\nattached to a 3.6\n\n    <elliott> $ ./elliott --group openshift-3.6 find-builds -k image\n\n    2018-11-27 10:23:28,117 INFO Using git@github.com:openshift/ocp-build-data.git for metadata\n    2018-11-27 10:23:28,117 INFO Cloning config data from git@github.com:openshift/ocp-build-data.git\n    2018-11-27 10:23:29,146 INFO Using branch from group.yml: rhaos-3.6-rhel-7\n    Generating list of images: Hold on a moment, fetching Brew buildinfo\n    [****************************************]\n    [****************************************]\n    Generating build metadata: Fetching data for 40 builds\n    [****************************************]\n    [****************************************]\n    The following 40 builds may be attached to an advisory:\n    aos-f5-router-container-v3.6.173.0.140-2\n    aos3-installation-container-v3.6.173.0.140-2\n    container-engine-container-v3.6.173.0.140-2\n    jenkins-slave-base-rhel7-container-v3.6.173.0.140-2\n    ...\n\nIf we ran that same command again and suppplied the `--attach` option\nwith a valid `ADVISORY` number as the argument then the discovered\nbuilds would be attached to the advisory instead of just printed to\nthe screen.\n\nWe may also provide build NVRs or numeric build IDs manually with the\n`--build` (`-b`) option. As with automatic discovery, a `--kind\n{rpm,image}` option must still be supplied.\n\nSee the `--help` output for additional examples and descriptions.\n\n# Data Sources\n\nElliott relies on external data sources to provide it with boilerplate for advisories and search parameters\nfor bugzilla queries. This data takes the form of yaml files store either locally or, ideally, in a separate\ngit repository with a branching structure matching the `--group` values you want to use.\n\nIn either case, you must point to this data source using the `--data-path` parameter or one of its override settings.\n\n## erratatool.yml\n~~~~\n---\nserver: \"https://errata.redhat.com\"\n\nproduct: \"RHOSE\"\n\nrelease: \"RHOSE ASYNC\"\n\nproduct_version: \"RHEL-7-OSE-3.10\"\n\nbrew_tag: \"rhaos-3.10-rhel-7\"\n\nsynopsis:\n  rpm: \"OpenShift Container Platform 3.10 bug fix and enhancement update\"\n  image: \"OpenShift Container Platform 3.10 images update\"\n\nsolution: |\n  Before applying this update, make sure all previously released errata relevant to your system have been applied.\n  For OpenShift Container Platform 3.10 see the following documentation, which will be updated shortly for release 3.10.z, for important instructions on how to upgrade your cluster and fully apply this asynchronous errata update:\n  https://docs.openshift.com/container-platform/3.10/release_notes/ocp_3_10_release_notes.html\n  This update is available via the Red Hat Network. Details on how to use the Red Hat Network to apply this update are available at https://access.redhat.com/articles/11258.\"\"\"\ndescription: |\n  Red Hat OpenShift Container Platform is Red Hat's cloud computing Kubernetes application platform solution designed for on-premise or private cloud deployments.\n  This advisory contains the RPM packages for Red Hat OpenShift Container Platform 3.10.z. See the following advisory for the container images for this release:\n  https://access.redhat.com/errata/RHBA-2222:2222\n  Space precludes documenting all of the bug fixes and enhancements in this advisory. See the following Release Notes documentation, which will be updated shortly for this release, for details about these changes:\n  https://docs.openshift.com/container-platform/3.10/release_notes/ocp_3_10_release_notes.html\n  All OpenShift Container Platform 3.10 users are advised to upgrade to these updated packages and images.\ntopic: \"Red Hat OpenShift Container Platform releases 3.10.z are now available with updates to packages and images that fix several bugs and add enhancements.\"\n\nquality_responsibility_name: 'OpenShift QE'\n~~~~\n\n## bugzilla.yml\n~~~~\n---\n\nserver: \"bugzilla.redhat.com\"\n\nclassification: \"Red Hat\"\n\nproduct: \"OpenShift Container Platform\"\n\nversion:\n  - \"3.7.0\"\n  - \"3.7.1\"\n  - \"3.8.0\"\n  - \"3.9.0\"\n  - \"3.10.0\"\n\ntarget_release:\n  - \"3.10.0\"\n  - \"3.10.z\"\n\nfilter:\n  - field: \"component\"\n    operator: \"notequals\"\n    value: \"Documentation\"\n~~~~\n\n# Tests\n\nI usually run the unittests with this setup:\n\n* Switch into the `tools` directory if you aren't already\n* Run `. ./hack/env_setup.sh`\n* Switch back to the repository root directory\n\nThen run the unit tests:\n\n    $ nosetests -v --with-cover --cover-package=ocp_cd_tools --cover-html \\\n        src/ocp_cd_tools/brew_test.py \\\n        src/ocp_cd_tools/errata_test.py \\\n        src/ocp_cd_tools/bugzilla_test.py\n\nAdd or remove any other `*_test.py` tests you wish.\n\nIf that works then you can open the HTML coverage report:\n\n* `xdg-open cover/index.html`\n\n## License\n\nMost of elliott is released under [Apache License 2.0][], except [elliottlib/dotconfig.py][] and\n[elliottlib/gitdata.py][], which are embedded copies of [dotconfig][] and [gitdata][] projects\nrespectively, therefore those two files are released under [LGPL v3][].\n\n[Apache License 2.0]: https://github.com/openshift/elliott/blob/master/LICENSE\n[elliottlib/dotconfig.py]: https://github.com/openshift/elliott/blob/master/elliottlib/dotconfig.py\n[elliottlib/gitdata.py]: https://github.com/openshift/elliott/blob/master/elliottlib/gitdata.py\n[dotconfig]: https://github.com/adammhaile/dotconfig\n[gitdata]: https://github.com/adammhaile/gitdata\n[LGPL v3]: https://www.gnu.org/licenses/lgpl-3.0.en.html\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/openshift/elliott", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "rh-elliott", "package_url": "https://pypi.org/project/rh-elliott/", "platform": "", "project_url": "https://pypi.org/project/rh-elliott/", "project_urls": {"Homepage": "https://github.com/openshift/elliott"}, "release_url": "https://pypi.org/project/rh-elliott/1.0.4/", "requires_dist": ["bashlex", "click", "dockerfile-parse", "errata-tool (>=1.19)", "future", "koji (>=1.18)", "python-bugzilla", "pyyaml", "requests", "requests-kerberos", "six", "pygit2 (~=0.28) ; python_version <= \"3.4\"", "typing ; python_version <= \"3.4\"", "pygit2 ; python_version >= \"3.5\""], "requires_python": "", "summary": "CLI tool for managing and automating Red Hat software releases", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Elliott - Errata Tool Automation</h1>\n<p><a href=\"https://badge.fury.io/py/rh-elliott\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58cc452723072ad87c70f743a6632dd25f59f741/68747470733a2f2f62616467652e667572792e696f2f70792f72682d656c6c696f74742e737667\"></a>\n<a href=\"https://codecov.io/gh/openshift/elliott\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7a5a982dad21cb6e79cf5c2c06f9cef0929a0cf/68747470733a2f2f636f6465636f762e696f2f67682f6f70656e73686966742f656c6c696f74742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p><em>Elliott</em> is a tool for automating several aspects of the errata\nlifecycle. This exists because the Errata/Advisory process has hooks\ninto several other systems, and coordinating all of that manually is\ntedious and error prone.</p>\n<h1>Table of Contents</h1>\n<ul>\n<li><a href=\"#basics--terminology\" rel=\"nofollow\">Basics &amp; Terminology</a></li>\n<li><a href=\"#setup-and-installation\" rel=\"nofollow\">Setup and Installation</a>\n<ul>\n<li><a href=\"#authenticating\" rel=\"nofollow\">Authenticating</a></li>\n</ul>\n</li>\n<li><a href=\"#tests\" rel=\"nofollow\">Tests</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#advisoryget---viewing-an-advisory\" rel=\"nofollow\"><code>get</code> - Viewing an Advisory</a></li>\n<li><a href=\"#advisorycreate---create-a-new-advisory\" rel=\"nofollow\"><code>create</code> - Create a New Advisory</a></li>\n<li><a href=\"#advisorychange-state---change-the-state-of-an-advisory\" rel=\"nofollow\"><code>change-state</code> - Change the State of an Advisory</a></li>\n<li><a href=\"#advisoryfind-bugs---find-bugzilla-bugs-add-to-an-advisory\" rel=\"nofollow\"><code>find-bugs</code> - Find Bugzilla Bugs, Add to an Advisory</a></li>\n<li><a href=\"#advisoryfind-builds---find-brew-rpmimage-builds-add-to-an-advisory\" rel=\"nofollow\"><code>find-builds</code> - Find Brew RPM/Image Builds, Add to an Advisory</a></li>\n</ul>\n</li>\n</ul>\n<h1>Basics &amp; Terminology</h1>\n<p>To operate Elliott with any skill it is beneficial to first understand\nthe language we use, as well as the errata process a little bit. Let's\ncover some basics.</p>\n<ul>\n<li>Elliott is this software, write it capital or lower-case E, either\nway is fine as long as you remember that it ends with <strong>two</strong> \"t\"s</li>\n<li>Elliott was first created by\n<a href=\"https://www.cdc.gov/salmonella/index.html\" rel=\"nofollow\">Sam Munilla</a> and is a\nreference to Steven Spielberg's 1982 summer blockbuster,\n<a href=\"http://www.imdb.com/title/tt0083866/\" rel=\"nofollow\">E.T. the Extra-Terrestrial</a>\n<ul>\n<li>\"ET\" is also a short-hand way of referencing the <a href=\"https://errata.devel.redhat.com/\" rel=\"nofollow\">Errata Tool</a>, see the connection now?</li>\n</ul>\n</li>\n<li>Grammar and Synonyms\n<ul>\n<li><strong>Erratum</strong> - is the <em>singluar</em> version of the word \"Errata\"</li>\n<li><strong>Errata</strong> - is <em>plural</em>, and it refers to a collection of \"Erratum\"</li>\n<li><strong>Advisory</strong> - is another word we use and it is interchangable for\nErrata and Erratum\n<ul>\n<li>This word is mostly used by humans in conversation, or in print\nas an informational message (\"this bug has been attached to\nadvisory RHBA-1337\")</li>\n<li>Behind the scenes, APIs and code generally use the term erratum</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Brew Builds - NVRs (<em>Name-Version-Release</em>) and Numeric IDs\n<ul>\n<li>Use an NVR or a numeric build ID interchangeably in subcommands</li>\n<li>For example, <code>apb-1.1.16-1.el7</code> is an NVR for the build\n<a href=\"https://brewweb.engineering.redhat.com/brew/buildinfo?buildID=668623\" rel=\"nofollow\">668623</a></li>\n<li>This is the <code>apb</code> package, version <code>1.1.16</code>, first release (<code>-1</code>),\nfor RHEL 7 (<code>.el7</code>)</li>\n</ul>\n</li>\n</ul>\n<p>The Errata Tool is the central record keeping location when software\nis first released or updated. An advisory is created for every new\nrelease or update in a product series. Advisory contain references to\nitems in several other public and private systems.</p>\n<ul>\n<li>Bugzilla bugs are added to advisory, their status (<code>VERIFIED</code>,\n<code>ON_QA</code>, etc) is refreshed periodically as an advisory can not move\nforward for release until all associated bugs have passed testing</li>\n<li>Brew RPM builds are attached to advisory, these contain the latest\nsoftware and bug fixes</li>\n<li>When the RPM builds are signed, brew image (container) builds are\ncreated using the new/updated RPMs and are attached to a separate\nadvisory</li>\n</ul>\n<h1>Setup and Installation</h1>\n<p><code>pip install rh-elliott</code></p>\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://apps.fedoraproject.org/packages/krb5-devel\" rel=\"nofollow\">krb5-devel</a></li>\n<li><a href=\"https://apps.fedoraproject.org/packages/python2-devel\" rel=\"nofollow\">python2-devel</a></li>\n<li><a href=\"https://apps.fedoraproject.org/packages/python2-rpm\" rel=\"nofollow\">python2-rpm</a></li>\n<li><a href=\"https://apps.fedoraproject.org/packages/redhat-rpm-config\" rel=\"nofollow\">redhat-rpm-config</a></li>\n</ul>\n<h2>Authenticating</h2>\n<p>Ensure you have a valid kerberos ticket before proceeding. A valid\nkerberos ticket is required to use elliott. See the following link for\nassistance with the basics of kerberos at Red Hat:</p>\n<ul>\n<li><a href=\"https://mojo.redhat.com/docs/DOC-87898\" rel=\"nofollow\">DOC-87898</a> - Mojo - Using Kerberos Authentication</li>\n</ul>\n<p>Once you have that taken care of you should run a simple command from\nelliott. I suggest the following, it will verify that you can access\nthe Errata Tool successfully by attempting to get a list of recently\ncreated advisories:</p>\n<pre><code>&lt;elliott&gt; $ ./elliott list\n2018-11-20T04:23:44 NEW_FILES Red Hat OpenShift Enterprise Container Image Updates https://errata.devel.redhat.com/advisory/38040\n2018-11-15T14:36:55 QE OpenShift Container Platform 3.5 images update https://errata.devel.redhat.com/advisory/37969\n2018-11-13T01:17:33 QE OpenShift Container Platform 3.6 images update https://errata.devel.redhat.com/advisory/37911\n2018-10-31T15:23:47 NEW_FILES Red Hat OpenShift Enterprise Container Image Updates https://errata.devel.redhat.com/advisory/37632\n2018-10-18T11:11:25 NEW_FILES openshift3/jenkins-agent-nodejs-8-rhel7 Container Image Updates https://errata.devel.redhat.com/advisory/37441\n</code></pre>\n<h1>Usage</h1>\n<p>Here we describe how to effectively use elliott.</p>\n<p><strong>NOTE:</strong> Every elliott <code>&lt;foo&gt;</code> command has a thoroughly\ndetailed <code>--help</code> page. This includes examples and descriptions of all\noptions. We will not be listing each and every single option for every\ncommand here. This will focus on getting you comfortable with the\nbasics.</p>\n<h2><code>get</code> - Viewing an Advisory</h2>\n<p>You have <a href=\"#authenticating\" rel=\"nofollow\">already seen</a> how to list recently created\nerrata with <code>list</code>, now let's look at a single one in more\ndetail using the <code>get</code> command.</p>\n<p>To get started, copy one of the IDs returned from the <code>list</code>\ncommand, for example <code>32916</code>, one of our test advisories from the\nprevious example. We'll pass that directly to <code>get</code>. You will\nsee the same brief output as you did before.</p>\n<pre><code>&lt;elliott&gt; $ ./elliott get 32916\n2018-03-02T15:19:08 NEW_FILES TEST OpenShift Container Platform 3.5 bug fix and enhancement update https://errata.devel.redhat.com/advisory/32916\n</code></pre>\n<p>Say you want additional information about this specific advisory. In\nwhich case you can give the <code>--json</code> option to the command (this is\nall documented in the commands <code>--help</code> output as well):</p>\n<pre><code>&lt;elliott&gt; $ ./elliott get 32916 --json\n{\n  \"diffs\": {},\n  \"jira_issues\": {\n    \"jira_issues\": [],\n    \"id_field\": \"key\",\n    \"id_prefix\": \"jira:\",\n    \"idsfixed\": [],\n    \"to_fetch\": [],\n    \"type\": \"jira_issues\",\n    \"errata\": {\n      \"rhba\": {\n      \"rating\": 0,\n      \"rhnqa\": 0,\n\t  ...\n</code></pre>\n<p>The returned JSON object is quite large and sprawling. I recommend\npiping it into the <code>jq</code> tool if you want to trim down the\noutput. Piping it into a pager afterwards is also nice if you want to\nscroll through it. For example, to look at just the <code>content</code> (basic\ninformation) returned from the API you could use the <code>.content</code> filter\nin <code>jq</code>:</p>\n<pre><code>$ ./elliott get 32916 --json | jq '.content' | less\n{\n  \"content\": {\n    \"revision_count\": 1,\n    \"packages\": null,\n    \"errata_id\": 32916,\n    \"description\": \"Red Hat OpenShift Container Platform is the company's cloud ...\n</code></pre>\n<h2><code>create</code> - Create a New Advisory</h2>\n<p>Creating an advisory with elliott requires very little input as far as\nerrata details are concerned. You MUST provide:</p>\n<ul>\n<li>The product release (<code>openshift-3.Y</code>)</li>\n</ul>\n<p>A release date is automatically selected for you. However, you MAY\noverride this date if there is a problem with it. The kind of advisory\nthis is must be specified. Valid choices include <code>rpm</code> and <code>image</code>.</p>\n<p><strong>NOTE:</strong> This command will <strong>NOT</strong> create an advisory without your\nexplicit instructions.</p>\n<p>Here are two examples from the <code>--help</code> option:</p>\n<p>Preview an RPM Advisory 21 days from now (the default release date)\nfor OSE 3.9. The default boilerplate text will be printed to the\nscreen in the form of the JSON object that <em>would</em> have been submitted\nto the API:</p>\n<pre><code>&lt;elliott&gt; $ ./elliott --group openshift-3.9 create --kind rpm\n</code></pre>\n<p>Create an Image Advisory for the 3.5 series on the first Monday in\nMarch. The date is given in simple <code>YYYY-MM-DD</code> format, and finally we\ngive explicit confirmation to create the advisory by providing the\n<code>--yes</code> option:</p>\n<pre><code>&lt;elliott&gt; $ ./elliott --group openshift-3.5 create \\\n    --kind image \\\n    --date 2018-May-05 \\\n    --yes\n</code></pre>\n<h2><code>change-state</code> - Change the State of an Advisory</h2>\n<p>Change the state of an advisory. For example, move an advisory from\n<code>NEW_FILES</code> where bugs and builds are still being added, to <code>QE</code>\nstate where the testers are able to take over.</p>\n<p>Here we'll move our example test advisory 32916 from <code>NEW_FILES</code> to\n<code>QE</code>:</p>\n<pre><code>&lt;elliott&gt; $ ./elliott change-state --state QE 32916\n</code></pre>\n<h2><code>find-bugs</code> - Find Bugzilla Bugs, Add to an Advisory</h2>\n<p>Bugzilla bugs can be attached automatically to an advisory. This keeps\ntrack of which documented issues/enhancements are included in an\nadvisory when it ships. Additionally, it is important to know that an\nadvisory can not change to the QE state until attached bugs have been\nverified to a certain degree. The Errata Tool UI will show this\ninformation to you in the form of percentages indicating how many\nattached bugs are in each state.</p>\n<p>Bugzilla queries are constructed for a given product release (ex:\nopenshift-3.9) to return bugs which are in a <code>MODIFIED</code> state. In\nBugzilla, this <code>MODIFIED</code> state indicates that the engineer has\nwritten code to implement the enhancement or fix the specific bug and\nthe associated code has been merged into that components git\nrepository.</p>\n<p>Technically speaking, candidate bugs are bugs in the <code>MODIFIED</code> state\nwhich have a <code>TARGET RELEASE</code> set to the supplied product version (GA\nor ASYNC update).</p>\n<p><code>find-bugs</code> has two modes of operation:</p>\n<ol>\n<li>Query Bugzilla automatically and attach all discovered bugs (as\ndescribed above)</li>\n<li>Provide bug IDs manually on the command line</li>\n</ol>\n<p>Example: Automatically <em>find</em> bugs for an OpenShift 3.9 update (but do\nnot attach them). Notice how we do not need to provide an</p>\n<pre><code>&lt;elliott&gt; $ ./elliott --group openshift-3.9 find-bugs --auto\n2018-03-19T17:49:44.573042 Searching group directory: /home/tbielawa/rhat/cd/enterprise-images/groups/openshift-3.9\n2018-03-19T17:49:44.584135 Using branch from group.yml: rhaos-3.9-rhel-7\nWould have added 7 bugs: 1537593, 1510212, 1519365, 1529482, 1550797, 1543647, 1551904\n</code></pre>\n<p>In order to add bugs to an advisory you must provide the ID of an\nadvisory as the value to the <code>--add</code> option:</p>\n<pre><code>&lt;elliott&gt; $ ./elliott --group openshift-3.9 find-bugs --auto --add 32916\n</code></pre>\n<p>Flags may be added to the identified bugs by using the <code>--flag</code>\noption.</p>\n<p>Provide one or more bugs manually by using the <code>--id</code> option.</p>\n<p>See the <code>--help</code> output for additional examples and descriptions.</p>\n<p><code>find-builds</code> - Find Brew RPM/Image Builds, Add to an Advisory</p>\n<p>Brew RPM and Image builds can be attached to advisory. As we noted\nalready in the <code>create</code> command, we deal with two different\ntypes of advisory, RPM and Image. When you're attaching builds ensure\nyou are attaching the right build to the matching advisory.</p>\n<p>A build must meet very specific criteria to be considered as a viable\nbuild to add to an advisory. For example, assuming\n<code>--group=openshift-3.7</code>, then a build is a VIABLE BUILD <em>IFF</em> it meets\nALL of the following criteria:</p>\n<ul>\n<li>HAS the tag in brew: <code>rhaos-3.7-rhel7-candidate</code></li>\n<li>DOES NOT have the tag in brew: <code>rhaos-3.7-rhel7</code></li>\n<li>IS NOT attached to any <em>OPEN</em> RHBA, RHSA, or RHEA</li>\n</ul>\n<p>That is to say, a viable build is tagged as a \"candidate\", has NOT\nreceived the \"shipped\" tag yet, and is NOT attached to any <em>OPEN</em>\nadvisory (closed advisory are allowed).</p>\n<p>Here is an example of how we could look up image builds that would be\nattached to a 3.6</p>\n<pre><code>&lt;elliott&gt; $ ./elliott --group openshift-3.6 find-builds -k image\n\n2018-11-27 10:23:28,117 INFO Using git@github.com:openshift/ocp-build-data.git for metadata\n2018-11-27 10:23:28,117 INFO Cloning config data from git@github.com:openshift/ocp-build-data.git\n2018-11-27 10:23:29,146 INFO Using branch from group.yml: rhaos-3.6-rhel-7\nGenerating list of images: Hold on a moment, fetching Brew buildinfo\n[****************************************]\n[****************************************]\nGenerating build metadata: Fetching data for 40 builds\n[****************************************]\n[****************************************]\nThe following 40 builds may be attached to an advisory:\naos-f5-router-container-v3.6.173.0.140-2\naos3-installation-container-v3.6.173.0.140-2\ncontainer-engine-container-v3.6.173.0.140-2\njenkins-slave-base-rhel7-container-v3.6.173.0.140-2\n...\n</code></pre>\n<p>If we ran that same command again and suppplied the <code>--attach</code> option\nwith a valid <code>ADVISORY</code> number as the argument then the discovered\nbuilds would be attached to the advisory instead of just printed to\nthe screen.</p>\n<p>We may also provide build NVRs or numeric build IDs manually with the\n<code>--build</code> (<code>-b</code>) option. As with automatic discovery, a <code>--kind {rpm,image}</code> option must still be supplied.</p>\n<p>See the <code>--help</code> output for additional examples and descriptions.</p>\n<h1>Data Sources</h1>\n<p>Elliott relies on external data sources to provide it with boilerplate for advisories and search parameters\nfor bugzilla queries. This data takes the form of yaml files store either locally or, ideally, in a separate\ngit repository with a branching structure matching the <code>--group</code> values you want to use.</p>\n<p>In either case, you must point to this data source using the <code>--data-path</code> parameter or one of its override settings.</p>\n<h2>erratatool.yml</h2>\n<pre><code>---\nserver: \"https://errata.redhat.com\"\n\nproduct: \"RHOSE\"\n\nrelease: \"RHOSE ASYNC\"\n\nproduct_version: \"RHEL-7-OSE-3.10\"\n\nbrew_tag: \"rhaos-3.10-rhel-7\"\n\nsynopsis:\n  rpm: \"OpenShift Container Platform 3.10 bug fix and enhancement update\"\n  image: \"OpenShift Container Platform 3.10 images update\"\n\nsolution: |\n  Before applying this update, make sure all previously released errata relevant to your system have been applied.\n  For OpenShift Container Platform 3.10 see the following documentation, which will be updated shortly for release 3.10.z, for important instructions on how to upgrade your cluster and fully apply this asynchronous errata update:\n  https://docs.openshift.com/container-platform/3.10/release_notes/ocp_3_10_release_notes.html\n  This update is available via the Red Hat Network. Details on how to use the Red Hat Network to apply this update are available at https://access.redhat.com/articles/11258.\"\"\"\ndescription: |\n  Red Hat OpenShift Container Platform is Red Hat's cloud computing Kubernetes application platform solution designed for on-premise or private cloud deployments.\n  This advisory contains the RPM packages for Red Hat OpenShift Container Platform 3.10.z. See the following advisory for the container images for this release:\n  https://access.redhat.com/errata/RHBA-2222:2222\n  Space precludes documenting all of the bug fixes and enhancements in this advisory. See the following Release Notes documentation, which will be updated shortly for this release, for details about these changes:\n  https://docs.openshift.com/container-platform/3.10/release_notes/ocp_3_10_release_notes.html\n  All OpenShift Container Platform 3.10 users are advised to upgrade to these updated packages and images.\ntopic: \"Red Hat OpenShift Container Platform releases 3.10.z are now available with updates to packages and images that fix several bugs and add enhancements.\"\n\nquality_responsibility_name: 'OpenShift QE'\n</code></pre>\n<h2>bugzilla.yml</h2>\n<pre><code>---\n\nserver: \"bugzilla.redhat.com\"\n\nclassification: \"Red Hat\"\n\nproduct: \"OpenShift Container Platform\"\n\nversion:\n  - \"3.7.0\"\n  - \"3.7.1\"\n  - \"3.8.0\"\n  - \"3.9.0\"\n  - \"3.10.0\"\n\ntarget_release:\n  - \"3.10.0\"\n  - \"3.10.z\"\n\nfilter:\n  - field: \"component\"\n    operator: \"notequals\"\n    value: \"Documentation\"\n</code></pre>\n<h1>Tests</h1>\n<p>I usually run the unittests with this setup:</p>\n<ul>\n<li>Switch into the <code>tools</code> directory if you aren't already</li>\n<li>Run <code>. ./hack/env_setup.sh</code></li>\n<li>Switch back to the repository root directory</li>\n</ul>\n<p>Then run the unit tests:</p>\n<pre><code>$ nosetests -v --with-cover --cover-package=ocp_cd_tools --cover-html \\\n    src/ocp_cd_tools/brew_test.py \\\n    src/ocp_cd_tools/errata_test.py \\\n    src/ocp_cd_tools/bugzilla_test.py\n</code></pre>\n<p>Add or remove any other <code>*_test.py</code> tests you wish.</p>\n<p>If that works then you can open the HTML coverage report:</p>\n<ul>\n<li><code>xdg-open cover/index.html</code></li>\n</ul>\n<h2>License</h2>\n<p>Most of elliott is released under <a href=\"https://github.com/openshift/elliott/blob/master/LICENSE\" rel=\"nofollow\">Apache License 2.0</a>, except <a href=\"https://github.com/openshift/elliott/blob/master/elliottlib/dotconfig.py\" rel=\"nofollow\">elliottlib/dotconfig.py</a> and\n<a href=\"https://github.com/openshift/elliott/blob/master/elliottlib/gitdata.py\" rel=\"nofollow\">elliottlib/gitdata.py</a>, which are embedded copies of <a href=\"https://github.com/adammhaile/dotconfig\" rel=\"nofollow\">dotconfig</a> and <a href=\"https://github.com/adammhaile/gitdata\" rel=\"nofollow\">gitdata</a> projects\nrespectively, therefore those two files are released under <a href=\"https://www.gnu.org/licenses/lgpl-3.0.en.html\" rel=\"nofollow\">LGPL v3</a>.</p>\n\n          </div>"}, "last_serial": 7065376, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "a9eca4ad4892ca77c5f4a7af26593553", "sha256": "779cf956fd9c98ab99344d28f6adf04ccede3dba15ca88189078d1a4490b4c8b"}, "downloads": -1, "filename": "rh-elliott-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9eca4ad4892ca77c5f4a7af26593553", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71649, "upload_time": "2018-12-14T19:17:53", "upload_time_iso_8601": "2018-12-14T19:17:53.586961Z", "url": "https://files.pythonhosted.org/packages/91/8e/176f7b9fadbe0560160d0b0ea07597b547509f54ebb838fba2553bf2d248/rh-elliott-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "0fcdbf37aba29f44f56cbb96ee08e513", "sha256": "2f3c16564a96e6b7f88b55609c841c6cb11dd5cdcf867353a8421e1f2d78136d"}, "downloads": -1, "filename": "rh-elliott-0.1.10.tar.gz", "has_sig": false, "md5_digest": "0fcdbf37aba29f44f56cbb96ee08e513", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77906, "upload_time": "2019-04-25T15:11:43", "upload_time_iso_8601": "2019-04-25T15:11:43.209825Z", "url": "https://files.pythonhosted.org/packages/df/aa/6a3a7a21f021985052e932158b6177674874ee176b9a0e22268814383cbd/rh-elliott-0.1.10.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "b90f8708f55386d7079a9fb549200674", "sha256": "f75b542c42aa8e65dcbbdfb95b706cac734f5d12b60625ca2498af7247f2e4af"}, "downloads": -1, "filename": "rh-elliott-0.1.13.tar.gz", "has_sig": false, "md5_digest": "b90f8708f55386d7079a9fb549200674", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81621, "upload_time": "2019-05-24T16:40:36", "upload_time_iso_8601": "2019-05-24T16:40:36.558421Z", "url": "https://files.pythonhosted.org/packages/30/70/d190d4fee269e051c501f27842fc2d4ce8e389bddafa1a71f2a3617b2de8/rh-elliott-0.1.13.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5d3e4a5e237fa8f05fa78d57ce7fd420", "sha256": "222c98f9164d2eb119ab451d47d2a408c7b8bf858af1e3e1b26c8f74ba032b4b"}, "downloads": -1, "filename": "rh-elliott-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5d3e4a5e237fa8f05fa78d57ce7fd420", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79042, "upload_time": "2018-12-14T19:22:24", "upload_time_iso_8601": "2018-12-14T19:22:24.850302Z", "url": "https://files.pythonhosted.org/packages/39/6b/aa5059209a05090c843df9e8d9bf44e7cf8c48a4828d08d0bdc0c6c690ba/rh-elliott-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "389cb8c8926b048e245a90207a2fa2c3", "sha256": "11ed9c41fbf13005587973e200d740cfbaffdde8961bf1064271dd221ef428a7"}, "downloads": -1, "filename": "rh-elliott-0.1.3.tar.gz", "has_sig": false, "md5_digest": "389cb8c8926b048e245a90207a2fa2c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73908, "upload_time": "2019-02-18T18:42:24", "upload_time_iso_8601": "2019-02-18T18:42:24.075324Z", "url": "https://files.pythonhosted.org/packages/16/39/4112e6ae576ef73ae27fa91c0b6a1b3c5da7a4bfbfccc417fa90ef3df8f2/rh-elliott-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c52acb2f7df616e9129d9099c9409e2f", "sha256": "b753e4e2892cfd3cb51426a60948c1f1fa8810dacd3720d7ff4984eb3ed2bd46"}, "downloads": -1, "filename": "rh-elliott-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c52acb2f7df616e9129d9099c9409e2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76056, "upload_time": "2019-03-26T14:20:56", "upload_time_iso_8601": "2019-03-26T14:20:56.147497Z", "url": "https://files.pythonhosted.org/packages/34/58/6ef52be9c91a648eae44d64057fd83e880a2e94e811ec18cf62bc7118c42/rh-elliott-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1d4c96643b7fe24e93a0baf362ecc45e", "sha256": "0aef96273d6b20bc71608e4700bcad0641cb7ac7f597739573fd1a1cf5fc7176"}, "downloads": -1, "filename": "rh-elliott-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1d4c96643b7fe24e93a0baf362ecc45e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76038, "upload_time": "2019-03-29T18:20:37", "upload_time_iso_8601": "2019-03-29T18:20:37.133012Z", "url": "https://files.pythonhosted.org/packages/51/4d/d147c67971380353847300b4f685fb95476ac6ef83c771289a51781d051e/rh-elliott-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "c56bbbfb76cf444baffea1fcf365a550", "sha256": "760d95628c93cbc71c515f53857392c8e8f9bea19744c49196ba8049772905eb"}, "downloads": -1, "filename": "rh-elliott-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c56bbbfb76cf444baffea1fcf365a550", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76024, "upload_time": "2019-04-01T17:39:40", "upload_time_iso_8601": "2019-04-01T17:39:40.569348Z", "url": "https://files.pythonhosted.org/packages/1e/a8/c26ef140da6ded5ca0bcc053fcd36aed926e7c97846424a2d61870f28ec3/rh-elliott-0.1.6.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "d4161330103c5d77e2165350327e0fd3", "sha256": "7c866005a3ce4508808898f89c10348aed308098649d950a18509929877126b4"}, "downloads": -1, "filename": "rh-elliott-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d4161330103c5d77e2165350327e0fd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76178, "upload_time": "2019-04-03T14:35:30", "upload_time_iso_8601": "2019-04-03T14:35:30.010492Z", "url": "https://files.pythonhosted.org/packages/bf/92/823d494a51200b22f7166e667d6f204edb1b9dfee0efbe99089c5f377cea/rh-elliott-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "298c40f95725d1247dc8d718f38765a7", "sha256": "932421f4a713f4b43b20156e711ca81a523b7d50f80c77dd88a54823d65215d3"}, "downloads": -1, "filename": "rh-elliott-0.1.9.tar.gz", "has_sig": false, "md5_digest": "298c40f95725d1247dc8d718f38765a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76855, "upload_time": "2019-04-15T15:30:26", "upload_time_iso_8601": "2019-04-15T15:30:26.522872Z", "url": "https://files.pythonhosted.org/packages/2c/ad/27836b59335f64d24989039ee96fc1bd3975e9d9460090134d6cd50d4f49/rh-elliott-0.1.9.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "7dd474d4d3f0f8e888cb45e16c677291", "sha256": "417d10006c280a59766d388a77169f0750caa7ace0d580139347456ba7a02eb8"}, "downloads": -1, "filename": "rh_elliott-0.2.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7dd474d4d3f0f8e888cb45e16c677291", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 103004, "upload_time": "2019-10-10T14:50:16", "upload_time_iso_8601": "2019-10-10T14:50:16.643824Z", "url": "https://files.pythonhosted.org/packages/bc/7d/4860894adc4a1028d7e0481d446c46895b3282793db4a94fe8691523b4d9/rh_elliott-0.2.10-py2.py3-none-any.whl", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "141ffc8a5dac8e1b7653ef6268d17ce6", "sha256": "4ae9ab88aab3a49bcdaa030ca75e451b195c097e68c25f7d1bc384cc07655693"}, "downloads": -1, "filename": "rh_elliott-0.2.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "141ffc8a5dac8e1b7653ef6268d17ce6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 103046, "upload_time": "2019-10-10T16:16:23", "upload_time_iso_8601": "2019-10-10T16:16:23.588654Z", "url": "https://files.pythonhosted.org/packages/d3/f1/00c9da1ac2236b0f23f255312234f2b8c82910da1611b864b0f699b1dbb7/rh_elliott-0.2.11-py2.py3-none-any.whl", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "3e08a3da2c15a42271bc6689452d4d00", "sha256": "7ae12adac770c5008c16a52ff4b716dab961871e95b063b60564d40cc88222fe"}, "downloads": -1, "filename": "rh_elliott-0.2.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e08a3da2c15a42271bc6689452d4d00", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 105442, "upload_time": "2019-10-14T16:28:27", "upload_time_iso_8601": "2019-10-14T16:28:27.786796Z", "url": "https://files.pythonhosted.org/packages/56/c3/6abfbc8e3359cf4c9801cb3b9575fb59b9dfd74b9e825644c4e7e66942be/rh_elliott-0.2.12-py2.py3-none-any.whl", "yanked": false}], "0.2.13": [{"comment_text": "", "digests": {"md5": "0f400365c004290cf188ff9c9c9678ae", "sha256": "6a32625ee5f63b74bb4341f73c2eba60d38a2e083cb92ccf1dd3838e305b4fb6"}, "downloads": -1, "filename": "rh_elliott-0.2.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f400365c004290cf188ff9c9c9678ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 107502, "upload_time": "2019-10-29T11:23:51", "upload_time_iso_8601": "2019-10-29T11:23:51.618170Z", "url": "https://files.pythonhosted.org/packages/30/60/78eabca8ac9713ba8668f1a86a663c99275c1768ddd60e4c8e3d75421dd2/rh_elliott-0.2.13-py2.py3-none-any.whl", "yanked": false}], "0.2.14": [{"comment_text": "", "digests": {"md5": "048c534c7cc251e2b5dcfc0c76ccb931", "sha256": "c38ada2cfcd6907771cd8789be63866691aa76cf4d7bc6137ed7bd48615295ba"}, "downloads": -1, "filename": "rh_elliott-0.2.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "048c534c7cc251e2b5dcfc0c76ccb931", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 113451, "upload_time": "2019-10-29T11:32:15", "upload_time_iso_8601": "2019-10-29T11:32:15.643463Z", "url": "https://files.pythonhosted.org/packages/0f/f2/f9845e06a70858d0cc8b875b4844a59ed798a3e5e0ac5ed342b17d6766e5/rh_elliott-0.2.14-py2.py3-none-any.whl", "yanked": false}], "0.2.16": [{"comment_text": "", "digests": {"md5": "5cd913461f9a559ab9d1d47146371a74", "sha256": "1c877d0e966c34dd4d1954550404bc8e9df3191679ab8abba04647bdd18f5e12"}, "downloads": -1, "filename": "rh_elliott-0.2.16-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5cd913461f9a559ab9d1d47146371a74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 115395, "upload_time": "2019-11-22T14:02:42", "upload_time_iso_8601": "2019-11-22T14:02:42.025381Z", "url": "https://files.pythonhosted.org/packages/17/1f/778e8c2dee6027b79fb2dfdc22a8d2b2bba8d106ba1b58cc2436d1c3e860/rh_elliott-0.2.16-py2.py3-none-any.whl", "yanked": false}], "0.2.17": [{"comment_text": "", "digests": {"md5": "0006d1869f10dde0c3c91327efb88499", "sha256": "a108dc1fb679d59b81d59b83be2f0c86340e965307b63b8da3445a00a219b86b"}, "downloads": -1, "filename": "rh_elliott-0.2.17-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0006d1869f10dde0c3c91327efb88499", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 94742, "upload_time": "2020-01-02T09:21:50", "upload_time_iso_8601": "2020-01-02T09:21:50.100230Z", "url": "https://files.pythonhosted.org/packages/a0/ac/44eef00f49f59f251f41fbb8e165e037a475d91e0a17d4805cc4b5dd0d4a/rh_elliott-0.2.17-py2.py3-none-any.whl", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "c667cc17296b9c98eead14a82d2f6b05", "sha256": "2a465cf391f4297446bf9865d4d070d9b1f5092f939db2b151ad5a5ee5930ced"}, "downloads": -1, "filename": "rh_elliott-0.2.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c667cc17296b9c98eead14a82d2f6b05", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 98848, "upload_time": "2019-10-10T14:47:12", "upload_time_iso_8601": "2019-10-10T14:47:12.502028Z", "url": "https://files.pythonhosted.org/packages/14/9f/fc816fdaef2b734d13528df30ab7baccf1188748664449ca7574b6cbfaae/rh_elliott-0.2.9-py2.py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6a243d6729c8ef2ca2476ee7ee6f8dfc", "sha256": "0b6d6ae485954560bc56fc93c106b92568add274d9cac7b4021fcfaebb6a5452"}, "downloads": -1, "filename": "rh_elliott-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a243d6729c8ef2ca2476ee7ee6f8dfc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81332, "upload_time": "2020-02-28T13:47:03", "upload_time_iso_8601": "2020-02-28T13:47:03.144051Z", "url": "https://files.pythonhosted.org/packages/07/8a/98d6fe9db295ce77e76e734c35697e7dde35b5d101e38c1097e24235464b/rh_elliott-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f2d6e22b7bf9deaa6e06d0d10b7851c", "sha256": "fe5b8772f22104c4a3a8696baeeddf53330e20f36b580a4331415a6d95755f23"}, "downloads": -1, "filename": "rh-elliott-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2f2d6e22b7bf9deaa6e06d0d10b7851c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63435, "upload_time": "2020-02-28T13:47:04", "upload_time_iso_8601": "2020-02-28T13:47:04.559659Z", "url": "https://files.pythonhosted.org/packages/4e/5e/a6c6bc2a87096e32c3fc4d16fefc499691d60e8443efb34b772032aa110c/rh-elliott-1.0.0.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "2cdccbcbfe46cb5daf6e8dfcaeb202dd", "sha256": "f94a9acebea24b5cc34ba7620a85ce19040ee05c184ca16a8e1cefe905f4b52c"}, "downloads": -1, "filename": "rh_elliott-1.0.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2cdccbcbfe46cb5daf6e8dfcaeb202dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82636, "upload_time": "2020-01-02T09:22:38", "upload_time_iso_8601": "2020-01-02T09:22:38.886781Z", "url": "https://files.pythonhosted.org/packages/37/bd/0e04db15b20e0616176e7153b541ccb114463e0ac3fcf983cd1a352253e5/rh_elliott-1.0.0rc1-py2.py3-none-any.whl", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "c790cc2c55e2fdab098dece1435e92c6", "sha256": "45c9b88809eb015433d3fcffe84033393cbe411649b1e5c200e6e3dd1ec40075"}, "downloads": -1, "filename": "rh_elliott-1.0.0rc2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c790cc2c55e2fdab098dece1435e92c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82634, "upload_time": "2020-01-16T06:37:07", "upload_time_iso_8601": "2020-01-16T06:37:07.993554Z", "url": "https://files.pythonhosted.org/packages/a7/2a/27ce5846e216fc47dd0cbcd87dde714d7dfe617cbefc7106fa2536d84cf9/rh_elliott-1.0.0rc2-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1cb5deef0bbaf6750d82d879a925a09a", "sha256": "f70c672c38ed2fcc0023443e8cfca6fbbc8ccc5cff78b93ec31c70b35ab1a1c2"}, "downloads": -1, "filename": "rh_elliott-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1cb5deef0bbaf6750d82d879a925a09a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 81352, "upload_time": "2020-02-28T04:13:12", "upload_time_iso_8601": "2020-02-28T04:13:12.109487Z", "url": "https://files.pythonhosted.org/packages/9d/43/b577103d092da7311c74adfe13f1e37c002f2946c0ad752bbde7907ed0f4/rh_elliott-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9075033423c2061f4cff3156681f6e50", "sha256": "20aef3ceec7530c424f6092396332ecb9edc9904afc1e44d92f8bc195f04088d"}, "downloads": -1, "filename": "rh_elliott-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9075033423c2061f4cff3156681f6e50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81338, "upload_time": "2020-03-04T20:55:53", "upload_time_iso_8601": "2020-03-04T20:55:53.840000Z", "url": "https://files.pythonhosted.org/packages/c9/8a/43bfa3405e523aa525be070b797075290f3cadb0f238989bd2ea3a07c52d/rh_elliott-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "258642190d8ed0370b9d269dacf80679", "sha256": "dcded8f589caa1a33369485251be5ed172f96db56a477b38930f679c35313c2a"}, "downloads": -1, "filename": "rh-elliott-1.0.2.tar.gz", "has_sig": false, "md5_digest": "258642190d8ed0370b9d269dacf80679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63369, "upload_time": "2020-03-04T20:55:55", "upload_time_iso_8601": "2020-03-04T20:55:55.446427Z", "url": "https://files.pythonhosted.org/packages/6a/f1/6bec3fda150603695009e771e8edbbe6718b65afe88c1f7a7b3e8a0e8550/rh-elliott-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "3e67a2d373b9b0705318fa54bb8240eb", "sha256": "b92d6ed264e5f869928fcda021e195722db42c0f0c018f33e0166f411044c28a"}, "downloads": -1, "filename": "rh_elliott-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3e67a2d373b9b0705318fa54bb8240eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81327, "upload_time": "2020-03-15T23:05:48", "upload_time_iso_8601": "2020-03-15T23:05:48.843686Z", "url": "https://files.pythonhosted.org/packages/5c/cd/1a4d24a005bd0934d7dd9b768a63f24db0f0b9c686c255a0f1cdd223e435/rh_elliott-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f27680e47f1c80961f4f20bcea5e3c21", "sha256": "551d93322dabb5cbc39d765d80395d31364d8dad672c59787c1d5704162d4ec9"}, "downloads": -1, "filename": "rh-elliott-1.0.3.tar.gz", "has_sig": false, "md5_digest": "f27680e47f1c80961f4f20bcea5e3c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63367, "upload_time": "2020-03-15T23:05:50", "upload_time_iso_8601": "2020-03-15T23:05:50.335457Z", "url": "https://files.pythonhosted.org/packages/f7/47/5f70a6bfd3bf410252b5a2c6c02087db9181cf97a806279b14d42a9124e7/rh-elliott-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "e0ec1f4a470e7c7abca56028ead1c674", "sha256": "5d7dca1ee393936958eeb9079d31aae0d85fd748e70f69c48c8262691062138e"}, "downloads": -1, "filename": "rh_elliott-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e0ec1f4a470e7c7abca56028ead1c674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81959, "upload_time": "2020-04-21T05:05:54", "upload_time_iso_8601": "2020-04-21T05:05:54.612327Z", "url": "https://files.pythonhosted.org/packages/fe/a7/5aa705d714590baf04b33512eea9b02fb5d9bf447ebb6d831f99118746a0/rh_elliott-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c08e908bf04c104c5177d1b67590e02c", "sha256": "3d9869f10faa817761b1bd2642715984a3c7947b8a3ca9ea87ea525353319c97"}, "downloads": -1, "filename": "rh-elliott-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c08e908bf04c104c5177d1b67590e02c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63976, "upload_time": "2020-04-21T05:05:55", "upload_time_iso_8601": "2020-04-21T05:05:55.703685Z", "url": "https://files.pythonhosted.org/packages/19/5d/c02eb1aa7af6ee01a22ed27f644e40a78f7ba66f7b75c47db76c99821c81/rh-elliott-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e0ec1f4a470e7c7abca56028ead1c674", "sha256": "5d7dca1ee393936958eeb9079d31aae0d85fd748e70f69c48c8262691062138e"}, "downloads": -1, "filename": "rh_elliott-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e0ec1f4a470e7c7abca56028ead1c674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81959, "upload_time": "2020-04-21T05:05:54", "upload_time_iso_8601": "2020-04-21T05:05:54.612327Z", "url": "https://files.pythonhosted.org/packages/fe/a7/5aa705d714590baf04b33512eea9b02fb5d9bf447ebb6d831f99118746a0/rh_elliott-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c08e908bf04c104c5177d1b67590e02c", "sha256": "3d9869f10faa817761b1bd2642715984a3c7947b8a3ca9ea87ea525353319c97"}, "downloads": -1, "filename": "rh-elliott-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c08e908bf04c104c5177d1b67590e02c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63976, "upload_time": "2020-04-21T05:05:55", "upload_time_iso_8601": "2020-04-21T05:05:55.703685Z", "url": "https://files.pythonhosted.org/packages/19/5d/c02eb1aa7af6ee01a22ed27f644e40a78f7ba66f7b75c47db76c99821c81/rh-elliott-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:59 2020"}