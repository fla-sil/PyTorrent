{"info": {"author": "Lv Chong", "author_email": "lvchong24@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# visdom-wrapper\nA wrapper to use visdom with python 'with' statement.\n\n## Setup\n```\npip3 install visdom-wrapper\n```\n\n## Example\n```\nimport numpy as np\nimport time\nimport os.path\nimport getpass\nfrom sys import platform as _platform\nfrom six.moves import urllib\n\nfrom visdom_wrapper import VizWrapper\nfrom visdom import  Visdom\n\n# Images\nfor i in range(5):\n    var = np.random.randn(20, 3, 64, 64)\n    with VizWrapper(\"random_images\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.images(var,\n                                   opts=dict(title=viz_wrapper.name),\n                                   win=viz_wrapper.win)) # Indispensable\n    time.sleep(1)\n\n# Change server port\nVizWrapper.viz = Visdom(port=8098, server=\"http://localhost\")\n\nfor i in range(5):\n    var = np.random.randn(10, 3, 64, 64)\n    with VizWrapper(\"random_images_1\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.images(var,\n                                   opts=dict(title=viz_wrapper.name),\n                                   win=viz_wrapper.win)) # Indispensable\n    time.sleep(1)\n\n# Histogram\nfor i in range(5):\n    var = np.random.rand(10000)\n    with VizWrapper(\"histogram\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.histogram(X=var,\n                                      opts=dict(numbins=20),\n                                      win=viz_wrapper.win)) # Indispensable\n    time.sleep(1)\n\n# Line updates\nX = np.column_stack((np.arange(0, 10), np.arange(0, 10)))\nY = np.column_stack((np.linspace(5, 10, 10), np.linspace(5, 10, 10) + 5))\nwith VizWrapper(\"line\") as viz_wrapper:\n    viz_wrapper.update_wins(\n        viz_wrapper.viz.line(X=X,\n                             Y=Y,\n                             win=viz_wrapper.win)) # Indispensable\ntime.sleep(2)\nX = np.column_stack((np.arange(10, 20), np.arange(10, 20)))\nY = np.column_stack((np.linspace(5, 10, 10), np.linspace(5, 10, 10) + 5))\nwith VizWrapper(\"line\") as viz_wrapper:\n    viz_wrapper.update_wins(\n        viz_wrapper.viz.line(X=X,\n                             Y=Y,\n                             win=viz_wrapper.win, # Indispensable\n                             update='append'))\n\n# Video\nvideo = np.empty([256, 250, 250, 3], dtype=np.uint8)\nfor n in range(256):\n    video[n, :, :, :].fill(n)\nwith VizWrapper(\"vedio\") as viz_wrapper:\n    viz_wrapper.update_wins(\n        viz_wrapper.viz.video(tensor=video,\n                              win=viz_wrapper.win)) # Indispensable\n\n\nvideo_url = 'http://media.w3.org/2010/05/sintel/trailer.ogv'\n# linux\nif _platform == \"linux\" or _platform == \"linux2\":\n    videofile = '/home/%s/trailer.ogv' % getpass.getuser()\n# MAC OS X\nelif _platform == \"darwin\":\n    videofile = '/Users/%s/trailer.ogv' % getpass.getuser()\n# download video\nurllib.request.urlretrieve(video_url, videofile)\n\nif os.path.isfile(videofile):\n    with VizWrapper(\"vedio_1\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.video(videofile=videofile,\n                                  win=viz_wrapper.win)) # Indispensable\n```\nWith visdom-wrapper, you can use visdom in a more convinent way.\n1. you don't have to create Visdom object explicitly.\n2. you don't have to manage visdom windows explicitly. VizWrapper with the \nsame name will be updated to the same visdom window implicitly.\n3. all visdom apis are still avaiable and you can still configure visdom in a\n flexiable way.  \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Queequeg92/visdom-wrapper", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "visdom-wrapper", "package_url": "https://pypi.org/project/visdom-wrapper/", "platform": "", "project_url": "https://pypi.org/project/visdom-wrapper/", "project_urls": {"Homepage": "https://github.com/Queequeg92/visdom-wrapper"}, "release_url": "https://pypi.org/project/visdom-wrapper/0.1.0/", "requires_dist": ["visdom (>=0.1.8.5)"], "requires_python": "", "summary": "A wrapper to use visdom with python 'with' statement.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>visdom-wrapper</h1>\n<p>A wrapper to use visdom with python 'with' statement.</p>\n<h2>Setup</h2>\n<pre><code>pip3 install visdom-wrapper\n</code></pre>\n<h2>Example</h2>\n<pre><code>import numpy as np\nimport time\nimport os.path\nimport getpass\nfrom sys import platform as _platform\nfrom six.moves import urllib\n\nfrom visdom_wrapper import VizWrapper\nfrom visdom import  Visdom\n\n# Images\nfor i in range(5):\n    var = np.random.randn(20, 3, 64, 64)\n    with VizWrapper(\"random_images\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.images(var,\n                                   opts=dict(title=viz_wrapper.name),\n                                   win=viz_wrapper.win)) # Indispensable\n    time.sleep(1)\n\n# Change server port\nVizWrapper.viz = Visdom(port=8098, server=\"http://localhost\")\n\nfor i in range(5):\n    var = np.random.randn(10, 3, 64, 64)\n    with VizWrapper(\"random_images_1\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.images(var,\n                                   opts=dict(title=viz_wrapper.name),\n                                   win=viz_wrapper.win)) # Indispensable\n    time.sleep(1)\n\n# Histogram\nfor i in range(5):\n    var = np.random.rand(10000)\n    with VizWrapper(\"histogram\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.histogram(X=var,\n                                      opts=dict(numbins=20),\n                                      win=viz_wrapper.win)) # Indispensable\n    time.sleep(1)\n\n# Line updates\nX = np.column_stack((np.arange(0, 10), np.arange(0, 10)))\nY = np.column_stack((np.linspace(5, 10, 10), np.linspace(5, 10, 10) + 5))\nwith VizWrapper(\"line\") as viz_wrapper:\n    viz_wrapper.update_wins(\n        viz_wrapper.viz.line(X=X,\n                             Y=Y,\n                             win=viz_wrapper.win)) # Indispensable\ntime.sleep(2)\nX = np.column_stack((np.arange(10, 20), np.arange(10, 20)))\nY = np.column_stack((np.linspace(5, 10, 10), np.linspace(5, 10, 10) + 5))\nwith VizWrapper(\"line\") as viz_wrapper:\n    viz_wrapper.update_wins(\n        viz_wrapper.viz.line(X=X,\n                             Y=Y,\n                             win=viz_wrapper.win, # Indispensable\n                             update='append'))\n\n# Video\nvideo = np.empty([256, 250, 250, 3], dtype=np.uint8)\nfor n in range(256):\n    video[n, :, :, :].fill(n)\nwith VizWrapper(\"vedio\") as viz_wrapper:\n    viz_wrapper.update_wins(\n        viz_wrapper.viz.video(tensor=video,\n                              win=viz_wrapper.win)) # Indispensable\n\n\nvideo_url = 'http://media.w3.org/2010/05/sintel/trailer.ogv'\n# linux\nif _platform == \"linux\" or _platform == \"linux2\":\n    videofile = '/home/%s/trailer.ogv' % getpass.getuser()\n# MAC OS X\nelif _platform == \"darwin\":\n    videofile = '/Users/%s/trailer.ogv' % getpass.getuser()\n# download video\nurllib.request.urlretrieve(video_url, videofile)\n\nif os.path.isfile(videofile):\n    with VizWrapper(\"vedio_1\") as viz_wrapper:\n        viz_wrapper.update_wins(\n            viz_wrapper.viz.video(videofile=videofile,\n                                  win=viz_wrapper.win)) # Indispensable\n</code></pre>\n<p>With visdom-wrapper, you can use visdom in a more convinent way.</p>\n<ol>\n<li>you don't have to create Visdom object explicitly.</li>\n<li>you don't have to manage visdom windows explicitly. VizWrapper with the\nsame name will be updated to the same visdom window implicitly.</li>\n<li>all visdom apis are still avaiable and you can still configure visdom in a\nflexiable way.</li>\n</ol>\n\n          </div>"}, "last_serial": 4505665, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "646f6f47bf7ed124846d2b16e4c1384f", "sha256": "68306667ad90fa58d6d4ae78292449e0048307022a0444d7beed4fe08813e5da"}, "downloads": -1, "filename": "visdom_wrapper-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "646f6f47bf7ed124846d2b16e4c1384f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4359, "upload_time": "2018-11-20T03:01:36", "upload_time_iso_8601": "2018-11-20T03:01:36.457642Z", "url": "https://files.pythonhosted.org/packages/3b/db/6d12a4faeff327b97333347ac4f29eb6a1f8ec4801ab767e452917f0ffe8/visdom_wrapper-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "360ea803f366dd24f292ce0a81304969", "sha256": "dd52049f06c305efd2c2cee61b58f5eb714cdc00a01b1c0a14218a7d48891af5"}, "downloads": -1, "filename": "visdom-wrapper-0.1.0.tar.gz", "has_sig": false, "md5_digest": "360ea803f366dd24f292ce0a81304969", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3151, "upload_time": "2018-11-20T03:01:37", "upload_time_iso_8601": "2018-11-20T03:01:37.983544Z", "url": "https://files.pythonhosted.org/packages/8c/c0/91bcdc7d41f892bf40833370159cba291073755b77381a779230e5a316d0/visdom-wrapper-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "646f6f47bf7ed124846d2b16e4c1384f", "sha256": "68306667ad90fa58d6d4ae78292449e0048307022a0444d7beed4fe08813e5da"}, "downloads": -1, "filename": "visdom_wrapper-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "646f6f47bf7ed124846d2b16e4c1384f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4359, "upload_time": "2018-11-20T03:01:36", "upload_time_iso_8601": "2018-11-20T03:01:36.457642Z", "url": "https://files.pythonhosted.org/packages/3b/db/6d12a4faeff327b97333347ac4f29eb6a1f8ec4801ab767e452917f0ffe8/visdom_wrapper-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "360ea803f366dd24f292ce0a81304969", "sha256": "dd52049f06c305efd2c2cee61b58f5eb714cdc00a01b1c0a14218a7d48891af5"}, "downloads": -1, "filename": "visdom-wrapper-0.1.0.tar.gz", "has_sig": false, "md5_digest": "360ea803f366dd24f292ce0a81304969", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3151, "upload_time": "2018-11-20T03:01:37", "upload_time_iso_8601": "2018-11-20T03:01:37.983544Z", "url": "https://files.pythonhosted.org/packages/8c/c0/91bcdc7d41f892bf40833370159cba291073755b77381a779230e5a316d0/visdom-wrapper-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:19 2020"}