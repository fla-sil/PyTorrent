{"info": {"author": "alfred82santa", "author_email": "alfred82santa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5"], "description": "|travis-master| |coverall-master| |doc-master| |pypi-downloads| |pypi-lastrelease| |python-versions|\n|project-status| |project-license| |project-format| |project-implementation|\n\n.. |travis-master| image:: https://travis-ci.org/alfred82santa/aiowerkzeug.svg?branch=master\n    :target: https://travis-ci.org/alfred82santa/aiowerkzeug\n\n.. |coverall-master| image:: https://coveralls.io/repos/alfred82santa/aiowerkzeug/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/r/alfred82santa/aiowerkzeug?branch=master\n\n.. |doc-master| image:: https://readthedocs.org/projects/aiowerkzeug/badge/?version=latest\n    :target: https://readthedocs.org/projects/aiowerkzeug/?badge=latest\n    :alt: Documentation Status\n\n.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: Downloads\n\n.. |pypi-lastrelease| image:: https://img.shields.io/pypi/v/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: Latest Version\n\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: Supported Python versions\n\n.. |project-status| image:: https://img.shields.io/pypi/status/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: Development Status\n\n.. |project-license| image:: https://img.shields.io/pypi/l/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: License\n\n.. |project-format| image:: https://img.shields.io/pypi/format/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: Download format\n\n.. |project-implementation| image:: https://img.shields.io/pypi/implementation/aiowerkzeug.svg\n    :target: https://pypi.python.org/pypi/aiowerkzeug/\n    :alt: Supported Python implementations\n\n===========\naiowerkzeug\n===========\n\nLibrary to make werkzeug working with asyncio.\n\n---------\nChangelog\n---------\n\nVersion 0.2.0\n=============\n\n* Use Python 3.5 async syntax.\n\n* New `~keep_context_factory`. It works like `~context_coroutine`,\n  but simple code.\n\n* Async version of Local, LocalStack and LocalManager. They implement `__release_local__` method.\n\n--------\nFeatures\n--------\n\n* Async versions of Local, LocalStack and LocalManager.\n\n* Locals work on asyncio Tasks. `werkzeug.local.Local` or `werkzeug.local.LocalStack` must be patched\n  with `aiowerkzeug.local.patch_local`\n\n  Patched `werkzeug.local.Local` or `werkzeug.local.LocalStack` use current `asyncio.tasks.Task`\n  to determine context.\n\n* Decorator factory to mark coroutines to run in a context. Useful for Flask. It allows to run corountines\n  in new `asyncio.tasks.Task` inside a specific context.\n\n  For example, in Flask to run coroutines in Application context it is possible to create a decorator like that:\n\n  .. code-block:: python\n\n        def _get_app_context():\n            return current_app.app_context()\n\n        app_coroutine = partial(context_coroutine, ctx=_get_app_context)\n\n        @app_coroutine\n        def foo_bar():\n            print(current_app.debug)\n\n        @flask_app.route('/')\n        def caller():\n            asyncio.ensure_future(foo_bar())\n\n* Asyncio HTTP server runner with reload\n\n  .. code-block:: bash\n\n    $ python aiowerkzeug/serving.py --reload app_test.app\n\n----\nTODO\n----\n\n* Form parser\n* Debug middleware\n* Static files middleware", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alfred82santa/aiowerkzeug", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "aiowerkzeug", "package_url": "https://pypi.org/project/aiowerkzeug/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aiowerkzeug/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alfred82santa/aiowerkzeug"}, "release_url": "https://pypi.org/project/aiowerkzeug/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Werkzeug for asyncio", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/alfred82santa/aiowerkzeug\" rel=\"nofollow\"><img alt=\"travis-master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/848faccba48a1bc10486791e04a8500a7fa7b6d8/68747470733a2f2f7472617669732d63692e6f72672f616c66726564383273616e74612f61696f7765726b7a6575672e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/alfred82santa/aiowerkzeug?branch=master\" rel=\"nofollow\"><img alt=\"coverall-master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d49339a74b9cc33d35d83285e97ca8b85e23f1e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f616c66726564383273616e74612f61696f7765726b7a6575672f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://readthedocs.org/projects/aiowerkzeug/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebb49627ffa358f59b5761141ae2f09efd7b62ee/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696f7765726b7a6575672f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eff55b784ae62d88618ca84f35dffc5b7c47f160/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f61696f7765726b7a6575672e737667\"></a> <a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d396588d6828f055e12ac13c8204cb74583a5037/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f7765726b7a6575672e737667\"></a> <a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89ce425112e9933a5e05071063ee8ba9c120b896/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f7765726b7a6575672e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"Development Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ac47bad0d5259a2048a241265c3af0d366f297d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f61696f7765726b7a6575672e737667\"></a> <a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8cd337f03bd1c983809f0bcc8ad826fbf9bae63f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61696f7765726b7a6575672e737667\"></a> <a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"Download format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bffa5649712501571da18c9ae7233def40c18f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f61696f7765726b7a6575672e737667\"></a> <a href=\"https://pypi.python.org/pypi/aiowerkzeug/\" rel=\"nofollow\"><img alt=\"Supported Python implementations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b23eda26b0fe537b46d41c7c5e3fe5699afe2655/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f61696f7765726b7a6575672e737667\"></a></p>\n<div id=\"aiowerkzeug\">\n<h2>aiowerkzeug</h2>\n<p>Library to make werkzeug working with asyncio.</p>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<h3 id=\"version-0-2-0\"><span class=\"section-subtitle\">Version 0.2.0</span></h3>\n<ul>\n<li>Use Python 3.5 async syntax.</li>\n<li>New <cite>~keep_context_factory</cite>. It works like <cite>~context_coroutine</cite>,\nbut simple code.</li>\n<li>Async version of Local, LocalStack and LocalManager. They implement <cite>__release_local__</cite> method.</li>\n</ul>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li><p>Async versions of Local, LocalStack and LocalManager.</p>\n</li>\n<li><p>Locals work on asyncio Tasks. <cite>werkzeug.local.Local</cite> or <cite>werkzeug.local.LocalStack</cite> must be patched\nwith <cite>aiowerkzeug.local.patch_local</cite></p>\n<p>Patched <cite>werkzeug.local.Local</cite> or <cite>werkzeug.local.LocalStack</cite> use current <cite>asyncio.tasks.Task</cite>\nto determine context.</p>\n</li>\n<li><p>Decorator factory to mark coroutines to run in a context. Useful for Flask. It allows to run corountines\nin new <cite>asyncio.tasks.Task</cite> inside a specific context.</p>\n<p>For example, in Flask to run coroutines in Application context it is possible to create a decorator like that:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_get_app_context</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">app_context</span><span class=\"p\">()</span>\n\n<span class=\"n\">app_coroutine</span> <span class=\"o\">=</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">context_coroutine</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"o\">=</span><span class=\"n\">_get_app_context</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app_coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_bar</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@flask_app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">caller</span><span class=\"p\">():</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">foo_bar</span><span class=\"p\">())</span>\n</pre>\n</li>\n<li><p>Asyncio HTTP server runner with reload</p>\n<pre>$ python aiowerkzeug/serving.py --reload app_test.app\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>Form parser</li>\n<li>Debug middleware</li>\n<li>Static files middleware</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2204247, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f9a9977546e11f2cd04de5d28495464a", "sha256": "224715bea169b995c25036e5ce87e40ad95c51302cfe6d152fc5a2c69974d0d2"}, "downloads": -1, "filename": "aiowerkzeug-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f9a9977546e11f2cd04de5d28495464a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3184, "upload_time": "2015-08-27T17:22:04", "upload_time_iso_8601": "2015-08-27T17:22:04.409337Z", "url": "https://files.pythonhosted.org/packages/18/31/94d29a78690e21a835c69b68434754dff363e79ba479668ef278b35ca586/aiowerkzeug-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c57ed4e68801f96a7f64f4c250cc649d", "sha256": "182a9c8ba60d4866151ac40737825980bd01289a6cfde7ae71e48d5a314fde25"}, "downloads": -1, "filename": "aiowerkzeug-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c57ed4e68801f96a7f64f4c250cc649d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7336, "upload_time": "2015-09-01T00:03:01", "upload_time_iso_8601": "2015-09-01T00:03:01.709359Z", "url": "https://files.pythonhosted.org/packages/b5/ac/52c45bdf62981c2f633a65a33663c0e7c488721a5f1aa0561955ffaf4c72/aiowerkzeug-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ed23dd49fa794dd916e74f4f6f62f3df", "sha256": "c0a213fc4692c0fa5af065c20e240f0748a9b22b31f0e36076b36e48eee44e82"}, "downloads": -1, "filename": "aiowerkzeug-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ed23dd49fa794dd916e74f4f6f62f3df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7337, "upload_time": "2015-09-01T00:06:08", "upload_time_iso_8601": "2015-09-01T00:06:08.587731Z", "url": "https://files.pythonhosted.org/packages/2e/91/73d290e580e299a0b2b78f2fc7f5afab0582080f67a71fabf05eded88db5/aiowerkzeug-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "70ecc796934f33e4dade45e19e143ffb", "sha256": "ad4fb4f8c21cefc79f33f64623d424ceec002f923f261160fc9b255ee192c7dc"}, "downloads": -1, "filename": "aiowerkzeug-0.2.0.tar.gz", "has_sig": false, "md5_digest": "70ecc796934f33e4dade45e19e143ffb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7870, "upload_time": "2016-07-05T19:37:25", "upload_time_iso_8601": "2016-07-05T19:37:25.023802Z", "url": "https://files.pythonhosted.org/packages/c2/d3/a8511bc9161490f25fd3bbfe926f70b4e18a3958832059c11a43a7d7e365/aiowerkzeug-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70ecc796934f33e4dade45e19e143ffb", "sha256": "ad4fb4f8c21cefc79f33f64623d424ceec002f923f261160fc9b255ee192c7dc"}, "downloads": -1, "filename": "aiowerkzeug-0.2.0.tar.gz", "has_sig": false, "md5_digest": "70ecc796934f33e4dade45e19e143ffb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7870, "upload_time": "2016-07-05T19:37:25", "upload_time_iso_8601": "2016-07-05T19:37:25.023802Z", "url": "https://files.pythonhosted.org/packages/c2/d3/a8511bc9161490f25fd3bbfe926f70b4e18a3958832059c11a43a7d7e365/aiowerkzeug-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:37 2020"}