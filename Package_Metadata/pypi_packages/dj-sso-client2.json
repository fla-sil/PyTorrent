{"info": {"author": "Fan Fei, Cliff Chen", "author_email": "tofu0913@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "dj-sso-client\n=============\n``dj-sso-client`` is the a Django application works as SSO client side of ``dj-sso-server`` (https://github.com/feifangit/dj-sso-server)\n\n\nInstallation\n-------------\n``pip install dj-sso-client``\n\n\n\nAdd to your project\n------------------------\n- Modify following settings in ``settings.py`` of your project\n\n\t- ``AUTHENTICATION_BACKENDS``, add ``djssoclient.authbackend.SSOAuthBackend`` as the backends\n\t- ``AUTH_USER_MODEL``, set ``djssoclient.SSOUser`` as user model\n\n.. code-block:: python\n\n\tAUTHENTICATION_BACKENDS = ('djssoclient.authbackend.SSOAuthBackend',)\n\tAUTH_USER_MODEL = 'djssoclient.SSOUser'\n\n- Add following ``dj-sso-client`` settings base on your demand\n\n\t- ``SSO_API_AUTH_SETTING``: set API key, SEC key and remote SSO provider URL. This setting is used by underneath ``dj-api-auth`` module to proejct API accessing.\n\n\t\t.. code-block:: python\n\n\t\t\tSSO_API_AUTH_SETTING = {\n\t\t\t    \"apikey\": \"f4a05287\",\n\t\t\t    \"seckey\": \"6a4eeaea54d54f51af703e79c6096d51\",\n\t\t\t    \"url\": \"https://dj-sso-sample.herokuapp.com\",\n\t\t\t}\n\n\t- ``SSO_REMOTE_URL_PREFIX`` (optional): SSO path in remote SSO provider. default ``/sso/``\n\n\t- ``SSO_USER_STORAGE``(optional):  SSOUser storage solution, there are 2 storage backends in ``dj-sso-client`` already. default: SSOUserDBStorage\n\n\t\t- ``djssoclient.userstorage.SSOUserDBStorage``: store user data in database\n\t\t- ``djssoclient.userstorage.SSOUserCacheStorage``: store user data in cache. You will get better performance.\n\n\t- ``SSO_SETTING_CACHE`` (optional): if you selected ``SSOUserCacheStorage`` as your user storage backend, and you have more than one cache in ``settings.py``, you can pick up the cache name here. default: ``default``\n\n\nAttention: ``SSOUserCacheStorage``\n---------------------------------------\nThe default ``django.core.cache.backends.locmem.LocMemCache`` stores data per process. In multi-process production environment (gunicorn on multi-core server), it may cause problem while using ``SSOUserCacheStorage`` as your user storage engine. \n\nPlease use dedicate cache system (Memcached or Redis) as cache backend to avoid this problem.\n\n\nSSOUser\n--------\n``SSOUser`` is the user model to store user data. It can be used as database model class if you selected ``SSOUserDBStorage`` to be your user storage engine.\n\n.. code-block:: python\n\n\tclass SSOUser(AbstractBaseUser):\n\t    username = models.CharField(unique=True, max_length=50)\n\t    extras = models.TextField(default=\"{}\")\n\t    ...\n\n**extra user attributes** : attributes not exists in the ``SSOUser`` class. (attributes except ``username``, ``password``, ``last_login`` etc.) \n\nAll extra user attributes can be access  by ``getattr`` method or ``.`` operator. And they are stored in class member ``extras`` in JSON format.\n\n\nGet your hands dirty\n---------------------\nWe already have a SSO provider (``dj-sso-server``) application running on Heroku: http://dj-sso-sample.herokuapp.com/ . Run the example application in folder ``example/ssoclient/`` locally.\n\nThe API key using in the example application is binding with ``localhost:8000``, so make sure you're accessing local application by ``localhost:8000`` rather than the ``127.0.0.1:8000``. \n\n**fresh login**\n\n1. make sure you're not logged in on http://dj-sso-sample.herokuapp.com/, you should see ``please log in with ...``\n2. click *sso login* on local application, you will be redirected to http://dj-sso-sample.herokuapp.com/sso/....\n3. you will see user information after be redirected to local application.\n4. on http://dj-sso-sample.herokuapp.com/ , your status is still not logged-in\n\n**login with existing logged account**\n\n1. log in with user name ``user1`` and password ``123`` on http://dj-sso-sample.herokuapp.com/ \n2. click  *sso login* on local application, you will be redirected to http://dj-sso-sample.herokuapp.com/sso/...., but you will see a different login page with fresh login. \n3. select ``continue with current user? user1``\n4. you will be logged in as ``user1`` at local application\n\n**switch account**\n\n1. if you select ``switch account`` and login with ``user2``/``456`` from step 3 in previous sample\n2. you will be logged in as ``user2`` at local application\n3. your login status on http://dj-sso-sample.herokuapp.com/ will **NOT** be changed (still logged in as ``user1``)\n\n\n\nTODO\n-----\n- example: work as an extra auth method\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tofu0913/dj-sso-client", "keywords": "", "license": "GPL v2.0", "maintainer": "", "maintainer_email": "", "name": "dj-sso-client2", "package_url": "https://pypi.org/project/dj-sso-client2/", "platform": "", "project_url": "https://pypi.org/project/dj-sso-client2/", "project_urls": {"Homepage": "https://github.com/tofu0913/dj-sso-client"}, "release_url": "https://pypi.org/project/dj-sso-client2/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "A Django SSO client application, works with dj-sso-server", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">dj-sso-client</span></tt> is the a Django application works as SSO client side of <tt><span class=\"pre\">dj-sso-server</span></tt> (<a href=\"https://github.com/feifangit/dj-sso-server\" rel=\"nofollow\">https://github.com/feifangit/dj-sso-server</a>)</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install <span class=\"pre\">dj-sso-client</span></tt></p>\n</div>\n<div id=\"add-to-your-project\">\n<h2>Add to your project</h2>\n<ul>\n<li><p>Modify following settings in <tt>settings.py</tt> of your project</p>\n<blockquote>\n<ul>\n<li><tt>AUTHENTICATION_BACKENDS</tt>, add <tt>djssoclient.authbackend.SSOAuthBackend</tt> as the backends</li>\n<li><tt>AUTH_USER_MODEL</tt>, set <tt>djssoclient.SSOUser</tt> as user model</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<pre><span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'djssoclient.authbackend.SSOAuthBackend'</span><span class=\"p\">,)</span>\n<span class=\"n\">AUTH_USER_MODEL</span> <span class=\"o\">=</span> <span class=\"s1\">'djssoclient.SSOUser'</span>\n</pre>\n<ul>\n<li><p>Add following <tt><span class=\"pre\">dj-sso-client</span></tt> settings base on your demand</p>\n<blockquote>\n<ul>\n<li><p><tt>SSO_API_AUTH_SETTING</tt>: set API key, SEC key and remote SSO provider URL. This setting is used by underneath <tt><span class=\"pre\">dj-api-auth</span></tt> module to proejct API accessing.</p>\n<blockquote>\n<pre><span class=\"n\">SSO_API_AUTH_SETTING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"apikey\"</span><span class=\"p\">:</span> <span class=\"s2\">\"f4a05287\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"seckey\"</span><span class=\"p\">:</span> <span class=\"s2\">\"6a4eeaea54d54f51af703e79c6096d51\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://dj-sso-sample.herokuapp.com\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n</blockquote>\n</li>\n<li><p><tt>SSO_REMOTE_URL_PREFIX</tt> (optional): SSO path in remote SSO provider. default <tt>/sso/</tt></p>\n</li>\n<li><p><tt><span class=\"pre\">SSO_USER_STORAGE``(optional):</span>\u00a0 SSOUser storage solution, there are 2 storage backends in <span class=\"pre\">``dj-sso-client</span></tt> already. default: SSOUserDBStorage</p>\n<blockquote>\n<ul>\n<li><tt>djssoclient.userstorage.SSOUserDBStorage</tt>: store user data in database</li>\n<li><tt>djssoclient.userstorage.SSOUserCacheStorage</tt>: store user data in cache. You will get better performance.</li>\n</ul>\n</blockquote>\n</li>\n<li><p><tt>SSO_SETTING_CACHE</tt> (optional): if you selected <tt>SSOUserCacheStorage</tt> as your user storage backend, and you have more than one cache in <tt>settings.py</tt>, you can pick up the cache name here. default: <tt>default</tt></p>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"attention-ssousercachestorage\">\n<h2>Attention: <tt>SSOUserCacheStorage</tt></h2>\n<p>The default <tt>django.core.cache.backends.locmem.LocMemCache</tt> stores data per process. In multi-process production environment (gunicorn on multi-core server), it may cause problem while using <tt>SSOUserCacheStorage</tt> as your user storage engine.</p>\n<p>Please use dedicate cache system (Memcached or Redis) as cache backend to avoid this problem.</p>\n</div>\n<div id=\"ssouser\">\n<h2>SSOUser</h2>\n<p><tt>SSOUser</tt> is the user model to store user data. It can be used as database model class if you selected <tt>SSOUserDBStorage</tt> to be your user storage engine.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">SSOUser</span><span class=\"p\">(</span><span class=\"n\">AbstractBaseUser</span><span class=\"p\">):</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">extras</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n</pre>\n<p><strong>extra user attributes</strong> : attributes not exists in the <tt>SSOUser</tt> class. (attributes except <tt>username</tt>, <tt>password</tt>, <tt>last_login</tt> etc.)</p>\n<p>All extra user attributes can be access  by <tt>getattr</tt> method or <tt>.</tt> operator. And they are stored in class member <tt>extras</tt> in JSON format.</p>\n</div>\n<div id=\"get-your-hands-dirty\">\n<h2>Get your hands dirty</h2>\n<p>We already have a SSO provider (<tt><span class=\"pre\">dj-sso-server</span></tt>) application running on Heroku: <a href=\"http://dj-sso-sample.herokuapp.com/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/</a> . Run the example application in folder <tt>example/ssoclient/</tt> locally.</p>\n<p>The API key using in the example application is binding with <tt>localhost:8000</tt>, so make sure you\u2019re accessing local application by <tt>localhost:8000</tt> rather than the <tt>127.0.0.1:8000</tt>.</p>\n<p><strong>fresh login</strong></p>\n<ol>\n<li>make sure you\u2019re not logged in on <a href=\"http://dj-sso-sample.herokuapp.com/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/</a>, you should see <tt>please log in with ...</tt></li>\n<li>click <em>sso login</em> on local application, you will be redirected to <a href=\"http://dj-sso-sample.herokuapp.com/sso/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/sso/</a>\u2026.</li>\n<li>you will see user information after be redirected to local application.</li>\n<li>on <a href=\"http://dj-sso-sample.herokuapp.com/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/</a> , your status is still not logged-in</li>\n</ol>\n<p><strong>login with existing logged account</strong></p>\n<ol>\n<li>log in with user name <tt>user1</tt> and password <tt>123</tt> on <a href=\"http://dj-sso-sample.herokuapp.com/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/</a></li>\n<li>click  <em>sso login</em> on local application, you will be redirected to <a href=\"http://dj-sso-sample.herokuapp.com/sso/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/sso/</a>\u2026., but you will see a different login page with fresh login.</li>\n<li>select <tt>continue with current user? user1</tt></li>\n<li>you will be logged in as <tt>user1</tt> at local application</li>\n</ol>\n<p><strong>switch account</strong></p>\n<ol>\n<li>if you select <tt>switch account</tt> and login with <tt>user2</tt>/<tt>456</tt> from step 3 in previous sample</li>\n<li>you will be logged in as <tt>user2</tt> at local application</li>\n<li>your login status on <a href=\"http://dj-sso-sample.herokuapp.com/\" rel=\"nofollow\">http://dj-sso-sample.herokuapp.com/</a> will <strong>NOT</strong> be changed (still logged in as <tt>user1</tt>)</li>\n</ol>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>example: work as an extra auth method</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6097213, "releases": {"0.22": [{"comment_text": "", "digests": {"md5": "6967a7f5d9927af3dd7444e1af2a9dae", "sha256": "f277e90d7dbbee721a892ac1fdd70fcc1c4147442c544622727f60771495b4c4"}, "downloads": -1, "filename": "dj-sso-client2-0.22.tar.gz", "has_sig": false, "md5_digest": "6967a7f5d9927af3dd7444e1af2a9dae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19085, "upload_time": "2016-08-17T03:39:55", "upload_time_iso_8601": "2016-08-17T03:39:55.516654Z", "url": "https://files.pythonhosted.org/packages/ee/ca/d920f3270bf857442bce3b69a9f57e3619924c517931833565585ddd44a8/dj-sso-client2-0.22.tar.gz", "yanked": false}], "0.23": [{"comment_text": "", "digests": {"md5": "e0598c9fb1515435ec565b6d5c8e912f", "sha256": "2df1549fc7ed881eaa445c864d85ee7a48ee207aa09acb21ae2576bbd506e602"}, "downloads": -1, "filename": "dj-sso-client2-0.23.tar.gz", "has_sig": false, "md5_digest": "e0598c9fb1515435ec565b6d5c8e912f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19169, "upload_time": "2016-08-24T09:19:58", "upload_time_iso_8601": "2016-08-24T09:19:58.918113Z", "url": "https://files.pythonhosted.org/packages/c0/cf/e3d5a484598dc5f246237857b0a5fe657eedc6b68e68f49774eb79165a36/dj-sso-client2-0.23.tar.gz", "yanked": false}], "0.24": [{"comment_text": "", "digests": {"md5": "7822fca54be2818fcb62b539ff04abd9", "sha256": "daca9a76b1d9a7ffd14d09f7e92ed797b1ad38659f0fa124d0d877f1262008a2"}, "downloads": -1, "filename": "dj-sso-client2-0.24.tar.gz", "has_sig": false, "md5_digest": "7822fca54be2818fcb62b539ff04abd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21208, "upload_time": "2019-02-11T06:43:52", "upload_time_iso_8601": "2019-02-11T06:43:52.780514Z", "url": "https://files.pythonhosted.org/packages/c4/72/54affdbb8ae505d7ed2e23e28b7cfc0d31fc0c7e2c52d9c6ebfcf7e969d8/dj-sso-client2-0.24.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "a74cc3265ebec0b66de792ddfaf540a5", "sha256": "1254137337c1e9e4dc406fb7061f0f530c9521e6b386c0bbe09cf74b6d33933a"}, "downloads": -1, "filename": "dj_sso_client2-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a74cc3265ebec0b66de792ddfaf540a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11958, "upload_time": "2019-11-07T10:01:37", "upload_time_iso_8601": "2019-11-07T10:01:37.167177Z", "url": "https://files.pythonhosted.org/packages/48/00/37533218b979ff85d412d63e0a1a200482893dd5772fbbde57eeffb4cc06/dj_sso_client2-1.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "475308cfbb26af3654a3633ee7c933c5", "sha256": "83c35efdbb2cf31ce2304c0cb2a5e311285c6e4891c57c822970ade393d44b2f"}, "downloads": -1, "filename": "dj_sso_client2-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "475308cfbb26af3654a3633ee7c933c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11993, "upload_time": "2019-11-08T04:25:30", "upload_time_iso_8601": "2019-11-08T04:25:30.630988Z", "url": "https://files.pythonhosted.org/packages/58/70/d5f2ad5e34445e211595bf9cbc4bc838090fffc83d5419b52640e969aaf7/dj_sso_client2-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "475308cfbb26af3654a3633ee7c933c5", "sha256": "83c35efdbb2cf31ce2304c0cb2a5e311285c6e4891c57c822970ade393d44b2f"}, "downloads": -1, "filename": "dj_sso_client2-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "475308cfbb26af3654a3633ee7c933c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11993, "upload_time": "2019-11-08T04:25:30", "upload_time_iso_8601": "2019-11-08T04:25:30.630988Z", "url": "https://files.pythonhosted.org/packages/58/70/d5f2ad5e34445e211595bf9cbc4bc838090fffc83d5419b52640e969aaf7/dj_sso_client2-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:51:26 2020"}