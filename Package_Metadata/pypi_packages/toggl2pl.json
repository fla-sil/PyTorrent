{"info": {"author": "Andrew Poltavchenko", "author_email": "pa@yourserveradmin.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython"], "description": "# toggl2pl\n\nPython module and tool to simplify time entries export from [Toggl][toggl]\ninto [PL][pl] (Project Laboratory).\n\n- [Requirements](#requirements)\n- [Usage](#usage)\n  - [Installation](#installation)\n    - [Production](#production)\n      - [Precompiled binaries](#precompiled-binaries)\n      - [Using PIP](#using-pip)\n    - [Development](#development)\n  - [Command line interface](#command-line-interface)\n    - [Configuration](#configuration)\n    - [Examples](#examples)\n      - [Simple](#simple)\n      - [Rounding](#rounding)\n      - [Custom date](#custom-date)\n- [Functional](#functional)\n  - [Core functional](#core-functional)\n  - [Features](#features)\n- [Roadmap](#roadmap)\n- [Internals](#internals)\n  - [Supported APIs](#supported-apis)\n  - [Build application](#build-application)\n\n## Requirements\n\nThe module is written in pure Python and its work verified with Python `>= 3.5`.\n\nAs far as there are no low-level system calls (at least now) the module should\nbe platform independent, i.e. work on any platform where Python is available.\n\n_Python `2.7` (and older) support is not planned since Python `2.7` will not be\nmaintained past January 1, 2020._\n\n## Usage\n\n### Installation\n\n#### Production\n\n##### Precompiled binaries\n\nFor end users the preferable way to install application is to use executable files\nstatically compiled for Linux and Windows platforms, packaged using ZIP and signed\nwith GPG key.\n\nExample installation steps to execute on Linux:\n\n```bash\nexport TOGGL2PL_VERSION=\"1.0.6\"\n\nwget https://github.com/pa-yourserveradmin-com/toggl2pl/releases/download/v${TOGGL2PL_VERSION}/toggl2pl-${TOGGL2PL_VERSION}-linux-amd64.zip\nunzip toggl2pl-${TOGGL2PL_VERSION}-linux-amd64.zip\ninstall -v -D toggl2pl ~/.local/bin/toggl2pl\n\nrm -fv toggl2pl-${TOGGL2PL_VERSION}-linux-amd64.zip toggl2pl\n```\n\nVerify application work with your Linux distribution:\n\n```bash\ntoggl2pl --help\n```\n\n##### Using PIP\n\nIn case you need to install the application as a Python module (for example, you\nwant to use its API in your new awesome module or application), the simplest way\nis to use `pip`:\n\n```bash\npip install toggl2pl\n```\n\n#### Development\n\n1. Obtain the package sources and change working directory to the root of project.\nFor example, clone the project using Git:\n\n```bash\ngit clone https://github.com/pa-yourserveradmin-com/toggl2pl.git\ncd toggl2pl\n```\n\n2. The Python `virtualenv` module is recommended to start using the package in\ndevelopment mode, i.e. without module installation into the system. Please, see\n`virtualenv` package installation instructions for some common used operating\nsystems below.\n\nFedora 29:\n\n```bash\nsudo dnf --assumeyes install python-virtualenv python3-virtualenv\n```\n\nUbuntu 18:\n\n```bash\nsudo apt --assume-yes install python-virtualenv python3-virtualenv\n```\n\nOnce the `virtualenv` package is installed, just create a new Python virtual\nenvironment anywhere you want. The example below assumes virtual environment is\ndeployed into the root of the cloned project repository:\n\n```bash\nvirtualenv venv\nsource venv/bin/activate\npip install --requirement requirements.txt\n```\n\n3. In case if no issues with Python virtual environment setup, now you should be\nable to try using the module. In order to check environment, just execute the next\nCLI commands:\n\n```bash\ncp -av scripts/toggl2pl toggl2pl.py\n./toggl2pl.py --help\n```\n\nIn the output you will see usage instructions and some CLI arguments descriptions.\n\nIn order to interact with time trackers some additional configuration is needed,\nplease proceed with [Configuration](#configuration) paragraph to start using the\nmodule in command line mode.\n\n### Command line interface\n\n#### Configuration\n\nBy default CLI uses configuration file stored as `~/.toggl2pl/config.yml`. Please\nexecute the next commands to install [config.yml.example][config.yml.example] as\nthe default configuration file:\n\n```bash\ninstall -v -D docs/_static/config.yml.example ~/.toggl2pl/config.yml\n```\n\nPlease open the newly created configuration file with your preferable text editor,\nread comments and update empty fields with your personal information.\n\n[config.yml.example]: https://github.com/pa-yourserveradmin-com/toggl2pl/blob/master/docs/_static/config.yml.example\n\n#### Examples\n\nPlease note, that currently all CLI flags can be combined into the single command\nand examples below just needed to describe flags purposes.\n\n##### Simple\n\nIn order to post hours for the current day AS IS just call the script without\nany arguments:\n\n```bash\ntoggl2pl\n```\n\nIn the output you will see a table with list of projects, tasks and time (real\nand rounded) spent on each task. Also you will be prompted to export data to PL\nor interrupt export.\n\n##### Rounding\n\nBy default, the real number of minutes will be posted to PL. Use rounding or not\ndepends on your case and team agreement, so please keep this in mind.\n\nIn order to post rounded number of minutes - just append `--round` flag to the\nscript:\n\n```bash\ntoggl2pl --round\n```\n\nThe output will be the same, but after confirmation rounded number of time will\nbe posted to PL instead of real.\n\n_Note: The most actual information about the rounding base value can be found in\nthe CLI help output._\n\n##### Custom date\n\nIn case you need to export Toggl information from the past days, please use the\n`--date` flag with exact date in `YYYY-MM-DD` format:\n\n```bash\ntoggl2pl --date 2016-02-29\n```\n\nThis will export Toggl time entries dated `2016-02-29` to PL with the same day\nand cause **date change request**, so please be aware.\n\n## Functional\n\n### Core functional\n\nThe core (minimal) set of features required to start from something is:\n\n* [x] ability to synchronize Toggl clients and projects with PL database.\n* [x] ability to export records from Toggl to PL with a minimal human involvement.\n\n### Features\n\nThe list of features is not yet ready, but the next helpers already implemented:\n\n- all posts use about the same format (for sure, it is impossible to predict all\n  possible cases, but at least common things can and already partially done).\n- posts time can be optionally rounded by using internally discussed rules.\n\n## Roadmap\n\nThere is a high-level implementation plan which may change with time depending\non external factors and ideas:\n\n* [x] create a minimal set of logic to implement the core functional.\n* [x] create command line interface to use already implemented logic.\n* [x] tune output format and information to make it useful and easy to understand.\n* [x] compile Python code to statically linked executable file to avoid dependency\non Python itself and its modules.\n* [x] automate build of Linux executable file to start distributing the tool in\nacceptable way.\n* [x] automate build of Windows executable file to provide an ability to use the\ntool on this platform.\n* [x] document existing code, CLI flags and configuration options with Sphinx.\n* [x] freeze existing functional and tweak code to resolve regressions and improve\nquality.\n- [x] use Flask and move logic to centralized server to communicate with it by using\nHTTP API with a minimal set of required options. But, at the same time keep ability\nto use the module in server-less mode and directly communicate with Toggl and PL API.\n- [x] use Elasticsearch with Kibana to store and visualize data passed through server\nto provide flexible reports and analytic mechanisms (for each user and for teams).\n* [ ] unit tests and coverage reports for existing minimal set of features.\n\n\n## Internals\n\n### Supported APIs\n\nThe module is designed to work with time trackers over HTTP API, so in case of\nany questions, please refer to their official documentation in the first place:\n\n* [x] [Project Laboratory API Documentation][pl_api_docs]\n* [x] [Toggl API Documentation][toggl_api_docs]\n* [ ] [Clockify API Documentation][clockify_api_docs]\n\n_Note: work on Clockify API support is planned, but not started yet._\n\n### Build application\n\n__Please, make sure you completed with steps described in the [Development](#development)\nsection before continue with application build, since development environment is\nrequired option on this stage.__\n\nIn order to make the application easy distributable and simple to install, the\nproject code needs to be compiled into the single executable file with all its\ndependencies.\n\nWhile there is a number of tools which may create such kind of distributions,\nthis project uses [PyInstaller][pyinstaller] which does exactly what is needed\nalmost out of the box:\n\n```bash\npyinstaller --onefile scripts/toggl2pl\n```\n\nThe command above will collect all package dependencies and files into the single\nexecutable file which can be distributed to end users without additional actions\non their side (system / Python packages installation).\n\n[clockify]: https://clockify.me/\n[clockify_api_docs]: https://clockify.github.io/clockify_api_docs/\n[PyInstaller]: https://www.pyinstaller.org/\n[pl]: https://pl.itcraft.co/\n[pl_api_docs]: https://pl.itcraft.co/api/docs\n[toggl]: https://toggl.com/\n[toggl_api_docs]: https://github.com/toggl/toggl_api_docs/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pa-yourserveradmin-com/toggl2pl", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "toggl2pl", "package_url": "https://pypi.org/project/toggl2pl/", "platform": "", "project_url": "https://pypi.org/project/toggl2pl/", "project_urls": {"Homepage": "https://github.com/pa-yourserveradmin-com/toggl2pl"}, "release_url": "https://pypi.org/project/toggl2pl/1.0.6/", "requires_dist": ["certifi (==2019.9.11)", "chardet (==3.0.4)", "Click (==7.0)", "elasticsearch (==7.0.4)", "Flask (==1.1.1)", "idna (==2.8)", "itsdangerous (==1.1.0)", "Jinja2 (==2.10.1)", "MarkupSafe (==1.1.1)", "Paste (==3.2.1)", "PyYAML (==5.1.2)", "requests (==2.22.0)", "six (==1.12.0)", "tabulate (==0.8.5)", "tqdm (==4.36.1)", "urllib3 (==1.25.6)", "waitress (==1.4.3)", "Werkzeug (==0.16.0)"], "requires_python": "", "summary": "Python module and tool to simplify time entries export from Toggl into Project Laboratory", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>toggl2pl</h1>\n<p>Python module and tool to simplify time entries export from <a href=\"https://toggl.com/\" rel=\"nofollow\">Toggl</a>\ninto <a href=\"https://pl.itcraft.co/\" rel=\"nofollow\">PL</a> (Project Laboratory).</p>\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#production\" rel=\"nofollow\">Production</a>\n<ul>\n<li><a href=\"#precompiled-binaries\" rel=\"nofollow\">Precompiled binaries</a></li>\n<li><a href=\"#using-pip\" rel=\"nofollow\">Using PIP</a></li>\n</ul>\n</li>\n<li><a href=\"#development\" rel=\"nofollow\">Development</a></li>\n</ul>\n</li>\n<li><a href=\"#command-line-interface\" rel=\"nofollow\">Command line interface</a>\n<ul>\n<li><a href=\"#configuration\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a>\n<ul>\n<li><a href=\"#simple\" rel=\"nofollow\">Simple</a></li>\n<li><a href=\"#rounding\" rel=\"nofollow\">Rounding</a></li>\n<li><a href=\"#custom-date\" rel=\"nofollow\">Custom date</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#functional\" rel=\"nofollow\">Functional</a>\n<ul>\n<li><a href=\"#core-functional\" rel=\"nofollow\">Core functional</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n</ul>\n</li>\n<li><a href=\"#roadmap\" rel=\"nofollow\">Roadmap</a></li>\n<li><a href=\"#internals\" rel=\"nofollow\">Internals</a>\n<ul>\n<li><a href=\"#supported-apis\" rel=\"nofollow\">Supported APIs</a></li>\n<li><a href=\"#build-application\" rel=\"nofollow\">Build application</a></li>\n</ul>\n</li>\n</ul>\n<h2>Requirements</h2>\n<p>The module is written in pure Python and its work verified with Python <code>&gt;= 3.5</code>.</p>\n<p>As far as there are no low-level system calls (at least now) the module should\nbe platform independent, i.e. work on any platform where Python is available.</p>\n<p><em>Python <code>2.7</code> (and older) support is not planned since Python <code>2.7</code> will not be\nmaintained past January 1, 2020.</em></p>\n<h2>Usage</h2>\n<h3>Installation</h3>\n<h4>Production</h4>\n<h5>Precompiled binaries</h5>\n<p>For end users the preferable way to install application is to use executable files\nstatically compiled for Linux and Windows platforms, packaged using ZIP and signed\nwith GPG key.</p>\n<p>Example installation steps to execute on Linux:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">TOGGL2PL_VERSION</span><span class=\"o\">=</span><span class=\"s2\">\"1.0.6\"</span>\n\nwget https://github.com/pa-yourserveradmin-com/toggl2pl/releases/download/v<span class=\"si\">${</span><span class=\"nv\">TOGGL2PL_VERSION</span><span class=\"si\">}</span>/toggl2pl-<span class=\"si\">${</span><span class=\"nv\">TOGGL2PL_VERSION</span><span class=\"si\">}</span>-linux-amd64.zip\nunzip toggl2pl-<span class=\"si\">${</span><span class=\"nv\">TOGGL2PL_VERSION</span><span class=\"si\">}</span>-linux-amd64.zip\ninstall -v -D toggl2pl ~/.local/bin/toggl2pl\n\nrm -fv toggl2pl-<span class=\"si\">${</span><span class=\"nv\">TOGGL2PL_VERSION</span><span class=\"si\">}</span>-linux-amd64.zip toggl2pl\n</pre>\n<p>Verify application work with your Linux distribution:</p>\n<pre>toggl2pl --help\n</pre>\n<h5>Using PIP</h5>\n<p>In case you need to install the application as a Python module (for example, you\nwant to use its API in your new awesome module or application), the simplest way\nis to use <code>pip</code>:</p>\n<pre>pip install toggl2pl\n</pre>\n<h4>Development</h4>\n<ol>\n<li>Obtain the package sources and change working directory to the root of project.\nFor example, clone the project using Git:</li>\n</ol>\n<pre>git clone https://github.com/pa-yourserveradmin-com/toggl2pl.git\n<span class=\"nb\">cd</span> toggl2pl\n</pre>\n<ol>\n<li>The Python <code>virtualenv</code> module is recommended to start using the package in\ndevelopment mode, i.e. without module installation into the system. Please, see\n<code>virtualenv</code> package installation instructions for some common used operating\nsystems below.</li>\n</ol>\n<p>Fedora 29:</p>\n<pre>sudo dnf --assumeyes install python-virtualenv python3-virtualenv\n</pre>\n<p>Ubuntu 18:</p>\n<pre>sudo apt --assume-yes install python-virtualenv python3-virtualenv\n</pre>\n<p>Once the <code>virtualenv</code> package is installed, just create a new Python virtual\nenvironment anywhere you want. The example below assumes virtual environment is\ndeployed into the root of the cloned project repository:</p>\n<pre>virtualenv venv\n<span class=\"nb\">source</span> venv/bin/activate\npip install --requirement requirements.txt\n</pre>\n<ol>\n<li>In case if no issues with Python virtual environment setup, now you should be\nable to try using the module. In order to check environment, just execute the next\nCLI commands:</li>\n</ol>\n<pre>cp -av scripts/toggl2pl toggl2pl.py\n./toggl2pl.py --help\n</pre>\n<p>In the output you will see usage instructions and some CLI arguments descriptions.</p>\n<p>In order to interact with time trackers some additional configuration is needed,\nplease proceed with <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> paragraph to start using the\nmodule in command line mode.</p>\n<h3>Command line interface</h3>\n<h4>Configuration</h4>\n<p>By default CLI uses configuration file stored as <code>~/.toggl2pl/config.yml</code>. Please\nexecute the next commands to install <a href=\"https://github.com/pa-yourserveradmin-com/toggl2pl/blob/master/docs/_static/config.yml.example\" rel=\"nofollow\">config.yml.example</a> as\nthe default configuration file:</p>\n<pre>install -v -D docs/_static/config.yml.example ~/.toggl2pl/config.yml\n</pre>\n<p>Please open the newly created configuration file with your preferable text editor,\nread comments and update empty fields with your personal information.</p>\n<h4>Examples</h4>\n<p>Please note, that currently all CLI flags can be combined into the single command\nand examples below just needed to describe flags purposes.</p>\n<h5>Simple</h5>\n<p>In order to post hours for the current day AS IS just call the script without\nany arguments:</p>\n<pre>toggl2pl\n</pre>\n<p>In the output you will see a table with list of projects, tasks and time (real\nand rounded) spent on each task. Also you will be prompted to export data to PL\nor interrupt export.</p>\n<h5>Rounding</h5>\n<p>By default, the real number of minutes will be posted to PL. Use rounding or not\ndepends on your case and team agreement, so please keep this in mind.</p>\n<p>In order to post rounded number of minutes - just append <code>--round</code> flag to the\nscript:</p>\n<pre>toggl2pl --round\n</pre>\n<p>The output will be the same, but after confirmation rounded number of time will\nbe posted to PL instead of real.</p>\n<p><em>Note: The most actual information about the rounding base value can be found in\nthe CLI help output.</em></p>\n<h5>Custom date</h5>\n<p>In case you need to export Toggl information from the past days, please use the\n<code>--date</code> flag with exact date in <code>YYYY-MM-DD</code> format:</p>\n<pre>toggl2pl --date <span class=\"m\">2016</span>-02-29\n</pre>\n<p>This will export Toggl time entries dated <code>2016-02-29</code> to PL with the same day\nand cause <strong>date change request</strong>, so please be aware.</p>\n<h2>Functional</h2>\n<h3>Core functional</h3>\n<p>The core (minimal) set of features required to start from something is:</p>\n<ul>\n<li>[x] ability to synchronize Toggl clients and projects with PL database.</li>\n<li>[x] ability to export records from Toggl to PL with a minimal human involvement.</li>\n</ul>\n<h3>Features</h3>\n<p>The list of features is not yet ready, but the next helpers already implemented:</p>\n<ul>\n<li>all posts use about the same format (for sure, it is impossible to predict all\npossible cases, but at least common things can and already partially done).</li>\n<li>posts time can be optionally rounded by using internally discussed rules.</li>\n</ul>\n<h2>Roadmap</h2>\n<p>There is a high-level implementation plan which may change with time depending\non external factors and ideas:</p>\n<ul>\n<li>[x] create a minimal set of logic to implement the core functional.</li>\n<li>[x] create command line interface to use already implemented logic.</li>\n<li>[x] tune output format and information to make it useful and easy to understand.</li>\n<li>[x] compile Python code to statically linked executable file to avoid dependency\non Python itself and its modules.</li>\n<li>[x] automate build of Linux executable file to start distributing the tool in\nacceptable way.</li>\n<li>[x] automate build of Windows executable file to provide an ability to use the\ntool on this platform.</li>\n<li>[x] document existing code, CLI flags and configuration options with Sphinx.</li>\n<li>[x] freeze existing functional and tweak code to resolve regressions and improve\nquality.</li>\n</ul>\n<ul>\n<li>[x] use Flask and move logic to centralized server to communicate with it by using\nHTTP API with a minimal set of required options. But, at the same time keep ability\nto use the module in server-less mode and directly communicate with Toggl and PL API.</li>\n<li>[x] use Elasticsearch with Kibana to store and visualize data passed through server\nto provide flexible reports and analytic mechanisms (for each user and for teams).</li>\n</ul>\n<ul>\n<li>[ ] unit tests and coverage reports for existing minimal set of features.</li>\n</ul>\n<h2>Internals</h2>\n<h3>Supported APIs</h3>\n<p>The module is designed to work with time trackers over HTTP API, so in case of\nany questions, please refer to their official documentation in the first place:</p>\n<ul>\n<li>[x] <a href=\"https://pl.itcraft.co/api/docs\" rel=\"nofollow\">Project Laboratory API Documentation</a></li>\n<li>[x] <a href=\"https://github.com/toggl/toggl_api_docs/\" rel=\"nofollow\">Toggl API Documentation</a></li>\n<li>[ ] <a href=\"https://clockify.github.io/clockify_api_docs/\" rel=\"nofollow\">Clockify API Documentation</a></li>\n</ul>\n<p><em>Note: work on Clockify API support is planned, but not started yet.</em></p>\n<h3>Build application</h3>\n<p><strong>Please, make sure you completed with steps described in the <a href=\"#development\" rel=\"nofollow\">Development</a>\nsection before continue with application build, since development environment is\nrequired option on this stage.</strong></p>\n<p>In order to make the application easy distributable and simple to install, the\nproject code needs to be compiled into the single executable file with all its\ndependencies.</p>\n<p>While there is a number of tools which may create such kind of distributions,\nthis project uses <a href=\"https://www.pyinstaller.org/\" rel=\"nofollow\">PyInstaller</a> which does exactly what is needed\nalmost out of the box:</p>\n<pre>pyinstaller --onefile scripts/toggl2pl\n</pre>\n<p>The command above will collect all package dependencies and files into the single\nexecutable file which can be distributed to end users without additional actions\non their side (system / Python packages installation).</p>\n\n          </div>"}, "last_serial": 6868173, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "54ee008477955d0ca59c7de500aec953", "sha256": "3d2c86091928d7ae14ce3b2345cea971e810c3eb25e8159dbfefbe5fdaa05a63"}, "downloads": -1, "filename": "toggl2pl-1.0.3-py3-none-any.whl", "has_sig": true, "md5_digest": "54ee008477955d0ca59c7de500aec953", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16634, "upload_time": "2019-05-07T20:20:12", "upload_time_iso_8601": "2019-05-07T20:20:12.656345Z", "url": "https://files.pythonhosted.org/packages/69/34/277535f76634b7b196f7973291424a05eb5036ed9a1fd73aed37c9d3beb4/toggl2pl-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6980400eed2ce5b8205218af515f06b3", "sha256": "133d758c40860107485dc4090c6386322bd466f180484b5660d769ad7da58ec3"}, "downloads": -1, "filename": "toggl2pl-1.0.3.tar.gz", "has_sig": true, "md5_digest": "6980400eed2ce5b8205218af515f06b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18314, "upload_time": "2019-05-07T20:20:15", "upload_time_iso_8601": "2019-05-07T20:20:15.344483Z", "url": "https://files.pythonhosted.org/packages/ab/dc/6360c45852024a3fa0933be1fe5ea8a652f049c255b3048f636dbcb7f34f/toggl2pl-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "ce3928eb69c1985b1065b6862285251e", "sha256": "21677d75a48c791af7822903a4307934ba23a4ea1098901a308958ab41e75ab3"}, "downloads": -1, "filename": "toggl2pl-1.0.4-py3-none-any.whl", "has_sig": true, "md5_digest": "ce3928eb69c1985b1065b6862285251e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16634, "upload_time": "2019-09-28T20:36:38", "upload_time_iso_8601": "2019-09-28T20:36:38.422666Z", "url": "https://files.pythonhosted.org/packages/10/42/c237a6df7179accade92954b18e0c8f2abe20bbc7ea6314fe0e7cbff6990/toggl2pl-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16e652ecc3f8109f164883297cb25501", "sha256": "7339731c08071d346701ac0a0f9697214345b6ddb12b2f87ef7ab14451b93c34"}, "downloads": -1, "filename": "toggl2pl-1.0.4.tar.gz", "has_sig": true, "md5_digest": "16e652ecc3f8109f164883297cb25501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18333, "upload_time": "2019-09-28T20:36:42", "upload_time_iso_8601": "2019-09-28T20:36:42.086794Z", "url": "https://files.pythonhosted.org/packages/42/0a/f6062f0d1a0f568b5270265abc95754a7178524af916ab8d593e776fa05f/toggl2pl-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7382975998d465b9c7bc9e0cc15fd9de", "sha256": "f36acdf29bcd1eb17e0040035672e498b0dd52d948f0d928baec3a654504adf9"}, "downloads": -1, "filename": "toggl2pl-1.0.5-py3-none-any.whl", "has_sig": true, "md5_digest": "7382975998d465b9c7bc9e0cc15fd9de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16635, "upload_time": "2019-12-21T14:43:10", "upload_time_iso_8601": "2019-12-21T14:43:10.990221Z", "url": "https://files.pythonhosted.org/packages/44/d9/de92911afcaaed9606cbd192f74348d08799f75a3a7a1447406393ba3008/toggl2pl-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a04fc39ed8572af79f1d60deedc3b472", "sha256": "0cf1ef3767773d93cfde48e024de67d9ced8e0b9ae3ac69e1284e9b21bf8d298"}, "downloads": -1, "filename": "toggl2pl-1.0.5.tar.gz", "has_sig": true, "md5_digest": "a04fc39ed8572af79f1d60deedc3b472", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18334, "upload_time": "2019-12-21T14:43:15", "upload_time_iso_8601": "2019-12-21T14:43:15.601060Z", "url": "https://files.pythonhosted.org/packages/84/eb/2e9b1ace8ea335e352f62a5ea94db91bb50a9e70e617c7c0ab8766f54bc1/toggl2pl-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "97c52bde9729394de7ab3a49a1ec4004", "sha256": "c318673f069f415ba056606e6a0111b156e674c6ae6b0845189ae52059218c42"}, "downloads": -1, "filename": "toggl2pl-1.0.6-py3-none-any.whl", "has_sig": true, "md5_digest": "97c52bde9729394de7ab3a49a1ec4004", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16566, "upload_time": "2020-03-23T20:07:41", "upload_time_iso_8601": "2020-03-23T20:07:41.239393Z", "url": "https://files.pythonhosted.org/packages/91/a5/613f9d9ed4f180f01c066f22abf88496f91841d7e062b401186406811012/toggl2pl-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f07c3ee4c7ece53c624eda0c4710337d", "sha256": "4876355d95014d007c91a80deac53b735552e6876db90b6b27239181b5746371"}, "downloads": -1, "filename": "toggl2pl-1.0.6.tar.gz", "has_sig": true, "md5_digest": "f07c3ee4c7ece53c624eda0c4710337d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18138, "upload_time": "2020-03-23T20:07:43", "upload_time_iso_8601": "2020-03-23T20:07:43.474784Z", "url": "https://files.pythonhosted.org/packages/cb/f7/90f1833db0d6afd3f39c956d839e1e3b1c4c1a2ae7f907c11cd921dd8747/toggl2pl-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97c52bde9729394de7ab3a49a1ec4004", "sha256": "c318673f069f415ba056606e6a0111b156e674c6ae6b0845189ae52059218c42"}, "downloads": -1, "filename": "toggl2pl-1.0.6-py3-none-any.whl", "has_sig": true, "md5_digest": "97c52bde9729394de7ab3a49a1ec4004", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16566, "upload_time": "2020-03-23T20:07:41", "upload_time_iso_8601": "2020-03-23T20:07:41.239393Z", "url": "https://files.pythonhosted.org/packages/91/a5/613f9d9ed4f180f01c066f22abf88496f91841d7e062b401186406811012/toggl2pl-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f07c3ee4c7ece53c624eda0c4710337d", "sha256": "4876355d95014d007c91a80deac53b735552e6876db90b6b27239181b5746371"}, "downloads": -1, "filename": "toggl2pl-1.0.6.tar.gz", "has_sig": true, "md5_digest": "f07c3ee4c7ece53c624eda0c4710337d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18138, "upload_time": "2020-03-23T20:07:43", "upload_time_iso_8601": "2020-03-23T20:07:43.474784Z", "url": "https://files.pythonhosted.org/packages/cb/f7/90f1833db0d6afd3f39c956d839e1e3b1c4c1a2ae7f907c11cd921dd8747/toggl2pl-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:51:43 2020"}