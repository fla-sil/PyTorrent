{"info": {"author": "Mingli Yuan", "author_email": "mingli.yuan@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Leibniz\n\n[![Build Status](https://api.travis-ci.com/caiyunapp/leibniz.svg?branch=master)](http://travis-ci.com/caiyunapp/leibniz) \n\nLeibniz is a python package which provide facilities to express learnable differential equations with PyTorch\n\n\nInstall\n--------\n\n```bash\npip install leibniz\n```\n\n\nHow to use\n-----------\n\nAs an example we solve a very simple advection problem, a box-shaped material transported by a constant steady wind.\n\n![moving box](https://raw.githubusercontent.com/caiyunapp/leibniz/master/advection_3d.gif)\n\n\n```python\nimport torch as th\nimport leibniz as lbnz\n\nfrom leibniz.core3d.gridsys.regular3 import RegularGrid\nfrom leibniz.diffeq import odeint as odeint\n\n\ndef binary(tensor):\n    return th.where(tensor > lbnz.zero, lbnz.one, lbnz.zero)\n\n# setup grid system\nlbnz.bind(RegularGrid(\n    basis='x,y,z',\n    W=51, L=151, H=51,\n    east=16.0, west=1.0,\n    north=6.0, south=1.0,\n    upper=6.0, lower=1.0\n))\nlbnz.use('x,y,z') # use xyz coordinate\n\n# giving a material field as a box \nfld = binary((lbnz.x - 8) * (9 - lbnz.x)) * \\\n      binary((lbnz.y - 3) * (4 - lbnz.y)) * \\\n      binary((lbnz.z - 3) * (4 - lbnz.z))\n\n# construct a constant steady wind\nwind = lbnz.one, lbnz.zero, lbnz.zero\n\n# transport value by wind\ndef derivitive(t, clouds):\n    return - lbnz.upwind(wind, clouds)\n\n# integrate the system with rk4\npred = odeint(derivitive, fld, th.arange(0, 7, 1 / 100), method='rk4')\n```\n\nContributors\n------------\n\n* Mingli Yuan ([Mountain](https://github.com/mountain))\n* Xiang Pan ([Panpanx](https://github.com/Panpanx))\n\nAcknowledge\n-----------\n\nWe included source code with minor changes from [torchdiffeq](https://github.com/rtqichen/torchdiffeq) by Ricky Chen,\nbecause of two purpose:\n1. package torchdiffeq is not indexed by pypi\n2. package torchdiffeq is very convenient and mandatory\n\nAll our contribution is based on Ricky's Neural ODE paper (NIPS 2018) and his package.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caiyunapp/leibniz", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "leibniz", "package_url": "https://pypi.org/project/leibniz/", "platform": "", "project_url": "https://pypi.org/project/leibniz/", "project_urls": {"Documentation": "https://packaging.python.org/tutorials/distributing-packages/", "Homepage": "https://github.com/caiyunapp/leibniz", "Source": "https://github.com/caiyunapp/leibniz", "Tracker": "https://github.com/caiyunapp/leibniz/issues"}, "release_url": "https://pypi.org/project/leibniz/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Leibniz is a package providing facilities to express learnable differential equations based on PyTorch", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Leibniz</h1>\n<p><a href=\"http://travis-ci.com/caiyunapp/leibniz\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97a60a69d7e29fc51f5e9113a02829ccff155e93/68747470733a2f2f6170692e7472617669732d63692e636f6d2f63616979756e6170702f6c6569626e697a2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Leibniz is a python package which provide facilities to express learnable differential equations with PyTorch</p>\n<h2>Install</h2>\n<pre>pip install leibniz\n</pre>\n<h2>How to use</h2>\n<p>As an example we solve a very simple advection problem, a box-shaped material transported by a constant steady wind.</p>\n<p><img alt=\"moving box\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b9360dafdca3d1d9d6e2c6669a797970936e47a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f63616979756e6170702f6c6569626e697a2f6d61737465722f616476656374696f6e5f33642e676966\"></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span> <span class=\"k\">as</span> <span class=\"nn\">th</span>\n<span class=\"kn\">import</span> <span class=\"nn\">leibniz</span> <span class=\"k\">as</span> <span class=\"nn\">lbnz</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">leibniz.core3d.gridsys.regular3</span> <span class=\"kn\">import</span> <span class=\"n\">RegularGrid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">leibniz.diffeq</span> <span class=\"kn\">import</span> <span class=\"n\">odeint</span> <span class=\"k\">as</span> <span class=\"n\">odeint</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">binary</span><span class=\"p\">(</span><span class=\"n\">tensor</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">th</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">tensor</span> <span class=\"o\">&gt;</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">zero</span><span class=\"p\">,</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">,</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">zero</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup grid system</span>\n<span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">RegularGrid</span><span class=\"p\">(</span>\n    <span class=\"n\">basis</span><span class=\"o\">=</span><span class=\"s1\">'x,y,z'</span><span class=\"p\">,</span>\n    <span class=\"n\">W</span><span class=\"o\">=</span><span class=\"mi\">51</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"o\">=</span><span class=\"mi\">151</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"o\">=</span><span class=\"mi\">51</span><span class=\"p\">,</span>\n    <span class=\"n\">east</span><span class=\"o\">=</span><span class=\"mf\">16.0</span><span class=\"p\">,</span> <span class=\"n\">west</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n    <span class=\"n\">north</span><span class=\"o\">=</span><span class=\"mf\">6.0</span><span class=\"p\">,</span> <span class=\"n\">south</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n    <span class=\"n\">upper</span><span class=\"o\">=</span><span class=\"mf\">6.0</span><span class=\"p\">,</span> <span class=\"n\">lower</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>\n<span class=\"p\">))</span>\n<span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"s1\">'x,y,z'</span><span class=\"p\">)</span> <span class=\"c1\"># use xyz coordinate</span>\n\n<span class=\"c1\"># giving a material field as a box </span>\n<span class=\"n\">fld</span> <span class=\"o\">=</span> <span class=\"n\">binary</span><span class=\"p\">((</span><span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">9</span> <span class=\"o\">-</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">))</span> <span class=\"o\">*</span> \\\n      <span class=\"n\">binary</span><span class=\"p\">((</span><span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"o\">-</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">))</span> <span class=\"o\">*</span> \\\n      <span class=\"n\">binary</span><span class=\"p\">((</span><span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">z</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"o\">-</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># construct a constant steady wind</span>\n<span class=\"n\">wind</span> <span class=\"o\">=</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">,</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">zero</span><span class=\"p\">,</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">zero</span>\n\n<span class=\"c1\"># transport value by wind</span>\n<span class=\"k\">def</span> <span class=\"nf\">derivitive</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">clouds</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"o\">-</span> <span class=\"n\">lbnz</span><span class=\"o\">.</span><span class=\"n\">upwind</span><span class=\"p\">(</span><span class=\"n\">wind</span><span class=\"p\">,</span> <span class=\"n\">clouds</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># integrate the system with rk4</span>\n<span class=\"n\">pred</span> <span class=\"o\">=</span> <span class=\"n\">odeint</span><span class=\"p\">(</span><span class=\"n\">derivitive</span><span class=\"p\">,</span> <span class=\"n\">fld</span><span class=\"p\">,</span> <span class=\"n\">th</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'rk4'</span><span class=\"p\">)</span>\n</pre>\n<h2>Contributors</h2>\n<ul>\n<li>Mingli Yuan (<a href=\"https://github.com/mountain\" rel=\"nofollow\">Mountain</a>)</li>\n<li>Xiang Pan (<a href=\"https://github.com/Panpanx\" rel=\"nofollow\">Panpanx</a>)</li>\n</ul>\n<h2>Acknowledge</h2>\n<p>We included source code with minor changes from <a href=\"https://github.com/rtqichen/torchdiffeq\" rel=\"nofollow\">torchdiffeq</a> by Ricky Chen,\nbecause of two purpose:</p>\n<ol>\n<li>package torchdiffeq is not indexed by pypi</li>\n<li>package torchdiffeq is very convenient and mandatory</li>\n</ol>\n<p>All our contribution is based on Ricky's Neural ODE paper (NIPS 2018) and his package.</p>\n\n          </div>"}, "last_serial": 7037959, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "42c4be10a3eba088b68566f5205a829a", "sha256": "4b9eaffd36a0436701edff5c5407915fd66507653374920392aa76a26252bba5"}, "downloads": -1, "filename": "leibniz-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42c4be10a3eba088b68566f5205a829a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 40540, "upload_time": "2019-09-27T05:52:58", "upload_time_iso_8601": "2019-09-27T05:52:58.303281Z", "url": "https://files.pythonhosted.org/packages/47/bd/5859da4d17f4bc23b335e86d590019043b971c9c52c8a8c93b3d7b87ab84/leibniz-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "822fff2db1ea0594aeab822e04574e1a", "sha256": "11d3197aa904e6dfc8089fd91d491d35bcce61b7428fa46ed43ea11a6cbfdff1"}, "downloads": -1, "filename": "leibniz-0.0.1.tar.gz", "has_sig": false, "md5_digest": "822fff2db1ea0594aeab822e04574e1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28451, "upload_time": "2019-09-27T05:53:01", "upload_time_iso_8601": "2019-09-27T05:53:01.130787Z", "url": "https://files.pythonhosted.org/packages/9a/ed/4ea96131f7fea81aa704f90523bf63ebda04998b1731e67723f79e56160f/leibniz-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "45047408dc21a1e9591d2ccf83fd9504", "sha256": "0ef1ab98e5cdc40e6e1bd3888a4a2290b8e3cb78c05da060780e8d298af84c91"}, "downloads": -1, "filename": "leibniz-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45047408dc21a1e9591d2ccf83fd9504", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 40125, "upload_time": "2019-09-27T08:32:41", "upload_time_iso_8601": "2019-09-27T08:32:41.729141Z", "url": "https://files.pythonhosted.org/packages/32/9d/d9585135caccda80a61f09a78c4b6c4558b922825abf8c8b68f86907ae7d/leibniz-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "663640cdfb8bae3a9ea19c00982dd037", "sha256": "344bcded70b103316dcd4371de4a77c18dd0b16de2681bb1cb2a212078674736"}, "downloads": -1, "filename": "leibniz-0.0.2.tar.gz", "has_sig": false, "md5_digest": "663640cdfb8bae3a9ea19c00982dd037", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28940, "upload_time": "2019-09-27T08:32:44", "upload_time_iso_8601": "2019-09-27T08:32:44.311337Z", "url": "https://files.pythonhosted.org/packages/be/df/93808f49ee19f1f3b6fc678dfb80b171b1a4fe023176ac0e7f0216480fa8/leibniz-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "37b2ed585d11dcdbee769a2f80c26b16", "sha256": "f10fa05f5e65bb5f60e68e75dcd8713eb876fe6e9c9c31a31d4720053d76b00e"}, "downloads": -1, "filename": "leibniz-0.0.3.tar.gz", "has_sig": false, "md5_digest": "37b2ed585d11dcdbee769a2f80c26b16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34143, "upload_time": "2020-04-17T06:29:41", "upload_time_iso_8601": "2020-04-17T06:29:41.150096Z", "url": "https://files.pythonhosted.org/packages/85/01/8d22937fd6bb55d09f20ba51a6c531dcd5ed8c44f7aca9025c6822ebcc77/leibniz-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "37b2ed585d11dcdbee769a2f80c26b16", "sha256": "f10fa05f5e65bb5f60e68e75dcd8713eb876fe6e9c9c31a31d4720053d76b00e"}, "downloads": -1, "filename": "leibniz-0.0.3.tar.gz", "has_sig": false, "md5_digest": "37b2ed585d11dcdbee769a2f80c26b16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34143, "upload_time": "2020-04-17T06:29:41", "upload_time_iso_8601": "2020-04-17T06:29:41.150096Z", "url": "https://files.pythonhosted.org/packages/85/01/8d22937fd6bb55d09f20ba51a6c531dcd5ed8c44f7aca9025c6822ebcc77/leibniz-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:10 2020"}