{"info": {"author": "Maximilian Pichler", "author_email": "Maximilian.Pichler@ur.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# sjSDM - Fast and Accurate Joint Species distribution Modeling \n\nAt the moment, we do not provide specifically a API for joint species distribution models. However, it's just a deep multivariate probit model with one layer (example below).\n\nWe provide a R package with an API focused on jSDM is available [here](https://github.com/TheoreticalEcology/s-jSDM).\n\n## Install instructions\n\nDependencies:\n* PyTorch >= 1.4, see [PyTorch](https://pytorch.org/get-started/locally/) for install instructions.\n\n```{python}\npip install sjSDM_py\n```\n\n## Example\n\nlinear jSDM:\n```{python}\nimport sjSDM_py as sa\nimport numpy as np\nEnv = np.random.randn(100, 5)\nOcc = np.random.binomial(1, 0.5, [100, 10])\n\nmodel = sa.Model_base(5) # input_shape == number of environmental predictors\nmodel.add_layer(sa.layers.Layer_dense(hidden=10)) # number of hidden units in the layer == number of species\nmodel.build(df=5, optimizer=sa.optimizer_adamax(lr=0.1, weight_decay = 0.01)) # df = degree of freedom \nmodel.fit(X = Env, Y = Occ)\nprint(model.weights_numpy)\nprint(model.get_cov())\n```\n\n* For species intercept, use 'bias=True' in 'Layer_dense(...)'. \n* We recommend to set 'df = number of species / 2.'\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheoreticalEcology/s-jSDM", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sjSDM-py", "package_url": "https://pypi.org/project/sjSDM-py/", "platform": "", "project_url": "https://pypi.org/project/sjSDM-py/", "project_urls": {"Homepage": "https://github.com/TheoreticalEcology/s-jSDM"}, "release_url": "https://pypi.org/project/sjSDM-py/0.0.2/", "requires_dist": ["numpy"], "requires_python": "", "summary": "jSDM package", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sjSDM - Fast and Accurate Joint Species distribution Modeling</h1>\n<p>At the moment, we do not provide specifically a API for joint species distribution models. However, it's just a deep multivariate probit model with one layer (example below).</p>\n<p>We provide a R package with an API focused on jSDM is available <a href=\"https://github.com/TheoreticalEcology/s-jSDM\" rel=\"nofollow\">here</a>.</p>\n<h2>Install instructions</h2>\n<p>Dependencies:</p>\n<ul>\n<li>PyTorch &gt;= 1.4, see <a href=\"https://pytorch.org/get-started/locally/\" rel=\"nofollow\">PyTorch</a> for install instructions.</li>\n</ul>\n<pre>pip install sjSDM_py\n</pre>\n<h2>Example</h2>\n<p>linear jSDM:</p>\n<pre>import sjSDM_py as sa\nimport numpy as np\nEnv = np.random.randn(100, 5)\nOcc = np.random.binomial(1, 0.5, [100, 10])\n\nmodel = sa.Model_base(5) # input_shape == number of environmental predictors\nmodel.add_layer(sa.layers.Layer_dense(hidden=10)) # number of hidden units in the layer == number of species\nmodel.build(df=5, optimizer=sa.optimizer_adamax(lr=0.1, weight_decay = 0.01)) # df = degree of freedom \nmodel.fit(X = Env, Y = Occ)\nprint(model.weights_numpy)\nprint(model.get_cov())\n</pre>\n<ul>\n<li>For species intercept, use 'bias=True' in 'Layer_dense(...)'.</li>\n<li>We recommend to set 'df = number of species / 2.'</li>\n</ul>\n\n          </div>"}, "last_serial": 6676162, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "cc2c01683322e18dbc77566125fb1de6", "sha256": "ebce79a30dae135ad2f3482db0bb2fca92ec81531698e999cfb691da75a75cdd"}, "downloads": -1, "filename": "sjSDM_py-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cc2c01683322e18dbc77566125fb1de6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22547, "upload_time": "2020-02-17T17:17:26", "upload_time_iso_8601": "2020-02-17T17:17:26.606293Z", "url": "https://files.pythonhosted.org/packages/b8/51/08540024ce6de5c0ed236085cf489edcdb4143b7e70de82da6b15b34d866/sjSDM_py-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0fe247e757dc2de93825681fea24097", "sha256": "503d6bc3316cccf9b9efb718f32fa8aa693aba7a44b3aa500583f33f09347620"}, "downloads": -1, "filename": "sjSDM_py-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b0fe247e757dc2de93825681fea24097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8470, "upload_time": "2020-02-17T17:17:28", "upload_time_iso_8601": "2020-02-17T17:17:28.744594Z", "url": "https://files.pythonhosted.org/packages/7b/40/27be811af5238b29feb603e65bc6bf96577e03191e85c2aebcc00b8d1f68/sjSDM_py-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6679d67eeebfb35632d23ac62c585762", "sha256": "6020246df91601cef995e33f544fe788005bdb2a7c14e41b4e49b7140b3078d9"}, "downloads": -1, "filename": "sjSDM_py-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6679d67eeebfb35632d23ac62c585762", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22708, "upload_time": "2020-02-21T15:49:53", "upload_time_iso_8601": "2020-02-21T15:49:53.961204Z", "url": "https://files.pythonhosted.org/packages/ba/c5/29c1c81e1af7083407178825cdd94861c5bbb49fe737fc6e71a3f25d02fe/sjSDM_py-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1ba87183b2fe2f3e71d36b1822b921c", "sha256": "7d2aaad40db16b161cce38a6d39ee554e0589ee7d06f0813ca5f7dc721b4087b"}, "downloads": -1, "filename": "sjSDM_py-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b1ba87183b2fe2f3e71d36b1822b921c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8302, "upload_time": "2020-02-21T15:49:55", "upload_time_iso_8601": "2020-02-21T15:49:55.490342Z", "url": "https://files.pythonhosted.org/packages/b6/b3/bfac7247c412e67a1edf5dcead2d90f61d217725c405dcc33bee885cdcb7/sjSDM_py-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6679d67eeebfb35632d23ac62c585762", "sha256": "6020246df91601cef995e33f544fe788005bdb2a7c14e41b4e49b7140b3078d9"}, "downloads": -1, "filename": "sjSDM_py-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6679d67eeebfb35632d23ac62c585762", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22708, "upload_time": "2020-02-21T15:49:53", "upload_time_iso_8601": "2020-02-21T15:49:53.961204Z", "url": "https://files.pythonhosted.org/packages/ba/c5/29c1c81e1af7083407178825cdd94861c5bbb49fe737fc6e71a3f25d02fe/sjSDM_py-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1ba87183b2fe2f3e71d36b1822b921c", "sha256": "7d2aaad40db16b161cce38a6d39ee554e0589ee7d06f0813ca5f7dc721b4087b"}, "downloads": -1, "filename": "sjSDM_py-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b1ba87183b2fe2f3e71d36b1822b921c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8302, "upload_time": "2020-02-21T15:49:55", "upload_time_iso_8601": "2020-02-21T15:49:55.490342Z", "url": "https://files.pythonhosted.org/packages/b6/b3/bfac7247c412e67a1edf5dcead2d90f61d217725c405dcc33bee885cdcb7/sjSDM_py-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:13 2020"}