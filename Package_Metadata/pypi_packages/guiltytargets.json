{"info": {"author": "\u00d6zlem Muslu", "author_email": "ozlemmuslu@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "GuiltyTargets\n=============\nThis is a tool for therapeutic target prioritization using network representation learning.\n\nInstallation\n------------\nDownload this repository, go to the directory it resides and run:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/phanein/deepwalk.git\n    $ cd deepwalk\n    $ pip install .\n    $ cd ..\n    $ # Install GAT2VEC, which depends on DeepWalk\n    $ git clone https://github.com/ozlemmuslu/GAT2VEC.git gat2vec\n    $ cd gat2vec\n    $ pip install .\n    $ cd ..\n    $ # Actually install GuiltyTargets\n    $ git clone https://github.com/guiltytargets/guiltytargets.git\n    $ cd guiltytargets\n    $ pip install -e .\n\nUsage\n-----\nAfter that, you can use it as a library in Python\n\n.. code-block:: python\n\n   import guiltytargets\n\n   guiltytargets.run(\n       input_directory,\n       targets_path,\n       ppi_graph_path,\n       dge_path,\n       auc_output_path,\n       probs_output_path,\n       max_adj_p=max_padj,\n       max_log2_fold_change=lfc_cutoff * -1,\n       min_log2_fold_change=lfc_cutoff,\n       entrez_id_header=entrez_id_name,\n       log2_fold_change_header=log_fold_change_name,\n       adj_p_header=adjusted_p_value_name,\n       base_mean_header=base_mean_name,\n       entrez_delimiter=split_char,\n       ppi_edge_min_confidence=confidence_cutoff,\n    )\n\nThis will create files in paths ``auc_output_path`` and ``probs_output_path``, where\nthe former shows the AUC values of cross validation and the latter shows the predicted\ntargets.\n\nThe parameters are explained below. A use case can be found under https://github.com/GuiltyTargets/reproduction\n\nINPUT FILES\n-----------\nThere are 3 files which are necessary to run this program. All input files should be found\nunder input_directory\n\n1. ``ppi_graph_path``: A path to a file containing a protein-protein interaction network in the format of:\n\n    +------------------+------------------+------------+\n    | source_entrez_id | target_entrez_id | confidence |\n    +==================+==================+============+\n    | 216              | 216              | 0.76       |\n    +------------------+------------------+------------+\n    | 3679             | 1134             | 0.73       |\n    +------------------+------------------+------------+\n    | 55607            | 71               | 0.65       |\n    +------------------+------------------+------------+\n    | 5552             | 960              | 0.63       |\n    +------------------+------------------+------------+\n    | 2886             | 2064             | 0.90       |\n    +------------------+------------------+------------+\n    | 5058             | 2064             | 0.73       |\n    +------------------+------------------+------------+\n    | 1742             | 2064             | 0.87       |\n    +------------------+------------------+------------+\n\n    An example of such a network can be found [here](http://cbdm-01.zdv.uni-mainz.de/~mschaefer/hippie/download.php)\n\n\n2. ``dge_path``: A path to a file containing an experiment, in tsv format. Rows show individual entries,\n   columns are the values of the following properties:\n\n   - **Base mean**\n   - **Log fold change**\n   - **Adjusted p value**\n   - **Entrez id**\n\n  The file may contain other columns too, but the indices and names of the above columns must be\n  entered to the configuration file.\n\n3. ``targets_path``: A path to a file containing a list of Entrez ids of known targets, in the format of\n\n    ... code-block:: sh\n\n        1742\n        3996\n        150\n        152\n        151\n\nOPTIONS\n-------\nThe options that should be set are:\n\n- max_adj_p: Maximum value for adjusted p-value for a gene to be considered differentially expressed.\n- max_log2_fold_change: Maximum value for log2 fold change for a gene to be considered differentially expressed\n- min_log2_fold_change: Minimum value for log2 fold change for a gene to be considered differentially expressed\n- ppi_edge_min_confidence: Minimum confidence score for the edges in PPI network.\n- entrez_id_header: The column name for the Entrez id in the differential expression file.\n- log2_fold_change_header: The column name for the log2 fold change in the differential expression file.\n- adj_p_header: The column name for the adjusted p-value in the differential expression file.\n- base_mean_header: The column name for the base mean in the differential expression file.\n- entrez_delimiter: If there is more than one Entrez id per row in the diff. expr. file, the separator betweem them.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/guiltytargets/guiltytargets/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/guiltytargets/guiltytargets", "keywords": "Target Prioritization,Network Representation Learning,Knowledge Graph Embeddings,Systems Biology,Networks Biology", "license": "MIT", "maintainer": "Charles Tapley Hoyt", "maintainer_email": "cthoyt@gmail.com", "name": "guiltytargets", "package_url": "https://pypi.org/project/guiltytargets/", "platform": "", "project_url": "https://pypi.org/project/guiltytargets/", "project_urls": {"Bug Tracker": "https://github.com/guiltytargets/guiltytargets/issues", "Documentation": "https://guiltytargets.readthedocs.io", "Download": "https://github.com/guiltytargets/guiltytargets/releases", "Homepage": "https://github.com/guiltytargets/guiltytargets", "Source Code": "https://github.com/guiltytargets/guiltytargets"}, "release_url": "https://pypi.org/project/guiltytargets/0.0.2/", "requires_dist": ["numpy", "pandas", "scipy", "scikit-learn", "python-igraph", "click", "tqdm", "easy-config", "mygene", "opentargets", "dataclasses-json", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinx-click ; extra == 'docs'", "sphinx-autodoc-typehints ; extra == 'docs'"], "requires_python": ">=3.6", "summary": "A tool for ranking potential targets for a given disease", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a tool for therapeutic target prioritization using network representation learning.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Download this repository, go to the directory it resides and run:</p>\n<pre>$ git clone https://github.com/phanein/deepwalk.git\n$ <span class=\"nb\">cd</span> deepwalk\n$ pip install .\n$ <span class=\"nb\">cd</span> ..\n$ <span class=\"c1\"># Install GAT2VEC, which depends on DeepWalk\n</span>$ git clone https://github.com/ozlemmuslu/GAT2VEC.git gat2vec\n$ <span class=\"nb\">cd</span> gat2vec\n$ pip install .\n$ <span class=\"nb\">cd</span> ..\n$ <span class=\"c1\"># Actually install GuiltyTargets\n</span>$ git clone https://github.com/guiltytargets/guiltytargets.git\n$ <span class=\"nb\">cd</span> guiltytargets\n$ pip install -e .\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After that, you can use it as a library in Python</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">guiltytargets</span>\n\n<span class=\"n\">guiltytargets</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n    <span class=\"n\">input_directory</span><span class=\"p\">,</span>\n    <span class=\"n\">targets_path</span><span class=\"p\">,</span>\n    <span class=\"n\">ppi_graph_path</span><span class=\"p\">,</span>\n    <span class=\"n\">dge_path</span><span class=\"p\">,</span>\n    <span class=\"n\">auc_output_path</span><span class=\"p\">,</span>\n    <span class=\"n\">probs_output_path</span><span class=\"p\">,</span>\n    <span class=\"n\">max_adj_p</span><span class=\"o\">=</span><span class=\"n\">max_padj</span><span class=\"p\">,</span>\n    <span class=\"n\">max_log2_fold_change</span><span class=\"o\">=</span><span class=\"n\">lfc_cutoff</span> <span class=\"o\">*</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">min_log2_fold_change</span><span class=\"o\">=</span><span class=\"n\">lfc_cutoff</span><span class=\"p\">,</span>\n    <span class=\"n\">entrez_id_header</span><span class=\"o\">=</span><span class=\"n\">entrez_id_name</span><span class=\"p\">,</span>\n    <span class=\"n\">log2_fold_change_header</span><span class=\"o\">=</span><span class=\"n\">log_fold_change_name</span><span class=\"p\">,</span>\n    <span class=\"n\">adj_p_header</span><span class=\"o\">=</span><span class=\"n\">adjusted_p_value_name</span><span class=\"p\">,</span>\n    <span class=\"n\">base_mean_header</span><span class=\"o\">=</span><span class=\"n\">base_mean_name</span><span class=\"p\">,</span>\n    <span class=\"n\">entrez_delimiter</span><span class=\"o\">=</span><span class=\"n\">split_char</span><span class=\"p\">,</span>\n    <span class=\"n\">ppi_edge_min_confidence</span><span class=\"o\">=</span><span class=\"n\">confidence_cutoff</span><span class=\"p\">,</span>\n <span class=\"p\">)</span>\n</pre>\n<p>This will create files in paths <tt>auc_output_path</tt> and <tt>probs_output_path</tt>, where\nthe former shows the AUC values of cross validation and the latter shows the predicted\ntargets.</p>\n<p>The parameters are explained below. A use case can be found under <a href=\"https://github.com/GuiltyTargets/reproduction\" rel=\"nofollow\">https://github.com/GuiltyTargets/reproduction</a></p>\n</div>\n<div id=\"input-files\">\n<h2>INPUT FILES</h2>\n<p>There are 3 files which are necessary to run this program. All input files should be found\nunder input_directory</p>\n<ol>\n<li><p><tt>ppi_graph_path</tt>: A path to a file containing a protein-protein interaction network in the format of:</p>\n<blockquote>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>source_entrez_id</th>\n<th>target_entrez_id</th>\n<th>confidence</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>216</td>\n<td>216</td>\n<td>0.76</td>\n</tr>\n<tr><td>3679</td>\n<td>1134</td>\n<td>0.73</td>\n</tr>\n<tr><td>55607</td>\n<td>71</td>\n<td>0.65</td>\n</tr>\n<tr><td>5552</td>\n<td>960</td>\n<td>0.63</td>\n</tr>\n<tr><td>2886</td>\n<td>2064</td>\n<td>0.90</td>\n</tr>\n<tr><td>5058</td>\n<td>2064</td>\n<td>0.73</td>\n</tr>\n<tr><td>1742</td>\n<td>2064</td>\n<td>0.87</td>\n</tr>\n</tbody>\n</table>\n<p>An example of such a network can be found [here](<a href=\"http://cbdm-01.zdv.uni-mainz.de/~mschaefer/hippie/download.php\" rel=\"nofollow\">http://cbdm-01.zdv.uni-mainz.de/~mschaefer/hippie/download.php</a>)</p>\n</blockquote>\n</li>\n<li><p><tt>dge_path</tt>: A path to a file containing an experiment, in tsv format. Rows show individual entries,\ncolumns are the values of the following properties:</p>\n<ul>\n<li><strong>Base mean</strong></li>\n<li><strong>Log fold change</strong></li>\n<li><strong>Adjusted p value</strong></li>\n<li><strong>Entrez id</strong></li>\n</ul>\n</li>\n</ol>\n<blockquote>\nThe file may contain other columns too, but the indices and names of the above columns must be\nentered to the configuration file.</blockquote>\n<ol>\n<li><p><tt>targets_path</tt>: A path to a file containing a list of Entrez ids of known targets, in the format of</p>\n<blockquote>\n<p>\u2026 code-block:: sh</p>\n<blockquote>\n<p>1742\n3996\n150\n152\n151</p>\n</blockquote>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"options\">\n<h2>OPTIONS</h2>\n<p>The options that should be set are:</p>\n<ul>\n<li>max_adj_p: Maximum value for adjusted p-value for a gene to be considered differentially expressed.</li>\n<li>max_log2_fold_change: Maximum value for log2 fold change for a gene to be considered differentially expressed</li>\n<li>min_log2_fold_change: Minimum value for log2 fold change for a gene to be considered differentially expressed</li>\n<li>ppi_edge_min_confidence: Minimum confidence score for the edges in PPI network.</li>\n<li>entrez_id_header: The column name for the Entrez id in the differential expression file.</li>\n<li>log2_fold_change_header: The column name for the log2 fold change in the differential expression file.</li>\n<li>adj_p_header: The column name for the adjusted p-value in the differential expression file.</li>\n<li>base_mean_header: The column name for the base mean in the differential expression file.</li>\n<li>entrez_delimiter: If there is more than one Entrez id per row in the diff. expr. file, the separator betweem them.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7179342, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "0022b04bb83a73297e3e7d8a6a41d485", "sha256": "4bd769a48588161ffe7dbf5075bded980046c47574bb9e5accd0a757e2cf2485"}, "downloads": -1, "filename": "guiltytargets-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0022b04bb83a73297e3e7d8a6a41d485", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21321, "upload_time": "2020-05-06T10:53:34", "upload_time_iso_8601": "2020-05-06T10:53:34.773463Z", "url": "https://files.pythonhosted.org/packages/d7/8b/4aab20b154d8acbe3f5e3568b7dde5db3b19edd9e27c6cda180b4a88c69a/guiltytargets-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1714b34b54ccdd3df34aa04a4412cb06", "sha256": "aeec8e5d7a800ce0d97dbc930fb62b5f9dddf061dede3bb53a25e4e53aea7374"}, "downloads": -1, "filename": "guiltytargets-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1714b34b54ccdd3df34aa04a4412cb06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20533, "upload_time": "2020-05-06T10:53:37", "upload_time_iso_8601": "2020-05-06T10:53:37.481989Z", "url": "https://files.pythonhosted.org/packages/63/df/a33cb829c425c5d10cb8970b5ddfde070233ba1efdc0939de9b89238f783/guiltytargets-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0022b04bb83a73297e3e7d8a6a41d485", "sha256": "4bd769a48588161ffe7dbf5075bded980046c47574bb9e5accd0a757e2cf2485"}, "downloads": -1, "filename": "guiltytargets-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0022b04bb83a73297e3e7d8a6a41d485", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21321, "upload_time": "2020-05-06T10:53:34", "upload_time_iso_8601": "2020-05-06T10:53:34.773463Z", "url": "https://files.pythonhosted.org/packages/d7/8b/4aab20b154d8acbe3f5e3568b7dde5db3b19edd9e27c6cda180b4a88c69a/guiltytargets-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1714b34b54ccdd3df34aa04a4412cb06", "sha256": "aeec8e5d7a800ce0d97dbc930fb62b5f9dddf061dede3bb53a25e4e53aea7374"}, "downloads": -1, "filename": "guiltytargets-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1714b34b54ccdd3df34aa04a4412cb06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20533, "upload_time": "2020-05-06T10:53:37", "upload_time_iso_8601": "2020-05-06T10:53:37.481989Z", "url": "https://files.pythonhosted.org/packages/63/df/a33cb829c425c5d10cb8970b5ddfde070233ba1efdc0939de9b89238f783/guiltytargets-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:15 2020"}