{"info": {"author": "Kevan Carstensen", "author_email": "kevan@isnotajoke.com", "bugtrack_url": null, "classifiers": [], "description": "Django Session Space Analysis Tool\n==================================\n\nThis is a Django management command (as in\nhttps://docs.djangoproject.com/en/dev/howto/custom-management-commands/)\nthat cleans up expired sessions from the database.\n\nWhy?\n----\n\nDjango ships with a built-in command to handle session cleanup, but it\nis problematic when dealing with large session tables. Due to its\ndesign, it can block writes to the session table for minutes at a time,\npotentially disrupting sites that rely on sessions. This command is\ndesigned to perform the same maintenance tasks as the built-in command\nwithout disrupting a site by locking the table for a really long time.\n\nInstallation\n------------\n\nInstall the distribution from PyPI, e.g. ``pip install\ndjango-batch-session-cleanup``.\n\nThen, add ``batch_sesion_cleanup`` to INSTALLED_APPS in your Django project.\n\nThat's it. You can now run django-admin.py and confirm that the command\nshows up.\n\nExample Uses\n------------\n\nDelete expired sessions in batches of no more than 50000, and sleep for\n2 seconds in between batches:::\n\n    django-admin.py batch-session-cleanup --batch-size=50000 --sleep-time=2\n\nKnown Issues and Bugs\n---------------------\n\n- The tool has only been tested thoroughly on a MyISAM MySQL table. I'm not aware of any reason that it wouldn't work on other SQL session backends, but you should be careful if you're using it in those environments.\n\nAuthor\n------\n\nKevan Carstensen <kevan@isnotajoke.com>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isnotajoke/django-batch-session-cleanup", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-batch-session-cleanup", "package_url": "https://pypi.org/project/django-batch-session-cleanup/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-batch-session-cleanup/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/isnotajoke/django-batch-session-cleanup"}, "release_url": "https://pypi.org/project/django-batch-session-cleanup/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Tool to clean up expired sessions gracefully", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Django management command (as in\n<a href=\"https://docs.djangoproject.com/en/dev/howto/custom-management-commands/\" rel=\"nofollow\">https://docs.djangoproject.com/en/dev/howto/custom-management-commands/</a>)\nthat cleans up expired sessions from the database.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Django ships with a built-in command to handle session cleanup, but it\nis problematic when dealing with large session tables. Due to its\ndesign, it can block writes to the session table for minutes at a time,\npotentially disrupting sites that rely on sessions. This command is\ndesigned to perform the same maintenance tasks as the built-in command\nwithout disrupting a site by locking the table for a really long time.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install the distribution from PyPI, e.g. <tt>pip install\n<span class=\"pre\">django-batch-session-cleanup</span></tt>.</p>\n<p>Then, add <tt>batch_sesion_cleanup</tt> to INSTALLED_APPS in your Django project.</p>\n<p>That\u2019s it. You can now run django-admin.py and confirm that the command\nshows up.</p>\n</div>\n<div id=\"example-uses\">\n<h2>Example Uses</h2>\n<p>Delete expired sessions in batches of no more than 50000, and sleep for\n2 seconds in between batches::</p>\n<pre>django-admin.py batch-session-cleanup --batch-size=50000 --sleep-time=2\n</pre>\n</div>\n<div id=\"known-issues-and-bugs\">\n<h2>Known Issues and Bugs</h2>\n<ul>\n<li>The tool has only been tested thoroughly on a MyISAM MySQL table. I\u2019m not aware of any reason that it wouldn\u2019t work on other SQL session backends, but you should be careful if you\u2019re using it in those environments.</li>\n</ul>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Kevan Carstensen &lt;<a href=\"mailto:kevan%40isnotajoke.com\">kevan<span>@</span>isnotajoke<span>.</span>com</a>&gt;</p>\n</div>\n\n          </div>"}, "last_serial": 856358, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a5d81d3fdb05ecde1750e695a479aac2", "sha256": "fef5cb10b396a2dc4c96ee3ea8c5cca1e2136b42567e414ac3d2761471943e5b"}, "downloads": -1, "filename": "django-batch-session-cleanup-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a5d81d3fdb05ecde1750e695a479aac2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3394, "upload_time": "2013-08-22T19:33:24", "upload_time_iso_8601": "2013-08-22T19:33:24.310829Z", "url": "https://files.pythonhosted.org/packages/df/3b/efebcc25a817a6fd15688660544b8017374d0a84d7f96431c1cc02d9280a/django-batch-session-cleanup-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "038d95ccfad2fc53280de2d381c5f1f8", "sha256": "f566fc06803d5f3cd11ee2a59fbca7df39737bb40ad01ac0320f7a5e14140847"}, "downloads": -1, "filename": "django-batch-session-cleanup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "038d95ccfad2fc53280de2d381c5f1f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3526, "upload_time": "2013-09-04T05:57:39", "upload_time_iso_8601": "2013-09-04T05:57:39.308429Z", "url": "https://files.pythonhosted.org/packages/fb/31/5e70068d769673457cd50c5465b77cdb5801559896447a5e1a323f162b38/django-batch-session-cleanup-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "038d95ccfad2fc53280de2d381c5f1f8", "sha256": "f566fc06803d5f3cd11ee2a59fbca7df39737bb40ad01ac0320f7a5e14140847"}, "downloads": -1, "filename": "django-batch-session-cleanup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "038d95ccfad2fc53280de2d381c5f1f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3526, "upload_time": "2013-09-04T05:57:39", "upload_time_iso_8601": "2013-09-04T05:57:39.308429Z", "url": "https://files.pythonhosted.org/packages/fb/31/5e70068d769673457cd50c5465b77cdb5801559896447a5e1a323f162b38/django-batch-session-cleanup-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:27 2020"}