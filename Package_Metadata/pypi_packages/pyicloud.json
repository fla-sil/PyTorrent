{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "********\npyiCloud\n********\n\n.. image:: https://travis-ci.org/picklepete/pyicloud.svg?branch=master\n    :alt: Check out our test status at https://travis-ci.org/picklepete/pyicloud\n    :target: https://travis-ci.org/picklepete/pyicloud\n\n.. image:: https://img.shields.io/pypi/v/pyicloud.svg\n    :alt: Library version\n    :target: https://pypi.org/project/pyicloud\n\n.. image:: https://img.shields.io/pypi/pyversions/pyicloud.svg\n    :alt: Supported versions\n    :target: https://pypi.org/project/pyicloud\n\n.. image:: https://pepy.tech/badge/pyicloud\n    :alt: Downloads\n    :target: https://pypi.org/project/pyicloud\n\n.. image:: https://requires.io/github/Quentame/pyicloud/requirements.svg?branch=master\n    :alt: Requirements Status\n    :target: https://requires.io/github/Quentame/pyicloud/requirements/?branch=master\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :alt: Formated with Black\n    :target: https://github.com/psf/black\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n    :alt: Join the chat at https://gitter.im/picklepete/pyicloud\n    :target: https://gitter.im/picklepete/pyicloud?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nPyiCloud is a module which allows pythonistas to interact with iCloud webservices. It's powered by the fantastic `requests <https://github.com/kennethreitz/requests>`_ HTTP library.\n\nAt its core, PyiCloud connects to iCloud using your username and password, then performs calendar and iPhone queries against their API.\n\n\nAuthentication\n==============\n\nAuthentication without using a saved password is as simple as passing your username and password to the ``PyiCloudService`` class:\n\n>>> from pyicloud import PyiCloudService\n>>> api = PyiCloudService('jappleseed@apple.com', 'password')\n\nIn the event that the username/password combination is invalid, a ``PyiCloudFailedLoginException`` exception is thrown.\n\nYou can also store your password in the system keyring using the command-line tool:\n\n>>> icloud --username=jappleseed@apple.com\nICloud Password for jappleseed@apple.com:\nSave password in keyring? (y/N)\n\nIf you have stored a password in the keyring, you will not be required to provide a password when interacting with the command-line tool or instantiating the ``PyiCloudService`` class for the username you stored the password for.\n\n>>> api = PyiCloudService('jappleseed@apple.com')\n\nIf you would like to delete a password stored in your system keyring, you can clear a stored password using the ``--delete-from-keyring`` command-line option:\n\n>>> icloud --username=jappleseed@apple.com --delete-from-keyring\n\n**Note**: Authentication will expire after an interval set by Apple, at which point you will have to re-authenticate. This interval is currently two months.\n\nTwo-step and two-factor authentication (2SA/2FA)\n************************************************\n\nIf you have enabled `two-step authentication (2SA) <https://support.apple.com/en-us/HT204152>`_ for the account you will have to do some extra work:\n\n.. code-block:: python\n\n    if api.requires_2sa:\n        import click\n        print \"Two-step authentication required. Your trusted devices are:\"\n\n        devices = api.trusted_devices\n        for i, device in enumerate(devices):\n            print \"  %s: %s\" % (i, device.get('deviceName',\n                \"SMS to %s\" % device.get('phoneNumber')))\n\n        device = click.prompt('Which device would you like to use?', default=0)\n        device = devices[device]\n        if not api.send_verification_code(device):\n            print \"Failed to send verification code\"\n            sys.exit(1)\n\n        code = click.prompt('Please enter validation code')\n        if not api.validate_verification_code(device, code):\n            print \"Failed to verify verification code\"\n            sys.exit(1)\n\nThis approach also works if the account is set up for `two-factor authentication (2FA) <https://support.apple.com/en-us/HT204915>`_, but the authentication will time out after a few hours. Full support for two-factor authentication (2FA) is not implemented in PyiCloud yet. See issue `#102 <https://github.com/picklepete/pyicloud/issues/102>`_.\n\n\nDevices\n=======\n\nYou can list which devices associated with your account by using the ``devices`` property:\n\n>>> api.devices\n{\nu'i9vbKRGIcLYqJnXMd1b257kUWnoyEBcEh6yM+IfmiMLh7BmOpALS+w==': <AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)>,\nu'reGYDh9XwqNWTGIhNBuEwP1ds0F/Lg5t/fxNbI4V939hhXawByErk+HYVNSUzmWV': <AppleDevice(MacBook Air 11\": Johnny Appleseed's MacBook Air)>\n}\n\nand you can access individual devices by either their index, or their ID:\n\n>>> api.devices[0]\n<AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)>\n>>> api.devices['i9vbKRGIcLYqJnXMd1b257kUWnoyEBcEh6yM+IfmiMLh7BmOpALS+w==']\n<AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)>\n\nor, as a shorthand if you have only one associated apple device, you can simply use the ``iphone`` property to access the first device associated with your account:\n\n>>> api.iphone\n<AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)>\n\nNote: the first device associated with your account may not necessarily be your iPhone.\n\nFind My iPhone\n==============\n\nOnce you have successfully authenticated, you can start querying your data!\n\nLocation\n********\n\nReturns the device's last known location. The Find My iPhone app must have been installed and initialized.\n\n>>> api.iphone.location()\n{u'timeStamp': 1357753796553, u'locationFinished': True, u'longitude': -0.14189, u'positionType': u'GPS', u'locationType': None, u'latitude': 51.501364, u'isOld': False, u'horizontalAccuracy': 5.0}\n\nStatus\n******\n\nThe Find My iPhone response is quite bloated, so for simplicity's sake this method will return a subset of the properties.\n\n>>> api.iphone.status()\n{'deviceDisplayName': u'iPhone 5', 'deviceStatus': u'200', 'batteryLevel': 0.6166913, 'name': u\"Peter's iPhone\"}\n\nIf you wish to request further properties, you may do so by passing in a list of property names.\n\nPlay Sound\n**********\n\nSends a request to the device to play a sound, if you wish pass a custom message you can do so by changing the subject arg.\n\n>>> api.iphone.play_sound()\n\nA few moments later, the device will play a ringtone, display the default notification (\"Find My iPhone Alert\") and a confirmation email will be sent to you.\n\nLost Mode\n*********\n\nLost mode is slightly different to the \"Play Sound\" functionality in that it allows the person who picks up the phone to call a specific phone number *without having to enter the passcode*. Just like \"Play Sound\" you may pass a custom message which the device will display, if it's not overridden the custom message of \"This iPhone has been lost. Please call me.\" is used.\n\n>>> phone_number = '555-373-383'\n>>> message = 'Thief! Return my phone immediately.'\n>>> api.iphone.lost_device(phone_number, message)\n\n\nCalendar\n========\n\nThe calendar webservice currently only supports fetching events.\n\nEvents\n******\n\nReturns this month's events:\n\n>>> api.calendar.events()\n\nOr, between a specific date range:\n\n>>> from_dt = datetime(2012, 1, 1)\n>>> to_dt = datetime(2012, 1, 31)\n>>> api.calendar.events(from_dt, to_dt)\n\nAlternatively, you may fetch a single event's details, like so:\n\n>>> api.calendar.get_event_detail('CALENDAR', 'EVENT_ID')\n\n\nContacts\n========\n\nYou can access your iCloud contacts/address book through the ``contacts`` property:\n\n>>> for c in api.contacts.all():\n>>> print c.get('firstName'), c.get('phones')\nJohn [{u'field': u'+1 555-55-5555-5', u'label': u'MOBILE'}]\n\nNote: These contacts do not include contacts federated from e.g. Facebook, only the ones stored in iCloud.\n\n\nFile Storage (Ubiquity)\n=======================\n\nYou can access documents stored in your iCloud account by using the ``files`` property's ``dir`` method:\n\n>>> api.files.dir()\n[u'.do-not-delete',\n u'.localized',\n u'com~apple~Notes',\n u'com~apple~Preview',\n u'com~apple~mail',\n u'com~apple~shoebox',\n u'com~apple~system~spotlight'\n]\n\nYou can access children and their children's children using the filename as an index:\n\n>>> api.files['com~apple~Notes']\n<Folder: u'com~apple~Notes'>\n>>> api.files['com~apple~Notes'].type\nu'folder'\n>>> api.files['com~apple~Notes'].dir()\n[u'Documents']\n>>> api.files['com~apple~Notes']['Documents'].dir()\n[u'Some Document']\n>>> api.files['com~apple~Notes']['Documents']['Some Document'].name\nu'Some Document'\n>>> api.files['com~apple~Notes']['Documents']['Some Document'].modified\ndatetime.datetime(2012, 9, 13, 2, 26, 17)\n>>> api.files['com~apple~Notes']['Documents']['Some Document'].size\n1308134\n>>> api.files['com~apple~Notes']['Documents']['Some Document'].type\nu'file'\n\nAnd when you have a file that you'd like to download, the ``open`` method will return a response object from which you can read the ``content``.\n\n>>> api.files['com~apple~Notes']['Documents']['Some Document'].open().content\n'Hello, these are the file contents'\n\nNote: the object returned from the above ``open`` method is a `response object <http://www.python-requests.org/en/latest/api/#classes>`_ and the ``open`` method can accept any parameters you might normally use in a request using `requests <https://github.com/kennethreitz/requests>`_.\n\nFor example, if you know that the file you're opening has JSON content:\n\n>>> api.files['com~apple~Notes']['Documents']['information.json'].open().json()\n{'How much we love you': 'lots'}\n>>> api.files['com~apple~Notes']['Documents']['information.json'].open().json()['How much we love you']\n'lots'\n\nOr, if you're downloading a particularly large file, you may want to use the ``stream`` keyword argument, and read directly from the raw response object:\n\n>>> download = api.files['com~apple~Notes']['Documents']['big_file.zip'].open(stream=True)\n>>> with open('downloaded_file.zip', 'wb') as opened_file:\n        opened_file.write(download.raw.read())\n\n\nPhoto Library\n=======================\n\nYou can access the iCloud Photo Library through the ``photos`` property.\n\n>>> api.photos.all\n<PhotoAlbum: 'All Photos'>\n\nIndividual albums are available through the ``albums`` property:\n\n>>> api.photos.albums['Screenshots']\n<PhotoAlbum: 'Screenshots'>\n\nWhich you can iterate to access the photo assets.  The 'All Photos' album is sorted by `added_date` so the most recently added photos are returned first.  All other albums are sorted by `asset_date` (which represents the exif date) :\n\n>>> for photo in api.photos.albums['Screenshots']:\n        print photo, photo.filename\n<PhotoAsset: id=AVbLPCGkp798nTb9KZozCXtO7jds> IMG_6045.JPG\n\nTo download a photo use the `download` method, which will return a `response object <http://www.python-requests.org/en/latest/api/#classes>`_, initialized with ``stream`` set to ``True``, so you can read from the raw response object:\n\n>>> photo = next(iter(api.photos.albums['Screenshots']), None)\n>>> download = photo.download()\n>>> with open(photo.filename, 'wb') as opened_file:\n        opened_file.write(download.raw.read())\n\nNote: Consider using ``shutil.copyfile`` or another buffered strategy for downloading the file so that the whole file isn't read into memory before writing.\n\nInformation about each version can be accessed through the ``versions`` property:\n\n>>> photo.versions.keys()\n[u'medium', u'original', u'thumb']\n\nTo download a specific version of the photo asset, pass the version to ``download()``:\n\n>>> download = photo.download('thumb')\n>>> with open(photo.versions['thumb']['filename'], 'wb') as thumb_file:\n        thumb_file.write(download.raw.read())\n\n\nCode samples\n============\n\nIf you wanna see some code samples see the `code samples file </CODE_SAMPLES.md>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/picklepete/pyicloud/tarball/0.9.7", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/picklepete/pyicloud", "keywords": "icloud,find-my-iphone", "license": "MIT", "maintainer": "The PyiCloud Authors", "maintainer_email": "", "name": "pyicloud", "package_url": "https://pypi.org/project/pyicloud/", "platform": "", "project_url": "https://pypi.org/project/pyicloud/", "project_urls": {"Download": "https://github.com/picklepete/pyicloud/tarball/0.9.7", "Homepage": "https://github.com/picklepete/pyicloud"}, "release_url": "https://pypi.org/project/pyicloud/0.9.7/", "requires_dist": ["requests (>=2.20.0)", "keyring (<=9.3.1,>=8.0)", "keyrings.alt (<=3.2.0,>=1.0)", "click (<=7.1.1,>=6.0)", "six (>=1.14.0)", "tzlocal (==2.0.0)", "pytz (>=2019.3)", "certifi (>=2019.11.28)", "future (>=0.18.2)"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*", "summary": "PyiCloud is a module which allows pythonistas to interact with iCloud webservices.", "version": "0.9.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/picklepete/pyicloud\" rel=\"nofollow\"><img alt=\"Check out our test status at https://travis-ci.org/picklepete/pyicloud\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d013d8497e7810925f7b40a128de9b74db820ae1/68747470733a2f2f7472617669732d63692e6f72672f7069636b6c65706574652f707969636c6f75642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/pyicloud\" rel=\"nofollow\"><img alt=\"Library version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/094ff5e85c675f10d639a217616052e0423d3c18/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707969636c6f75642e737667\"></a>\n<a href=\"https://pypi.org/project/pyicloud\" rel=\"nofollow\"><img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6cf1d3814d30e1d5422f9c2fb327fc02a88a662/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707969636c6f75642e737667\"></a>\n<a href=\"https://pypi.org/project/pyicloud\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db4f1d8386fb6c8dfb821c84a0db484b368abe52/68747470733a2f2f706570792e746563682f62616467652f707969636c6f7564\"></a>\n<a href=\"https://requires.io/github/Quentame/pyicloud/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d230e6ac1501e5897059688f372e97175110bb4d/68747470733a2f2f72657175697265732e696f2f6769746875622f5175656e74616d652f707969636c6f75642f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Formated with Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://gitter.im/picklepete/pyicloud?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/picklepete/pyicloud\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a>\n<p>PyiCloud is a module which allows pythonistas to interact with iCloud webservices. It\u2019s powered by the fantastic <a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">requests</a> HTTP library.</p>\n<p>At its core, PyiCloud connects to iCloud using your username and password, then performs calendar and iPhone queries against their API.</p>\n<div id=\"authentication\">\n<h2>Authentication</h2>\n<p>Authentication without using a saved password is as simple as passing your username and password to the <tt>PyiCloudService</tt> class:</p>\n<pre>&gt;&gt;&gt; from pyicloud import PyiCloudService\n&gt;&gt;&gt; api = PyiCloudService('jappleseed@apple.com', 'password')\n</pre>\n<p>In the event that the username/password combination is invalid, a <tt>PyiCloudFailedLoginException</tt> exception is thrown.</p>\n<p>You can also store your password in the system keyring using the command-line tool:</p>\n<pre>&gt;&gt;&gt; icloud --username=jappleseed@apple.com\nICloud Password for jappleseed@apple.com:\nSave password in keyring? (y/N)\n</pre>\n<p>If you have stored a password in the keyring, you will not be required to provide a password when interacting with the command-line tool or instantiating the <tt>PyiCloudService</tt> class for the username you stored the password for.</p>\n<pre>&gt;&gt;&gt; api = PyiCloudService('jappleseed@apple.com')\n</pre>\n<p>If you would like to delete a password stored in your system keyring, you can clear a stored password using the <tt><span class=\"pre\">--delete-from-keyring</span></tt> command-line option:</p>\n<pre>&gt;&gt;&gt; icloud --username=jappleseed@apple.com --delete-from-keyring\n</pre>\n<p><strong>Note</strong>: Authentication will expire after an interval set by Apple, at which point you will have to re-authenticate. This interval is currently two months.</p>\n<div id=\"two-step-and-two-factor-authentication-2sa-2fa\">\n<h3>Two-step and two-factor authentication (2SA/2FA)</h3>\n<p>If you have enabled <a href=\"https://support.apple.com/en-us/HT204152\" rel=\"nofollow\">two-step authentication (2SA)</a> for the account you will have to do some extra work:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">requires_2sa</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">click</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Two-step authentication required. Your trusted devices are:\"</span>\n\n    <span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">trusted_devices</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">devices</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"  </span><span class=\"si\">%s</span><span class=\"s2\">: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'deviceName'</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"SMS to </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'phoneNumber'</span><span class=\"p\">)))</span>\n\n    <span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">click</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"p\">(</span><span class=\"s1\">'Which device would you like to use?'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"p\">[</span><span class=\"n\">device</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">send_verification_code</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"Failed to send verification code\"</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"n\">click</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"p\">(</span><span class=\"s1\">'Please enter validation code'</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">validate_verification_code</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"Failed to verify verification code\"</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>This approach also works if the account is set up for <a href=\"https://support.apple.com/en-us/HT204915\" rel=\"nofollow\">two-factor authentication (2FA)</a>, but the authentication will time out after a few hours. Full support for two-factor authentication (2FA) is not implemented in PyiCloud yet. See issue <a href=\"https://github.com/picklepete/pyicloud/issues/102\" rel=\"nofollow\">#102</a>.</p>\n</div>\n</div>\n<div id=\"devices\">\n<h2>Devices</h2>\n<p>You can list which devices associated with your account by using the <tt>devices</tt> property:</p>\n<pre>&gt;&gt;&gt; api.devices\n{\nu'i9vbKRGIcLYqJnXMd1b257kUWnoyEBcEh6yM+IfmiMLh7BmOpALS+w==': &lt;AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)&gt;,\nu'reGYDh9XwqNWTGIhNBuEwP1ds0F/Lg5t/fxNbI4V939hhXawByErk+HYVNSUzmWV': &lt;AppleDevice(MacBook Air 11\": Johnny Appleseed's MacBook Air)&gt;\n}\n</pre>\n<p>and you can access individual devices by either their index, or their ID:</p>\n<pre>&gt;&gt;&gt; api.devices[0]\n&lt;AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)&gt;\n&gt;&gt;&gt; api.devices['i9vbKRGIcLYqJnXMd1b257kUWnoyEBcEh6yM+IfmiMLh7BmOpALS+w==']\n&lt;AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)&gt;\n</pre>\n<p>or, as a shorthand if you have only one associated apple device, you can simply use the <tt>iphone</tt> property to access the first device associated with your account:</p>\n<pre>&gt;&gt;&gt; api.iphone\n&lt;AppleDevice(iPhone 4S: Johnny Appleseed's iPhone)&gt;\n</pre>\n<p>Note: the first device associated with your account may not necessarily be your iPhone.</p>\n</div>\n<div id=\"find-my-iphone\">\n<h2>Find My iPhone</h2>\n<p>Once you have successfully authenticated, you can start querying your data!</p>\n<div id=\"location\">\n<h3>Location</h3>\n<p>Returns the device\u2019s last known location. The Find My iPhone app must have been installed and initialized.</p>\n<pre>&gt;&gt;&gt; api.iphone.location()\n{u'timeStamp': 1357753796553, u'locationFinished': True, u'longitude': -0.14189, u'positionType': u'GPS', u'locationType': None, u'latitude': 51.501364, u'isOld': False, u'horizontalAccuracy': 5.0}\n</pre>\n</div>\n<div id=\"status\">\n<h3>Status</h3>\n<p>The Find My iPhone response is quite bloated, so for simplicity\u2019s sake this method will return a subset of the properties.</p>\n<pre>&gt;&gt;&gt; api.iphone.status()\n{'deviceDisplayName': u'iPhone 5', 'deviceStatus': u'200', 'batteryLevel': 0.6166913, 'name': u\"Peter's iPhone\"}\n</pre>\n<p>If you wish to request further properties, you may do so by passing in a list of property names.</p>\n</div>\n<div id=\"play-sound\">\n<h3>Play Sound</h3>\n<p>Sends a request to the device to play a sound, if you wish pass a custom message you can do so by changing the subject arg.</p>\n<pre>&gt;&gt;&gt; api.iphone.play_sound()\n</pre>\n<p>A few moments later, the device will play a ringtone, display the default notification (\u201cFind My iPhone Alert\u201d) and a confirmation email will be sent to you.</p>\n</div>\n<div id=\"lost-mode\">\n<h3>Lost Mode</h3>\n<p>Lost mode is slightly different to the \u201cPlay Sound\u201d functionality in that it allows the person who picks up the phone to call a specific phone number <em>without having to enter the passcode</em>. Just like \u201cPlay Sound\u201d you may pass a custom message which the device will display, if it\u2019s not overridden the custom message of \u201cThis iPhone has been lost. Please call me.\u201d is used.</p>\n<pre>&gt;&gt;&gt; phone_number = '555-373-383'\n&gt;&gt;&gt; message = 'Thief! Return my phone immediately.'\n&gt;&gt;&gt; api.iphone.lost_device(phone_number, message)\n</pre>\n</div>\n</div>\n<div id=\"calendar\">\n<h2>Calendar</h2>\n<p>The calendar webservice currently only supports fetching events.</p>\n<div id=\"events\">\n<h3>Events</h3>\n<p>Returns this month\u2019s events:</p>\n<pre>&gt;&gt;&gt; api.calendar.events()\n</pre>\n<p>Or, between a specific date range:</p>\n<pre>&gt;&gt;&gt; from_dt = datetime(2012, 1, 1)\n&gt;&gt;&gt; to_dt = datetime(2012, 1, 31)\n&gt;&gt;&gt; api.calendar.events(from_dt, to_dt)\n</pre>\n<p>Alternatively, you may fetch a single event\u2019s details, like so:</p>\n<pre>&gt;&gt;&gt; api.calendar.get_event_detail('CALENDAR', 'EVENT_ID')\n</pre>\n</div>\n</div>\n<div id=\"contacts\">\n<h2>Contacts</h2>\n<p>You can access your iCloud contacts/address book through the <tt>contacts</tt> property:</p>\n<pre>&gt;&gt;&gt; for c in api.contacts.all():\n&gt;&gt;&gt; print c.get('firstName'), c.get('phones')\nJohn [{u'field': u'+1 555-55-5555-5', u'label': u'MOBILE'}]\n</pre>\n<p>Note: These contacts do not include contacts federated from e.g. Facebook, only the ones stored in iCloud.</p>\n</div>\n<div id=\"file-storage-ubiquity\">\n<h2>File Storage (Ubiquity)</h2>\n<p>You can access documents stored in your iCloud account by using the <tt>files</tt> property\u2019s <tt>dir</tt> method:</p>\n<pre>&gt;&gt;&gt; api.files.dir()\n[u'.do-not-delete',\n u'.localized',\n u'com~apple~Notes',\n u'com~apple~Preview',\n u'com~apple~mail',\n u'com~apple~shoebox',\n u'com~apple~system~spotlight'\n]\n</pre>\n<p>You can access children and their children\u2019s children using the filename as an index:</p>\n<pre>&gt;&gt;&gt; api.files['com~apple~Notes']\n&lt;Folder: u'com~apple~Notes'&gt;\n&gt;&gt;&gt; api.files['com~apple~Notes'].type\nu'folder'\n&gt;&gt;&gt; api.files['com~apple~Notes'].dir()\n[u'Documents']\n&gt;&gt;&gt; api.files['com~apple~Notes']['Documents'].dir()\n[u'Some Document']\n&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['Some Document'].name\nu'Some Document'\n&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['Some Document'].modified\ndatetime.datetime(2012, 9, 13, 2, 26, 17)\n&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['Some Document'].size\n1308134\n&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['Some Document'].type\nu'file'\n</pre>\n<p>And when you have a file that you\u2019d like to download, the <tt>open</tt> method will return a response object from which you can read the <tt>content</tt>.</p>\n<pre>&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['Some Document'].open().content\n'Hello, these are the file contents'\n</pre>\n<p>Note: the object returned from the above <tt>open</tt> method is a <a href=\"http://www.python-requests.org/en/latest/api/#classes\" rel=\"nofollow\">response object</a> and the <tt>open</tt> method can accept any parameters you might normally use in a request using <a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">requests</a>.</p>\n<p>For example, if you know that the file you\u2019re opening has JSON content:</p>\n<pre>&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['information.json'].open().json()\n{'How much we love you': 'lots'}\n&gt;&gt;&gt; api.files['com~apple~Notes']['Documents']['information.json'].open().json()['How much we love you']\n'lots'\n</pre>\n<p>Or, if you\u2019re downloading a particularly large file, you may want to use the <tt>stream</tt> keyword argument, and read directly from the raw response object:</p>\n<pre>&gt;&gt;&gt; download = api.files['com~apple~Notes']['Documents']['big_file.zip'].open(stream=True)\n&gt;&gt;&gt; with open('downloaded_file.zip', 'wb') as opened_file:\n        opened_file.write(download.raw.read())\n</pre>\n</div>\n<div id=\"photo-library\">\n<h2>Photo Library</h2>\n<p>You can access the iCloud Photo Library through the <tt>photos</tt> property.</p>\n<pre>&gt;&gt;&gt; api.photos.all\n&lt;PhotoAlbum: 'All Photos'&gt;\n</pre>\n<p>Individual albums are available through the <tt>albums</tt> property:</p>\n<pre>&gt;&gt;&gt; api.photos.albums['Screenshots']\n&lt;PhotoAlbum: 'Screenshots'&gt;\n</pre>\n<p>Which you can iterate to access the photo assets.  The \u2018All Photos\u2019 album is sorted by <cite>added_date</cite> so the most recently added photos are returned first.  All other albums are sorted by <cite>asset_date</cite> (which represents the exif date) :</p>\n<pre>&gt;&gt;&gt; for photo in api.photos.albums['Screenshots']:\n        print photo, photo.filename\n&lt;PhotoAsset: id=AVbLPCGkp798nTb9KZozCXtO7jds&gt; IMG_6045.JPG\n</pre>\n<p>To download a photo use the <cite>download</cite> method, which will return a <a href=\"http://www.python-requests.org/en/latest/api/#classes\" rel=\"nofollow\">response object</a>, initialized with <tt>stream</tt> set to <tt>True</tt>, so you can read from the raw response object:</p>\n<pre>&gt;&gt;&gt; photo = next(iter(api.photos.albums['Screenshots']), None)\n&gt;&gt;&gt; download = photo.download()\n&gt;&gt;&gt; with open(photo.filename, 'wb') as opened_file:\n        opened_file.write(download.raw.read())\n</pre>\n<p>Note: Consider using <tt>shutil.copyfile</tt> or another buffered strategy for downloading the file so that the whole file isn\u2019t read into memory before writing.</p>\n<p>Information about each version can be accessed through the <tt>versions</tt> property:</p>\n<pre>&gt;&gt;&gt; photo.versions.keys()\n[u'medium', u'original', u'thumb']\n</pre>\n<p>To download a specific version of the photo asset, pass the version to <tt>download()</tt>:</p>\n<pre>&gt;&gt;&gt; download = photo.download('thumb')\n&gt;&gt;&gt; with open(photo.versions['thumb']['filename'], 'wb') as thumb_file:\n        thumb_file.write(download.raw.read())\n</pre>\n</div>\n<div id=\"code-samples\">\n<h2>Code samples</h2>\n<p>If you wanna see some code samples see the <a href=\"/CODE_SAMPLES.md\" rel=\"nofollow\">code samples file</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7159971, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "296031a2f875f9f9f01df3046ccb33d8", "sha256": "eda3ea04a72c512dee272cd1576bb16fdc91be4b584cf69af92d60c1ba5a0f37"}, "downloads": -1, "filename": "pyicloud-0.2.tar.gz", "has_sig": false, "md5_digest": "296031a2f875f9f9f01df3046ccb33d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4834, "upload_time": "2013-05-24T15:01:46", "upload_time_iso_8601": "2013-05-24T15:01:46.209595Z", "url": "https://files.pythonhosted.org/packages/96/0c/da415acfd4f653a7dbc5b23f15da766b4537a74552352f245525f0871b7e/pyicloud-0.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c69562edcc114fb55f3024fa90b7eb86", "sha256": "46671ba2d29a6720b0448a0efd7f4d62e098678c52638cf7d08b4103813b7bfd"}, "downloads": -1, "filename": "pyicloud-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c69562edcc114fb55f3024fa90b7eb86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7353, "upload_time": "2013-10-28T10:48:03", "upload_time_iso_8601": "2013-10-28T10:48:03.916713Z", "url": "https://files.pythonhosted.org/packages/c1/a8/3193b515497a5d212bce5a291c2394717194d7bc6ba90f2c4e234f96f2ec/pyicloud-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e7b6134bbffd4a3c6bbab7831da9b2f8", "sha256": "7ab6083f9117746752b3e4e67aadefdc407937407a5c5b7689ffc58826783042"}, "downloads": -1, "filename": "pyicloud-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e7b6134bbffd4a3c6bbab7831da9b2f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9685, "upload_time": "2014-04-17T22:13:51", "upload_time_iso_8601": "2014-04-17T22:13:51.084566Z", "url": "https://files.pythonhosted.org/packages/19/5c/3a8d83a64d082960e1c2cd74ae8cf7569d327198d401d1cd4f99f5ef78ca/pyicloud-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "1eec84193b31cae37c4a6c600b4db250", "sha256": "b63733f493f33f1e8cd55a166242742ea6e51a8798a477da1b4b45c83e63c5c0"}, "downloads": -1, "filename": "pyicloud-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1eec84193b31cae37c4a6c600b4db250", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9998, "upload_time": "2014-08-24T23:58:44", "upload_time_iso_8601": "2014-08-24T23:58:44.838914Z", "url": "https://files.pythonhosted.org/packages/53/98/05ef91295561d4ce458715e2c3330462ea0c4dfb18bcc42985f738342878/pyicloud-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "2eef88ad16e8263b85707723b0087272", "sha256": "68c53a95b1852f50b644c2529200daee8811b07de40bd1f4f27fa9b610af30fa"}, "downloads": -1, "filename": "pyicloud-0.5.1.tar.gz", "has_sig": false, "md5_digest": "2eef88ad16e8263b85707723b0087272", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10011, "upload_time": "2014-08-26T06:13:37", "upload_time_iso_8601": "2014-08-26T06:13:37.349783Z", "url": "https://files.pythonhosted.org/packages/e9/00/3bd036f574bd06fa1fcc6d0336fc88f47d23224a4b129775df2879c1268b/pyicloud-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "ace1d7ff867ac6df49cd5ad9764a4311", "sha256": "cb549b44df2aee3b4951fa4011d26a3109173ccb7ea092b78d7d3f20dd2812cf"}, "downloads": -1, "filename": "pyicloud-0.5.2.tar.gz", "has_sig": false, "md5_digest": "ace1d7ff867ac6df49cd5ad9764a4311", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10012, "upload_time": "2014-08-27T06:53:06", "upload_time_iso_8601": "2014-08-27T06:53:06.480534Z", "url": "https://files.pythonhosted.org/packages/26/dc/4952d52995e05b90735459914dcddd342eee516400340b3deb79b81e3d14/pyicloud-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "bb3e0cde9c4da5ebfb8201ffef54c082", "sha256": "912f8f7c8e293f27133776c66aa954034239248666434066b090071421c67664"}, "downloads": -1, "filename": "pyicloud-0.6.0.tar.gz", "has_sig": false, "md5_digest": "bb3e0cde9c4da5ebfb8201ffef54c082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10539, "upload_time": "2014-10-26T03:37:39", "upload_time_iso_8601": "2014-10-26T03:37:39.770479Z", "url": "https://files.pythonhosted.org/packages/db/6d/227583ac600ffd5582af65ac266d9dd575e573a65530b66177f103a5a324/pyicloud-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "f11664016e05f7765b42d1e897bb139a", "sha256": "33866f1476b65db9983491f48c0a5bee914e859b99295ed1270dff01d4e5b372"}, "downloads": -1, "filename": "pyicloud-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f11664016e05f7765b42d1e897bb139a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10604, "upload_time": "2015-01-10T19:23:15", "upload_time_iso_8601": "2015-01-10T19:23:15.367615Z", "url": "https://files.pythonhosted.org/packages/02/b1/527cfe7acbe28ef4b3bf485d3131b3098850f097704496709670999691f6/pyicloud-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "c6b6aff9865631cced3eeac72ccf364a", "sha256": "0231b2d5a3c4a36c55b1953499b6d4dd89206e34c2ee2f5ebf6829a247856fb7"}, "downloads": -1, "filename": "pyicloud-0.6.2.tar.gz", "has_sig": false, "md5_digest": "c6b6aff9865631cced3eeac72ccf364a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10680, "upload_time": "2015-03-26T04:18:27", "upload_time_iso_8601": "2015-03-26T04:18:27.623763Z", "url": "https://files.pythonhosted.org/packages/aa/98/dacaad7389f9d15e4b3f12cb5b911ab9aee72be8cd8c620c527799c95eea/pyicloud-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "2a297ae159a02a9b6c66f3cc8c35759a", "sha256": "664810efab4f964a0494616ab73c92935c0767f3e9472945a648360480a0b645"}, "downloads": -1, "filename": "pyicloud-0.7.0.tar.gz", "has_sig": false, "md5_digest": "2a297ae159a02a9b6c66f3cc8c35759a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11306, "upload_time": "2015-05-18T06:17:13", "upload_time_iso_8601": "2015-05-18T06:17:13.990887Z", "url": "https://files.pythonhosted.org/packages/b2/8e/80ee8bd3cf896451130b40b1c43f857132d64c8a2cd064afea4d7517e7a4/pyicloud-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "00d08138652abc562e952850c2c8f0f2", "sha256": "94a2f5dce7f33bd856477ebb1a9f91a47a9138d242ff79095becbacd438b2d39"}, "downloads": -1, "filename": "pyicloud-0.7.1.tar.gz", "has_sig": false, "md5_digest": "00d08138652abc562e952850c2c8f0f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11402, "upload_time": "2015-12-14T04:22:17", "upload_time_iso_8601": "2015-12-14T04:22:17.753098Z", "url": "https://files.pythonhosted.org/packages/e4/28/3ff6b6235843356ac276065472167a5033d103aca8dde4b312649e84d0a3/pyicloud-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "3f1fda97484ed5f51647efa506cbf3df", "sha256": "d01520dd34ad52351b8734b88661f951753a7b4c17084bebfd0a3a58c6abf1ef"}, "downloads": -1, "filename": "pyicloud-0.7.2.tar.gz", "has_sig": false, "md5_digest": "3f1fda97484ed5f51647efa506cbf3df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11406, "upload_time": "2015-12-14T04:26:14", "upload_time_iso_8601": "2015-12-14T04:26:14.609141Z", "url": "https://files.pythonhosted.org/packages/f1/4e/b961812feb2c46d28268f66b47ee1f7d67a4c1f5f9f5f2993316fdf10799/pyicloud-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "d9d1df7cd644deb85678d756ee25544b", "sha256": "e1311dc9158cc6a57532b72590e1137a89e82ae6d41a7708ea49ca8f3b2a48de"}, "downloads": -1, "filename": "pyicloud-0.7.3.tar.gz", "has_sig": false, "md5_digest": "d9d1df7cd644deb85678d756ee25544b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11152, "upload_time": "2016-01-11T06:22:57", "upload_time_iso_8601": "2016-01-11T06:22:57.728150Z", "url": "https://files.pythonhosted.org/packages/d1/07/a2ba470152183bf9a76684461d7cd6024148461e962fda49fdc64df12293/pyicloud-0.7.3.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "8328640432ee426646048854ac7aecab", "sha256": "48fcf7e317cc0e850ad5edb7c54e68fc1ee3953990c9cc0579345336c3e8b4ad"}, "downloads": -1, "filename": "pyicloud-0.8.1.tar.gz", "has_sig": false, "md5_digest": "8328640432ee426646048854ac7aecab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16564, "upload_time": "2016-03-15T14:20:09", "upload_time_iso_8601": "2016-03-15T14:20:09.705748Z", "url": "https://files.pythonhosted.org/packages/34/d3/dd53d697101df2867d908e6f6a9570c030321e1e8f0ef6e331351bd68480/pyicloud-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "0f443c659353c3536951c35e19341ddb", "sha256": "26e15689c9be12a053ed7f1e59fab7e4c019b2017e5d8c63ab548372971eb55b"}, "downloads": -1, "filename": "pyicloud-0.8.2.tar.gz", "has_sig": false, "md5_digest": "0f443c659353c3536951c35e19341ddb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16887, "upload_time": "2016-04-02T11:34:25", "upload_time_iso_8601": "2016-04-02T11:34:25.380472Z", "url": "https://files.pythonhosted.org/packages/a3/30/02be16a78a328051144f5e5459ca6658ac75c46f435973900a7fab481626/pyicloud-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "06e4bb8d24984a0ac29b0a5db4740498", "sha256": "63c22520ff239833d635704357750a8ee6c74488164201e188d09a927b33ab3d"}, "downloads": -1, "filename": "pyicloud-0.8.3.tar.gz", "has_sig": false, "md5_digest": "06e4bb8d24984a0ac29b0a5db4740498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16921, "upload_time": "2016-04-11T14:44:44", "upload_time_iso_8601": "2016-04-11T14:44:44.736688Z", "url": "https://files.pythonhosted.org/packages/06/4a/610e81ce5a566cecdc21017f2b4a54c93cd8cd6fd1ac04df249e0da7e5b2/pyicloud-0.8.3.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "9c1aa91e76bbdc6fcf27924522b4243e", "sha256": "40bc0ea53a3b3d91ae7fa80ba3ecd56ec557e7c9022400815d5fc9def24a9f2b"}, "downloads": -1, "filename": "pyicloud-0.9.tar.gz", "has_sig": false, "md5_digest": "9c1aa91e76bbdc6fcf27924522b4243e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17463, "upload_time": "2016-06-21T03:42:13", "upload_time_iso_8601": "2016-06-21T03:42:13.794638Z", "url": "https://files.pythonhosted.org/packages/23/4b/1b3a843415ef33d4c648c58786c6d2617e954868de1f2a148edde91eefa8/pyicloud-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "e64b2d7e56770fc527de8a59172ba358", "sha256": "580b52e95f67a41ed86c56a514aa2b362f53fbaf23f16c69fb24e0d19fd373ee"}, "downloads": -1, "filename": "pyicloud-0.9.1.tar.gz", "has_sig": false, "md5_digest": "e64b2d7e56770fc527de8a59172ba358", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17486, "upload_time": "2016-06-30T17:09:04", "upload_time_iso_8601": "2016-06-30T17:09:04.925191Z", "url": "https://files.pythonhosted.org/packages/c0/a8/30e78cce525a3bc7045735dccefdc257fe583748330b44a4bcfde38af342/pyicloud-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "daaa9fdd72ea4d16b237ee402c91dced", "sha256": "ae6393b35e1c5f4a8327ab0670a02e1d760aa48ae639b0fc2dcd2f06d09762a2"}, "downloads": -1, "filename": "pyicloud-0.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "daaa9fdd72ea4d16b237ee402c91dced", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21411, "upload_time": "2020-01-22T13:41:57", "upload_time_iso_8601": "2020-01-22T13:41:57.373458Z", "url": "https://files.pythonhosted.org/packages/94/f6/cf2b90b9d4e3c5fe3b4c389dd0c737b237b299f8669e17b7289972cec43e/pyicloud-0.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70be183675418b142b341da7c741ef5a", "sha256": "ad2ae1a39410f3202eb6bd14826daf3e6f30d04828b76aabbf4657be8ffb53ca"}, "downloads": -1, "filename": "pyicloud-0.9.2.tar.gz", "has_sig": false, "md5_digest": "70be183675418b142b341da7c741ef5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19342, "upload_time": "2020-01-22T13:41:58", "upload_time_iso_8601": "2020-01-22T13:41:58.838699Z", "url": "https://files.pythonhosted.org/packages/6c/48/f947ca8154cd464f98dddbdd404dd6b894d9d43c08b4e88d11b58a53763f/pyicloud-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "db12b92200068b953ea24c372b02f134", "sha256": "0f20b49bfb0f80eb5ed8d044a70ac9b9b2550df710b2759885c3fef57a591d59"}, "downloads": -1, "filename": "pyicloud-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "db12b92200068b953ea24c372b02f134", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21453, "upload_time": "2020-03-08T14:41:04", "upload_time_iso_8601": "2020-03-08T14:41:04.343516Z", "url": "https://files.pythonhosted.org/packages/35/9b/4714bca7428131258f4e7751d0f212f300dc644ffd5ec696e41436e01eda/pyicloud-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fea9c51f9f3d6009d76b0086ea353fe", "sha256": "00373c8e4476b0b57a51be2fb298cca6db402c23c111ad683eb87cfc78d64a11"}, "downloads": -1, "filename": "pyicloud-0.9.3.tar.gz", "has_sig": false, "md5_digest": "9fea9c51f9f3d6009d76b0086ea353fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19495, "upload_time": "2020-03-08T14:41:06", "upload_time_iso_8601": "2020-03-08T14:41:06.148240Z", "url": "https://files.pythonhosted.org/packages/bc/b3/43b1dead240690fe97be546d30e821e1dd42f68248f549d2717044c14841/pyicloud-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "26f16a84937cfad656ef95e9d41ce9c4", "sha256": "e4d5fb1ca237765e8001eef7b0ac9f6cd6aa9091951dff1d4a3aab8a2297fd0d"}, "downloads": -1, "filename": "pyicloud-0.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "26f16a84937cfad656ef95e9d41ce9c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21592, "upload_time": "2020-03-09T23:22:04", "upload_time_iso_8601": "2020-03-09T23:22:04.933166Z", "url": "https://files.pythonhosted.org/packages/86/a5/3e5b58cc41fdafa953b6a4f494944cc924e52b263ecbbcc98cfbae4a60e1/pyicloud-0.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f177288b848ef8087bd617792ad967ae", "sha256": "519fc26f84e468e472835b68a3428f040450a93370a7d2dee1ab3c812d0f2764"}, "downloads": -1, "filename": "pyicloud-0.9.4.tar.gz", "has_sig": false, "md5_digest": "f177288b848ef8087bd617792ad967ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19602, "upload_time": "2020-03-09T23:22:06", "upload_time_iso_8601": "2020-03-09T23:22:06.389213Z", "url": "https://files.pythonhosted.org/packages/33/62/ffe34556c09eb76b29768ce8ce72a72e27c191c69ae0e668541fa7d4626c/pyicloud-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "c645ae7b411633954f98543e10bf22dc", "sha256": "0867fbfdff753e95c802181e58ccb02f0a5e03941f8ea51bf3f7435b15750d53"}, "downloads": -1, "filename": "pyicloud-0.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c645ae7b411633954f98543e10bf22dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21592, "upload_time": "2020-03-17T15:30:37", "upload_time_iso_8601": "2020-03-17T15:30:37.121177Z", "url": "https://files.pythonhosted.org/packages/ff/4c/de38356741caa66bb85fbf41aa72946f455883f621bbf67d10ac585cc226/pyicloud-0.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb4686ceb82848ccf717e4cca570c7d0", "sha256": "908c0a8abe35ba0d323028d0fc074b754566ab32f13a69dc6552ddca306d1ab1"}, "downloads": -1, "filename": "pyicloud-0.9.5.tar.gz", "has_sig": false, "md5_digest": "cb4686ceb82848ccf717e4cca570c7d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19605, "upload_time": "2020-03-17T15:30:40", "upload_time_iso_8601": "2020-03-17T15:30:40.360710Z", "url": "https://files.pythonhosted.org/packages/49/51/307f9f2e6341696beb043e36a666ace8674cab97a23e891ddac620c3c3f4/pyicloud-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "68b8909801d345f2a097ee40a3d67236", "sha256": "9333cd378a5de4b8782982d03ea3d588734048b62b55685062ab81f06c0bcbce"}, "downloads": -1, "filename": "pyicloud-0.9.6-py3-none-any.whl", "has_sig": false, "md5_digest": "68b8909801d345f2a097ee40a3d67236", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10373, "upload_time": "2020-03-22T18:11:56", "upload_time_iso_8601": "2020-03-22T18:11:56.774952Z", "url": "https://files.pythonhosted.org/packages/d1/6b/ec4c1261547fbeef724c8ed15ff6e27d74ab1463e213fec0eb41f5794dd8/pyicloud-0.9.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2fa4d33c74a1d9b9a0147ae63680c95", "sha256": "0d370717ba582d14a3e18e2a44035cd5643f4dd603d2d5ac36bb9c0cc5e6dd31"}, "downloads": -1, "filename": "pyicloud-0.9.6.tar.gz", "has_sig": false, "md5_digest": "a2fa4d33c74a1d9b9a0147ae63680c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12071, "upload_time": "2020-03-22T18:11:58", "upload_time_iso_8601": "2020-03-22T18:11:58.634548Z", "url": "https://files.pythonhosted.org/packages/44/29/236232ebe2c8135761e32b3ec04d7e46c84abf74716d1c02f982334dc10d/pyicloud-0.9.6.tar.gz", "yanked": false}], "0.9.6.1": [{"comment_text": "", "digests": {"md5": "bfd1522c99129ebd638b9f9a6358cd00", "sha256": "269fa3aca5bb1d42019fe9665b06c588ccf8d0b2526597050de2281cb60f59bf"}, "downloads": -1, "filename": "pyicloud-0.9.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bfd1522c99129ebd638b9f9a6358cd00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21501, "upload_time": "2020-03-22T18:49:44", "upload_time_iso_8601": "2020-03-22T18:49:44.334781Z", "url": "https://files.pythonhosted.org/packages/bf/f7/b09a84ebff1025847df210937a6462fff627ac5fe786a317deca0676d233/pyicloud-0.9.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a5286ca0849f7ea792713162d0e59fe", "sha256": "4d0d0934642f7ccd21b03e62edf93d6c815395ea01377cddf30b1de65722c524"}, "downloads": -1, "filename": "pyicloud-0.9.6.1.tar.gz", "has_sig": false, "md5_digest": "3a5286ca0849f7ea792713162d0e59fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19971, "upload_time": "2020-03-22T18:49:45", "upload_time_iso_8601": "2020-03-22T18:49:45.874917Z", "url": "https://files.pythonhosted.org/packages/95/09/52054b90084d67ec9643fb8f21897398589bf6654ed86d1c2b330d3e09fd/pyicloud-0.9.6.1.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "c5845ed2b6c037437597f780f3500d95", "sha256": "e1a366813044c7c950f6ce966e6290996f4cc0f1d1184151856db7191f4de0db"}, "downloads": -1, "filename": "pyicloud-0.9.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c5845ed2b6c037437597f780f3500d95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*", "size": 26299, "upload_time": "2020-05-03T21:57:19", "upload_time_iso_8601": "2020-05-03T21:57:19.827931Z", "url": "https://files.pythonhosted.org/packages/5c/5b/4d1fd61abc9f17cfb9ff0ce05c67f7b91ba2072f8fb7e6042316b5e539ec/pyicloud-0.9.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e34f96e8afb69d3e27e9c5075798eb8", "sha256": "dcebb32e474bc28aa77b944a0a64949ef3b5b852cbef6256fbc95347a04e777c"}, "downloads": -1, "filename": "pyicloud-0.9.7.tar.gz", "has_sig": false, "md5_digest": "4e34f96e8afb69d3e27e9c5075798eb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*", "size": 25900, "upload_time": "2020-05-03T21:57:21", "upload_time_iso_8601": "2020-05-03T21:57:21.727988Z", "url": "https://files.pythonhosted.org/packages/19/5f/6a7154af2629d63b76f84359f6fc32aed849139ccb4245436da4443ac8a1/pyicloud-0.9.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c5845ed2b6c037437597f780f3500d95", "sha256": "e1a366813044c7c950f6ce966e6290996f4cc0f1d1184151856db7191f4de0db"}, "downloads": -1, "filename": "pyicloud-0.9.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c5845ed2b6c037437597f780f3500d95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*", "size": 26299, "upload_time": "2020-05-03T21:57:19", "upload_time_iso_8601": "2020-05-03T21:57:19.827931Z", "url": "https://files.pythonhosted.org/packages/5c/5b/4d1fd61abc9f17cfb9ff0ce05c67f7b91ba2072f8fb7e6042316b5e539ec/pyicloud-0.9.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e34f96e8afb69d3e27e9c5075798eb8", "sha256": "dcebb32e474bc28aa77b944a0a64949ef3b5b852cbef6256fbc95347a04e777c"}, "downloads": -1, "filename": "pyicloud-0.9.7.tar.gz", "has_sig": false, "md5_digest": "4e34f96e8afb69d3e27e9c5075798eb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*", "size": 25900, "upload_time": "2020-05-03T21:57:21", "upload_time_iso_8601": "2020-05-03T21:57:21.727988Z", "url": "https://files.pythonhosted.org/packages/19/5f/6a7154af2629d63b76f84359f6fc32aed849139ccb4245436da4443ac8a1/pyicloud-0.9.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:10 2020"}