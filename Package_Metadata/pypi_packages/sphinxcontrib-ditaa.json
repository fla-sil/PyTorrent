{"info": {"author": "Yongping Guo", "author_email": "guoyoooping@163.com", "bugtrack_url": null, "classifiers": [], "description": "sphinxcontrib-ditaa\n*********************\n\nA sphinx extension for embedding ditaa diagram.\n\n:author: \"Yongping Guo\"<guoyoooping@163.com>\n\n1. Introduction\n===============\n\nditaa_ is a small command-line utility that can convert diagrams drawn\nusing ascii art ('drawings' that contain characters that resemble lines\nlike | / - ), into proper bitmap graphics. See\nhttp://ditaa.sourceforge.net/, \n\nThis extensions allows rendering of diagram using the ditaa_ to by included in\nSphinx-generated. This extensions adds the ``ditaa`` directive that will\nreplace the ascii diagram with the image of the ditaa. \n\nditaa_ is in java, normal it's call by the following format::\n\n    java  -jar /usr/local/Cellar/ditaa/0.10/libexec/ditaa0_10.jar art10.txt art10.png \n\nYou should convert and call it as:\n\n    ditaa art10.txt art10.png \n\nIf you don't like the converttion, please refer to `4.2 Configuration`_ for\nworkaround. One possilbe convertation might be like this::\n\n    $ cat /usr/local/bin/ditaa\n    #!/bin/bash\n    exec java  -jar /usr/local/Cellar/ditaa/0.10/libexec/ditaa0_10.jar \"$@\"\n\n2. Installing and setup\n=======================\n\npip install sphinxcontrib-ditaa\n\nJust add ``sphinxcontrib.ditaa`` to the list of extensions in the ``conf.py``\nfile. For example::\n\n    extensions = ['sphinxcontrib.ditaa']\n\nsphinxcontrib-ditaa also provide configuration to add different options to\nditaa command and render different output file, for example add the following\nconfiguration into the conf.py could generate .svg output::\n\n    ditaa_args = ['--svg']\n    ditaa_output_suffix = 'svg'\n\nThe default values of the above configuration is::\n\n    ditaa_args = []\n    ditaa_output_suffix = 'png'\n\n3. Quick Example\n================\n\nThis source::\n\n    .. ditaa::\n\n        +--------+   +-------+    +-------+\n        |        | --+ ditaa +--> |       |\n        |  Text  |   +-------+    |diagram|\n        |Document|   |!magic!|    |       |\n        |     {d}|   |       |    |       |\n        +---+----+   +-------+    +-------+\n            :                         ^\n            |       Lots of work      |\n            +-------------------------+\n\nis rendered as: |example1|_\n\n.. |example1| image:: http://ditaa.sourceforge.net/images/first.png\n.. _example1: http://ditaa.sourceforge.net/images/first.png\n\n\nAnother example::\n\n    .. ditaa::\n\n        +----------+ edit +----------+   input +----------+ compile +----------+\n        |  cPNK    |      |  cRED    |         |   cGRE   |         |  cPNK    |\n        | refined  |<-----+ h,cpp    +-------->+ compiler,+-------->+Executable|\n        |   h,cpp  |      |          |         | linker   |         |   File   |\n        |          |      |          |         |          |         |          |\n        +----------+      +----+-----+         +----------+         +----------+\n                               | input\n                               v\n                          +----------+\n                          |  cGRE    |\n                          | doxygen  |\n                          |          |\n                          +----+-----+\n                               | process\n                               v\n                          +----------+\n                          |  cPNK    |\n                          | Doxgen   |\n                          | Document |\n                          |          |\n                          +----------+\n\nis rendered as: |example2|_\n\n.. |example2| image:: http://emacser.com/uploads/asciiExampleWithColorAndType.png\n.. _example2: http://emacser.com/uploads/asciiExampleWithColorAndType.png\n\n4. Usage\n========\n\n1) Firstly, make a directory and write the .rst files::\n\n    $ mkdir test_dir\n    $ cd test_dir\n    $ vim test.rst\n\n2) create a sphinex project in the directory, presss Enter if there is no\nchange::\n\n    $ sphinx-quickstart\n\n3) Just add ``sphinxcontrib.ditaa`` to the list of extensions in the\n``conf.py`` file just created in step 2::\n\n    extensions = ['sphinxcontrib.ditaa']\n\n4) Add your work .rst files into index.rst just created in step 2::\n\n    Contents:\n    \u00a0\n    .. toctree::\n    \u00a0\u00a0\u00a0:maxdepth: 2\n    \u00a0\n    \u00a0\u00a0\u00a0test.rst\n\n5) make your target files::\n\n    $ make html\n\nor::\n\n    $ make pdf\n\n6) check your target files:\n\n    $ open .build/html/index.html\n\n4.1 Options\n-----------\n\n1) ditaa options:\n\nSee detail in ditaa -h::\n\n    :--no-antialias:\n    :--background:\n    :--no-antialias:\n    :--no-separation:\n    :--encoding:\n    :--html:\n    :--overwrite:\n    :--round-corners:\n    :--no-shadows:\n    :--scale: 1.5 #Please note that it's ditaa's parameter and the units are\n               fractions of the default size (2.5 renders 1.5 times bigger\n               than the default). Be warning to be different from image's\n               scale unit.\n    :--transparent:\n    :--tabs:\n    :--fixed-slope:\n\n2) image options:\n\nSee detail in rst syntax::\n\n    :name: \n    :class: \n    :alt: \n    :title:\n    :height: \n    :width: \n    :scale: 50%, Please node that it's integer percentage (the \"%\" symbol is optional)\n    :align: \n    :target: \n    :inline: \n\nExamples::\n\n    .. ditaa::\n       :--no-antialias:\n       :--transparent: \n       :--scale: 1.5\n       :alt: a test for ditaa.\n       :width: 600\n       :height: 400\n       :align: left\n       :scale: 50\n\n        Color codes\n        /-------------+-------------\\\n        |cRED RED     |cBLU BLU     |\n        +-------------+-------------+\n        |cGRE GRE     |cPNK PNK     |\n        +-------------+-------------+\n        |cBLK BLK     |cYEL YEL     |\n        \\-------------+-------------/\n\n4.2 Configuration\n-----------------\n\nFor now some optional configurations is added to Sphinx_. It can be set in\n``conf.py`` file:\n\n``ditaa`` <str>:\n\n    Ditaa is a java implementation and maybe is not callable directly, please\n    input the ditaa executale name if you didn't convert it to a normal\n    command. Default is \"ditaa\". See examples below.\n\n``ditaa_args`` <list>:\n\n    Given a ditaa option list, default is empty.\n\n``ditaa_log_enable`` <Bool>:\n\n    Since ditaa is slow, will give out a log to note progress if it's\n    configured. Default is True.\n\n::\n\n    ditaa = \"java\"\n    ditaa_args = [\"-jar\", \"/usr/local/Cellar/ditaa/0.10/libexec/ditaa0_10.jar\"]\n    ditaa_log_enable = True\n\n5. License\n==========\n\nGPLv3\n\n.. _ditaa: http://ditaa.sourceforge.net/\n.. _Sphinx: http://sphinx.pocoo.org/\n\n6. Changelog\n============\n\n0.5\n\nDon't import sphinx.util.compat since sphinx.util.compat is deprecated at 1.6\nand is removed since Sphinx 1.7.\n\n\n0.6\n\nSupport python3", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stathissideris/ditaa", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sphinxcontrib-ditaa", "package_url": "https://pypi.org/project/sphinxcontrib-ditaa/", "platform": "any", "project_url": "https://pypi.org/project/sphinxcontrib-ditaa/", "project_urls": {"Homepage": "https://github.com/stathissideris/ditaa"}, "release_url": "https://pypi.org/project/sphinxcontrib-ditaa/0.7/", "requires_dist": null, "requires_python": "", "summary": "Ditaa Sphinx extension", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A sphinx extension for embedding ditaa diagram.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>author:</th><td>\u201cYongping Guo\u201d&lt;<a href=\"mailto:guoyoooping%40163.com\">guoyoooping<span>@</span>163<span>.</span>com</a>&gt;</td>\n</tr>\n</tbody>\n</table>\n<div id=\"introduction\">\n<h2>1. Introduction</h2>\n<p><a href=\"http://ditaa.sourceforge.net/\" rel=\"nofollow\">ditaa</a> is a small command-line utility that can convert diagrams drawn\nusing ascii art (\u2018drawings\u2019 that contain characters that resemble lines\nlike | / - ), into proper bitmap graphics. See\n<a href=\"http://ditaa.sourceforge.net/\" rel=\"nofollow\">http://ditaa.sourceforge.net/</a>,</p>\n<p>This extensions allows rendering of diagram using the <a href=\"http://ditaa.sourceforge.net/\" rel=\"nofollow\">ditaa</a> to by included in\nSphinx-generated. This extensions adds the <tt>ditaa</tt> directive that will\nreplace the ascii diagram with the image of the ditaa.</p>\n<p><a href=\"http://ditaa.sourceforge.net/\" rel=\"nofollow\">ditaa</a> is in java, normal it\u2019s call by the following format:</p>\n<pre>java  -jar /usr/local/Cellar/ditaa/0.10/libexec/ditaa0_10.jar art10.txt art10.png\n</pre>\n<p>You should convert and call it as:</p>\n<blockquote>\nditaa art10.txt art10.png</blockquote>\n<p>If you don\u2019t like the converttion, please refer to <a href=\"#configuration\" rel=\"nofollow\">4.2 Configuration</a> for\nworkaround. One possilbe convertation might be like this:</p>\n<pre>$ cat /usr/local/bin/ditaa\n#!/bin/bash\nexec java  -jar /usr/local/Cellar/ditaa/0.10/libexec/ditaa0_10.jar \"$@\"\n</pre>\n</div>\n<div id=\"installing-and-setup\">\n<h2>2. Installing and setup</h2>\n<p>pip install sphinxcontrib-ditaa</p>\n<p>Just add <tt>sphinxcontrib.ditaa</tt> to the list of extensions in the <tt>conf.py</tt>\nfile. For example:</p>\n<pre>extensions = ['sphinxcontrib.ditaa']\n</pre>\n<p>sphinxcontrib-ditaa also provide configuration to add different options to\nditaa command and render different output file, for example add the following\nconfiguration into the conf.py could generate .svg output:</p>\n<pre>ditaa_args = ['--svg']\nditaa_output_suffix = 'svg'\n</pre>\n<p>The default values of the above configuration is:</p>\n<pre>ditaa_args = []\nditaa_output_suffix = 'png'\n</pre>\n</div>\n<div id=\"quick-example\">\n<h2>3. Quick Example</h2>\n<p>This source:</p>\n<pre>.. ditaa::\n\n    +--------+   +-------+    +-------+\n    |        | --+ ditaa +--&gt; |       |\n    |  Text  |   +-------+    |diagram|\n    |Document|   |!magic!|    |       |\n    |     {d}|   |       |    |       |\n    +---+----+   +-------+    +-------+\n        :                         ^\n        |       Lots of work      |\n        +-------------------------+\n</pre>\n<p>is rendered as: <a href=\"http://ditaa.sourceforge.net/images/first.png\" rel=\"nofollow\"><img alt=\"example1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d483e684fe97c0bf95bd296847d1e646df4e5053/687474703a2f2f64697461612e736f75726365666f7267652e6e65742f696d616765732f66697273742e706e67\"></a></p>\n<p>Another example:</p>\n<pre>.. ditaa::\n\n    +----------+ edit +----------+   input +----------+ compile +----------+\n    |  cPNK    |      |  cRED    |         |   cGRE   |         |  cPNK    |\n    | refined  |&lt;-----+ h,cpp    +--------&gt;+ compiler,+--------&gt;+Executable|\n    |   h,cpp  |      |          |         | linker   |         |   File   |\n    |          |      |          |         |          |         |          |\n    +----------+      +----+-----+         +----------+         +----------+\n                           | input\n                           v\n                      +----------+\n                      |  cGRE    |\n                      | doxygen  |\n                      |          |\n                      +----+-----+\n                           | process\n                           v\n                      +----------+\n                      |  cPNK    |\n                      | Doxgen   |\n                      | Document |\n                      |          |\n                      +----------+\n</pre>\n<p>is rendered as: <a href=\"http://emacser.com/uploads/asciiExampleWithColorAndType.png\" rel=\"nofollow\"><img alt=\"example2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aaaab8f9bab29f5f859c108179168ee10753bd54/687474703a2f2f656d61637365722e636f6d2f75706c6f6164732f61736369694578616d706c6557697468436f6c6f72416e64547970652e706e67\"></a></p>\n</div>\n<div id=\"usage\">\n<h2>4. Usage</h2>\n<ol>\n<li><p>Firstly, make a directory and write the .rst files:</p>\n<pre>$ mkdir test_dir\n$ cd test_dir\n$ vim test.rst\n</pre>\n</li>\n</ol>\n<p>2) create a sphinex project in the directory, presss Enter if there is no\nchange:</p>\n<pre>$ sphinx-quickstart\n</pre>\n<p>3) Just add <tt>sphinxcontrib.ditaa</tt> to the list of extensions in the\n<tt>conf.py</tt> file just created in step 2:</p>\n<pre>extensions = ['sphinxcontrib.ditaa']\n</pre>\n<ol>\n<li><p>Add your work .rst files into index.rst just created in step 2:</p>\n<pre>Contents:\n\n.. toctree::\n\u00a0\u00a0\u00a0:maxdepth: 2\n\n\u00a0\u00a0\u00a0test.rst\n</pre>\n</li>\n<li><p>make your target files:</p>\n<pre>$ make html\n</pre>\n</li>\n</ol>\n<p>or:</p>\n<pre>$ make pdf\n</pre>\n<ol>\n<li><p>check your target files:</p>\n<blockquote>\n<p>$ open .build/html/index.html</p>\n</blockquote>\n</li>\n</ol>\n<div id=\"options\">\n<h3>4.1 Options</h3>\n<ol>\n<li>ditaa options:</li>\n</ol>\n<p>See detail in ditaa -h:</p>\n<pre>:--no-antialias:\n:--background:\n:--no-antialias:\n:--no-separation:\n:--encoding:\n:--html:\n:--overwrite:\n:--round-corners:\n:--no-shadows:\n:--scale: 1.5 #Please note that it's ditaa's parameter and the units are\n           fractions of the default size (2.5 renders 1.5 times bigger\n           than the default). Be warning to be different from image's\n           scale unit.\n:--transparent:\n:--tabs:\n:--fixed-slope:\n</pre>\n<ol>\n<li>image options:</li>\n</ol>\n<p>See detail in rst syntax:</p>\n<pre>:name:\n:class:\n:alt:\n:title:\n:height:\n:width:\n:scale: 50%, Please node that it's integer percentage (the \"%\" symbol is optional)\n:align:\n:target:\n:inline:\n</pre>\n<p>Examples:</p>\n<pre>.. ditaa::\n   :--no-antialias:\n   :--transparent:\n   :--scale: 1.5\n   :alt: a test for ditaa.\n   :width: 600\n   :height: 400\n   :align: left\n   :scale: 50\n\n    Color codes\n    /-------------+-------------\\\n    |cRED RED     |cBLU BLU     |\n    +-------------+-------------+\n    |cGRE GRE     |cPNK PNK     |\n    +-------------+-------------+\n    |cBLK BLK     |cYEL YEL     |\n    \\-------------+-------------/\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>4.2 Configuration</h3>\n<p>For now some optional configurations is added to <a href=\"http://sphinx.pocoo.org/\" rel=\"nofollow\">Sphinx</a>. It can be set in\n<tt>conf.py</tt> file:</p>\n<p><tt>ditaa</tt> &lt;str&gt;:</p>\n<blockquote>\nDitaa is a java implementation and maybe is not callable directly, please\ninput the ditaa executale name if you didn\u2019t convert it to a normal\ncommand. Default is \u201cditaa\u201d. See examples below.</blockquote>\n<p><tt>ditaa_args</tt> &lt;list&gt;:</p>\n<blockquote>\nGiven a ditaa option list, default is empty.</blockquote>\n<p><tt>ditaa_log_enable</tt> &lt;Bool&gt;:</p>\n<blockquote>\nSince ditaa is slow, will give out a log to note progress if it\u2019s\nconfigured. Default is True.</blockquote>\n<pre>ditaa = \"java\"\nditaa_args = [\"-jar\", \"/usr/local/Cellar/ditaa/0.10/libexec/ditaa0_10.jar\"]\nditaa_log_enable = True\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>5. License</h2>\n<p>GPLv3</p>\n</div>\n<div id=\"changelog\">\n<h2>6. Changelog</h2>\n<p>0.5</p>\n<p>Don\u2019t import sphinx.util.compat since sphinx.util.compat is deprecated at 1.6\nand is removed since Sphinx 1.7.</p>\n<p>0.6</p>\n<p>Support python3</p>\n</div>\n\n          </div>"}, "last_serial": 6347136, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "17efbff151b77b05162f22125b6c8522", "sha256": "e2d9bd306f0ebc5c17fc5ecdd724673cc39510a776df15f633b963c9d9bdfab4"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.1.tar.gz", "has_sig": false, "md5_digest": "17efbff151b77b05162f22125b6c8522", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6958, "upload_time": "2017-07-30T04:48:26", "upload_time_iso_8601": "2017-07-30T04:48:26.009068Z", "url": "https://files.pythonhosted.org/packages/df/eb/8598c13920e4dc4a04cbdbbf11670db73934e25b474e2ec8372c00e2c7fe/sphinxcontrib-ditaa-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4f7e57f0e932540162a766e4f31a6b99", "sha256": "ec8123067c8f5457e983313380570353406a21035a14b8f00bb661d9a63297e1"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.2.tar.gz", "has_sig": false, "md5_digest": "4f7e57f0e932540162a766e4f31a6b99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7293, "upload_time": "2017-08-03T08:47:03", "upload_time_iso_8601": "2017-08-03T08:47:03.084533Z", "url": "https://files.pythonhosted.org/packages/50/48/b4b7ce4ca0f6f562989b0e8fa6caf7818a8826a58f3ac41d3acceb1ef2e4/sphinxcontrib-ditaa-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c19e5a97266aacce1f8df456aef9c9d8", "sha256": "9100941404cff66690b16ae9a984c814faad73647c3147f03b408598b55d52d9"}, "downloads": -1, "filename": "sphinxcontrib_ditaa-0.3-py2.7.egg", "has_sig": false, "md5_digest": "c19e5a97266aacce1f8df456aef9c9d8", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10443, "upload_time": "2018-02-18T10:49:19", "upload_time_iso_8601": "2018-02-18T10:49:19.106058Z", "url": "https://files.pythonhosted.org/packages/57/50/b7fcdb15d4ab31ca05d8d03cb390ec691aabecaaf828967e10abacb4621c/sphinxcontrib_ditaa-0.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d8f2ace86d11d6ea3408663a8ef840c", "sha256": "4062f2659b258013d0ec266602669c36ffbaf909c26c0ee480a93c312dacb2ad"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.3.tar.gz", "has_sig": false, "md5_digest": "6d8f2ace86d11d6ea3408663a8ef840c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7316, "upload_time": "2018-02-18T10:27:22", "upload_time_iso_8601": "2018-02-18T10:27:22.321742Z", "url": "https://files.pythonhosted.org/packages/76/fe/c0522efe60c03093b09cee7e63254924a01be34f69e74b520041a4453981/sphinxcontrib-ditaa-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "aa614deff0e2e706e749fda16879b152", "sha256": "abb415b23ca34eaaaf78c68e0819d5ed0dc1e8257ad92ef73d156b17abd2a1ae"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.4.tar.gz", "has_sig": false, "md5_digest": "aa614deff0e2e706e749fda16879b152", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7272, "upload_time": "2018-02-18T10:49:21", "upload_time_iso_8601": "2018-02-18T10:49:21.228848Z", "url": "https://files.pythonhosted.org/packages/22/29/96e52d9496980b6a75f3144fb4d35ffce711c65d46e4862058ceac760735/sphinxcontrib-ditaa-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "f84603d206cebc53fc191265c887fb4d", "sha256": "7b2cbd4bcfe1dcea12c51f544beb97d8cd3eab25d66eafccb7a55491b00d3811"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.5.tar.gz", "has_sig": false, "md5_digest": "f84603d206cebc53fc191265c887fb4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7365, "upload_time": "2018-05-30T03:00:26", "upload_time_iso_8601": "2018-05-30T03:00:26.546291Z", "url": "https://files.pythonhosted.org/packages/1e/19/845a7460126396871c96810695113f3f3fe714d3dfe4faab0be6dfc23a5c/sphinxcontrib-ditaa-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "44457f0230b09fd126b3b82031b4610c", "sha256": "9d210ac0bc5a48b38fcee793c82f53890bef5dfe8bee860db437ddce53b140d6"}, "downloads": -1, "filename": "sphinxcontrib_ditaa-0.6-py3.7.egg", "has_sig": false, "md5_digest": "44457f0230b09fd126b3b82031b4610c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 9779, "upload_time": "2019-07-15T02:24:16", "upload_time_iso_8601": "2019-07-15T02:24:16.540679Z", "url": "https://files.pythonhosted.org/packages/52/2a/14f305271699392e5c3bc818145942093c15d952cb0e6402cc3ff21d2be0/sphinxcontrib_ditaa-0.6-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "06bde1c09422229790268e696379491c", "sha256": "91fdd8514b733571d8e1e69f442403020d2b33a5d525efea625708f051b136a3"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.6.tar.gz", "has_sig": false, "md5_digest": "06bde1c09422229790268e696379491c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7112, "upload_time": "2019-07-15T02:24:14", "upload_time_iso_8601": "2019-07-15T02:24:14.676069Z", "url": "https://files.pythonhosted.org/packages/1a/3a/47da1dc8e2edf4f2bc2b1ebe184684321aec1bb942a25a2349070cf47cc2/sphinxcontrib-ditaa-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "479a77a95e637bbd2c6d136a19a716f9", "sha256": "19567a44d8dd1c6804be2b2e4d24d0801d44f5acf299a3177e80832dfe71276f"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.7.tar.gz", "has_sig": false, "md5_digest": "479a77a95e637bbd2c6d136a19a716f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7280, "upload_time": "2019-12-22T10:45:08", "upload_time_iso_8601": "2019-12-22T10:45:08.778886Z", "url": "https://files.pythonhosted.org/packages/a1/75/a66e54c3c5ed5a724fe5ecf4e652a5e3f1c09931fa51c9e2542e74620130/sphinxcontrib-ditaa-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "479a77a95e637bbd2c6d136a19a716f9", "sha256": "19567a44d8dd1c6804be2b2e4d24d0801d44f5acf299a3177e80832dfe71276f"}, "downloads": -1, "filename": "sphinxcontrib-ditaa-0.7.tar.gz", "has_sig": false, "md5_digest": "479a77a95e637bbd2c6d136a19a716f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7280, "upload_time": "2019-12-22T10:45:08", "upload_time_iso_8601": "2019-12-22T10:45:08.778886Z", "url": "https://files.pythonhosted.org/packages/a1/75/a66e54c3c5ed5a724fe5ecf4e652a5e3f1c09931fa51c9e2542e74620130/sphinxcontrib-ditaa-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:18 2020"}