{"info": {"author": "Christopher Hackmeyer", "author_email": "cbhackmeyer@allisforall.dedyn.io", "bugtrack_url": null, "classifiers": ["License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "============\nPyCAPTCHAGen\n============\n\nPyCAPTCHAGen is a very basic command line utility for generating once-off \"CAPTCHA\"-type image and audio files to help deter abuse by bots on the web. Normally, these distorted text and audio challenges are generated dynamically and automatically on-the-fly for each request. However, this can be somewhat complicated to implement, and many off-the-shelf solutions rely on third-party services that some of us would prefer not to deal with. Say you're just managing a simple, low-traffic site and have a contact form or email address that you want to hide from casual scraping by spam bots (the author's original use case). In this case, just generating a single \"CAPTCHA\"-style challenge is easier to implement and may be reasonably effective, depending on your needs.\n\nBasic usage::\n\n\tpycaptchagen 'text to garble' outputname\n\nAt this time, the only supported image format is PNG with a resolution of 160 x 60 pixels. A \".png\" file extension is appended automatically to the output name you provide. Note that it is advisable to enclose your text input in quote marks, and you must do so if it contains spaces or characters that are treated specially by your shell.\n\nTo also generate an audio file for accessibility by visually impaired users::\n\n\tpycaptchagen --audio 'text to garble' outputname\n\nAt this time, the only supported audio format is WAV (mono, 8-bit, 8 kHz = 64 kbps). The same output name is used for the image and audio files, and a \".wav\" file extension is automatically appended for the audio file.\n\nIf you want just the audio file without a matching image::\n\n\tpycaptchagen --audio --noimage 'text to garble' outputname\n\nYou can use the default font and voice, or you may specify others of your choosing as follows::\n\n\tpycaptchagen --font /path/to/font.ttf --voicedir /path/to/voicedata 'text to garble' outputname\n\nThe font can be any TrueType font, as long as it includes all the characters used in your input. You may also specify multiple fonts by invoking the ``--font`` option multiple times, and the image generator will use a random mix of the different fonts for different characters.\n\nThe voice data directory you specify must contain a subdirectory with the name of each character, with each of these subdirectories containing a single 8-bit, 8 kHz mono WAV file (with a .wav file extension) for that character. See the `Python captcha library source code`_ for an example. At the time of this writing, the default voice data only contains the numerals 0-9, so unless your input is just a non-negative integer, you will get an error without specifying your own voice directory. This may (hopefully) be fixed in a future version of the captcha library.\n\nLicense\n-----------\n\nPyCAPTCHAGen is public domain software available under `The Unlicense`_. Feel free to use, study, share, and modify the code as you see fit. :)\n\nAcknowledgements\n----------------------------\n\nPyCAPTCHAGen uses Hsiaoming Yang's `Python captcha library`_.\n\n.. _Python captcha library source code: https://github.com/lepture/captcha/tree/master/captcha/data\n.. _The Unlicense: https://unlicense.org/\n.. _Python captcha library: https://github.com/lepture/captcha\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "The Unlicense (Public Domain)", "maintainer": "", "maintainer_email": "", "name": "pycaptchagen", "package_url": "https://pypi.org/project/pycaptchagen/", "platform": "", "project_url": "https://pypi.org/project/pycaptchagen/", "project_urls": null, "release_url": "https://pypi.org/project/pycaptchagen/0.1.0/", "requires_dist": ["captcha"], "requires_python": "~=3.2", "summary": "Generate once-off \"CAPTCHA\"-type images and audio files from the command line.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyCAPTCHAGen is a very basic command line utility for generating once-off \u201cCAPTCHA\u201d-type image and audio files to help deter abuse by bots on the web. Normally, these distorted text and audio challenges are generated dynamically and automatically on-the-fly for each request. However, this can be somewhat complicated to implement, and many off-the-shelf solutions rely on third-party services that some of us would prefer not to deal with. Say you\u2019re just managing a simple, low-traffic site and have a contact form or email address that you want to hide from casual scraping by spam bots (the author\u2019s original use case). In this case, just generating a single \u201cCAPTCHA\u201d-style challenge is easier to implement and may be reasonably effective, depending on your needs.</p>\n<p>Basic usage:</p>\n<pre>pycaptchagen 'text to garble' outputname\n</pre>\n<p>At this time, the only supported image format is PNG with a resolution of 160 x 60 pixels. A \u201c.png\u201d file extension is appended automatically to the output name you provide. Note that it is advisable to enclose your text input in quote marks, and you must do so if it contains spaces or characters that are treated specially by your shell.</p>\n<p>To also generate an audio file for accessibility by visually impaired users:</p>\n<pre>pycaptchagen --audio 'text to garble' outputname\n</pre>\n<p>At this time, the only supported audio format is WAV (mono, 8-bit, 8 kHz = 64 kbps). The same output name is used for the image and audio files, and a \u201c.wav\u201d file extension is automatically appended for the audio file.</p>\n<p>If you want just the audio file without a matching image:</p>\n<pre>pycaptchagen --audio --noimage 'text to garble' outputname\n</pre>\n<p>You can use the default font and voice, or you may specify others of your choosing as follows:</p>\n<pre>pycaptchagen --font /path/to/font.ttf --voicedir /path/to/voicedata 'text to garble' outputname\n</pre>\n<p>The font can be any TrueType font, as long as it includes all the characters used in your input. You may also specify multiple fonts by invoking the <tt><span class=\"pre\">--font</span></tt> option multiple times, and the image generator will use a random mix of the different fonts for different characters.</p>\n<p>The voice data directory you specify must contain a subdirectory with the name of each character, with each of these subdirectories containing a single 8-bit, 8 kHz mono WAV file (with a .wav file extension) for that character. See the <a href=\"https://github.com/lepture/captcha/tree/master/captcha/data\" rel=\"nofollow\">Python captcha library source code</a> for an example. At the time of this writing, the default voice data only contains the numerals 0-9, so unless your input is just a non-negative integer, you will get an error without specifying your own voice directory. This may (hopefully) be fixed in a future version of the captcha library.</p>\n<div id=\"license\">\n<h2>License</h2>\n<p>PyCAPTCHAGen is public domain software available under <a href=\"https://unlicense.org/\" rel=\"nofollow\">The Unlicense</a>. Feel free to use, study, share, and modify the code as you see fit. :)</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>PyCAPTCHAGen uses Hsiaoming Yang\u2019s <a href=\"https://github.com/lepture/captcha\" rel=\"nofollow\">Python captcha library</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6841212, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6b1652f3c5b11459def1aa5cf2ab904e", "sha256": "33c20aba90dc667eb579ef4e41f2c3f6fc023bfdfa434b3e2abb98ff2877e57c"}, "downloads": -1, "filename": "pycaptchagen-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b1652f3c5b11459def1aa5cf2ab904e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.2", "size": 6150, "upload_time": "2020-03-19T05:05:15", "upload_time_iso_8601": "2020-03-19T05:05:15.356870Z", "url": "https://files.pythonhosted.org/packages/8c/2f/79e8a05acf163fc5e3a0166cb2a2cafe3276638cd5bee2ba9dde2df97440/pycaptchagen-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2712e30ea0dc6e484dcc96633c382ff9", "sha256": "184f522b03ca47e06a5aeaf305f5fc5c19079e53feb8743054d3f6bbdc1f9116"}, "downloads": -1, "filename": "pycaptchagen-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2712e30ea0dc6e484dcc96633c382ff9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.2", "size": 4265, "upload_time": "2020-03-19T05:05:17", "upload_time_iso_8601": "2020-03-19T05:05:17.775861Z", "url": "https://files.pythonhosted.org/packages/9b/7a/2b541c1f79427fc16fce61ee55fe778f4be95c040ca13b959ac9eba840ce/pycaptchagen-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b1652f3c5b11459def1aa5cf2ab904e", "sha256": "33c20aba90dc667eb579ef4e41f2c3f6fc023bfdfa434b3e2abb98ff2877e57c"}, "downloads": -1, "filename": "pycaptchagen-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b1652f3c5b11459def1aa5cf2ab904e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.2", "size": 6150, "upload_time": "2020-03-19T05:05:15", "upload_time_iso_8601": "2020-03-19T05:05:15.356870Z", "url": "https://files.pythonhosted.org/packages/8c/2f/79e8a05acf163fc5e3a0166cb2a2cafe3276638cd5bee2ba9dde2df97440/pycaptchagen-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2712e30ea0dc6e484dcc96633c382ff9", "sha256": "184f522b03ca47e06a5aeaf305f5fc5c19079e53feb8743054d3f6bbdc1f9116"}, "downloads": -1, "filename": "pycaptchagen-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2712e30ea0dc6e484dcc96633c382ff9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.2", "size": 4265, "upload_time": "2020-03-19T05:05:17", "upload_time_iso_8601": "2020-03-19T05:05:17.775861Z", "url": "https://files.pythonhosted.org/packages/9b/7a/2b541c1f79427fc16fce61ee55fe778f4be95c040ca13b959ac9eba840ce/pycaptchagen-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:46 2020"}