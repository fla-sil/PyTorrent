{"info": {"author": "Shay Palachy", "author_email": "shay.palachy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "fossa |fossa_icon|\n##################\n|PyPI-Status| |PyPI-Versions| |Build-Status| |Codecov| |LICENCE|\n\n.. |fossa_icon| image:: https://github.com/shaypal5/fossa/blob/88d480fd90820ea58c062029ce7e926201794e47/fossa_small.png\n\nDistribution-based anomaly detection for time series data.\n\n.. code-block:: python\n\n  >>> from fossa import LastWindowX2AnomalyDetector\n  >>> clf = LastWindowX2AnomalyDetector(p_threshold=0.005, normalize=True)\n  >>> clf.fit(historic_data_df)\n  >>> clf.predict(new_data)\n                       direction\n  date       category\n  2018-06-01 hockey          1.0\n             footbal         0.0\n             soccer         -1.0\n             tennis          0.0\n\n\n.. contents::\n\n.. section-numbering::\n\n\nInstallation\n============\n\n.. code-block:: bash\n\n  pip install fossa\n\n\n\nFeatures\n========\n\n* ``scikit-learn``-like classifier API.\n* Pickle-able classifier objects.\n* Pure python.\n* Supports Python 3.5+.\n* Fully tested.\n\n\nApproach\n========\n\nBuild on top of:\nhttp://lagrange.univ-lyon1.fr/docs/scipy/0.17.1/generated/scipy.stats.power_divergence.html#scipy.stats.power_divergence\n\n\n\nUse\n===\n\nData Format\n-----------\n\nAll anomaly detectors are desgined to receive as fit parameter a ``pandas`` DataFrame with a two-leveled multi-index, the first indexing time and the second indexing category/topic frequency per-window, and a single column of a numeric dtype, giving said frequency.\n\nWhen detecting trends a similarly-indexed dataframe with detection results is returned, giving detected trends per time windows and category.\n\n\nAPI\n---\n\nAll anomaly detector objects in ``fossa`` have an identical API:\n\n- ``fit`` - Recieves a history of time-windowed distributions to train on and fits the detector on it (see the `Data Format`_ section for the exact format). The set of categories may be different across different time windows or between historic and time windoes for detection; detection is done for the union of of categories over all commitee and new time windows.\n- ``partial_fit`` - The same as ``fit``, but can also incrementaly fit an already-fit detector without necessarilly ignoring all past fitted data. Detectors who do not support incremental fitting will raise a ``NotImplementedError`` exception when this method is called.\n- ``detect_trends`` - Recieves a new dataframe (in the correct format) and detects, for each of the time windows in it, trends for each category. In addition to the ``direction`` column - indicating trend direction, with -1 for a downward trend, 0 for no trend and 1 for an upward trend - the returned dataframe might contain additional columns detailing detection confidence or probability, like p-values or commitee vote results.\n- ``predict`` - Like ``detect_trends``, except the returned dataframe always contains only a single column of detected trend directions.\n\n\nAnomaly Detectors\n-----------------\n\nChi-Square-based Detectors\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis family of anomaly detectors all operate similarly: Every detector compares new time windows to a set of committe windows that represent its idea for relevant history and characteristic behaviour of the data; one detector might look at the same hour on the same weekday across several weeks, while another might look at all the same hours in the last 10 or 20 days, or the preciding few hours.\n\nFor each of the time windows given to the ``detect_trends`` or ``predict`` methods, a one-vs-all distribution is generated for each of the categories in the window (and is possibly normalized, depending on the specific detector and its initialization parameters). Then, for each of this distributions chi-squared tests are performed between it and the corresponding distributions in each of the commitee time windows. Each commitee member \"votes\" on whether a trend is detected or not, and a decision is generated by some pre-set voting rule (for example, majority vote).\n\n\nContributing\n============\n\nCurrent package maintainer (and one of the authors) is Shay Palachy (shay.palachy@gmail.com); You are more than welcome to approach him for help. Contributions are very welcomed.\n\nInstalling for development\n----------------------------\n\nClone:\n\n.. code-block:: bash\n\n  git clone git@github.com:shaypal5/fossa.git\n\n\nInstall in development mode, including test dependencies:\n\n.. code-block:: bash\n\n  cd fossa\n  pip install -e '.[test]'\n\n\n\nRunning the tests\n-----------------\n\nTo run the tests use:\n\n.. code-block:: bash\n\n  cd fossa\n  pytest\n\n\nAdding documentation\n--------------------\n\nThe project is documented using the `numpy docstring conventions`_, which were chosen as they are perhaps the most widely-spread conventions that are both supported by common tools such as Sphinx and result in human-readable docstrings. When documenting code you add to this project, follow `these conventions`_.\n\n.. _`numpy docstring conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n.. _`these conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n\nAdditionally, if you update this ``README.rst`` file,  use ``python setup.py checkdocs`` to validate it compiles.\n\n\nCredits\n=======\n\nCreated by Shay Palachy (shay.palachy@gmail.com) and Omri Mendels.\n\n\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/fossa.svg\n  :target: https://pypi.org/project/fossa\n\n.. |PyPI-Versions| image:: https://img.shields.io/pypi/pyversions/fossa.svg\n   :target: https://pypi.org/project/fossa\n\n.. |Build-Status| image:: https://travis-ci.org/shaypal5/fossa.svg?branch=master\n  :target: https://travis-ci.org/shaypal5/fossa\n\n.. |LICENCE| image:: https://img.shields.io/badge/License-MIT-yellow.svg\n  :target: https://pypi.python.org/pypi/pdpipe\n\n.. |Codecov| image:: https://codecov.io/github/shaypal5/fossa/coverage.svg?branch=master\n   :target: https://codecov.io/github/shaypal5/fossa?branch=master\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shaypal5/fossa", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fossa", "package_url": "https://pypi.org/project/fossa/", "platform": "", "project_url": "https://pypi.org/project/fossa/", "project_urls": {"Homepage": "https://github.com/shaypal5/fossa"}, "release_url": "https://pypi.org/project/fossa/0.0.3/", "requires_dist": ["pandas; extra == 'test'", "numpy", "scipy", "scikit-learn", "pandas", "pytest; extra == 'test'", "coverage; extra == 'test'", "pytest-cov; extra == 'test'", "collective.checkdocs; extra == 'test'", "pygments; extra == 'test'", "numpy; extra == 'test'", "scipy; extra == 'test'", "scikit-learn; extra == 'test'"], "requires_python": ">=3.5", "summary": "Distribution-based anomaly detection for time series.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/fossa\" rel=\"nofollow\"><img alt=\"PyPI-Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62a79cf0c28954a359745ec0b14bbcfc711c78d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666f7373612e737667\"></a> <a href=\"https://pypi.org/project/fossa\" rel=\"nofollow\"><img alt=\"PyPI-Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb78a39ee4b32481660b82eb879f4da7d6e64c7c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f666f7373612e737667\"></a> <a href=\"https://travis-ci.org/shaypal5/fossa\" rel=\"nofollow\"><img alt=\"Build-Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b139f48f2fc35035b79d9631667f5a07fc73d05b/68747470733a2f2f7472617669732d63692e6f72672f7368617970616c352f666f7373612e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/github/shaypal5/fossa?branch=master\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30b6dfd527f33712906ba7f835751fa573d59171/68747470733a2f2f636f6465636f762e696f2f6769746875622f7368617970616c352f666f7373612f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/pdpipe\" rel=\"nofollow\"><img alt=\"LICENCE\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>Distribution-based anomaly detection for time series data.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">fossa</span> <span class=\"kn\">import</span> <span class=\"n\">LastWindowX2AnomalyDetector</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">LastWindowX2AnomalyDetector</span><span class=\"p\">(</span><span class=\"n\">p_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.005</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">historic_data_df</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n                     <span class=\"n\">direction</span>\n<span class=\"n\">date</span>       <span class=\"n\">category</span>\n<span class=\"mi\">2018</span><span class=\"o\">-</span><span class=\"mi\">06</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"n\">hockey</span>          <span class=\"mf\">1.0</span>\n           <span class=\"n\">footbal</span>         <span class=\"mf\">0.0</span>\n           <span class=\"n\">soccer</span>         <span class=\"o\">-</span><span class=\"mf\">1.0</span>\n           <span class=\"n\">tennis</span>          <span class=\"mf\">0.0</span>\n</pre>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Installation</a></li>\n<li><a href=\"#features\" id=\"id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Features</a></li>\n<li><a href=\"#approach\" id=\"id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Approach</a></li>\n<li><a href=\"#use\" id=\"id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Use</a><ul>\n<li><a href=\"#data-format\" id=\"id5\" rel=\"nofollow\">4.1\u00a0\u00a0\u00a0Data Format</a></li>\n<li><a href=\"#api\" id=\"id6\" rel=\"nofollow\">4.2\u00a0\u00a0\u00a0API</a></li>\n<li><a href=\"#anomaly-detectors\" id=\"id7\" rel=\"nofollow\">4.3\u00a0\u00a0\u00a0Anomaly Detectors</a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" id=\"id8\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Contributing</a><ul>\n<li><a href=\"#installing-for-development\" id=\"id9\" rel=\"nofollow\">5.1\u00a0\u00a0\u00a0Installing for development</a></li>\n<li><a href=\"#running-the-tests\" id=\"id10\" rel=\"nofollow\">5.2\u00a0\u00a0\u00a0Running the tests</a></li>\n<li><a href=\"#adding-documentation\" id=\"id11\" rel=\"nofollow\">5.3\u00a0\u00a0\u00a0Adding documentation</a></li>\n</ul>\n</li>\n<li><a href=\"#credits\" id=\"id12\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Credits</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Installation</a></h2>\n<pre>pip install fossa\n</pre>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Features</a></h2>\n<ul>\n<li><tt><span class=\"pre\">scikit-learn</span></tt>-like classifier API.</li>\n<li>Pickle-able classifier objects.</li>\n<li>Pure python.</li>\n<li>Supports Python 3.5+.</li>\n<li>Fully tested.</li>\n</ul>\n</div>\n<div id=\"approach\">\n<h2><a href=\"#id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Approach</a></h2>\n<p>Build on top of:\n<a href=\"http://lagrange.univ-lyon1.fr/docs/scipy/0.17.1/generated/scipy.stats.power_divergence.html#scipy.stats.power_divergence\" rel=\"nofollow\">http://lagrange.univ-lyon1.fr/docs/scipy/0.17.1/generated/scipy.stats.power_divergence.html#scipy.stats.power_divergence</a></p>\n</div>\n<div id=\"use\">\n<h2><a href=\"#id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Use</a></h2>\n<div id=\"data-format\">\n<h3><a href=\"#id5\" rel=\"nofollow\">4.1\u00a0\u00a0\u00a0Data Format</a></h3>\n<p>All anomaly detectors are desgined to receive as fit parameter a <tt>pandas</tt> DataFrame with a two-leveled multi-index, the first indexing time and the second indexing category/topic frequency per-window, and a single column of a numeric dtype, giving said frequency.</p>\n<p>When detecting trends a similarly-indexed dataframe with detection results is returned, giving detected trends per time windows and category.</p>\n</div>\n<div id=\"api\">\n<h3><a href=\"#id6\" rel=\"nofollow\">4.2\u00a0\u00a0\u00a0API</a></h3>\n<p>All anomaly detector objects in <tt>fossa</tt> have an identical API:</p>\n<ul>\n<li><tt>fit</tt> - Recieves a history of time-windowed distributions to train on and fits the detector on it (see the <a href=\"#data-format\" rel=\"nofollow\">Data Format</a> section for the exact format). The set of categories may be different across different time windows or between historic and time windoes for detection; detection is done for the union of of categories over all commitee and new time windows.</li>\n<li><tt>partial_fit</tt> - The same as <tt>fit</tt>, but can also incrementaly fit an already-fit detector without necessarilly ignoring all past fitted data. Detectors who do not support incremental fitting will raise a <tt>NotImplementedError</tt> exception when this method is called.</li>\n<li><tt>detect_trends</tt> - Recieves a new dataframe (in the correct format) and detects, for each of the time windows in it, trends for each category. In addition to the <tt>direction</tt> column - indicating trend direction, with -1 for a downward trend, 0 for no trend and 1 for an upward trend - the returned dataframe might contain additional columns detailing detection confidence or probability, like p-values or commitee vote results.</li>\n<li><tt>predict</tt> - Like <tt>detect_trends</tt>, except the returned dataframe always contains only a single column of detected trend directions.</li>\n</ul>\n</div>\n<div id=\"anomaly-detectors\">\n<h3><a href=\"#id7\" rel=\"nofollow\">4.3\u00a0\u00a0\u00a0Anomaly Detectors</a></h3>\n<h3 id=\"chi-square-based-detectors\"><span class=\"section-subtitle\">Chi-Square-based Detectors</span></h3>\n<p>This family of anomaly detectors all operate similarly: Every detector compares new time windows to a set of committe windows that represent its idea for relevant history and characteristic behaviour of the data; one detector might look at the same hour on the same weekday across several weeks, while another might look at all the same hours in the last 10 or 20 days, or the preciding few hours.</p>\n<p>For each of the time windows given to the <tt>detect_trends</tt> or <tt>predict</tt> methods, a one-vs-all distribution is generated for each of the categories in the window (and is possibly normalized, depending on the specific detector and its initialization parameters). Then, for each of this distributions chi-squared tests are performed between it and the corresponding distributions in each of the commitee time windows. Each commitee member \u201cvotes\u201d on whether a trend is detected or not, and a decision is generated by some pre-set voting rule (for example, majority vote).</p>\n</div>\n</div>\n<div id=\"contributing\">\n<h2><a href=\"#id8\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Contributing</a></h2>\n<p>Current package maintainer (and one of the authors) is Shay Palachy (<a href=\"mailto:shay.palachy%40gmail.com\">shay<span>.</span>palachy<span>@</span>gmail<span>.</span>com</a>); You are more than welcome to approach him for help. Contributions are very welcomed.</p>\n<div id=\"installing-for-development\">\n<h3><a href=\"#id9\" rel=\"nofollow\">5.1\u00a0\u00a0\u00a0Installing for development</a></h3>\n<p>Clone:</p>\n<pre>git clone git@github.com:shaypal5/fossa.git\n</pre>\n<p>Install in development mode, including test dependencies:</p>\n<pre><span class=\"nb\">cd</span> fossa\npip install -e <span class=\"s1\">'.[test]'</span>\n</pre>\n</div>\n<div id=\"running-the-tests\">\n<h3><a href=\"#id10\" rel=\"nofollow\">5.2\u00a0\u00a0\u00a0Running the tests</a></h3>\n<p>To run the tests use:</p>\n<pre><span class=\"nb\">cd</span> fossa\npytest\n</pre>\n</div>\n<div id=\"adding-documentation\">\n<h3><a href=\"#id11\" rel=\"nofollow\">5.3\u00a0\u00a0\u00a0Adding documentation</a></h3>\n<p>The project is documented using the <a href=\"https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\" rel=\"nofollow\">numpy docstring conventions</a>, which were chosen as they are perhaps the most widely-spread conventions that are both supported by common tools such as Sphinx and result in human-readable docstrings. When documenting code you add to this project, follow <a href=\"https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\" rel=\"nofollow\">these conventions</a>.</p>\n<p>Additionally, if you update this <tt>README.rst</tt> file,  use <tt>python setup.py checkdocs</tt> to validate it compiles.</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id12\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Credits</a></h2>\n<p>Created by Shay Palachy (<a href=\"mailto:shay.palachy%40gmail.com\">shay<span>.</span>palachy<span>@</span>gmail<span>.</span>com</a>) and Omri Mendels.</p>\n</div>\n\n          </div>"}, "last_serial": 4006861, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e20edfd654cb5dda8cecfed2335cf938", "sha256": "ea3d51ac54baf3cc909380bf635c1fb89e730420d2feef55d29e65c671ccdb38"}, "downloads": -1, "filename": "fossa-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e20edfd654cb5dda8cecfed2335cf938", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 9501, "upload_time": "2018-06-25T08:49:50", "upload_time_iso_8601": "2018-06-25T08:49:50.456717Z", "url": "https://files.pythonhosted.org/packages/bd/29/d7c5090a2d479e4942dfc89ae989c5f9be0df898c326b4c440080bda2975/fossa-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e867ac7a2d9ba789d4201c8262e32857", "sha256": "e5795ad168a41432bba501ae2f5a095eed7be52e87dc9bfcf0aa4568a869a671"}, "downloads": -1, "filename": "fossa-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e867ac7a2d9ba789d4201c8262e32857", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 9897, "upload_time": "2018-06-25T12:29:11", "upload_time_iso_8601": "2018-06-25T12:29:11.748562Z", "url": "https://files.pythonhosted.org/packages/d0/29/186f3d9a36852a2df9414540df868034f32a5344444222382b36c08d9341/fossa-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d5a3783f3d93dbfb0a020deb885091de", "sha256": "4955179abf569c78309eec82b990e1b46356bf905d57416e1630269de715ae7f"}, "downloads": -1, "filename": "fossa-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d5a3783f3d93dbfb0a020deb885091de", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 13419, "upload_time": "2018-06-27T10:58:10", "upload_time_iso_8601": "2018-06-27T10:58:10.882635Z", "url": "https://files.pythonhosted.org/packages/8b/36/ea77dc66ea25db7cfad39378ce3b53c0a020d020a5e89645ded569ea27a0/fossa-0.0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d5a3783f3d93dbfb0a020deb885091de", "sha256": "4955179abf569c78309eec82b990e1b46356bf905d57416e1630269de715ae7f"}, "downloads": -1, "filename": "fossa-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d5a3783f3d93dbfb0a020deb885091de", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 13419, "upload_time": "2018-06-27T10:58:10", "upload_time_iso_8601": "2018-06-27T10:58:10.882635Z", "url": "https://files.pythonhosted.org/packages/8b/36/ea77dc66ea25db7cfad39378ce3b53c0a020d020a5e89645ded569ea27a0/fossa-0.0.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:00:42 2020"}