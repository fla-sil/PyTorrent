{"info": {"author": "jander", "author_email": "jander.sy@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Introduction\r\n------------\r\n\r\nThis is a vary simple database access interface for python.\r\n\r\nFeature\r\n-------\r\n\r\n* Easy to use\r\n* supports sqlite, mysql\r\n\r\nDownload\r\n--------\r\n\r\nGo to the homepage: http://github.com/jander/littlesql/\r\n\r\nExample\r\n--------\r\n\r\nexample table: foo (id int, name string) \r\n\r\nConnect\r\n^^^^^^^\r\n\r\n**connect to sqlite3**\r\n::\r\n\r\n\tctx =  SqliteContext(\"test.db\")\r\n\tdb = Database(ctx)\r\n\r\n**connect mysql**\r\n::\r\n\r\n\tctx = MySqlContext(username=\"name\", password=\"pwd\", hostname=\"localhost\", db=\"test\")\r\n\tdb = Database(ctx)\r\n\r\nQuery\r\n^^^^^^^\r\n\r\n**query a row dict**\t\r\n::\r\n\r\n\tdb.foo(\"name=?\", \"tom\").get()\r\n\t\r\n\t# raw sql\r\n\tdb.get(\"select * from foo where name=?\", \"tom\")\r\n\r\n**query many rows**\t\r\n::\r\n\r\n\tdb.foo(\"id>?\", 100).orderby(\"id desc\").limit(0,10).query()\r\n\t\r\n\t# raw sql\r\n\tdb.query(\"select * from foo where id>? order by id desc limit 0,100;\", 100)\r\n\r\n**query selected cols**\t\t\r\n::\r\n\r\n\tdb.foo.query(\"id, name\")\r\n\t\r\n\t# raw sql\r\n\tdb.query(\"select id, name from foo\")\r\n\r\nUpdate\r\n^^^^^^^\r\n::\r\n\r\n\tfdict = dict(name=\"new foo\")\r\n\tdb.foo(\"id=?\", 1).update(**fidct)\r\n\t\r\n\t# raw sql\r\n\tdb.execute(\"update foo set name=? where id=?\", \"new foo\", 1)\r\n\r\nDelete\r\n^^^^^^^\r\n::\r\n\r\n\tdb.foo(\"name like ?\", \"test%\").delete()\r\n\t\r\n\t# raw sql\r\n\tdb.execute(\"delete from foo where name like ?\", \"test%\")\r\n\r\n\r\nOther\r\n^^^^^^^\r\n\r\nsee  the test code.\r\n\r\n\r\nReference\r\n-------------\r\n\r\n* tornado database\r\n* http://python.6.n6.nabble.com/CPyUG-tornado-database-py-Python-DAL-td2743761.html by lee Alexander.\r\n* spring python", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jander/littlesql/", "keywords": "", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "littlesql", "package_url": "https://pypi.org/project/littlesql/", "platform": "any", "project_url": "https://pypi.org/project/littlesql/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jander/littlesql/"}, "release_url": "https://pypi.org/project/littlesql/0.1/", "requires_dist": null, "requires_python": null, "summary": "a little database access interface", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This is a vary simple database access interface for python.</p>\n</div>\n<div id=\"feature\">\n<h2>Feature</h2>\n<ul>\n<li>Easy to use</li>\n<li>supports sqlite, mysql</li>\n</ul>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n<p>Go to the homepage: <a href=\"http://github.com/jander/littlesql/\" rel=\"nofollow\">http://github.com/jander/littlesql/</a></p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>example table: foo (id int, name string)</p>\n<div id=\"connect\">\n<h3>Connect</h3>\n<p><strong>connect to sqlite3</strong></p>\n<pre>ctx =  SqliteContext(\"test.db\")\ndb = Database(ctx)\n</pre>\n<p><strong>connect mysql</strong></p>\n<pre>ctx = MySqlContext(username=\"name\", password=\"pwd\", hostname=\"localhost\", db=\"test\")\ndb = Database(ctx)\n</pre>\n</div>\n<div id=\"query\">\n<h3>Query</h3>\n<p><strong>query a row dict</strong></p>\n<pre>db.foo(\"name=?\", \"tom\").get()\n\n# raw sql\ndb.get(\"select * from foo where name=?\", \"tom\")\n</pre>\n<p><strong>query many rows</strong></p>\n<pre>db.foo(\"id&gt;?\", 100).orderby(\"id desc\").limit(0,10).query()\n\n# raw sql\ndb.query(\"select * from foo where id&gt;? order by id desc limit 0,100;\", 100)\n</pre>\n<p><strong>query selected cols</strong></p>\n<pre>db.foo.query(\"id, name\")\n\n# raw sql\ndb.query(\"select id, name from foo\")\n</pre>\n</div>\n<div id=\"update\">\n<h3>Update</h3>\n<pre>fdict = dict(name=\"new foo\")\ndb.foo(\"id=?\", 1).update(**fidct)\n\n# raw sql\ndb.execute(\"update foo set name=? where id=?\", \"new foo\", 1)\n</pre>\n</div>\n<div id=\"delete\">\n<h3>Delete</h3>\n<pre>db.foo(\"name like ?\", \"test%\").delete()\n\n# raw sql\ndb.execute(\"delete from foo where name like ?\", \"test%\")\n</pre>\n</div>\n<div id=\"other\">\n<h3>Other</h3>\n<p>see  the test code.</p>\n</div>\n</div>\n<div id=\"reference\">\n<h2>Reference</h2>\n<ul>\n<li>tornado database</li>\n<li><a href=\"http://python.6.n6.nabble.com/CPyUG-tornado-database-py-Python-DAL-td2743761.html\" rel=\"nofollow\">http://python.6.n6.nabble.com/CPyUG-tornado-database-py-Python-DAL-td2743761.html</a> by lee Alexander.</li>\n<li>spring python</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 438595, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 00:45:09 2020"}