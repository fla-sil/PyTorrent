{"info": {"author": "Francesco Banconi", "author_email": "francesco.banconi@canonical.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Topic :: System :: Installation/Setup"], "description": "Juju Git Deploy\n===============\n\nJuju Git Deploy is a Juju plugin which allows for easily deploying services\nfrom local charms hosted on Github.\nMore information about Juju cloud orchestration tool can be found at\nhttps://juju.ubuntu.com/.\n\nThis plugin is mostly intended as a development tool, and can be useful for\ntesting charms which code base lives in Github. For a more comprehensive and\neffective experience, take a look at the `Juju GUI`_, which allows managing\nJuju environments via a user-friendly Web interface, and supports deploying\nlocal charms by dragging and dropping zip archives.\n\nAlso see `Juju Quickstart`_: it is an easy to set up tool that quickly starts\nJuju and the GUI, whether you've never installed Juju or you have an existing\nJuju environment running.\n\n.. _`Juju GUI`: https://juju.ubuntu.com/resources/juju-gui/\n.. _`Juju Quickstart`: https://pypi.python.org/pypi/juju-quickstart/\n\nRequirements\n------------\n\nJuju Git Deploy requires Python >= 3.3 and Juju >= 1.17.7.\n\nPython requirements are listed on the ``requirements.pip`` file.\n\nThis applications does not require git itself to be installed.\n\nInstallation\n------------\n\nThis plugin is registered on PyPI::\n\n    sudo pip3 install juju-git-deploy\n\nGetting started\n---------------\n\nBootstrap your Juju environment::\n\n    juju bootstrap\n\nDeploy a charm from Github::\n\n    juju git-deploy github.com/hatched/ghost-charm\n\nDone!\n\nThe charm above can be deployed also copy/pasting the URL, e.g.::\n\n    juju git-deploy https://github.com/hatched/ghost-charm\n\nOtherwise, it is possible to use the simplified ``{user}/{repo}`` form::\n\n    juju git-deploy hatched/ghost-charm\n\nAt this point, the ``juju status`` command shows that a service is being\ndeployed using the specified local charm.\n\nDeploying a specific git branch\n-------------------------------\n\nTo deploy a specific git branch or reference, append a colon followed by\nthe reference identifier, e.g.::\n\n    juju git-deploy frankban/ghost-charm:develop\n    juju git-deploy https://github.com/frankban/ghost-charm:develop\n\nIf the reference is not specified, the repository's default branch is used\n(usually ``master``).\n\nCharm series\n------------\n\nTo deploy the charm on a specific OS series, provide the ``--series``\n(or ``-s``) argument, e.g.::\n\n    juju git-deploy hatched/ghost-charm -s trusty\n\nIf ``--series`` is not specified the default environment series is used.\n\nService name\n------------\n\nThe service name can be provided as second positional argument::\n\n    juju git-deploy hatched/ghost-charm:develop ghost-develop\n\nIf omitted, the service name is derived from the charm name.\n\nAdditional options\n------------------\n\nOther options include ``-e`` to select the Juju environment, ``--to`` and\n``--num-units``. See the plugin help by running::\n\n    juju help git-deploy\n\nTODO\n----\n\nSupport ``--constraints``.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frankban/juju-git-deploy", "keywords": "juju git-deploy plugin github", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "juju-git-deploy", "package_url": "https://pypi.org/project/juju-git-deploy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/juju-git-deploy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/frankban/juju-git-deploy"}, "release_url": "https://pypi.org/project/juju-git-deploy/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Deploy Juju services from local charms hosted on Github.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Juju Git Deploy is a Juju plugin which allows for easily deploying services\nfrom local charms hosted on Github.\nMore information about Juju cloud orchestration tool can be found at\n<a href=\"https://juju.ubuntu.com/\" rel=\"nofollow\">https://juju.ubuntu.com/</a>.</p>\n<p>This plugin is mostly intended as a development tool, and can be useful for\ntesting charms which code base lives in Github. For a more comprehensive and\neffective experience, take a look at the <a href=\"https://juju.ubuntu.com/resources/juju-gui/\" rel=\"nofollow\">Juju GUI</a>, which allows managing\nJuju environments via a user-friendly Web interface, and supports deploying\nlocal charms by dragging and dropping zip archives.</p>\n<p>Also see <a href=\"https://pypi.python.org/pypi/juju-quickstart/\" rel=\"nofollow\">Juju Quickstart</a>: it is an easy to set up tool that quickly starts\nJuju and the GUI, whether you\u2019ve never installed Juju or you have an existing\nJuju environment running.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Juju Git Deploy requires Python &gt;= 3.3 and Juju &gt;= 1.17.7.</p>\n<p>Python requirements are listed on the <tt>requirements.pip</tt> file.</p>\n<p>This applications does not require git itself to be installed.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This plugin is registered on PyPI:</p>\n<pre>sudo pip3 install juju-git-deploy\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Bootstrap your Juju environment:</p>\n<pre>juju bootstrap\n</pre>\n<p>Deploy a charm from Github:</p>\n<pre>juju git-deploy github.com/hatched/ghost-charm\n</pre>\n<p>Done!</p>\n<p>The charm above can be deployed also copy/pasting the URL, e.g.:</p>\n<pre>juju git-deploy https://github.com/hatched/ghost-charm\n</pre>\n<p>Otherwise, it is possible to use the simplified <tt><span class=\"pre\">{user}/{repo}</span></tt> form:</p>\n<pre>juju git-deploy hatched/ghost-charm\n</pre>\n<p>At this point, the <tt>juju status</tt> command shows that a service is being\ndeployed using the specified local charm.</p>\n</div>\n<div id=\"deploying-a-specific-git-branch\">\n<h2>Deploying a specific git branch</h2>\n<p>To deploy a specific git branch or reference, append a colon followed by\nthe reference identifier, e.g.:</p>\n<pre>juju git-deploy frankban/ghost-charm:develop\njuju git-deploy https://github.com/frankban/ghost-charm:develop\n</pre>\n<p>If the reference is not specified, the repository\u2019s default branch is used\n(usually <tt>master</tt>).</p>\n</div>\n<div id=\"charm-series\">\n<h2>Charm series</h2>\n<p>To deploy the charm on a specific OS series, provide the <tt><span class=\"pre\">--series</span></tt>\n(or <tt><span class=\"pre\">-s</span></tt>) argument, e.g.:</p>\n<pre>juju git-deploy hatched/ghost-charm -s trusty\n</pre>\n<p>If <tt><span class=\"pre\">--series</span></tt> is not specified the default environment series is used.</p>\n</div>\n<div id=\"service-name\">\n<h2>Service name</h2>\n<p>The service name can be provided as second positional argument:</p>\n<pre>juju git-deploy hatched/ghost-charm:develop ghost-develop\n</pre>\n<p>If omitted, the service name is derived from the charm name.</p>\n</div>\n<div id=\"additional-options\">\n<h2>Additional options</h2>\n<p>Other options include <tt><span class=\"pre\">-e</span></tt> to select the Juju environment, <tt><span class=\"pre\">--to</span></tt> and\n<tt><span class=\"pre\">--num-units</span></tt>. See the plugin help by running:</p>\n<pre>juju help git-deploy\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>Support <tt><span class=\"pre\">--constraints</span></tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1053718, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4429732ff1beae0498479142af628a6f", "sha256": "7679e2907a3f42cceecff4e29c0f194e5ff5b170ec5db2afb7e78876c50d703c"}, "downloads": -1, "filename": "juju-git-deploy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4429732ff1beae0498479142af628a6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29672, "upload_time": "2014-04-07T12:46:42", "upload_time_iso_8601": "2014-04-07T12:46:42.247947Z", "url": "https://files.pythonhosted.org/packages/b3/86/a904ba3d91f79104163ef53aadbc7bcd549a14b4cd124b51d1765c54fab1/juju-git-deploy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "51ccac6303213f56445b56f0e3aa129b", "sha256": "1d2354f77e9e6dc67817cc128ac700a2ff15d93d797b3ea36244c8c083e56fe8"}, "downloads": -1, "filename": "juju-git-deploy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "51ccac6303213f56445b56f0e3aa129b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30051, "upload_time": "2014-04-07T14:12:02", "upload_time_iso_8601": "2014-04-07T14:12:02.382689Z", "url": "https://files.pythonhosted.org/packages/0b/d2/72a6de8c7a8a83c626dafc77a1f1b9ee01e336ecf22660acfc89eb9b6cab/juju-git-deploy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51ccac6303213f56445b56f0e3aa129b", "sha256": "1d2354f77e9e6dc67817cc128ac700a2ff15d93d797b3ea36244c8c083e56fe8"}, "downloads": -1, "filename": "juju-git-deploy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "51ccac6303213f56445b56f0e3aa129b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30051, "upload_time": "2014-04-07T14:12:02", "upload_time_iso_8601": "2014-04-07T14:12:02.382689Z", "url": "https://files.pythonhosted.org/packages/0b/d2/72a6de8c7a8a83c626dafc77a1f1b9ee01e336ecf22660acfc89eb9b6cab/juju-git-deploy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:26 2020"}