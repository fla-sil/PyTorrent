{"info": {"author": "Simon van Meegdenburg", "author_email": "simonvm@live.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: SQL", "Topic :: Database"], "description": "Are you finding yourself writing long strings to build up a SQL query in python\nto communicate with your SQL database? Then **sql_queries** is what you are looking for.\nThis package provides you with tools to build simple SQL queries from the ground up,\nwithout having to manually type out formatted spaghetti strings over and over again. \nWith this module, you'll no longer need codeblocks like this to write your queries :\n\n```python\nfield = 'x'\ntable = 'a'\ncond = 10\n\nquery = 'SELECT {} FROM {} WHERE {} = {}'.format(field, table, field, cond)\n```\n\nAnd this is only a simple example. \nThe **sql_queries** equivalent of the above looks like this:\n\n```python\nfrom sql_query import sql_select\n\nquery = sql_select('x', 'a')\nquery.where(attr='x', cond=10)\n```\n\nA simple *SELECT-FROM-WHERE* example has been demonstrated above with the **sql_select** object.\nThis object also supports *GROUP BY*, *HAVING*, *ORDER BY*, *LIMIT* and *JOIN* statements.\nThere is also the **sql_update** object, which supports *UPDATE*, *SET* and *WHERE* statements.\nReview the documentation to get a better understanding of how to implement these statements.\nFor a quick demo you can also view to one minute demo's to get you started with this module.\nThese can be found on [youtube](https://www.youtube.com/playlist?list=PLI4WFrsrAg8sCeBj5xdJ6n79_3Yq3Sz23).\n\nConvert a **sql_query** (sub)object to a string using the build-in str() function to get your \nSQL query as text. The result can be used directly in for example pandas' *pd.read_sql_query()*\nor sqlalchemy's *engine.execute(text())* methods.\n\n### Known limitations for this version:\n* Exceptions haven't yet been properly implemented.\n* The .join method can only be used in combination with loading plain field (e.g. using COUNT(FieldX) in the SELECT statement will result in an invalid query)\n* The module has only been properly tested with a SQLite3 database.\n\n### Tutorial video's\nA series of one minute demo's to get started with this module can be found on [youtube](https://www.youtube.com/playlist?list=PLI4WFrsrAg8sCeBj5xdJ6n79_3Yq3Sz23).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/sql-queries/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sql-queries", "package_url": "https://pypi.org/project/sql-queries/", "platform": "", "project_url": "https://pypi.org/project/sql-queries/", "project_urls": {"Homepage": "https://pypi.org/project/sql-queries/"}, "release_url": "https://pypi.org/project/sql-queries/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Build simple SQL queries fast and clean", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Are you finding yourself writing long strings to build up a SQL query in python\nto communicate with your SQL database? Then <strong>sql_queries</strong> is what you are looking for.\nThis package provides you with tools to build simple SQL queries from the ground up,\nwithout having to manually type out formatted spaghetti strings over and over again.\nWith this module, you'll no longer need codeblocks like this to write your queries :</p>\n<pre><span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"s1\">'x'</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"s1\">'a'</span>\n<span class=\"n\">cond</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'SELECT </span><span class=\"si\">{}</span><span class=\"s1\"> FROM </span><span class=\"si\">{}</span><span class=\"s1\"> WHERE </span><span class=\"si\">{}</span><span class=\"s1\"> = </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">cond</span><span class=\"p\">)</span>\n</pre>\n<p>And this is only a simple example.\nThe <strong>sql_queries</strong> equivalent of the above looks like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sql_query</span> <span class=\"kn\">import</span> <span class=\"n\">sql_select</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">sql_select</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">)</span>\n<span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">attr</span><span class=\"o\">=</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">cond</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>A simple <em>SELECT-FROM-WHERE</em> example has been demonstrated above with the <strong>sql_select</strong> object.\nThis object also supports <em>GROUP BY</em>, <em>HAVING</em>, <em>ORDER BY</em>, <em>LIMIT</em> and <em>JOIN</em> statements.\nThere is also the <strong>sql_update</strong> object, which supports <em>UPDATE</em>, <em>SET</em> and <em>WHERE</em> statements.\nReview the documentation to get a better understanding of how to implement these statements.\nFor a quick demo you can also view to one minute demo's to get you started with this module.\nThese can be found on <a href=\"https://www.youtube.com/playlist?list=PLI4WFrsrAg8sCeBj5xdJ6n79_3Yq3Sz23\" rel=\"nofollow\">youtube</a>.</p>\n<p>Convert a <strong>sql_query</strong> (sub)object to a string using the build-in str() function to get your\nSQL query as text. The result can be used directly in for example pandas' <em>pd.read_sql_query()</em>\nor sqlalchemy's <em>engine.execute(text())</em> methods.</p>\n<h3>Known limitations for this version:</h3>\n<ul>\n<li>Exceptions haven't yet been properly implemented.</li>\n<li>The .join method can only be used in combination with loading plain field (e.g. using COUNT(FieldX) in the SELECT statement will result in an invalid query)</li>\n<li>The module has only been properly tested with a SQLite3 database.</li>\n</ul>\n<h3>Tutorial video's</h3>\n<p>A series of one minute demo's to get started with this module can be found on <a href=\"https://www.youtube.com/playlist?list=PLI4WFrsrAg8sCeBj5xdJ6n79_3Yq3Sz23\" rel=\"nofollow\">youtube</a>.</p>\n\n          </div>"}, "last_serial": 7150804, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "58b5bcf1d7a4c2bca3abb8b92ea32963", "sha256": "961efb1e7197f57a8477e1a4e28db7e56e638ee82be0df875514d4feb20bdf23"}, "downloads": -1, "filename": "sql_queries-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "58b5bcf1d7a4c2bca3abb8b92ea32963", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20193, "upload_time": "2020-04-26T11:50:51", "upload_time_iso_8601": "2020-04-26T11:50:51.245076Z", "url": "https://files.pythonhosted.org/packages/3b/6d/84693f7f1832b0ef8e1425889b34181f9ff41a5d29f7eaf9d9aa76895f44/sql_queries-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e93a716362f486c1c87a0efa6f2ac0b", "sha256": "f194fc7b530d522da79dec1d41c9fc76c2f0f20737a9c567e2b7a69b5466a211"}, "downloads": -1, "filename": "sql_queries-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3e93a716362f486c1c87a0efa6f2ac0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7569, "upload_time": "2020-04-26T11:50:52", "upload_time_iso_8601": "2020-04-26T11:50:52.988377Z", "url": "https://files.pythonhosted.org/packages/77/28/650466032896dd4d0e6c10196e3f857a7550f95a8401ce4d8814b0e4c54d/sql_queries-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "aeeeb574c530e86639f7c0b74418803d", "sha256": "f391ca11efbe355d47fae2eb79d045a27f41509f0cc26ec8a469f589baa844f8"}, "downloads": -1, "filename": "sql_queries-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aeeeb574c530e86639f7c0b74418803d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20198, "upload_time": "2020-04-26T11:54:36", "upload_time_iso_8601": "2020-04-26T11:54:36.947382Z", "url": "https://files.pythonhosted.org/packages/0c/53/24df0f5e44d50077bc492272fb9f33b793253712a744a198ae78ab65a7de/sql_queries-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbd48a864f1b9622b456a639330ee3ad", "sha256": "0e12c5865333b121e113219a993529b6a1361b0ed1cd0bf404e8035326c499c5"}, "downloads": -1, "filename": "sql_queries-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cbd48a864f1b9622b456a639330ee3ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7570, "upload_time": "2020-04-26T11:54:38", "upload_time_iso_8601": "2020-04-26T11:54:38.042226Z", "url": "https://files.pythonhosted.org/packages/4d/ff/01a39c64ebb25666c9a721992a2f2219d6943bb77c55e4afa8713d827888/sql_queries-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c2bd778dec9f54c7ff9e30243f6a39ba", "sha256": "2f98db70aff1dd97975010d9c65359f86d8f46fa535924f8c180241e1b065a27"}, "downloads": -1, "filename": "sql_queries-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2bd778dec9f54c7ff9e30243f6a39ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20238, "upload_time": "2020-05-02T10:37:15", "upload_time_iso_8601": "2020-05-02T10:37:15.049468Z", "url": "https://files.pythonhosted.org/packages/10/d2/f51e83260faeea03ddf0c033801a674efc038fc3cb442f74de4c46da2579/sql_queries-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59b9aa189f8b47ed8b2374570e7f40a1", "sha256": "7210452ab2c746f84a39b0e29baaeab0c456e207c735ff24db2a62a298809592"}, "downloads": -1, "filename": "sql_queries-0.1.2.tar.gz", "has_sig": false, "md5_digest": "59b9aa189f8b47ed8b2374570e7f40a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7620, "upload_time": "2020-05-02T10:37:16", "upload_time_iso_8601": "2020-05-02T10:37:16.221432Z", "url": "https://files.pythonhosted.org/packages/44/8b/39110589bbe30163ca4533db0833b892c3397a89f9a49e86f511cce574ad/sql_queries-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2bd778dec9f54c7ff9e30243f6a39ba", "sha256": "2f98db70aff1dd97975010d9c65359f86d8f46fa535924f8c180241e1b065a27"}, "downloads": -1, "filename": "sql_queries-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2bd778dec9f54c7ff9e30243f6a39ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20238, "upload_time": "2020-05-02T10:37:15", "upload_time_iso_8601": "2020-05-02T10:37:15.049468Z", "url": "https://files.pythonhosted.org/packages/10/d2/f51e83260faeea03ddf0c033801a674efc038fc3cb442f74de4c46da2579/sql_queries-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59b9aa189f8b47ed8b2374570e7f40a1", "sha256": "7210452ab2c746f84a39b0e29baaeab0c456e207c735ff24db2a62a298809592"}, "downloads": -1, "filename": "sql_queries-0.1.2.tar.gz", "has_sig": false, "md5_digest": "59b9aa189f8b47ed8b2374570e7f40a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7620, "upload_time": "2020-05-02T10:37:16", "upload_time_iso_8601": "2020-05-02T10:37:16.221432Z", "url": "https://files.pythonhosted.org/packages/44/8b/39110589bbe30163ca4533db0833b892c3397a89f9a49e86f511cce574ad/sql_queries-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:35 2020"}