{"info": {"author": "Gavin M. Roy", "author_email": "gavinmroy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Communications", "Topic :: Internet", "Topic :: Software Development"], "description": "aiorabbit\n=========\naiorabbit is an opinionated AsyncIO RabbitMQ client for `Python 3 <https://www.python.org/>`_ (3.7+).\n\n|Version| |Status| |Coverage| |License|\n\nProject Goals\n-------------\n- To create a simple, robust `RabbitMQ <https://rabbitmq.com>`_ client library for `AsyncIO <https://docs.python.org/3/library/asyncio.html>`_ development in Python 3.\n- To make use of new features and capabilities in Python 3.7+.\n- Remove some complexity in using an `AMQP <https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol>`_ client by:\n   - Abstracting away the AMQP channel and use it only as a protocol coordination mechanism inside the client.\n   - Remove the `nowait <https://www.rabbitmq.com/amqp-0-9-1-reference.html#domain.no-wait>`_ keyword to ensure a single round-trip pattern of behavior for client usage.\n- To automatically reconnect when a connection is closed due to an AMQP exception/error.\n\n  *When such a behavior is encountered, the exception is raised, but the client continues to operate if the user catches and logs the error.*\n- To automatically create a new channel when the channel is closed due to an AMQP exception/error.\n\n  *When such a behavior is encountered, the exception is raised, but the client continues to operate if the user catches and logs the error.*\n- To ensure correctness of API usage, including values passed to RabbitMQ in AMQ method calls.\n\nExample Use\n-----------\nThe following demonstrates an example of using the library to publish a message with publisher confirmations enabled:\n\n.. code-block:: python\n\n    import asyncio\n    import datetime\n    import uuid\n\n    import aiorabbit\n\n    RABBITMQ_URL = 'amqps://guest:guest@localhost:5672/%2f'\n\n\n    async def main():\n        async with aiorabbit.connect(RABBITMQ_URL) as client:\n            await client.confirm_select()\n            if not await client.publish(\n                    'exchange',\n                    'routing-key',\n                    'message-body',\n                    app_id='example',\n                    message_id=str(uuid.uuid4()),\n                    timestamp=datetime.datetime.utcnow()):\n                print('Publishing failure')\n\n    if __name__ == '__main__':\n        asyncio.get_event_loop().run_until_complete(main())\n\nDocumentation\n-------------\nhttp://aiorabbit.readthedocs.org\n\nLicense\n-------\nCopyright (c) 2019-2020 Gavin M. Roy\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n* Neither the name of the copyright holder nor the names of its contributors may\n  be used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nPython Versions Supported\n-------------------------\n3.7+\n\n.. |Version| image:: https://img.shields.io/pypi/v/aiorabbit.svg?\n   :target: https://pypi.python.org/pypi/aiorabbit\n\n.. |Status| image:: https://github.com/gmr/aiorabbit/workflows/Testing/badge.svg?\n   :target: https://github.com/gmr/aiorabbit/actions?workflow=Testing\n   :alt: Build Status\n\n.. |Coverage| image:: https://img.shields.io/codecov/c/github/gmr/aiorabbit.svg?\n   :target: https://codecov.io/github/gmr/aiorabbit?branch=master\n\n.. |License| image:: https://img.shields.io/pypi/l/aiorabbit.svg?\n   :target: https://aiorabbit.readthedocs.org", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gmr/aiorabbit", "keywords": "amqp,rabbitmq", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "aiorabbit", "package_url": "https://pypi.org/project/aiorabbit/", "platform": "", "project_url": "https://pypi.org/project/aiorabbit/", "project_urls": {"Bug Tracker": "https://github.com/gmr/aiorabbit/issues", "Documentation": "https://aiorabbit.readthedocs.io", "Homepage": "https://github.com/gmr/aiorabbit", "Source Code": "https://github.com/gmr/aiorabbit/"}, "release_url": "https://pypi.org/project/aiorabbit/1.0.0a1/", "requires_dist": null, "requires_python": "", "summary": "An AsyncIO RabbitMQ Client Library", "version": "1.0.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>aiorabbit is an opinionated AsyncIO RabbitMQ client for <a href=\"https://www.python.org/\" rel=\"nofollow\">Python 3</a> (3.7+).</p>\n<p><a href=\"https://pypi.python.org/pypi/aiorabbit\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81051ee579dac2a6a670c683ab58f86dbdcbb78b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f7261626269742e7376673f\"></a> <a href=\"https://github.com/gmr/aiorabbit/actions?workflow=Testing\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d08d44cea232ecfe75ee43924f79a85f23c0a371/68747470733a2f2f6769746875622e636f6d2f676d722f61696f7261626269742f776f726b666c6f77732f54657374696e672f62616467652e7376673f\"></a> <a href=\"https://codecov.io/github/gmr/aiorabbit?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a129445b0e60a418a29f497ae2b7ae404b2ef4d3/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f676d722f61696f7261626269742e7376673f\"></a> <a href=\"https://aiorabbit.readthedocs.org\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f5f5c14e97886609ecfd229bbbf517ee21fe46e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61696f7261626269742e7376673f\"></a></p>\n<div id=\"project-goals\">\n<h2>Project Goals</h2>\n<ul>\n<li><p>To create a simple, robust <a href=\"https://rabbitmq.com\" rel=\"nofollow\">RabbitMQ</a> client library for <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">AsyncIO</a> development in Python 3.</p>\n</li>\n<li><p>To make use of new features and capabilities in Python 3.7+.</p>\n</li>\n<li><dl>\n<dt>Remove some complexity in using an <a href=\"https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol\" rel=\"nofollow\">AMQP</a> client by:</dt>\n<dd><ul>\n<li>Abstracting away the AMQP channel and use it only as a protocol coordination mechanism inside the client.</li>\n<li>Remove the <a href=\"https://www.rabbitmq.com/amqp-0-9-1-reference.html#domain.no-wait\" rel=\"nofollow\">nowait</a> keyword to ensure a single round-trip pattern of behavior for client usage.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p>To automatically reconnect when a connection is closed due to an AMQP exception/error.</p>\n<p><em>When such a behavior is encountered, the exception is raised, but the client continues to operate if the user catches and logs the error.</em></p>\n</li>\n<li><p>To automatically create a new channel when the channel is closed due to an AMQP exception/error.</p>\n<p><em>When such a behavior is encountered, the exception is raised, but the client continues to operate if the user catches and logs the error.</em></p>\n</li>\n<li><p>To ensure correctness of API usage, including values passed to RabbitMQ in AMQ method calls.</p>\n</li>\n</ul>\n</div>\n<div id=\"example-use\">\n<h2>Example Use</h2>\n<p>The following demonstrates an example of using the library to publish a message with publisher confirmations enabled:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">aiorabbit</span>\n\n<span class=\"n\">RABBITMQ_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'amqps://guest:guest@localhost:5672/</span><span class=\"si\">%2f</span><span class=\"s1\">'</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiorabbit</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">RABBITMQ_URL</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">confirm_select</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span>\n                <span class=\"s1\">'exchange'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'routing-key'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'message-body'</span><span class=\"p\">,</span>\n                <span class=\"n\">app_id</span><span class=\"o\">=</span><span class=\"s1\">'example'</span><span class=\"p\">,</span>\n                <span class=\"n\">message_id</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()),</span>\n                <span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">utcnow</span><span class=\"p\">()):</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Publishing failure'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"http://aiorabbit.readthedocs.org\" rel=\"nofollow\">http://aiorabbit.readthedocs.org</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2019-2020 Gavin M. Roy\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:</p>\n<ul>\n<li>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.</li>\n<li>Neither the name of the copyright holder nor the names of its contributors may\nbe used to endorse or promote products derived from this software without\nspecific prior written permission.</li>\n</ul>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n<div id=\"python-versions-supported\">\n<h2>Python Versions Supported</h2>\n<p>3.7+</p>\n</div>\n\n          </div>"}, "last_serial": 6892623, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "797f06c2c8bb00baadb845764e882f43", "sha256": "35befc70077e7499503fd139f624787548a428246f9e16b34e7a705586295ac5"}, "downloads": -1, "filename": "aiorabbit-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "797f06c2c8bb00baadb845764e882f43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13964, "upload_time": "2020-01-18T23:03:58", "upload_time_iso_8601": "2020-01-18T23:03:58.322601Z", "url": "https://files.pythonhosted.org/packages/39/d2/195c9fa9eae02b1b1572df3c5eba80a4f49f5d714c0a11189f13a5c1ed47/aiorabbit-0.1.0a1.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "6960b390d969e720e0adc0856347c309", "sha256": "9233f1a9e2a3cd14b93b165725e7ae71760bb3b11169a17e46cfbb9d57a96870"}, "downloads": -1, "filename": "aiorabbit-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "6960b390d969e720e0adc0856347c309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28861, "upload_time": "2020-03-26T23:40:25", "upload_time_iso_8601": "2020-03-26T23:40:25.406815Z", "url": "https://files.pythonhosted.org/packages/ec/7e/4d75dd6f26fb769de905e2c25bc67fae73d398773753ac0b48ba9a6eba1a/aiorabbit-1.0.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6960b390d969e720e0adc0856347c309", "sha256": "9233f1a9e2a3cd14b93b165725e7ae71760bb3b11169a17e46cfbb9d57a96870"}, "downloads": -1, "filename": "aiorabbit-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "6960b390d969e720e0adc0856347c309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28861, "upload_time": "2020-03-26T23:40:25", "upload_time_iso_8601": "2020-03-26T23:40:25.406815Z", "url": "https://files.pythonhosted.org/packages/ec/7e/4d75dd6f26fb769de905e2c25bc67fae73d398773753ac0b48ba9a6eba1a/aiorabbit-1.0.0a1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:54 2020"}