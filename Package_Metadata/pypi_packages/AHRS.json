{"info": {"author": "Mario Garcia", "author_email": "mario.garcia@tum.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Embedded Systems", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# AHRS: Attitude and Heading Reference Systems\n\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/Mayitzin/ahrs/Build%20Python%20Package)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ahrs)\n![PyPI - License](https://img.shields.io/pypi/l/ahrs)\n![PyPI](https://img.shields.io/pypi/v/ahrs)\n![PyPI Downloads](https://pepy.tech/badge/ahrs)\n\nAHRS is a zoo of functions and objects written in Python helping you to estimate the orientation and position of robotic systems.\n\nOrginally, an [AHRS](https://en.wikipedia.org/wiki/Attitude_and_heading_reference_system) is defined as a set of orthogonal sensors providing attitude information about an aircraft. This field is now expanding to smaller devices, like wearables, automated transportation and all kinds of robots in motion.\n\nThe module __AHRS__ is developed with a focus on fast prototyping and easy modularity.\n\nAHRS is compatible with __Python 3.6__ and above.\n\n## Installation\n\nAHRS may be installed using [pip](https://pip.pypa.io):\n\n```\npip install ahrs\n```\n\nOr directly from the repository:\n\n```\ngit clone https://github.com/Mayitzin/ahrs.git\ncd ahrs\npython setup.py install\n```\n\nAHRS depends on the most distributed packages of scientifc Python environments ([NumPy](https://numpy.org/), [SciPy](https://www.scipy.org/) and [matplotlib](https://matplotlib.org/)). If you don't have them, they will be automatically downloaded and installed.\n\n## Using AHRS\n\nTo play with orientations, for example, we can use the `orientation` module.\n\n```py\n>>> from ahrs.common import orientation\n>>> # Rotation product: R_y(10.0) @ R_x(20.0) @ R_y(30.0)\n... Rx = orientation.rotation('x', 10.0)\n>>> Ry = orientation.rotation('y', 20.0)\n>>> Rz = orientation.rotation('z', 30.0)\n>>> Rx@Ry@Rz\narray([[ 0.81379768 -0.46984631  0.34202014]\n       [ 0.54383814  0.82317294 -0.16317591]\n       [-0.20487413  0.31879578  0.92541658]])\n>>> # Same rotation sequence but with single call to rot_seq()\n... orientation.rot_seq('xyz', [10.0, 20.0, 30.0])\narray([[ 0.81379768 -0.46984631  0.34202014]\n       [ 0.54383814  0.82317294 -0.16317591]\n       [-0.20487413  0.31879578  0.92541658]])\n```\n\nIt now includes the class `Quaternion` to easily handle the orientation estimation with quaternions.\n\n```py\n>>> from ahrs import Quaternion\n>>> q1 = Quaternion()\n>>> str(q1)          # Empty quaternions default to identity quaternion\n'(1.0000 +0.0000i +0.0000j +0.0000k)'\n>>> q2 = Quaternion([1.0, 2.0, 3.0])\n>>> str(q2)          # 3-element vectors build pure quaternions\n'(0.0000 +0.2673i +0.5345j +0.8018k)'\n>>> q3 = Quaternion([1., 2., 3., 4.])\n>>> str(q3)          # All quaternions are normalized\n'(0.1826 +0.3651i +0.5477j +0.7303k)'\n>>> str(q2+q3)       # Use normal arithmetic operators\n'(0.0918 +0.3181i +0.5444j +0.7707k)'\n>>> q2.product(q3)   # Quaternion products are supported\narray([-0.97590007,  0.        ,  0.19518001,  0.09759001])\n>>> str(q2*q3)\n'(-0.9759 +0.0000i +0.1952j +0.0976k)'\n>>> q2.to_DCM()      # Conversions between representations are also implemented\narray([[-0.85714286,  0.28571429,  0.42857143],\n       [ 0.28571429, -0.42857143,  0.85714286],\n       [ 0.42857143,  0.85714286,  0.28571429]])\n```\n\nAnd many other quaternion operations, properties and methods are also available.\n\n`ahrs` includes a sub-module that simplifies data loading and visualization using `matplotlib` as plot engine.\n\n```py\n>>> data = ahrs.utils.io.load(\"ExampleData.mat\")\n>>> ahrs.utils.plot_sensors(data.gyr)\n```\n\n![Simple Sensor Plotting](plot_sensors_simple_screenshot.png)\n\nIt is possible to render more sensors with different subplots, and even titling them.\n\n```py\n>>> ahrs.utils.plot_sensors(data.gyr, data.acc, data.mag,\n        x_axis=data.time, subtitles=[\"Gyroscopes\", \"Accelerometers\", \"Magnetometers\"])\n```\n\n![Full Sensor Plotting](plot_sensors_screenshot.png)\n\nTo use the sensor data to estimate the attitude, the `filters` module includes various (more coming) algorithms for it.\n\n```py\n>>> madgwick = ahrs.filters.Madgwick()    # Madgwick's attitude estimation using default values\n>>> Q = np.tile([1., 0., 0., 0.], (data.num_samples, 1)) # Allocate an array for all quaternions\n>>> d2g = ahrs.common.DEG2RAD   # Constant to convert degrees to radians\n>>> for t in range(1, data.num_samples):\n...     Q[t] = madgwick.updateMARG(Q[t-1], d2g*data.gyr[t], data.acc[t], data.mag[t])\n...\n>>> ahrs.utils.plot_quaternions(Q)\n```\n\n![Quaternion Plotting](plot_quaternions_screenshot.png)\n\nAlso works by simply passing the data to a desired filter, and it will automatically try to load the sensor information and estimate the quaternions with the given parameters.\n\n```py\n>>> orientation = ahrs.filters.Madgwick(data, beta=0.1, frequency=100.0)\n>>> orientation.Q.shape\n(6959, 4)\n```\n\n## Documentation\n\nA comprehensive documentation, with examples, will soon come to [Read the Docs](https://docs.readthedocs.io/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Mayitzin/ahrs/archive/master/ahrs-master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Mayitzin/ahrs/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "AHRS", "package_url": "https://pypi.org/project/AHRS/", "platform": "", "project_url": "https://pypi.org/project/AHRS/", "project_urls": {"Bug Tracker": "https://github.com/Mayitzin/ahrs/issues", "Download": "https://github.com/Mayitzin/ahrs/archive/master/ahrs-master.zip", "Homepage": "https://github.com/Mayitzin/ahrs/"}, "release_url": "https://pypi.org/project/AHRS/0.2.2/", "requires_dist": ["numpy", "scipy", "matplotlib"], "requires_python": "", "summary": "Attitude and Heading Reference Systems.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AHRS: Attitude and Heading Reference Systems</h1>\n<p><img alt=\"GitHub Workflow Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a3d0362de7518489ec5cd8d4baf430ec1263a3b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f4d617969747a696e2f616872732f4275696c64253230507974686f6e2532305061636b616765\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/108d774c3e778f39050848563971a4e7865a3415/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61687273\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9076b918040d75e0838b486cab3fdc1ae6a6bf5a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61687273\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32a14a5d9214f3eba53fac0c773b58b636c46447/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61687273\">\n<img alt=\"PyPI Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dde8ab3e428b7ea632ff2e939af783fb36b28600/68747470733a2f2f706570792e746563682f62616467652f61687273\"></p>\n<p>AHRS is a zoo of functions and objects written in Python helping you to estimate the orientation and position of robotic systems.</p>\n<p>Orginally, an <a href=\"https://en.wikipedia.org/wiki/Attitude_and_heading_reference_system\" rel=\"nofollow\">AHRS</a> is defined as a set of orthogonal sensors providing attitude information about an aircraft. This field is now expanding to smaller devices, like wearables, automated transportation and all kinds of robots in motion.</p>\n<p>The module <strong>AHRS</strong> is developed with a focus on fast prototyping and easy modularity.</p>\n<p>AHRS is compatible with <strong>Python 3.6</strong> and above.</p>\n<h2>Installation</h2>\n<p>AHRS may be installed using <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>pip install ahrs\n</code></pre>\n<p>Or directly from the repository:</p>\n<pre><code>git clone https://github.com/Mayitzin/ahrs.git\ncd ahrs\npython setup.py install\n</code></pre>\n<p>AHRS depends on the most distributed packages of scientifc Python environments (<a href=\"https://numpy.org/\" rel=\"nofollow\">NumPy</a>, <a href=\"https://www.scipy.org/\" rel=\"nofollow\">SciPy</a> and <a href=\"https://matplotlib.org/\" rel=\"nofollow\">matplotlib</a>). If you don't have them, they will be automatically downloaded and installed.</p>\n<h2>Using AHRS</h2>\n<p>To play with orientations, for example, we can use the <code>orientation</code> module.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">ahrs.common</span> <span class=\"kn\">import</span> <span class=\"n\">orientation</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Rotation product: R_y(10.0) @ R_x(20.0) @ R_y(30.0)</span>\n<span class=\"o\">...</span> <span class=\"n\">Rx</span> <span class=\"o\">=</span> <span class=\"n\">orientation</span><span class=\"o\">.</span><span class=\"n\">rotation</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"mf\">10.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Ry</span> <span class=\"o\">=</span> <span class=\"n\">orientation</span><span class=\"o\">.</span><span class=\"n\">rotation</span><span class=\"p\">(</span><span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"mf\">20.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Rz</span> <span class=\"o\">=</span> <span class=\"n\">orientation</span><span class=\"o\">.</span><span class=\"n\">rotation</span><span class=\"p\">(</span><span class=\"s1\">'z'</span><span class=\"p\">,</span> <span class=\"mf\">30.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Rx</span><span class=\"nd\">@Ry@Rz</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">0.81379768</span> <span class=\"o\">-</span><span class=\"mf\">0.46984631</span>  <span class=\"mf\">0.34202014</span><span class=\"p\">]</span>\n       <span class=\"p\">[</span> <span class=\"mf\">0.54383814</span>  <span class=\"mf\">0.82317294</span> <span class=\"o\">-</span><span class=\"mf\">0.16317591</span><span class=\"p\">]</span>\n       <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.20487413</span>  <span class=\"mf\">0.31879578</span>  <span class=\"mf\">0.92541658</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Same rotation sequence but with single call to rot_seq()</span>\n<span class=\"o\">...</span> <span class=\"n\">orientation</span><span class=\"o\">.</span><span class=\"n\">rot_seq</span><span class=\"p\">(</span><span class=\"s1\">'xyz'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"mf\">20.0</span><span class=\"p\">,</span> <span class=\"mf\">30.0</span><span class=\"p\">])</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">0.81379768</span> <span class=\"o\">-</span><span class=\"mf\">0.46984631</span>  <span class=\"mf\">0.34202014</span><span class=\"p\">]</span>\n       <span class=\"p\">[</span> <span class=\"mf\">0.54383814</span>  <span class=\"mf\">0.82317294</span> <span class=\"o\">-</span><span class=\"mf\">0.16317591</span><span class=\"p\">]</span>\n       <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.20487413</span>  <span class=\"mf\">0.31879578</span>  <span class=\"mf\">0.92541658</span><span class=\"p\">]])</span>\n</pre>\n<p>It now includes the class <code>Quaternion</code> to easily handle the orientation estimation with quaternions.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">ahrs</span> <span class=\"kn\">import</span> <span class=\"n\">Quaternion</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q1</span> <span class=\"o\">=</span> <span class=\"n\">Quaternion</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">q1</span><span class=\"p\">)</span>          <span class=\"c1\"># Empty quaternions default to identity quaternion</span>\n<span class=\"s1\">'(1.0000 +0.0000i +0.0000j +0.0000k)'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span> <span class=\"o\">=</span> <span class=\"n\">Quaternion</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">q2</span><span class=\"p\">)</span>          <span class=\"c1\"># 3-element vectors build pure quaternions</span>\n<span class=\"s1\">'(0.0000 +0.2673i +0.5345j +0.8018k)'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q3</span> <span class=\"o\">=</span> <span class=\"n\">Quaternion</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">q3</span><span class=\"p\">)</span>          <span class=\"c1\"># All quaternions are normalized</span>\n<span class=\"s1\">'(0.1826 +0.3651i +0.5477j +0.7303k)'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">q2</span><span class=\"o\">+</span><span class=\"n\">q3</span><span class=\"p\">)</span>       <span class=\"c1\"># Use normal arithmetic operators</span>\n<span class=\"s1\">'(0.0918 +0.3181i +0.5444j +0.7707k)'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span><span class=\"o\">.</span><span class=\"n\">product</span><span class=\"p\">(</span><span class=\"n\">q3</span><span class=\"p\">)</span>   <span class=\"c1\"># Quaternion products are supported</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">0.97590007</span><span class=\"p\">,</span>  <span class=\"mf\">0.</span>        <span class=\"p\">,</span>  <span class=\"mf\">0.19518001</span><span class=\"p\">,</span>  <span class=\"mf\">0.09759001</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">q2</span><span class=\"o\">*</span><span class=\"n\">q3</span><span class=\"p\">)</span>\n<span class=\"s1\">'(-0.9759 +0.0000i +0.1952j +0.0976k)'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span><span class=\"o\">.</span><span class=\"n\">to_DCM</span><span class=\"p\">()</span>      <span class=\"c1\"># Conversions between representations are also implemented</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mf\">0.85714286</span><span class=\"p\">,</span>  <span class=\"mf\">0.28571429</span><span class=\"p\">,</span>  <span class=\"mf\">0.42857143</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">0.28571429</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.42857143</span><span class=\"p\">,</span>  <span class=\"mf\">0.85714286</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">0.42857143</span><span class=\"p\">,</span>  <span class=\"mf\">0.85714286</span><span class=\"p\">,</span>  <span class=\"mf\">0.28571429</span><span class=\"p\">]])</span>\n</pre>\n<p>And many other quaternion operations, properties and methods are also available.</p>\n<p><code>ahrs</code> includes a sub-module that simplifies data loading and visualization using <code>matplotlib</code> as plot engine.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"ExampleData.mat\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">plot_sensors</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">gyr</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Simple Sensor Plotting\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29a0a6ce8c76a8fee963a165db15fa8129572289/706c6f745f73656e736f72735f73696d706c655f73637265656e73686f742e706e67\"></p>\n<p>It is possible to render more sensors with different subplots, and even titling them.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">plot_sensors</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">gyr</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">acc</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">mag</span><span class=\"p\">,</span>\n        <span class=\"n\">x_axis</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">subtitles</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"Gyroscopes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Accelerometers\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Magnetometers\"</span><span class=\"p\">])</span>\n</pre>\n<p><img alt=\"Full Sensor Plotting\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b7721292bd807a64f7bba4d26b4cc11149d2cba/706c6f745f73656e736f72735f73637265656e73686f742e706e67\"></p>\n<p>To use the sensor data to estimate the attitude, the <code>filters</code> module includes various (more coming) algorithms for it.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">madgwick</span> <span class=\"o\">=</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Madgwick</span><span class=\"p\">()</span>    <span class=\"c1\"># Madgwick's attitude estimation using default values</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Q</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">tile</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">num_samples</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"c1\"># Allocate an array for all quaternions</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d2g</span> <span class=\"o\">=</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">DEG2RAD</span>   <span class=\"c1\"># Constant to convert degrees to radians</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">num_samples</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">Q</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">madgwick</span><span class=\"o\">.</span><span class=\"n\">updateMARG</span><span class=\"p\">(</span><span class=\"n\">Q</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">d2g</span><span class=\"o\">*</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">gyr</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">acc</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">mag</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">])</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">plot_quaternions</span><span class=\"p\">(</span><span class=\"n\">Q</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Quaternion Plotting\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3cd910937246c971954e36d2cb703837c68f510/706c6f745f7175617465726e696f6e735f73637265656e73686f742e706e67\"></p>\n<p>Also works by simply passing the data to a desired filter, and it will automatically try to load the sensor information and estimate the quaternions with the given parameters.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">orientation</span> <span class=\"o\">=</span> <span class=\"n\">ahrs</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Madgwick</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"mf\">100.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">orientation</span><span class=\"o\">.</span><span class=\"n\">Q</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"p\">(</span><span class=\"mi\">6959</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre>\n<h2>Documentation</h2>\n<p>A comprehensive documentation, with examples, will soon come to <a href=\"https://docs.readthedocs.io/\" rel=\"nofollow\">Read the Docs</a>.</p>\n\n          </div>"}, "last_serial": 6411317, "releases": {"0.1.2.post2": [{"comment_text": "", "digests": {"md5": "e849d62dec58ddde06185d1b3ee4f5ad", "sha256": "bdb698c0f1ec0334a5fb96616aae55627b14805addc1741e6b7e33924d5556f8"}, "downloads": -1, "filename": "AHRS-0.1.2.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "e849d62dec58ddde06185d1b3ee4f5ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21980, "upload_time": "2019-06-08T23:41:05", "upload_time_iso_8601": "2019-06-08T23:41:05.877555Z", "url": "https://files.pythonhosted.org/packages/c4/1b/804a5a4ddd6bd4dc6aee613e87fac4fee3534487324eb3524a6d8bc43f9e/AHRS-0.1.2.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "522fc0f34cb4316708a631fd7f3ab35e", "sha256": "059ae8b323f6cbee6c6e758ac282d40d55fc0a61e64cd7af0f07f947c751e9dc"}, "downloads": -1, "filename": "AHRS-0.1.2.post2.tar.gz", "has_sig": false, "md5_digest": "522fc0f34cb4316708a631fd7f3ab35e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15976, "upload_time": "2019-06-08T23:41:08", "upload_time_iso_8601": "2019-06-08T23:41:08.306781Z", "url": "https://files.pythonhosted.org/packages/9e/b0/194559fea5b5f60164bf9352bf2bfa20b22d224a91977a788995c4fa4923/AHRS-0.1.2.post2.tar.gz", "yanked": false}], "0.1.2.post3": [{"comment_text": "", "digests": {"md5": "08e4e80ccef2bf196fefb914b945a405", "sha256": "71ea83dafdceb72f6affe897e5e9a04d16c94a1106e16cb15365f8ba40f00afb"}, "downloads": -1, "filename": "AHRS-0.1.2.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "08e4e80ccef2bf196fefb914b945a405", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23900, "upload_time": "2019-06-13T17:02:27", "upload_time_iso_8601": "2019-06-13T17:02:27.634785Z", "url": "https://files.pythonhosted.org/packages/fe/00/6f1e6d5a54a73def322a3c5996e12869b4aa9948c788482a68ec7c18a67e/AHRS-0.1.2.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69c81a9fe42ca835d47150340207bb7c", "sha256": "8d7fe2f796474a431da865c49de0520ed6c961421be1bb84b73d46097d05bf45"}, "downloads": -1, "filename": "AHRS-0.1.2.post3.tar.gz", "has_sig": false, "md5_digest": "69c81a9fe42ca835d47150340207bb7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18029, "upload_time": "2019-06-13T17:02:29", "upload_time_iso_8601": "2019-06-13T17:02:29.862371Z", "url": "https://files.pythonhosted.org/packages/37/fd/41a29f8f491b0b87634a874715f56f6bdaa49202e1701e1c588bbf6129dd/AHRS-0.1.2.post3.tar.gz", "yanked": false}], "0.2.0.post0": [{"comment_text": "", "digests": {"md5": "c52fecade96b276c837445921bb193fc", "sha256": "d02eca3158df1941f72af28201cadfc2eeb4fbdcd7a3f79ad07bac971cc6b8fc"}, "downloads": -1, "filename": "AHRS-0.2.0.post0-py3-none-any.whl", "has_sig": false, "md5_digest": "c52fecade96b276c837445921bb193fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54325, "upload_time": "2019-12-27T19:27:28", "upload_time_iso_8601": "2019-12-27T19:27:28.935022Z", "url": "https://files.pythonhosted.org/packages/c6/53/6ee76fcc9dc72496487a000f93f15d00f14389c2d5fdfb0f53284b05d6dc/AHRS-0.2.0.post0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7624ce3b0874381b8e335d210a6eb864", "sha256": "c8cf2809712cc2ed2891f470f0fb419a229ac8be7b38414af4b28282b9815629"}, "downloads": -1, "filename": "AHRS-0.2.0.post0.tar.gz", "has_sig": false, "md5_digest": "7624ce3b0874381b8e335d210a6eb864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39611, "upload_time": "2019-12-27T19:27:30", "upload_time_iso_8601": "2019-12-27T19:27:30.874710Z", "url": "https://files.pythonhosted.org/packages/15/cc/1cebbd3359046e1a4f4da81feabf1ba1969822c4d47b310ed7285704ca64/AHRS-0.2.0.post0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e35f5f34b3fd62f02379038a2962de68", "sha256": "9cffcd3872d6583f887ec418711b751b64ef5f121166c905d5f45952887dc15d"}, "downloads": -1, "filename": "AHRS-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e35f5f34b3fd62f02379038a2962de68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57970, "upload_time": "2020-01-07T22:09:06", "upload_time_iso_8601": "2020-01-07T22:09:06.763153Z", "url": "https://files.pythonhosted.org/packages/51/34/01fb6b2d188e2943cfa47fad111efda65648e096e20dc06bb4943f8ccb91/AHRS-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9eb3f1abf84abaf3540f60144038f455", "sha256": "6ea684dd24d0a4b39fa12cd932f0e1584c72a1ef612a68808e261e3c1a2021ba"}, "downloads": -1, "filename": "AHRS-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9eb3f1abf84abaf3540f60144038f455", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42246, "upload_time": "2020-01-07T22:09:10", "upload_time_iso_8601": "2020-01-07T22:09:10.046873Z", "url": "https://files.pythonhosted.org/packages/1d/f5/bbe37faf28aad3786869957402ec74fe4ea31bdfc1a6051335eda4e38ac8/AHRS-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e35f5f34b3fd62f02379038a2962de68", "sha256": "9cffcd3872d6583f887ec418711b751b64ef5f121166c905d5f45952887dc15d"}, "downloads": -1, "filename": "AHRS-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e35f5f34b3fd62f02379038a2962de68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57970, "upload_time": "2020-01-07T22:09:06", "upload_time_iso_8601": "2020-01-07T22:09:06.763153Z", "url": "https://files.pythonhosted.org/packages/51/34/01fb6b2d188e2943cfa47fad111efda65648e096e20dc06bb4943f8ccb91/AHRS-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9eb3f1abf84abaf3540f60144038f455", "sha256": "6ea684dd24d0a4b39fa12cd932f0e1584c72a1ef612a68808e261e3c1a2021ba"}, "downloads": -1, "filename": "AHRS-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9eb3f1abf84abaf3540f60144038f455", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42246, "upload_time": "2020-01-07T22:09:10", "upload_time_iso_8601": "2020-01-07T22:09:10.046873Z", "url": "https://files.pythonhosted.org/packages/1d/f5/bbe37faf28aad3786869957402ec74fe4ea31bdfc1a6051335eda4e38ac8/AHRS-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:14 2020"}