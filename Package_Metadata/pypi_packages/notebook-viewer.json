{"info": {"author": "Trey Morris", "author_email": "trey@treymorris.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Apache Software License"], "description": "nbviewer - making the world a better place, with `gister <https://github.com/tr3buchet/gister>`__\n-------------------------------------------------------------------------------------------------\n\nexamples\n~~~~~~~~\n\n::\n\n    # post a secret gist on github and generate an nbviewer url:\n    nbv\n\n    # post a secret gist on github anonymously and generate an nbviewer url:\n    nbv -a\n\n    # edit a gist on github and generate an nbviewer url:\n    nbv -e rfjw48jofwierfjipw\n    nbv -e https://gist.github.com/tr3buchet/rfjw48jofwierfjipw\n\nusage\n~~~~~\n\n::\n\n    usage: nbv [-h] [-a] [-e id/url]\n\n    generate ipynb links!\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -a, --anonymous       gist will be anonymouseven if you have oauth\n                            configured\n      -e id/url, --edit id/url\n                            edit a gist identified by id or url\n\nusage - editing gists\n~~~~~~~~~~~~~~~~~~~~~\n\nediting gists works as such: \\* any files gisted with the ``-e`` flag\nwill be added to the gist unless a file already exists in the gist by\nthat name, in which case it will be overwritten with the current file's\ncontents\n\nusage - ipython notebooks\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nipython notebooks are files with a ``.ipynb`` extension. if all files\nspecified on the commandline have this extension, a link to the\nhttp://nbviewer.ipython.org url to display your gist will be generated\nas well. nbviewer does not store your gist's data permanently, but does\ncache it for ~10 minutes\n\ninstall\n~~~~~~~\n\n``pip install notebook-viewer`` or clone the repo and\n``python setup.py install``\n\n`gister <https://github.com/tr3buchet/gister>`__ is required so you\nmight want to pop over and checkout the conguration, not to worry it\nwill work out of the box, but everything will be created anonymously\n\nif you get an ``InsecurePlatformWarning``,\n``pip install requests[security]`` to solve it. I had to install\nlibffi-devel on my fedora 21 system to get pyOpenSSL rocking\n\nREADME.rst\n~~~~~~~~~~\n\nthe ``README.rst`` document was generated from the ``README.md`` using\n`pandoc <http://pandoc.org/>`__. it's quite t\u00f6tes\n\n::\n\n    sudo dnf install pandoc\n    pandoc README.md -s -o README.rst", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tr3buchet/notebook-viewer", "keywords": "github,gist,ipython,notebook,nbviewer", "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "notebook-viewer", "package_url": "https://pypi.org/project/notebook-viewer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/notebook-viewer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tr3buchet/notebook-viewer"}, "release_url": "https://pypi.org/project/notebook-viewer/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "ipython notebook link generation script", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"examples\">\n<h2>examples</h2>\n<pre># post a secret gist on github and generate an nbviewer url:\nnbv\n\n# post a secret gist on github anonymously and generate an nbviewer url:\nnbv -a\n\n# edit a gist on github and generate an nbviewer url:\nnbv -e rfjw48jofwierfjipw\nnbv -e https://gist.github.com/tr3buchet/rfjw48jofwierfjipw\n</pre>\n</div>\n<div id=\"usage\">\n<h2>usage</h2>\n<pre>usage: nbv [-h] [-a] [-e id/url]\n\ngenerate ipynb links!\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a, --anonymous       gist will be anonymouseven if you have oauth\n                        configured\n  -e id/url, --edit id/url\n                        edit a gist identified by id or url\n</pre>\n</div>\n<div id=\"usage-editing-gists\">\n<h2>usage - editing gists</h2>\n<p>editing gists works as such: * any files gisted with the <tt><span class=\"pre\">-e</span></tt> flag\nwill be added to the gist unless a file already exists in the gist by\nthat name, in which case it will be overwritten with the current file\u2019s\ncontents</p>\n</div>\n<div id=\"usage-ipython-notebooks\">\n<h2>usage - ipython notebooks</h2>\n<p>ipython notebooks are files with a <tt>.ipynb</tt> extension. if all files\nspecified on the commandline have this extension, a link to the\n<a href=\"http://nbviewer.ipython.org\" rel=\"nofollow\">http://nbviewer.ipython.org</a> url to display your gist will be generated\nas well. nbviewer does not store your gist\u2019s data permanently, but does\ncache it for ~10 minutes</p>\n</div>\n<div id=\"install\">\n<h2>install</h2>\n<p><tt>pip install <span class=\"pre\">notebook-viewer</span></tt> or clone the repo and\n<tt>python setup.py install</tt></p>\n<p><a href=\"https://github.com/tr3buchet/gister\" rel=\"nofollow\">gister</a> is required so you\nmight want to pop over and checkout the conguration, not to worry it\nwill work out of the box, but everything will be created anonymously</p>\n<p>if you get an <tt>InsecurePlatformWarning</tt>,\n<tt>pip install requests[security]</tt> to solve it. I had to install\nlibffi-devel on my fedora 21 system to get pyOpenSSL rocking</p>\n</div>\n<div id=\"readme-rst\">\n<h2>README.rst</h2>\n<p>the <tt>README.rst</tt> document was generated from the <tt>README.md</tt> using\n<a href=\"http://pandoc.org/\" rel=\"nofollow\">pandoc</a>. it\u2019s quite t\u00f6tes</p>\n<pre>sudo dnf install pandoc\npandoc README.md -s -o README.rst\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1602549, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "df9b042d18d7339cc44f325770460c47", "sha256": "7998f191df7ef77e3a8efe0b627da5297057c7c300fb9b80260401f889aa28b0"}, "downloads": -1, "filename": "notebook-viewer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "df9b042d18d7339cc44f325770460c47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3432, "upload_time": "2015-06-23T00:36:24", "upload_time_iso_8601": "2015-06-23T00:36:24.652842Z", "url": "https://files.pythonhosted.org/packages/e7/60/6557066425d7889ba2ea77f426249b0b81ea35c975713bfc8d803a40d20c/notebook-viewer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7bacef60290b93a008edb204d1fd26e7", "sha256": "659fe5cf2a96ed14470200f9a915a196bb1cbf479e374c38ec9a89323e7fc735"}, "downloads": -1, "filename": "notebook-viewer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7bacef60290b93a008edb204d1fd26e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7325, "upload_time": "2015-06-23T00:55:37", "upload_time_iso_8601": "2015-06-23T00:55:37.619358Z", "url": "https://files.pythonhosted.org/packages/13/b1/edd7366db52a76b360250f29dcbc3a5da81d275ba73a14466ce06416d034/notebook-viewer-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7bacef60290b93a008edb204d1fd26e7", "sha256": "659fe5cf2a96ed14470200f9a915a196bb1cbf479e374c38ec9a89323e7fc735"}, "downloads": -1, "filename": "notebook-viewer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7bacef60290b93a008edb204d1fd26e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7325, "upload_time": "2015-06-23T00:55:37", "upload_time_iso_8601": "2015-06-23T00:55:37.619358Z", "url": "https://files.pythonhosted.org/packages/13/b1/edd7366db52a76b360250f29dcbc3a5da81d275ba73a14466ce06416d034/notebook-viewer-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:40 2020"}