{"info": {"author": "Nguyen Cao", "author_email": "ducnguyen@usedata.vn", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "\n# TWINT - Twitter Intelligence Tool\n[![PyPI](https://img.shields.io/pypi/v/twint.svg)](https://pypi.org/project/twint/) [![Build Status](https://travis-ci.org/haccer/twint.svg?branch=master)](https://travis-ci.org/haccer/twint/) [![Python 3.5|3.6](https://img.shields.io/badge/Python-3.5%2F3.6-blue.svg)](https://www.python.org/download/releases/3.0/) [![GitHub license](https://img.shields.io/github/license/haccer/tweep.svg)](https://github.com/haccer/tweep/blob/master/LICENSE)\n\n>No authentication. No API. No limits.\n\nFormerly known as Tweep, Twint is an advanced Twitter scraping tool written in Python that allows for scraping Tweets from Twitter profiles **without** using Twitter's API.\n\nTwint utilizes Twitter's search operators to let you scrape Tweets from specific users, scrape Tweets relating to certain topics, hashtags & trends, or sort out *sensitive* information from Tweets like e-mail and phone numbers. I find this very useful, and you can get really creative with it too.\n\nTwint also makes special queries to Twitter allowing you to also scrape a Twitter user's followers, Tweets a user has liked, and who they follow **without** any authentication, API, Selenium, or browser emulation. \n\n## tl;dr Benefits\nSome of the benefits of using Twint vs Twitter API:\n- Can fetch almost __all__ Tweets (Twitter API limits to last 3200 Tweets only)\n- Fast initial setup\n- Can be used anonymously and without Twitter sign up\n- **No rate limitations**\n\n## Requirements\n- Python 3.5/3.6\n- `pip3 install -r requirements.txt`\n\n## Basic Examples and Combos.\nA few simple examples to help you understand the basics:\n\n- `python3 twint.py -u username` - Scrape all the Tweets from *user*'s timeline.\n- `python3 twint.py -u username -s pineapple` - Scrape all Tweets from the *user*'s timeline containing _pineapple_.\n- `python3 twint.py -s pineapple` - Collect every Tweet containing *pineapple* from everyone's Tweets.\n- `python3 twint.py -u username --year 2014` - Collect Tweets that were tweeted **before** 2014.\n- `python3 twint.py -u username --since 2015-12-20` - Collect Tweets that were tweeted since 2015-12-20.\n- `python3 twint.py -u username -o file.txt` - Scrape Tweets and save to file.txt.\n- `python3 twint.py -u username -o file.csv --csv` - Scrape Tweets and save as a csv file.\n- `python3 twint.py -u username --fruit` - Show Tweets with low-hanging fruit.\n- `python3 twint.py -s \"Donald Trump\" --verified --users` - List verified users that Tweet about Donald Trump.\n- `python3 twint.py -g=\"48.880048,2.385939,1km\" -o file.csv --csv` - Scrape Tweets from a radius of 1km around a place in Paris and export them to a csv file.\n- `python3 twint.py -u username -es localhost:9200` - Output Tweets to Elasticsearch\n- `python3 twint.py -u username -o file.json --json` - Scrape Tweets and save as a json file.\n- `python3 twint.py -u username --database tweets.db` - Save Tweets to a SQLite database.\n- `python3 twint.py -u username --followers` - Scrape a Twitter user's followers.\n- `python3 twint.py -u username --following` - Scrape who a Twitter user follows.\n- `python3 twint.py -u username --favorites` - Collect all the Tweets a user has favorited.\n\nMore detail about the commands and options are located in the [wiki](https://github.com/haccer/twint/wiki/Commands)\n\n## Using Twint as a Module\nTwint can now be used as a module and supports custom formatting. More details are located in the [wiki](https://github.com/haccer/twint/wiki/Module)\n\n#### Install\n- `sudo pip3 install twint`\n\n#### Example\n```python\nimport twint\n\n# Configure\nc = twint.Config()\nc.Username = \"now\"\nc.Search = \"pineapple\"\nc.Format = \"Tweet id: {id} | Tweet: {tweet}\"\n\n# Run\ntwint.Search(c)\n```\n## Example String\n`955511208597184512 2018-01-22 18:43:19 GMT <now> pineapples are the best fruit`\n\n## Storing Options\n- Write to file.\n- CSV\n- JSON\n- SQLite\n- Elasticsearch\n\n### Elasticsearch Setup\n\nDetails on setting up Elasticsearch with Twint is located in the [wiki](https://github.com/haccer/twint/wiki/Elasticsearch). \n\n### Graph Visualization\n![graph](https://i.imgur.com/EEJqB8n.png)\n\n[Graph](https://github.com/haccer/twint/tree/master/graph) details are also located in the [wiki](https://github.com/haccer/twint/wiki/Graph).\n\n## Thanks\nThanks to [@hpiedcoq](https://github.com/hpiedcoq) & [@pielco11](https://github.com/pielco11) for contributing several features!\n\n## Contact\nShout me out on Twitter: [@now](https://twitter.com/now)\n\nIf you have problems or have suggestions don't hesitate to open an issue or ask about it directly. \n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/data-catalysis/twint", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "twinter", "package_url": "https://pypi.org/project/twinter/", "platform": "", "project_url": "https://pypi.org/project/twinter/", "project_urls": {"Homepage": "https://github.com/data-catalysis/twint"}, "release_url": "https://pypi.org/project/twinter/1.1.2.2/", "requires_dist": ["aiohttp", "aiodns", "beautifulsoup4", "cchardet", "elasticsearch"], "requires_python": ">=3.5.0", "summary": "An advanced Twitter scraping & OSINT tool.", "version": "1.1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br># TWINT - Twitter Intelligence Tool<br>[![PyPI](https://img.shields.io/pypi/v/twint.svg)](https://pypi.org/project/twint/) [![Build Status](https://travis-ci.org/haccer/twint.svg?branch=master)](https://travis-ci.org/haccer/twint/) [![Python 3.5|3.6](https://img.shields.io/badge/Python-3.5%2F3.6-blue.svg)](https://www.python.org/download/releases/3.0/) [![GitHub license](https://img.shields.io/github/license/haccer/tweep.svg)](https://github.com/haccer/tweep/blob/master/LICENSE)<br><br>&gt;No authentication. No API. No limits.<br><br>Formerly known as Tweep, Twint is an advanced Twitter scraping tool written in Python that allows for scraping Tweets from Twitter profiles **without** using Twitter's API.<br><br>Twint utilizes Twitter's search operators to let you scrape Tweets from specific users, scrape Tweets relating to certain topics, hashtags &amp; trends, or sort out *sensitive* information from Tweets like e-mail and phone numbers. I find this very useful, and you can get really creative with it too.<br><br>Twint also makes special queries to Twitter allowing you to also scrape a Twitter user's followers, Tweets a user has liked, and who they follow **without** any authentication, API, Selenium, or browser emulation. <br><br>## tl;dr Benefits<br>Some of the benefits of using Twint vs Twitter API:<br>- Can fetch almost __all__ Tweets (Twitter API limits to last 3200 Tweets only)<br>- Fast initial setup<br>- Can be used anonymously and without Twitter sign up<br>- **No rate limitations**<br><br>## Requirements<br>- Python 3.5/3.6<br>- `pip3 install -r requirements.txt`<br><br>## Basic Examples and Combos.<br>A few simple examples to help you understand the basics:<br><br>- `python3 twint.py -u username` - Scrape all the Tweets from *user*'s timeline.<br>- `python3 twint.py -u username -s pineapple` - Scrape all Tweets from the *user*'s timeline containing _pineapple_.<br>- `python3 twint.py -s pineapple` - Collect every Tweet containing *pineapple* from everyone's Tweets.<br>- `python3 twint.py -u username --year 2014` - Collect Tweets that were tweeted **before** 2014.<br>- `python3 twint.py -u username --since 2015-12-20` - Collect Tweets that were tweeted since 2015-12-20.<br>- `python3 twint.py -u username -o file.txt` - Scrape Tweets and save to file.txt.<br>- `python3 twint.py -u username -o file.csv --csv` - Scrape Tweets and save as a csv file.<br>- `python3 twint.py -u username --fruit` - Show Tweets with low-hanging fruit.<br>- `python3 twint.py -s \"Donald Trump\" --verified --users` - List verified users that Tweet about Donald Trump.<br>- `python3 twint.py -g=\"48.880048,2.385939,1km\" -o file.csv --csv` - Scrape Tweets from a radius of 1km around a place in Paris and export them to a csv file.<br>- `python3 twint.py -u username -es localhost:9200` - Output Tweets to Elasticsearch<br>- `python3 twint.py -u username -o file.json --json` - Scrape Tweets and save as a json file.<br>- `python3 twint.py -u username --database tweets.db` - Save Tweets to a SQLite database.<br>- `python3 twint.py -u username --followers` - Scrape a Twitter user's followers.<br>- `python3 twint.py -u username --following` - Scrape who a Twitter user follows.<br>- `python3 twint.py -u username --favorites` - Collect all the Tweets a user has favorited.<br><br>More detail about the commands and options are located in the [wiki](https://github.com/haccer/twint/wiki/Commands)<br><br>## Using Twint as a Module<br>Twint can now be used as a module and supports custom formatting. More details are located in the [wiki](https://github.com/haccer/twint/wiki/Module)<br><br>#### Install<br>- `sudo pip3 install twint`<br><br>#### Example<br>```python<br>import twint<br><br># Configure<br>c = twint.Config()<br>c.Username = \"now\"<br>c.Search = \"pineapple\"<br>c.Format = \"Tweet id: {id} | Tweet: {tweet}\"<br><br># Run<br>twint.Search(c)<br>```<br>## Example String<br>`955511208597184512 2018-01-22 18:43:19 GMT &lt;now&gt; pineapples are the best fruit`<br><br>## Storing Options<br>- Write to file.<br>- CSV<br>- JSON<br>- SQLite<br>- Elasticsearch<br><br>### Elasticsearch Setup<br><br>Details on setting up Elasticsearch with Twint is located in the [wiki](https://github.com/haccer/twint/wiki/Elasticsearch). <br><br>### Graph Visualization<br>![graph](https://i.imgur.com/EEJqB8n.png)<br><br>[Graph](https://github.com/haccer/twint/tree/master/graph) details are also located in the [wiki](https://github.com/haccer/twint/wiki/Graph).<br><br>## Thanks<br>Thanks to [@hpiedcoq](https://github.com/hpiedcoq) &amp; [@pielco11](https://github.com/pielco11) for contributing several features!<br><br>## Contact<br>Shout me out on Twitter: [@now](https://twitter.com/now)<br><br>If you have problems or have suggestions don't hesitate to open an issue or ask about it directly. <br><br><br>\n          </div>"}, "last_serial": 3838280, "releases": {"1.1.2.2": [{"comment_text": "", "digests": {"md5": "af289ca1af77301671e0caf739414b81", "sha256": "c54af365c4c48a395abb397253a9a7bb5f81fb720fe234402832bf0f77f618d1"}, "downloads": -1, "filename": "twinter-1.1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af289ca1af77301671e0caf739414b81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 15542, "upload_time": "2018-05-06T09:02:04", "upload_time_iso_8601": "2018-05-06T09:02:04.175656Z", "url": "https://files.pythonhosted.org/packages/a6/b7/c997f616530f16b756a0595b413e12a0da2fb68ca0e9ee15c210b53cc4c6/twinter-1.1.2.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af289ca1af77301671e0caf739414b81", "sha256": "c54af365c4c48a395abb397253a9a7bb5f81fb720fe234402832bf0f77f618d1"}, "downloads": -1, "filename": "twinter-1.1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af289ca1af77301671e0caf739414b81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 15542, "upload_time": "2018-05-06T09:02:04", "upload_time_iso_8601": "2018-05-06T09:02:04.175656Z", "url": "https://files.pythonhosted.org/packages/a6/b7/c997f616530f16b756a0595b413e12a0da2fb68ca0e9ee15c210b53cc4c6/twinter-1.1.2.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:43:55 2020"}