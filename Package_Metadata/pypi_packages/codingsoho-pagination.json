{"info": {"author": "Horde Chief", "author_email": "hordechief@qq.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\ncodingsoho-pagination\n=====\n\ncodingsoho-pagination is based on 'django-pagination 1.0.7' which source code stop updating now, The update in this version only for adaption\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"pagination\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'pagination',\n    ]\n\n2. Install the pagination middleware. Your settings file might look something like:\n``` python\n    MIDDLEWARE_CLASSES = (\n    # ...\n    'pagination.middleware.PaginationMiddleware',\n)\n```\n3. If it\u2019s not already added in your setup, add the request context processor. Note that context processors are set by default implicitly, so to set them explicitly, you need to copy and paste this code into your under the value TEMPLATE_CONTEXT_PROCESSORS:\n\n``` python\n(\"django.core.context_processors.auth\",\n\"django.core.context_processors.debug\",\n\"django.core.context_processors.i18n\",\n\"django.core.context_processors.media\",\n\"django.core.context_processors.request\")\n```\n\n4. Add this line at the top of your template to load the pagination tags:\n\n``` python\n{% load pagination_tags %}\n```\n\n5. Decide on a variable that you would like to paginate, and use the autopaginate tag on that variable before iterating over it. This could take one of two forms (using the canonical object_list as an example variable):\n\n``` python\n{% autopaginate object_list %}\n```\n\nThis assumes that you would like to have the default 20 results per page. If you would like to specify your own amount of results per page, you can specify that like so:\n\n``` python\n{% autopaginate object_list 10 %}\n```\n\nNote that this replaces object_list with the list for the current page, so you can iterate over the object_list like you normally would.\n\nNow you want to display the current page and the available pages, so somewhere after having used autopaginate, use the paginate inclusion tag:\n\n``` python\n{% paginate %}\n\n```\nThis does not take any arguments, but does assume that you have already called autopaginate, so make sure to do so first.\n\nThat\u2019s it! You have now paginated object_list and given users of the site a way to navigate between the different pages\u2013all without touching your views.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.codingsoho.com/", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "codingsoho-pagination", "package_url": "https://pypi.org/project/codingsoho-pagination/", "platform": "", "project_url": "https://pypi.org/project/codingsoho-pagination/", "project_urls": {"Homepage": "http://www.codingsoho.com/"}, "release_url": "https://pypi.org/project/codingsoho-pagination/1.0.9/", "requires_dist": null, "requires_python": "", "summary": "codingsoho-pagination is based on django-pagination 1.0.7 which source code stop updating now, The update in this version only for adaption", "version": "1.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>codingsoho-pagination<br>=====<br><br>codingsoho-pagination is based on 'django-pagination 1.0.7' which source code stop updating now, The update in this version only for adaption<br><br>Detailed documentation is in the \"docs\" directory.<br><br>Quick start<br>-----------<br><br>1. Add \"pagination\" to your INSTALLED_APPS setting like this::<br><br>    INSTALLED_APPS = [<br>        ...<br>        'pagination',<br>    ]<br><br>2. Install the pagination middleware. Your settings file might look something like:<br>``` python<br>    MIDDLEWARE_CLASSES = (<br>    # ...<br>    'pagination.middleware.PaginationMiddleware',<br>)<br>```<br>3. If it\u2019s not already added in your setup, add the request context processor. Note that context processors are set by default implicitly, so to set them explicitly, you need to copy and paste this code into your under the value TEMPLATE_CONTEXT_PROCESSORS:<br><br>``` python<br>(\"django.core.context_processors.auth\",<br>\"django.core.context_processors.debug\",<br>\"django.core.context_processors.i18n\",<br>\"django.core.context_processors.media\",<br>\"django.core.context_processors.request\")<br>```<br><br>4. Add this line at the top of your template to load the pagination tags:<br><br>``` python<br>{% load pagination_tags %}<br>```<br><br>5. Decide on a variable that you would like to paginate, and use the autopaginate tag on that variable before iterating over it. This could take one of two forms (using the canonical object_list as an example variable):<br><br>``` python<br>{% autopaginate object_list %}<br>```<br><br>This assumes that you would like to have the default 20 results per page. If you would like to specify your own amount of results per page, you can specify that like so:<br><br>``` python<br>{% autopaginate object_list 10 %}<br>```<br><br>Note that this replaces object_list with the list for the current page, so you can iterate over the object_list like you normally would.<br><br>Now you want to display the current page and the available pages, so somewhere after having used autopaginate, use the paginate inclusion tag:<br><br>``` python<br>{% paginate %}<br><br>```<br>This does not take any arguments, but does assume that you have already called autopaginate, so make sure to do so first.<br><br>That\u2019s it! You have now paginated object_list and given users of the site a way to navigate between the different pages\u2013all without touching your views.\n          </div>"}, "last_serial": 4327452, "releases": {"1.0.9": [{"comment_text": "", "digests": {"md5": "6a77ee999f9110a74a4407451b8fbe06", "sha256": "47fc10200c447b18dd5b6ee0136694a2cfa4277d5585de445666c76e1892bc86"}, "downloads": -1, "filename": "codingsoho-pagination-1.0.9.tar.gz", "has_sig": false, "md5_digest": "6a77ee999f9110a74a4407451b8fbe06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10275, "upload_time": "2018-10-01T09:55:21", "upload_time_iso_8601": "2018-10-01T09:55:21.130228Z", "url": "https://files.pythonhosted.org/packages/e6/d0/4a2fc1188fe02d34b30b197c68a549b1eb0654cc4073db657eedaee64b2f/codingsoho-pagination-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a77ee999f9110a74a4407451b8fbe06", "sha256": "47fc10200c447b18dd5b6ee0136694a2cfa4277d5585de445666c76e1892bc86"}, "downloads": -1, "filename": "codingsoho-pagination-1.0.9.tar.gz", "has_sig": false, "md5_digest": "6a77ee999f9110a74a4407451b8fbe06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10275, "upload_time": "2018-10-01T09:55:21", "upload_time_iso_8601": "2018-10-01T09:55:21.130228Z", "url": "https://files.pythonhosted.org/packages/e6/d0/4a2fc1188fe02d34b30b197c68a549b1eb0654cc4073db657eedaee64b2f/codingsoho-pagination-1.0.9.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:12 2020"}