{"info": {"author": "Mauro Amico", "author_email": "mauro.amico@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Framework :: Zope2", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Introduction\n============\n\nThe problem with \u201cacquisition\u201d and publishTraverse is that the current method returns too many different URLs for the same content. \nFor instance here is some potential url for the \u201ckb\u201d page of the plone.org website\n\n- https://plone.org/documentation/kb\n- https://plone.org/documentation/manual/kb\n- https://plone.org/documentation/kb/manual/kb\n- https://plone.org/documentation/manual/spinner.gif/kb\n- ...\n\nand here is a generic \"Plone\" site with two content items \"a\" and \"b\" (folderish or not)\n\n- http://example.com/Plone/a\n- http://example.com/Plone/a/b/a\n- http://example.com/Plone/a\n- http://example.com/Plone/b/a\n- ...\n\nAll the urls above returns 200 with the same content, \nwhile I would like the \"canonical url\" to return 200 and the other to return 404.\n\nThe behaviour described above constitute a problem because:\n\n* multiple url for the same content is a problem for SEO and is confusing to people. \n  For SEO, in the latest versions Plone introduced the canonical META,\n  but IMHO it's just a workaround. \n  People are confused. \n  For example: sometimes some of my editors ask me: \n  \"I can't remove the http://example.com/Plone/a/b/a/page. Can you do it for me?\"\n\n* the page doesn\u2019t seem really the same on all urls: \n  if you open\n  https://plone.org/documentation/kb and\n  https://plone.org/documentation/manual/kb the second has a portlet that the first is missing\n\n* removing page from external cache (varnish or squid), for example after a\n  content modification, will be a pain. \n  This is because for the same content there could be multiple urls without any control or rules \n  (``collective.purgebyid`` solves this)\n\n* when using subsite (or multiple plone site on the same zope app) the problem is even more annoying: \n  suppose that \"a\" is a subsite (marked with INavigationRoot) for http://a.example.org and \"b\" for http://b.example.org.\n  Opening the url http://a.example.org/b will probably show the homepage of site \"a\" inside the \"b\" site.\n  ``collective.siteisolation`` and probably ``collective.lineage`` do something to isolate subsite, \n  but IMHO again are only workarounds.\n\nUsage\n=====\n\nThis is a monkey patch for publishTraverse method of Zope2's\n``ZPublisher.BaseRequest.DefaultPublishTraverse`` and a monkey patch\nfor ``Products.Archetypes.BaseObject.BaseObject.__bobo_traverse__``\n\nBy default invalid traverse is only logged as warning.\n\nFor enable raising exceptions, you need to manually modify ``config.py`` changing ``DRYRUN`` to ``False``. \n\nOr using ``plone.recipe.zope2instance >= 4.2.14``, e.g.::\n\n    [instance]\n    recipe = plone.recipe.zope2instance\n    eggs =\n        experimental.noacquisition\n    ...\n    initialization =\n       from experimental.noacquisition import config\n       config.DRYRUN = False\n\n\nWarning\n=======\n\n**USE AT YOUR OWN RISK**\n\nDon't use it, if you don't know exactly what are you doing... at least use leaving ``DRYRUN = True``.\n\nTests\n=====\n\nThis add-on is tested using Travis CI. The current status of the add-on is :\n\n.. image:: https://secure.travis-ci.org/collective/experimental.noacquisition.png\n    :target: http://travis-ci.org/collective/experimental.noacquisition\n\n\nOther solutions\n===============\n\nThere is a more elegant solution in a branch of Products.CMFPlone, that makes use of IPubAfterTraversal event instead of a monkey patch. \nBut seems that currently it doesn't works for all cases, at least when there is a custom traversal at the end of the request (take a look at the tests inside this package).\nhttps://github.com/plone/Products.CMFPlone/tree/publication-through-explicit-acquisition\n\nThere is also other packages with same approach as CMFPlone's branch:\n`collective.explicitacquisition <https://github.com/collective/collective.explicitacquisition>`_ and\n`collective.redirectacquired <https://github.com/collective/collective.redirectacquired>`_\n\nChangelog\n=========\n\n1.0.0b7 (2019-12-10)\n--------------------\n\n- Zope < 4.2 (no changes)\n  [mamico]\n\n\n1.0.0b6 (2019-11-07)\n--------------------\n\n- Python3 Plone 5.2\n  [mamico]\n\n\n1.0.0b5 (2019-06-05)\n--------------------\n\n- Zope2 2.13.28 (no changes)\n  [mamico]\n\n\n1.0.0b4 (2018-05-14)\n--------------------\n\n- Zope2 2.13.27 (no changes)\n  [mamico]\n\n\n1.0.0b3 (2017-05-09)\n--------------------\n\n- Zope2 2.13.26 (no changes)\n  [mamico]\n\n1.0.0b2 (2016-06-10)\n--------------------\n\n- Zope2 2.13.24\n  [mamico]\n\n1.0.0b1 (2015-10-23)\n--------------------\n\n- Zope2 2.13.23 (Plone 4.3.7/5.0)\n  [mamico]\n\n1.0.0a5 (2014-10-31)\n--------------------\n\n- Nothing changed yet.\n\n\n1.0.0a4 (2014-10-31)\n--------------------\n\n- Initial release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.org/pypi/collective/experimental.noacquisition", "keywords": "monkeypatch traverse", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "experimental.noacquisition", "package_url": "https://pypi.org/project/experimental.noacquisition/", "platform": "", "project_url": "https://pypi.org/project/experimental.noacquisition/", "project_urls": {"Homepage": "http://pypi.org/pypi/collective/experimental.noacquisition"}, "release_url": "https://pypi.org/project/experimental.noacquisition/1.0.0b7/", "requires_dist": null, "requires_python": "", "summary": "No acquistion during publish traverse", "version": "1.0.0b7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The problem with \u201cacquisition\u201d and publishTraverse is that the current method returns too many different URLs for the same content.\nFor instance here is some potential url for the \u201ckb\u201d page of the plone.org website</p>\n<ul>\n<li><a href=\"https://plone.org/documentation/kb\" rel=\"nofollow\">https://plone.org/documentation/kb</a></li>\n<li><a href=\"https://plone.org/documentation/manual/kb\" rel=\"nofollow\">https://plone.org/documentation/manual/kb</a></li>\n<li><a href=\"https://plone.org/documentation/kb/manual/kb\" rel=\"nofollow\">https://plone.org/documentation/kb/manual/kb</a></li>\n<li><a href=\"https://plone.org/documentation/manual/spinner.gif/kb\" rel=\"nofollow\">https://plone.org/documentation/manual/spinner.gif/kb</a></li>\n<li>\u2026</li>\n</ul>\n<p>and here is a generic \u201cPlone\u201d site with two content items \u201ca\u201d and \u201cb\u201d (folderish or not)</p>\n<ul>\n<li><a href=\"http://example.com/Plone/a\" rel=\"nofollow\">http://example.com/Plone/a</a></li>\n<li><a href=\"http://example.com/Plone/a/b/a\" rel=\"nofollow\">http://example.com/Plone/a/b/a</a></li>\n<li><a href=\"http://example.com/Plone/a\" rel=\"nofollow\">http://example.com/Plone/a</a></li>\n<li><a href=\"http://example.com/Plone/b/a\" rel=\"nofollow\">http://example.com/Plone/b/a</a></li>\n<li>\u2026</li>\n</ul>\n<p>All the urls above returns 200 with the same content,\nwhile I would like the \u201ccanonical url\u201d to return 200 and the other to return 404.</p>\n<p>The behaviour described above constitute a problem because:</p>\n<ul>\n<li>multiple url for the same content is a problem for SEO and is confusing to people.\nFor SEO, in the latest versions Plone introduced the canonical META,\nbut IMHO it\u2019s just a workaround.\nPeople are confused.\nFor example: sometimes some of my editors ask me:\n\u201cI can\u2019t remove the <a href=\"http://example.com/Plone/a/b/a/page\" rel=\"nofollow\">http://example.com/Plone/a/b/a/page</a>. Can you do it for me?\u201d</li>\n<li>the page doesn\u2019t seem really the same on all urls:\nif you open\n<a href=\"https://plone.org/documentation/kb\" rel=\"nofollow\">https://plone.org/documentation/kb</a> and\n<a href=\"https://plone.org/documentation/manual/kb\" rel=\"nofollow\">https://plone.org/documentation/manual/kb</a> the second has a portlet that the first is missing</li>\n<li>removing page from external cache (varnish or squid), for example after a\ncontent modification, will be a pain.\nThis is because for the same content there could be multiple urls without any control or rules\n(<tt>collective.purgebyid</tt> solves this)</li>\n<li>when using subsite (or multiple plone site on the same zope app) the problem is even more annoying:\nsuppose that \u201ca\u201d is a subsite (marked with INavigationRoot) for <a href=\"http://a.example.org\" rel=\"nofollow\">http://a.example.org</a> and \u201cb\u201d for <a href=\"http://b.example.org\" rel=\"nofollow\">http://b.example.org</a>.\nOpening the url <a href=\"http://a.example.org/b\" rel=\"nofollow\">http://a.example.org/b</a> will probably show the homepage of site \u201ca\u201d inside the \u201cb\u201d site.\n<tt>collective.siteisolation</tt> and probably <tt>collective.lineage</tt> do something to isolate subsite,\nbut IMHO again are only workarounds.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This is a monkey patch for publishTraverse method of Zope2\u2019s\n<tt>ZPublisher.BaseRequest.DefaultPublishTraverse</tt> and a monkey patch\nfor <tt>Products.Archetypes.BaseObject.BaseObject.__bobo_traverse__</tt></p>\n<p>By default invalid traverse is only logged as warning.</p>\n<p>For enable raising exceptions, you need to manually modify <tt>config.py</tt> changing <tt>DRYRUN</tt> to <tt>False</tt>.</p>\n<p>Or using <tt>plone.recipe.zope2instance &gt;= 4.2.14</tt>, e.g.:</p>\n<pre>[instance]\nrecipe = plone.recipe.zope2instance\neggs =\n    experimental.noacquisition\n...\ninitialization =\n   from experimental.noacquisition import config\n   config.DRYRUN = False\n</pre>\n</div>\n<div id=\"warning\">\n<h2>Warning</h2>\n<p><strong>USE AT YOUR OWN RISK</strong></p>\n<p>Don\u2019t use it, if you don\u2019t know exactly what are you doing\u2026 at least use leaving <tt>DRYRUN = True</tt>.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>This add-on is tested using Travis CI. The current status of the add-on is :</p>\n<a href=\"http://travis-ci.org/collective/experimental.noacquisition\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/collective/experimental.noacquisition.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b455393bd86ac5b293657104fe936e5580747441/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f636f6c6c6563746976652f6578706572696d656e74616c2e6e6f6163717569736974696f6e2e706e67\"></a>\n</div>\n<div id=\"other-solutions\">\n<h2>Other solutions</h2>\n<p>There is a more elegant solution in a branch of Products.CMFPlone, that makes use of IPubAfterTraversal event instead of a monkey patch.\nBut seems that currently it doesn\u2019t works for all cases, at least when there is a custom traversal at the end of the request (take a look at the tests inside this package).\n<a href=\"https://github.com/plone/Products.CMFPlone/tree/publication-through-explicit-acquisition\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/tree/publication-through-explicit-acquisition</a></p>\n<p>There is also other packages with same approach as CMFPlone\u2019s branch:\n<a href=\"https://github.com/collective/collective.explicitacquisition\" rel=\"nofollow\">collective.explicitacquisition</a> and\n<a href=\"https://github.com/collective/collective.redirectacquired\" rel=\"nofollow\">collective.redirectacquired</a></p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"b7-2019-12-10\">\n<h3>1.0.0b7 (2019-12-10)</h3>\n<ul>\n<li>Zope &lt; 4.2 (no changes)\n[mamico]</li>\n</ul>\n</div>\n<div id=\"b6-2019-11-07\">\n<h3>1.0.0b6 (2019-11-07)</h3>\n<ul>\n<li>Python3 Plone 5.2\n[mamico]</li>\n</ul>\n</div>\n<div id=\"b5-2019-06-05\">\n<h3>1.0.0b5 (2019-06-05)</h3>\n<ul>\n<li>Zope2 2.13.28 (no changes)\n[mamico]</li>\n</ul>\n</div>\n<div id=\"b4-2018-05-14\">\n<h3>1.0.0b4 (2018-05-14)</h3>\n<ul>\n<li>Zope2 2.13.27 (no changes)\n[mamico]</li>\n</ul>\n</div>\n<div id=\"b3-2017-05-09\">\n<h3>1.0.0b3 (2017-05-09)</h3>\n<ul>\n<li>Zope2 2.13.26 (no changes)\n[mamico]</li>\n</ul>\n</div>\n<div id=\"b2-2016-06-10\">\n<h3>1.0.0b2 (2016-06-10)</h3>\n<ul>\n<li>Zope2 2.13.24\n[mamico]</li>\n</ul>\n</div>\n<div id=\"b1-2015-10-23\">\n<h3>1.0.0b1 (2015-10-23)</h3>\n<ul>\n<li>Zope2 2.13.23 (Plone 4.3.7/5.0)\n[mamico]</li>\n</ul>\n</div>\n<div id=\"a5-2014-10-31\">\n<h3>1.0.0a5 (2014-10-31)</h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"a4-2014-10-31\">\n<h3>1.0.0a4 (2014-10-31)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6271983, "releases": {"1.0.0a3": [{"comment_text": "", "digests": {"md5": "aef637ee24bc32d7020ac1b4ccec12bb", "sha256": "68f17e0f817912856a9b0ed65d0dd2661f20da8272d8d203d9e4660b831e441c"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0a3.tar.gz", "has_sig": false, "md5_digest": "aef637ee24bc32d7020ac1b4ccec12bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11789, "upload_time": "2014-10-31T07:57:39", "upload_time_iso_8601": "2014-10-31T07:57:39.966595Z", "url": "https://files.pythonhosted.org/packages/5e/33/c58634e3b1e73f5b83c83f900687a9aa00def496a174c42f2040a666a3ef/experimental.noacquisition-1.0.0a3.tar.gz", "yanked": false}], "1.0.0a5": [{"comment_text": "", "digests": {"md5": "397f7db0c46a553ae654d4eb20d23fdd", "sha256": "3b7f387e2cb403d3e88967e59c835eb18685d734af46c730578e062e171b55e9"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0a5.zip", "has_sig": false, "md5_digest": "397f7db0c46a553ae654d4eb20d23fdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20257, "upload_time": "2014-10-31T08:08:48", "upload_time_iso_8601": "2014-10-31T08:08:48.292661Z", "url": "https://files.pythonhosted.org/packages/62/3d/d5dca75945f5bdf534c2fbd2534c968d3bdccbc0cab6fc4145bcb65447ea/experimental.noacquisition-1.0.0a5.zip", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "42f25576744b468e2764a596bbf2048d", "sha256": "d6d4d4fc2d225e8047a4a40d147ffa919f339a91a3d0bb8d0a1868ca901cd2a3"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "42f25576744b468e2764a596bbf2048d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10100, "upload_time": "2015-10-23T09:04:49", "upload_time_iso_8601": "2015-10-23T09:04:49.971448Z", "url": "https://files.pythonhosted.org/packages/19/6a/dfdd41a6bfc31a63992ec335fb6f5f37c977f5ad872130b0fe20e13d0440/experimental.noacquisition-1.0.0b1.tar.gz", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "ed5af39352fa43784755ae53414e0f67", "sha256": "3f17d75d772f1bba90da0f7ccf5b2f9c5b815b355b66bbcdc4f39af463223395"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b2.tar.gz", "has_sig": false, "md5_digest": "ed5af39352fa43784755ae53414e0f67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10127, "upload_time": "2016-06-10T15:41:37", "upload_time_iso_8601": "2016-06-10T15:41:37.751931Z", "url": "https://files.pythonhosted.org/packages/08/3f/928516ef069ee08cc84ff9821abc473f8bf81d2fcc1df944774174920d55/experimental.noacquisition-1.0.0b2.tar.gz", "yanked": false}], "1.0.0b3": [{"comment_text": "", "digests": {"md5": "0447d1fb96924f7b009a509fb5d3e5b0", "sha256": "57140728f33cd8f400f102d6a7857c5afea286d194946471c395e061ad9ebe02"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b3.tar.gz", "has_sig": false, "md5_digest": "0447d1fb96924f7b009a509fb5d3e5b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13237, "upload_time": "2017-05-09T14:09:38", "upload_time_iso_8601": "2017-05-09T14:09:38.390228Z", "url": "https://files.pythonhosted.org/packages/22/47/697fa0d74e1d616553e86eb54c83dfcf72536bc709066c0d171be1885155/experimental.noacquisition-1.0.0b3.tar.gz", "yanked": false}], "1.0.0b4": [{"comment_text": "", "digests": {"md5": "c315c4686e86e916b57a97832aa8a417", "sha256": "fae614500e1b34333cd5fbd1263fa5c65706709741dfa6e7560aa30c7db7c12b"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b4.tar.gz", "has_sig": false, "md5_digest": "c315c4686e86e916b57a97832aa8a417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10200, "upload_time": "2018-05-13T23:40:56", "upload_time_iso_8601": "2018-05-13T23:40:56.922358Z", "url": "https://files.pythonhosted.org/packages/52/e7/c3f1379fb83601228a71c1fcbe4eb46ccdc790528b773659c340c891d9c5/experimental.noacquisition-1.0.0b4.tar.gz", "yanked": false}], "1.0.0b5": [{"comment_text": "", "digests": {"md5": "2e6fe98eb2757dc9db2193483da51b5e", "sha256": "a1a45e60b9f0334a542f0c4b02af8362370d847b52801b2a34553049ae95a602"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b5.tar.gz", "has_sig": false, "md5_digest": "2e6fe98eb2757dc9db2193483da51b5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12033, "upload_time": "2019-06-05T00:55:10", "upload_time_iso_8601": "2019-06-05T00:55:10.623825Z", "url": "https://files.pythonhosted.org/packages/39/c6/fd5ff2f91de0d4fca38f041453ddd58f4fac84de9b3196538d6f6a2b8824/experimental.noacquisition-1.0.0b5.tar.gz", "yanked": false}], "1.0.0b6": [{"comment_text": "", "digests": {"md5": "59b3f8481ef7b2cc7a415bf563aa2ffe", "sha256": "3aff8ab60928345f14a2ab5300b39b4de9a435fe76e3ee6f506cbc81c988861a"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b6.tar.gz", "has_sig": false, "md5_digest": "59b3f8481ef7b2cc7a415bf563aa2ffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12219, "upload_time": "2019-11-07T03:42:43", "upload_time_iso_8601": "2019-11-07T03:42:43.853627Z", "url": "https://files.pythonhosted.org/packages/8f/97/a99a8c9b3d0c6708282894b66f9eada6dcb96fedffa2fa157f1985882369/experimental.noacquisition-1.0.0b6.tar.gz", "yanked": false}], "1.0.0b7": [{"comment_text": "", "digests": {"md5": "a1cfde96c79ae67be5aadbad8b3e6901", "sha256": "a7d10967bdfaf62ac11cd513d510f0e45bc95502d934b3a742132195b088cd7a"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b7.tar.gz", "has_sig": false, "md5_digest": "a1cfde96c79ae67be5aadbad8b3e6901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12318, "upload_time": "2019-12-10T10:17:12", "upload_time_iso_8601": "2019-12-10T10:17:12.957152Z", "url": "https://files.pythonhosted.org/packages/01/04/43ab17e4065b74af0ac8a133dd0bf94f4580cda7848919c38d937d1e788a/experimental.noacquisition-1.0.0b7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1cfde96c79ae67be5aadbad8b3e6901", "sha256": "a7d10967bdfaf62ac11cd513d510f0e45bc95502d934b3a742132195b088cd7a"}, "downloads": -1, "filename": "experimental.noacquisition-1.0.0b7.tar.gz", "has_sig": false, "md5_digest": "a1cfde96c79ae67be5aadbad8b3e6901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12318, "upload_time": "2019-12-10T10:17:12", "upload_time_iso_8601": "2019-12-10T10:17:12.957152Z", "url": "https://files.pythonhosted.org/packages/01/04/43ab17e4065b74af0ac8a133dd0bf94f4580cda7848919c38d937d1e788a/experimental.noacquisition-1.0.0b7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:40 2020"}