{"info": {"author": "Omer Korner", "author_email": "omerkorner@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Django-NumericFieldListFilter\n\nDjango-NumericFieldListFilter is a plugin for Django. It allows easy filtering of numeric fields (IntegerField, FloatField and DecimalField) inside the Django admin.\n\nFor each numeric field, two inputs will be added to the admin, representing a minimum and maximum value which you can filter on.\n\n![Screenshot of NumericFieldListFilter](http://i.imgur.com/y6U9uCI.png)\n\n### Installation\n\n```sh\n$ pip install django-numericfieldlistfilter\n```\n\nYou'll need Django version 1.8 or greater.\n\n### Usage\n1. Add `djangonumericfieldlistfilter` to the installed apps:\n\n    ```python\n    INSTALLED_APPS = (\n    ...\n    'djangonumericfieldlistfilter',\n    ...\n    )\n    ```\n2. Use the `NumericModelAdmin` as the base class of your admin classes:\n    ```python\n    from djangonumericfieldlistfilter.options import NumericModelAdmin\n\n    class TransactionAdmin(NumericModelAdmin):\n        ...\n    ```\n3. Add your numeric field to the list_filter variable:\n    ```python\n    list_filter = (\n        ...\n        'price_paid'\n        ...\n    )\n    ```\n\n### Version\n0.1\n\nLicense\n-------\nMIT", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbkkd/django-numericfieldlistfilter", "keywords": "django plugin fieldlistfilter", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-numericfieldlistfilter", "package_url": "https://pypi.org/project/django-numericfieldlistfilter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-numericfieldlistfilter/", "project_urls": {"Homepage": "https://github.com/jbkkd/django-numericfieldlistfilter"}, "release_url": "https://pypi.org/project/django-numericfieldlistfilter/0.1/", "requires_dist": null, "requires_python": null, "summary": "A NumericFieldListFilter for Django admin", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Django-NumericFieldListFilter<br><br>Django-NumericFieldListFilter is a plugin for Django. It allows easy filtering of numeric fields (IntegerField, FloatField and DecimalField) inside the Django admin.<br><br>For each numeric field, two inputs will be added to the admin, representing a minimum and maximum value which you can filter on.<br><br>![Screenshot of NumericFieldListFilter](http://i.imgur.com/y6U9uCI.png)<br><br>### Installation<br><br>```sh<br>$ pip install django-numericfieldlistfilter<br>```<br><br>You'll need Django version 1.8 or greater.<br><br>### Usage<br>1. Add `djangonumericfieldlistfilter` to the installed apps:<br><br>    ```python<br>    INSTALLED_APPS = (<br>    ...<br>    'djangonumericfieldlistfilter',<br>    ...<br>    )<br>    ```<br>2. Use the `NumericModelAdmin` as the base class of your admin classes:<br>    ```python<br>    from djangonumericfieldlistfilter.options import NumericModelAdmin<br><br>    class TransactionAdmin(NumericModelAdmin):<br>        ...<br>    ```<br>3. Add your numeric field to the list_filter variable:<br>    ```python<br>    list_filter = (<br>        ...<br>        'price_paid'<br>        ...<br>    )<br>    ```<br><br>### Version<br>0.1<br><br>License<br>-------<br>MIT\n          </div>"}, "last_serial": 2092722, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2f6dea50f598febe29aa444ed5c6291a", "sha256": "a667686964ef6e836a5e24a3293d66316651e4fc5f9f52ece719b596dc6d560b"}, "downloads": -1, "filename": "django_numericfieldlistfilter-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "2f6dea50f598febe29aa444ed5c6291a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6326, "upload_time": "2016-04-30T18:55:54", "upload_time_iso_8601": "2016-04-30T18:55:54.393768Z", "url": "https://files.pythonhosted.org/packages/ec/8e/db57d80d7f356649f08a1c05934727ef7e8cee799f86ca3bd4067c4accf2/django_numericfieldlistfilter-0.1-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f6dea50f598febe29aa444ed5c6291a", "sha256": "a667686964ef6e836a5e24a3293d66316651e4fc5f9f52ece719b596dc6d560b"}, "downloads": -1, "filename": "django_numericfieldlistfilter-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "2f6dea50f598febe29aa444ed5c6291a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6326, "upload_time": "2016-04-30T18:55:54", "upload_time_iso_8601": "2016-04-30T18:55:54.393768Z", "url": "https://files.pythonhosted.org/packages/ec/8e/db57d80d7f356649f08a1c05934727ef7e8cee799f86ca3bd4067c4accf2/django_numericfieldlistfilter-0.1-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:37 2020"}