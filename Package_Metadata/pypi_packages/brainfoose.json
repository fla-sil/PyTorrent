{"info": {"author": "Awes Mubarak", "author_email": "contact@awesmubarak.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development"], "description": "==========\nBrainfoose\n==========\n\nA brainfuck REPL.\n\nInstallation\n------------\n\nPypi (recommended):\n\n``sudo pip3 install brainfoose``\n\nManual installation using git master:\n\n``git clone https://github.com/abactel/brainfoose``\n\n``cd brainfoose``\n\n``pip install -r requirements.txt``\n\n``sudo setup.py install``\n\nUsage\n-----\n\nUsage:\n    ``brainfoose [--run_command=<programs>]``\n\n    ``brainfoose [--tape_size=<tape_size>]``\n\n    ``brainfoose [--verify_program=<tape_size>]``\n\n    ``brainfoose (-h | --help)``\n\n    ``brainfoose --version``\n\nOptions:\n    -h, --help               Show this message\n    --version                Show version information\n    --run                    Run a command without starting a REPL\n    --tape_size=<tape_size>  Set size of tape [default: 3000]\n\nThe syntax of the language is as follows:\n\n+--------+----------------------------------------------------------------------+\n| Token  | Meaning                                                              |\n+========+======================================================================+\n| ``?``  | Print a help screen                                                  |\n+--------+----------------------------------------------------------------------+\n| ``>``  | Increment the data pointer by 1.                                     |\n+--------+----------------------------------------------------------------------+\n| ``<``  | Decrement the data pointer by 1.                                     |\n+--------+----------------------------------------------------------------------+\n| ``+``  | Increment the value at the data pointer by 1.                        |\n+--------+----------------------------------------------------------------------+\n| ``-``  | Decrement the value at the data pointer by 1.                        |\n+--------+----------------------------------------------------------------------+\n| ``.``  | Output the byte at the data pointer. The byte is formatted to the    |\n|        | character it represents.                                             |\n+--------+----------------------------------------------------------------------+\n| ``,``  | Store a value at the data pointer\u2019s position. The character is       |\n|        | as a decimal byte representing the character. The character is       |\n|        | accepted form a standard input prompt.                               |\n+--------+----------------------------------------------------------------------+\n| ``[``  | If the value at the data pointer is 0, move to matching ``]``.       |\n+--------+----------------------------------------------------------------------+\n| ``]``  | If the value at the data pointer is not 0, move to matching ``[``.   |\n+--------+----------------------------------------------------------------------+\n| ``$``  | Display tape up to last non-zero cell.                               |\n+--------+----------------------------------------------------------------------+\n| ``&``  | Reset tape.                                                          |\n+--------+----------------------------------------------------------------------+\n| ``%``  | Load program from file, syntax: ``%[filename]``.                     |\n+--------+----------------------------------------------------------------------+\n\nThe wikipedia page on brainfuck includes the following tutorial:\n::\n\n    [ This program prints \"Hello World!\" and a newline to the screen, its\n      length is 106 active command characters. [It is not the shortest.]\n\n      This loop is an \"initial comment loop\", a simple way of adding a comment\n      to a BF program such that you don't have to worry about any command\n      characters. Any \".\", \",\", \"+\", \"-\", \"<\" and \">\" characters are simply\n      ignored, the \"[\" and \"]\" characters just have to be balanced. This\n      loop and the commands it contains are ignored because the current cell\n      defaults to a value of 0; the 0 value causes this loop to be skipped.\n    ]\n    ++++++++               Set Cell #0 to 8\n    [\n        >++++               Add 4 to Cell #1; this will always set Cell #1 to 4\n        [                   as the cell will be cleared by the loop\n            >++             Add 2 to Cell #2\n            >+++            Add 3 to Cell #3\n            >+++            Add 3 to Cell #4\n            >+              Add 1 to Cell #5\n            <<<<-           Decrement the loop counter in Cell #1\n        ]                   Loop till Cell #1 is zero; number of iterations is 4\n        >+                  Add 1 to Cell #2\n        >+                  Add 1 to Cell #3\n        >-                  Subtract 1 from Cell #4\n        >>+                 Add 1 to Cell #6\n        [<]                 Move back to the first zero cell you find; this will\n                            be Cell #1 which was cleared by the previous loop\n        <-                  Decrement the loop Counter in Cell #0\n    ]                       Loop till Cell #0 is zero; number of iterations is 8\n\n    The result of this is:\n    Cell No :   0   1   2   3   4s\n\n\nFurther reading\n---------------\n\n- https://learnxinyminutes.com/docs/brainfuck/\n- https://en.wikipedia.org/wiki/Brainfuck\n- http://blog.klipse.tech/brainfuck/2016/12/17/brainfuck.html\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/awesmubarak/brainfoose", "keywords": "brainfuck esoteric programming language repl", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "brainfoose", "package_url": "https://pypi.org/project/brainfoose/", "platform": "", "project_url": "https://pypi.org/project/brainfoose/", "project_urls": {"Homepage": "https://github.com/awesmubarak/brainfoose"}, "release_url": "https://pypi.org/project/brainfoose/2.0.3/", "requires_dist": ["docopt", "termcolor"], "requires_python": "", "summary": "A brainfuck REPL.", "version": "2.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A brainfuck REPL.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Pypi (recommended):</p>\n<p><tt>sudo pip3 install brainfoose</tt></p>\n<p>Manual installation using git master:</p>\n<p><tt>git clone <span class=\"pre\">https://github.com/abactel/brainfoose</span></tt></p>\n<p><tt>cd brainfoose</tt></p>\n<p><tt>pip install <span class=\"pre\">-r</span> requirements.txt</tt></p>\n<p><tt>sudo setup.py install</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<dl>\n<dt>Usage:</dt>\n<dd><p><tt>brainfoose <span class=\"pre\">[--run_command=&lt;programs&gt;]</span></tt></p>\n<p><tt>brainfoose <span class=\"pre\">[--tape_size=&lt;tape_size&gt;]</span></tt></p>\n<p><tt>brainfoose <span class=\"pre\">[--verify_program=&lt;tape_size&gt;]</span></tt></p>\n<p><tt>brainfoose <span class=\"pre\">(-h</span> | <span class=\"pre\">--help)</span></tt></p>\n<p><tt>brainfoose <span class=\"pre\">--version</span></tt></p>\n</dd>\n<dt>Options:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>Show this message</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--version</span></kbd></td>\n<td>Show version information</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--run</span></kbd></td>\n<td>Run a command without starting a REPL</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--tape_size=<var>&lt;tape_size&gt;</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Set size of tape [default: 3000]</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>The syntax of the language is as follows:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Token</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>?</tt></td>\n<td>Print a help screen</td>\n</tr>\n<tr><td><tt>&gt;</tt></td>\n<td>Increment the data pointer by 1.</td>\n</tr>\n<tr><td><tt>&lt;</tt></td>\n<td>Decrement the data pointer by 1.</td>\n</tr>\n<tr><td><tt>+</tt></td>\n<td>Increment the value at the data pointer by 1.</td>\n</tr>\n<tr><td><tt>-</tt></td>\n<td>Decrement the value at the data pointer by 1.</td>\n</tr>\n<tr><td><tt>.</tt></td>\n<td>Output the byte at the data pointer. The byte is formatted to the\ncharacter it represents.</td>\n</tr>\n<tr><td><tt>,</tt></td>\n<td>Store a value at the data pointer\u2019s position. The character is\nas a decimal byte representing the character. The character is\naccepted form a standard input prompt.</td>\n</tr>\n<tr><td><tt>[</tt></td>\n<td>If the value at the data pointer is 0, move to matching <tt>]</tt>.</td>\n</tr>\n<tr><td><tt>]</tt></td>\n<td>If the value at the data pointer is not 0, move to matching <tt>[</tt>.</td>\n</tr>\n<tr><td><tt>$</tt></td>\n<td>Display tape up to last non-zero cell.</td>\n</tr>\n<tr><td><tt>&amp;</tt></td>\n<td>Reset tape.</td>\n</tr>\n<tr><td><tt>%</tt></td>\n<td>Load program from file, syntax: <tt>%[filename]</tt>.</td>\n</tr>\n</tbody>\n</table>\n<p>The wikipedia page on brainfuck includes the following tutorial:</p>\n<pre>[ This program prints \"Hello World!\" and a newline to the screen, its\n  length is 106 active command characters. [It is not the shortest.]\n\n  This loop is an \"initial comment loop\", a simple way of adding a comment\n  to a BF program such that you don't have to worry about any command\n  characters. Any \".\", \",\", \"+\", \"-\", \"&lt;\" and \"&gt;\" characters are simply\n  ignored, the \"[\" and \"]\" characters just have to be balanced. This\n  loop and the commands it contains are ignored because the current cell\n  defaults to a value of 0; the 0 value causes this loop to be skipped.\n]\n++++++++               Set Cell #0 to 8\n[\n    &gt;++++               Add 4 to Cell #1; this will always set Cell #1 to 4\n    [                   as the cell will be cleared by the loop\n        &gt;++             Add 2 to Cell #2\n        &gt;+++            Add 3 to Cell #3\n        &gt;+++            Add 3 to Cell #4\n        &gt;+              Add 1 to Cell #5\n        &lt;&lt;&lt;&lt;-           Decrement the loop counter in Cell #1\n    ]                   Loop till Cell #1 is zero; number of iterations is 4\n    &gt;+                  Add 1 to Cell #2\n    &gt;+                  Add 1 to Cell #3\n    &gt;-                  Subtract 1 from Cell #4\n    &gt;&gt;+                 Add 1 to Cell #6\n    [&lt;]                 Move back to the first zero cell you find; this will\n                        be Cell #1 which was cleared by the previous loop\n    &lt;-                  Decrement the loop Counter in Cell #0\n]                       Loop till Cell #0 is zero; number of iterations is 8\n\nThe result of this is:\nCell No :   0   1   2   3   4s\n</pre>\n</div>\n<div id=\"further-reading\">\n<h2>Further reading</h2>\n<ul>\n<li><a href=\"https://learnxinyminutes.com/docs/brainfuck/\" rel=\"nofollow\">https://learnxinyminutes.com/docs/brainfuck/</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Brainfuck\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Brainfuck</a></li>\n<li><a href=\"http://blog.klipse.tech/brainfuck/2016/12/17/brainfuck.html\" rel=\"nofollow\">http://blog.klipse.tech/brainfuck/2016/12/17/brainfuck.html</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5856731, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "99bb7c96a17182db3e328eabcb214297", "sha256": "593b30ba064aea1f807f0a165e5554d80a7ecc96f0d8cfbf700e5714e5c58105"}, "downloads": -1, "filename": "brainfoose-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "99bb7c96a17182db3e328eabcb214297", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7416, "upload_time": "2017-11-12T09:36:53", "upload_time_iso_8601": "2017-11-12T09:36:53.434467Z", "url": "https://files.pythonhosted.org/packages/62/74/5588e8970d22c959332a434bc081529e64385d453b6da374234b0a8e2033/brainfoose-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66f9b92ef9fe098c2a879cb630119dd3", "sha256": "6335e0f23cb020f08d61c5e740cbeeca11891e9aaa1d88e4e31dfa3ef93dac4a"}, "downloads": -1, "filename": "brainfoose-2.0.1.tar.gz", "has_sig": true, "md5_digest": "66f9b92ef9fe098c2a879cb630119dd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501, "upload_time": "2017-11-12T09:36:55", "upload_time_iso_8601": "2017-11-12T09:36:55.039041Z", "url": "https://files.pythonhosted.org/packages/a6/f0/f32fac6c36c9e0f4111079767cedcf62bd21800b7808ee64d2fe2d723a33/brainfoose-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "49d9dd2c8843f68322661d3a409ee5dd", "sha256": "0dd783764c01149a2801f52e2ed4ef30b391cd538d4213ee6c65432e442b3547"}, "downloads": -1, "filename": "brainfoose-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49d9dd2c8843f68322661d3a409ee5dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7451, "upload_time": "2018-09-15T19:49:34", "upload_time_iso_8601": "2018-09-15T19:49:34.349480Z", "url": "https://files.pythonhosted.org/packages/4a/3a/9210e0db8fe311f1085620bca6082dd389d21f03551a4bda8b0831886649/brainfoose-2.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd5a15380385b7cbb6f94c38c61cf490", "sha256": "a5719337aa3094379a56003ecfd34d393993a66b3364414d3058c3f68b5762c0"}, "downloads": -1, "filename": "brainfoose-2.0.2.tar.gz", "has_sig": true, "md5_digest": "fd5a15380385b7cbb6f94c38c61cf490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5498, "upload_time": "2018-09-15T19:49:35", "upload_time_iso_8601": "2018-09-15T19:49:35.713162Z", "url": "https://files.pythonhosted.org/packages/3f/7f/cf4126bf89e2bf9157fa3efff3f7a0322b59e2912966e0f425ae55e272ca/brainfoose-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "53bb9fae8f6c632d53b7452fa1a13bc0", "sha256": "0114322ce03dd97a4aab38e97208dc612ffa06d960320f0898a0590506411283"}, "downloads": -1, "filename": "brainfoose-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53bb9fae8f6c632d53b7452fa1a13bc0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5815, "upload_time": "2019-09-19T14:19:37", "upload_time_iso_8601": "2019-09-19T14:19:37.476903Z", "url": "https://files.pythonhosted.org/packages/00/79/2d786a973c1cb3d9473c7310148bb9f73d07ec3ce6b624b257efa2431df0/brainfoose-2.0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53bb9fae8f6c632d53b7452fa1a13bc0", "sha256": "0114322ce03dd97a4aab38e97208dc612ffa06d960320f0898a0590506411283"}, "downloads": -1, "filename": "brainfoose-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53bb9fae8f6c632d53b7452fa1a13bc0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5815, "upload_time": "2019-09-19T14:19:37", "upload_time_iso_8601": "2019-09-19T14:19:37.476903Z", "url": "https://files.pythonhosted.org/packages/00/79/2d786a973c1cb3d9473c7310148bb9f73d07ec3ce6b624b257efa2431df0/brainfoose-2.0.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:36:25 2020"}