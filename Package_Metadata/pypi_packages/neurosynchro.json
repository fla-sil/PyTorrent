{"info": {"author": "Peter Williams", "author_email": "peter@newton.cx", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Topic :: Scientific/Engineering :: Astronomy"], "description": "*Neurosynchro* is a small Python package for creating and using neural\nnetworks to quickly approximate the coefficients needed for fully-polarized\nsynchrotron radiative transfer. It builds on the `Keras <https://keras.io/>`_\ndeep learning library. Documentation may be found `on ReadTheDocs\n<https://neurosynchro.readthedocs.io/en/stable/>`_.\n\nSay that you have a code \u2014 such as `Rimphony\n<https://github.com/pkgw/rimphony/>`_ or `Symphony\n<https://github.com/AFD-Illinois/symphony>`_ \u2014 that calculates synchrotron\nradiative transfer coefficients as a function of some input model parameters\n(electron temperature, particle energy index, etc.). These calculations are\noften accurate but slow. With *neurosynchro*, you can train a neural network\nthat will quickly approximate these calculations with good accuracy. The\nachievable level of accuracy will depend on the particulars of your target\ndistribution function, range of input parameters, and so on.\n\nThis code is specific to synchrotron radiation because it makes certain\nassumptions about how the coefficients scale with input parameters such as the\nobserving frequency.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pkgw/neurosynchro/", "keywords": "neural-networks radiative-transfer science", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "neurosynchro", "package_url": "https://pypi.org/project/neurosynchro/", "platform": "", "project_url": "https://pypi.org/project/neurosynchro/", "project_urls": {"Homepage": "https://github.com/pkgw/neurosynchro/"}, "release_url": "https://pypi.org/project/neurosynchro/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Use neural networks to approximate polarized synchrotron radiative transfer coefficients", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>Neurosynchro</em> is a small Python package for creating and using neural\nnetworks to quickly approximate the coefficients needed for fully-polarized\nsynchrotron radiative transfer. It builds on the <a href=\"https://keras.io/\" rel=\"nofollow\">Keras</a>\ndeep learning library. Documentation may be found <a href=\"https://neurosynchro.readthedocs.io/en/stable/\" rel=\"nofollow\">on ReadTheDocs</a>.</p>\n<p>Say that you have a code \u2014 such as <a href=\"https://github.com/pkgw/rimphony/\" rel=\"nofollow\">Rimphony</a> or <a href=\"https://github.com/AFD-Illinois/symphony\" rel=\"nofollow\">Symphony</a> \u2014 that calculates synchrotron\nradiative transfer coefficients as a function of some input model parameters\n(electron temperature, particle energy index, etc.). These calculations are\noften accurate but slow. With <em>neurosynchro</em>, you can train a neural network\nthat will quickly approximate these calculations with good accuracy. The\nachievable level of accuracy will depend on the particulars of your target\ndistribution function, range of input parameters, and so on.</p>\n<p>This code is specific to synchrotron radiation because it makes certain\nassumptions about how the coefficients scale with input parameters such as the\nobserving frequency.</p>\n\n          </div>"}, "last_serial": 4147121, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "819a16af7bdc28563ca6a297e324cee1", "sha256": "3c69d519f7e113f6527e373a6c009b58d94bbf5e69b7314cf63b6b61bd00aaff"}, "downloads": -1, "filename": "neurosynchro-0.1.0.tar.gz", "has_sig": false, "md5_digest": "819a16af7bdc28563ca6a297e324cee1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11216, "upload_time": "2018-07-24T15:29:21", "upload_time_iso_8601": "2018-07-24T15:29:21.740999Z", "url": "https://files.pythonhosted.org/packages/ba/91/340fc2c5554091db371a142c13224e9a6aabf065a4bd5735007ece43718e/neurosynchro-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4625c40ee282d3a5f2ba152efcd98f40", "sha256": "e104b6539758523fd1a7d8344341b49e2705f8759a1d1cb3fad9d7cff689b4c6"}, "downloads": -1, "filename": "neurosynchro-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4625c40ee282d3a5f2ba152efcd98f40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12359, "upload_time": "2018-07-24T15:41:58", "upload_time_iso_8601": "2018-07-24T15:41:58.474148Z", "url": "https://files.pythonhosted.org/packages/05/7d/c3a4412b877c18661f2b82d631b244896674fe9f9f862b2414c11f0ac4ea/neurosynchro-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "394cedaf6320d2437619e1543689cb64", "sha256": "f12da008d1f409af7fa63ca9b785391495eae2ded1e2b79a3d718ff85fc5b2ba"}, "downloads": -1, "filename": "neurosynchro-0.1.2.tar.gz", "has_sig": false, "md5_digest": "394cedaf6320d2437619e1543689cb64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15646, "upload_time": "2018-07-24T16:41:29", "upload_time_iso_8601": "2018-07-24T16:41:29.583314Z", "url": "https://files.pythonhosted.org/packages/45/46/621ec49ecb42d4f1626d81d74faf5a5106df77a48e229cdd4e77d2d9a71a/neurosynchro-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e6f1ed4158bcdace7e0d82f5f67e2e5e", "sha256": "54dec70dbb4c3ab2e1226e2e345f5362aa07e64f4f69e648966bb7528d0d96f4"}, "downloads": -1, "filename": "neurosynchro-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e6f1ed4158bcdace7e0d82f5f67e2e5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34896, "upload_time": "2018-08-04T20:22:06", "upload_time_iso_8601": "2018-08-04T20:22:06.556000Z", "url": "https://files.pythonhosted.org/packages/70/8c/0bd069762c7d7b090e86a2f0710d22f3db109005140c581f936e1b771282/neurosynchro-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "74bf30d240c2a9c3dc1c013c718cd8a8", "sha256": "16f22a1362bcfb3cc0115f7cd5fcd8943007a0891f0d2041713ec00ef49f94e4"}, "downloads": -1, "filename": "neurosynchro-0.1.4.tar.gz", "has_sig": false, "md5_digest": "74bf30d240c2a9c3dc1c013c718cd8a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41166, "upload_time": "2018-08-08T03:35:05", "upload_time_iso_8601": "2018-08-08T03:35:05.906347Z", "url": "https://files.pythonhosted.org/packages/7c/aa/5d90f35a7a4af29d705c7a4047933343f8f085399fdfe6ff8c993b8eee49/neurosynchro-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74bf30d240c2a9c3dc1c013c718cd8a8", "sha256": "16f22a1362bcfb3cc0115f7cd5fcd8943007a0891f0d2041713ec00ef49f94e4"}, "downloads": -1, "filename": "neurosynchro-0.1.4.tar.gz", "has_sig": false, "md5_digest": "74bf30d240c2a9c3dc1c013c718cd8a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41166, "upload_time": "2018-08-08T03:35:05", "upload_time_iso_8601": "2018-08-08T03:35:05.906347Z", "url": "https://files.pythonhosted.org/packages/7c/aa/5d90f35a7a4af29d705c7a4047933343f8f085399fdfe6ff8c993b8eee49/neurosynchro-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}