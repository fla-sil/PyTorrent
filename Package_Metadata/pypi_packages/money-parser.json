{"info": {"author": "Serhii Kostel", "author_email": "dodge.ksv@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Text Processing", "Topic :: Text Processing :: General"], "description": "Money Parser\n============\n\n\nDescription\n-----------\n\nMoney Parser is a price and currency parsing utility.\nIt provides methods to extract price and currency information from the raw string.\nThere is a lot of different price and currency formats that present values with separators, spacing etc.\nThis library may help you to parse such data.\n\n\nLimitation\n----------\n\n - currency with 3 numbers after decimal point (e.g. KWD, see `ISO 4217`_)\n\n\nIntroduction\n------------\n\nExtracting price from raw ``str``::\n\n   >>> from money_parser import price_str\n   >>> price_str('\u20b91,50,087.99 \\n')\n   '150087.99'\n   >>> price_dec('+12.007')\n   Decimal('12007')\n\nInstallation\n------------\n\n::\n\n   $ pip install money-parser\n\nThe library requires Python >= 3.4\n\n\nDocumentation\n------------------\n\n.. py:function:: price_str(raw_price, [default=<not_defined>], [dec_point='.'])\n\n    Search and clean price value.\n\n    Convert raw price string presented in any localization\n    as a valid number string with an optional decimal point.\n\n    If raw price does not contain valid price value or contains\n    more than one price value, then return default value.\n    If default value not set, then raise ValueError.\n\n    :param str raw_price: string that contains price value.\n    :param default: value that will be returned if raw price not valid.\n    :param dec_point: symbol that separate integer and fractional parts.\n    :return: cleaned price string or default value.\n    :raise ValueError: error if raw price not valid and default value not set.\n\n::\n\n    >>> price_str('+12.007')\n    '12007'\n    >>> price_str('- 520,05')\n    '-520.05'\n    >>> price_str('1,000,777.5')\n    '1000777.5'\n    >>> price_str('1.777.000,99')\n    '1777000.99'\n    >>> price_str('99,77,11,000.1')\n    '997711000.1'\n    >>> price_str('USD 5,242 \\t\\n')\n    '5242'\n    >>> price_str('90 210.42', dec_point='|')\n    '90210|42'\n    >>> price_str(None, default='0')\n    '0'\n    >>> price_str(42.333, default=None) is None\n    True\n    >>> price_str(None)\n    Traceback (most recent call last):\n      ...\n    ValueError: Wrong raw price type \"<class 'NoneType'>\" (expected type \"str\")\n    >>> price_str('')\n    Traceback (most recent call last):\n      ...\n    ValueError: Raw price value \"\" does not contain valid price digits\n    >>> price_str('1..2')\n    Traceback (most recent call last):\n      ...\n    ValueError: Raw price value \"1..2\" contains more than one price value\n\n\n.. py:function:: price_dec(raw_price, [default=<not_defined>])\n\n    Price decimal value from raw string.\n\n    Extract price value from input raw string and\n    present as Decimal number. Uses a price_str function for price parsing.\n\n    If raw price does not contain valid price value or contains\n    more than one price value, then return default value.\n    If default value not set, then raise ValueError.\n\n    :param str raw_price: string that contains price value.\n    :param default: value that will be returned if raw price not valid.\n    :return: Decimal price value.\n    :raise ValueError: error if raw price not valid and default value not set.\n\n::\n\n    >>> price_dec('+12.007')\n    Decimal('12007')\n    >>> price_dec(': -10.99$')\n    Decimal('-10.99')\n    >>> price_dec('', default=Decimal('0'))\n    Decimal('0')\n    >>> price_dec('1..10', default=0)\n    0\n    >>> price_dec('410.5 - 555', default=None) is None\n    True\n    >>> price_dec(42.3)\n    Traceback (most recent call last):\n      ...\n    ValueError: Wrong raw price type \"<class 'float'>\" (expected type \"str\")\n    >>> price_dec('free')\n    Traceback (most recent call last):\n      ...\n    ValueError: Raw price value \"free\" does not contain valid price digits\n    >>> price_dec('2+2')\n    Traceback (most recent call last):\n      ...\n    ValueError: Raw price value \"2+2\" contains more than one price value\n\n\nRun Tests\n------\n\nProject has tests::\n\n    $ make test\n\nAlso available tests with coverage::\n\n    $ make cov\n\n\nSource code\n-----------\n\nThe project is hosted on GitHub_\n\n\nAuthors and License\n-------------------\n\nThe ``money-parser`` package is written by Serhii Kostel.\n\nIt's *Apache 2* licensed and freely available.\n\n\n.. _`ISO 4217`: https://en.wikipedia.org/wiki/ISO_4217\n.. _GitHub: https://github.com/kserhii/money-parser\n\nCHANGES\n=======\n\n0.0.1 (2017-12-17)\n------------------\n\n* The first release.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kserhii/money-parser", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "money-parser", "package_url": "https://pypi.org/project/money-parser/", "platform": "", "project_url": "https://pypi.org/project/money-parser/", "project_urls": {"Homepage": "https://github.com/kserhii/money-parser"}, "release_url": "https://pypi.org/project/money-parser/0.0.1/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Price and currency parsing utility", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Money Parser<br>============<br><br><br>Description<br>-----------<br><br>Money Parser is a price and currency parsing utility.<br>It provides methods to extract price and currency information from the raw string.<br>There is a lot of different price and currency formats that present values with separators, spacing etc.<br>This library may help you to parse such data.<br><br><br>Limitation<br>----------<br><br> - currency with 3 numbers after decimal point (e.g. KWD, see `ISO 4217`_)<br><br><br>Introduction<br>------------<br><br>Extracting price from raw ``str``::<br><br>   &gt;&gt;&gt; from money_parser import price_str<br>   &gt;&gt;&gt; price_str('\u20b91,50,087.99 \\n')<br>   '150087.99'<br>   &gt;&gt;&gt; price_dec('+12.007')<br>   Decimal('12007')<br><br>Installation<br>------------<br><br>::<br><br>   $ pip install money-parser<br><br>The library requires Python &gt;= 3.4<br><br><br>Documentation<br>------------------<br><br>.. py:function:: price_str(raw_price, [default=&lt;not_defined&gt;], [dec_point='.'])<br><br>    Search and clean price value.<br><br>    Convert raw price string presented in any localization<br>    as a valid number string with an optional decimal point.<br><br>    If raw price does not contain valid price value or contains<br>    more than one price value, then return default value.<br>    If default value not set, then raise ValueError.<br><br>    :param str raw_price: string that contains price value.<br>    :param default: value that will be returned if raw price not valid.<br>    :param dec_point: symbol that separate integer and fractional parts.<br>    :return: cleaned price string or default value.<br>    :raise ValueError: error if raw price not valid and default value not set.<br><br>::<br><br>    &gt;&gt;&gt; price_str('+12.007')<br>    '12007'<br>    &gt;&gt;&gt; price_str('- 520,05')<br>    '-520.05'<br>    &gt;&gt;&gt; price_str('1,000,777.5')<br>    '1000777.5'<br>    &gt;&gt;&gt; price_str('1.777.000,99')<br>    '1777000.99'<br>    &gt;&gt;&gt; price_str('99,77,11,000.1')<br>    '997711000.1'<br>    &gt;&gt;&gt; price_str('USD 5,242 \\t\\n')<br>    '5242'<br>    &gt;&gt;&gt; price_str('90 210.42', dec_point='|')<br>    '90210|42'<br>    &gt;&gt;&gt; price_str(None, default='0')<br>    '0'<br>    &gt;&gt;&gt; price_str(42.333, default=None) is None<br>    True<br>    &gt;&gt;&gt; price_str(None)<br>    Traceback (most recent call last):<br>      ...<br>    ValueError: Wrong raw price type \"&lt;class 'NoneType'&gt;\" (expected type \"str\")<br>    &gt;&gt;&gt; price_str('')<br>    Traceback (most recent call last):<br>      ...<br>    ValueError: Raw price value \"\" does not contain valid price digits<br>    &gt;&gt;&gt; price_str('1..2')<br>    Traceback (most recent call last):<br>      ...<br>    ValueError: Raw price value \"1..2\" contains more than one price value<br><br><br>.. py:function:: price_dec(raw_price, [default=&lt;not_defined&gt;])<br><br>    Price decimal value from raw string.<br><br>    Extract price value from input raw string and<br>    present as Decimal number. Uses a price_str function for price parsing.<br><br>    If raw price does not contain valid price value or contains<br>    more than one price value, then return default value.<br>    If default value not set, then raise ValueError.<br><br>    :param str raw_price: string that contains price value.<br>    :param default: value that will be returned if raw price not valid.<br>    :return: Decimal price value.<br>    :raise ValueError: error if raw price not valid and default value not set.<br><br>::<br><br>    &gt;&gt;&gt; price_dec('+12.007')<br>    Decimal('12007')<br>    &gt;&gt;&gt; price_dec(': -10.99$')<br>    Decimal('-10.99')<br>    &gt;&gt;&gt; price_dec('', default=Decimal('0'))<br>    Decimal('0')<br>    &gt;&gt;&gt; price_dec('1..10', default=0)<br>    0<br>    &gt;&gt;&gt; price_dec('410.5 - 555', default=None) is None<br>    True<br>    &gt;&gt;&gt; price_dec(42.3)<br>    Traceback (most recent call last):<br>      ...<br>    ValueError: Wrong raw price type \"&lt;class 'float'&gt;\" (expected type \"str\")<br>    &gt;&gt;&gt; price_dec('free')<br>    Traceback (most recent call last):<br>      ...<br>    ValueError: Raw price value \"free\" does not contain valid price digits<br>    &gt;&gt;&gt; price_dec('2+2')<br>    Traceback (most recent call last):<br>      ...<br>    ValueError: Raw price value \"2+2\" contains more than one price value<br><br><br>Run Tests<br>------<br><br>Project has tests::<br><br>    $ make test<br><br>Also available tests with coverage::<br><br>    $ make cov<br><br><br>Source code<br>-----------<br><br>The project is hosted on GitHub_<br><br><br>Authors and License<br>-------------------<br><br>The ``money-parser`` package is written by Serhii Kostel.<br><br>It's *Apache 2* licensed and freely available.<br><br><br>.. _`ISO 4217`: https://en.wikipedia.org/wiki/ISO_4217<br>.. _GitHub: https://github.com/kserhii/money-parser<br><br>CHANGES<br>=======<br><br>0.0.1 (2017-12-17)<br>------------------<br><br>* The first release.<br><br>\n          </div>"}, "last_serial": 3423553, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7e1976168fbfb476618487d834b4222f", "sha256": "93b4f312f214c54d6474052816c3ecaa8dd67a403e18d18c9001c8f4e4b8f67a"}, "downloads": -1, "filename": "money_parser-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e1976168fbfb476618487d834b4222f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 6368, "upload_time": "2017-12-17T19:27:07", "upload_time_iso_8601": "2017-12-17T19:27:07.083875Z", "url": "https://files.pythonhosted.org/packages/d8/c8/abf8b7bf6d216c8ed23a8427b7f7db221027254d4ca3e906ac4c6b6d2195/money_parser-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "204ae2762d0a3f627482bf8adf39c262", "sha256": "91fb362ba851d0e789586b6a7aec39df0ee1dcb594e50e2bc60d76b90fc1f764"}, "downloads": -1, "filename": "money-parser-0.0.1.tar.gz", "has_sig": false, "md5_digest": "204ae2762d0a3f627482bf8adf39c262", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 9565, "upload_time": "2017-12-17T19:27:08", "upload_time_iso_8601": "2017-12-17T19:27:08.195639Z", "url": "https://files.pythonhosted.org/packages/6b/fd/f69add6f634dc586d92a2671280d7258f86c0e12f9b03d1f1a04be6c3d85/money-parser-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e1976168fbfb476618487d834b4222f", "sha256": "93b4f312f214c54d6474052816c3ecaa8dd67a403e18d18c9001c8f4e4b8f67a"}, "downloads": -1, "filename": "money_parser-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e1976168fbfb476618487d834b4222f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 6368, "upload_time": "2017-12-17T19:27:07", "upload_time_iso_8601": "2017-12-17T19:27:07.083875Z", "url": "https://files.pythonhosted.org/packages/d8/c8/abf8b7bf6d216c8ed23a8427b7f7db221027254d4ca3e906ac4c6b6d2195/money_parser-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "204ae2762d0a3f627482bf8adf39c262", "sha256": "91fb362ba851d0e789586b6a7aec39df0ee1dcb594e50e2bc60d76b90fc1f764"}, "downloads": -1, "filename": "money-parser-0.0.1.tar.gz", "has_sig": false, "md5_digest": "204ae2762d0a3f627482bf8adf39c262", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 9565, "upload_time": "2017-12-17T19:27:08", "upload_time_iso_8601": "2017-12-17T19:27:08.195639Z", "url": "https://files.pythonhosted.org/packages/6b/fd/f69add6f634dc586d92a2671280d7258f86c0e12f9b03d1f1a04be6c3d85/money-parser-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:22 2020"}