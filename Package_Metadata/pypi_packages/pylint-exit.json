{"info": {"author": "Jon Grace-Cox", "author_email": "jongracecox@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# pylint-exit\n\n[![pypi package](https://badge.fury.io/py/pylint-exit.svg)](https://pypi.org/project/pylint-exit)\n[![build status](https://api.travis-ci.org/jongracecox/pylint-exit.svg?branch=master)](https://travis-ci.org/jongracecox/pylint-exit)\n[![downloads](https://img.shields.io/pypi/dm/pylint-exit.svg)](https://pypistats.org/packages/pylint-exit)\n[![GitHub last commit](https://img.shields.io/github/last-commit/jongracecox/pylint-exit.svg)](https://github.com/jongracecox/pylint-exit/commits/master)\n[![GitHub](https://img.shields.io/github/license/jongracecox/pylint-exit.svg)](https://github.com/jongracecox/pylint-exit/blob/master/LICENSE)\n[![GitHub stars](https://img.shields.io/github/stars/jongracecox/pylint-exit.svg?style=social)](https://github.com/jongracecox/pylint-exit/stargazers)\n\nUtility to handle pylint exit codes on Linux in a scripting-friendly way.\n\nPylint uses bit-encoded exit codes to convey the results of the pylint review,\nwhich means it will return with a non-zero return code even when the\npylint scoring was successful.\n\nThis can make it difficult to script the execution of pylint while at the same time\ndetecting genuine errors.\n\n`pylint-exit` is a small command-line utility that can be used to re-process\nthe pylint return code and translate it into a scripting-friendly return code.\n\n`pylint-exit` will decode the bit-encoded return code, identify whether there were\nany fatal messages issued (which might constitute a failure in the execution of\npylint), or a usage error, and return a `0` or `1` return code that is more easily\nused in shell scripts.\n\n# Installation\n\nThe simplest way to install is via `pip`.\n\n```bash\npip install pylint-exit\n```\n\nThis will install the package, and will provide the `pylint-exit` command line utility.\n\nYou can also manually install by downloading `pylint_exit.py`, and make it executable.\n\n```bash\ncurl -o pylint-exit https://raw.githubusercontent.com/jongracecox/pylint-exit/master/pylint_exit.py && chmod +x pylint_exit.py\n```\n\nYou should also consider creating a symbolic link so that the calls in the remainder of this\nREADME work as described.  Update `<path-to>` with where you downloaded the script.\n\n```bash\nln -s <path-to>/pylint_exit.py /usr/local/bin/pylint-exit\n```\n\n*Note: If you perform a `--user` install with `pip` then you will need to ensure `~/.local/bin` appears in your `PATH`\nenvironment variable, otherwise the command line `pylint-exit` will not work.* \n\n# Usage\nAdd `|| pylint-exit $?` to the end of your existing Pylint command.  You can then\nuse the updated `$?` return code in your shell script.\n\n```bash\npylint mymodule.py || pylint-exit $?\nif [ $? -ne 0 ]; then\n  echo \"An error occurred while running pylint.\" >&2\n  exit 1\nfi\n```\n\nNote: Many CI tools will check the return code of each command, so it may be enough to\nsimply add `|| pylint-exit $?`, and leave the return code check to the CI executor.\n\nYou can also use the python code directly if needed:\n\n```bash\npylint mymodule.py || python pylint_exit.py $?\n```\n\n# Return codes\nPylint can return combinations of the following codes.  `pylint-exit` will identify each\nissued message, and return the maximum final return code.\n\n| Pylint code | Message | Final return code |\n| ----------- | ------- | ----------------- |\n| 1  | Fatal message issued | 1 |\n| 2  | Error message issued | 0 |\n| 4  | Warning message issued | 0 |\n| 8  | Refactor message issued | 0 |\n| 16 | Convention message issued | 0 |\n| 32 | Usage error | 1 |\n\nThis list is stored in `exit_codes_list`, which can be customised if needed.\n\nYou can control what is considered a failure using the following command line arguments.\nBy default these types of messages don't cause a non-zero return code. Adding\nany of these arguments will trigger a non-zero return code when those types of\nmessage are raised. \n\n| Name | Meaning |\n| ---- | ------- |\n| `-efail`, `--error-fail` | Fail on issued error messages. |\n| `-wfail`, `--warn-fail` | Fail on issued warning messages. |\n| `-rfail`, `--refactor-fail` | Fail on issued refactor messages. |\n| `-cfail`, `--convention-fail` | Fail on issued convension messages. |\n\n# Examples\n\n## Exiting gracefully on non-severe messages\nIn this example pylint issues refactor and convention messages, and exits with a\nreturn code of 24.  `pylint-exit` decodes this, displays the messages, and exits\nwith a return code of 0.\n\n```bash\n> pylint --rcfile=.pylintrc --output-format=text mymodule.py || pylint-exit $?\nThe following messages were raised:\n\n  - refactor message issued\n  - convention message issued\n\nNo fatal messages detected.  Exiting gracefully...\n> echo $?\n0\n```\n\n## Exiting with an error on severe messages\nIn this example pylint returns with a usage error due to the bad output format, and\nexits with a return code of 32.  `pylint-exit` detects this, displays the message, and\nreturns with an exit code of 1.\n\n```bash\n> pylint --rcfile=.pylintrc --output-format=badformat mymodule.py || pylint-exit $?\nThe following messages were raised:\n\n  - usage error\n\nFatal messages detected.  Failing...\n> echo $?\n1\n```\n\n## Treating errors and warnings as severe\nIn this example we will use the `--error-fail` and `--warn-fail` command line arguments\nto cause pylint-exit to treat errors and warnings as serious enough to return a non-zero\nreturn code.\n\nIn the example scenario pylint issues error and warning messages, and exits with a\nreturn code of 6.  `pylint-exit` decodes this, displays the messages, and exits\nwith a return code of 1 because the error and warning messages are now considered as\nfatal.\n\n\n```bash\n> pylint --rcfile=.pylintrc --output-format=badformat mymodule.py || pylint-exit $?\nThe following messages were raised:\n\n  - error message issued\n  - warning message issued\n\nFatal messages detected.  Failing...\n> echo $?\n1\n\n```\n\n# Testing\n\nYou can test how pylint-exit will react to various return codes using the following command:\n\n```bash\n(exit 6) || pylint-exit $?\n```\n\nor if you are using the python code directly:\n\n```bash\n(exit 6) || python pylint_exit.py $?\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jongracecox/pylint-exit", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylint-exit", "package_url": "https://pypi.org/project/pylint-exit/", "platform": "", "project_url": "https://pypi.org/project/pylint-exit/", "project_urls": {"Homepage": "https://github.com/jongracecox/pylint-exit"}, "release_url": "https://pypi.org/project/pylint-exit/1.1.0/", "requires_dist": ["bitarray"], "requires_python": "", "summary": "Exit code handler for pylint command line utility.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pylint-exit</h1>\n<p><a href=\"https://pypi.org/project/pylint-exit\" rel=\"nofollow\"><img alt=\"pypi package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95186972ca5cad18aea415e4b5a0df7f11220c7d/68747470733a2f2f62616467652e667572792e696f2f70792f70796c696e742d657869742e737667\"></a>\n<a href=\"https://travis-ci.org/jongracecox/pylint-exit\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96b34e2d3bc3993e544fe8df3d85a3d998a309d6/68747470733a2f2f6170692e7472617669732d63692e6f72672f6a6f6e6772616365636f782f70796c696e742d657869742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypistats.org/packages/pylint-exit\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f3cd30e95ca78dfd792139adc3ab7e065ff1778/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70796c696e742d657869742e737667\"></a>\n<a href=\"https://github.com/jongracecox/pylint-exit/commits/master\" rel=\"nofollow\"><img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9583591e3a8c62cc35467252e660f854ce46e73c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6a6f6e6772616365636f782f70796c696e742d657869742e737667\"></a>\n<a href=\"https://github.com/jongracecox/pylint-exit/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a146e206c1ae22c2ad126e3f47a16b4dbb10653d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a6f6e6772616365636f782f70796c696e742d657869742e737667\"></a>\n<a href=\"https://github.com/jongracecox/pylint-exit/stargazers\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9dcbb55b56d5919ced36934a332b5301636e656d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6a6f6e6772616365636f782f70796c696e742d657869742e7376673f7374796c653d736f6369616c\"></a></p>\n<p>Utility to handle pylint exit codes on Linux in a scripting-friendly way.</p>\n<p>Pylint uses bit-encoded exit codes to convey the results of the pylint review,\nwhich means it will return with a non-zero return code even when the\npylint scoring was successful.</p>\n<p>This can make it difficult to script the execution of pylint while at the same time\ndetecting genuine errors.</p>\n<p><code>pylint-exit</code> is a small command-line utility that can be used to re-process\nthe pylint return code and translate it into a scripting-friendly return code.</p>\n<p><code>pylint-exit</code> will decode the bit-encoded return code, identify whether there were\nany fatal messages issued (which might constitute a failure in the execution of\npylint), or a usage error, and return a <code>0</code> or <code>1</code> return code that is more easily\nused in shell scripts.</p>\n<h1>Installation</h1>\n<p>The simplest way to install is via <code>pip</code>.</p>\n<pre>pip install pylint-exit\n</pre>\n<p>This will install the package, and will provide the <code>pylint-exit</code> command line utility.</p>\n<p>You can also manually install by downloading <code>pylint_exit.py</code>, and make it executable.</p>\n<pre>curl -o pylint-exit https://raw.githubusercontent.com/jongracecox/pylint-exit/master/pylint_exit.py <span class=\"o\">&amp;&amp;</span> chmod +x pylint_exit.py\n</pre>\n<p>You should also consider creating a symbolic link so that the calls in the remainder of this\nREADME work as described.  Update <code>&lt;path-to&gt;</code> with where you downloaded the script.</p>\n<pre>ln -s &lt;path-to&gt;/pylint_exit.py /usr/local/bin/pylint-exit\n</pre>\n<p><em>Note: If you perform a <code>--user</code> install with <code>pip</code> then you will need to ensure <code>~/.local/bin</code> appears in your <code>PATH</code>\nenvironment variable, otherwise the command line <code>pylint-exit</code> will not work.</em></p>\n<h1>Usage</h1>\n<p>Add <code>|| pylint-exit $?</code> to the end of your existing Pylint command.  You can then\nuse the updated <code>$?</code> return code in your shell script.</p>\n<pre>pylint mymodule.py <span class=\"o\">||</span> pylint-exit <span class=\"nv\">$?</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$?</span> -ne <span class=\"m\">0</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">\"An error occurred while running pylint.\"</span> &gt;<span class=\"p\">&amp;</span><span class=\"m\">2</span>\n  <span class=\"nb\">exit</span> <span class=\"m\">1</span>\n<span class=\"k\">fi</span>\n</pre>\n<p>Note: Many CI tools will check the return code of each command, so it may be enough to\nsimply add <code>|| pylint-exit $?</code>, and leave the return code check to the CI executor.</p>\n<p>You can also use the python code directly if needed:</p>\n<pre>pylint mymodule.py <span class=\"o\">||</span> python pylint_exit.py <span class=\"nv\">$?</span>\n</pre>\n<h1>Return codes</h1>\n<p>Pylint can return combinations of the following codes.  <code>pylint-exit</code> will identify each\nissued message, and return the maximum final return code.</p>\n<table>\n<thead>\n<tr>\n<th>Pylint code</th>\n<th>Message</th>\n<th>Final return code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Fatal message issued</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Error message issued</td>\n<td>0</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Warning message issued</td>\n<td>0</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Refactor message issued</td>\n<td>0</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Convention message issued</td>\n<td>0</td>\n</tr>\n<tr>\n<td>32</td>\n<td>Usage error</td>\n<td>1</td>\n</tr></tbody></table>\n<p>This list is stored in <code>exit_codes_list</code>, which can be customised if needed.</p>\n<p>You can control what is considered a failure using the following command line arguments.\nBy default these types of messages don't cause a non-zero return code. Adding\nany of these arguments will trigger a non-zero return code when those types of\nmessage are raised.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-efail</code>, <code>--error-fail</code></td>\n<td>Fail on issued error messages.</td>\n</tr>\n<tr>\n<td><code>-wfail</code>, <code>--warn-fail</code></td>\n<td>Fail on issued warning messages.</td>\n</tr>\n<tr>\n<td><code>-rfail</code>, <code>--refactor-fail</code></td>\n<td>Fail on issued refactor messages.</td>\n</tr>\n<tr>\n<td><code>-cfail</code>, <code>--convention-fail</code></td>\n<td>Fail on issued convension messages.</td>\n</tr></tbody></table>\n<h1>Examples</h1>\n<h2>Exiting gracefully on non-severe messages</h2>\n<p>In this example pylint issues refactor and convention messages, and exits with a\nreturn code of 24.  <code>pylint-exit</code> decodes this, displays the messages, and exits\nwith a return code of 0.</p>\n<pre>&gt; pylint --rcfile<span class=\"o\">=</span>.pylintrc --output-format<span class=\"o\">=</span>text mymodule.py <span class=\"o\">||</span> pylint-exit <span class=\"nv\">$?</span>\nThe following messages were raised:\n\n  - refactor message issued\n  - convention message issued\n\nNo fatal messages detected.  Exiting gracefully...\n&gt; <span class=\"nb\">echo</span> <span class=\"nv\">$?</span>\n<span class=\"m\">0</span>\n</pre>\n<h2>Exiting with an error on severe messages</h2>\n<p>In this example pylint returns with a usage error due to the bad output format, and\nexits with a return code of 32.  <code>pylint-exit</code> detects this, displays the message, and\nreturns with an exit code of 1.</p>\n<pre>&gt; pylint --rcfile<span class=\"o\">=</span>.pylintrc --output-format<span class=\"o\">=</span>badformat mymodule.py <span class=\"o\">||</span> pylint-exit <span class=\"nv\">$?</span>\nThe following messages were raised:\n\n  - usage error\n\nFatal messages detected.  Failing...\n&gt; <span class=\"nb\">echo</span> <span class=\"nv\">$?</span>\n<span class=\"m\">1</span>\n</pre>\n<h2>Treating errors and warnings as severe</h2>\n<p>In this example we will use the <code>--error-fail</code> and <code>--warn-fail</code> command line arguments\nto cause pylint-exit to treat errors and warnings as serious enough to return a non-zero\nreturn code.</p>\n<p>In the example scenario pylint issues error and warning messages, and exits with a\nreturn code of 6.  <code>pylint-exit</code> decodes this, displays the messages, and exits\nwith a return code of 1 because the error and warning messages are now considered as\nfatal.</p>\n<pre>&gt; pylint --rcfile<span class=\"o\">=</span>.pylintrc --output-format<span class=\"o\">=</span>badformat mymodule.py <span class=\"o\">||</span> pylint-exit <span class=\"nv\">$?</span>\nThe following messages were raised:\n\n  - error message issued\n  - warning message issued\n\nFatal messages detected.  Failing...\n&gt; <span class=\"nb\">echo</span> <span class=\"nv\">$?</span>\n<span class=\"m\">1</span>\n</pre>\n<h1>Testing</h1>\n<p>You can test how pylint-exit will react to various return codes using the following command:</p>\n<pre><span class=\"o\">(</span><span class=\"nb\">exit</span> <span class=\"m\">6</span><span class=\"o\">)</span> <span class=\"o\">||</span> pylint-exit <span class=\"nv\">$?</span>\n</pre>\n<p>or if you are using the python code directly:</p>\n<pre><span class=\"o\">(</span><span class=\"nb\">exit</span> <span class=\"m\">6</span><span class=\"o\">)</span> <span class=\"o\">||</span> python pylint_exit.py <span class=\"nv\">$?</span>\n</pre>\n\n          </div>"}, "last_serial": 6155674, "releases": {"0.1.0rc1": [{"comment_text": "", "digests": {"md5": "159fae7e3294c8b95f32ec4835e2d260", "sha256": "5975b79e46805d3351aef4aedd46bf955d77b1f3a43df736783c862d2b9717b1"}, "downloads": -1, "filename": "pylint_exit-0.1.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "159fae7e3294c8b95f32ec4835e2d260", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3160, "upload_time": "2018-01-21T17:11:35", "upload_time_iso_8601": "2018-01-21T17:11:35.629395Z", "url": "https://files.pythonhosted.org/packages/b8/c4/98a1c7ba94ef365af205b4a0a888490c05867476233a153f962d5f816aae/pylint_exit-0.1.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a392d564c6d596e72d6dfe33bbe85857", "sha256": "d1d96d5e070d96b8e743a3f73001eacb5706337dd81bc051e8d42b32ce4588dc"}, "downloads": -1, "filename": "pylint-exit-0.1.0rc1.zip", "has_sig": false, "md5_digest": "a392d564c6d596e72d6dfe33bbe85857", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5155, "upload_time": "2018-01-21T17:11:36", "upload_time_iso_8601": "2018-01-21T17:11:36.415607Z", "url": "https://files.pythonhosted.org/packages/41/23/10e0e9ae710001217c71b8babd38a0cc3ec000fe052d7a15a65e1bdb6b6d/pylint-exit-0.1.0rc1.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6e723e42b166223729d20be7b3aae003", "sha256": "c6d0f1df347997962d523de6df9fc323ffff7a5095434ccc23f52e411bb0daf2"}, "downloads": -1, "filename": "pylint_exit-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6e723e42b166223729d20be7b3aae003", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3214, "upload_time": "2018-02-10T02:32:46", "upload_time_iso_8601": "2018-02-10T02:32:46.899054Z", "url": "https://files.pythonhosted.org/packages/5a/2c/e86bc10c9a95555392042a390d3c05d43465ea7b89b5e80d2a4267f02663/pylint_exit-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "537442dc151ae8e782057c8b1c85ce83", "sha256": "076500d0daeff96ea6e1d5f7be5e0ea2e5d98016f3e89a7a022a5cb4f4c8c141"}, "downloads": -1, "filename": "pylint-exit-1.0.0.zip", "has_sig": false, "md5_digest": "537442dc151ae8e782057c8b1c85ce83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5124, "upload_time": "2018-02-10T02:32:48", "upload_time_iso_8601": "2018-02-10T02:32:48.293918Z", "url": "https://files.pythonhosted.org/packages/13/82/a4336b72b4c8fb1b05a92c3c6d6e2f3f38ca847e96b818bbc4254da5e9c4/pylint-exit-1.0.0.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f4c5abfd23cecaab06775cfc947b88c5", "sha256": "15cdf5414ecec410e364bf31b4b98ed7557a1ce44d75a0faa6684200e60d5259"}, "downloads": -1, "filename": "pylint_exit-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4c5abfd23cecaab06775cfc947b88c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6358, "upload_time": "2019-11-18T13:08:23", "upload_time_iso_8601": "2019-11-18T13:08:23.142787Z", "url": "https://files.pythonhosted.org/packages/f2/c2/260572fa5a2d12fbc52e761226f2f987ca437381e4d0b84aa2d37098b9a7/pylint_exit-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "432d0fcceb580e0845c40c4decb7b570", "sha256": "a1a49845941a8d3d48505c9eb9a85c87ef6aeb1f43506ee4b2976e8e1abc6101"}, "downloads": -1, "filename": "pylint-exit-1.1.0.zip", "has_sig": false, "md5_digest": "432d0fcceb580e0845c40c4decb7b570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11282, "upload_time": "2019-11-18T13:08:24", "upload_time_iso_8601": "2019-11-18T13:08:24.202986Z", "url": "https://files.pythonhosted.org/packages/b6/b2/204d96049760f78b93abe5f34f04fb8d4672afc1c883b1c70daf63346bbe/pylint-exit-1.1.0.zip", "yanked": false}], "1.1.0rc1": [{"comment_text": "", "digests": {"md5": "3ca18e5fbcd510101e7d8b90a8d7da6a", "sha256": "8b6ca9d27c97a583cc611a7a0b71a37076669e635acb83fcc3dc828a54cd2b34"}, "downloads": -1, "filename": "pylint_exit-1.1.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3ca18e5fbcd510101e7d8b90a8d7da6a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6313, "upload_time": "2018-02-10T02:37:59", "upload_time_iso_8601": "2018-02-10T02:37:59.553566Z", "url": "https://files.pythonhosted.org/packages/c6/ed/e01108e8015c6d1ac924c9b2aaf28c980ad3512497c6133ef10384971da5/pylint_exit-1.1.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d11917e0b24e15cd7a0da22fdf12956", "sha256": "92b16f8ce3b122017d0a91e4a5cb0d10ae6788390b89e23b853dbc214e8fb987"}, "downloads": -1, "filename": "pylint-exit-1.1.0rc1.zip", "has_sig": false, "md5_digest": "4d11917e0b24e15cd7a0da22fdf12956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8368, "upload_time": "2018-02-10T02:38:01", "upload_time_iso_8601": "2018-02-10T02:38:01.351419Z", "url": "https://files.pythonhosted.org/packages/ba/2b/4f52feccdf5fa9ccad69e34c5515283fbd4579ed44d9febc1d30dd7acf5d/pylint-exit-1.1.0rc1.zip", "yanked": false}], "1.1.0rc5": [{"comment_text": "", "digests": {"md5": "9e94e5c55512ef747587b03f1152210e", "sha256": "25410459bbe8a3d148bef1ec18aea1cb0dd6d66761f47ea373536b9477cb3481"}, "downloads": -1, "filename": "pylint_exit-1.1.0rc5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e94e5c55512ef747587b03f1152210e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6663, "upload_time": "2018-02-10T17:26:27", "upload_time_iso_8601": "2018-02-10T17:26:27.357125Z", "url": "https://files.pythonhosted.org/packages/e8/79/d9549850e249bbd2f6d94334fe7c27e112b436b42491470f03504b8f5bf4/pylint_exit-1.1.0rc5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd8861dcb5e207ebe0a8b7ea3ec4cab2", "sha256": "171c9e48893c569c7a28a0fe579f572a4036b4b9bbb7cba3a48df4aa6b86a6c6"}, "downloads": -1, "filename": "pylint-exit-1.1.0rc5.zip", "has_sig": false, "md5_digest": "dd8861dcb5e207ebe0a8b7ea3ec4cab2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8876, "upload_time": "2018-02-10T17:26:28", "upload_time_iso_8601": "2018-02-10T17:26:28.251947Z", "url": "https://files.pythonhosted.org/packages/97/83/05502ec8c564ef608e6eeec8aebe6ce173cba8847637e23995fa1756cf03/pylint-exit-1.1.0rc5.zip", "yanked": false}], "1.1.0rc6": [{"comment_text": "", "digests": {"md5": "e0c5e2d1bf815e1911f4154a32c98751", "sha256": "618e2994773b785e69e56841524be3001835cd440264483955d4d76efad64ddf"}, "downloads": -1, "filename": "pylint_exit-1.1.0rc6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0c5e2d1bf815e1911f4154a32c98751", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4771, "upload_time": "2019-11-18T11:50:15", "upload_time_iso_8601": "2019-11-18T11:50:15.835845Z", "url": "https://files.pythonhosted.org/packages/2d/97/de65a6924a42404053884035f06599b94c0e68cd4002bd9e232463608568/pylint_exit-1.1.0rc6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4479eb1557b772e8632130c115af5342", "sha256": "5548d522e45d3cd873bd4900b5a59140d0536fad09843f02647843556e9b3d64"}, "downloads": -1, "filename": "pylint-exit-1.1.0rc6.zip", "has_sig": false, "md5_digest": "4479eb1557b772e8632130c115af5342", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9362, "upload_time": "2019-11-18T11:50:17", "upload_time_iso_8601": "2019-11-18T11:50:17.262484Z", "url": "https://files.pythonhosted.org/packages/25/f4/1539622ad8290f1b3bbde599ce197eb13b889a010c5d10a5742ad0a5ec23/pylint-exit-1.1.0rc6.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f4c5abfd23cecaab06775cfc947b88c5", "sha256": "15cdf5414ecec410e364bf31b4b98ed7557a1ce44d75a0faa6684200e60d5259"}, "downloads": -1, "filename": "pylint_exit-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4c5abfd23cecaab06775cfc947b88c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6358, "upload_time": "2019-11-18T13:08:23", "upload_time_iso_8601": "2019-11-18T13:08:23.142787Z", "url": "https://files.pythonhosted.org/packages/f2/c2/260572fa5a2d12fbc52e761226f2f987ca437381e4d0b84aa2d37098b9a7/pylint_exit-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "432d0fcceb580e0845c40c4decb7b570", "sha256": "a1a49845941a8d3d48505c9eb9a85c87ef6aeb1f43506ee4b2976e8e1abc6101"}, "downloads": -1, "filename": "pylint-exit-1.1.0.zip", "has_sig": false, "md5_digest": "432d0fcceb580e0845c40c4decb7b570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11282, "upload_time": "2019-11-18T13:08:24", "upload_time_iso_8601": "2019-11-18T13:08:24.202986Z", "url": "https://files.pythonhosted.org/packages/b6/b2/204d96049760f78b93abe5f34f04fb8d4672afc1c883b1c70daf63346bbe/pylint-exit-1.1.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:03:01 2020"}