{"info": {"author": "Andy Shapiro", "author_email": "shapiromatron@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# Literature Getter (litter_getter)\n\n![PyPI](https://img.shields.io/pypi/v/litter_getter)\n\nRetrieve literature from biomedical reference libraries such as PubMed, EPA's HERO, and imports from Endnote RIS exports.\n\n* Search and reference parsing using [PubMed](http://www.ncbi.nlm.nih.gov/pubmed)\n* Search and reference parsing using [US EPA HERO](https://hero.epa.gov/hero/)\n* Endnote/Reference Manager RIS file-export parsing\n\n## Installation\n\nInstall with pip:\n\n```bash\npip install litter_getter\n```\n\nTo grab a developer build:\n\n```bash\ngit clone git@github.com:shapiromatron/litter_getter.git\ncd litter_getter/\npython -m venv venv\nsource venv/bin/activate\npip install -e .[dev,test]\n```\n\nTests require use of an API key; see below. I generally add one to my virtual environment:\n\n```bash\necho \"export \\\"PUBMED_API_KEY=this-is-my-key\\\"\" >> venv/bin/activate\ntail venv/bin/activate\nsource venv/bin/activate\n\nmake test\n```\n\n## Usage\n\nThe data are currently extracted as list of dicts, using a preset, opinionated,\ndictionary format. This could probably be revised for increased flexibility; if\nyou have a need, feel free to submit an issue.\n\n### PubMed\n\nThe PubMed API generally uses an API key for best [performance](https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/), in `litter_getter` this is optional but can be added, you'll only need to do this one time for a session.\n\n```python\nfrom litter_getter import pubmed\n\npubmed.connect('my-special-api-key')\n```\n\nIf you're not using a key and a server returns 429 errors, you may want to try adding a key. A query can be submitted; the number of references returned and the IDs for the references can be extracted:\n\n```python\nfrom litter_getter import pubmed\n\nsearch_term = \"\"\"science[journal] AND breast cancer AND 2008[pdat]\"\"\"\nsearch = pubmed.PubMedSearch(term=search_term)\n\nsearch.get_ids_count()\nsearch.id_count\n>>> 123\n\nsearch.get_ids()\n>>> ['19008416', '18927361', '18787170', '18487186', '18239126', '18239125']\n```\n\nAfter obtaining a list of references, details on each reference can be downloaded and parsed:\n\n```python\nids = [19008416, 18927361]\nfetch = pubmed.PubMedFetch(id_list=ids)\nrefs = fetch.get_content()\n\nrefs[0].keys()\n>>> ['xml', 'doi', 'title', 'abstract', 'citation', 'authors_short', 'year', 'PMID', 'authors']\n```\n\nThe complete XML returned from Pubmed is captured in the `xml` field.\n\n### HERO\n\nIf reference IDs are known, references can be collected and parsed from the EPA HERO database:\n\n```python\nfrom litter_getter import hero\n\nids = [1221, 1223]\nfetch = hero.HEROFetch(id_list=ids)\nresults = fetch.get_content()\n\nresults.keys()\n>>> ['failure', 'success']\n\nresults.failures()\n>>> [12413113]\n\n>>> results['success'][0].keys()\n>>> ['source', 'json', 'title', 'authors_short', 'HEROID', 'abstract', 'year', 'PMID', 'authors']\n```\n\nThe complete JSON returned from HERo is captured in the `json` field.\n\n### RIS\n\nRIS exports from common reference management software such as [Endnote]()http://endnote.com/) or [Reference Manager](http://referencemanager.com/) can be parsed via:\n\n```python\nfrom litter_getter import ris\nimport os\n\nfn = os.path.expanduser(\"~/Desktop/sample_ris.txt\")\nimporter = ris.RisImporter(fn)\nrefs = importer.references\n\nrefs[0].keys()\n>>> ['doi', 'title', 'reference_type', 'abstract', 'citation', 'accession_number',\n        'json', 'authors_short', 'year', 'accession_db', 'PMID', 'id']\n```\n\n\n# History\n\n## 0.3.0 (2020-03-26)\n\n* Standardize author name cleanup across all import types\n* Rename `authors_list` to `authors`; all return a list of authors\n* Pubmed and HERO import fetch requests expect a list of integer values, not strings\n* Pubmed and HERO ids returned in content are now integer instead of strings\n* For HERO and RIS, don't save json field as string, but instead as JSON-compatible dictionary\n* Python 3.6 or higher is required\n\n## 0.2.6 (2020-01-30)\n\n* Make Pubmed API key optional\n\n## 0.2.5 (2020-01-30)\n\n* Use new HERO URL\n* Use Pubmed API keys\n* Code style enforcement with black\n* Simplify tooling dependencies (no more travis, readthedocs, etc)\n\n## 0.2.4 (2018-06-05)\n\n* Fix bug in capturing title text with child elements\n\n\n## 0.2.3 (2018-04-25)\n\n* Fix bug in capturing abstract text with child elements\n\n\n## 0.2.2 (2018-04-10)\n\n* Bump RISparser version\n* Prevent error if fetch called before count (@breisfeld)\n\n\n## 0.2.1 (2017-05-30)\n\n* Return unicode XML instead of bytes in dict\n\n\n## 0.2.0 (2017-05-29)\n\n* Upgraded to Python 3 only\n\n\n## 0.1.2 (2017-04-07)\n\n* Try to return an int for ID unless it fails; then keep string\n\n\n## 0.1.1 (2016-09-27)\n\n* Added documentation.\n\n\n## 0.1.0 (2016-09-26)\n\n* Initial release.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shapiromatron/litter_getter", "keywords": "litter_getter", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "litter-getter", "package_url": "https://pypi.org/project/litter-getter/", "platform": "", "project_url": "https://pypi.org/project/litter-getter/", "project_urls": {"Homepage": "https://github.com/shapiromatron/litter_getter"}, "release_url": "https://pypi.org/project/litter-getter/0.3.0/", "requires_dist": ["requests", "XlsxWriter", "RISparser", "wheel ; extra == 'dev'", "black (==19.10b0) ; extra == 'dev'", "flake8 (==3.7.9) ; extra == 'dev'", "isort (==4.3.21) ; extra == 'dev'", "flake8-isort (==2.8.0) ; extra == 'dev'", "twine ; extra == 'dev'", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Retrieve literature from biomedical reference libraries such as PubMed, EPA's HERO, and imports from Endnote RIS exports", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Literature Getter (litter_getter)</h1>\n<p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abd984d1899ab2c39df6e0855b361c18c6886565/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c69747465725f676574746572\"></p>\n<p>Retrieve literature from biomedical reference libraries such as PubMed, EPA's HERO, and imports from Endnote RIS exports.</p>\n<ul>\n<li>Search and reference parsing using <a href=\"http://www.ncbi.nlm.nih.gov/pubmed\" rel=\"nofollow\">PubMed</a></li>\n<li>Search and reference parsing using <a href=\"https://hero.epa.gov/hero/\" rel=\"nofollow\">US EPA HERO</a></li>\n<li>Endnote/Reference Manager RIS file-export parsing</li>\n</ul>\n<h2>Installation</h2>\n<p>Install with pip:</p>\n<pre>pip install litter_getter\n</pre>\n<p>To grab a developer build:</p>\n<pre>git clone git@github.com:shapiromatron/litter_getter.git\n<span class=\"nb\">cd</span> litter_getter/\npython -m venv venv\n<span class=\"nb\">source</span> venv/bin/activate\npip install -e .<span class=\"o\">[</span>dev,test<span class=\"o\">]</span>\n</pre>\n<p>Tests require use of an API key; see below. I generally add one to my virtual environment:</p>\n<pre><span class=\"nb\">echo</span> <span class=\"s2\">\"export \\\"PUBMED_API_KEY=this-is-my-key\\\"\"</span> &gt;&gt; venv/bin/activate\ntail venv/bin/activate\n<span class=\"nb\">source</span> venv/bin/activate\n\nmake <span class=\"nb\">test</span>\n</pre>\n<h2>Usage</h2>\n<p>The data are currently extracted as list of dicts, using a preset, opinionated,\ndictionary format. This could probably be revised for increased flexibility; if\nyou have a need, feel free to submit an issue.</p>\n<h3>PubMed</h3>\n<p>The PubMed API generally uses an API key for best <a href=\"https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/\" rel=\"nofollow\">performance</a>, in <code>litter_getter</code> this is optional but can be added, you'll only need to do this one time for a session.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">litter_getter</span> <span class=\"kn\">import</span> <span class=\"n\">pubmed</span>\n\n<span class=\"n\">pubmed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'my-special-api-key'</span><span class=\"p\">)</span>\n</pre>\n<p>If you're not using a key and a server returns 429 errors, you may want to try adding a key. A query can be submitted; the number of references returned and the IDs for the references can be extracted:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">litter_getter</span> <span class=\"kn\">import</span> <span class=\"n\">pubmed</span>\n\n<span class=\"n\">search_term</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"science[journal] AND breast cancer AND 2008[pdat]\"\"\"</span>\n<span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"n\">pubmed</span><span class=\"o\">.</span><span class=\"n\">PubMedSearch</span><span class=\"p\">(</span><span class=\"n\">term</span><span class=\"o\">=</span><span class=\"n\">search_term</span><span class=\"p\">)</span>\n\n<span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">get_ids_count</span><span class=\"p\">()</span>\n<span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">id_count</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">123</span>\n\n<span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">get_ids</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'19008416'</span><span class=\"p\">,</span> <span class=\"s1\">'18927361'</span><span class=\"p\">,</span> <span class=\"s1\">'18787170'</span><span class=\"p\">,</span> <span class=\"s1\">'18487186'</span><span class=\"p\">,</span> <span class=\"s1\">'18239126'</span><span class=\"p\">,</span> <span class=\"s1\">'18239125'</span><span class=\"p\">]</span>\n</pre>\n<p>After obtaining a list of references, details on each reference can be downloaded and parsed:</p>\n<pre><span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">19008416</span><span class=\"p\">,</span> <span class=\"mi\">18927361</span><span class=\"p\">]</span>\n<span class=\"n\">fetch</span> <span class=\"o\">=</span> <span class=\"n\">pubmed</span><span class=\"o\">.</span><span class=\"n\">PubMedFetch</span><span class=\"p\">(</span><span class=\"n\">id_list</span><span class=\"o\">=</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n<span class=\"n\">refs</span> <span class=\"o\">=</span> <span class=\"n\">fetch</span><span class=\"o\">.</span><span class=\"n\">get_content</span><span class=\"p\">()</span>\n\n<span class=\"n\">refs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'xml'</span><span class=\"p\">,</span> <span class=\"s1\">'doi'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'abstract'</span><span class=\"p\">,</span> <span class=\"s1\">'citation'</span><span class=\"p\">,</span> <span class=\"s1\">'authors_short'</span><span class=\"p\">,</span> <span class=\"s1\">'year'</span><span class=\"p\">,</span> <span class=\"s1\">'PMID'</span><span class=\"p\">,</span> <span class=\"s1\">'authors'</span><span class=\"p\">]</span>\n</pre>\n<p>The complete XML returned from Pubmed is captured in the <code>xml</code> field.</p>\n<h3>HERO</h3>\n<p>If reference IDs are known, references can be collected and parsed from the EPA HERO database:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">litter_getter</span> <span class=\"kn\">import</span> <span class=\"n\">hero</span>\n\n<span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1221</span><span class=\"p\">,</span> <span class=\"mi\">1223</span><span class=\"p\">]</span>\n<span class=\"n\">fetch</span> <span class=\"o\">=</span> <span class=\"n\">hero</span><span class=\"o\">.</span><span class=\"n\">HEROFetch</span><span class=\"p\">(</span><span class=\"n\">id_list</span><span class=\"o\">=</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">fetch</span><span class=\"o\">.</span><span class=\"n\">get_content</span><span class=\"p\">()</span>\n\n<span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'failure'</span><span class=\"p\">,</span> <span class=\"s1\">'success'</span><span class=\"p\">]</span>\n\n<span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">failures</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">12413113</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'success'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'source'</span><span class=\"p\">,</span> <span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'authors_short'</span><span class=\"p\">,</span> <span class=\"s1\">'HEROID'</span><span class=\"p\">,</span> <span class=\"s1\">'abstract'</span><span class=\"p\">,</span> <span class=\"s1\">'year'</span><span class=\"p\">,</span> <span class=\"s1\">'PMID'</span><span class=\"p\">,</span> <span class=\"s1\">'authors'</span><span class=\"p\">]</span>\n</pre>\n<p>The complete JSON returned from HERo is captured in the <code>json</code> field.</p>\n<h3>RIS</h3>\n<p>RIS exports from common reference management software such as <a href=\"\" rel=\"nofollow\">Endnote</a><a href=\"http://endnote.com/\" rel=\"nofollow\">http://endnote.com/</a>) or <a href=\"http://referencemanager.com/\" rel=\"nofollow\">Reference Manager</a> can be parsed via:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">litter_getter</span> <span class=\"kn\">import</span> <span class=\"n\">ris</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">fn</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">\"~/Desktop/sample_ris.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">importer</span> <span class=\"o\">=</span> <span class=\"n\">ris</span><span class=\"o\">.</span><span class=\"n\">RisImporter</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">)</span>\n<span class=\"n\">refs</span> <span class=\"o\">=</span> <span class=\"n\">importer</span><span class=\"o\">.</span><span class=\"n\">references</span>\n\n<span class=\"n\">refs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'doi'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'reference_type'</span><span class=\"p\">,</span> <span class=\"s1\">'abstract'</span><span class=\"p\">,</span> <span class=\"s1\">'citation'</span><span class=\"p\">,</span> <span class=\"s1\">'accession_number'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"s1\">'authors_short'</span><span class=\"p\">,</span> <span class=\"s1\">'year'</span><span class=\"p\">,</span> <span class=\"s1\">'accession_db'</span><span class=\"p\">,</span> <span class=\"s1\">'PMID'</span><span class=\"p\">,</span> <span class=\"s1\">'id'</span><span class=\"p\">]</span>\n</pre>\n<h1>History</h1>\n<h2>0.3.0 (2020-03-26)</h2>\n<ul>\n<li>Standardize author name cleanup across all import types</li>\n<li>Rename <code>authors_list</code> to <code>authors</code>; all return a list of authors</li>\n<li>Pubmed and HERO import fetch requests expect a list of integer values, not strings</li>\n<li>Pubmed and HERO ids returned in content are now integer instead of strings</li>\n<li>For HERO and RIS, don't save json field as string, but instead as JSON-compatible dictionary</li>\n<li>Python 3.6 or higher is required</li>\n</ul>\n<h2>0.2.6 (2020-01-30)</h2>\n<ul>\n<li>Make Pubmed API key optional</li>\n</ul>\n<h2>0.2.5 (2020-01-30)</h2>\n<ul>\n<li>Use new HERO URL</li>\n<li>Use Pubmed API keys</li>\n<li>Code style enforcement with black</li>\n<li>Simplify tooling dependencies (no more travis, readthedocs, etc)</li>\n</ul>\n<h2>0.2.4 (2018-06-05)</h2>\n<ul>\n<li>Fix bug in capturing title text with child elements</li>\n</ul>\n<h2>0.2.3 (2018-04-25)</h2>\n<ul>\n<li>Fix bug in capturing abstract text with child elements</li>\n</ul>\n<h2>0.2.2 (2018-04-10)</h2>\n<ul>\n<li>Bump RISparser version</li>\n<li>Prevent error if fetch called before count (@breisfeld)</li>\n</ul>\n<h2>0.2.1 (2017-05-30)</h2>\n<ul>\n<li>Return unicode XML instead of bytes in dict</li>\n</ul>\n<h2>0.2.0 (2017-05-29)</h2>\n<ul>\n<li>Upgraded to Python 3 only</li>\n</ul>\n<h2>0.1.2 (2017-04-07)</h2>\n<ul>\n<li>Try to return an int for ID unless it fails; then keep string</li>\n</ul>\n<h2>0.1.1 (2016-09-27)</h2>\n<ul>\n<li>Added documentation.</li>\n</ul>\n<h2>0.1.0 (2016-09-26)</h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n\n          </div>"}, "last_serial": 6900468, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "caec6a12bae76d4f158bbb2119c90924", "sha256": "9305fbb0fff7be490fbe3d30eb177050abac198b906d160a6b10b8f82b9914a0"}, "downloads": -1, "filename": "litter_getter-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "caec6a12bae76d4f158bbb2119c90924", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11455, "upload_time": "2016-09-26T21:43:14", "upload_time_iso_8601": "2016-09-26T21:43:14.044685Z", "url": "https://files.pythonhosted.org/packages/7b/e4/dd76e0b882146aa88a6b7d015ee0623754c8a2433bab43c4677383ae0b75/litter_getter-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "565d5aed64f5183ebc59f57cb0634013", "sha256": "7b8a9ea39176349c8a75d13d8bd0a57132636009f06032ebb764cfcb9c34f446"}, "downloads": -1, "filename": "litter_getter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "565d5aed64f5183ebc59f57cb0634013", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44322, "upload_time": "2016-09-26T21:43:11", "upload_time_iso_8601": "2016-09-26T21:43:11.870664Z", "url": "https://files.pythonhosted.org/packages/34/92/d98e884364826ed5c13087664a8635cc155df20d5d2a6be8d4f07e02779e/litter_getter-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8e495eb558dd5a79349505cb10ebe645", "sha256": "e70597276726a20265986da48d2b6c85ae9d79a75d4e557e6899106e429b9469"}, "downloads": -1, "filename": "litter_getter-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e495eb558dd5a79349505cb10ebe645", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11485, "upload_time": "2016-09-27T14:47:08", "upload_time_iso_8601": "2016-09-27T14:47:08.968876Z", "url": "https://files.pythonhosted.org/packages/5f/38/ff33214336b9deef85cdaa6170c3661aed0dc94299c9eec5ab128a23d756/litter_getter-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f9f5b348c4a793977ef18929d818c0d", "sha256": "fd79106de9d4f76705fca1f6be4c9393ae30efc71bdc85079b7f4980cd4ba7e3"}, "downloads": -1, "filename": "litter_getter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2f9f5b348c4a793977ef18929d818c0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45257, "upload_time": "2016-09-27T14:47:06", "upload_time_iso_8601": "2016-09-27T14:47:06.453012Z", "url": "https://files.pythonhosted.org/packages/ab/8d/b60c59345c4eba52b1d9ddecbd2b7e3c7db322ec881e6d0f39e4f2cec161/litter_getter-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9412784be281ee8ab57b2d8f1b51c84a", "sha256": "cac43f5682929c5b247747a58087cbade07f04d8ab2a61c14cd64d4435374412"}, "downloads": -1, "filename": "litter_getter-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9412784be281ee8ab57b2d8f1b51c84a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11617, "upload_time": "2017-04-07T19:36:13", "upload_time_iso_8601": "2017-04-07T19:36:13.703283Z", "url": "https://files.pythonhosted.org/packages/98/ea/d76cde6dbba30899d89c04eac0065f3acbffee43c0781bafd58bf5a0da2e/litter_getter-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "149c858918a2275ea9cf4d0567b8d5ad", "sha256": "66a08d4ca9ab4434c5be49928c3365358da2f7cbd23e10ff380e944270bd9ce1"}, "downloads": -1, "filename": "litter_getter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "149c858918a2275ea9cf4d0567b8d5ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45447, "upload_time": "2017-04-07T19:36:11", "upload_time_iso_8601": "2017-04-07T19:36:11.086062Z", "url": "https://files.pythonhosted.org/packages/22/9c/604a72232331ed9ec49bd830cf17874bd943bcdbc9a247115b24d32c33ee/litter_getter-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8e3d2c9e6ad98593db63eb6fec1d1255", "sha256": "ba61d77393d478ff377e03814e51a202c4e2538a3982dfc45c9b0552030a686a"}, "downloads": -1, "filename": "litter_getter-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e3d2c9e6ad98593db63eb6fec1d1255", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 11750, "upload_time": "2017-05-30T03:42:39", "upload_time_iso_8601": "2017-05-30T03:42:39.659205Z", "url": "https://files.pythonhosted.org/packages/e1/d2/f12bd9ef31dbb983e0bd35318100152dc3b47ee595f4b947047ce41990cc/litter_getter-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fe2a2aaa0aad9d1fde9b2a94c67eb85", "sha256": "25900fd3d6cceb9737cf5295ea160521a301d4e04c6696e6e6600669562c355b"}, "downloads": -1, "filename": "litter_getter-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8fe2a2aaa0aad9d1fde9b2a94c67eb85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45712, "upload_time": "2017-05-30T03:42:37", "upload_time_iso_8601": "2017-05-30T03:42:37.712169Z", "url": "https://files.pythonhosted.org/packages/b4/15/04d52631aa44ac0d09f8d8adc784161ee75136b8ca2027b112c40e2c8d15/litter_getter-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a15768c1c1f976b5bfac6d2717d957c9", "sha256": "6042d5c786584ace15e1da27531699cb3427f542714ec110501d1bb36ea9e834"}, "downloads": -1, "filename": "litter_getter-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a15768c1c1f976b5bfac6d2717d957c9", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 11826, "upload_time": "2017-05-30T17:55:14", "upload_time_iso_8601": "2017-05-30T17:55:14.370169Z", "url": "https://files.pythonhosted.org/packages/19/d0/4c45179eb58ddd1d861d3b7e688a604a2c67415bf2c3c72a4c4e6755dff3/litter_getter-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cc53feba9baa1a32c065acef9014660", "sha256": "843622ba6eaadb0a71fc9f608d634051f6641dd4641462956ac69e9a5b4d8ce9"}, "downloads": -1, "filename": "litter_getter-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1cc53feba9baa1a32c065acef9014660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45809, "upload_time": "2017-05-30T17:55:12", "upload_time_iso_8601": "2017-05-30T17:55:12.517861Z", "url": "https://files.pythonhosted.org/packages/c1/33/fa1a4939f39865ad896f785af0185184e81ebc6642bcc7c707291ca91037/litter_getter-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ac8cbd6f91792d7d4cc457efb3ac126b", "sha256": "55d51e0f2ef7674414cd4c26b80c3d59a5a797dd31e828882c69d72c3f471a38"}, "downloads": -1, "filename": "litter_getter-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ac8cbd6f91792d7d4cc457efb3ac126b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 11977, "upload_time": "2018-04-10T20:36:30", "upload_time_iso_8601": "2018-04-10T20:36:30.268644Z", "url": "https://files.pythonhosted.org/packages/cc/9a/4d41228b42c11a27ceeff4dc1d48e50dc6b515089e989e7fc5b497618daa/litter_getter-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a36e1f4cb2e604138abf4b225633f22c", "sha256": "26b8ae33039e6cd33a16607ad92539e08e2069e7d6756ae0703aedf59be2f2c3"}, "downloads": -1, "filename": "litter_getter-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a36e1f4cb2e604138abf4b225633f22c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45988, "upload_time": "2018-04-10T20:36:25", "upload_time_iso_8601": "2018-04-10T20:36:25.917357Z", "url": "https://files.pythonhosted.org/packages/4a/cc/49cb19da50bb79b8b1a378f272148f265dc4339325675f8b331d541eb9f3/litter_getter-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "be98c3bc8838cbe409c5b944b8517059", "sha256": "b6cacfc934632ddcb4b7cbcb80ef0672671b0122c9c4f80b7f21e2cfe1e731b7"}, "downloads": -1, "filename": "litter_getter-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be98c3bc8838cbe409c5b944b8517059", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12065, "upload_time": "2018-04-25T20:23:48", "upload_time_iso_8601": "2018-04-25T20:23:48.456506Z", "url": "https://files.pythonhosted.org/packages/8d/31/8389c6a653ddc6781f6e7514bbad4c733b755f0efa6e498311f7150b09a4/litter_getter-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75d30dca15051ace2916cad45f4b74fe", "sha256": "5068ca8a9198616ecccc47900736cf1bb8125d407c15beb0016951c84a3faf70"}, "downloads": -1, "filename": "litter_getter-0.2.3.tar.gz", "has_sig": false, "md5_digest": "75d30dca15051ace2916cad45f4b74fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46675, "upload_time": "2018-04-25T20:23:46", "upload_time_iso_8601": "2018-04-25T20:23:46.724040Z", "url": "https://files.pythonhosted.org/packages/1d/55/448219c70f98e454ac87d266f3fd3d617da9ea39ceed2783171c1bb0ed79/litter_getter-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b617fe9fda6cee073be3031937a11097", "sha256": "be0798e3b24ce2512b241c1f6baffda3925210915741235d57cfb659f1464203"}, "downloads": -1, "filename": "litter_getter-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b617fe9fda6cee073be3031937a11097", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 10247, "upload_time": "2018-06-05T12:31:34", "upload_time_iso_8601": "2018-06-05T12:31:34.449174Z", "url": "https://files.pythonhosted.org/packages/65/a6/061b16bea5c98ddac4fa5be99f142c630eadba35db8e6af86c96205a9d4d/litter_getter-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0537ec0eaabed99b1fc2a6cf7e83f4d7", "sha256": "0d3d0b95242573814accd653288aeefdb87d84992c9fed4cea3c4966b78e7f7a"}, "downloads": -1, "filename": "litter_getter-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0537ec0eaabed99b1fc2a6cf7e83f4d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38018, "upload_time": "2018-06-05T12:31:28", "upload_time_iso_8601": "2018-06-05T12:31:28.919000Z", "url": "https://files.pythonhosted.org/packages/6e/41/2f12818af06ca85f606006f5a59f1108f3b0f52ead60418b0700bf556d99/litter_getter-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "9321f7132fb31f3b93b7084e4ae4805e", "sha256": "431acf15ebf6d1b6cf54b62b76202856b8417b4df9456c1860c2abfd22196590"}, "downloads": -1, "filename": "litter_getter-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9321f7132fb31f3b93b7084e4ae4805e", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 10229, "upload_time": "2020-01-30T20:51:40", "upload_time_iso_8601": "2020-01-30T20:51:40.974589Z", "url": "https://files.pythonhosted.org/packages/66/89/227174c615222e8b1f957ed6bc32028f3db42916fcfffea1c6d475821bbb/litter_getter-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "560bd8e795977655bdf4786d5699695b", "sha256": "1966c0eb690f5a0edd6dbb865e6e44904eba9fc41632a718e0df3012b6520f4d"}, "downloads": -1, "filename": "litter_getter-0.2.5.tar.gz", "has_sig": false, "md5_digest": "560bd8e795977655bdf4786d5699695b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10537, "upload_time": "2020-01-30T20:51:39", "upload_time_iso_8601": "2020-01-30T20:51:39.061658Z", "url": "https://files.pythonhosted.org/packages/86/10/dc802f3a858e7c9c9c381975f389cf163bc5495e416c9a496a1d136f95c8/litter_getter-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "9eb2678b2e1ec94271fc1be1c9ca2e26", "sha256": "32a09aca0c57cf15814afa36c26701a3f9a8507001d0ff288a9f2cc041e60c52"}, "downloads": -1, "filename": "litter_getter-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9eb2678b2e1ec94271fc1be1c9ca2e26", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11991, "upload_time": "2020-01-30T21:36:39", "upload_time_iso_8601": "2020-01-30T21:36:39.731437Z", "url": "https://files.pythonhosted.org/packages/58/a8/ff18c4c24a1983e1ec4dcc276fa6ea976542a3d4049c143ccdab57ab3e56/litter_getter-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3fbf547f49118831999f3fecb2d1e35", "sha256": "336d1f0e14741c9bdb394e37f999f89ad441b7dd49dee51c4f20b3045f12501e"}, "downloads": -1, "filename": "litter_getter-0.2.6.tar.gz", "has_sig": false, "md5_digest": "a3fbf547f49118831999f3fecb2d1e35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11071, "upload_time": "2020-01-30T21:36:41", "upload_time_iso_8601": "2020-01-30T21:36:41.438780Z", "url": "https://files.pythonhosted.org/packages/98/1d/eb8059a0a3a88bc331bcd46c5ed30530191d6bd99a608a42ba0a1965b6c8/litter_getter-0.2.6.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2be90c6a500930ffd741d8cb4e531b72", "sha256": "817f13870c416508311fad2de63e8046b450248a42404353ca0ad011fdf45d7d"}, "downloads": -1, "filename": "litter_getter-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2be90c6a500930ffd741d8cb4e531b72", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12050, "upload_time": "2020-03-28T05:26:30", "upload_time_iso_8601": "2020-03-28T05:26:30.280734Z", "url": "https://files.pythonhosted.org/packages/c8/b9/5ee2f42da3793e32098bdffe80ad1676ddb9320e49d2a493f03123393d43/litter_getter-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6673398ac6c01479c69a7151f60f8fcc", "sha256": "93adac9ae29b150427530420614d02bae8ef65fbf829895cf095ff6218e64cf9"}, "downloads": -1, "filename": "litter_getter-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6673398ac6c01479c69a7151f60f8fcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13201, "upload_time": "2020-03-28T05:26:31", "upload_time_iso_8601": "2020-03-28T05:26:31.468462Z", "url": "https://files.pythonhosted.org/packages/57/54/4723cfb7b7a682cac48fb71bc853a1c664cd375ad2555b9fee95e56ddb71/litter_getter-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2be90c6a500930ffd741d8cb4e531b72", "sha256": "817f13870c416508311fad2de63e8046b450248a42404353ca0ad011fdf45d7d"}, "downloads": -1, "filename": "litter_getter-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2be90c6a500930ffd741d8cb4e531b72", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12050, "upload_time": "2020-03-28T05:26:30", "upload_time_iso_8601": "2020-03-28T05:26:30.280734Z", "url": "https://files.pythonhosted.org/packages/c8/b9/5ee2f42da3793e32098bdffe80ad1676ddb9320e49d2a493f03123393d43/litter_getter-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6673398ac6c01479c69a7151f60f8fcc", "sha256": "93adac9ae29b150427530420614d02bae8ef65fbf829895cf095ff6218e64cf9"}, "downloads": -1, "filename": "litter_getter-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6673398ac6c01479c69a7151f60f8fcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13201, "upload_time": "2020-03-28T05:26:31", "upload_time_iso_8601": "2020-03-28T05:26:31.468462Z", "url": "https://files.pythonhosted.org/packages/57/54/4723cfb7b7a682cac48fb71bc853a1c664cd375ad2555b9fee95e56ddb71/litter_getter-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:10 2020"}