{"info": {"author": "Russell Ballestrini", "author_email": "russell@ballestrini.net", "bugtrack_url": null, "classifiers": [], "description": "filevault \n============\n\nfilevault is a class for managing a hash directory tree of files on a filesystem.\n\nA Vault will:\n\n* Create a hash directory tree of custom depth\n* Spread out files to keep CLI snappy when traversing the tree\n* Scale to hundreds of thousands of files\n* Obfuscate directory paths and filenames\n\nhow to install\n===================\n\nSetuptools::\n\n easy_install filevault\n\nPip::\n\n pip install filevault\n\nhow to use\n=================\n\nHow to create a default Vault object::\n  \n from filevault import Vault\n\n v = Vault()\n\nYou may (and should) customize the Vault instance.  Here are the arguments:\n\nvaultpath\n Where should the tree be created? Defaults to 'vault' in pwd.\n\ndepth\n How deep should the tree span? Defaults to 3 directories deep.\n\nsalt\n Add a custom salt for a unique and more secure tree, defaults to 'changeme'\n\nAnother custom example::\n \n from filevault import Vault\n\n v = Vault( vaultpath=\"/tmp/for-test\", depth=2, salt=\"sugar\" )\n\nNow that we have a Vault object named v, we may review its two methods:\n\ncreate_filename( seed, ext='', absolute=False )\n Create a valid vault filename seeded with input. Optional extension.\n Relative path from vaultpath by default unless absolute is True.\n\ncreate_random_filename( ext='', absolute=False )\n Create a valid vault filename seeded with random input. Optional extension. \n Relative path from vaultpath by default unless absolute is True.\n\nHere is a full example::\n\n # import Vault class\n from filevault import Vault\n\n # create vault object named v, with custom path, depth, and salt\n v = Vault( vaultpath=\"/tmp/for-test\", depth=2, salt=\"sugar\" )\n\n # print a valid vault filename with extension\n print v.create_filename( \"my-first-file\", \".png\" )\n\n # result:\n # 3/9/3993817d4f9b3867c6db29b23c9d2ff9bb8a87d89426002adbb6ed34289d9e32.png\n\n print v.create_filename( \"my-first-file\", \".png\" )\n\n # Same result:\n # 3/9/3993817d4f9b3867c6db29b23c9d2ff9bb8a87d89426002adbb6ed34289d9e32.png\n\n # print a valid vault absolute filename with extension\n print v.create_filename( \"my-first-file\", \".png\", absolute=True )\n\n # result:\n # /tmp/for-test/3/9/3993817d4f9b3867c6db29b23c9d2ff9bb8a87d89426002adbb6ed34289d9e32.png\n\n\n # print a random valid vault filename without extension\n v.create_random_filename()\n\n # result:\n # 6/1/6169d6ee0ac0bc63ab667fb94d9cc747df0c03596ac43e24a51b3517d74bdc42 \n\n\nhow may I thank you?\n========================\n\nCheck out my `webpage to screenshot service <https://linkpeek.com>`_ and give me some feedback, tips, or advice.  Every little bit of help counts.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/russellballestrini/filevault/src", "keywords": "file vault filevault hashed hash directory tree directories dir obfuscate hex", "license": "Public Domain", "maintainer": null, "maintainer_email": null, "name": "filevault", "package_url": "https://pypi.org/project/filevault/", "platform": "All", "project_url": "https://pypi.org/project/filevault/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/russellballestrini/filevault/src"}, "release_url": "https://pypi.org/project/filevault/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "filevault: manage a hash directory tree and files", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"filevault\">\n<h2>filevault</h2>\n<p>filevault is a class for managing a hash directory tree of files on a filesystem.</p>\n<p>A Vault will:</p>\n<ul>\n<li>Create a hash directory tree of custom depth</li>\n<li>Spread out files to keep CLI snappy when traversing the tree</li>\n<li>Scale to hundreds of thousands of files</li>\n<li>Obfuscate directory paths and filenames</li>\n</ul>\n</div>\n<div id=\"how-to-install\">\n<h2>how to install</h2>\n<p>Setuptools:</p>\n<pre>easy_install filevault\n</pre>\n<p>Pip:</p>\n<pre>pip install filevault\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>how to use</h2>\n<p>How to create a default Vault object:</p>\n<pre>from filevault import Vault\n\nv = Vault()\n</pre>\n<p>You may (and should) customize the Vault instance.  Here are the arguments:</p>\n<dl>\n<dt>vaultpath</dt>\n<dd>Where should the tree be created? Defaults to \u2018vault\u2019 in pwd.</dd>\n<dt>depth</dt>\n<dd>How deep should the tree span? Defaults to 3 directories deep.</dd>\n<dt>salt</dt>\n<dd>Add a custom salt for a unique and more secure tree, defaults to \u2018changeme\u2019</dd>\n</dl>\n<p>Another custom example:</p>\n<pre>from filevault import Vault\n\nv = Vault( vaultpath=\"/tmp/for-test\", depth=2, salt=\"sugar\" )\n</pre>\n<p>Now that we have a Vault object named v, we may review its two methods:</p>\n<dl>\n<dt>create_filename( seed, ext=\u2019\u2019, absolute=False )</dt>\n<dd>Create a valid vault filename seeded with input. Optional extension.\nRelative path from vaultpath by default unless absolute is True.</dd>\n<dt>create_random_filename( ext=\u2019\u2019, absolute=False )</dt>\n<dd>Create a valid vault filename seeded with random input. Optional extension.\nRelative path from vaultpath by default unless absolute is True.</dd>\n</dl>\n<p>Here is a full example:</p>\n<pre># import Vault class\nfrom filevault import Vault\n\n# create vault object named v, with custom path, depth, and salt\nv = Vault( vaultpath=\"/tmp/for-test\", depth=2, salt=\"sugar\" )\n\n# print a valid vault filename with extension\nprint v.create_filename( \"my-first-file\", \".png\" )\n\n# result:\n# 3/9/3993817d4f9b3867c6db29b23c9d2ff9bb8a87d89426002adbb6ed34289d9e32.png\n\nprint v.create_filename( \"my-first-file\", \".png\" )\n\n# Same result:\n# 3/9/3993817d4f9b3867c6db29b23c9d2ff9bb8a87d89426002adbb6ed34289d9e32.png\n\n# print a valid vault absolute filename with extension\nprint v.create_filename( \"my-first-file\", \".png\", absolute=True )\n\n# result:\n# /tmp/for-test/3/9/3993817d4f9b3867c6db29b23c9d2ff9bb8a87d89426002adbb6ed34289d9e32.png\n\n\n# print a random valid vault filename without extension\nv.create_random_filename()\n\n# result:\n# 6/1/6169d6ee0ac0bc63ab667fb94d9cc747df0c03596ac43e24a51b3517d74bdc42\n</pre>\n</div>\n<div id=\"how-may-i-thank-you\">\n<h2>how may I thank you?</h2>\n<p>Check out my <a href=\"https://linkpeek.com\" rel=\"nofollow\">webpage to screenshot service</a> and give me some feedback, tips, or advice.  Every little bit of help counts.</p>\n</div>\n\n          </div>"}, "last_serial": 859354, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "10f1da5cb339bd23e1dfdbc2a9a5fe08", "sha256": "72122c92f7053f8bb58d942eb9dbd45f3bf65a82a4da924b9d09afc0921180f2"}, "downloads": -1, "filename": "filevault-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "10f1da5cb339bd23e1dfdbc2a9a5fe08", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 3619, "upload_time": "2013-01-15T03:41:11", "upload_time_iso_8601": "2013-01-15T03:41:11.079634Z", "url": "https://files.pythonhosted.org/packages/04/51/e4a499f3858cba4469c71f3b7281dd3c7cf895fadbbbf825a51ebbac15a7/filevault-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5871c573dbd5f192f5fbcab6f1451fba", "sha256": "c8b72b3ffbdfb557af8365ca993a24f314d5560928e1cdf4a38e359209a66803"}, "downloads": -1, "filename": "filevault-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5871c573dbd5f192f5fbcab6f1451fba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2639, "upload_time": "2013-01-15T03:41:08", "upload_time_iso_8601": "2013-01-15T03:41:08.760069Z", "url": "https://files.pythonhosted.org/packages/cd/3e/8e314dc7935e6b5373b4ab5c7a22b4caefa1d4637ec16558f014403f2dde/filevault-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c8492f8e78a624d3c7d325d379387d74", "sha256": "bbdf5d2af5528e7cd0c9e082c57e4d183cb8f4b8393a51112790f93c99065c9f"}, "downloads": -1, "filename": "filevault-0.1.1-py2.7.egg", "has_sig": false, "md5_digest": "c8492f8e78a624d3c7d325d379387d74", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 3749, "upload_time": "2013-08-30T04:19:07", "upload_time_iso_8601": "2013-08-30T04:19:07.988747Z", "url": "https://files.pythonhosted.org/packages/44/b5/637136ba763676f4959161a04cd5f819aee5d76548d174833dbf9e2c44ed/filevault-0.1.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "62df6ff6f9da0c156c89209346e64b00", "sha256": "fc6090072c4949597fe28feda29ba448d471ae8ebcf4cd05f3ce41cfead38b75"}, "downloads": -1, "filename": "filevault-0.1.1.tar.gz", "has_sig": false, "md5_digest": "62df6ff6f9da0c156c89209346e64b00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2731, "upload_time": "2013-08-30T04:19:06", "upload_time_iso_8601": "2013-08-30T04:19:06.011361Z", "url": "https://files.pythonhosted.org/packages/fd/1d/81fb07c4afad96d43de5eac2e54fcf136b0b9d51f50b8737d2146c491354/filevault-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3f1fac5db227335483a45a25057a5abc", "sha256": "a832efc66bd8087003ee685de5cac751ca5eda326860f8b6b19792e5e9511bfa"}, "downloads": -1, "filename": "filevault-0.1.2-py2.7.egg", "has_sig": false, "md5_digest": "3f1fac5db227335483a45a25057a5abc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 3909, "upload_time": "2013-09-07T03:00:47", "upload_time_iso_8601": "2013-09-07T03:00:47.206113Z", "url": "https://files.pythonhosted.org/packages/82/d5/26981382001bc5ee7f8cc24a15d6f5443e519629991c4b2ebc9a91350d15/filevault-0.1.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a23c447e726465903c08660efe96137c", "sha256": "bf2cacd23c585f9587e3df242e8ae77a2c7e481fecffea31a529a834ff5bddcd"}, "downloads": -1, "filename": "filevault-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a23c447e726465903c08660efe96137c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2757, "upload_time": "2013-09-07T03:00:44", "upload_time_iso_8601": "2013-09-07T03:00:44.378492Z", "url": "https://files.pythonhosted.org/packages/b7/ba/e6fcb84b66d11564c1f254f04b217f5a9a42c5698cf7c8a3c79283e9af21/filevault-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f1fac5db227335483a45a25057a5abc", "sha256": "a832efc66bd8087003ee685de5cac751ca5eda326860f8b6b19792e5e9511bfa"}, "downloads": -1, "filename": "filevault-0.1.2-py2.7.egg", "has_sig": false, "md5_digest": "3f1fac5db227335483a45a25057a5abc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 3909, "upload_time": "2013-09-07T03:00:47", "upload_time_iso_8601": "2013-09-07T03:00:47.206113Z", "url": "https://files.pythonhosted.org/packages/82/d5/26981382001bc5ee7f8cc24a15d6f5443e519629991c4b2ebc9a91350d15/filevault-0.1.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a23c447e726465903c08660efe96137c", "sha256": "bf2cacd23c585f9587e3df242e8ae77a2c7e481fecffea31a529a834ff5bddcd"}, "downloads": -1, "filename": "filevault-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a23c447e726465903c08660efe96137c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2757, "upload_time": "2013-09-07T03:00:44", "upload_time_iso_8601": "2013-09-07T03:00:44.378492Z", "url": "https://files.pythonhosted.org/packages/b7/ba/e6fcb84b66d11564c1f254f04b217f5a9a42c5698cf7c8a3c79283e9af21/filevault-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:30 2020"}