{"info": {"author": "Ian Walton", "author_email": "iwalton3@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Jellyfin MPV Shim\n\nJellyfin MPV Shim is a simple and lightweight Jellyfin client, with support for Windows\nand Linux. Think of it as an open source Chromecast for Jellyfin. You can cast almost\nanything from Jellyfin and it will Direct Play. Subtitles are fully supported, and\nthere are tools to manage them like no other Jellyfin client.\n\n## Getting Started\n\nIf you are on Windows, simply [download the binary](https://github.com/iwalton3/jellyfin-mpv-shim/releases).\nIf you are using Linux, you can [install via flathub](https://flathub.org/apps/details/com.github.iwalton3.jellyfin-mpv-shim) or [install via pip](https://github.com/iwalton3/jellyfin-mpv-shim/blob/master/README.md#linux-installation). If you are on OSX, see the [OSX Installation](https://github.com/iwalton3/jellyfin-mpv-shim/blob/master/README.md#osx-installation)\nsection below.\n\n### Desktop Client\n\nLaunch the client. You should see the Jellyfin web app. Log in to your server and use it as normal.\nAll videos will load in MPV just like MPV Shim.\n\nPlease note: The desktop client for Windows contains significantly more files than MPV Shim, so it\nis distributed as an installer. It will work without admin rights.\n\n### MPV Shim\n\nTo use the client, simply launch it and log into your Jellyfin server. You\u2019ll need to enter the\nURL to your server, for example `http://server_ip:8096` or `https://secure_domain`. Make sure to\ninclude the subdirectory and port number if applicable. You can then cast your media\nfrom another Jellyfin application.\n\nThe application runs with a notification icon by default. You can use this to edit the server settings,\nview the application log, open the config folder, and open the application menu. Unlike Plex MPV Shim,\nauthorization tokens for your server are stored on your device, but you are able to cast to the player\nregardless of location.\n\nNote: Due to the huge number of questions and issues that have been submitted about URLs, I now tolerate\nbare IP addresses and not specifying the port by default. If you want to connect to port 80 instead of\n8096, you must add the `:80` to the URL because `:8096` is now the default.\n\n## Limitations\n\n - Music playback and Live TV are not supported.\n - The client can\u2019t be shared seamlessly between multiple users on the same server. ([Link to issue.](https://features.jellyfin.org/posts/319/mark-device-as-shared))\n\n## Advanced Features\n\n### Menu\n\nTo open the menu, press **c** on your computer. Depending on what app you are\nusing to control Jellyfin, you may also be able to open the menu using that app.\nThe web application currently doesn't have the required buttons to do so.\n\nThe menu enables you to:\n - Adjust video transcoding quality.\n - Change the default transcoder settings.\n - Change subtitles or audio, while knowing the track names.\n - Change subtitles or audio for an entire series at once.\n - Mark the media as unwatched and quit.\n\nOn your computer, use the arrow keys, enter, and escape to navigate. On your phone, use\nthe arrow buttons, ok, back, and home to navigate.\n\nPlease also note that the on-screen controller for MPV (if available) cannot change the\naudio and subtitle track configurations for transcoded media. It also cannot load external\nsubtitles. You must either use the menu or the application you casted from.\n\n### Display Mirroring\n\nThis feature allows media previews to show on your display before you cast the media,\nsimilar to Chromecast. It is not enabled by default. To enable it, do one of the following:\n\n - Using the systray icon, click \"Application Menu\". Go to preferences and enable display mirroring.\n     - Use the arrow keys, escape, and enter to navigate the menu.\n - Cast media to the player and press `c`. Go to preferences and enable display mirroring.\n - In the config file (see below), change `display_mirroring` to `true`.\n\nThen restart the application for the change to take effect. To quit the application on Windows with\ndisplay mirroring enabled, press Alt+F4.\n\n### Keyboard Shortcuts\n\nThis program supports most of the [keyboard shortcuts from MPV](https://mpv.io/manual/stable/#interactive-control). The custom keyboard shortcuts are:\n\n - < > to skip episodes\n - q to close player\n - w to mark watched and skip\n - u to mark unwatched and quit\n - c to open the menu\n\nHere are the notable MPV keyboard shortcuts:\n\n - space - Pause/Play\n - left/right - Seek by 5 seconds\n - up/down - Seek by 1 minute\n - s - Take a screenshot\n - S - Take a screenshot without subtitles\n - f - Toggle fullscreen\n - ,/. - Seek by individual frames\n - \\[/\\] - Change video speed by 10%\n - {/} - Change video speed by 50%\n - backspace - Reset speed\n - m - Mute\n - d - Enable/disable deinterlace\n - Ctrl+Shift+Left/Right - Adjust subtitle delay.\n\n## Configuration\n\nThe configuration file is located in different places depending on your platform. You can also open the\nconfiguration folder using the systray icon if you are using the shim version. When you launch the program\non Linux or OSX from the terminal, the location of the config file will be printed. The locations are:\n - Windows - `%appdata%\\jellyfin-mpv-shim\\conf.json`\n - Linux - `~/.config/jellyfin-mpv-shim/conf.json`\n - Linux (Flatpak) - `~/.var/app/com.github.iwalton3.jellyfin-mpv-shim/config/jellyfin-mpv-shim/conf.json`\n - Mac OSX - `Library/Application Support/jellyfin-mpv-shim/conf.json`\n - CygWin - `~/.config/jellyfin-mpv-shim/conf.json`\n\nYou can specify a custom configuration folder with the `--config` option.\n\n### Transcoding\n\nYou can adjust the basic transcoder settings via the menu.\n\n- `always_transcode` - This will tell the client to always transcode. Default: `false`\n    - This may be useful if you are using limited hardware that cannot handle advanced codecs.\n- `transcode_h265` - Force transcode HEVC videos to h264. Default: `false`\n- `transcode_hi10p` - Force transcode 10 bit color videos to 8 bit color. Default: `false`\n- `remote_kbps` - Bandwidth to permit for remote streaming. Default: `10000`\n- `local_kbps` - Bandwidth to permit for local streaming. Default: `2147483`\n- `direct_paths` - Play media files directly from the SMB or NFS source. Default: `false`\n    - `remote_direct_paths` - Apply this even when the server is detected as remote. Default: `false`\n- `transcode_to_h265` - Allow the server to transcode media *to* `hevc`. Default: `false`\n\n### Shell Command Triggers\n\nYou can execute shell commands on media state using the config file:\n\n - `media_ended_cmd` - When all media has played.\n - `pre_media_cmd` - Before the player displays. (Will wait for finish.)\n - `stop_cmd` - After stopping the player.\n - `idle_cmd` - After no activity for `idle_cmd_delay` seconds.\n - `idle_when_paused` - Consider the player idle when paused. Default: `false`\n - `stop_idle` - Stop the player when idle. (Requires `idle_when_paused`.) Default: `false`\n\n### Subtitle Visual Settings\n\nThese settings may not works for some subtitle codecs or if subtitles are being burned in\nduring a transcode. You can configure custom styled subtitle settings through the MPV config file.\n\n - `subtitle_size` - The size of the subtitles, in percent. Default: `100`\n - `subtitle_color` - The color of the subtitles, in hex. Default: `#FFFFFFFF`\n - `subtitle_position` - The position (top, bottom, middle). Default: `bottom`\n\n### External MPV\n\nThe client now supports using an external copy of MPV, including one that is running prior to starting\nthe client. This may be useful if your distribution only provides MPV as a binary executable (instead\nof as a shared library), or to connect to MPV-based GUI players. Please note that SMPlayer exhibits\nstrange behaviour when controlled in this manner. External MPV is currently the only working backend\nfor media playback on OSX.\n\n- `mpv_ext` - Enable usage of the external player by default. Default: `false`\n    - The external player may still be used by default if `libmpv1` is not available.\n- `mpv_ext_path` - The path to the `mpv` binary to use. By default it uses the one in the PATH. Default: `null`\n    - If you are using Windows, make sure to use two backslashes. Example: `C:\\\\path\\\\to\\\\mpv.exe`\n- `mpv_ext_ipc` - The path to the socket to control MPV. Default: `null`\n    - If unset, the socket is a randomly selected temp file.\n    - On Windows, this is just a name for the socket, not a path like on Linux.\n- `mpv_ext_start` - Start a managed copy of MPV with the client. Default: `true`\n    - If not specified, the user must start MPV prior to launching the client.\n    - MPV must be launched with `--input-ipc-server=[value of mpv_ext_ipc]`.\n\n### Other Configuration Options\n\n - `player_name` - The name of the player that appears in the cast menu. Initially set from your hostname.\n - `client_uuid` - The identifier for the client. Set to a random value on first run.\n - `audio_output` - Currently has no effect. Default: `hdmi`\n - `fullscreen` - Fullscreen the player when starting playback. Default: `true`\n - `enable_gui` - Enable the system tray icon and GUI features. Default: `true`\n - `media_key_seek` - Use the media next/prev keys to seek instead of skip episodes. Default: `false`\n - `enable_osc` - Enable the MPV on-screen controller. Default: `true`\n    - It may be useful to disable this if you are using an external player that already provides a user interface.\n - `use_web_seek` - Use the seek times set in Jellyfin web for arrow key seek. Default: `false`\n - `display_mirroring` - Enable webview-based display mirroring (content preview). Default: `false`\n - `log_decisions` - Log the full media decisions and playback URLs. Default: `false`\n - `mpv_log_level` - Log level to use for mpv. Default: `info`\n    - Options: fatal, error, warn, info, v, debug, trace\n - `enable_desktop` - Use the desktop client. Default: `false`\n    - You can also use it by running the `jellyfin-mpv-desktop`.\n    - If you are using the Windows build, you must download the desktop version.\n - `desktop_fullscreen` - Run the desktop client in fullscreen. Default: `false`\n - `desktop_remember_pos` - Remember the position of the desktop client. Default: `true`\n\n### MPV Configuration\n\nYou can configure mpv directly using the `mpv.conf` and `input.conf` files. (It is in the same folder as `conf.json`.)\nThis may be useful for customizing video upscaling, keyboard shortcuts, or controlling the application\nvia the mpv IPC server.\n\n### Authorization\n\nThe `cred.json` file contains the authorization information. If you are having problems with the client,\nsuch as the Now Playing not appearing or want to delete a server, you can delete this file and add the\nservers again.\n\n## Tips and Tricks\n\nVarious tips have been found that allow the media player to support special\nfunctionality, albeit with more configuration required.\n\n### Open on Specific Monitor (#19)\n\nPlease note: Edits to the `mpv.conf` will not take effect until you restart the application. You can open the config directory by using the menu option in the system tray icon.\n\n**Option 1**: Select fullscreen output screen through MPV.\nDetermine which screen you would like MPV to show up on.\n - If you are on Windows, right click the desktop and select \"Display Settings\". Take the monitor number and subtract one.\n - If you are on Linux, run `xrandr`. The screen number is the number you want. If there is only one proceed to **Option 2**.\n\nAdd the following to your `mpv.conf` in the [config directory](https://github.com/iwalton3/jellyfin-mpv-shim#mpv-configuration), replacing `0` with the number from the previous step:\n```\nfs=yes\nfs-screen=0\n```\n\n**Option 2**: (Linux Only) If option 1 does not work, both of your monitors are likely configured as a single \"screen\".\n\nRun `xrandr`. It should look something like this:\n\n```\nScreen 0: minimum 8 x 8, current 3520 x 1080, maximum 16384 x 16384\nVGA-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 521mm x 293mm\n   1920x1080     60.00*+\n   1680x1050     59.95  \n   1440x900      59.89  \n   1280x1024     75.02    60.02  \n   1280x960      60.00  \n   1280x800      59.81  \n   1280x720      60.00  \n   1152x864      75.00  \n   1024x768      75.03    70.07    60.00  \n   800x600       75.00    72.19    60.32    56.25  \n   640x480       75.00    59.94  \nLVDS-0 connected 1600x900+1920+180 (normal left inverted right x axis y axis) 309mm x 174mm\n   1600x900      59.98*+\n```\n\nIf you want MPV to open on VGA-0 for instance, add the following to your `mpv.conf` in the [config directory](https://github.com/iwalton3/jellyfin-mpv-shim#mpv-configuration):\n```\nfs=yes\ngeometry=1920x1080+0+0\n```\n**Option 3**: (Linux Only) If your window manager supports it, you can tell the window manager to always open on a specific screen.\n\n - For OpenBox: https://forums.bunsenlabs.org/viewtopic.php?id=1199\n - For i3: https://unix.stackexchange.com/questions/96798/i3wm-start-applications-on-specific-workspaces-when-i3-starts/363848#363848\n\n### Control Volume with Mouse Wheel (#48)\n\nAdd the following to `input.conf`:\n```\nWHEEL_UP add volume 5\nWHEEL_DOWN add volume -5\n```\n\n### MPRIS Plugin (#54)\n\nSet `mpv_ext` to `true` in the config. Add `script=/path/to/mpris.so` to `mpv.conf`.\n\n### Run Multiple Instances (#45)\n\nYou can pass `--config /path/to/folder` to run another copy of the player. Please \nnote that running multiple copies of the desktop client is currently not supported. \n\n### Audio Passthrough\n\nYou can edit `mpv.conf` to support audio passthrough. A [user on Reddit](https://reddit.com/r/jellyfin/comments/fru6xo/new_cross_platform_desktop_client_jellyfin_mpv/fns7vyp) had luck with this config:\n```\naudio-spdif=ac3,dts,eac3 # (to use the passthrough to receiver over hdmi)\naudio-channels=2 # (not sure this is necessary, but i keep it in because it works)\naf=scaletempo,lavcac3enc=yes:640:3 # (for aac 5.1 tracks to the receiver)\n```\n\n### MPV Crashes with \"The sub-scale option must be a floating point number or a ratio\"\n\nRun the jellyfin-mpv-shim program with LC_NUMERIC=C.\n\n### Use with gnome-mpv/celluloid (#61)\n\nYou can use `gnome-mpv` with MPV Shim, but you must launch `gnome-mpv` separately before MPV Shim. (`gnome-mpv` doesn't support the MPV command options directly.)\n\nConfigure MPV Shim with the following options (leave the other ones):\n```json\n{\n    \"mpv_ext\": true,\n    \"mpv_ext_ipc\": \"/tmp/gmpv-socket\",\n    \"mpv_ext_path\": null,\n    \"mpv_ext_start\": false,\n    \"enable_osc\": false\n}\n```\nThen within `gnome-mpv`, click the application icon (top left) > Preferences. Configure the following Extra MPV Options:\n```\n--idle --input-ipc-server=/tmp/gmpv-socket\n```\n\n## Development\n\nIf you'd like to run the application without installing it, run `./run.py`.\nThe project is written entierly in Python 3. There are no closed-source\ncomponents in this project. It is fully hackable.\n\nThe project is dependent on `python-mpv`, `python-mpv-jsonipc`, and `jellyfin-apiclient-python`. If you are\nusing Windows and would like mpv to be maximize properly, `pywin32` is also needed. The GUI\ncomponent uses `pystray` and `tkinter`, but there is a fallback cli mode. The mirroring dependencies\nare `Jinja2` and `pywebview`, along with platform-specific dependencies. (See the installation and building\nguides for details on platform-specific dependencies for display mirroring.) The desktop client depends on\n`pywebview`, `Flask`, and `Werkzeug`.\n\nThis project is based Plex MPV Shim, which is based on https://github.com/wnielson/omplex, which\nis available under the terms of the MIT License. The project was ported to python3, modified to\nuse mpv as the player, and updated to allow all features of the remote control api for video playback.\n\nThe Jellyfin API client comes from [Jellyfin for Kodi](https://github.com/jellyfin/jellyfin-kodi/tree/master/jellyfin_kodi).\nThe API client was originally forked for this project and is now a [separate package](https://github.com/iwalton3/jellyfin-apiclient-python).\n\nThe css file for desktop mirroring is from [jellyfin-chromecast](https://github.com/jellyfin/jellyfin-chromecast/tree/5194d2b9f0120e0eb8c7a81fe546cb9e92fcca2b) and is subject to GPL v2.0.\n\n### Local Dev Installation\n\nIf you are on Windows there are additional dependencies. Please see the Windows Build Instructions.\n\n1. Install the dependencies: `sudo pip3 install --upgrade python-mpv jellyfin-apiclient-python pystray Jinja2 pywebview python-mpv-jsonipc Flask Werkzeug`.\n2. Clone this repository: `git clone https://github.com/iwalton3/jellyfin-mpv-shim`\n3. `cd` to the repository: `cd jellyfin-mpv-shim`\n4. Download the [web client](https://github.com/iwalton3/jellyfin-web/releases) and place the contents of the dist folder inside a folder named `webclient` in the `webclient_view` folder.\n5. Ensure you have a copy of `libmpv1` or `mpv` available.\n6. Install any platform-specific dependencies from the respective install tutorials.\n7. You should now be able to run the program with `./run.py` or `./run-desktop.py`. Installation is possible with `sudo pip3 install .`.\n\n## Linux Installation\n\nYou can [install the software from flathub](https://flathub.org/apps/details/com.github.iwalton3.jellyfin-mpv-shim). The pip installation is less integrated but takes up less space if you're not already using flatpak.\n\nIf you are on Linux, you can install via pip. You'll need [libmpv1](https://github.com/Kagami/mpv.js/blob/master/README.md#get-libmpv) or `mpv` installed.\n```bash\nsudo pip3 install --upgrade jellyfin-mpv-shim\n```\nIf you would like the Desktop client (run with `jellyfin-mpv-desktop`), also install:\n```\nsudo apt install python3-flask python3-webview python3-werkzeug\n# -- OR --\nsudo pip3 install jellyfin-mpv-shim[desktop]\nsudo apt install gir1.2-webkit2-4.0\n```\nIf you would like the GUI and systray features, also install `pystray` and `tkinter`:\n```bash\nsudo pip3 install pystray\nsudo apt install python3-tk\n```\nIf you would like display mirroring support, install the mirroring dependencies:\n```bash\nsudo apt install python3-jinja2 python3-webview\n# -- OR --\nsudo pip3 install jellyfin-mpv-shim[mirror]\nsudo apt install gir1.2-webkit2-4.0\n```\n\nYou can build mpv from source to get better codec support. Execute the following:\n```bash\nsudo pip3 install --upgrade python-mpv\nsudo apt install autoconf automake libtool libharfbuzz-dev libfreetype6-dev libfontconfig1-dev libx11-dev libxrandr-dev libvdpau-dev libva-dev mesa-common-dev libegl1-mesa-dev yasm libasound2-dev libpulse-dev libuchardet-dev zlib1g-dev libfribidi-dev git libgnutls28-dev libgl1-mesa-dev libsdl2-dev cmake wget python g++ libluajit-5.1-dev\ngit clone https://github.com/mpv-player/mpv-build.git\ncd mpv-build\necho --enable-libmpv-shared > mpv_options\n./rebuild -j4\nsudo ./install\nsudo ldconfig\n```\n\n## OSX Installation\nCurrently on OSX only the external MPV backend seems to be working. I cannot test on OSX, so please report any issues you find.\n\nTo install the CLI version:\n\n1. Install brew. ([Instructions](https://brew.sh/))\n2. Install python3 and mpv. `brew install python mpv`\n3. Install jellyfin-mpv-shim. `pip3 install --upgrade jellyfin-mpv-shim`\n4. Run `jellyfin-mpv-shim`.\n\nIf you'd like to install the desktop client (currently requires python from brew):\n\n1. Install brew. ([Instructions](https://brew.sh/))\n2. Install python3 and mpv. `brew install python mpv`\n3. Install jellyfin-mpv-shim. `pip3 install --upgrade 'jellyfin-mpv-shim[desktop]'`\n4. Run `jellyfin-mpv-desktop`.\n\nIf you'd like to install the GUI version, you need a working copy of tkinter.\n\n1. Install pyenv. ([Instructions](https://medium.com/python-every-day/python-development-on-macos-with-pyenv-2509c694a808))\n2. Install TK and mpv. `brew install tcl-tk mpv`\n3. Install python3 with TK support. `FLAGS=\"-I$(brew --prefix tcl-tk)/include\" pyenv install 3.8.1`\n4. Set this python3 as the default. `pyenv global 3.8.1`\n5. Install jellyfin-mpv-shim and pystray. `pip3 install --upgrade 'jellyfin-mpv-shim[gui]'`\n6. Run `jellyfin-mpv-shim`.\n\nDisplay mirroring is not tested on OSX, but may be installable with 'pip3 install --upgrade 'jellyfin-mpv-shim[mirror]'`.\n\n## Building on Windows\n\nThere is a prebuilt version for Windows in the releases section. When\nfollowing these directions, please take care to ensure both the python\nand libmpv libraries are either 64 or 32 bit. (Don't mismatch them.)\n\nIf you'd like to build the installer, please install [Inno Setup](https://jrsoftware.org/isinfo.php) to build\nthe installer. If you'd like to build a 32 bit version, download the 32 bit version of mpv-1.dll and\ncopy it into a new folder called mpv32. You'll also need [WebBrowserInterop.x86.dll](https://github.com/r0x0r/pywebview/blob/master/webview/lib/WebBrowserInterop.x86.dll?raw=true).\nYou may also need to edit the batch file for 32 bit builds to point to the right python executable.\n\n1. Install Git for Windows. Open Git Bash and run `git clone https://github.com/iwalton3/jellyfin-mpv-shim; cd jellyfin-mpv-shim`.\n2. Install [Python3](https://www.python.org/downloads/) with PATH enabled. Install [7zip](https://ninite.com/7zip/).\n3. After installing python3, open `cmd` as admin and run `pip install --upgrade pyinstaller python-mpv jellyfin-apiclient-python pywin32 pystray Jinja2 pywebview[cef] python-mpv-jsonipc Flask Werkzeug`.\n4. Download [libmpv](https://sourceforge.net/projects/mpv-player-windows/files/libmpv/).\n5. Extract the `mpv-1.dll` from the file and move it to the `jellyfin-mpv-shim` folder.\n6. Open a regular `cmd` prompt. Navigate to the `jellyfin-mpv-shim` folder.\n7. (Edge Build, disabled by default) Download [WebBrowserInterop.x64.dll](https://github.com/r0x0r/pywebview/blob/master/webview/lib/WebBrowserInterop.x64.dll?raw=true) and [Winforms Webview](https://www.nuget.org/api/v2/package/Microsoft.Toolkit.Forms.UI.Controls.WebView/6.0.0).\n8. (Edge Build, disabled by default) Rename the `*.nupkg` to a `*.zip` file and extract `lib\\net462\\Microsoft.Toolkit.Forms.UI.Controls.WebView.dll` to the project root.\n9. (CEF Desktop Client) Copy the folder `AppData\\Local\\Programs\\Python\\Python37\\Lib\\site-packages\\cefpython3` to `cef\\cefpython3`.\n10. Download the web [client build](https://github.com/iwalton3/jellyfin-web/releases/tag/jwc1.5.2) and unzip it into `jellyfin_mpv_shim\\webclient_view\\webclient`.\n11. Run `build-win.bat`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iwalton3/jellyfin-mpv-shim", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "jellyfin-mpv-shim", "package_url": "https://pypi.org/project/jellyfin-mpv-shim/", "platform": "", "project_url": "https://pypi.org/project/jellyfin-mpv-shim/", "project_urls": {"Homepage": "https://github.com/iwalton3/jellyfin-mpv-shim"}, "release_url": "https://pypi.org/project/jellyfin-mpv-shim/1.5.9/", "requires_dist": ["python-mpv", "jellyfin-apiclient-python (>=1.4.0)", "python-mpv-jsonipc (>=1.1.9)", "Jinja2 ; extra == 'all'", "pywebview ; extra == 'all'", "pystray ; extra == 'all'", "Flask ; extra == 'all'", "Werkzeug ; extra == 'all'", "Flask ; extra == 'desktop'", "pywebview ; extra == 'desktop'", "Werkzeug ; extra == 'desktop'", "pystray ; extra == 'gui'", "Jinja2 ; extra == 'mirror'", "pywebview ; extra == 'mirror'"], "requires_python": ">=3.6", "summary": "Cast media from Jellyfin Mobile and Web apps to MPV. (Unofficial)", "version": "1.5.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Jellyfin MPV Shim</h1>\n<p>Jellyfin MPV Shim is a simple and lightweight Jellyfin client, with support for Windows\nand Linux. Think of it as an open source Chromecast for Jellyfin. You can cast almost\nanything from Jellyfin and it will Direct Play. Subtitles are fully supported, and\nthere are tools to manage them like no other Jellyfin client.</p>\n<h2>Getting Started</h2>\n<p>If you are on Windows, simply <a href=\"https://github.com/iwalton3/jellyfin-mpv-shim/releases\" rel=\"nofollow\">download the binary</a>.\nIf you are using Linux, you can <a href=\"https://flathub.org/apps/details/com.github.iwalton3.jellyfin-mpv-shim\" rel=\"nofollow\">install via flathub</a> or <a href=\"https://github.com/iwalton3/jellyfin-mpv-shim/blob/master/README.md#linux-installation\" rel=\"nofollow\">install via pip</a>. If you are on OSX, see the <a href=\"https://github.com/iwalton3/jellyfin-mpv-shim/blob/master/README.md#osx-installation\" rel=\"nofollow\">OSX Installation</a>\nsection below.</p>\n<h3>Desktop Client</h3>\n<p>Launch the client. You should see the Jellyfin web app. Log in to your server and use it as normal.\nAll videos will load in MPV just like MPV Shim.</p>\n<p>Please note: The desktop client for Windows contains significantly more files than MPV Shim, so it\nis distributed as an installer. It will work without admin rights.</p>\n<h3>MPV Shim</h3>\n<p>To use the client, simply launch it and log into your Jellyfin server. You\u2019ll need to enter the\nURL to your server, for example <code>http://server_ip:8096</code> or <code>https://secure_domain</code>. Make sure to\ninclude the subdirectory and port number if applicable. You can then cast your media\nfrom another Jellyfin application.</p>\n<p>The application runs with a notification icon by default. You can use this to edit the server settings,\nview the application log, open the config folder, and open the application menu. Unlike Plex MPV Shim,\nauthorization tokens for your server are stored on your device, but you are able to cast to the player\nregardless of location.</p>\n<p>Note: Due to the huge number of questions and issues that have been submitted about URLs, I now tolerate\nbare IP addresses and not specifying the port by default. If you want to connect to port 80 instead of\n8096, you must add the <code>:80</code> to the URL because <code>:8096</code> is now the default.</p>\n<h2>Limitations</h2>\n<ul>\n<li>Music playback and Live TV are not supported.</li>\n<li>The client can\u2019t be shared seamlessly between multiple users on the same server. (<a href=\"https://features.jellyfin.org/posts/319/mark-device-as-shared\" rel=\"nofollow\">Link to issue.</a>)</li>\n</ul>\n<h2>Advanced Features</h2>\n<h3>Menu</h3>\n<p>To open the menu, press <strong>c</strong> on your computer. Depending on what app you are\nusing to control Jellyfin, you may also be able to open the menu using that app.\nThe web application currently doesn't have the required buttons to do so.</p>\n<p>The menu enables you to:</p>\n<ul>\n<li>Adjust video transcoding quality.</li>\n<li>Change the default transcoder settings.</li>\n<li>Change subtitles or audio, while knowing the track names.</li>\n<li>Change subtitles or audio for an entire series at once.</li>\n<li>Mark the media as unwatched and quit.</li>\n</ul>\n<p>On your computer, use the arrow keys, enter, and escape to navigate. On your phone, use\nthe arrow buttons, ok, back, and home to navigate.</p>\n<p>Please also note that the on-screen controller for MPV (if available) cannot change the\naudio and subtitle track configurations for transcoded media. It also cannot load external\nsubtitles. You must either use the menu or the application you casted from.</p>\n<h3>Display Mirroring</h3>\n<p>This feature allows media previews to show on your display before you cast the media,\nsimilar to Chromecast. It is not enabled by default. To enable it, do one of the following:</p>\n<ul>\n<li>Using the systray icon, click \"Application Menu\". Go to preferences and enable display mirroring.\n<ul>\n<li>Use the arrow keys, escape, and enter to navigate the menu.</li>\n</ul>\n</li>\n<li>Cast media to the player and press <code>c</code>. Go to preferences and enable display mirroring.</li>\n<li>In the config file (see below), change <code>display_mirroring</code> to <code>true</code>.</li>\n</ul>\n<p>Then restart the application for the change to take effect. To quit the application on Windows with\ndisplay mirroring enabled, press Alt+F4.</p>\n<h3>Keyboard Shortcuts</h3>\n<p>This program supports most of the <a href=\"https://mpv.io/manual/stable/#interactive-control\" rel=\"nofollow\">keyboard shortcuts from MPV</a>. The custom keyboard shortcuts are:</p>\n<ul>\n<li>&lt; &gt; to skip episodes</li>\n<li>q to close player</li>\n<li>w to mark watched and skip</li>\n<li>u to mark unwatched and quit</li>\n<li>c to open the menu</li>\n</ul>\n<p>Here are the notable MPV keyboard shortcuts:</p>\n<ul>\n<li>space - Pause/Play</li>\n<li>left/right - Seek by 5 seconds</li>\n<li>up/down - Seek by 1 minute</li>\n<li>s - Take a screenshot</li>\n<li>S - Take a screenshot without subtitles</li>\n<li>f - Toggle fullscreen</li>\n<li>,/. - Seek by individual frames</li>\n<li>[/] - Change video speed by 10%</li>\n<li>{/} - Change video speed by 50%</li>\n<li>backspace - Reset speed</li>\n<li>m - Mute</li>\n<li>d - Enable/disable deinterlace</li>\n<li>Ctrl+Shift+Left/Right - Adjust subtitle delay.</li>\n</ul>\n<h2>Configuration</h2>\n<p>The configuration file is located in different places depending on your platform. You can also open the\nconfiguration folder using the systray icon if you are using the shim version. When you launch the program\non Linux or OSX from the terminal, the location of the config file will be printed. The locations are:</p>\n<ul>\n<li>Windows - <code>%appdata%\\jellyfin-mpv-shim\\conf.json</code></li>\n<li>Linux - <code>~/.config/jellyfin-mpv-shim/conf.json</code></li>\n<li>Linux (Flatpak) - <code>~/.var/app/com.github.iwalton3.jellyfin-mpv-shim/config/jellyfin-mpv-shim/conf.json</code></li>\n<li>Mac OSX - <code>Library/Application Support/jellyfin-mpv-shim/conf.json</code></li>\n<li>CygWin - <code>~/.config/jellyfin-mpv-shim/conf.json</code></li>\n</ul>\n<p>You can specify a custom configuration folder with the <code>--config</code> option.</p>\n<h3>Transcoding</h3>\n<p>You can adjust the basic transcoder settings via the menu.</p>\n<ul>\n<li><code>always_transcode</code> - This will tell the client to always transcode. Default: <code>false</code>\n<ul>\n<li>This may be useful if you are using limited hardware that cannot handle advanced codecs.</li>\n</ul>\n</li>\n<li><code>transcode_h265</code> - Force transcode HEVC videos to h264. Default: <code>false</code></li>\n<li><code>transcode_hi10p</code> - Force transcode 10 bit color videos to 8 bit color. Default: <code>false</code></li>\n<li><code>remote_kbps</code> - Bandwidth to permit for remote streaming. Default: <code>10000</code></li>\n<li><code>local_kbps</code> - Bandwidth to permit for local streaming. Default: <code>2147483</code></li>\n<li><code>direct_paths</code> - Play media files directly from the SMB or NFS source. Default: <code>false</code>\n<ul>\n<li><code>remote_direct_paths</code> - Apply this even when the server is detected as remote. Default: <code>false</code></li>\n</ul>\n</li>\n<li><code>transcode_to_h265</code> - Allow the server to transcode media <em>to</em> <code>hevc</code>. Default: <code>false</code></li>\n</ul>\n<h3>Shell Command Triggers</h3>\n<p>You can execute shell commands on media state using the config file:</p>\n<ul>\n<li><code>media_ended_cmd</code> - When all media has played.</li>\n<li><code>pre_media_cmd</code> - Before the player displays. (Will wait for finish.)</li>\n<li><code>stop_cmd</code> - After stopping the player.</li>\n<li><code>idle_cmd</code> - After no activity for <code>idle_cmd_delay</code> seconds.</li>\n<li><code>idle_when_paused</code> - Consider the player idle when paused. Default: <code>false</code></li>\n<li><code>stop_idle</code> - Stop the player when idle. (Requires <code>idle_when_paused</code>.) Default: <code>false</code></li>\n</ul>\n<h3>Subtitle Visual Settings</h3>\n<p>These settings may not works for some subtitle codecs or if subtitles are being burned in\nduring a transcode. You can configure custom styled subtitle settings through the MPV config file.</p>\n<ul>\n<li><code>subtitle_size</code> - The size of the subtitles, in percent. Default: <code>100</code></li>\n<li><code>subtitle_color</code> - The color of the subtitles, in hex. Default: <code>#FFFFFFFF</code></li>\n<li><code>subtitle_position</code> - The position (top, bottom, middle). Default: <code>bottom</code></li>\n</ul>\n<h3>External MPV</h3>\n<p>The client now supports using an external copy of MPV, including one that is running prior to starting\nthe client. This may be useful if your distribution only provides MPV as a binary executable (instead\nof as a shared library), or to connect to MPV-based GUI players. Please note that SMPlayer exhibits\nstrange behaviour when controlled in this manner. External MPV is currently the only working backend\nfor media playback on OSX.</p>\n<ul>\n<li><code>mpv_ext</code> - Enable usage of the external player by default. Default: <code>false</code>\n<ul>\n<li>The external player may still be used by default if <code>libmpv1</code> is not available.</li>\n</ul>\n</li>\n<li><code>mpv_ext_path</code> - The path to the <code>mpv</code> binary to use. By default it uses the one in the PATH. Default: <code>null</code>\n<ul>\n<li>If you are using Windows, make sure to use two backslashes. Example: <code>C:\\\\path\\\\to\\\\mpv.exe</code></li>\n</ul>\n</li>\n<li><code>mpv_ext_ipc</code> - The path to the socket to control MPV. Default: <code>null</code>\n<ul>\n<li>If unset, the socket is a randomly selected temp file.</li>\n<li>On Windows, this is just a name for the socket, not a path like on Linux.</li>\n</ul>\n</li>\n<li><code>mpv_ext_start</code> - Start a managed copy of MPV with the client. Default: <code>true</code>\n<ul>\n<li>If not specified, the user must start MPV prior to launching the client.</li>\n<li>MPV must be launched with <code>--input-ipc-server=[value of mpv_ext_ipc]</code>.</li>\n</ul>\n</li>\n</ul>\n<h3>Other Configuration Options</h3>\n<ul>\n<li><code>player_name</code> - The name of the player that appears in the cast menu. Initially set from your hostname.</li>\n<li><code>client_uuid</code> - The identifier for the client. Set to a random value on first run.</li>\n<li><code>audio_output</code> - Currently has no effect. Default: <code>hdmi</code></li>\n<li><code>fullscreen</code> - Fullscreen the player when starting playback. Default: <code>true</code></li>\n<li><code>enable_gui</code> - Enable the system tray icon and GUI features. Default: <code>true</code></li>\n<li><code>media_key_seek</code> - Use the media next/prev keys to seek instead of skip episodes. Default: <code>false</code></li>\n<li><code>enable_osc</code> - Enable the MPV on-screen controller. Default: <code>true</code>\n<ul>\n<li>It may be useful to disable this if you are using an external player that already provides a user interface.</li>\n</ul>\n</li>\n<li><code>use_web_seek</code> - Use the seek times set in Jellyfin web for arrow key seek. Default: <code>false</code></li>\n<li><code>display_mirroring</code> - Enable webview-based display mirroring (content preview). Default: <code>false</code></li>\n<li><code>log_decisions</code> - Log the full media decisions and playback URLs. Default: <code>false</code></li>\n<li><code>mpv_log_level</code> - Log level to use for mpv. Default: <code>info</code>\n<ul>\n<li>Options: fatal, error, warn, info, v, debug, trace</li>\n</ul>\n</li>\n<li><code>enable_desktop</code> - Use the desktop client. Default: <code>false</code>\n<ul>\n<li>You can also use it by running the <code>jellyfin-mpv-desktop</code>.</li>\n<li>If you are using the Windows build, you must download the desktop version.</li>\n</ul>\n</li>\n<li><code>desktop_fullscreen</code> - Run the desktop client in fullscreen. Default: <code>false</code></li>\n<li><code>desktop_remember_pos</code> - Remember the position of the desktop client. Default: <code>true</code></li>\n</ul>\n<h3>MPV Configuration</h3>\n<p>You can configure mpv directly using the <code>mpv.conf</code> and <code>input.conf</code> files. (It is in the same folder as <code>conf.json</code>.)\nThis may be useful for customizing video upscaling, keyboard shortcuts, or controlling the application\nvia the mpv IPC server.</p>\n<h3>Authorization</h3>\n<p>The <code>cred.json</code> file contains the authorization information. If you are having problems with the client,\nsuch as the Now Playing not appearing or want to delete a server, you can delete this file and add the\nservers again.</p>\n<h2>Tips and Tricks</h2>\n<p>Various tips have been found that allow the media player to support special\nfunctionality, albeit with more configuration required.</p>\n<h3>Open on Specific Monitor (#19)</h3>\n<p>Please note: Edits to the <code>mpv.conf</code> will not take effect until you restart the application. You can open the config directory by using the menu option in the system tray icon.</p>\n<p><strong>Option 1</strong>: Select fullscreen output screen through MPV.\nDetermine which screen you would like MPV to show up on.</p>\n<ul>\n<li>If you are on Windows, right click the desktop and select \"Display Settings\". Take the monitor number and subtract one.</li>\n<li>If you are on Linux, run <code>xrandr</code>. The screen number is the number you want. If there is only one proceed to <strong>Option 2</strong>.</li>\n</ul>\n<p>Add the following to your <code>mpv.conf</code> in the <a href=\"https://github.com/iwalton3/jellyfin-mpv-shim#mpv-configuration\" rel=\"nofollow\">config directory</a>, replacing <code>0</code> with the number from the previous step:</p>\n<pre><code>fs=yes\nfs-screen=0\n</code></pre>\n<p><strong>Option 2</strong>: (Linux Only) If option 1 does not work, both of your monitors are likely configured as a single \"screen\".</p>\n<p>Run <code>xrandr</code>. It should look something like this:</p>\n<pre><code>Screen 0: minimum 8 x 8, current 3520 x 1080, maximum 16384 x 16384\nVGA-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 521mm x 293mm\n   1920x1080     60.00*+\n   1680x1050     59.95  \n   1440x900      59.89  \n   1280x1024     75.02    60.02  \n   1280x960      60.00  \n   1280x800      59.81  \n   1280x720      60.00  \n   1152x864      75.00  \n   1024x768      75.03    70.07    60.00  \n   800x600       75.00    72.19    60.32    56.25  \n   640x480       75.00    59.94  \nLVDS-0 connected 1600x900+1920+180 (normal left inverted right x axis y axis) 309mm x 174mm\n   1600x900      59.98*+\n</code></pre>\n<p>If you want MPV to open on VGA-0 for instance, add the following to your <code>mpv.conf</code> in the <a href=\"https://github.com/iwalton3/jellyfin-mpv-shim#mpv-configuration\" rel=\"nofollow\">config directory</a>:</p>\n<pre><code>fs=yes\ngeometry=1920x1080+0+0\n</code></pre>\n<p><strong>Option 3</strong>: (Linux Only) If your window manager supports it, you can tell the window manager to always open on a specific screen.</p>\n<ul>\n<li>For OpenBox: <a href=\"https://forums.bunsenlabs.org/viewtopic.php?id=1199\" rel=\"nofollow\">https://forums.bunsenlabs.org/viewtopic.php?id=1199</a></li>\n<li>For i3: <a href=\"https://unix.stackexchange.com/questions/96798/i3wm-start-applications-on-specific-workspaces-when-i3-starts/363848#363848\" rel=\"nofollow\">https://unix.stackexchange.com/questions/96798/i3wm-start-applications-on-specific-workspaces-when-i3-starts/363848#363848</a></li>\n</ul>\n<h3>Control Volume with Mouse Wheel (#48)</h3>\n<p>Add the following to <code>input.conf</code>:</p>\n<pre><code>WHEEL_UP add volume 5\nWHEEL_DOWN add volume -5\n</code></pre>\n<h3>MPRIS Plugin (#54)</h3>\n<p>Set <code>mpv_ext</code> to <code>true</code> in the config. Add <code>script=/path/to/mpris.so</code> to <code>mpv.conf</code>.</p>\n<h3>Run Multiple Instances (#45)</h3>\n<p>You can pass <code>--config /path/to/folder</code> to run another copy of the player. Please\nnote that running multiple copies of the desktop client is currently not supported.</p>\n<h3>Audio Passthrough</h3>\n<p>You can edit <code>mpv.conf</code> to support audio passthrough. A <a href=\"https://reddit.com/r/jellyfin/comments/fru6xo/new_cross_platform_desktop_client_jellyfin_mpv/fns7vyp\" rel=\"nofollow\">user on Reddit</a> had luck with this config:</p>\n<pre><code>audio-spdif=ac3,dts,eac3 # (to use the passthrough to receiver over hdmi)\naudio-channels=2 # (not sure this is necessary, but i keep it in because it works)\naf=scaletempo,lavcac3enc=yes:640:3 # (for aac 5.1 tracks to the receiver)\n</code></pre>\n<h3>MPV Crashes with \"The sub-scale option must be a floating point number or a ratio\"</h3>\n<p>Run the jellyfin-mpv-shim program with LC_NUMERIC=C.</p>\n<h3>Use with gnome-mpv/celluloid (#61)</h3>\n<p>You can use <code>gnome-mpv</code> with MPV Shim, but you must launch <code>gnome-mpv</code> separately before MPV Shim. (<code>gnome-mpv</code> doesn't support the MPV command options directly.)</p>\n<p>Configure MPV Shim with the following options (leave the other ones):</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"mpv_ext\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"mpv_ext_ipc\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/tmp/gmpv-socket\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"mpv_ext_path\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"mpv_ext_start\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"enable_osc\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then within <code>gnome-mpv</code>, click the application icon (top left) &gt; Preferences. Configure the following Extra MPV Options:</p>\n<pre><code>--idle --input-ipc-server=/tmp/gmpv-socket\n</code></pre>\n<h2>Development</h2>\n<p>If you'd like to run the application without installing it, run <code>./run.py</code>.\nThe project is written entierly in Python 3. There are no closed-source\ncomponents in this project. It is fully hackable.</p>\n<p>The project is dependent on <code>python-mpv</code>, <code>python-mpv-jsonipc</code>, and <code>jellyfin-apiclient-python</code>. If you are\nusing Windows and would like mpv to be maximize properly, <code>pywin32</code> is also needed. The GUI\ncomponent uses <code>pystray</code> and <code>tkinter</code>, but there is a fallback cli mode. The mirroring dependencies\nare <code>Jinja2</code> and <code>pywebview</code>, along with platform-specific dependencies. (See the installation and building\nguides for details on platform-specific dependencies for display mirroring.) The desktop client depends on\n<code>pywebview</code>, <code>Flask</code>, and <code>Werkzeug</code>.</p>\n<p>This project is based Plex MPV Shim, which is based on <a href=\"https://github.com/wnielson/omplex\" rel=\"nofollow\">https://github.com/wnielson/omplex</a>, which\nis available under the terms of the MIT License. The project was ported to python3, modified to\nuse mpv as the player, and updated to allow all features of the remote control api for video playback.</p>\n<p>The Jellyfin API client comes from <a href=\"https://github.com/jellyfin/jellyfin-kodi/tree/master/jellyfin_kodi\" rel=\"nofollow\">Jellyfin for Kodi</a>.\nThe API client was originally forked for this project and is now a <a href=\"https://github.com/iwalton3/jellyfin-apiclient-python\" rel=\"nofollow\">separate package</a>.</p>\n<p>The css file for desktop mirroring is from <a href=\"https://github.com/jellyfin/jellyfin-chromecast/tree/5194d2b9f0120e0eb8c7a81fe546cb9e92fcca2b\" rel=\"nofollow\">jellyfin-chromecast</a> and is subject to GPL v2.0.</p>\n<h3>Local Dev Installation</h3>\n<p>If you are on Windows there are additional dependencies. Please see the Windows Build Instructions.</p>\n<ol>\n<li>Install the dependencies: <code>sudo pip3 install --upgrade python-mpv jellyfin-apiclient-python pystray Jinja2 pywebview python-mpv-jsonipc Flask Werkzeug</code>.</li>\n<li>Clone this repository: <code>git clone https://github.com/iwalton3/jellyfin-mpv-shim</code></li>\n<li><code>cd</code> to the repository: <code>cd jellyfin-mpv-shim</code></li>\n<li>Download the <a href=\"https://github.com/iwalton3/jellyfin-web/releases\" rel=\"nofollow\">web client</a> and place the contents of the dist folder inside a folder named <code>webclient</code> in the <code>webclient_view</code> folder.</li>\n<li>Ensure you have a copy of <code>libmpv1</code> or <code>mpv</code> available.</li>\n<li>Install any platform-specific dependencies from the respective install tutorials.</li>\n<li>You should now be able to run the program with <code>./run.py</code> or <code>./run-desktop.py</code>. Installation is possible with <code>sudo pip3 install .</code>.</li>\n</ol>\n<h2>Linux Installation</h2>\n<p>You can <a href=\"https://flathub.org/apps/details/com.github.iwalton3.jellyfin-mpv-shim\" rel=\"nofollow\">install the software from flathub</a>. The pip installation is less integrated but takes up less space if you're not already using flatpak.</p>\n<p>If you are on Linux, you can install via pip. You'll need <a href=\"https://github.com/Kagami/mpv.js/blob/master/README.md#get-libmpv\" rel=\"nofollow\">libmpv1</a> or <code>mpv</code> installed.</p>\n<pre>sudo pip3 install --upgrade jellyfin-mpv-shim\n</pre>\n<p>If you would like the Desktop client (run with <code>jellyfin-mpv-desktop</code>), also install:</p>\n<pre><code>sudo apt install python3-flask python3-webview python3-werkzeug\n# -- OR --\nsudo pip3 install jellyfin-mpv-shim[desktop]\nsudo apt install gir1.2-webkit2-4.0\n</code></pre>\n<p>If you would like the GUI and systray features, also install <code>pystray</code> and <code>tkinter</code>:</p>\n<pre>sudo pip3 install pystray\nsudo apt install python3-tk\n</pre>\n<p>If you would like display mirroring support, install the mirroring dependencies:</p>\n<pre>sudo apt install python3-jinja2 python3-webview\n<span class=\"c1\"># -- OR --</span>\nsudo pip3 install jellyfin-mpv-shim<span class=\"o\">[</span>mirror<span class=\"o\">]</span>\nsudo apt install gir1.2-webkit2-4.0\n</pre>\n<p>You can build mpv from source to get better codec support. Execute the following:</p>\n<pre>sudo pip3 install --upgrade python-mpv\nsudo apt install autoconf automake libtool libharfbuzz-dev libfreetype6-dev libfontconfig1-dev libx11-dev libxrandr-dev libvdpau-dev libva-dev mesa-common-dev libegl1-mesa-dev yasm libasound2-dev libpulse-dev libuchardet-dev zlib1g-dev libfribidi-dev git libgnutls28-dev libgl1-mesa-dev libsdl2-dev cmake wget python g++ libluajit-5.1-dev\ngit clone https://github.com/mpv-player/mpv-build.git\n<span class=\"nb\">cd</span> mpv-build\n<span class=\"nb\">echo</span> --enable-libmpv-shared &gt; mpv_options\n./rebuild -j4\nsudo ./install\nsudo ldconfig\n</pre>\n<h2>OSX Installation</h2>\n<p>Currently on OSX only the external MPV backend seems to be working. I cannot test on OSX, so please report any issues you find.</p>\n<p>To install the CLI version:</p>\n<ol>\n<li>Install brew. (<a href=\"https://brew.sh/\" rel=\"nofollow\">Instructions</a>)</li>\n<li>Install python3 and mpv. <code>brew install python mpv</code></li>\n<li>Install jellyfin-mpv-shim. <code>pip3 install --upgrade jellyfin-mpv-shim</code></li>\n<li>Run <code>jellyfin-mpv-shim</code>.</li>\n</ol>\n<p>If you'd like to install the desktop client (currently requires python from brew):</p>\n<ol>\n<li>Install brew. (<a href=\"https://brew.sh/\" rel=\"nofollow\">Instructions</a>)</li>\n<li>Install python3 and mpv. <code>brew install python mpv</code></li>\n<li>Install jellyfin-mpv-shim. <code>pip3 install --upgrade 'jellyfin-mpv-shim[desktop]'</code></li>\n<li>Run <code>jellyfin-mpv-desktop</code>.</li>\n</ol>\n<p>If you'd like to install the GUI version, you need a working copy of tkinter.</p>\n<ol>\n<li>Install pyenv. (<a href=\"https://medium.com/python-every-day/python-development-on-macos-with-pyenv-2509c694a808\" rel=\"nofollow\">Instructions</a>)</li>\n<li>Install TK and mpv. <code>brew install tcl-tk mpv</code></li>\n<li>Install python3 with TK support. <code>FLAGS=\"-I$(brew --prefix tcl-tk)/include\" pyenv install 3.8.1</code></li>\n<li>Set this python3 as the default. <code>pyenv global 3.8.1</code></li>\n<li>Install jellyfin-mpv-shim and pystray. <code>pip3 install --upgrade 'jellyfin-mpv-shim[gui]'</code></li>\n<li>Run <code>jellyfin-mpv-shim</code>.</li>\n</ol>\n<p>Display mirroring is not tested on OSX, but may be installable with 'pip3 install --upgrade 'jellyfin-mpv-shim[mirror]'`.</p>\n<h2>Building on Windows</h2>\n<p>There is a prebuilt version for Windows in the releases section. When\nfollowing these directions, please take care to ensure both the python\nand libmpv libraries are either 64 or 32 bit. (Don't mismatch them.)</p>\n<p>If you'd like to build the installer, please install <a href=\"https://jrsoftware.org/isinfo.php\" rel=\"nofollow\">Inno Setup</a> to build\nthe installer. If you'd like to build a 32 bit version, download the 32 bit version of mpv-1.dll and\ncopy it into a new folder called mpv32. You'll also need <a href=\"https://github.com/r0x0r/pywebview/blob/master/webview/lib/WebBrowserInterop.x86.dll?raw=true\" rel=\"nofollow\">WebBrowserInterop.x86.dll</a>.\nYou may also need to edit the batch file for 32 bit builds to point to the right python executable.</p>\n<ol>\n<li>Install Git for Windows. Open Git Bash and run <code>git clone https://github.com/iwalton3/jellyfin-mpv-shim; cd jellyfin-mpv-shim</code>.</li>\n<li>Install <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python3</a> with PATH enabled. Install <a href=\"https://ninite.com/7zip/\" rel=\"nofollow\">7zip</a>.</li>\n<li>After installing python3, open <code>cmd</code> as admin and run <code>pip install --upgrade pyinstaller python-mpv jellyfin-apiclient-python pywin32 pystray Jinja2 pywebview[cef] python-mpv-jsonipc Flask Werkzeug</code>.</li>\n<li>Download <a href=\"https://sourceforge.net/projects/mpv-player-windows/files/libmpv/\" rel=\"nofollow\">libmpv</a>.</li>\n<li>Extract the <code>mpv-1.dll</code> from the file and move it to the <code>jellyfin-mpv-shim</code> folder.</li>\n<li>Open a regular <code>cmd</code> prompt. Navigate to the <code>jellyfin-mpv-shim</code> folder.</li>\n<li>(Edge Build, disabled by default) Download <a href=\"https://github.com/r0x0r/pywebview/blob/master/webview/lib/WebBrowserInterop.x64.dll?raw=true\" rel=\"nofollow\">WebBrowserInterop.x64.dll</a> and <a href=\"https://www.nuget.org/api/v2/package/Microsoft.Toolkit.Forms.UI.Controls.WebView/6.0.0\" rel=\"nofollow\">Winforms Webview</a>.</li>\n<li>(Edge Build, disabled by default) Rename the <code>*.nupkg</code> to a <code>*.zip</code> file and extract <code>lib\\net462\\Microsoft.Toolkit.Forms.UI.Controls.WebView.dll</code> to the project root.</li>\n<li>(CEF Desktop Client) Copy the folder <code>AppData\\Local\\Programs\\Python\\Python37\\Lib\\site-packages\\cefpython3</code> to <code>cef\\cefpython3</code>.</li>\n<li>Download the web <a href=\"https://github.com/iwalton3/jellyfin-web/releases/tag/jwc1.5.2\" rel=\"nofollow\">client build</a> and unzip it into <code>jellyfin_mpv_shim\\webclient_view\\webclient</code>.</li>\n<li>Run <code>build-win.bat</code>.</li>\n</ol>\n\n          </div>"}, "last_serial": 7142786, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1df04cc85e4c9992b24b1f22b877d652", "sha256": "078577bb7dcd917f9adaf707293b3449ed957565f037157b1b7a3f3de886a19e"}, "downloads": -1, "filename": "jellyfin_mpv_shim-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1df04cc85e4c9992b24b1f22b877d652", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4967, "upload_time": "2020-01-11T18:40:40", "upload_time_iso_8601": "2020-01-11T18:40:40.441421Z", "url": "https://files.pythonhosted.org/packages/a0/4e/89c7de6b2aa38423bb3ec894722cdad971a0edebc76c852d55442d8e1e33/jellyfin_mpv_shim-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c1b70bf91551ad2792d802e15f45cb4", "sha256": "2d8125e304394eb0893b0d2a97efc3296753bed561761b68c0696bf8e4918b4f"}, "downloads": -1, "filename": "jellyfin-mpv-shim-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8c1b70bf91551ad2792d802e15f45cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2020-01-11T18:40:42", "upload_time_iso_8601": "2020-01-11T18:40:42.513773Z", "url": "https://files.pythonhosted.org/packages/6c/34/2c246592bbed09d7c4240deac7c574b23f95b07029f1bde51f3c12f09d87/jellyfin-mpv-shim-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "805ba3e692965eb19320b1579007b35f", "sha256": "4b3d31bfba985369ed681bbd5240792cfc1a8f5d3a7f670629ade1ab712c47cc"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "805ba3e692965eb19320b1579007b35f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52340, "upload_time": "2020-01-13T05:18:07", "upload_time_iso_8601": "2020-01-13T05:18:07.099626Z", "url": "https://files.pythonhosted.org/packages/e7/58/12ff98e9d380a97c285f746b111db8306aa1e0dcd8760563f4c29d107f88/jellyfin_mpv_shim-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "456fcd426c66ea792ddf16bb4d12c252", "sha256": "9a938140b0d90fc22109344ee46ae7cf462ba29b1e3175e04aec6f0273464a23"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.0.0.tar.gz", "has_sig": false, "md5_digest": "456fcd426c66ea792ddf16bb4d12c252", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35027, "upload_time": "2020-01-13T05:18:08", "upload_time_iso_8601": "2020-01-13T05:18:08.414045Z", "url": "https://files.pythonhosted.org/packages/40/a8/2427acf41e49e416d7585076f813df082d249916f44336fc19d8efdbe7cc/jellyfin-mpv-shim-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "95e0f0707bf342462a940dd69f736c93", "sha256": "454d3fb51374204eaf442d85bf193f87892940872f92b4c9573b2dbc053015b9"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "95e0f0707bf342462a940dd69f736c93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53190, "upload_time": "2020-01-14T18:06:22", "upload_time_iso_8601": "2020-01-14T18:06:22.124206Z", "url": "https://files.pythonhosted.org/packages/33/fc/ea3f1e257e39a6cfe8d47e6fc00d634259cf8c373869de5dd64c14d21ce9/jellyfin_mpv_shim-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82c3c49db4a913e3aba12121cbde1c47", "sha256": "40986cf3a8d18669aecddb01c5e680e00e09fe0e5a9f98b5dd55168b2a6639a9"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.1.0.tar.gz", "has_sig": false, "md5_digest": "82c3c49db4a913e3aba12121cbde1c47", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36004, "upload_time": "2020-01-14T18:06:24", "upload_time_iso_8601": "2020-01-14T18:06:24.029451Z", "url": "https://files.pythonhosted.org/packages/14/dd/833a8baf3547fb410601568f7aa8f2e5c2cc56de115d5ddf91a002cbd7a3/jellyfin-mpv-shim-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "34e2a7daa6cd79f68b3802008aece585", "sha256": "057d8778b19a13b0ac60d380a4c0f5f60f7a8d8715811cf00b1d2bacb32e5bd9"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "34e2a7daa6cd79f68b3802008aece585", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38066, "upload_time": "2020-01-15T17:32:35", "upload_time_iso_8601": "2020-01-15T17:32:35.192843Z", "url": "https://files.pythonhosted.org/packages/da/44/86730abebd8c54af89bebd2456b0f91976253264319e721dd4df4575b4e3/jellyfin_mpv_shim-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41b65f33a8b88fbb82e8477067eb7cb5", "sha256": "c35469333f52ce7d510dc22da11be7dd4c6c7c646bcaed4b42740df0cb7b88c7"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.1.1.tar.gz", "has_sig": false, "md5_digest": "41b65f33a8b88fbb82e8477067eb7cb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24934, "upload_time": "2020-01-15T17:32:36", "upload_time_iso_8601": "2020-01-15T17:32:36.930182Z", "url": "https://files.pythonhosted.org/packages/6f/ba/0664b42d36817037f4f84c63db96d56d3ee4ca6f4fcc99e7dd7e50c8fc0d/jellyfin-mpv-shim-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "bf3c6b5c9a7ebdfd991e2674a3648f88", "sha256": "8a4e64688929dd3c33066cb326d5b4ce9df640fb2fee06d7517856282f6b2092"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bf3c6b5c9a7ebdfd991e2674a3648f88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38065, "upload_time": "2020-01-15T17:40:29", "upload_time_iso_8601": "2020-01-15T17:40:29.748625Z", "url": "https://files.pythonhosted.org/packages/89/a7/a603dff861721caf56d1628c9d14f42993f5c9ac9cd27b43c438fa0f2f92/jellyfin_mpv_shim-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01951d76ad14132ecf26c41e3f612ae2", "sha256": "f17e170126acec034d32274846c2366d7385aed4a0eab849529e5dd7cf40e0c0"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.1.2.tar.gz", "has_sig": false, "md5_digest": "01951d76ad14132ecf26c41e3f612ae2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24933, "upload_time": "2020-01-15T17:40:31", "upload_time_iso_8601": "2020-01-15T17:40:31.270813Z", "url": "https://files.pythonhosted.org/packages/c8/fe/06f3c12be4d4bb7e566d3a26aa2dfa2eeca1f845bf3e6f1e80b29f200d85/jellyfin-mpv-shim-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "28346575455b93c1fbe0cbb973fada2d", "sha256": "50e9cd42eea341bac6c17f7313f08655b19e941b6e903683501c052ea25efb0b"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "28346575455b93c1fbe0cbb973fada2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38086, "upload_time": "2020-01-15T19:26:39", "upload_time_iso_8601": "2020-01-15T19:26:39.649050Z", "url": "https://files.pythonhosted.org/packages/88/44/e208a551e1fceef25632af2a11a1c056bb1ba726b6cb46cde29c8602ef0f/jellyfin_mpv_shim-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdb2f823841a6ce2ac1691d66f51a961", "sha256": "29c5b8cae749992985b5ec1090fcfb747634de4381f00cf46f58312b2720c349"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.1.3.tar.gz", "has_sig": false, "md5_digest": "cdb2f823841a6ce2ac1691d66f51a961", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24919, "upload_time": "2020-01-15T19:26:41", "upload_time_iso_8601": "2020-01-15T19:26:41.102337Z", "url": "https://files.pythonhosted.org/packages/4d/04/8593930bf4d448844dbf0c83e0c34bd16c3d82f469e1ead132139c2a1eff/jellyfin-mpv-shim-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "87b277e3057bcb8118d539895085f9b3", "sha256": "265e80d594f15a0d7bf3c1c756343224b8a759e4c90c361b3831aa23fda56e98"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "87b277e3057bcb8118d539895085f9b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38283, "upload_time": "2020-01-16T07:09:18", "upload_time_iso_8601": "2020-01-16T07:09:18.342076Z", "url": "https://files.pythonhosted.org/packages/22/3d/1acef6177a726b4a7e7e5cfb9b9003070a284791d3a749e97ffdad4cc813/jellyfin_mpv_shim-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d9cbc4e6081c2aef9f4d31a3c96bb01", "sha256": "7ecfaeede6374ad62b2a847a88b21c47b501e750df46f2198fc5ede31701c854"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.1.4.tar.gz", "has_sig": false, "md5_digest": "1d9cbc4e6081c2aef9f4d31a3c96bb01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25118, "upload_time": "2020-01-16T07:09:20", "upload_time_iso_8601": "2020-01-16T07:09:20.032061Z", "url": "https://files.pythonhosted.org/packages/9b/97/561c73fb5535736984c6bd77467f7b68f28a67544932de2f4b9ace0a50d8/jellyfin-mpv-shim-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "c59399a3dedfdaa8df88ad77247b07d1", "sha256": "3ecd8ffa65845b6d8b21ec6342c0c110a7927c422b547c2e2068eec84b7d2b12"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c59399a3dedfdaa8df88ad77247b07d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 44832, "upload_time": "2020-01-17T03:18:26", "upload_time_iso_8601": "2020-01-17T03:18:26.427951Z", "url": "https://files.pythonhosted.org/packages/73/ee/5d758fce76c523976f44d0695fac06d22addd62c807081d38af074e9ddf1/jellyfin_mpv_shim-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9ac68571256fe5069ca90d7e168a546", "sha256": "5915b7d1a191466b8bec490285e37beca9268be58c33d75ff8001eb274afaae8"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f9ac68571256fe5069ca90d7e168a546", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31488, "upload_time": "2020-01-17T03:18:28", "upload_time_iso_8601": "2020-01-17T03:18:28.003976Z", "url": "https://files.pythonhosted.org/packages/30/0b/253230e37a494d93bebdcb6bd39872292e944d1f2cd2902d545ac647fc1c/jellyfin-mpv-shim-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "991db39f801dbedda550bc96abd4ee85", "sha256": "e8faa639ae5104d2d20d69d5d02b0a9a3216c1cfb9d1dd7754a5c9d8516d0232"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "991db39f801dbedda550bc96abd4ee85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45109, "upload_time": "2020-01-17T17:18:19", "upload_time_iso_8601": "2020-01-17T17:18:19.238964Z", "url": "https://files.pythonhosted.org/packages/ec/0d/e45b5d1b7c0d7b6b04883d350da0acbda48ec91f5880d506d7d62f257373/jellyfin_mpv_shim-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0febda6d997e7b31533224c228f82c38", "sha256": "31ee0276667488dee1b8e11c523adf4c9fcfb4241a0687e5fb08f5642139e557"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.2.1.tar.gz", "has_sig": false, "md5_digest": "0febda6d997e7b31533224c228f82c38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31813, "upload_time": "2020-01-17T17:18:20", "upload_time_iso_8601": "2020-01-17T17:18:20.955657Z", "url": "https://files.pythonhosted.org/packages/ea/ac/94e5224638cc501cf538bef88b3192da558f634114a809f2a5e76dc40784/jellyfin-mpv-shim-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "f800cec2b8e6759bcb253639a28d94bc", "sha256": "28e4a57fe7cffad8d93c07f22a498a03e9b8f42d4e1c1f806c13ca0814d67909"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f800cec2b8e6759bcb253639a28d94bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45660, "upload_time": "2020-01-21T15:31:45", "upload_time_iso_8601": "2020-01-21T15:31:45.725363Z", "url": "https://files.pythonhosted.org/packages/bf/a5/42700ad410c7c937d5a956395f35906c2a15f7408a328f62c8818f531b5c/jellyfin_mpv_shim-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe42a5d2aca3615e10d9872f4a02dcdc", "sha256": "f209ed5f079e206960deb711a37ac330c39c06f98560644c5f6c33b6e3ae57bc"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.0.tar.gz", "has_sig": false, "md5_digest": "fe42a5d2aca3615e10d9872f4a02dcdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32457, "upload_time": "2020-01-21T15:31:47", "upload_time_iso_8601": "2020-01-21T15:31:47.369213Z", "url": "https://files.pythonhosted.org/packages/12/98/13f41456aa00e2efe61c9dcb87f035ab57e9bee71fd0dd2d23c49e393360/jellyfin-mpv-shim-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "daac6d3a447071aec0b6a04fcb2b4e82", "sha256": "b4a9fd2efa837da5c1774ff97175b1fcf14b73c4aacfdbe648c18dd772c9dbcb"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "daac6d3a447071aec0b6a04fcb2b4e82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45846, "upload_time": "2020-01-30T16:15:28", "upload_time_iso_8601": "2020-01-30T16:15:28.308395Z", "url": "https://files.pythonhosted.org/packages/99/0c/fbe76ef9c70f5582d158b62087145721960d8f22380cad1b5731e21d5663/jellyfin_mpv_shim-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4000522310578ed5440576be896fa61", "sha256": "b97be9933307451be129d5abf6189a819db1368a3762d3cd467aed84b5d743cf"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.1.tar.gz", "has_sig": false, "md5_digest": "b4000522310578ed5440576be896fa61", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32650, "upload_time": "2020-01-30T16:15:29", "upload_time_iso_8601": "2020-01-30T16:15:29.958182Z", "url": "https://files.pythonhosted.org/packages/ab/7d/6ec7a082fb668d0fa744ebab4b3f1f4c7e7ab418c685cd8738eb5a33839f/jellyfin-mpv-shim-1.3.1.tar.gz", "yanked": false}], "1.3.10": [{"comment_text": "", "digests": {"md5": "f8cca0b5187873d8a6365cef34f66401", "sha256": "55167de1f3e5192b937ed4cbc14cc04305da5df30bf63dbb543e010b9e598cab"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f8cca0b5187873d8a6365cef34f66401", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47725, "upload_time": "2020-02-20T03:34:04", "upload_time_iso_8601": "2020-02-20T03:34:04.562430Z", "url": "https://files.pythonhosted.org/packages/73/ab/582eb604996f6358671e35094489aa412daefe8025c3314fb636801fb603/jellyfin_mpv_shim-1.3.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3dd34bf0f1b71bfef97bd1c9c7d75cf", "sha256": "aa46ef5204b6d34039f3055a96e9e63d888e29856b6c9f0a90ed24a2cf0cc8e8"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.10.tar.gz", "has_sig": false, "md5_digest": "e3dd34bf0f1b71bfef97bd1c9c7d75cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35595, "upload_time": "2020-02-20T03:34:05", "upload_time_iso_8601": "2020-02-20T03:34:05.924463Z", "url": "https://files.pythonhosted.org/packages/c2/af/587ad8b5d2728cd97e80daa8591631cb3b13d15d7a226111eff135d6fdd0/jellyfin-mpv-shim-1.3.10.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "3567b68d4bcb7e9ece3026a097de9304", "sha256": "cc64c33fc43c1a14efffbf8dec16747db19fcd72880ee03b5570f37c41249298"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3567b68d4bcb7e9ece3026a097de9304", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45795, "upload_time": "2020-01-31T02:06:49", "upload_time_iso_8601": "2020-01-31T02:06:49.498416Z", "url": "https://files.pythonhosted.org/packages/3d/ca/3bde8d47c23e8d781f807c750e001a0fbedc04c329c93a2ac44f6cd73218/jellyfin_mpv_shim-1.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b39a360a04b61d6ecacc62d6b355d32a", "sha256": "ba95f1fc2da3e02395bb88127fdd2a4014f6eccdf830a73cb7601d49cd526dbd"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.2.tar.gz", "has_sig": false, "md5_digest": "b39a360a04b61d6ecacc62d6b355d32a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32565, "upload_time": "2020-01-31T02:06:51", "upload_time_iso_8601": "2020-01-31T02:06:51.075512Z", "url": "https://files.pythonhosted.org/packages/ff/20/1c7d4489fb59a3048b19a9fb4e662c1725c731fe10179ace9cd871763565/jellyfin-mpv-shim-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "eca9114654813da4b8b494a5e1ecd2ec", "sha256": "a8ef793808acac987c4740ed08019ac7969dc1658acc061fe2ce098cd1f8daf3"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eca9114654813da4b8b494a5e1ecd2ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46475, "upload_time": "2020-02-02T02:25:47", "upload_time_iso_8601": "2020-02-02T02:25:47.164323Z", "url": "https://files.pythonhosted.org/packages/ac/2b/34911a3cbb3d605a4bf4b4790c9da2b4c952bedecc6e0eda5d4edf405a15/jellyfin_mpv_shim-1.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3917c1a3c9197740f4b483936510860", "sha256": "e61433e032542d95db28046da2ece5dba73287dfe67d1beee5e647984ddc0fbe"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.3.tar.gz", "has_sig": false, "md5_digest": "f3917c1a3c9197740f4b483936510860", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33809, "upload_time": "2020-02-02T02:25:48", "upload_time_iso_8601": "2020-02-02T02:25:48.858389Z", "url": "https://files.pythonhosted.org/packages/bf/e8/cd3045a6d266529d1a4a162f4c4f48ce08cf7675fe7fdd2a24e3554a1aed/jellyfin-mpv-shim-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "6c0a700777074dfc64b8468e778a4a37", "sha256": "265b0d9da84e18ed1019f80a0d4cd68a2d2cfdbd14397b49f8f12098319bc8f6"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6c0a700777074dfc64b8468e778a4a37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46503, "upload_time": "2020-02-02T05:28:06", "upload_time_iso_8601": "2020-02-02T05:28:06.930963Z", "url": "https://files.pythonhosted.org/packages/3d/7f/dbc66154fce01ca6c75c1de1936d7eba983986039962fce3ecf0a059ad25/jellyfin_mpv_shim-1.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f86240fbff8984ed16f75e36745b2847", "sha256": "31ed9d14518c396be4ba8523b1987c42e8f7d05e4a07dcb5f475cfb2f410ba3f"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.4.tar.gz", "has_sig": false, "md5_digest": "f86240fbff8984ed16f75e36745b2847", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33829, "upload_time": "2020-02-02T05:28:08", "upload_time_iso_8601": "2020-02-02T05:28:08.181079Z", "url": "https://files.pythonhosted.org/packages/89/87/694544b1b44de8c4deef53a13ddab7cc80e63ce048716e3a9b6ec18751da/jellyfin-mpv-shim-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "cfa098b819648a5343eac9a6747fe037", "sha256": "147c0eccde1eb2c4a756ebc2796d6f1a1eb6c65d1534eff69e8a8b68819e5f45"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "cfa098b819648a5343eac9a6747fe037", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46775, "upload_time": "2020-02-08T00:02:03", "upload_time_iso_8601": "2020-02-08T00:02:03.284224Z", "url": "https://files.pythonhosted.org/packages/a5/c3/b03f4116f50189fe272838fdb5e21b8c3e1b5cb648f1a177712d948e17fb/jellyfin_mpv_shim-1.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "697138b4c35d876bc523eea495d9d359", "sha256": "23b8ac7bf5f80c43dbd68d6683e30b49e717c0e8ad5ffeddd248c44a8914faae"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.5.tar.gz", "has_sig": false, "md5_digest": "697138b4c35d876bc523eea495d9d359", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34043, "upload_time": "2020-02-08T00:02:04", "upload_time_iso_8601": "2020-02-08T00:02:04.970837Z", "url": "https://files.pythonhosted.org/packages/98/e7/2d9a9d3817008098cbe99ed59451c60daab1e8c8dcae08d71c51124793fb/jellyfin-mpv-shim-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "d522530dd2d85eae0be863b2b7f26a4e", "sha256": "ab9b31da20e37ec5c94d78137278a21050095262b3dd988815c4392fa9c1047f"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d522530dd2d85eae0be863b2b7f26a4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46862, "upload_time": "2020-02-09T00:15:06", "upload_time_iso_8601": "2020-02-09T00:15:06.601863Z", "url": "https://files.pythonhosted.org/packages/fe/c6/551b9b03ced0c6e21e853e157df37e1fe36363c65c0995cfa741a80e745f/jellyfin_mpv_shim-1.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0dbddd6ab87e07c762780f5e5c9099a", "sha256": "59bbce40aa4c32c19ad4b286e1e518697a4e65f25d481ec0b4d2b27a47e3dc6b"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.6.tar.gz", "has_sig": false, "md5_digest": "e0dbddd6ab87e07c762780f5e5c9099a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34289, "upload_time": "2020-02-09T00:15:09", "upload_time_iso_8601": "2020-02-09T00:15:09.267876Z", "url": "https://files.pythonhosted.org/packages/e0/3f/7ade6937908c5a8a46c4c156e49de7d69f6e124b41c350920fc16e090835/jellyfin-mpv-shim-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "6bcd4c39ac1befde592209e8825ffd3b", "sha256": "e0c25f34cf89087eeb6a95a93b47174c2f1f18737073757eadbb2b3f8347c4ca"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6bcd4c39ac1befde592209e8825ffd3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47274, "upload_time": "2020-02-11T06:27:52", "upload_time_iso_8601": "2020-02-11T06:27:52.779943Z", "url": "https://files.pythonhosted.org/packages/5d/66/cb4d64e38dc14f5e16a276e8d5d3e7779f51bab14df3d02711f67cb38f7a/jellyfin_mpv_shim-1.3.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2820cb60fe20151384bd8225e3709756", "sha256": "904aa468cfb55030b19f0dec0060e668d29434989a7873704b9d6e6a77f8c5e1"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.7.tar.gz", "has_sig": false, "md5_digest": "2820cb60fe20151384bd8225e3709756", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34710, "upload_time": "2020-02-11T06:27:54", "upload_time_iso_8601": "2020-02-11T06:27:54.521422Z", "url": "https://files.pythonhosted.org/packages/22/51/45f900972b3a73b8d57f2dbd00001cad8d155c64aa02e385ba9cc6037a74/jellyfin-mpv-shim-1.3.7.tar.gz", "yanked": false}], "1.3.8": [{"comment_text": "", "digests": {"md5": "5dcafbcbc6d7a894f031e9153d28725f", "sha256": "924032d15e5d29e14137e0f06444117f0958254c9b8666b5040dc64dfee4e931"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5dcafbcbc6d7a894f031e9153d28725f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47660, "upload_time": "2020-02-17T15:48:20", "upload_time_iso_8601": "2020-02-17T15:48:20.650102Z", "url": "https://files.pythonhosted.org/packages/6a/8d/a3c5c87a2c2cdde50f95d422fca357dd7ec85c9beae2cd9ac3911224494e/jellyfin_mpv_shim-1.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "595ba7572bc2e9e1cec092fddc158622", "sha256": "b6d8d38b607ea0e7a5adebb4477f99bf3d01f2e2b1d86bbd677105851b591b27"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.8.tar.gz", "has_sig": false, "md5_digest": "595ba7572bc2e9e1cec092fddc158622", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35551, "upload_time": "2020-02-17T15:48:21", "upload_time_iso_8601": "2020-02-17T15:48:21.930781Z", "url": "https://files.pythonhosted.org/packages/99/91/3351ec9ddcdf7ec622abcb700cc1f6d2af37c8e0def4280474c8935c978a/jellyfin-mpv-shim-1.3.8.tar.gz", "yanked": false}], "1.3.9": [{"comment_text": "", "digests": {"md5": "0fceeb4efbe62645a972309f2aca3847", "sha256": "e6f5abf3698bab19f74c251d2c8dbe17eeb10484f2444aca10b5e89828b48dab"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "0fceeb4efbe62645a972309f2aca3847", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47708, "upload_time": "2020-02-19T04:50:21", "upload_time_iso_8601": "2020-02-19T04:50:21.016485Z", "url": "https://files.pythonhosted.org/packages/ea/31/ab8febfc72e39c0dc6b2b2b9936c3da9fa4bc0210a798e00dd94f2379011/jellyfin_mpv_shim-1.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36b1f8c4ff8ed9667d9f5c5d5711a11f", "sha256": "d7bf15e79659a839c8c259d97443ee1b98fedafa4e4d0748d3b60e1b9f387104"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.3.9.tar.gz", "has_sig": false, "md5_digest": "36b1f8c4ff8ed9667d9f5c5d5711a11f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35597, "upload_time": "2020-02-19T04:50:22", "upload_time_iso_8601": "2020-02-19T04:50:22.388797Z", "url": "https://files.pythonhosted.org/packages/04/54/99f99395d1ad08006adff03fe46b11fee80c1e4b498fa61ee8869ed116cc/jellyfin-mpv-shim-1.3.9.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "ccbd3701d33d028dbe961b8ae745753a", "sha256": "109e3dff706fd16525e482a3a082b44b329993342517d54785ebbf23da664b41"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ccbd3701d33d028dbe961b8ae745753a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 65748, "upload_time": "2020-02-22T06:25:32", "upload_time_iso_8601": "2020-02-22T06:25:32.414565Z", "url": "https://files.pythonhosted.org/packages/49/d2/3d8fd9e57ac19b098b0e52d4c4a3d0822ff9e4d4b3af3d76b8c461c43f1c/jellyfin_mpv_shim-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ce99745c9f91295d2e05aad34169faa", "sha256": "c50cc21426e72a5555c65cdb31e538699340b226c6cdb03936a50ad50b111f64"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.4.0.tar.gz", "has_sig": false, "md5_digest": "7ce99745c9f91295d2e05aad34169faa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42126, "upload_time": "2020-02-22T06:25:35", "upload_time_iso_8601": "2020-02-22T06:25:35.391961Z", "url": "https://files.pythonhosted.org/packages/db/61/dbf0b7c5175333327f515fe6d844c4483c917317a99e193a7663c4d7dbd4/jellyfin-mpv-shim-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "1fc6abb9c5f7c689862c87d3947b6022", "sha256": "0fd837090252999706f3bced5b5bca422bb7b7b5e2a3c5b2b59e22d99b26c66b"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1fc6abb9c5f7c689862c87d3947b6022", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 66358, "upload_time": "2020-02-27T05:02:32", "upload_time_iso_8601": "2020-02-27T05:02:32.810175Z", "url": "https://files.pythonhosted.org/packages/04/33/9d3cec65aef9099f996436c3a428c0efe0406b5d702002349e5871dfd410/jellyfin_mpv_shim-1.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c36c36efbd917f5ea76eef96989e55fe", "sha256": "6bb2ac96612acf74a5170ddb1105013e5342ecfd35e90a1f1af647c3ec4826c1"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.4.1.tar.gz", "has_sig": false, "md5_digest": "c36c36efbd917f5ea76eef96989e55fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43046, "upload_time": "2020-02-27T05:02:34", "upload_time_iso_8601": "2020-02-27T05:02:34.775560Z", "url": "https://files.pythonhosted.org/packages/80/21/ef791f11fa9587ba193097baae5f6be6e0ce66e2ba895d0fdeb1846c5a4e/jellyfin-mpv-shim-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "af2e9f6b0f49ab1100d7050b70a32f31", "sha256": "22cde28af925f0252d4d1b5bb8ab76d0523a3743eeae3ad318eebdcb2aa6df9f"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af2e9f6b0f49ab1100d7050b70a32f31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 66494, "upload_time": "2020-03-27T11:27:25", "upload_time_iso_8601": "2020-03-27T11:27:25.888302Z", "url": "https://files.pythonhosted.org/packages/3f/a2/a1dac4ff1fd92a5282c5b28779cd807d80c5d2fe7f4deb25b9f7e001bd47/jellyfin_mpv_shim-1.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c7e665dc332cb42963342c018c378a2", "sha256": "adbc2b43c5e72794eb30e72aab9166ebf184f5f8390905df04ce01c4836923e4"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.4.2.tar.gz", "has_sig": false, "md5_digest": "1c7e665dc332cb42963342c018c378a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43240, "upload_time": "2020-03-27T11:27:27", "upload_time_iso_8601": "2020-03-27T11:27:27.146782Z", "url": "https://files.pythonhosted.org/packages/79/ee/9c3293a3e1dffc71c72d4a54b2b48a7e187604f80164e0f83779fc04f77f/jellyfin-mpv-shim-1.4.2.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "a2af2bae84f270f1070f7ecfc9e0d27c", "sha256": "ac5578a5bdeff7b35704905e0c1babb308a3400068cccfcd1a8735ca7a1d64cf"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a2af2bae84f270f1070f7ecfc9e0d27c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39090501, "upload_time": "2020-03-30T15:58:00", "upload_time_iso_8601": "2020-03-30T15:58:00.288296Z", "url": "https://files.pythonhosted.org/packages/dd/5e/2342a27831b0a5abd6b23eaddb5a8600ee4d4b19f8aace232bfb17a49782/jellyfin_mpv_shim-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b1c94205a5a764a4469501f609387ab", "sha256": "072ee06193a8f017ed86677f21ae9948ad38fa615626c0b74589f923815224db"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.0.tar.gz", "has_sig": false, "md5_digest": "4b1c94205a5a764a4469501f609387ab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38361532, "upload_time": "2020-03-30T15:58:34", "upload_time_iso_8601": "2020-03-30T15:58:34.574296Z", "url": "https://files.pythonhosted.org/packages/81/4e/34db30dce56607740ab8bac4950d018585899f1a614c7151160605fa3176/jellyfin-mpv-shim-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "75d10a54fb56b31fcca1314631d21134", "sha256": "6cefd3d72d86618c5d9e40e37c39f3a3985846e82e3dd12bd3e8b44beeaf83cd"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "75d10a54fb56b31fcca1314631d21134", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39090712, "upload_time": "2020-03-30T16:22:25", "upload_time_iso_8601": "2020-03-30T16:22:25.001454Z", "url": "https://files.pythonhosted.org/packages/69/44/6f705494968ba2d07f8cc520dcc5fda8eeda1c4d239d10c8781aa09e3a2d/jellyfin_mpv_shim-1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e648899939eb0b9e4a7bd089b52da296", "sha256": "e458d7418cde6cb1f712ac79a77d7bca84ee89b8b31e956b576dab768d423aaa"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.1.tar.gz", "has_sig": false, "md5_digest": "e648899939eb0b9e4a7bd089b52da296", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38361732, "upload_time": "2020-03-30T16:23:00", "upload_time_iso_8601": "2020-03-30T16:23:00.112622Z", "url": "https://files.pythonhosted.org/packages/9b/8a/726ddefa971d918fafa65563b465ade3b5bde8f260c825867a8f692d03fc/jellyfin-mpv-shim-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "c3c4b209a5d1e7fc501f6f746bc58976", "sha256": "080626120e46e1b1473dbcbd33638bef72cdfd23eca6cf9002e41b092fb612be"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c3c4b209a5d1e7fc501f6f746bc58976", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39090790, "upload_time": "2020-03-30T22:00:13", "upload_time_iso_8601": "2020-03-30T22:00:13.739255Z", "url": "https://files.pythonhosted.org/packages/72/db/aeceaacb2207303164beb38cc142e877aa63de643828378d4682aaa8e193/jellyfin_mpv_shim-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3c5167fa8859c34a0824918c82d8234", "sha256": "2bc80d80e71f696d0823615bc64958ee1d1c95d748bde8600570d9cab5ad41f4"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.2.tar.gz", "has_sig": false, "md5_digest": "b3c5167fa8859c34a0824918c82d8234", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38361813, "upload_time": "2020-03-30T22:00:48", "upload_time_iso_8601": "2020-03-30T22:00:48.070049Z", "url": "https://files.pythonhosted.org/packages/22/41/30dbf0a4fc0e066876286ade66a2e2c4f752a4606605979c052ae9ef821c/jellyfin-mpv-shim-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "9491145284626d8e58365a0924800ce6", "sha256": "1d0d3ba348633874a415d62b73b70e5eb9512881380d99cac4d6a18239801599"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9491145284626d8e58365a0924800ce6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39091250, "upload_time": "2020-03-31T00:46:33", "upload_time_iso_8601": "2020-03-31T00:46:33.006482Z", "url": "https://files.pythonhosted.org/packages/31/28/837bd4394241699cb89149ca22c9f032ae31656ac537fc4d2ae975d78476/jellyfin_mpv_shim-1.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06944788d276bf40d0b6186b25b5872a", "sha256": "d9488f1a0577e79dfa4ddb049b99f40cc8851c2345be3401a7e1490c932f52ed"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.3.tar.gz", "has_sig": false, "md5_digest": "06944788d276bf40d0b6186b25b5872a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38362148, "upload_time": "2020-03-31T00:47:08", "upload_time_iso_8601": "2020-03-31T00:47:08.780259Z", "url": "https://files.pythonhosted.org/packages/3e/29/b1a9249fdc0c4bc19ba1efb31a8b39fd573ef22df47dad4f028e30d93ed7/jellyfin-mpv-shim-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "593cf9f4ac91edd57acfd3c04553235d", "sha256": "4224587b107a00bde121e72d7f705ecf096fabbf5f643484608455c9b7e99196"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "593cf9f4ac91edd57acfd3c04553235d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39091424, "upload_time": "2020-03-31T07:01:56", "upload_time_iso_8601": "2020-03-31T07:01:56.005022Z", "url": "https://files.pythonhosted.org/packages/5a/a1/8dda518344c76fc9918d024a96e35c0d10bbcd19373115e66451c59b9625/jellyfin_mpv_shim-1.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04c938eec6518e4495001898e27fbaa5", "sha256": "b9a64f81beba57d22a81fa79138b2eab46ebef33213410be2bcfa58fbb4180a8"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.4.tar.gz", "has_sig": false, "md5_digest": "04c938eec6518e4495001898e27fbaa5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38361791, "upload_time": "2020-03-31T07:02:58", "upload_time_iso_8601": "2020-03-31T07:02:58.782659Z", "url": "https://files.pythonhosted.org/packages/8c/62/9f3848b599cbfef973f2c36e8d2ef4ecbce4b4342166cf55d06c3014704d/jellyfin-mpv-shim-1.5.4.tar.gz", "yanked": false}], "1.5.5": [{"comment_text": "", "digests": {"md5": "37506325856c5428ec6bf973f1707806", "sha256": "ba181bcc64b68544b9ba16d1bf544ff643115a377a65d9c838eb3b7bfafbad0c"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "37506325856c5428ec6bf973f1707806", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39092186, "upload_time": "2020-04-05T13:48:31", "upload_time_iso_8601": "2020-04-05T13:48:31.327413Z", "url": "https://files.pythonhosted.org/packages/c5/3e/1591b0961057bebe15cc0499fc8a56661df02fc8b05e6ff991df509f2e94/jellyfin_mpv_shim-1.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "555c2d7a47ba3932ec4ed259a9a3abe1", "sha256": "2ba9ee82f02e8914c8f99e3aa1aac6616f631b92f4baedb2c67026e19944608e"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.5.tar.gz", "has_sig": false, "md5_digest": "555c2d7a47ba3932ec4ed259a9a3abe1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38363441, "upload_time": "2020-04-05T13:49:05", "upload_time_iso_8601": "2020-04-05T13:49:05.011205Z", "url": "https://files.pythonhosted.org/packages/90/1f/4e6b0aa32add45fe1f27a99012878fc39cf2bbd4a8002acfddb3312997b0/jellyfin-mpv-shim-1.5.5.tar.gz", "yanked": false}], "1.5.6": [{"comment_text": "", "digests": {"md5": "d5db4e6a5e3c288f1f78ec7d9d68fd65", "sha256": "87d7cda0ec01bee1232508557430d12c4159151fdc9bc357b067c1f4634ff201"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d5db4e6a5e3c288f1f78ec7d9d68fd65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39090940, "upload_time": "2020-04-07T15:24:24", "upload_time_iso_8601": "2020-04-07T15:24:24.060553Z", "url": "https://files.pythonhosted.org/packages/a0/bc/edd4b82503a6cb715c17d48c1817d14090a4256e4e50f8a6c506a440238e/jellyfin_mpv_shim-1.5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "693a4bd27f150b7ce31c90d80392d59b", "sha256": "5e8c69c423615a83d0dd16088a5c7882e1308053ab82e5726a41d576116a458a"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.6.tar.gz", "has_sig": false, "md5_digest": "693a4bd27f150b7ce31c90d80392d59b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38363093, "upload_time": "2020-04-07T15:24:58", "upload_time_iso_8601": "2020-04-07T15:24:58.832081Z", "url": "https://files.pythonhosted.org/packages/82/37/351eaa5aa27096706dd93c89d16752dc4d069b7f1b421cf9f6f05ad12949/jellyfin-mpv-shim-1.5.6.tar.gz", "yanked": false}], "1.5.7": [{"comment_text": "", "digests": {"md5": "0d81c85c15be72c0e9fa565f247f3562", "sha256": "6b25bd4d03353705398ae13c2db8a630f812f1f70a188bef24d9304df88502e0"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0d81c85c15be72c0e9fa565f247f3562", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39138506, "upload_time": "2020-04-09T12:37:27", "upload_time_iso_8601": "2020-04-09T12:37:27.429731Z", "url": "https://files.pythonhosted.org/packages/56/f1/e4e91be650cbb9b9b73239a594dab88edbd13c4b99917690b9e11ba65c42/jellyfin_mpv_shim-1.5.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6a8ccfcde5a9163b49e65f112ab66df", "sha256": "83405606babc2fdad4bd0067f59a5d0473f87bc3824f6a006bd93c452d17df6f"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.7.tar.gz", "has_sig": false, "md5_digest": "a6a8ccfcde5a9163b49e65f112ab66df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38410459, "upload_time": "2020-04-09T12:38:01", "upload_time_iso_8601": "2020-04-09T12:38:01.248709Z", "url": "https://files.pythonhosted.org/packages/df/40/e858993904644939af2ca3660c355e03c020df95dd5204bc0eef6702fe38/jellyfin-mpv-shim-1.5.7.tar.gz", "yanked": false}], "1.5.8": [{"comment_text": "", "digests": {"md5": "5978e66185988086df60224e0b18e2d8", "sha256": "0bd5edebe8e6699a0d6b4fdbb69a48780d4a9ac0f56441f8419d17ee9e0dd9b3"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5978e66185988086df60224e0b18e2d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39138661, "upload_time": "2020-04-16T15:41:22", "upload_time_iso_8601": "2020-04-16T15:41:22.004382Z", "url": "https://files.pythonhosted.org/packages/f7/2b/bb1907306875460dd8febdbf8b7c97329cfcb582854dedc10909ceb989de/jellyfin_mpv_shim-1.5.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b1403ff3bf9a9067cb1b603f0ea3347", "sha256": "c512bf2b5e930a9fa00c5a6d078d95dbb802bfd65aed5ae35461a6feeabd62c1"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.8.tar.gz", "has_sig": false, "md5_digest": "6b1403ff3bf9a9067cb1b603f0ea3347", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38410743, "upload_time": "2020-04-16T15:41:55", "upload_time_iso_8601": "2020-04-16T15:41:55.744690Z", "url": "https://files.pythonhosted.org/packages/97/70/7267bc36e2f82502ab1f821b738272f1c2794f9073286c9cf0e8e519fafc/jellyfin-mpv-shim-1.5.8.tar.gz", "yanked": false}], "1.5.8.post1": [{"comment_text": "", "digests": {"md5": "316bc48db4efc9f7479499352c918422", "sha256": "e31b547e8b71ef2132a6639890f2c20b0e3f77a3e0b1054db8b6a36cf6ba57a5"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.8.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "316bc48db4efc9f7479499352c918422", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39138863, "upload_time": "2020-04-16T15:57:35", "upload_time_iso_8601": "2020-04-16T15:57:35.311655Z", "url": "https://files.pythonhosted.org/packages/af/50/6f1b1ed0f32d2217fcf5dd5d853379e59f3e870ae06bec400698e79a6e46/jellyfin_mpv_shim-1.5.8.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d5f2889174de5651d6737cafc926eec", "sha256": "d2726708abfbf8d8cc6213399f5762b1b1daa6f155ef1ef21ae02ce534347624"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.8.post1.tar.gz", "has_sig": false, "md5_digest": "3d5f2889174de5651d6737cafc926eec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38420355, "upload_time": "2020-04-16T15:58:09", "upload_time_iso_8601": "2020-04-16T15:58:09.260691Z", "url": "https://files.pythonhosted.org/packages/ce/98/cd2570d054242dd8679810d61e0c8dfee26cfa1e18afa22b9313540fb712/jellyfin-mpv-shim-1.5.8.post1.tar.gz", "yanked": false}], "1.5.9": [{"comment_text": "", "digests": {"md5": "92dae9ccd79150da9d742bd2f4d38cd6", "sha256": "e1f298d5acd3bbc6aada55335a1cee60b2f72fd9307aa673e70a249f91356ce8"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.9-py3-none-any.whl", "has_sig": false, "md5_digest": "92dae9ccd79150da9d742bd2f4d38cd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39140993, "upload_time": "2020-05-01T05:24:38", "upload_time_iso_8601": "2020-05-01T05:24:38.679078Z", "url": "https://files.pythonhosted.org/packages/a7/ad/4b823f9ef169c9575c68546ec0fe5d2df8341a32c9468f886c4bab6c637a/jellyfin_mpv_shim-1.5.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2285b585c461058ef8f1f07b005df0b4", "sha256": "b640b01e6a7940a7195127eb98b290df3b0343ebcc76a6f0c390356b17385abd"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.9.tar.gz", "has_sig": false, "md5_digest": "2285b585c461058ef8f1f07b005df0b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38416170, "upload_time": "2020-05-01T05:25:13", "upload_time_iso_8601": "2020-05-01T05:25:13.121135Z", "url": "https://files.pythonhosted.org/packages/d5/c5/257d2bcb25ac132b3dd586f74f7bfd6045ffb9f27d9e00d9a1adfb262010/jellyfin-mpv-shim-1.5.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92dae9ccd79150da9d742bd2f4d38cd6", "sha256": "e1f298d5acd3bbc6aada55335a1cee60b2f72fd9307aa673e70a249f91356ce8"}, "downloads": -1, "filename": "jellyfin_mpv_shim-1.5.9-py3-none-any.whl", "has_sig": false, "md5_digest": "92dae9ccd79150da9d742bd2f4d38cd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39140993, "upload_time": "2020-05-01T05:24:38", "upload_time_iso_8601": "2020-05-01T05:24:38.679078Z", "url": "https://files.pythonhosted.org/packages/a7/ad/4b823f9ef169c9575c68546ec0fe5d2df8341a32c9468f886c4bab6c637a/jellyfin_mpv_shim-1.5.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2285b585c461058ef8f1f07b005df0b4", "sha256": "b640b01e6a7940a7195127eb98b290df3b0343ebcc76a6f0c390356b17385abd"}, "downloads": -1, "filename": "jellyfin-mpv-shim-1.5.9.tar.gz", "has_sig": false, "md5_digest": "2285b585c461058ef8f1f07b005df0b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38416170, "upload_time": "2020-05-01T05:25:13", "upload_time_iso_8601": "2020-05-01T05:25:13.121135Z", "url": "https://files.pythonhosted.org/packages/d5/c5/257d2bcb25ac132b3dd586f74f7bfd6045ffb9f27d9e00d9a1adfb262010/jellyfin-mpv-shim-1.5.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:54 2020"}