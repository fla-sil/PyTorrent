{"info": {"author": "Jonathan Els", "author_email": "jonathanelscpt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Communications :: Conferencing", "Topic :: Communications :: Telephony", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "==============\nCisco CUCM API\n==============\n\n\n\nPython Wrappers for Cisco CUCM SOAP APIs\n\n* Free software: MIT license\n\n\nFeatures\n========\n\nThe ciscocucmapi package is inspired by the most excellent `webexteamssdk <https://github.com/CiscoDevNet/webexteamssdk>`__\nPython API wrapper for Cisco Spark.  The library wraps a `python-zeep <https://github.com/mvantellingen/python-zeep>`__\nclient to manage CUCM SOAP connections (specifically for AXL) and CRUD operations for common API endpoints.\n\n\nOverview\n========\n\n* Simplified Pythonic wrappings of Cisco UC SOAP APIs\n* :code:`python-zeep`-based client under the hood - much faster than :code:`suds`.  WSDL caching is enabled by default.\n* Complete abstraction of AXL SOAP API - no xml!\n* Native Python tooling includes:\n    * Native returned AXL data objects modelled with a :code:`dict`-like interface and characteristics\n    * xml order is honoured due to :code:`OrderedDict` implementation\n    * AXL crud operations supported using both Python objects and native AXL calling requirements\n* Transparent sourcing of AXL credentials from local environment variables\n* Easy, template-able reading and writing to JSON objects, making Cisco UC DevOps implementations a reality\n\n\nInstallation\n============\n\n::\n\n    pip install ciscocucmapi\n\nYou can also install the in-development version with::\n\n    pip install https://github.com/jonathanelscpt/ciscocucmapi/archive/master.zip\n\n\nDocumentation\n=============\n\nhttps://ciscocucmapi.readthedocs.io/\n\n\nQuick Start\n===========\n\n.. code-block:: python\n\n    from ciscocucmapi import UCMAXLConnector\n    import json\n\n\n    axl = UCMAXLConnector()  # env vars for connection params\n\n    # adding phones\n    ipphone_attributes = {\n        \"name\": \"SEPDEADDEADDEAD\",\n        \"product\": \"Cisco 8821\",\n        \"devicePoolName\": \"US_NYC_DP\",\n    }\n    axl.phone.add(**ipphone_attributes)\n\n    # api endpoints can be created prior to invoking axl method-calling for pre-processing\n    new_bot_device = axl.phone.create()\n    # very useful API template development!\n    with open(\"/path/to/templates/phone.json\", \"w\") as _:\n        json.dump(axl.phone.model(), _, indent=4)\n\n    # getting existing phones with null-string dicts or lists of `returnedTags`\n    dead_device = axl.phone.get(name=\"SEPDEADDEADDEAD\",\n                                returnedTags={\"name\": \"\", \"devicePoolName\": \"\",\n                                              \"callingSearchSpaceName\": \"\"})\n    beefy_device = axl.phone.get(name=\"SEPBEEFBEEFBEEF\",\n                                 returnedTags=[\"name\", \"devicePoolName\", \"callingSearchSpaceName\"])\n\n    # listing phones by name\n    nyc_bot_attrs = {\n        \"name\": \"BOT%\",\n        \"devicePoolName\": \"US_NYC%\",\n        \"callingSearchSpaceName\": \"US_%\"\n    }\n    nyc_bot_devices = axl.phone.list(searchCriteria=nyc_bot_attrs,\n                                     returnedTags=[\"name\", \"description\", \"lines\"])\n    # implicit \"return all\" available for `searchCriteria` and `returnedTags`\n    # use sparingly for large data sets!\n    all_devices = axl.phone.list()\n\n    # property-like getters and setters\n    botuser15 = next(filter(lambda person: person.name == 'BOTUSER015', nyc_bot_devices))\n    botuser15.callingSearchSpaceName = \"US_NYC_NATIONAL_CSS\"\n\n    # updating a phone\n    botuser15.callingSearchSpaceName = \"US_NYC_INTERNATIONAL_CSS\"\n    botuser15.newName = \"BOTJONELS\"\n    botuser15.locationName = \"Hub_None\"\n    axl.phone.update(name=botuser15.name,\n                     newName=botuser15.newName,\n                     callingSearchSpaceName=botuser15.callingSearchSpaceName,\n                     locationName=botuser15.locationName)\n\n    # deleting a phone\n    axl.phone.remove(uuid=botuser15.uuid)\n\n    # Thin AXL sql querying and execution also available\n    numplan = axl.sql.query(\"SELECT * FROM numplan\")\n    directory_numbers = [row['dnorpattern'] for row in numplan]\n    numplan.csv(destination_path=\"/path/to/datadump/numplan.csv\")  # pathlib also supported\n\n\n\n\nConnector Environment Variables\n===============================\n\n The following env vars are supported for ease of use:\n\n - :code:`AXL_USERNAME`\n - :code:`AXL_PASSWORD`\n - :code:`AXL_WSDL_URL`\n - :code:`AXL_FQDN`\n\n\nAXL WSDL\n========\n\nThe package includes the AXL wsdl for ease of use.  The schema will be updated regularly to match the latest CUCM\nreleases.  By default, unless an AXL version is specified, the :code:`current` WSDL will be used.\n\nDue to the strictness of :code:`python-zeep`'s WSDL and .xsd parsing, numerous AXL defects have been encountered during\ndevelopment and testing.  As a result, the packaged WSDL and .xsd files *may* include patches to mitigate defects\nwhere applicable.  Known AXL defects which have resulted in patches are catalogued in\nAXL_DEFECTS.rst.\n\nIf you require a more up-to-date WSDL, or are uncomfortable with using a patched schema, all :code:`UCSOAPConnector`\naccept a direct path to a local WSDL file as input.\n\n\nAPI Endpoint Support\n====================\n\nNot all API Endpoints are supported, as API and data models are required to mitigate inconsistencies in the\nAXL API.  If you'd like to extend API support, please create a pull request, or raise a GitHub issue and I'll add\nan enhancement.\n\nI am not currently back-testing all version support, and do not intend to test against pre-9 UCM versions.  The package\nhas been developed primarily against UCM 11.5.  If any API definitions interfere with the backwards compatibility of\nAXL for prior versions, please raise a GitHub issue and I will address this.\n\n\nSupported Languages and AXL Versions\n====================================\n\n- Currently only Python 3.6+ is supported.   There are no plans to support Python 2.7.\n- All AXL versions *should* be supported, however only 11.5 has been currently tested.  All AXL data models include\n  static metadata on mandatory params for :code:`add` calls.  It  is not expected that these should change across AXL\n  schema versions.  Please raise a defect if you encounter any issues.\n- Other API methods should contain reliable schema-driven metadata and attributes.\n\n\nDevelopment\n===========\n\nTo run the all tests run::\n\n    tox\n\nNote, to combine the coverage data from all the tox environments run:\n\n.. list-table::\n    :widths: 10 90\n    :stub-columns: 1\n\n    - - Windows\n      - ::\n\n            set PYTEST_ADDOPTS=--cov-append\n            tox\n\n    - - Other\n      - ::\n\n            PYTEST_ADDOPTS=--cov-append tox\n\n\nDonate\n======\n\nIf this library has helped you, or if you would like to support future development, donations are most welcome:\n\n==============  ==========================================\nCryptocurrency  Address\n==============  ==========================================\n **BTC**        38c7QWggrB2HLUJZFmhAC2zh4t8C57c1ec\n **ETH**        0x01eD3b58a07c6d005281Db76e6c1AE2bfF2226AD\n==============  ==========================================\n\n\nSupport\n=======\n\nI'm open to discussing ad-hoc commercial support or custom DevOps implementations. Please contact me at\njonathanelscpt@gmail.com for more information. Note that asking questions or reporting bugs via this e-mail address\nmay not receive responses. Please rather create GitHub issues for this.\n\n\nChangelog\n=========\n\n0.0.0 (2019-12-30)\n------------------\n\n* First alpha release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonathanelscpt/ciscocucmapi", "keywords": "cisco,cucm,uc,collaboration,callmanager,axl", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ciscocucmapi", "package_url": "https://pypi.org/project/ciscocucmapi/", "platform": "", "project_url": "https://pypi.org/project/ciscocucmapi/", "project_urls": {"Changelog": "https://ciscocucmapi.readthedocs.io/en/latest/changelog.html", "Documentation": "https://ciscocucmapi.readthedocs.io/", "Homepage": "https://github.com/jonathanelscpt/ciscocucmapi", "Issue Tracker": "https://github.com/jonathanelscpt/ciscocucmapi/issues"}, "release_url": "https://pypi.org/project/ciscocucmapi/0.0.2/", "requires_dist": ["requests (>=2.18.4)", "zeep (>=2.5.0)", "docutils (>=0.11) ; extra == 'rst'"], "requires_python": ">=3.6", "summary": "Python Wrappers for Cisco CUCM SOAP APIs", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python Wrappers for Cisco CUCM SOAP APIs</p>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<p>The ciscocucmapi package is inspired by the most excellent <a href=\"https://github.com/CiscoDevNet/webexteamssdk\" rel=\"nofollow\">webexteamssdk</a>\nPython API wrapper for Cisco Spark.  The library wraps a <a href=\"https://github.com/mvantellingen/python-zeep\" rel=\"nofollow\">python-zeep</a>\nclient to manage CUCM SOAP connections (specifically for AXL) and CRUD operations for common API endpoints.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<ul>\n<li>Simplified Pythonic wrappings of Cisco UC SOAP APIs</li>\n<li><code>python-zeep</code>-based client under the hood - much faster than <code>suds</code>.  WSDL caching is enabled by default.</li>\n<li>Complete abstraction of AXL SOAP API - no xml!</li>\n<li><dl>\n<dt>Native Python tooling includes:</dt>\n<dd><ul>\n<li>Native returned AXL data objects modelled with a <code>dict</code>-like interface and characteristics</li>\n<li>xml order is honoured due to <code>OrderedDict</code> implementation</li>\n<li>AXL crud operations supported using both Python objects and native AXL calling requirements</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Transparent sourcing of AXL credentials from local environment variables</li>\n<li>Easy, template-able reading and writing to JSON objects, making Cisco UC DevOps implementations a reality</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install ciscocucmapi\n</pre>\n<p>You can also install the in-development version with:</p>\n<pre>pip install https://github.com/jonathanelscpt/ciscocucmapi/archive/master.zip\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"https://ciscocucmapi.readthedocs.io/\" rel=\"nofollow\">https://ciscocucmapi.readthedocs.io/</a></p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ciscocucmapi</span> <span class=\"kn\">import</span> <span class=\"n\">UCMAXLConnector</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n\n<span class=\"n\">axl</span> <span class=\"o\">=</span> <span class=\"n\">UCMAXLConnector</span><span class=\"p\">()</span>  <span class=\"c1\"># env vars for connection params</span>\n\n<span class=\"c1\"># adding phones</span>\n<span class=\"n\">ipphone_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SEPDEADDEADDEAD\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"product\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Cisco 8821\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"devicePoolName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"US_NYC_DP\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">ipphone_attributes</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># api endpoints can be created prior to invoking axl method-calling for pre-processing</span>\n<span class=\"n\">new_bot_device</span> <span class=\"o\">=</span> <span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n<span class=\"c1\"># very useful API template development!</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/templates/phone.json\"</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">_</span><span class=\"p\">:</span>\n    <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(),</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># getting existing phones with null-string dicts or lists of `returnedTags`</span>\n<span class=\"n\">dead_device</span> <span class=\"o\">=</span> <span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"SEPDEADDEADDEAD\"</span><span class=\"p\">,</span>\n                            <span class=\"n\">returnedTags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"devicePoolName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n                                          <span class=\"s2\">\"callingSearchSpaceName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">})</span>\n<span class=\"n\">beefy_device</span> <span class=\"o\">=</span> <span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"SEPBEEFBEEFBEEF\"</span><span class=\"p\">,</span>\n                             <span class=\"n\">returnedTags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"devicePoolName\"</span><span class=\"p\">,</span> <span class=\"s2\">\"callingSearchSpaceName\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># listing phones by name</span>\n<span class=\"n\">nyc_bot_attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"BOT%\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"devicePoolName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"US_NYC%\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"callingSearchSpaceName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"US_%\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">nyc_bot_devices</span> <span class=\"o\">=</span> <span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">searchCriteria</span><span class=\"o\">=</span><span class=\"n\">nyc_bot_attrs</span><span class=\"p\">,</span>\n                                 <span class=\"n\">returnedTags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"description\"</span><span class=\"p\">,</span> <span class=\"s2\">\"lines\"</span><span class=\"p\">])</span>\n<span class=\"c1\"># implicit \"return all\" available for `searchCriteria` and `returnedTags`</span>\n<span class=\"c1\"># use sparingly for large data sets!</span>\n<span class=\"n\">all_devices</span> <span class=\"o\">=</span> <span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># property-like getters and setters</span>\n<span class=\"n\">botuser15</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">person</span><span class=\"p\">:</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">'BOTUSER015'</span><span class=\"p\">,</span> <span class=\"n\">nyc_bot_devices</span><span class=\"p\">))</span>\n<span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">callingSearchSpaceName</span> <span class=\"o\">=</span> <span class=\"s2\">\"US_NYC_NATIONAL_CSS\"</span>\n\n<span class=\"c1\"># updating a phone</span>\n<span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">callingSearchSpaceName</span> <span class=\"o\">=</span> <span class=\"s2\">\"US_NYC_INTERNATIONAL_CSS\"</span>\n<span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">newName</span> <span class=\"o\">=</span> <span class=\"s2\">\"BOTJONELS\"</span>\n<span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">locationName</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hub_None\"</span>\n<span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                 <span class=\"n\">newName</span><span class=\"o\">=</span><span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">newName</span><span class=\"p\">,</span>\n                 <span class=\"n\">callingSearchSpaceName</span><span class=\"o\">=</span><span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">callingSearchSpaceName</span><span class=\"p\">,</span>\n                 <span class=\"n\">locationName</span><span class=\"o\">=</span><span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">locationName</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># deleting a phone</span>\n<span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">=</span><span class=\"n\">botuser15</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Thin AXL sql querying and execution also available</span>\n<span class=\"n\">numplan</span> <span class=\"o\">=</span> <span class=\"n\">axl</span><span class=\"o\">.</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"SELECT * FROM numplan\"</span><span class=\"p\">)</span>\n<span class=\"n\">directory_numbers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"s1\">'dnorpattern'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">numplan</span><span class=\"p\">]</span>\n<span class=\"n\">numplan</span><span class=\"o\">.</span><span class=\"n\">csv</span><span class=\"p\">(</span><span class=\"n\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"/path/to/datadump/numplan.csv\"</span><span class=\"p\">)</span>  <span class=\"c1\"># pathlib also supported</span>\n</pre>\n</div>\n<div id=\"connector-environment-variables\">\n<h2>Connector Environment Variables</h2>\n<blockquote>\n<p>The following env vars are supported for ease of use:</p>\n<ul>\n<li><code>AXL_USERNAME</code></li>\n<li><code>AXL_PASSWORD</code></li>\n<li><code>AXL_WSDL_URL</code></li>\n<li><code>AXL_FQDN</code></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"axl-wsdl\">\n<h2>AXL WSDL</h2>\n<p>The package includes the AXL wsdl for ease of use.  The schema will be updated regularly to match the latest CUCM\nreleases.  By default, unless an AXL version is specified, the <code>current</code> WSDL will be used.</p>\n<p>Due to the strictness of <code>python-zeep</code>\u2019s WSDL and .xsd parsing, numerous AXL defects have been encountered during\ndevelopment and testing.  As a result, the packaged WSDL and .xsd files <em>may</em> include patches to mitigate defects\nwhere applicable.  Known AXL defects which have resulted in patches are catalogued in\nAXL_DEFECTS.rst.</p>\n<p>If you require a more up-to-date WSDL, or are uncomfortable with using a patched schema, all <code>UCSOAPConnector</code>\naccept a direct path to a local WSDL file as input.</p>\n</div>\n<div id=\"api-endpoint-support\">\n<h2>API Endpoint Support</h2>\n<p>Not all API Endpoints are supported, as API and data models are required to mitigate inconsistencies in the\nAXL API.  If you\u2019d like to extend API support, please create a pull request, or raise a GitHub issue and I\u2019ll add\nan enhancement.</p>\n<p>I am not currently back-testing all version support, and do not intend to test against pre-9 UCM versions.  The package\nhas been developed primarily against UCM 11.5.  If any API definitions interfere with the backwards compatibility of\nAXL for prior versions, please raise a GitHub issue and I will address this.</p>\n</div>\n<div id=\"supported-languages-and-axl-versions\">\n<h2>Supported Languages and AXL Versions</h2>\n<ul>\n<li>Currently only Python 3.6+ is supported.   There are no plans to support Python 2.7.</li>\n<li>All AXL versions <em>should</em> be supported, however only 11.5 has been currently tested.  All AXL data models include\nstatic metadata on mandatory params for <code>add</code> calls.  It  is not expected that these should change across AXL\nschema versions.  Please raise a defect if you encounter any issues.</li>\n<li>Other API methods should contain reliable schema-driven metadata and attributes.</li>\n</ul>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To run the all tests run:</p>\n<pre>tox\n</pre>\n<p>Note, to combine the coverage data from all the tox environments run:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><th>Windows</th>\n<td><pre>\nset PYTEST_ADDOPTS=--cov-append\ntox\n</pre>\n</td>\n</tr>\n<tr><th>Other</th>\n<td><pre>\nPYTEST_ADDOPTS=--cov-append tox\n</pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"donate\">\n<h2>Donate</h2>\n<p>If this library has helped you, or if you would like to support future development, donations are most welcome:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Cryptocurrency</th>\n<th>Address</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><strong>BTC</strong></td>\n<td>38c7QWggrB2HLUJZFmhAC2zh4t8C57c1ec</td>\n</tr>\n<tr><td><strong>ETH</strong></td>\n<td>0x01eD3b58a07c6d005281Db76e6c1AE2bfF2226AD</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>I\u2019m open to discussing ad-hoc commercial support or custom DevOps implementations. Please contact me at\n<a href=\"mailto:jonathanelscpt%40gmail.com\">jonathanelscpt<span>@</span>gmail<span>.</span>com</a> for more information. Note that asking questions or reporting bugs via this e-mail address\nmay not receive responses. Please rather create GitHub issues for this.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.0.0 (2019-12-30)</span></h2>\n<ul>\n<li>First alpha release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6378803, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b3d8c840452d4e5c6299f6f4716a2124", "sha256": "5c1b290d7b8a0239e252ae7881339b1ac80a477a6d248368d62b6a0927d9644e"}, "downloads": -1, "filename": "ciscocucmapi-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3d8c840452d4e5c6299f6f4716a2124", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 34621, "upload_time": "2019-12-30T22:43:34", "upload_time_iso_8601": "2019-12-30T22:43:34.335376Z", "url": "https://files.pythonhosted.org/packages/2e/e1/185f303e2a77807df5a2145430e4ad08ae890e9ba2529fc29024ef602e98/ciscocucmapi-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9f7e3376c417c35a209d62a292f7ee7", "sha256": "c459ea4e417217a45e786eeda5ac241b8fac8f965a7fff2ebaa08fccc9e2e71e"}, "downloads": -1, "filename": "ciscocucmapi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d9f7e3376c417c35a209d62a292f7ee7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1654459, "upload_time": "2019-12-30T22:43:38", "upload_time_iso_8601": "2019-12-30T22:43:38.415106Z", "url": "https://files.pythonhosted.org/packages/cd/7a/19584284b3874dd5767b9718db4beb6f582ad43dd7b33a93f7dfb98cc12e/ciscocucmapi-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6c3a8ebe994c16f02f0487b5884eaf6f", "sha256": "27a1e379b21cd07e6759f8d1227af921fe1b7cf57593399ee1e421ece0879064"}, "downloads": -1, "filename": "ciscocucmapi-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c3a8ebe994c16f02f0487b5884eaf6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 34624, "upload_time": "2019-12-31T09:20:57", "upload_time_iso_8601": "2019-12-31T09:20:57.529430Z", "url": "https://files.pythonhosted.org/packages/df/b1/6c7aa02c1d92a5ab7fe3bd96576718eddc4efc030378c92202cad57b8b2b/ciscocucmapi-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa97f4c0bd801e78b6ca90abd3663f09", "sha256": "03f1ff684dc98cc4dbda660f8a7324b52d6c5525cf0fb105f46b90cd7ee66653"}, "downloads": -1, "filename": "ciscocucmapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fa97f4c0bd801e78b6ca90abd3663f09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1658088, "upload_time": "2019-12-31T09:21:00", "upload_time_iso_8601": "2019-12-31T09:21:00.428567Z", "url": "https://files.pythonhosted.org/packages/e3/ed/99cec19bc772a52ae8adc1254fb5971c2b980016c90003e78976a853eb1f/ciscocucmapi-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6c3a8ebe994c16f02f0487b5884eaf6f", "sha256": "27a1e379b21cd07e6759f8d1227af921fe1b7cf57593399ee1e421ece0879064"}, "downloads": -1, "filename": "ciscocucmapi-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c3a8ebe994c16f02f0487b5884eaf6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 34624, "upload_time": "2019-12-31T09:20:57", "upload_time_iso_8601": "2019-12-31T09:20:57.529430Z", "url": "https://files.pythonhosted.org/packages/df/b1/6c7aa02c1d92a5ab7fe3bd96576718eddc4efc030378c92202cad57b8b2b/ciscocucmapi-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa97f4c0bd801e78b6ca90abd3663f09", "sha256": "03f1ff684dc98cc4dbda660f8a7324b52d6c5525cf0fb105f46b90cd7ee66653"}, "downloads": -1, "filename": "ciscocucmapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fa97f4c0bd801e78b6ca90abd3663f09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1658088, "upload_time": "2019-12-31T09:21:00", "upload_time_iso_8601": "2019-12-31T09:21:00.428567Z", "url": "https://files.pythonhosted.org/packages/e3/ed/99cec19bc772a52ae8adc1254fb5971c2b980016c90003e78976a853eb1f/ciscocucmapi-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:18 2020"}