{"info": {"author": "Mozilla (https://mozilla.org/)", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Mozilla Public License 1.0 (MPL)", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP"], "description": "msisdn-cli\n==========\n\nThis little CLI tool let you validate both MT and MOMT flow using\nMSISDN server.\n\nTo start a MT Flow::\n\n    msisdn-cli -H https://msisdn.services.mozilla.com \\\n        -c 310 -n +1xxxxxxxxxxx\n\nTo start a MOMT Flow::\n\n    msisdn-cli -H https://msisdn.services.mozilla.com -c 310\n\nYou can also create a certificate to then try to register on a Service\nProvider such as Loop.\n\nTo do so add an --audience parameter and a --login-endpoint you can\nalso provide some --data or --json to be POST with your registration\nrequest::\n\n    msisdn-cli -H https://msisdn.services.mozilla.com -c 310 -n +1xxxxxxxxxxx \\\n               --audience https://loop.services.mozilla.com\n               --login-endpoint https://loop.services.mozilla.com/registration\n               --json '{\"simplePushURL\": \"http://httpbin.org/deny\"}'\n\nIf you want you can just display the cURL command using --dry-run::\n\n    msisdn-cli -H https://msisdn.services.mozilla.com -c 310 -n +1xxxxxxxxxxx \\\n               --audience https://loop.services.mozilla.com\n               --login-endpoint https://loop.services.mozilla.com/registration\n               --json '{\"simplePushURL\": \"http://httpbin.org/deny\"}' --dry-run\n\nThe msisdn-cli script will then build you an assertion and write\ndown a curl command to run to make sure it works.\n\nYou can also use the -v, --verbose command to display the assertion.\n\nYou should get a 200 OK status code with a Hawk-Session-Token header.\n\nIf not, here are the error messages you can get:\n\n- \"Certificate expired\": you play too long with this curl command,\n                         ask for a new certificate\n\n- \"Invalid audience\":    The Service Provider doesn't accept this audience\n                         It can be either a misconfiguration on the server or\n                         you trying the assertion to a wrong server.\n\n- \"Issuer not trusted\":  The MSISDN server that generate your certificate\n                         is not trusted on this Service Provider.\n                         It can be either a misconfiguration or\n                         you trying the assertion to a wrong server.\n\n- Something else? Please make a PR to add it here.\n\nDon't forget to use :code:`msisdn-cli -h` to get more help.\n\n\nINSTALL\n-------\n\n::\n\n    make install\n    source .venv/bin/activate", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mozilla-services/msisdn-cli", "keywords": "msisdn sms browserid", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "msisdn-cli", "package_url": "https://pypi.org/project/msisdn-cli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/msisdn-cli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mozilla-services/msisdn-cli"}, "release_url": "https://pypi.org/project/msisdn-cli/1.0/", "requires_dist": null, "requires_python": null, "summary": "MSISDN Gateway CLI tool.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This little CLI tool let you validate both MT and MOMT flow using\nMSISDN server.</p>\n<p>To start a MT Flow:</p>\n<pre>msisdn-cli -H https://msisdn.services.mozilla.com \\\n    -c 310 -n +1xxxxxxxxxxx\n</pre>\n<p>To start a MOMT Flow:</p>\n<pre>msisdn-cli -H https://msisdn.services.mozilla.com -c 310\n</pre>\n<p>You can also create a certificate to then try to register on a Service\nProvider such as Loop.</p>\n<p>To do so add an \u2013audience parameter and a \u2013login-endpoint you can\nalso provide some \u2013data or \u2013json to be POST with your registration\nrequest:</p>\n<pre>msisdn-cli -H https://msisdn.services.mozilla.com -c 310 -n +1xxxxxxxxxxx \\\n           --audience https://loop.services.mozilla.com\n           --login-endpoint https://loop.services.mozilla.com/registration\n           --json '{\"simplePushURL\": \"http://httpbin.org/deny\"}'\n</pre>\n<p>If you want you can just display the cURL command using \u2013dry-run:</p>\n<pre>msisdn-cli -H https://msisdn.services.mozilla.com -c 310 -n +1xxxxxxxxxxx \\\n           --audience https://loop.services.mozilla.com\n           --login-endpoint https://loop.services.mozilla.com/registration\n           --json '{\"simplePushURL\": \"http://httpbin.org/deny\"}' --dry-run\n</pre>\n<p>The msisdn-cli script will then build you an assertion and write\ndown a curl command to run to make sure it works.</p>\n<p>You can also use the -v, \u2013verbose command to display the assertion.</p>\n<p>You should get a 200 OK status code with a Hawk-Session-Token header.</p>\n<p>If not, here are the error messages you can get:</p>\n<ul>\n<li><dl>\n<dt>\u201cCertificate expired\u201d: you play too long with this curl command,</dt>\n<dd>ask for a new certificate</dd>\n</dl>\n</li>\n<li><dl>\n<dt>\u201cInvalid audience\u201d:    The Service Provider doesn\u2019t accept this audience</dt>\n<dd>It can be either a misconfiguration on the server or\nyou trying the assertion to a wrong server.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>\u201cIssuer not trusted\u201d:  The MSISDN server that generate your certificate</dt>\n<dd>is not trusted on this Service Provider.\nIt can be either a misconfiguration or\nyou trying the assertion to a wrong server.</dd>\n</dl>\n</li>\n<li>Something else? Please make a PR to add it here.</li>\n</ul>\n<p>Don\u2019t forget to use <code>msisdn-cli -h</code> to get more help.</p>\n<div id=\"install\">\n<h2>INSTALL</h2>\n<pre>make install\nsource .venv/bin/activate\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1552762, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8e0f257a32d506eef56417a9f36010c0", "sha256": "e2d7bc9c12e2cbf8f97fadd934f974eef6d442103fe70b07f3cd0bf811f43715"}, "downloads": -1, "filename": "msisdn-cli-1.0.tar.gz", "has_sig": false, "md5_digest": "8e0f257a32d506eef56417a9f36010c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5712, "upload_time": "2015-02-03T10:46:34", "upload_time_iso_8601": "2015-02-03T10:46:34.331395Z", "url": "https://files.pythonhosted.org/packages/97/37/3923daa6cba250914a1792a9a8ac343fc9f1bbec1717f849e31122713b38/msisdn-cli-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8e0f257a32d506eef56417a9f36010c0", "sha256": "e2d7bc9c12e2cbf8f97fadd934f974eef6d442103fe70b07f3cd0bf811f43715"}, "downloads": -1, "filename": "msisdn-cli-1.0.tar.gz", "has_sig": false, "md5_digest": "8e0f257a32d506eef56417a9f36010c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5712, "upload_time": "2015-02-03T10:46:34", "upload_time_iso_8601": "2015-02-03T10:46:34.331395Z", "url": "https://files.pythonhosted.org/packages/97/37/3923daa6cba250914a1792a9a8ac343fc9f1bbec1717f849e31122713b38/msisdn-cli-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:50 2020"}