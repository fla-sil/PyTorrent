{"info": {"author": "Nicolai S\u00f8borg", "author_email": "elf2deb@xn--sb-lka.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools", "Topic :: System :: Archiving :: Packaging", "Topic :: System :: Installation/Setup"], "description": "# ELF*2*deb\n<img align=\"right\" src=\"https://raw.githubusercontent.com/NicolaiSoeborg/ELF2deb/master/.github/logo-small.png\" alt=\"logo\" />\n\nConvert any single (or multiple) executable file(s) to deb-package.\n\nI.e. this is a script to convert *AppImage|ELF|executable script* to `.deb`.\n\nThe script will place the binary file(s) in `/usr/bin/`.\n\n## Setup\n\nYou want to set `DEBEMAIL` and `DEBFULLNAME` for the *deb tools* to work properly:\n\n```bash\n$ cat >>~/.bashrc <<EOF\nDEBEMAIL=\"email@example.org\"\nDEBFULLNAME=\"John Doe\"\nexport DEBEMAIL DEBFULLNAME\nEOF\n$ . ~/.bashrc\n```\n\nThen it's as simple as downloading `elf2deb.pyz` from [releases](https://github.com/NicolaiSoeborg/ELF2deb/releases) **or** download it from PyPi: `pip3 install elf2deb` and `elf2deb --help`.\n\n## Example\n\nIn this example I'm first downloading the [skaffold](https://skaffold.dev/) binary and packing it as a `.deb` file:\n\n```bash\n# Download ./skaffold binary to empty folder:\n$ curl -Lo ./skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64\n\n# Run the tool:\n$ ./elf2deb.pyz --license apache-2.0 --license_year 2018 --license_holder \"The Skaffold Authors\" \\\n> --package_name skaffold --package_version 0.28.0 --homepage \"https://skaffold.dev/\" ./skaffold\n\n# Fix description and use debuild:\n$ cd skaffold-0.28.0/\n$ vim debian/control  # add description\n$ debuild -us -uc\n[... lots of debuild output ...]\n$ cd ../\n\n# Finally the .deb file is ready to be uploaded, or installed:\n$ sudo dpkg -i skaffold_0.28.0_amd64.deb\n```\n\n## Arguments\n\n```\nusage: elf2deb [-h] [--version]\n               --package_name PACKAGE_NAME\n               --package_version PACKAGE_VERSION\n               [--homepage HOMEPAGE]\n               [--dependencies DEPENDENCIES]\n               [--license {MIT,LGPL-3.0,MPL-2.0,AGPL-3.0,unlicense,apache-2.0,GPL-3.0} | --license_file LICENSE_FILE]\n               [--license_year LICENSE_YEAR]\n               [--license_holder LICENSE_HOLDER]\n               binary_files [binary_files ...]\n\npositional arguments:\n  binary_files          The binaries you want to package.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n\npackage info:\n  --package_name PACKAGE_NAME\n                        The name of the deb package\n  --package_version PACKAGE_VERSION\n                        The version of the package\n  --homepage HOMEPAGE   The webpage of the package\n  --dependencies DEPENDENCIES\n                        Dependencies specified in the deb package\n\nlicense info:\n  --license {MIT,LGPL-3.0,MPL-2.0,AGPL-3.0,unlicense,apache-2.0,GPL-3.0}\n                        Select a standard license.\n  --license_file LICENSE_FILE\n                        ... or use a LICENSE text file.\n  --license_year LICENSE_YEAR\n                        If using a standard license: year\n  --license_holder LICENSE_HOLDER\n                        If using a standard license: owner\n```\n\n## Common warnings\n\nIf you are running Ubuntu, you might get `E: bad-distribution-in-changes-file unstable`.\nIn this case edit `debian/changelog` and change `unstable` to your distributions codename (find it by running `lsb_release -c`).\nThen run `debuild -us -uc` from source directory, to recompile the `.deb`.\n\nIf you are missing the `dch`-tool, then run: `sudo apt install --no-install-recommends devscripts libdistro-info-perl`.\n\nYou can safely ignore the following warnings from lintian:\n\n * `source-is-missing`\n\n * `binary-without-manpage`\n\n(you will probably get a longer list of errors and warnings, no worries)\n\n## Packaging for other/more formats\n\nIf you want to distribute your software in more formats -- or your source isn't a list of binaries -- then consider using a tool like \"[**E**ffing **p**ackage **m**anagement](https://github.com/jordansissel/fpm)\". FPM is a much more mature tool that allows for advanced packaging.\n\nThe advantages of ELF*2*deb is;\n\n * can be installed using `pip install elf2deb` or used a as a standalone executable `./elf2deb.pyz`\n\n * simple, small size (< 10 kB), and few dependencies:\n   - `>= python3.5` (+ `requests` if need to download a license file).\n   - `debhelper` and `devscripts` (`apt install --no-install-recommends debhelper devscripts`).\n\n## More examples (interactive!)\n\nIn version 1.2.0 a interactive menu was added to ELF*2*deb:\n\n```bash\n$ git clone https://github.com/NicolaiSoeborg/ELF2deb.git && cd ELF2deb/\n$ make  # to make 'elf2deb.pyz' (or use pip to install globally, or carry/copy elf2deb.pyz around)\n$ ./elf2deb.pyz elf2deb.pyz  # package 'elf2deb.pyz' using elf2deb (very meta!)\nPackage info:\nauthor_mail: git@xn--sb-lka.org\nauthor_name: Nicolai S\u00f8borg\nbinary_files: ['elf2deb.pyz']\ndependencies: \nhomepage: None\nlicense: None\nlicense_file: <_io.TextIOWrapper name='/.../ELF2deb/LICENSE' mode='r' encoding='UTF-8'>\nlicense_holder: None\nlicense_year: None\npackage_name: ELF2deb\npackage_version: 0.0.1\n==> Does this look correct? (y/n/q): n\n\nProperties:\n[1] author_mail\n[2] author_name\n[3] binary_files\n[4] dependencies\n[5] homepage\n[6] license\n[7] license_file\n[8] license_holder\n[9] license_year\n[10] package_name\n[11] package_version\n==> Which property to change? (1..11): 4\n==> Which value should dependencies be changed to? python3, python3-requests\n\nPackage info:\nauthor_mail: git@xn--sb-lka.org\nauthor_name: Nicolai S\u00f8borg\nbinary_files: ['elf2deb.pyz']\ndependencies: python3, python3-requests\nhomepage: None\nlicense: None\nlicense_file: <_io.TextIOWrapper name='/home/nsq/pakker/test/ELF2deb/LICENSE' mode='r' encoding='UTF-8'>\nlicense_holder: None\nlicense_year: None\npackage_name: ELF2deb\npackage_version: 0.0.1\n==> Does this look correct? (y/n/q): n\n[...]\n==> Which value should package_version be changed to? 1.2.0\n[...]\n==> Does this look correct? (y/n/q): y\nCopying templates... done!\nCopying files... done!\nRun:\n * cd elf2deb-1.2.0\n * vim debian/control  # change description, dont add empty lines\n * debuild -us -uc  # remove -us -uc if you want to sign the deb file\n\n$ cd elf2deb-1.2.0\n$ vim debian/control\n$ debuild -us -uc\n[...]\ndpkg-deb: building package 'elf2deb' in '../elf2deb_1.2.0_amd64.deb'.\n\n$ dpkg-deb --info ../elf2deb_1.2.0_amd64.deb\n new Debian package, version 2.0.\n size 5100 bytes: control archive=624 bytes.\n     383 bytes,    12 lines      control\n     189 bytes,     3 lines      md5sums\n Package: elf2deb\n Version: 1.2.0\n Architecture: amd64\n Maintainer: Nicolai S\u00f8borg <git@xn--sb-lka.org>\n Installed-Size: 20\n Depends: python3, python3-requests\n Section: misc\n Priority: optional\n Multi-Arch: foreign\n Description: tool to easily package any binary to a deb file\n  ELF2deb makes it easy to package simple binaries to a deb file\n  to help deploy files across debian environments.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NicolaiSoeborg/ELF2deb/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ELF2deb", "package_url": "https://pypi.org/project/ELF2deb/", "platform": "", "project_url": "https://pypi.org/project/ELF2deb/", "project_urls": {"Homepage": "https://github.com/NicolaiSoeborg/ELF2deb/"}, "release_url": "https://pypi.org/project/ELF2deb/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "Convert any single (or multiple) executable file(s) to .deb package", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ELF<em>2</em>deb</h1>\n<img align=\"right\" alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de10765a9d7c2d96b2dfd426091f4313a7ee5d10/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4e69636f6c6169536f65626f72672f454c46326465622f6d61737465722f2e6769746875622f6c6f676f2d736d616c6c2e706e67\">\n<p>Convert any single (or multiple) executable file(s) to deb-package.</p>\n<p>I.e. this is a script to convert <em>AppImage|ELF|executable script</em> to <code>.deb</code>.</p>\n<p>The script will place the binary file(s) in <code>/usr/bin/</code>.</p>\n<h2>Setup</h2>\n<p>You want to set <code>DEBEMAIL</code> and <code>DEBFULLNAME</code> for the <em>deb tools</em> to work properly:</p>\n<pre>$ cat &gt;&gt;~/.bashrc <span class=\"s\">&lt;&lt;EOF</span>\n<span class=\"s\">DEBEMAIL=\"email@example.org\"</span>\n<span class=\"s\">DEBFULLNAME=\"John Doe\"</span>\n<span class=\"s\">export DEBEMAIL DEBFULLNAME</span>\n<span class=\"s\">EOF</span>\n$ . ~/.bashrc\n</pre>\n<p>Then it's as simple as downloading <code>elf2deb.pyz</code> from <a href=\"https://github.com/NicolaiSoeborg/ELF2deb/releases\" rel=\"nofollow\">releases</a> <strong>or</strong> download it from PyPi: <code>pip3 install elf2deb</code> and <code>elf2deb --help</code>.</p>\n<h2>Example</h2>\n<p>In this example I'm first downloading the <a href=\"https://skaffold.dev/\" rel=\"nofollow\">skaffold</a> binary and packing it as a <code>.deb</code> file:</p>\n<pre><span class=\"c1\"># Download ./skaffold binary to empty folder:</span>\n$ curl -Lo ./skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64\n\n<span class=\"c1\"># Run the tool:</span>\n$ ./elf2deb.pyz --license apache-2.0 --license_year <span class=\"m\">2018</span> --license_holder <span class=\"s2\">\"The Skaffold Authors\"</span> <span class=\"se\">\\</span>\n&gt; --package_name skaffold --package_version <span class=\"m\">0</span>.28.0 --homepage <span class=\"s2\">\"https://skaffold.dev/\"</span> ./skaffold\n\n<span class=\"c1\"># Fix description and use debuild:</span>\n$ <span class=\"nb\">cd</span> skaffold-0.28.0/\n$ vim debian/control  <span class=\"c1\"># add description</span>\n$ debuild -us -uc\n<span class=\"o\">[</span>... lots of debuild output ...<span class=\"o\">]</span>\n$ <span class=\"nb\">cd</span> ../\n\n<span class=\"c1\"># Finally the .deb file is ready to be uploaded, or installed:</span>\n$ sudo dpkg -i skaffold_0.28.0_amd64.deb\n</pre>\n<h2>Arguments</h2>\n<pre><code>usage: elf2deb [-h] [--version]\n               --package_name PACKAGE_NAME\n               --package_version PACKAGE_VERSION\n               [--homepage HOMEPAGE]\n               [--dependencies DEPENDENCIES]\n               [--license {MIT,LGPL-3.0,MPL-2.0,AGPL-3.0,unlicense,apache-2.0,GPL-3.0} | --license_file LICENSE_FILE]\n               [--license_year LICENSE_YEAR]\n               [--license_holder LICENSE_HOLDER]\n               binary_files [binary_files ...]\n\npositional arguments:\n  binary_files          The binaries you want to package.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n\npackage info:\n  --package_name PACKAGE_NAME\n                        The name of the deb package\n  --package_version PACKAGE_VERSION\n                        The version of the package\n  --homepage HOMEPAGE   The webpage of the package\n  --dependencies DEPENDENCIES\n                        Dependencies specified in the deb package\n\nlicense info:\n  --license {MIT,LGPL-3.0,MPL-2.0,AGPL-3.0,unlicense,apache-2.0,GPL-3.0}\n                        Select a standard license.\n  --license_file LICENSE_FILE\n                        ... or use a LICENSE text file.\n  --license_year LICENSE_YEAR\n                        If using a standard license: year\n  --license_holder LICENSE_HOLDER\n                        If using a standard license: owner\n</code></pre>\n<h2>Common warnings</h2>\n<p>If you are running Ubuntu, you might get <code>E: bad-distribution-in-changes-file unstable</code>.\nIn this case edit <code>debian/changelog</code> and change <code>unstable</code> to your distributions codename (find it by running <code>lsb_release -c</code>).\nThen run <code>debuild -us -uc</code> from source directory, to recompile the <code>.deb</code>.</p>\n<p>If you are missing the <code>dch</code>-tool, then run: <code>sudo apt install --no-install-recommends devscripts libdistro-info-perl</code>.</p>\n<p>You can safely ignore the following warnings from lintian:</p>\n<ul>\n<li>\n<p><code>source-is-missing</code></p>\n</li>\n<li>\n<p><code>binary-without-manpage</code></p>\n</li>\n</ul>\n<p>(you will probably get a longer list of errors and warnings, no worries)</p>\n<h2>Packaging for other/more formats</h2>\n<p>If you want to distribute your software in more formats -- or your source isn't a list of binaries -- then consider using a tool like \"<a href=\"https://github.com/jordansissel/fpm\" rel=\"nofollow\"><strong>E</strong>ffing <strong>p</strong>ackage <strong>m</strong>anagement</a>\". FPM is a much more mature tool that allows for advanced packaging.</p>\n<p>The advantages of ELF<em>2</em>deb is;</p>\n<ul>\n<li>\n<p>can be installed using <code>pip install elf2deb</code> or used a as a standalone executable <code>./elf2deb.pyz</code></p>\n</li>\n<li>\n<p>simple, small size (&lt; 10 kB), and few dependencies:</p>\n<ul>\n<li><code>&gt;= python3.5</code> (+ <code>requests</code> if need to download a license file).</li>\n<li><code>debhelper</code> and <code>devscripts</code> (<code>apt install --no-install-recommends debhelper devscripts</code>).</li>\n</ul>\n</li>\n</ul>\n<h2>More examples (interactive!)</h2>\n<p>In version 1.2.0 a interactive menu was added to ELF<em>2</em>deb:</p>\n<pre>$ git clone https://github.com/NicolaiSoeborg/ELF2deb.git <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> ELF2deb/\n$ make  <span class=\"c1\"># to make 'elf2deb.pyz' (or use pip to install globally, or carry/copy elf2deb.pyz around)</span>\n$ ./elf2deb.pyz elf2deb.pyz  <span class=\"c1\"># package 'elf2deb.pyz' using elf2deb (very meta!)</span>\nPackage info:\nauthor_mail: git@xn--sb-lka.org\nauthor_name: Nicolai S\u00f8borg\nbinary_files: <span class=\"o\">[</span><span class=\"s1\">'elf2deb.pyz'</span><span class=\"o\">]</span>\ndependencies: \nhomepage: None\nlicense: None\nlicense_file: &lt;_io.TextIOWrapper <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s1\">'/.../ELF2deb/LICENSE'</span> <span class=\"nv\">mode</span><span class=\"o\">=</span><span class=\"s1\">'r'</span> <span class=\"nv\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'UTF-8'</span>&gt;\nlicense_holder: None\nlicense_year: None\npackage_name: ELF2deb\npackage_version: <span class=\"m\">0</span>.0.1\n<span class=\"o\">==</span>&gt; Does this look correct? <span class=\"o\">(</span>y/n/q<span class=\"o\">)</span>: n\n\nProperties:\n<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span> author_mail\n<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span> author_name\n<span class=\"o\">[</span><span class=\"m\">3</span><span class=\"o\">]</span> binary_files\n<span class=\"o\">[</span><span class=\"m\">4</span><span class=\"o\">]</span> dependencies\n<span class=\"o\">[</span><span class=\"m\">5</span><span class=\"o\">]</span> homepage\n<span class=\"o\">[</span><span class=\"m\">6</span><span class=\"o\">]</span> license\n<span class=\"o\">[</span><span class=\"m\">7</span><span class=\"o\">]</span> license_file\n<span class=\"o\">[</span><span class=\"m\">8</span><span class=\"o\">]</span> license_holder\n<span class=\"o\">[</span><span class=\"m\">9</span><span class=\"o\">]</span> license_year\n<span class=\"o\">[</span><span class=\"m\">10</span><span class=\"o\">]</span> package_name\n<span class=\"o\">[</span><span class=\"m\">11</span><span class=\"o\">]</span> <span class=\"nv\">package_version</span>\n<span class=\"o\">==</span>&gt; Which property to change? <span class=\"o\">(</span><span class=\"m\">1</span>..11<span class=\"o\">)</span>: <span class=\"nv\">4</span>\n<span class=\"o\">==</span>&gt; Which value should dependencies be changed to? python3, python3-requests\n\nPackage info:\nauthor_mail: git@xn--sb-lka.org\nauthor_name: Nicolai S\u00f8borg\nbinary_files: <span class=\"o\">[</span><span class=\"s1\">'elf2deb.pyz'</span><span class=\"o\">]</span>\ndependencies: python3, python3-requests\nhomepage: None\nlicense: None\nlicense_file: &lt;_io.TextIOWrapper <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s1\">'/home/nsq/pakker/test/ELF2deb/LICENSE'</span> <span class=\"nv\">mode</span><span class=\"o\">=</span><span class=\"s1\">'r'</span> <span class=\"nv\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'UTF-8'</span>&gt;\nlicense_holder: None\nlicense_year: None\npackage_name: ELF2deb\npackage_version: <span class=\"m\">0</span>.0.1\n<span class=\"o\">==</span>&gt; Does this look correct? <span class=\"o\">(</span>y/n/q<span class=\"o\">)</span>: n\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n<span class=\"o\">==</span>&gt; Which value should package_version be changed to? <span class=\"m\">1</span>.2.0\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n<span class=\"o\">==</span>&gt; Does this look correct? <span class=\"o\">(</span>y/n/q<span class=\"o\">)</span>: y\nCopying templates... <span class=\"k\">done</span>!\nCopying files... <span class=\"k\">done</span>!\nRun:\n * <span class=\"nb\">cd</span> elf2deb-1.2.0\n * vim debian/control  <span class=\"c1\"># change description, dont add empty lines</span>\n * debuild -us -uc  <span class=\"c1\"># remove -us -uc if you want to sign the deb file</span>\n\n$ <span class=\"nb\">cd</span> elf2deb-1.2.0\n$ vim debian/control\n$ debuild -us -uc\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\ndpkg-deb: building package <span class=\"s1\">'elf2deb'</span> in <span class=\"s1\">'../elf2deb_1.2.0_amd64.deb'</span>.\n\n$ dpkg-deb --info ../elf2deb_1.2.0_amd64.deb\n new Debian package, version <span class=\"m\">2</span>.0.\n size <span class=\"m\">5100</span> bytes: control <span class=\"nv\">archive</span><span class=\"o\">=</span><span class=\"m\">624</span> bytes.\n     <span class=\"m\">383</span> bytes,    <span class=\"m\">12</span> lines      control\n     <span class=\"m\">189</span> bytes,     <span class=\"m\">3</span> lines      md5sums\n Package: elf2deb\n Version: <span class=\"m\">1</span>.2.0\n Architecture: amd64\n Maintainer: Nicolai S\u00f8borg &lt;git@xn--sb-lka.org&gt;\n Installed-Size: <span class=\"m\">20</span>\n Depends: python3, python3-requests\n Section: misc\n Priority: optional\n Multi-Arch: foreign\n Description: tool to easily package any binary to a deb file\n  ELF2deb makes it easy to package simple binaries to a deb file\n  to <span class=\"nb\">help</span> deploy files across debian environments.\n</pre>\n\n          </div>"}, "last_serial": 6501684, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "571fa2ec5038285e60c58207e1f7f999", "sha256": "8a466dc7d9fe6ee6d5b621db1ab7295f280c5caa7dde2add20f1af250462153e"}, "downloads": -1, "filename": "ELF2deb-1.1.0.tar.gz", "has_sig": false, "md5_digest": "571fa2ec5038285e60c58207e1f7f999", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6475, "upload_time": "2019-05-20T21:32:39", "upload_time_iso_8601": "2019-05-20T21:32:39.198784Z", "url": "https://files.pythonhosted.org/packages/19/4f/34df6dd4c42dfbd31aebc6ad07c8ff60e26bb40b16b808a090a36f11e22d/ELF2deb-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "230b738fd354fea97bcb7aac079c5586", "sha256": "deec55800c49bda7819bebf40952421d76aa2ef92c3d0a34472fd202cfc8606e"}, "downloads": -1, "filename": "ELF2deb-1.2.0.tar.gz", "has_sig": false, "md5_digest": "230b738fd354fea97bcb7aac079c5586", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8208, "upload_time": "2019-06-06T11:08:21", "upload_time_iso_8601": "2019-06-06T11:08:21.729591Z", "url": "https://files.pythonhosted.org/packages/94/fd/ee018dad63908b8288b76242b67ed7dd0f466fc397943f8d993938e6af96/ELF2deb-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "46b9728a5a55b7f17b6fcf2ecd23ce7b", "sha256": "602a1cdd57e425edf1d1c68db37b9df35af6afe3f8cd287985bf31f0d94d86db"}, "downloads": -1, "filename": "ELF2deb-1.2.1.tar.gz", "has_sig": false, "md5_digest": "46b9728a5a55b7f17b6fcf2ecd23ce7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8336, "upload_time": "2020-01-22T17:54:48", "upload_time_iso_8601": "2020-01-22T17:54:48.449194Z", "url": "https://files.pythonhosted.org/packages/81/4a/b0ce86fb58349b3043b44669895381130144ac90270440580920b35b08b4/ELF2deb-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46b9728a5a55b7f17b6fcf2ecd23ce7b", "sha256": "602a1cdd57e425edf1d1c68db37b9df35af6afe3f8cd287985bf31f0d94d86db"}, "downloads": -1, "filename": "ELF2deb-1.2.1.tar.gz", "has_sig": false, "md5_digest": "46b9728a5a55b7f17b6fcf2ecd23ce7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8336, "upload_time": "2020-01-22T17:54:48", "upload_time_iso_8601": "2020-01-22T17:54:48.449194Z", "url": "https://files.pythonhosted.org/packages/81/4a/b0ce86fb58349b3043b44669895381130144ac90270440580920b35b08b4/ELF2deb-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:52 2020"}