{"info": {"author": "NGUYEN Viet", "author_email": "vietnq254@live.com", "bugtrack_url": null, "classifiers": [], "description": "pytest-testrail-e2e\n===================\n\n|PyPI version| |Downloads| |MIT license| |pytest|\n\nThis is a pytest plugin for creating/editing testplans or testruns based\non pytest markers. The results of the collected tests will be updated\nagainst the testplan/testrun in TestRail.\n\nInstallation\n------------\n\n::\n\n    pip install pytest-testrail-e2e\n\nConfiguration\n-------------\n\nConfig for Pytest tests\n~~~~~~~~~~~~~~~~~~~~~~~\n\nAdd a marker to the tests that will be picked up to be added to the run.\n\n.. code:: python\n\n        from pytest_testrail.plugin import testrail\n\n        @testrail('C1234', 'C5678')\n        def test_foo():\n            # test code goes here\n\n        # OR    \n\n        from pytest_testrail.plugin import pytestrail\n\n        @pytestrail.case(\"C1234\", \"C5678\")\n        def test_bar():\n            # test code goes here\n\nOr if you want to add defects to testcase result:\n\n.. code:: python\n\n\n        from pytest_testrail.plugin import pytestrail\n\n        @pytestrail.defect(\"PF-524\", \"BR-543\")\n        def test_bar():\n            # test code goes here\n\nSkip a testcase [**You need create 'Skipped' status in TestRail'**]:\n\n.. code:: python\n\n\n        from pytest_testrail.plugin import pytestrail\n\n        @pytestrail.case(\"C1234\")\n        @pytest.mark.skip(\"Mark as skipped description\") \n        # or @pytest.mark.skip(reason=\"Mark as skipped description\")\n        def test_bar():\n            # test code goes here\n\nBlock a testcase:\n\n.. code:: python\n\n\n        import pytest\n        from pytest_testrail.plugin import pytestrail\n\n        @pytestrail.case(\"C1234\")\n        @pytestrail.block(\"Mark as blocked description\")\n        # @pytestrail.block(reason=\"Mark as blocked description\")\n        def test_bar():\n            # test code goes here\n\n        # OR\n\n        @pytestrail.case(\"C1234\")\n        @pytest.mark.skip(reason=\"Mark as blocked description\", block=True)\n        def test_bar():\n            # test code goes here\n\nHow to set known defect ID for specific assertion: set\n``pytest-defect=<defect_id>`` in assertion error message.\n\n.. code:: python\n\n\n        from pytest_testrail.plugin import pytestrail\n\n        @pytestrail.case(\"C1234\")\n        @pytestrail.defectif()\n        def test_bar():\n            # Assertion 1: defect NCT-836\n            assert 1==0, \"pytest-defect=NCT-836\"\n            # Assertion 2: defect NCT-1024\n            assert False, \"Error message contains regex: pytest-defect=NCT-1024 allows to insert defect 'NCT-1024'\"\n\nConfig for TestRail\n~~~~~~~~~~~~~~~~~~~\n\n-  Settings file template config:\n\n.. code:: ini\n\n        [API]\n        url = https://yoururl.testrail.net/\n        email = user@email.com\n        password = <api_key>\n\n        [TESTRUN]\n        assignedto_id = 1\n        project_id = 2\n        suite_id = 3\n        plan_id = 4\n        description = 'This is an example description'\n\n        [TESTCASE]\n        custom_comment = 'This is a custom comment'\n\nOr\n\n-  Set command line options (see below)\n\nUsage\n-----\n\nBasically, the following command will create a testrun in TestRail, add\nall marked tests to run. Once the all tests are finished they will be\nupdated in TestRail:\n\n.. code:: bash\n\n        py.test --testrail --tr-config=<settings file>.cfg\n\nAll available options\n~~~~~~~~~~~~~~~~~~~~~\n\n+-----------------+----------------------------------------------------------+\n| option          | description                                              |\n+=================+==========================================================+\n| --testrail      | Create and update testruns with TestRail                 |\n+-----------------+----------------------------------------------------------+\n| --tr-config     | Path to the config file containing information about the |\n|                 | TestRail server (defaults to testrail.cfg)               |\n+-----------------+----------------------------------------------------------+\n| --tr-url        | TestRail address you use to access TestRail with your    |\n|                 | web browser (config file: url in API section)            |\n+-----------------+----------------------------------------------------------+\n| --tr-email      | Email for the account on the TestRail server (config     |\n|                 | file: email in API section)                              |\n+-----------------+----------------------------------------------------------+\n| --tr-password   | Password for the account on the TestRail server (config  |\n|                 | file: password in API section)                           |\n+-----------------+----------------------------------------------------------+\n| --tr-testrun-as | ID of the user assigned to the test run (config          |\n| signedto-id     | file:assignedto\\_id in TESTRUN section)                  |\n+-----------------+----------------------------------------------------------+\n| --tr-testrun-pr | ID of the project the test run is in (config file:       |\n| oject-id        | project\\_id in TESTRUN section)                          |\n+-----------------+----------------------------------------------------------+\n| --tr-testrun-su | ID of the test suite containing the test cases (config   |\n| ite-id          | file: suite\\_id in TESTRUN section)                      |\n+-----------------+----------------------------------------------------------+\n| --tr-testrun-su | Include all test cases in specified test suite when      |\n| ite-include-all | creating test run (config file: include\\_all in TESTRUN  |\n|                 | section)                                                 |\n+-----------------+----------------------------------------------------------+\n| --tr-testrun-na | Name given to testrun, that appears in TestRail (config  |\n| me              | file: name in TESTRUN section)                           |\n+-----------------+----------------------------------------------------------+\n| --tr-testrun-de | Description given to testrun, that appears in TestRail   |\n| scription       | (config file: description in TESTRUN section)            |\n+-----------------+----------------------------------------------------------+\n| --tr-run-id     | Identifier of testrun, that appears in TestRail. If      |\n|                 | provided, option \"--tr-testrun-name\" will be ignored     |\n+-----------------+----------------------------------------------------------+\n| --tr-plan-id    | Identifier of testplan, that appears in TestRail. If     |\n|                 | provided, option \"--tr-testrun-name\" will be ignored     |\n+-----------------+----------------------------------------------------------+\n| --tr-version    | Indicate a version in Test Case result.                  |\n+-----------------+----------------------------------------------------------+\n| --tr-no-ssl-cer | Do not check for valid SSL certificate on TestRail host  |\n| t-check         |                                                          |\n+-----------------+----------------------------------------------------------+\n| --tr-close-on-c | Close a test plan or test run on completion.             |\n| omplete         |                                                          |\n+-----------------+----------------------------------------------------------+\n| --tr-dont-publi | Do not publish results of \"blocked\" testcases in         |\n| sh-blocked      | TestRail                                                 |\n+-----------------+----------------------------------------------------------+\n| --tr-skip-missi | Skip test cases that are not present in testrun          |\n| ng              |                                                          |\n+-----------------+----------------------------------------------------------+\n| --tr-milestone- | Identifier of milestone to be assigned to run            |\n| id              |                                                          |\n+-----------------+----------------------------------------------------------+\n| --tc-custom-com | Custom comment, to be appended to default comment for    |\n| ment            | test case (config file: custom\\_comment in TESTCASE      |\n|                 | section)                                                 |\n+-----------------+----------------------------------------------------------+\n| --tr-report-sin | Report result immediately for each test case when it     |\n| gle-test        | finished                                                 |\n+-----------------+----------------------------------------------------------+\n\nTestRail Settings\n-----------------\n\nTo increase security, the TestRail team suggests using an API key\ninstead of a password. You can see how to generate an API key\n`here <http://docs.gurock.com/testrail-api2/accessing#username_and_api_key>`__.\n\nIf you maintain your own TestRail instance on your own server, it is\nrecommended to `enable HTTPS for your TestRail\ninstallation <http://docs.gurock.com/testrail-admin/admin-securing#using_https>`__.\n\nFor TestRail hosted accounts maintained by\n`Gurock <http://www.gurock.com/>`__, all accounts will automatically use\nHTTPS.\n\nYou can read the whole TestRail documentation\n`here <http://docs.gurock.com/>`__.\n\nAuthor\n------\n\nNGUYEN Viet - `github <https://github.com/vietnq254>`__\n\nLicense\n-------\n\nThis project is licensed under the `MIT license </LICENSE>`__.\n\nAcknowledgments\n---------------\n\n-  `allankp <https://github.com/allankp>`__, author of the\n   `pytest-testrail <https://github.com/allankp/pytest-testrail>`__\n   repository that was cloned.\n\n.. |PyPI version| image:: https://badge.fury.io/py/pytest-testrail-e2e.svg\n   :target: https://badge.fury.io/py/pytest-testrail-e2e\n.. |Downloads| image:: https://pepy.tech/badge/pytest-testrail-e2e\n   :target: https://pepy.tech/project/pytest-testrail-e2e\n.. |MIT license| image:: http://img.shields.io/badge/license-MIT-brightgreen.svg\n   :target: /LICENSE\n.. |pytest| image:: https://img.shields.io/badge/pytest-%3E%3D3.6-blue.svg\n   :target: https://img.shields.io/badge/pytest-%3E%3D3.6-blue.svg\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vietnq254/pytest-testrail-e2e/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytest-testrail-e2e", "package_url": "https://pypi.org/project/pytest-testrail-e2e/", "platform": "", "project_url": "https://pypi.org/project/pytest-testrail-e2e/", "project_urls": {"Homepage": "https://github.com/vietnq254/pytest-testrail-e2e/"}, "release_url": "https://pypi.org/project/pytest-testrail-e2e/2.2.1/", "requires_dist": ["pytest (>=3.6)", "requests (>=2.20.0)"], "requires_python": "", "summary": "pytest plugin for creating TestRail runs and adding results", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/pytest-testrail-e2e\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a7df7ee3d28051ae298cf43b900b9a2d27749de/68747470733a2f2f62616467652e667572792e696f2f70792f7079746573742d746573747261696c2d6532652e737667\"></a> <a href=\"https://pepy.tech/project/pytest-testrail-e2e\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18fcb2f0f0623ceb71d9fe3f353efedb9fa193eb/68747470733a2f2f706570792e746563682f62616467652f7079746573742d746573747261696c2d653265\"></a> <a href=\"/LICENSE\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/273c229cce783df6c95a151db83b1f00cf93b97c/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667\"></a> <a href=\"https://img.shields.io/badge/pytest-%3E%3D3.6-blue.svg\" rel=\"nofollow\"><img alt=\"pytest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9a3426e97a808656e882f46ac8ff9c3c5b32a23/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7079746573742d253345253344332e362d626c75652e737667\"></a></p>\n<p>This is a pytest plugin for creating/editing testplans or testruns based\non pytest markers. The results of the collected tests will be updated\nagainst the testplan/testrun in TestRail.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pytest-testrail-e2e\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<div id=\"config-for-pytest-tests\">\n<h3>Config for Pytest tests</h3>\n<p>Add a marker to the tests that will be picked up to be added to the run.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_testrail.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">testrail</span>\n\n<span class=\"nd\">@testrail</span><span class=\"p\">(</span><span class=\"s1\">'C1234'</span><span class=\"p\">,</span> <span class=\"s1\">'C5678'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_foo</span><span class=\"p\">():</span>\n    <span class=\"c1\"># test code goes here</span>\n\n<span class=\"c1\"># OR</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pytest_testrail.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">pytestrail</span>\n\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">(</span><span class=\"s2\">\"C1234\"</span><span class=\"p\">,</span> <span class=\"s2\">\"C5678\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">():</span>\n    <span class=\"c1\"># test code goes here</span>\n</pre>\n<p>Or if you want to add defects to testcase result:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_testrail.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">pytestrail</span>\n\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">defect</span><span class=\"p\">(</span><span class=\"s2\">\"PF-524\"</span><span class=\"p\">,</span> <span class=\"s2\">\"BR-543\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">():</span>\n    <span class=\"c1\"># test code goes here</span>\n</pre>\n<p>Skip a testcase [<strong>You need create \u2018Skipped\u2019 status in TestRail\u2019</strong>]:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_testrail.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">pytestrail</span>\n\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">(</span><span class=\"s2\">\"C1234\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"s2\">\"Mark as skipped description\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or @pytest.mark.skip(reason=\"Mark as skipped description\")</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">():</span>\n    <span class=\"c1\"># test code goes here</span>\n</pre>\n<p>Block a testcase:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pytest_testrail.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">pytestrail</span>\n\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">(</span><span class=\"s2\">\"C1234\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">block</span><span class=\"p\">(</span><span class=\"s2\">\"Mark as blocked description\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># @pytestrail.block(reason=\"Mark as blocked description\")</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">():</span>\n    <span class=\"c1\"># test code goes here</span>\n\n<span class=\"c1\"># OR</span>\n\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">(</span><span class=\"s2\">\"C1234\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"n\">reason</span><span class=\"o\">=</span><span class=\"s2\">\"Mark as blocked description\"</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">():</span>\n    <span class=\"c1\"># test code goes here</span>\n</pre>\n<p>How to set known defect ID for specific assertion: set\n<tt><span class=\"pre\">pytest-defect=&lt;defect_id&gt;</span></tt> in assertion error message.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_testrail.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">pytestrail</span>\n\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">(</span><span class=\"s2\">\"C1234\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@pytestrail</span><span class=\"o\">.</span><span class=\"n\">defectif</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Assertion 1: defect NCT-836</span>\n    <span class=\"k\">assert</span> <span class=\"mi\">1</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"pytest-defect=NCT-836\"</span>\n    <span class=\"c1\"># Assertion 2: defect NCT-1024</span>\n    <span class=\"k\">assert</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">\"Error message contains regex: pytest-defect=NCT-1024 allows to insert defect 'NCT-1024'\"</span>\n</pre>\n</div>\n<div id=\"config-for-testrail\">\n<h3>Config for TestRail</h3>\n<ul>\n<li>Settings file template config:</li>\n</ul>\n<pre><span class=\"k\">[API]</span>\n<span class=\"na\">url</span> <span class=\"o\">=</span> <span class=\"s\">https://yoururl.testrail.net/</span>\n<span class=\"na\">email</span> <span class=\"o\">=</span> <span class=\"s\">user@email.com</span>\n<span class=\"na\">password</span> <span class=\"o\">=</span> <span class=\"s\">&lt;api_key&gt;</span>\n\n<span class=\"k\">[TESTRUN]</span>\n<span class=\"na\">assignedto_id</span> <span class=\"o\">=</span> <span class=\"s\">1</span>\n<span class=\"na\">project_id</span> <span class=\"o\">=</span> <span class=\"s\">2</span>\n<span class=\"na\">suite_id</span> <span class=\"o\">=</span> <span class=\"s\">3</span>\n<span class=\"na\">plan_id</span> <span class=\"o\">=</span> <span class=\"s\">4</span>\n<span class=\"na\">description</span> <span class=\"o\">=</span> <span class=\"s\">'This is an example description'</span>\n\n<span class=\"k\">[TESTCASE]</span>\n<span class=\"na\">custom_comment</span> <span class=\"o\">=</span> <span class=\"s\">'This is a custom comment'</span>\n</pre>\n<p>Or</p>\n<ul>\n<li>Set command line options (see below)</li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Basically, the following command will create a testrun in TestRail, add\nall marked tests to run. Once the all tests are finished they will be\nupdated in TestRail:</p>\n<pre>py.test --testrail --tr-config<span class=\"o\">=</span>&lt;settings file&gt;.cfg\n</pre>\n<div id=\"all-available-options\">\n<h3>All available options</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>option</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>\u2013testrail</td>\n<td>Create and update testruns with TestRail</td>\n</tr>\n<tr><td>\u2013tr-config</td>\n<td>Path to the config file containing information about the\nTestRail server (defaults to testrail.cfg)</td>\n</tr>\n<tr><td>\u2013tr-url</td>\n<td>TestRail address you use to access TestRail with your\nweb browser (config file: url in API section)</td>\n</tr>\n<tr><td>\u2013tr-email</td>\n<td>Email for the account on the TestRail server (config\nfile: email in API section)</td>\n</tr>\n<tr><td>\u2013tr-password</td>\n<td>Password for the account on the TestRail server (config\nfile: password in API section)</td>\n</tr>\n<tr><td>\u2013tr-testrun-as\nsignedto-id</td>\n<td>ID of the user assigned to the test run (config\n<a>file:assignedto_id</a> in TESTRUN section)</td>\n</tr>\n<tr><td>\u2013tr-testrun-pr\noject-id</td>\n<td>ID of the project the test run is in (config file:\nproject_id in TESTRUN section)</td>\n</tr>\n<tr><td>\u2013tr-testrun-su\nite-id</td>\n<td>ID of the test suite containing the test cases (config\nfile: suite_id in TESTRUN section)</td>\n</tr>\n<tr><td>\u2013tr-testrun-su\nite-include-all</td>\n<td>Include all test cases in specified test suite when\ncreating test run (config file: include_all in TESTRUN\nsection)</td>\n</tr>\n<tr><td>\u2013tr-testrun-na\nme</td>\n<td>Name given to testrun, that appears in TestRail (config\nfile: name in TESTRUN section)</td>\n</tr>\n<tr><td>\u2013tr-testrun-de\nscription</td>\n<td>Description given to testrun, that appears in TestRail\n(config file: description in TESTRUN section)</td>\n</tr>\n<tr><td>\u2013tr-run-id</td>\n<td>Identifier of testrun, that appears in TestRail. If\nprovided, option \u201c\u2013tr-testrun-name\u201d will be ignored</td>\n</tr>\n<tr><td>\u2013tr-plan-id</td>\n<td>Identifier of testplan, that appears in TestRail. If\nprovided, option \u201c\u2013tr-testrun-name\u201d will be ignored</td>\n</tr>\n<tr><td>\u2013tr-version</td>\n<td>Indicate a version in Test Case result.</td>\n</tr>\n<tr><td>\u2013tr-no-ssl-cer\nt-check</td>\n<td>Do not check for valid SSL certificate on TestRail host</td>\n</tr>\n<tr><td>\u2013tr-close-on-c\nomplete</td>\n<td>Close a test plan or test run on completion.</td>\n</tr>\n<tr><td>\u2013tr-dont-publi\nsh-blocked</td>\n<td>Do not publish results of \u201cblocked\u201d testcases in\nTestRail</td>\n</tr>\n<tr><td>\u2013tr-skip-missi\nng</td>\n<td>Skip test cases that are not present in testrun</td>\n</tr>\n<tr><td>\u2013tr-milestone-\nid</td>\n<td>Identifier of milestone to be assigned to run</td>\n</tr>\n<tr><td>\u2013tc-custom-com\nment</td>\n<td>Custom comment, to be appended to default comment for\ntest case (config file: custom_comment in TESTCASE\nsection)</td>\n</tr>\n<tr><td>\u2013tr-report-sin\ngle-test</td>\n<td>Report result immediately for each test case when it\nfinished</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"testrail-settings\">\n<h2>TestRail Settings</h2>\n<p>To increase security, the TestRail team suggests using an API key\ninstead of a password. You can see how to generate an API key\n<a href=\"http://docs.gurock.com/testrail-api2/accessing#username_and_api_key\" rel=\"nofollow\">here</a>.</p>\n<p>If you maintain your own TestRail instance on your own server, it is\nrecommended to <a href=\"http://docs.gurock.com/testrail-admin/admin-securing#using_https\" rel=\"nofollow\">enable HTTPS for your TestRail\ninstallation</a>.</p>\n<p>For TestRail hosted accounts maintained by\n<a href=\"http://www.gurock.com/\" rel=\"nofollow\">Gurock</a>, all accounts will automatically use\nHTTPS.</p>\n<p>You can read the whole TestRail documentation\n<a href=\"http://docs.gurock.com/\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>NGUYEN Viet - <a href=\"https://github.com/vietnq254\" rel=\"nofollow\">github</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the <a href=\"/LICENSE\" rel=\"nofollow\">MIT license</a>.</p>\n</div>\n<div id=\"acknowledgments\">\n<h2>Acknowledgments</h2>\n<ul>\n<li><a href=\"https://github.com/allankp\" rel=\"nofollow\">allankp</a>, author of the\n<a href=\"https://github.com/allankp/pytest-testrail\" rel=\"nofollow\">pytest-testrail</a>\nrepository that was cloned.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7105889, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "055431e1cff53dff08eb3c6d6c6c307f", "sha256": "7cca993769fca54935c2f1ae884250c9e6ed251a9ffd4420edfcb20ad600ae3f"}, "downloads": -1, "filename": "pytest_testrail_e2e-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "055431e1cff53dff08eb3c6d6c6c307f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14483, "upload_time": "2019-11-11T08:23:15", "upload_time_iso_8601": "2019-11-11T08:23:15.963705Z", "url": "https://files.pythonhosted.org/packages/ee/1d/b6697d80263b33d85c7e18355a308612c46e3698d297b2f5ff7fd67241a4/pytest_testrail_e2e-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9332309a113a32620638ec7128e2819", "sha256": "6ca5d753e900c8a107844ba9e87eac2d4de834d109b55f50fca783cdf3b110cf"}, "downloads": -1, "filename": "pytest-testrail-e2e-1.0.4.tar.gz", "has_sig": false, "md5_digest": "a9332309a113a32620638ec7128e2819", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10528, "upload_time": "2019-11-11T08:23:18", "upload_time_iso_8601": "2019-11-11T08:23:18.041243Z", "url": "https://files.pythonhosted.org/packages/23/97/266b14affd0d1c1ee019b348be2d39c156ab0c2e426e47501b042a19fde4/pytest-testrail-e2e-1.0.4.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "ea4eb03ce9fd03040c43be1aa0258561", "sha256": "f032f597cb26896c4b9b15e5af18145ffcdaf0fa2e562dab368fc1721d9a523f"}, "downloads": -1, "filename": "pytest_testrail_e2e-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ea4eb03ce9fd03040c43be1aa0258561", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14572, "upload_time": "2019-11-25T04:14:46", "upload_time_iso_8601": "2019-11-25T04:14:46.809355Z", "url": "https://files.pythonhosted.org/packages/b5/dd/21fbb6fe87eda87c204b439399ade8ee638b499a0291b73abd833aa5cfd4/pytest_testrail_e2e-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aff7e41e65037311b3da8a9544f8527", "sha256": "4c19c1c5c163ef1562c2abbd6836be8d0963346c63cc1de25ae50a3448b8f43c"}, "downloads": -1, "filename": "pytest-testrail-e2e-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3aff7e41e65037311b3da8a9544f8527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10640, "upload_time": "2019-11-25T04:14:48", "upload_time_iso_8601": "2019-11-25T04:14:48.768204Z", "url": "https://files.pythonhosted.org/packages/5f/9c/7a3038c211d0bd62938914d8dcc8ccc7bfd35f851f100b7d94012a5d7be2/pytest-testrail-e2e-2.0.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "1e0dbd64fb4255df5bfe75dc78cd34e2", "sha256": "def23d93aa6ea876568945981934d248513b8a2c2a78e1b9a6afb891254e7bfe"}, "downloads": -1, "filename": "pytest_testrail_e2e-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1e0dbd64fb4255df5bfe75dc78cd34e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15654, "upload_time": "2020-04-07T01:31:36", "upload_time_iso_8601": "2020-04-07T01:31:36.794097Z", "url": "https://files.pythonhosted.org/packages/32/d8/c8ec2a5caf0ed0883694f901d5e2e73d06943bc1014f57d97798601fb2e5/pytest_testrail_e2e-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "836505c8fe31f50aa48ce4d54f71543f", "sha256": "4fad24d59fa357dfd52f139fa5a5f6da9acd7889eda4dad2b5c511f50cf72af8"}, "downloads": -1, "filename": "pytest-testrail-e2e-2.1.1.tar.gz", "has_sig": false, "md5_digest": "836505c8fe31f50aa48ce4d54f71543f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11440, "upload_time": "2020-04-07T01:31:38", "upload_time_iso_8601": "2020-04-07T01:31:38.813514Z", "url": "https://files.pythonhosted.org/packages/ae/7d/b9357a76b30546c4974132223d176eba6dd28d61269d25b0a85fea21a307/pytest-testrail-e2e-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "8d13c3142036e8aa05c8032ed5e482bf", "sha256": "53e463a1ddc57bc62537e8e05548820c1ae6c71f4e18806c1e8237be921e4762"}, "downloads": -1, "filename": "pytest_testrail_e2e-2.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d13c3142036e8aa05c8032ed5e482bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15788, "upload_time": "2020-04-07T02:51:23", "upload_time_iso_8601": "2020-04-07T02:51:23.773329Z", "url": "https://files.pythonhosted.org/packages/17/39/b3bec16693df2456a241ba3385d707feff8ec22e852e22c7861715215992/pytest_testrail_e2e-2.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9eddb6a88696f68138068b6a211b3f2", "sha256": "ce2f2ef3df4e6b7f14fd98f292025ef6f1e80b4460f7b0a28f2b298ca9bedb51"}, "downloads": -1, "filename": "pytest-testrail-e2e-2.1.2.tar.gz", "has_sig": false, "md5_digest": "c9eddb6a88696f68138068b6a211b3f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11634, "upload_time": "2020-04-07T02:51:34", "upload_time_iso_8601": "2020-04-07T02:51:34.322010Z", "url": "https://files.pythonhosted.org/packages/c1/19/ff9d9433a74ce9e14af77d6e5a9c38fbd1c5e0147fa59105d34927c73234/pytest-testrail-e2e-2.1.2.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "64bdcf66ff466c4f70e88718d7e25d81", "sha256": "3662768ccbc5d27f3795e6eecb684e31bd1bb268be5f564a22073c1ce87ed15b"}, "downloads": -1, "filename": "pytest_testrail_e2e-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "64bdcf66ff466c4f70e88718d7e25d81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16181, "upload_time": "2020-04-07T06:23:31", "upload_time_iso_8601": "2020-04-07T06:23:31.547613Z", "url": "https://files.pythonhosted.org/packages/05/99/fbbcc09fd5d08e121cedb1319bfb16dea12f3b0f82e1caf7f11e631055f5/pytest_testrail_e2e-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec068851cafdbf43c15f4936292ff114", "sha256": "a9f3b660b8a7c01f41432be2e6ba5b7b867e0a80db7a6c8a0a7e6bcfd89ed438"}, "downloads": -1, "filename": "pytest-testrail-e2e-2.2.0.tar.gz", "has_sig": false, "md5_digest": "ec068851cafdbf43c15f4936292ff114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11914, "upload_time": "2020-04-07T06:23:34", "upload_time_iso_8601": "2020-04-07T06:23:34.209168Z", "url": "https://files.pythonhosted.org/packages/5a/c9/7321e99c0c15a1bef2e869d4790329c452d792af9d7c32fb8eb396edd3b5/pytest-testrail-e2e-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "e587383873f1ff02588251d4f9bdef46", "sha256": "bcb5a6cec7782f11687ae4667c442f4069fee8181d7bab4cad397ace67afc3fb"}, "downloads": -1, "filename": "pytest_testrail_e2e-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e587383873f1ff02588251d4f9bdef46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16177, "upload_time": "2020-04-26T16:59:06", "upload_time_iso_8601": "2020-04-26T16:59:06.884074Z", "url": "https://files.pythonhosted.org/packages/21/bc/a6cba043eac29b0edf7539d89351a12559324ac5c83007f73daae3ee7094/pytest_testrail_e2e-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd7f906c1a53bf729607fd8f8b69ff05", "sha256": "cb831582095ac693ff2133994174a1253b21af4c59eca58b61dbabe22a799142"}, "downloads": -1, "filename": "pytest-testrail-e2e-2.2.1.tar.gz", "has_sig": false, "md5_digest": "fd7f906c1a53bf729607fd8f8b69ff05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11909, "upload_time": "2020-04-26T16:59:08", "upload_time_iso_8601": "2020-04-26T16:59:08.653306Z", "url": "https://files.pythonhosted.org/packages/eb/65/6ad1a8fc8139a4ccf54f5c9fe91dc62743f9bf1c7e6bcec29ee57002ed04/pytest-testrail-e2e-2.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e587383873f1ff02588251d4f9bdef46", "sha256": "bcb5a6cec7782f11687ae4667c442f4069fee8181d7bab4cad397ace67afc3fb"}, "downloads": -1, "filename": "pytest_testrail_e2e-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e587383873f1ff02588251d4f9bdef46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16177, "upload_time": "2020-04-26T16:59:06", "upload_time_iso_8601": "2020-04-26T16:59:06.884074Z", "url": "https://files.pythonhosted.org/packages/21/bc/a6cba043eac29b0edf7539d89351a12559324ac5c83007f73daae3ee7094/pytest_testrail_e2e-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd7f906c1a53bf729607fd8f8b69ff05", "sha256": "cb831582095ac693ff2133994174a1253b21af4c59eca58b61dbabe22a799142"}, "downloads": -1, "filename": "pytest-testrail-e2e-2.2.1.tar.gz", "has_sig": false, "md5_digest": "fd7f906c1a53bf729607fd8f8b69ff05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11909, "upload_time": "2020-04-26T16:59:08", "upload_time_iso_8601": "2020-04-26T16:59:08.653306Z", "url": "https://files.pythonhosted.org/packages/eb/65/6ad1a8fc8139a4ccf54f5c9fe91dc62743f9bf1c7e6bcec29ee57002ed04/pytest-testrail-e2e-2.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:38 2020"}