{"info": {"author": "Targomo GmbH", "author_email": "mail@targomo.com", "bugtrack_url": null, "classifiers": [], "description": "# targomo_python - Python client library for Targomo webservices\n\n## API-Key\nGet your API key [here ](https://www.targomo.com/developers/pricing/).\n\n## Installation\n### the targomo_python library uses python3\nmake sure this is installed on your system\n### use virtualenv for a clean, global-free install\n[virtualenv](http://docs.python-guide.org/en/latest/dev/virtualenvs/) is great. We can use it to sandbox versions and keep installs contained, so we can avoid global version conflicts.\n\nInstall virtualenv\n```\npip install virtualenv\n```\n\nCreate python3 virtualenv named 'venv'\n```\nvirtualenv -p python3 venv\n```\n\nActivate virtualenv\n```\nsource venv/bin/activate\n```\n_do this every time to enter into virtualenv called '(venv)' <= as shown in terminal prompt_\n\nInstall targomo_python\n```\npip install targomo_python\n```\n*this installs targomo_python and dependencies in our virtualenv*\n\nTest the install\n`python -m targomo_python.cli -h` _this shows the cli usage and help_\n\nWhen you are done using the virtualenv, shut it down\n```\ndeactivate\n```\n_prompt drops '(venv)' tag, virtualenv is no longer active_\n\n## Usage\n    usage: python -m targomo_python.cli [-h] [--time TIME] [--date DATE]\n                                 [--polygonSerializer POLYGONSERIALIZER]\n                                 [--buffer BUFFER] [--minHoleSize MINHOLESIZE]\n                                 [--simplify SIMPLIFY] [--srid SRID]\n                                 [--quadrantSegments QUADRANTSEGMENTS]\n                                 [--frameDuration FRAMEDURATION]\n                                 [--reverse REVERSE] [--bikeSpeed BIKESPEED]\n                                 [--bikeUphill BIKEUPHILL]\n                                 [--bikeDownhill BIKEDOWNHILL]\n                                 [--walkSpeed WALKSPEED] [--walkUphill WALKUPHILL]\n                                 [--walkDownhill WALKDOWNHILL] --travelTimes\n                                 TRAVELTIMES [TRAVELTIMES ...] --serviceUrl\n                                 SERVICEURL --serviceKey SERVICEKEY --travelType\n                                 TRAVELTYPE --source SOURCE --outputDir OUTPUTDIR\n                                 --outputFilename OUTPUTFILENAME\n\n    Query the Targomo Polygon service using python\n\n    optional arguments:\n        -h, --help            show this help message and exit\n        --time TIME           The time in seconds of the day: 1.30 p.m. = 13 * 3600\n                              + 30 * 60 = 48600 (transit only) (default: 43200)\n        --date DATE           The date in the format YYYYMMDD, e.g.: 20160727 for\n                              the 27th of July 2016 (transit only) (default:\n                              20162707)\n        --polygonSerializer POLYGONSERIALIZER\n                              The serializer for the polygons: json or geojson\n                              (default: geojson)\n        --buffer BUFFER       The buffer (in srid units) that should be generated\n                              around the polygons. (default: None)\n        --minHoleSize MINHOLESIZE\n                              The area threshold of a hole inside a polygon (in\n                              meters squared). (default: None)\n        --simplify SIMPLIFY   The threshold (in meter) that should be used for\n                              Douglas-Peucker (before buffering, max 500m).\n                              (default: None)\n        --srid SRID           The target SRID (Spatial Reference System Identifier),\n                              all that are supported via PostGIS. (default: None)\n        --quadrantSegments QUADRANTSEGMENTS\n                              The number of quadrant segments (max 8), see:\n                              http://postgis.net/docs/ST_Buffer.html. (default:\n                              None)\n        --frameDuration FRAMEDURATION\n                              The window (in seconds) during which connections are\n                              identified. (default: None)\n        --reverse REVERSE     Whether or not to measure from sources (default) or\n                              towards sources. (default: None)\n        --bikeSpeed BIKESPEED\n                              Bike speed km/h (travelType 'bike' only). (default:\n                              None)\n        --bikeUphill BIKEUPHILL\n                              Penalty applied to uphill bike travel. (default: None)\n        --bikeDownhill BIKEDOWNHILL\n                              Penalty applied to downhill bike travel. (default:\n                              None)\n        --walkSpeed WALKSPEED\n                              Walk speed km/h (travelType 'walk' only). (default:\n                              None)\n        --walkUphill WALKUPHILL\n                              Penalty applied to uphill walk travel. (default: None)\n        --walkDownhill WALKDOWNHILL\n                              Penalty applied to downhill bike travel. (default:\n                              None)\n\n    required named arguments:\n        --travelTimes TRAVELTIMES [TRAVELTIMES ...]\n                              The travel time in seconds as a list of integers.\n                              (default: None)\n        --serviceUrl SERVICEURL\n                              The URL of the Targomo API endpoint. (default: None)\n        --serviceKey SERVICEKEY\n                              Your personal key for the API. (default: None)\n        --travelType TRAVELTYPE\n                              The travel type for the request: car, walk, bike or\n                              transit (default: None)\n        --source SOURCE       The source as doubles (lat,lng) separated by ';'.\n                              (default: None)\n        --outputDir OUTPUTDIR\n                              The path where to write the output files (default:\n                              None)\n        --outputFilename OUTPUTFILENAME\n                              The the name of the file to write to (default: None)\n\n\n### FYI\nnot all capabilities are available for all plan levels. Refer to the different [plans](https://www.targomo.com/developers/pricing/) to see the specifics.\n\n### Example\n\n    python -m targomo_python.cli --travelType walk \\\n                   --travelTimes 1800 \\\n                   --source=\"52.52;13.405\" \\\n                   --outputDir=data/ \\\n                   --outputFilename=test.geojson \\\n                   --serviceKey='Your key here' \\\n                   --serviceUrl=http://api.targomo.com/germany/ \\\n                   --srid=4326 \\\n\n\n## Library Usage\n\nExample how to use the library from Python code:\n\n    #!/usr/bin/env python3\n    from targomo_python.rest.ServiceExecutor import ServiceExecutor\n    from targomo_python.util.TravelOptions import TravelOptions\n    from targomo_python.util.enum.TravelType import TravelType\n\n    travelOptions = TravelOptions()\n    travelOptions.setServiceKey('INSERT_YOUR_API_KEY_HERE')\n    travelOptions.setTravelType(TravelType.TRANSIT)\n    travelOptions.setServiceUrl('https://api.targomo.com/westcentraleurope/')\n    travelOptions.setTravelTime(10 * 3600)\n    travelOptions.setFrameDuration(3 * 3600)\n    travelOptions.addSource({\"id\": \"source-1\", \"lng\": 53.5532, \"lat\": 10.00644})\n    travelOptions.addTarget({\"id\": \"target-1\", \"lng\": 53.63265, \"lat\": 10.00667})\n\n    response = ServiceExecutor().execute_service(travelOptions, \"route\")\n    print(response)\n\n\n## Testing\n\nUsing unit test and nose, API assumes Python 3.x\n- rename _tests/config.py.txt_ to _tests/config.py_, add appropriate API key\n- run `nosetests -v`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/targomo/targomo-python/tarball/0.23", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/targomo/targomo-python", "keywords": "isochrone,routing,polygon,openstreetmaps,gtfs,map", "license": "", "maintainer": "", "maintainer_email": "", "name": "targomo_python", "package_url": "https://pypi.org/project/targomo_python/", "platform": "", "project_url": "https://pypi.org/project/targomo_python/", "project_urls": {"Download": "https://github.com/targomo/targomo-python/tarball/0.23", "Homepage": "https://github.com/targomo/targomo-python"}, "release_url": "https://pypi.org/project/targomo_python/0.23/", "requires_dist": null, "requires_python": "", "summary": "A python client library to query the Targomo API", "version": "0.23", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>targomo_python - Python client library for Targomo webservices</h1>\n<h2>API-Key</h2>\n<p>Get your API key <a href=\"https://www.targomo.com/developers/pricing/\" rel=\"nofollow\">here </a>.</p>\n<h2>Installation</h2>\n<h3>the targomo_python library uses python3</h3>\n<p>make sure this is installed on your system</p>\n<h3>use virtualenv for a clean, global-free install</h3>\n<p><a href=\"http://docs.python-guide.org/en/latest/dev/virtualenvs/\" rel=\"nofollow\">virtualenv</a> is great. We can use it to sandbox versions and keep installs contained, so we can avoid global version conflicts.</p>\n<p>Install virtualenv</p>\n<pre><code>pip install virtualenv\n</code></pre>\n<p>Create python3 virtualenv named 'venv'</p>\n<pre><code>virtualenv -p python3 venv\n</code></pre>\n<p>Activate virtualenv</p>\n<pre><code>source venv/bin/activate\n</code></pre>\n<p><em>do this every time to enter into virtualenv called '(venv)' &lt;= as shown in terminal prompt</em></p>\n<p>Install targomo_python</p>\n<pre><code>pip install targomo_python\n</code></pre>\n<p><em>this installs targomo_python and dependencies in our virtualenv</em></p>\n<p>Test the install\n<code>python -m targomo_python.cli -h</code> <em>this shows the cli usage and help</em></p>\n<p>When you are done using the virtualenv, shut it down</p>\n<pre><code>deactivate\n</code></pre>\n<p><em>prompt drops '(venv)' tag, virtualenv is no longer active</em></p>\n<h2>Usage</h2>\n<pre><code>usage: python -m targomo_python.cli [-h] [--time TIME] [--date DATE]\n                             [--polygonSerializer POLYGONSERIALIZER]\n                             [--buffer BUFFER] [--minHoleSize MINHOLESIZE]\n                             [--simplify SIMPLIFY] [--srid SRID]\n                             [--quadrantSegments QUADRANTSEGMENTS]\n                             [--frameDuration FRAMEDURATION]\n                             [--reverse REVERSE] [--bikeSpeed BIKESPEED]\n                             [--bikeUphill BIKEUPHILL]\n                             [--bikeDownhill BIKEDOWNHILL]\n                             [--walkSpeed WALKSPEED] [--walkUphill WALKUPHILL]\n                             [--walkDownhill WALKDOWNHILL] --travelTimes\n                             TRAVELTIMES [TRAVELTIMES ...] --serviceUrl\n                             SERVICEURL --serviceKey SERVICEKEY --travelType\n                             TRAVELTYPE --source SOURCE --outputDir OUTPUTDIR\n                             --outputFilename OUTPUTFILENAME\n\nQuery the Targomo Polygon service using python\n\noptional arguments:\n    -h, --help            show this help message and exit\n    --time TIME           The time in seconds of the day: 1.30 p.m. = 13 * 3600\n                          + 30 * 60 = 48600 (transit only) (default: 43200)\n    --date DATE           The date in the format YYYYMMDD, e.g.: 20160727 for\n                          the 27th of July 2016 (transit only) (default:\n                          20162707)\n    --polygonSerializer POLYGONSERIALIZER\n                          The serializer for the polygons: json or geojson\n                          (default: geojson)\n    --buffer BUFFER       The buffer (in srid units) that should be generated\n                          around the polygons. (default: None)\n    --minHoleSize MINHOLESIZE\n                          The area threshold of a hole inside a polygon (in\n                          meters squared). (default: None)\n    --simplify SIMPLIFY   The threshold (in meter) that should be used for\n                          Douglas-Peucker (before buffering, max 500m).\n                          (default: None)\n    --srid SRID           The target SRID (Spatial Reference System Identifier),\n                          all that are supported via PostGIS. (default: None)\n    --quadrantSegments QUADRANTSEGMENTS\n                          The number of quadrant segments (max 8), see:\n                          http://postgis.net/docs/ST_Buffer.html. (default:\n                          None)\n    --frameDuration FRAMEDURATION\n                          The window (in seconds) during which connections are\n                          identified. (default: None)\n    --reverse REVERSE     Whether or not to measure from sources (default) or\n                          towards sources. (default: None)\n    --bikeSpeed BIKESPEED\n                          Bike speed km/h (travelType 'bike' only). (default:\n                          None)\n    --bikeUphill BIKEUPHILL\n                          Penalty applied to uphill bike travel. (default: None)\n    --bikeDownhill BIKEDOWNHILL\n                          Penalty applied to downhill bike travel. (default:\n                          None)\n    --walkSpeed WALKSPEED\n                          Walk speed km/h (travelType 'walk' only). (default:\n                          None)\n    --walkUphill WALKUPHILL\n                          Penalty applied to uphill walk travel. (default: None)\n    --walkDownhill WALKDOWNHILL\n                          Penalty applied to downhill bike travel. (default:\n                          None)\n\nrequired named arguments:\n    --travelTimes TRAVELTIMES [TRAVELTIMES ...]\n                          The travel time in seconds as a list of integers.\n                          (default: None)\n    --serviceUrl SERVICEURL\n                          The URL of the Targomo API endpoint. (default: None)\n    --serviceKey SERVICEKEY\n                          Your personal key for the API. (default: None)\n    --travelType TRAVELTYPE\n                          The travel type for the request: car, walk, bike or\n                          transit (default: None)\n    --source SOURCE       The source as doubles (lat,lng) separated by ';'.\n                          (default: None)\n    --outputDir OUTPUTDIR\n                          The path where to write the output files (default:\n                          None)\n    --outputFilename OUTPUTFILENAME\n                          The the name of the file to write to (default: None)\n</code></pre>\n<h3>FYI</h3>\n<p>not all capabilities are available for all plan levels. Refer to the different <a href=\"https://www.targomo.com/developers/pricing/\" rel=\"nofollow\">plans</a> to see the specifics.</p>\n<h3>Example</h3>\n<pre><code>python -m targomo_python.cli --travelType walk \\\n               --travelTimes 1800 \\\n               --source=\"52.52;13.405\" \\\n               --outputDir=data/ \\\n               --outputFilename=test.geojson \\\n               --serviceKey='Your key here' \\\n               --serviceUrl=http://api.targomo.com/germany/ \\\n               --srid=4326 \\\n</code></pre>\n<h2>Library Usage</h2>\n<p>Example how to use the library from Python code:</p>\n<pre><code>#!/usr/bin/env python3\nfrom targomo_python.rest.ServiceExecutor import ServiceExecutor\nfrom targomo_python.util.TravelOptions import TravelOptions\nfrom targomo_python.util.enum.TravelType import TravelType\n\ntravelOptions = TravelOptions()\ntravelOptions.setServiceKey('INSERT_YOUR_API_KEY_HERE')\ntravelOptions.setTravelType(TravelType.TRANSIT)\ntravelOptions.setServiceUrl('https://api.targomo.com/westcentraleurope/')\ntravelOptions.setTravelTime(10 * 3600)\ntravelOptions.setFrameDuration(3 * 3600)\ntravelOptions.addSource({\"id\": \"source-1\", \"lng\": 53.5532, \"lat\": 10.00644})\ntravelOptions.addTarget({\"id\": \"target-1\", \"lng\": 53.63265, \"lat\": 10.00667})\n\nresponse = ServiceExecutor().execute_service(travelOptions, \"route\")\nprint(response)\n</code></pre>\n<h2>Testing</h2>\n<p>Using unit test and nose, API assumes Python 3.x</p>\n<ul>\n<li>rename <em>tests/config.py.txt</em> to <em>tests/config.py</em>, add appropriate API key</li>\n<li>run <code>nosetests -v</code></li>\n</ul>\n\n          </div>"}, "last_serial": 4378439, "releases": {"0.22": [{"comment_text": "", "digests": {"md5": "c8c5801b705d59b830c0f1bfc4e428d2", "sha256": "54c1755b2c83f74c3cef0dd2e8f5c1eca612808f017248cd521f9fad037b5c55"}, "downloads": -1, "filename": "targomo_python-0.22.tar.gz", "has_sig": false, "md5_digest": "c8c5801b705d59b830c0f1bfc4e428d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8834, "upload_time": "2018-10-12T18:30:15", "upload_time_iso_8601": "2018-10-12T18:30:15.348274Z", "url": "https://files.pythonhosted.org/packages/48/58/cbf276f8027a46ff7ae63009b15cdb8d8355d97d2d3e86e5c3ff524303dc/targomo_python-0.22.tar.gz", "yanked": false}], "0.23": [{"comment_text": "", "digests": {"md5": "d4f23520318fd1b72eafff944da3684c", "sha256": "9071a21dea6466132a96aa4567cbc3c7e7c99c95a1cd5275d8be36b5f92cb867"}, "downloads": -1, "filename": "targomo_python-0.23.tar.gz", "has_sig": false, "md5_digest": "d4f23520318fd1b72eafff944da3684c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8816, "upload_time": "2018-10-15T18:13:39", "upload_time_iso_8601": "2018-10-15T18:13:39.320309Z", "url": "https://files.pythonhosted.org/packages/45/6e/80d7ba3dd424d64ab7e91fe27b9b0ede4f61dedac4e4e7106681940b4fed/targomo_python-0.23.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4f23520318fd1b72eafff944da3684c", "sha256": "9071a21dea6466132a96aa4567cbc3c7e7c99c95a1cd5275d8be36b5f92cb867"}, "downloads": -1, "filename": "targomo_python-0.23.tar.gz", "has_sig": false, "md5_digest": "d4f23520318fd1b72eafff944da3684c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8816, "upload_time": "2018-10-15T18:13:39", "upload_time_iso_8601": "2018-10-15T18:13:39.320309Z", "url": "https://files.pythonhosted.org/packages/45/6e/80d7ba3dd424d64ab7e91fe27b9b0ede4f61dedac4e4e7106681940b4fed/targomo_python-0.23.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:55 2020"}