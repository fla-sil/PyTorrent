{"info": {"author": "Tomasz \u0141akota", "author_email": "tomasz.lakota@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Mpldock\nA matplotlib backend that makes figures dockable.\n\n# Motivation\nWork with something like this:\n![docked layout](assets/docked.png)\ninstead of that:\n![windowed layout](assets/windows.png)\n\n# Features\n* Trivial integration - it is enough to change a matplotlib backend\n* Arrange figures into a convenient layout with drag and drop\n* Integrate mainloop with ipython, jupyter, pycharm console (or run as a standalone application)\n* Preserve a layout and user-modifier state (scale, grid, etc.) through consecutive runs\n\n\n# Installation\n```\npip install mpldock\n```\n# Usage\n## Example\nThe simplest example with layout persistence:\n```python\nimport matplotlib.pyplot as plt\nfrom mpldock import persist_layout\n\nplt.switch_backend('module://mpldock.backend')\npersist_layout('1e2682b5-4408-42a6-ae97-3c11332a96fa')\n\nplt.figure(\"some plot\")\nplt.plot([1, 5, 3])\nplt.figure(\"another plot\")\nplt.plot([5, 0, 1])\n\nplt.show()\n\n``` \n## Set a backend\nSet a matplotlib backend to `module://mpldock.backend`. See [this](https://matplotlib.org/faq/usage_faq.html?highlight=backend#what-is-a-backend) for more.\n\nE.g.:\n```python\nimport matplotlib\nmatplotlib.use('module://mpldock.backend')  # must be done before importing pyplot\nimport matplotlib.pyplot as plt\n```\n\nOr (does not work with jupyter):\n```python\nimport matplotlib.pyplot as plt\nplt.switch_backend('module://mpldock.backend')\n```\n\nAlso using a global configuration (like `matplotlibrc` file or `MPLBACKEND` environment variable) works but not in jupyter or pycharm console, since they hack around many things.\n\n## Integrate mainloop (if desired)\nIn a standalone application it is enough to use typical:\n```python\nplt.show()\n```\nat the end of script, which starts a mainloop and blocks until the application is finished.\n\nIn an ipython or jupyter a `gui` magic may be used:\n```\n%gui qt5\n```\n\n## Layout persistence\nIn order to preserve a layout between application runs, additional line must be added:\n```python\nfrom mpldock import persist_layout\npersist_layout('my_super_unique_identifier')\n```\nThe layout is saved after closing a window or when done manually from a menu (`Layout`/`Save`). The string identifier\n should be different for each application (scripts with the same identifier share the layout).\n\n## More\nSee [examples](examples) for more.\n\n# Major dependencies\n* Python >= 3.6\n* PyQt5 (PySide, PyQt4 coming soon)\n* Matplotlib\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peper0/mpldock", "keywords": "matplotlib,qt5,backend,dock,docking,dockable,layout", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mpldock", "package_url": "https://pypi.org/project/mpldock/", "platform": "", "project_url": "https://pypi.org/project/mpldock/", "project_urls": {"Homepage": "https://github.com/peper0/mpldock"}, "release_url": "https://pypi.org/project/mpldock/0.0.3/", "requires_dist": ["PyQt5", "matplotlib", "appdirs", "pyqtgraph ; extra == 'pyqtgraph'"], "requires_python": ">=3.6", "summary": "Dock matplotlib figures and other widgets.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Mpldock</h1>\n<p>A matplotlib backend that makes figures dockable.</p>\n<h1>Motivation</h1>\n<p>Work with something like this:\n<img alt=\"docked layout\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da4ae1188ff35a2df42a91b7e7ddc48b7e14595a/6173736574732f646f636b65642e706e67\">\ninstead of that:\n<img alt=\"windowed layout\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96312bbb9348d9ab9c7e4499ccccafebc855b2e7/6173736574732f77696e646f77732e706e67\"></p>\n<h1>Features</h1>\n<ul>\n<li>Trivial integration - it is enough to change a matplotlib backend</li>\n<li>Arrange figures into a convenient layout with drag and drop</li>\n<li>Integrate mainloop with ipython, jupyter, pycharm console (or run as a standalone application)</li>\n<li>Preserve a layout and user-modifier state (scale, grid, etc.) through consecutive runs</li>\n</ul>\n<h1>Installation</h1>\n<pre><code>pip install mpldock\n</code></pre>\n<h1>Usage</h1>\n<h2>Example</h2>\n<p>The simplest example with layout persistence:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mpldock</span> <span class=\"kn\">import</span> <span class=\"n\">persist_layout</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">switch_backend</span><span class=\"p\">(</span><span class=\"s1\">'module://mpldock.backend'</span><span class=\"p\">)</span>\n<span class=\"n\">persist_layout</span><span class=\"p\">(</span><span class=\"s1\">'1e2682b5-4408-42a6-ae97-3c11332a96fa'</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"s2\">\"some plot\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"s2\">\"another plot\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">([</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h2>Set a backend</h2>\n<p>Set a matplotlib backend to <code>module://mpldock.backend</code>. See <a href=\"https://matplotlib.org/faq/usage_faq.html?highlight=backend#what-is-a-backend\" rel=\"nofollow\">this</a> for more.</p>\n<p>E.g.:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"s1\">'module://mpldock.backend'</span><span class=\"p\">)</span>  <span class=\"c1\"># must be done before importing pyplot</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n</pre>\n<p>Or (does not work with jupyter):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">switch_backend</span><span class=\"p\">(</span><span class=\"s1\">'module://mpldock.backend'</span><span class=\"p\">)</span>\n</pre>\n<p>Also using a global configuration (like <code>matplotlibrc</code> file or <code>MPLBACKEND</code> environment variable) works but not in jupyter or pycharm console, since they hack around many things.</p>\n<h2>Integrate mainloop (if desired)</h2>\n<p>In a standalone application it is enough to use typical:</p>\n<pre><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>at the end of script, which starts a mainloop and blocks until the application is finished.</p>\n<p>In an ipython or jupyter a <code>gui</code> magic may be used:</p>\n<pre><code>%gui qt5\n</code></pre>\n<h2>Layout persistence</h2>\n<p>In order to preserve a layout between application runs, additional line must be added:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mpldock</span> <span class=\"kn\">import</span> <span class=\"n\">persist_layout</span>\n<span class=\"n\">persist_layout</span><span class=\"p\">(</span><span class=\"s1\">'my_super_unique_identifier'</span><span class=\"p\">)</span>\n</pre>\n<p>The layout is saved after closing a window or when done manually from a menu (<code>Layout</code>/<code>Save</code>). The string identifier\nshould be different for each application (scripts with the same identifier share the layout).</p>\n<h2>More</h2>\n<p>See <a href=\"examples\" rel=\"nofollow\">examples</a> for more.</p>\n<h1>Major dependencies</h1>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li>PyQt5 (PySide, PyQt4 coming soon)</li>\n<li>Matplotlib</li>\n</ul>\n\n          </div>"}, "last_serial": 6158331, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "97a0515a74afc6be4d6df2fdc9eeab62", "sha256": "657252800c3cf6d6974c6d7697e0f4df58f80dde9404c76f9be27e34815962ed"}, "downloads": -1, "filename": "mpldock-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "97a0515a74afc6be4d6df2fdc9eeab62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 11845, "upload_time": "2019-11-10T00:12:51", "upload_time_iso_8601": "2019-11-10T00:12:51.639686Z", "url": "https://files.pythonhosted.org/packages/48/72/960de834f3a359b0ee6007973e180781faa6708e40f7795fefbf37b1eec8/mpldock-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc575e866a833d6bca243f371ef588b3", "sha256": "5b7dcc8267b7caa19c55fb5421b3e895968b2b4b275614a1cfc5f0dc16987500"}, "downloads": -1, "filename": "mpldock-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dc575e866a833d6bca243f371ef588b3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10525, "upload_time": "2019-11-10T00:12:54", "upload_time_iso_8601": "2019-11-10T00:12:54.642420Z", "url": "https://files.pythonhosted.org/packages/75/bd/1801b2859a68802e6c1c2c555764fb6755f32cab42ec4ae2e4a936c8c0e4/mpldock-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "478f0a99a919411b5cb5e54e990c8c3c", "sha256": "e9bc3131906bd88398d23e5653d68d4a9a81bfe9794edcd666ab4328e2900bfa"}, "downloads": -1, "filename": "mpldock-0.0.2.tar.gz", "has_sig": false, "md5_digest": "478f0a99a919411b5cb5e54e990c8c3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9111, "upload_time": "2019-11-14T08:55:12", "upload_time_iso_8601": "2019-11-14T08:55:12.792083Z", "url": "https://files.pythonhosted.org/packages/a7/4d/99bd685fae228e8ad6a6c9886bbf03cc31d2b94f95fe9277f0b4e0dd798d/mpldock-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "23e55105af1a43fb20294afcaecde5e5", "sha256": "77d8d4b85936481411bd3b9f67436b99fa8243fc887d4ef61d26a1135c01cb9c"}, "downloads": -1, "filename": "mpldock-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "23e55105af1a43fb20294afcaecde5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11874, "upload_time": "2019-11-18T21:12:34", "upload_time_iso_8601": "2019-11-18T21:12:34.548225Z", "url": "https://files.pythonhosted.org/packages/f1/47/a8453dd17a0fedbb3cf01a3a8ffe4d9ce1a76be9fd8defff40221eaba54d/mpldock-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0634ada594bd32752342ff6e46dd10fc", "sha256": "95a8e98ab7b8bb6966613c3ddb4cf935317b6a3f2ac53f515397feddcc9518ad"}, "downloads": -1, "filename": "mpldock-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0634ada594bd32752342ff6e46dd10fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10567, "upload_time": "2019-11-18T21:12:36", "upload_time_iso_8601": "2019-11-18T21:12:36.353296Z", "url": "https://files.pythonhosted.org/packages/dc/13/c0c1a88235b58ee5e0476a360ea7d09053834225960ac75916d7620f2150/mpldock-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23e55105af1a43fb20294afcaecde5e5", "sha256": "77d8d4b85936481411bd3b9f67436b99fa8243fc887d4ef61d26a1135c01cb9c"}, "downloads": -1, "filename": "mpldock-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "23e55105af1a43fb20294afcaecde5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11874, "upload_time": "2019-11-18T21:12:34", "upload_time_iso_8601": "2019-11-18T21:12:34.548225Z", "url": "https://files.pythonhosted.org/packages/f1/47/a8453dd17a0fedbb3cf01a3a8ffe4d9ce1a76be9fd8defff40221eaba54d/mpldock-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0634ada594bd32752342ff6e46dd10fc", "sha256": "95a8e98ab7b8bb6966613c3ddb4cf935317b6a3f2ac53f515397feddcc9518ad"}, "downloads": -1, "filename": "mpldock-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0634ada594bd32752342ff6e46dd10fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10567, "upload_time": "2019-11-18T21:12:36", "upload_time_iso_8601": "2019-11-18T21:12:36.353296Z", "url": "https://files.pythonhosted.org/packages/dc/13/c0c1a88235b58ee5e0476a360ea7d09053834225960ac75916d7620f2150/mpldock-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:14 2020"}