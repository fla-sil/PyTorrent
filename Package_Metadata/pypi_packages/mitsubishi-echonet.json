{"info": {"author": "Scott Phillips", "author_email": "jrh@example.com", "bugtrack_url": null, "classifiers": [], "description": "# Mitsubishi Echonet\n\n[![GitHub Release][releases-shield]][releases]\n[![License][license-shield]](LICENSE)\n![Project Maintenance][maintenance-shield]\n[![BuyMeCoffee][buymecoffeebadge]][buymecoffee]\n\n\nA library for interfacing with Mitsubishi HVAC with the ECHONET-lite protocol\nover WiFi adaptors such as the MAC-568IF-E.\n\nIt is specifically designed for use with Home Assistant, and its functionality\nis limited to HVAC systems, but it could be potentially extended for other\nECHONET-lite applications and become a more general purpose library.\n\nSimilar implementations seem to be Node JS middleware running on Docker\ncontainers to interface into the MQTT API however this is designed to be used\nas a straight up library, no middleware, Node JS or Docker containers needed!\n\nIt is designed to work with Python 3.7 out of the box as\nthat was the environment I was working on.\n\n## Instructions\n\nSimplest way to install is to use pip:\n\n```\npip install mitsubishi_echonet\n```\n\n## Basic usage\n### Discover a list of HVAC using:\n```python\naircons = mit.discover('Home air conditioner')\naircon = aircons[0]\n```\n\n### Turn HVAC on or off:\n```python\naircon.on()\naircon.off()\naircon.getOperationalStatus()\n{'status': 'off'}\n```\n\n### Set or Get a HVACs target temperature\n```python\naircon.setOperationalTemperature(25)\naircon.getOperationalTemperature()\n{'set_temperature': 25}\n```\n\n### Set or Get a HVACs mode of operation:\n```python\nsupported modes =  'auto', 'cool', 'heat', 'dry', 'fan_only', 'other'\n\naircon.setMode('cool')\naircon.getMode()\n{'mode': 'cool'}\n```\n### Set or Get a HVACs fan speed:\n\nNote - your HVAC may not support all fan speeds.\n```python\nsupported modes = 'auto', 'minimum', 'low', 'medium-Low', 'medium', 'medium-high', 'high', 'very high', 'max'\n\naircon.setFanSpeed('medium-high')\naircon.getFanSpeed()\n{'fan_speed': 'medium-high'}\n```\n### Get HVAC attributes at once:\n```python\naircon.update()\n{'status': 'On', 'set_temperature': 25, 'fan_speed': 'medium-high', 'room_temperature': 25, 'mode': 'cooling'}\n```\n## Using this library with Home Assistant\n\nNOTE: For Home Assistant users there is now a dedicated repo for the related Home Assistant 'Mitsubishi' custom component that makes use of this Python library:\n(https://github.com/scottyphillips/mitsubishi_hass)\n\nThe custom component examples in the /bin directory will be removed from this\nrepo at a later release and this repo will focus solely on the Python library.\n\n'example.py' in the /bin directory gives you an idea how to drive the\nHVAC directly from Python using this library.\n\n## Thanks\n\nThanks to Jeffro Carr who inspired me to write my own native Python ECHONET\nlibrary for Home Assistant. I could not get his Node JS Docker container\nto work properly on Hass.io :-)\nSome ideas in his own repo got implemented in my own code.\n(https://github.com/jethrocarr/echonetlite-hvac-mqtt-service.git)\n\nAlso big thanks to Futomi Hatano for open sourcing a high quality and\nextremely well documented ECHONET Lite library in Node JS that formed\nthe basis of my reverse engineering efforts.\n(https://github.com/futomi/node-echonet-lite)\n\n## License\n\nThis application is licensed under an MIT license, refer to LICENSE for details.\n\n***\n[mitsubishi_echonet]: https://github.com/scottyphillips/mitsubishi_echonet\n[releases-shield]: https://img.shields.io/github/release/scottyphillips/mitsubishi_echonet.svg?style=for-the-badge\n[releases]: https://github.com/scottyphillips/mitsubishi_echonet/releases\n[license-shield]:https://img.shields.io/github/license/scottyphillips/mitsubishi_echonet?style=for-the-badge\n[buymecoffee]: https://www.buymeacoffee.com/RgKWqyt?style=for-the-badge\n[buymecoffeebadge]: https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?style=for-the-badge\n[maintenance-shield]: https://img.shields.io/badge/Maintainer-Scott%20Phillips-blue?style=for-the-badge\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/mitsubishi_echonet/", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "mitsubishi-echonet", "package_url": "https://pypi.org/project/mitsubishi-echonet/", "platform": "", "project_url": "https://pypi.org/project/mitsubishi-echonet/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/mitsubishi_echonet/"}, "release_url": "https://pypi.org/project/mitsubishi-echonet/0.3/", "requires_dist": null, "requires_python": "", "summary": "A library for interfacing with Mitsubishi HVAC via the Echonet lite protocol.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Mitsubishi Echonet</h1>\n<p><a href=\"https://github.com/scottyphillips/mitsubishi_echonet/releases\" rel=\"nofollow\"><img alt=\"GitHub Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc3c404f5f5feba1ad82b1200e620942800042a9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f73636f7474797068696c6c6970732f6d6974737562697368695f6563686f6e65742e7376673f7374796c653d666f722d7468652d6261646765\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07b840cd7d45ddeb56328059267bdb97f9469d06/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f73636f7474797068696c6c6970732f6d6974737562697368695f6563686f6e65743f7374796c653d666f722d7468652d6261646765\"></a>\n<img alt=\"Project Maintenance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d43184ba22886be042537d75ad98757911c30291/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696e7461696e65722d53636f74742532305068696c6c6970732d626c75653f7374796c653d666f722d7468652d6261646765\">\n<a href=\"https://www.buymeacoffee.com/RgKWqyt?style=for-the-badge\" rel=\"nofollow\"><img alt=\"BuyMeCoffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b92290896045ae968f56eb7d270e7578b4ced575/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275792532306d6525323061253230636f666665652d646f6e6174652d79656c6c6f772e7376673f7374796c653d666f722d7468652d6261646765\"></a></p>\n<p>A library for interfacing with Mitsubishi HVAC with the ECHONET-lite protocol\nover WiFi adaptors such as the MAC-568IF-E.</p>\n<p>It is specifically designed for use with Home Assistant, and its functionality\nis limited to HVAC systems, but it could be potentially extended for other\nECHONET-lite applications and become a more general purpose library.</p>\n<p>Similar implementations seem to be Node JS middleware running on Docker\ncontainers to interface into the MQTT API however this is designed to be used\nas a straight up library, no middleware, Node JS or Docker containers needed!</p>\n<p>It is designed to work with Python 3.7 out of the box as\nthat was the environment I was working on.</p>\n<h2>Instructions</h2>\n<p>Simplest way to install is to use pip:</p>\n<pre><code>pip install mitsubishi_echonet\n</code></pre>\n<h2>Basic usage</h2>\n<h3>Discover a list of HVAC using:</h3>\n<pre><span class=\"n\">aircons</span> <span class=\"o\">=</span> <span class=\"n\">mit</span><span class=\"o\">.</span><span class=\"n\">discover</span><span class=\"p\">(</span><span class=\"s1\">'Home air conditioner'</span><span class=\"p\">)</span>\n<span class=\"n\">aircon</span> <span class=\"o\">=</span> <span class=\"n\">aircons</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<h3>Turn HVAC on or off:</h3>\n<pre><span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">()</span>\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">off</span><span class=\"p\">()</span>\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">getOperationalStatus</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'off'</span><span class=\"p\">}</span>\n</pre>\n<h3>Set or Get a HVACs target temperature</h3>\n<pre><span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">setOperationalTemperature</span><span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">getOperationalTemperature</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'set_temperature'</span><span class=\"p\">:</span> <span class=\"mi\">25</span><span class=\"p\">}</span>\n</pre>\n<h3>Set or Get a HVACs mode of operation:</h3>\n<pre><span class=\"n\">supported</span> <span class=\"n\">modes</span> <span class=\"o\">=</span>  <span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"s1\">'cool'</span><span class=\"p\">,</span> <span class=\"s1\">'heat'</span><span class=\"p\">,</span> <span class=\"s1\">'dry'</span><span class=\"p\">,</span> <span class=\"s1\">'fan_only'</span><span class=\"p\">,</span> <span class=\"s1\">'other'</span>\n\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">setMode</span><span class=\"p\">(</span><span class=\"s1\">'cool'</span><span class=\"p\">)</span>\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">getMode</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'mode'</span><span class=\"p\">:</span> <span class=\"s1\">'cool'</span><span class=\"p\">}</span>\n</pre>\n<h3>Set or Get a HVACs fan speed:</h3>\n<p>Note - your HVAC may not support all fan speeds.</p>\n<pre><span class=\"n\">supported</span> <span class=\"n\">modes</span> <span class=\"o\">=</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"s1\">'minimum'</span><span class=\"p\">,</span> <span class=\"s1\">'low'</span><span class=\"p\">,</span> <span class=\"s1\">'medium-Low'</span><span class=\"p\">,</span> <span class=\"s1\">'medium'</span><span class=\"p\">,</span> <span class=\"s1\">'medium-high'</span><span class=\"p\">,</span> <span class=\"s1\">'high'</span><span class=\"p\">,</span> <span class=\"s1\">'very high'</span><span class=\"p\">,</span> <span class=\"s1\">'max'</span>\n\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">setFanSpeed</span><span class=\"p\">(</span><span class=\"s1\">'medium-high'</span><span class=\"p\">)</span>\n<span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">getFanSpeed</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'fan_speed'</span><span class=\"p\">:</span> <span class=\"s1\">'medium-high'</span><span class=\"p\">}</span>\n</pre>\n<h3>Get HVAC attributes at once:</h3>\n<pre><span class=\"n\">aircon</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'On'</span><span class=\"p\">,</span> <span class=\"s1\">'set_temperature'</span><span class=\"p\">:</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"s1\">'fan_speed'</span><span class=\"p\">:</span> <span class=\"s1\">'medium-high'</span><span class=\"p\">,</span> <span class=\"s1\">'room_temperature'</span><span class=\"p\">:</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"s1\">'mode'</span><span class=\"p\">:</span> <span class=\"s1\">'cooling'</span><span class=\"p\">}</span>\n</pre>\n<h2>Using this library with Home Assistant</h2>\n<p>NOTE: For Home Assistant users there is now a dedicated repo for the related Home Assistant 'Mitsubishi' custom component that makes use of this Python library:\n(<a href=\"https://github.com/scottyphillips/mitsubishi_hass\" rel=\"nofollow\">https://github.com/scottyphillips/mitsubishi_hass</a>)</p>\n<p>The custom component examples in the /bin directory will be removed from this\nrepo at a later release and this repo will focus solely on the Python library.</p>\n<p>'example.py' in the /bin directory gives you an idea how to drive the\nHVAC directly from Python using this library.</p>\n<h2>Thanks</h2>\n<p>Thanks to Jeffro Carr who inspired me to write my own native Python ECHONET\nlibrary for Home Assistant. I could not get his Node JS Docker container\nto work properly on Hass.io :-)\nSome ideas in his own repo got implemented in my own code.\n(<a href=\"https://github.com/jethrocarr/echonetlite-hvac-mqtt-service.git\" rel=\"nofollow\">https://github.com/jethrocarr/echonetlite-hvac-mqtt-service.git</a>)</p>\n<p>Also big thanks to Futomi Hatano for open sourcing a high quality and\nextremely well documented ECHONET Lite library in Node JS that formed\nthe basis of my reverse engineering efforts.\n(<a href=\"https://github.com/futomi/node-echonet-lite\" rel=\"nofollow\">https://github.com/futomi/node-echonet-lite</a>)</p>\n<h2>License</h2>\n<p>This application is licensed under an MIT license, refer to LICENSE for details.</p>\n<hr>\n\n          </div>"}, "last_serial": 6934447, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "349318780e7efac26802c705856cf09f", "sha256": "08ba2d978d7d8790b300902c28c6f0647768daba9e6f79e0eaa3f7ba9a6a2e8b"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.1.tar.gz", "has_sig": false, "md5_digest": "349318780e7efac26802c705856cf09f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19037, "upload_time": "2018-11-27T06:13:52", "upload_time_iso_8601": "2018-11-27T06:13:52.246866Z", "url": "https://files.pythonhosted.org/packages/1c/35/681036e91bb818efdf36f180543a2c72ba489911ee95534362c4642990f2/mitsubishi_echonet-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "43339f8d42bcad59b1148e06c8aa5bb0", "sha256": "5dc87b0109cf4b29f5c5c68c9866b2d135bfb3269e41ba071dfc53e71208db62"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.2.tar.gz", "has_sig": false, "md5_digest": "43339f8d42bcad59b1148e06c8aa5bb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20150, "upload_time": "2018-11-27T09:15:42", "upload_time_iso_8601": "2018-11-27T09:15:42.867442Z", "url": "https://files.pythonhosted.org/packages/82/4c/ac276147291bc16bda27dd65f08ff8b37ad52750699efa3ee09e9228b4e7/mitsubishi_echonet-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f58216c6e8fda298fdad9fda724b8dcf", "sha256": "ee1bf1c47abe21a273e25ee71948e534004810edb23b1f056e62961ee168c407"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f58216c6e8fda298fdad9fda724b8dcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19608, "upload_time": "2018-11-30T11:51:57", "upload_time_iso_8601": "2018-11-30T11:51:57.319118Z", "url": "https://files.pythonhosted.org/packages/29/e0/92a4987c7cfa7b5f146712eb298b8ade31932bc2a34cb28e41cd5aee1394/mitsubishi_echonet-0.1.3.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "af575940281ef72af8ca1d916ffb7ce1", "sha256": "f076ca5864d7df55293ca4d1fb5e036e4225390c3ee4569cb435d3dee020a603"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.6.tar.gz", "has_sig": false, "md5_digest": "af575940281ef72af8ca1d916ffb7ce1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22502, "upload_time": "2018-12-06T22:16:14", "upload_time_iso_8601": "2018-12-06T22:16:14.991558Z", "url": "https://files.pythonhosted.org/packages/b6/ce/89b8b104428d6699ddc2aaa5d333908fa66d996776cc6360a1e46ca34d04/mitsubishi_echonet-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7283dc160d1270b07adc23edb8fee44b", "sha256": "87a3d1b9f8407bcbe9032e4f0452f83e9a579aff57c7984660cd9dbe18c17733"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.7.tar.gz", "has_sig": false, "md5_digest": "7283dc160d1270b07adc23edb8fee44b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22734, "upload_time": "2018-12-07T12:19:18", "upload_time_iso_8601": "2018-12-07T12:19:18.133758Z", "url": "https://files.pythonhosted.org/packages/5a/de/9fe4eb95e753fed69def24207ce0c6bf3ad63207b8844e25a69fca21d8d9/mitsubishi_echonet-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "ef10fb1bd9a3f704871b96b398e3b4ee", "sha256": "d1e3bf8b927eccc8011b4efed7a74bf7006898de41651c507332ac5a2e2de6ba"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.8.tar.gz", "has_sig": false, "md5_digest": "ef10fb1bd9a3f704871b96b398e3b4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22827, "upload_time": "2018-12-08T11:03:10", "upload_time_iso_8601": "2018-12-08T11:03:10.376082Z", "url": "https://files.pythonhosted.org/packages/f1/81/e8d3f64aecacf444d0f76a58d605f793eb2e4949caa1526c48f6cdbfec0e/mitsubishi_echonet-0.1.8.tar.gz", "yanked": false}], "0.1.8.1": [{"comment_text": "", "digests": {"md5": "26f46be24459d68070f18a6193f4e55a", "sha256": "3a1bcec0cf35d488974ccc4824913aaf2deb595ae845771ced38cf8a27d8cff1"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.8.1.tar.gz", "has_sig": false, "md5_digest": "26f46be24459d68070f18a6193f4e55a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22845, "upload_time": "2018-12-08T11:54:47", "upload_time_iso_8601": "2018-12-08T11:54:47.575415Z", "url": "https://files.pythonhosted.org/packages/12/64/0f79f1f939d6f6a891061c703b4ee81800405f02aec3d42893f22b264d01/mitsubishi_echonet-0.1.8.1.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "4ecdddce5a38fc07ae4963bc1f3bb332", "sha256": "962501f7257a0136fc0ba352752f2be25e4229591f835a6d99104485891f6e0a"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.9.tar.gz", "has_sig": false, "md5_digest": "4ecdddce5a38fc07ae4963bc1f3bb332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23010, "upload_time": "2018-12-20T04:45:39", "upload_time_iso_8601": "2018-12-20T04:45:39.858161Z", "url": "https://files.pythonhosted.org/packages/79/ef/91731830a8efe5bb7499ea8a8c19b9a4210718b5b90395412484a4ec2c93/mitsubishi_echonet-0.1.9.tar.gz", "yanked": false}], "0.1.9.1": [{"comment_text": "", "digests": {"md5": "5d6984384aef46a7b74746c54b744940", "sha256": "dc275233a603ed1f49b29f08261e47893b71bd809214d461b15bf13b7a11f410"}, "downloads": -1, "filename": "mitsubishi_echonet-0.1.9.1.tar.gz", "has_sig": false, "md5_digest": "5d6984384aef46a7b74746c54b744940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23017, "upload_time": "2018-12-20T06:24:01", "upload_time_iso_8601": "2018-12-20T06:24:01.526879Z", "url": "https://files.pythonhosted.org/packages/f5/3c/f27bfd9cc3b1d50f472b0001f7ffc0ae4152a414bf6be32ec7b0d4218a32/mitsubishi_echonet-0.1.9.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c04bc0e045d5545c89368452c602220b", "sha256": "663228ef19f32119d333204628ee4242f229bf1c491842db8da386794df566dc"}, "downloads": -1, "filename": "mitsubishi_echonet-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "c04bc0e045d5545c89368452c602220b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 22347, "upload_time": "2019-06-07T11:43:19", "upload_time_iso_8601": "2019-06-07T11:43:19.871340Z", "url": "https://files.pythonhosted.org/packages/d4/c9/d2dceb7107e20c1b51159c7f2a329e54aa98b342628993b48d877eb3e09a/mitsubishi_echonet-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53a09e2ed31487d1fa1c26d40fc4a479", "sha256": "9d63b4d5f53abe33a257efdd10c0b1f0142f2c626769849a4d755f7aa40535c3"}, "downloads": -1, "filename": "mitsubishi_echonet-0.2.tar.gz", "has_sig": false, "md5_digest": "53a09e2ed31487d1fa1c26d40fc4a479", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23524, "upload_time": "2019-06-07T11:46:48", "upload_time_iso_8601": "2019-06-07T11:46:48.678796Z", "url": "https://files.pythonhosted.org/packages/84/e7/ddfe1c8de7f3b7a5889feb05f87fe8fb6deacd970afeef460a6e56e07f39/mitsubishi_echonet-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "14908feb345aaeade640867682a13d12", "sha256": "8ddf2a6d0a9c82efe8d76a50b8f6c8a15f1e0a08715dc6436b7a172b10c7016f"}, "downloads": -1, "filename": "mitsubishi_echonet-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "14908feb345aaeade640867682a13d12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22439, "upload_time": "2019-08-18T03:27:05", "upload_time_iso_8601": "2019-08-18T03:27:05.285526Z", "url": "https://files.pythonhosted.org/packages/a4/47/3f4b60586a00e587e768b3a5d91e1c9b2e4db63ed92f5078c02a67b143d2/mitsubishi_echonet-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17d45b8744032ec5c953cef7d2da8151", "sha256": "9546c30775e5c3689a9b85fcbe2a4f379d75b272ed6fdf87bd213a76f7c28391"}, "downloads": -1, "filename": "mitsubishi_echonet-0.2.1.tar.gz", "has_sig": false, "md5_digest": "17d45b8744032ec5c953cef7d2da8151", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23503, "upload_time": "2019-08-18T03:27:13", "upload_time_iso_8601": "2019-08-18T03:27:13.828255Z", "url": "https://files.pythonhosted.org/packages/55/a3/2754ffd4938fa985ccd78f15bba30b76c7876a8be33481a4916cd9057c09/mitsubishi_echonet-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "db41c13a888610a7b0116ae44273a7fe", "sha256": "93f152f0c0d3e05cd9e9f3dc98061493253fb1f6621e6e6c7453a8681fe126bd"}, "downloads": -1, "filename": "mitsubishi_echonet-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "db41c13a888610a7b0116ae44273a7fe", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 22205, "upload_time": "2020-03-18T09:05:25", "upload_time_iso_8601": "2020-03-18T09:05:25.492533Z", "url": "https://files.pythonhosted.org/packages/5e/5a/d5c44a5fde88b6e6741adf8c7c97be21788d993552130b46e0423a776941/mitsubishi_echonet-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9ce5e873234fcf02aefbc25a8c2bdcd", "sha256": "1d8b46eb0f32c600238b5b8461638777ea296b84cbb3f179f148236774bacc83"}, "downloads": -1, "filename": "mitsubishi_echonet-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b9ce5e873234fcf02aefbc25a8c2bdcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23153, "upload_time": "2020-03-18T09:05:34", "upload_time_iso_8601": "2020-03-18T09:05:34.142782Z", "url": "https://files.pythonhosted.org/packages/d4/69/28e199751e426fc1f80ff99fd39fca28060637d79bb18e98bc3d8c75c36e/mitsubishi_echonet-0.2.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "739d70d78b26f261b9ef8f9b1eff29e4", "sha256": "1be29849e9816959ebe8b1e6df813eae27a5d3905a9ca81cd024b722fb694b46"}, "downloads": -1, "filename": "mitsubishi_echonet-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "739d70d78b26f261b9ef8f9b1eff29e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22245, "upload_time": "2020-04-02T09:45:59", "upload_time_iso_8601": "2020-04-02T09:45:59.483279Z", "url": "https://files.pythonhosted.org/packages/11/10/aaa53d583591514a9f9b7ceee7182a93f03a621df37b89debb78efe339a6/mitsubishi_echonet-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d678973b6e359863ef1d6b0195ef352", "sha256": "c9d4c38e4754b97d852acc0943fbcc43266308aa7100b7090c2f174fbfcb112a"}, "downloads": -1, "filename": "mitsubishi_echonet-0.3.tar.gz", "has_sig": false, "md5_digest": "6d678973b6e359863ef1d6b0195ef352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23045, "upload_time": "2020-04-02T09:46:01", "upload_time_iso_8601": "2020-04-02T09:46:01.324370Z", "url": "https://files.pythonhosted.org/packages/0c/9b/ae0bff771fc455542cf54f4d5d622a0c1d6bba59ef45d17a41cc77a5e415/mitsubishi_echonet-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "739d70d78b26f261b9ef8f9b1eff29e4", "sha256": "1be29849e9816959ebe8b1e6df813eae27a5d3905a9ca81cd024b722fb694b46"}, "downloads": -1, "filename": "mitsubishi_echonet-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "739d70d78b26f261b9ef8f9b1eff29e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22245, "upload_time": "2020-04-02T09:45:59", "upload_time_iso_8601": "2020-04-02T09:45:59.483279Z", "url": "https://files.pythonhosted.org/packages/11/10/aaa53d583591514a9f9b7ceee7182a93f03a621df37b89debb78efe339a6/mitsubishi_echonet-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d678973b6e359863ef1d6b0195ef352", "sha256": "c9d4c38e4754b97d852acc0943fbcc43266308aa7100b7090c2f174fbfcb112a"}, "downloads": -1, "filename": "mitsubishi_echonet-0.3.tar.gz", "has_sig": false, "md5_digest": "6d678973b6e359863ef1d6b0195ef352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23045, "upload_time": "2020-04-02T09:46:01", "upload_time_iso_8601": "2020-04-02T09:46:01.324370Z", "url": "https://files.pythonhosted.org/packages/0c/9b/ae0bff771fc455542cf54f4d5d622a0c1d6bba59ef45d17a41cc77a5e415/mitsubishi_echonet-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:57 2020"}