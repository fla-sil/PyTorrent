{"info": {"author": "Chris Mungall", "author_email": "cmungall+github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "sparqlprog for python\n=====================\n\n|Build Status| |PyPI|\n\nThis module wraps\n`sparqlprog <https://github.com/cmungall/sparqlprog>`__, providing a\nPython API for executing logic program queries over SPARQL endpoints.\n\nExample:\n\n.. code:: python\n\n   from prologterms import TermGenerator, PrologRenderer, Program, Var\n   from sparqlprog import SPARQLProg\n   P = TermGenerator()\n\n   S = SPARQLProg(endpoint='wd')\n   C = Var('C')\n   N = Var('N')\n\n   # logic programming query: continent(C), enlabel(C,N)\n   query = (P.continent(C), P.enlabel(C, N))\n   for r in S.query(query):\n       print(f\"{r['C']} {r['N']}\")\n\nExample Notebooks\n-----------------\n\nSee:\n\n-  `Notebook_01_Basics <Notebook_01_Basics.ipynb>`__\n-  `Notebook_02_Programs <Notebook_02_Programs.ipynb>`__\n\nInstallation\n------------\n\nTo install\n\n::\n\n   python3 -m venv venv\n   source venv/bin/activate\n   export PYTHONPATH=.:$PYTHONPATH\n   pip install -r requirements.txt \n\nYou will need access to a sparqlprog service. You can use the public one\non Heroku (default) or run your own.\n\nRunning your own is easy if you have Docker:\n\n::\n\n   docker run -p 9083:9083 cmungall/sparqlprog\n\nYou can then pass ``http://localhost:9083`` as the service URL\nparameter. E.g\n\nQuery wikidata for continents and their names:\n\n::\n\n    ./sparqlprog.py -u http://localhost:9083 -e wd \u201ccontinent(X),enlabel(X,N)\u201d\n\nYou can also use the default service on heroku, but it is not guaranteed\nto be running:\n\n::\n\n    ./sparqlprog.py -e wd \u201ccontinent(X), enlabel(X,N)\u201d\n\n.. |Build Status| image:: https://travis-ci.org/cmungall/sparqlprog-python.svg?branch=master\n  :target: https://travis-ci.org/cmungall/sparqlprog-python\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/sparqlprog.svg\n   :target: https://pypi.python.org/pypi/sparqlprog\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cmungall/sparqlprog-python", "keywords": "prolog,swipl,swi-prolog,logic programming,pengines,sparql,semantic web,owl", "license": "BSD3", "maintainer": "", "maintainer_email": "", "name": "sparqlprog", "package_url": "https://pypi.org/project/sparqlprog/", "platform": "", "project_url": "https://pypi.org/project/sparqlprog/", "project_urls": {"Homepage": "https://github.com/cmungall/sparqlprog-python"}, "release_url": "https://pypi.org/project/sparqlprog/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Execute logic program queries against a remote SPARQL endpoint", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/cmungall/sparqlprog-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5534a98ff9c8683fafc0766f7e7b17c4ac80512/68747470733a2f2f7472617669732d63692e6f72672f636d756e67616c6c2f73706172716c70726f672d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/sparqlprog\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf0fb9b7a1905e0e7b7d6c7a8b45296c24a7b137/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73706172716c70726f672e737667\"></a></p>\n<p>This module wraps\n<a href=\"https://github.com/cmungall/sparqlprog\" rel=\"nofollow\">sparqlprog</a>, providing a\nPython API for executing logic program queries over SPARQL endpoints.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">prologterms</span> <span class=\"kn\">import</span> <span class=\"n\">TermGenerator</span><span class=\"p\">,</span> <span class=\"n\">PrologRenderer</span><span class=\"p\">,</span> <span class=\"n\">Program</span><span class=\"p\">,</span> <span class=\"n\">Var</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sparqlprog</span> <span class=\"kn\">import</span> <span class=\"n\">SPARQLProg</span>\n<span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">TermGenerator</span><span class=\"p\">()</span>\n\n<span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">SPARQLProg</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s1\">'wd'</span><span class=\"p\">)</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">Var</span><span class=\"p\">(</span><span class=\"s1\">'C'</span><span class=\"p\">)</span>\n<span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"n\">Var</span><span class=\"p\">(</span><span class=\"s1\">'N'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># logic programming query: continent(C), enlabel(C,N)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">continent</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">),</span> <span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">enlabel</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">S</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s1\">'C'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s1\">'N'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<div id=\"example-notebooks\">\n<h2>Example Notebooks</h2>\n<p>See:</p>\n<ul>\n<li><a href=\"Notebook_01_Basics.ipynb\" rel=\"nofollow\">Notebook_01_Basics</a></li>\n<li><a href=\"Notebook_02_Programs.ipynb\" rel=\"nofollow\">Notebook_02_Programs</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install</p>\n<pre>python3 -m venv venv\nsource venv/bin/activate\nexport PYTHONPATH=.:$PYTHONPATH\npip install -r requirements.txt\n</pre>\n<p>You will need access to a sparqlprog service. You can use the public one\non Heroku (default) or run your own.</p>\n<p>Running your own is easy if you have Docker:</p>\n<pre>docker run -p 9083:9083 cmungall/sparqlprog\n</pre>\n<p>You can then pass <tt><span class=\"pre\">http://localhost:9083</span></tt> as the service URL\nparameter. E.g</p>\n<p>Query wikidata for continents and their names:</p>\n<pre>./sparqlprog.py -u http://localhost:9083 -e wd \u201ccontinent(X),enlabel(X,N)\u201d\n</pre>\n<p>You can also use the default service on heroku, but it is not guaranteed\nto be running:</p>\n<pre>./sparqlprog.py -e wd \u201ccontinent(X), enlabel(X,N)\u201d\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5668309, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "fb532bc9b31325317379693fc11ac4d2", "sha256": "4f0f16bc91b48e9e38d2c75a1fd6ed93938bbb0389109caca7a83735f2f561e9"}, "downloads": -1, "filename": "sparqlprog-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fb532bc9b31325317379693fc11ac4d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4148, "upload_time": "2019-08-12T19:06:19", "upload_time_iso_8601": "2019-08-12T19:06:19.303638Z", "url": "https://files.pythonhosted.org/packages/9a/85/adcdbd1bb4f26078f71f38f93cab3b57eb6e2533fe545d5605f93ae4312d/sparqlprog-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "460e43bec39c3c26c7432f157f4c71eb", "sha256": "2297d296e92f6de4feb364aad09be5add1d02a7ac8769ce3a37323d15147bab3"}, "downloads": -1, "filename": "sparqlprog-0.0.2.tar.gz", "has_sig": false, "md5_digest": "460e43bec39c3c26c7432f157f4c71eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3388, "upload_time": "2019-08-12T19:06:21", "upload_time_iso_8601": "2019-08-12T19:06:21.375204Z", "url": "https://files.pythonhosted.org/packages/a9/f7/30309ed5a574fd5d3640b9cfac1a8b0731ec2f5e54c0c481244f7e8c97a2/sparqlprog-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d8c472851279af44c1a79b6ab74824f4", "sha256": "15a96b0dd045278d23ed82bdb53aa6abc014828c55a4961684232646a07d7bf5"}, "downloads": -1, "filename": "sparqlprog-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d8c472851279af44c1a79b6ab74824f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4927, "upload_time": "2019-08-12T19:17:27", "upload_time_iso_8601": "2019-08-12T19:17:27.687517Z", "url": "https://files.pythonhosted.org/packages/d7/b6/2f7b8e364f4bdf0d17bc9b4d1f58a1e79edd1fb0604296b4a061e77cac81/sparqlprog-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39e5968e27337271c6baa753b918b6db", "sha256": "3ae8b69cb8b16618a75459bc0f24a650433df33bdc6a10acfa02d1ae1b3e45d2"}, "downloads": -1, "filename": "sparqlprog-0.0.3.tar.gz", "has_sig": false, "md5_digest": "39e5968e27337271c6baa753b918b6db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3772, "upload_time": "2019-08-12T19:17:29", "upload_time_iso_8601": "2019-08-12T19:17:29.238780Z", "url": "https://files.pythonhosted.org/packages/8f/50/be95213d90c7cd08231b7f202741338aa3e8feae94e65f256a30255e1d97/sparqlprog-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8c472851279af44c1a79b6ab74824f4", "sha256": "15a96b0dd045278d23ed82bdb53aa6abc014828c55a4961684232646a07d7bf5"}, "downloads": -1, "filename": "sparqlprog-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d8c472851279af44c1a79b6ab74824f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4927, "upload_time": "2019-08-12T19:17:27", "upload_time_iso_8601": "2019-08-12T19:17:27.687517Z", "url": "https://files.pythonhosted.org/packages/d7/b6/2f7b8e364f4bdf0d17bc9b4d1f58a1e79edd1fb0604296b4a061e77cac81/sparqlprog-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39e5968e27337271c6baa753b918b6db", "sha256": "3ae8b69cb8b16618a75459bc0f24a650433df33bdc6a10acfa02d1ae1b3e45d2"}, "downloads": -1, "filename": "sparqlprog-0.0.3.tar.gz", "has_sig": false, "md5_digest": "39e5968e27337271c6baa753b918b6db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3772, "upload_time": "2019-08-12T19:17:29", "upload_time_iso_8601": "2019-08-12T19:17:29.238780Z", "url": "https://files.pythonhosted.org/packages/8f/50/be95213d90c7cd08231b7f202741338aa3e8feae94e65f256a30255e1d97/sparqlprog-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:51 2020"}