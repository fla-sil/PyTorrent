{"info": {"author": "northfoxz", "author_email": "firstera15@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Spine API\nAccess your ML models through HTTP requests.\n\nIt is simple, clean, and easy to use. It works with jupyter notebooks too.\n\n```console\nPOST http://your_server_ip/api/your_project/your_function => your_result\n```\n\n### Installation\n```bash\n$ pip instal spine-api\n```\n\n## Usage\n**1. Import the library**\n```Python\nfrom spine import Connection\n```\n\n**2. Define your inference function**\n```Python\ndef hello_function (input):\n  # ...\n  # do something with input\n  # ...\n  return output\n```\n\n**3. Specify ```name``` and ```description``` to initialize your project**\n```Python\nspine_connection = Connection(\n  project_name=\"hello_project\",\n  description=\"An inference API for my ML model\",\n  author=\"\", # Optional\n  link=\"\" # Optional\n)\n```\n\n**4. Register your function(s)**\n```Python\nspine_connection.register_function(\n  pathname='hello_function',\n  function=hello_function,\n  # ============ Optional ==================\n  # Set True if you want to protect this API\n  requiresAuth=False,\n  authToken=\"xxx\",\n  # ========================================\n)\n```\nThe function will be accessible through ```/api/hello_project/hello_function```\n\n**5. Run**\n```\nspine_connection.run()\n```\nThat's it! You can now communicate with your ML model through HTTP post requests.\n\n**6. Send requests**\n\n**Note** You have to first run ```JSON.stringify(input)``` for the request data.\n```javascript\nconst data = {\n  input: JSON.stringify(YOUR_INPUT)\n  // ============ Optional ==================\n  // Required if the API is protected\n  authToken: \"xxx\",\n  // ========================================\n}\n```\n\nPost request body to the endpoint.\n```javascript\nconst url = 'https://spineapi.com/api/hello_function';\n\nfetch(\n  url,\n  {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: new Headers({ 'Content-Type': 'application/json' })\n  }\n)\n.then(res => res.json())\n.catch(error => console.error('Error:', error))\n.then(response => console.log('Success:', response));\n```\n\n## Self hosted server\n**Prerequisites**\n1. Make sure your server is accessible through port 3000\n2. Have Node.js installed on your server\n\n**Installation**\n```bash\n$ git clone https://github.com/spineapi/spine-api\n$ cd spine-api/server\n$ npm install\n```\n\n**Run server**\n```bash\n$ node server.js\n```\nNow you can access your server through http://YOUR_SERVER_IP:3000. Copy the passcode.\n\n**Specify url and passcode**\nFor self hosted server, you'll have to specify url and passcode.\n```Python\nfrom spine import Connection\nspine_connection = Connection(\n  name=\"hello_project\",\n  description=\"a demo app for my ML model\",\n  url=\"http://YOUR_SERVER_IP:3000\",\n  passcode=\"YOUR_PASSCODE\"\n)\n```\nFor other steps, it's all the same.\n\n# License\n[MIT](https://github.com/spineapi/spine-api/blob/master/LICENSE)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/spineapi/spine-api", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spineapi", "package_url": "https://pypi.org/project/spineapi/", "platform": "", "project_url": "https://pypi.org/project/spineapi/", "project_urls": {"Homepage": "https://github.com/spineapi/spine-api"}, "release_url": "https://pypi.org/project/spineapi/0.0.2/", "requires_dist": ["python-socketio[client]"], "requires_python": ">=3.6", "summary": "A simple machine learning inference library.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Spine API</h1>\n<p>Access your ML models through HTTP requests.</p>\n<p>It is simple, clean, and easy to use. It works with jupyter notebooks too.</p>\n<pre><span class=\"go\">POST http://your_server_ip/api/your_project/your_function =&gt; your_result</span>\n</pre>\n<h3>Installation</h3>\n<pre>$ pip instal spine-api\n</pre>\n<h2>Usage</h2>\n<p><strong>1. Import the library</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spine</span> <span class=\"kn\">import</span> <span class=\"n\">Connection</span>\n</pre>\n<p><strong>2. Define your inference function</strong></p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">hello_function</span> <span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">):</span>\n  <span class=\"c1\"># ...</span>\n  <span class=\"c1\"># do something with input</span>\n  <span class=\"c1\"># ...</span>\n  <span class=\"k\">return</span> <span class=\"n\">output</span>\n</pre>\n<p><strong>3. Specify <code>name</code> and <code>description</code> to initialize your project</strong></p>\n<pre><span class=\"n\">spine_connection</span> <span class=\"o\">=</span> <span class=\"n\">Connection</span><span class=\"p\">(</span>\n  <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"hello_project\"</span><span class=\"p\">,</span>\n  <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"An inference API for my ML model\"</span><span class=\"p\">,</span>\n  <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"c1\"># Optional</span>\n  <span class=\"n\">link</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span> <span class=\"c1\"># Optional</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>4. Register your function(s)</strong></p>\n<pre><span class=\"n\">spine_connection</span><span class=\"o\">.</span><span class=\"n\">register_function</span><span class=\"p\">(</span>\n  <span class=\"n\">pathname</span><span class=\"o\">=</span><span class=\"s1\">'hello_function'</span><span class=\"p\">,</span>\n  <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"n\">hello_function</span><span class=\"p\">,</span>\n  <span class=\"c1\"># ============ Optional ==================</span>\n  <span class=\"c1\"># Set True if you want to protect this API</span>\n  <span class=\"n\">requiresAuth</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n  <span class=\"n\">authToken</span><span class=\"o\">=</span><span class=\"s2\">\"xxx\"</span><span class=\"p\">,</span>\n  <span class=\"c1\"># ========================================</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The function will be accessible through <code>/api/hello_project/hello_function</code></p>\n<p><strong>5. Run</strong></p>\n<pre><code>spine_connection.run()\n</code></pre>\n<p>That's it! You can now communicate with your ML model through HTTP post requests.</p>\n<p><strong>6. Send requests</strong></p>\n<p><strong>Note</strong> You have to first run <code>JSON.stringify(input)</code> for the request data.</p>\n<pre><span class=\"kr\">const</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">input</span><span class=\"o\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">YOUR_INPUT</span><span class=\"p\">)</span>\n  <span class=\"c1\">// ============ Optional ==================</span>\n  <span class=\"c1\">// Required if the API is protected</span>\n  <span class=\"nx\">authToken</span><span class=\"o\">:</span> <span class=\"s2\">\"xxx\"</span><span class=\"p\">,</span>\n  <span class=\"c1\">// ========================================</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Post request body to the endpoint.</p>\n<pre><span class=\"kr\">const</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://spineapi.com/api/hello_function'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">fetch</span><span class=\"p\">(</span>\n  <span class=\"nx\">url</span><span class=\"p\">,</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">method</span><span class=\"o\">:</span> <span class=\"s1\">'POST'</span><span class=\"p\">,</span>\n    <span class=\"nx\">body</span><span class=\"o\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">),</span>\n    <span class=\"nx\">headers</span><span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nx\">Headers</span><span class=\"p\">({</span> <span class=\"s1\">'Content-Type'</span><span class=\"o\">:</span> <span class=\"s1\">'application/json'</span> <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">res</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">())</span>\n<span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">error</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"s1\">'Error:'</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">))</span>\n<span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">response</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Success:'</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">));</span>\n</pre>\n<h2>Self hosted server</h2>\n<p><strong>Prerequisites</strong></p>\n<ol>\n<li>Make sure your server is accessible through port 3000</li>\n<li>Have Node.js installed on your server</li>\n</ol>\n<p><strong>Installation</strong></p>\n<pre>$ git clone https://github.com/spineapi/spine-api\n$ <span class=\"nb\">cd</span> spine-api/server\n$ npm install\n</pre>\n<p><strong>Run server</strong></p>\n<pre>$ node server.js\n</pre>\n<p>Now you can access your server through http://YOUR_SERVER_IP:3000. Copy the passcode.</p>\n<p><strong>Specify url and passcode</strong>\nFor self hosted server, you'll have to specify url and passcode.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spine</span> <span class=\"kn\">import</span> <span class=\"n\">Connection</span>\n<span class=\"n\">spine_connection</span> <span class=\"o\">=</span> <span class=\"n\">Connection</span><span class=\"p\">(</span>\n  <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"hello_project\"</span><span class=\"p\">,</span>\n  <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"a demo app for my ML model\"</span><span class=\"p\">,</span>\n  <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"http://YOUR_SERVER_IP:3000\"</span><span class=\"p\">,</span>\n  <span class=\"n\">passcode</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR_PASSCODE\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For other steps, it's all the same.</p>\n<h1>License</h1>\n<p><a href=\"https://github.com/spineapi/spine-api/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6375662, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "522fe067c39f86a8870b219380341045", "sha256": "14454ab21ea690e299d7f1d05e644c4204cd558874dc10598785d4ca82db7063"}, "downloads": -1, "filename": "spineapi-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "522fe067c39f86a8870b219380341045", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5159, "upload_time": "2019-12-30T15:18:59", "upload_time_iso_8601": "2019-12-30T15:18:59.669619Z", "url": "https://files.pythonhosted.org/packages/39/02/c5ffdb1201b37eb8dfcd128dfeb132ea813d38d612682cfde28d5415bb5e/spineapi-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "462aaa1e49fb5917b66e23d30510a272", "sha256": "f2bf4ac8af4e7afe421609a78c90151ffcf4b92360c1281dcd80d597be648271"}, "downloads": -1, "filename": "spineapi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "462aaa1e49fb5917b66e23d30510a272", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3384, "upload_time": "2019-12-30T15:19:01", "upload_time_iso_8601": "2019-12-30T15:19:01.831228Z", "url": "https://files.pythonhosted.org/packages/39/4c/62c785626673f59016e57f5c420dccacdf8921e6d82dcc1cbd37658dbe43/spineapi-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ec780901c149f44dea204c4274c9f253", "sha256": "97ae9bfe415a32b06c0171723e49737b3aa9cd934d16e01c2fe3c3f645cef973"}, "downloads": -1, "filename": "spineapi-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ec780901c149f44dea204c4274c9f253", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5158, "upload_time": "2019-12-30T15:20:04", "upload_time_iso_8601": "2019-12-30T15:20:04.813907Z", "url": "https://files.pythonhosted.org/packages/29/86/0dd7cb151b7ef449e2309410e43ff9406d993ad0cd1000a2af3398c35414/spineapi-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f1397ee6aaa2c0c457aa62fdb5fa509", "sha256": "885f6724bababfbbba527142fb7aef5695c13041826eda4ac22a0c77468d7cba"}, "downloads": -1, "filename": "spineapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4f1397ee6aaa2c0c457aa62fdb5fa509", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3375, "upload_time": "2019-12-30T15:20:08", "upload_time_iso_8601": "2019-12-30T15:20:08.534485Z", "url": "https://files.pythonhosted.org/packages/da/1a/220a08c5d56297f77c718b5adf52d767c3dae24f1d3ab8e1a16fd78a10bb/spineapi-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec780901c149f44dea204c4274c9f253", "sha256": "97ae9bfe415a32b06c0171723e49737b3aa9cd934d16e01c2fe3c3f645cef973"}, "downloads": -1, "filename": "spineapi-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ec780901c149f44dea204c4274c9f253", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5158, "upload_time": "2019-12-30T15:20:04", "upload_time_iso_8601": "2019-12-30T15:20:04.813907Z", "url": "https://files.pythonhosted.org/packages/29/86/0dd7cb151b7ef449e2309410e43ff9406d993ad0cd1000a2af3398c35414/spineapi-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f1397ee6aaa2c0c457aa62fdb5fa509", "sha256": "885f6724bababfbbba527142fb7aef5695c13041826eda4ac22a0c77468d7cba"}, "downloads": -1, "filename": "spineapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4f1397ee6aaa2c0c457aa62fdb5fa509", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3375, "upload_time": "2019-12-30T15:20:08", "upload_time_iso_8601": "2019-12-30T15:20:08.534485Z", "url": "https://files.pythonhosted.org/packages/da/1a/220a08c5d56297f77c718b5adf52d767c3dae24f1d3ab8e1a16fd78a10bb/spineapi-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:50 2020"}