{"info": {"author": "W. Trevor King", "author_email": "wking@drexel.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Games/Entertainment :: Board Games"], "description": "PyRisk\n======\n\nThis is a Python engine and interface for building games similar to\nthe 1957 La Conqu\u00eate du Monde by Albert Lamorisse (of \"Le Ballon rouge\n/ The Red Balloon\" fame).  The game is perhaps better known as Risk,\nand is produced by Parker Brothers (now a division of Hasbro).\n\nBenefits over other open source implementations:\n\n  * simple, extensible implementation\n  * play-by-email\n\n\nGetting PyRisk\n==============\n\nPyRisk is available as a Git repository::\n\n    $ git clone git://tremily.us/pyrisk.git\n\nThe most recent commit is also available as a gzipped tarball at::\n\n    http://git.tremily.us/?p=pyrisk.git;a=snapshot;h=HEAD;sf=tgz\n\nOnce you get the source, installation is via Docutils::\n\n    pyrisk$ python setup.py build\n    pyrisk$ python setup.py install\n\n\nGetting started\n===============\n\nTo setup play-by-email, you'll have to have some method to redirect\nappropriate messages into a named pipe.  With procmail, that will\nlook something like::\n\n    :0\n    * ^Subject:.*\\[PyRisk.*\n    {\n      :0 wc\n      /path/to/named/pipe\n    \n      :0\n      | /bin/echo -e '\\000' >> /path/to/named/pipe\n    }\n\nThe echo command appends a NULL byte to the FIFO, which (I think), helps\nthe read() in _get_msg break at the appropriate point.\n\nOnce you have the procmail rule setup, just add your EmailPlayers to\nyour game and go::\n\n    from pyrisk.base import generate_earth, Player, Engine\n    from pyrisk.player.email import IncomingEmailDispatcher, \\\n        OutgoingEmailDispatcher, EmailPlayer\n    from pyrisk.graphics import WorldRenderer\n    world = generate_earth()\n    ied = IncomingEmailDispatcher(fifo_path='/tmp/pyrisk.in')\n    oed = OutgoingEmailDispatcher(return_address='server@example.com')\n    wr = WorldRenderer()\n    players = [EmailPlayer('Alice', 'alice@big.edu', ied, oed, wr),\n               EmailPlayer('Bob', 'bob@fish.net', ied, oed, wr),\n               Player('Charlie')]\n    e = Engine(world, players)\n    e.run()\n    ied.close()", "description_content_type": null, "docs_url": null, "download_url": "http://git.tremily.us/?p=pyrisk.git;a=snapshot;h=0.1;sf=tgz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://blog.tremily.us/posts/pyrisk/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "PyRisk", "package_url": "https://pypi.org/project/PyRisk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PyRisk/", "project_urls": {"Download": "http://git.tremily.us/?p=pyrisk.git;a=snapshot;h=0.1;sf=tgz", "Homepage": "http://blog.tremily.us/posts/pyrisk/"}, "release_url": "https://pypi.org/project/PyRisk/0.1/", "requires_dist": null, "requires_python": null, "summary": "Python Risk engine with assorted player interfaces.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyrisk\">\n<h2>PyRisk</h2>\n<p>This is a Python engine and interface for building games similar to\nthe 1957 La Conqu\u00eate du Monde by Albert Lamorisse (of \u201cLe Ballon rouge\n/ The Red Balloon\u201d fame).  The game is perhaps better known as Risk,\nand is produced by Parker Brothers (now a division of Hasbro).</p>\n<p>Benefits over other open source implementations:</p>\n<blockquote>\n<ul>\n<li>simple, extensible implementation</li>\n<li>play-by-email</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"getting-pyrisk\">\n<h2>Getting PyRisk</h2>\n<p>PyRisk is available as a Git repository:</p>\n<pre>$ git clone git://tremily.us/pyrisk.git\n</pre>\n<p>The most recent commit is also available as a gzipped tarball at:</p>\n<pre>http://git.tremily.us/?p=pyrisk.git;a=snapshot;h=HEAD;sf=tgz\n</pre>\n<p>Once you get the source, installation is via Docutils:</p>\n<pre>pyrisk$ python setup.py build\npyrisk$ python setup.py install\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>To setup play-by-email, you\u2019ll have to have some method to redirect\nappropriate messages into a named pipe.  With procmail, that will\nlook something like:</p>\n<pre>:0\n* ^Subject:.*\\[PyRisk.*\n{\n  :0 wc\n  /path/to/named/pipe\n\n  :0\n  | /bin/echo -e '\\000' &gt;&gt; /path/to/named/pipe\n}\n</pre>\n<p>The echo command appends a NULL byte to the FIFO, which (I think), helps\nthe read() in _get_msg break at the appropriate point.</p>\n<p>Once you have the procmail rule setup, just add your EmailPlayers to\nyour game and go:</p>\n<pre>from pyrisk.base import generate_earth, Player, Engine\nfrom pyrisk.player.email import IncomingEmailDispatcher, \\\n    OutgoingEmailDispatcher, EmailPlayer\nfrom pyrisk.graphics import WorldRenderer\nworld = generate_earth()\nied = IncomingEmailDispatcher(fifo_path='/tmp/pyrisk.in')\noed = OutgoingEmailDispatcher(return_address='server@example.com')\nwr = WorldRenderer()\nplayers = [EmailPlayer('Alice', 'alice@big.edu', ied, oed, wr),\n           EmailPlayer('Bob', 'bob@fish.net', ied, oed, wr),\n           Player('Charlie')]\ne = Engine(world, players)\ne.run()\nied.close()\n</pre>\n</div>\n\n          </div>"}, "last_serial": 380996, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 02:57:45 2020"}