{"info": {"author": "Ross MacArthur", "author_email": "ross@macarthur.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython"], "description": "# locks\n\n[![PyPI version](https://img.shields.io/pypi/v/locks.svg?style=flat-square)](https://pypi.org/project/locks/)\n[![Build status](https://img.shields.io/travis/rossmacarthur/locks/master.svg?style=flat-square)](https://travis-ci.org/rossmacarthur/locks)\n\nPOSIX file system locking using [flock](https://linux.die.net/man/2/flock).\n\n## Getting started\n\nInstall this package with\n\n```sh\npip install locks\n```\n\n## Usage\n\nThe simplest usage is to block indefinitely until the lock is acquired\n\n```python\nfrom locks import Mutex\n\nwith Mutex('/tmp/file.lock'):\n    # do exclusive stuff here\n```\n\nAlternatively, block until a timeout is reached\n\n```python\nfrom locks import Mutex\n\ntry:\n    with Mutex('/tmp/file.lock', timeout=0.5):\n        # do exclusive stuff here\nexcept BlockingIOError:\n    # handle the failure to acquire the lock\n```\n\nFinally, a common paradigm is to attempt to acquire the lock without blocking,\ndo something, and then block indefinitely. Here `callback` will be called once\nif we cannot immediately acquire the lock, and then we will block indefinitely.\n\n```python\ndef callback():\n    print(\"Blocking: waiting for file lock on '/tmp/file.lock'\")\n\nwith Mutex('/tmp/file.lock', callback=callback):\n    # do exclusive stuff here\n```\n\nIf both `callback` and `timeout` are used then we will attempt to\nacquire the lock until the `timeout` is reached, and then we will block\nindefinitely.\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE] file.\n\n[LICENSE]: LICENSE\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/rossmacarthur/locks/archive/0.1.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rossmacarthur/locks", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "locks", "package_url": "https://pypi.org/project/locks/", "platform": "", "project_url": "https://pypi.org/project/locks/", "project_urls": {"Download": "https://github.com/rossmacarthur/locks/archive/0.1.1.tar.gz", "Homepage": "https://github.com/rossmacarthur/locks", "Issue Tracker": "https://github.com/rossmacarthur/locks/issues"}, "release_url": "https://pypi.org/project/locks/0.1.1/", "requires_dist": ["monotonic (>=1.0)"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "POSIX file system locking using flock", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>locks</h1>\n<p><a href=\"https://pypi.org/project/locks/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e9d8c0741de60f5f33abf385c90ca530de66661/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6f636b732e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://travis-ci.org/rossmacarthur/locks\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b3e0f51576ca0e1367e7a4c6ecc5549c42755a0/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f726f73736d61636172746875722f6c6f636b732f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>POSIX file system locking using <a href=\"https://linux.die.net/man/2/flock\" rel=\"nofollow\">flock</a>.</p>\n<h2>Getting started</h2>\n<p>Install this package with</p>\n<pre>pip install locks\n</pre>\n<h2>Usage</h2>\n<p>The simplest usage is to block indefinitely until the lock is acquired</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">locks</span> <span class=\"kn\">import</span> <span class=\"n\">Mutex</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Mutex</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/file.lock'</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do exclusive stuff here</span>\n</pre>\n<p>Alternatively, block until a timeout is reached</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">locks</span> <span class=\"kn\">import</span> <span class=\"n\">Mutex</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">Mutex</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/file.lock'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">):</span>\n        <span class=\"c1\"># do exclusive stuff here</span>\n<span class=\"k\">except</span> <span class=\"ne\">BlockingIOError</span><span class=\"p\">:</span>\n    <span class=\"c1\"># handle the failure to acquire the lock</span>\n</pre>\n<p>Finally, a common paradigm is to attempt to acquire the lock without blocking,\ndo something, and then block indefinitely. Here <code>callback</code> will be called once\nif we cannot immediately acquire the lock, and then we will block indefinitely.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Blocking: waiting for file lock on '/tmp/file.lock'\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Mutex</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/file.lock'</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">callback</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do exclusive stuff here</span>\n</pre>\n<p>If both <code>callback</code> and <code>timeout</code> are used then we will attempt to\nacquire the lock until the <code>timeout</code> is reached, and then we will block\nindefinitely.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License. See the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n\n          </div>"}, "last_serial": 6171265, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ca96ebbc2df3f3ae9740abf3b4618d08", "sha256": "cefcbb7cacd325c860c4d6456dc2e339893b1092a50b1a32daf5a1a703f7635f"}, "downloads": -1, "filename": "locks-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca96ebbc2df3f3ae9740abf3b4618d08", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 4114, "upload_time": "2019-11-13T14:54:35", "upload_time_iso_8601": "2019-11-13T14:54:35.742782Z", "url": "https://files.pythonhosted.org/packages/64/06/299c4d1256a264adc78eb2e75c15bd6324728ec156d4d9a0af4e1943d192/locks-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73cefd94b9a976de396c326d3ead9721", "sha256": "bb5385d900db600e1e106fb91aa078cdc8a753ba1eae52415988ceb81ce32391"}, "downloads": -1, "filename": "locks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "73cefd94b9a976de396c326d3ead9721", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3559, "upload_time": "2019-11-13T14:54:38", "upload_time_iso_8601": "2019-11-13T14:54:38.508361Z", "url": "https://files.pythonhosted.org/packages/45/53/d4e3be9bd0a2f5a3d7e60427a446732cb99db2fa878c1ad3da22ecf908aa/locks-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ba32df81b256180d4247e7f65c0767a8", "sha256": "b8053d71dc96394639ecb4358c872f186ae7a3b70b759bb00d4966dda8e208ae"}, "downloads": -1, "filename": "locks-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ba32df81b256180d4247e7f65c0767a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3935, "upload_time": "2019-11-20T20:07:02", "upload_time_iso_8601": "2019-11-20T20:07:02.578455Z", "url": "https://files.pythonhosted.org/packages/6e/9a/d82c0c43c1d89da8ef35a50f3266ebf4d69aaf00d94202000969c7040943/locks-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0595f0298ace6535db1f1b42605e2f96", "sha256": "a894bcd725bb0d36613d1ccb4880d2c9c967ad8107619fad4c6a609dd70a3df0"}, "downloads": -1, "filename": "locks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0595f0298ace6535db1f1b42605e2f96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3395, "upload_time": "2019-11-20T20:07:04", "upload_time_iso_8601": "2019-11-20T20:07:04.320942Z", "url": "https://files.pythonhosted.org/packages/29/7c/94a8e0b91c0b9cec5adf7cd7dc871b215835ca1ba9e3f595fee8a0fb9e49/locks-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba32df81b256180d4247e7f65c0767a8", "sha256": "b8053d71dc96394639ecb4358c872f186ae7a3b70b759bb00d4966dda8e208ae"}, "downloads": -1, "filename": "locks-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ba32df81b256180d4247e7f65c0767a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3935, "upload_time": "2019-11-20T20:07:02", "upload_time_iso_8601": "2019-11-20T20:07:02.578455Z", "url": "https://files.pythonhosted.org/packages/6e/9a/d82c0c43c1d89da8ef35a50f3266ebf4d69aaf00d94202000969c7040943/locks-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0595f0298ace6535db1f1b42605e2f96", "sha256": "a894bcd725bb0d36613d1ccb4880d2c9c967ad8107619fad4c6a609dd70a3df0"}, "downloads": -1, "filename": "locks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0595f0298ace6535db1f1b42605e2f96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3395, "upload_time": "2019-11-20T20:07:04", "upload_time_iso_8601": "2019-11-20T20:07:04.320942Z", "url": "https://files.pythonhosted.org/packages/29/7c/94a8e0b91c0b9cec5adf7cd7dc871b215835ca1ba9e3f595fee8a0fb9e49/locks-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:32 2020"}