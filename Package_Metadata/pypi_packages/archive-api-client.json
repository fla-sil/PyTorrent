{"info": {"author": "m1yag1", "author_email": "mike.arbelaez@rice.edu", "bugtrack_url": null, "classifiers": [], "description": "==================\nArchive API Client\n==================\n\nA Python wrapper around the Archive web api.\n\n\nQuick start\n-----------\n\nInstantiate the ``ArchiveClient``:\n\n.. code-block:: python\n\n    client = ArchiveClient()\n\n\nGet a collection:\n\n.. code-block:: python\n\n    collection = client.get_collection(\"7fccc9cf-9b71-44f6-800b-f9457fd64335\")\n\nYou now have access to lots of information about the collection.\n\n.. code-block:: bash\n\n    collection.title\n    >> \"Chemistry 2e\"\n    collection.version\n    >> \"9.18\"\n\nIf you need to access a subcollection or module you can explore ``collection.table_of_contents``\n\n.. code-block:: bash\n\n    toc = collection.table_of_contents\n    for item in toc.contents\n        print(item)\n    >><Module [Preface]>\n    >><SubCollection [Essential Ideas]>\n    >><SubCollection [Atoms, Molecules, and Ions]>\n    >><SubCollection [Composition of Substances and Solutions]>\n\nYou can grab a module from the contents and get other information:\n\n.. code-block:: bash\n\n    module = toc.contents[0]\n    print(module.title)\n    >>\"Preface\"\n    print(module.html_title)\n    >>\"<span class=\"os-text\">Preface</span>\"\n\nIf you want to print the json or the html version you can do that too\n\n.. code-block:: bash\n\n    module = toc.contents[0]\n    print(module.title)\n    >>\"Preface\"\n    module_html = module.get_html()\n    print(module_html)\n    >><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta name=\"robots\" content=\"noindex\"/></head><body><div data-type=\"page\" id=\"138634ed-6ed0-4edb-b13d-b78d388028b0\" class=\"preface\" ...", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "archive-api-client", "package_url": "https://pypi.org/project/archive-api-client/", "platform": "", "project_url": "https://pypi.org/project/archive-api-client/", "project_urls": null, "release_url": "https://pypi.org/project/archive-api-client/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Python wrapper for the CNX Archive API(http://archive.cnx.org)", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python wrapper around the Archive web api.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>Instantiate the <tt>ArchiveClient</tt>:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ArchiveClient</span><span class=\"p\">()</span>\n</pre>\n<p>Get a collection:</p>\n<pre><span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_collection</span><span class=\"p\">(</span><span class=\"s2\">\"7fccc9cf-9b71-44f6-800b-f9457fd64335\"</span><span class=\"p\">)</span>\n</pre>\n<p>You now have access to lots of information about the collection.</p>\n<pre>collection.title\n&gt;&gt; <span class=\"s2\">\"Chemistry 2e\"</span>\ncollection.version\n&gt;&gt; <span class=\"s2\">\"9.18\"</span>\n</pre>\n<p>If you need to access a subcollection or module you can explore <tt>collection.table_of_contents</tt></p>\n<pre><span class=\"nv\">toc</span> <span class=\"o\">=</span> collection.table_of_contents\n<span class=\"k\">for</span> item in toc.contents\n    print<span class=\"o\">(</span>item<span class=\"o\">)</span>\n&gt;&gt;&lt;Module <span class=\"o\">[</span>Preface<span class=\"o\">]</span>&gt;\n&gt;&gt;&lt;SubCollection <span class=\"o\">[</span>Essential Ideas<span class=\"o\">]</span>&gt;\n&gt;&gt;&lt;SubCollection <span class=\"o\">[</span>Atoms, Molecules, and Ions<span class=\"o\">]</span>&gt;\n&gt;&gt;&lt;SubCollection <span class=\"o\">[</span>Composition of Substances and Solutions<span class=\"o\">]</span>&gt;\n</pre>\n<p>You can grab a module from the contents and get other information:</p>\n<pre><span class=\"nv\">module</span> <span class=\"o\">=</span> toc.contents<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>\nprint<span class=\"o\">(</span>module.title<span class=\"o\">)</span>\n&gt;&gt;<span class=\"s2\">\"Preface\"</span>\nprint<span class=\"o\">(</span>module.html_title<span class=\"o\">)</span>\n&gt;&gt;<span class=\"s2\">\"&lt;span class=\"</span>os-text<span class=\"s2\">\"&gt;Preface&lt;/span&gt;\"</span>\n</pre>\n<p>If you want to print the json or the html version you can do that too</p>\n<pre><span class=\"nv\">module</span> <span class=\"o\">=</span> toc.contents<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>\nprint<span class=\"o\">(</span>module.title<span class=\"o\">)</span>\n&gt;&gt;<span class=\"s2\">\"Preface\"</span>\n<span class=\"nv\">module_html</span> <span class=\"o\">=</span> module.get_html<span class=\"o\">()</span>\nprint<span class=\"o\">(</span>module_html<span class=\"o\">)</span>\n&gt;&gt;&lt;html <span class=\"nv\">xmlns</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/1999/xhtml\"</span>&gt;&lt;head&gt;&lt;meta <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s2\">\"robots\"</span> <span class=\"nv\">content</span><span class=\"o\">=</span><span class=\"s2\">\"noindex\"</span>/&gt;&lt;/head&gt;&lt;body&gt;&lt;div data-type<span class=\"o\">=</span><span class=\"s2\">\"page\"</span> <span class=\"nv\">id</span><span class=\"o\">=</span><span class=\"s2\">\"138634ed-6ed0-4edb-b13d-b78d388028b0\"</span> <span class=\"nv\">class</span><span class=\"o\">=</span><span class=\"s2\">\"preface\"</span> ...\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6138913, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "147e19ccba3bca1be6f4402a95fae12c", "sha256": "2e03be7859684b8378b9b4a8d511e8049a5eb2a20997f6fdc23f915abb94bdac"}, "downloads": -1, "filename": "archive-api-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "147e19ccba3bca1be6f4402a95fae12c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4162, "upload_time": "2019-11-14T21:05:56", "upload_time_iso_8601": "2019-11-14T21:05:56.098073Z", "url": "https://files.pythonhosted.org/packages/24/74/3c095471af4f7ea18ebaa69ac90fb401c5df23d665571007d055865978ed/archive-api-client-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "147e19ccba3bca1be6f4402a95fae12c", "sha256": "2e03be7859684b8378b9b4a8d511e8049a5eb2a20997f6fdc23f915abb94bdac"}, "downloads": -1, "filename": "archive-api-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "147e19ccba3bca1be6f4402a95fae12c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4162, "upload_time": "2019-11-14T21:05:56", "upload_time_iso_8601": "2019-11-14T21:05:56.098073Z", "url": "https://files.pythonhosted.org/packages/24/74/3c095471af4f7ea18ebaa69ac90fb401c5df23d665571007d055865978ed/archive-api-client-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:23 2020"}