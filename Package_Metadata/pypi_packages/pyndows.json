{"info": {"author": "Colin Bounouar", "author_email": "colin.bounouar.dev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "<h2 align=\"center\">Accessing Windows from Linux</h2>\n\n<p align=\"center\">\n<a href=\"https://pypi.org/project/pyndows/\"><img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/pyndows\"></a>\n<a href=\"https://travis-ci.com/Colin-b/pyndows\"><img alt=\"Build status\" src=\"https://api.travis-ci.com/Colin-b/pyndows.svg?branch=master\"></a>\n<a href=\"https://travis-ci.com/Colin-b/pyndows\"><img alt=\"Coverage\" src=\"https://img.shields.io/badge/coverage-100%25-brightgreen\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n<a href=\"https://travis-ci.com/Colin-b/pyndows\"><img alt=\"Number of tests\" src=\"https://img.shields.io/badge/tests-41 passed-blue\"></a>\n<a href=\"https://pypi.org/project/pyndows/\"><img alt=\"Number of downloads\" src=\"https://img.shields.io/pypi/dm/pyndows\"></a>\n</p>\n\n## Retrieve a file (from Windows to Linux)\n\n```python\nimport pyndows\n\npath_to_retrieved_file = \"\"\nwith pyndows.connect(...) as machine:\n    pyndows.get(machine, \"shared_folder_name\", \"/folder/requested_file_name\", path_to_retrieved_file)\n```\n\n## Retrieve a file description (from Windows to Linux)\n\n```python\nimport pyndows\n\nwith pyndows.connect(...) as machine:\n    description = pyndows.get_file_desc(machine, \"shared_folder_name\", \"/folder/requested_file_name\")\n```\n\n## Move a file (from Linux to Windows)\n\n```python\nimport pyndows\n\nfile_to_move_path = \"\"\nwith pyndows.connect(...) as machine:\n    pyndows.move(machine, \"shared_folder_name\", \"/folder/destination_file_name\", file_to_move_path)\n```\n\nNote that folders will be created if not existing.\n\nYou can also provide a custom suffix for the temporary file (.tmp is used by default) via the temp_file_suffix parameter.\n\n## Rename a file\n\n```python\nimport pyndows\n\nwith pyndows.connect(...) as machine:\n    pyndows.rename(machine, \"shared_folder_name\", \"/folder/previous_file_name\", \"/folder/new_file_name\")\n```\n\n## Ensure connectivity\n\n```python\nimport pyndows\n\nwith pyndows.connect(...) as machine:\n    details = pyndows.check(\"connection identifier\", machine)\n```\n\n## Testing\n\nYou can mock remote connections by using `samba_mock` `pytest` fixture.\n\n2 convenience methods are available:\n\n1. `samba_mock.path(share_folder_name, file_or_folder_path)` returns a `pathlib.Path` instance that you can use as a replacement for the file on the remote connection.\n    * Use `write_*()` to set the content of a file.\n    * Use `read_*()` to check the content of a file.\n2. `samba_mock.add_callback(method_name, callback)` provides the ability to override the mock default behavior and can be used to send custom exceptions.\n\nBelow are a few example of what can be done:\n\n### Simulate a file that can be retrieved\n\n```python\nfrom pyndows.testing import samba_mock, SMBConnectionMock\n\ndef test_file_retrieval(samba_mock: SMBConnectionMock):\n    samba_mock.path(\"shared_folder_name\", \"/folder/file_to_retrieve\").write_text(\"File content of path to a file\")\n    # TODO Execute code relying on this file\n```\n\n### Ensure the content of a file that was moved or renamed\n\n```python\nfrom pyndows.testing import samba_mock, SMBConnectionMock\n\ndef test_file_retrieval(samba_mock: SMBConnectionMock):\n    # TODO Execute code writing this file\n    file_content = samba_mock.path(\"shared_folder_name\", \"/folder/file_that_was_stored\").read_text()\n```\n\n### Simulate echo failure\n\n```python\nfrom smb.smb_structs import OperationFailure\nfrom pyndows.testing import samba_mock, SMBConnectionMock\n\ndef test_file_retrieval(samba_mock: SMBConnectionMock):\n    def raise_exception(*args):\n        raise OperationFailure(\"Mock for echo failure.\", [])\n\n    samba_mock.add_callback(\"echo\", raise_exception)\n    # TODO Execute code calling echo\n```\n\n## How to install\n1. [python 3.6+](https://www.python.org/downloads/) must be installed\n2. Use pip to install module:\n```sh\npython -m pip install pyndows\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/pyndows/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://colin-b.github.io/pyndows/", "keywords": "windows,samba,linux,remote", "license": "MIT", "maintainer": "Colin Bounouar", "maintainer_email": "colin.bounouar.dev@gmail.com", "name": "pyndows", "package_url": "https://pypi.org/project/pyndows/", "platform": "Windows", "project_url": "https://pypi.org/project/pyndows/", "project_urls": {"Changelog": "https://github.com/Colin-b/pyndows/blob/master/CHANGELOG.md", "Download": "https://pypi.org/project/pyndows/", "GitHub": "https://github.com/Colin-b/pyndows", "Homepage": "https://colin-b.github.io/pyndows/", "Issues": "https://github.com/Colin-b/pyndows/issues"}, "release_url": "https://pypi.org/project/pyndows/4.0.0/", "requires_dist": ["pysmb (==1.*)", "pytest-cov (==2.*) ; extra == 'testing'"], "requires_python": ">=3.6", "summary": "Accessing Windows from Linux", "version": "4.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Accessing Windows from Linux</h2>\n<p align=\"center\">\n<a href=\"https://pypi.org/project/pyndows/\" rel=\"nofollow\"><img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc09ab204bcd3cc4741977d63c03954815d7c84f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e646f7773\"></a>\n<a href=\"https://travis-ci.com/Colin-b/pyndows\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1184ccc0208c647adddbae7240d415f01efc8a32/68747470733a2f2f6170692e7472617669732d63692e636f6d2f436f6c696e2d622f70796e646f77732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.com/Colin-b/pyndows\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0280f255d36847e3743058a68bedfb93626e993f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d3130302532352d627269676874677265656e\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://travis-ci.com/Colin-b/pyndows\" rel=\"nofollow\"><img alt=\"Number of tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efc654df927f0bb500575c736c3ec413068b5115/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74657374732d3431207061737365642d626c7565\"></a>\n<a href=\"https://pypi.org/project/pyndows/\" rel=\"nofollow\"><img alt=\"Number of downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/911d5b42d0762467ce9a117ef993d1dd87e127a0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70796e646f7773\"></a>\n</p>\n<h2>Retrieve a file (from Windows to Linux)</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyndows</span>\n\n<span class=\"n\">path_to_retrieved_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n<span class=\"k\">with</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">machine</span><span class=\"p\">:</span>\n    <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">machine</span><span class=\"p\">,</span> <span class=\"s2\">\"shared_folder_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/requested_file_name\"</span><span class=\"p\">,</span> <span class=\"n\">path_to_retrieved_file</span><span class=\"p\">)</span>\n</pre>\n<h2>Retrieve a file description (from Windows to Linux)</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyndows</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">machine</span><span class=\"p\">:</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">get_file_desc</span><span class=\"p\">(</span><span class=\"n\">machine</span><span class=\"p\">,</span> <span class=\"s2\">\"shared_folder_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/requested_file_name\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Move a file (from Linux to Windows)</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyndows</span>\n\n<span class=\"n\">file_to_move_path</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n<span class=\"k\">with</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">machine</span><span class=\"p\">:</span>\n    <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">machine</span><span class=\"p\">,</span> <span class=\"s2\">\"shared_folder_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/destination_file_name\"</span><span class=\"p\">,</span> <span class=\"n\">file_to_move_path</span><span class=\"p\">)</span>\n</pre>\n<p>Note that folders will be created if not existing.</p>\n<p>You can also provide a custom suffix for the temporary file (.tmp is used by default) via the temp_file_suffix parameter.</p>\n<h2>Rename a file</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyndows</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">machine</span><span class=\"p\">:</span>\n    <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">machine</span><span class=\"p\">,</span> <span class=\"s2\">\"shared_folder_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/previous_file_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/new_file_name\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Ensure connectivity</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyndows</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">machine</span><span class=\"p\">:</span>\n    <span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">pyndows</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"s2\">\"connection identifier\"</span><span class=\"p\">,</span> <span class=\"n\">machine</span><span class=\"p\">)</span>\n</pre>\n<h2>Testing</h2>\n<p>You can mock remote connections by using <code>samba_mock</code> <code>pytest</code> fixture.</p>\n<p>2 convenience methods are available:</p>\n<ol>\n<li><code>samba_mock.path(share_folder_name, file_or_folder_path)</code> returns a <code>pathlib.Path</code> instance that you can use as a replacement for the file on the remote connection.\n<ul>\n<li>Use <code>write_*()</code> to set the content of a file.</li>\n<li>Use <code>read_*()</code> to check the content of a file.</li>\n</ul>\n</li>\n<li><code>samba_mock.add_callback(method_name, callback)</code> provides the ability to override the mock default behavior and can be used to send custom exceptions.</li>\n</ol>\n<p>Below are a few example of what can be done:</p>\n<h3>Simulate a file that can be retrieved</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyndows.testing</span> <span class=\"kn\">import</span> <span class=\"n\">samba_mock</span><span class=\"p\">,</span> <span class=\"n\">SMBConnectionMock</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_file_retrieval</span><span class=\"p\">(</span><span class=\"n\">samba_mock</span><span class=\"p\">:</span> <span class=\"n\">SMBConnectionMock</span><span class=\"p\">):</span>\n    <span class=\"n\">samba_mock</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">\"shared_folder_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/file_to_retrieve\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write_text</span><span class=\"p\">(</span><span class=\"s2\">\"File content of path to a file\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO Execute code relying on this file</span>\n</pre>\n<h3>Ensure the content of a file that was moved or renamed</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyndows.testing</span> <span class=\"kn\">import</span> <span class=\"n\">samba_mock</span><span class=\"p\">,</span> <span class=\"n\">SMBConnectionMock</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_file_retrieval</span><span class=\"p\">(</span><span class=\"n\">samba_mock</span><span class=\"p\">:</span> <span class=\"n\">SMBConnectionMock</span><span class=\"p\">):</span>\n    <span class=\"c1\"># TODO Execute code writing this file</span>\n    <span class=\"n\">file_content</span> <span class=\"o\">=</span> <span class=\"n\">samba_mock</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">\"shared_folder_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/folder/file_that_was_stored\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read_text</span><span class=\"p\">()</span>\n</pre>\n<h3>Simulate echo failure</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smb.smb_structs</span> <span class=\"kn\">import</span> <span class=\"n\">OperationFailure</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyndows.testing</span> <span class=\"kn\">import</span> <span class=\"n\">samba_mock</span><span class=\"p\">,</span> <span class=\"n\">SMBConnectionMock</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_file_retrieval</span><span class=\"p\">(</span><span class=\"n\">samba_mock</span><span class=\"p\">:</span> <span class=\"n\">SMBConnectionMock</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">raise_exception</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"n\">OperationFailure</span><span class=\"p\">(</span><span class=\"s2\">\"Mock for echo failure.\"</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n    <span class=\"n\">samba_mock</span><span class=\"o\">.</span><span class=\"n\">add_callback</span><span class=\"p\">(</span><span class=\"s2\">\"echo\"</span><span class=\"p\">,</span> <span class=\"n\">raise_exception</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO Execute code calling echo</span>\n</pre>\n<h2>How to install</h2>\n<ol>\n<li><a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">python 3.6+</a> must be installed</li>\n<li>Use pip to install module:</li>\n</ol>\n<pre>python -m pip install pyndows\n</pre>\n\n          </div>"}, "last_serial": 7088610, "releases": {"3.1.0": [{"comment_text": "", "digests": {"md5": "9a3a9f7af9c8dfe9e3ed6ca59acdd2dc", "sha256": "ddd7ee1448bded65030704fd85b5e6c74df77cc5a84ce69509a79b9e9d643210"}, "downloads": -1, "filename": "pyndows-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9a3a9f7af9c8dfe9e3ed6ca59acdd2dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6677, "upload_time": "2019-12-03T20:37:49", "upload_time_iso_8601": "2019-12-03T20:37:49.368719Z", "url": "https://files.pythonhosted.org/packages/f8/8b/38217ec6c110487f1d8d2646ba47289d43e9d9d980694e115d0803900a5a/pyndows-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a47c0efcdf668ef1ce934bc1cba8dff", "sha256": "090c104c08a4a5bc40e45d81b8cc489423218fb6a7e813d6a54ff0ee414bd8b9"}, "downloads": -1, "filename": "pyndows-3.1.0.tar.gz", "has_sig": false, "md5_digest": "1a47c0efcdf668ef1ce934bc1cba8dff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5324, "upload_time": "2019-12-03T20:37:51", "upload_time_iso_8601": "2019-12-03T20:37:51.166137Z", "url": "https://files.pythonhosted.org/packages/a7/f1/e2ce2426f5b632f5cc17237d5877f5b516aaaaa46f1785e32c43a355fe90/pyndows-3.1.0.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "072f96d9e4e2967e09b024f23570fb01", "sha256": "3f29cf1c18f2152257f7048f3b805c1cf1cc3e295ccd9ed4dc46546d69ca8fe9"}, "downloads": -1, "filename": "pyndows-3.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "072f96d9e4e2967e09b024f23570fb01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6982, "upload_time": "2020-01-22T17:00:47", "upload_time_iso_8601": "2020-01-22T17:00:47.545790Z", "url": "https://files.pythonhosted.org/packages/37/f9/a6da3c3c7309df3e5bf69747a9768f7aee83519c151cc111a5b850cbdd89/pyndows-3.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10a1c09d71540ed7d39f798c31d3d399", "sha256": "2b26113d8b495e78fb6c44feb32ce565d02ad3c65d1c361ca5b61dc53eccea66"}, "downloads": -1, "filename": "pyndows-3.2.0.tar.gz", "has_sig": false, "md5_digest": "10a1c09d71540ed7d39f798c31d3d399", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6552, "upload_time": "2020-01-22T17:00:48", "upload_time_iso_8601": "2020-01-22T17:00:48.787558Z", "url": "https://files.pythonhosted.org/packages/a4/cf/a1cfc939256911b051fbef4ebd077d75483e7d6b98cafde73439ac1cd203/pyndows-3.2.0.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "39618b9b46f287a1ca33914bf8c6ec7a", "sha256": "170fbb66c72db2e2c9e78432ac65bebc428d37e334ad93bd6f47bf3739780131"}, "downloads": -1, "filename": "pyndows-3.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "39618b9b46f287a1ca33914bf8c6ec7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8003, "upload_time": "2020-02-04T16:47:14", "upload_time_iso_8601": "2020-02-04T16:47:14.410273Z", "url": "https://files.pythonhosted.org/packages/b9/32/e4f5ce8ed2347e13c1ac924c88385c5bb08e799ea8cf8522bbc4ad443d86/pyndows-3.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebef91e5bf4b2625942de26ea0b0492b", "sha256": "a98df8d830ddb80a866235bd7b5a1d4a2bf34cbae6499b4dc6d8c91cb2d5f3bb"}, "downloads": -1, "filename": "pyndows-3.3.0.tar.gz", "has_sig": false, "md5_digest": "ebef91e5bf4b2625942de26ea0b0492b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6550, "upload_time": "2020-02-04T16:47:15", "upload_time_iso_8601": "2020-02-04T16:47:15.610291Z", "url": "https://files.pythonhosted.org/packages/90/33/79d2bbe1078423fe3471d48db26afea22aa050674866aa21eb4b4a45771e/pyndows-3.3.0.tar.gz", "yanked": false}], "3.3.1": [{"comment_text": "", "digests": {"md5": "8665e669e6f0a56dbd3ba463d60c015b", "sha256": "ee7383641043933e80a2c9ef5de7e402588d0e0be203f247ba1b04e59dc8f917"}, "downloads": -1, "filename": "pyndows-3.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8665e669e6f0a56dbd3ba463d60c015b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8113, "upload_time": "2020-02-06T16:25:38", "upload_time_iso_8601": "2020-02-06T16:25:38.603071Z", "url": "https://files.pythonhosted.org/packages/b1/a4/e55d7be80264eb040f1c3ec3e139a6ecd2066a1fb2f08d17284a1ba2c257/pyndows-3.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "775bc249a55c4b48fc2719b999f88029", "sha256": "22b5a55c23283394184302b9fd2723f7c134e344f54c56c1587657dbf9139b03"}, "downloads": -1, "filename": "pyndows-3.3.1.tar.gz", "has_sig": false, "md5_digest": "775bc249a55c4b48fc2719b999f88029", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6651, "upload_time": "2020-02-06T16:25:39", "upload_time_iso_8601": "2020-02-06T16:25:39.654247Z", "url": "https://files.pythonhosted.org/packages/b7/ab/e70001f74f50a33cf19c39b0e37e70bf1b1d63d44ab3785de5aa5f3cf80e/pyndows-3.3.1.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "af80cb1b274555fdce593e62200c9618", "sha256": "2a9ed18c48f59da100f51ccd857b70d73548a7590491f34bb3cdeccb26757a8b"}, "downloads": -1, "filename": "pyndows-3.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "af80cb1b274555fdce593e62200c9618", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8257, "upload_time": "2020-02-25T16:10:23", "upload_time_iso_8601": "2020-02-25T16:10:23.127281Z", "url": "https://files.pythonhosted.org/packages/ee/52/c05897b6e9a8af290485295fc87cf24be3620f56580d4554544b7cdee84f/pyndows-3.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d7b8f791fd5eb2c4e35a8bc08e18871", "sha256": "26eaa69d39ecd3dfc5c5d6daebf9be557d91721095183eccfa4e6000597d8f6e"}, "downloads": -1, "filename": "pyndows-3.4.0.tar.gz", "has_sig": false, "md5_digest": "8d7b8f791fd5eb2c4e35a8bc08e18871", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6802, "upload_time": "2020-02-25T16:10:24", "upload_time_iso_8601": "2020-02-25T16:10:24.144796Z", "url": "https://files.pythonhosted.org/packages/2e/2a/d1fe9dede80e27ad73af3d271fa58bcfcd225a8aa019f1138b01769202b8/pyndows-3.4.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "91c2a503e103da6ff8d4812d3a62ef23", "sha256": "3b1775fe32e454d8d8da580f9f9469af02f60a24cb6125b66fb837bdd7664f4b"}, "downloads": -1, "filename": "pyndows-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91c2a503e103da6ff8d4812d3a62ef23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8492, "upload_time": "2020-04-23T23:51:53", "upload_time_iso_8601": "2020-04-23T23:51:53.014505Z", "url": "https://files.pythonhosted.org/packages/3f/3a/3d609bc5a4ee2665eec0966af3ed8573c72553e16f3751cbffe6a4c23e2a/pyndows-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77cd2b2ccf7e26d8f9349a535feb64bb", "sha256": "76d251593005acb472eb669e7dd75d616bd698752ac63d9eb0df7e16bb6a673d"}, "downloads": -1, "filename": "pyndows-4.0.0.tar.gz", "has_sig": false, "md5_digest": "77cd2b2ccf7e26d8f9349a535feb64bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6849, "upload_time": "2020-04-23T23:51:57", "upload_time_iso_8601": "2020-04-23T23:51:57.777346Z", "url": "https://files.pythonhosted.org/packages/3a/93/f60350636fcb8ded83ce9e7c7c39870d0bffa9903221689d10bfc18426e5/pyndows-4.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91c2a503e103da6ff8d4812d3a62ef23", "sha256": "3b1775fe32e454d8d8da580f9f9469af02f60a24cb6125b66fb837bdd7664f4b"}, "downloads": -1, "filename": "pyndows-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91c2a503e103da6ff8d4812d3a62ef23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8492, "upload_time": "2020-04-23T23:51:53", "upload_time_iso_8601": "2020-04-23T23:51:53.014505Z", "url": "https://files.pythonhosted.org/packages/3f/3a/3d609bc5a4ee2665eec0966af3ed8573c72553e16f3751cbffe6a4c23e2a/pyndows-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77cd2b2ccf7e26d8f9349a535feb64bb", "sha256": "76d251593005acb472eb669e7dd75d616bd698752ac63d9eb0df7e16bb6a673d"}, "downloads": -1, "filename": "pyndows-4.0.0.tar.gz", "has_sig": false, "md5_digest": "77cd2b2ccf7e26d8f9349a535feb64bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6849, "upload_time": "2020-04-23T23:51:57", "upload_time_iso_8601": "2020-04-23T23:51:57.777346Z", "url": "https://files.pythonhosted.org/packages/3a/93/f60350636fcb8ded83ce9e7c7c39870d0bffa9903221689d10bfc18426e5/pyndows-4.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:19 2020"}