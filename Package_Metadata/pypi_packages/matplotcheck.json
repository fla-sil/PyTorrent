{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Software Development"], "description": "[![DOI](https://zenodo.org/badge/138660604.svg)](https://zenodo.org/badge/latestdoi/138660604)\n\n# MatPlotCheck\n![PyPI](https://img.shields.io/pypi/v/matplotcheck.svg?color=purple&style=plastic)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/matplotcheck.svg?color=purple&label=pypi%20downloads&style=plastic)\n![Conda](https://img.shields.io/conda/v/conda-forge/matplotcheck.svg?color=purple&style=plastic)\n![Conda](https://img.shields.io/conda/dn/conda-forge/matplotcheck.svg?color=purple&label=conda-forge%20downloads&style=plastic)\n\n[![Build Status](https://travis-ci.com/earthlab/matplotcheck.svg?branch=master)](https://travis-ci.com/earthlab/matplotcheck)\n[![Build status](https://ci.appveyor.com/api/projects/status/xgf5g4ms8qhgtp21?svg=true)](https://ci.appveyor.com/project/earthlab/matplotcheck)\n[![codecov](https://codecov.io/gh/earthlab/matPlotCheck/branch/master/graph/badge.svg)](https://codecov.io/gh/earthlab/matPlotCheck)\n[![Documentation Status](https://readthedocs.org/projects/matplotcheck/badge/?version=latest)](https://matplotcheck.readthedocs.io/en/latest/?badge=latest)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://img.shields.io/badge/code%20style-black-000000.svg)\n\nA package for testing different types of matplotlib plots including:\n\n* basic matplotlib plots\n* geopandas spatial vector plots\n* raster plots\n* time series plots\n* folium plots\n\nand more!\n\n## Why MatPlotCheck?\nThere is often a need to test plots particularly when teaching data science\ncourses. The Matplotlib api can be complex to navigate when trying to write\ntests. MatPlotCheck was developed to make it easier to test data, titles, axes\nand other elements of Matplotlib plots in support of both autograding and other\ntesting needs.\n\nMatPlotCheck was inspired by [plotChecker][cdeac58a] developed by Jess Hamrick.\n\n  [cdeac58a]: https://github.com/jhamrick/plotchecker \"Plot Checker\"\n\nWe spoke with her about our development and decided to extend plotChecker to suite some of the grading needs in our classes which include plots with spatial data using numpy for images and geopandas for vector data.\n\n## Install MatPlotCheck\n\nYou can install MatPlotCheck using either pip or conda.\nTo use pip run:\n\n`pip install --upgrade matplotcheck`\n\nTo use conda:\n`conda install -c conda-forge matplotcheck`\n\nTo import it into Python:\n\n`import matplotcheck as mpc`\n\n\n## Under Development\n\nMatplotcheck is currently under significant development.\n\n## Examples\n\n2D plot with x-axis label containing \"x\" and y-axis label containing \"y\" and \"data\"\n\n```python\nfrom matplotcheck.cases import PlotBasicSuite\nimport pandas as pd\nimport unittest\n\naxis = plt.gca()\ndata = pd.DataFrame(data={\u201cx\u201d:xvals, \u201cy\u201d:yvals})\nsuite = PlotBasicSuite(ax=axis, data_exp=data, xcol=\u201dx\u201d, ycol=\u201dy\u201d)\nxlabel_contains=[\u201cx\u201d], ylabel_contains = [\u201cy\u201d,\u201ddata\u201d])\nresults = unittest.TextTestRunner().run(suite)\n```\n\n### Example Plot with Spatial Raster Data\n\nPlot containing a spatial raster image and spatial polygon vector data\n\n```python\nfrom matplotcheck.cases import PlotRasterSuite\naxis = plt.gca()\nsuite = PlotRasterSuite(ax=axis, im_expected=image, polygons=polygons)\nresults = unittest.TextTestRunner().run(suite)\n```\n\nIf you prefer to forgo the groupings into TestSuites, you can just use the assertions instead.\n\n2D plot with x-axis label containing \"x\" and y-axis label containing \"y\" and \"data\"\n\n```python\nfrom matplotcheck.base import PlotTester\nimport pandas as pd\naxis = plt.gca()\npt = PlotTester(axis)\ndata = pd.DataFrame(data={\u201cx\u201d:xvals, \u201cy\u201d:yvals})\npt.assert_xydata(data, \u201cx\u201d, \u201cy\u201d)\npt.assert_xlabel_contains([\u201cx\u201d])\npt.assert_ylabel_contains([\u201cy\u201d, \u201cdata\u201d])\n```\n\nPlot containing a spatial raster image and spatial polygon vector data\n\n```python\nfrom matplotcheck.raster import RasterTester\nfrom matplotcheck.vector import VectorTester\naxis = plt.gca()\nrt = RasterTester(axis)\nvt = VectorTester(axis)\nrt.assert_image(im_expected=image)\nvt.assert_polygons(polygons_expected=polygons)\n```\n\nCaveats: This repo likely misses edge cases of the many ways matplotlib plots can be created.\nPlease feel free to submit bugs!\n\n\n## Active Contributors\n\n- Leah Wasser\n\n## Dev Setup (to be moved to contributing)\n\nsetup the matplotcheck envt\n\n```\nconda env create -f environment.yml\nconda activate matplotcheck-dev\n```\n\nThen setup all of the development requirements.\n\n```\npip install -e .\npip install -r dev-requirements.txt\npre-commit install\n```\n\n## Contributors\n\nWe've welcome any and all contributions. Below are some of the\ncontributors to MatPlotCheck.\n\n<a title=\"Ryan Solvik\" href=\"https://www.github.com/ryla5068\"><img width=\"60\" height=\"60\" alt=\"Kylen Solvik\" class=\"pull-left\" src=\"https://avatars.githubusercontent.com/u/43677611?size=120\" /></a>\n<a title=\"Kylen Solvik\" href=\"https://www.github.com/ksolvik\"><img width=\"60\" height=\"60\" alt=\"Kylen Solvik\" class=\"pull-left\" src=\"https://avatars.githubusercontent.com/u/24379590?size=120\" /></a>\n<a title=\"Kristen Curry\" href=\"https://www.github.com/kdcurry\"><img width=\"60\" height=\"60\" alt=\"Kristen Curry\" class=\"pull-left\" src=\"https://avatars.githubusercontent.com/u/4032126?size=120\" /></a>\n\n## How to Contribute\n\nWe welcome contributions to MatPlotCheck! Please be sure to check out our\n[contributing guidelines](https://MatPlotCheck.readthedocs.io/en/latest/contributing.html)\nfor more information about submitting pull requests or changes to MatPlotCheck.\n\n## License & Citation\n\n[BSD-3](https://github.com/earthlab/matplotcheck/blob/master/LICENSE)\n\n### Citation Information\nMatPlotCheck citation information can be found on [zenodo](https://doi.org/10.5281/zenodo.2548113). A link to bibtext format is below:\n\n*[bibtex](https://zenodo.org/record/2548114/export/hx)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/earthlab/matplotcheck", "keywords": "", "license": "", "maintainer": "Leah Wasser", "maintainer_email": "leah.wasser@colorado.edu", "name": "matplotcheck", "package_url": "https://pypi.org/project/matplotcheck/", "platform": "", "project_url": "https://pypi.org/project/matplotcheck/", "project_urls": {"Homepage": "https://github.com/earthlab/matplotcheck"}, "release_url": "https://pypi.org/project/matplotcheck/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Functions to check Matplotlib plot outputs", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://zenodo.org/badge/latestdoi/138660604\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8351afef091e389cb4849745f55d40e483936bf9/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3133383636303630342e737667\"></a></p>\n<h1>MatPlotCheck</h1>\n<p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd111362c793ea4bd03a91dcdc0ba59951f72f5f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6174706c6f74636865636b2e7376673f636f6c6f723d707572706c65267374796c653d706c6173746963\">\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0028ff12e91fe99bc494fc705423b1ac1092bfd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6d6174706c6f74636865636b2e7376673f636f6c6f723d707572706c65266c6162656c3d70797069253230646f776e6c6f616473267374796c653d706c6173746963\">\n<img alt=\"Conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/618f29d65aea72b1f24918ce257506832cbe20d9/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f762f636f6e64612d666f7267652f6d6174706c6f74636865636b2e7376673f636f6c6f723d707572706c65267374796c653d706c6173746963\">\n<img alt=\"Conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47dde9ee078305ad2751698ee093593d7c2644ec/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f646e2f636f6e64612d666f7267652f6d6174706c6f74636865636b2e7376673f636f6c6f723d707572706c65266c6162656c3d636f6e64612d666f726765253230646f776e6c6f616473267374796c653d706c6173746963\"></p>\n<p><a href=\"https://travis-ci.com/earthlab/matplotcheck\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/515be3b5145267d4bafcf996f4825860f1b9eeaa/68747470733a2f2f7472617669732d63692e636f6d2f65617274686c61622f6d6174706c6f74636865636b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/earthlab/matplotcheck\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8547c32e8e18fb2a77307afdcbe6262e94644dd8/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7867663567346d7338716867747032313f7376673d74727565\"></a>\n<a href=\"https://codecov.io/gh/earthlab/matPlotCheck\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa50c7a00ebe6da58ccec36169d7095b7146a621/68747470733a2f2f636f6465636f762e696f2f67682f65617274686c61622f6d6174506c6f74436865636b2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://matplotcheck.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc06ae2af3f3eeb378a98c4a46aa1cfd9b96a6a7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6174706c6f74636865636b2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://img.shields.io/badge/code%20style-black-000000.svg\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>A package for testing different types of matplotlib plots including:</p>\n<ul>\n<li>basic matplotlib plots</li>\n<li>geopandas spatial vector plots</li>\n<li>raster plots</li>\n<li>time series plots</li>\n<li>folium plots</li>\n</ul>\n<p>and more!</p>\n<h2>Why MatPlotCheck?</h2>\n<p>There is often a need to test plots particularly when teaching data science\ncourses. The Matplotlib api can be complex to navigate when trying to write\ntests. MatPlotCheck was developed to make it easier to test data, titles, axes\nand other elements of Matplotlib plots in support of both autograding and other\ntesting needs.</p>\n<p>MatPlotCheck was inspired by <a href=\"https://github.com/jhamrick/plotchecker\" rel=\"nofollow\" title=\"Plot Checker\">plotChecker</a> developed by Jess Hamrick.</p>\n<p>We spoke with her about our development and decided to extend plotChecker to suite some of the grading needs in our classes which include plots with spatial data using numpy for images and geopandas for vector data.</p>\n<h2>Install MatPlotCheck</h2>\n<p>You can install MatPlotCheck using either pip or conda.\nTo use pip run:</p>\n<p><code>pip install --upgrade matplotcheck</code></p>\n<p>To use conda:\n<code>conda install -c conda-forge matplotcheck</code></p>\n<p>To import it into Python:</p>\n<p><code>import matplotcheck as mpc</code></p>\n<h2>Under Development</h2>\n<p>Matplotcheck is currently under significant development.</p>\n<h2>Examples</h2>\n<p>2D plot with x-axis label containing \"x\" and y-axis label containing \"y\" and \"data\"</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">matplotcheck.cases</span> <span class=\"kn\">import</span> <span class=\"n\">PlotBasicSuite</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">unittest</span>\n\n<span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"err\">\u201c</span><span class=\"n\">x</span><span class=\"err\">\u201d</span><span class=\"p\">:</span><span class=\"n\">xvals</span><span class=\"p\">,</span> <span class=\"err\">\u201c</span><span class=\"n\">y</span><span class=\"err\">\u201d</span><span class=\"p\">:</span><span class=\"n\">yvals</span><span class=\"p\">})</span>\n<span class=\"n\">suite</span> <span class=\"o\">=</span> <span class=\"n\">PlotBasicSuite</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"n\">data_exp</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">xcol</span><span class=\"o\">=</span><span class=\"err\">\u201d</span><span class=\"n\">x</span><span class=\"err\">\u201d</span><span class=\"p\">,</span> <span class=\"n\">ycol</span><span class=\"o\">=</span><span class=\"err\">\u201d</span><span class=\"n\">y</span><span class=\"err\">\u201d</span><span class=\"p\">)</span>\n<span class=\"n\">xlabel_contains</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"err\">\u201c</span><span class=\"n\">x</span><span class=\"err\">\u201d</span><span class=\"p\">],</span> <span class=\"n\">ylabel_contains</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"err\">\u201c</span><span class=\"n\">y</span><span class=\"err\">\u201d</span><span class=\"p\">,</span><span class=\"err\">\u201d</span><span class=\"n\">data</span><span class=\"err\">\u201d</span><span class=\"p\">])</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TextTestRunner</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">suite</span><span class=\"p\">)</span>\n</pre>\n<h3>Example Plot with Spatial Raster Data</h3>\n<p>Plot containing a spatial raster image and spatial polygon vector data</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">matplotcheck.cases</span> <span class=\"kn\">import</span> <span class=\"n\">PlotRasterSuite</span>\n<span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span>\n<span class=\"n\">suite</span> <span class=\"o\">=</span> <span class=\"n\">PlotRasterSuite</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"n\">im_expected</span><span class=\"o\">=</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">polygons</span><span class=\"o\">=</span><span class=\"n\">polygons</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TextTestRunner</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">suite</span><span class=\"p\">)</span>\n</pre>\n<p>If you prefer to forgo the groupings into TestSuites, you can just use the assertions instead.</p>\n<p>2D plot with x-axis label containing \"x\" and y-axis label containing \"y\" and \"data\"</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">matplotcheck.base</span> <span class=\"kn\">import</span> <span class=\"n\">PlotTester</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span>\n<span class=\"n\">pt</span> <span class=\"o\">=</span> <span class=\"n\">PlotTester</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"err\">\u201c</span><span class=\"n\">x</span><span class=\"err\">\u201d</span><span class=\"p\">:</span><span class=\"n\">xvals</span><span class=\"p\">,</span> <span class=\"err\">\u201c</span><span class=\"n\">y</span><span class=\"err\">\u201d</span><span class=\"p\">:</span><span class=\"n\">yvals</span><span class=\"p\">})</span>\n<span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">assert_xydata</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"err\">\u201c</span><span class=\"n\">x</span><span class=\"err\">\u201d</span><span class=\"p\">,</span> <span class=\"err\">\u201c</span><span class=\"n\">y</span><span class=\"err\">\u201d</span><span class=\"p\">)</span>\n<span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">assert_xlabel_contains</span><span class=\"p\">([</span><span class=\"err\">\u201c</span><span class=\"n\">x</span><span class=\"err\">\u201d</span><span class=\"p\">])</span>\n<span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">assert_ylabel_contains</span><span class=\"p\">([</span><span class=\"err\">\u201c</span><span class=\"n\">y</span><span class=\"err\">\u201d</span><span class=\"p\">,</span> <span class=\"err\">\u201c</span><span class=\"n\">data</span><span class=\"err\">\u201d</span><span class=\"p\">])</span>\n</pre>\n<p>Plot containing a spatial raster image and spatial polygon vector data</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">matplotcheck.raster</span> <span class=\"kn\">import</span> <span class=\"n\">RasterTester</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotcheck.vector</span> <span class=\"kn\">import</span> <span class=\"n\">VectorTester</span>\n<span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span>\n<span class=\"n\">rt</span> <span class=\"o\">=</span> <span class=\"n\">RasterTester</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">)</span>\n<span class=\"n\">vt</span> <span class=\"o\">=</span> <span class=\"n\">VectorTester</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">)</span>\n<span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"n\">assert_image</span><span class=\"p\">(</span><span class=\"n\">im_expected</span><span class=\"o\">=</span><span class=\"n\">image</span><span class=\"p\">)</span>\n<span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">assert_polygons</span><span class=\"p\">(</span><span class=\"n\">polygons_expected</span><span class=\"o\">=</span><span class=\"n\">polygons</span><span class=\"p\">)</span>\n</pre>\n<p>Caveats: This repo likely misses edge cases of the many ways matplotlib plots can be created.\nPlease feel free to submit bugs!</p>\n<h2>Active Contributors</h2>\n<ul>\n<li>Leah Wasser</li>\n</ul>\n<h2>Dev Setup (to be moved to contributing)</h2>\n<p>setup the matplotcheck envt</p>\n<pre><code>conda env create -f environment.yml\nconda activate matplotcheck-dev\n</code></pre>\n<p>Then setup all of the development requirements.</p>\n<pre><code>pip install -e .\npip install -r dev-requirements.txt\npre-commit install\n</code></pre>\n<h2>Contributors</h2>\n<p>We've welcome any and all contributions. Below are some of the\ncontributors to MatPlotCheck.</p>\n<p><a href=\"https://www.github.com/ryla5068\" rel=\"nofollow\" title=\"Ryan Solvik\"><img alt=\"Kylen Solvik\" class=\"pull-left\" height=\"60\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8dae51dede23b9d5e3991e74cd49a30551e8f1c8/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f34333637373631313f73697a653d313230\" width=\"60\"></a>\n<a href=\"https://www.github.com/ksolvik\" rel=\"nofollow\" title=\"Kylen Solvik\"><img alt=\"Kylen Solvik\" class=\"pull-left\" height=\"60\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ffa5e5fa441baca20b472990ba7d869514e3b25/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f32343337393539303f73697a653d313230\" width=\"60\"></a>\n<a href=\"https://www.github.com/kdcurry\" rel=\"nofollow\" title=\"Kristen Curry\"><img alt=\"Kristen Curry\" class=\"pull-left\" height=\"60\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89b84d16293753e9f946d64b7f4d2105efcf9079/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f343033323132363f73697a653d313230\" width=\"60\"></a></p>\n<h2>How to Contribute</h2>\n<p>We welcome contributions to MatPlotCheck! Please be sure to check out our\n<a href=\"https://MatPlotCheck.readthedocs.io/en/latest/contributing.html\" rel=\"nofollow\">contributing guidelines</a>\nfor more information about submitting pull requests or changes to MatPlotCheck.</p>\n<h2>License &amp; Citation</h2>\n<p><a href=\"https://github.com/earthlab/matplotcheck/blob/master/LICENSE\" rel=\"nofollow\">BSD-3</a></p>\n<h3>Citation Information</h3>\n<p>MatPlotCheck citation information can be found on <a href=\"https://doi.org/10.5281/zenodo.2548113\" rel=\"nofollow\">zenodo</a>. A link to bibtext format is below:</p>\n<p>*<a href=\"https://zenodo.org/record/2548114/export/hx\" rel=\"nofollow\">bibtex</a></p>\n\n          </div>"}, "last_serial": 6631955, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f4f9a7f6490fd458b2518cdcd727c45c", "sha256": "63c2e113318724d04dbb3fd46596461a38cb1049c0504bb12f77c77ec49cc62b"}, "downloads": -1, "filename": "matplotcheck-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f4f9a7f6490fd458b2518cdcd727c45c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21671, "upload_time": "2018-12-27T20:56:25", "upload_time_iso_8601": "2018-12-27T20:56:25.043142Z", "url": "https://files.pythonhosted.org/packages/0c/fe/f05979ceb304153de1dfe9ffa7e627277e46a1d5b9508af59915f9224286/matplotcheck-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "0997f6a550cf5a52360017476c420b3a", "sha256": "e4c7847f83864e7b1a85ea421b48f2185a9d29df0248e65f7aef1826662f9285"}, "downloads": -1, "filename": "matplotcheck-0.0.10.tar.gz", "has_sig": false, "md5_digest": "0997f6a550cf5a52360017476c420b3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24646, "upload_time": "2019-08-01T15:13:57", "upload_time_iso_8601": "2019-08-01T15:13:57.029380Z", "url": "https://files.pythonhosted.org/packages/43/5d/b4d274b3c1d2e155385daa4947b15971a797a8c811ce7c251e1f2448b38c/matplotcheck-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "8cbac83ef2b432b19ff4d946b69bba5d", "sha256": "c7a476bf79d037b83ce157bc4994f3861287702ba1a4d9cb6dab0c949c2b8898"}, "downloads": -1, "filename": "matplotcheck-0.0.11.tar.gz", "has_sig": false, "md5_digest": "8cbac83ef2b432b19ff4d946b69bba5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25908, "upload_time": "2019-09-25T18:47:31", "upload_time_iso_8601": "2019-09-25T18:47:31.974781Z", "url": "https://files.pythonhosted.org/packages/76/c7/c4fe1473a37cbb6aa9485e347f38f0e3e999cc52516cbbbedc82bac5b788/matplotcheck-0.0.11.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b68d319efcbaef8aa5949d8a0b1ba289", "sha256": "3bb13abc543f99280f0fd7bc56212850707890467a6f7830f898ee54ffd0e901"}, "downloads": -1, "filename": "matplotcheck-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b68d319efcbaef8aa5949d8a0b1ba289", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22837, "upload_time": "2019-04-03T00:57:46", "upload_time_iso_8601": "2019-04-03T00:57:46.047131Z", "url": "https://files.pythonhosted.org/packages/47/41/0033b42ba2993ef0299956d5c589d6712568027113267c482b7d34247d75/matplotcheck-0.0.7.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "8c0efc60b7603acff2e82dcd169c905e", "sha256": "5c4d3d620e67b658ae522ae9779070fe28fb5819c40d3cd35afb19f26554eb17"}, "downloads": -1, "filename": "matplotcheck-0.0.9.tar.gz", "has_sig": false, "md5_digest": "8c0efc60b7603acff2e82dcd169c905e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22839, "upload_time": "2019-04-03T14:25:41", "upload_time_iso_8601": "2019-04-03T14:25:41.682764Z", "url": "https://files.pythonhosted.org/packages/61/9a/03096fc8a1beddf6a26993b554a1fcf8c6d3537ec021de468c2a93471c4f/matplotcheck-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "477b7269d14de961cd21c951169da817", "sha256": "fdbdd3b8ff6d07c4c547537374b64ee5bc73015b892922b0e270e213537ec53d"}, "downloads": -1, "filename": "matplotcheck-0.1.0.tar.gz", "has_sig": false, "md5_digest": "477b7269d14de961cd21c951169da817", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28080, "upload_time": "2019-11-15T22:10:26", "upload_time_iso_8601": "2019-11-15T22:10:26.669855Z", "url": "https://files.pythonhosted.org/packages/b7/45/dcfe8c59c6e0148b43d3578775161e66b8021de31c0a5efd5d2bd10dc8b5/matplotcheck-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "911393a7754ce3265f0c7aab333683e9", "sha256": "ac3788daa0303cee80fe273a46ee260bec2bca177fdd2aac24f67de024ce21e0"}, "downloads": -1, "filename": "matplotcheck-0.1.1.tar.gz", "has_sig": false, "md5_digest": "911393a7754ce3265f0c7aab333683e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28598, "upload_time": "2020-01-10T23:45:30", "upload_time_iso_8601": "2020-01-10T23:45:30.963513Z", "url": "https://files.pythonhosted.org/packages/3e/3c/3b6974a6372482a253562ea4165a390ee64aae88574e7f01e7f484248b8f/matplotcheck-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dcaf036c86d241df71256914b35d7e31", "sha256": "92c247854b6c48f8e53029ce72efe09565984186076af692b3db4ad9516efdfd"}, "downloads": -1, "filename": "matplotcheck-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dcaf036c86d241df71256914b35d7e31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28744, "upload_time": "2020-02-14T15:28:38", "upload_time_iso_8601": "2020-02-14T15:28:38.549599Z", "url": "https://files.pythonhosted.org/packages/6a/17/19c9bc87ff6f1cfe2baf2489ea846aadbb0ddf0e4411442411353d4c081c/matplotcheck-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dcaf036c86d241df71256914b35d7e31", "sha256": "92c247854b6c48f8e53029ce72efe09565984186076af692b3db4ad9516efdfd"}, "downloads": -1, "filename": "matplotcheck-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dcaf036c86d241df71256914b35d7e31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28744, "upload_time": "2020-02-14T15:28:38", "upload_time_iso_8601": "2020-02-14T15:28:38.549599Z", "url": "https://files.pythonhosted.org/packages/6a/17/19c9bc87ff6f1cfe2baf2489ea846aadbb0ddf0e4411442411353d4c081c/matplotcheck-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:19 2020"}