{"info": {"author": "Petr Splichal", "author_email": "psplicha@redhat.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Utilities"], "description": "\n======================\n    tmt\n======================\n\nTest Management Tool\n\n\nDescription\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``tmt`` python module and command line tool implement the L1\nand L2 Metadata Specification which allows to store all needed\ntest execution data directly within a git repository. In this way\nit makes tests independent on any external test management system.\n\nThe Flexible Metadata Format ``fmf`` is used to store data in both\nhuman and machine readable way close to the source code. Thanks to\ninheritance and elasticity metadata are organized in the structure\nefficiently, preventing unnecessary duplication.\n\nCommand line tool allows to easily create new tests, convert old\nmetadata, list and filter available tests and verify them against\nthe L1 specification. Plans are used to group tests and precisely\ndefine individual test steps defined by the L2 specification, like\nenvironment preparation. Stories are used to track implementation,\ntest and documentation coverage for individual features.\n\nLast but not least, the tool provides a user-friendly way how to\nrun, debug and develop tests directly from your laptop across many\ndifferent test environments. This is currently a proof-of-concept\nso many features are still on the way. Check stories to see which\nfunctionality has already been implemented.\n\n\nSynopsis\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand line usage is straightforward::\n\n    tmt command [options]\n\n\nExamples\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRun all or selected steps for each plan::\n\n    tmt run\n    tmt run discover\n    tmt run prepare execute\n\nList tests, show details, check against the specification::\n\n    tmt test ls\n    tmt test show\n    tmt test lint\n\nCreate a new test, convert old metadata::\n\n    tmt test create\n    tmt test convert\n\nList plans, show details, check against the specification::\n\n    tmt plan ls\n    tmt plan show\n    tmt plan lint\n\nList stories, check details, show coverage status::\n\n    tmt story ls\n    tmt story show\n    tmt story coverage\n\nMany commands support regular expression filtering and other\nspecific options::\n\n    tmt story ls cli\n    tmt story show create\n    tmt story coverage --implemented\n\nCheck help message of individual commands for the full list of\navailable options.\n\n\nOptions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHere is the list of the most frequently used commands and options.\n\nRun\n---\n\nThe `run` command is used to execute test steps. By default all\ntest steps are run. See the L2 Metadata specification for detailed\ndescription of individual steps. For now here is at least a brief\noverview:\n\ndiscover\n    gather and show information about test cases to be executed\n\nprovision\n    provision an environment for testing (or use localhost)\n\nprepare\n    configure environment for testing (e.g. ansible playbook)\n\nexecute\n    run the tests (using the specified framework and its settings)\n\nreport\n    provide an overview of test results and send notifications\n\nfinish\n    additional actions to be performed after the test execution\n\nNote: This is only preview / draft of future functionality.\nFeatures described above are not implemented yet.\n\n\nTest\n----\n\nManage tests (L1 metadata). Check available tests, inspect their\nmetadata, gather old metadata from various sources and stored them\nin the new fmf format.\n\nls\n    List available tests.\nshow\n    Show test details.\nlint\n    Check tests against the L1 metadata specification.\ncreate\n    Create a new test based on given template.\nconvert\n    Convert old test metadata into the new fmf format.\n\n\nPlan\n----\n\nManage test plans (L2 metadata). Search for available plans.\nExplore detailed test step configuration.\n\nls\n    List available plans.\nshow\n    Show plan details.\nlint\n    Check plans against the L2 metadata specification.\n\n\nStory\n-----\n\nManage user stories. Check available user stories. Explore\ncoverage (test, implementation, documentation).\n\nls\n    List available stories.\nshow\n    Show story details.\ncoverage\n    Show code, test and docs coverage for given stories.\nexport\n    Export selected stories into desired format.\n\n\nUtils\n-----\n\nVarious utility options.\n\n--path PATH\n    Path to the metadata tree (default: current directory)\n\n--verbose\n    Print additional information standard error output\n\n--debug\n    Turn on debugging output, do not catch exceptions\n\nCheck help message of individual commands for the full list of\navailable options.\n\n\nInstall\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCurrently tmt is supported for Fedora 30 and later, RHEL 8 and\nCentOS 8, available directly in the distro repositories::\n\n    sudo dnf install tmt\n\nInstall the latest version from the ``copr`` repository::\n\n    sudo dnf copr enable psss/tmt\n    sudo dnf install tmt\n\nWhen installing using ``pip`` you might need to install additional\npackages on your system::\n\n    sudo dnf install gcc python3-devel libvirt-devel\n    pip install --user tmt\n\nYou can omit the ``--user`` flag if in a virtual environment.\n\n\nDevelop\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn order to experiment, play with the latest bits and develop\nimprovements it is best to use a virtual environment::\n\n    mkvirtualenv tmt\n    git clone https://github.com/psss/tmt\n    cd tmt\n    pip install -e .\n\nInstall ``python3-virtualenvwrapper`` to easily create and enable\nvirtual environments using ``mkvirtualenv`` and ``workon``. You\ncan also easily install optional dependencies in this way::\n\n    pip install '.[docs]'\n    pip install '.[tests]'\n    pip install '.[all]'\n\n\nLinks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGit:\nhttps://github.com/psss/tmt\n\nDocs:\nhttp://tmt.readthedocs.io/\n\nStories:\nhttps://tmt.readthedocs.io/en/latest/stories.html\n\nIssues:\nhttps://github.com/psss/tmt/issues\n\nReleases:\nhttps://github.com/psss/tmt/releases\n\nCopr:\nhttp://copr.fedoraproject.org/coprs/psss/tmt\n\nPIP:\nhttps://pypi.org/project/tmt/\n\nTravis:\nhttps://travis-ci.org/psss/tmt\n\nCoveralls:\nhttps://coveralls.io/github/psss/tmt\n\nMetadata Specification:\nhttps://tmt.readthedocs.io/en/latest/spec.html\n\nFlexible Metadata Format:\nhttp://fmf.readthedocs.io/\n\nPackit & Testing Farm:\nhttps://packit.dev/testing-farm/\n\n\nAuthors\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPetr \u0160pl\u00edchal, Miro Hron\u010dok, Alexander Sosedkin, Luk\u00e1\u0161 Zachar,\nPetr Men\u0161\u00edk, Leo\u0161 Pol, Miroslav Vadkerti, Pavel Valena, Jakub\nHeger, Honza Hor\u00e1k, Rachel Sibley, Franti\u0161ek Ne\u010das and Michal\nRuprich.\n\n\nCopyright\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCopyright (c) 2019 Red Hat, Inc.\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the MIT License.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/psss/tmt/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/psss/tmt", "keywords": "metadata,testing", "license": "MIT", "maintainer": "Petr Splichal", "maintainer_email": "psplicha@redhat.com", "name": "tmt", "package_url": "https://pypi.org/project/tmt/", "platform": "", "project_url": "https://pypi.org/project/tmt/", "project_urls": {"Download": "https://github.com/psss/tmt/archive/master.zip", "Homepage": "https://github.com/psss/tmt"}, "release_url": "https://pypi.org/project/tmt/0.15.1/", "requires_dist": ["fmf (>=0.9.2)", "click", "requests", "sphinx ; extra == 'all'", "sphinx-rtd-theme ; extra == 'all'", "pytest ; extra == 'all'", "python-coveralls ; extra == 'all'", "mock ; extra == 'all'", "testcloud ; extra == 'all'", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "testcloud ; extra == 'provision'", "pytest ; extra == 'tests'", "python-coveralls ; extra == 'tests'", "mock ; extra == 'tests'"], "requires_python": "", "summary": "Test Management Tool", "version": "0.15.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Test Management Tool</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>The <tt>tmt</tt> python module and command line tool implement the L1\nand L2 Metadata Specification which allows to store all needed\ntest execution data directly within a git repository. In this way\nit makes tests independent on any external test management system.</p>\n<p>The Flexible Metadata Format <tt>fmf</tt> is used to store data in both\nhuman and machine readable way close to the source code. Thanks to\ninheritance and elasticity metadata are organized in the structure\nefficiently, preventing unnecessary duplication.</p>\n<p>Command line tool allows to easily create new tests, convert old\nmetadata, list and filter available tests and verify them against\nthe L1 specification. Plans are used to group tests and precisely\ndefine individual test steps defined by the L2 specification, like\nenvironment preparation. Stories are used to track implementation,\ntest and documentation coverage for individual features.</p>\n<p>Last but not least, the tool provides a user-friendly way how to\nrun, debug and develop tests directly from your laptop across many\ndifferent test environments. This is currently a proof-of-concept\nso many features are still on the way. Check stories to see which\nfunctionality has already been implemented.</p>\n</div>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p>Command line usage is straightforward:</p>\n<pre>tmt command [options]\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Run all or selected steps for each plan:</p>\n<pre>tmt run\ntmt run discover\ntmt run prepare execute\n</pre>\n<p>List tests, show details, check against the specification:</p>\n<pre>tmt test ls\ntmt test show\ntmt test lint\n</pre>\n<p>Create a new test, convert old metadata:</p>\n<pre>tmt test create\ntmt test convert\n</pre>\n<p>List plans, show details, check against the specification:</p>\n<pre>tmt plan ls\ntmt plan show\ntmt plan lint\n</pre>\n<p>List stories, check details, show coverage status:</p>\n<pre>tmt story ls\ntmt story show\ntmt story coverage\n</pre>\n<p>Many commands support regular expression filtering and other\nspecific options:</p>\n<pre>tmt story ls cli\ntmt story show create\ntmt story coverage --implemented\n</pre>\n<p>Check help message of individual commands for the full list of\navailable options.</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>Here is the list of the most frequently used commands and options.</p>\n<div id=\"run\">\n<h3>Run</h3>\n<p>The <cite>run</cite> command is used to execute test steps. By default all\ntest steps are run. See the L2 Metadata specification for detailed\ndescription of individual steps. For now here is at least a brief\noverview:</p>\n<dl>\n<dt>discover</dt>\n<dd>gather and show information about test cases to be executed</dd>\n<dt>provision</dt>\n<dd>provision an environment for testing (or use localhost)</dd>\n<dt>prepare</dt>\n<dd>configure environment for testing (e.g. ansible playbook)</dd>\n<dt>execute</dt>\n<dd>run the tests (using the specified framework and its settings)</dd>\n<dt>report</dt>\n<dd>provide an overview of test results and send notifications</dd>\n<dt>finish</dt>\n<dd>additional actions to be performed after the test execution</dd>\n</dl>\n<p>Note: This is only preview / draft of future functionality.\nFeatures described above are not implemented yet.</p>\n</div>\n<div id=\"test\">\n<h3>Test</h3>\n<p>Manage tests (L1 metadata). Check available tests, inspect their\nmetadata, gather old metadata from various sources and stored them\nin the new fmf format.</p>\n<dl>\n<dt>ls</dt>\n<dd>List available tests.</dd>\n<dt>show</dt>\n<dd>Show test details.</dd>\n<dt>lint</dt>\n<dd>Check tests against the L1 metadata specification.</dd>\n<dt>create</dt>\n<dd>Create a new test based on given template.</dd>\n<dt>convert</dt>\n<dd>Convert old test metadata into the new fmf format.</dd>\n</dl>\n</div>\n<div id=\"plan\">\n<h3>Plan</h3>\n<p>Manage test plans (L2 metadata). Search for available plans.\nExplore detailed test step configuration.</p>\n<dl>\n<dt>ls</dt>\n<dd>List available plans.</dd>\n<dt>show</dt>\n<dd>Show plan details.</dd>\n<dt>lint</dt>\n<dd>Check plans against the L2 metadata specification.</dd>\n</dl>\n</div>\n<div id=\"story\">\n<h3>Story</h3>\n<p>Manage user stories. Check available user stories. Explore\ncoverage (test, implementation, documentation).</p>\n<dl>\n<dt>ls</dt>\n<dd>List available stories.</dd>\n<dt>show</dt>\n<dd>Show story details.</dd>\n<dt>coverage</dt>\n<dd>Show code, test and docs coverage for given stories.</dd>\n<dt>export</dt>\n<dd>Export selected stories into desired format.</dd>\n</dl>\n</div>\n<div id=\"utils\">\n<h3>Utils</h3>\n<p>Various utility options.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">--path <var>PATH</var></span></kbd></td>\n<td>Path to the metadata tree (default: current directory)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--verbose</span></kbd></td>\n<td>Print additional information standard error output</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--debug</span></kbd></td>\n<td>Turn on debugging output, do not catch exceptions</td></tr>\n</tbody>\n</table>\n<p>Check help message of individual commands for the full list of\navailable options.</p>\n</div>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Currently tmt is supported for Fedora 30 and later, RHEL 8 and\nCentOS 8, available directly in the distro repositories:</p>\n<pre>sudo dnf install tmt\n</pre>\n<p>Install the latest version from the <tt>copr</tt> repository:</p>\n<pre>sudo dnf copr enable psss/tmt\nsudo dnf install tmt\n</pre>\n<p>When installing using <tt>pip</tt> you might need to install additional\npackages on your system:</p>\n<pre>sudo dnf install gcc python3-devel libvirt-devel\npip install --user tmt\n</pre>\n<p>You can omit the <tt><span class=\"pre\">--user</span></tt> flag if in a virtual environment.</p>\n</div>\n<div id=\"develop\">\n<h2>Develop</h2>\n<p>In order to experiment, play with the latest bits and develop\nimprovements it is best to use a virtual environment:</p>\n<pre>mkvirtualenv tmt\ngit clone https://github.com/psss/tmt\ncd tmt\npip install -e .\n</pre>\n<p>Install <tt><span class=\"pre\">python3-virtualenvwrapper</span></tt> to easily create and enable\nvirtual environments using <tt>mkvirtualenv</tt> and <tt>workon</tt>. You\ncan also easily install optional dependencies in this way:</p>\n<pre>pip install '.[docs]'\npip install '.[tests]'\npip install '.[all]'\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<p>Git:\n<a href=\"https://github.com/psss/tmt\" rel=\"nofollow\">https://github.com/psss/tmt</a></p>\n<p>Docs:\n<a href=\"http://tmt.readthedocs.io/\" rel=\"nofollow\">http://tmt.readthedocs.io/</a></p>\n<p>Stories:\n<a href=\"https://tmt.readthedocs.io/en/latest/stories.html\" rel=\"nofollow\">https://tmt.readthedocs.io/en/latest/stories.html</a></p>\n<p>Issues:\n<a href=\"https://github.com/psss/tmt/issues\" rel=\"nofollow\">https://github.com/psss/tmt/issues</a></p>\n<p>Releases:\n<a href=\"https://github.com/psss/tmt/releases\" rel=\"nofollow\">https://github.com/psss/tmt/releases</a></p>\n<p>Copr:\n<a href=\"http://copr.fedoraproject.org/coprs/psss/tmt\" rel=\"nofollow\">http://copr.fedoraproject.org/coprs/psss/tmt</a></p>\n<p>PIP:\n<a href=\"https://pypi.org/project/tmt/\" rel=\"nofollow\">https://pypi.org/project/tmt/</a></p>\n<p>Travis:\n<a href=\"https://travis-ci.org/psss/tmt\" rel=\"nofollow\">https://travis-ci.org/psss/tmt</a></p>\n<p>Coveralls:\n<a href=\"https://coveralls.io/github/psss/tmt\" rel=\"nofollow\">https://coveralls.io/github/psss/tmt</a></p>\n<p>Metadata Specification:\n<a href=\"https://tmt.readthedocs.io/en/latest/spec.html\" rel=\"nofollow\">https://tmt.readthedocs.io/en/latest/spec.html</a></p>\n<p>Flexible Metadata Format:\n<a href=\"http://fmf.readthedocs.io/\" rel=\"nofollow\">http://fmf.readthedocs.io/</a></p>\n<p>Packit &amp; Testing Farm:\n<a href=\"https://packit.dev/testing-farm/\" rel=\"nofollow\">https://packit.dev/testing-farm/</a></p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Petr \u0160pl\u00edchal, Miro Hron\u010dok, Alexander Sosedkin, Luk\u00e1\u0161 Zachar,\nPetr Men\u0161\u00edk, Leo\u0161 Pol, Miroslav Vadkerti, Pavel Valena, Jakub\nHeger, Honza Hor\u00e1k, Rachel Sibley, Franti\u0161ek Ne\u010das and Michal\nRuprich.</p>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright (c) 2019 Red Hat, Inc.</p>\n<p>This program is free software; you can redistribute it and/or\nmodify it under the terms of the MIT License.</p>\n</div>\n\n          </div>"}, "last_serial": 7128901, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "611d494c5f721e5c97b4fd79c712ef2a", "sha256": "69d021863b5d697d3738c4e22756353c36f97d3976076e6465cbea1423b9e6de"}, "downloads": -1, "filename": "tmt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "611d494c5f721e5c97b4fd79c712ef2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5928, "upload_time": "2019-09-06T11:21:24", "upload_time_iso_8601": "2019-09-06T11:21:24.316895Z", "url": "https://files.pythonhosted.org/packages/d0/40/62de65958f8f94f86eff00abc19353bb766ab394fe14fbd0e3966e84de94/tmt-0.1.1-py3-none-any.whl", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "385f680586a636f6498128315f847ace", "sha256": "78e18b2aba9a79c9a49f5a054da9ca4c85cc723ec1c7f785296eb4a16fabc041"}, "downloads": -1, "filename": "tmt-0.14.1-py3-none-any.whl", "has_sig": false, "md5_digest": "385f680586a636f6498128315f847ace", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67073, "upload_time": "2020-04-17T06:43:44", "upload_time_iso_8601": "2020-04-17T06:43:44.809048Z", "url": "https://files.pythonhosted.org/packages/8d/d5/6d7bbe18bd36aaee47395a1d25821fde9bc5527fb1edf92f1e45a3764b79/tmt-0.14.1-py3-none-any.whl", "yanked": false}], "0.15.1": [{"comment_text": "", "digests": {"md5": "fdcebb441e1b6247e16f12ce08917486", "sha256": "c2ef7e0f9287816be139b1f0c436dd3e1f92ed014b3ed45e04b394ed18216874"}, "downloads": -1, "filename": "tmt-0.15.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fdcebb441e1b6247e16f12ce08917486", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76051, "upload_time": "2020-04-29T13:31:03", "upload_time_iso_8601": "2020-04-29T13:31:03.328475Z", "url": "https://files.pythonhosted.org/packages/85/db/f00f2f2d0b9b2fb71b5b5439e70362409a0a8dd2e098456704adada0fdca/tmt-0.15.1-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2095d7db7435b2e51913456ac08c0a09", "sha256": "5a5f8676b2a39575e5e82fc749adcf95ac3563c5abfcbfbe397f8a28f76aae76"}, "downloads": -1, "filename": "tmt-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2095d7db7435b2e51913456ac08c0a09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17736, "upload_time": "2019-10-09T16:39:01", "upload_time_iso_8601": "2019-10-09T16:39:01.273895Z", "url": "https://files.pythonhosted.org/packages/bc/1f/58633f425aaee17a3e277a6189dbddaaed511dfb954f3d3ed3d51507b917/tmt-0.2.1-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "db2167bf89a4121019b051f240ab59c6", "sha256": "1ea58ce4d17ae90a1d776ca8f3b120605ed43f95dfea1025bfc8ac24dc46bc00"}, "downloads": -1, "filename": "tmt-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db2167bf89a4121019b051f240ab59c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18774, "upload_time": "2019-10-10T13:13:58", "upload_time_iso_8601": "2019-10-10T13:13:58.693122Z", "url": "https://files.pythonhosted.org/packages/aa/97/3239b8f97d903e88c0c715c80d25d0350a2f3c62ac517ad979e90bf445ce/tmt-0.3.1-py3-none-any.whl", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "3d8178248ac9c9811ea3de6a83f45937", "sha256": "079b701985b22d35c420149de6cba48ae117277895f0d38d98e023aafc87039e"}, "downloads": -1, "filename": "tmt-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d8178248ac9c9811ea3de6a83f45937", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21594, "upload_time": "2019-10-17T14:01:26", "upload_time_iso_8601": "2019-10-17T14:01:26.256898Z", "url": "https://files.pythonhosted.org/packages/3d/28/763d29f6bba96a59f12af48518cf606c97a8d54bf495ec41f2a92a447be8/tmt-0.4.1-py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "1bdc8cfdb647a0ac59427b70940c91ee", "sha256": "b85040f89fbdfbd18e3f3d5bdb80fb9687a652b02af121089056ee2fcca5a0e6"}, "downloads": -1, "filename": "tmt-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1bdc8cfdb647a0ac59427b70940c91ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24523, "upload_time": "2019-10-29T13:05:21", "upload_time_iso_8601": "2019-10-29T13:05:21.850325Z", "url": "https://files.pythonhosted.org/packages/30/94/fb155793de9bdd00f8966293d0c2a4882ec8c2217b00e73be801c982eb57/tmt-0.5.1-py3-none-any.whl", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "cacdabd957e65eb8e9a901dfa1d7617c", "sha256": "4896a1033cb0c0e52d1472ed6831dd65cdaa132ac4ca4bc5e89f2f1b5c5ad6ec"}, "downloads": -1, "filename": "tmt-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cacdabd957e65eb8e9a901dfa1d7617c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38729, "upload_time": "2019-11-04T16:57:55", "upload_time_iso_8601": "2019-11-04T16:57:55.363418Z", "url": "https://files.pythonhosted.org/packages/61/5a/1c47b056045043b35ef068b5b6afcf1eb00df3566f23080a3a1d3b2542b9/tmt-0.6.1-py3-none-any.whl", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "292364c372201af5b8966f5c4f1db649", "sha256": "5b497b6439f33774369f4f47011c86110e18b0c84883da1c8196f039c80978bb"}, "downloads": -1, "filename": "tmt-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "292364c372201af5b8966f5c4f1db649", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49109, "upload_time": "2020-01-16T10:42:07", "upload_time_iso_8601": "2020-01-16T10:42:07.270178Z", "url": "https://files.pythonhosted.org/packages/80/9c/9ef4db8c325d25487bf513af290e04bbbfc5925d49bce0770ddb2abbb94c/tmt-0.8.1-py3-none-any.whl", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "fb8e9c52450f38a4fd58306ecd6b1178", "sha256": "c49ff590bdcfa16d1d324875e750e36ad535cc2694104e9edb186aeb4b08410d"}, "downloads": -1, "filename": "tmt-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb8e9c52450f38a4fd58306ecd6b1178", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51198, "upload_time": "2020-03-04T20:01:30", "upload_time_iso_8601": "2020-03-04T20:01:30.227376Z", "url": "https://files.pythonhosted.org/packages/fa/3c/7d5e531fc3e2aae40cf5027dd4bb0bb9f01cbb674e0446eea369895a5daf/tmt-0.9.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdcebb441e1b6247e16f12ce08917486", "sha256": "c2ef7e0f9287816be139b1f0c436dd3e1f92ed014b3ed45e04b394ed18216874"}, "downloads": -1, "filename": "tmt-0.15.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fdcebb441e1b6247e16f12ce08917486", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76051, "upload_time": "2020-04-29T13:31:03", "upload_time_iso_8601": "2020-04-29T13:31:03.328475Z", "url": "https://files.pythonhosted.org/packages/85/db/f00f2f2d0b9b2fb71b5b5439e70362409a0a8dd2e098456704adada0fdca/tmt-0.15.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:52:08 2020"}