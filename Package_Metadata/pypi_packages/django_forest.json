{"info": {"author": "Ali Zaidi", "author_email": "alixedi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "=============================\ndjango_forest\n=============================\n\n.. image:: https://badge.fury.io/py/django_forest.png\n    :target: http://badge.fury.io/py/django_forest\n    \n.. image:: https://travis-ci.org/alixedi/django_forest.png?branch=master\n        :target: https://travis-ci.org/alixedi/django_forest\n\n.. image:: https://pypip.in/d/django_forest/badge.png\n        :target: https://crate.io/packages/django_forest?version=latest\n\n\nComposite pages for django.\n\nInstallation\n------------\n\nWe are at the cheese-shop: ::\n\n    pip install django_forest\n\nUsage\n-----\n\nIn order to use django_forest in your project:\n\n1. Include `mptt` and `forest` in your `INSTALLED_APPS` settings.\n2. Enable `django-admin`.\n3. In your terminal, type: `python manage.py syncdb`\n4. Followed by: `python manage.py runserver`\n5. Point your browser to `localhost:8000/admin`\n6. Create a few `Pages`: Pages are defined as well, web-pages only that in context of django_forest, they contain `Widgets`.\n7. Create a few `Widgets`: Little boxes that point to a URL. The URL is used to get a partial-HTML rendered from a server or JSON which is then rendered into HTML client-side using `handlebar.js` templates.\n8. And finally we have `Templates`: If you haven't guessed already, these are client-side `handlebar.js` snippets that will get their context from the JSON at the URL defined in the `Widget`.\n9. The above arrangement is all you need to make composite pages. There is room for improvement: For instance, the `gridster.js` that allows for drag-and-drop functionality does not currently serialize its state to the server. However, I intend to iron-out these niggles in the coming release.Watch this space.\n\n\n\nHistory\n-------\n\n0.1.0 (2014-1-14)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alixedi/django_forest", "keywords": "django_forest", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django_forest", "package_url": "https://pypi.org/project/django_forest/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_forest/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alixedi/django_forest"}, "release_url": "https://pypi.org/project/django_forest/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Composite views for REST services.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/django_forest\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django_forest.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8e42da5954bca4b0a85f6f49659ad3080bd7464/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f5f666f726573742e706e67\"></a>\n<a href=\"https://travis-ci.org/alixedi/django_forest\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/alixedi/django_forest.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c7904a34262d2d96c010d114ce793db2d2a08d3/68747470733a2f2f7472617669732d63692e6f72672f616c69786564692f646a616e676f5f666f726573742e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://crate.io/packages/django_forest?version=latest\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/django_forest/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc51f2a15291ac2f18ece105e64cc80101d84bbc/68747470733a2f2f70797069702e696e2f642f646a616e676f5f666f726573742f62616467652e706e67\"></a>\n<p>Composite pages for django.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>We are at the cheese-shop:</p>\n<pre>pip install django_forest\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In order to use django_forest in your project:</p>\n<ol>\n<li>Include <cite>mptt</cite> and <cite>forest</cite> in your <cite>INSTALLED_APPS</cite> settings.</li>\n<li>Enable <cite>django-admin</cite>.</li>\n<li>In your terminal, type: <cite>python manage.py syncdb</cite></li>\n<li>Followed by: <cite>python manage.py runserver</cite></li>\n<li>Point your browser to <cite>localhost:8000/admin</cite></li>\n<li>Create a few <cite>Pages</cite>: Pages are defined as well, web-pages only that in context of django_forest, they contain <cite>Widgets</cite>.</li>\n<li>Create a few <cite>Widgets</cite>: Little boxes that point to a URL. The URL is used to get a partial-HTML rendered from a server or JSON which is then rendered into HTML client-side using <cite>handlebar.js</cite> templates.</li>\n<li>And finally we have <cite>Templates</cite>: If you haven\u2019t guessed already, these are client-side <cite>handlebar.js</cite> snippets that will get their context from the JSON at the URL defined in the <cite>Widget</cite>.</li>\n<li>The above arrangement is all you need to make composite pages. There is room for improvement: For instance, the <cite>gridster.js</cite> that allows for drag-and-drop functionality does not currently serialize its state to the server. However, I intend to iron-out these niggles in the coming release.Watch this space.</li>\n</ol>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2014-1-14)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 969699, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0cd208b862fd313a84a3a86acdc54710", "sha256": "c38ae8cf5d6ebf0822023af488e3d13263fb8741a8700c59223ebb582003ac3b"}, "downloads": -1, "filename": "django_forest-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0cd208b862fd313a84a3a86acdc54710", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55974, "upload_time": "2014-01-15T08:11:37", "upload_time_iso_8601": "2014-01-15T08:11:37.615944Z", "url": "https://files.pythonhosted.org/packages/55/0b/c5f7cf2ff2fc63e905026782fd3b56e914eba12140a0bc209c1dacd66e63/django_forest-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "19328aeb25ff8554463e68cd45d232e7", "sha256": "f842f9b888bd79e617aaf19a7c371af657fa286bac5d01dd9c3a657c10a4b8db"}, "downloads": -1, "filename": "django_forest-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19328aeb25ff8554463e68cd45d232e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55978, "upload_time": "2014-01-15T08:15:08", "upload_time_iso_8601": "2014-01-15T08:15:08.344601Z", "url": "https://files.pythonhosted.org/packages/7a/6a/4e27cd53a2a84acbda293bc786aed81eb19e9a5fb6e859f46cb42285179e/django_forest-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19328aeb25ff8554463e68cd45d232e7", "sha256": "f842f9b888bd79e617aaf19a7c371af657fa286bac5d01dd9c3a657c10a4b8db"}, "downloads": -1, "filename": "django_forest-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19328aeb25ff8554463e68cd45d232e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55978, "upload_time": "2014-01-15T08:15:08", "upload_time_iso_8601": "2014-01-15T08:15:08.344601Z", "url": "https://files.pythonhosted.org/packages/7a/6a/4e27cd53a2a84acbda293bc786aed81eb19e9a5fb6e859f46cb42285179e/django_forest-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:02 2020"}