{"info": {"author": "Christopher Welborn", "author_email": "cj@welbornprod.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "FindFunc\n========\n\nFinds and prints function definitions/signatures in source code files.\nIt currently handles JavaScript, Shell, Python (classes too, since\nthey're just functions anyway :smile:), and C-style function\ndefinitions, as well as Makefile targets. It will highlight the body of\nthe functions for readability.\n\nDependencies\n------------\n\nThese are installable with ``pip``:\n\n+--------------------------------------------------------------+------------------------------------------+\n| Name                                                         | Description                              |\n+==============================================================+==========================================+\n| `colr <https://github.com/welbornprod/colr>`__               | Terminal colors.                         |\n+--------------------------------------------------------------+------------------------------------------+\n| `docopt <https://github.com/docopt/docopt>`__                | Command line argument parsing.           |\n+--------------------------------------------------------------+------------------------------------------+\n| `printdebug <https://github.com/welbornprod/printdebug>`__   | Debug printing for command line tools.   |\n+--------------------------------------------------------------+------------------------------------------+\n| `pygments <http://pygments.org>`__                           | Source code highlighting.                |\n+--------------------------------------------------------------+------------------------------------------+\n\nInstallation:\n-------------\n\nThis package is listed on PyPi, and is installable with ``pip``:\n\n.. code:: bash\n\n    pip install findfunc\n\nUsage\n-----\n\n::\n\n    Usage:\n        findfunc -h | -v\n        findfunc PAT -p [-a] [--color] [-d] [-D...] [-S] [-s]\n                 [-c pat] [-C pat] [-e pat] [-f pat] [-l num] [-m num]\n        findfunc PAT [PATH...] [-a] [--color] [-d] [-D...] [-S] [-s]\n                 [-c pat] [-C pat] [-e pat] [-f pat] [-l num] [-m num]\n\n    Options:\n        PATH                   : Zero or more file paths to search.\n                                 If the path is a directory it will be walked.\n                                 Default: stdin\n        PAT                    : Function name or regex pattern to search for.\n        -a,--any               : Matches anywhere in the name.\n                                 This is the same as: (.+?pattern|pattern.+?)\n        --color                : Always use color.\n        -c pat,--contains pat  : Only show definitions that contain this\n                                 pattern in the body.\n        -C pat,--without pat   : Only show definitions that do not contain\n                                 this pattern in the body.\n                                 This cancels out any -c pattern.\n        -D,--debug             : Print some debugging info while running.\n                                 If given more than once, the verbosity\n                                 increases.\n        -d,--defines           : Allow `#define` macros to match.\n        -e pat,--exclude pat   : Regex pattern to exclude file paths.\n        -f pat,--filter pat    : Regex pattern to include file paths.\n        -h,--help              : Show this help message.\n        -l num,--length num    : Show definitions that match this line length.\n                                 Tests can be prepended:\n                                     >N  : More than N lines.\n                                     <N  : Less than N lines.\n                                    >=N  : More than or equal to N lines.\n                                    <=N  : Less than or equal to N lines.\n                                     =N  : Exactly N lines.\n                                    ==N  : Exactly N lines.\n                                      N  : Exactly N lines.\n        -m num,--maxcount num  : Maximum number of definitions to show.\n        -p,--paths             : Search all directories found in the config\n                                 file.\n        -S,--signature         : Just print the signatures found.\n        -s,--short             : Use shorter output mode.\n        -v,--version           : Show version.\n\n    Any file with a name like '[Mm]akefile' will trigger makefile-mode.\n    Unfortunately that mode doesn't work for stdin data.\n\n    JSON config can be loaded from: ~/findfunc.json\n\nDemo\n----\n\nHere is a recording showing FindFunc's output when ran multiple times\nfor various file types:\n\n|asciicast|\n\nInstead of typing each command, I made a script to do it for me. So it\nmay seem a little fast. It's running ``findfunc PATTERN DIR_OR_FILE``\nwith or without a ``--maxcount`` or ``--signature`` flag set.\n\nConfig\n------\n\nConfig is a JSON file that can be loaded from ``CWD``,\n``~/findfunc.json``, or ``~/.local/share/findfunc.json``.\n\nIt's format is:\n\n.. code:: json\n\n    {\n        \"default_paths\": [\"my_dir1\", \"my_file1\", \"/home/me/scripts\"]\n    }\n\n``default_paths`` is a list of directory or file paths to search when\nthe ``-p`` flag is given.\n\n.. |asciicast| image:: https://asciinema.org/a/112297.png\n   :target: https://asciinema.org/a/112297\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/welbornprod/findfunc", "keywords": "python 3 command line tool function class definition signature", "license": "", "maintainer": "", "maintainer_email": "", "name": "FindFunc", "package_url": "https://pypi.org/project/FindFunc/", "platform": "", "project_url": "https://pypi.org/project/FindFunc/", "project_urls": {"Homepage": "https://github.com/welbornprod/findfunc"}, "release_url": "https://pypi.org/project/FindFunc/0.4.5/", "requires_dist": null, "requires_python": "", "summary": "Finds function definitions/signatures from the command line.\n", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Finds and prints function definitions/signatures in source code files.\nIt currently handles JavaScript, Shell, Python (classes too, since\nthey\u2019re just functions anyway :smile:), and C-style function\ndefinitions, as well as Makefile targets. It will highlight the body of\nthe functions for readability.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>These are installable with <tt>pip</tt>:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/welbornprod/colr\" rel=\"nofollow\">colr</a></td>\n<td>Terminal colors.</td>\n</tr>\n<tr><td><a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt</a></td>\n<td>Command line argument parsing.</td>\n</tr>\n<tr><td><a href=\"https://github.com/welbornprod/printdebug\" rel=\"nofollow\">printdebug</a></td>\n<td>Debug printing for command line tools.</td>\n</tr>\n<tr><td><a href=\"http://pygments.org\" rel=\"nofollow\">pygments</a></td>\n<td>Source code highlighting.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p>This package is listed on PyPi, and is installable with <tt>pip</tt>:</p>\n<pre>pip install findfunc\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage:\n    findfunc -h | -v\n    findfunc PAT -p [-a] [--color] [-d] [-D...] [-S] [-s]\n             [-c pat] [-C pat] [-e pat] [-f pat] [-l num] [-m num]\n    findfunc PAT [PATH...] [-a] [--color] [-d] [-D...] [-S] [-s]\n             [-c pat] [-C pat] [-e pat] [-f pat] [-l num] [-m num]\n\nOptions:\n    PATH                   : Zero or more file paths to search.\n                             If the path is a directory it will be walked.\n                             Default: stdin\n    PAT                    : Function name or regex pattern to search for.\n    -a,--any               : Matches anywhere in the name.\n                             This is the same as: (.+?pattern|pattern.+?)\n    --color                : Always use color.\n    -c pat,--contains pat  : Only show definitions that contain this\n                             pattern in the body.\n    -C pat,--without pat   : Only show definitions that do not contain\n                             this pattern in the body.\n                             This cancels out any -c pattern.\n    -D,--debug             : Print some debugging info while running.\n                             If given more than once, the verbosity\n                             increases.\n    -d,--defines           : Allow `#define` macros to match.\n    -e pat,--exclude pat   : Regex pattern to exclude file paths.\n    -f pat,--filter pat    : Regex pattern to include file paths.\n    -h,--help              : Show this help message.\n    -l num,--length num    : Show definitions that match this line length.\n                             Tests can be prepended:\n                                 &gt;N  : More than N lines.\n                                 &lt;N  : Less than N lines.\n                                &gt;=N  : More than or equal to N lines.\n                                &lt;=N  : Less than or equal to N lines.\n                                 =N  : Exactly N lines.\n                                ==N  : Exactly N lines.\n                                  N  : Exactly N lines.\n    -m num,--maxcount num  : Maximum number of definitions to show.\n    -p,--paths             : Search all directories found in the config\n                             file.\n    -S,--signature         : Just print the signatures found.\n    -s,--short             : Use shorter output mode.\n    -v,--version           : Show version.\n\nAny file with a name like '[Mm]akefile' will trigger makefile-mode.\nUnfortunately that mode doesn't work for stdin data.\n\nJSON config can be loaded from: ~/findfunc.json\n</pre>\n</div>\n<div id=\"demo\">\n<h2>Demo</h2>\n<p>Here is a recording showing FindFunc\u2019s output when ran multiple times\nfor various file types:</p>\n<p><a href=\"https://asciinema.org/a/112297\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/007b322c60ea1930f41aef1abe649010b0b3fecf/68747470733a2f2f61736369696e656d612e6f72672f612f3131323239372e706e67\"></a></p>\n<p>Instead of typing each command, I made a script to do it for me. So it\nmay seem a little fast. It\u2019s running <tt>findfunc PATTERN DIR_OR_FILE</tt>\nwith or without a <tt><span class=\"pre\">--maxcount</span></tt> or <tt><span class=\"pre\">--signature</span></tt> flag set.</p>\n</div>\n<div id=\"config\">\n<h2>Config</h2>\n<p>Config is a JSON file that can be loaded from <tt>CWD</tt>,\n<tt>~/findfunc.json</tt>, or <tt><span class=\"pre\">~/.local/share/findfunc.json</span></tt>.</p>\n<p>It\u2019s format is:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"default_paths\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"my_dir1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my_file1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/home/me/scripts\"</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p><tt>default_paths</tt> is a list of directory or file paths to search when\nthe <tt><span class=\"pre\">-p</span></tt> flag is given.</p>\n</div>\n\n          </div>"}, "last_serial": 6857243, "releases": {"0.4.3": [{"comment_text": "", "digests": {"md5": "3f50b1d1762e1b05dfb2f2bfad196ce9", "sha256": "df4bd1152da7e400054c558968b5b6ce7101aff0a5e1e744140ed01e4586dc18"}, "downloads": -1, "filename": "FindFunc-0.4.3.tar.gz", "has_sig": false, "md5_digest": "3f50b1d1762e1b05dfb2f2bfad196ce9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11123, "upload_time": "2017-04-10T03:31:36", "upload_time_iso_8601": "2017-04-10T03:31:36.426506Z", "url": "https://files.pythonhosted.org/packages/69/a0/3eeb87561ee3f04cd8a1d124e87cbcb43b3110a98fa9ef66e204066ab59f/FindFunc-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "685def73f92f8a37319dffeb9bdb2638", "sha256": "462e41b4940565bfba53276617d0cbd6243a1549b8cf6c276dd21e00f46a049b"}, "downloads": -1, "filename": "FindFunc-0.4.4.tar.gz", "has_sig": false, "md5_digest": "685def73f92f8a37319dffeb9bdb2638", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13074, "upload_time": "2019-04-02T23:13:45", "upload_time_iso_8601": "2019-04-02T23:13:45.090078Z", "url": "https://files.pythonhosted.org/packages/41/f7/a72755c5ece9514529df90bb0038d772d6625968983a4fed699d86b467d3/FindFunc-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "c2beb0a9b9232b43b04932e5a407b944", "sha256": "f929cb315d0300d02737501618bd35a8aacf54c7713c3b75d3a8539739d08585"}, "downloads": -1, "filename": "FindFunc-0.4.5.tar.gz", "has_sig": false, "md5_digest": "c2beb0a9b9232b43b04932e5a407b944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13912, "upload_time": "2020-03-21T21:19:39", "upload_time_iso_8601": "2020-03-21T21:19:39.722047Z", "url": "https://files.pythonhosted.org/packages/50/1c/ab18ee91a4beea8fc9a6118a1d1983b94c0f690bb1e58530b7ce812517bb/FindFunc-0.4.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2beb0a9b9232b43b04932e5a407b944", "sha256": "f929cb315d0300d02737501618bd35a8aacf54c7713c3b75d3a8539739d08585"}, "downloads": -1, "filename": "FindFunc-0.4.5.tar.gz", "has_sig": false, "md5_digest": "c2beb0a9b9232b43b04932e5a407b944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13912, "upload_time": "2020-03-21T21:19:39", "upload_time_iso_8601": "2020-03-21T21:19:39.722047Z", "url": "https://files.pythonhosted.org/packages/50/1c/ab18ee91a4beea8fc9a6118a1d1983b94c0f690bb1e58530b7ce812517bb/FindFunc-0.4.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:24 2020"}