{"info": {"author": "Daniel Kaufhold", "author_email": "daniel.kaufhold@bitlabstudio.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django Review\n=============\n\nA reusable Django app that lets users write reviews for any model\n\nInstallation\n------------\n\nTo get the latest stable release from PyPi\n\n.. code-block:: bash\n\n    $ pip install django-review\n\nTo get the latest commit from GitHub\n\n.. code-block:: bash\n\n    $ pip install -e git+git://github.com/bitmazk/django-review.git#egg=review\n\nTODO: Describe further installation steps (edit / remove the examples below):\n\nAdd ``review`` to your ``INSTALLED_APPS``\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...,\n        'hvad',\n        'review',\n        'user_media',\n        'generic_positions',\n    )\n\nAdd the ``review`` URLs to your ``urls.py``\n\n.. code-block:: python\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^review/', include('review.urls')),\n    )\n\nDon't forget to migrate your database\n\n.. code-block:: bash\n\n    ./manage.py migrate\n\n\nUsage\n-----\n\nThe only step you'll have to take is to link to the review views. For example,\nyou created a ``Book`` model, which should be reviewed by users.\n\nCreate a button and add some markup like:\n\n.. code-block:: html\n\n    <a href=\"{% url \"review_create\" content_type='book' object_id=book.pk %}\">{% trans \"Review this book\" %}</a>\n\n\nRatings & Categories\n--------------------\n\nTo make use of ratings you'll have to create RatingCategory objects. For example,\nyou want to allow reviews of a hotel booking. You now might add categories like\n\"room\", \"service\", \"food\" or whatever. After you have created those categories\nin the standard Django admin interface they will appear in your review form. The\naverage rating of an object is generated by all of its category ratings.\n\nTemplate tags\n-------------\n\ntotal_review_average\n++++++++++++++++++++\n\nFor rendering the total review average for any object, you can use the\nassignment tag ``total_review_average``. It automatically calculates the\naverages of all reviews for the given object and you can specify what range it\nshould have. The following examples would resemble a percentage or a stars\nrating:\n\n.. code-block:: html\n\n    {% load review_tags %}\n    {% total_review_average object 100 as percentage %}\n    <p>{{ percentage }}% of our users recommended this!</p>\n\n    {% total_review_average object 5 as stars %}\n    <p>This object got {{ stars }} out of 5 stars.</p>\n\n\nrender_category_averages\n++++++++++++++++++++++++\n\nRenders the template ``review/partials/category_averages.html`` to display a\ntable of categories with their average rating.\nAgain, you can specify what maximum rating value the averages normalize to.\n\n.. code-block:: html\n\n    {% load review_tags %}\n    {% render_category_averages object 100 %}\n\n\nIf you had 2 categories, this would per default render to something like the\nfollowing example, but you can of course customize the template to your needs.\n\n.. code-block:: html\n\n    <table>\n        <tr><th>Category 1:</th><td>10.0</td></tr>\n        <tr><th>Category 2:</th><td>20.0</td></tr>\n        <tr><th>Amount of reviews:</th><td>2</td></tr>\n    </table>\n\n\nget_reviews\n+++++++++++\n\nAn assignment tag, that simply returns the reviews made for the given object.\nAn example usage would look like this:\n\n.. code-block:: html\n\n    {% load review_tags %}\n\n    {% get_reviews object as reviews %}\n    {% for review in reviews %}\n        <p>\n            {{ review.get_average_rating }}\n        </p>\n        <p>\n            {% if review.content %}\n                {{ review.content|truncatewords:'70' }}\n            {% else %}\n                Reviewed without description.\n            {% endif %}\n        </div>\n        <a href=\"{% url \"review_detail\" pk=object.pk %}\">Review details</a>\n    {% endfor %}\n\n\nget_review_average\n++++++++++++++++++\n\nAn assignment tag, that returns the review average for the given object. An\nexample usage would look like this:\n\n.. code-block:: html\n\n    {% load review_tags %}\n\n    {% get_review_average object as review_average %}\n    <p>This object is rated by {{ review_average }}</p>\n\n\nget_review_count\n++++++++++++++++\n\nAn assignment tag, that simply returns the amount of reviews made for the\ngiven object. An example usage would look like this:\n\n.. code-block:: html\n\n    {% load review_tags %}\n\n    {% get_review_count object as review_count %}\n    <p>{{ review_count }} users have reviewed this so far.</p>\n\n\nuser_has_reviewed\n+++++++++++++++++\n\nTo quickly check if a user has already reviewed the given object, you can use\nthis template tag. An example usage could be something like this:\n\n.. code-block:: html\n\n    {% load review_tags %}\n    {% user_has_reviewed myobject request.user as has_reviewed %}\n    {% if has_reviewed %}\n        <p>Thanks for your opinion!</p>\n    {% else %}\n        <a href=\"{% url \"review_create\" content_type='book' object_id=book.pk %}\">{% trans \"Review this book\" %}</a>\n    {% endif %}\n\n\nSettings\n--------\n\nDefault behaviour:\n\n* Users can rate form 0 to 5\n* Only authenticated users can post a review\n* Users can post multiple reviews on one object\n* Users can always update their posted reviews\n\nIf you want to change this behaviour, or if you like to add some more\npermission checks, read on.\n\nREVIEW_RATING_CHOICES\n+++++++++++++++++++++\n\nIf you want other rating choices than 0-5, you can define a new tuple, like:\n\n.. code-block:: python\n\n    REVIEW_RATING_CHOICES = (\n        ('1', 'bad'),\n        ('2', 'average'),\n        ('3', 'excellent'),\n    )\n\n\nREVIEW_ALLOW_ANONYMOUS\n++++++++++++++++++++++\n\nAllows anonymous review postings, if set to ``True``.\n\n\nREVIEW_DELETION_SUCCESS_URL\n+++++++++++++++++++++++++++\n\nName of the URL to redirect to after deleting a review instance. This could\nbe your review listing, for example.\n\n\nREVIEW_UPDATE_SUCCESS_URL (optional)\n++++++++++++++++++++++++++++++++++++\n\nDefault: DetailView of the instance.\n\nName of the URL to redirect to after creating/updating a review instance.\nThis could be your review listing, for example.\n\n.. code-block:: python\n\n    REVIEW_UPDATE_SUCCESS_URL = 'my_view_name'\n\n\nOr you can also specify a function, that returns the full path. The function\nthen takes the review as parameter, so you can also access the reviewed item\nlike follows\n\n.. code-block:: python\n\n    REVIEW_UPDATE_SUCCESS_URL = lambda review: review.reviewed_item.get_absolute_url()\n\n\n\nREVIEW_AVOID_MULTIPLE_REVIEWS\n+++++++++++++++++++++++++++++\n\nAvoids multiple reviews by one user, if set to ``True``.\nDoesn't work with anonymous users.\n\n\nREVIEW_PERMISSION_FUNCTION\n++++++++++++++++++++++++++\n\nCustom function to check the user's permission. Use a function and note that\nthe user and the reviewed item are only parameters.\n\n.. code-block:: python\n\n    REVIEW_PERMISSION_FUNCTION = lambda u, item: u.get_profile().has_permission(item)\n\n\nREVIEW_UPDATE_PERIOD\n++++++++++++++++++++\n\nYou can limit the period, in which a user is able to update old reviews.\nMake sure to use minutes, e.g. 2880 for 48 hours.\n\n\nREVIEW_CUSTOM_FORM\n++++++++++++++++++\n\nYou can create your own review form (e.g. if you want to make use of the review\nextra info). Just name it.\n\n.. code-block:: python\n\n    REVIEW_CUSTOM_FORM = 'myapp.forms.MyCustomReviewForm'\n\nTake a look at the included test app to get an example.\n\nYou can also use a custom form to add another content object to the review\ninstance.\n\n\nREVIEW_FORM_CHOICE_WIDGET\n+++++++++++++++++++++++++\n\nIf you only want to override Django's default widget for the used\n``ChoiceField``, that is used in the form, you can specify this optional\nsetting.\n\n.. code-block:: python\n\n    # this would use a RadioSelect instead of the default Select\n    REVIEW_FORM_CHOICE_WIDGET = 'django.forms.widgets.RadioSelect'\n\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps\n\n.. code-block:: bash\n\n    # Fork this repository\n    # Clone your fork\n    $ mkvirtualenv -p python2.7 django-review\n    $ python setup.py install\n    $ pip install -r dev_requirements.txt\n\n    $ git co -b feature_branch master\n    # Implement your feature and tests\n    $ git add . && git commit\n    $ git push -u origin feature_branch\n    # Send us a pull request for your feature branch\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitmazk/django-review", "keywords": "django", "license": "The MIT License", "maintainer": "", "maintainer_email": "", "name": "django-review", "package_url": "https://pypi.org/project/django-review/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-review/", "project_urls": {"Homepage": "https://github.com/bitmazk/django-review"}, "release_url": "https://pypi.org/project/django-review/1.10.0/", "requires_dist": null, "requires_python": "", "summary": "A reusable Django app that lets users write reviews for any model\n", "version": "1.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A reusable Django app that lets users write reviews for any model</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To get the latest stable release from PyPi</p>\n<pre>$ pip install django-review\n</pre>\n<p>To get the latest commit from GitHub</p>\n<pre>$ pip install -e git+git://github.com/bitmazk/django-review.git#egg<span class=\"o\">=</span>review\n</pre>\n<p>TODO: Describe further installation steps (edit / remove the examples below):</p>\n<p>Add <tt>review</tt> to your <tt>INSTALLED_APPS</tt></p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'hvad'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'review'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'user_media'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'generic_positions'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Add the <tt>review</tt> URLs to your <tt>urls.py</tt></p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^review/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'review.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Don\u2019t forget to migrate your database</p>\n<pre>./manage.py migrate\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The only step you\u2019ll have to take is to link to the review views. For example,\nyou created a <tt>Book</tt> model, which should be reviewed by users.</p>\n<p>Create a button and add some markup like:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"{% url \"</span><span class=\"na\">review_create</span><span class=\"err\">\"</span> <span class=\"na\">content_type</span><span class=\"o\">=</span><span class=\"s\">'book'</span> <span class=\"na\">object_id</span><span class=\"o\">=</span><span class=\"s\">book.pk</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;</span>{% trans \"Review this book\" %}<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"ratings-categories\">\n<h2>Ratings &amp; Categories</h2>\n<p>To make use of ratings you\u2019ll have to create RatingCategory objects. For example,\nyou want to allow reviews of a hotel booking. You now might add categories like\n\u201croom\u201d, \u201cservice\u201d, \u201cfood\u201d or whatever. After you have created those categories\nin the standard Django admin interface they will appear in your review form. The\naverage rating of an object is generated by all of its category ratings.</p>\n</div>\n<div id=\"template-tags\">\n<h2>Template tags</h2>\n<div id=\"total-review-average\">\n<h3>total_review_average</h3>\n<p>For rendering the total review average for any object, you can use the\nassignment tag <tt>total_review_average</tt>. It automatically calculates the\naverages of all reviews for the given object and you can specify what range it\nshould have. The following examples would resemble a percentage or a stars\nrating:</p>\n<pre>{% load review_tags %}\n{% total_review_average object 100 as percentage %}\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>{{ percentage }}% of our users recommended this!<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n\n{% total_review_average object 5 as stars %}\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>This object got {{ stars }} out of 5 stars.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"render-category-averages\">\n<h3>render_category_averages</h3>\n<p>Renders the template <tt>review/partials/category_averages.html</tt> to display a\ntable of categories with their average rating.\nAgain, you can specify what maximum rating value the averages normalize to.</p>\n<pre>{% load review_tags %}\n{% render_category_averages object 100 %}\n</pre>\n<p>If you had 2 categories, this would per default render to something like the\nfollowing example, but you can of course customize the template to your needs.</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span><span class=\"p\">&gt;</span>Category 1:<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>10.0<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span><span class=\"p\">&gt;</span>Category 2:<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>20.0<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span><span class=\"p\">&gt;</span>Amount of reviews:<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>2<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"get-reviews\">\n<h3>get_reviews</h3>\n<p>An assignment tag, that simply returns the reviews made for the given object.\nAn example usage would look like this:</p>\n<pre>{% load review_tags %}\n\n{% get_reviews object as reviews %}\n{% for review in reviews %}\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        {{ review.get_average_rating }}\n    <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        {% if review.content %}\n            {{ review.content|truncatewords:'70' }}\n        {% else %}\n            Reviewed without description.\n        {% endif %}\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"{% url \"</span><span class=\"na\">review_detail</span><span class=\"err\">\"</span> <span class=\"na\">pk</span><span class=\"o\">=</span><span class=\"s\">object.pk</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;</span>Review details<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n{% endfor %}\n</pre>\n</div>\n<div id=\"get-review-average\">\n<h3>get_review_average</h3>\n<p>An assignment tag, that returns the review average for the given object. An\nexample usage would look like this:</p>\n<pre>{% load review_tags %}\n\n{% get_review_average object as review_average %}\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>This object is rated by {{ review_average }}<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"get-review-count\">\n<h3>get_review_count</h3>\n<p>An assignment tag, that simply returns the amount of reviews made for the\ngiven object. An example usage would look like this:</p>\n<pre>{% load review_tags %}\n\n{% get_review_count object as review_count %}\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>{{ review_count }} users have reviewed this so far.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"user-has-reviewed\">\n<h3>user_has_reviewed</h3>\n<p>To quickly check if a user has already reviewed the given object, you can use\nthis template tag. An example usage could be something like this:</p>\n<pre>{% load review_tags %}\n{% user_has_reviewed myobject request.user as has_reviewed %}\n{% if has_reviewed %}\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Thanks for your opinion!<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n{% else %}\n    <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"{% url \"</span><span class=\"na\">review_create</span><span class=\"err\">\"</span> <span class=\"na\">content_type</span><span class=\"o\">=</span><span class=\"s\">'book'</span> <span class=\"na\">object_id</span><span class=\"o\">=</span><span class=\"s\">book.pk</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;</span>{% trans \"Review this book\" %}<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n{% endif %}\n</pre>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>Default behaviour:</p>\n<ul>\n<li>Users can rate form 0 to 5</li>\n<li>Only authenticated users can post a review</li>\n<li>Users can post multiple reviews on one object</li>\n<li>Users can always update their posted reviews</li>\n</ul>\n<p>If you want to change this behaviour, or if you like to add some more\npermission checks, read on.</p>\n<div id=\"review-rating-choices\">\n<h3>REVIEW_RATING_CHOICES</h3>\n<p>If you want other rating choices than 0-5, you can define a new tuple, like:</p>\n<pre><span class=\"n\">REVIEW_RATING_CHOICES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'bad'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"s1\">'average'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'3'</span><span class=\"p\">,</span> <span class=\"s1\">'excellent'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"review-allow-anonymous\">\n<h3>REVIEW_ALLOW_ANONYMOUS</h3>\n<p>Allows anonymous review postings, if set to <tt>True</tt>.</p>\n</div>\n<div id=\"review-deletion-success-url\">\n<h3>REVIEW_DELETION_SUCCESS_URL</h3>\n<p>Name of the URL to redirect to after deleting a review instance. This could\nbe your review listing, for example.</p>\n</div>\n<div id=\"review-update-success-url-optional\">\n<h3>REVIEW_UPDATE_SUCCESS_URL (optional)</h3>\n<p>Default: DetailView of the instance.</p>\n<p>Name of the URL to redirect to after creating/updating a review instance.\nThis could be your review listing, for example.</p>\n<pre><span class=\"n\">REVIEW_UPDATE_SUCCESS_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'my_view_name'</span>\n</pre>\n<p>Or you can also specify a function, that returns the full path. The function\nthen takes the review as parameter, so you can also access the reviewed item\nlike follows</p>\n<pre><span class=\"n\">REVIEW_UPDATE_SUCCESS_URL</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">review</span><span class=\"p\">:</span> <span class=\"n\">review</span><span class=\"o\">.</span><span class=\"n\">reviewed_item</span><span class=\"o\">.</span><span class=\"n\">get_absolute_url</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"review-avoid-multiple-reviews\">\n<h3>REVIEW_AVOID_MULTIPLE_REVIEWS</h3>\n<p>Avoids multiple reviews by one user, if set to <tt>True</tt>.\nDoesn\u2019t work with anonymous users.</p>\n</div>\n<div id=\"review-permission-function\">\n<h3>REVIEW_PERMISSION_FUNCTION</h3>\n<p>Custom function to check the user\u2019s permission. Use a function and note that\nthe user and the reviewed item are only parameters.</p>\n<pre><span class=\"n\">REVIEW_PERMISSION_FUNCTION</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">:</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">get_profile</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">has_permission</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"review-update-period\">\n<h3>REVIEW_UPDATE_PERIOD</h3>\n<p>You can limit the period, in which a user is able to update old reviews.\nMake sure to use minutes, e.g. 2880 for 48 hours.</p>\n</div>\n<div id=\"review-custom-form\">\n<h3>REVIEW_CUSTOM_FORM</h3>\n<p>You can create your own review form (e.g. if you want to make use of the review\nextra info). Just name it.</p>\n<pre><span class=\"n\">REVIEW_CUSTOM_FORM</span> <span class=\"o\">=</span> <span class=\"s1\">'myapp.forms.MyCustomReviewForm'</span>\n</pre>\n<p>Take a look at the included test app to get an example.</p>\n<p>You can also use a custom form to add another content object to the review\ninstance.</p>\n</div>\n<div id=\"review-form-choice-widget\">\n<h3>REVIEW_FORM_CHOICE_WIDGET</h3>\n<p>If you only want to override Django\u2019s default widget for the used\n<tt>ChoiceField</tt>, that is used in the form, you can specify this optional\nsetting.</p>\n<pre><span class=\"c1\"># this would use a RadioSelect instead of the default Select</span>\n<span class=\"n\">REVIEW_FORM_CHOICE_WIDGET</span> <span class=\"o\">=</span> <span class=\"s1\">'django.forms.widgets.RadioSelect'</span>\n</pre>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>If you want to contribute to this project, please perform the following steps</p>\n<pre><span class=\"c1\"># Fork this repository\n# Clone your fork\n</span>$ mkvirtualenv -p python2.7 django-review\n$ python setup.py install\n$ pip install -r dev_requirements.txt\n\n$ git co -b feature_branch master\n<span class=\"c1\"># Implement your feature and tests\n</span>$ git add . <span class=\"o\">&amp;&amp;</span> git commit\n$ git push -u origin feature_branch\n<span class=\"c1\"># Send us a pull request for your feature branch</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3726225, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "914d17e6569d9a93dce4f599540587d0", "sha256": "d43837c2d2c9fa0818d6a4971c8606b05180b98174c2da9d576b860e9cc686f8"}, "downloads": -1, "filename": "django-review-0.1.tar.gz", "has_sig": false, "md5_digest": "914d17e6569d9a93dce4f599540587d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13627, "upload_time": "2013-09-02T18:23:19", "upload_time_iso_8601": "2013-09-02T18:23:19.324081Z", "url": "https://files.pythonhosted.org/packages/ac/c6/e80ebdca75aac4782e003d52b83290a64cb8ec61dd5b03b564d304381566/django-review-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3a7eb31efbec8b0ae0010faf12debba9", "sha256": "e90bca3724f63745e8f47e32a611385e088fb20c119c67983090b0b238260ba8"}, "downloads": -1, "filename": "django-review-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3a7eb31efbec8b0ae0010faf12debba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13963, "upload_time": "2013-09-03T07:59:13", "upload_time_iso_8601": "2013-09-03T07:59:13.274890Z", "url": "https://files.pythonhosted.org/packages/d2/74/5d7d5acddd23d39b2904703053f0052a83855e83f780f77fc9af2f112e71/django-review-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "14edc47628206ecce47af2355b94cf2e", "sha256": "a1fee30503b3212b66529c941667c9e998f4585c4244a346a068c9a10d6ebece"}, "downloads": -1, "filename": "django-review-0.2.tar.gz", "has_sig": false, "md5_digest": "14edc47628206ecce47af2355b94cf2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14575, "upload_time": "2013-09-13T00:32:45", "upload_time_iso_8601": "2013-09-13T00:32:45.913237Z", "url": "https://files.pythonhosted.org/packages/11/ae/49ec1da8bc790ca6d5e93f41cc2bce24d0b13056cbed82d8716f5430da1d/django-review-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e812a6494372ae042a5b0049633b6646", "sha256": "dfc5a93292b5d0084be18cdaa1505d2c0c06f1679b3533680275e6e2f7ebb5d8"}, "downloads": -1, "filename": "django-review-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e812a6494372ae042a5b0049633b6646", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14641, "upload_time": "2013-09-16T10:59:10", "upload_time_iso_8601": "2013-09-16T10:59:10.448318Z", "url": "https://files.pythonhosted.org/packages/3f/7e/3b5344c700be250d6f26d9a63a35a235a4fa7764300799ff662caa389d6f/django-review-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "dd79df686be9f75980db17ac63fc2826", "sha256": "704833016ac9fbfbe9fbb9597d4107360d361b2db2e3c2ff33bd6160cd8ef0a9"}, "downloads": -1, "filename": "django-review-0.3.tar.gz", "has_sig": false, "md5_digest": "dd79df686be9f75980db17ac63fc2826", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15390, "upload_time": "2013-09-20T07:50:22", "upload_time_iso_8601": "2013-09-20T07:50:22.519594Z", "url": "https://files.pythonhosted.org/packages/56/f4/40633f2ac50ba8ca3e35890c54e1e33ab9f7df9c8419a1056879c31767c3/django-review-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1295ad9e2d0a66765421a3b3375ab5eb", "sha256": "4bdb35ca06cb74dd798902493dfe0d7864ad0c0d3ce3799e58cc6bb7233864b7"}, "downloads": -1, "filename": "django-review-0.4.tar.gz", "has_sig": false, "md5_digest": "1295ad9e2d0a66765421a3b3375ab5eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15793, "upload_time": "2013-12-19T21:42:43", "upload_time_iso_8601": "2013-12-19T21:42:43.006546Z", "url": "https://files.pythonhosted.org/packages/15/26/d4f5310fbda7f5507b11d1c1191942fd9715c7e7c932f66e6020aed8e66e/django-review-0.4.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "e13df4df69cc5d86660bce980ed06c9f", "sha256": "019d4aa1397b2631d93fd2be6b2f5482ebe4b06971faf757a07c3bb5d468a1be"}, "downloads": -1, "filename": "django-review-1.0.tar.gz", "has_sig": false, "md5_digest": "e13df4df69cc5d86660bce980ed06c9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16268, "upload_time": "2013-12-20T08:33:31", "upload_time_iso_8601": "2013-12-20T08:33:31.419906Z", "url": "https://files.pythonhosted.org/packages/0f/f0/c2ab35b972245ec60b3dd966a0b8a5b620244c73fce82d2bf6bfebb031ba/django-review-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "12d50cded7cdf53770a9da7535621da0", "sha256": "7a756f81b148dff8b640ce09dec01db92beb029a81687bdfdc54701c4bd4a0cb"}, "downloads": -1, "filename": "django-review-1.1.tar.gz", "has_sig": false, "md5_digest": "12d50cded7cdf53770a9da7535621da0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16467, "upload_time": "2013-12-20T09:01:28", "upload_time_iso_8601": "2013-12-20T09:01:28.791159Z", "url": "https://files.pythonhosted.org/packages/17/0c/69f3a63cb676896591175b900d6b6eb8ce580d72169d2b11c85b68f53f17/django-review-1.1.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "f8b40798434f5c20962de48f3f469ea5", "sha256": "b6f3c9d73cafa6d90f918355bc3560f1ec3237de5eecf01e82378ba181e81ffc"}, "downloads": -1, "filename": "django-review-1.10.0.tar.gz", "has_sig": false, "md5_digest": "f8b40798434f5c20962de48f3f469ea5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29516, "upload_time": "2018-04-02T12:56:14", "upload_time_iso_8601": "2018-04-02T12:56:14.450357Z", "url": "https://files.pythonhosted.org/packages/d8/fc/80f2d44ca18f3d6a3f5117425d01438d3dcca8ff179134b7ce71f0d29e9e/django-review-1.10.0.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "918e628bc5db669635966a7ab5b0be74", "sha256": "5c57acce6daeadb325ef657cea6e7633a63218d7e8efe5c96d291bc41ab85ded"}, "downloads": -1, "filename": "django-review-1.2.tar.gz", "has_sig": false, "md5_digest": "918e628bc5db669635966a7ab5b0be74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16635, "upload_time": "2013-12-21T11:01:45", "upload_time_iso_8601": "2013-12-21T11:01:45.921085Z", "url": "https://files.pythonhosted.org/packages/e9/ea/ae7a0dae9ea1fe9a08744eef88017998b7efad1ff38f8172ce97c84270e1/django-review-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "d046383bc417e181bf723224325442ef", "sha256": "cd12dcc62f7b5ab8d1f27c2a3a43d20a0a5415dda63479953a6ee1cbd35c47c5"}, "downloads": -1, "filename": "django-review-1.2.1.tar.gz", "has_sig": false, "md5_digest": "d046383bc417e181bf723224325442ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16741, "upload_time": "2013-12-21T11:26:22", "upload_time_iso_8601": "2013-12-21T11:26:22.758109Z", "url": "https://files.pythonhosted.org/packages/eb/78/e7d92cdab00e7d80bbab7c39de228274e22e3dce57d5f3eb605b40b6ec20/django-review-1.2.1.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "a50de98e983c983c944b94163166ee64", "sha256": "9143de337190b4f2b03fdf6adbe64d157706aa1584e9266764b0659d24fe1818"}, "downloads": -1, "filename": "django-review-1.3.tar.gz", "has_sig": false, "md5_digest": "a50de98e983c983c944b94163166ee64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17024, "upload_time": "2014-01-03T13:32:30", "upload_time_iso_8601": "2014-01-03T13:32:30.629901Z", "url": "https://files.pythonhosted.org/packages/3e/83/ae96ca25f29db5f886f20fc454ec8deb1b00a1a29c9bacd598f31e086b3d/django-review-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "b477de6804f606bedc9386292b6a974d", "sha256": "3e792efdc25b344ea3320cbbf5f64fa23a0269a19f1bba1bb4ec32c3810c556c"}, "downloads": -1, "filename": "django-review-1.4.tar.gz", "has_sig": false, "md5_digest": "b477de6804f606bedc9386292b6a974d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17536, "upload_time": "2014-01-31T12:48:42", "upload_time_iso_8601": "2014-01-31T12:48:42.150582Z", "url": "https://files.pythonhosted.org/packages/bc/2d/f463e57836548e5519bac9c12b49a958ff35d5427361ee967ca3d43ffdd6/django-review-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "3bea794a20760dbff540d8e8d4c83099", "sha256": "b470d47e4482c3a37f60d9f252d6aa016322a308d33ec20929f4782c9d6fa4ef"}, "downloads": -1, "filename": "django-review-1.5.tar.gz", "has_sig": false, "md5_digest": "3bea794a20760dbff540d8e8d4c83099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23017, "upload_time": "2014-03-28T10:45:01", "upload_time_iso_8601": "2014-03-28T10:45:01.480994Z", "url": "https://files.pythonhosted.org/packages/f0/c4/13345789ec833459c2c2da058a728ce77c297f3ff811b6197d6d2178894f/django-review-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "42df8ee7e504cb65506b2021fdfecfae", "sha256": "063407aa27338d9d3e6646f68c8d687fa90717c557cdaa85cad35e7fa1aed75e"}, "downloads": -1, "filename": "django-review-1.6.tar.gz", "has_sig": false, "md5_digest": "42df8ee7e504cb65506b2021fdfecfae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24394, "upload_time": "2014-03-31T19:51:01", "upload_time_iso_8601": "2014-03-31T19:51:01.718420Z", "url": "https://files.pythonhosted.org/packages/b4/93/66a780d2d37b561860e3e04a9a099d75c1247d7c0a38cce59f9d05e4ccdc/django-review-1.6.tar.gz", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "02712fbc3cc99cd2ef706977399e7cb6", "sha256": "ebc1099995cdfe325230b6dc5ba34c852563f5c04a273ff93f3775853efff42d"}, "downloads": -1, "filename": "django-review-1.7.tar.gz", "has_sig": false, "md5_digest": "02712fbc3cc99cd2ef706977399e7cb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26342, "upload_time": "2014-04-04T10:48:32", "upload_time_iso_8601": "2014-04-04T10:48:32.939022Z", "url": "https://files.pythonhosted.org/packages/a0/73/6a81cf207054f57478f9735124673051aa4b63d50458103f0bc5f3c9d92e/django-review-1.7.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "0539e1b7910e1697b102386c1612615d", "sha256": "eaf133573061aed51c9111e3b102f47a4df96b57e8b8d15297707f4a55753d83"}, "downloads": -1, "filename": "django-review-1.7.1.tar.gz", "has_sig": false, "md5_digest": "0539e1b7910e1697b102386c1612615d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26388, "upload_time": "2014-04-04T15:32:12", "upload_time_iso_8601": "2014-04-04T15:32:12.128518Z", "url": "https://files.pythonhosted.org/packages/a7/e6/73fd9616c9d454aec56da5180c4215c6cd4676fd8c0cb93df95d66763a86/django-review-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "0666b8b4f48ddab4743e5e3b67cc3a8c", "sha256": "c9daa9b6477908d58c89910dd2ed3e7c33919a4f174f45a4319bd0a3950c6e02"}, "downloads": -1, "filename": "django-review-1.7.2.tar.gz", "has_sig": false, "md5_digest": "0666b8b4f48ddab4743e5e3b67cc3a8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26411, "upload_time": "2014-04-04T15:38:41", "upload_time_iso_8601": "2014-04-04T15:38:41.007793Z", "url": "https://files.pythonhosted.org/packages/32/df/4f505e62f4ef7212ad92ba942ecc77e0293eb5593a0a33bc6bd83762eab3/django-review-1.7.2.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "48383fcb74081944f4c1f105b340271a", "sha256": "58fd4dc093c72a2778101163b48eab8dba6452b653545a9184f4182dae3e1f74"}, "downloads": -1, "filename": "django-review-1.7.3.tar.gz", "has_sig": false, "md5_digest": "48383fcb74081944f4c1f105b340271a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26478, "upload_time": "2014-04-14T14:28:14", "upload_time_iso_8601": "2014-04-14T14:28:14.013554Z", "url": "https://files.pythonhosted.org/packages/d7/10/e57ea5c86e9688505a8bc15f93d41e85a6675e5c4bf7be9f1dcef8fadf80/django-review-1.7.3.tar.gz", "yanked": false}], "1.7.4": [{"comment_text": "", "digests": {"md5": "5cc628178b6628d1a81789d3ec37853f", "sha256": "b085d8c838255e73f65ad1d9cd995bc10e678dcda33e638d2d948c875b7a98b5"}, "downloads": -1, "filename": "django-review-1.7.4.tar.gz", "has_sig": false, "md5_digest": "5cc628178b6628d1a81789d3ec37853f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26740, "upload_time": "2014-04-14T15:12:24", "upload_time_iso_8601": "2014-04-14T15:12:24.238884Z", "url": "https://files.pythonhosted.org/packages/2e/90/513010883fb2028f50b2a593823a76f464a40f12fc35f4080da4f0033994/django-review-1.7.4.tar.gz", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "39e0a8e44666d596aae2a8be54a3b2da", "sha256": "04884c97d436b1f152a35f3ced86b673c7a66478916bac647e87152ed6f99536"}, "downloads": -1, "filename": "django-review-1.8.tar.gz", "has_sig": false, "md5_digest": "39e0a8e44666d596aae2a8be54a3b2da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24643, "upload_time": "2014-05-10T07:42:26", "upload_time_iso_8601": "2014-05-10T07:42:26.898939Z", "url": "https://files.pythonhosted.org/packages/1f/c1/eb0e777b12fa6add4f323fb21e8820eea2db087f7b58f32f42c3bf3fee43/django-review-1.8.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "97e81bed83fe4f4d09dcbd5b734c03ce", "sha256": "670cbc696391b1c543262ddeb45424255aa1070a9a39f01874cce3f743c204ac"}, "downloads": -1, "filename": "django-review-1.8.1.tar.gz", "has_sig": false, "md5_digest": "97e81bed83fe4f4d09dcbd5b734c03ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24469, "upload_time": "2014-05-30T06:45:31", "upload_time_iso_8601": "2014-05-30T06:45:31.773274Z", "url": "https://files.pythonhosted.org/packages/30/25/2bb0be2d7e9d30310f107a0b4ceafa2509baf339e2b35a1b9a892ceb1133/django-review-1.8.1.tar.gz", "yanked": false}], "1.9": [{"comment_text": "", "digests": {"md5": "d094694b5581a962804e1c35c5cb0a75", "sha256": "020fb696c1e341af5514fcf338e3e9bc17090b6c8789edac74e3d3646204ea59"}, "downloads": -1, "filename": "django-review-1.9.tar.gz", "has_sig": false, "md5_digest": "d094694b5581a962804e1c35c5cb0a75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24851, "upload_time": "2014-07-30T05:14:54", "upload_time_iso_8601": "2014-07-30T05:14:54.473424Z", "url": "https://files.pythonhosted.org/packages/15/8b/dd55ff99d32144f3a60381ab6569b59cf99f27d6636d937b73d75b460da4/django-review-1.9.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "f1492677750027f530c31bd333b1ec01", "sha256": "1c8d50ba7e02740ce2b1b2a9ef0f9739c96960d620995b388095d6deb06124e6"}, "downloads": -1, "filename": "django-review-1.9.1.tar.gz", "has_sig": false, "md5_digest": "f1492677750027f530c31bd333b1ec01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25062, "upload_time": "2014-10-07T10:26:12", "upload_time_iso_8601": "2014-10-07T10:26:12.918677Z", "url": "https://files.pythonhosted.org/packages/0c/a6/464e73d060bd401f48b8193632b9a43e2d8273f958a0af8e262252a0e93f/django-review-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "593ca03e1f7cd7c2b4bada5fe0a8abad", "sha256": "90cb3eaf44807098a2604c0beb79451803ccfee22788f680da6bf8b5a82e7766"}, "downloads": -1, "filename": "django-review-1.9.2.tar.gz", "has_sig": false, "md5_digest": "593ca03e1f7cd7c2b4bada5fe0a8abad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25140, "upload_time": "2014-11-05T18:21:03", "upload_time_iso_8601": "2014-11-05T18:21:03.023555Z", "url": "https://files.pythonhosted.org/packages/46/74/19d2101c98374428c44b5657864a916148ba0b4c750336bbafdcd36d9d44/django-review-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "8af180cf725aa373878b2bbb569138b3", "sha256": "37e440288266b439394ae8862460ba636bb9d3a54b790ca71db3cc58d67076ed"}, "downloads": -1, "filename": "django-review-1.9.3.tar.gz", "has_sig": false, "md5_digest": "8af180cf725aa373878b2bbb569138b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24537, "upload_time": "2016-02-23T10:25:29", "upload_time_iso_8601": "2016-02-23T10:25:29.728352Z", "url": "https://files.pythonhosted.org/packages/c3/7f/527d6acee20b8636831267cf4e9ab3e4231cb754a9a6dc5d07510f3390b5/django-review-1.9.3.tar.gz", "yanked": false}], "1.9.4": [{"comment_text": "", "digests": {"md5": "a4045dc4ca36bb66b19d380130bac5b6", "sha256": "c53542ee95fb5bf17a79e4e2998a8180882925eb4b74a41165b82f7dc8726ae7"}, "downloads": -1, "filename": "django-review-1.9.4.tar.gz", "has_sig": false, "md5_digest": "a4045dc4ca36bb66b19d380130bac5b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25481, "upload_time": "2016-04-12T20:33:54", "upload_time_iso_8601": "2016-04-12T20:33:54.806961Z", "url": "https://files.pythonhosted.org/packages/78/82/8c781d63e5d89ccd27b1f41fd71418a2fef52ad204e92e18d40a363cadad/django-review-1.9.4.tar.gz", "yanked": false}], "1.9.5": [{"comment_text": "", "digests": {"md5": "bc617fdcfee277f04e2bc09f09c41299", "sha256": "7ea693c9818eede9cf7a2e121b049446cc658f0a9cafb6b8e173db816a9446b1"}, "downloads": -1, "filename": "django-review-1.9.5.tar.gz", "has_sig": false, "md5_digest": "bc617fdcfee277f04e2bc09f09c41299", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25509, "upload_time": "2016-06-15T04:03:46", "upload_time_iso_8601": "2016-06-15T04:03:46.517096Z", "url": "https://files.pythonhosted.org/packages/7f/4d/213dee2f9e6b63249f7ff187aa71febe64e3246d0191a1c1edd0411d47c6/django-review-1.9.5.tar.gz", "yanked": false}], "1.9.6": [{"comment_text": "", "digests": {"md5": "1c1bc57df049394f17bba52c12892098", "sha256": "3831142edf85046cf43388ebc4f57f72820e24f1833682c4ee44d4b37d99d872"}, "downloads": -1, "filename": "django-review-1.9.6.tar.gz", "has_sig": false, "md5_digest": "1c1bc57df049394f17bba52c12892098", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25583, "upload_time": "2016-11-28T02:05:25", "upload_time_iso_8601": "2016-11-28T02:05:25.717027Z", "url": "https://files.pythonhosted.org/packages/a3/d9/0e3a62797cafc5d663096933c22fa33e556c53b0289239716e3f5aac8d8a/django-review-1.9.6.tar.gz", "yanked": false}], "1.9.7": [{"comment_text": "", "digests": {"md5": "24b5166c9f7f5dd0f5b15674ea8144e1", "sha256": "373ad4fb1a4b89e8692fc918b98ceadd7b0a8d170be02392d5f772c0deaff85c"}, "downloads": -1, "filename": "django-review-1.9.7.tar.gz", "has_sig": false, "md5_digest": "24b5166c9f7f5dd0f5b15674ea8144e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26000, "upload_time": "2017-06-06T05:31:50", "upload_time_iso_8601": "2017-06-06T05:31:50.035977Z", "url": "https://files.pythonhosted.org/packages/1d/c1/4a7e87cabb1fbb27424233a71ac115e1cd3c5417b9d987ef735f386ed63f/django-review-1.9.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8b40798434f5c20962de48f3f469ea5", "sha256": "b6f3c9d73cafa6d90f918355bc3560f1ec3237de5eecf01e82378ba181e81ffc"}, "downloads": -1, "filename": "django-review-1.10.0.tar.gz", "has_sig": false, "md5_digest": "f8b40798434f5c20962de48f3f469ea5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29516, "upload_time": "2018-04-02T12:56:14", "upload_time_iso_8601": "2018-04-02T12:56:14.450357Z", "url": "https://files.pythonhosted.org/packages/d8/fc/80f2d44ca18f3d6a3f5117425d01438d3dcca8ff179134b7ce71f0d29e9e/django-review-1.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:58 2020"}