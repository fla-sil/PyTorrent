{"info": {"author": "Vitaliy Podoba", "author_email": "vitaliypodoba@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "Introduction\n============\n\nProvides form to update object properties via ``Plone`` UI.\n\n\nQuick Intro\n-----------\n\n* it replicates ZMI ``/manage_propertiesForm`` form in ``Plone`` UI\n* it's like ``collective.interfaces`` package to manage zope interfaces via\n  ``Plone`` but to manage ``PropertyManager`` based properties\n* it uses ``z3c.form`` library to generate CRUD form\n* it is tested in ``Plone 3`` (``Plone 4`` to be checked soon)\n* it's installable via ``portal quickinstaller`` tool, for detailed instructions\n  on how to add it to your zope instance, please, check ``docs/INSTALL.txt``\n  file\n\n\nProperty attributes\n-------------------\n\n``IPropertyManager`` interface provides properties with the next list of\nmetadata:\n\n* ``id``: required\n* ``type``: required\n* ``select_variable``: optional; for selection and multiple selection property\n  types to provide the name of a property or method which returns a list of\n  strings from which the selection(s) can be chosen\n* ``mode``: optional; must contain 0 or more chars from the set 'w', 'd'; 'w' -\n  value may be changed by user, 'd' - user can delete property, '' - property\n  and it's value may be shown in property listings, but it is read-only and\n  may not be deleted; without mode key property is assumed to have the mode 'wd'\n  (writeable and deletable)\n* ``label``: optional\n* ``description``: optional\n\n\nProperty types\n--------------\n\nDefault property manager property types are listed below. All of them are\nplanned to be supported by ``collective.properties`` management form (see\n``TODO`` section below for what's not implemented yet):\n\n* ``float`` - floating number\n* ``int`` - integer\n* ``long`` - long integer\n* ``string`` - utf-8 encoded string\n* ``lines`` - list of utf-8 encoded strings\n* ``text`` - utf-8 encoded text (string with line breaks)\n* ``date`` - Zope2 DateTime object\n* ``tokens`` - list of utf-8 encoded strings, entered as text line and split by\n  space characters afterwards\n* ``selection`` - utf-8 encoded string, the only difference between string\n  property type is that ``selection`` property values is selected from list of\n  available options, this property type owns extra item in the property\n  dictionary, 'select_variable' which provides the name of a property or method;\n  note: make sure your vocabulary doesn't include unicode strings, only\n  integers, floats, utf-8 encoded strings and booleans, otherwise old\n  PropertyManager form breaks\n  which returns a list of strings from which the selection can be chosen.\n* ``multiple selection`` - list of utf-8 encoded strings, these strings are also\n  selected from list of available options as described above in ``selection``\n  property type\n\n\nCompatibility\n-------------\n\nIt's been tested only with Plone 3 so far.\n\n\nNotes\n-----\n\n``Property Manager`` interface defines some reserved strings that are prohibited\nto be used as property ids. It provides validation method which is also used by\ncollective.properties management form. That's why it's secure to install this\npackage in ``Plone`` site and let non-tech content manager use it's properties\nform.\n\nNot all standard properties are handled yet. For details, please, see ``TODO``\nsection below.\n\n``collective.properties`` form simply skips property types that it doesn't\nknow how to handle. So to manage them you still need to use standard\n``/manage_propertiesForm`` form.\n\nForm that this package provides to manage properties is fully compatible with\nold ``Property Manager`` form (``/manage_propertiesForm``) so it's possible to\nmanage properties on both of them at the same time, and there won't be any\nissues with string encodings, etc... ``collective.properties`` form saves\ndata in the same format original form does.\n\nTODO\n----\n\n* add tests\n* test in plone4\n* improve installation docs re z3c.form versions and installing Plone z3cform\n  support via quickinstaller\n\nChangelog\n=========\n\n1.0a2 - May 10, 2001\n--------------------\n\n- Add Manage Properties form title and description with details on how to use it.\n  [piv]\n\n- Set Property Value inputs to readonly mode for non-writable properties.\n  Validate property update on server side as well.\n  [piv]\n\n- Disable deletion checkboxes for non-deletable properties. Validate deletion\n  on server side as well.\n  [piv]\n\n- Added selection and multiple selection property type handling.\n  [piv]\n\n- Added tokens property type handling.\n  [piv]\n\n- Added date property type handling.\n  [piv]\n\n- Store string and text property types as 'utf-8' encoded strings to be\n  OFS.PropertyManager compliant. So now it's possible to use both forms\n  to manage properties w/o any encoding issues.\n  [piv]\n\n- Made lines property type work.\n  [piv]\n\n- Added boolean property type handling.\n  [piv]\n\n1.0a1 - March 14, 2011\n----------------------\n\n- Initial release, no handlers for date and selection fields, no tests yet.\n  [piv]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/collective.properties", "keywords": "plone properties form ui", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.properties", "package_url": "https://pypi.org/project/collective.properties/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.properties/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/collective.properties"}, "release_url": "https://pypi.org/project/collective.properties/1.0a2/", "requires_dist": null, "requires_python": null, "summary": "Provides form to update object properties via Plone UI.", "version": "1.0a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Provides form to update object properties via <tt>Plone</tt> UI.</p>\n<div id=\"quick-intro\">\n<h3>Quick Intro</h3>\n<ul>\n<li>it replicates ZMI <tt>/manage_propertiesForm</tt> form in <tt>Plone</tt> UI</li>\n<li>it\u2019s like <tt>collective.interfaces</tt> package to manage zope interfaces via\n<tt>Plone</tt> but to manage <tt>PropertyManager</tt> based properties</li>\n<li>it uses <tt>z3c.form</tt> library to generate CRUD form</li>\n<li>it is tested in <tt>Plone 3</tt> (<tt>Plone 4</tt> to be checked soon)</li>\n<li>it\u2019s installable via <tt>portal quickinstaller</tt> tool, for detailed instructions\non how to add it to your zope instance, please, check <tt>docs/INSTALL.txt</tt>\nfile</li>\n</ul>\n</div>\n<div id=\"property-attributes\">\n<h3>Property attributes</h3>\n<p><tt>IPropertyManager</tt> interface provides properties with the next list of\nmetadata:</p>\n<ul>\n<li><tt>id</tt>: required</li>\n<li><tt>type</tt>: required</li>\n<li><tt>select_variable</tt>: optional; for selection and multiple selection property\ntypes to provide the name of a property or method which returns a list of\nstrings from which the selection(s) can be chosen</li>\n<li><tt>mode</tt>: optional; must contain 0 or more chars from the set \u2018w\u2019, \u2018d\u2019; \u2018w\u2019 -\nvalue may be changed by user, \u2018d\u2019 - user can delete property, \u2018\u2019 - property\nand it\u2019s value may be shown in property listings, but it is read-only and\nmay not be deleted; without mode key property is assumed to have the mode \u2018wd\u2019\n(writeable and deletable)</li>\n<li><tt>label</tt>: optional</li>\n<li><tt>description</tt>: optional</li>\n</ul>\n</div>\n<div id=\"property-types\">\n<h3>Property types</h3>\n<p>Default property manager property types are listed below. All of them are\nplanned to be supported by <tt>collective.properties</tt> management form (see\n<tt>TODO</tt> section below for what\u2019s not implemented yet):</p>\n<ul>\n<li><tt>float</tt> - floating number</li>\n<li><tt>int</tt> - integer</li>\n<li><tt>long</tt> - long integer</li>\n<li><tt>string</tt> - utf-8 encoded string</li>\n<li><tt>lines</tt> - list of utf-8 encoded strings</li>\n<li><tt>text</tt> - utf-8 encoded text (string with line breaks)</li>\n<li><tt>date</tt> - Zope2 DateTime object</li>\n<li><tt>tokens</tt> - list of utf-8 encoded strings, entered as text line and split by\nspace characters afterwards</li>\n<li><tt>selection</tt> - utf-8 encoded string, the only difference between string\nproperty type is that <tt>selection</tt> property values is selected from list of\navailable options, this property type owns extra item in the property\ndictionary, \u2018select_variable\u2019 which provides the name of a property or method;\nnote: make sure your vocabulary doesn\u2019t include unicode strings, only\nintegers, floats, utf-8 encoded strings and booleans, otherwise old\nPropertyManager form breaks\nwhich returns a list of strings from which the selection can be chosen.</li>\n<li><tt>multiple selection</tt> - list of utf-8 encoded strings, these strings are also\nselected from list of available options as described above in <tt>selection</tt>\nproperty type</li>\n</ul>\n</div>\n<div id=\"compatibility\">\n<h3>Compatibility</h3>\n<p>It\u2019s been tested only with Plone 3 so far.</p>\n</div>\n<div id=\"notes\">\n<h3>Notes</h3>\n<p><tt>Property Manager</tt> interface defines some reserved strings that are prohibited\nto be used as property ids. It provides validation method which is also used by\ncollective.properties management form. That\u2019s why it\u2019s secure to install this\npackage in <tt>Plone</tt> site and let non-tech content manager use it\u2019s properties\nform.</p>\n<p>Not all standard properties are handled yet. For details, please, see <tt>TODO</tt>\nsection below.</p>\n<p><tt>collective.properties</tt> form simply skips property types that it doesn\u2019t\nknow how to handle. So to manage them you still need to use standard\n<tt>/manage_propertiesForm</tt> form.</p>\n<p>Form that this package provides to manage properties is fully compatible with\nold <tt>Property Manager</tt> form (<tt>/manage_propertiesForm</tt>) so it\u2019s possible to\nmanage properties on both of them at the same time, and there won\u2019t be any\nissues with string encodings, etc\u2026 <tt>collective.properties</tt> form saves\ndata in the same format original form does.</p>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>add tests</li>\n<li>test in plone4</li>\n<li>improve installation docs re z3c.form versions and installing Plone z3cform\nsupport via quickinstaller</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"a2-may-10-2001\">\n<h3>1.0a2 - May 10, 2001</h3>\n<ul>\n<li>Add Manage Properties form title and description with details on how to use it.\n[piv]</li>\n<li>Set Property Value inputs to readonly mode for non-writable properties.\nValidate property update on server side as well.\n[piv]</li>\n<li>Disable deletion checkboxes for non-deletable properties. Validate deletion\non server side as well.\n[piv]</li>\n<li>Added selection and multiple selection property type handling.\n[piv]</li>\n<li>Added tokens property type handling.\n[piv]</li>\n<li>Added date property type handling.\n[piv]</li>\n<li>Store string and text property types as \u2018utf-8\u2019 encoded strings to be\nOFS.PropertyManager compliant. So now it\u2019s possible to use both forms\nto manage properties w/o any encoding issues.\n[piv]</li>\n<li>Made lines property type work.\n[piv]</li>\n<li>Added boolean property type handling.\n[piv]</li>\n</ul>\n</div>\n<div id=\"a1-march-14-2011\">\n<h3>1.0a1 - March 14, 2011</h3>\n<ul>\n<li>Initial release, no handlers for date and selection fields, no tests yet.\n[piv]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 788091, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "8760f70ec2d071fb1e6fa21dbc268c75", "sha256": "a72a1fcf76e78019d063e3787ab37e1fdc1332d7a5affca57f58be40c809a2b6"}, "downloads": -1, "filename": "collective.properties-1.0a1.tar.gz", "has_sig": false, "md5_digest": "8760f70ec2d071fb1e6fa21dbc268c75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16138, "upload_time": "2011-03-14T22:50:35", "upload_time_iso_8601": "2011-03-14T22:50:35.723500Z", "url": "https://files.pythonhosted.org/packages/62/da/05c4381914064f6201b7f7f5e1ef0e3d9400c31f9a2549401f6a94c48bd6/collective.properties-1.0a1.tar.gz", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "9c975da143603ca79ba31aa1c9d0c7a0", "sha256": "cf0dfd25197cc6bbb4760f0d829bf83f532075234e0276b96f3e7d368e66fe00"}, "downloads": -1, "filename": "collective.properties-1.0a2.tar.gz", "has_sig": false, "md5_digest": "9c975da143603ca79ba31aa1c9d0c7a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24705, "upload_time": "2011-05-10T10:40:05", "upload_time_iso_8601": "2011-05-10T10:40:05.408507Z", "url": "https://files.pythonhosted.org/packages/f8/92/90f92b8291de3900e1518c0daad6b94d3b7ecda410e04616ccd103de1bb1/collective.properties-1.0a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c975da143603ca79ba31aa1c9d0c7a0", "sha256": "cf0dfd25197cc6bbb4760f0d829bf83f532075234e0276b96f3e7d368e66fe00"}, "downloads": -1, "filename": "collective.properties-1.0a2.tar.gz", "has_sig": false, "md5_digest": "9c975da143603ca79ba31aa1c9d0c7a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24705, "upload_time": "2011-05-10T10:40:05", "upload_time_iso_8601": "2011-05-10T10:40:05.408507Z", "url": "https://files.pythonhosted.org/packages/f8/92/90f92b8291de3900e1518c0daad6b94d3b7ecda410e04616ccd103de1bb1/collective.properties-1.0a2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:58 2020"}