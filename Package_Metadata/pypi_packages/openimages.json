{"info": {"author": "James Adams", "author_email": "monocongo@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# openimages\nTools for downloading images and corresponding annotations from Google's \n[OpenImages](https://storage.googleapis.com/openimages/web/index.html) dataset.\n\n## Download images and annotations\nThe `openimages` package contains a `download` module which provides an API with \ntwo download functions and a corresponding CLI (command line interface) including \nscript entry points that can be used to perform downloading of images and \ncorresponding annotations from the OpenImages dataset.\n\n##### Public API\n*  `openimages.download.download_images` for downloading images only\n\n    For example, to download all images for the two classes \"Hammer\" and \"Scissors\" \n    into the directories \"/dest/dir/Hammer/images\" and \"/dest/dir/Scissors/images\":\n    ```python\n    from openimages.download import download_images\n    download_images(\"/dest/dir\", [\"Hammer\", \"Scissors\",])\n    ```\n* `openimages.download.download_dataset` for downloading images and corresponding \nannotations\n    For example, to download all images and corresponding annotations in PASCAL \n    VOC format for the two classes \"Hammer\" and \"Scissors\" into the directories \n    \"/dest/dir/Hammer/[images|pascal]\" and \"/dest/dir/Scissors/[images|pascal]\":\n    ```python\n    from openimages.download import download_dataset\n    download_dataset(\"/dest/dir\", [\"Hammer\", \"Scissors\",], annotation_format=\"pascal\")\n    ```\n##### Command Line Interface\nTwo Python script entry points are installed when the package is installed into \na Python environment, corresponding to the public API functions described above: \n`oi_download_dataset` and `oi_download_images`. These commands use the follwing \noptions:\n\nOption              | Required | Description\n--------------------|----------|-------------\n--base_dir \\<dir\\>  | yes      | directory into which images and annotations will be downloaded, with each class label having a separate subdirectory containing an \"images\" subdirectory for image files and (for annotated datasets) an \\<annotation_format\\> subdirectory for annotation files\n--labels \\<label1\\> [\\<label_2\\> ...] | yes      | space-separated list of class labels, at least one required, multi-word labels with spaces must be quoted\n--format \\<annotation_format\\> | for annotated dataset yes, not applicable for images only  | required for downloading an annotated dataset, currently supported format specifiers are \"darknet\" and \"pascal\"\n--csv_dir \\<dir\\> | no, but usually recommended | directory into which the CSV files specifying annotations and class labels are downloaded (if not already present) or read from (if present)\n--exclusions \\<file\\> | no | text file containing image file IDs, one per line, for images to be excluded from the final dataset, useful in cases when images have been identified as problematic\n--limit \\<int\\> | no | the upper limit on the number of images to be downloaded per label class\n###### NOTE:\nIf you'll use these commands more than once then it's imperative to utilize the \n`--csv_dir` option that specifies where to save the (rather large) CSV file containing \nbounding box information etc., as this will save you from having to redownload this \nlarge file in subsequent usages.\n\n###### Usage examples\nDownload images and PASCAL format annotations for the class labels \"Scissors\" and \n\"Hammer\", limiting the number of images to 200 and storing the CSV files under \n`~/openimages` (reading the CSV files from there if they already exist):\n```bash\n$ oi_download_dataset --csv_dir ~/openimages --base_dir ~/openimages --labels Scissors Hammer --format pascal --limit 100\n```\nDownload images only for the class label \"Scissors\", limiting the number of images \nto 100 and storing the CSV files under `~/openimages` (reading the CSV files from \nthere if they already exist):\n```bash\n$ oi_download_images --csv_dir ~/openimages --base_dir ~/openimages --labels Scissors --limit 100\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/monocongo/openimages", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "openimages", "package_url": "https://pypi.org/project/openimages/", "platform": "", "project_url": "https://pypi.org/project/openimages/", "project_urls": {"Homepage": "https://github.com/monocongo/openimages"}, "release_url": "https://pypi.org/project/openimages/0.0.1/", "requires_dist": ["boto3", "cvdata", "lxml", "pandas", "requests", "tqdm"], "requires_python": ">=3.6", "summary": "Tools for downloading computer vision datasets from Google's OpenImages dataset", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>openimages</h1>\n<p>Tools for downloading images and corresponding annotations from Google's\n<a href=\"https://storage.googleapis.com/openimages/web/index.html\" rel=\"nofollow\">OpenImages</a> dataset.</p>\n<h2>Download images and annotations</h2>\n<p>The <code>openimages</code> package contains a <code>download</code> module which provides an API with\ntwo download functions and a corresponding CLI (command line interface) including\nscript entry points that can be used to perform downloading of images and\ncorresponding annotations from the OpenImages dataset.</p>\n<h5>Public API</h5>\n<ul>\n<li>\n<p><code>openimages.download.download_images</code> for downloading images only</p>\n<p>For example, to download all images for the two classes \"Hammer\" and \"Scissors\"\ninto the directories \"/dest/dir/Hammer/images\" and \"/dest/dir/Scissors/images\":</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openimages.download</span> <span class=\"kn\">import</span> <span class=\"n\">download_images</span>\n<span class=\"n\">download_images</span><span class=\"p\">(</span><span class=\"s2\">\"/dest/dir\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Hammer\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Scissors\"</span><span class=\"p\">,])</span>\n</pre>\n</li>\n<li>\n<p><code>openimages.download.download_dataset</code> for downloading images and corresponding\nannotations\nFor example, to download all images and corresponding annotations in PASCAL\nVOC format for the two classes \"Hammer\" and \"Scissors\" into the directories\n\"/dest/dir/Hammer/[images|pascal]\" and \"/dest/dir/Scissors/[images|pascal]\":</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openimages.download</span> <span class=\"kn\">import</span> <span class=\"n\">download_dataset</span>\n<span class=\"n\">download_dataset</span><span class=\"p\">(</span><span class=\"s2\">\"/dest/dir\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Hammer\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Scissors\"</span><span class=\"p\">,],</span> <span class=\"n\">annotation_format</span><span class=\"o\">=</span><span class=\"s2\">\"pascal\"</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h5>Command Line Interface</h5>\n<p>Two Python script entry points are installed when the package is installed into\na Python environment, corresponding to the public API functions described above:\n<code>oi_download_dataset</code> and <code>oi_download_images</code>. These commands use the follwing\noptions:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--base_dir &lt;dir&gt;</td>\n<td>yes</td>\n<td>directory into which images and annotations will be downloaded, with each class label having a separate subdirectory containing an \"images\" subdirectory for image files and (for annotated datasets) an &lt;annotation_format&gt; subdirectory for annotation files</td>\n</tr>\n<tr>\n<td>--labels &lt;label1&gt; [&lt;label_2&gt; ...]</td>\n<td>yes</td>\n<td>space-separated list of class labels, at least one required, multi-word labels with spaces must be quoted</td>\n</tr>\n<tr>\n<td>--format &lt;annotation_format&gt;</td>\n<td>for annotated dataset yes, not applicable for images only</td>\n<td>required for downloading an annotated dataset, currently supported format specifiers are \"darknet\" and \"pascal\"</td>\n</tr>\n<tr>\n<td>--csv_dir &lt;dir&gt;</td>\n<td>no, but usually recommended</td>\n<td>directory into which the CSV files specifying annotations and class labels are downloaded (if not already present) or read from (if present)</td>\n</tr>\n<tr>\n<td>--exclusions &lt;file&gt;</td>\n<td>no</td>\n<td>text file containing image file IDs, one per line, for images to be excluded from the final dataset, useful in cases when images have been identified as problematic</td>\n</tr>\n<tr>\n<td>--limit &lt;int&gt;</td>\n<td>no</td>\n<td>the upper limit on the number of images to be downloaded per label class</td>\n</tr></tbody></table>\n<h6>NOTE:</h6>\n<p>If you'll use these commands more than once then it's imperative to utilize the\n<code>--csv_dir</code> option that specifies where to save the (rather large) CSV file containing\nbounding box information etc., as this will save you from having to redownload this\nlarge file in subsequent usages.</p>\n<h6>Usage examples</h6>\n<p>Download images and PASCAL format annotations for the class labels \"Scissors\" and\n\"Hammer\", limiting the number of images to 200 and storing the CSV files under\n<code>~/openimages</code> (reading the CSV files from there if they already exist):</p>\n<pre>$ oi_download_dataset --csv_dir ~/openimages --base_dir ~/openimages --labels Scissors Hammer --format pascal --limit <span class=\"m\">100</span>\n</pre>\n<p>Download images only for the class label \"Scissors\", limiting the number of images\nto 100 and storing the CSV files under <code>~/openimages</code> (reading the CSV files from\nthere if they already exist):</p>\n<pre>$ oi_download_images --csv_dir ~/openimages --base_dir ~/openimages --labels Scissors --limit <span class=\"m\">100</span>\n</pre>\n\n          </div>"}, "last_serial": 6585517, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "cd188636a9bd0f9d43b8dd66583d011a", "sha256": "865fbe6c4cb3cdd7adeb2d421ee5919deab534ed182c5a419efc66d780cd9b6a"}, "downloads": -1, "filename": "openimages-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd188636a9bd0f9d43b8dd66583d011a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 10628, "upload_time": "2020-02-07T00:15:09", "upload_time_iso_8601": "2020-02-07T00:15:09.062242Z", "url": "https://files.pythonhosted.org/packages/49/ba/587944c183999aa9a0416d6979739b78adfe021eee74aa9db78f0beaea06/openimages-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bdd1ebf4c17322019369c18bf4830b83", "sha256": "111f7a304d6ca7c8ce4b05c1a4ea63b08b669b1a851daa12c9beb43ae15ebe08"}, "downloads": -1, "filename": "openimages-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bdd1ebf4c17322019369c18bf4830b83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21650, "upload_time": "2020-02-07T00:15:11", "upload_time_iso_8601": "2020-02-07T00:15:11.452896Z", "url": "https://files.pythonhosted.org/packages/95/17/78a81a2f75783770593f9166f68056fa3e3ff595356476fd6a301c18feda/openimages-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd188636a9bd0f9d43b8dd66583d011a", "sha256": "865fbe6c4cb3cdd7adeb2d421ee5919deab534ed182c5a419efc66d780cd9b6a"}, "downloads": -1, "filename": "openimages-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd188636a9bd0f9d43b8dd66583d011a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 10628, "upload_time": "2020-02-07T00:15:09", "upload_time_iso_8601": "2020-02-07T00:15:09.062242Z", "url": "https://files.pythonhosted.org/packages/49/ba/587944c183999aa9a0416d6979739b78adfe021eee74aa9db78f0beaea06/openimages-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bdd1ebf4c17322019369c18bf4830b83", "sha256": "111f7a304d6ca7c8ce4b05c1a4ea63b08b669b1a851daa12c9beb43ae15ebe08"}, "downloads": -1, "filename": "openimages-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bdd1ebf4c17322019369c18bf4830b83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21650, "upload_time": "2020-02-07T00:15:11", "upload_time_iso_8601": "2020-02-07T00:15:11.452896Z", "url": "https://files.pythonhosted.org/packages/95/17/78a81a2f75783770593f9166f68056fa3e3ff595356476fd6a301c18feda/openimages-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:53 2020"}