{"info": {"author": "fakefred", "author_email": "fakefred@protonmail.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License"], "description": "# ASCIM - Manipulate ASCII art as you would do with raster images\n\n![Upload Python Package](https://github.com/fakefred/ascim/workflows/Upload%20Python%20Package/badge.svg) ![PyPI](https://img.shields.io/pypi/v/ascim)\n\n## Pre-document Humor\n\n> Do you know why the crazy guy started a side project to feed another one?\n>\n> No, you should ASCIM.\n\nIf you came here from memethesis-cli, go straight to section 'ASCIM Tables'.\n\n## Installation\n\n`pip install ascim` will do.\n\n## Usage\n\n### Basic ASCIM Class\n\n```python\nfrom ascim.ascim import ASCIM\nim = ASCIM('''In ASCIM,\nevery character\nis like\na pixel''')\n```\n\n`im` is now an ASCIM object, with the following text (enclosed in rectangle\\*):\n\n```\n +-----------------+\n0| In ASCIM,       |\n1| every character |\n2| is like         |\n3| a pixel         |\n +-----------------+\n```\n\nLines 0, 2, and 3, which are zero-indexed, are padded with spaces to their right\nso that they are all uniform in length with Line 1.\nAn ASCIM object is treated as an image, so string methods no longer apply.\n\n> \\* but what _is_ in this rectangle? We will cover this later on in section\n> 'ASCIM Tables'.\n\n### ASCIM Tables\n\nAn ASCIM Table is a container object of ASCIM Images. An ASCIM Image (or NoneType)\ncan take up one cell in a table, just like in spreadsheets.\n\nCode example:\n\n```python\nfrom ascim.ascim import ASCIM\nfrom ascim.table import ASCIMTable\n\ntable = ASCIMTable.from_text('<copy paste that table from below>')\nprint(table.cell_at(0, 0).to_text())  # => 'symbol'\nprint(table.size)  # => (4, 7)\n```\n\n#### Textual representation\n\nThe textual representation for ASCIM Tables are designed to be both machine- and\nhuman-readable. Here is an example:\n([relevant xkcd](https://xkcd.com/394/))\n\n```\n+--------+---------------+---------------+------------------------+\n| symbol | name          | size          | notes                  |\n+--------+---------------+---------------+------------------------+\n| kB     | Kilobyte      | 1024 bytes    | 1000 bytes during leap |\n|        |               | or 1000 bytes | years, 1024 otherwise  |\n+--------+---------------+---------------+------------------------+\n| KB     | Kelly-Bootle  | 1012 bytes    | Compromise between     |\n|        | Standard Unit |               | 1000 and 1024 bytes    |\n+--------+---------------+---------------+------------------------+\n| KiB    | Imaginary     | 1024sqrt(-1)  | Used in quantum        |\n|        | Kilobyte      | bytes         | computing              |\n+--------+---------------+---------------+------------------------+\n| kb     | Intel         | 1023.937528   | Calculated on          |\n|        | Kilobyte      | bytes         | Pentium F.P.U          |\n+--------+---------------+---------------+------------------------+\n| Kb     | Drivemaker's  | Currently     | Shrinksby 4 bytes each |\n|        | Kilobyte      | 908 bytes     | year for marketing     |\n|        |               |               | reasons                |\n+--------+---------------+---------------+------------------------+\n| KBa    | Baker's       | 1152 Bytes    | 9 bits to the byte     |\n|        | Kilobyte      |               | since you're such a    |\n|        |               |               | good customer          |\n+--------+---------------+---------------+------------------------+\n```\n\n##### Specification\n\n1. A **cell** is an ASCIM object or NoneType stored in the ASCIMTable.\n   When printed, it is enclosed with `+` and `-` horizontally and\n   `+` and `|` vertically. NoneType denotes there is no content in the cell,\n   and is interpreted as an 1x1 ASCIM object when displayed.\n2. On each side of the pipe (vertical bar; `|`) that is a cell MUST\n   be a space. As illustrated:\n\n   ```\n   +---+\n   |012|\n   |345|\n   |678|\n   +---+\n   ```\n\n   In this rect-enclosed area, the \"cell\" only covers 1, 4, and 7.\n   Locations 0, 3, 6, 2, 5, 8 MUST be a space.\n   Locations 1 and 7 SHOULD NOT be a space.\n   That said, only horizontal margins are necessary.\n\n3. When a row is too wide or a column is too tall in the text to convert\n   to an ASCIMTable, the excess columns/rows of spaces are cut off.\n\n### ASCIM Draw\n\nWith ASCIMDraw you can make in-place modifications with an ASCIM Image.\nAn ASCIMDraw object takes a (reference to) an ASCIM object as its argument.\n\nCode example:\n\n```python\nfrom ascim.ascim import ASCIM\nfrom ascim.draw import ASCIMDraw\n\nim = ASCIM.new((5, 5))\ndraw = ASCIMDraw(im)\ndraw.text((1, 2, 4, 2), 'oh nice')  # text is wrapped in a 4x2 box\n# `im` is modified in-place\nprint(im.to_text())\n#\n#\n#  oh\n#  nice\n#\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fakefred/ascim", "keywords": "ascii art", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ascim", "package_url": "https://pypi.org/project/ascim/", "platform": "", "project_url": "https://pypi.org/project/ascim/", "project_urls": {"Homepage": "https://github.com/fakefred/ascim", "LiberaPay": "https://liberapay.com/fakefred/donate"}, "release_url": "https://pypi.org/project/ascim/0.1.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Manipulate ASCII Art & Tables in a bitmap-image-like manner.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ASCIM - Manipulate ASCII art as you would do with raster images</h1>\n<p><img alt=\"Upload Python Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/199ed781c0160364393f2596532a884c7b46cf40/68747470733a2f2f6769746875622e636f6d2f66616b65667265642f617363696d2f776f726b666c6f77732f55706c6f6164253230507974686f6e2532305061636b6167652f62616467652e737667\"> <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62c998b72a8ec21a9cf956ca82954e0da2929c82/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f617363696d\"></p>\n<h2>Pre-document Humor</h2>\n<blockquote>\n<p>Do you know why the crazy guy started a side project to feed another one?</p>\n<p>No, you should ASCIM.</p>\n</blockquote>\n<p>If you came here from memethesis-cli, go straight to section 'ASCIM Tables'.</p>\n<h2>Installation</h2>\n<p><code>pip install ascim</code> will do.</p>\n<h2>Usage</h2>\n<h3>Basic ASCIM Class</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ascim.ascim</span> <span class=\"kn\">import</span> <span class=\"n\">ASCIM</span>\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">ASCIM</span><span class=\"p\">(</span><span class=\"s1\">'''In ASCIM,</span>\n<span class=\"s1\">every character</span>\n<span class=\"s1\">is like</span>\n<span class=\"s1\">a pixel'''</span><span class=\"p\">)</span>\n</pre>\n<p><code>im</code> is now an ASCIM object, with the following text (enclosed in rectangle*):</p>\n<pre><code> +-----------------+\n0| In ASCIM,       |\n1| every character |\n2| is like         |\n3| a pixel         |\n +-----------------+\n</code></pre>\n<p>Lines 0, 2, and 3, which are zero-indexed, are padded with spaces to their right\nso that they are all uniform in length with Line 1.\nAn ASCIM object is treated as an image, so string methods no longer apply.</p>\n<blockquote>\n<p>* but what <em>is</em> in this rectangle? We will cover this later on in section\n'ASCIM Tables'.</p>\n</blockquote>\n<h3>ASCIM Tables</h3>\n<p>An ASCIM Table is a container object of ASCIM Images. An ASCIM Image (or NoneType)\ncan take up one cell in a table, just like in spreadsheets.</p>\n<p>Code example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ascim.ascim</span> <span class=\"kn\">import</span> <span class=\"n\">ASCIM</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ascim.table</span> <span class=\"kn\">import</span> <span class=\"n\">ASCIMTable</span>\n\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">ASCIMTable</span><span class=\"o\">.</span><span class=\"n\">from_text</span><span class=\"p\">(</span><span class=\"s1\">'&lt;copy paste that table from below&gt;'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">cell_at</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_text</span><span class=\"p\">())</span>  <span class=\"c1\"># =&gt; 'symbol'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; (4, 7)</span>\n</pre>\n<h4>Textual representation</h4>\n<p>The textual representation for ASCIM Tables are designed to be both machine- and\nhuman-readable. Here is an example:\n(<a href=\"https://xkcd.com/394/\" rel=\"nofollow\">relevant xkcd</a>)</p>\n<pre><code>+--------+---------------+---------------+------------------------+\n| symbol | name          | size          | notes                  |\n+--------+---------------+---------------+------------------------+\n| kB     | Kilobyte      | 1024 bytes    | 1000 bytes during leap |\n|        |               | or 1000 bytes | years, 1024 otherwise  |\n+--------+---------------+---------------+------------------------+\n| KB     | Kelly-Bootle  | 1012 bytes    | Compromise between     |\n|        | Standard Unit |               | 1000 and 1024 bytes    |\n+--------+---------------+---------------+------------------------+\n| KiB    | Imaginary     | 1024sqrt(-1)  | Used in quantum        |\n|        | Kilobyte      | bytes         | computing              |\n+--------+---------------+---------------+------------------------+\n| kb     | Intel         | 1023.937528   | Calculated on          |\n|        | Kilobyte      | bytes         | Pentium F.P.U          |\n+--------+---------------+---------------+------------------------+\n| Kb     | Drivemaker's  | Currently     | Shrinksby 4 bytes each |\n|        | Kilobyte      | 908 bytes     | year for marketing     |\n|        |               |               | reasons                |\n+--------+---------------+---------------+------------------------+\n| KBa    | Baker's       | 1152 Bytes    | 9 bits to the byte     |\n|        | Kilobyte      |               | since you're such a    |\n|        |               |               | good customer          |\n+--------+---------------+---------------+------------------------+\n</code></pre>\n<h5>Specification</h5>\n<ol>\n<li>\n<p>A <strong>cell</strong> is an ASCIM object or NoneType stored in the ASCIMTable.\nWhen printed, it is enclosed with <code>+</code> and <code>-</code> horizontally and\n<code>+</code> and <code>|</code> vertically. NoneType denotes there is no content in the cell,\nand is interpreted as an 1x1 ASCIM object when displayed.</p>\n</li>\n<li>\n<p>On each side of the pipe (vertical bar; <code>|</code>) that is a cell MUST\nbe a space. As illustrated:</p>\n<pre><code>+---+\n|012|\n|345|\n|678|\n+---+\n</code></pre>\n<p>In this rect-enclosed area, the \"cell\" only covers 1, 4, and 7.\nLocations 0, 3, 6, 2, 5, 8 MUST be a space.\nLocations 1 and 7 SHOULD NOT be a space.\nThat said, only horizontal margins are necessary.</p>\n</li>\n<li>\n<p>When a row is too wide or a column is too tall in the text to convert\nto an ASCIMTable, the excess columns/rows of spaces are cut off.</p>\n</li>\n</ol>\n<h3>ASCIM Draw</h3>\n<p>With ASCIMDraw you can make in-place modifications with an ASCIM Image.\nAn ASCIMDraw object takes a (reference to) an ASCIM object as its argument.</p>\n<p>Code example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ascim.ascim</span> <span class=\"kn\">import</span> <span class=\"n\">ASCIM</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ascim.draw</span> <span class=\"kn\">import</span> <span class=\"n\">ASCIMDraw</span>\n\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">ASCIM</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">draw</span> <span class=\"o\">=</span> <span class=\"n\">ASCIMDraw</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">)</span>\n<span class=\"n\">draw</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"s1\">'oh nice'</span><span class=\"p\">)</span>  <span class=\"c1\"># text is wrapped in a 4x2 box</span>\n<span class=\"c1\"># `im` is modified in-place</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">to_text</span><span class=\"p\">())</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  oh</span>\n<span class=\"c1\">#  nice</span>\n<span class=\"c1\">#</span>\n</pre>\n\n          </div>"}, "last_serial": 6774919, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "83efec3a2a245541edff36d328c77d00", "sha256": "12dfc98a40e549e6230bd1d213427430f06fc36cbe456ef1f961369321113ecb"}, "downloads": -1, "filename": "ascim-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "83efec3a2a245541edff36d328c77d00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7586, "upload_time": "2020-03-02T06:48:01", "upload_time_iso_8601": "2020-03-02T06:48:01.485954Z", "url": "https://files.pythonhosted.org/packages/2d/96/24f052addf6aa8a17e0a9b557db6ae7c8bab4e8f91ce6f3d76cce2a5e496/ascim-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ff733da1f6bf0479a6ae81b8e8b69b8", "sha256": "a20cf8efe96f1630e118251ffb9603ce60da4e10bff897360154b0b9e1ac2041"}, "downloads": -1, "filename": "ascim-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8ff733da1f6bf0479a6ae81b8e8b69b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5534, "upload_time": "2020-03-02T06:48:03", "upload_time_iso_8601": "2020-03-02T06:48:03.433506Z", "url": "https://files.pythonhosted.org/packages/36/37/163932ccfbe2b322775d8c4015cc2741de5b8c65b47156c146b7493df615/ascim-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "620e2b36e53068b027bcc63b8092029f", "sha256": "7f8aef1e84c96cf01a64dd4875d5fb796e0d0282d90e6272c1a38179b7b20b86"}, "downloads": -1, "filename": "ascim-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "620e2b36e53068b027bcc63b8092029f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 9496, "upload_time": "2020-03-09T05:37:12", "upload_time_iso_8601": "2020-03-09T05:37:12.043822Z", "url": "https://files.pythonhosted.org/packages/7e/26/3c7f468e1ea55d80d515ff8971aeeca670812cfd97d94b4f78ad046304ef/ascim-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fc072d98b8deb096165c1b778961e50", "sha256": "3447cf7be4fe1a4807fbb72f3b950c93a9f03ba448555480c5b8f0d70f13726a"}, "downloads": -1, "filename": "ascim-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6fc072d98b8deb096165c1b778961e50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9602, "upload_time": "2020-03-09T05:37:13", "upload_time_iso_8601": "2020-03-09T05:37:13.233595Z", "url": "https://files.pythonhosted.org/packages/19/bf/047f3682a7046ccb5d227edcda3c7164e5df650d3793f9d0a4372435fc14/ascim-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "620e2b36e53068b027bcc63b8092029f", "sha256": "7f8aef1e84c96cf01a64dd4875d5fb796e0d0282d90e6272c1a38179b7b20b86"}, "downloads": -1, "filename": "ascim-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "620e2b36e53068b027bcc63b8092029f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 9496, "upload_time": "2020-03-09T05:37:12", "upload_time_iso_8601": "2020-03-09T05:37:12.043822Z", "url": "https://files.pythonhosted.org/packages/7e/26/3c7f468e1ea55d80d515ff8971aeeca670812cfd97d94b4f78ad046304ef/ascim-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fc072d98b8deb096165c1b778961e50", "sha256": "3447cf7be4fe1a4807fbb72f3b950c93a9f03ba448555480c5b8f0d70f13726a"}, "downloads": -1, "filename": "ascim-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6fc072d98b8deb096165c1b778961e50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9602, "upload_time": "2020-03-09T05:37:13", "upload_time_iso_8601": "2020-03-09T05:37:13.233595Z", "url": "https://files.pythonhosted.org/packages/19/bf/047f3682a7046ccb5d227edcda3c7164e5df650d3793f9d0a4372435fc14/ascim-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:02 2020"}