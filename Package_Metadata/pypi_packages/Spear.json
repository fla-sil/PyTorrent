{"info": {"author": "Michael G. Noll", "author_email": "michael[AT]quuxlabs[DOT]com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Scientific/Engineering", "Topic :: Sociology", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "The purpose of this implementation is to make the inner workings of\n    the algorithm easy to understand and not to distract or confuse\n    the reader with highly optimized code.\n\n    The SPEAR algorithm takes a list of user activities on resources\n    as input, and returns ranked lists of users by expertise scores\n    and resources by quality scores, respectively.\n\n    You can also use this library to simulate the HITS algorithm of\n    Jon Kleinberg. Simply supply a credit score function C(x) = 1 to\n    the SPEAR algorithm (see documentation of Spear.run()).\n\n    More information about the SPEAR algorithm is available at:\n    * http://www.spear-algorithm.org/\n    * \"Telling Experts from Spammers: Expertise Ranking in Folksonomies\"\n      Michael G. Noll, Ching-man Au Yeung, et al.\n      SIGIR 09: Proceedings of 32nd International ACM SIGIR Conference\n      on Research and Development in Information Retrieval, Boston, USA,\n      July 2009, pp. 612-619, ISBN 978-1-60558-483-6\n\n    The code is licensed to you under version 2 of the GNU General Public\n    License.\n\n    Copyright 2009-2010 Michael G. Noll <http://www.michael-noll.com/>\n                        Ching-man Au Yeung <http://www.albertauyeung.com/>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.quuxlabs.com/", "keywords": "research SPEAR ranking folksonomies expertise HITS spam information retrieval", "license": "GNU General Public License version 2", "maintainer": null, "maintainer_email": null, "name": "Spear", "package_url": "https://pypi.org/project/Spear/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Spear/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.quuxlabs.com/"}, "release_url": "https://pypi.org/project/Spear/1.0/", "requires_dist": null, "requires_python": null, "summary": "The reference implementation of the SPEAR ranking algorithm in Python", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            The purpose of this implementation is to make the inner workings of<br>    the algorithm easy to understand and not to distract or confuse<br>    the reader with highly optimized code.<br><br>    The SPEAR algorithm takes a list of user activities on resources<br>    as input, and returns ranked lists of users by expertise scores<br>    and resources by quality scores, respectively.<br><br>    You can also use this library to simulate the HITS algorithm of<br>    Jon Kleinberg. Simply supply a credit score function C(x) = 1 to<br>    the SPEAR algorithm (see documentation of Spear.run()).<br><br>    More information about the SPEAR algorithm is available at:<br>    * http://www.spear-algorithm.org/<br>    * \"Telling Experts from Spammers: Expertise Ranking in Folksonomies\"<br>      Michael G. Noll, Ching-man Au Yeung, et al.<br>      SIGIR 09: Proceedings of 32nd International ACM SIGIR Conference<br>      on Research and Development in Information Retrieval, Boston, USA,<br>      July 2009, pp. 612-619, ISBN 978-1-60558-483-6<br><br>    The code is licensed to you under version 2 of the GNU General Public<br>    License.<br><br>    Copyright 2009-2010 Michael G. Noll &lt;http://www.michael-noll.com/&gt;<br>                        Ching-man Au Yeung &lt;http://www.albertauyeung.com/&gt;\n          </div>"}, "last_serial": 785703, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9d44982102d8e87d7a84dfba37cb566e", "sha256": "73f40bc11c469875c6a5406514fd40782be35227f56929b854b638ebd49c7127"}, "downloads": -1, "filename": "Spear-1.0.tar.gz", "has_sig": false, "md5_digest": "9d44982102d8e87d7a84dfba37cb566e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11754, "upload_time": "2010-07-10T18:18:15", "upload_time_iso_8601": "2010-07-10T18:18:15.550946Z", "url": "https://files.pythonhosted.org/packages/3b/30/c1e2b25cade1493c4be0bbfc88873d65fd95c862aea2cd7d56ad2c4ca922/Spear-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d44982102d8e87d7a84dfba37cb566e", "sha256": "73f40bc11c469875c6a5406514fd40782be35227f56929b854b638ebd49c7127"}, "downloads": -1, "filename": "Spear-1.0.tar.gz", "has_sig": false, "md5_digest": "9d44982102d8e87d7a84dfba37cb566e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11754, "upload_time": "2010-07-10T18:18:15", "upload_time_iso_8601": "2010-07-10T18:18:15.550946Z", "url": "https://files.pythonhosted.org/packages/3b/30/c1e2b25cade1493c4be0bbfc88873d65fd95c862aea2cd7d56ad2c4ca922/Spear-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:43 2020"}