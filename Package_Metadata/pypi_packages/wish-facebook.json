{"info": {"author": "Thierry Schellenbach", "author_email": "thierryschellenbach@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "##############################################################################################\nDjango Facebook by Thierry Schellenbach (`mellowmorning.com <http://www.mellowmorning.com/>`_)\n##############################################################################################\n\n.. image:: https://secure.travis-ci.org/tschellenbach/Django-facebook.png?branch=master\n        :target: https://travis-ci.org/tschellenbach/Django-facebook\n\n.. image:: https://pypip.in/d/django-facebook/badge.png\n        :target: https://pypi.python.org/pypi/django-facebook\n\n\nStatus\n-------\nDjango and Facebook are both rapidly changing at the moment. Meanwhile, I'm caught up in a startup and don't have much spare time.\nThe library needs a good round of testing against the latest python, django and facebook graph API.\nContributions are strongly appreciated. Seriously, give github a try, fork and get started :)\n\nNews\n----\n* django-facebook will be dropping support for django < 1.8 since `django only supports <https://www.djangoproject.com/download/#supported-versions>`_ versions 1.8 and above.\n  \n\nDemo & About\n------------\n\nDjango Facebook enables your users to easily register using the Facebook API.\nIt converts the Facebook user data and creates regular User and Profile objects.\nThis makes it easy to integrate with your existing Django application.\n\nAfter registration Django Facebook gives you access to user's graph. Allowing for applications such as:\n\n* Open graph/ Timeline functionality\n* Seamless personalization\n* Inviting friends\n* Finding friends\n* Posting to a users profile\n\nUpdates and tutorials can be found on my blog `mellowmorning <http://www.mellowmorning.com/>`_\n\n\nFeatures\n--------\n\n* Access the Facebook API, from:\n   * Your website (Using javascript OAuth)\n   * Facebook canvas pages (For building facebook applications)\n   * Mobile (Or any other flow giving you a valid access token)\n* Django User Registration (Convert Facebook user data into a user model)\n* Store likes, friends and user data locally.\n* Facebook FQL access\n* OAuth 2.0 compliant\n* Automated reauthentication (For expired tokens)\n* Includes Open Facebook (stable and tested Python client to the graph API)\n\n\nDocumentation\n-------------\n\n**Basics**\n\n* `Installation <http://django-facebook.readthedocs.org/en/latest/installation.html>`_\n* `Customizing <http://django-facebook.readthedocs.org/en/latest/customizing.html>`_\n* `Settings <http://django-facebook.readthedocs.org/en/latest/settings.html>`_\n* `Registration backends & Redirects <http://django-facebook.readthedocs.org/en/latest/registration_backend.html>`_\n\n**Open Facebook API**\n\n* `Getting an OpenFacebook object <http://django-facebook.readthedocs.org/en/latest/graph.html>`_\n* `Making calls <http://django-facebook.readthedocs.org/en/latest/open_facebook/api.html>`_\n\n**Advanced**\n\n* `Mobile <http://django-facebook.readthedocs.org/en/latest/mobile.html>`_\n* `Celery <http://django-facebook.readthedocs.org/en/latest/celery.html>`_\n* `Signals <http://django-facebook.readthedocs.org/en/latest/signals.html>`_\n* `Canvas <http://django-facebook.readthedocs.org/en/latest/canvas.html>`_\n\n\nContributing and Running tests\n------------------------------\nTests are run from within the example project. You\ncan run them yourself as follows:\n\ninstall from git\n\nfacebook_example/manage.py test django_facebook\n\n\n**Vagrant**\n\nA vagrant development setup is included in the GIT repo.\nAssuming you have vagrant installed, simply type the following in your shell:\n\n::\n\n    # First get a fresh Django-Facebook checkout\n    git clone git@github.com:tschellenbach/Django-facebook.git django-facebook\n\n    # Go to the directory:\n    cd django-facebook\n\n    # Time to start Vagrant (grab a cup of coffee after this command, it'll take a while) :)\n    vagrant up; vagrant provision\n\n    # Finally done?\n    vagrant ssh\n    python manage.py runserver 0:8000\n\nTo have a working Django Facebook example up and running at 192.168.50.42:8000/facebook/example/.\nFor the facebook login to work simply map that ip to vagrant.mellowmorning.com\n(Since Facebook checks the domain)\n\nYou can run the test suite by typing:\n\n::\n\n  python manage.py test django_facebook", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tschellenbach/Django-facebook", "keywords": null, "license": "Copyright (c) Thierry Schellenbach\n\n (http://www.mellowmorning.com)\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n- Neither the name of Thierry Schellenbach. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission of Thierry Schellenbach.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "maintainer": null, "maintainer_email": null, "name": "wish-facebook", "package_url": "https://pypi.org/project/wish-facebook/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wish-facebook/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/tschellenbach/Django-facebook"}, "release_url": "https://pypi.org/project/wish-facebook/6.0.6/", "requires_dist": null, "requires_python": null, "summary": "Facebook open graph API client in python. Enables django applications to register users using facebook.\nFixes issues with the official but unsupported Facebook python-sdk. Enables mobile facebook authentication.\nCanvas page authentication for facebook applications. FQL access via the server side api.", "version": "6.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/tschellenbach/Django-facebook\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/tschellenbach/Django-facebook.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04ca6622541316396c9d3e63ead57ec5b7c66046/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f74736368656c6c656e626163682f446a616e676f2d66616365626f6f6b2e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/django-facebook\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/django-facebook/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d413de64787a393704ba28a7a6d9450523e2233/68747470733a2f2f70797069702e696e2f642f646a616e676f2d66616365626f6f6b2f62616467652e706e67\"></a>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Django and Facebook are both rapidly changing at the moment. Meanwhile, I\u2019m caught up in a startup and don\u2019t have much spare time.\nThe library needs a good round of testing against the latest python, django and facebook graph API.\nContributions are strongly appreciated. Seriously, give github a try, fork and get started :)</p>\n</div>\n<div id=\"news\">\n<h2>News</h2>\n<ul>\n<li>django-facebook will be dropping support for django &lt; 1.8 since <a href=\"https://www.djangoproject.com/download/#supported-versions\" rel=\"nofollow\">django only supports</a> versions 1.8 and above.</li>\n</ul>\n</div>\n<div id=\"demo-about\">\n<h2>Demo &amp; About</h2>\n<p>Django Facebook enables your users to easily register using the Facebook API.\nIt converts the Facebook user data and creates regular User and Profile objects.\nThis makes it easy to integrate with your existing Django application.</p>\n<p>After registration Django Facebook gives you access to user\u2019s graph. Allowing for applications such as:</p>\n<ul>\n<li>Open graph/ Timeline functionality</li>\n<li>Seamless personalization</li>\n<li>Inviting friends</li>\n<li>Finding friends</li>\n<li>Posting to a users profile</li>\n</ul>\n<p>Updates and tutorials can be found on my blog <a href=\"http://www.mellowmorning.com/\" rel=\"nofollow\">mellowmorning</a></p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><dl>\n<dt>Access the Facebook API, from:</dt>\n<dd><ul>\n<li>Your website (Using javascript OAuth)</li>\n<li>Facebook canvas pages (For building facebook applications)</li>\n<li>Mobile (Or any other flow giving you a valid access token)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Django User Registration (Convert Facebook user data into a user model)</li>\n<li>Store likes, friends and user data locally.</li>\n<li>Facebook FQL access</li>\n<li>OAuth 2.0 compliant</li>\n<li>Automated reauthentication (For expired tokens)</li>\n<li>Includes Open Facebook (stable and tested Python client to the graph API)</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><strong>Basics</strong></p>\n<ul>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/installation.html\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/customizing.html\" rel=\"nofollow\">Customizing</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/settings.html\" rel=\"nofollow\">Settings</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/registration_backend.html\" rel=\"nofollow\">Registration backends &amp; Redirects</a></li>\n</ul>\n<p><strong>Open Facebook API</strong></p>\n<ul>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/graph.html\" rel=\"nofollow\">Getting an OpenFacebook object</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/open_facebook/api.html\" rel=\"nofollow\">Making calls</a></li>\n</ul>\n<p><strong>Advanced</strong></p>\n<ul>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/mobile.html\" rel=\"nofollow\">Mobile</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/celery.html\" rel=\"nofollow\">Celery</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/signals.html\" rel=\"nofollow\">Signals</a></li>\n<li><a href=\"http://django-facebook.readthedocs.org/en/latest/canvas.html\" rel=\"nofollow\">Canvas</a></li>\n</ul>\n</div>\n<div id=\"contributing-and-running-tests\">\n<h2>Contributing and Running tests</h2>\n<p>Tests are run from within the example project. You\ncan run them yourself as follows:</p>\n<p>install from git</p>\n<p>facebook_example/manage.py test django_facebook</p>\n<p><strong>Vagrant</strong></p>\n<p>A vagrant development setup is included in the GIT repo.\nAssuming you have vagrant installed, simply type the following in your shell:</p>\n<pre># First get a fresh Django-Facebook checkout\ngit clone git@github.com:tschellenbach/Django-facebook.git django-facebook\n\n# Go to the directory:\ncd django-facebook\n\n# Time to start Vagrant (grab a cup of coffee after this command, it'll take a while) :)\nvagrant up; vagrant provision\n\n# Finally done?\nvagrant ssh\npython manage.py runserver 0:8000\n</pre>\n<p>To have a working Django Facebook example up and running at 192.168.50.42:8000/facebook/example/.\nFor the facebook login to work simply map that ip to vagrant.mellowmorning.com\n(Since Facebook checks the domain)</p>\n<p>You can run the test suite by typing:</p>\n<pre>python manage.py test django_facebook\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2757388, "releases": {"6.0.6": [{"comment_text": "", "digests": {"md5": "32793d3e33fbda3f8338ee6e80baedc0", "sha256": "8b560bfbc42fdb2f437f02948812e0c0d8d59c61b78b9b86816adca1c9ee9f4f"}, "downloads": -1, "filename": "wish-facebook-6.0.6.tar.gz", "has_sig": false, "md5_digest": "32793d3e33fbda3f8338ee6e80baedc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90368, "upload_time": "2017-04-06T11:48:02", "upload_time_iso_8601": "2017-04-06T11:48:02.574967Z", "url": "https://files.pythonhosted.org/packages/15/b8/55bf544dd2c16fc111c2d9e17445d4cf13e7efb11df1444682f0beec8c2d/wish-facebook-6.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32793d3e33fbda3f8338ee6e80baedc0", "sha256": "8b560bfbc42fdb2f437f02948812e0c0d8d59c61b78b9b86816adca1c9ee9f4f"}, "downloads": -1, "filename": "wish-facebook-6.0.6.tar.gz", "has_sig": false, "md5_digest": "32793d3e33fbda3f8338ee6e80baedc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90368, "upload_time": "2017-04-06T11:48:02", "upload_time_iso_8601": "2017-04-06T11:48:02.574967Z", "url": "https://files.pythonhosted.org/packages/15/b8/55bf544dd2c16fc111c2d9e17445d4cf13e7efb11df1444682f0beec8c2d/wish-facebook-6.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}