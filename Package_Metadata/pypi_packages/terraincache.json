{"info": {"author": "Simon Norris", "author_email": "snorris@hillcrestgeo.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# terraincache\n\nA (yet another) basic Python script for downloading and accessing [Mapzen Terrain Tiles](https://registry.opendata.aws/terrain-tiles/) geotiffs from AWS. Designed to integrate with `rasterio` and to provide a familiar command line tool for quick reprojection of downloads.\n\n## Installation\n\n    pip install terraincache\n\nSet the `TERRAINCACHE` environment variable to save typing:\n\n    export TERRAINCACHE=/users/snorris/Data/terrain-tiles\n\n## Usage\n\n### Python module\n\n    from matplotlib import pyplot as plt\n    import rasterio\n\n    from terraincache import TerrainTiles\n\n    bounds =[-125.2714, 51.3706, -125.2547, 51.3768]\n\n    # Initialize with bounds and zoom of interest\n    tt = TerrainTiles(bounds, 11)\n\n    # load to numpy array\n    array = tt.load()\n\n    # plot the array directly\n    plt.imshow(array, cmap='terrain', extent=bounds)\n\n![alt text](dem1.png \"dem1\")\n\nDump to file and plot the array using `rasterio.plot.show()` (for correct axis labels):\n\n    tt.save(out_file=\"dem.tif\")\n    with rasterio.open(\"dem.tif\", \"r\") as src:\n        fig, ax = plt.subplots()\n        rasterio.plot.show(src, ax=ax, title='terrain-tiles', cmap=\"terrain\")\n\n![alt text](dem2.png \"dem2\")\n\n### CLI\n\n    $ terraincache --help\n    Usage: terraincache [OPTIONS]\n\n      Write terrain tiles to geotiff\n\n    Options:\n      -o, --out_file, --out-file PATH\n                                      Output file name/path\n      --bounds TEXT                   Bounds: \"left bottom right top\" or \"[left,\n                                      bottom, right, top]\".  [required]\n      -z, --zoom INTEGER              Web map zoom level  [required]\n      -p, --cache-dir, --cache_dir TEXT\n                                      Path to cache folder\n      -tr, --resolution FLOAT         Output dataset target resolution in meters\n                                      (square pixels)\n      --bounds-crs, --bounds_crs TEXT\n                                      CRS of provided bounds\n      --dst-crs, --dst_crs TEXT       Target coordinate reference system.\n      -r, --resampling_algorithm [bilinear|nearest|cubic|cubicspline|lanczos|average|mode]\n                                      GDAL resampling algorithm\n      -v, --verbose                   Increase verbosity.\n      -q, --quiet                     Decrease verbosity.\n      --help                          Show this message and exit.\n\nFor example, create a geotiff around the summit of Mt Fairweather (at BC / AK border) that aligns with the BC TRIM DEM.  Note that this is almost certainly upsampling the data available, see below link to review source resolutions.\n\n    terraincache \\\n      --bounds \"336637.5, 1597112.5, 346637.5, 1607112.5\" \\\n      --bounds-crs EPSG:3005 \\\n      --zoom 11 \\\n      -tr 25 \\\n      -r bilinear \\\n      -o dem.tif\n\n\n## Data sources\n\nSee the [data sources reference document](https://github.com/tilezen/joerd/blob/master/docs/data-sources.md)\n\n## Credits / other implementations\n\n- [terrain-tiles](https://registry.opendata.aws/terrain-tiles)\n- [Mapzen provided script](https://github.com/tilezen/joerd/blob/master/docs/examples/collect.py)\n- [planetutils](https://github.com/interline-io/planetutils)\n- [dem](https://github.com/dgketchum/dem)\n- [elevatr](https://github.com/jhollist/elevatr)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smnorris/terraincache", "keywords": "terrain-tiles mapzen aws terrain dem s3 geotiff", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "terraincache", "package_url": "https://pypi.org/project/terraincache/", "platform": "", "project_url": "https://pypi.org/project/terraincache/", "project_urls": {"Homepage": "https://github.com/smnorris/terraincache"}, "release_url": "https://pypi.org/project/terraincache/0.0.1/", "requires_dist": ["click", "mercantile", "rasterio", "requests", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Basic tool for downloading and merging mapzen terrain tile geotiffs from AWS", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>terraincache</h1>\n<p>A (yet another) basic Python script for downloading and accessing <a href=\"https://registry.opendata.aws/terrain-tiles/\" rel=\"nofollow\">Mapzen Terrain Tiles</a> geotiffs from AWS. Designed to integrate with <code>rasterio</code> and to provide a familiar command line tool for quick reprojection of downloads.</p>\n<h2>Installation</h2>\n<pre><code>pip install terraincache\n</code></pre>\n<p>Set the <code>TERRAINCACHE</code> environment variable to save typing:</p>\n<pre><code>export TERRAINCACHE=/users/snorris/Data/terrain-tiles\n</code></pre>\n<h2>Usage</h2>\n<h3>Python module</h3>\n<pre><code>from matplotlib import pyplot as plt\nimport rasterio\n\nfrom terraincache import TerrainTiles\n\nbounds =[-125.2714, 51.3706, -125.2547, 51.3768]\n\n# Initialize with bounds and zoom of interest\ntt = TerrainTiles(bounds, 11)\n\n# load to numpy array\narray = tt.load()\n\n# plot the array directly\nplt.imshow(array, cmap='terrain', extent=bounds)\n</code></pre>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36f51b86108c5e8d1f7c47bf2b5b34c40d12540f/64656d312e706e67\"></p>\n<p>Dump to file and plot the array using <code>rasterio.plot.show()</code> (for correct axis labels):</p>\n<pre><code>tt.save(out_file=\"dem.tif\")\nwith rasterio.open(\"dem.tif\", \"r\") as src:\n    fig, ax = plt.subplots()\n    rasterio.plot.show(src, ax=ax, title='terrain-tiles', cmap=\"terrain\")\n</code></pre>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57bbc531c55cb3f330125543714ebd439c99749b/64656d322e706e67\"></p>\n<h3>CLI</h3>\n<pre><code>$ terraincache --help\nUsage: terraincache [OPTIONS]\n\n  Write terrain tiles to geotiff\n\nOptions:\n  -o, --out_file, --out-file PATH\n                                  Output file name/path\n  --bounds TEXT                   Bounds: \"left bottom right top\" or \"[left,\n                                  bottom, right, top]\".  [required]\n  -z, --zoom INTEGER              Web map zoom level  [required]\n  -p, --cache-dir, --cache_dir TEXT\n                                  Path to cache folder\n  -tr, --resolution FLOAT         Output dataset target resolution in meters\n                                  (square pixels)\n  --bounds-crs, --bounds_crs TEXT\n                                  CRS of provided bounds\n  --dst-crs, --dst_crs TEXT       Target coordinate reference system.\n  -r, --resampling_algorithm [bilinear|nearest|cubic|cubicspline|lanczos|average|mode]\n                                  GDAL resampling algorithm\n  -v, --verbose                   Increase verbosity.\n  -q, --quiet                     Decrease verbosity.\n  --help                          Show this message and exit.\n</code></pre>\n<p>For example, create a geotiff around the summit of Mt Fairweather (at BC / AK border) that aligns with the BC TRIM DEM.  Note that this is almost certainly upsampling the data available, see below link to review source resolutions.</p>\n<pre><code>terraincache \\\n  --bounds \"336637.5, 1597112.5, 346637.5, 1607112.5\" \\\n  --bounds-crs EPSG:3005 \\\n  --zoom 11 \\\n  -tr 25 \\\n  -r bilinear \\\n  -o dem.tif\n</code></pre>\n<h2>Data sources</h2>\n<p>See the <a href=\"https://github.com/tilezen/joerd/blob/master/docs/data-sources.md\" rel=\"nofollow\">data sources reference document</a></p>\n<h2>Credits / other implementations</h2>\n<ul>\n<li><a href=\"https://registry.opendata.aws/terrain-tiles\" rel=\"nofollow\">terrain-tiles</a></li>\n<li><a href=\"https://github.com/tilezen/joerd/blob/master/docs/examples/collect.py\" rel=\"nofollow\">Mapzen provided script</a></li>\n<li><a href=\"https://github.com/interline-io/planetutils\" rel=\"nofollow\">planetutils</a></li>\n<li><a href=\"https://github.com/dgketchum/dem\" rel=\"nofollow\">dem</a></li>\n<li><a href=\"https://github.com/jhollist/elevatr\" rel=\"nofollow\">elevatr</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6127096, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "20923752f65553de36b3c25691aefe74", "sha256": "e57559087771875127bafee0d9078af161ffd24725203bfe466850efcf05bfe7"}, "downloads": -1, "filename": "terraincache-0.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "20923752f65553de36b3c25691aefe74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7001, "upload_time": "2019-11-12T23:18:38", "upload_time_iso_8601": "2019-11-12T23:18:38.537971Z", "url": "https://files.pythonhosted.org/packages/93/c4/e63e3d51fbbcee761d2ba7173c0e779cbc915c584643c5cc3f42b6a5c0ca/terraincache-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8c05b733620ff6f03eda3b50f6ed795", "sha256": "a46365dd9640c095564a2a21e104a70938dc07c451601ece9837658559ef69c6"}, "downloads": -1, "filename": "terraincache-0.0.1.tar.gz", "has_sig": true, "md5_digest": "c8c05b733620ff6f03eda3b50f6ed795", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5468, "upload_time": "2019-11-12T23:18:40", "upload_time_iso_8601": "2019-11-12T23:18:40.924604Z", "url": "https://files.pythonhosted.org/packages/2e/6f/e2b68d99f47f3f0026d9716ff515ae201b0d394e377885b346a4f63622c6/terraincache-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20923752f65553de36b3c25691aefe74", "sha256": "e57559087771875127bafee0d9078af161ffd24725203bfe466850efcf05bfe7"}, "downloads": -1, "filename": "terraincache-0.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "20923752f65553de36b3c25691aefe74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7001, "upload_time": "2019-11-12T23:18:38", "upload_time_iso_8601": "2019-11-12T23:18:38.537971Z", "url": "https://files.pythonhosted.org/packages/93/c4/e63e3d51fbbcee761d2ba7173c0e779cbc915c584643c5cc3f42b6a5c0ca/terraincache-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8c05b733620ff6f03eda3b50f6ed795", "sha256": "a46365dd9640c095564a2a21e104a70938dc07c451601ece9837658559ef69c6"}, "downloads": -1, "filename": "terraincache-0.0.1.tar.gz", "has_sig": true, "md5_digest": "c8c05b733620ff6f03eda3b50f6ed795", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5468, "upload_time": "2019-11-12T23:18:40", "upload_time_iso_8601": "2019-11-12T23:18:40.924604Z", "url": "https://files.pythonhosted.org/packages/2e/6f/e2b68d99f47f3f0026d9716ff515ae201b0d394e377885b346a4f63622c6/terraincache-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:47 2020"}