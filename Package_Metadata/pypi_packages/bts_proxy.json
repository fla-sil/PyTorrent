{"info": {"author": "Nicolas Wack", "author_email": "wackou@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "BitShares proxy\n---------------\n\nThis is a simple script that acts as an RPC proxy to the BitShares client\nand provides simple access control to it, allowing to restrict access to\ncertain methods of the client only in a flexible way.\n\nIf you like this tool, please vote for `my\ndelegate <http://digitalgaia.io/btstools.html>`__ to support further\ndevelopment, and feel free to visit my page for other delegate proposals\nat `digitalgaia.io <http://digitalgaia.io>`__. Thanks!\n\n\nInstall\n=======\n\nTo install, run::\n\n    $ pip install bts_proxy\n\npreferably (but not required) in a virtualenv.\n\n\nRunning the proxy\n=================\n\nJust run the ``bts-proxy`` script on the command line.\n\nConfiguration file with listening port and users/passwords alongside with\nallowed methods can be found in the same data dir as the one for the BitShares\nclient. Config file is named ``proxy.json``, and will be created automatically\nthe first time you run ``bts-proxy`` if it doesn't exist yet.\n\nYou can specify a different data dir than the default one for the BitShares client\nas the first argument to the ``bts-proxy`` script, e.g.::\n\n    $ bts-proxy ~/.BitShares\n\n\nConfiguration file format\n=========================\n\nThe configuration file is a simple JSON file, looking like this::\n\n    {\n        \"port\": 5681,\n\n        \"users\": [\n            {\n                \"name\": \"username\",\n                \"password\": \"secret-password\",\n                \"methods_allowed\": [\"*\"]\n            }\n        ]\n    }\n\n``port`` is the port number on which the proxy will be listening. Make sure\nto use a different port than the one on which the BitShares client is listening!\n\n``users`` is a list of objects containing the following fields:\n\n* ``name``: the name of the user\n* ``password``: the password for that user\n* ``methods_allowed``: the list of methods allowed. You can used shell-like\n  pattern matching here (eg: ``\"wallet_*\"`` will allow all methods starting\n  with ``\"wallet_\"``)\n* ``methods_forbidden`` *(optional)*: the list of forbidden methods. You can also use\n  shell-like pattern matching here.\n\nNote that by default, methods are forbidden, so the proxy will allow you to\ncall a method **if and only if** it appears in the ``methods_allowed`` field\nand **not** in the ``methods_forbidden`` field.\n\nSecurity best practices\n=======================\n\nIt is highly recommended to run both the BitShares client and the RPC proxy as\ntheir own separate user, rather than your common one, and to restrict read access to\nthe BitShares client data dir to only this user.\n\nThis should come by default with BitShares >= 0.5.0, otherwise you can do the\nfollowing::\n\n    $ chmod 700 ~/.BitShares", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wackou/bts_proxy", "keywords": "BitShares RPC proxy", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "bts_proxy", "package_url": "https://pypi.org/project/bts_proxy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bts_proxy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/wackou/bts_proxy"}, "release_url": "https://pypi.org/project/bts_proxy/0.1/", "requires_dist": null, "requires_python": null, "summary": "BitShares RPC proxy", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a simple script that acts as an RPC proxy to the BitShares client\nand provides simple access control to it, allowing to restrict access to\ncertain methods of the client only in a flexible way.</p>\n<p>If you like this tool, please vote for <a href=\"http://digitalgaia.io/btstools.html\" rel=\"nofollow\">my\ndelegate</a> to support further\ndevelopment, and feel free to visit my page for other delegate proposals\nat <a href=\"http://digitalgaia.io\" rel=\"nofollow\">digitalgaia.io</a>. Thanks!</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>To install, run:</p>\n<pre>$ pip install bts_proxy\n</pre>\n<p>preferably (but not required) in a virtualenv.</p>\n</div>\n<div id=\"running-the-proxy\">\n<h2>Running the proxy</h2>\n<p>Just run the <tt><span class=\"pre\">bts-proxy</span></tt> script on the command line.</p>\n<p>Configuration file with listening port and users/passwords alongside with\nallowed methods can be found in the same data dir as the one for the BitShares\nclient. Config file is named <tt>proxy.json</tt>, and will be created automatically\nthe first time you run <tt><span class=\"pre\">bts-proxy</span></tt> if it doesn\u2019t exist yet.</p>\n<p>You can specify a different data dir than the default one for the BitShares client\nas the first argument to the <tt><span class=\"pre\">bts-proxy</span></tt> script, e.g.:</p>\n<pre>$ bts-proxy ~/.BitShares\n</pre>\n</div>\n<div id=\"configuration-file-format\">\n<h2>Configuration file format</h2>\n<p>The configuration file is a simple JSON file, looking like this:</p>\n<pre>{\n    \"port\": 5681,\n\n    \"users\": [\n        {\n            \"name\": \"username\",\n            \"password\": \"secret-password\",\n            \"methods_allowed\": [\"*\"]\n        }\n    ]\n}\n</pre>\n<p><tt>port</tt> is the port number on which the proxy will be listening. Make sure\nto use a different port than the one on which the BitShares client is listening!</p>\n<p><tt>users</tt> is a list of objects containing the following fields:</p>\n<ul>\n<li><tt>name</tt>: the name of the user</li>\n<li><tt>password</tt>: the password for that user</li>\n<li><tt>methods_allowed</tt>: the list of methods allowed. You can used shell-like\npattern matching here (eg: <tt>\"wallet_*\"</tt> will allow all methods starting\nwith <tt>\"wallet_\"</tt>)</li>\n<li><tt>methods_forbidden</tt> <em>(optional)</em>: the list of forbidden methods. You can also use\nshell-like pattern matching here.</li>\n</ul>\n<p>Note that by default, methods are forbidden, so the proxy will allow you to\ncall a method <strong>if and only if</strong> it appears in the <tt>methods_allowed</tt> field\nand <strong>not</strong> in the <tt>methods_forbidden</tt> field.</p>\n</div>\n<div id=\"security-best-practices\">\n<h2>Security best practices</h2>\n<p>It is highly recommended to run both the BitShares client and the RPC proxy as\ntheir own separate user, rather than your common one, and to restrict read access to\nthe BitShares client data dir to only this user.</p>\n<p>This should come by default with BitShares &gt;= 0.5.0, otherwise you can do the\nfollowing:</p>\n<pre>$ chmod 700 ~/.BitShares\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1378049, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d7b3f1f3becfae76b8200b2ac29e8c96", "sha256": "6e831224741d2d3ee19e0cd0b0ad1924ee3fdc133c92fc2c4831ef0cb6d578f8"}, "downloads": -1, "filename": "bts_proxy-0.1.tar.gz", "has_sig": false, "md5_digest": "d7b3f1f3becfae76b8200b2ac29e8c96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5295, "upload_time": "2015-01-10T21:00:26", "upload_time_iso_8601": "2015-01-10T21:00:26.769963Z", "url": "https://files.pythonhosted.org/packages/a2/85/297f3e9c9e9c90e68dd4946893b13d394c41d9b7e032be823a08da06f475/bts_proxy-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7b3f1f3becfae76b8200b2ac29e8c96", "sha256": "6e831224741d2d3ee19e0cd0b0ad1924ee3fdc133c92fc2c4831ef0cb6d578f8"}, "downloads": -1, "filename": "bts_proxy-0.1.tar.gz", "has_sig": false, "md5_digest": "d7b3f1f3becfae76b8200b2ac29e8c96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5295, "upload_time": "2015-01-10T21:00:26", "upload_time_iso_8601": "2015-01-10T21:00:26.769963Z", "url": "https://files.pythonhosted.org/packages/a2/85/297f3e9c9e9c90e68dd4946893b13d394c41d9b7e032be823a08da06f475/bts_proxy-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:08 2020"}