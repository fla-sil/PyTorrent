{"info": {"author": "Joshua R. Heling", "author_email": "jrh-pypi@netfluvia.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Games/Entertainment"], "description": "# PyLGRum - A Python Library for Gin Rummy\n\n## Overview\n\nPyLGRum aims to be a comprehensive Python language library for the card game [Gin Rummy](https://en.wikipedia.org/wiki/Gin_rummy).\n\nIt currently includes:\n\n* Classes that model the cards and collections of cards needed to play the game.\n* Classes that model a game and the players in that game, supporting two operating modes:\n  * A *synchronous* mode driven by a Game object that calls hooks in Player objects to advance the game\n  * An *asynchronous* mode appropriate for play through an API\n\n## Motivation & Project Goals\n\nGin Rummy is a fine game and all, but I hope you have better things to do with your time than play a two-person card game against a computer opponent.\n\nSo why PyLGRum?\n\nAs somebody who both enjoys playing Gin Rummy and making things with software, I wanted a platform in which I could experiment at scale with different strategies for game play. Basically, I want a way to define and test different Gin Rummy playing algorithms. It also serves as a playground project for different programming and system design techniques.\n\n## Current Status\n\nPyLGRum is substantially complete and working, with the following open issues:\n\n* The challenging player always starts the game\n* Game doesn't recognize end of game state yet\n* Test coverage on TUI game/player is incomplete\n\n## Technical Documentation\n\nThe PyLGRum package is [thoroughly documented here](https://jrheling.github.io/pylgrum/pylgrum/).\n\n## TODOs\n```text\nat some point:\n- replace print statements in game play with non-terminal-assuming messages\n\nmaybe improvements:\n- more pythonic in deck.py (lists)\n- Card's *_val() methods ---> properties instead\n- CardStack size(), peek() --> properties\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jrheling/pylgrum", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylgrum", "package_url": "https://pypi.org/project/pylgrum/", "platform": "", "project_url": "https://pypi.org/project/pylgrum/", "project_urls": {"Homepage": "https://github.com/jrheling/pylgrum"}, "release_url": "https://pypi.org/project/pylgrum/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A library for modeling and playing the card game Gin Rummy", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyLGRum - A Python Library for Gin Rummy</h1>\n<h2>Overview</h2>\n<p>PyLGRum aims to be a comprehensive Python language library for the card game <a href=\"https://en.wikipedia.org/wiki/Gin_rummy\" rel=\"nofollow\">Gin Rummy</a>.</p>\n<p>It currently includes:</p>\n<ul>\n<li>Classes that model the cards and collections of cards needed to play the game.</li>\n<li>Classes that model a game and the players in that game, supporting two operating modes:\n<ul>\n<li>A <em>synchronous</em> mode driven by a Game object that calls hooks in Player objects to advance the game</li>\n<li>An <em>asynchronous</em> mode appropriate for play through an API</li>\n</ul>\n</li>\n</ul>\n<h2>Motivation &amp; Project Goals</h2>\n<p>Gin Rummy is a fine game and all, but I hope you have better things to do with your time than play a two-person card game against a computer opponent.</p>\n<p>So why PyLGRum?</p>\n<p>As somebody who both enjoys playing Gin Rummy and making things with software, I wanted a platform in which I could experiment at scale with different strategies for game play. Basically, I want a way to define and test different Gin Rummy playing algorithms. It also serves as a playground project for different programming and system design techniques.</p>\n<h2>Current Status</h2>\n<p>PyLGRum is substantially complete and working, with the following open issues:</p>\n<ul>\n<li>The challenging player always starts the game</li>\n<li>Game doesn't recognize end of game state yet</li>\n<li>Test coverage on TUI game/player is incomplete</li>\n</ul>\n<h2>Technical Documentation</h2>\n<p>The PyLGRum package is <a href=\"https://jrheling.github.io/pylgrum/pylgrum/\" rel=\"nofollow\">thoroughly documented here</a>.</p>\n<h2>TODOs</h2>\n<pre>at some point:\n- replace print statements in game play with non-terminal-assuming messages\n\nmaybe improvements:\n- more pythonic in deck.py (lists)\n- Card's *_val() methods ---&gt; properties instead\n- CardStack size(), peek() --&gt; properties\n</pre>\n\n          </div>"}, "last_serial": 6534449, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0180801019e8256f446a35bfa1ccf8cd", "sha256": "55787ab25ca644006c0abf72d51cf9e02a56757760ac83f74092173c306eaeb2"}, "downloads": -1, "filename": "pylgrum-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0180801019e8256f446a35bfa1ccf8cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33350, "upload_time": "2020-01-28T21:04:36", "upload_time_iso_8601": "2020-01-28T21:04:36.717749Z", "url": "https://files.pythonhosted.org/packages/34/e5/5b0d71d09ad8693e76b888f3b0da69259108bd701e0ab765c9cef47cc259/pylgrum-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3615310825c3ee81af2f1a335eaa8afa", "sha256": "d22abe4a66fee5647c6a34e55ae116997e6288eed4f6f4c9d5324db6f11d94ea"}, "downloads": -1, "filename": "pylgrum-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3615310825c3ee81af2f1a335eaa8afa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24056, "upload_time": "2020-01-28T21:04:38", "upload_time_iso_8601": "2020-01-28T21:04:38.558681Z", "url": "https://files.pythonhosted.org/packages/3a/d8/8c5ec4674b8076923ef5d399454e7790a6814450cd6de9ef758f256e42d8/pylgrum-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0180801019e8256f446a35bfa1ccf8cd", "sha256": "55787ab25ca644006c0abf72d51cf9e02a56757760ac83f74092173c306eaeb2"}, "downloads": -1, "filename": "pylgrum-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0180801019e8256f446a35bfa1ccf8cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33350, "upload_time": "2020-01-28T21:04:36", "upload_time_iso_8601": "2020-01-28T21:04:36.717749Z", "url": "https://files.pythonhosted.org/packages/34/e5/5b0d71d09ad8693e76b888f3b0da69259108bd701e0ab765c9cef47cc259/pylgrum-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3615310825c3ee81af2f1a335eaa8afa", "sha256": "d22abe4a66fee5647c6a34e55ae116997e6288eed4f6f4c9d5324db6f11d94ea"}, "downloads": -1, "filename": "pylgrum-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3615310825c3ee81af2f1a335eaa8afa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24056, "upload_time": "2020-01-28T21:04:38", "upload_time_iso_8601": "2020-01-28T21:04:38.558681Z", "url": "https://files.pythonhosted.org/packages/3a/d8/8c5ec4674b8076923ef5d399454e7790a6814450cd6de9ef758f256e42d8/pylgrum-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:11 2020"}