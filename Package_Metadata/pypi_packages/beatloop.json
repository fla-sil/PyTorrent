{"info": {"author": "Joao Faria", "author_email": "slimedev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved", "Topic :: Multimedia"], "description": "========\nBeatloop\n========\n\nBeatloop is a python module for programming simple beat loops.\n\nUsage\n=====\n\nThis is an example usage of beatloop. You can find a more detailed\nexample in the \"examples\" folder::\n\n    import beatloop\n    \n    loop = beatloop.Loop(300, 4, 4, 3)\n    #300 BPM, 4 beats with 4 steps each, 3 audio channels\n    \n    loop.load_sound(\"kick.ogg\", 0) #load kick sound into channel #0\n    loop.load_sound(\"hat.ogg\", 1)  #hat into ch. #1\n    loop.load_sound(\"snare.ogg\", 2)#snare into ch. #2\n    \n    loop.set_sound(0, 0, 0) #set kick in beat 0, step 0\n    loop.set_sound(1, 1, 0) #snare in beat 1, step 0\n    \n    loop.set_repeat(2, 2)   #hats each 2 steps\n    \n    loop.print_pattern() #display a scheme of the pattern\n    \n    loop.play_once() #finally, play the loop once\n    \nNotes\n-----\n\n* Beatloop uses pygame. The pygame sound (and, inherently, beatloop) \nonly reads .wav and .ogg sound files.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/searchnomore/beatloop", "keywords": "simple beat loop programming", "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "beatloop", "package_url": "https://pypi.org/project/beatloop/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/beatloop/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/searchnomore/beatloop"}, "release_url": "https://pypi.org/project/beatloop/0.1/", "requires_dist": null, "requires_python": null, "summary": "Python module for programming simple beat loops.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ========<br>Beatloop<br>========<br><br>Beatloop is a python module for programming simple beat loops.<br><br>Usage<br>=====<br><br>This is an example usage of beatloop. You can find a more detailed<br>example in the \"examples\" folder::<br><br>    import beatloop<br>    <br>    loop = beatloop.Loop(300, 4, 4, 3)<br>    #300 BPM, 4 beats with 4 steps each, 3 audio channels<br>    <br>    loop.load_sound(\"kick.ogg\", 0) #load kick sound into channel #0<br>    loop.load_sound(\"hat.ogg\", 1)  #hat into ch. #1<br>    loop.load_sound(\"snare.ogg\", 2)#snare into ch. #2<br>    <br>    loop.set_sound(0, 0, 0) #set kick in beat 0, step 0<br>    loop.set_sound(1, 1, 0) #snare in beat 1, step 0<br>    <br>    loop.set_repeat(2, 2)   #hats each 2 steps<br>    <br>    loop.print_pattern() #display a scheme of the pattern<br>    <br>    loop.play_once() #finally, play the loop once<br>    <br>Notes<br>-----<br><br>* Beatloop uses pygame. The pygame sound (and, inherently, beatloop) <br>only reads .wav and .ogg sound files.\n          </div>"}, "last_serial": 1207708, "releases": {"0.1": []}, "urls": [], "timestamp": "Thu May  7 22:37:55 2020"}