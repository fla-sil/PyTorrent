{"info": {"author": "Piotr Rarus", "author_email": "piotr.rarus@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Nahre\n\nVanilla computer vision research and prototype package.\nLets you dive straight into problem solving mindset.\nYou don't have to worry about tedious stuff.\n\n- loading data\n- batch configuration\n- record processing\n\n## Getting started\n\n```sh\npip install nahre\n```\n\n## How to use\n\n### Data\n\nPut your image files in a single folder. Both flat and nested structures are supported.\n\n### Processor\n\nProcessor class must implement base `Processor` interface, which ships with this package.\nWhen batch is executed, every record from data set is ran against `process` method.\nThis method must return results which matches next processor's interface on the list.\n\n### Example\n\n```py\nfrom pathlib import Path\n\nimport numpy as np\nfrom austen import Logger\nfrom degas import FluentImage\nfrom lazy import lazy\nfrom pytest import fixture\nfrom skimage import color, exposure, feature\n\nfrom nahre import Batch, Processor, execute\nfrom nahre.io import Data\n\n\nclass EdgeProcessor(Processor):\n\n    def __init__(self, logger: Logger):\n        super().__init__(logger)\n\n    @lazy\n    def _description(self):\n        return 'Any description is better than none.'\n\n    def process(self, src: np.ndarray):\n\n        with FluentImage(src, self.logger, 'preprocessing') as preprocessed:\n\n            preprocessed >> (\n                color.rgb2gray\n            ) >> (\n                exposure.rescale_intensity\n            ) >> (\n                exposure.equalize_adapthist\n            ) >> (\n                feature.canny\n            )\n\n            return {\n                'preprocessed': preprocessed.image\n            }\n\n\nbatch = Batch(\n    data=Data(Path('data')),\n    processors=[EdgeProcessor],\n    log_root=Path('log')\n)\n\nexecute([batch])\n\n```\n\n`nahre` will dump any intermediate images using `austen` package. Additionally, final results will be dumped in separate folder.\n\n## Tests\n\n```shell\ncd [project-path]\npython -m pytest\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/piotr-rarus/nahre", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nahre", "package_url": "https://pypi.org/project/nahre/", "platform": "", "project_url": "https://pypi.org/project/nahre/", "project_urls": {"Homepage": "https://github.com/piotr-rarus/nahre"}, "release_url": "https://pypi.org/project/nahre/0.2.0/", "requires_dist": ["numpy", "scikit-image", "austen", "degas", "lazy", "tqdm"], "requires_python": "", "summary": "Computer vision research lib.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Nahre</h1>\n<p>Vanilla computer vision research and prototype package.\nLets you dive straight into problem solving mindset.\nYou don't have to worry about tedious stuff.</p>\n<ul>\n<li>loading data</li>\n<li>batch configuration</li>\n<li>record processing</li>\n</ul>\n<h2>Getting started</h2>\n<pre>pip install nahre\n</pre>\n<h2>How to use</h2>\n<h3>Data</h3>\n<p>Put your image files in a single folder. Both flat and nested structures are supported.</p>\n<h3>Processor</h3>\n<p>Processor class must implement base <code>Processor</code> interface, which ships with this package.\nWhen batch is executed, every record from data set is ran against <code>process</code> method.\nThis method must return results which matches next processor's interface on the list.</p>\n<h3>Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">austen</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">degas</span> <span class=\"kn\">import</span> <span class=\"n\">FluentImage</span>\n<span class=\"kn\">from</span> <span class=\"nn\">lazy</span> <span class=\"kn\">import</span> <span class=\"n\">lazy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pytest</span> <span class=\"kn\">import</span> <span class=\"n\">fixture</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skimage</span> <span class=\"kn\">import</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">exposure</span><span class=\"p\">,</span> <span class=\"n\">feature</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nahre</span> <span class=\"kn\">import</span> <span class=\"n\">Batch</span><span class=\"p\">,</span> <span class=\"n\">Processor</span><span class=\"p\">,</span> <span class=\"n\">execute</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nahre.io</span> <span class=\"kn\">import</span> <span class=\"n\">Data</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EdgeProcessor</span><span class=\"p\">(</span><span class=\"n\">Processor</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">Logger</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">logger</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@lazy</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_description</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'Any description is better than none.'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">):</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">FluentImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"p\">,</span> <span class=\"s1\">'preprocessing'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">preprocessed</span><span class=\"p\">:</span>\n\n            <span class=\"n\">preprocessed</span> <span class=\"o\">&gt;&gt;</span> <span class=\"p\">(</span>\n                <span class=\"n\">color</span><span class=\"o\">.</span><span class=\"n\">rgb2gray</span>\n            <span class=\"p\">)</span> <span class=\"o\">&gt;&gt;</span> <span class=\"p\">(</span>\n                <span class=\"n\">exposure</span><span class=\"o\">.</span><span class=\"n\">rescale_intensity</span>\n            <span class=\"p\">)</span> <span class=\"o\">&gt;&gt;</span> <span class=\"p\">(</span>\n                <span class=\"n\">exposure</span><span class=\"o\">.</span><span class=\"n\">equalize_adapthist</span>\n            <span class=\"p\">)</span> <span class=\"o\">&gt;&gt;</span> <span class=\"p\">(</span>\n                <span class=\"n\">feature</span><span class=\"o\">.</span><span class=\"n\">canny</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'preprocessed'</span><span class=\"p\">:</span> <span class=\"n\">preprocessed</span><span class=\"o\">.</span><span class=\"n\">image</span>\n            <span class=\"p\">}</span>\n\n\n<span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">Batch</span><span class=\"p\">(</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">Data</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">)),</span>\n    <span class=\"n\">processors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">EdgeProcessor</span><span class=\"p\">],</span>\n    <span class=\"n\">log_root</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">execute</span><span class=\"p\">([</span><span class=\"n\">batch</span><span class=\"p\">])</span>\n</pre>\n<p><code>nahre</code> will dump any intermediate images using <code>austen</code> package. Additionally, final results will be dumped in separate folder.</p>\n<h2>Tests</h2>\n<pre><span class=\"nb\">cd</span> <span class=\"o\">[</span>project-path<span class=\"o\">]</span>\npython -m pytest\n</pre>\n\n          </div>"}, "last_serial": 6668015, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "fabd8748c25eb1a37c531ead66ffaebe", "sha256": "020a489838e929fd1bf601ba5cf9da8ee180babed872cf3b154d67735ef593b8"}, "downloads": -1, "filename": "nahre-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fabd8748c25eb1a37c531ead66ffaebe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8856, "upload_time": "2019-12-03T14:28:35", "upload_time_iso_8601": "2019-12-03T14:28:35.218023Z", "url": "https://files.pythonhosted.org/packages/0c/7c/039eaff4a93327176c6ca18b8d322a2f5d006ae0afe3cbf6e71c5eefd64d/nahre-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaa65bd75bf6520cf1f847b003071a2f", "sha256": "f5104a9ddfa2b339ea43787aa9316e6624d49a97fec511488b4c105f6aa520f6"}, "downloads": -1, "filename": "nahre-0.1.1.tar.gz", "has_sig": false, "md5_digest": "aaa65bd75bf6520cf1f847b003071a2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5106, "upload_time": "2019-12-03T14:28:37", "upload_time_iso_8601": "2019-12-03T14:28:37.094818Z", "url": "https://files.pythonhosted.org/packages/9d/dd/412b8be965805c948ed5c0eef1824506a07ad6d2a37aa50f77dbf56a86e0/nahre-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e1884a26ae8003cf98cd2fa273ba62c1", "sha256": "e26624600ce9e8f8d8babec2dfb2616962de9f4ea7924c533997f87f2a28b15d"}, "downloads": -1, "filename": "nahre-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e1884a26ae8003cf98cd2fa273ba62c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8865, "upload_time": "2020-02-20T12:56:00", "upload_time_iso_8601": "2020-02-20T12:56:00.773042Z", "url": "https://files.pythonhosted.org/packages/ba/f6/2e32175931c275368ef01c189778cb8da7e829f7d1946910fc9ef09ac8bb/nahre-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bb1649246034112de93417ff451ea42", "sha256": "1852cb74bef3c8fc52a62df039e3f3d8f6b6bcc8d2cc3b0137a9189d2a92d5aa"}, "downloads": -1, "filename": "nahre-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1bb1649246034112de93417ff451ea42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5109, "upload_time": "2020-02-20T12:56:01", "upload_time_iso_8601": "2020-02-20T12:56:01.770059Z", "url": "https://files.pythonhosted.org/packages/4f/a2/4f8e14293efd4f2f76b755670696225d2b7b1ec377a8ef88f6af9df19180/nahre-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1884a26ae8003cf98cd2fa273ba62c1", "sha256": "e26624600ce9e8f8d8babec2dfb2616962de9f4ea7924c533997f87f2a28b15d"}, "downloads": -1, "filename": "nahre-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e1884a26ae8003cf98cd2fa273ba62c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8865, "upload_time": "2020-02-20T12:56:00", "upload_time_iso_8601": "2020-02-20T12:56:00.773042Z", "url": "https://files.pythonhosted.org/packages/ba/f6/2e32175931c275368ef01c189778cb8da7e829f7d1946910fc9ef09ac8bb/nahre-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bb1649246034112de93417ff451ea42", "sha256": "1852cb74bef3c8fc52a62df039e3f3d8f6b6bcc8d2cc3b0137a9189d2a92d5aa"}, "downloads": -1, "filename": "nahre-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1bb1649246034112de93417ff451ea42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5109, "upload_time": "2020-02-20T12:56:01", "upload_time_iso_8601": "2020-02-20T12:56:01.770059Z", "url": "https://files.pythonhosted.org/packages/4f/a2/4f8e14293efd4f2f76b755670696225d2b7b1ec377a8ef88f6af9df19180/nahre-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:51 2020"}