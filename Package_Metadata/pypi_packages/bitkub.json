{"info": {"author": "sang_sakarin", "author_email": "sang_sakarin@outlook.com", "bugtrack_url": null, "classifiers": [], "description": "# Bitkub Python\n\n\n\nA Python library for [bitkub.com](https://github.com/bitkub/bitkub-official-api-docs) API\n\n## Releases\n  * ```2020-04-02``` version ```1.0.3``` add [generate-address](#cryptogenerateaddress) method\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Creating a Bitkub](#creating)\n  - [Set API key & API secret](#api_key)\n  - [Viewing status](#viewingstatus)\n  - [Viewing servertime](#viewingservertime)\n  - [Viewing symbols](#viewingsymbols)\n  - [Viewing ticker](#viewingticker)\n  - [Viewing trades](#viewingtrades)\n  - [Viewing bids](#viewingbids)\n  - [Viewing asks](#viewingasks)\n  - [Viewing books](#viewingbooks)\n  - [Viewing depth](#viewingdepth)\n  - [Viewing wallet](#viewingwallet)\n  - [Viewing balances](#viewingbalances)\n  - [Create buy order](#createbuyorder)\n  - [Create sell order](#createsellorder)\n  - [Create sell order by fiat](#createsellorderfiat)\n  - [Cancel order](#cancelorder)\n  - [My open orders](#myopenorders)\n  - [My order history](#myorderhistory)\n  - [Order info](#orderinfo)\n  - [Crypto addresses](#cryptoaddressses)\n  - [Crypto withdraw](#cryptowithdraw)\n  - [Crypto deposit history](#cryptodeposithistory)\n  - [Crypto withdraw history](#cryptowithdrawhistory)\n  - [Crypto generate address](#cryptogenerateaddress)\n  - [Fiat accounts](#fiataccounts)\n  - [Fiat withdraw](#fiatwithdraw)\n  - [Fiat deposit history](#fiatdeposithistory)\n  - [Fiat withdraw history](#fiatwithdrawhistory)\n  - [Market wstoken](#marketwstoken)\n  - [User limits](#userlimits)\n  - [User trading credits](#usertradingcredits)\n\n\n## Installation <a name=\"installation\"></a>\n\n    pip install bitkub\n\n## Usage <a name=\"usage\"></a>\n\n    from bitkub import Bitkub\n\n### Creating a Bitkub Object <a name=\"creating\"></a>\n\n    API_KEY = 'YOUR API KEY'\n    API_SECRET = 'YOUR API SECRET'\n\n    # initial obj only non-secure\n    bitkub = Bitkub()\n\n    # initial obj non-secure and secure\n    bitkub = Bitkub(api_key=API_KEY, api_secret=API_SECRET)\n\nYou can find API KEY and API SECRET from [here](https://www.bitkub.com/publicapi).\n\n### Set API key and API secret <a name=\"api_key\"></a>\n  If you initial obj with only non-secure. You can set up API key and API secret on below.\n\n    API_KEY = 'YOUR API KEY'\n    API_SECRET = 'YOUR API SECRET'\n\n    bitkub = Bitkub()\n    bitkub.set_api_key(API_KEY)\n    bitkub.set_api_secret(API_SECRET)\n\n### Viewing status <a name=\"viewingstatus\"></a>\n\nGet endpoint status.\n\n#### Function:\n    bitkub.status()\n\n#### Response:\n\n    [\n      {\n        'name': 'Non-secure endpoints',\n        'status': 'ok',\n        'message': ''\n      },\n      {\n        'name': 'Secure endpoints',\n        'status': 'ok',\n        'message': ''\n      }\n    ]\n\n### Viewing servertime <a name=\"viewingservertime\"></a>\n\nGet server timestamp.\n\n#### Function:\n    bitkub.servertime()\n\n#### Response:\n\n    1583051817\n\n### Viewing symbols <a name=\"viewingsymbols\"></a>\n\nList all available symbols.\n\n#### Function:\n    bitkub.symbols()\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n          'id': 1,\n          'info': 'Thai Baht to Bitcoin',\n          'symbol': 'THB_BTC'\n        },\n        {\n          'id': 2,\n          'info': 'Thai Baht to Ethereum',\n          'symbol': 'THB_ETH'\n        }\n      ]\n    }\n\n### Viewing ticker <a name=\"viewingticker\"></a>\n\nGet ticker information.\n\n#### Function:\n    bitkub.ticker(sym='THB_BTC')\n\n#### Parameter:\n\n  * ```sym``` **string** The symbol (optional) ```default``` \"\"\n\n#### Response:\n\n    {\n      'THB_BTC': {\n        'id': 1,\n        'last': 278000,\n        'lowestAsk': 278869.41,\n        'highestBid': 278000,\n        'percentChange': -1.44,\n        'baseVolume': 206.01549914,\n        'quoteVolume': 57883319.04,\n        'isFrozen': 0,\n        'high24hr': 284000,\n        'low24hr': 277579.62,\n        'change': -4075.81,\n        'prevClose': 281800,\n        'prevOpen': 281800\n      }\n    }\n\n### Viewing trades <a name=\"viewingtrades\"></a>\n\nList recent trades.\n\n#### Function:\n    bitkub.trades(sym=\"THB_BTC\", lmt=2)\n\n#### Parameter:\n\n  * ```sym``` **string** The symbol\n  * ```lmt``` **int** No. of limit to Parameter recent trades ```default``` 1\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        [\n          1583246192, // timestamp\n          278798.34, // rate\n          0.00375672, // amount\n          'BUY' // side\n        ],\n        [\n          1583246159,\n          278000,\n          0.0001042,\n          'SELL'\n        ]\n      ]\n    }\n\n\n### Viewing bids <a name=\"viewingbids\"></a>\n\nList open buy orders.\n\n#### Function:\n    bitkub.bids(sym=\"THB_BTC\", lmt=2)\n\n#### Parameter:\n\n  * ```sym``` **string** The symbol\n  * ```lmt``` **int** No. of limit to Parameter open buy orders ```default``` 1\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        [\n          4632978, // order id\n          1583245687, // timestamp\n          73110.59, // volume\n          278000, // rate\n          0.26298773 // amount\n        ],\n        [\n          4632732,\n          1583245871,\n          1312.68,\n          278000,\n          0.00472187\n        ]\n      ]\n    }\n\n\n### Viewing asks <a name=\"viewingasks\"></a>\n\nList open sell orders.\n\n#### Function:\n    bitkub.asks(sym=\"THB_BTC\", lmt=2)\n#### Parameter:\n\n  * ```sym``` **string** The symbol\n  * ```lmt``` **int** No. of limit to Parameter open sell orders ```default``` 1\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        [\n          4761288, // order id\n          1583246870, // timestamp\n          163813.12, // volume\n          278499.03, // rate\n          0.5882 // amount\n        ],\n        [\n          4761287,\n          1583246870,\n          379232.12,\n          278499.03,\n          1.3617\n        ]\n      ]\n    }\n\n\n### Viewing books <a name=\"viewingbooks\"></a>\n\nList all open orders.\n\n#### Function:\n    bitkub.books(sym=\"THB_BTC\", lmt=1)\n#### Parameter:\n\n  * ```sym``` **string** The symbol\n  * ```lmt``` **int** No. of imit to Parameter open orders ```default``` 1\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'asks': [\n          [\n            4761425, // order id\n            1583247105, // timestamp\n            360885.74, // volume\n            278300.17, // rate\n            1.29675 // amount\n          ]\n        ],\n        'bids': [\n          [\n            4633099, // order id\n            1583247090, // timestamp\n            622146.15, // volume\n            277946.2, // rate\n            2.23836897 // amount\n          ]\n        ]\n      }\n    }\n\n\n### Viewing depth <a name=\"viewingdepth\"></a>\n\nGet depth information.\n\n#### Function:\n    bitkub.depth(sym='THB_BTC', lmt=1)\n#### Parameter:\n\n  * ```sym``` **string** The symbol\n  * ```lmt``` **int** Depth size  ```default``` 1\n\n#### Response:\n\n    {\n      'asks': [\n        [\n          277946.16,\n          1.29675\n        ]\n      ],\n      'bids': [\n        [\n          277936.27,\n          0.94071896\n        ]\n      ]\n    }\n\n\n### Viewing wallet <a name=\"viewingwallet\"></a>\n\nGet user available balances. ```Required initial secure obj```\n\n#### Function:\n    bitkub.wallet()\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'THB': 0,\n        'BTC': 0,\n        'ETH': 0\n      }\n    }\n\n\n### Viewing balances <a name=\"viewingbalances\"></a>\n\nGet balances info: this includes both available and reserved balances. ```Required initial secure obj```\n\n#### Function:\n    bitkub.balances()\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'THB': {\n          'available': 0,\n          'reserved': 0\n        },\n        'BTC': {\n          'available': 0,\n          'reserved': 0\n        }\n      }\n    }\n\n\n### Create buy order <a name=\"createbuyorder\"></a>\n\nCreate a buy order. ```Required initial secure obj```\n\n#### Function:\n    bitkub.place_bid(sym='THB_BTC', amt=1, rat=1, typ='limit')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n  * ```amt``` **float** Amount you want to spend with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) ```default``` 1\n  * ```rat``` **float** Rate you want for the order with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) ```default``` 1\n  * ```typ``` **string** Order type: limit or market ```default``` limit\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'id': 1,\n        'hash': 'fwQ6dnQWQPs4cbatF5Am2xCDP1J',\n        'typ': 'limit',\n        'amt': 1,\n        'rat': 1,\n        'fee': 2.5,\n        'cre': 2.5,\n        'rec': 0.06666666,\n        'ts': 1533834547\n      }\n    }\n\n\n### Create sell order <a name=\"createsellorder\"></a>\n\nCreate a sell order. ```Required initial secure obj```\n\n#### Function:\n    bitkub.place_ask(sym='THB_BTC', amt=1, rat=1, typ='limit')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n  * ```amt``` **float** Amount you want to spend with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) ```default``` 1\n  * ```rat``` **float** Rate you want for the order with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) ```default``` 1\n  * ```typ``` **string** Order type: limit or market ```default``` limit\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'id': 1,\n        'hash': 'fwQ6dnQWQPs4cbatF5Am2xCDP1J',\n        'typ': 'limit',\n        'amt': 1,\n        'rat': 1,\n        'fee': 2.5,\n        'cre': 2.5,\n        'rec': 0.06666666,\n        'ts': 1533834547\n      }\n    }\n\n\n### Create sell order by fiat <a name=\"createsellorderfiat\"></a>\n\nCreate a sell order by specifying the fiat amount you want to receive (selling amount of cryptocurrency is automatically calculated). ```Required initial secure obj```\n\n#### Function:\n    bitkub.place_bid(sym='THB_BTC', amt=1, rat=1, typ='limit')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n  * ```amt``` **float** Amount you want to spend with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) ```default``` 1\n  * ```rat``` **float** Rate you want for the order with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) ```default``` 1\n  * ```typ``` **string** Order type: limit or market ```default``` limit\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'id': 1,\n        'hash': 'fwQ6dnQWQPs4cbatF5Am2xCDP1J',\n        'typ': 'limit',\n        'amt': 1,\n        'rat': 1,\n        'fee': 2.5,\n        'cre': 2.5,\n        'rec': 0.06666666,\n        'ts': 1533834547\n      }\n    }\n\n\n### Cancel orrder<a name=\"cancelorder\"></a>\n\nCancel an open order. ```Required initial secure obj```\n\n#### Function:\n    bitkub.cancel_order(sym='THB_BTC', id=1, sd=1, hash='XXXXXX')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n  * ```id``` **int** Order id you wish to cancel\n  * ```sd``` **string** Order side: buy or sell ```default``` buy\n  * ```hash``` **string** Cancel an order with order hash (optional). You don't need to specify sym, id, and sd when you specify order hash.\n\n\n#### Response:\n\n    {\n      'error': 0\n    }\n\n\n### My open orders<a name=\"myopenorders\"></a>\n\nList all open orders of the given symbol. ```Required initial secure obj```\n\n#### Function:\n    bitkub.my_open_orders(sym='THB_BTC')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n          'id': 2,\n          'hash': 'fwQ6dnQWQPs4cbatFSJpMCcKTFR',\n          'side': 'SELL',\n          'type': 'limit',\n          'rate': 15000,\n          'fee': 35.01,\n          'credit': 35.01,\n          'amount': 0.93333334,\n          'receive': 14000,\n          'parent_id': 1,\n          'super_id': 1,\n          'ts': 1533834844\n        }\n      ]\n    }\n\n\n### My order history<a name=\"myorderhistory\"></a>\n\nList all orders that have already matched. ```Required initial secure obj```\n\n#### Function:\n    bitkub.my_open_history(sym='THB_BTC', p=1, lmt=10)\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n  * ```p``` **string** Page (optional)\n  * ```lmt``` **string** Limit (optional)\n  * ```start``` **string** Start timestamp (optional)\n  * ```end``` **string** End timestamp (optional)\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n          'txn_id': 'ETHBUY0000000197',\n          'order_id': 240,\n          'hash': 'fwQ6dnQWQPs4cbaujNyejinS43a',\n          'parent_order_id': 0,\n          'super_order_id': 0,\n          'taken_by_me': true,\n          'side': 'buy',\n          'type': 'limit',\n          'rate': 13335.57,\n          'fee': 0.34,\n          'credit': 0.34,\n          'amount': 0.00999987,\n          'ts': 1531513395\n        }\n\n    {\n      'error': 0,\n      'result': {\n          'id': 289,\n      ],\n      'pagination': {\n        'page': 2,\n        'last': 3,\n        'next': 3,\n        'prev': 1\n      }\n    }\n\n\n### Order info<a name=\"orderinfo\"></a>\n\nGet information regarding the specified order. ```Required initial secure obj```\n\n#### Function:\n    bitkub.order_info(sym='THB_BTC', id=1, sd='buy', hash='XXXXXX')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n  * ```id``` **int** Order id\n  * ```sd``` **string** Order side: buy or sell ```default```  buy\n  * ```hash``` **string** Lookup an order with order hash (optional). You don't need to specify sym, id, and sd when you specify order hash.\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n          'id': 289,\n          'first': 289,\n          'parent': 0,\n          'last': 316,\n          'amount': 4000,\n          'rate': 291000,\n          'fee': 10,\n          'credit': 10,\n          'filled': 3999.97,\n          'total': 4000,\n          'status': 'filled',\n          'history': [\n            {\n                'amount': 98.14848,\n                'credit': 0.25,\n                'fee': 0.25,\n                'id': 289,\n                'rate': 291000,\n                'timestamp': 1525944169\n            }\n          ]\n        }\n      }\n\n\n### Crypto addresses<a name=\"cryptoaddress\"></a>\n\nList all crypto addresses. ```Required initial secure obj```\n\n#### Function:\n    bitkub.crypto_address(p=1, lmt=1)\n\n#### Parameter:\n  * ```p``` **int** Page (optional) ```default``` 1\n  * ```lmt``` **int** Limit (optional) ```default``` 10\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n           'currency': 'BTC',\n           'address': '3BtxdKw6XSbneNvmJTLVHS9XfNYM7VAe8k',\n           'tag': 0,\n           'time': 1570893867\n        }\n      ],\n      'pagination': {\n        'page': 1,\n        'last\": 1\n      }\n    }\n\n\n### Crypto withdraw<a name=\"cryptowithdraw\"></a>\n\nMake a withdrawal to a trusted address. ```Required initial secure obj```\n\n#### Function:\n    bitkub.crypto_withdraw(cur='BTC', amt=0.1, adr='4asyjKw6XScneNvhJTLVHS9XfNYM7VBf8x', mem='')\n\n#### Parameter:\n  * ```cur``` **string** Currency for withdrawal (e.g. BTC, ETH)\n  * ```amt``` **float** Amount you want to withdraw\n  * ```adr``` **string** Address to which you want to withdraw\n  * ```mem``` **string** (Optional) Memo or destination tag to which you want to withdraw\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n          'txn': 'BTCWD0000012345',\n          'adr': '4asyjKw6XScneNvhJTLVHS9XfNYM7VBf8x'\n          'mem': '',\n          'cur': 'BTC',\n          'amt': 0.1,\n          'fee': 0.0002,\n          'ts': 1569999999\n      }\n    }\n\n\n### Crypto deposit history<a name=\"cryptodeposithistory\"></a>\n\nList crypto deposit history. ```Required initial secure obj```\n\n#### Function:\n    bitkub.crypto_deposit_history(p=1, lmt=1)\n\n#### Parameter:\n  * ```p``` **int** Page (optional) ```default``` 1\n  * ```lmt``` **int** Limit (optional) ```default``` 10\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n           'hash': 'XRPWD0000100276',\n           'currency': 'XRP',\n           'amount': 5.75111474,\n           'address': null,\n           'confirmations': 1,\n           'status': 'complete',\n           'time': 1570893867\n        }\n      ],\n      'pagination': {\n        'page': 1,\n        'last': 1\n      }\n    }\n\n\n### Crypto withdraw history<a name=\"cryptowithdrawhistory\"></a>\n:\nList crypto withdrawal history. ```Required initial secure obj```\n\n#### Function:\n    bitkub.crypto_withdraw_history(p=1, lmt=1)\n\n#### Parameter:\n  * ```p``` **int** Page (optional) ```default``` 1\n  * ```lmt``` **int** Limit (optional) ```default``` 10\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n          'txn_id': 'XRPWD0000100276',\n          'hash': 'send_internal',\n          'currency': 'XRP',\n          'amount': '5.75111474',\n          'fee': 0.01,\n          'address': 'rpXTzCuXtjiPDFysxq8uNmtZBe9Xo97JbW',\n          'status': 'complete',\n          'time': 1570893493\n        }\n      ],\n      'pagination': {\n        'page': 1,\n        'last': 1\n      }\n    }\n\n\n### Crypto generate address<a name=\"cryptogenerateaddress\"></a>\nGenerate a new crypto address (will replace existing address; previous address can still be used to received funds)\nList all approved bank accounts. ```Required initial secure obj```\n\n#### Function:\n    bitkub.crypto_generate_address(sym='THB_BTC')\n\n#### Parameter:\n  * ```sym``` **string** The symbol\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n           'currency': 'BTC',\n           'address': '0x520165471daa570ab632dd504c6af257bd36edfb',\n           'memo': ''\n        }\n      ]\n    }\n\n\n\n### Fiat accounts<a name=\"fiataccounts\"></a>\n\nList all approved bank accounts. ```Required initial secure obj```\n\n#### Function:\n    bitkub.fiat_accounts(p=1, lmt=1)\n\n#### Parameter:\n  * ```p``` **int** Page (optional) ```default``` 1\n  * ```lmt``` **int** Limit (optional) ```default``` 10\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n          'id': '7262109099',\n          'bank': 'Kasikorn Bank',\n          'name': 'Somsak',\n          'time': 1570893867\n        }\n      ],\n      'pagination': {\n        'page': 1,\n        'last': 1\n      }\n    }\n\n\n### Fiat withdraw<a name=\"fiatwithdraw\"></a>\n\nMake a withdrawal to an approved bank account. ```Required initial secure obj```\n\n#### Function:\n    bitkub.fiat_withdraw(id=1, amt=1)\n\n#### Parameter:\n  * ```id``` **string** Bank account id\n  * ```amt``` **float** Amount you want to withdraw\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'txn': 'THBWD0000012345',\n        'acc': '7262109099',\n        'cur': 'THB',\n        'amt': 21,\n        'fee': 20,\n        'rec': 1,\n        'ts': 1569999999\n      }\n    }\n\n\n### Fiat deposit history<a name=\"fiatdeposithistory\"></a>\n\nList fiat deposit history. ```Required initial secure obj```\n\n#### Function:\n    bitkub.fiat_deposit_history(p=1, lmt=1)\n\n#### Parameter:\n  * ```p``` **int** Page (optional) ```default``` 1\n  * ```lmt``` **int** Limit (optional) ```default``` 10\n\n\n#### Response:\n\n    {\n      'error':0,\n      'result':[\n        {\n           'txn_id': 'THBDP0000012345',\n           'currency': 'THB',\n           'amount': 5000.55,\n           'status': 'complete',\n           'time': 1570893867\n        }\n      ],\n      'pagination':{\n        'page': 1,\n        'last': 1\n      }\n    }\n\n\n### Fiat withdraw history<a name=\"fiatwithdrawhistory\"></a>\n\nList fiat withdrawal history. ```Required initial secure obj```\n\n#### Function:\n    bitkub.fiat_withdraw_history(p=1, lmt=1)\n\n#### Parameter:\n  * ```p``` **int** Page (optional) ```default``` 1\n  * ```lmt``` **int** Limit (optional) ```default``` 10\n\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': [\n        {\n           'txn_id': 'THBDP0000012345',\n           'currency': 'THB',\n           'amount': 5000.55,\n           'fee': 20,\n           'status': 'complete',\n           'time': 1570893867\n        }\n      ],\n      'pagination':{\n        'page': 1,\n        'last': 1\n      }\n    }\n\n\n### Market wstoken<a name=\"marketwstoken\"></a>\n\nGet the token for websocket authentication. ```Required initial secure obj```\n\n#### Function:\n    bitkub.market_wstoken()\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': 'sdCBCTwaS2Z1IBB6uTCefIbVN6dQVz9dkDeU96IoFJp14GGhlw9hoUDNe1KSYC23dXBPIqyX2QjVEOFHITxgPMvo8kdVaTkiZBA8KgvVTSMsq6JjjlyERDVZn3tt4PEp'\n    }\n\n### User limits<a name=\"userlimits\"></a>\n\nCheck deposit/withdraw limitations and usage. ```Required initial secure obj```\n\n#### Function:\n    bitkub.user_limits()\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': {\n        'limits': {\n          'crypto': {\n            'deposit': 0,\n            'withdraw': 0\n          },\n          'fiat': {\n            'deposit': 0,\n            'withdraw': 0\n          }\n        },\n        'usage': {\n          'crypto': {\n            'deposit': 0,\n            'withdraw': 0,\n            'deposit_percentage': 0,\n            'withdraw_percentage': 0,\n            'deposit_thb_equivalent': 0,\n            'withdraw_thb_equivalent': 0\n          },\n          'fiat': {\n            'deposit': 0,\n            'withdraw': 0,\n            'deposit_percentage': 0,\n            'withdraw_percentage': 0\n          }\n        },\n        'rate': 177100.32\n      }\n    }\n\n\n### User trading-credit<a name=\"usertradingcredits\"></a>\n\nCheck trading credit balance. ```Required initial secure obj```\n\n#### Function:\n    bitkub.user_trading_credits()\n\n#### Response:\n\n    {\n      'error': 0,\n      'result': 0\n    }\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sang-sakarin/bitkub", "keywords": "bitkub bitkub-python bitkub-python-sdk", "license": "sang_sakarin", "maintainer": "", "maintainer_email": "", "name": "bitkub", "package_url": "https://pypi.org/project/bitkub/", "platform": "", "project_url": "https://pypi.org/project/bitkub/", "project_urls": {"Homepage": "https://github.com/sang-sakarin/bitkub"}, "release_url": "https://pypi.org/project/bitkub/1.0.3/", "requires_dist": ["requests"], "requires_python": "", "summary": "A Python library for Bitkub API", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Bitkub Python</h1>\n<p>A Python library for <a href=\"https://github.com/bitkub/bitkub-official-api-docs\" rel=\"nofollow\">bitkub.com</a> API</p>\n<h2>Releases</h2>\n<ul>\n<li><code>2020-04-02</code> version <code>1.0.3</code> add <a href=\"#cryptogenerateaddress\" rel=\"nofollow\">generate-address</a> method</li>\n</ul>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#creating\" rel=\"nofollow\">Creating a Bitkub</a></li>\n<li><a href=\"#api_key\" rel=\"nofollow\">Set API key &amp; API secret</a></li>\n<li><a href=\"#viewingstatus\" rel=\"nofollow\">Viewing status</a></li>\n<li><a href=\"#viewingservertime\" rel=\"nofollow\">Viewing servertime</a></li>\n<li><a href=\"#viewingsymbols\" rel=\"nofollow\">Viewing symbols</a></li>\n<li><a href=\"#viewingticker\" rel=\"nofollow\">Viewing ticker</a></li>\n<li><a href=\"#viewingtrades\" rel=\"nofollow\">Viewing trades</a></li>\n<li><a href=\"#viewingbids\" rel=\"nofollow\">Viewing bids</a></li>\n<li><a href=\"#viewingasks\" rel=\"nofollow\">Viewing asks</a></li>\n<li><a href=\"#viewingbooks\" rel=\"nofollow\">Viewing books</a></li>\n<li><a href=\"#viewingdepth\" rel=\"nofollow\">Viewing depth</a></li>\n<li><a href=\"#viewingwallet\" rel=\"nofollow\">Viewing wallet</a></li>\n<li><a href=\"#viewingbalances\" rel=\"nofollow\">Viewing balances</a></li>\n<li><a href=\"#createbuyorder\" rel=\"nofollow\">Create buy order</a></li>\n<li><a href=\"#createsellorder\" rel=\"nofollow\">Create sell order</a></li>\n<li><a href=\"#createsellorderfiat\" rel=\"nofollow\">Create sell order by fiat</a></li>\n<li><a href=\"#cancelorder\" rel=\"nofollow\">Cancel order</a></li>\n<li><a href=\"#myopenorders\" rel=\"nofollow\">My open orders</a></li>\n<li><a href=\"#myorderhistory\" rel=\"nofollow\">My order history</a></li>\n<li><a href=\"#orderinfo\" rel=\"nofollow\">Order info</a></li>\n<li><a href=\"#cryptoaddressses\" rel=\"nofollow\">Crypto addresses</a></li>\n<li><a href=\"#cryptowithdraw\" rel=\"nofollow\">Crypto withdraw</a></li>\n<li><a href=\"#cryptodeposithistory\" rel=\"nofollow\">Crypto deposit history</a></li>\n<li><a href=\"#cryptowithdrawhistory\" rel=\"nofollow\">Crypto withdraw history</a></li>\n<li><a href=\"#cryptogenerateaddress\" rel=\"nofollow\">Crypto generate address</a></li>\n<li><a href=\"#fiataccounts\" rel=\"nofollow\">Fiat accounts</a></li>\n<li><a href=\"#fiatwithdraw\" rel=\"nofollow\">Fiat withdraw</a></li>\n<li><a href=\"#fiatdeposithistory\" rel=\"nofollow\">Fiat deposit history</a></li>\n<li><a href=\"#fiatwithdrawhistory\" rel=\"nofollow\">Fiat withdraw history</a></li>\n<li><a href=\"#marketwstoken\" rel=\"nofollow\">Market wstoken</a></li>\n<li><a href=\"#userlimits\" rel=\"nofollow\">User limits</a></li>\n<li><a href=\"#usertradingcredits\" rel=\"nofollow\">User trading credits</a></li>\n</ul>\n</li>\n</ul>\n<h2>Installation <a></a></h2>\n<pre><code>pip install bitkub\n</code></pre>\n<h2>Usage <a></a></h2>\n<pre><code>from bitkub import Bitkub\n</code></pre>\n<h3>Creating a Bitkub Object <a></a></h3>\n<pre><code>API_KEY = 'YOUR API KEY'\nAPI_SECRET = 'YOUR API SECRET'\n\n# initial obj only non-secure\nbitkub = Bitkub()\n\n# initial obj non-secure and secure\nbitkub = Bitkub(api_key=API_KEY, api_secret=API_SECRET)\n</code></pre>\n<p>You can find API KEY and API SECRET from <a href=\"https://www.bitkub.com/publicapi\" rel=\"nofollow\">here</a>.</p>\n<h3>Set API key and API secret <a></a></h3>\n<p>If you initial obj with only non-secure. You can set up API key and API secret on below.</p>\n<pre><code>API_KEY = 'YOUR API KEY'\nAPI_SECRET = 'YOUR API SECRET'\n\nbitkub = Bitkub()\nbitkub.set_api_key(API_KEY)\nbitkub.set_api_secret(API_SECRET)\n</code></pre>\n<h3>Viewing status <a></a></h3>\n<p>Get endpoint status.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.status()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>[\n  {\n    'name': 'Non-secure endpoints',\n    'status': 'ok',\n    'message': ''\n  },\n  {\n    'name': 'Secure endpoints',\n    'status': 'ok',\n    'message': ''\n  }\n]\n</code></pre>\n<h3>Viewing servertime <a></a></h3>\n<p>Get server timestamp.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.servertime()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>1583051817\n</code></pre>\n<h3>Viewing symbols <a></a></h3>\n<p>List all available symbols.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.symbols()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n      'id': 1,\n      'info': 'Thai Baht to Bitcoin',\n      'symbol': 'THB_BTC'\n    },\n    {\n      'id': 2,\n      'info': 'Thai Baht to Ethereum',\n      'symbol': 'THB_ETH'\n    }\n  ]\n}\n</code></pre>\n<h3>Viewing ticker <a></a></h3>\n<p>Get ticker information.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.ticker(sym='THB_BTC')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol (optional) <code>default</code> \"\"</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'THB_BTC': {\n    'id': 1,\n    'last': 278000,\n    'lowestAsk': 278869.41,\n    'highestBid': 278000,\n    'percentChange': -1.44,\n    'baseVolume': 206.01549914,\n    'quoteVolume': 57883319.04,\n    'isFrozen': 0,\n    'high24hr': 284000,\n    'low24hr': 277579.62,\n    'change': -4075.81,\n    'prevClose': 281800,\n    'prevOpen': 281800\n  }\n}\n</code></pre>\n<h3>Viewing trades <a></a></h3>\n<p>List recent trades.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.trades(sym=\"THB_BTC\", lmt=2)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>lmt</code> <strong>int</strong> No. of limit to Parameter recent trades <code>default</code> 1</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    [\n      1583246192, // timestamp\n      278798.34, // rate\n      0.00375672, // amount\n      'BUY' // side\n    ],\n    [\n      1583246159,\n      278000,\n      0.0001042,\n      'SELL'\n    ]\n  ]\n}\n</code></pre>\n<h3>Viewing bids <a></a></h3>\n<p>List open buy orders.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.bids(sym=\"THB_BTC\", lmt=2)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>lmt</code> <strong>int</strong> No. of limit to Parameter open buy orders <code>default</code> 1</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    [\n      4632978, // order id\n      1583245687, // timestamp\n      73110.59, // volume\n      278000, // rate\n      0.26298773 // amount\n    ],\n    [\n      4632732,\n      1583245871,\n      1312.68,\n      278000,\n      0.00472187\n    ]\n  ]\n}\n</code></pre>\n<h3>Viewing asks <a></a></h3>\n<p>List open sell orders.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.asks(sym=\"THB_BTC\", lmt=2)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>lmt</code> <strong>int</strong> No. of limit to Parameter open sell orders <code>default</code> 1</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    [\n      4761288, // order id\n      1583246870, // timestamp\n      163813.12, // volume\n      278499.03, // rate\n      0.5882 // amount\n    ],\n    [\n      4761287,\n      1583246870,\n      379232.12,\n      278499.03,\n      1.3617\n    ]\n  ]\n}\n</code></pre>\n<h3>Viewing books <a></a></h3>\n<p>List all open orders.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.books(sym=\"THB_BTC\", lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>lmt</code> <strong>int</strong> No. of imit to Parameter open orders <code>default</code> 1</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'asks': [\n      [\n        4761425, // order id\n        1583247105, // timestamp\n        360885.74, // volume\n        278300.17, // rate\n        1.29675 // amount\n      ]\n    ],\n    'bids': [\n      [\n        4633099, // order id\n        1583247090, // timestamp\n        622146.15, // volume\n        277946.2, // rate\n        2.23836897 // amount\n      ]\n    ]\n  }\n}\n</code></pre>\n<h3>Viewing depth <a></a></h3>\n<p>Get depth information.</p>\n<h4>Function:</h4>\n<pre><code>bitkub.depth(sym='THB_BTC', lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>lmt</code> <strong>int</strong> Depth size  <code>default</code> 1</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'asks': [\n    [\n      277946.16,\n      1.29675\n    ]\n  ],\n  'bids': [\n    [\n      277936.27,\n      0.94071896\n    ]\n  ]\n}\n</code></pre>\n<h3>Viewing wallet <a></a></h3>\n<p>Get user available balances. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.wallet()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'THB': 0,\n    'BTC': 0,\n    'ETH': 0\n  }\n}\n</code></pre>\n<h3>Viewing balances <a></a></h3>\n<p>Get balances info: this includes both available and reserved balances. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.balances()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'THB': {\n      'available': 0,\n      'reserved': 0\n    },\n    'BTC': {\n      'available': 0,\n      'reserved': 0\n    }\n  }\n}\n</code></pre>\n<h3>Create buy order <a></a></h3>\n<p>Create a buy order. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.place_bid(sym='THB_BTC', amt=1, rat=1, typ='limit')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>amt</code> <strong>float</strong> Amount you want to spend with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) <code>default</code> 1</li>\n<li><code>rat</code> <strong>float</strong> Rate you want for the order with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) <code>default</code> 1</li>\n<li><code>typ</code> <strong>string</strong> Order type: limit or market <code>default</code> limit</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'id': 1,\n    'hash': 'fwQ6dnQWQPs4cbatF5Am2xCDP1J',\n    'typ': 'limit',\n    'amt': 1,\n    'rat': 1,\n    'fee': 2.5,\n    'cre': 2.5,\n    'rec': 0.06666666,\n    'ts': 1533834547\n  }\n}\n</code></pre>\n<h3>Create sell order <a></a></h3>\n<p>Create a sell order. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.place_ask(sym='THB_BTC', amt=1, rat=1, typ='limit')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>amt</code> <strong>float</strong> Amount you want to spend with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) <code>default</code> 1</li>\n<li><code>rat</code> <strong>float</strong> Rate you want for the order with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) <code>default</code> 1</li>\n<li><code>typ</code> <strong>string</strong> Order type: limit or market <code>default</code> limit</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'id': 1,\n    'hash': 'fwQ6dnQWQPs4cbatF5Am2xCDP1J',\n    'typ': 'limit',\n    'amt': 1,\n    'rat': 1,\n    'fee': 2.5,\n    'cre': 2.5,\n    'rec': 0.06666666,\n    'ts': 1533834547\n  }\n}\n</code></pre>\n<h3>Create sell order by fiat <a></a></h3>\n<p>Create a sell order by specifying the fiat amount you want to receive (selling amount of cryptocurrency is automatically calculated). <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.place_bid(sym='THB_BTC', amt=1, rat=1, typ='limit')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>amt</code> <strong>float</strong> Amount you want to spend with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) <code>default</code> 1</li>\n<li><code>rat</code> <strong>float</strong> Rate you want for the order with no trailing zero (e.g 1000.00 is invalid, 1000 is ok) <code>default</code> 1</li>\n<li><code>typ</code> <strong>string</strong> Order type: limit or market <code>default</code> limit</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'id': 1,\n    'hash': 'fwQ6dnQWQPs4cbatF5Am2xCDP1J',\n    'typ': 'limit',\n    'amt': 1,\n    'rat': 1,\n    'fee': 2.5,\n    'cre': 2.5,\n    'rec': 0.06666666,\n    'ts': 1533834547\n  }\n}\n</code></pre>\n<h3>Cancel orrder<a></a></h3>\n<p>Cancel an open order. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.cancel_order(sym='THB_BTC', id=1, sd=1, hash='XXXXXX')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>id</code> <strong>int</strong> Order id you wish to cancel</li>\n<li><code>sd</code> <strong>string</strong> Order side: buy or sell <code>default</code> buy</li>\n<li><code>hash</code> <strong>string</strong> Cancel an order with order hash (optional). You don't need to specify sym, id, and sd when you specify order hash.</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0\n}\n</code></pre>\n<h3>My open orders<a></a></h3>\n<p>List all open orders of the given symbol. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.my_open_orders(sym='THB_BTC')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n      'id': 2,\n      'hash': 'fwQ6dnQWQPs4cbatFSJpMCcKTFR',\n      'side': 'SELL',\n      'type': 'limit',\n      'rate': 15000,\n      'fee': 35.01,\n      'credit': 35.01,\n      'amount': 0.93333334,\n      'receive': 14000,\n      'parent_id': 1,\n      'super_id': 1,\n      'ts': 1533834844\n    }\n  ]\n}\n</code></pre>\n<h3>My order history<a></a></h3>\n<p>List all orders that have already matched. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.my_open_history(sym='THB_BTC', p=1, lmt=10)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>p</code> <strong>string</strong> Page (optional)</li>\n<li><code>lmt</code> <strong>string</strong> Limit (optional)</li>\n<li><code>start</code> <strong>string</strong> Start timestamp (optional)</li>\n<li><code>end</code> <strong>string</strong> End timestamp (optional)</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n      'txn_id': 'ETHBUY0000000197',\n      'order_id': 240,\n      'hash': 'fwQ6dnQWQPs4cbaujNyejinS43a',\n      'parent_order_id': 0,\n      'super_order_id': 0,\n      'taken_by_me': true,\n      'side': 'buy',\n      'type': 'limit',\n      'rate': 13335.57,\n      'fee': 0.34,\n      'credit': 0.34,\n      'amount': 0.00999987,\n      'ts': 1531513395\n    }\n\n{\n  'error': 0,\n  'result': {\n      'id': 289,\n  ],\n  'pagination': {\n    'page': 2,\n    'last': 3,\n    'next': 3,\n    'prev': 1\n  }\n}\n</code></pre>\n<h3>Order info<a></a></h3>\n<p>Get information regarding the specified order. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.order_info(sym='THB_BTC', id=1, sd='buy', hash='XXXXXX')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n<li><code>id</code> <strong>int</strong> Order id</li>\n<li><code>sd</code> <strong>string</strong> Order side: buy or sell <code>default</code>  buy</li>\n<li><code>hash</code> <strong>string</strong> Lookup an order with order hash (optional). You don't need to specify sym, id, and sd when you specify order hash.</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n      'id': 289,\n      'first': 289,\n      'parent': 0,\n      'last': 316,\n      'amount': 4000,\n      'rate': 291000,\n      'fee': 10,\n      'credit': 10,\n      'filled': 3999.97,\n      'total': 4000,\n      'status': 'filled',\n      'history': [\n        {\n            'amount': 98.14848,\n            'credit': 0.25,\n            'fee': 0.25,\n            'id': 289,\n            'rate': 291000,\n            'timestamp': 1525944169\n        }\n      ]\n    }\n  }\n</code></pre>\n<h3>Crypto addresses<a></a></h3>\n<p>List all crypto addresses. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.crypto_address(p=1, lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>p</code> <strong>int</strong> Page (optional) <code>default</code> 1</li>\n<li><code>lmt</code> <strong>int</strong> Limit (optional) <code>default</code> 10</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n       'currency': 'BTC',\n       'address': '3BtxdKw6XSbneNvmJTLVHS9XfNYM7VAe8k',\n       'tag': 0,\n       'time': 1570893867\n    }\n  ],\n  'pagination': {\n    'page': 1,\n    'last\": 1\n  }\n}\n</code></pre>\n<h3>Crypto withdraw<a></a></h3>\n<p>Make a withdrawal to a trusted address. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.crypto_withdraw(cur='BTC', amt=0.1, adr='4asyjKw6XScneNvhJTLVHS9XfNYM7VBf8x', mem='')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>cur</code> <strong>string</strong> Currency for withdrawal (e.g. BTC, ETH)</li>\n<li><code>amt</code> <strong>float</strong> Amount you want to withdraw</li>\n<li><code>adr</code> <strong>string</strong> Address to which you want to withdraw</li>\n<li><code>mem</code> <strong>string</strong> (Optional) Memo or destination tag to which you want to withdraw</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n      'txn': 'BTCWD0000012345',\n      'adr': '4asyjKw6XScneNvhJTLVHS9XfNYM7VBf8x'\n      'mem': '',\n      'cur': 'BTC',\n      'amt': 0.1,\n      'fee': 0.0002,\n      'ts': 1569999999\n  }\n}\n</code></pre>\n<h3>Crypto deposit history<a></a></h3>\n<p>List crypto deposit history. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.crypto_deposit_history(p=1, lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>p</code> <strong>int</strong> Page (optional) <code>default</code> 1</li>\n<li><code>lmt</code> <strong>int</strong> Limit (optional) <code>default</code> 10</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n       'hash': 'XRPWD0000100276',\n       'currency': 'XRP',\n       'amount': 5.75111474,\n       'address': null,\n       'confirmations': 1,\n       'status': 'complete',\n       'time': 1570893867\n    }\n  ],\n  'pagination': {\n    'page': 1,\n    'last': 1\n  }\n}\n</code></pre>\n<h3>Crypto withdraw history<a></a></h3>\n<p>:\nList crypto withdrawal history. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.crypto_withdraw_history(p=1, lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>p</code> <strong>int</strong> Page (optional) <code>default</code> 1</li>\n<li><code>lmt</code> <strong>int</strong> Limit (optional) <code>default</code> 10</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n      'txn_id': 'XRPWD0000100276',\n      'hash': 'send_internal',\n      'currency': 'XRP',\n      'amount': '5.75111474',\n      'fee': 0.01,\n      'address': 'rpXTzCuXtjiPDFysxq8uNmtZBe9Xo97JbW',\n      'status': 'complete',\n      'time': 1570893493\n    }\n  ],\n  'pagination': {\n    'page': 1,\n    'last': 1\n  }\n}\n</code></pre>\n<h3>Crypto generate address<a></a></h3>\n<p>Generate a new crypto address (will replace existing address; previous address can still be used to received funds)\nList all approved bank accounts. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.crypto_generate_address(sym='THB_BTC')\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>sym</code> <strong>string</strong> The symbol</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n       'currency': 'BTC',\n       'address': '0x520165471daa570ab632dd504c6af257bd36edfb',\n       'memo': ''\n    }\n  ]\n}\n</code></pre>\n<h3>Fiat accounts<a></a></h3>\n<p>List all approved bank accounts. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.fiat_accounts(p=1, lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>p</code> <strong>int</strong> Page (optional) <code>default</code> 1</li>\n<li><code>lmt</code> <strong>int</strong> Limit (optional) <code>default</code> 10</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n      'id': '7262109099',\n      'bank': 'Kasikorn Bank',\n      'name': 'Somsak',\n      'time': 1570893867\n    }\n  ],\n  'pagination': {\n    'page': 1,\n    'last': 1\n  }\n}\n</code></pre>\n<h3>Fiat withdraw<a></a></h3>\n<p>Make a withdrawal to an approved bank account. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.fiat_withdraw(id=1, amt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>id</code> <strong>string</strong> Bank account id</li>\n<li><code>amt</code> <strong>float</strong> Amount you want to withdraw</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'txn': 'THBWD0000012345',\n    'acc': '7262109099',\n    'cur': 'THB',\n    'amt': 21,\n    'fee': 20,\n    'rec': 1,\n    'ts': 1569999999\n  }\n}\n</code></pre>\n<h3>Fiat deposit history<a></a></h3>\n<p>List fiat deposit history. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.fiat_deposit_history(p=1, lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>p</code> <strong>int</strong> Page (optional) <code>default</code> 1</li>\n<li><code>lmt</code> <strong>int</strong> Limit (optional) <code>default</code> 10</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error':0,\n  'result':[\n    {\n       'txn_id': 'THBDP0000012345',\n       'currency': 'THB',\n       'amount': 5000.55,\n       'status': 'complete',\n       'time': 1570893867\n    }\n  ],\n  'pagination':{\n    'page': 1,\n    'last': 1\n  }\n}\n</code></pre>\n<h3>Fiat withdraw history<a></a></h3>\n<p>List fiat withdrawal history. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.fiat_withdraw_history(p=1, lmt=1)\n</code></pre>\n<h4>Parameter:</h4>\n<ul>\n<li><code>p</code> <strong>int</strong> Page (optional) <code>default</code> 1</li>\n<li><code>lmt</code> <strong>int</strong> Limit (optional) <code>default</code> 10</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': [\n    {\n       'txn_id': 'THBDP0000012345',\n       'currency': 'THB',\n       'amount': 5000.55,\n       'fee': 20,\n       'status': 'complete',\n       'time': 1570893867\n    }\n  ],\n  'pagination':{\n    'page': 1,\n    'last': 1\n  }\n}\n</code></pre>\n<h3>Market wstoken<a></a></h3>\n<p>Get the token for websocket authentication. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.market_wstoken()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': 'sdCBCTwaS2Z1IBB6uTCefIbVN6dQVz9dkDeU96IoFJp14GGhlw9hoUDNe1KSYC23dXBPIqyX2QjVEOFHITxgPMvo8kdVaTkiZBA8KgvVTSMsq6JjjlyERDVZn3tt4PEp'\n}\n</code></pre>\n<h3>User limits<a></a></h3>\n<p>Check deposit/withdraw limitations and usage. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.user_limits()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': {\n    'limits': {\n      'crypto': {\n        'deposit': 0,\n        'withdraw': 0\n      },\n      'fiat': {\n        'deposit': 0,\n        'withdraw': 0\n      }\n    },\n    'usage': {\n      'crypto': {\n        'deposit': 0,\n        'withdraw': 0,\n        'deposit_percentage': 0,\n        'withdraw_percentage': 0,\n        'deposit_thb_equivalent': 0,\n        'withdraw_thb_equivalent': 0\n      },\n      'fiat': {\n        'deposit': 0,\n        'withdraw': 0,\n        'deposit_percentage': 0,\n        'withdraw_percentage': 0\n      }\n    },\n    'rate': 177100.32\n  }\n}\n</code></pre>\n<h3>User trading-credit<a></a></h3>\n<p>Check trading credit balance. <code>Required initial secure obj</code></p>\n<h4>Function:</h4>\n<pre><code>bitkub.user_trading_credits()\n</code></pre>\n<h4>Response:</h4>\n<pre><code>{\n  'error': 0,\n  'result': 0\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6935289, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dabb30310a7db3ba7c8ab29e5e0dab47", "sha256": "55a9a1158a23c07fdbd29337dc3493901e991078eaffc351578d1f9f6a4c888c"}, "downloads": -1, "filename": "bitkub-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dabb30310a7db3ba7c8ab29e5e0dab47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 872, "upload_time": "2020-02-29T08:25:38", "upload_time_iso_8601": "2020-02-29T08:25:38.577846Z", "url": "https://files.pythonhosted.org/packages/29/e3/e389e7d964109fe665c158533e33322380faae384d9df0d25df25ee82a1a/bitkub-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8b7deb93f471ec14c460f9d15d7413d9", "sha256": "39f83bcb0cd19bf6f6ac81659beff9ae46c6d0d7a023391ff62fb730b61ca953"}, "downloads": -1, "filename": "bitkub-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8b7deb93f471ec14c460f9d15d7413d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2500, "upload_time": "2020-03-01T08:56:16", "upload_time_iso_8601": "2020-03-01T08:56:16.147627Z", "url": "https://files.pythonhosted.org/packages/68/8a/d894923c365351a51afc6920604226e36b6ee564c0966845080a4cb94245/bitkub-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "bbe10305cfa941c8172dd7b9306eb1df", "sha256": "e2551967407919c2670670e46dec595fb8424b045713064a1cd131a1a9582dcd"}, "downloads": -1, "filename": "bitkub-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bbe10305cfa941c8172dd7b9306eb1df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4453, "upload_time": "2020-03-03T15:13:09", "upload_time_iso_8601": "2020-03-03T15:13:09.676897Z", "url": "https://files.pythonhosted.org/packages/5a/67/484673e29be0a0f9368a9f689a9bb9d45477c8cdefbc68bbbefb463e97ae/bitkub-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fac92f1d46b6f4adbd1cedd609470b87", "sha256": "108a3e384fbccf98da6d3b9641a223897983435c4361e0ccc434b0dbce87664f"}, "downloads": -1, "filename": "bitkub-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fac92f1d46b6f4adbd1cedd609470b87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5737, "upload_time": "2020-03-07T08:21:33", "upload_time_iso_8601": "2020-03-07T08:21:33.349819Z", "url": "https://files.pythonhosted.org/packages/01/d5/46cb362bf7544a4fc9df478d6aba8c663634281eff709fd086080d72e158/bitkub-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "2199d60f7e2e2c20ba61b21451581147", "sha256": "cd1590c9541cb397c0ef682b1ed17bd9970678526d081103b9bf8f97fa90b042"}, "downloads": -1, "filename": "bitkub-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2199d60f7e2e2c20ba61b21451581147", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15293, "upload_time": "2020-03-14T13:53:48", "upload_time_iso_8601": "2020-03-14T13:53:48.410872Z", "url": "https://files.pythonhosted.org/packages/4a/c8/35d7df2e19b72331e942e13306bf759aa77539333a876ebb96802ad49128/bitkub-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e357a73de0f9958f6837ed44d712faa2", "sha256": "3d5c82fd88191927dc2cf5082cf988c9e6a08562e7885054118e0fcd9b090b0e"}, "downloads": -1, "filename": "bitkub-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e357a73de0f9958f6837ed44d712faa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7598, "upload_time": "2020-03-20T17:17:39", "upload_time_iso_8601": "2020-03-20T17:17:39.469861Z", "url": "https://files.pythonhosted.org/packages/a8/db/9ad7ae117e5ec5951214b0c27c2e4aa358ccc4f9bdceadf944b3bdd0bea9/bitkub-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a5924f2306f9dfa6dd97e58ef6c7ca25", "sha256": "5b1cfd95bb4224027b10ca4d158722febd06eb809744984720c63c67bc598eed"}, "downloads": -1, "filename": "bitkub-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a5924f2306f9dfa6dd97e58ef6c7ca25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11990, "upload_time": "2020-03-20T19:25:55", "upload_time_iso_8601": "2020-03-20T19:25:55.482254Z", "url": "https://files.pythonhosted.org/packages/2d/aa/6b32e819010891430f281d4125499e24a9ab56ef6e57a8f08f90b55ce2e0/bitkub-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "7aa86712c44ecf59f55095b94f15aa5a", "sha256": "c16b8949b3be6899d2f2503f37b9eb862ceeb972b0eafaa7dcd470d4ddc01bbb"}, "downloads": -1, "filename": "bitkub-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7aa86712c44ecf59f55095b94f15aa5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9605, "upload_time": "2020-04-02T12:30:56", "upload_time_iso_8601": "2020-04-02T12:30:56.640076Z", "url": "https://files.pythonhosted.org/packages/1b/ca/5558990cfa7c06fa94c7df32d2823f901d85a263e317cd2b4edc959affc5/bitkub-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92704f1892c43b846eec66a1685f10dd", "sha256": "70fcc7b0a526eb146f8f9c58ae60408f6fa29945004acd8b733b335d88a4d2c1"}, "downloads": -1, "filename": "bitkub-1.0.3.tar.gz", "has_sig": false, "md5_digest": "92704f1892c43b846eec66a1685f10dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15488, "upload_time": "2020-04-02T12:31:05", "upload_time_iso_8601": "2020-04-02T12:31:05.749012Z", "url": "https://files.pythonhosted.org/packages/13/77/512ee3f5ba7a8e40239c6e590fa516c139337f9d95978a12bf9e5c36adba/bitkub-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7aa86712c44ecf59f55095b94f15aa5a", "sha256": "c16b8949b3be6899d2f2503f37b9eb862ceeb972b0eafaa7dcd470d4ddc01bbb"}, "downloads": -1, "filename": "bitkub-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7aa86712c44ecf59f55095b94f15aa5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9605, "upload_time": "2020-04-02T12:30:56", "upload_time_iso_8601": "2020-04-02T12:30:56.640076Z", "url": "https://files.pythonhosted.org/packages/1b/ca/5558990cfa7c06fa94c7df32d2823f901d85a263e317cd2b4edc959affc5/bitkub-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92704f1892c43b846eec66a1685f10dd", "sha256": "70fcc7b0a526eb146f8f9c58ae60408f6fa29945004acd8b733b335d88a4d2c1"}, "downloads": -1, "filename": "bitkub-1.0.3.tar.gz", "has_sig": false, "md5_digest": "92704f1892c43b846eec66a1685f10dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15488, "upload_time": "2020-04-02T12:31:05", "upload_time_iso_8601": "2020-04-02T12:31:05.749012Z", "url": "https://files.pythonhosted.org/packages/13/77/512ee3f5ba7a8e40239c6e590fa516c139337f9d95978a12bf9e5c36adba/bitkub-1.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:16 2020"}