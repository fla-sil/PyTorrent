{"info": {"author": "Alisue", "author_email": "lambdalisue@hashnote.net", "bugtrack_url": null, "classifiers": [], "description": "txt2xls\n==========================\n.. image:: https://secure.travis-ci.org/lambdalisue/txt2xls.png?branch=master\n    :target: http://travis-ci.org/lambdalisue/txt2xls\n    :alt: Build status\n\n.. image:: https://coveralls.io/repos/lambdalisue/txt2xls/badge.png?branch=master\n    :target: https://coveralls.io/r/lambdalisue/txt2xls/\n    :alt: Coverage\n\n.. image:: https://pypip.in/d/txt2xls/badge.png\n    :target: https://pypi.python.org/pypi/txt2xls/\n    :alt: Downloads\n\n.. image:: https://pypip.in/v/txt2xls/badge.png\n    :target: https://pypi.python.org/pypi/txt2xls/\n    :alt: Latest version\n\n.. image:: https://pypip.in/wheel/txt2xls/badge.png\n    :target: https://pypi.python.org/pypi/txt2xls/\n    :alt: Wheel Status\n\n.. image:: https://pypip.in/egg/txt2xls/badge.png\n    :target: https://pypi.python.org/pypi/txt2xls/\n    :alt: Egg Status\n\n.. image:: https://pypip.in/license/txt2xls/badge.png\n    :target: https://pypi.python.org/pypi/txt2xls/\n    :alt: License\n\ntxt2xls convert raw text data files into a single excel file.\nIt use `maidenhair <https://github.com/lambdalisue/maidenhair>`_ for reading raw\ntext files so any kind of raw text file can be used if there is a maidenhair\nplugins.\n\nInstallation\n------------\nUse pip_ like::\n\n    $ pip install txt2xls\n\n.. _pip:  https://pypi.python.org/pypi/pip\n\nQuick Usage\n-------------\nAssume there are several raw text data files like::\n\n    # Sample1.txt\n    0 10\n    1 20\n    2 30\n    3 40\n    4 50\n    5 60\n    # Sample2.txt\n    0 15\n    1 25\n    2 35\n    3 45\n    4 55\n    5 65\n    # Sample3.txt\n    0 12\n    1 22\n    2 32\n    3 42\n    4 52\n    5 62\n\nThen run *txt2xls* with\n\n    % txt2xls -o output Sample*.txt\n\nIt will produce ``output.xls`` file.\nThe excel file have ``Sample1``, ``Sample2``, and ``Sample3`` sheets.\n\nUsage\n------\n\n::\n\n    usage: txt2xls [-h] [-v] [-p PARSER] [-l LOADER] [-u USING] [--unite]\n                [--unite-basecolumn UNITE_BASECOLUMN]\n                [--unite-function UNITE_FUNCTION] [--classify]\n                [--classify-function CLASSIFY_FUNCTION] [--relative]\n                [--relative-origin RELATIVE_ORIGIN]\n                [--relative-basecolumn RELATIVE_BASECOLUMN] [--baseline]\n                [--baseline-basecolumn BASELINE_BASECOLUMN]\n                [--baseline-function BASELINE_FUNCTION]\n                [--peakset-method {argmax,argmin}]\n                [--peakset-basecolumn PEAKSET_BASECOLUMN]\n                [--peakset-where-function PEAKSET_WHERE_FUNCTION]\n                [--raise-exception] [-o OUTFILE]\n                infiles [infiles ...]\n\n    positional arguments:\n    infiles               Path list of data files or directories which have data\n                            files.\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -v, --version         show program's version number and exit\n    --raise-exception     If it is specified, raise exceptions.\n    -o OUTFILE, --outfile OUTFILE\n                            An output filename without extensions. The required\n                            filename extension will be automatically determined\n                            from an output format.\n\n    Reading options:\n    -p PARSER, --parser PARSER\n                            A maidenhair parser name which will be used to parse\n                            the raw text data.\n    -l LOADER, --loader LOADER\n                            A maidenhair loader name which will be used to load\n                            the raw text data.\n    -u USING, --using USING\n                            A colon (:) separated column indexes. It is used for\n                            limiting the reading columns.\n\n    Unite options:\n    --unite               Join the columns of classified dataset with respecting\n                            --unite-basecolumn.The dataset is classified with\n                            --unite-function.\n    --unite-basecolumn UNITE_BASECOLUMN\n                            An index of columns which will be used as a base\n                            column for regulating data point region.\n    --unite-function UNITE_FUNCTION\n                            A python script file path or a content of python\n                            lambda expression which will be used for classifing\n                            dataset. If it is not spcified, a filename character\n                            before period (.) will be used to classify.\n\n    Classify options:\n    --classify            Classify dataset with --classify-function. It will\n                            influence the results of --relative and --baseline.\n    --classify-function CLASSIFY_FUNCTION\n                            A python script file path or a content of python\n                            lambda expression which will be used for classifing\n                            dataset. If it is not specified, a filename character\n                            before the last underscore (_) will be used to\n                            classify.\n\n    Relative options:\n    --relative            If it is True, the raw data will be converted to\n                            relative data from the specified origin, based on the\n                            specified column. See `--relative-origin` and\n                            `--relative-basecolumn` also.\n    --relative-origin RELATIVE_ORIGIN\n                            A dataset number which will be used as an orign of the\n                            relative data. It is used with `--relative` option.\n    --relative-basecolumn RELATIVE_BASECOLUMN\n                            A column number which will be used as a base column to\n                            make the data relative. It is used with `--relative`\n                            option.\n\n    Baseline options:\n    --baseline            If it is specified, the specified data file is used as\n                            a baseline of the dataset. See `--baseline-basecolumn`\n                            and `--baseline-function` also.\n    --baseline-basecolumn BASELINE_BASECOLUMN\n                            A column index which will be proceeded for baseline\n                            regulation. It is used with `--baseline` option.\n    --baseline-function BASELINE_FUNCTION\n                            A python script file path or a content of python\n                            lambda expression which will be used to determine the\n                            baseline value from the data. `columns` and `column`\n                            variables are available in the lambda expression.\n\n    Peakset options:\n    --peakset-method {argmax,argmin}\n                            A method to find peak data point.\n    --peakset-basecolumn PEAKSET_BASECOLUMN\n                            A column index which will be used for finding peak\n                            data point.\n    --peakset-where-function PEAKSET_WHERE_FUNCTION\n                            A python script file path or a content of python\n                            lambda expression which will be used to limit the\n                            range of data points for finding. peak data point.\n                            `data` is available in the lambda expression.\n\nPreference\n-----------\nYou can create configure file as ``~/.config/txt2xls/txt2xls.cfg`` (Linux),\n``~/.txt2xls.cfg`` (Mac), or ``%APPDATA%\\txt2xls\\txt2xls.cfg`` (Windows).\n\nThe default preference is equal to the configure file as below::\n\n    [default]\n    raise_exception = False\n\n    [reader]\n    parser = 'parsers.PlainParser'\n    loader = 'loaders.PlainLoader'\n    using = None\n\n        [[classify]]\n        enabled = False\n        function = 'builtin:classify_function'\n\n        [[unite]]\n        enabled = False\n        function = 'builtin:unite_function'\n        basecolumn = 0\n\n        [[relative]]\n        enabled = False\n        origin = 0\n        basecolumn = 1\n\n        [[baseline]]\n        enabled = False\n        function = 'builtin:baseline_function'\n        basecolumn = 1\n\n    [writer]\n    default_filename = 'output.xls'\n\n        [[peakset]]\n        method = 'argmax'\n        basecolumn = -1\n        where_function = 'builtin:where_function'\n\nI don't use Microsoft Windows so the location of the configure file in Windows\nmight be wrong.\nLet me know if there are any mistakes.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/lambdalisue/txt2xls/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lambdalisue/txt2xls", "keywords": "raw text data convert excel xls", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "txt2xls", "package_url": "https://pypi.org/project/txt2xls/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/txt2xls/", "project_urls": {"Download": "https://github.com/lambdalisue/txt2xls/tarball/master", "Homepage": "https://github.com/lambdalisue/txt2xls"}, "release_url": "https://pypi.org/project/txt2xls/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Convert raw text data files into a single excel file.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/lambdalisue/txt2xls\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d3660160d09358d90bc7fc9b42195e195575b57/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6c616d6264616c697375652f74787432786c732e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/lambdalisue/txt2xls/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b10094123d18febddff5e2bb4fd1e7c660931fd8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6c616d6264616c697375652f74787432786c732f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/txt2xls/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6bd1ffacc2ea47b5b60e7fab30117176ba7a3392/68747470733a2f2f70797069702e696e2f642f74787432786c732f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/txt2xls/\" rel=\"nofollow\"><img alt=\"Latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bddc0bb683a0dee3a03750e58c9559f27144285a/68747470733a2f2f70797069702e696e2f762f74787432786c732f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/txt2xls/\" rel=\"nofollow\"><img alt=\"Wheel Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56608b8dbbd1a13e0c97a0e87c95a3ef7d3229fd/68747470733a2f2f70797069702e696e2f776865656c2f74787432786c732f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/txt2xls/\" rel=\"nofollow\"><img alt=\"Egg Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/573606469bd400279d5927684a727e1f5c67b367/68747470733a2f2f70797069702e696e2f6567672f74787432786c732f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/txt2xls/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77a7576bbdb801d5434f192d94f630aa79e8a231/68747470733a2f2f70797069702e696e2f6c6963656e73652f74787432786c732f62616467652e706e67\"></a>\n<p>txt2xls convert raw text data files into a single excel file.\nIt use <a href=\"https://github.com/lambdalisue/maidenhair\" rel=\"nofollow\">maidenhair</a> for reading raw\ntext files so any kind of raw text file can be used if there is a maidenhair\nplugins.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a> like:</p>\n<pre>$ pip install txt2xls\n</pre>\n</div>\n<div id=\"quick-usage\">\n<h2>Quick Usage</h2>\n<p>Assume there are several raw text data files like:</p>\n<pre># Sample1.txt\n0 10\n1 20\n2 30\n3 40\n4 50\n5 60\n# Sample2.txt\n0 15\n1 25\n2 35\n3 45\n4 55\n5 65\n# Sample3.txt\n0 12\n1 22\n2 32\n3 42\n4 52\n5 62\n</pre>\n<p>Then run <em>txt2xls</em> with</p>\n<blockquote>\n% txt2xls -o output Sample*.txt</blockquote>\n<p>It will produce <tt>output.xls</tt> file.\nThe excel file have <tt>Sample1</tt>, <tt>Sample2</tt>, and <tt>Sample3</tt> sheets.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: txt2xls [-h] [-v] [-p PARSER] [-l LOADER] [-u USING] [--unite]\n            [--unite-basecolumn UNITE_BASECOLUMN]\n            [--unite-function UNITE_FUNCTION] [--classify]\n            [--classify-function CLASSIFY_FUNCTION] [--relative]\n            [--relative-origin RELATIVE_ORIGIN]\n            [--relative-basecolumn RELATIVE_BASECOLUMN] [--baseline]\n            [--baseline-basecolumn BASELINE_BASECOLUMN]\n            [--baseline-function BASELINE_FUNCTION]\n            [--peakset-method {argmax,argmin}]\n            [--peakset-basecolumn PEAKSET_BASECOLUMN]\n            [--peakset-where-function PEAKSET_WHERE_FUNCTION]\n            [--raise-exception] [-o OUTFILE]\n            infiles [infiles ...]\n\npositional arguments:\ninfiles               Path list of data files or directories which have data\n                        files.\n\noptional arguments:\n-h, --help            show this help message and exit\n-v, --version         show program's version number and exit\n--raise-exception     If it is specified, raise exceptions.\n-o OUTFILE, --outfile OUTFILE\n                        An output filename without extensions. The required\n                        filename extension will be automatically determined\n                        from an output format.\n\nReading options:\n-p PARSER, --parser PARSER\n                        A maidenhair parser name which will be used to parse\n                        the raw text data.\n-l LOADER, --loader LOADER\n                        A maidenhair loader name which will be used to load\n                        the raw text data.\n-u USING, --using USING\n                        A colon (:) separated column indexes. It is used for\n                        limiting the reading columns.\n\nUnite options:\n--unite               Join the columns of classified dataset with respecting\n                        --unite-basecolumn.The dataset is classified with\n                        --unite-function.\n--unite-basecolumn UNITE_BASECOLUMN\n                        An index of columns which will be used as a base\n                        column for regulating data point region.\n--unite-function UNITE_FUNCTION\n                        A python script file path or a content of python\n                        lambda expression which will be used for classifing\n                        dataset. If it is not spcified, a filename character\n                        before period (.) will be used to classify.\n\nClassify options:\n--classify            Classify dataset with --classify-function. It will\n                        influence the results of --relative and --baseline.\n--classify-function CLASSIFY_FUNCTION\n                        A python script file path or a content of python\n                        lambda expression which will be used for classifing\n                        dataset. If it is not specified, a filename character\n                        before the last underscore (_) will be used to\n                        classify.\n\nRelative options:\n--relative            If it is True, the raw data will be converted to\n                        relative data from the specified origin, based on the\n                        specified column. See `--relative-origin` and\n                        `--relative-basecolumn` also.\n--relative-origin RELATIVE_ORIGIN\n                        A dataset number which will be used as an orign of the\n                        relative data. It is used with `--relative` option.\n--relative-basecolumn RELATIVE_BASECOLUMN\n                        A column number which will be used as a base column to\n                        make the data relative. It is used with `--relative`\n                        option.\n\nBaseline options:\n--baseline            If it is specified, the specified data file is used as\n                        a baseline of the dataset. See `--baseline-basecolumn`\n                        and `--baseline-function` also.\n--baseline-basecolumn BASELINE_BASECOLUMN\n                        A column index which will be proceeded for baseline\n                        regulation. It is used with `--baseline` option.\n--baseline-function BASELINE_FUNCTION\n                        A python script file path or a content of python\n                        lambda expression which will be used to determine the\n                        baseline value from the data. `columns` and `column`\n                        variables are available in the lambda expression.\n\nPeakset options:\n--peakset-method {argmax,argmin}\n                        A method to find peak data point.\n--peakset-basecolumn PEAKSET_BASECOLUMN\n                        A column index which will be used for finding peak\n                        data point.\n--peakset-where-function PEAKSET_WHERE_FUNCTION\n                        A python script file path or a content of python\n                        lambda expression which will be used to limit the\n                        range of data points for finding. peak data point.\n                        `data` is available in the lambda expression.\n</pre>\n</div>\n<div id=\"preference\">\n<h2>Preference</h2>\n<p>You can create configure file as <tt><span class=\"pre\">~/.config/txt2xls/txt2xls.cfg</span></tt> (Linux),\n<tt><span class=\"pre\">~/.txt2xls.cfg</span></tt> (Mac), or <tt><span class=\"pre\">%APPDATA%\\txt2xls\\txt2xls.cfg</span></tt> (Windows).</p>\n<p>The default preference is equal to the configure file as below:</p>\n<pre>[default]\nraise_exception = False\n\n[reader]\nparser = 'parsers.PlainParser'\nloader = 'loaders.PlainLoader'\nusing = None\n\n    [[classify]]\n    enabled = False\n    function = 'builtin:classify_function'\n\n    [[unite]]\n    enabled = False\n    function = 'builtin:unite_function'\n    basecolumn = 0\n\n    [[relative]]\n    enabled = False\n    origin = 0\n    basecolumn = 1\n\n    [[baseline]]\n    enabled = False\n    function = 'builtin:baseline_function'\n    basecolumn = 1\n\n[writer]\ndefault_filename = 'output.xls'\n\n    [[peakset]]\n    method = 'argmax'\n    basecolumn = -1\n    where_function = 'builtin:where_function'\n</pre>\n<p>I don\u2019t use Microsoft Windows so the location of the configure file in Windows\nmight be wrong.\nLet me know if there are any mistakes.</p>\n</div>\n\n          </div>"}, "last_serial": 1004559, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ec1a6a4d68195214bf905e049cb22d20", "sha256": "df4d75e04e45c9280ebda4599127d277ea3d4b5d7d7833ba3ffca0a48b998c07"}, "downloads": -1, "filename": "txt2xls-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ec1a6a4d68195214bf905e049cb22d20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8964, "upload_time": "2014-02-01T17:08:48", "upload_time_iso_8601": "2014-02-01T17:08:48.798405Z", "url": "https://files.pythonhosted.org/packages/c3/f2/41b1c61525ed73463d4a388ca67636c9dc73ee3b792272564a029ad85e7e/txt2xls-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "81f380d08fae185c80efef6e77fbaf4c", "sha256": "67b1c390bcb030c4038770750290d725f80b3522d5ff95a2828d7f545c404114"}, "downloads": -1, "filename": "txt2xls-0.1.1.tar.gz", "has_sig": false, "md5_digest": "81f380d08fae185c80efef6e77fbaf4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9509, "upload_time": "2014-02-06T04:14:39", "upload_time_iso_8601": "2014-02-06T04:14:39.505318Z", "url": "https://files.pythonhosted.org/packages/f7/fb/6d9755458d4275936d5c4eeba23b9f1bcc6bcb3409e2fab717d9b800784d/txt2xls-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1bfced5ca85b4dbc3bdedb37a46a4b14", "sha256": "0e1c76e549bfd9ada47c2e390803b5f5770351b97fc26c3adbb9cd068a522247"}, "downloads": -1, "filename": "txt2xls-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1bfced5ca85b4dbc3bdedb37a46a4b14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15508, "upload_time": "2014-02-06T20:04:35", "upload_time_iso_8601": "2014-02-06T20:04:35.704835Z", "url": "https://files.pythonhosted.org/packages/0c/e8/16fd1285bb84a7e8d7ad7f0dd3bfe57b16dc5ae07ed4d2f2658ea360c724/txt2xls-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "952e6b4a75e044cbe26d211f76fa778e", "sha256": "9517aa5c24f53dcb698c5f61cb43e153fbed661ad5177d3797cba38dd9a35837"}, "downloads": -1, "filename": "txt2xls-0.2.1.tar.gz", "has_sig": false, "md5_digest": "952e6b4a75e044cbe26d211f76fa778e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14879, "upload_time": "2014-02-18T03:04:06", "upload_time_iso_8601": "2014-02-18T03:04:06.626762Z", "url": "https://files.pythonhosted.org/packages/0e/ee/785060536156ce74eb07849a4135c25967b9d05c7d9cb634e47e7eaeed01/txt2xls-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "bc4f5e71364bfc5754ff8941cb6b4be8", "sha256": "540925d69432b5bdd4bd6fe954948a4799a99c07d708b84c4fa4b7b2968e4b08"}, "downloads": -1, "filename": "txt2xls-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bc4f5e71364bfc5754ff8941cb6b4be8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14888, "upload_time": "2014-02-19T06:31:08", "upload_time_iso_8601": "2014-02-19T06:31:08.903709Z", "url": "https://files.pythonhosted.org/packages/92/d9/e014899397f0259595a760a5acb4b1164ecd0599f9a63fe1a5f4d5c744e6/txt2xls-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc4f5e71364bfc5754ff8941cb6b4be8", "sha256": "540925d69432b5bdd4bd6fe954948a4799a99c07d708b84c4fa4b7b2968e4b08"}, "downloads": -1, "filename": "txt2xls-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bc4f5e71364bfc5754ff8941cb6b4be8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14888, "upload_time": "2014-02-19T06:31:08", "upload_time_iso_8601": "2014-02-19T06:31:08.903709Z", "url": "https://files.pythonhosted.org/packages/92/d9/e014899397f0259595a760a5acb4b1164ecd0599f9a63fe1a5f4d5c744e6/txt2xls-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:05 2020"}