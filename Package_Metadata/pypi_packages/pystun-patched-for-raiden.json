{"info": {"author": "Justin Riley (original author: gaohawk)", "author_email": "justin.t.riley@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Internet", "Topic :: System :: Networking :: Firewalls"], "description": ".. image:: https://travis-ci.org/jtriley/pystun.svg?branch=master\n    :target: https://travis-ci.org/jtriley/pystun\n\n.. image:: https://coveralls.io/repos/jtriley/pystun/badge.png\n   :target: https://coveralls.io/r/jtriley/pystun\n\n\nPyStun\n======\nA Python STUN client for getting NAT type and external IP\n\nThis is a fork of pystun originally created by gaohawk (http://code.google.com/p/pystun/)\n\nPyStun follows RFC 3489: http://www.ietf.org/rfc/rfc3489.txt\n\nA server following STUN-bis hasn't been found on internet so RFC3489 is the\nonly implementation.\n\nInstallation\n------------\nTo install the latest version::\n\n    $ pip install pystun\n\nor download/clone the source and install manually using::\n\n    $ cd /path/to/pystun/src\n    $ python setup.py install\n\nIf you're hacking on pystun you should use the 'develop' command instead::\n\n    $ python setup.py develop\n\nThis will make a link to the sources inside your site-packages directory so\nthat any changes are immediately available for testing.\n\nUsage\n-----\nFrom command line::\n\n    $ pystun\n    NAT Type: Full Cone\n    External IP: <your-ip-here>\n    External Port: 54320\n\nPass --help for more options::\n\n    % pystun --help\n    usage: pystun [-h] [-d] [-H STUN_HOST] [-P STUN_PORT] [-i SOURCE_IP]\n                  [-p SOURCE_PORT] [--version]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d, --debug           Enable debug logging (default: False)\n      -H STUN_HOST, --host STUN_HOST\n                            STUN host to use (default: None)\n      -P STUN_PORT, --host-port STUN_PORT\n                            STUN host port to use (default: 3478)\n      -i SOURCE_IP, --interface SOURCE_IP\n                            network interface for client (default: 0.0.0.0)\n      -p SOURCE_PORT, --port SOURCE_PORT\n                            port to listen on for client (default: 54320)\n      --version             show program's version number and exit\n\nFrom Python::\n\n    import stun\n    nat_type, external_ip, external_port = stun.get_ip_info()\n\nThis will rotate through an internal list of STUN servers until a response is\nfound. If no response is found you will get \"Blocked\" as the *nat_type* and\n**None** for *external_ip* and *external_port*.\n\nIf you prefer to use a specific STUN server::\n\n    nat_type, external_ip, external_port = stun.get_ip_info(stun_host='stun.ekiga.net')\n\nIf you prefer to use a specific STUN server port::\n\n    nat_type, external_ip, external_port = stun.get_ip_info(stun_port=3478)\n\nYou may also specify the client interface and port that is used although this\nis not needed::\n\n    sip = \"0.0.0.0\" # interface to listen on (all)\n    port = 54320 # port to listen on\n    nat_type, external_ip, external_port = stun.get_ip_info(sip, port)\n\nRead the code for more details...\n\nLICENSE\n-------\nMIT\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/lefterisjp/pystun", "keywords": "STUN NAT", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pystun-patched-for-raiden", "package_url": "https://pypi.org/project/pystun-patched-for-raiden/", "platform": "", "project_url": "https://pypi.org/project/pystun-patched-for-raiden/", "project_urls": {"Homepage": "http://github.com/lefterisjp/pystun"}, "release_url": "https://pypi.org/project/pystun-patched-for-raiden/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Python STUN client for getting NAT type and external IP (RFC 3489)", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jtriley/pystun\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jtriley/pystun.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fdd68da30e91edff69107c7f15ebbf98c429cd9/68747470733a2f2f7472617669732d63692e6f72672f6a7472696c65792f70797374756e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/jtriley/pystun\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/jtriley/pystun/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/162719c0ef93b957aa003fa11c12e8b6da1ff8ae/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a7472696c65792f70797374756e2f62616467652e706e67\"></a>\n<div id=\"pystun\">\n<h2>PyStun</h2>\n<p>A Python STUN client for getting NAT type and external IP</p>\n<p>This is a fork of pystun originally created by gaohawk (<a href=\"http://code.google.com/p/pystun/\" rel=\"nofollow\">http://code.google.com/p/pystun/</a>)</p>\n<p>PyStun follows RFC 3489: <a href=\"http://www.ietf.org/rfc/rfc3489.txt\" rel=\"nofollow\">http://www.ietf.org/rfc/rfc3489.txt</a></p>\n<p>A server following STUN-bis hasn\u2019t been found on internet so RFC3489 is the\nonly implementation.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install the latest version:</p>\n<pre>$ pip install pystun\n</pre>\n<p>or download/clone the source and install manually using:</p>\n<pre>$ cd /path/to/pystun/src\n$ python setup.py install\n</pre>\n<p>If you\u2019re hacking on pystun you should use the \u2018develop\u2019 command instead:</p>\n<pre>$ python setup.py develop\n</pre>\n<p>This will make a link to the sources inside your site-packages directory so\nthat any changes are immediately available for testing.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>From command line:</p>\n<pre>$ pystun\nNAT Type: Full Cone\nExternal IP: &lt;your-ip-here&gt;\nExternal Port: 54320\n</pre>\n<p>Pass \u2013help for more options:</p>\n<pre>% pystun --help\nusage: pystun [-h] [-d] [-H STUN_HOST] [-P STUN_PORT] [-i SOURCE_IP]\n              [-p SOURCE_PORT] [--version]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --debug           Enable debug logging (default: False)\n  -H STUN_HOST, --host STUN_HOST\n                        STUN host to use (default: None)\n  -P STUN_PORT, --host-port STUN_PORT\n                        STUN host port to use (default: 3478)\n  -i SOURCE_IP, --interface SOURCE_IP\n                        network interface for client (default: 0.0.0.0)\n  -p SOURCE_PORT, --port SOURCE_PORT\n                        port to listen on for client (default: 54320)\n  --version             show program's version number and exit\n</pre>\n<p>From Python:</p>\n<pre>import stun\nnat_type, external_ip, external_port = stun.get_ip_info()\n</pre>\n<p>This will rotate through an internal list of STUN servers until a response is\nfound. If no response is found you will get \u201cBlocked\u201d as the <em>nat_type</em> and\n<strong>None</strong> for <em>external_ip</em> and <em>external_port</em>.</p>\n<p>If you prefer to use a specific STUN server:</p>\n<pre>nat_type, external_ip, external_port = stun.get_ip_info(stun_host='stun.ekiga.net')\n</pre>\n<p>If you prefer to use a specific STUN server port:</p>\n<pre>nat_type, external_ip, external_port = stun.get_ip_info(stun_port=3478)\n</pre>\n<p>You may also specify the client interface and port that is used although this\nis not needed:</p>\n<pre>sip = \"0.0.0.0\" # interface to listen on (all)\nport = 54320 # port to listen on\nnat_type, external_ip, external_port = stun.get_ip_info(sip, port)\n</pre>\n<p>Read the code for more details\u2026</p>\n</div>\n<div id=\"license\">\n<h3>LICENSE</h3>\n<p>MIT</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4268755, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1c559c124e7e88b283ac9ffe3356a593", "sha256": "4be94bd2eff669ddea33173254dcefbd2491c90543ef2d45a8406bdd5c1df29e"}, "downloads": -1, "filename": "pystun-patched-for-raiden-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c559c124e7e88b283ac9ffe3356a593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5931, "upload_time": "2018-09-13T13:31:25", "upload_time_iso_8601": "2018-09-13T13:31:25.323523Z", "url": "https://files.pythonhosted.org/packages/3f/ed/b41d559e1c44bc98164f0501405bb6fd4567e55fadbe2ae15125fd2aca42/pystun-patched-for-raiden-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c559c124e7e88b283ac9ffe3356a593", "sha256": "4be94bd2eff669ddea33173254dcefbd2491c90543ef2d45a8406bdd5c1df29e"}, "downloads": -1, "filename": "pystun-patched-for-raiden-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c559c124e7e88b283ac9ffe3356a593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5931, "upload_time": "2018-09-13T13:31:25", "upload_time_iso_8601": "2018-09-13T13:31:25.323523Z", "url": "https://files.pythonhosted.org/packages/3f/ed/b41d559e1c44bc98164f0501405bb6fd4567e55fadbe2ae15125fd2aca42/pystun-patched-for-raiden-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:52 2020"}