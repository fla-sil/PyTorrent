{"info": {"author": "HaiFeng", "author_email": "haifengat@vip.qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# py_ctp\n\nctp risk api for python\u3002\u652f\u6301windows(x86/x64) linux(x64).\n\n#### \u793a\u4f8b\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\n__title__ = ''\n__author__ = 'HaiFeng'\n__mtime__ = '201/9/13'\n\"\"\"\nimport os\nimport platform\nimport signal\nimport sys\nimport threading\nimport time\n\nfrom ctp_risk.ctp_struct import CShfeFtdcRspRiskUserLoginField, CShfeFtdcRspInfoField, CShfeFtdcSequencialTradeField, CShfeFtdcInstrumentField, CShfeFtdcExchangeField\nfrom ctp_risk.ctp_trade import Trade\n\n\nclass Test:\n\n    def __init__(self, addr, out_path, interval_seconds, user, pwd, broker='6000'):\n        dllpath = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'ctp_risk', f\"lib{'64' if sys.maxsize > 2**32 else '32'}\")\n        # dllpath = os.path.dirname(os.path.abspath(__file__))  # \u6240\u6709dll\u653e\u5728\u7a0b\u5e8f\u76ee\u5f55\u4e0b\n        # self.q = Quote(os.path.join(dllpath, 'ctp_quote.' + ('dll' if 'Windows' in platform.system() else 'so')))\n        self.t = Trade(os.path.join(dllpath, 'riskapi.' + ('dll' if 'Windows' in platform.system() else 'so')))\n        self.req = 0\n        self.logined = False\n        self.instruments: dict = {}\n        self.exc_total: dict = {}\n        '''\u4fdd\u5b58\u4ea4\u6613\u6240\u7edf\u8ba1\u6570\u636e'''\n        self.frontAddr = addr\n        self.broker = broker\n        self.investor = user\n        self.pwd = pwd\n        self.interval_seconds = int(interval_seconds)\n        self.out_path = out_path\n        signal.signal(signal.SIGINT, self.single_exit)  # ctrl c\n        # signal.signal(signal.SIGTSTP, self.single_exit)  # ctrl z\n\n    def single_exit(self, signal, frame):\n        self.t.Release()\n        time.sleep(1)\n        sys.exit(0)\n\n    def OnConnected(self):\n        print('connected')\n        threading.Thread(target=self.t.ReqRiskUserLogin, args=(self.broker, self.investor, self.pwd)).start()\n\n    def OnDisconnected(self, reason):\n        print(reason)\n        self.logined = False\n\n    def OnRspUserLogin(self, pRspRiskUserLogin: CShfeFtdcRspRiskUserLoginField, pRspInfo: CShfeFtdcRspInfoField, nRequestID: int, bIsLast: bool):\n        print(f'== login == {pRspInfo.__dict__}')\n\n        if pRspInfo.getErrorID() == 0:\n            self.logined = True\n            t = threading.Thread(target=self.show)\n            t.setDaemon(True)\n            t.start()\n            self.t.ReqSubscribeTrade()\n\n    def OnInstrument(self, inst: CShfeFtdcInstrumentField):\n        self.instruments[inst.getInstrumentID()] = inst\n\n    def OnExchange(self, exc: CShfeFtdcExchangeField):\n        self.exc_total[exc.getExchangeID()] = {'volume': 0, 'turnover': 0}\n\n    def OnTrade(self, pSequencialTrade: CShfeFtdcSequencialTradeField):\n        # print(f'== trade == {pSequencialTrade.__dict__}')\n        inst: CShfeFtdcInstrumentField = self.instruments[pSequencialTrade.getInstrumentID()]\n        self.exc_total[pSequencialTrade.getExchangeID()]['volume'] += pSequencialTrade.getVolume()\n        self.exc_total[pSequencialTrade.getExchangeID()]['turnover'] += pSequencialTrade.getPrice() * pSequencialTrade.getVolume() * inst.getVolumeMultiple()\n\n    def show(self):\n        while self.logined:\n            # print(self.exc_total)\n            with open(os.path.join(self.out_path, 'total.txt'), 'w', encoding='utf-8') as f:\n                line = ''\n                for k, v in self.exc_total.items():\n                    line += f\"{k},{v['volume']},{v['turnover']}\\n\"\n                f.write(line)\n            time.sleep(self.interval_seconds)\n\n    def Run(self):\n        # CreateApi\u65f6\u4f1a\u7528\u5230log\u76ee\u5f55,\u9700\u8981\u5728\u7a0b\u5e8f\u76ee\u5f55\u4e0b\u521b\u5efa**\u800c\u975edll\u4e0b**\n        self.t.CreateApi()\n        spi = self.t.CreateSpi()\n        self.t.RegisterSpi(spi)\n\n        self.t.OnFrontConnected = self.OnConnected\n        # self.t.OnFrontDisconnected = self.OnDisconnected\n        # self.t.OnRspRiskUserLogin = self.OnRspUserLogin\n        #\n        # self.t.OnRtnSequencialTrade = self.OnTrade\n        # '''\u6210\u4ea4\u4fe1\u606f'''\n        #\n        # # \u4ee5\u4e0b\u4e3a\u81ea\u52a8\u63a8\u9001\u7684\u54cd\u5e94\n        # self.t.OnRtnInstrument = self.OnInstrument\n        # self.t.OnRtnExchange = self.OnExchange\n        # self.t.OnRtnProduct = lambda x: None\n        # '''\u4ea4\u6613\u6240'''\n        # self.t.OnRtnTradingCode = lambda x: None\n        # '''\u4ea4\u6613\u7f16\u7801\u56de\u62a5'''\n        # self.t.OnRtnRiskSyncAccount = lambda x: None\n        # '''\u5e10\u6237\u4fe1\u606f'''\n        # self.t.OnRtnTimeSync = lambda x: None\n        # '''\u670d\u52a1\u5668\u65f6\u95f4'''\n        # self.t.OnRtnRiskDepthMarketData = lambda x: None\n        # '''\u5b9e\u65f6\u884c\u60c5'''\n        # self.t.OnRtnDepartment = lambda x: None\n        # '''\u90e8\u95e8'''\n        # self.t.OnRtnInvestorSumInfo = lambda x: None\n        # '''\u6295\u8d44\u8005\u603b\u6570'''\n        # self.t.OnRtnNoticeToken = lambda x: None\n        # '''\u6a21\u677f\u66ff\u6362\u5b57\u6bb5\u56de\u62a5'''\n        # self.t.OnRtnNoticePattern = lambda x: None\n        # '''\u901a\u77e5\u6a21\u677f\u56de\u62a5'''\n        # self.t.OnRtnRiskParamInfo = lambda x: None\n        # '''\u98ce\u63a7\u53c2\u6570\u4fe1\u606f\u56de\u62a5'''\n        # self.t.OnRtnRiskInvestorParam = lambda x: None\n        # '''\u6295\u8d44\u8005\u53c2\u6570\u56de\u62a5'''\n        # self.t.OnRtnInvestorPattern = lambda x: None\n        # '''\u6295\u8d44\u8005\u901a\u77e5\u6a21\u677f\u56de\u62a5'''\n        # self.t.OnRtnRiskNotifyToken = lambda x: None\n        # '''\u98ce\u9669\u901a\u77e5\u6a21\u677f\u81ea\u52a8\u66ff\u6362\u5b57\u6bb5\u56de\u62a5'''\n        # self.t.OnRtnClientSGDataSyncStart = lambda x: None\n        # '''\u5ba2\u6237\u7aef\u7ed3\u7b97\u7ec4\u6570\u636e\u540c\u6b65\u5f00\u59cb'''\n        # self.t.OnRtnClientSGDataSyncEnd = lambda x: None\n        # '''\u5ba2\u6237\u7aef\u7ed3\u7b97\u7ec4\u6570\u636e\u540c\u6b65\u7ed3\u675f'''\n        # self.t.OnRtnRiskPattern = lambda x: None\n        # '''\u98ce\u63a7\u901a\u77e5\u6a21\u677f\u56de\u62a5'''\n        # self.t.OnRtnTradeParam = lambda x: None\n        # '''\u4ea4\u6613\u7cfb\u7edf\u53c2\u6570'''\n        # self.t.OnRtnProductExchangeRate = lambda x: None\n        # '''\u4ea7\u54c1\u62a5\u4ef7\u6c47\u7387\u4fe1\u606f'''\n        # self.t.OnRtnRiskUserFunction = lambda x: None  # print(x)\n        # '''\u98ce\u63a7\u7528\u6237\u6743\u9650\u56de\u62a5'''\n\n        self.t.RegCB()\n\n        self.t.RegisterFront(self.frontAddr)\n        self.t.Init()\n        # self.t.Join()\n        time.sleep(5)\n\n\nif __name__ == '__main__':\n    # path = os.path.dirname(os.path.abspath(__file__))\n    # shutil.copy(path + '/dll/ctp_trade.dll', path + '/py_ctp/lib/ctp_trade.dll')\n\n    a = sys.argv[1] if len(sys.argv) > 1 else 'tcp://222.68.181.130:50001'\n    o = sys.argv[2] if len(sys.argv) > 2 else './'\n    s = sys.argv[3] if len(sys.argv) > 3 else 10\n    user = 'your investorid'\n    pwd = 'your password'\n    t = Test(addr=a, out_path=o, interval_seconds=s, user=user, pwd=pwd)\n    t.Run()\n    print('presess ctrl+c to exit')\n    while True:\n        pass\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitee.com/haifengat/ctp_risk_api.git", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "ctp-risk", "package_url": "https://pypi.org/project/ctp-risk/", "platform": "any", "project_url": "https://pypi.org/project/ctp-risk/", "project_urls": {"Homepage": "https://gitee.com/haifengat/ctp_risk_api.git"}, "release_url": "https://pypi.org/project/ctp-risk/0.0.8.1/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Python CTP Risk api", "version": "0.0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py_ctp</h1>\n<p>ctp risk api for python\u3002\u652f\u6301windows(x86/x64) linux(x64).</p>\n<h4>\u793a\u4f8b</h4>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">__title__ = ''</span>\n<span class=\"sd\">__author__ = 'HaiFeng'</span>\n<span class=\"sd\">__mtime__ = '201/9/13'</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">platform</span>\n<span class=\"kn\">import</span> <span class=\"nn\">signal</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">threading</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ctp_risk.ctp_struct</span> <span class=\"kn\">import</span> <span class=\"n\">CShfeFtdcRspRiskUserLoginField</span><span class=\"p\">,</span> <span class=\"n\">CShfeFtdcRspInfoField</span><span class=\"p\">,</span> <span class=\"n\">CShfeFtdcSequencialTradeField</span><span class=\"p\">,</span> <span class=\"n\">CShfeFtdcInstrumentField</span><span class=\"p\">,</span> <span class=\"n\">CShfeFtdcExchangeField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ctp_risk.ctp_trade</span> <span class=\"kn\">import</span> <span class=\"n\">Trade</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Test</span><span class=\"p\">:</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"p\">,</span> <span class=\"n\">interval_seconds</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"p\">,</span> <span class=\"n\">broker</span><span class=\"o\">=</span><span class=\"s1\">'6000'</span><span class=\"p\">):</span>\n        <span class=\"n\">dllpath</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span> <span class=\"s1\">'ctp_risk'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"lib</span><span class=\"si\">{</span><span class=\"s1\">'64'</span> <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">maxsize</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">32</span> <span class=\"k\">else</span> <span class=\"s1\">'32'</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n        <span class=\"c1\"># dllpath = os.path.dirname(os.path.abspath(__file__))  # \u6240\u6709dll\u653e\u5728\u7a0b\u5e8f\u76ee\u5f55\u4e0b</span>\n        <span class=\"c1\"># self.q = Quote(os.path.join(dllpath, 'ctp_quote.' + ('dll' if 'Windows' in platform.system() else 'so')))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Trade</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dllpath</span><span class=\"p\">,</span> <span class=\"s1\">'riskapi.'</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s1\">'dll'</span> <span class=\"k\">if</span> <span class=\"s1\">'Windows'</span> <span class=\"ow\">in</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"s1\">'so'</span><span class=\"p\">)))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logined</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instruments</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exc_total</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"sd\">'''\u4fdd\u5b58\u4ea4\u6613\u6240\u7edf\u8ba1\u6570\u636e'''</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frontAddr</span> <span class=\"o\">=</span> <span class=\"n\">addr</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">broker</span> <span class=\"o\">=</span> <span class=\"n\">broker</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">investor</span> <span class=\"o\">=</span> <span class=\"n\">user</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pwd</span> <span class=\"o\">=</span> <span class=\"n\">pwd</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">interval_seconds</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">interval_seconds</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">out_path</span> <span class=\"o\">=</span> <span class=\"n\">out_path</span>\n        <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">SIGINT</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">single_exit</span><span class=\"p\">)</span>  <span class=\"c1\"># ctrl c</span>\n        <span class=\"c1\"># signal.signal(signal.SIGTSTP, self.single_exit)  # ctrl z</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">single_exit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Release</span><span class=\"p\">()</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">OnConnected</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'connected'</span><span class=\"p\">)</span>\n        <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">ReqRiskUserLogin</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">broker</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">investor</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pwd</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">OnDisconnected</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">reason</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reason</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logined</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">OnRspUserLogin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pRspRiskUserLogin</span><span class=\"p\">:</span> <span class=\"n\">CShfeFtdcRspRiskUserLoginField</span><span class=\"p\">,</span> <span class=\"n\">pRspInfo</span><span class=\"p\">:</span> <span class=\"n\">CShfeFtdcRspInfoField</span><span class=\"p\">,</span> <span class=\"n\">nRequestID</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">bIsLast</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'== login == </span><span class=\"si\">{</span><span class=\"n\">pRspInfo</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">pRspInfo</span><span class=\"o\">.</span><span class=\"n\">getErrorID</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logined</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">)</span>\n            <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">setDaemon</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">ReqSubscribeTrade</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">OnInstrument</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inst</span><span class=\"p\">:</span> <span class=\"n\">CShfeFtdcInstrumentField</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instruments</span><span class=\"p\">[</span><span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">getInstrumentID</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">inst</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">OnExchange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exc</span><span class=\"p\">:</span> <span class=\"n\">CShfeFtdcExchangeField</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exc_total</span><span class=\"p\">[</span><span class=\"n\">exc</span><span class=\"o\">.</span><span class=\"n\">getExchangeID</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'volume'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'turnover'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">OnTrade</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pSequencialTrade</span><span class=\"p\">:</span> <span class=\"n\">CShfeFtdcSequencialTradeField</span><span class=\"p\">):</span>\n        <span class=\"c1\"># print(f'== trade == {pSequencialTrade.__dict__}')</span>\n        <span class=\"n\">inst</span><span class=\"p\">:</span> <span class=\"n\">CShfeFtdcInstrumentField</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instruments</span><span class=\"p\">[</span><span class=\"n\">pSequencialTrade</span><span class=\"o\">.</span><span class=\"n\">getInstrumentID</span><span class=\"p\">()]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exc_total</span><span class=\"p\">[</span><span class=\"n\">pSequencialTrade</span><span class=\"o\">.</span><span class=\"n\">getExchangeID</span><span class=\"p\">()][</span><span class=\"s1\">'volume'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">pSequencialTrade</span><span class=\"o\">.</span><span class=\"n\">getVolume</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exc_total</span><span class=\"p\">[</span><span class=\"n\">pSequencialTrade</span><span class=\"o\">.</span><span class=\"n\">getExchangeID</span><span class=\"p\">()][</span><span class=\"s1\">'turnover'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">pSequencialTrade</span><span class=\"o\">.</span><span class=\"n\">getPrice</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"n\">pSequencialTrade</span><span class=\"o\">.</span><span class=\"n\">getVolume</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">getVolumeMultiple</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">show</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">while</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logined</span><span class=\"p\">:</span>\n            <span class=\"c1\"># print(self.exc_total)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">out_path</span><span class=\"p\">,</span> <span class=\"s1\">'total.txt'</span><span class=\"p\">),</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n                <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exc_total</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                    <span class=\"n\">line</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">k</span><span class=\"si\">}</span><span class=\"s2\">,</span><span class=\"si\">{</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"s1\">'volume'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">,</span><span class=\"si\">{</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"s1\">'turnover'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">interval_seconds</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># CreateApi\u65f6\u4f1a\u7528\u5230log\u76ee\u5f55,\u9700\u8981\u5728\u7a0b\u5e8f\u76ee\u5f55\u4e0b\u521b\u5efa**\u800c\u975edll\u4e0b**</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">CreateApi</span><span class=\"p\">()</span>\n        <span class=\"n\">spi</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">CreateSpi</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">RegisterSpi</span><span class=\"p\">(</span><span class=\"n\">spi</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">OnFrontConnected</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">OnConnected</span>\n        <span class=\"c1\"># self.t.OnFrontDisconnected = self.OnDisconnected</span>\n        <span class=\"c1\"># self.t.OnRspRiskUserLogin = self.OnRspUserLogin</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># self.t.OnRtnSequencialTrade = self.OnTrade</span>\n        <span class=\"c1\"># '''\u6210\u4ea4\u4fe1\u606f'''</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># # \u4ee5\u4e0b\u4e3a\u81ea\u52a8\u63a8\u9001\u7684\u54cd\u5e94</span>\n        <span class=\"c1\"># self.t.OnRtnInstrument = self.OnInstrument</span>\n        <span class=\"c1\"># self.t.OnRtnExchange = self.OnExchange</span>\n        <span class=\"c1\"># self.t.OnRtnProduct = lambda x: None</span>\n        <span class=\"c1\"># '''\u4ea4\u6613\u6240'''</span>\n        <span class=\"c1\"># self.t.OnRtnTradingCode = lambda x: None</span>\n        <span class=\"c1\"># '''\u4ea4\u6613\u7f16\u7801\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskSyncAccount = lambda x: None</span>\n        <span class=\"c1\"># '''\u5e10\u6237\u4fe1\u606f'''</span>\n        <span class=\"c1\"># self.t.OnRtnTimeSync = lambda x: None</span>\n        <span class=\"c1\"># '''\u670d\u52a1\u5668\u65f6\u95f4'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskDepthMarketData = lambda x: None</span>\n        <span class=\"c1\"># '''\u5b9e\u65f6\u884c\u60c5'''</span>\n        <span class=\"c1\"># self.t.OnRtnDepartment = lambda x: None</span>\n        <span class=\"c1\"># '''\u90e8\u95e8'''</span>\n        <span class=\"c1\"># self.t.OnRtnInvestorSumInfo = lambda x: None</span>\n        <span class=\"c1\"># '''\u6295\u8d44\u8005\u603b\u6570'''</span>\n        <span class=\"c1\"># self.t.OnRtnNoticeToken = lambda x: None</span>\n        <span class=\"c1\"># '''\u6a21\u677f\u66ff\u6362\u5b57\u6bb5\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnNoticePattern = lambda x: None</span>\n        <span class=\"c1\"># '''\u901a\u77e5\u6a21\u677f\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskParamInfo = lambda x: None</span>\n        <span class=\"c1\"># '''\u98ce\u63a7\u53c2\u6570\u4fe1\u606f\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskInvestorParam = lambda x: None</span>\n        <span class=\"c1\"># '''\u6295\u8d44\u8005\u53c2\u6570\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnInvestorPattern = lambda x: None</span>\n        <span class=\"c1\"># '''\u6295\u8d44\u8005\u901a\u77e5\u6a21\u677f\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskNotifyToken = lambda x: None</span>\n        <span class=\"c1\"># '''\u98ce\u9669\u901a\u77e5\u6a21\u677f\u81ea\u52a8\u66ff\u6362\u5b57\u6bb5\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnClientSGDataSyncStart = lambda x: None</span>\n        <span class=\"c1\"># '''\u5ba2\u6237\u7aef\u7ed3\u7b97\u7ec4\u6570\u636e\u540c\u6b65\u5f00\u59cb'''</span>\n        <span class=\"c1\"># self.t.OnRtnClientSGDataSyncEnd = lambda x: None</span>\n        <span class=\"c1\"># '''\u5ba2\u6237\u7aef\u7ed3\u7b97\u7ec4\u6570\u636e\u540c\u6b65\u7ed3\u675f'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskPattern = lambda x: None</span>\n        <span class=\"c1\"># '''\u98ce\u63a7\u901a\u77e5\u6a21\u677f\u56de\u62a5'''</span>\n        <span class=\"c1\"># self.t.OnRtnTradeParam = lambda x: None</span>\n        <span class=\"c1\"># '''\u4ea4\u6613\u7cfb\u7edf\u53c2\u6570'''</span>\n        <span class=\"c1\"># self.t.OnRtnProductExchangeRate = lambda x: None</span>\n        <span class=\"c1\"># '''\u4ea7\u54c1\u62a5\u4ef7\u6c47\u7387\u4fe1\u606f'''</span>\n        <span class=\"c1\"># self.t.OnRtnRiskUserFunction = lambda x: None  # print(x)</span>\n        <span class=\"c1\"># '''\u98ce\u63a7\u7528\u6237\u6743\u9650\u56de\u62a5'''</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">RegCB</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">RegisterFront</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frontAddr</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Init</span><span class=\"p\">()</span>\n        <span class=\"c1\"># self.t.Join()</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"c1\"># path = os.path.dirname(os.path.abspath(__file__))</span>\n    <span class=\"c1\"># shutil.copy(path + '/dll/ctp_trade.dll', path + '/py_ctp/lib/ctp_trade.dll')</span>\n\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"s1\">'tcp://222.68.181.130:50001'</span>\n    <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"k\">else</span> <span class=\"s1\">'./'</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span> <span class=\"k\">else</span> <span class=\"mi\">10</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s1\">'your investorid'</span>\n    <span class=\"n\">pwd</span> <span class=\"o\">=</span> <span class=\"s1\">'your password'</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Test</span><span class=\"p\">(</span><span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"n\">o</span><span class=\"p\">,</span> <span class=\"n\">interval_seconds</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"o\">=</span><span class=\"n\">pwd</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'presess ctrl+c to exit'</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 7125970, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "60e878ae47533352d6bcdd08efa7273b", "sha256": "0ce3bd2cb5b21ca83a1801bf62c81e8aa17aeda71ac7f87a63808be697ffec5d"}, "downloads": -1, "filename": "ctp_risk-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "60e878ae47533352d6bcdd08efa7273b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 123639, "upload_time": "2020-04-26T07:34:33", "upload_time_iso_8601": "2020-04-26T07:34:33.670597Z", "url": "https://files.pythonhosted.org/packages/94/11/8c00debf3bd5b61934fa3649d23d246a1099e5f052c9bb4074393c34d60b/ctp_risk-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e791112f6580223be86aa355fbc75e11", "sha256": "c8520c13352a3bcd2f8b52ddcd4f9ee8d188b21641fac69ee05c38f3d28eed0f"}, "downloads": -1, "filename": "ctp_risk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e791112f6580223be86aa355fbc75e11", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 124623, "upload_time": "2020-04-26T07:34:36", "upload_time_iso_8601": "2020-04-26T07:34:36.432562Z", "url": "https://files.pythonhosted.org/packages/41/44/c6b46c1276be382eba2fbf76b419404e36d28e645984d09922ea79396992/ctp_risk-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fc0be292b6e48079a1d1bcae0180f477", "sha256": "f8c61dfaebf29cbdb13b96c22789084519e2d5f1c1ff13430d863b6167a7fff3"}, "downloads": -1, "filename": "ctp_risk-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fc0be292b6e48079a1d1bcae0180f477", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 933164, "upload_time": "2020-04-26T07:57:58", "upload_time_iso_8601": "2020-04-26T07:57:58.235840Z", "url": "https://files.pythonhosted.org/packages/a8/e5/36a9dd326b94fee6799193408c48cfbfcfa4996d1439fec61c1acb1f2b37/ctp_risk-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "66c4a2af260622034b116c052df3160b", "sha256": "78ec02e0c92500a88099381609dcde3aef676f716a0eb87a8aab9348e1fcb7f5"}, "downloads": -1, "filename": "ctp_risk-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "66c4a2af260622034b116c052df3160b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 933755, "upload_time": "2020-04-26T10:31:47", "upload_time_iso_8601": "2020-04-26T10:31:47.730615Z", "url": "https://files.pythonhosted.org/packages/85/90/d1df4ed0f381dcef4c3f899e7ecf65f69f34e7347e3d2337b1d442951cff/ctp_risk-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5ed13d93dd19e92053b6e8a025c78c9", "sha256": "dd5fff3ffa41f164cc407ea57cd4a1e6acda0fc2ebeb52f5f477644778f401df"}, "downloads": -1, "filename": "ctp_risk-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c5ed13d93dd19e92053b6e8a025c78c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 932338, "upload_time": "2020-04-26T10:31:53", "upload_time_iso_8601": "2020-04-26T10:31:53.156553Z", "url": "https://files.pythonhosted.org/packages/72/ce/89fad172b29e2d4bfac615667472082eb3d5b46a2472fee154cf0adff57a/ctp_risk-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e6097b6a606eb755d0e0055440df6279", "sha256": "73d41272a0145112184ec6b6aa9cd6748fa10ffa282fffc94959a5a05d2f8fed"}, "downloads": -1, "filename": "ctp_risk-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e6097b6a606eb755d0e0055440df6279", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 934736, "upload_time": "2020-04-27T04:16:36", "upload_time_iso_8601": "2020-04-27T04:16:36.027769Z", "url": "https://files.pythonhosted.org/packages/d2/a2/81c06cb275f995816ce3ec7907c04ba23e8d919903e519a13155fa047574/ctp_risk-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a6ef92a1e76f4ebf316ef915661308a", "sha256": "8f2662efdc9669f5076126e5399b9295835a782d184e44faa1821b4890f615f3"}, "downloads": -1, "filename": "ctp_risk-0.0.4.tar.gz", "has_sig": false, "md5_digest": "2a6ef92a1e76f4ebf316ef915661308a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 933310, "upload_time": "2020-04-27T04:16:41", "upload_time_iso_8601": "2020-04-27T04:16:41.651959Z", "url": "https://files.pythonhosted.org/packages/a7/34/528073411c02343a1c6b1c835bd2073c0c8c47098845af61fc9ea1861c03/ctp_risk-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "7a06654ba39e34e296da1594da657cb5", "sha256": "0d8bdb9310f0f7dfefa499b4031830676b3dae069c81f6d08f37cab6c5e12271"}, "downloads": -1, "filename": "ctp_risk-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "7a06654ba39e34e296da1594da657cb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 933973, "upload_time": "2020-04-28T06:00:30", "upload_time_iso_8601": "2020-04-28T06:00:30.417277Z", "url": "https://files.pythonhosted.org/packages/02/d5/782bea998d3b921cc988b916fd0880d8a9033ade52cd4517e8cc940adc04/ctp_risk-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49a08083e241f4058b5c2b06cae4344c", "sha256": "d34e907c4ce029efb52e112b4811569f43baad91865bc7b0f64720b56bd7b319"}, "downloads": -1, "filename": "ctp_risk-0.0.6.tar.gz", "has_sig": false, "md5_digest": "49a08083e241f4058b5c2b06cae4344c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 932442, "upload_time": "2020-04-28T06:00:34", "upload_time_iso_8601": "2020-04-28T06:00:34.818247Z", "url": "https://files.pythonhosted.org/packages/02/5c/fff257ea6651a8ae74710c008359b1e0a1e3453bb5b388912a73842a7263/ctp_risk-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f2e9bba351d37d3aa5d44eba760e4cfe", "sha256": "6ffea6103cc27e6624dbf2b53c97ac855fcf4184cc00268bbd71a804b4669b67"}, "downloads": -1, "filename": "ctp_risk-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f2e9bba351d37d3aa5d44eba760e4cfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 935888, "upload_time": "2020-04-28T07:06:29", "upload_time_iso_8601": "2020-04-28T07:06:29.398975Z", "url": "https://files.pythonhosted.org/packages/5d/17/e3e03a72161802281d7af48dc616dc94ca5d1c9c64c992aaae157203ac30/ctp_risk-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c918d2a830393f451338804dbe99becb", "sha256": "804dd2b5c8b6c8a9a8a772360cd80b5c31f1ef76bfe86a35d739a360ce077c2c"}, "downloads": -1, "filename": "ctp_risk-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c918d2a830393f451338804dbe99becb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 934421, "upload_time": "2020-04-28T07:06:35", "upload_time_iso_8601": "2020-04-28T07:06:35.183766Z", "url": "https://files.pythonhosted.org/packages/f0/03/814c8cb4fd791d10bfd79b48e63ecd95f0e9c8f099a375a8fa08556d8e8b/ctp_risk-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "1c3cd9e9d2aaa38497f93b0f38d9709d", "sha256": "dc4054a682aa398ccc1bd81e17f0c583aeac6c292eb638c4f22f4601c8958fc4"}, "downloads": -1, "filename": "ctp_risk-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "1c3cd9e9d2aaa38497f93b0f38d9709d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 935689, "upload_time": "2020-04-29T02:40:25", "upload_time_iso_8601": "2020-04-29T02:40:25.873316Z", "url": "https://files.pythonhosted.org/packages/9c/26/41e141e09c291d3677f1f538b88bde30ebc0e689b184ced015c36fdca057/ctp_risk-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca717c551a1f8e1e1699d2ed9e306570", "sha256": "6048d54ed63cca3890cca1fee36229043fa0bab8a0a5275776ab258f2f40f698"}, "downloads": -1, "filename": "ctp_risk-0.0.8.tar.gz", "has_sig": false, "md5_digest": "ca717c551a1f8e1e1699d2ed9e306570", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 934223, "upload_time": "2020-04-29T02:40:31", "upload_time_iso_8601": "2020-04-29T02:40:31.701102Z", "url": "https://files.pythonhosted.org/packages/f0/83/18784be95179d8eb8529bafb4a1298953651a8ff0dbb0897d9820f334669/ctp_risk-0.0.8.tar.gz", "yanked": false}], "0.0.8.1": [{"comment_text": "", "digests": {"md5": "98f7fbedda9b5d508675530c96386244", "sha256": "b141e582b601387b3f566272a169d3ae298aa5a3cf9723be7d328e7223da39bd"}, "downloads": -1, "filename": "ctp_risk-0.0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98f7fbedda9b5d508675530c96386244", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 935950, "upload_time": "2020-04-29T05:09:07", "upload_time_iso_8601": "2020-04-29T05:09:07.176057Z", "url": "https://files.pythonhosted.org/packages/f3/16/4c15e8fd2cd831887fb8988a4074fa0ff19b734a6bd09f5f08be71d113f2/ctp_risk-0.0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7492941d441419d002f7deb4380338b6", "sha256": "10ccb91a93f0be371f6d83a18642b8959f1d07a7ed1803d408bd9f0728c12d38"}, "downloads": -1, "filename": "ctp_risk-0.0.8.1.tar.gz", "has_sig": false, "md5_digest": "7492941d441419d002f7deb4380338b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 934485, "upload_time": "2020-04-29T05:09:14", "upload_time_iso_8601": "2020-04-29T05:09:14.919640Z", "url": "https://files.pythonhosted.org/packages/b0/b2/4ccb34aa5d7faf7cb08ca1f91d196b5e100ace4044b47eb227e5ae7ae60b/ctp_risk-0.0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98f7fbedda9b5d508675530c96386244", "sha256": "b141e582b601387b3f566272a169d3ae298aa5a3cf9723be7d328e7223da39bd"}, "downloads": -1, "filename": "ctp_risk-0.0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98f7fbedda9b5d508675530c96386244", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 935950, "upload_time": "2020-04-29T05:09:07", "upload_time_iso_8601": "2020-04-29T05:09:07.176057Z", "url": "https://files.pythonhosted.org/packages/f3/16/4c15e8fd2cd831887fb8988a4074fa0ff19b734a6bd09f5f08be71d113f2/ctp_risk-0.0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7492941d441419d002f7deb4380338b6", "sha256": "10ccb91a93f0be371f6d83a18642b8959f1d07a7ed1803d408bd9f0728c12d38"}, "downloads": -1, "filename": "ctp_risk-0.0.8.1.tar.gz", "has_sig": false, "md5_digest": "7492941d441419d002f7deb4380338b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 934485, "upload_time": "2020-04-29T05:09:14", "upload_time_iso_8601": "2020-04-29T05:09:14.919640Z", "url": "https://files.pythonhosted.org/packages/b0/b2/4ccb34aa5d7faf7cb08ca1f91d196b5e100ace4044b47eb227e5ae7ae60b/ctp_risk-0.0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:34 2020"}