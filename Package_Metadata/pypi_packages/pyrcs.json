{"info": {"author": "Qian Fu", "author_email": "qian.fu@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "# pyrcs\n\n**Author**: Qian Fu [![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/Qian_Fu?label=Follow&style=social)](https://twitter.com/Qian_Fu) \n\n[![PyPI](https://img.shields.io/pypi/v/pyrcs?color=important&label=PyPI)](https://pypi.org/project/pyrcs/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyrcs?color=informational&label=Python)](https://www.python.org/downloads/)\n[![GitHub](https://img.shields.io/pypi/l/pyrcs?color=green&label=License)](https://github.com/mikeqfu/pyrcs/blob/master/LICENSE)\n[![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/mikeqfu/pyrcs?color=yellowgreen&label=Code%20size)](https://github.com/mikeqfu/pyrcs/tree/master/pyrcs)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/pyrcs?color=yellow&label=Downloads)](https://pypistats.org/packages/pyrcs)\n\nA small web scraper for collecting railway codes and other data used in the UK rail industry. \n\n\n\n## Installation\n\n```\npip3 install pyrcs\n```\n\n**Note**: \n\n* Make sure you have the most up-to-date version of `pip` installed.\n\n  ```\n  python -m pip3 install --upgrade pip\n  ```\n\n* The installation of one of the dependencies, `Python-Levenshtein`, requires VC2015 (or above). A workaround is to download and install its [.whl](https://www.lfd.uci.edu/~gohlke/pythonlibs/#python-levenshtein) file. For example, if you're using Python 3.8 on 64-bit OS, you can download and install \"python_Levenshtein-0.12.0-cp38-cp38-win_amd64.whl\" manually: \n\n  ```\n  pip3 install \\path\\to\\python_Levenshtein-0.12.0-cp38-cp38-win_amd64.whl\n  ```\n\n\n\n## Quick start (Examples) <a name=\"quick-start-examples\"></a>\n\nThe following examples provide a quick guide to the use of the package.\n\n\n\n### 1.  Get \"CRS, NLC, TIPLOC and STANOX Codes\" <a name=\"crs-nlc-tiploc-and-stanox-codes\"></a>\n\n###### There are several ways of importing the module/class. \n\n***Alternative 1***: \n\nIf your preferred import style is `from <module> import <name>`:\n\n```python\nfrom pyrcs.line_data_cls import crs_nlc_tiploc_stanox as ldlc\n```\n\nOr\n\n```python\nfrom pyrcs.line_data import crs_nlc_tiploc_stanox as ldlc\n```\n\nIf your prefer `import <module>.<name>`:\n\n```python\nimport pyrcs.line_data_cls.crs_nlc_tiploc_stanox as ldlc\n```\n\nAfter importing the module, you can create a 'class' for the location codes (including all CRS, NLC, TIPLOC, STANME and STANOX) :\n\n```python\nlocation_codes = ldlc.LocationIdentifiers()\n```\n\n***Alternative 2*** (*Used for the following examples*):\n\n```python\nfrom pyrcs.line_data import LineData\nline_data = LineData()\n```\n\n`line_data` contains all classes under the category of \"[Line data](http://www.railwaycodes.org.uk/linedatamenu.shtm)\". That way, `location_codes` is equivalent to `line_data.LocationIdentifiers`.\n\n```python\nlocation_codes = line_data.LocationIdentifiers\n```\n\n\n\n#### 1.1  Locations beginning with a given letter <a name=\"locations-beginning-with-a-given-letter\"></a>\n\nBy using the method `collect_location_codes_by_initial`, you can get the location codes, which start with a specific letter, say `'A'` or `'a'`: \n\n```python\n# The input is case-insensitive\nlocation_codes_a = line_data.LocationIdentifiers.collect_location_codes_by_initial('A')\n```\n\n`location_codes_a` is a `dict`, with the keys being: \n\n* `'A'`\n* `'Additional_note'`\n* `'Last_updated_date'`\n\nTheir corresponding values are:\n\n* `location_codes_a['A']`  is a `pandas.DataFrame` that contains the table data. You may compare it with the table on the [web page](http://www.railwaycodes.org.uk/crs/CRSa.shtm).\n* `location_codes_a['Additional_note']` is some additional information on the web page (if available).\n* `location_codes_a['Last_updated_date']` is the date (`str`) when the web page was last updated.\n\n\n\n#### 1.2  All available location codes in this category <a name=\"all-available-location-codes\"></a>\n\nYou can also get all available location codes in this category as a whole , using the method `fetch_location_codes`, which also returns a `dict`:\n\n```python\nlocation_codes_data = line_data.LocationIdentifiers.fetch_location_codes()\n```\n\nThe keys of `location_codes_a` include: \n\n- `'Location_codes'`\n- `'Latest_updated_date'` \n- `'Additional_note'`\n- `'Other_systems'`\n\nTheir corresponding values are:\n\n- `location_codes_data['Location_codes']`  is a `pandas.DataFrame` that contains all table data (from 'A' to 'Z').\n- `location_codes_data['Latest_updated_date']` is the latest 'Last_updated_date' (in `str`) among all initial-specific table data.\n- `location_codes_data['Additional_note']` is some important additional information on the web page (if available).\n- `location_codes_data['Other_systems']` is a `dict` for \"[Other systems](http://www.railwaycodes.org.uk/crs/CRS1.shtm)\".\n\n\n\n### 2.  Get \"Engineer's Line References (ELRs)\" <a name=\"elr\"></a>\n\nNow you need to use the class`line_data.ELRMileages`, which could just be assigned to any simpler variable, e.g.`em`\n\n```python\nem = line_data.ELRMileages\n```\n\n\n\n#### 2.1  ELR codes <a name=\"elr-codes\"></a>\n\nTo get ELR codes starting with a specific letter, say `'A'`, you can use the method `collect_elr_by_initial`, which returns a `dict`. \n\n```python\nelr_a = em.collect_elr_by_initial('A')  \n# Or elr_a = line_data.ELRMileages.collect_elr_by_initial('a')\n```\n\nThe keys of `elr_a` include: \n\n- `'A'`\n- `'Last_updated_date'`\n\nTheir corresponding values are:\n\n- `elr_a['A']`  is a `pandas.DataFrame` that contains the table data. You may compare it with the table on the [web page](http://www.railwaycodes.org.uk/elrs/elra.shtm).\n- `elr_a['Last_updated_date']` is the date (in `str`) when the web page was last updated.\n\nTo get all available ELR codes, by using the method `fetch_elr`, which also returns a `dict`:\n\n```python\nelr_codes = em.fetch_elr()\n```\n\nThe keys of `elr_codes` include: \n\n- `'ELRs_mileages'`\n- `'Latest_update_date'`\n\nTheir corresponding values are:\n\n- `elr_codes['ELRs_mileages']`  is a `pandas.DataFrame` that contains all table data (from 'A' to 'Z').\n- `elr_codes['Latest_updated_date']` is the latest 'Last_updated_date' (in `str`) among all initial-specific table data.\n\n\n\n#### 2.2  Mileage files <a name=\"mileage-files\"></a>\n\nTo collect more detailed mileage data for a given ELR, for example, `'AAM'`, you can use the method `fetch_mileage_file`, which returns a `dict`:\n\n```python\nem_amm = em.fetch_mileage_file('AAM')\n```\n\nThe keys of `em_amm` include: \n\n- `'ELR'`\n- `'Line'`\n- `'Sub-Line'`\n- `'AAM'`\n- `'Note'`\n\nTheir corresponding values are:\n\n- `em_amm['ELR']`  is the name (in `str`) of the given ELR\n- `em_amm['Line']` is associated line name (in `str`) \n- `em_amm['Sub-Line']` is associated sub line name (in `str`), if available\n- `em_amm['AAM']` is a `pandas.DataFrame` of the mileage file data\n\n\n\n### 3.  Get \"Railway stations data\" <a name=\"railway-stations-data\"></a>\n\nThe data of railway stations belongs to another category - \"[Other assets](http://www.railwaycodes.org.uk/otherassetsmenu.shtm)\"\n\n```python\nfrom pyrcs.other_assets import OtherAssets\nother_assets = OtherAssets()\n```\n\nSimilarly to **Sections** [**1.1**](#locations-beginning-with-a-given-letter) and [**2.1**](#elr-codes), to get stations data by a given initial letter (say `'A'`):\n\n```python\nstations_a = other_assets.Stations.collect_station_locations('A')\n```\n\nTo get all available stations data:\n\n```python\nstations_data = other_assets.Stations.fetch_station_locations()\n```\n\nBoth the data types of `stations_a` and `stations_data` are `dict`. \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mikeqfu/pyrcs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyrcs", "package_url": "https://pypi.org/project/pyrcs/", "platform": "", "project_url": "https://pypi.org/project/pyrcs/", "project_urls": {"Homepage": "https://github.com/mikeqfu/pyrcs"}, "release_url": "https://pypi.org/project/pyrcs/0.2.6/", "requires_dist": ["beautifulsoup4 (>=4.8)", "fuzzywuzzy (>=0.17)", "html5lib (>=1.0)", "lxml (>=4.4)", "measurement (>=3.2)", "more-itertools (>=8.0)", "numpy (>=1.18)", "openpyxl (>=3.0)", "pandas (>=1.0)", "pyhelpers (>=1.0.25)", "python-dateutil (>=2.8.0)", "python-Levenshtein (>=0.12)", "python-rapidjson (>=0.9)", "requests (>=2.22)", "SQLAlchemy (>=1.3)", "SQLAlchemy-Utils (>=0.36)", "tqdm (>=4.41)", "xlrd (>=1.2)", "XlsxWriter (>=1.2)", "xlwt (>=1.3)"], "requires_python": "", "summary": "A data scraping tool for collection and storage of the railway codes used in the UK rail industry", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyrcs</h1>\n<p><strong>Author</strong>: Qian Fu <a href=\"https://twitter.com/Qian_Fu\" rel=\"nofollow\"><img alt=\"Twitter URL\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ac5cac7756c784b211f460845584906af327d5a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f5169616e5f46753f6c6162656c3d466f6c6c6f77267374796c653d736f6369616c\"></a></p>\n<p><a href=\"https://pypi.org/project/pyrcs/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9250e6e506c7ee7d9dd7d83953a48c4c4aeb72f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70797263733f636f6c6f723d696d706f7274616e74266c6162656c3d50795049\"></a>\n<a href=\"https://www.python.org/downloads/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fb3a6a6fd2a54ccde75084b908210e5787f271a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70797263733f636f6c6f723d696e666f726d6174696f6e616c266c6162656c3d507974686f6e\"></a>\n<a href=\"https://github.com/mikeqfu/pyrcs/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/111f63609a9b7561133f56086523350800eb2944/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70797263733f636f6c6f723d677265656e266c6162656c3d4c6963656e7365\"></a>\n<a href=\"https://github.com/mikeqfu/pyrcs/tree/master/pyrcs\" rel=\"nofollow\"><img alt=\"GitHub code size in bytes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bac3bb8f747b08c17f0e2612c2bba24b5c8c5f73/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f64652d73697a652f6d696b657166752f70797263733f636f6c6f723d79656c6c6f77677265656e266c6162656c3d436f646525323073697a65\"></a>\n<a href=\"https://pypistats.org/packages/pyrcs\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2f0fa3c1106f4aeb352619375ed729cb875e199/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70797263733f636f6c6f723d79656c6c6f77266c6162656c3d446f776e6c6f616473\"></a></p>\n<p>A small web scraper for collecting railway codes and other data used in the UK rail industry.</p>\n<h2>Installation</h2>\n<pre><code>pip3 install pyrcs\n</code></pre>\n<p><strong>Note</strong>:</p>\n<ul>\n<li>\n<p>Make sure you have the most up-to-date version of <code>pip</code> installed.</p>\n<pre><code>python -m pip3 install --upgrade pip\n</code></pre>\n</li>\n<li>\n<p>The installation of one of the dependencies, <code>Python-Levenshtein</code>, requires VC2015 (or above). A workaround is to download and install its <a href=\"https://www.lfd.uci.edu/%7Egohlke/pythonlibs/#python-levenshtein\" rel=\"nofollow\">.whl</a> file. For example, if you're using Python 3.8 on 64-bit OS, you can download and install \"python_Levenshtein-0.12.0-cp38-cp38-win_amd64.whl\" manually:</p>\n<pre><code>pip3 install \\path\\to\\python_Levenshtein-0.12.0-cp38-cp38-win_amd64.whl\n</code></pre>\n</li>\n</ul>\n<h2>Quick start (Examples) <a></a></h2>\n<p>The following examples provide a quick guide to the use of the package.</p>\n<h3>1.  Get \"CRS, NLC, TIPLOC and STANOX Codes\" <a></a></h3>\n<h6>There are several ways of importing the module/class.</h6>\n<p><em><strong>Alternative 1</strong></em>:</p>\n<p>If your preferred import style is <code>from &lt;module&gt; import &lt;name&gt;</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyrcs.line_data_cls</span> <span class=\"kn\">import</span> <span class=\"n\">crs_nlc_tiploc_stanox</span> <span class=\"k\">as</span> <span class=\"n\">ldlc</span>\n</pre>\n<p>Or</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyrcs.line_data</span> <span class=\"kn\">import</span> <span class=\"n\">crs_nlc_tiploc_stanox</span> <span class=\"k\">as</span> <span class=\"n\">ldlc</span>\n</pre>\n<p>If your prefer <code>import &lt;module&gt;.&lt;name&gt;</code>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyrcs.line_data_cls.crs_nlc_tiploc_stanox</span> <span class=\"k\">as</span> <span class=\"nn\">ldlc</span>\n</pre>\n<p>After importing the module, you can create a 'class' for the location codes (including all CRS, NLC, TIPLOC, STANME and STANOX) :</p>\n<pre><span class=\"n\">location_codes</span> <span class=\"o\">=</span> <span class=\"n\">ldlc</span><span class=\"o\">.</span><span class=\"n\">LocationIdentifiers</span><span class=\"p\">()</span>\n</pre>\n<p><em><strong>Alternative 2</strong></em> (<em>Used for the following examples</em>):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyrcs.line_data</span> <span class=\"kn\">import</span> <span class=\"n\">LineData</span>\n<span class=\"n\">line_data</span> <span class=\"o\">=</span> <span class=\"n\">LineData</span><span class=\"p\">()</span>\n</pre>\n<p><code>line_data</code> contains all classes under the category of \"<a href=\"http://www.railwaycodes.org.uk/linedatamenu.shtm\" rel=\"nofollow\">Line data</a>\". That way, <code>location_codes</code> is equivalent to <code>line_data.LocationIdentifiers</code>.</p>\n<pre><span class=\"n\">location_codes</span> <span class=\"o\">=</span> <span class=\"n\">line_data</span><span class=\"o\">.</span><span class=\"n\">LocationIdentifiers</span>\n</pre>\n<h4>1.1  Locations beginning with a given letter <a></a></h4>\n<p>By using the method <code>collect_location_codes_by_initial</code>, you can get the location codes, which start with a specific letter, say <code>'A'</code> or <code>'a'</code>:</p>\n<pre><span class=\"c1\"># The input is case-insensitive</span>\n<span class=\"n\">location_codes_a</span> <span class=\"o\">=</span> <span class=\"n\">line_data</span><span class=\"o\">.</span><span class=\"n\">LocationIdentifiers</span><span class=\"o\">.</span><span class=\"n\">collect_location_codes_by_initial</span><span class=\"p\">(</span><span class=\"s1\">'A'</span><span class=\"p\">)</span>\n</pre>\n<p><code>location_codes_a</code> is a <code>dict</code>, with the keys being:</p>\n<ul>\n<li><code>'A'</code></li>\n<li><code>'Additional_note'</code></li>\n<li><code>'Last_updated_date'</code></li>\n</ul>\n<p>Their corresponding values are:</p>\n<ul>\n<li><code>location_codes_a['A']</code>  is a <code>pandas.DataFrame</code> that contains the table data. You may compare it with the table on the <a href=\"http://www.railwaycodes.org.uk/crs/CRSa.shtm\" rel=\"nofollow\">web page</a>.</li>\n<li><code>location_codes_a['Additional_note']</code> is some additional information on the web page (if available).</li>\n<li><code>location_codes_a['Last_updated_date']</code> is the date (<code>str</code>) when the web page was last updated.</li>\n</ul>\n<h4>1.2  All available location codes in this category <a></a></h4>\n<p>You can also get all available location codes in this category as a whole , using the method <code>fetch_location_codes</code>, which also returns a <code>dict</code>:</p>\n<pre><span class=\"n\">location_codes_data</span> <span class=\"o\">=</span> <span class=\"n\">line_data</span><span class=\"o\">.</span><span class=\"n\">LocationIdentifiers</span><span class=\"o\">.</span><span class=\"n\">fetch_location_codes</span><span class=\"p\">()</span>\n</pre>\n<p>The keys of <code>location_codes_a</code> include:</p>\n<ul>\n<li><code>'Location_codes'</code></li>\n<li><code>'Latest_updated_date'</code></li>\n<li><code>'Additional_note'</code></li>\n<li><code>'Other_systems'</code></li>\n</ul>\n<p>Their corresponding values are:</p>\n<ul>\n<li><code>location_codes_data['Location_codes']</code>  is a <code>pandas.DataFrame</code> that contains all table data (from 'A' to 'Z').</li>\n<li><code>location_codes_data['Latest_updated_date']</code> is the latest 'Last_updated_date' (in <code>str</code>) among all initial-specific table data.</li>\n<li><code>location_codes_data['Additional_note']</code> is some important additional information on the web page (if available).</li>\n<li><code>location_codes_data['Other_systems']</code> is a <code>dict</code> for \"<a href=\"http://www.railwaycodes.org.uk/crs/CRS1.shtm\" rel=\"nofollow\">Other systems</a>\".</li>\n</ul>\n<h3>2.  Get \"Engineer's Line References (ELRs)\" <a></a></h3>\n<p>Now you need to use the class<code>line_data.ELRMileages</code>, which could just be assigned to any simpler variable, e.g.<code>em</code></p>\n<pre><span class=\"n\">em</span> <span class=\"o\">=</span> <span class=\"n\">line_data</span><span class=\"o\">.</span><span class=\"n\">ELRMileages</span>\n</pre>\n<h4>2.1  ELR codes <a></a></h4>\n<p>To get ELR codes starting with a specific letter, say <code>'A'</code>, you can use the method <code>collect_elr_by_initial</code>, which returns a <code>dict</code>.</p>\n<pre><span class=\"n\">elr_a</span> <span class=\"o\">=</span> <span class=\"n\">em</span><span class=\"o\">.</span><span class=\"n\">collect_elr_by_initial</span><span class=\"p\">(</span><span class=\"s1\">'A'</span><span class=\"p\">)</span>  \n<span class=\"c1\"># Or elr_a = line_data.ELRMileages.collect_elr_by_initial('a')</span>\n</pre>\n<p>The keys of <code>elr_a</code> include:</p>\n<ul>\n<li><code>'A'</code></li>\n<li><code>'Last_updated_date'</code></li>\n</ul>\n<p>Their corresponding values are:</p>\n<ul>\n<li><code>elr_a['A']</code>  is a <code>pandas.DataFrame</code> that contains the table data. You may compare it with the table on the <a href=\"http://www.railwaycodes.org.uk/elrs/elra.shtm\" rel=\"nofollow\">web page</a>.</li>\n<li><code>elr_a['Last_updated_date']</code> is the date (in <code>str</code>) when the web page was last updated.</li>\n</ul>\n<p>To get all available ELR codes, by using the method <code>fetch_elr</code>, which also returns a <code>dict</code>:</p>\n<pre><span class=\"n\">elr_codes</span> <span class=\"o\">=</span> <span class=\"n\">em</span><span class=\"o\">.</span><span class=\"n\">fetch_elr</span><span class=\"p\">()</span>\n</pre>\n<p>The keys of <code>elr_codes</code> include:</p>\n<ul>\n<li><code>'ELRs_mileages'</code></li>\n<li><code>'Latest_update_date'</code></li>\n</ul>\n<p>Their corresponding values are:</p>\n<ul>\n<li><code>elr_codes['ELRs_mileages']</code>  is a <code>pandas.DataFrame</code> that contains all table data (from 'A' to 'Z').</li>\n<li><code>elr_codes['Latest_updated_date']</code> is the latest 'Last_updated_date' (in <code>str</code>) among all initial-specific table data.</li>\n</ul>\n<h4>2.2  Mileage files <a></a></h4>\n<p>To collect more detailed mileage data for a given ELR, for example, <code>'AAM'</code>, you can use the method <code>fetch_mileage_file</code>, which returns a <code>dict</code>:</p>\n<pre><span class=\"n\">em_amm</span> <span class=\"o\">=</span> <span class=\"n\">em</span><span class=\"o\">.</span><span class=\"n\">fetch_mileage_file</span><span class=\"p\">(</span><span class=\"s1\">'AAM'</span><span class=\"p\">)</span>\n</pre>\n<p>The keys of <code>em_amm</code> include:</p>\n<ul>\n<li><code>'ELR'</code></li>\n<li><code>'Line'</code></li>\n<li><code>'Sub-Line'</code></li>\n<li><code>'AAM'</code></li>\n<li><code>'Note'</code></li>\n</ul>\n<p>Their corresponding values are:</p>\n<ul>\n<li><code>em_amm['ELR']</code>  is the name (in <code>str</code>) of the given ELR</li>\n<li><code>em_amm['Line']</code> is associated line name (in <code>str</code>)</li>\n<li><code>em_amm['Sub-Line']</code> is associated sub line name (in <code>str</code>), if available</li>\n<li><code>em_amm['AAM']</code> is a <code>pandas.DataFrame</code> of the mileage file data</li>\n</ul>\n<h3>3.  Get \"Railway stations data\" <a></a></h3>\n<p>The data of railway stations belongs to another category - \"<a href=\"http://www.railwaycodes.org.uk/otherassetsmenu.shtm\" rel=\"nofollow\">Other assets</a>\"</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyrcs.other_assets</span> <span class=\"kn\">import</span> <span class=\"n\">OtherAssets</span>\n<span class=\"n\">other_assets</span> <span class=\"o\">=</span> <span class=\"n\">OtherAssets</span><span class=\"p\">()</span>\n</pre>\n<p>Similarly to <strong>Sections</strong> <a href=\"#locations-beginning-with-a-given-letter\" rel=\"nofollow\"><strong>1.1</strong></a> and <a href=\"#elr-codes\" rel=\"nofollow\"><strong>2.1</strong></a>, to get stations data by a given initial letter (say <code>'A'</code>):</p>\n<pre><span class=\"n\">stations_a</span> <span class=\"o\">=</span> <span class=\"n\">other_assets</span><span class=\"o\">.</span><span class=\"n\">Stations</span><span class=\"o\">.</span><span class=\"n\">collect_station_locations</span><span class=\"p\">(</span><span class=\"s1\">'A'</span><span class=\"p\">)</span>\n</pre>\n<p>To get all available stations data:</p>\n<pre><span class=\"n\">stations_data</span> <span class=\"o\">=</span> <span class=\"n\">other_assets</span><span class=\"o\">.</span><span class=\"n\">Stations</span><span class=\"o\">.</span><span class=\"n\">fetch_station_locations</span><span class=\"p\">()</span>\n</pre>\n<p>Both the data types of <code>stations_a</code> and <code>stations_data</code> are <code>dict</code>.</p>\n\n          </div>"}, "last_serial": 6772180, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "b5c4d20ab714e88bcb3be7ab455eefa4", "sha256": "32945ef0f3cc73ae34bd64832720d9372124f3d4307492e9038028e5932526bc"}, "downloads": -1, "filename": "pyrcs-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b5c4d20ab714e88bcb3be7ab455eefa4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1704660, "upload_time": "2019-08-29T13:38:08", "upload_time_iso_8601": "2019-08-29T13:38:08.068905Z", "url": "https://files.pythonhosted.org/packages/d2/04/270d0d189c0cf0b436934565e206a9af37db30f6098e217abe2cb0061bb6/pyrcs-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d6ac548abaf78106dd1610a426a1e95", "sha256": "c2d0b2ddded4c9444117fc8df1a4464db2fb6ef2a43b288e40c4d79e02afca69"}, "downloads": -1, "filename": "pyrcs-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8d6ac548abaf78106dd1610a426a1e95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38704, "upload_time": "2019-08-29T13:38:10", "upload_time_iso_8601": "2019-08-29T13:38:10.072131Z", "url": "https://files.pythonhosted.org/packages/bc/18/09b9e03befcdfbef9e0099f6a9a64c3155aa05c3f56db09cb669fc8e6e31/pyrcs-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f77067f6be35ec3f636f09c86be22d5d", "sha256": "e984c4afc2a81ab6a5652ada22276d614f48a79504042e70c90d067d5a44917b"}, "downloads": -1, "filename": "pyrcs-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f77067f6be35ec3f636f09c86be22d5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1790946, "upload_time": "2019-09-18T17:31:57", "upload_time_iso_8601": "2019-09-18T17:31:57.822002Z", "url": "https://files.pythonhosted.org/packages/27/3e/480d74f6c5a6fc04c5b9628f02290d6272917d11cd290d2489c204bdee58/pyrcs-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c243c30837c9018fa99b0a2030884a5c", "sha256": "20adc2d366e95067214664167a080a0817506413ab2be3d070e42d17b3389492"}, "downloads": -1, "filename": "pyrcs-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c243c30837c9018fa99b0a2030884a5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39121, "upload_time": "2019-09-18T17:32:00", "upload_time_iso_8601": "2019-09-18T17:32:00.726789Z", "url": "https://files.pythonhosted.org/packages/f7/c5/064711992a23fb51943dc43a3a67f678ad3c312597cca9a71fc160759feb/pyrcs-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "d75d463205f09a2d1a4007225eaa4efe", "sha256": "63b41e2a37dbadf14047f41232c682e0a3df7f15bf9bf9f342584563eb537acb"}, "downloads": -1, "filename": "pyrcs-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d75d463205f09a2d1a4007225eaa4efe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1737422, "upload_time": "2019-09-27T13:52:36", "upload_time_iso_8601": "2019-09-27T13:52:36.931261Z", "url": "https://files.pythonhosted.org/packages/2a/69/4bd5abac3adc71e18d704ce0ac88c8d2b7b413133227795f356e2dc9ba4e/pyrcs-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99df23434694e59a81bbd6a4197af1dc", "sha256": "618b3a6752c7d4ced47d0dfa1aa76f8080cc6d1d8d15ed4e2b47bc33c34d5e6c"}, "downloads": -1, "filename": "pyrcs-0.2.2.tar.gz", "has_sig": false, "md5_digest": "99df23434694e59a81bbd6a4197af1dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40269, "upload_time": "2019-09-27T13:52:39", "upload_time_iso_8601": "2019-09-27T13:52:39.226008Z", "url": "https://files.pythonhosted.org/packages/dd/3b/ab7dc1dfe7d5b8a25d834ac520eb29dfe815ea99a4e879e1fe1ea4afc413/pyrcs-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "24b1f405c92e75a3d53d7575b96673ca", "sha256": "476842ee6074a1868a0fbd5bd736c175b9ffef0626ff71d0af6f54b1fce3ed03"}, "downloads": -1, "filename": "pyrcs-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "24b1f405c92e75a3d53d7575b96673ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1760813, "upload_time": "2019-10-04T18:31:57", "upload_time_iso_8601": "2019-10-04T18:31:57.278277Z", "url": "https://files.pythonhosted.org/packages/fa/64/9cd6cb17aceca38b6f4e748c4a69315f4a3a6d5130f90675e82ebdd9243e/pyrcs-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1282474cd7700f834f81701b8b9ca3a", "sha256": "2f9b4231bb244304560d0fb0a859aef1b917714ea937948e3bd3e84806f68a8e"}, "downloads": -1, "filename": "pyrcs-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f1282474cd7700f834f81701b8b9ca3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40681, "upload_time": "2019-10-04T18:31:59", "upload_time_iso_8601": "2019-10-04T18:31:59.390667Z", "url": "https://files.pythonhosted.org/packages/19/06/50534c3f29452c0a607e08676743858c957db6d49e1efe0572b5772a5bc3/pyrcs-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "62b9edc064a0b35cee0bb9363905b63f", "sha256": "7054a8cbf5bd2769ed8b60d30835c2fcbba53f00917c3c87ec2900c2b8df6667"}, "downloads": -1, "filename": "pyrcs-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "62b9edc064a0b35cee0bb9363905b63f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1769753, "upload_time": "2019-12-04T12:58:04", "upload_time_iso_8601": "2019-12-04T12:58:04.261159Z", "url": "https://files.pythonhosted.org/packages/be/84/d3c7fc69d3aca39d71f80bcf0844f47be239ea96a6a7e27fe2d5cafb662e/pyrcs-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68a0e743f15a03aaf6ccdd8b30c7449b", "sha256": "c640a8466931c0affd1a650ca8c8e482889611c2bb15b376cd547f2ee0b65d68"}, "downloads": -1, "filename": "pyrcs-0.2.4.tar.gz", "has_sig": false, "md5_digest": "68a0e743f15a03aaf6ccdd8b30c7449b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39974, "upload_time": "2019-12-04T12:58:06", "upload_time_iso_8601": "2019-12-04T12:58:06.485553Z", "url": "https://files.pythonhosted.org/packages/fc/1a/ffe576efaa2d73a77e248952d88205fb23082006e535760d30d44f16db0d/pyrcs-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "9a4c82d9ca30379d95c0bd7f1f2b97d9", "sha256": "e6500ccd5926780f2dac69723a768ca0ecc2ada5cf855efacfc3b74ee69d8cb1"}, "downloads": -1, "filename": "pyrcs-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9a4c82d9ca30379d95c0bd7f1f2b97d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1292467, "upload_time": "2020-01-10T14:15:58", "upload_time_iso_8601": "2020-01-10T14:15:58.219074Z", "url": "https://files.pythonhosted.org/packages/25/1d/5aded13abb1cfe4786050ab60948832d5dcd73f7e73ff7f4b429b8517c77/pyrcs-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "583e4339b0df940845bb4cbf1d9f9ae6", "sha256": "112e2c4d78f05999615b0c45941108848b36335cce2e1a89e23c4b709fe889ee"}, "downloads": -1, "filename": "pyrcs-0.2.5.tar.gz", "has_sig": false, "md5_digest": "583e4339b0df940845bb4cbf1d9f9ae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41109, "upload_time": "2020-01-10T14:16:00", "upload_time_iso_8601": "2020-01-10T14:16:00.026287Z", "url": "https://files.pythonhosted.org/packages/3f/61/3137616df7a8cf7208941bac01162e535e8aa9bc8f69dae971005e562fcf/pyrcs-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "bd603a6e5560a9b04adb45501a525d45", "sha256": "39489df21908aaa940684ac4f4b6f6dfab78ef1775c189dd99829e0d48a37fd6"}, "downloads": -1, "filename": "pyrcs-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "bd603a6e5560a9b04adb45501a525d45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1299140, "upload_time": "2020-03-08T15:22:24", "upload_time_iso_8601": "2020-03-08T15:22:24.115964Z", "url": "https://files.pythonhosted.org/packages/71/61/c4d754d4a682e6c08c57a16a2e773a7078630e202f46031c3f0fe60587cf/pyrcs-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8701aff8dd997d7ff7f4f48339d0c5a6", "sha256": "fadd9423f9b11cdd991e72b3beade479220b8d88ad781573182e8a958fb1bc54"}, "downloads": -1, "filename": "pyrcs-0.2.6.tar.gz", "has_sig": false, "md5_digest": "8701aff8dd997d7ff7f4f48339d0c5a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41213, "upload_time": "2020-03-08T15:22:25", "upload_time_iso_8601": "2020-03-08T15:22:25.987714Z", "url": "https://files.pythonhosted.org/packages/6e/66/c5b0a69ad29b79306f38035d3e172cc5633b4b9b7dad132a84a287db89e5/pyrcs-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd603a6e5560a9b04adb45501a525d45", "sha256": "39489df21908aaa940684ac4f4b6f6dfab78ef1775c189dd99829e0d48a37fd6"}, "downloads": -1, "filename": "pyrcs-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "bd603a6e5560a9b04adb45501a525d45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1299140, "upload_time": "2020-03-08T15:22:24", "upload_time_iso_8601": "2020-03-08T15:22:24.115964Z", "url": "https://files.pythonhosted.org/packages/71/61/c4d754d4a682e6c08c57a16a2e773a7078630e202f46031c3f0fe60587cf/pyrcs-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8701aff8dd997d7ff7f4f48339d0c5a6", "sha256": "fadd9423f9b11cdd991e72b3beade479220b8d88ad781573182e8a958fb1bc54"}, "downloads": -1, "filename": "pyrcs-0.2.6.tar.gz", "has_sig": false, "md5_digest": "8701aff8dd997d7ff7f4f48339d0c5a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41213, "upload_time": "2020-03-08T15:22:25", "upload_time_iso_8601": "2020-03-08T15:22:25.987714Z", "url": "https://files.pythonhosted.org/packages/6e/66/c5b0a69ad29b79306f38035d3e172cc5633b4b9b7dad132a84a287db89e5/pyrcs-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:03 2020"}