{"info": {"author": "Ilshad Habibullin", "author_email": "astoon.net at gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Site Management"], "description": "============\r\nice.adverlet\r\n============\r\n\r\n.. contents::\r\n\r\nUsage\r\n=====\r\n\r\nThis package - for Zope3 based sites - provides a simple way to edit\r\nany HTML snippet. It includes a WYSIWYG-editor, undo support and\r\nstorage for images.\r\n\r\nExamples of possible uses include: advertisement portlets,\r\nannouncements, footers, frontpages, etc.\r\n\r\nThe package provides the ZCML directive `adverlet` and TALES\r\nexpression `adverlet`.\r\n\r\nTo use the package follow these 6 simple steps:\r\n\r\n1) Include the package:\r\n\r\n   &lt;include package=\"ice.adverlet\" file=\"meta.zcml\" /&gt;\r\n   &lt;include package=\"ice.adverlet\" /&gt;\r\n\r\n2) In the ZCML configuration file define all your adverlets, for\r\nexample:\r\n\r\n   &lt;ice:adverlet name=\"top\" /&gt;\r\n\r\n   &lt;ice:adverlet\r\n       name=\"bottom\"\r\n       description=\"This is an advertisement at the bottom of the frontpage\"\r\n       /&gt;\r\n\r\n   &lt;ice:adverlet\r\n       name=\"footer\"\r\n       description=\"Footer of the site\"\r\n       default=\"default-footer\"\r\n       wysiwyg=\"False\"\r\n       /&gt;\r\n\r\nNotice:\r\n`name` - Required.\r\n`description` - Not required.\r\n`default` - Not required, it is name of browser view, registered b\r\nzcml-directives like browser:page.\r\n`wysiwyg' - Not required. Defines usage rich-text editor by default for this\r\nadverlet in management UI. User (admin) can change this in the form.\r\nDefault value is True.\r\n\r\n3) Write `adverlet` TALES expression in to your skin:\r\n\r\n  &lt;div tal:content=\"structure adverlet:top\" /&gt;\r\n\r\nwhere `top` is name of the adverlet.\r\n\r\n4) The package provides a view to manage all registered adverlets.\r\nThis view may be called by a special content provider\r\nin any page::\r\n\r\n  &lt;div tal:content=\"structure provider:ice.adverlet.manage\" /&gt;\r\n\r\n5) This content provider has the permission \"ice.adverlet.Manage\".\r\nTherefore, you need to grant this permission to a role in your\r\nproject, and allow \"undo\" for this user, for example::\r\n\r\n&lt;grant permission=\"ice.adverlet.Manage\" role=\"foo.blah.Blah\" /&gt;\r\n&lt;grant permission=\"zope.UndoOwnTransactions\" role=\"foo.blah.Blah\" /&gt;\r\n\r\n6) Install and register 2 local utilities:\r\n\r\n 1. Factory - ice.adverlet.storage.SourceStorage;\r\n    Interface - ice.adverlet.interfaces.ISourceStorage;\r\n    Name - empty.\r\n    (into Local Site Manager)\r\n\r\n 2. Factory - ice.adverlet.storage.FileStorage;\r\n    Interface - ice.adverlet.interfaces.IFileStorage;\r\n    Name - empty.\r\n    (into local site)\r\n\r\nThat's it.\r\n\r\nN.B. You can define your own templates for management UI.\r\nTo do this, take a look at ice/adverlet/browser/template\r\nand write your own adapters in your project for your own templates.\r\n\r\nYou will need to:\r\n\r\n- Change @adapter(IContentProvider, IDefaultBrowserLayer)\r\n  to @adapter(IContentProvider, IMyCustomLayer)\r\n- Register this adapter with the same name\r\n  (take a look at ice/adverlet/browser/configure.zcml,\r\n  section &lt;!-- templates --&gt;.)\r\n\r\nN.B. Also, you can use default templates but not default CSS for\r\nmanagement UI. For this, look in ZMI `Settings` form for\r\nice.adverlet.storage.SourceStorage local utility or define attribute\r\n`defaultCSS=False` in your install-tool code.\r\n\r\nTests\r\n=====\r\n\r\n  >>> import zope.interface\r\n  >>> import zope.component\r\n\r\nLet's register a default view for one of our adverlets::\r\n\r\n  >>> import os, tempfile\r\n  >>> temp_dir = tempfile.mkdtemp()\r\n  >>> templateFileName = os.path.join(temp_dir, 'default_footer.pt')\r\n  >>> open(templateFileName, 'w').write('''\r\n  ... &lt;h1&gt;Default Footer&lt;/h1&gt;\r\n  ... ''')\r\n\r\n  >>> from zope.publisher.interfaces import browser\r\n  >>> from zope.app.pagetemplate import simpleviewclass\r\n  >>> DefaultViewClass = simpleviewclass.SimpleViewClass(\r\n  ...     templateFileName, name='default-footer')\r\n\r\n  >>> zope.component.provideAdapter(\r\n  ...     DefaultViewClass,\r\n  ...     (zope.interface.Interface, browser.IDefaultBrowserLayer),\r\n  ...     zope.interface.Interface,\r\n  ...\t  name='default-footer'\r\n  ...\t  )\r\n\r\nLet's register a few advertlets::\r\n\r\n  >>> from zope.configuration import xmlconfig\r\n  >>> import ice.adverlet\r\n  >>> context = xmlconfig.file('meta.zcml', ice.adverlet)\r\n\r\n  >>> context = xmlconfig.string('''\r\n  ...     &lt;configure\r\n  ...\t      xmlns=\"http://namespaces.zope.org/zope\"\r\n  ...\t      xmlns:ice=\"http://namespaces.zope.org/ice\"\r\n  ...\t      i18n_domain=\"test\"&gt;\r\n  ...\r\n  ...\t      &lt;ice:adverlet\r\n  ...\t          name=\"frontpage\"\r\n  ...\t\t  /&gt;\r\n  ...\r\n  ...\t      &lt;ice:adverlet\r\n  ...             name=\"footer\"\r\n  ...\t\t  description=\"Footer of the site\"\r\n  ...\t\t  default=\"default-footer\"\r\n  ...\t\t  /&gt;\r\n  ...\r\n  ...     &lt;/configure&gt;''', context)\r\n\r\nNow we can try to call these adverlets in any view::\r\n\r\n  >>> templateFileName = os.path.join(temp_dir, 'template.pt')\r\n  >>> open(templateFileName, 'w').write('''\r\n  ... &lt;html&gt;\r\n  ... &lt;body&gt;\r\n  ... &lt;div tal:content=\"structure adverlet:frontpage\" /&gt;\r\n  ... &lt;div tal:content=\"structure adverlet:footer\" /&gt;\r\n  ... &lt;/body&gt;\r\n  ... &lt;/html&gt;\r\n  ... ''')\r\n\r\n  >>> PageClass = simpleviewclass.SimpleViewClass(\r\n  ...     templateFileName, name='index.html')\r\n\r\n  >>> zope.component.provideAdapter(\r\n  ...     PageClass,\r\n  ...     (zope.interface.Interface, browser.IDefaultBrowserLayer),\r\n  ...     zope.interface.Interface,\r\n  ...\t  name='index.html'\r\n  ...\t  )\r\n\r\n  >>> from zope.publisher.browser import TestRequest\r\n  >>> request = TestRequest()\r\n\r\n  >>> class Content(object):\r\n  ...     zope.interface.implements(zope.interface.Interface)\r\n  >>> content = Content()\r\n\r\n  >>> view = zope.component.getMultiAdapter(\r\n  ...     (content, request), name='index.html')\r\n\r\n  >>> print view().strip()\r\n  &lt;html&gt;\r\n  &lt;body&gt;\r\n  &lt;div&gt;&lt;/div&gt;\r\n  &lt;div&gt;\r\n  &lt;h1&gt;Default Footer&lt;/h1&gt;\r\n  &lt;/div&gt;\r\n  &lt;/body&gt;\r\n  &lt;/html&gt;\r\n  &lt;BLANKLINE&gt;\r\n\r\nTo edit adverlets store HTML sources::\r\n\r\n  >>> from ice.adverlet.storage import SourceStorage\r\n  >>> from ice.adverlet.interfaces import ISourceStorage\r\n\r\n  >>> storage = SourceStorage()\r\n  >>> ISourceStorage.providedBy(storage)\r\n  True\r\n\r\n  >>> storage.sources['frontpage'] = u'''\r\n  ...     &lt;h2&gt;&lt;a\r\nhref=\"http://launchpad.net&gt;Launchpad&lt;/a&gt;&lt;/h2&gt;\r\n  ...\t  '''\r\n  >>> storage.sources['footer'] = u'''\r\n  ...\t  &lt;h3&gt;&lt;a href=\"http://ohloh.net&gt;OhLoh&lt;/a&gt;&lt;/h3&gt;\r\n  ...\t  '''\r\n\r\nand register storage as utility::\r\n\r\n  >>> zope.component.provideUtility(storage, ISourceStorage)\r\n\r\nLet's check the test view now::\r\n\r\n  >>> print view().strip()\r\n  &lt;html&gt;\r\n  &lt;body&gt;\r\n  &lt;div&gt;\r\n  &lt;h2&gt;&lt;a href=\"http://launchpad.net&gt;Launchpad&lt;/a&gt;&lt;/h2&gt;\r\n  &lt;/div&gt;\r\n  &lt;div&gt;\r\n  &lt;h3&gt;&lt;a href=\"http://ohloh.net&gt;OhLoh&lt;/a&gt;&lt;/h3&gt;\r\n  &lt;/div&gt;\r\n  &lt;/body&gt;\r\n  &lt;/html&gt;\r\n  &lt;BLANKLINE&gt;\r\n\r\nThen we will test image storage and image wrapper.\r\nTo do this, let's register storage for the files::\r\n\r\n  >>> from ice.adverlet.storage import FileStorage\r\n  >>> from ice.adverlet.interfaces import IFileStorage\r\n\r\n  >>> files = FileStorage()\r\n  >>> IFileStorage.providedBy(files)\r\n  True\r\n\r\n  >>> zope.component.provideUtility(files, IFileStorage)\r\n\r\nAnd let's try to use the image wrapper to store images in this storage::\r\n\r\n  >>> from ice.adverlet.image import ImageWrapper\r\n  >>> from ice.adverlet.interfaces import IImageWrapper\r\n\r\n  >>> wrapper = ImageWrapper()\r\n  >>> IImageWrapper.providedBy(wrapper)\r\n  True\r\n\r\nRegister adapter for DublinCore::\r\n\r\n  >>> from zope.dublincore.annotatableadapter import ZDCAnnotatableAdapter\r\n  >>> from zope.dublincore.interfaces import IZopeDublinCore\r\n  >>> from zope.annotation.interfaces import IAttributeAnnotatable\r\n  >>> from zope.app.file.image import Image\r\n\r\n  >>> zope.interface.classImplements(Image, IAttributeAnnotatable)\r\n\r\n  >>> zope.component.provideAdapter(\r\n  ...     factory = ZDCAnnotatableAdapter,\r\n  ...\t  provides = IZopeDublinCore,\r\n  ...\t  adapts = (IAttributeAnnotatable,)\r\n  ...\t  )\r\n\r\nWe use test image::\r\n\r\n  >>> from ice.adverlet.tests.tests import zptlogo\r\n  >>> wrapper.data = zptlogo\r\n  >>> wrapper.description = u'Logo image'\r\n\r\nNow let's check file storage::\r\n\r\n  >>> [key for key in files.keys()]\r\n  [u'Image']\r\n\r\n  >>> [IZopeDublinCore(file).title for file in files.values()]\r\n  [u'Logo image']\r\n\r\nNote that in management UI we use named global utilities IAdverlet\r\nfor store HTML instead of using the storage directly. Let's test\r\nthis feature::\r\n\r\n  >>> storage.sources['frontpage']\r\n  u'\\n    &lt;h2&gt;&lt;a\r\nhref=\"http://launchpad.net&gt;Launchpad&lt;/a&gt;&lt;/h2&gt;\\n    '\r\n\r\n  >>> from ice.adverlet.interfaces import IAdverlet\r\n  >>> frontpage = zope.component.getUtility(IAdverlet, 'frontpage')\r\n\r\n  >>> frontpage.source = '&lt;h2&gt;Hi there&lt;/h2&gt;'\r\n\r\n  >>> storage.sources['frontpage']\r\n  '&lt;h2&gt;Hi there&lt;/h2&gt;'\r\n\r\nAnd let's check adverlet again::\r\n\r\n  >>> frontpage.source\r\n  '&lt;h2&gt;Hi there&lt;/h2&gt;'\r\n\r\nWe provide event for modify sources::\r\n\r\n  >>> events = []\r\n  >>> zope.component.provideHandler(events.append, (None, ))\r\n\r\n  >>> frontpage.source = '''&lt;h2&gt;Welcome!\r\n  ...                       You are here.&lt;/h2&gt;\r\n  ...\t\t\t '''\r\n\r\n  >>> events\r\n  [&lt;ice.adverlet.events.SourceModifiedEvent instance at ...&gt;]\r\n\r\nThe event holds the name of the global `adverlet` utility::\r\n\r\n  >>> events[0].name\r\n  u'frontpage'\r\n\r\nLook up test browser class again::\r\n\r\n  >>> print view().strip()\r\n  &lt;html&gt;\r\n  &lt;body&gt;\r\n  &lt;div&gt;&lt;h2&gt;Welcome!\r\n  You are here.&lt;/h2&gt;\r\n  &lt;/div&gt;\r\n  &lt;div&gt;\r\n  &lt;h3&gt;&lt;a href=\"http://ohloh.net&gt;OhLoh&lt;/a&gt;&lt;/h3&gt;\r\n  &lt;/div&gt;\r\n  &lt;/body&gt;\r\n  &lt;/html&gt;\r\n  &lt;BLANKLINE&gt;\r\n\r\nLet's test `newlines` parameter::\r\n\r\n  >>> frontpage.newlines = True\r\n\r\n  >>> print view().strip()\r\n  &lt;html&gt;\r\n  &lt;body&gt;\r\n  &lt;div&gt;&lt;h2&gt;Welcome!\r\n  &lt;br /&gt;                      You are here.&lt;/h2&gt;\r\n  &lt;br /&gt;                    &lt;br /&gt;&lt;/div&gt;\r\n  &lt;div&gt;\r\n  &lt;h3&gt;&lt;a href=\"http://ohloh.net&gt;OhLoh&lt;/a&gt;&lt;/h3&gt;\r\n  &lt;/div&gt;\r\n  &lt;/body&gt;\r\n  &lt;/html&gt;\r\n  &lt;BLANKLINE&gt;\r\n\r\nCleanup::\r\n\r\n  >>> import shutil\r\n  >>> shutil.rmtree(temp_dir)\r\n\r\n\r\n=========\r\nDemo site\r\n=========\r\n\r\nTo look the demo follow these steps:\r\n\r\n1) In setup.py file your project write:\r\n\r\n   install_requires = [...'ice.adverlet',..]\r\n\r\n2) In configure.zcml of your project write:\r\n\r\n   &lt;include package=\"ice.adverlet.demo\" />\r\n\r\n3) Run zope instance, add 'DEMO SITE' in ZMI, go to thi site, look 'DEMO'\r\n\r\nThe demo site has defined 4 adverlets: header, main, footer, sidebar.\r\nThere are default views for `header`, 'main' and `footer` adverlets\r\n(take a look at demo/app.zcml).\r\nAlso, there are user: login - `demo`, password - `demo`.\r\n\r\nOther way: download tar-archive from\r\nhttp://http://pypi.python.org/pypi/ice.adverlet\r\nor http://launchpad.net/ice.adverlet/\r\nand run buildout.\r\n\r\n\r\n=======\r\nCHANGES\r\n=======\r\n\r\nVersion 0.2.3 (2008-12-22)\r\n--------------------------\r\n\r\n- fixed bug in images container name chooser to work in KGS\r\n\r\n\r\nVersion 0.2.2 (2008-08-04)\r\n--------------------------\r\n\r\n- more convenience adverlets-listing\r\n- changes in default style sheets\r\n\r\nVersion 0.2.1 (2008-08-01)\r\n--------------------------\r\n\r\n- form status\r\n\r\n\r\nVersion 0.2.0 (2008-07-25)\r\n--------------------------\r\n\r\n- two modes: rich-text editor or simple textarea\r\n- 'render newlines' field for simple mode\r\n- `use default CSS for management UI` system parameter\r\n- `upload` form and listing of images now is in same URL\r\n- correct redirects in the form (not in the action handler, but\r\nin `update` method).\r\n- removed `Use Default View` column from management UI\r\n- demo principal instead zope.Anonymous for using demo\r\nin zopejroject or grokproject\r\n\r\nBackward compatibility: yes, thanks to FieldProperty.\r\n\r\n\r\nVersion 0.1.1 (2008-07-19)\r\n--------------------------\r\n\r\n- Correct egg-info\r\n\r\n\r\nVersion 0.1.0 (2008-07-19)\r\n--------------------------\r\n\r\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://launchpad.net/ice.adverlet", "keywords": "zope3 ttw views", "license": "GPL v.3", "maintainer": "", "maintainer_email": "", "name": "ice.adverlet", "package_url": "https://pypi.org/project/ice.adverlet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ice.adverlet/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://launchpad.net/ice.adverlet"}, "release_url": "https://pypi.org/project/ice.adverlet/0.2.3/", "requires_dist": null, "requires_python": null, "summary": "Simple way to edit any HTML snippet", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ============\n<br>ice.adverlet\n<br>============\n<br>\n<br>.. contents::\n<br>\n<br>Usage\n<br>=====\n<br>\n<br>This package - for Zope3 based sites - provides a simple way to edit\n<br>any HTML snippet. It includes a WYSIWYG-editor, undo support and\n<br>storage for images.\n<br>\n<br>Examples of possible uses include: advertisement portlets,\n<br>announcements, footers, frontpages, etc.\n<br>\n<br>The package provides the ZCML directive `adverlet` and TALES\n<br>expression `adverlet`.\n<br>\n<br>To use the package follow these 6 simple steps:\n<br>\n<br>1) Include the package:\n<br>\n<br>   &amp;lt;include package=\"ice.adverlet\" file=\"meta.zcml\" /&amp;gt;\n<br>   &amp;lt;include package=\"ice.adverlet\" /&amp;gt;\n<br>\n<br>2) In the ZCML configuration file define all your adverlets, for\n<br>example:\n<br>\n<br>   &amp;lt;ice:adverlet name=\"top\" /&amp;gt;\n<br>\n<br>   &amp;lt;ice:adverlet\n<br>       name=\"bottom\"\n<br>       description=\"This is an advertisement at the bottom of the frontpage\"\n<br>       /&amp;gt;\n<br>\n<br>   &amp;lt;ice:adverlet\n<br>       name=\"footer\"\n<br>       description=\"Footer of the site\"\n<br>       default=\"default-footer\"\n<br>       wysiwyg=\"False\"\n<br>       /&amp;gt;\n<br>\n<br>Notice:\n<br>`name` - Required.\n<br>`description` - Not required.\n<br>`default` - Not required, it is name of browser view, registered b\n<br>zcml-directives like browser:page.\n<br>`wysiwyg' - Not required. Defines usage rich-text editor by default for this\n<br>adverlet in management UI. User (admin) can change this in the form.\n<br>Default value is True.\n<br>\n<br>3) Write `adverlet` TALES expression in to your skin:\n<br>\n<br>  &amp;lt;div tal:content=\"structure adverlet:top\" /&amp;gt;\n<br>\n<br>where `top` is name of the adverlet.\n<br>\n<br>4) The package provides a view to manage all registered adverlets.\n<br>This view may be called by a special content provider\n<br>in any page::\n<br>\n<br>  &amp;lt;div tal:content=\"structure provider:ice.adverlet.manage\" /&amp;gt;\n<br>\n<br>5) This content provider has the permission \"ice.adverlet.Manage\".\n<br>Therefore, you need to grant this permission to a role in your\n<br>project, and allow \"undo\" for this user, for example::\n<br>\n<br>&amp;lt;grant permission=\"ice.adverlet.Manage\" role=\"foo.blah.Blah\" /&amp;gt;\n<br>&amp;lt;grant permission=\"zope.UndoOwnTransactions\" role=\"foo.blah.Blah\" /&amp;gt;\n<br>\n<br>6) Install and register 2 local utilities:\n<br>\n<br> 1. Factory - ice.adverlet.storage.SourceStorage;\n<br>    Interface - ice.adverlet.interfaces.ISourceStorage;\n<br>    Name - empty.\n<br>    (into Local Site Manager)\n<br>\n<br> 2. Factory - ice.adverlet.storage.FileStorage;\n<br>    Interface - ice.adverlet.interfaces.IFileStorage;\n<br>    Name - empty.\n<br>    (into local site)\n<br>\n<br>That's it.\n<br>\n<br>N.B. You can define your own templates for management UI.\n<br>To do this, take a look at ice/adverlet/browser/template\n<br>and write your own adapters in your project for your own templates.\n<br>\n<br>You will need to:\n<br>\n<br>- Change @adapter(IContentProvider, IDefaultBrowserLayer)\n<br>  to @adapter(IContentProvider, IMyCustomLayer)\n<br>- Register this adapter with the same name\n<br>  (take a look at ice/adverlet/browser/configure.zcml,\n<br>  section &amp;lt;!-- templates --&amp;gt;.)\n<br>\n<br>N.B. Also, you can use default templates but not default CSS for\n<br>management UI. For this, look in ZMI `Settings` form for\n<br>ice.adverlet.storage.SourceStorage local utility or define attribute\n<br>`defaultCSS=False` in your install-tool code.\n<br>\n<br>Tests\n<br>=====\n<br>\n<br>  &gt;&gt;&gt; import zope.interface\n<br>  &gt;&gt;&gt; import zope.component\n<br>\n<br>Let's register a default view for one of our adverlets::\n<br>\n<br>  &gt;&gt;&gt; import os, tempfile\n<br>  &gt;&gt;&gt; temp_dir = tempfile.mkdtemp()\n<br>  &gt;&gt;&gt; templateFileName = os.path.join(temp_dir, 'default_footer.pt')\n<br>  &gt;&gt;&gt; open(templateFileName, 'w').write('''\n<br>  ... &amp;lt;h1&amp;gt;Default Footer&amp;lt;/h1&amp;gt;\n<br>  ... ''')\n<br>\n<br>  &gt;&gt;&gt; from zope.publisher.interfaces import browser\n<br>  &gt;&gt;&gt; from zope.app.pagetemplate import simpleviewclass\n<br>  &gt;&gt;&gt; DefaultViewClass = simpleviewclass.SimpleViewClass(\n<br>  ...     templateFileName, name='default-footer')\n<br>\n<br>  &gt;&gt;&gt; zope.component.provideAdapter(\n<br>  ...     DefaultViewClass,\n<br>  ...     (zope.interface.Interface, browser.IDefaultBrowserLayer),\n<br>  ...     zope.interface.Interface,\n<br>  ...\t  name='default-footer'\n<br>  ...\t  )\n<br>\n<br>Let's register a few advertlets::\n<br>\n<br>  &gt;&gt;&gt; from zope.configuration import xmlconfig\n<br>  &gt;&gt;&gt; import ice.adverlet\n<br>  &gt;&gt;&gt; context = xmlconfig.file('meta.zcml', ice.adverlet)\n<br>\n<br>  &gt;&gt;&gt; context = xmlconfig.string('''\n<br>  ...     &amp;lt;configure\n<br>  ...\t      xmlns=\"http://namespaces.zope.org/zope\"\n<br>  ...\t      xmlns:ice=\"http://namespaces.zope.org/ice\"\n<br>  ...\t      i18n_domain=\"test\"&amp;gt;\n<br>  ...\n<br>  ...\t      &amp;lt;ice:adverlet\n<br>  ...\t          name=\"frontpage\"\n<br>  ...\t\t  /&amp;gt;\n<br>  ...\n<br>  ...\t      &amp;lt;ice:adverlet\n<br>  ...             name=\"footer\"\n<br>  ...\t\t  description=\"Footer of the site\"\n<br>  ...\t\t  default=\"default-footer\"\n<br>  ...\t\t  /&amp;gt;\n<br>  ...\n<br>  ...     &amp;lt;/configure&amp;gt;''', context)\n<br>\n<br>Now we can try to call these adverlets in any view::\n<br>\n<br>  &gt;&gt;&gt; templateFileName = os.path.join(temp_dir, 'template.pt')\n<br>  &gt;&gt;&gt; open(templateFileName, 'w').write('''\n<br>  ... &amp;lt;html&amp;gt;\n<br>  ... &amp;lt;body&amp;gt;\n<br>  ... &amp;lt;div tal:content=\"structure adverlet:frontpage\" /&amp;gt;\n<br>  ... &amp;lt;div tal:content=\"structure adverlet:footer\" /&amp;gt;\n<br>  ... &amp;lt;/body&amp;gt;\n<br>  ... &amp;lt;/html&amp;gt;\n<br>  ... ''')\n<br>\n<br>  &gt;&gt;&gt; PageClass = simpleviewclass.SimpleViewClass(\n<br>  ...     templateFileName, name='index.html')\n<br>\n<br>  &gt;&gt;&gt; zope.component.provideAdapter(\n<br>  ...     PageClass,\n<br>  ...     (zope.interface.Interface, browser.IDefaultBrowserLayer),\n<br>  ...     zope.interface.Interface,\n<br>  ...\t  name='index.html'\n<br>  ...\t  )\n<br>\n<br>  &gt;&gt;&gt; from zope.publisher.browser import TestRequest\n<br>  &gt;&gt;&gt; request = TestRequest()\n<br>\n<br>  &gt;&gt;&gt; class Content(object):\n<br>  ...     zope.interface.implements(zope.interface.Interface)\n<br>  &gt;&gt;&gt; content = Content()\n<br>\n<br>  &gt;&gt;&gt; view = zope.component.getMultiAdapter(\n<br>  ...     (content, request), name='index.html')\n<br>\n<br>  &gt;&gt;&gt; print view().strip()\n<br>  &amp;lt;html&amp;gt;\n<br>  &amp;lt;body&amp;gt;\n<br>  &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;\n<br>  &amp;lt;div&amp;gt;\n<br>  &amp;lt;h1&amp;gt;Default Footer&amp;lt;/h1&amp;gt;\n<br>  &amp;lt;/div&amp;gt;\n<br>  &amp;lt;/body&amp;gt;\n<br>  &amp;lt;/html&amp;gt;\n<br>  &amp;lt;BLANKLINE&amp;gt;\n<br>\n<br>To edit adverlets store HTML sources::\n<br>\n<br>  &gt;&gt;&gt; from ice.adverlet.storage import SourceStorage\n<br>  &gt;&gt;&gt; from ice.adverlet.interfaces import ISourceStorage\n<br>\n<br>  &gt;&gt;&gt; storage = SourceStorage()\n<br>  &gt;&gt;&gt; ISourceStorage.providedBy(storage)\n<br>  True\n<br>\n<br>  &gt;&gt;&gt; storage.sources['frontpage'] = u'''\n<br>  ...     &amp;lt;h2&amp;gt;&amp;lt;a\n<br>href=\"http://launchpad.net&amp;gt;Launchpad&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;\n<br>  ...\t  '''\n<br>  &gt;&gt;&gt; storage.sources['footer'] = u'''\n<br>  ...\t  &amp;lt;h3&amp;gt;&amp;lt;a href=\"http://ohloh.net&amp;gt;OhLoh&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;\n<br>  ...\t  '''\n<br>\n<br>and register storage as utility::\n<br>\n<br>  &gt;&gt;&gt; zope.component.provideUtility(storage, ISourceStorage)\n<br>\n<br>Let's check the test view now::\n<br>\n<br>  &gt;&gt;&gt; print view().strip()\n<br>  &amp;lt;html&amp;gt;\n<br>  &amp;lt;body&amp;gt;\n<br>  &amp;lt;div&amp;gt;\n<br>  &amp;lt;h2&amp;gt;&amp;lt;a href=\"http://launchpad.net&amp;gt;Launchpad&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;\n<br>  &amp;lt;/div&amp;gt;\n<br>  &amp;lt;div&amp;gt;\n<br>  &amp;lt;h3&amp;gt;&amp;lt;a href=\"http://ohloh.net&amp;gt;OhLoh&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;\n<br>  &amp;lt;/div&amp;gt;\n<br>  &amp;lt;/body&amp;gt;\n<br>  &amp;lt;/html&amp;gt;\n<br>  &amp;lt;BLANKLINE&amp;gt;\n<br>\n<br>Then we will test image storage and image wrapper.\n<br>To do this, let's register storage for the files::\n<br>\n<br>  &gt;&gt;&gt; from ice.adverlet.storage import FileStorage\n<br>  &gt;&gt;&gt; from ice.adverlet.interfaces import IFileStorage\n<br>\n<br>  &gt;&gt;&gt; files = FileStorage()\n<br>  &gt;&gt;&gt; IFileStorage.providedBy(files)\n<br>  True\n<br>\n<br>  &gt;&gt;&gt; zope.component.provideUtility(files, IFileStorage)\n<br>\n<br>And let's try to use the image wrapper to store images in this storage::\n<br>\n<br>  &gt;&gt;&gt; from ice.adverlet.image import ImageWrapper\n<br>  &gt;&gt;&gt; from ice.adverlet.interfaces import IImageWrapper\n<br>\n<br>  &gt;&gt;&gt; wrapper = ImageWrapper()\n<br>  &gt;&gt;&gt; IImageWrapper.providedBy(wrapper)\n<br>  True\n<br>\n<br>Register adapter for DublinCore::\n<br>\n<br>  &gt;&gt;&gt; from zope.dublincore.annotatableadapter import ZDCAnnotatableAdapter\n<br>  &gt;&gt;&gt; from zope.dublincore.interfaces import IZopeDublinCore\n<br>  &gt;&gt;&gt; from zope.annotation.interfaces import IAttributeAnnotatable\n<br>  &gt;&gt;&gt; from zope.app.file.image import Image\n<br>\n<br>  &gt;&gt;&gt; zope.interface.classImplements(Image, IAttributeAnnotatable)\n<br>\n<br>  &gt;&gt;&gt; zope.component.provideAdapter(\n<br>  ...     factory = ZDCAnnotatableAdapter,\n<br>  ...\t  provides = IZopeDublinCore,\n<br>  ...\t  adapts = (IAttributeAnnotatable,)\n<br>  ...\t  )\n<br>\n<br>We use test image::\n<br>\n<br>  &gt;&gt;&gt; from ice.adverlet.tests.tests import zptlogo\n<br>  &gt;&gt;&gt; wrapper.data = zptlogo\n<br>  &gt;&gt;&gt; wrapper.description = u'Logo image'\n<br>\n<br>Now let's check file storage::\n<br>\n<br>  &gt;&gt;&gt; [key for key in files.keys()]\n<br>  [u'Image']\n<br>\n<br>  &gt;&gt;&gt; [IZopeDublinCore(file).title for file in files.values()]\n<br>  [u'Logo image']\n<br>\n<br>Note that in management UI we use named global utilities IAdverlet\n<br>for store HTML instead of using the storage directly. Let's test\n<br>this feature::\n<br>\n<br>  &gt;&gt;&gt; storage.sources['frontpage']\n<br>  u'\\n    &amp;lt;h2&amp;gt;&amp;lt;a\n<br>href=\"http://launchpad.net&amp;gt;Launchpad&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;\\n    '\n<br>\n<br>  &gt;&gt;&gt; from ice.adverlet.interfaces import IAdverlet\n<br>  &gt;&gt;&gt; frontpage = zope.component.getUtility(IAdverlet, 'frontpage')\n<br>\n<br>  &gt;&gt;&gt; frontpage.source = '&amp;lt;h2&amp;gt;Hi there&amp;lt;/h2&amp;gt;'\n<br>\n<br>  &gt;&gt;&gt; storage.sources['frontpage']\n<br>  '&amp;lt;h2&amp;gt;Hi there&amp;lt;/h2&amp;gt;'\n<br>\n<br>And let's check adverlet again::\n<br>\n<br>  &gt;&gt;&gt; frontpage.source\n<br>  '&amp;lt;h2&amp;gt;Hi there&amp;lt;/h2&amp;gt;'\n<br>\n<br>We provide event for modify sources::\n<br>\n<br>  &gt;&gt;&gt; events = []\n<br>  &gt;&gt;&gt; zope.component.provideHandler(events.append, (None, ))\n<br>\n<br>  &gt;&gt;&gt; frontpage.source = '''&amp;lt;h2&amp;gt;Welcome!\n<br>  ...                       You are here.&amp;lt;/h2&amp;gt;\n<br>  ...\t\t\t '''\n<br>\n<br>  &gt;&gt;&gt; events\n<br>  [&amp;lt;ice.adverlet.events.SourceModifiedEvent instance at ...&amp;gt;]\n<br>\n<br>The event holds the name of the global `adverlet` utility::\n<br>\n<br>  &gt;&gt;&gt; events[0].name\n<br>  u'frontpage'\n<br>\n<br>Look up test browser class again::\n<br>\n<br>  &gt;&gt;&gt; print view().strip()\n<br>  &amp;lt;html&amp;gt;\n<br>  &amp;lt;body&amp;gt;\n<br>  &amp;lt;div&amp;gt;&amp;lt;h2&amp;gt;Welcome!\n<br>  You are here.&amp;lt;/h2&amp;gt;\n<br>  &amp;lt;/div&amp;gt;\n<br>  &amp;lt;div&amp;gt;\n<br>  &amp;lt;h3&amp;gt;&amp;lt;a href=\"http://ohloh.net&amp;gt;OhLoh&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;\n<br>  &amp;lt;/div&amp;gt;\n<br>  &amp;lt;/body&amp;gt;\n<br>  &amp;lt;/html&amp;gt;\n<br>  &amp;lt;BLANKLINE&amp;gt;\n<br>\n<br>Let's test `newlines` parameter::\n<br>\n<br>  &gt;&gt;&gt; frontpage.newlines = True\n<br>\n<br>  &gt;&gt;&gt; print view().strip()\n<br>  &amp;lt;html&amp;gt;\n<br>  &amp;lt;body&amp;gt;\n<br>  &amp;lt;div&amp;gt;&amp;lt;h2&amp;gt;Welcome!\n<br>  &amp;lt;br /&amp;gt;                      You are here.&amp;lt;/h2&amp;gt;\n<br>  &amp;lt;br /&amp;gt;                    &amp;lt;br /&amp;gt;&amp;lt;/div&amp;gt;\n<br>  &amp;lt;div&amp;gt;\n<br>  &amp;lt;h3&amp;gt;&amp;lt;a href=\"http://ohloh.net&amp;gt;OhLoh&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;\n<br>  &amp;lt;/div&amp;gt;\n<br>  &amp;lt;/body&amp;gt;\n<br>  &amp;lt;/html&amp;gt;\n<br>  &amp;lt;BLANKLINE&amp;gt;\n<br>\n<br>Cleanup::\n<br>\n<br>  &gt;&gt;&gt; import shutil\n<br>  &gt;&gt;&gt; shutil.rmtree(temp_dir)\n<br>\n<br>\n<br>=========\n<br>Demo site\n<br>=========\n<br>\n<br>To look the demo follow these steps:\n<br>\n<br>1) In setup.py file your project write:\n<br>\n<br>   install_requires = [...'ice.adverlet',..]\n<br>\n<br>2) In configure.zcml of your project write:\n<br>\n<br>   &amp;lt;include package=\"ice.adverlet.demo\" /&gt;\n<br>\n<br>3) Run zope instance, add 'DEMO SITE' in ZMI, go to thi site, look 'DEMO'\n<br>\n<br>The demo site has defined 4 adverlets: header, main, footer, sidebar.\n<br>There are default views for `header`, 'main' and `footer` adverlets\n<br>(take a look at demo/app.zcml).\n<br>Also, there are user: login - `demo`, password - `demo`.\n<br>\n<br>Other way: download tar-archive from\n<br>http://http://pypi.python.org/pypi/ice.adverlet\n<br>or http://launchpad.net/ice.adverlet/\n<br>and run buildout.\n<br>\n<br>\n<br>=======\n<br>CHANGES\n<br>=======\n<br>\n<br>Version 0.2.3 (2008-12-22)\n<br>--------------------------\n<br>\n<br>- fixed bug in images container name chooser to work in KGS\n<br>\n<br>\n<br>Version 0.2.2 (2008-08-04)\n<br>--------------------------\n<br>\n<br>- more convenience adverlets-listing\n<br>- changes in default style sheets\n<br>\n<br>Version 0.2.1 (2008-08-01)\n<br>--------------------------\n<br>\n<br>- form status\n<br>\n<br>\n<br>Version 0.2.0 (2008-07-25)\n<br>--------------------------\n<br>\n<br>- two modes: rich-text editor or simple textarea\n<br>- 'render newlines' field for simple mode\n<br>- `use default CSS for management UI` system parameter\n<br>- `upload` form and listing of images now is in same URL\n<br>- correct redirects in the form (not in the action handler, but\n<br>in `update` method).\n<br>- removed `Use Default View` column from management UI\n<br>- demo principal instead zope.Anonymous for using demo\n<br>in zopejroject or grokproject\n<br>\n<br>Backward compatibility: yes, thanks to FieldProperty.\n<br>\n<br>\n<br>Version 0.1.1 (2008-07-19)\n<br>--------------------------\n<br>\n<br>- Correct egg-info\n<br>\n<br>\n<br>Version 0.1.0 (2008-07-19)\n<br>--------------------------\n<br>\n<br>- Initial release\n          </div>"}, "last_serial": 81541, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e3ecd36c2067818415f7871113f0aedf", "sha256": "609057141c06650e1be6abda6fb3bb48f5c0764c0c68f60db9a540caf2f9a881"}, "downloads": -1, "filename": "ice.adverlet-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e3ecd36c2067818415f7871113f0aedf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38375, "upload_time": "2008-07-19T16:25:18", "upload_time_iso_8601": "2008-07-19T16:25:18Z", "url": "https://files.pythonhosted.org/packages/c9/ec/318cc292528780c5f56b8e75151c0832fb8fa694ad5b6753f1e4f9645015/ice.adverlet-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5dce88f38aba468fa381c9510e43e7cb", "sha256": "b773c1fd43aa58ad4a20e144d20396cc166ea2ca6f8a8cc010e90807bc3c5812"}, "downloads": -1, "filename": "ice.adverlet-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5dce88f38aba468fa381c9510e43e7cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38424, "upload_time": "2008-07-19T17:05:23", "upload_time_iso_8601": "2008-07-19T17:05:23Z", "url": "https://files.pythonhosted.org/packages/b3/5a/984f81186e606741a30f899d872e7874cfebc91af52c8a0198b515aeb128/ice.adverlet-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fe96178056c47fde7c44675907a2adff", "sha256": "0377eb8a651c1f81bf6486d1f6ebf86cd427e6857f2718f9440551348ce8af5f"}, "downloads": -1, "filename": "ice.adverlet-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fe96178056c47fde7c44675907a2adff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37486, "upload_time": "2008-07-25T19:30:27", "upload_time_iso_8601": "2008-07-25T19:30:27Z", "url": "https://files.pythonhosted.org/packages/70/aa/c286cff4e6e6875a58c9f155a31cabc1b2a79254f81b5161a9e6037ccb5b/ice.adverlet-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8c5811d502257ba1c59d9a7cba958ea9", "sha256": "7b4bb72ba556ef8e8b35d9e0b4c73f7d2b35627277907f85c3961abdfb13c714"}, "downloads": -1, "filename": "ice.adverlet-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8c5811d502257ba1c59d9a7cba958ea9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37058, "upload_time": "2008-08-01T10:14:33", "upload_time_iso_8601": "2008-08-01T10:14:33Z", "url": "https://files.pythonhosted.org/packages/c4/24/e346b9dee8e5b265eca821c1af27f247e44584949de10b27b5945b326a28/ice.adverlet-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dd6968093368f143e8930c025b8546cc", "sha256": "ab2821462485ad414e4df3a7689de252226591cecf8d9829820b5d0660a92059"}, "downloads": -1, "filename": "ice.adverlet-0.2.2.tar.gz", "has_sig": false, "md5_digest": "dd6968093368f143e8930c025b8546cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37668, "upload_time": "2008-08-04T09:11:16", "upload_time_iso_8601": "2008-08-04T09:11:16Z", "url": "https://files.pythonhosted.org/packages/3a/c6/cfc61b0bed914e432e478eac942683e2a3876714546dc73ed9f35f1485bc/ice.adverlet-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "58cbd74be0bb3ee5d5870425c5cf7f3d", "sha256": "5fbc6632a684ba861dbc851430a349353ed497777f48189124c0e55ba2ea9a5b"}, "downloads": -1, "filename": "ice.adverlet-0.2.3-py2.4.egg", "has_sig": false, "md5_digest": "58cbd74be0bb3ee5d5870425c5cf7f3d", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 70181, "upload_time": "2008-12-22T12:18:23", "upload_time_iso_8601": "2008-12-22T12:18:23Z", "url": "https://files.pythonhosted.org/packages/43/87/6d97e7fb1b574ab97a1131202bdfd6c27013949d1d4154373f12452d718b/ice.adverlet-0.2.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc4d87ac78690d04ddea93423eed860d", "sha256": "10085666a681be32f95ded3c9c5579cec2576c2f2ef560ed10460c3fbc3b65b1"}, "downloads": -1, "filename": "ice.adverlet-0.2.3.tar.gz", "has_sig": false, "md5_digest": "bc4d87ac78690d04ddea93423eed860d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38589, "upload_time": "2008-12-22T12:18:23", "upload_time_iso_8601": "2008-12-22T12:18:23Z", "url": "https://files.pythonhosted.org/packages/bf/11/cfa3775a1ff8f4dfe241dd54105e8b5b618d1154f3016fbb6f03461b2c27/ice.adverlet-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "58cbd74be0bb3ee5d5870425c5cf7f3d", "sha256": "5fbc6632a684ba861dbc851430a349353ed497777f48189124c0e55ba2ea9a5b"}, "downloads": -1, "filename": "ice.adverlet-0.2.3-py2.4.egg", "has_sig": false, "md5_digest": "58cbd74be0bb3ee5d5870425c5cf7f3d", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 70181, "upload_time": "2008-12-22T12:18:23", "upload_time_iso_8601": "2008-12-22T12:18:23Z", "url": "https://files.pythonhosted.org/packages/43/87/6d97e7fb1b574ab97a1131202bdfd6c27013949d1d4154373f12452d718b/ice.adverlet-0.2.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc4d87ac78690d04ddea93423eed860d", "sha256": "10085666a681be32f95ded3c9c5579cec2576c2f2ef560ed10460c3fbc3b65b1"}, "downloads": -1, "filename": "ice.adverlet-0.2.3.tar.gz", "has_sig": false, "md5_digest": "bc4d87ac78690d04ddea93423eed860d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38589, "upload_time": "2008-12-22T12:18:23", "upload_time_iso_8601": "2008-12-22T12:18:23Z", "url": "https://files.pythonhosted.org/packages/bf/11/cfa3775a1ff8f4dfe241dd54105e8b5b618d1154f3016fbb6f03461b2c27/ice.adverlet-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:07 2020"}