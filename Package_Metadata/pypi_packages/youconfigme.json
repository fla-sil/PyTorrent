{"info": {"author": "CrossNox", "author_email": "", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# YouConfigMe\n[![Build Status](https://travis-ci.org/CrossNox/YouConfigMe.svg?branch=master)](https://travis-ci.org/CrossNox/YouConfigMe)\n\nYouConfigMe helps you manage config in a pythonic way.\n\n## Core ideas\n\n### Explicit is better than implicit\nThere are several ways to define configuration variables, with different levels of explicitness.\nFrom most to less explicit:\n\n- Variable defined in config file\n- Variable set as env var\n\n### Defaults are reasonable\nSometimes you might need a variable to exist even if it hasn't been defined. So, you should be able to provide defaults.\n\n### Types are inherent to the variable\nMost of the time, variables are defined as strings, on `.ini` files or as env vars. But what if your variable is an `int`? You should be able to get it as an `int`.\n\n### Sections are good\nConfig sections are a good thing: separate your config vars under reasonable namespaces.\n\n## Install\nClone this repo, and install it.\n\n```bash\npip install YouConfigMe\n```\n\n## Development\nStart by cloning the repo/forking it.\n\n\nYou should install YouConfigMe's dev packages to help.\n\n```bash\npip install .[dev]\npip install .[test]\n```\n\nAfter that, install the pre-commit hooks:\n\n```bash\npre-commit install\n```\n\nThis will install several code formatting tools and set them up to run before commits. Also, it will run tests before pushing.\n\n### Docs\nTo update the docs to the latest changes\n\n```bash\ncd docs\nmake html\n```\n\n### Version bumping\nThis project uses [bump](https://pypi.org/project/bump/) to quickly bump versions.\nBy default running `bump` will bump the patch version. You can bump minor/major versions like so:\n\n```bash\nbump --minor\nbump --major\n```\n\n## Tests\nThe `tests` folder contains several tests that run using `pytest` that should give you an idea of how to use this.\n\n## Quickstart\n\nAssume you have an `.ini` file at the root of your project that looks like this:\n\n```ini\n[a]\nkey1=1\nkey2=2\n\n[b]\nkey3=3\nkey4=4\n```\n\nYou can use it like this:\n\n```python3\nfrom youconfigme import AutoConfig, ConfigItemNotFound\nimport os\n\nos.environ[\"A_KEY4\"] = \"key4value\"\nconfig = AutoConfig()\n\n\nprint(config.a.key1(cast=int))  \t\t# returns 1\nprint(config.a.key2())\t\t\t\t# returns '2'\nprint(config.a.key3())\t\t\t\t# raises ConfigItemNotFound\nprint(config.a.key3(default='key3value'))\t# return 'key3value'\nprint(config.a.key4())\t\t\t\t# returns 'key4value'\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crossnox/YouConfigMe", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "youconfigme", "package_url": "https://pypi.org/project/youconfigme/", "platform": "", "project_url": "https://pypi.org/project/youconfigme/", "project_urls": {"Homepage": "https://github.com/crossnox/YouConfigMe"}, "release_url": "https://pypi.org/project/youconfigme/0.5.2/", "requires_dist": null, "requires_python": "", "summary": "YouConfigMe helps you manage config in a pythonic way", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>YouConfigMe</h1>\n<p><a href=\"https://travis-ci.org/CrossNox/YouConfigMe\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c28cc9a3589891d4a7d4ec070ecda08c3c483ae9/68747470733a2f2f7472617669732d63692e6f72672f43726f73734e6f782f596f75436f6e6669674d652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>YouConfigMe helps you manage config in a pythonic way.</p>\n<h2>Core ideas</h2>\n<h3>Explicit is better than implicit</h3>\n<p>There are several ways to define configuration variables, with different levels of explicitness.\nFrom most to less explicit:</p>\n<ul>\n<li>Variable defined in config file</li>\n<li>Variable set as env var</li>\n</ul>\n<h3>Defaults are reasonable</h3>\n<p>Sometimes you might need a variable to exist even if it hasn't been defined. So, you should be able to provide defaults.</p>\n<h3>Types are inherent to the variable</h3>\n<p>Most of the time, variables are defined as strings, on <code>.ini</code> files or as env vars. But what if your variable is an <code>int</code>? You should be able to get it as an <code>int</code>.</p>\n<h3>Sections are good</h3>\n<p>Config sections are a good thing: separate your config vars under reasonable namespaces.</p>\n<h2>Install</h2>\n<p>Clone this repo, and install it.</p>\n<pre>pip install YouConfigMe\n</pre>\n<h2>Development</h2>\n<p>Start by cloning the repo/forking it.</p>\n<p>You should install YouConfigMe's dev packages to help.</p>\n<pre>pip install .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\npip install .<span class=\"o\">[</span>test<span class=\"o\">]</span>\n</pre>\n<p>After that, install the pre-commit hooks:</p>\n<pre>pre-commit install\n</pre>\n<p>This will install several code formatting tools and set them up to run before commits. Also, it will run tests before pushing.</p>\n<h3>Docs</h3>\n<p>To update the docs to the latest changes</p>\n<pre><span class=\"nb\">cd</span> docs\nmake html\n</pre>\n<h3>Version bumping</h3>\n<p>This project uses <a href=\"https://pypi.org/project/bump/\" rel=\"nofollow\">bump</a> to quickly bump versions.\nBy default running <code>bump</code> will bump the patch version. You can bump minor/major versions like so:</p>\n<pre>bump --minor\nbump --major\n</pre>\n<h2>Tests</h2>\n<p>The <code>tests</code> folder contains several tests that run using <code>pytest</code> that should give you an idea of how to use this.</p>\n<h2>Quickstart</h2>\n<p>Assume you have an <code>.ini</code> file at the root of your project that looks like this:</p>\n<pre><span class=\"k\">[a]</span>\n<span class=\"na\">key1</span><span class=\"o\">=</span><span class=\"s\">1</span>\n<span class=\"na\">key2</span><span class=\"o\">=</span><span class=\"s\">2</span>\n\n<span class=\"k\">[b]</span>\n<span class=\"na\">key3</span><span class=\"o\">=</span><span class=\"s\">3</span>\n<span class=\"na\">key4</span><span class=\"o\">=</span><span class=\"s\">4</span>\n</pre>\n<p>You can use it like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">youconfigme</span> <span class=\"kn\">import</span> <span class=\"n\">AutoConfig</span><span class=\"p\">,</span> <span class=\"n\">ConfigItemNotFound</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"A_KEY4\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"key4value\"</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">AutoConfig</span><span class=\"p\">()</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">key1</span><span class=\"p\">(</span><span class=\"n\">cast</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">))</span>  \t\t<span class=\"c1\"># returns 1</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">key2</span><span class=\"p\">())</span>\t\t\t\t<span class=\"c1\"># returns '2'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">key3</span><span class=\"p\">())</span>\t\t\t\t<span class=\"c1\"># raises ConfigItemNotFound</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">key3</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'key3value'</span><span class=\"p\">))</span>\t<span class=\"c1\"># return 'key3value'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">key4</span><span class=\"p\">())</span>\t\t\t\t<span class=\"c1\"># returns 'key4value'</span>\n</pre>\n\n          </div>"}, "last_serial": 6956502, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "a1222213dd1209bfd7615f792d680e0d", "sha256": "3dcbd041618acde8acb28b82b2f773b12e4fe9f59f420472f9531e19409f183d"}, "downloads": -1, "filename": "youconfigme-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a1222213dd1209bfd7615f792d680e0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3782, "upload_time": "2020-03-05T18:40:19", "upload_time_iso_8601": "2020-03-05T18:40:19.336504Z", "url": "https://files.pythonhosted.org/packages/c4/81/513c41929dce6f5db565391fc9b0112331b84ce3d07e90826c2f69baf302/youconfigme-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "6a6f387608cbef886f8c68fd8ccaa655", "sha256": "d2ce8cb69a79f6c0b16e4e9e5fd6aa151d67878c83ca000dfed1bdd83a0fb89f"}, "downloads": -1, "filename": "youconfigme-0.2.3.tar.gz", "has_sig": false, "md5_digest": "6a6f387608cbef886f8c68fd8ccaa655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4151, "upload_time": "2020-03-05T19:09:22", "upload_time_iso_8601": "2020-03-05T19:09:22.712897Z", "url": "https://files.pythonhosted.org/packages/f4/7d/d4176b93830a0f7c7ca49d0dec974414524032a0ec6fcbaeaf8a9ccbfef6/youconfigme-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "0e3234d2e52615796120e9dc7a9c7c23", "sha256": "29adf7cf246bbeb139424dc4e9b23a8aa0f2eebeadfb730a584c4293f974d0b9"}, "downloads": -1, "filename": "youconfigme-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0e3234d2e52615796120e9dc7a9c7c23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4197, "upload_time": "2020-03-05T19:17:25", "upload_time_iso_8601": "2020-03-05T19:17:25.568616Z", "url": "https://files.pythonhosted.org/packages/9d/e0/578a79d433713e0a709917756301e8be3aa1f2c6e2cad4d29cefc3dc33c6/youconfigme-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4e32f4f90f6b9dc73109bccc18649257", "sha256": "2071882d3d007870835b42f44413fe38162efc76dc9a16569dbf76336ff5e2d0"}, "downloads": -1, "filename": "youconfigme-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4e32f4f90f6b9dc73109bccc18649257", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5225, "upload_time": "2020-03-05T22:23:52", "upload_time_iso_8601": "2020-03-05T22:23:52.418646Z", "url": "https://files.pythonhosted.org/packages/08/72/3e17e4349f9a198d370c5a01babb97687464c381d77a2c7055dca8a75c7a/youconfigme-0.3.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f5aac30da8e2c5c299c0a79e7f4b8b0f", "sha256": "ce455c1f5b9c0c0ff72552a21458aec9b376ec71ca5ffa827bd48065605a30dd"}, "downloads": -1, "filename": "youconfigme-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f5aac30da8e2c5c299c0a79e7f4b8b0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5281, "upload_time": "2020-03-23T21:10:47", "upload_time_iso_8601": "2020-03-23T21:10:47.536711Z", "url": "https://files.pythonhosted.org/packages/65/ec/11dd0e8dde72c8a021f434bdde6ad088bff6defcc5acd74531724833c3e3/youconfigme-0.4.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "4af9905b8e8b9c00bd37cd2d6e3e7677", "sha256": "518779c385af6096c78c01dbbd1d7061ff18999806777417392b587c654bd127"}, "downloads": -1, "filename": "youconfigme-0.5.2.tar.gz", "has_sig": false, "md5_digest": "4af9905b8e8b9c00bd37cd2d6e3e7677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5474, "upload_time": "2020-04-05T16:18:39", "upload_time_iso_8601": "2020-04-05T16:18:39.822850Z", "url": "https://files.pythonhosted.org/packages/2b/84/4a18e76e76327e201d01327b54ffedbad4e99eb6fe02461202c13f2512c3/youconfigme-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4af9905b8e8b9c00bd37cd2d6e3e7677", "sha256": "518779c385af6096c78c01dbbd1d7061ff18999806777417392b587c654bd127"}, "downloads": -1, "filename": "youconfigme-0.5.2.tar.gz", "has_sig": false, "md5_digest": "4af9905b8e8b9c00bd37cd2d6e3e7677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5474, "upload_time": "2020-04-05T16:18:39", "upload_time_iso_8601": "2020-04-05T16:18:39.822850Z", "url": "https://files.pythonhosted.org/packages/2b/84/4a18e76e76327e201d01327b54ffedbad4e99eb6fe02461202c13f2512c3/youconfigme-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:56 2020"}