{"info": {"author": "Derek Payton", "author_email": "derek.payton@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====================\ndjango-embedded-media\n=====================\n\n.. image:: https://travis-ci.org/dmpayton/django-embedded-media.png\n    :target: https://travis-ci.org/dmpayton/django-embedded-media\n\n:Author: `Derek Payton`_\n:Version: 0.1.0\n:License: `MIT`_\n\nEver run into a situation where it would just be *so incredibly handy* to be\nable to render inline CSS or JS in your Django form media?\n\nThis lets you do that.\n\nIt all started with ticket `#13978`_, which I championed for a while. However,\nI no longer think this is a good feature to have in Django. After using the\n`#13978`_ patch for a while, I've come to realize that it's just too damn easy\nto rely on it too much. No one wants to see a two-dozen line string of\njQueryfied JS in the middle of their Django form class.\n\nHowever, if you've got the need for spee^H^H^H^Hembedded media -- and you think\nyou're disciplined enough to not start writing all your CSS and JS as strings\nin your .py files -- then django-embedded-media makes it possible.\n\nInstallation\n============\n\nUse `pip`_, obviously::\n\n    $ pip install django-embedded-media\n\nUsage\n=====\n\nThere's no special configuration needed. It's a Django app, technically, but\nyou don't need to put it into INSTALLED_APPS. Just install the package and\nstart embedding your styles and scripts.\n\nWorks on forms:\n\n.. code:: python\n\n    >>> from django import forms\n    >>> import embedded_media as emb\n    >>>\n    >>> class MyForm(forms.Form):\n    ...     class Media:\n    ...         css = {'all': (emb.CSS('.mywidget { display: none; }'),)}\n    ...         js = (emb.JS('init_mywidget();'),)\n\n    >>> print MyForm.media\n    <style type=\"text/css\" media=\"all\">.mywidget { display: none; }</style>\n    <script type=\"text/javascript\">init_mywidget();</script>\n    >>>\n\nWorks on form widgets:\n\n.. code:: python\n\n    >>> from django import forms\n    >>> import embedded_media as emb\n    >>>\n    >>> class MyWidget(forms.TextInput):\n    ...     class Media:\n    ...         css = {'all': (emb.CSS('.mywidget { display: none; }'),)}\n    ...         js = (\n    ...             'whizbang.js',\n    ...             emb.JS('init_mywidget();'),\n    ...         )\n\n    >>> print MyWidget().media\n    <style type=\"text/css\" media=\"all\" >.mywidget { display: none; }</style>\n    <script type=\"text/javascript\" src=\"/static/whizbang.js\"></script>\n    <script type=\"text/javascript\">init_mywidget();</script>\n    >>>\n\nWorks as a dynamic media property:\n\n.. code:: python\n\n    >>> from django import forms\n    >>> import embedded_media as emb\n    >>>\n    >>> class MyForm(forms.Form):\n    ...     def _media(self):\n    ...         return Media(\n    ...             css={'all': (emb.CSS('.mywidget { display: none; }'),)},\n    ...             js=(emb.JS('init_mywidget();'),)\n    ...         )\n    ...     media = property(_media)\n\n    >>> print MyForm().media\n    <style type=\"text/css\" media=\"all\">.mywidget { display: none; }</style>\n    <script type=\"text/javascript\">init_mywidget();</script>\n    >>>\n\nTesting\n=======\n\nThe tests require `Django`_, `coverage`_, and `pep8`_, which are conveniently\nlisted in requirements.txt::\n\n    $ pip install -r requirements.txt\n    $ python setup.py test\n\n.. _Derek Payton: http://dmpayton.com/\n.. _MIT: https://github.com/dmpayton/django-embedded-media/blob/master/LICENSE\n.. _#13978: https://code.djangoproject.com/ticket/13978\n.. _pip: http://www.pip-installer.org/\n.. _Django: https://crate.io/packages/Django/\n.. _coverage: https://crate.io/packages/coverage/\n.. _pep8: https://crate.io/packages/pep8/", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/dmpayton/django-embedded-media/tarball/v0.1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmpayton/django-embedded-media", "keywords": "django media", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-embedded-media", "package_url": "https://pypi.org/project/django-embedded-media/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-embedded-media/", "project_urls": {"Download": "https://github.com/dmpayton/django-embedded-media/tarball/v0.1.0", "Homepage": "https://github.com/dmpayton/django-embedded-media"}, "release_url": "https://pypi.org/project/django-embedded-media/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Render inline CSS and JS in Django forms media.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/dmpayton/django-embedded-media\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/dmpayton/django-embedded-media.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20396dadad48a3c35461f4d0e3e8087f1de087b4/68747470733a2f2f7472617669732d63692e6f72672f646d706179746f6e2f646a616e676f2d656d6265646465642d6d656469612e706e67\"></a>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td><a href=\"http://dmpayton.com/\" rel=\"nofollow\">Derek Payton</a></td>\n</tr>\n<tr><th>Version:</th><td>0.1.0</td>\n</tr>\n<tr><th>License:</th><td><a href=\"https://github.com/dmpayton/django-embedded-media/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></td>\n</tr>\n</tbody>\n</table>\n<p>Ever run into a situation where it would just be <em>so incredibly handy</em> to be\nable to render inline CSS or JS in your Django form media?</p>\n<p>This lets you do that.</p>\n<p>It all started with ticket <a href=\"https://code.djangoproject.com/ticket/13978\" rel=\"nofollow\">#13978</a>, which I championed for a while. However,\nI no longer think this is a good feature to have in Django. After using the\n<a href=\"https://code.djangoproject.com/ticket/13978\" rel=\"nofollow\">#13978</a> patch for a while, I\u2019ve come to realize that it\u2019s just too damn easy\nto rely on it too much. No one wants to see a two-dozen line string of\njQueryfied JS in the middle of their Django form class.</p>\n<p>However, if you\u2019ve got the need for spee^H^H^H^Hembedded media \u2013 and you think\nyou\u2019re disciplined enough to not start writing all your CSS and JS as strings\nin your .py files \u2013 then django-embedded-media makes it possible.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>, obviously:</p>\n<pre>$ pip install django-embedded-media\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There\u2019s no special configuration needed. It\u2019s a Django app, technically, but\nyou don\u2019t need to put it into INSTALLED_APPS. Just install the package and\nstart embedding your styles and scripts.</p>\n<p>Works on forms:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">embedded_media</span> <span class=\"k\">as</span> <span class=\"nn\">emb</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">class</span> <span class=\"nc\">Media</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'all'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">emb</span><span class=\"o\">.</span><span class=\"n\">CSS</span><span class=\"p\">(</span><span class=\"s1\">'.mywidget { display: none; }'</span><span class=\"p\">),)}</span>\n<span class=\"o\">...</span>         <span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">emb</span><span class=\"o\">.</span><span class=\"n\">JS</span><span class=\"p\">(</span><span class=\"s1\">'init_mywidget();'</span><span class=\"p\">),)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">MyForm</span><span class=\"o\">.</span><span class=\"n\">media</span>\n<span class=\"o\">&lt;</span><span class=\"n\">style</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/css\"</span> <span class=\"n\">media</span><span class=\"o\">=</span><span class=\"s2\">\"all\"</span><span class=\"o\">&gt;.</span><span class=\"n\">mywidget</span> <span class=\"p\">{</span> <span class=\"n\">display</span><span class=\"p\">:</span> <span class=\"n\">none</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"o\">&lt;/</span><span class=\"n\">style</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">script</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/javascript\"</span><span class=\"o\">&gt;</span><span class=\"n\">init_mywidget</span><span class=\"p\">();</span><span class=\"o\">&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Works on form widgets:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">embedded_media</span> <span class=\"k\">as</span> <span class=\"nn\">emb</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">MyWidget</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">TextInput</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">class</span> <span class=\"nc\">Media</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'all'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">emb</span><span class=\"o\">.</span><span class=\"n\">CSS</span><span class=\"p\">(</span><span class=\"s1\">'.mywidget { display: none; }'</span><span class=\"p\">),)}</span>\n<span class=\"o\">...</span>         <span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>             <span class=\"s1\">'whizbang.js'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>             <span class=\"n\">emb</span><span class=\"o\">.</span><span class=\"n\">JS</span><span class=\"p\">(</span><span class=\"s1\">'init_mywidget();'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>         <span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">MyWidget</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">media</span>\n<span class=\"o\">&lt;</span><span class=\"n\">style</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/css\"</span> <span class=\"n\">media</span><span class=\"o\">=</span><span class=\"s2\">\"all\"</span> <span class=\"o\">&gt;.</span><span class=\"n\">mywidget</span> <span class=\"p\">{</span> <span class=\"n\">display</span><span class=\"p\">:</span> <span class=\"n\">none</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"o\">&lt;/</span><span class=\"n\">style</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">script</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/javascript\"</span> <span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s2\">\"/static/whizbang.js\"</span><span class=\"o\">&gt;&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">script</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/javascript\"</span><span class=\"o\">&gt;</span><span class=\"n\">init_mywidget</span><span class=\"p\">();</span><span class=\"o\">&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Works as a dynamic media property:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">embedded_media</span> <span class=\"k\">as</span> <span class=\"nn\">emb</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">_media</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"n\">Media</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>             <span class=\"n\">css</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'all'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">emb</span><span class=\"o\">.</span><span class=\"n\">CSS</span><span class=\"p\">(</span><span class=\"s1\">'.mywidget { display: none; }'</span><span class=\"p\">),)},</span>\n<span class=\"o\">...</span>             <span class=\"n\">js</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">emb</span><span class=\"o\">.</span><span class=\"n\">JS</span><span class=\"p\">(</span><span class=\"s1\">'init_mywidget();'</span><span class=\"p\">),)</span>\n<span class=\"o\">...</span>         <span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">media</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">_media</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">MyForm</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">media</span>\n<span class=\"o\">&lt;</span><span class=\"n\">style</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/css\"</span> <span class=\"n\">media</span><span class=\"o\">=</span><span class=\"s2\">\"all\"</span><span class=\"o\">&gt;.</span><span class=\"n\">mywidget</span> <span class=\"p\">{</span> <span class=\"n\">display</span><span class=\"p\">:</span> <span class=\"n\">none</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"o\">&lt;/</span><span class=\"n\">style</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">script</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/javascript\"</span><span class=\"o\">&gt;</span><span class=\"n\">init_mywidget</span><span class=\"p\">();</span><span class=\"o\">&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>The tests require <a href=\"https://crate.io/packages/Django/\" rel=\"nofollow\">Django</a>, <a href=\"https://crate.io/packages/coverage/\" rel=\"nofollow\">coverage</a>, and <a href=\"https://crate.io/packages/pep8/\" rel=\"nofollow\">pep8</a>, which are conveniently\nlisted in requirements.txt:</p>\n<pre>$ pip install -r requirements.txt\n$ python setup.py test\n</pre>\n</div>\n\n          </div>"}, "last_serial": 873239, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "039a95b375a2718796c3dfc552f9717d", "sha256": "299fcd173dae5e87f6cd7e94c3b8de4ada4e2beafe45783513b69281211f0eb5"}, "downloads": -1, "filename": "django-embedded-media-0.1.0.tar.gz", "has_sig": false, "md5_digest": "039a95b375a2718796c3dfc552f9717d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4875, "upload_time": "2013-09-24T22:09:47", "upload_time_iso_8601": "2013-09-24T22:09:47.741645Z", "url": "https://files.pythonhosted.org/packages/3a/1a/4c2899c91d5c7497e0e0d2f4d998ae10d5f031074970b47ec776070a4e70/django-embedded-media-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "039a95b375a2718796c3dfc552f9717d", "sha256": "299fcd173dae5e87f6cd7e94c3b8de4ada4e2beafe45783513b69281211f0eb5"}, "downloads": -1, "filename": "django-embedded-media-0.1.0.tar.gz", "has_sig": false, "md5_digest": "039a95b375a2718796c3dfc552f9717d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4875, "upload_time": "2013-09-24T22:09:47", "upload_time_iso_8601": "2013-09-24T22:09:47.741645Z", "url": "https://files.pythonhosted.org/packages/3a/1a/4c2899c91d5c7497e0e0d2f4d998ae10d5f031074970b47ec776070a4e70/django-embedded-media-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:22 2020"}