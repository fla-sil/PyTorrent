{"info": {"author": "Giuseppe De Marco", "author_email": "giuseppe.demarco@unical.it", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3"], "description": "# pySSHA-slapd\nPython hashlib generator born as a script to test OpenLDAP user passwords.\nIt supports salted:\n\n- md5\n- sha1\n- sha224\n- sha256\n- sha384\n- sha512\n\nIntroduction\n------------\npySSHA-slapd is a simple SSHA string encoder e checker that's quite easy to use:\n````\npython3 ssha.py -p slapdsecret\n{SSHA}omu7YHgg6_uqOIN_epZtfJtGo0ruwdSr \n````\nUsage\n````\nusage: ssha.py [-h] -p P [-s S] [-salt_size SALT_SIZE] [-c C] [-enc ENC] [-b]\n               [-prefixed] [-d D]\n\nUsage: python ssha.py -p Password[-c SSHA hash to check]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p P                  Password to encode\n  -s S                  Salt, 4 bytes in hex format, example \"fooo\": -s\n                        666f6f6f\n  -salt_size SALT_SIZE  salt lenght\n  -c C                  {SSHA} hash to check\n  -enc ENC              Encoder to use, example: sha1 sha224 sha256 sha384\n                        sha512\n  -b                    if {SSHA} hash is in base64 format\n  -prefixed             if suffixed or prefixed salt\n  -d D                  Debug level from 1 to 5\n\n````\n\nDependencies\n------------\nPython3 and hashlib\n\nUsage examples\n--------------\n\nYou can adopt a specified salt for hashing, in hex format:\n````\npython3 ssha.py -p slapdsecret -s 74be2629\n{SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp \n````\n\nVerify if a password is valid comparing it with a SSHA hash:\n````\npython3 ssha.py -c {SHA1}pPUGnEBCmIa+fJy6ZTS87eEg+ylVYDqcrs6oHA== -p slapdsecret \n````\n\nSame as previous but ssha hash is in base64 format (like ldapsearch output):\n````\npython3 ssha.py -c e1NIQTF9dzVDSkN3TlFrNDROalRZemNNWk5LYkU2QnU5MHZpWXA= -b -p slapdsecret -salt_size 4\n````\n\nSame as the previous but with maximum debug level\n````\npython3 ssha.py -c e1NIQTF9dzVDSkN3TlFrNDROalRZemNNWk5LYkU2QnU5MHZpWXA= -b -p slapdsecret -d 3 -salt_size 4\n\n[sshaSplit debug]\n\tssha_password: {SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp \n\tsalt: 74be2629 \n\tpayload: 0b0350938e0d8d363370c64d29b13a06ef\n\n[checkPassword debug]\n \tssha_password:    {SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp\n\tcreated_password: {SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp\n\tsalt: 74be2629\n\tpassword: slapdsecret\n\n{SSHA} Check is valid: True\n````\n\nselect your preferred encoder\n````\npython3 ssha.py -p slapdsecret -s 74be2629 -enc sha512\n{SHA512}4gm2Ep0Nklb8pkss9zIs+t6/BGaGn2QYphl3UeAYuBBNW/hj8glu4jUb7JPb4LVWdCv+g0WoyYUB9VWVajQpjHS+Jik= \n````\n\nwithout salt\n````\npython3 ssha.py -p ciao -d 3 -salt_size 0  -enc sha512\n````\n\nOpenLDAP use a 8byte lenght salt, you can also change this value with **-salt_size** option.\n\nResources\n---------\n- https://tools.ietf.org/html/rfc3174\n- https://github.com/openldap/openldap/blob/master/libraries/liblutil/sha1.c\n- https://github.com/openldap/openldap/blob/master/contrib/slapd-modules/passwd/sha2/README\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peppelinux/pySSHA", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pySSHA", "package_url": "https://pypi.org/project/pySSHA/", "platform": "", "project_url": "https://pypi.org/project/pySSHA/", "project_urls": {"Homepage": "https://github.com/peppelinux/pySSHA"}, "release_url": "https://pypi.org/project/pySSHA/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Create and verify common LDAP passwords and hashes", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pySSHA-slapd</h1>\n<p>Python hashlib generator born as a script to test OpenLDAP user passwords.\nIt supports salted:</p>\n<ul>\n<li>md5</li>\n<li>sha1</li>\n<li>sha224</li>\n<li>sha256</li>\n<li>sha384</li>\n<li>sha512</li>\n</ul>\n<h2>Introduction</h2>\n<p>pySSHA-slapd is a simple SSHA string encoder e checker that's quite easy to use:</p>\n<pre><code>python3 ssha.py -p slapdsecret\n{SSHA}omu7YHgg6_uqOIN_epZtfJtGo0ruwdSr \n</code></pre>\n<p>Usage</p>\n<pre><code>usage: ssha.py [-h] -p P [-s S] [-salt_size SALT_SIZE] [-c C] [-enc ENC] [-b]\n               [-prefixed] [-d D]\n\nUsage: python ssha.py -p Password[-c SSHA hash to check]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p P                  Password to encode\n  -s S                  Salt, 4 bytes in hex format, example \"fooo\": -s\n                        666f6f6f\n  -salt_size SALT_SIZE  salt lenght\n  -c C                  {SSHA} hash to check\n  -enc ENC              Encoder to use, example: sha1 sha224 sha256 sha384\n                        sha512\n  -b                    if {SSHA} hash is in base64 format\n  -prefixed             if suffixed or prefixed salt\n  -d D                  Debug level from 1 to 5\n\n</code></pre>\n<h2>Dependencies</h2>\n<p>Python3 and hashlib</p>\n<h2>Usage examples</h2>\n<p>You can adopt a specified salt for hashing, in hex format:</p>\n<pre><code>python3 ssha.py -p slapdsecret -s 74be2629\n{SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp \n</code></pre>\n<p>Verify if a password is valid comparing it with a SSHA hash:</p>\n<pre><code>python3 ssha.py -c {SHA1}pPUGnEBCmIa+fJy6ZTS87eEg+ylVYDqcrs6oHA== -p slapdsecret \n</code></pre>\n<p>Same as previous but ssha hash is in base64 format (like ldapsearch output):</p>\n<pre><code>python3 ssha.py -c e1NIQTF9dzVDSkN3TlFrNDROalRZemNNWk5LYkU2QnU5MHZpWXA= -b -p slapdsecret -salt_size 4\n</code></pre>\n<p>Same as the previous but with maximum debug level</p>\n<pre><code>python3 ssha.py -c e1NIQTF9dzVDSkN3TlFrNDROalRZemNNWk5LYkU2QnU5MHZpWXA= -b -p slapdsecret -d 3 -salt_size 4\n\n[sshaSplit debug]\n\tssha_password: {SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp \n\tsalt: 74be2629 \n\tpayload: 0b0350938e0d8d363370c64d29b13a06ef\n\n[checkPassword debug]\n \tssha_password:    {SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp\n\tcreated_password: {SSHA}w5CJCwNQk44NjTYzcMZNKbE6Bu90viYp\n\tsalt: 74be2629\n\tpassword: slapdsecret\n\n{SSHA} Check is valid: True\n</code></pre>\n<p>select your preferred encoder</p>\n<pre><code>python3 ssha.py -p slapdsecret -s 74be2629 -enc sha512\n{SHA512}4gm2Ep0Nklb8pkss9zIs+t6/BGaGn2QYphl3UeAYuBBNW/hj8glu4jUb7JPb4LVWdCv+g0WoyYUB9VWVajQpjHS+Jik= \n</code></pre>\n<p>without salt</p>\n<pre><code>python3 ssha.py -p ciao -d 3 -salt_size 0  -enc sha512\n</code></pre>\n<p>OpenLDAP use a 8byte lenght salt, you can also change this value with <strong>-salt_size</strong> option.</p>\n<h2>Resources</h2>\n<ul>\n<li><a href=\"https://tools.ietf.org/html/rfc3174\" rel=\"nofollow\">https://tools.ietf.org/html/rfc3174</a></li>\n<li><a href=\"https://github.com/openldap/openldap/blob/master/libraries/liblutil/sha1.c\" rel=\"nofollow\">https://github.com/openldap/openldap/blob/master/libraries/liblutil/sha1.c</a></li>\n<li><a href=\"https://github.com/openldap/openldap/blob/master/contrib/slapd-modules/passwd/sha2/README\" rel=\"nofollow\">https://github.com/openldap/openldap/blob/master/contrib/slapd-modules/passwd/sha2/README</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6609920, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "78c0a3c4cb47e43272c47d9a72a2ae79", "sha256": "95cc0c66d7145f97ca955157f4402baa4351dbc52b4f4bbe8273113578cf3f8c"}, "downloads": -1, "filename": "pySSHA-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "78c0a3c4cb47e43272c47d9a72a2ae79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9474, "upload_time": "2019-02-09T00:10:57", "upload_time_iso_8601": "2019-02-09T00:10:57.589166Z", "url": "https://files.pythonhosted.org/packages/94/57/931560b74d77ee93b29b437193b553d6127a7b58ec362adede0e23781750/pySSHA-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34b411b078777794640e305b29fd26b9", "sha256": "450230d3874fe815ede674995e041fe90c2db7295aaa0183d7fca6f0c0003cc0"}, "downloads": -1, "filename": "pySSHA-0.6.tar.gz", "has_sig": false, "md5_digest": "34b411b078777794640e305b29fd26b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4429, "upload_time": "2019-02-09T00:10:59", "upload_time_iso_8601": "2019-02-09T00:10:59.810258Z", "url": "https://files.pythonhosted.org/packages/59/78/c4a32ca036109db745e7a7108d4d0621fe812cbb69c14f0dbfe83d54b3c6/pySSHA-0.6.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "5b916c932076d481b8a64f3e7a00341e", "sha256": "f0bdb0d8bd5fb36d01ef7d47a4658ce57133df234c0e6b5dd8efefb78856e59c"}, "downloads": -1, "filename": "pySSHA-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5b916c932076d481b8a64f3e7a00341e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13656, "upload_time": "2020-02-01T17:06:39", "upload_time_iso_8601": "2020-02-01T17:06:39.998765Z", "url": "https://files.pythonhosted.org/packages/bd/c0/ba6a08cd8ba45432b638fa8d18d7284d950201f4e14288edaa15963ed9a1/pySSHA-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed6ca68ed8420bc7d0a19e3c26e49446", "sha256": "6749d3f62e8d8860b5dfce09edc14c8c1072ad86a8013eb09213aa1bcb4d3ffb"}, "downloads": -1, "filename": "pySSHA-0.8.tar.gz", "has_sig": false, "md5_digest": "ed6ca68ed8420bc7d0a19e3c26e49446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4561, "upload_time": "2020-02-01T17:06:41", "upload_time_iso_8601": "2020-02-01T17:06:41.315576Z", "url": "https://files.pythonhosted.org/packages/06/e5/a2fde628627357aa1fb5e52d5c023d6da5a59f76dcf66d35827611c0e1da/pySSHA-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "56d171fb80ca8e9faff1aa3edfe83b34", "sha256": "4261fa9c5b1c9bc215ea806d1392883cdaa528e0e1036004905764c40b0568c5"}, "downloads": -1, "filename": "pySSHA-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56d171fb80ca8e9faff1aa3edfe83b34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14909, "upload_time": "2020-02-01T17:08:54", "upload_time_iso_8601": "2020-02-01T17:08:54.235384Z", "url": "https://files.pythonhosted.org/packages/53/be/c152b7a9e3bd2ccd5dc6d39699b2957f281642c18cd5e4f31ec0ab84c50f/pySSHA-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6027bf53114831fc51982a5153c87fff", "sha256": "df20472e9e6e5e3114e088260498210abf7bce4713e90cd82c05f36e530203ff"}, "downloads": -1, "filename": "pySSHA-0.8.1.tar.gz", "has_sig": false, "md5_digest": "6027bf53114831fc51982a5153c87fff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4888, "upload_time": "2020-02-01T17:08:55", "upload_time_iso_8601": "2020-02-01T17:08:55.771572Z", "url": "https://files.pythonhosted.org/packages/d0/bc/e5f8869b00e5fdefbb3361f395f23df9af44ade9792a005592287b2a7dfe/pySSHA-0.8.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "36cb91b4a184c6e19f5cee6b86a23c57", "sha256": "08cbe77d9d7e5349dd5be41cdeb3b4e3b7a76609e7350ca4208dbcabb6f6c14e"}, "downloads": -1, "filename": "pySSHA-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36cb91b4a184c6e19f5cee6b86a23c57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8446, "upload_time": "2020-02-11T14:39:58", "upload_time_iso_8601": "2020-02-11T14:39:58.058784Z", "url": "https://files.pythonhosted.org/packages/48/e1/77f120174098c4f1f0345182ffadb5f0327f142bf32e12ea920f40def2f6/pySSHA-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fe78d15caf5de3cf2530d7f56eabaff", "sha256": "88b3f53e8328de358d12015fadd31428db6e0dac33019a505aa0e44455e62095"}, "downloads": -1, "filename": "pySSHA-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8fe78d15caf5de3cf2530d7f56eabaff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5284, "upload_time": "2020-02-11T14:39:59", "upload_time_iso_8601": "2020-02-11T14:39:59.457049Z", "url": "https://files.pythonhosted.org/packages/98/4d/b2b41a2a035d4d92baa00140526485f2c72a67dcd3a10d1ec1e50d1553d3/pySSHA-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36cb91b4a184c6e19f5cee6b86a23c57", "sha256": "08cbe77d9d7e5349dd5be41cdeb3b4e3b7a76609e7350ca4208dbcabb6f6c14e"}, "downloads": -1, "filename": "pySSHA-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36cb91b4a184c6e19f5cee6b86a23c57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8446, "upload_time": "2020-02-11T14:39:58", "upload_time_iso_8601": "2020-02-11T14:39:58.058784Z", "url": "https://files.pythonhosted.org/packages/48/e1/77f120174098c4f1f0345182ffadb5f0327f142bf32e12ea920f40def2f6/pySSHA-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fe78d15caf5de3cf2530d7f56eabaff", "sha256": "88b3f53e8328de358d12015fadd31428db6e0dac33019a505aa0e44455e62095"}, "downloads": -1, "filename": "pySSHA-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8fe78d15caf5de3cf2530d7f56eabaff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5284, "upload_time": "2020-02-11T14:39:59", "upload_time_iso_8601": "2020-02-11T14:39:59.457049Z", "url": "https://files.pythonhosted.org/packages/98/4d/b2b41a2a035d4d92baa00140526485f2c72a67dcd3a10d1ec1e50d1553d3/pySSHA-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:05 2020"}