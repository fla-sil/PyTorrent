{"info": {"author": "Jason Cox", "author_email": "jason@jasonacox.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# TuyaPower - PyPi Module\nAuthor: Jason A. Cox \nhttps://github.com/jasonacox/tuyapower\n\n# Description\nPython module to pull power and state data from Tuya WiFi smart devices.  _Tested on RaspberryPi, Linux, Windows 10 and MacOS._ \n\n# Preparation\nThis module requires: pycrypto, pytuya, Crypto and pyaes.\n\n```bash\n sudo apt-get install python-crypto python-pip\t\t\n pip install pycrypto\n pip install pytuya\n # pip install Crypto\t\t\n # pip install pyaes\t\t\n```\n# Functions\n* deviceInfo - Poll device and return on, w, mA, V and err data.\n    ```python\n    (on, w, mA, V, err) = tuyapower.deviceInfo(PLUGID, PLUGIP, PLUGKEY, PLUGVERS)\n    ```\n* devicePrint - Poll device and print formatted output to stdout.\n    ```python\n    tuyapower.devicePrint(PLUGID, PLUGIP, PLUGKEY, PLUGVERS)\n    ```\n* deviceJSON - Poll device and return JSON formatted details.\n    ```python\n    dataJSON = tuyapower.deviceJSON(PLUGID, PLUGIP, PLUGKEY, PLUGVERS)\n    ```\n* deviceScan(verbose) - Scans network for smart plug devices and return dictionary of devices and power data.\n    ```python\n    verbose = False\n    devices = tuyapower.deviceScan(verbose)\n    ```\n* scan() - This is a shortcut for deviceScan() that prints formatted output to stdout for UDP ports 6666 and 6667\n\n## Parameters:\n* PLUGID = Device ID e.g. 01234567891234567890\n* PLUGIP = Device IP Address e.g. 10.0.1.99\n* PLUGKEY = Device Key e.g. 0123456789abcdef\n* PLUGVERS = Version of Protocol 3.1 or 3.3\n* verbose = Print more details - True or False (default is False)\n\n## Response Data: \n* on = Switch state - true or false\n* w = Wattage \n* mA = milliamps \n* V = Voltage \n* err = Error message or OK\n* devices = Dictionary of all devices found with power data if available\n\nNote: If error occurs, on will be set to false, w, mA and V will be set to -99.0.\n\n# Example Usage:\n```python\n\n# Poll a Single Devices\nimport tuyapower\n\nPLUGID = '01234567891234567890'\nPLUGIP = '10.0.1.99'\nPLUGKEY = '0123456789abcdef'\nPLUGVERS = '3.1'\n\n(on, w, mA, V, err) = tuyapower.deviceInfo(PLUGID,PLUGIP,PLUGKEY,PLUGVERS)\n\n# Scan Network for All Devices\n# To see output on stdout set verbose True\ntuyapower.deviceScan(True)\nScanning on UDP port 6666 for devices...\n\nFOUND Device [Valid payload]: 10.0.1.100\n    ID = 01234567891234567890, Key = 0123456789abcdef, Version = 3.1\n    Stats: on=True, W=6.0, mA=54.0, V=121.1 [OK]\nFOUND Device [Valid payload]: 10.0.1.200\n    ID = 01234567891234567891, Key = 0123456789abcdea, Version = 3.1\n    Stats: on=True, W=-99, mA=-99, V=-99 [Power data unavailable]\n\nScan Complete!  Found 2 devices.\n\n# Scan the network and unpack the response \ndevices = tuyapower.deviceScan()\n    for ip in devices:\n        id = devices[ip]['gwId']\n        key = devices[ip]['productKey']\n        vers = devices[ip]['version']\n        (on, w, mA, V, err) = deviceInfo(id, ip, key, vers)\n        print(\"Device at %s: ID %s, state=%s, W=%s, mA=%s, V=%s [%s]\"%(ip,id,on,w,mA,V,err))\n```\n\n### Scan Tool \nThe function `tuyapower.scan()` will listen to your local network (UDP 6666 and 6667) and identify Tuya devices broadcasting their IP, Device ID, productKey and Version and will print that and their stats to stdout.  This can help you get a list of compatible devices on your network. The `tuyapower.deviceScan()` function returns all found devices and their stats (via dictionary result).\n\nYou can run the scanner from the command line using this:\n```bash\npython -m tuyapower\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jasonacox/tuyapower", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tuyapower", "package_url": "https://pypi.org/project/tuyapower/", "platform": "", "project_url": "https://pypi.org/project/tuyapower/", "project_urls": {"Homepage": "https://github.com/jasonacox/tuyapower"}, "release_url": "https://pypi.org/project/tuyapower/0.0.19/", "requires_dist": null, "requires_python": "", "summary": "Pull power and state data from Tuya WiFi smart devices", "version": "0.0.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TuyaPower - PyPi Module</h1>\n<p>Author: Jason A. Cox\n<a href=\"https://github.com/jasonacox/tuyapower\" rel=\"nofollow\">https://github.com/jasonacox/tuyapower</a></p>\n<h1>Description</h1>\n<p>Python module to pull power and state data from Tuya WiFi smart devices.  <em>Tested on RaspberryPi, Linux, Windows 10 and MacOS.</em></p>\n<h1>Preparation</h1>\n<p>This module requires: pycrypto, pytuya, Crypto and pyaes.</p>\n<pre> sudo apt-get install python-crypto python-pip\t\t\n pip install pycrypto\n pip install pytuya\n <span class=\"c1\"># pip install Crypto\t\t</span>\n <span class=\"c1\"># pip install pyaes\t\t</span>\n</pre>\n<h1>Functions</h1>\n<ul>\n<li>deviceInfo - Poll device and return on, w, mA, V and err data.\n<pre><span class=\"p\">(</span><span class=\"n\">on</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">mA</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">deviceInfo</span><span class=\"p\">(</span><span class=\"n\">PLUGID</span><span class=\"p\">,</span> <span class=\"n\">PLUGIP</span><span class=\"p\">,</span> <span class=\"n\">PLUGKEY</span><span class=\"p\">,</span> <span class=\"n\">PLUGVERS</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>devicePrint - Poll device and print formatted output to stdout.\n<pre><span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">devicePrint</span><span class=\"p\">(</span><span class=\"n\">PLUGID</span><span class=\"p\">,</span> <span class=\"n\">PLUGIP</span><span class=\"p\">,</span> <span class=\"n\">PLUGKEY</span><span class=\"p\">,</span> <span class=\"n\">PLUGVERS</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>deviceJSON - Poll device and return JSON formatted details.\n<pre><span class=\"n\">dataJSON</span> <span class=\"o\">=</span> <span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">deviceJSON</span><span class=\"p\">(</span><span class=\"n\">PLUGID</span><span class=\"p\">,</span> <span class=\"n\">PLUGIP</span><span class=\"p\">,</span> <span class=\"n\">PLUGKEY</span><span class=\"p\">,</span> <span class=\"n\">PLUGVERS</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>deviceScan(verbose) - Scans network for smart plug devices and return dictionary of devices and power data.\n<pre><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">deviceScan</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>scan() - This is a shortcut for deviceScan() that prints formatted output to stdout for UDP ports 6666 and 6667</li>\n</ul>\n<h2>Parameters:</h2>\n<ul>\n<li>PLUGID = Device ID e.g. 01234567891234567890</li>\n<li>PLUGIP = Device IP Address e.g. 10.0.1.99</li>\n<li>PLUGKEY = Device Key e.g. 0123456789abcdef</li>\n<li>PLUGVERS = Version of Protocol 3.1 or 3.3</li>\n<li>verbose = Print more details - True or False (default is False)</li>\n</ul>\n<h2>Response Data:</h2>\n<ul>\n<li>on = Switch state - true or false</li>\n<li>w = Wattage</li>\n<li>mA = milliamps</li>\n<li>V = Voltage</li>\n<li>err = Error message or OK</li>\n<li>devices = Dictionary of all devices found with power data if available</li>\n</ul>\n<p>Note: If error occurs, on will be set to false, w, mA and V will be set to -99.0.</p>\n<h1>Example Usage:</h1>\n<pre><span class=\"c1\"># Poll a Single Devices</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tuyapower</span>\n\n<span class=\"n\">PLUGID</span> <span class=\"o\">=</span> <span class=\"s1\">'01234567891234567890'</span>\n<span class=\"n\">PLUGIP</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0.1.99'</span>\n<span class=\"n\">PLUGKEY</span> <span class=\"o\">=</span> <span class=\"s1\">'0123456789abcdef'</span>\n<span class=\"n\">PLUGVERS</span> <span class=\"o\">=</span> <span class=\"s1\">'3.1'</span>\n\n<span class=\"p\">(</span><span class=\"n\">on</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">mA</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">deviceInfo</span><span class=\"p\">(</span><span class=\"n\">PLUGID</span><span class=\"p\">,</span><span class=\"n\">PLUGIP</span><span class=\"p\">,</span><span class=\"n\">PLUGKEY</span><span class=\"p\">,</span><span class=\"n\">PLUGVERS</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Scan Network for All Devices</span>\n<span class=\"c1\"># To see output on stdout set verbose True</span>\n<span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">deviceScan</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">Scanning</span> <span class=\"n\">on</span> <span class=\"n\">UDP</span> <span class=\"n\">port</span> <span class=\"mi\">6666</span> <span class=\"k\">for</span> <span class=\"n\">devices</span><span class=\"o\">...</span>\n\n<span class=\"n\">FOUND</span> <span class=\"n\">Device</span> <span class=\"p\">[</span><span class=\"n\">Valid</span> <span class=\"n\">payload</span><span class=\"p\">]:</span> <span class=\"mf\">10.0</span><span class=\"o\">.</span><span class=\"mf\">1.100</span>\n    <span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"mi\">01234567891234567890</span><span class=\"p\">,</span> <span class=\"n\">Key</span> <span class=\"o\">=</span> <span class=\"mi\">0123456789</span><span class=\"n\">abcdef</span><span class=\"p\">,</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mf\">3.1</span>\n    <span class=\"n\">Stats</span><span class=\"p\">:</span> <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"o\">=</span><span class=\"mf\">6.0</span><span class=\"p\">,</span> <span class=\"n\">mA</span><span class=\"o\">=</span><span class=\"mf\">54.0</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"o\">=</span><span class=\"mf\">121.1</span> <span class=\"p\">[</span><span class=\"n\">OK</span><span class=\"p\">]</span>\n<span class=\"n\">FOUND</span> <span class=\"n\">Device</span> <span class=\"p\">[</span><span class=\"n\">Valid</span> <span class=\"n\">payload</span><span class=\"p\">]:</span> <span class=\"mf\">10.0</span><span class=\"o\">.</span><span class=\"mf\">1.200</span>\n    <span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"mi\">01234567891234567891</span><span class=\"p\">,</span> <span class=\"n\">Key</span> <span class=\"o\">=</span> <span class=\"mi\">0123456789</span><span class=\"n\">abcdea</span><span class=\"p\">,</span> <span class=\"n\">Version</span> <span class=\"o\">=</span> <span class=\"mf\">3.1</span>\n    <span class=\"n\">Stats</span><span class=\"p\">:</span> <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"o\">=-</span><span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"n\">mA</span><span class=\"o\">=-</span><span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"o\">=-</span><span class=\"mi\">99</span> <span class=\"p\">[</span><span class=\"n\">Power</span> <span class=\"n\">data</span> <span class=\"n\">unavailable</span><span class=\"p\">]</span>\n\n<span class=\"n\">Scan</span> <span class=\"n\">Complete</span><span class=\"err\">!</span>  <span class=\"n\">Found</span> <span class=\"mi\">2</span> <span class=\"n\">devices</span><span class=\"o\">.</span>\n\n<span class=\"c1\"># Scan the network and unpack the response </span>\n<span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">tuyapower</span><span class=\"o\">.</span><span class=\"n\">deviceScan</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">ip</span> <span class=\"ow\">in</span> <span class=\"n\">devices</span><span class=\"p\">:</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"p\">[</span><span class=\"n\">ip</span><span class=\"p\">][</span><span class=\"s1\">'gwId'</span><span class=\"p\">]</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"p\">[</span><span class=\"n\">ip</span><span class=\"p\">][</span><span class=\"s1\">'productKey'</span><span class=\"p\">]</span>\n        <span class=\"n\">vers</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"p\">[</span><span class=\"n\">ip</span><span class=\"p\">][</span><span class=\"s1\">'version'</span><span class=\"p\">]</span>\n        <span class=\"p\">(</span><span class=\"n\">on</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">mA</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">deviceInfo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">vers</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Device at </span><span class=\"si\">%s</span><span class=\"s2\">: ID </span><span class=\"si\">%s</span><span class=\"s2\">, state=</span><span class=\"si\">%s</span><span class=\"s2\">, W=</span><span class=\"si\">%s</span><span class=\"s2\">, mA=</span><span class=\"si\">%s</span><span class=\"s2\">, V=</span><span class=\"si\">%s</span><span class=\"s2\"> [</span><span class=\"si\">%s</span><span class=\"s2\">]\"</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"nb\">id</span><span class=\"p\">,</span><span class=\"n\">on</span><span class=\"p\">,</span><span class=\"n\">w</span><span class=\"p\">,</span><span class=\"n\">mA</span><span class=\"p\">,</span><span class=\"n\">V</span><span class=\"p\">,</span><span class=\"n\">err</span><span class=\"p\">))</span>\n</pre>\n<h3>Scan Tool</h3>\n<p>The function <code>tuyapower.scan()</code> will listen to your local network (UDP 6666 and 6667) and identify Tuya devices broadcasting their IP, Device ID, productKey and Version and will print that and their stats to stdout.  This can help you get a list of compatible devices on your network. The <code>tuyapower.deviceScan()</code> function returns all found devices and their stats (via dictionary result).</p>\n<p>You can run the scanner from the command line using this:</p>\n<pre>python -m tuyapower\n</pre>\n\n          </div>"}, "last_serial": 6596217, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "3b455f299038ed55f880f58586834044", "sha256": "9f694497fc64364bac2cd61fa756ac4d4ab23aac03cbdfa6e95b1d4311dcb969"}, "downloads": -1, "filename": "tuyapower-0.0.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3b455f299038ed55f880f58586834044", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6219, "upload_time": "2020-02-01T19:55:41", "upload_time_iso_8601": "2020-02-01T19:55:41.443360Z", "url": "https://files.pythonhosted.org/packages/ae/28/419bfc0c0ccd720b6ef5ee9cc79b16af81e75b19662c1378ac2a2fe5587d/tuyapower-0.0.10-py2.py3-none-any.whl", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "f379429dbba885aef1f17ee213b8616e", "sha256": "038ef296db9ac96d91b92664070498155a59b24ad7611eb9951d2958a5ea2a6b"}, "downloads": -1, "filename": "tuyapower-0.0.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f379429dbba885aef1f17ee213b8616e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6866, "upload_time": "2020-02-02T01:07:30", "upload_time_iso_8601": "2020-02-02T01:07:30.008207Z", "url": "https://files.pythonhosted.org/packages/51/5b/92c01af7b4fbf8ded16880f622721cba1eb4bc0df989a1737752a5e8c2b7/tuyapower-0.0.11-py2.py3-none-any.whl", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "be4c5e06383eee01a77720688d5f144a", "sha256": "906eb7e5a65529cbef4585e85671bd2fbc666a0a24fdd6f6d195e55a9621fe85"}, "downloads": -1, "filename": "tuyapower-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be4c5e06383eee01a77720688d5f144a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6880, "upload_time": "2020-02-02T01:58:20", "upload_time_iso_8601": "2020-02-02T01:58:20.070331Z", "url": "https://files.pythonhosted.org/packages/fe/01/449aedd91a881e854d2ce99992b514b0e29d2d6efeac4d6879ab34e0e900/tuyapower-0.0.12-py2.py3-none-any.whl", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "811538ffd4900012a5939a071d69ba32", "sha256": "7e32093451f31ae5b5c7e017c730d4fda975a9ec01fa897eeb28fedfab3323e4"}, "downloads": -1, "filename": "tuyapower-0.0.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "811538ffd4900012a5939a071d69ba32", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6911, "upload_time": "2020-02-02T02:48:50", "upload_time_iso_8601": "2020-02-02T02:48:50.330810Z", "url": "https://files.pythonhosted.org/packages/89/f1/8a1b1e206a4331e3c11d5a3cb792564386760a1fe8fa38528db6b9140970/tuyapower-0.0.14-py2.py3-none-any.whl", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "dbb66f0e4df07f8ef0cb9abb7a355989", "sha256": "0b4e1c3fc49051f6eac6877a622c72471d9ecb34151420b9682bc9a8ac73a431"}, "downloads": -1, "filename": "tuyapower-0.0.15-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dbb66f0e4df07f8ef0cb9abb7a355989", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7264, "upload_time": "2020-02-08T07:46:03", "upload_time_iso_8601": "2020-02-08T07:46:03.685854Z", "url": "https://files.pythonhosted.org/packages/e5/ad/f9059b3dd81d567c9f6cc803f4e8652d66540047acf8698a9d9695e4357b/tuyapower-0.0.15-py2.py3-none-any.whl", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "86b64df4df0ae0a7f62b2f00e60dd821", "sha256": "c2a45e3ee813aec835a834ca3ca433250efeb530a23d5b223f46cf1a2ff7f07a"}, "downloads": -1, "filename": "tuyapower-0.0.16-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "86b64df4df0ae0a7f62b2f00e60dd821", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7664, "upload_time": "2020-02-09T01:16:16", "upload_time_iso_8601": "2020-02-09T01:16:16.322266Z", "url": "https://files.pythonhosted.org/packages/da/dd/8e1ba099a8f64f0b4b7c2cd91358688902c2d1c66ab8b78cb765d538cf27/tuyapower-0.0.16-py2.py3-none-any.whl", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "3691975a8d22347c1ca9cdd8c42121b9", "sha256": "63d5d36ef198b8fbe420869ed376aa44d2d027fb22864a04b8412e1b4ec82b76"}, "downloads": -1, "filename": "tuyapower-0.0.17-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3691975a8d22347c1ca9cdd8c42121b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7744, "upload_time": "2020-02-09T02:41:14", "upload_time_iso_8601": "2020-02-09T02:41:14.579479Z", "url": "https://files.pythonhosted.org/packages/49/c8/7b45f2d4919955808e504156da7d8cd537123f9777a7b8c935a469951ab7/tuyapower-0.0.17-py2.py3-none-any.whl", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "fb07402a5ca9f12aba1801ede69e186c", "sha256": "f07e68575a29f713a38413bfc5cf1444a9346eab6ea45e29d80faf4dfac06a15"}, "downloads": -1, "filename": "tuyapower-0.0.18-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb07402a5ca9f12aba1801ede69e186c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7699, "upload_time": "2020-02-09T03:13:54", "upload_time_iso_8601": "2020-02-09T03:13:54.986833Z", "url": "https://files.pythonhosted.org/packages/5e/6e/be162e81b14a99a3fc65cb5943912fa251ea613ebeb38733db7f037cc5fd/tuyapower-0.0.18-py2.py3-none-any.whl", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "c0f1be4e919e3776052844c7f0e2c1d7", "sha256": "b54971a7b4858513a9824c3f961974adea648c06e2760ce479936e6d668923b5"}, "downloads": -1, "filename": "tuyapower-0.0.19-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0f1be4e919e3776052844c7f0e2c1d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7702, "upload_time": "2020-02-09T03:17:53", "upload_time_iso_8601": "2020-02-09T03:17:53.887137Z", "url": "https://files.pythonhosted.org/packages/12/8a/d184555afffa7178c6fabfb5a9d71eda4a946401f1e781034b143f0a945a/tuyapower-0.0.19-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "93ad0fbf43dd48289f4dd5e03111f353", "sha256": "916fca868ab17c59d27414b3cf7b77cc1d76befe2d2f8a7c504f30eaeef35fe9"}, "downloads": -1, "filename": "tuyapower-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "93ad0fbf43dd48289f4dd5e03111f353", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 2459, "upload_time": "2019-10-13T00:36:33", "upload_time_iso_8601": "2019-10-13T00:36:33.149519Z", "url": "https://files.pythonhosted.org/packages/e7/30/365f130ae2cb11670c8277b8fb379894e8493bfe04cc41b6dfe0369ce312/tuyapower-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88a27f165fe425a43f3d787f9250fb16", "sha256": "92eb9be651b70cd8fc5d42eb04f05f8782a3d802d5bcc79c8ddeb86386e2ff35"}, "downloads": -1, "filename": "tuyapower-0.0.2.tar.gz", "has_sig": false, "md5_digest": "88a27f165fe425a43f3d787f9250fb16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 1576, "upload_time": "2019-10-13T00:36:34", "upload_time_iso_8601": "2019-10-13T00:36:34.650321Z", "url": "https://files.pythonhosted.org/packages/44/3a/e9c887a741bcdd610961d41e2fe29bccf17ed32626d555fccae9db8e27b3/tuyapower-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "103ec0000ed9a77d3538e2f9b46edc27", "sha256": "407ae94d68953f01fd1ab4a300cb48c2e799c4fed55ed1c2df92ba5a856d00d8"}, "downloads": -1, "filename": "tuyapower-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "103ec0000ed9a77d3538e2f9b46edc27", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2452, "upload_time": "2019-10-13T00:53:27", "upload_time_iso_8601": "2019-10-13T00:53:27.117718Z", "url": "https://files.pythonhosted.org/packages/ee/a0/8674467a05dcee9a38dc9761b24e9f568d2a5ae7d7432c0b480c2754548d/tuyapower-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "82521c0572b5c203501a2fc50b829de3", "sha256": "6cea5e33db27908ec35ce3097b60f7905ae609c1e28bc6249585bbd4b785a8ed"}, "downloads": -1, "filename": "tuyapower-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "82521c0572b5c203501a2fc50b829de3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3851, "upload_time": "2019-10-13T01:15:23", "upload_time_iso_8601": "2019-10-13T01:15:23.014362Z", "url": "https://files.pythonhosted.org/packages/b3/cc/074edf128190e314620debec08c6686f59c8ed58f4129d4e041e03043d94/tuyapower-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5d291f2b1ecaa401b38d545da1d66e63", "sha256": "25e2236c06bfbed5520d111a95381d03f2a9c5b6e46af320e2ba3c02da6f2e8a"}, "downloads": -1, "filename": "tuyapower-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5d291f2b1ecaa401b38d545da1d66e63", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3851, "upload_time": "2019-10-13T01:42:14", "upload_time_iso_8601": "2019-10-13T01:42:14.139536Z", "url": "https://files.pythonhosted.org/packages/5e/26/034312137cdea957727bf3db5e83c898232c0feb9d05b47befaa46e96a77/tuyapower-0.0.5-py2.py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "5a7a6764fb026fb6fb1eb13c49b52993", "sha256": "31aa1fac275d741b34f10b2efb93417d8104fed8bd2d27da5fd4080927a22021"}, "downloads": -1, "filename": "tuyapower-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a7a6764fb026fb6fb1eb13c49b52993", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3941, "upload_time": "2019-10-13T04:14:30", "upload_time_iso_8601": "2019-10-13T04:14:30.633528Z", "url": "https://files.pythonhosted.org/packages/08/b1/4c6f07799765935936f384ced6717f28615d8f88055682179e54058f1a95/tuyapower-0.0.6-py2.py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7a2ec2792257dd0b2ba08e50a22d0a77", "sha256": "c97f95cafaf17070518bc8242da66e0fe7f48f0066c71bb9f71c4c715fc206da"}, "downloads": -1, "filename": "tuyapower-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a2ec2792257dd0b2ba08e50a22d0a77", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4313, "upload_time": "2019-10-13T04:31:52", "upload_time_iso_8601": "2019-10-13T04:31:52.405675Z", "url": "https://files.pythonhosted.org/packages/4d/c0/466c57be4a58f43ef40b2da4fba701e142aa10ec61bfcdb2e073f36481d4/tuyapower-0.0.7-py2.py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "33fd58326d872d985e333628d82588f6", "sha256": "8a1507ae9d17fd14c28bfae5a8c7adf9e396853d0556c124871db9e2b574c5f3"}, "downloads": -1, "filename": "tuyapower-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "33fd58326d872d985e333628d82588f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4406, "upload_time": "2019-10-25T03:50:09", "upload_time_iso_8601": "2019-10-25T03:50:09.546036Z", "url": "https://files.pythonhosted.org/packages/1b/86/7dc9a9de74719471a11e17f0eba2fb8109f282eadbb8909fc4b2802f09b6/tuyapower-0.0.8-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0f1be4e919e3776052844c7f0e2c1d7", "sha256": "b54971a7b4858513a9824c3f961974adea648c06e2760ce479936e6d668923b5"}, "downloads": -1, "filename": "tuyapower-0.0.19-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0f1be4e919e3776052844c7f0e2c1d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7702, "upload_time": "2020-02-09T03:17:53", "upload_time_iso_8601": "2020-02-09T03:17:53.887137Z", "url": "https://files.pythonhosted.org/packages/12/8a/d184555afffa7178c6fabfb5a9d71eda4a946401f1e781034b143f0a945a/tuyapower-0.0.19-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:44:24 2020"}