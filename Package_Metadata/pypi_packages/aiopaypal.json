{"info": {"author": "Omar Ryhan", "author_email": "omarryhan@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "<p align=\"center\">\n  <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/PayPal_logo.svg/527px-PayPal_logo.svg.png\" alt=\"Logo\" width=\"400\" height=\"100\"/>\n  <p align=\"center\">\n    <a href=\"https://github.com/omarryhan/aiopaypal\"><img alt=\"Software License\" src=\"https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\"></a>\n    <a href=\"https://pepy.tech/badge/aiopaypal\"><img alt=\"Downloads\" src=\"https://pepy.tech/badge/aiopaypal\"></a>\n    <a href=\"https://pepy.tech/badge/aiopaypal/month\"><img alt=\"Monthly Downloads\" src=\"https://pepy.tech/badge/aiopaypal/month\"></a>\n    <a href=\"https://github.com/python/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" /></a>\n  </p>\n</p>\n\n# Aiopaypal\n\nAsync Wrapper for Paypal's REST API\n\n## Setup \u2699\ufe0f\n\n```bash\n$ pip install aiopaypal\n```\n\n## Dependencies\n\n- aiohttp\n- aiofiles\n- pyopenssl\n\n## Usage\n\n### Init\n\n```python 3.7\nfrom aiopaypal import Paypal\n\naiopaypal = Paypal(\n    mode='live',\n    client_id='client_id',\n    client_secret='client_secret',\n)\n```\n\n### Create a user subscription\n\n**1. Create a payment experience (Optional) (Do only once)**:\n\n```python 3.7\npayment_experience = await aiopaypal.post(\n    url='/v1/payment-experience/web-profiles'\n    json={\n        'name': 'Payment profile name',\n        'presentation': {\n            'logo_image': 'https://brand-logo.png,\n            'brand_name': 'Brand Name'\n        },\n        'flow_config': {\n            'landing_page_type': 'Billing',\n            'user_action': 'commit',\n            'return_uri_http_method': 'GET'\n        },\n        'input_fields': {\n            'no_shipping': 1,  # No shipping address (digital goods)\n        },\n        'temporary': False\n    }\n\n)\n```\n\n**2. Create a billing plan (Where you specify the details of your plan) (Do only once)**:\n\n```python 3.7\nbilling_plan = await aiopaypal.post(\n    url='/v1/payments/billing-plans',\n    json={\n        \"name\": 'Name of the plan',\n        \"description\": 'Description of the plan',\n        \"type\": \"INFINITE\",\n        \"payment_definitions\": [\n            {\n                \"name\": 'Name of the payment,\n                \"cycles\": \"0\",\n                \"frequency\": \"MONTH\",\n                \"frequency_interval\": \"1\",\n                \"type\": \"REGULAR\",\n                \"amount\": {\n                    \"value\": str(123),\n                    \"currency\": 'usd'\n                },\n            }\n        ],\n        \"merchant_preferences\": {\n            \"setup_fee\": {\n                \"value\": str(123),\n                \"currency\": currency\n            },\n            \"auto_bill_amount\": \"yes\",  # Default \"NO\",\n            'return_url': 'https://example.com/payment/success-callback',\n            'cancel_url': 'https://example.com/payment/cancel-callback,\n            \"initial_fail_amount_action\": \"cancel\",  # Default CONTINUE\n            \"max_fail_attempts\": \"3\",\n            \"auto_bill_amount\": \"YES\",\n        }\n    }\n)\n```\n\n**3. Create webhooks to listen for subscription events (Do only once)**:\n\n```python 3.7\nhook_profile = await aiopaypal.post(\n    url='/v1/notifications/webhooks',\n    json={\n        url='https://example.com/webhook/',\n        event_types=[\n            {'name': 'BILLING.SUBSCRIPTION.CANCELLED'},\n            {'name': 'BILLING.SUBSCRIPTION.SUSPENDED'},\n            {'name': 'BILLING.SUBSCRIPTION.RE-ACTIVATED'},\n        ]\n    }\n)\n```\n\n**4. Create a billing agreement (Where you bind a user to the billing plan created at \"2.\") and execute it**:\n\n```python 3.7\nasync def create_agreement():\n    return await aiopaypal.post(\n        url='',\n        json={\n            'name': 'Agreement name',\n            'description': 'Agreement Description',\n            'start_date': (\n                datetime.datetime.utcnow() + \\\n                datetime.timedelta(days=1)\n            ).isoformat()[:-7] + 'Z'  # The start date must be no less than 24 hours after the current date as the agreement can take up to 24 hours to activate.\n            'plan': {\n                'id': billing_plan['id']\n            },\n            'payer': {\n                'payment_method': 'paypal',\n                'payer_info': {\n                    'email': 'email@email.email'\n                }\n            }\n        }\n    )\n\ndef get_execute_from_response(response):\n    for link in response['links']:\n        if link['rel'] == 'execute':\n            return link['href']\n```\n\n**4.1 Create an agreement**:\n\n```python 3.7\n@app.route('/create-agreement)\nasync def create_agreement():\n    billing_agreement = await create_agreement()\n    return make_user_open(get_execute_from_response(billing_agreement))\n```\n\n**4.2 Activate on success**:\n\n```python 3.7\n# Second step (user callback)\n@app.route('/success-callback', methods=['GET'])\nasync def finalize_agreement(request):\n    token = request.args.get('token')\n\n    user_id = request['session']['user_id']\n\n    active_agreement = await aiopaypal.post(\n        '/v1/payments/billing-agreements/{}/agreement-execute'.format(\n            token\n        ),\n        extra_headers={'Content-Type': 'application/json'}\n    )\n\n    if active_agreement['state'].lower() != 'active' and \\\n        active_agreement['state'].lower() != 'pending':\n    else:\n        await store_user_agreement_id(user_id, active_agreement['id'])\n        activate_premium_product(user_id)\n\n    return_to_user('Payment {}'.format(active_agreement['state']))\n```\n\n**5. Listen to agreement changes**:\n\n```python 3.7\n@app.route('/webhook', methods=['POST', 'GET'])\nasync def hook(request):\n    try:\n        await aiopaypal.verify_from_headers(\n            webhook_id=webhook['id'],  # webhook response from \"3.\"\n            event_body=request.body.decode(),\n            headers=headers\n        )\n    except PaypalError as e:\n        logger.exception(e)\n        return\n    else:\n        event = request.json\n\n        event_type = event.get('event_type')\n\n        agreement_id = event['resource']['id']\n\n        if event_type == 'BILLING.SUBSCRIPTION.SUSPENDED':\n            logger.info('Billing agreement {} suspended'.format(agreement_id))\n            await suspend_agreement_by_agreement_id(\n                agreement_id\n            )\n\n        elif event_type == 'BILLING.SUBSCRIPTION.CANCELLED':\n            logger.info('Billing agreement {} cancelled'.format(agreement_id))\n            await cancel_agreement_by_id(\n                agreement_id\n            )\n\n        elif event_type == 'BILLING.SUBSCRIPTION.RE-ACTIVATED':\n            logger.info(\n                'Agreement with ID: {} REACTIVATED'.format(\n                    agreement_id\n                )\n            )\n            await reactivate_agreement_by_id(\n                agreement_id\n            )\n\n        elif event_type == 'PAYMENT.SALE.PENDING' or \\\n            event_type == 'PAYMENT.ORDER.CREATED' or \\\n            event_type == 'BILLING.SUBSCRIPTION.CREATED':\n            logger.info('Payment/Subscription Created')\n\n        else:\n            logger.critical(\n                'Got unexpected event type {}'.format(event['resource']['id'])\n            )\n\n    finally:\n        # must return 200, else Paypal won't stop sending\n        return response.text('OK')\n```\n\n### Create a user payment\n\n    ... Figured it out? Help others and make a pull request :)\n\n## Contact \ud83d\udce7\n\nI currently work as a freelance software devloper. Like my work and got a gig for me?\n\nWant to hire me fulltime? Send me an email @ omarryhan@gmail.com\n\n## Buy me a coffee \u2615\n\n**Bitcoin:** 3NmywNKr1Lzo8gyNXFUnzvboziACpEa31z\n\n**Ethereum:** 0x1E1400C31Cd813685FE0f6D29E0F91c1Da4675aE\n\n**Bitcoin Cash:** qqzn7rsav6hr3zqcp4829s48hvsvjat4zq7j42wkxd\n\n**Litecoin:** MB5M3cE3jE4E8NwGCWoFjLvGqjDqPyyEJp\n\n**Paypal:** https://paypal.me/omarryhan", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/omarryhan/aiopaypal", "keywords": "", "license": "GNU", "maintainer": "", "maintainer_email": "", "name": "aiopaypal", "package_url": "https://pypi.org/project/aiopaypal/", "platform": "", "project_url": "https://pypi.org/project/aiopaypal/", "project_urls": {"Homepage": "https://github.com/omarryhan/aiopaypal"}, "release_url": "https://pypi.org/project/aiopaypal/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Async Paypal client", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img alt=\"Logo\" height=\"100\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a93ab96be18b2297cb6653ff410500294f69e10/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f332f33392f50617950616c5f6c6f676f2e7376672f35323770782d50617950616c5f6c6f676f2e7376672e706e67\" width=\"400\">\n  </p><p align=\"center\">\n    <a href=\"https://github.com/omarryhan/aiopaypal\" rel=\"nofollow\"><img alt=\"Software License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3774e3275f579e894cbbfbf88f461a319ba9f84b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n    <a href=\"https://pepy.tech/badge/aiopaypal\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b41eec61938885dd738edbfc4647396815de4c3/68747470733a2f2f706570792e746563682f62616467652f61696f70617970616c\"></a>\n    <a href=\"https://pepy.tech/badge/aiopaypal/month\" rel=\"nofollow\"><img alt=\"Monthly Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0295f003c30bc7d5c2e22a427420378c7d1db7b2/68747470733a2f2f706570792e746563682f62616467652f61696f70617970616c2f6d6f6e7468\"></a>\n    <a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n  </p>\n<p></p>\n<h1>Aiopaypal</h1>\n<p>Async Wrapper for Paypal's REST API</p>\n<h2>Setup \u2699\ufe0f</h2>\n<pre>$ pip install aiopaypal\n</pre>\n<h2>Dependencies</h2>\n<ul>\n<li>aiohttp</li>\n<li>aiofiles</li>\n<li>pyopenssl</li>\n</ul>\n<h2>Usage</h2>\n<h3>Init</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiopaypal</span> <span class=\"kn\">import</span> <span class=\"n\">Paypal</span>\n\n<span class=\"n\">aiopaypal</span> <span class=\"o\">=</span> <span class=\"n\">Paypal</span><span class=\"p\">(</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'live'</span><span class=\"p\">,</span>\n    <span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s1\">'client_id'</span><span class=\"p\">,</span>\n    <span class=\"n\">client_secret</span><span class=\"o\">=</span><span class=\"s1\">'client_secret'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Create a user subscription</h3>\n<p><strong>1. Create a payment experience (Optional) (Do only once)</strong>:</p>\n<pre><span class=\"n\">payment_experience</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiopaypal</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/payment-experience/web-profiles'</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Payment profile name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'presentation'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'logo_image'</span><span class=\"p\">:</span> <span class=\"s1\">'https://brand-logo.png,</span>\n            <span class=\"s1\">'brand_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Brand Name'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'flow_config'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'landing_page_type'</span><span class=\"p\">:</span> <span class=\"s1\">'Billing'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'user_action'</span><span class=\"p\">:</span> <span class=\"s1\">'commit'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'return_uri_http_method'</span><span class=\"p\">:</span> <span class=\"s1\">'GET'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'input_fields'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'no_shipping'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>  <span class=\"c1\"># No shipping address (digital goods)</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'temporary'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">)</span>\n</pre>\n<p><strong>2. Create a billing plan (Where you specify the details of your plan) (Do only once)</strong>:</p>\n<pre><span class=\"n\">billing_plan</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiopaypal</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/payments/billing-plans'</span><span class=\"p\">,</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s1\">'Name of the plan'</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s1\">'Description of the plan'</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INFINITE\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"payment_definitions\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s1\">'Name of the payment,</span>\n                <span class=\"s2\">\"cycles\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"frequency\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MONTH\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"frequency_interval\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"REGULAR\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">),</span>\n                    <span class=\"s2\">\"currency\"</span><span class=\"p\">:</span> <span class=\"s1\">'usd'</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"s2\">\"merchant_preferences\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"setup_fee\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">),</span>\n                <span class=\"s2\">\"currency\"</span><span class=\"p\">:</span> <span class=\"n\">currency</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"auto_bill_amount\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>  <span class=\"c1\"># Default \"NO\",</span>\n            <span class=\"s1\">'return_url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://example.com/payment/success-callback'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'cancel_url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://example.com/payment/cancel-callback,</span>\n            <span class=\"s2\">\"initial_fail_amount_action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cancel\"</span><span class=\"p\">,</span>  <span class=\"c1\"># Default CONTINUE</span>\n            <span class=\"s2\">\"max_fail_attempts\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"auto_bill_amount\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YES\"</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>3. Create webhooks to listen for subscription events (Do only once)</strong>:</p>\n<pre><span class=\"n\">hook_profile</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiopaypal</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/notifications/webhooks'</span><span class=\"p\">,</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://example.com/webhook/'</span><span class=\"p\">,</span>\n        <span class=\"n\">event_types</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.CANCELLED'</span><span class=\"p\">},</span>\n            <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.SUSPENDED'</span><span class=\"p\">},</span>\n            <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.RE-ACTIVATED'</span><span class=\"p\">},</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>4. Create a billing agreement (Where you bind a user to the billing plan created at \"2.\") and execute it</strong>:</p>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">create_agreement</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">aiopaypal</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n        <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Agreement name'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Agreement Description'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'start_date'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n                <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">utcnow</span><span class=\"p\">()</span> <span class=\"o\">+</span> \\\n                <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()[:</span><span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">'Z'</span>  <span class=\"c1\"># The start date must be no less than 24 hours after the current date as the agreement can take up to 24 hours to activate.</span>\n            <span class=\"s1\">'plan'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"n\">billing_plan</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'payer'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'payment_method'</span><span class=\"p\">:</span> <span class=\"s1\">'paypal'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'payer_info'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'email@email.email'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_execute_from_response</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'links'</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">link</span><span class=\"p\">[</span><span class=\"s1\">'rel'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'execute'</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">link</span><span class=\"p\">[</span><span class=\"s1\">'href'</span><span class=\"p\">]</span>\n</pre>\n<p><strong>4.1 Create an agreement</strong>:</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/create-agreement)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">create_agreement</span><span class=\"p\">():</span>\n    <span class=\"n\">billing_agreement</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">create_agreement</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">make_user_open</span><span class=\"p\">(</span><span class=\"n\">get_execute_from_response</span><span class=\"p\">(</span><span class=\"n\">billing_agreement</span><span class=\"p\">))</span>\n</pre>\n<p><strong>4.2 Activate on success</strong>:</p>\n<pre><span class=\"c1\"># Second step (user callback)</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/success-callback'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">finalize_agreement</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"p\">[</span><span class=\"s1\">'session'</span><span class=\"p\">][</span><span class=\"s1\">'user_id'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">active_agreement</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiopaypal</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n        <span class=\"s1\">'/v1/payments/billing-agreements/</span><span class=\"si\">{}</span><span class=\"s1\">/agreement-execute'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">token</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">extra_headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/json'</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">active_agreement</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"s1\">'active'</span> <span class=\"ow\">and</span> \\\n        <span class=\"n\">active_agreement</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"s1\">'pending'</span><span class=\"p\">:</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">store_user_agreement_id</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">,</span> <span class=\"n\">active_agreement</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n        <span class=\"n\">activate_premium_product</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n\n    <span class=\"n\">return_to_user</span><span class=\"p\">(</span><span class=\"s1\">'Payment </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">active_agreement</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">]))</span>\n</pre>\n<p><strong>5. Listen to agreement changes</strong>:</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/webhook'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">,</span> <span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hook</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">aiopaypal</span><span class=\"o\">.</span><span class=\"n\">verify_from_headers</span><span class=\"p\">(</span>\n            <span class=\"n\">webhook_id</span><span class=\"o\">=</span><span class=\"n\">webhook</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span>  <span class=\"c1\"># webhook response from \"3.\"</span>\n            <span class=\"n\">event_body</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(),</span>\n            <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">PaypalError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span>\n\n        <span class=\"n\">event_type</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'event_type'</span><span class=\"p\">)</span>\n\n        <span class=\"n\">agreement_id</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s1\">'resource'</span><span class=\"p\">][</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">event_type</span> <span class=\"o\">==</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.SUSPENDED'</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Billing agreement </span><span class=\"si\">{}</span><span class=\"s1\"> suspended'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">agreement_id</span><span class=\"p\">))</span>\n            <span class=\"k\">await</span> <span class=\"n\">suspend_agreement_by_agreement_id</span><span class=\"p\">(</span>\n                <span class=\"n\">agreement_id</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">event_type</span> <span class=\"o\">==</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.CANCELLED'</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Billing agreement </span><span class=\"si\">{}</span><span class=\"s1\"> cancelled'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">agreement_id</span><span class=\"p\">))</span>\n            <span class=\"k\">await</span> <span class=\"n\">cancel_agreement_by_id</span><span class=\"p\">(</span>\n                <span class=\"n\">agreement_id</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">event_type</span> <span class=\"o\">==</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.RE-ACTIVATED'</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"s1\">'Agreement with ID: </span><span class=\"si\">{}</span><span class=\"s1\"> REACTIVATED'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">agreement_id</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">reactivate_agreement_by_id</span><span class=\"p\">(</span>\n                <span class=\"n\">agreement_id</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">event_type</span> <span class=\"o\">==</span> <span class=\"s1\">'PAYMENT.SALE.PENDING'</span> <span class=\"ow\">or</span> \\\n            <span class=\"n\">event_type</span> <span class=\"o\">==</span> <span class=\"s1\">'PAYMENT.ORDER.CREATED'</span> <span class=\"ow\">or</span> \\\n            <span class=\"n\">event_type</span> <span class=\"o\">==</span> <span class=\"s1\">'BILLING.SUBSCRIPTION.CREATED'</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Payment/Subscription Created'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span>\n                <span class=\"s1\">'Got unexpected event type </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s1\">'resource'</span><span class=\"p\">][</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"c1\"># must return 200, else Paypal won't stop sending</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">)</span>\n</pre>\n<h3>Create a user payment</h3>\n<pre><code>... Figured it out? Help others and make a pull request :)\n</code></pre>\n<h2>Contact \ud83d\udce7</h2>\n<p>I currently work as a freelance software devloper. Like my work and got a gig for me?</p>\n<p>Want to hire me fulltime? Send me an email @ <a href=\"mailto:omarryhan@gmail.com\">omarryhan@gmail.com</a></p>\n<h2>Buy me a coffee \u2615</h2>\n<p><strong>Bitcoin:</strong> 3NmywNKr1Lzo8gyNXFUnzvboziACpEa31z</p>\n<p><strong>Ethereum:</strong> 0x1E1400C31Cd813685FE0f6D29E0F91c1Da4675aE</p>\n<p><strong>Bitcoin Cash:</strong> qqzn7rsav6hr3zqcp4829s48hvsvjat4zq7j42wkxd</p>\n<p><strong>Litecoin:</strong> MB5M3cE3jE4E8NwGCWoFjLvGqjDqPyyEJp</p>\n<p><strong>Paypal:</strong> <a href=\"https://paypal.me/omarryhan\" rel=\"nofollow\">https://paypal.me/omarryhan</a></p>\n\n          </div>"}, "last_serial": 5362641, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "870ce7a2f382a293add6cc121546b375", "sha256": "c3909d3c70535cfc29b95bdf224cb1d98fb0918143d7b0dcc4bd494b76efdf54"}, "downloads": -1, "filename": "aiopaypal-0.1.0.tar.gz", "has_sig": false, "md5_digest": "870ce7a2f382a293add6cc121546b375", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4945, "upload_time": "2019-03-30T08:21:58", "upload_time_iso_8601": "2019-03-30T08:21:58.636301Z", "url": "https://files.pythonhosted.org/packages/62/fb/5e5c5246be1f7b2a153ee09ac2a05f8b998a06acc1c96d49687592b55bf7/aiopaypal-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "47322d47ea943b2deaf21b88a781b3ba", "sha256": "de7b8b7a0911286ff21dd164029c855ba1a5148af7cda61a7c6c1309d89e69a4"}, "downloads": -1, "filename": "aiopaypal-0.1.1.tar.gz", "has_sig": false, "md5_digest": "47322d47ea943b2deaf21b88a781b3ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4970, "upload_time": "2019-03-30T08:31:55", "upload_time_iso_8601": "2019-03-30T08:31:55.016090Z", "url": "https://files.pythonhosted.org/packages/e8/e8/0c0ed5f88ad8a9f5f877b31143c4d880994d046075bf0fd81167c8545cff/aiopaypal-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fba7d7b162f2d935432d9e6c95982380", "sha256": "43a33befd20b74e7be3eecb0fbdaadca46c0667f0ac9f07763e1348972dbc3c5"}, "downloads": -1, "filename": "aiopaypal-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fba7d7b162f2d935432d9e6c95982380", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5047, "upload_time": "2019-03-31T14:21:42", "upload_time_iso_8601": "2019-03-31T14:21:42.795713Z", "url": "https://files.pythonhosted.org/packages/f4/07/0210863312b9d9a9fecd63b420a3bd851ddf0cf03a226cd01895a9cb49f4/aiopaypal-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cfafcf7a7eca20adbfee99c8f9a50a90", "sha256": "9612529e7875a7fd28bec481b29b3309591b9e434fad8b02d7bd634b674b1c9d"}, "downloads": -1, "filename": "aiopaypal-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cfafcf7a7eca20adbfee99c8f9a50a90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5051, "upload_time": "2019-03-31T14:27:24", "upload_time_iso_8601": "2019-03-31T14:27:24.177234Z", "url": "https://files.pythonhosted.org/packages/85/78/c08567640a2939692bc71c7fdc824a5e782624c1ff64156da8e730ae4d86/aiopaypal-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "73a9974a3b265e02d4e2c6f433823c22", "sha256": "f9199d78f55a0fcea5c3831f7770c3e57cdd762e85e743dc1224038af45089e3"}, "downloads": -1, "filename": "aiopaypal-0.1.4.tar.gz", "has_sig": false, "md5_digest": "73a9974a3b265e02d4e2c6f433823c22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10382, "upload_time": "2019-06-05T14:00:40", "upload_time_iso_8601": "2019-06-05T14:00:40.597746Z", "url": "https://files.pythonhosted.org/packages/43/4b/4434949bf84542e2ca79c20e5bfb65b26d4442d288e6c03ea5cd76e3e995/aiopaypal-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73a9974a3b265e02d4e2c6f433823c22", "sha256": "f9199d78f55a0fcea5c3831f7770c3e57cdd762e85e743dc1224038af45089e3"}, "downloads": -1, "filename": "aiopaypal-0.1.4.tar.gz", "has_sig": false, "md5_digest": "73a9974a3b265e02d4e2c6f433823c22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10382, "upload_time": "2019-06-05T14:00:40", "upload_time_iso_8601": "2019-06-05T14:00:40.597746Z", "url": "https://files.pythonhosted.org/packages/43/4b/4434949bf84542e2ca79c20e5bfb65b26d4442d288e6c03ea5cd76e3e995/aiopaypal-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:58 2020"}