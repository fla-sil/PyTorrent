{"info": {"author": "Daniel Bader, Cochise Ruhulessin", "author_email": "development@ibrb.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "aioschedule\n===========\n\n\n.. image:: https://api.travis-ci.org/ibrb/python-aioschedule.svg?branch=master\n        :target: https://travis-ci.org/ibrb/python-aioschedule\n\n.. image:: https://coveralls.io/repos/ibrb/python-aioschedule/badge.svg?branch=master\n        :target: https://coveralls.io/r/ibrb/python-aioschedule\n\n.. image:: https://img.shields.io/pypi/v/aioschedule.svg\n        :target: https://pypi.python.org/pypi/aioschedule\n\n.. image:: https://media.ibrb.org/ibr/images/logos/landscape1200.png\n        :target: https://media.ibrb.org/ibr/images/logos/landscape1200.png\n\n\nPython job scheduling for humans. Forked and modified from github.com/dbader/schedule.\n\nAn in-process scheduler for periodic jobs that uses the builder pattern\nfor configuration. Schedule lets you run Python functions (or any other\ncallable) periodically at pre-determined intervals using a simple,\nhuman-friendly syntax.\n\nInspired by `Adam Wiggins' <https://github.com/adamwiggins>`_ article `\"Rethinking Cron\" <https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/>`_ and the `clockwork <https://github.com/Rykian/clockwork>`_ Ruby module.\n\nFeatures\n--------\n- A simple to use API for scheduling jobs.\n- Very lightweight and no external dependencies.\n- Excellent test coverage.\n- Tested on Python 3.5, and 3.6\n\nUsage\n-----\n\n.. code-block:: bash\n\n    $ pip install aioschedule\n\n.. code-block:: python\n\n    import asyncio\n    import aioschedule as schedule\n    import time\n\n    async def job(message='stuff', n=1):\n        print(\"Asynchronous invocation (%s) of I'm working on:\" % n, message)\n        asyncio.sleep(1)\n\n    for i in range(1,3):\n        schedule.every(1).seconds.do(job, n=i)\n    schedule.every(5).to(10).days.do(job)\n    schedule.every().hour.do(job, message='things')\n    schedule.every().day.at(\"10:30\").do(job)\n\n    loop = asyncio.get_event_loop()\n    while True:\n        loop.run_until_complete(schedule.run_pending())\n        time.sleep(0.1)\n\nDocumentation\n-------------\n\nSchedule's documentation lives at `schedule.readthedocs.io <https://schedule.readthedocs.io/>`_.\n\nPlease also check the FAQ there with common questions.\n\n\nDevelopment\n-----------\nRun `vagrant up` to spawn a virtual machine containing the development\nenvironment. Make sure to set the `IBR_GIT_COMMITTER_NAME` and\n`IBR_GIT_COMMITTER_EMAIL` environment variables.\n\n\nMeta\n----\n\n- Daniel Bader - `@dbader_org <https://twitter.com/dbader_org>`_ - mail@dbader.org\n- Cochise Ruhulessin - `@magicalcochise <https://twitter.com/magicalcochise>`_ - c.ruhulessin@ibrb.org\n\nDistributed under the MIT license. See ``LICENSE.txt`` for more information.\n\nhttps://github.com/ibrb/python-aioschedule\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/ibrb/python-aioschedule/tarball/0.5.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ibrb/python-aioschedule", "keywords": "aioschedule", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aioschedule", "package_url": "https://pypi.org/project/aioschedule/", "platform": "", "project_url": "https://pypi.org/project/aioschedule/", "project_urls": {"Download": "https://github.com/ibrb/python-aioschedule/tarball/0.5.2", "Homepage": "https://github.com/ibrb/python-aioschedule"}, "release_url": "https://pypi.org/project/aioschedule/0.5.2/", "requires_dist": null, "requires_python": "", "summary": "Job scheduling for humans.", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/ibrb/python-aioschedule\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/ibrb/python-aioschedule.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3afcc57ddcae27c29f64c3cc2d1f97d59d0f694d/68747470733a2f2f6170692e7472617669732d63692e6f72672f696272622f707974686f6e2d61696f7363686564756c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/ibrb/python-aioschedule\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/ibrb/python-aioschedule/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2350f60d60744beef4e682469bc5e53c69f4151f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f696272622f707974686f6e2d61696f7363686564756c652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/aioschedule\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aioschedule.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3f136584320e1328a0d68b4b21bf4f942c9ae55/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f7363686564756c652e737667\"></a>\n<a href=\"https://media.ibrb.org/ibr/images/logos/landscape1200.png\" rel=\"nofollow\"><img alt=\"https://media.ibrb.org/ibr/images/logos/landscape1200.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec309ebf5a5ad10659622a1f766e018db9a8b9b1/68747470733a2f2f6d656469612e696272622e6f72672f6962722f696d616765732f6c6f676f732f6c616e647363617065313230302e706e67\"></a>\n<p>Python job scheduling for humans. Forked and modified from github.com/dbader/schedule.</p>\n<p>An in-process scheduler for periodic jobs that uses the builder pattern\nfor configuration. Schedule lets you run Python functions (or any other\ncallable) periodically at pre-determined intervals using a simple,\nhuman-friendly syntax.</p>\n<p>Inspired by <a href=\"https://github.com/adamwiggins\" rel=\"nofollow\">Adam Wiggins\u2019</a> article <a href=\"https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/\" rel=\"nofollow\">\u201cRethinking Cron\u201d</a> and the <a href=\"https://github.com/Rykian/clockwork\" rel=\"nofollow\">clockwork</a> Ruby module.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>A simple to use API for scheduling jobs.</li>\n<li>Very lightweight and no external dependencies.</li>\n<li>Excellent test coverage.</li>\n<li>Tested on Python 3.5, and 3.6</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ pip install aioschedule\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aioschedule</span> <span class=\"k\">as</span> <span class=\"nn\">schedule</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">job</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'stuff'</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Asynchronous invocation (</span><span class=\"si\">%s</span><span class=\"s2\">) of I'm working on:\"</span> <span class=\"o\">%</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">days</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">hour</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'things'</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">day</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"s2\">\"10:30\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">run_pending</span><span class=\"p\">())</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Schedule\u2019s documentation lives at <a href=\"https://schedule.readthedocs.io/\" rel=\"nofollow\">schedule.readthedocs.io</a>.</p>\n<p>Please also check the FAQ there with common questions.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Run <cite>vagrant up</cite> to spawn a virtual machine containing the development\nenvironment. Make sure to set the <cite>IBR_GIT_COMMITTER_NAME</cite> and\n<cite>IBR_GIT_COMMITTER_EMAIL</cite> environment variables.</p>\n</div>\n<div id=\"meta\">\n<h2>Meta</h2>\n<ul>\n<li>Daniel Bader - <a href=\"https://twitter.com/dbader_org\" rel=\"nofollow\">@dbader_org</a> - <a href=\"mailto:mail%40dbader.org\">mail<span>@</span>dbader<span>.</span>org</a></li>\n<li>Cochise Ruhulessin - <a href=\"https://twitter.com/magicalcochise\" rel=\"nofollow\">@magicalcochise</a> - <a href=\"mailto:c.ruhulessin%40ibrb.org\">c<span>.</span>ruhulessin<span>@</span>ibrb<span>.</span>org</a></li>\n</ul>\n<p>Distributed under the MIT license. See <tt>LICENSE.txt</tt> for more information.</p>\n<p><a href=\"https://github.com/ibrb/python-aioschedule\" rel=\"nofollow\">https://github.com/ibrb/python-aioschedule</a></p>\n</div>\n\n          </div>"}, "last_serial": 3546282, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "e52e050f666b297befb8ac06b6c151d8", "sha256": "202a3667d40270410dc85bdf0e795388b3e65d856669bff0dfdb187af47b6a0e"}, "downloads": -1, "filename": "aioschedule-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e52e050f666b297befb8ac06b6c151d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12268, "upload_time": "2018-02-01T13:12:03", "upload_time_iso_8601": "2018-02-01T13:12:03.458827Z", "url": "https://files.pythonhosted.org/packages/d2/80/ab7e4127aa17ded79067498863f636e2c5a16247fdf4d896ad4763f9ddf6/aioschedule-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "c0ea6d95e8cb8d8ade95e69008c78290", "sha256": "63aeb7c59c9426242350d1a55eb0e126df6f7b5d08e95c1252e8115cd54b94d1"}, "downloads": -1, "filename": "aioschedule-0.5.1.tar.gz", "has_sig": false, "md5_digest": "c0ea6d95e8cb8d8ade95e69008c78290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12742, "upload_time": "2018-02-02T12:52:39", "upload_time_iso_8601": "2018-02-02T12:52:39.565709Z", "url": "https://files.pythonhosted.org/packages/42/6a/ae425264fce1691108d95c86b91de4897364a3c939fcab6211933603b3a7/aioschedule-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "7c59bb3237c7e1792681a1250b7e843b", "sha256": "1fe8621d287f58cbba3d73695fbbd890355294ac0c01981a1fd1e4f0510fc744"}, "downloads": -1, "filename": "aioschedule-0.5.2.tar.gz", "has_sig": false, "md5_digest": "7c59bb3237c7e1792681a1250b7e843b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12763, "upload_time": "2018-02-02T16:51:33", "upload_time_iso_8601": "2018-02-02T16:51:33.940327Z", "url": "https://files.pythonhosted.org/packages/39/8a/f73565aca3a01420a2e0906b7cd56c21060aeb420deba79b33b7e1f1c39e/aioschedule-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c59bb3237c7e1792681a1250b7e843b", "sha256": "1fe8621d287f58cbba3d73695fbbd890355294ac0c01981a1fd1e4f0510fc744"}, "downloads": -1, "filename": "aioschedule-0.5.2.tar.gz", "has_sig": false, "md5_digest": "7c59bb3237c7e1792681a1250b7e843b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12763, "upload_time": "2018-02-02T16:51:33", "upload_time_iso_8601": "2018-02-02T16:51:33.940327Z", "url": "https://files.pythonhosted.org/packages/39/8a/f73565aca3a01420a2e0906b7cd56c21060aeb420deba79b33b7e1f1c39e/aioschedule-0.5.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:48 2020"}