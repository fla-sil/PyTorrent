{"info": {"author": "AICS", "author_email": "jianxuc@alleninstitute.org", "bugtrack_url": null, "classifiers": [], "description": "## Overview\n\nThe Allen Cell Structure Segmenter is a Python-based open source toolkit developed for 3D segmentation of intracellular structures in fluorescence microscope images, developed at the Allen Institute for Cell Science. This toolkit consists of two complementary elements, a classic image segmentation workflow with a restricted set of algorithms and parameters and an iterative deep learning segmentation workflow. We created a collection of 20 classic image segmentation workflows based on 20 distinct and representative intracellular structure localization patterns as a lookup table reference and starting point for users. The iterative deep learning workflow can take over when the classic segmentation workflow is insufficient. Two straightforward human-in-the-loop curation strategies convert a set of classic image segmentation workflow results into a set of 3D ground truth images for iterative model training without the need for manual painting in 3D. The Allen Cell Structure Segmenter thus leverages state of the art computer vision algorithms in an accessible way to facilitate their application by the experimental biology researcher. More details including algorithms, validations, examples, and video tutorials can be found at [allencell.org/segmenter](allencell.org/segmenter) or in our [bioRxiv paper](https://www.biorxiv.org/content/10.1101/491035v1).\n\n**Note: This repository has only the code for the \"Iterative Deep Learning Workflow\". The classic part can be found at [https://github.com/AllenInstitute/aics-segmentation](https://github.com/AllenInstitute/aics-segmentation)**\n\n## Installation:\n\n0. prerequisite:\n\nTo perform training/prediction of the deep learning models in this package, we assume an [NVIDIA GPU](https://www.nvidia.com/en-us/deep-learning-ai/developer/) has been set up properly on a Linux operating system, either on a local machine or on a remote computation cluster. Make sure to check if your GPU supports at least CUDA 8.0 (CUDA 9.0 and up is preferred): [NVIDIA Driver check](https://www.nvidia.com/Download/index.aspx?lang=en-us).\n\nThe GPUs we used to develop and test our package are two types: (1) GeForce GTX 1080 Ti GPU (about 11GB GPU memory), (2) Titan Xp GPU (about 12GB GPU memory), (3) Tesla V100 for PCIe (with about 33GB memory). These cover common chips for personal workstations and data centers.\n\n**Note 1:** As remote GPU clusters could be set up differently from institute to institute, we will assume a local machine use case through out the installation and demos.\n\n**Note 2:** We are investigating alternative cloud computing service to deploy our package and will have updates in the next few months. Stay tuned :)  \n\n\n1. create a conda environment: \n\n```bash\nconda create --name mlsegmenter python=3.6\n```\n\n(For how to install conda, see [here](https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html#installing-conda-on-a-system-that-has-other-python-installations-or-packages))\n\n2. activate your environment and do the installation within the environment:\n\n```bash \nconda activate mlsegmenter \n```\n\n(Note: always check out [conda documentation](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#activating-an-environment) for updates. If you are using an older version of conda, you may need to activate the environment by `source activate mlsegmenter`.)\n\n3. Install Pytorch\n\nGo to [PyTorch website](https://pytorch.org/get-started/locally/), and find the right installation command for you. \n\n* we use version 1.0 (which is the stable version at the time of our development)\n* we use Linux (OS), Conda (package), python 3.6 (Language), CUDA=10.0 (Question about CUDA? see [setup CUDA](./docs/check_cuda.md)). \n\n***Make sure you use either the automatically generated command on PyTorch website, or the command recommended on PyTorch website for installing [older version](https://pytorch.org/get-started/previous-versions/)***\n\n\n\n4. Install Allen Cell Segmenter (deep learning part)\n\n```bash\ngit clone https://github.com/AllenInstitute/aics-ml-segmentation.git\ncd ./aics-ml-segmentation\npip install -e .\n```\n\nThe `-e` flag when doing `pip install` will allow users to modify any the source code without the need of re-installing the package afterward. You may do the installation without `-e`, if you don't want any change on the code.\n\n## Level of Support\nWe are offering it to the community AS IS; we have used the toolkit within our organization. We are not able to provide guarantees of support. However, we welcome feedback and submission of issues. Users are encouraged to sign up on our [Allen Cell Discussion Forum](https://forum.allencell.org/) for community quesitons and comments.\n\n\n# Link to [Documentations and Tutorials](./docs/overview.md)\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Allen Institute Software License", "maintainer": "", "maintainer_email": "", "name": "aicsmlsegment", "package_url": "https://pypi.org/project/aicsmlsegment/", "platform": "", "project_url": "https://pypi.org/project/aicsmlsegment/", "project_urls": null, "release_url": "https://pypi.org/project/aicsmlsegment/0.0.4/", "requires_dist": ["numpy (>=1.15.1)", "scipy (>=1.1.0)", "scikit-image (>=0.14.0)", "pandas (>=0.23.4)", "aicsimageio (>=0.4.3<3.0.0)", "aicsimageprocessing", "tqdm", "pyyaml", "pytest ; extra == 'all'", "pytest-cov ; extra == 'all'", "flake8 ; extra == 'all'", "flake8 ; extra == 'lint_group'", "pytest ; extra == 'test_group'", "pytest-cov ; extra == 'test_group'"], "requires_python": "", "summary": "Scripts for ML structure segmentation.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>## Overview</p>\n<p>The Allen Cell Structure Segmenter is a Python-based open source toolkit developed for 3D segmentation of intracellular structures in fluorescence microscope images, developed at the Allen Institute for Cell Science. This toolkit consists of two complementary elements, a classic image segmentation workflow with a restricted set of algorithms and parameters and an iterative deep learning segmentation workflow. We created a collection of 20 classic image segmentation workflows based on 20 distinct and representative intracellular structure localization patterns as a lookup table reference and starting point for users. The iterative deep learning workflow can take over when the classic segmentation workflow is insufficient. Two straightforward human-in-the-loop curation strategies convert a set of classic image segmentation workflow results into a set of 3D ground truth images for iterative model training without the need for manual painting in 3D. The Allen Cell Structure Segmenter thus leverages state of the art computer vision algorithms in an accessible way to facilitate their application by the experimental biology researcher. More details including algorithms, validations, examples, and video tutorials can be found at [allencell.org/segmenter](allencell.org/segmenter) or in our [bioRxiv paper](<a href=\"https://www.biorxiv.org/content/10.1101/491035v1\" rel=\"nofollow\">https://www.biorxiv.org/content/10.1101/491035v1</a>).</p>\n<p><strong>Note: This repository has only the code for the \u201cIterative Deep Learning Workflow\u201d. The classic part can be found at [https://github.com/AllenInstitute/aics-segmentation](https://github.com/AllenInstitute/aics-segmentation)</strong></p>\n<p>## Installation:</p>\n<ol>\n<li>prerequisite:</li>\n</ol>\n<p>To perform training/prediction of the deep learning models in this package, we assume an [NVIDIA GPU](<a href=\"https://www.nvidia.com/en-us/deep-learning-ai/developer/\" rel=\"nofollow\">https://www.nvidia.com/en-us/deep-learning-ai/developer/</a>) has been set up properly on a Linux operating system, either on a local machine or on a remote computation cluster. Make sure to check if your GPU supports at least CUDA 8.0 (CUDA 9.0 and up is preferred): [NVIDIA Driver check](<a href=\"https://www.nvidia.com/Download/index.aspx?lang=en-us\" rel=\"nofollow\">https://www.nvidia.com/Download/index.aspx?lang=en-us</a>).</p>\n<p>The GPUs we used to develop and test our package are two types: (1) GeForce GTX 1080 Ti GPU (about 11GB GPU memory), (2) Titan Xp GPU (about 12GB GPU memory), (3) Tesla V100 for PCIe (with about 33GB memory). These cover common chips for personal workstations and data centers.</p>\n<p><strong>Note 1:</strong> As remote GPU clusters could be set up differently from institute to institute, we will assume a local machine use case through out the installation and demos.</p>\n<p><strong>Note 2:</strong> We are investigating alternative cloud computing service to deploy our package and will have updates in the next few months. Stay tuned :)</p>\n<ol>\n<li>create a conda environment:</li>\n</ol>\n<p><tt>`bash\nconda create <span class=\"pre\">--name</span> mlsegmenter python=3.6\n`</tt></p>\n<p>(For how to install conda, see [here](<a href=\"https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html#installing-conda-on-a-system-that-has-other-python-installations-or-packages\" rel=\"nofollow\">https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html#installing-conda-on-a-system-that-has-other-python-installations-or-packages</a>))</p>\n<ol>\n<li>activate your environment and do the installation within the environment:</li>\n</ol>\n<p><tt>`bash\nconda activate mlsegmenter\n`</tt></p>\n<p>(Note: always check out [conda documentation](<a href=\"https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#activating-an-environment\" rel=\"nofollow\">https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#activating-an-environment</a>) for updates. If you are using an older version of conda, you may need to activate the environment by <cite>source activate mlsegmenter</cite>.)</p>\n<ol>\n<li>Install Pytorch</li>\n</ol>\n<p>Go to [PyTorch website](<a href=\"https://pytorch.org/get-started/locally/\" rel=\"nofollow\">https://pytorch.org/get-started/locally/</a>), and find the right installation command for you.</p>\n<ul>\n<li>we use version 1.0 (which is the stable version at the time of our development)</li>\n<li>we use Linux (OS), Conda (package), python 3.6 (Language), CUDA=10.0 (Question about CUDA? see [setup CUDA](./docs/check_cuda.md)).</li>\n</ul>\n<p><strong>*Make sure you use either the automatically generated command on PyTorch website, or the command recommended on PyTorch website for installing [older version](https://pytorch.org/get-started/previous-versions/)*</strong></p>\n<ol>\n<li>Install Allen Cell Segmenter (deep learning part)</li>\n</ol>\n<p><tt>`bash\ngit clone <span class=\"pre\">https://github.com/AllenInstitute/aics-ml-segmentation.git</span>\ncd <span class=\"pre\">./aics-ml-segmentation</span>\npip install <span class=\"pre\">-e</span> .\n`</tt></p>\n<p>The <cite>-e</cite> flag when doing <cite>pip install</cite> will allow users to modify any the source code without the need of re-installing the package afterward. You may do the installation without <cite>-e</cite>, if you don\u2019t want any change on the code.</p>\n<p>## Level of Support\nWe are offering it to the community AS IS; we have used the toolkit within our organization. We are not able to provide guarantees of support. However, we welcome feedback and submission of issues. Users are encouraged to sign up on our [Allen Cell Discussion Forum](<a href=\"https://forum.allencell.org/\" rel=\"nofollow\">https://forum.allencell.org/</a>) for community quesitons and comments.</p>\n<p># Link to [Documentations and Tutorials](./docs/overview.md)</p>\n\n          </div>"}, "last_serial": 6095065, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "17b761ff10c77eef7a4d92c4fc346b55", "sha256": "74a3582e9602d2dd61299cf0f32d5981ec9f32b19c433c74ca85e3112a735039"}, "downloads": -1, "filename": "aicsmlsegment-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "17b761ff10c77eef7a4d92c4fc346b55", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12003, "upload_time": "2019-02-15T05:40:38", "upload_time_iso_8601": "2019-02-15T05:40:38.393017Z", "url": "https://files.pythonhosted.org/packages/8b/73/73034ce18b07a9f2c1a460468de7f3b30a58ae395ecbbc5a0e94ddca523e/aicsmlsegment-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "20fcf00b6ba24f328e255895b5bee457", "sha256": "9dec18e60a1dfc12a60f551ee91f029a96d794575a6ad5e93c0492feae62e65b"}, "downloads": -1, "filename": "aicsmlsegment-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "20fcf00b6ba24f328e255895b5bee457", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12004, "upload_time": "2019-02-28T00:57:46", "upload_time_iso_8601": "2019-02-28T00:57:46.408525Z", "url": "https://files.pythonhosted.org/packages/8b/c8/f01e2febb4fb3c2a6d2cedec87fc3ea7a73a626dc3510d1ed2f97d70f4fc/aicsmlsegment-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "047d9372442856a5521e3da60b981cc8", "sha256": "2465f13d1901e08299212570b464d1f3624a521405b032ec0847c8b80490cb78"}, "downloads": -1, "filename": "aicsmlsegment-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "047d9372442856a5521e3da60b981cc8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25668, "upload_time": "2019-05-02T21:11:38", "upload_time_iso_8601": "2019-05-02T21:11:38.805747Z", "url": "https://files.pythonhosted.org/packages/16/6d/aec724e73886f2d2ba6c4bb2dc402e576f8f173a3306e39ae0ac297da151/aicsmlsegment-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e4d1aec3c3730b94904761a77aec8711", "sha256": "689a28f7e47df5b066db91b6777d8114ad14f4f6f1b2b639295f7e800d3a0a6f"}, "downloads": -1, "filename": "aicsmlsegment-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4d1aec3c3730b94904761a77aec8711", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26240, "upload_time": "2019-11-07T18:27:07", "upload_time_iso_8601": "2019-11-07T18:27:07.519612Z", "url": "https://files.pythonhosted.org/packages/09/ff/1b16529bc75d3522857e6f10f18899719834ef8d605ba1dfb0fa1617a263/aicsmlsegment-0.0.4-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4d1aec3c3730b94904761a77aec8711", "sha256": "689a28f7e47df5b066db91b6777d8114ad14f4f6f1b2b639295f7e800d3a0a6f"}, "downloads": -1, "filename": "aicsmlsegment-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4d1aec3c3730b94904761a77aec8711", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26240, "upload_time": "2019-11-07T18:27:07", "upload_time_iso_8601": "2019-11-07T18:27:07.519612Z", "url": "https://files.pythonhosted.org/packages/09/ff/1b16529bc75d3522857e6f10f18899719834ef8d605ba1dfb0fa1617a263/aicsmlsegment-0.0.4-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 16:22:10 2020"}