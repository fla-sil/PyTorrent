{"info": {"author": "Nikita Solovyev", "author_email": "solovyev.nik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Unix Shell", "Topic :: Software Development", "Topic :: System", "Topic :: System :: Filesystems", "Topic :: System :: Installation/Setup", "Topic :: System :: Shells", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration", "Topic :: System :: System Shells", "Topic :: Terminals", "Topic :: Utilities"], "description": "=============\npyvenvwrapper\n=============\n\npyvenvwrapper_ is a small and lightweight set of Bash script functions, that enhance the use of Python standard library venv_ module for management of virtual environments.\nBetween Python 3.2 and Python 3.6 venv_ module was wrapped in a pyvenv_ script, that is now officially deprecated in favor of direct usage of venv_ module.\npyvenvwrapper_ functions allow to create and manipulate virtual environments and corresponding projet folders in a convenient way using only their names.\nAdditional feature is automatic activation/deactivation of virtual environment when changing current working directory in the shell.\nSince venv_ and virtualenv_ use similar technics for virtual environments, pyvenvwrapper can be used for both, though main aim is venv_.\n\n**pyvenvwrapper** can be used to manage virtual environments and corresponding project folders or only virtual environments. In former case it assumes that the same name is used for virtual environment folder and the project folder which uses this virtual environment. The directories containing this folders are configured using special variables.\n\nThe idea to create pyvenvwrapper is inspired by using virtualenvwrapper_, which at that moment didn't have support for pyvenv_ and venv_ virtual environment management. *pyvenvwrapper code is in no way related to virtualenvwrapper code.*\n\n`Full pyvenvwrapper documentation`_ is available online at readthedocs.org.\n\n------------------------------------------------------------\n\n-------------\nCompatibility\n-------------\npyvenvwrapper functions are written and tested for Bash shell, however they might work with other Bash-like shells.\npyvenvwrapper is pure shell script with calls to common system tools, so it doesn't care much on what Python version is used, therefore it should work with any Python 2 or Python 3 version. Some features will require '*pip*'.\npyvenvwrapper originally was intended to be used with '*pyvenv*' tool ('*venv*' module in Python standard library), but it supports '*virtualenv*' tool too.\n\n------------\nInstallation\n------------\nTo install **pyvenvwrapper**:\n\n1. Run '*pip install pyvenvwrapper*', this will download and install required files on your machine.\n\n2. Run '*pyvenvwrapper_enable*', this will enable pyvenvwrapper for current user by adding the following lines to user's *.bashrc* file::\n\n         source [path_to_pyvenvwrapper]/pyvenvwrapper_settings\n         source [path_to_pyvenvwrapper]/pyvenvwrapper\n\n   There's also '*pyvenvwrapper_disable*' command, which disables pyvenvwrapper for current user by removing those lines.\n\n3. Reboot your shell or run '*source ~/.bashrc*'.\n\n4. Run '*pyvenvwrapper*' to see available commands and start using **pyvenvwrapper** or see `Settings`_ to customize its behavior first.\n\nSee additional details on installation in the `documentation`_.\n\n--------\nCommands\n--------\npyvenvwrapper includes the following functions, that are used as common commands in Bash:\n\n        **mkvenv** - creates virtual environment and optionally related project folder;\n\n        **workon** - activates existing virtual environment and optionally changes current working directory to related project folder;\n\n        **deact** - deactivates currently active virtual environment and optionally changes current working directory back to the one used before this virtual environment activation;\n\n        **lsvenv** - prints existing virtual environments' names, or if used with virtual environment name as argument prints packages installed in it;\n\n        **cdvenv** - changes current working directory to specified virtual environments directory, or related project directory depending on provided options;\n\n        **cpvenv** - copies existing virtual environment with new name and optionally related project folder;\n\n        **rmvenv** - deletes existing virtual environment and optionally related project folder.\n\nAll commands support auto-completion with existing virtual environment names, and display usage and possible options when called with **-h** or **--help** options.\n\nAll commands can have added behavior before and/or after execution via custom scripts that can be assigned to special hook variables. See \"Hooks\" section in docs for details.\n\n--------\nSettings\n--------\npyvenvwrapper uses the following variables for settings (provided with defaults), which you can redefine in *pyvenvwrapper_settings* file in *pyvenvwrapper* package or in the end of user's *.bashrc* file:\n\n        **PYVENVWRAPPER_ENV_DIR=~/.virtualenvs** - directory to keep virtula environment folders, the only mandatory setting. \n\n        **PYVENVWRAPPER_PROJ_DIR=~/projects** - directory to keep project folders;\n\n        **PYVENVWRAPPER_CD_ON_WORKON=true** - enables/disables automatic current working directory change to related project folder after virtual environment activation using workon command;\n\n        **PYVENVWRAPPER_CD_ON_DEACT=true** - enables/disables automatic current working directory change after deact command execution back to the one used before virtual environment activation;\n\n        **PYVENVWRAPPER_ACTIVATE_ON_CD=true** - enables/disables automatic activation of virtual environment when changing current working directory using cd/popd/pushd command to any directory related to existing virtual environment or its corresponding project, and virtual environment deactivation when exiting it. This is made possible via redefining Bash's cd, popd, pushd built-ins, thought it's done in a transparent fashion and shouldn't affect their use in other contexts.\n\n-------\nSupport\n-------\nAny questions or issues can be reported via `GitHub Issues`_.\n\n---------\nChangelog\n---------\n\n^^^^^^^\n  1.0.0\n^^^^^^^\n- Added support for creation of virtual environments using `venv` module (`python -m venv`). It is now preferred by default with a fallback to `pyvenv` and `virtualenv`.\n  Using `venv` directly is officially recommended for creating virtual environments since Python 3.5. `pyvenv` script is officially deprecated in Python 3.6.\n- Added new option `-b`/`--python` to `mkvenv` command, that allows to specify which Python interpreter executable to use for new virtual environment. This option works with `venv` and `virtualenv`.\n\n^^^^^^^\n  0.1.0\n^^^^^^^\n- Initial version with all the main features.\n\n-------\nLicense\n-------\n*The MIT License (MIT)*\n\n**Copyright (c) 2016 Nikita Solovyev**\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n**THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.**\n\n.. _pyvenv: https://docs.python.org/3.2/library/venv.html\n.. _venv: https://docs.python.org/3/library/venv.html\n.. _virtualenv: https://pypi.python.org/pypi/virtualenv\n.. _virtualenvwrapper: https://pypi.python.org/pypi/virtualenvwrapper/\n.. _`GitHub Issues`: https://github.com/solovyevn/pyvenvwrapper/issues\n.. _pyvenvwrapper: https://github.com/solovyevn/pyvenvwrapper\n.. _`Full pyvenvwrapper documentation`: http://pyvenvwrapper.readthedocs.org/en/latest/\n.. _`documentation`: http://pyvenvwrapper.readthedocs.org/en/latest/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.python.org/pypi/pyvenvwrapper", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/solovyevn/pyvenvwrapper", "keywords": "pyvenvwrapper pyvenv venv virtualenv bash shell console project packages pip", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyvenvwrapper", "package_url": "https://pypi.org/project/pyvenvwrapper/", "platform": "", "project_url": "https://pypi.org/project/pyvenvwrapper/", "project_urls": {"Download": "http://pypi.python.org/pypi/pyvenvwrapper", "Homepage": "http://github.com/solovyevn/pyvenvwrapper"}, "release_url": "https://pypi.org/project/pyvenvwrapper/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "pyvenvwrapper is a small and lightweight set of Bash script functions, that enhance the use of venv module for management of virtual environments.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/solovyevn/pyvenvwrapper\" rel=\"nofollow\">pyvenvwrapper</a> is a small and lightweight set of Bash script functions, that enhance the use of Python standard library <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> module for management of virtual environments.\nBetween Python 3.2 and Python 3.6 <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> module was wrapped in a <a href=\"https://docs.python.org/3.2/library/venv.html\" rel=\"nofollow\">pyvenv</a> script, that is now officially deprecated in favor of direct usage of <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> module.\n<a href=\"https://github.com/solovyevn/pyvenvwrapper\" rel=\"nofollow\">pyvenvwrapper</a> functions allow to create and manipulate virtual environments and corresponding projet folders in a convenient way using only their names.\nAdditional feature is automatic activation/deactivation of virtual environment when changing current working directory in the shell.\nSince <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> and <a href=\"https://pypi.python.org/pypi/virtualenv\" rel=\"nofollow\">virtualenv</a> use similar technics for virtual environments, pyvenvwrapper can be used for both, though main aim is <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a>.</p>\n<p><strong>pyvenvwrapper</strong> can be used to manage virtual environments and corresponding project folders or only virtual environments. In former case it assumes that the same name is used for virtual environment folder and the project folder which uses this virtual environment. The directories containing this folders are configured using special variables.</p>\n<p>The idea to create pyvenvwrapper is inspired by using <a href=\"https://pypi.python.org/pypi/virtualenvwrapper/\" rel=\"nofollow\">virtualenvwrapper</a>, which at that moment didn\u2019t have support for <a href=\"https://docs.python.org/3.2/library/venv.html\" rel=\"nofollow\">pyvenv</a> and <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> virtual environment management. <em>pyvenvwrapper code is in no way related to virtualenvwrapper code.</em></p>\n<p><a href=\"http://pyvenvwrapper.readthedocs.org/en/latest/\" rel=\"nofollow\">Full pyvenvwrapper documentation</a> is available online at readthedocs.org.</p>\n<hr class=\"docutils\">\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>pyvenvwrapper functions are written and tested for Bash shell, however they might work with other Bash-like shells.\npyvenvwrapper is pure shell script with calls to common system tools, so it doesn\u2019t care much on what Python version is used, therefore it should work with any Python 2 or Python 3 version. Some features will require \u2018<em>pip</em>\u2019.\npyvenvwrapper originally was intended to be used with \u2018<em>pyvenv</em>\u2019 tool (\u2018<em>venv</em>\u2019 module in Python standard library), but it supports \u2018<em>virtualenv</em>\u2019 tool too.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <strong>pyvenvwrapper</strong>:</p>\n<ol>\n<li><p>Run \u2018<em>pip install pyvenvwrapper</em>\u2019, this will download and install required files on your machine.</p>\n</li>\n<li><p>Run \u2018<em>pyvenvwrapper_enable</em>\u2019, this will enable pyvenvwrapper for current user by adding the following lines to user\u2019s <em>.bashrc</em> file:</p>\n<pre>source [path_to_pyvenvwrapper]/pyvenvwrapper_settings\nsource [path_to_pyvenvwrapper]/pyvenvwrapper\n</pre>\n<p>There\u2019s also \u2018<em>pyvenvwrapper_disable</em>\u2019 command, which disables pyvenvwrapper for current user by removing those lines.</p>\n</li>\n<li><p>Reboot your shell or run \u2018<em>source ~/.bashrc</em>\u2019.</p>\n</li>\n<li><p>Run \u2018<em>pyvenvwrapper</em>\u2019 to see available commands and start using <strong>pyvenvwrapper</strong> or see <a href=\"#settings\" rel=\"nofollow\">Settings</a> to customize its behavior first.</p>\n</li>\n</ol>\n<p>See additional details on installation in the <a href=\"http://pyvenvwrapper.readthedocs.org/en/latest/\" rel=\"nofollow\">documentation</a>.</p>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<p>pyvenvwrapper includes the following functions, that are used as common commands in Bash:</p>\n<blockquote>\n<p><strong>mkvenv</strong> - creates virtual environment and optionally related project folder;</p>\n<p><strong>workon</strong> - activates existing virtual environment and optionally changes current working directory to related project folder;</p>\n<p><strong>deact</strong> - deactivates currently active virtual environment and optionally changes current working directory back to the one used before this virtual environment activation;</p>\n<p><strong>lsvenv</strong> - prints existing virtual environments\u2019 names, or if used with virtual environment name as argument prints packages installed in it;</p>\n<p><strong>cdvenv</strong> - changes current working directory to specified virtual environments directory, or related project directory depending on provided options;</p>\n<p><strong>cpvenv</strong> - copies existing virtual environment with new name and optionally related project folder;</p>\n<p><strong>rmvenv</strong> - deletes existing virtual environment and optionally related project folder.</p>\n</blockquote>\n<p>All commands support auto-completion with existing virtual environment names, and display usage and possible options when called with <strong>-h</strong> or <strong>\u2013help</strong> options.</p>\n<p>All commands can have added behavior before and/or after execution via custom scripts that can be assigned to special hook variables. See \u201cHooks\u201d section in docs for details.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>pyvenvwrapper uses the following variables for settings (provided with defaults), which you can redefine in <em>pyvenvwrapper_settings</em> file in <em>pyvenvwrapper</em> package or in the end of user\u2019s <em>.bashrc</em> file:</p>\n<blockquote>\n<p><strong>PYVENVWRAPPER_ENV_DIR=~/.virtualenvs</strong> - directory to keep virtula environment folders, the only mandatory setting.</p>\n<p><strong>PYVENVWRAPPER_PROJ_DIR=~/projects</strong> - directory to keep project folders;</p>\n<p><strong>PYVENVWRAPPER_CD_ON_WORKON=true</strong> - enables/disables automatic current working directory change to related project folder after virtual environment activation using workon command;</p>\n<p><strong>PYVENVWRAPPER_CD_ON_DEACT=true</strong> - enables/disables automatic current working directory change after deact command execution back to the one used before virtual environment activation;</p>\n<p><strong>PYVENVWRAPPER_ACTIVATE_ON_CD=true</strong> - enables/disables automatic activation of virtual environment when changing current working directory using cd/popd/pushd command to any directory related to existing virtual environment or its corresponding project, and virtual environment deactivation when exiting it. This is made possible via redefining Bash\u2019s cd, popd, pushd built-ins, thought it\u2019s done in a transparent fashion and shouldn\u2019t affect their use in other contexts.</p>\n</blockquote>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>Any questions or issues can be reported via <a href=\"https://github.com/solovyevn/pyvenvwrapper/issues\" rel=\"nofollow\">GitHub Issues</a>.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0.0</h3>\n<ul>\n<li>Added support for creation of virtual environments using <cite>venv</cite> module (<cite>python -m venv</cite>). It is now preferred by default with a fallback to <cite>pyvenv</cite> and <cite>virtualenv</cite>.\nUsing <cite>venv</cite> directly is officially recommended for creating virtual environments since Python 3.5. <cite>pyvenv</cite> script is officially deprecated in Python 3.6.</li>\n<li>Added new option <cite>-b</cite>/<cite>\u2013python</cite> to <cite>mkvenv</cite> command, that allows to specify which Python interpreter executable to use for new virtual environment. This option works with <cite>venv</cite> and <cite>virtualenv</cite>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0</h3>\n<ul>\n<li>Initial version with all the main features.</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><em>The MIT License (MIT)</em></p>\n<p><strong>Copyright (c) 2016 Nikita Solovyev</strong></p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p><strong>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</strong></p>\n</div>\n\n          </div>"}, "last_serial": 4276533, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "14a83f2565848bd2085751ba4bf99300", "sha256": "d6bebb800c02414ebf979f26448aa6dd7e6a82d7b88862d276c05f8526218083"}, "downloads": -1, "filename": "pyvenvwrapper-0.1.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "14a83f2565848bd2085751ba4bf99300", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23370, "upload_time": "2016-02-29T09:46:02", "upload_time_iso_8601": "2016-02-29T09:46:02.450727Z", "url": "https://files.pythonhosted.org/packages/fa/3e/20a238ff6dfad73353d47f82459ae0e67796f74b3764e4531a461a1012b8/pyvenvwrapper-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7677a22bd795bd34f059e7fa69d08777", "sha256": "bdf7f41f519ac6b2d7d85b901a456291674984c3a7ef23c0564ffe2193a66c8f"}, "downloads": -1, "filename": "pyvenvwrapper-0.1.0.tar.gz", "has_sig": true, "md5_digest": "7677a22bd795bd34f059e7fa69d08777", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 925529, "upload_time": "2016-02-29T09:46:24", "upload_time_iso_8601": "2016-02-29T09:46:24.580578Z", "url": "https://files.pythonhosted.org/packages/3f/16/3e625d8ce7a9f2c7504d0871cac6fbc9fa18d2cc00830d596a223e70c6f8/pyvenvwrapper-0.1.0.tar.gz", "yanked": false}], "0.1.0b0": [], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "d8bcbbbe4b4330416f77f9438ec8b8dd", "sha256": "2da675ab5acf209901501d3339923f25c2b4a279b71b25426cc26f3e8dfa446d"}, "downloads": -1, "filename": "pyvenvwrapper-0.1.0b1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d8bcbbbe4b4330416f77f9438ec8b8dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23006, "upload_time": "2016-01-28T07:39:32", "upload_time_iso_8601": "2016-01-28T07:39:32.320332Z", "url": "https://files.pythonhosted.org/packages/71/06/f702703767a4a98c3724e7ae81a3fff1f54b2132a5b556502686e5e2617f/pyvenvwrapper-0.1.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d060234d793fb157bfa3a0f88c7befaf", "sha256": "daa69691429ae2f827ceb0c48c170de209772ef70824ea99109d41b420c06a44"}, "downloads": -1, "filename": "pyvenvwrapper-0.1.0b1.tar.gz", "has_sig": true, "md5_digest": "d060234d793fb157bfa3a0f88c7befaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 247997, "upload_time": "2016-01-28T07:39:47", "upload_time_iso_8601": "2016-01-28T07:39:47.942982Z", "url": "https://files.pythonhosted.org/packages/93/41/608e4722275d8a737c75f605e285c522182199b9422621a1d0c0ead51be9/pyvenvwrapper-0.1.0b1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "23c7546c0d30352a1f213b632785b73c", "sha256": "f8b1952392bbfe83c3e878ef62bab955bc662b1cd8e5a167e3ca901638c09c9c"}, "downloads": -1, "filename": "pyvenvwrapper-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "23c7546c0d30352a1f213b632785b73c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24541, "upload_time": "2018-09-16T13:07:03", "upload_time_iso_8601": "2018-09-16T13:07:03.170900Z", "url": "https://files.pythonhosted.org/packages/5c/0e/f3cb4827347264f097d1b79a8ed5b435febb191444e7c791b2b36144a515/pyvenvwrapper-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f399309b62640ac19b4071892eb7029", "sha256": "8e213e01c7152a708171106719d438621a3de576b9680d0e8c78af8b3cbbf30b"}, "downloads": -1, "filename": "pyvenvwrapper-1.0.0.tar.gz", "has_sig": true, "md5_digest": "7f399309b62640ac19b4071892eb7029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6075828, "upload_time": "2018-09-16T13:07:06", "upload_time_iso_8601": "2018-09-16T13:07:06.627581Z", "url": "https://files.pythonhosted.org/packages/f8/b6/471d6481983501b7f902851cc3fa662c6c651a0db91c56b262e0a37ead4d/pyvenvwrapper-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23c7546c0d30352a1f213b632785b73c", "sha256": "f8b1952392bbfe83c3e878ef62bab955bc662b1cd8e5a167e3ca901638c09c9c"}, "downloads": -1, "filename": "pyvenvwrapper-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "23c7546c0d30352a1f213b632785b73c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24541, "upload_time": "2018-09-16T13:07:03", "upload_time_iso_8601": "2018-09-16T13:07:03.170900Z", "url": "https://files.pythonhosted.org/packages/5c/0e/f3cb4827347264f097d1b79a8ed5b435febb191444e7c791b2b36144a515/pyvenvwrapper-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f399309b62640ac19b4071892eb7029", "sha256": "8e213e01c7152a708171106719d438621a3de576b9680d0e8c78af8b3cbbf30b"}, "downloads": -1, "filename": "pyvenvwrapper-1.0.0.tar.gz", "has_sig": true, "md5_digest": "7f399309b62640ac19b4071892eb7029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6075828, "upload_time": "2018-09-16T13:07:06", "upload_time_iso_8601": "2018-09-16T13:07:06.627581Z", "url": "https://files.pythonhosted.org/packages/f8/b6/471d6481983501b7f902851cc3fa662c6c651a0db91c56b262e0a37ead4d/pyvenvwrapper-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:08 2020"}