{"info": {"author": "Anthony SKORSKI", "author_email": "skorski.anthony+pg_jsonb_flattener@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Database"], "description": ".. |master_pipeline| image:: https://gitlab.skor.ski/askorski/pg_jsonb_flattener/badges/master/pipeline.svg\n.. |master_coverage| image:: https://gitlab.skor.ski/askorski/pg_jsonb_flattener/badges/master/coverage.svg\n.. |develop_pipeline| image:: https://gitlab.skor.ski/askorski/pg_jsonb_flattener/badges/develop/pipeline.svg\n.. |develop_coverage| image:: https://gitlab.skor.ski/askorski/pg_jsonb_flattener/badges/develop/coverage.svg\n\n\npg_jsonb_flattener\n##################\n\n\nThe `pg_jsonb_flattener` is a tool to ease selection of Postgresql table which\ncontains JSONB typed fields.\n\nProvided with a description of the data (a sort of jsonschema) contained in a\nJSONB field, it is able to build a selectable sqlalchemy expression which can\nbe used as a plain Postgresql table for SELECT queries.\n\nStatus\n******\n\n+---------+---------------------+---------------------+\n| branch  | CI                  | Coverage            |\n+=========+=====================+=====================+\n| master  | |master_pipeline|   | |master_coverage|   |\n+---------+---------------------+---------------------+\n| develop | |develop_pipeline|  | |develop_coverage|  |\n+---------+---------------------+---------------------+\n\nUsage\n*****\n\nThe tool is used by instantiating a `JsonbTable` providing it:\n\n* a sqlaclehmy table description as the only positionnal argument\n* a *JSON data description* for each *JSONB field* to flatten as named arguments\n  where the argument name is the *JSONB field* name and the argument value is\n  the *JSON data description*.\n\nThe code below illustrates how the tool can be used to obtain a\n`flat selectable` from a data description written in a JSON file.\n\n.. code-block:: python\n\n   from sqlalchemy import create_engine, MetaData, Table\n   from pg_jsonb_flattener import JsonbTable\n\n   ENGINE = create_engine('some database URL')\n   METADATA = MetaData()\n   ONE_JSON_FIELD_TABLE = Table(\n       'one_json_field_table', METADATA,\n       Column('field_one', JSONB)\n   )\n   DATA_DESCRIPTION = json.load('path/to/data_description.json')\n\n   jsonb_table = JsonbTable(ONE_JSON_FIELD_TABLE, field_one=DATA_DESCRIPTION)\n\n   flat_selectable = jsonb_table.get_query()\n\n   with engine.connect() as conn:\n       result = conn.execute(flat_selectable).fetchall()\n\nThen, the ``flat_selectable`` variable contains a selectable expression which acts\nas a table where the JSONB `field_one` field has been replaced by several\nscalar typed fields whose names are build from the original JSONB field name\nand the path of the data in the data structure, with a double undercore as\nseparator.\n\nYou can execute directly the ``flat_selectable`` to inspect what it contains\n(this is what is done in the example to get the ``result`` variable) or use it as\na plain table to build more complex queries.\n\nSee below examples for more details.\n\n\nSimple types\n============\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"integer\": {\"type\": \"integer\"},\n       \"number\": {\"type\": \"number\"},\n       \"string\": {\"type\": \"string\"}\n       \"boolean\": {\"type\": \"boolean\"}\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__integer``\n* ``field_one__number``\n* ``field_one__string``\n* ``field_one__boolean``\n\nGiven the following JSON data in one record::\n\n   {\n     \"integer\": 42,\n     \"number\": 3.141592,\n     \"string\": \"pouet\",\n     \"boolean\": false\n   }\n\nThe ``result`` variable would contain this:\n\n+-----------------------+----------------------+----------------------+----------------------+\n| field_one__integer    | field_one__number    | field_one__string    | field_one__boolean   |\n+=======================+======================+======================+======================+\n| 42                    | 3.141592             | pouet                | false                |\n+-----------------------+----------------------+----------------------+----------------------+\n\n\nSimple objects\n==============\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"object\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"obj_int\": {\"type\": \"integer\"},\n           \"obj_num\": {\"type\": \"number\"},\n           \"obj_str\": {\"type\": \"string\"}\n         }\n       }\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__object__obj_int``\n* ``field_one__object__obj_num``\n* ``field_one__object__obj_str``\n\nGiven the following JSON data in one record::\n\n   {\n     \"object\": {\n       \"obj_int\": 42,\n       \"obj_num\": 3.141592,\n       \"obj_str\": \"pouet\"\n     }\n   }\n\nThe ``result`` variable would contain this:\n\n+----------------------------------+----------------------------------+----------------------------------+\n| field_one__object__obj_int       | field_one__object__obj_num       | field_one__object__obj_str       |\n+==================================+==================================+==================================+\n| 42                               | 3.141592                         | pouet                            |\n+----------------------------------+----------------------------------+----------------------------------+\n\n\nSimple arrays\n=============\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"int_arr\": {\n         \"type\": \"array\",\n         \"items\": {\"type\": \"integer\"}\n       },\n       \"num_arr\": {\n         \"type\": \"array\",\n         \"items\": {\"type\": \"number\"}\n       },\n       \"str_arr\": {\n         \"type\": \"array\",\n         \"items\": {\"type\": \"string\"}\n       }\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__int_arr__item``\n* ``field_one__int_arr__item__index``\n* ``field_one__num_arr__item``\n* ``field_one__num_arr__item__index``\n* ``field_one__str_arr__item``\n* ``field_one__str_arr__item__index``\n\n.. note::\n\n   As you can see each array field is suffixed by an `item` part and each array\n   data is identified by an index which allows to retrieve the order of the\n   data in the JSONB array.\n\nGiven the following JSON data in one record::\n\n   {\n     \"int_arr\": [42, 77, 1664],\n     \"num_arr\": [3.141592, 1.618034, 37.2],\n     \"str_arr\": [\"pouet\", \"foo\", \"bar\"]\n   }\n\nThe ``result`` variable would contain this:\n\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| field_one__int_arr__item | field_one__int_arr__item__index | field_one__num_arr__item | field_one__num_arr__item__index | field_one__str_arr__item | field_one__str_arr__item__index |\n+==========================+=================================+==========================+=================================+==========================+=================================+\n| 42                       | 1                               | NULL                     | NULL                            | NULL                     | NULL                            |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| 77                       | 2                               | NULL                     | NULL                            | NULL                     | NULL                            |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| 1664                     | 3                               | NULL                     | NULL                            | NULL                     | NULL                            |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| NULL                     | NULL                            | 3.141592                 | 1                               | NULL                     | NULL                            |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| NULL                     | NULL                            | 1.618034                 | 2                               | NULL                     | NULL                            |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| NULL                     | NULL                            | 37.2                     | 3                               | NULL                     | NULL                            |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| NULL                     | NULL                            | NULL                     | NULL                            | pouet                    | 1                               |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| NULL                     | NULL                            | NULL                     | NULL                            | foo                      | 2                               |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n| NULL                     | NULL                            | NULL                     | NULL                            | bar                      | 3                               |\n+--------------------------+---------------------------------+--------------------------+---------------------------------+--------------------------+---------------------------------+\n\n\nArray of objects\n================\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"array\": {\n         \"type\": \"array\",\n         \"items\": {\n           \"type\": \"object\",\n           \"properties\": {\n             \"obj_int\": {\"type\": \"integer\"},\n             \"obj_num\": {\"type\": \"number\"},\n             \"obj_str\": {\"type\": \"string\"}\n           }\n         }\n       }\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__array__item__index``\n* ``field_one__array__item__obj_int``\n* ``field_one__array__item__obj_num``\n* ``field_one__array__item__obj_str``\n\nGiven the following JSON data in one record::\n\n   {\n     \"array\": [\n       {\n         \"obj_int\": 42,\n         \"obj_num\": 3.141592,\n         \"obj_str\": \"pouet\"\n       },\n       {\n         \"obj_int\": 77,\n         \"obj_num\": 1.618034,\n         \"obj_str\": \"toto\"\n       }\n     ]\n   }\n\nThe ``result`` variable would contain this:\n\n+-------------------------------+---------------------------------+---------------------------------+---------------------------------+\n| field_one__array__item__index | field_one__array__item__obj_int | field_one__array__item__obj_num | field_one__array__item__obj_str |\n+===============================+=================================+=================================+=================================+\n| 1                             | 42                              | 3.141592                        | pouet                           |\n+-------------------------------+---------------------------------+---------------------------------+---------------------------------+\n| 2                             | 77                              | 1.618034                        | toto                            |\n+-------------------------------+---------------------------------+---------------------------------+---------------------------------+\n\n\nArrays in object\n================\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"object\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"int_arr\": {\n             \"type\": \"array\",\n             \"items\": {\"type\": \"integer\"}\n           },\n           \"num_arr\": {\n             \"type\": \"array\",\n             \"items\": {\"type\": \"number\"}\n           },\n           \"str_arr\": {\n             \"type\": \"array\",\n             \"items\": {\"type\": \"string\"}\n           }\n         }\n       }\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__object__int_arr__item``\n* ``field_one__object__int_arr__item__index``\n* ``field_one__object__num_arr__item``\n* ``field_one__object__num_arr__item__index``\n* ``field_one__object__str_arr__item``\n* ``field_one__object__str_arr__item__index``\n\nGiven the following JSON data in one record::\n\n   {\n     \"object\": {\n       \"int_arr\": [42, 77, 1664],\n       \"num_arr\": [3.141592, 1.618034, 37.2],\n       \"str_arr\": [\"pouet\", \"foo\", \"bar\"]\n     }\n   }\n\nThe ``result`` variable would contain this:\n\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| field_one__object__int_arr__item | field_one__object__int_arr__item__index | field_one__object__num_arr__item | field_one__object__num_arr__item__index | field_one__object__str_arr__item | field_one__object__str_arr__item__index |\n+==================================+=========================================+==================================+=========================================+==================================+=========================================+\n| 42                               | 1                                       | NULL                             | NULL                                    | NULL                             | NULL                                    |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| 77                               | 2                                       | NULL                             | NULL                                    | NULL                             | NULL                                    |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| 1664                             | 3                                       | NULL                             | NULL                                    | NULL                             | NULL                                    |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| NULL                             | NULL                                    | 3.141592                         | 1                                       | NULL                             | NULL                                    |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| NULL                             | NULL                                    | 1.618034                         | 2                                       | NULL                             | NULL                                    |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| NULL                             | NULL                                    | 37.2                             | 3                                       | NULL                             | NULL                                    |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| NULL                             | NULL                                    | NULL                             | NULL                                    | pouet                            | 1                                       |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| NULL                             | NULL                                    | NULL                             | NULL                                    | foo                              | 2                                       |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n| NULL                             | NULL                                    | NULL                             | NULL                                    | bar                              | 3                                       |\n+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+----------------------------------+-----------------------------------------+\n\n\nNested objects\n==============\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"object\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"nested\": {\n             \"type\": \"object\",\n             \"properties\": {\n               \"obj_int\": {\"type\": \"integer\"},\n               \"obj_num\": {\"type\": \"number\"},\n               \"obj_str\": {\"type\": \"string\"}\n             }\n           }\n         }\n       }\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__object__nested__obj_int``\n* ``field_one__object__nested__obj_num``\n* ``field_one__object__nested__obj_str``\n\nGiven the following JSON data in one record::\n\n   {\n     \"object\": {\n       \"nested\": {\n         \"obj_int\": 42,\n         \"obj_num\": 3.141592,\n         \"obj_str\": \"pouet\"\n       }\n     }\n   }\n\nThe ``result`` variable would contain this:\n\n+------------------------------------+------------------------------------+------------------------------------+\n| field_one__object__nested__obj_int | field_one__object__nested__obj_num | field_one__object__nested__obj_str |\n+====================================+====================================+====================================+\n| 42                                 | 3.141592                           | pouet                              |\n+------------------------------------+------------------------------------+------------------------------------+\n\n\nNested arrays\n=============\n\nGiven the following data description::\n\n   {\n     \"type\": \"object\",\n     \"properties\": {\n       \"nested_arrays\": {\n         \"type\": \"array\",\n         \"items\": {\n           \"type\": \"array\",\n           \"items\": {\"type\": \"string\"}\n         }\n       }\n     }\n   }\n\n``flat_selectable`` would provide the following fields:\n\n* ``field_one__nested_arrays__item__index``\n* ``field_one__nested_arrays__item__item__index``\n* ``field_one__nested_arrays__item__item``\n\nGiven the following JSON data in one record::\n\n   {\n     \"nested_arrays\": [\n       [\"abc\", \"def\"],\n       [\"tuw\", \"xyz\"]\n     ]\n   }\n\nThe ``result`` variable would contain this:\n\n+---------------------------------------+---------------------------------------------+--------------------------------------+\n| field_one__nested_arrays__item__index | field_one__nested_arrays__item__item__index | field_one__nested_arrays__item__item |\n+=======================================+=============================================+======================================+\n| 1                                     | 1                                           | abc                                  |\n+---------------------------------------+---------------------------------------------+--------------------------------------+\n| 1                                     | 2                                           | def                                  |\n+---------------------------------------+---------------------------------------------+--------------------------------------+\n| 2                                     | 1                                           | tuw                                  |\n+---------------------------------------+---------------------------------------------+--------------------------------------+\n| 2                                     | 2                                           | xyz                                  |\n+---------------------------------------+---------------------------------------------+--------------------------------------+\n\n\nData \"preservation\"\n===================\n\nthe `pg_jsonb_flattener` tool allows to specify chunks of JSON data not to be\nflattened by providing a full name of data to preserve in a list passed at\n`JsonbTable` instantiation via the `preserved` optional argument. See examples\nbelow with nested arrays:\n\n.. code-block:: python\n\n   jsonb_table = JsonbTable(ONE_JSON_FIELD_TABLE, field_one=DATA_DESCRIPTION,\n                            preserved=['field_one__nested_arrays__item'])\n\n   flat_selectable = jsonb_table.get_query()\n\n   with engine.connect() as conn:\n       result = conn.execute(flat_selectable).fetchall()\n\nIn this case, the `flat_selectable` would provide the following fields:\n\n* ``field_one__nested_arrays__item__index``\n* ``field_one__nested_arrays__item``\n\nThe ``result`` variable would contain this:\n\n+---------------------------------------+--------------------------------+\n| field_one__nested_arrays__item__index | field_one__nested_arrays__item |\n+=======================================+================================+\n| 1                                     | [\"abc\", \"def\"]                 |\n+---------------------------------------+--------------------------------+\n| 2                                     | [\"tuw\", \"xyz\"]                 |\n+---------------------------------------+--------------------------------+\n\n\nThis also works for the nesting array and preserving the\n`field_one__nested_arrays` would result in the  following fields and result:\n\n* ``field_one__nested_arrays``\n\n+----------------------------------+\n| field_one__nested_arrays         |\n+==================================+\n| [[\"abc\", \"def\"], [\"tuw\", \"xyz\"]] |\n+----------------------------------+\n\n\nObjects can also be preserved, see examples with nested objects.\n\nPreserving `field_one__object__nested` gives the following fields and result:\n\n* ``field_one__object__nested``\n\n+----------------------------------------------------------+\n| field_one__object__nested                                |\n+==========================================================+\n| {'obj_int': 42, 'obj_num': 3.141592, 'obj_str': 'pouet'} |\n+----------------------------------------------------------+\n\nPreserving `field_one__object` gives the following fields and result:\n\n* ``field_one__object``\n\n+----------------------------------------------------------------------+\n| field_one__object__nested                                            |\n+======================================================================+\n| {'nested': {'obj_int': 42, 'obj_num': 3.141592, 'obj_str': 'pouet'}} |\n+----------------------------------------------------------------------+\n\n.. note::\n\n   Of course, it is possible to preserve objects in arrays and arrays in objects\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/askorski/pg_jsonb_flattener", "keywords": "postgresql,jsonb,sqlalchemy", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pg-jsonb-flattener", "package_url": "https://pypi.org/project/pg-jsonb-flattener/", "platform": "", "project_url": "https://pypi.org/project/pg-jsonb-flattener/", "project_urls": {"Homepage": "https://gitlab.com/askorski/pg_jsonb_flattener"}, "release_url": "https://pypi.org/project/pg-jsonb-flattener/0.2.0/", "requires_dist": ["psycopg2", "sqlalchemy", "flake8 ; extra == 'dev'", "flake8-html ; extra == 'dev'", "sphinx ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'", "coverage ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "pytest-html ; extra == 'dev'", "coverage ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-html ; extra == 'test'"], "requires_python": "", "summary": "JSONB data flattener for Postgresl", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <cite>pg_jsonb_flattener</cite> is a tool to ease selection of Postgresql table which\ncontains JSONB typed fields.</p>\n<p>Provided with a description of the data (a sort of jsonschema) contained in a\nJSONB field, it is able to build a selectable sqlalchemy expression which can\nbe used as a plain Postgresql table for SELECT queries.</p>\n<div id=\"status\">\n<h2>Status</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>branch</th>\n<th>CI</th>\n<th>Coverage</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>master</td>\n<td><img alt=\"master_pipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/827ca481aba6095ba1bcd6ee08515e747a600b42/68747470733a2f2f6769746c61622e736b6f722e736b692f61736b6f72736b692f70675f6a736f6e625f666c617474656e65722f6261646765732f6d61737465722f706970656c696e652e737667\"></td>\n<td><img alt=\"master_coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3d6895ee6fa723421e3c272061ad0846f79c7cc/68747470733a2f2f6769746c61622e736b6f722e736b692f61736b6f72736b692f70675f6a736f6e625f666c617474656e65722f6261646765732f6d61737465722f636f7665726167652e737667\"></td>\n</tr>\n<tr><td>develop</td>\n<td><img alt=\"develop_pipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a6c66c90aeda16a7f66db8f9d96d404c6e40af3/68747470733a2f2f6769746c61622e736b6f722e736b692f61736b6f72736b692f70675f6a736f6e625f666c617474656e65722f6261646765732f646576656c6f702f706970656c696e652e737667\"></td>\n<td><img alt=\"develop_coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a97b160157e51d4f9dc77478dd9017159f9ff5f/68747470733a2f2f6769746c61622e736b6f722e736b692f61736b6f72736b692f70675f6a736f6e625f666c617474656e65722f6261646765732f646576656c6f702f636f7665726167652e737667\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The tool is used by instantiating a <cite>JsonbTable</cite> providing it:</p>\n<ul>\n<li>a sqlaclehmy table description as the only positionnal argument</li>\n<li>a <em>JSON data description</em> for each <em>JSONB field</em> to flatten as named arguments\nwhere the argument name is the <em>JSONB field</em> name and the argument value is\nthe <em>JSON data description</em>.</li>\n</ul>\n<p>The code below illustrates how the tool can be used to obtain a\n<cite>flat selectable</cite> from a data description written in a JSON file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span><span class=\"p\">,</span> <span class=\"n\">MetaData</span><span class=\"p\">,</span> <span class=\"n\">Table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pg_jsonb_flattener</span> <span class=\"kn\">import</span> <span class=\"n\">JsonbTable</span>\n\n<span class=\"n\">ENGINE</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s1\">'some database URL'</span><span class=\"p\">)</span>\n<span class=\"n\">METADATA</span> <span class=\"o\">=</span> <span class=\"n\">MetaData</span><span class=\"p\">()</span>\n<span class=\"n\">ONE_JSON_FIELD_TABLE</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span>\n    <span class=\"s1\">'one_json_field_table'</span><span class=\"p\">,</span> <span class=\"n\">METADATA</span><span class=\"p\">,</span>\n    <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s1\">'field_one'</span><span class=\"p\">,</span> <span class=\"n\">JSONB</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">DATA_DESCRIPTION</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'path/to/data_description.json'</span><span class=\"p\">)</span>\n\n<span class=\"n\">jsonb_table</span> <span class=\"o\">=</span> <span class=\"n\">JsonbTable</span><span class=\"p\">(</span><span class=\"n\">ONE_JSON_FIELD_TABLE</span><span class=\"p\">,</span> <span class=\"n\">field_one</span><span class=\"o\">=</span><span class=\"n\">DATA_DESCRIPTION</span><span class=\"p\">)</span>\n\n<span class=\"n\">flat_selectable</span> <span class=\"o\">=</span> <span class=\"n\">jsonb_table</span><span class=\"o\">.</span><span class=\"n\">get_query</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">conn</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">flat_selectable</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n</pre>\n<p>Then, the <tt>flat_selectable</tt> variable contains a selectable expression which acts\nas a table where the JSONB <cite>field_one</cite> field has been replaced by several\nscalar typed fields whose names are build from the original JSONB field name\nand the path of the data in the data structure, with a double undercore as\nseparator.</p>\n<p>You can execute directly the <tt>flat_selectable</tt> to inspect what it contains\n(this is what is done in the example to get the <tt>result</tt> variable) or use it as\na plain table to build more complex queries.</p>\n<p>See below examples for more details.</p>\n<div id=\"simple-types\">\n<h3>Simple types</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"integer\": {\"type\": \"integer\"},\n    \"number\": {\"type\": \"number\"},\n    \"string\": {\"type\": \"string\"}\n    \"boolean\": {\"type\": \"boolean\"}\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__integer</tt></li>\n<li><tt>field_one__number</tt></li>\n<li><tt>field_one__string</tt></li>\n<li><tt>field_one__boolean</tt></li>\n</ul>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"integer\": 42,\n  \"number\": 3.141592,\n  \"string\": \"pouet\",\n  \"boolean\": false\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__integer</th>\n<th>field_one__number</th>\n<th>field_one__string</th>\n<th>field_one__boolean</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>42</td>\n<td>3.141592</td>\n<td>pouet</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"simple-objects\">\n<h3>Simple objects</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"object\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"obj_int\": {\"type\": \"integer\"},\n        \"obj_num\": {\"type\": \"number\"},\n        \"obj_str\": {\"type\": \"string\"}\n      }\n    }\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__object__obj_int</tt></li>\n<li><tt>field_one__object__obj_num</tt></li>\n<li><tt>field_one__object__obj_str</tt></li>\n</ul>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"object\": {\n    \"obj_int\": 42,\n    \"obj_num\": 3.141592,\n    \"obj_str\": \"pouet\"\n  }\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__object__obj_int</th>\n<th>field_one__object__obj_num</th>\n<th>field_one__object__obj_str</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>42</td>\n<td>3.141592</td>\n<td>pouet</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"simple-arrays\">\n<h3>Simple arrays</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"int_arr\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"}\n    },\n    \"num_arr\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"}\n    },\n    \"str_arr\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"}\n    }\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__int_arr__item</tt></li>\n<li><tt>field_one__int_arr__item__index</tt></li>\n<li><tt>field_one__num_arr__item</tt></li>\n<li><tt>field_one__num_arr__item__index</tt></li>\n<li><tt>field_one__str_arr__item</tt></li>\n<li><tt>field_one__str_arr__item__index</tt></li>\n</ul>\n<div>\n<p>Note</p>\n<p>As you can see each array field is suffixed by an <cite>item</cite> part and each array\ndata is identified by an index which allows to retrieve the order of the\ndata in the JSONB array.</p>\n</div>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"int_arr\": [42, 77, 1664],\n  \"num_arr\": [3.141592, 1.618034, 37.2],\n  \"str_arr\": [\"pouet\", \"foo\", \"bar\"]\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__int_arr__item</th>\n<th>field_one__int_arr__item__index</th>\n<th>field_one__num_arr__item</th>\n<th>field_one__num_arr__item__index</th>\n<th>field_one__str_arr__item</th>\n<th>field_one__str_arr__item__index</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>42</td>\n<td>1</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>77</td>\n<td>2</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>1664</td>\n<td>3</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>3.141592</td>\n<td>1</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>1.618034</td>\n<td>2</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>37.2</td>\n<td>3</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>pouet</td>\n<td>1</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>foo</td>\n<td>2</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>bar</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"array-of-objects\">\n<h3>Array of objects</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"array\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"obj_int\": {\"type\": \"integer\"},\n          \"obj_num\": {\"type\": \"number\"},\n          \"obj_str\": {\"type\": \"string\"}\n        }\n      }\n    }\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__array__item__index</tt></li>\n<li><tt>field_one__array__item__obj_int</tt></li>\n<li><tt>field_one__array__item__obj_num</tt></li>\n<li><tt>field_one__array__item__obj_str</tt></li>\n</ul>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"array\": [\n    {\n      \"obj_int\": 42,\n      \"obj_num\": 3.141592,\n      \"obj_str\": \"pouet\"\n    },\n    {\n      \"obj_int\": 77,\n      \"obj_num\": 1.618034,\n      \"obj_str\": \"toto\"\n    }\n  ]\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__array__item__index</th>\n<th>field_one__array__item__obj_int</th>\n<th>field_one__array__item__obj_num</th>\n<th>field_one__array__item__obj_str</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1</td>\n<td>42</td>\n<td>3.141592</td>\n<td>pouet</td>\n</tr>\n<tr><td>2</td>\n<td>77</td>\n<td>1.618034</td>\n<td>toto</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"arrays-in-object\">\n<h3>Arrays in object</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"object\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"int_arr\": {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"integer\"}\n        },\n        \"num_arr\": {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"}\n        },\n        \"str_arr\": {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"string\"}\n        }\n      }\n    }\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__object__int_arr__item</tt></li>\n<li><tt>field_one__object__int_arr__item__index</tt></li>\n<li><tt>field_one__object__num_arr__item</tt></li>\n<li><tt>field_one__object__num_arr__item__index</tt></li>\n<li><tt>field_one__object__str_arr__item</tt></li>\n<li><tt>field_one__object__str_arr__item__index</tt></li>\n</ul>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"object\": {\n    \"int_arr\": [42, 77, 1664],\n    \"num_arr\": [3.141592, 1.618034, 37.2],\n    \"str_arr\": [\"pouet\", \"foo\", \"bar\"]\n  }\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__object__int_arr__item</th>\n<th>field_one__object__int_arr__item__index</th>\n<th>field_one__object__num_arr__item</th>\n<th>field_one__object__num_arr__item__index</th>\n<th>field_one__object__str_arr__item</th>\n<th>field_one__object__str_arr__item__index</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>42</td>\n<td>1</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>77</td>\n<td>2</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>1664</td>\n<td>3</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>3.141592</td>\n<td>1</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>1.618034</td>\n<td>2</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>37.2</td>\n<td>3</td>\n<td>NULL</td>\n<td>NULL</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>pouet</td>\n<td>1</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>foo</td>\n<td>2</td>\n</tr>\n<tr><td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>NULL</td>\n<td>bar</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"nested-objects\">\n<h3>Nested objects</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"object\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"nested\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"obj_int\": {\"type\": \"integer\"},\n            \"obj_num\": {\"type\": \"number\"},\n            \"obj_str\": {\"type\": \"string\"}\n          }\n        }\n      }\n    }\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__object__nested__obj_int</tt></li>\n<li><tt>field_one__object__nested__obj_num</tt></li>\n<li><tt>field_one__object__nested__obj_str</tt></li>\n</ul>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"object\": {\n    \"nested\": {\n      \"obj_int\": 42,\n      \"obj_num\": 3.141592,\n      \"obj_str\": \"pouet\"\n    }\n  }\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__object__nested__obj_int</th>\n<th>field_one__object__nested__obj_num</th>\n<th>field_one__object__nested__obj_str</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>42</td>\n<td>3.141592</td>\n<td>pouet</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"nested-arrays\">\n<h3>Nested arrays</h3>\n<p>Given the following data description:</p>\n<pre>{\n  \"type\": \"object\",\n  \"properties\": {\n    \"nested_arrays\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\"type\": \"string\"}\n      }\n    }\n  }\n}\n</pre>\n<p><tt>flat_selectable</tt> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__nested_arrays__item__index</tt></li>\n<li><tt>field_one__nested_arrays__item__item__index</tt></li>\n<li><tt>field_one__nested_arrays__item__item</tt></li>\n</ul>\n<p>Given the following JSON data in one record:</p>\n<pre>{\n  \"nested_arrays\": [\n    [\"abc\", \"def\"],\n    [\"tuw\", \"xyz\"]\n  ]\n}\n</pre>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__nested_arrays__item__index</th>\n<th>field_one__nested_arrays__item__item__index</th>\n<th>field_one__nested_arrays__item__item</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1</td>\n<td>1</td>\n<td>abc</td>\n</tr>\n<tr><td>1</td>\n<td>2</td>\n<td>def</td>\n</tr>\n<tr><td>2</td>\n<td>1</td>\n<td>tuw</td>\n</tr>\n<tr><td>2</td>\n<td>2</td>\n<td>xyz</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"data-preservation\">\n<h3>Data \u201cpreservation\u201d</h3>\n<p>the <cite>pg_jsonb_flattener</cite> tool allows to specify chunks of JSON data not to be\nflattened by providing a full name of data to preserve in a list passed at\n<cite>JsonbTable</cite> instantiation via the <cite>preserved</cite> optional argument. See examples\nbelow with nested arrays:</p>\n<pre><span class=\"n\">jsonb_table</span> <span class=\"o\">=</span> <span class=\"n\">JsonbTable</span><span class=\"p\">(</span><span class=\"n\">ONE_JSON_FIELD_TABLE</span><span class=\"p\">,</span> <span class=\"n\">field_one</span><span class=\"o\">=</span><span class=\"n\">DATA_DESCRIPTION</span><span class=\"p\">,</span>\n                         <span class=\"n\">preserved</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'field_one__nested_arrays__item'</span><span class=\"p\">])</span>\n\n<span class=\"n\">flat_selectable</span> <span class=\"o\">=</span> <span class=\"n\">jsonb_table</span><span class=\"o\">.</span><span class=\"n\">get_query</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">conn</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">flat_selectable</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n</pre>\n<p>In this case, the <cite>flat_selectable</cite> would provide the following fields:</p>\n<ul>\n<li><tt>field_one__nested_arrays__item__index</tt></li>\n<li><tt>field_one__nested_arrays__item</tt></li>\n</ul>\n<p>The <tt>result</tt> variable would contain this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__nested_arrays__item__index</th>\n<th>field_one__nested_arrays__item</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1</td>\n<td>[\u201cabc\u201d, \u201cdef\u201d]</td>\n</tr>\n<tr><td>2</td>\n<td>[\u201ctuw\u201d, \u201cxyz\u201d]</td>\n</tr>\n</tbody>\n</table>\n<p>This also works for the nesting array and preserving the\n<cite>field_one__nested_arrays</cite> would result in the  following fields and result:</p>\n<ul>\n<li><tt>field_one__nested_arrays</tt></li>\n</ul>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__nested_arrays</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>[[\u201cabc\u201d, \u201cdef\u201d], [\u201ctuw\u201d, \u201cxyz\u201d]]</td>\n</tr>\n</tbody>\n</table>\n<p>Objects can also be preserved, see examples with nested objects.</p>\n<p>Preserving <cite>field_one__object__nested</cite> gives the following fields and result:</p>\n<ul>\n<li><tt>field_one__object__nested</tt></li>\n</ul>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__object__nested</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>{\u2018obj_int\u2019: 42, \u2018obj_num\u2019: 3.141592, \u2018obj_str\u2019: \u2018pouet\u2019}</td>\n</tr>\n</tbody>\n</table>\n<p>Preserving <cite>field_one__object</cite> gives the following fields and result:</p>\n<ul>\n<li><tt>field_one__object</tt></li>\n</ul>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>field_one__object__nested</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>{\u2018nested\u2019: {\u2018obj_int\u2019: 42, \u2018obj_num\u2019: 3.141592, \u2018obj_str\u2019: \u2018pouet\u2019}}</td>\n</tr>\n</tbody>\n</table>\n<div>\n<p>Note</p>\n<p>Of course, it is possible to preserve objects in arrays and arrays in objects</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4802706, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f695aebd8b5f4c228f93f49b82030607", "sha256": "40a067777b1daa42877515e3d485c67709c0016d6eba835b649240d1d00d4114"}, "downloads": -1, "filename": "pg_jsonb_flattener-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f695aebd8b5f4c228f93f49b82030607", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8871, "upload_time": "2019-02-08T20:32:33", "upload_time_iso_8601": "2019-02-08T20:32:33.773139Z", "url": "https://files.pythonhosted.org/packages/56/7e/0b07f5c5a4c86def5cea00bee4ae8a4d3fe7fbf1f28a25b5f752e1df8ed1/pg_jsonb_flattener-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66e2c18b1b40c6d00faa26cf2c20b09f", "sha256": "95e7b28f4a6dc720f73648c0f6b0fd9310d64eb8813a42f7e1a93ad078619efa"}, "downloads": -1, "filename": "pg_jsonb_flattener-0.1.0.tar.gz", "has_sig": false, "md5_digest": "66e2c18b1b40c6d00faa26cf2c20b09f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17301, "upload_time": "2019-02-08T20:32:43", "upload_time_iso_8601": "2019-02-08T20:32:43.708198Z", "url": "https://files.pythonhosted.org/packages/3b/75/19a0054816aac90793556dacce718b2754c495900b284eac611b00959861/pg_jsonb_flattener-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5adba07cdca9a4a9bc5f0acd228bd4ce", "sha256": "3ee4afa475b70ae6ad152b9c7f9e6d9b7bec2ef0784fbb9c795b2df590922fb4"}, "downloads": -1, "filename": "pg_jsonb_flattener-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5adba07cdca9a4a9bc5f0acd228bd4ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9761, "upload_time": "2019-02-10T17:10:33", "upload_time_iso_8601": "2019-02-10T17:10:33.297531Z", "url": "https://files.pythonhosted.org/packages/7d/95/b5f16ec310f86fca463a778ad051cd92a2a7e2a049848a38afa0f0b35a78/pg_jsonb_flattener-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5035b52ba22bc8523187427ff687ebff", "sha256": "eeb18907fe0b3265396e123f7b15eeeda73849f045afc035cd6c11f51a4e876f"}, "downloads": -1, "filename": "pg_jsonb_flattener-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5035b52ba22bc8523187427ff687ebff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22178, "upload_time": "2019-02-10T17:10:34", "upload_time_iso_8601": "2019-02-10T17:10:34.915727Z", "url": "https://files.pythonhosted.org/packages/4e/8a/983d0d7c6444a491b37f7a3b24d4c56bb17709961fb634217989fb8fe752/pg_jsonb_flattener-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5adba07cdca9a4a9bc5f0acd228bd4ce", "sha256": "3ee4afa475b70ae6ad152b9c7f9e6d9b7bec2ef0784fbb9c795b2df590922fb4"}, "downloads": -1, "filename": "pg_jsonb_flattener-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5adba07cdca9a4a9bc5f0acd228bd4ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9761, "upload_time": "2019-02-10T17:10:33", "upload_time_iso_8601": "2019-02-10T17:10:33.297531Z", "url": "https://files.pythonhosted.org/packages/7d/95/b5f16ec310f86fca463a778ad051cd92a2a7e2a049848a38afa0f0b35a78/pg_jsonb_flattener-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5035b52ba22bc8523187427ff687ebff", "sha256": "eeb18907fe0b3265396e123f7b15eeeda73849f045afc035cd6c11f51a4e876f"}, "downloads": -1, "filename": "pg_jsonb_flattener-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5035b52ba22bc8523187427ff687ebff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22178, "upload_time": "2019-02-10T17:10:34", "upload_time_iso_8601": "2019-02-10T17:10:34.915727Z", "url": "https://files.pythonhosted.org/packages/4e/8a/983d0d7c6444a491b37f7a3b24d4c56bb17709961fb634217989fb8fe752/pg_jsonb_flattener-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:48 2020"}