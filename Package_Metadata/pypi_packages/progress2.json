{"info": {"author": "Alexander Bock", "author_email": "alexander.asp.bock@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Terminals", "Topic :: Utilities"], "description": "**progress v1.3.0**\n===================\n\n.. image:: https://travis-ci.org/MisanthropicBit/progress.svg?branch=prop_exts\n    :target: https://travis-ci.org/MisanthropicBit/progress\n\n.. image:: https://pypip.in/license/progress2/badge.png\n    :target: https://pypi.python.org/pypi/progress2/\n\nAllows for easy creation of progress-bars and text.\n\n``progress`` has been tested with Python 2.6, 2.7, 3.2, 3.3 and PyPy, and as of now requires at least Python 2.6\n\nInstallation:\n-------------\n**Note:** PyPI already contains a ``progress`` entry, so this module is located\nat `progress2 <https://pypi.python.org/pypi/progress2>`_.\n\nYou can install via `pip <https://pip.pypa.io/en/latest/>`_::\n\n    pip install progress2\n\nAlternatively, download the source files and run the following command from the\ndownload directory::\n\n    python setup.py install\n\nUsage:\n------\n\nCreating a ``ProgressBar``:\n\n    >>> import progress\n    >>> bar = progress.ProgressBar(\"[{progress}] {percentage:.2f}% ({minutes}:{seconds})\", width=30)\n    >>> bar.show()\n    [                              ] 0.00% (0:0)>>>\n    >>> bar.update(26)\n    >>> bar.show()\n    [======>                       ] 26.00% (0:0)>>>\n    >>>\n\nAlternatively, you can use the ``autoupdate`` method:\n\n    >>> bar.autoupdate(42)\n    [===================>          ] 68.00% (0:45)>>>\n    >>>\n\nCreating a ``ProgressText``:\n\n    >>> text = progress.ProgressText(\"Searching: {progress}\", \"|/-\\\\\", autoreset=True)\n    >>> text.show()\n    |>>>\n    >>> text.update(); text.show()\n    />>>\n    >>> text.update(); text.show()\n    ->>>\n    >>> text.update(); text.show()\n    \\>>>\n\nYou can supply custom args and kwargs to ``show`` and ``autoupdate``:\n\n    >>> bar = progress.ProgressBar(\"[{progress}] {key} {},{},{}\")\n    >>> d = dict(key=33)\n    >>> l = range(3)\n    >>> bar.update(50)\n    >>> bar.show(*l, **d)\n    [=========>          ] 33 0,1,2>>>\n    >>> bar.autoupdate(25, *l, **d)\n    [==============>     ] 33 0,1,2>>>\n    >>>\n\nRefer to the ``examples/`` directory for more examples. There are also examples\nof how to use ``progress`` with the ``threading`` module.\n\nImplementation Notes:\n---------------------\n\nSince most terminals cannot clear their output buffers across newlines or carriage returns,\n``progress`` does not work if you insert them, e.g. ``progress.ProgressBar(\"{progress}\\n{percentage}\")``\nwill not be cleared from the terminal.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MisanthropicBit/progress", "keywords": "progress,progressbar,progresstext", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "progress2", "package_url": "https://pypi.org/project/progress2/", "platform": "All", "project_url": "https://pypi.org/project/progress2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/MisanthropicBit/progress"}, "release_url": "https://pypi.org/project/progress2/1.3.0/", "requires_dist": null, "requires_python": null, "summary": "Allows for easy creation of progress-bars and text", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/MisanthropicBit/progress\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/MisanthropicBit/progress.svg?branch=prop_exts\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f05fdcf29a2d29be674d94e6ef15a43ce3f218a5/68747470733a2f2f7472617669732d63692e6f72672f4d6973616e7468726f7069634269742f70726f67726573732e7376673f6272616e63683d70726f705f65787473\"></a>\n<a href=\"https://pypi.python.org/pypi/progress2/\" rel=\"nofollow\"><img alt=\"https://pypip.in/license/progress2/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73a152ca9c20b51fa1220b7402268dcfa7738301/68747470733a2f2f70797069702e696e2f6c6963656e73652f70726f6772657373322f62616467652e706e67\"></a>\n<p>Allows for easy creation of progress-bars and text.</p>\n<p><tt>progress</tt> has been tested with Python 2.6, 2.7, 3.2, 3.3 and PyPy, and as of now requires at least Python 2.6</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p><strong>Note:</strong> PyPI already contains a <tt>progress</tt> entry, so this module is located\nat <a href=\"https://pypi.python.org/pypi/progress2\" rel=\"nofollow\">progress2</a>.</p>\n<p>You can install via <a href=\"https://pip.pypa.io/en/latest/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install progress2\n</pre>\n<p>Alternatively, download the source files and run the following command from the\ndownload directory:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>Creating a <tt>ProgressBar</tt>:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import progress\n&gt;&gt;&gt; bar = progress.ProgressBar(\"[{progress}] {percentage:.2f}% ({minutes}:{seconds})\", width=30)\n&gt;&gt;&gt; bar.show()\n[                              ] 0.00% (0:0)&gt;&gt;&gt;\n&gt;&gt;&gt; bar.update(26)\n&gt;&gt;&gt; bar.show()\n[======&gt;                       ] 26.00% (0:0)&gt;&gt;&gt;\n&gt;&gt;&gt;\n</pre>\n</blockquote>\n<p>Alternatively, you can use the <tt>autoupdate</tt> method:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; bar.autoupdate(42)\n[===================&gt;          ] 68.00% (0:45)&gt;&gt;&gt;\n&gt;&gt;&gt;\n</pre>\n</blockquote>\n<p>Creating a <tt>ProgressText</tt>:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; text = progress.ProgressText(\"Searching: {progress}\", \"|/-\\\\\", autoreset=True)\n&gt;&gt;&gt; text.show()\n|&gt;&gt;&gt;\n&gt;&gt;&gt; text.update(); text.show()\n/&gt;&gt;&gt;\n&gt;&gt;&gt; text.update(); text.show()\n-&gt;&gt;&gt;\n&gt;&gt;&gt; text.update(); text.show()\n\\&gt;&gt;&gt;\n</pre>\n</blockquote>\n<p>You can supply custom args and kwargs to <tt>show</tt> and <tt>autoupdate</tt>:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; bar = progress.ProgressBar(\"[{progress}] {key} {},{},{}\")\n&gt;&gt;&gt; d = dict(key=33)\n&gt;&gt;&gt; l = range(3)\n&gt;&gt;&gt; bar.update(50)\n&gt;&gt;&gt; bar.show(*l, **d)\n[=========&gt;          ] 33 0,1,2&gt;&gt;&gt;\n&gt;&gt;&gt; bar.autoupdate(25, *l, **d)\n[==============&gt;     ] 33 0,1,2&gt;&gt;&gt;\n&gt;&gt;&gt;\n</pre>\n</blockquote>\n<p>Refer to the <tt>examples/</tt> directory for more examples. There are also examples\nof how to use <tt>progress</tt> with the <tt>threading</tt> module.</p>\n</div>\n<div id=\"implementation-notes\">\n<h2>Implementation Notes:</h2>\n<p>Since most terminals cannot clear their output buffers across newlines or carriage returns,\n<tt>progress</tt> does not work if you insert them, e.g. <tt><span class=\"pre\">progress.ProgressBar(\"{progress}\\n{percentage}\")</span></tt>\nwill not be cleared from the terminal.</p>\n</div>\n\n          </div>"}, "last_serial": 1703162, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "32a1d227f88c23fa1c7985e8c377fce6", "sha256": "8a802d4a85758013d8abaadec33db4f664f21eec816d4efb9487748d1d52bc49"}, "downloads": -1, "filename": "progress2-1.1.0.zip", "has_sig": false, "md5_digest": "32a1d227f88c23fa1c7985e8c377fce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13639, "upload_time": "2014-06-02T08:06:34", "upload_time_iso_8601": "2014-06-02T08:06:34.008313Z", "url": "https://files.pythonhosted.org/packages/2c/06/3a967882b149d087a1aebbf03c714dc7267d33d8682a75a7ccf740b22e08/progress2-1.1.0.zip", "yanked": false}], "1.2.0": [], "1.3.0": [{"comment_text": "", "digests": {"md5": "af20cbacfe714af9fee3d5cff2fda7d4", "sha256": "327d67bcdf67c60addc743dd42d07a488d2af29ce76ff6b8c277d3aca06432f9"}, "downloads": -1, "filename": "progress2-1.3.0.tar.gz", "has_sig": false, "md5_digest": "af20cbacfe714af9fee3d5cff2fda7d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16219, "upload_time": "2015-09-01T13:55:58", "upload_time_iso_8601": "2015-09-01T13:55:58.874795Z", "url": "https://files.pythonhosted.org/packages/83/f0/f29651777475a170f2a8793f89f9006941a8cfe369e7c8982b4db0249135/progress2-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af20cbacfe714af9fee3d5cff2fda7d4", "sha256": "327d67bcdf67c60addc743dd42d07a488d2af29ce76ff6b8c277d3aca06432f9"}, "downloads": -1, "filename": "progress2-1.3.0.tar.gz", "has_sig": false, "md5_digest": "af20cbacfe714af9fee3d5cff2fda7d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16219, "upload_time": "2015-09-01T13:55:58", "upload_time_iso_8601": "2015-09-01T13:55:58.874795Z", "url": "https://files.pythonhosted.org/packages/83/f0/f29651777475a170f2a8793f89f9006941a8cfe369e7c8982b4db0249135/progress2-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:25 2020"}