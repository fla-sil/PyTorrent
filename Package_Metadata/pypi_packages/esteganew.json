{"info": {"author": "JuanPab3 and naso071699", "author_email": "juanpab.sierra@urosario.edu.co", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# M\u00e9todo de uso\n\nEsteganew es una libreria que maneja distintas herramientas para generar metodos de protecci\u00f3n de la informaci\u00f3n; por medio de la estaganografia en imagenes.\n\n### Recomendaciones Iniciales.\n- Principalmente tener instalada las librerias _PIL_ y _cryptography_. <br/>\nPara instalarlas, hay que usar los siguientes comandos en linux:\n```\nsudo pip3 install cryptography\n```\n```\nsudo pip3 install PIL\n```\n\n- Toda imagen que valla a pasar por el proceso esteganografico, debe estar dentro de la carpeta. Del archivo a utilizar.\n\n\n## Instrucciones de uso.\n\n1. Para importar todo el contenido de esteganew hay que hacerlo de la siguiente forma:\n\n```\nfrom Esteganew.esteganew import *\n```\n\n2. Como gran parte de Esteganew esta orientada a objetos es importante tener en cuenta que para utilizar la libreria hay que crear objetos de tipo \"Esteganew\"\n```\nobjeto = Esteganew(nombre_imagen, mensaje,nuevo_nombre)\n\n```\nEsta clase tiene requiere en un principio como primer argumento el nombre de la imagen que ser\u00e1 utilizada (con extenci\u00f3n tipo: '.png', '.tiff,' .jpg'... etc.) de tipo 'str', como segundo argumento el mensaje que se desea esconder tambien de tipo 'str' y para el tercer argumento se exige un nombre para el archivo de salida de tipo 'str'.\n\n3. Los objetos de tipo Esteganew pueden implementar las siguientes funciones:\n\n  * **generar_data():**<br/>\n    Esta funci\u00f3n se encarga de transformar el mensaje a binario. Lo que hace es adjuntar a una lista el valor de cada caracter, el cual se obtiene en un principio transformandolo a su valor en Unicode, y luego este a binario.\n\n  * **modificar_pixeles()**<br/>\n    La raz\u00f3n de esta funci\u00f3n es la de convertir los pixeles necesarios de la imagen (seg\u00fan lo largo del mensaje) en nuvos pixeles alterando el valor RGB de cada pixel reduciendolo en una unidad.\n  * **cambiar_pix()**<br/>\n    Esta funci\u00f3n se encarga de modificar ya en la nueva image los valores de los pixeles. A partir de las cordenadas (x, y) de la imagen.\n  * **codificar()**<br/>\n    La funci\u00f3n codificar() esta dada para retornar un archivo en formato '.png', con el mensaje ya escondido.\n  * **decodificar()**<br/>\n    Esta funci\u00f3n cumple la labor de retornar el mensaje oculto dentro de una imagen ya codificada.\n\n4. Aparte de las funciones de tipo objeto Esteganew hay unas herramientas de encriptaci\u00f3n de mensajes que pueden ayudar a proteger el mensaje dentro de la imagen:\n  * **llave()**<br/>\n    Con esta funci\u00f3n se genera una llave para empezar el proceso de encriptaci\u00f3n, la cual es de tipo \"bytes\", la cual es necesaria para poder crear un mensaje encriptado.\n  * **enCRYptar()**<br/>\n    Esta se encarga de recibir un mensaje de tipo str, y a partir de la funci\u00f3n 'llave()', procesos de codificaci\u00f3n nativos de python y el modulo de encriptaci\u00f3n 'Feret' de la librer\u00eda 'cryptography.fernet'.\n  * **deCRYptar()**<br/>\n    Se encarga de recibir un mensaje encriptado de tipo str y el nombre de un archivo con extenci\u00f3n '.key', luego por medio de la funci\u00f3n 'open()' nativa de python extrae el texto del archivo '.key' para aplicar  funciones del modulo Fermet, que ayudan a recuperar el mensaje encriptado.\n\n\n\n__ __ __ __\nEsperamos que pueda servir de algo... <br/>\nMuchas gracias *<3*\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JuanPab3/esteganew", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "esteganew", "package_url": "https://pypi.org/project/esteganew/", "platform": "", "project_url": "https://pypi.org/project/esteganew/", "project_urls": {"Homepage": "https://github.com/JuanPab3/esteganew"}, "release_url": "https://pypi.org/project/esteganew/0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Steganographic tool, for images.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>M\u00e9todo de uso</h1>\n<p>Esteganew es una libreria que maneja distintas herramientas para generar metodos de protecci\u00f3n de la informaci\u00f3n; por medio de la estaganografia en imagenes.</p>\n<h3>Recomendaciones Iniciales.</h3>\n<ul>\n<li>Principalmente tener instalada las librerias <em>PIL</em> y <em>cryptography</em>. <br>\nPara instalarlas, hay que usar los siguientes comandos en linux:</li>\n</ul>\n<pre><code>sudo pip3 install cryptography\n</code></pre>\n<pre><code>sudo pip3 install PIL\n</code></pre>\n<ul>\n<li>Toda imagen que valla a pasar por el proceso esteganografico, debe estar dentro de la carpeta. Del archivo a utilizar.</li>\n</ul>\n<h2>Instrucciones de uso.</h2>\n<ol>\n<li>Para importar todo el contenido de esteganew hay que hacerlo de la siguiente forma:</li>\n</ol>\n<pre><code>from Esteganew.esteganew import *\n</code></pre>\n<ol>\n<li>Como gran parte de Esteganew esta orientada a objetos es importante tener en cuenta que para utilizar la libreria hay que crear objetos de tipo \"Esteganew\"</li>\n</ol>\n<pre><code>objeto = Esteganew(nombre_imagen, mensaje,nuevo_nombre)\n\n</code></pre>\n<p>Esta clase tiene requiere en un principio como primer argumento el nombre de la imagen que ser\u00e1 utilizada (con extenci\u00f3n tipo: '.png', '.tiff,' .jpg'... etc.) de tipo 'str', como segundo argumento el mensaje que se desea esconder tambien de tipo 'str' y para el tercer argumento se exige un nombre para el archivo de salida de tipo 'str'.</p>\n<ol>\n<li>Los objetos de tipo Esteganew pueden implementar las siguientes funciones:</li>\n</ol>\n<ul>\n<li>\n<p><strong>generar_data():</strong><br>\nEsta funci\u00f3n se encarga de transformar el mensaje a binario. Lo que hace es adjuntar a una lista el valor de cada caracter, el cual se obtiene en un principio transformandolo a su valor en Unicode, y luego este a binario.</p>\n</li>\n<li>\n<p><strong>modificar_pixeles()</strong><br>\nLa raz\u00f3n de esta funci\u00f3n es la de convertir los pixeles necesarios de la imagen (seg\u00fan lo largo del mensaje) en nuvos pixeles alterando el valor RGB de cada pixel reduciendolo en una unidad.</p>\n</li>\n<li>\n<p><strong>cambiar_pix()</strong><br>\nEsta funci\u00f3n se encarga de modificar ya en la nueva image los valores de los pixeles. A partir de las cordenadas (x, y) de la imagen.</p>\n</li>\n<li>\n<p><strong>codificar()</strong><br>\nLa funci\u00f3n codificar() esta dada para retornar un archivo en formato '.png', con el mensaje ya escondido.</p>\n</li>\n<li>\n<p><strong>decodificar()</strong><br>\nEsta funci\u00f3n cumple la labor de retornar el mensaje oculto dentro de una imagen ya codificada.</p>\n</li>\n</ul>\n<ol>\n<li>Aparte de las funciones de tipo objeto Esteganew hay unas herramientas de encriptaci\u00f3n de mensajes que pueden ayudar a proteger el mensaje dentro de la imagen:</li>\n</ol>\n<ul>\n<li><strong>llave()</strong><br>\nCon esta funci\u00f3n se genera una llave para empezar el proceso de encriptaci\u00f3n, la cual es de tipo \"bytes\", la cual es necesaria para poder crear un mensaje encriptado.</li>\n<li><strong>enCRYptar()</strong><br>\nEsta se encarga de recibir un mensaje de tipo str, y a partir de la funci\u00f3n 'llave()', procesos de codificaci\u00f3n nativos de python y el modulo de encriptaci\u00f3n 'Feret' de la librer\u00eda 'cryptography.fernet'.</li>\n<li><strong>deCRYptar()</strong><br>\nSe encarga de recibir un mensaje encriptado de tipo str y el nombre de un archivo con extenci\u00f3n '.key', luego por medio de la funci\u00f3n 'open()' nativa de python extrae el texto del archivo '.key' para aplicar  funciones del modulo Fermet, que ayudan a recuperar el mensaje encriptado.</li>\n</ul>\n<hr>\n<p>Esperamos que pueda servir de algo... <br>\nMuchas gracias <em>&lt;3</em></p>\n\n          </div>"}, "last_serial": 6187396, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "225268bd3bf8d19f3414cc5a17a1f570", "sha256": "88c2cc6b34569236dd464784daba5fa14c1e2ce983b81206060c1c917eaa9c9c"}, "downloads": -1, "filename": "esteganew-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "225268bd3bf8d19f3414cc5a17a1f570", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7027, "upload_time": "2019-11-23T18:03:34", "upload_time_iso_8601": "2019-11-23T18:03:34.253126Z", "url": "https://files.pythonhosted.org/packages/89/fc/b55d16096413bc14d66a8dc89f77fbeb850b306217fdfe6cbf42a686a200/esteganew-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "225268bd3bf8d19f3414cc5a17a1f570", "sha256": "88c2cc6b34569236dd464784daba5fa14c1e2ce983b81206060c1c917eaa9c9c"}, "downloads": -1, "filename": "esteganew-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "225268bd3bf8d19f3414cc5a17a1f570", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7027, "upload_time": "2019-11-23T18:03:34", "upload_time_iso_8601": "2019-11-23T18:03:34.253126Z", "url": "https://files.pythonhosted.org/packages/89/fc/b55d16096413bc14d66a8dc89f77fbeb850b306217fdfe6cbf42a686a200/esteganew-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:45:34 2020"}