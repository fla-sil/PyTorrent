{"info": {"author": "Pavel Podkorytov", "author_email": "pod.pavel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "easylogconfig\n=============\n\nThis python library provides simple wrapper for standart logging module.\n\nIf you want something more than \"logging.basicConfig\", but don't want to read a lot of\n[documentation][1] and to write a lot of code.\n\nUsage\n-----\n\nYou can find examples in ./examples directory\n\n```python\nimport logging\nimport easylogconfig\n\nlog = logging.getLogger(__name__)\n\n# print messages to the stdout, add debug level\neasylogconfig.auto(debug=True)\n# or print messages to the syslog\neasylogconfig.auto(syslog_tag=\"example_tag\")\n# or print messages to the file without datetime but with thread names\neasylogconfig.auto(file_name=\"/var/log/example.log\", file_backup_count=30,\n                   datetime=False, thread=True)\n\nlog.info(\"info message\")\nlog.debug(\"debug message\")\n\n# output format:\n# 2019-03-22/10:17:28 INFO    info message\n```\n\nConfiguration\n-------------\n\nLibrary provides one simple function **auto** with arguments:\n\n* formatter arguments:\n  * *debug=False*: add debug messages to output?\n  * *thread=False*: add thread names to messages?\n  * *datetime=True*: add datetime to messages?\n  * *level=False*: add level names to messages?\n* [SysLogHandler][2] arguments:\n  * **syslog_tag=None**: if set to str, log messages to syslog with this tag\n  * *syslog_address=\"/dev/log\"*: syslog server address\n* [TimedRotatingFileHandler][3] arguments:\n  * **file_name=None**: if set to str, log messages to this tile\n  * *file_when=\"midnight\"*: file rotating time\n  * *file_backup_count=7*: keep last files\n\nIf you want to log messages to the stdout, don't pass **syslog_tag** or **file_name** arguments. If\nyou want to log messages to the syslog server, pass **syslog_tag** argument. If you want to log\nmessages to the file, pass **file_name** argument.\n\nInstallation\n------------\n\n```bash\npip install -U easylogconfig\n# or\npip install -U git+https://github.com/tierpod/easylogconfig#egg=easylogconfig\n```\n\nDevelopment\n-----------\n\n```bash\nmake venv\nsourve ./venv/bin/activate\nmake init-dev init\n```\n\n[1]: https://docs.python.org/2.7/howto/logging.html\n[2]: https://docs.python.org/2.7/library/logging.handlers.html#sysloghandler\n[3]: https://docs.python.org/2.7/library/logging.handlers.html#timedrotatingfilehandler\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tierpod/easylogconfig", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "easylogconfig", "package_url": "https://pypi.org/project/easylogconfig/", "platform": "", "project_url": "https://pypi.org/project/easylogconfig/", "project_urls": {"Homepage": "https://github.com/tierpod/easylogconfig"}, "release_url": "https://pypi.org/project/easylogconfig/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Easy configure logging", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>easylogconfig</h1>\n<p>This python library provides simple wrapper for standart logging module.</p>\n<p>If you want something more than \"logging.basicConfig\", but don't want to read a lot of\n<a href=\"https://docs.python.org/2.7/howto/logging.html\" rel=\"nofollow\">documentation</a> and to write a lot of code.</p>\n<h2>Usage</h2>\n<p>You can find examples in ./examples directory</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">easylogconfig</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># print messages to the stdout, add debug level</span>\n<span class=\"n\">easylogconfig</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># or print messages to the syslog</span>\n<span class=\"n\">easylogconfig</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">(</span><span class=\"n\">syslog_tag</span><span class=\"o\">=</span><span class=\"s2\">\"example_tag\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or print messages to the file without datetime but with thread names</span>\n<span class=\"n\">easylogconfig</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"s2\">\"/var/log/example.log\"</span><span class=\"p\">,</span> <span class=\"n\">file_backup_count</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\n                   <span class=\"n\">datetime</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">thread</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"info message\"</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"debug message\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># output format:</span>\n<span class=\"c1\"># 2019-03-22/10:17:28 INFO    info message</span>\n</pre>\n<h2>Configuration</h2>\n<p>Library provides one simple function <strong>auto</strong> with arguments:</p>\n<ul>\n<li>formatter arguments:\n<ul>\n<li><em>debug=False</em>: add debug messages to output?</li>\n<li><em>thread=False</em>: add thread names to messages?</li>\n<li><em>datetime=True</em>: add datetime to messages?</li>\n<li><em>level=False</em>: add level names to messages?</li>\n</ul>\n</li>\n<li><a href=\"https://docs.python.org/2.7/library/logging.handlers.html#sysloghandler\" rel=\"nofollow\">SysLogHandler</a> arguments:\n<ul>\n<li><strong>syslog_tag=None</strong>: if set to str, log messages to syslog with this tag</li>\n<li><em>syslog_address=\"/dev/log\"</em>: syslog server address</li>\n</ul>\n</li>\n<li><a href=\"https://docs.python.org/2.7/library/logging.handlers.html#timedrotatingfilehandler\" rel=\"nofollow\">TimedRotatingFileHandler</a> arguments:\n<ul>\n<li><strong>file_name=None</strong>: if set to str, log messages to this tile</li>\n<li><em>file_when=\"midnight\"</em>: file rotating time</li>\n<li><em>file_backup_count=7</em>: keep last files</li>\n</ul>\n</li>\n</ul>\n<p>If you want to log messages to the stdout, don't pass <strong>syslog_tag</strong> or <strong>file_name</strong> arguments. If\nyou want to log messages to the syslog server, pass <strong>syslog_tag</strong> argument. If you want to log\nmessages to the file, pass <strong>file_name</strong> argument.</p>\n<h2>Installation</h2>\n<pre>pip install -U easylogconfig\n<span class=\"c1\"># or</span>\npip install -U git+https://github.com/tierpod/easylogconfig#egg<span class=\"o\">=</span>easylogconfig\n</pre>\n<h2>Development</h2>\n<pre>make venv\nsourve ./venv/bin/activate\nmake init-dev init\n</pre>\n\n          </div>"}, "last_serial": 4991058, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "4727048a0da4cc944e459854934be056", "sha256": "1726cd8b974cdd6adba485d3eb54cc779b8d855305e337b3250afc15275ee30a"}, "downloads": -1, "filename": "easylogconfig-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "4727048a0da4cc944e459854934be056", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3762, "upload_time": "2019-03-22T07:02:01", "upload_time_iso_8601": "2019-03-22T07:02:01.007015Z", "url": "https://files.pythonhosted.org/packages/a6/f5/6270422ef907fcaead091903fcc5a4ba0eb0dfa1d86a1c410284f55d27b2/easylogconfig-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11a4d6d522919eb17e9ca93a0b196177", "sha256": "47591bfd8fe957fb4fc57f1e0deede24cdd4fe26ac5168a8ae533ae50f79b221"}, "downloads": -1, "filename": "easylogconfig-0.1.2.tar.gz", "has_sig": false, "md5_digest": "11a4d6d522919eb17e9ca93a0b196177", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2650, "upload_time": "2019-03-22T07:02:04", "upload_time_iso_8601": "2019-03-22T07:02:04.039105Z", "url": "https://files.pythonhosted.org/packages/97/a0/045d0531cea32d25da378bd07cb5f8106583b5f63c6291ffca75389325c9/easylogconfig-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "53d01079d425882514b4ad3e0455c375", "sha256": "b442d5791cc504b079c07fd794d7272ef74e2f78636370a753579bf9a46e5924"}, "downloads": -1, "filename": "easylogconfig-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "53d01079d425882514b4ad3e0455c375", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4021, "upload_time": "2019-03-27T06:39:57", "upload_time_iso_8601": "2019-03-27T06:39:57.728653Z", "url": "https://files.pythonhosted.org/packages/83/0a/f627a7156c8b305b7683e72af1e7cbe16ef30c1170f286f06c462c2b5da2/easylogconfig-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21f5162e8fd878acae573ec06e38d8e8", "sha256": "44a60ff6cb931b0eaefd7ef9934083723586913a496f916c20d9011577e76adf"}, "downloads": -1, "filename": "easylogconfig-0.1.3.tar.gz", "has_sig": false, "md5_digest": "21f5162e8fd878acae573ec06e38d8e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2978, "upload_time": "2019-03-27T06:39:59", "upload_time_iso_8601": "2019-03-27T06:39:59.142711Z", "url": "https://files.pythonhosted.org/packages/34/9a/fc37a2d9986c5c668b541a9eb49fb3a4de4528cde20bc15a9e8630535b62/easylogconfig-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53d01079d425882514b4ad3e0455c375", "sha256": "b442d5791cc504b079c07fd794d7272ef74e2f78636370a753579bf9a46e5924"}, "downloads": -1, "filename": "easylogconfig-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "53d01079d425882514b4ad3e0455c375", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4021, "upload_time": "2019-03-27T06:39:57", "upload_time_iso_8601": "2019-03-27T06:39:57.728653Z", "url": "https://files.pythonhosted.org/packages/83/0a/f627a7156c8b305b7683e72af1e7cbe16ef30c1170f286f06c462c2b5da2/easylogconfig-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21f5162e8fd878acae573ec06e38d8e8", "sha256": "44a60ff6cb931b0eaefd7ef9934083723586913a496f916c20d9011577e76adf"}, "downloads": -1, "filename": "easylogconfig-0.1.3.tar.gz", "has_sig": false, "md5_digest": "21f5162e8fd878acae573ec06e38d8e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2978, "upload_time": "2019-03-27T06:39:59", "upload_time_iso_8601": "2019-03-27T06:39:59.142711Z", "url": "https://files.pythonhosted.org/packages/34/9a/fc37a2d9986c5c668b541a9eb49fb3a4de4528cde20bc15a9e8630535b62/easylogconfig-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:20 2020"}