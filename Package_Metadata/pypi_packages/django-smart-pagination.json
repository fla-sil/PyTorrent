{"info": {"author": "Livio Ribeiro", "author_email": "livioribeiro@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=======================\r\ndjango-smart-pagination\r\n=======================\r\n\r\nGenerate pagination links for Django\r\n\r\nInstead of displaying links to all the pages at once, django-smart-pagination calculates a limited subset of them.\r\n\r\nWorks with Django Templates and Jinja2.\r\n\r\n-----\r\nUsage\r\n-----\r\n\r\nFirst add ``smart_pagination`` to your installed apps:\r\n\r\n.. code:: python\r\n\r\n    INSTALLED_APPS = [\r\n        'smart_pagination'\r\n    ]\r\n\r\nUse a pagination block passing the ``Page`` object, the number of links (literal of variable)\r\nand the name to associate the ``smart_pagination.Paginator`` object.\r\n\r\n.. code-block:: django\r\n\r\n    {% load pagination_tags %}\r\n    {% paginate page_obj num_links paging %}\r\n    <ul>\r\n        {% for page in paging.pages %}\r\n        <li class=\"{% if page.is_current %}current{% endif %}\">{{ page.number }}</li>\r\n        {% endfor %}\r\n    </ul>\r\n    {% endpaginate %}\r\n\r\nThe ``Paginator`` object contains the following properties:\r\n\r\n===== =================================================================\r\nfirst First ``Page``. Will be ``None`` if it is already the first page.\r\nprev  Previous ``Page``. Will be ``None`` if there is no previous page.\r\npages List of pages.\r\nnext  Next ``Page``. Will be ``None`` if there is no next page.\r\nlast  Last ``Page``. Will be ``None`` if it is already the last page.\r\n===== =================================================================\r\n\r\n.. code-block:: django\r\n\r\n    {% load pagination_tags %}\r\n    {% paginate page_obj num_links paging %}\r\n    <ul>\r\n        {% if paging.first %}\r\n        <li>First - {{ paging.first.number }}</li>\r\n        {% endif %}\r\n\r\n        {% if paging.prev %}\r\n        <li>Previous - {{ paging.prev.number }}</li>\r\n        {% endif %}\r\n\r\n        {% for page in paging.pages %}\r\n        <li class=\"{% if page.is_current %}current{% endif %}\">{{ page.number }}</li>\r\n        {% endfor %}\r\n\r\n        {% if paging.next %}\r\n        <li>Next - {{ paging.next.number }}</li>\r\n        {% endif %}\r\n\r\n        {% if paging.last %}\r\n        <li>Last - {{ paging.last.number }}</li>\r\n        {% endif %}\r\n    </ul>\r\n    {% endpaginate %}\r\n\r\nIf you are sending the page_kwarg as a query parameter, you can optionally pass a fourth argument with the name\r\nof the page_kwarg and the ``Paginator`` will provide the query string without the page_kwarg:\r\n\r\n.. code-block:: django\r\n\r\n    {% load pagination_tags %}\r\n    {% paginate page_obj num_links paging 'page' %}\r\n    <ul>\r\n        {% for page in paging.pages %}\r\n        <li><a href=\"?page={{ page.number }}&{{ paging.query }}\">{{ page.number }}</a></li>\r\n        {% endfor %}\r\n    </ul>\r\n    {% endpaginate %}", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/livioribeiro/django-smart-pagination", "keywords": "django pagination page links", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-smart-pagination", "package_url": "https://pypi.org/project/django-smart-pagination/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-smart-pagination/", "project_urls": {"Homepage": "https://github.com/livioribeiro/django-smart-pagination"}, "release_url": "https://pypi.org/project/django-smart-pagination/1.0.1/", "requires_dist": ["Django", "Jinja2; extra == 'test'", "pytest; extra == 'test'", "pytest-cov; extra == 'test'", "pytest-django; extra == 'test'"], "requires_python": "", "summary": "Generate pagination links in Django Templates", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generate pagination links for Django</p>\n<p>Instead of displaying links to all the pages at once, django-smart-pagination calculates a limited subset of them.</p>\n<p>Works with Django Templates and Jinja2.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First add <tt>smart_pagination</tt> to your installed apps:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'smart_pagination'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Use a pagination block passing the <tt>Page</tt> object, the number of links (literal of variable)\nand the name to associate the <tt>smart_pagination.Paginator</tt> object.</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">pagination_tags</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">paginate</span> <span class=\"nv\">page_obj</span> <span class=\"nv\">num_links</span> <span class=\"nv\">paging</span> <span class=\"cp\">%}</span><span class=\"x\">\n&lt;ul&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">page</span> <span class=\"k\">in</span> <span class=\"nv\">paging.pages</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li class=\"</span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">page.is_current</span> <span class=\"cp\">%}</span><span class=\"x\">current</span><span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\">\"&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">page.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span><span class=\"x\">\n&lt;/ul&gt;\n</span><span class=\"cp\">{%</span> <span class=\"k\">endpaginate</span> <span class=\"cp\">%}</span>\n</pre>\n<p>The <tt>Paginator</tt> object contains the following properties:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>first</td>\n<td>First <tt>Page</tt>. Will be <tt>None</tt> if it is already the first page.</td>\n</tr>\n<tr><td>prev</td>\n<td>Previous <tt>Page</tt>. Will be <tt>None</tt> if there is no previous page.</td>\n</tr>\n<tr><td>pages</td>\n<td>List of pages.</td>\n</tr>\n<tr><td>next</td>\n<td>Next <tt>Page</tt>. Will be <tt>None</tt> if there is no next page.</td>\n</tr>\n<tr><td>last</td>\n<td>Last <tt>Page</tt>. Will be <tt>None</tt> if it is already the last page.</td>\n</tr>\n</tbody>\n</table>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">pagination_tags</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">paginate</span> <span class=\"nv\">page_obj</span> <span class=\"nv\">num_links</span> <span class=\"nv\">paging</span> <span class=\"cp\">%}</span><span class=\"x\">\n&lt;ul&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">paging.first</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li&gt;First - </span><span class=\"cp\">{{</span> <span class=\"nv\">paging.first.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\">\n\n    </span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">paging.prev</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li&gt;Previous - </span><span class=\"cp\">{{</span> <span class=\"nv\">paging.prev.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\">\n\n    </span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">page</span> <span class=\"k\">in</span> <span class=\"nv\">paging.pages</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li class=\"</span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">page.is_current</span> <span class=\"cp\">%}</span><span class=\"x\">current</span><span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\">\"&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">page.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span><span class=\"x\">\n\n    </span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">paging.next</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li&gt;Next - </span><span class=\"cp\">{{</span> <span class=\"nv\">paging.next.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\">\n\n    </span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">paging.last</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li&gt;Last - </span><span class=\"cp\">{{</span> <span class=\"nv\">paging.last.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\">\n&lt;/ul&gt;\n</span><span class=\"cp\">{%</span> <span class=\"k\">endpaginate</span> <span class=\"cp\">%}</span>\n</pre>\n<p>If you are sending the page_kwarg as a query parameter, you can optionally pass a fourth argument with the name\nof the page_kwarg and the <tt>Paginator</tt> will provide the query string without the page_kwarg:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">pagination_tags</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">paginate</span> <span class=\"nv\">page_obj</span> <span class=\"nv\">num_links</span> <span class=\"nv\">paging</span> <span class=\"s1\">'page'</span> <span class=\"cp\">%}</span><span class=\"x\">\n&lt;ul&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">page</span> <span class=\"k\">in</span> <span class=\"nv\">paging.pages</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;li&gt;&lt;a href=\"?page=</span><span class=\"cp\">{{</span> <span class=\"nv\">page.number</span> <span class=\"cp\">}}</span><span class=\"x\">&amp;</span><span class=\"cp\">{{</span> <span class=\"nv\">paging.query</span> <span class=\"cp\">}}</span><span class=\"x\">\"&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">page.number</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/a&gt;&lt;/li&gt;\n    </span><span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span><span class=\"x\">\n&lt;/ul&gt;\n</span><span class=\"cp\">{%</span> <span class=\"k\">endpaginate</span> <span class=\"cp\">%}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1764173, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "25cf38a2be91e6a79b9fec22a888857b", "sha256": "18233a267e304de1b13cc29748b58277149bebad9a200e0370a9df673fb49f63"}, "downloads": -1, "filename": "django_smart_pagination-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25cf38a2be91e6a79b9fec22a888857b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7596, "upload_time": "2015-10-08T13:29:25", "upload_time_iso_8601": "2015-10-08T13:29:25.208908Z", "url": "https://files.pythonhosted.org/packages/3b/91/e68fab577ecba947a439caa3302d83be293f009cfa486e9f0513900070dd/django_smart_pagination-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0124eb37b94639bb25133769172dc109", "sha256": "745a3cc51607138b82c92d0a0b6185d1217f1ec436fd4a6b6b672c8e2d5741e5"}, "downloads": -1, "filename": "django-smart-pagination-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0124eb37b94639bb25133769172dc109", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5397, "upload_time": "2015-10-08T13:29:30", "upload_time_iso_8601": "2015-10-08T13:29:30.722155Z", "url": "https://files.pythonhosted.org/packages/85/06/192d4d510363cf0c254ce25e6217e80af3aa187f02b74cfe9e77d79c6694/django-smart-pagination-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f98b83e3a5ac6de5e7626990c44b9856", "sha256": "d6f388227cd967d1ae6b153d517b5e0faf90a4fea3ca28a192a0c183d4f45bed"}, "downloads": -1, "filename": "django_smart_pagination-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f98b83e3a5ac6de5e7626990c44b9856", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7627, "upload_time": "2015-10-08T14:18:59", "upload_time_iso_8601": "2015-10-08T14:18:59.940059Z", "url": "https://files.pythonhosted.org/packages/1c/26/a76eeddbbe3ad20492641c91e5360dc1ec15e7be8bdcefb0fb1a45044963/django_smart_pagination-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8e23b5d8f53e3c662e529ef4709602e", "sha256": "e36adedd406fbcb3776f88c5c16a564938c426904423f847274d526a6123d4d9"}, "downloads": -1, "filename": "django-smart-pagination-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a8e23b5d8f53e3c662e529ef4709602e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5418, "upload_time": "2015-10-08T14:19:10", "upload_time_iso_8601": "2015-10-08T14:19:10.633070Z", "url": "https://files.pythonhosted.org/packages/d6/7f/97008db56406cd4d1f871c61cb34843ea9f9e19b9f8a893996801a6f544c/django-smart-pagination-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f98b83e3a5ac6de5e7626990c44b9856", "sha256": "d6f388227cd967d1ae6b153d517b5e0faf90a4fea3ca28a192a0c183d4f45bed"}, "downloads": -1, "filename": "django_smart_pagination-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f98b83e3a5ac6de5e7626990c44b9856", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7627, "upload_time": "2015-10-08T14:18:59", "upload_time_iso_8601": "2015-10-08T14:18:59.940059Z", "url": "https://files.pythonhosted.org/packages/1c/26/a76eeddbbe3ad20492641c91e5360dc1ec15e7be8bdcefb0fb1a45044963/django_smart_pagination-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8e23b5d8f53e3c662e529ef4709602e", "sha256": "e36adedd406fbcb3776f88c5c16a564938c426904423f847274d526a6123d4d9"}, "downloads": -1, "filename": "django-smart-pagination-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a8e23b5d8f53e3c662e529ef4709602e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5418, "upload_time": "2015-10-08T14:19:10", "upload_time_iso_8601": "2015-10-08T14:19:10.633070Z", "url": "https://files.pythonhosted.org/packages/d6/7f/97008db56406cd4d1f871c61cb34843ea9f9e19b9f8a893996801a6f544c/django-smart-pagination-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:10 2020"}