{"info": {"author": "Jonathan N. Lee", "author_email": "jonathan_lee@berkeley.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development"], "description": "neuralpy 1.3.0\n--------------\n\n**Within this package is the most intuitive fully-connected multilayer neural network model. Data science shouldn't have a high barrier to entry. neuralpy handles the math and overhead while you focus on the data.**\n\nneuralpy is a neural network model written in python based on Michael Nielsen's neural networks and deep learning book.\n\n- Visit the `neuralpy website <http://jon--lee.github.io/neuralpy/>`_\n- Get detailed examples and explanations in the `Official Documentation <http://pythonhosted.org/neuralpy/>`_\n- Contribute on `Github <https://github.com/jon--lee/neuralpy>`_\n\nGetting Started (quick start)\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThe following demonstrates how to download and install **neuralpy** and how to create and train a simple neural network.\nRun the following command to download and install::\n\n\t$ pip install neuralpy\n\nCreate a neural network in your project by specifying the number of nodes in each layer. Random weights and biases will automatically be generated::\n\t\n\timport neuralpy\n\tnet = neuralpy.Network([2, 3, 1])\n\nThe network feeds input vectors as python lists forward and returns the output vector as a list::\n\n\tx = [1, 1]\n\toutput = net.forward(x)\n\tprint output\n        # ex: [0.11471727263613461]\n\nTrain the neural network by first generating training data in the form of a list of tuples. Each tuple has two components and each component is a list representing the input and output respectively. This training set represents the simple OR function\nand it can be generated for you to save typing::\n\n\ttraining_data = neuralpy.load_or()\n        # [\n        #   ([1, 1], [1]),\n        #   ([1, 0], [1]),\n        #   ...\n        # ]\n\nThen we must specify the remaining hyperparameters. Let's say we want to limit it to 100 epochs and give it a learning rate of 1::\n\n\tepochs = 100\n\tlearning_rate = 1\n\nThen run the *train* method with the parameters. We're telling the network to conform to training data::\n\n\tnet.train(training_data, epochs, learning_rate)\n\nNow feed forward the input from earlier and the output should be closer to 1.0, which is what we trained the network to do::\n\n\toutput = net.forward(x)\n\tprint output\t\t# ex: [0.9542129706170075]\n\nThere is more information about advanced options such as monitoring the cost in the official documentation.\n\nSince, this is a multilayer feedforward neural network, it is a universal approximator (Hornik, Stinchcombe and White, 1989). Neural Networks can be used for a wide range of applications from image processing to time series prediction.\n\n- *\"You abandoned me. You left me to die.\"*\n- *\"Well, I wouldn't have done it if I'd known you were going to hassle me about it.\"*\n", "description_content_type": null, "docs_url": "https://pythonhosted.org/neuralpy/", "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jon--lee/neuralpy", "keywords": "neuralpy neural networks", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "neuralpy", "package_url": "https://pypi.org/project/neuralpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/neuralpy/", "project_urls": {"Homepage": "https://github.com/jon--lee/neuralpy"}, "release_url": "https://pypi.org/project/neuralpy/1.3.0/", "requires_dist": null, "requires_python": null, "summary": "neuralpy - The most intuitive Neural Network Model", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Within this package is the most intuitive fully-connected multilayer neural network model. Data science shouldn\u2019t have a high barrier to entry. neuralpy handles the math and overhead while you focus on the data.</strong></p>\n<p>neuralpy is a neural network model written in python based on Michael Nielsen\u2019s neural networks and deep learning book.</p>\n<ul>\n<li>Visit the <a href=\"http://jon--lee.github.io/neuralpy/\" rel=\"nofollow\">neuralpy website</a></li>\n<li>Get detailed examples and explanations in the <a href=\"http://pythonhosted.org/neuralpy/\" rel=\"nofollow\">Official Documentation</a></li>\n<li>Contribute on <a href=\"https://github.com/jon--lee/neuralpy\" rel=\"nofollow\">Github</a></li>\n</ul>\n<div id=\"getting-started-quick-start\">\n<h2>Getting Started (quick start)</h2>\n<p>The following demonstrates how to download and install <strong>neuralpy</strong> and how to create and train a simple neural network.\nRun the following command to download and install:</p>\n<pre>$ pip install neuralpy\n</pre>\n<p>Create a neural network in your project by specifying the number of nodes in each layer. Random weights and biases will automatically be generated:</p>\n<pre>import neuralpy\nnet = neuralpy.Network([2, 3, 1])\n</pre>\n<p>The network feeds input vectors as python lists forward and returns the output vector as a list:</p>\n<pre>x = [1, 1]\noutput = net.forward(x)\nprint output\n# ex: [0.11471727263613461]\n</pre>\n<p>Train the neural network by first generating training data in the form of a list of tuples. Each tuple has two components and each component is a list representing the input and output respectively. This training set represents the simple OR function\nand it can be generated for you to save typing:</p>\n<pre>training_data = neuralpy.load_or()\n# [\n#   ([1, 1], [1]),\n#   ([1, 0], [1]),\n#   ...\n# ]\n</pre>\n<p>Then we must specify the remaining hyperparameters. Let\u2019s say we want to limit it to 100 epochs and give it a learning rate of 1:</p>\n<pre>epochs = 100\nlearning_rate = 1\n</pre>\n<p>Then run the <em>train</em> method with the parameters. We\u2019re telling the network to conform to training data:</p>\n<pre>net.train(training_data, epochs, learning_rate)\n</pre>\n<p>Now feed forward the input from earlier and the output should be closer to 1.0, which is what we trained the network to do:</p>\n<pre>output = net.forward(x)\nprint output            # ex: [0.9542129706170075]\n</pre>\n<p>There is more information about advanced options such as monitoring the cost in the official documentation.</p>\n<p>Since, this is a multilayer feedforward neural network, it is a universal approximator (Hornik, Stinchcombe and White, 1989). Neural Networks can be used for a wide range of applications from image processing to time series prediction.</p>\n<ul>\n<li><em>\u201cYou abandoned me. You left me to die.\u201d</em></li>\n<li><em>\u201cWell, I wouldn\u2019t have done it if I\u2019d known you were going to hassle me about it.\u201d</em></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1711085, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b847e6957581da9e98058211836e72f8", "sha256": "bf0195090d46564485ba46d01115120f014b3e964f02297251bf3a4260ac34ff"}, "downloads": -1, "filename": "neuralpy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b847e6957581da9e98058211836e72f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2456, "upload_time": "2015-06-30T08:47:00", "upload_time_iso_8601": "2015-06-30T08:47:00.203907Z", "url": "https://files.pythonhosted.org/packages/d8/7b/12c9ed25bbb68a6b35c3224656e4cfa3a2088e168846c721003948590499/neuralpy-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4cb26e5c92e64e5f31112371badd71e6", "sha256": "6e113f51a0ec27e6c79024ce96023c299fdb520d54c72cccac403d7058ff6500"}, "downloads": -1, "filename": "neuralpy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4cb26e5c92e64e5f31112371badd71e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3475, "upload_time": "2015-07-01T22:56:45", "upload_time_iso_8601": "2015-07-01T22:56:45.743488Z", "url": "https://files.pythonhosted.org/packages/5d/57/e0673f86191c2d69cf607e2fff12cc29e771092f7a4b63ce6a5f0b27330c/neuralpy-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ac823e270e1b06f9a289f261555ca1bb", "sha256": "8af91fd577b54c673d4d12d099a9330cb76387c538378e5dcefa3009cbc03560"}, "downloads": -1, "filename": "neuralpy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ac823e270e1b06f9a289f261555ca1bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4570, "upload_time": "2015-07-03T19:14:15", "upload_time_iso_8601": "2015-07-03T19:14:15.960240Z", "url": "https://files.pythonhosted.org/packages/22/df/4e46a004db7d4e820c4c0a0160191eeb6b9ee19b4807b6c2885d70715fd1/neuralpy-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "737eff94d97b3db880ecd6b5aa981c12", "sha256": "c32f0b13adbde31b189998807660b4314f7369f7db16445fd5b01940628814d9"}, "downloads": -1, "filename": "neuralpy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "737eff94d97b3db880ecd6b5aa981c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4553, "upload_time": "2015-07-03T19:24:23", "upload_time_iso_8601": "2015-07-03T19:24:23.794424Z", "url": "https://files.pythonhosted.org/packages/20/fd/92e3644148041c9d5f559febd2db32e5bba37680939e77b89392b9364295/neuralpy-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "cc56b148efd175a42df77ab084e35162", "sha256": "dffb3366dc640d0c6ea651428b29e3437bace2284ccf7d7f846a925b600b0d56"}, "downloads": -1, "filename": "neuralpy-1.1.2.tar.gz", "has_sig": false, "md5_digest": "cc56b148efd175a42df77ab084e35162", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4524, "upload_time": "2015-07-03T19:31:12", "upload_time_iso_8601": "2015-07-03T19:31:12.983794Z", "url": "https://files.pythonhosted.org/packages/b0/a0/5d33c5e1c2c42834f5d94adb4e598e0fc3836082f3768cfe1c0d45d7381d/neuralpy-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "43c668e69ee6ace82e35120685ad20cf", "sha256": "5940f63f0a1a64074847d1fba6b9741d77b728f66a9004f59eb86de445f7f7cc"}, "downloads": -1, "filename": "neuralpy-1.1.3.tar.gz", "has_sig": false, "md5_digest": "43c668e69ee6ace82e35120685ad20cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4622, "upload_time": "2015-07-13T20:03:15", "upload_time_iso_8601": "2015-07-13T20:03:15.914594Z", "url": "https://files.pythonhosted.org/packages/ef/4e/dd9d95f805e3fb5a70651673f464d0caaa1cc926efe2ea84cf800ab5d3d3/neuralpy-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "3a21bafc8e0b72266d24263bbf4f5457", "sha256": "a0aba38bdd745b067e16d3eecf7564ee1f85f4aab212405bc41d8ed47b4c3c43"}, "downloads": -1, "filename": "neuralpy-1.2.0.tar.gz", "has_sig": false, "md5_digest": "3a21bafc8e0b72266d24263bbf4f5457", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11071, "upload_time": "2015-08-18T20:46:15", "upload_time_iso_8601": "2015-08-18T20:46:15.876380Z", "url": "https://files.pythonhosted.org/packages/2b/07/5c60370af3726af22a30a166f26b447a556375dca1915ce78dbd69647c78/neuralpy-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "9ee51bfa3a4ddfab87679f5a29b32934", "sha256": "cc64dd54a4f148795caf2bd21c7e0909e40d38b189553381a2b1a04a318dafcb"}, "downloads": -1, "filename": "neuralpy-1.2.1.tar.gz", "has_sig": false, "md5_digest": "9ee51bfa3a4ddfab87679f5a29b32934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11291, "upload_time": "2015-08-30T01:14:09", "upload_time_iso_8601": "2015-08-30T01:14:09.606186Z", "url": "https://files.pythonhosted.org/packages/1e/ad/ce6b304933cf1eac88f99aeaf9f7f291b513dce99823199536a5f47928c9/neuralpy-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "48af8512ca95e137689cbf0a6188568d", "sha256": "4778c94380d69a5ac7e195793ab374661c3bae2b47c5a9a15cd806384db9ab17"}, "downloads": -1, "filename": "neuralpy-1.3.0.tar.gz", "has_sig": false, "md5_digest": "48af8512ca95e137689cbf0a6188568d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9074, "upload_time": "2015-09-07T03:44:25", "upload_time_iso_8601": "2015-09-07T03:44:25.517610Z", "url": "https://files.pythonhosted.org/packages/aa/6f/5d4f1c90fd944108d63428a33fae99d931da110cf13a8c64991474d87f90/neuralpy-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "48af8512ca95e137689cbf0a6188568d", "sha256": "4778c94380d69a5ac7e195793ab374661c3bae2b47c5a9a15cd806384db9ab17"}, "downloads": -1, "filename": "neuralpy-1.3.0.tar.gz", "has_sig": false, "md5_digest": "48af8512ca95e137689cbf0a6188568d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9074, "upload_time": "2015-09-07T03:44:25", "upload_time_iso_8601": "2015-09-07T03:44:25.517610Z", "url": "https://files.pythonhosted.org/packages/aa/6f/5d4f1c90fd944108d63428a33fae99d931da110cf13a8c64991474d87f90/neuralpy-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:48 2020"}