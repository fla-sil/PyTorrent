{"info": {"author": "Ren\u00e9 Rohner(Snooz82)", "author_email": "snooz@posteo.de", "bugtrack_url": null, "classifiers": ["Framework :: Robot Framework", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Acceptance"], "description": "===================================================\nrobotframework-crypto\n===================================================\n\nCryptoLibrary is a library for secure password handling.\n`project page <https://github.com/Snooz82/robotframework-crypto>`_\n\nFor more information about Robot Framework, see http://robotframework.org.\n\n`Keyword Documentation <https://snooz82.github.io/robotframework-crypto/CryptoLibrary.html>`_\n\n|\n\nInstallation\n------------\n\nIf you already have Python >= 3.6 with pip installed, you can simply\nrun:\n\n``pip install --upgrade robotframework-crypto``\n\nor if you have Python 2 and 3 installed in parallel you may use\n\n``pip3 install --upgrade robotframework-crypto``\n\nIf you have Python 2 ... i am very sorry! Please update!\n\n|\n\nHow it works\n------------\n\nCryptoLibrary uses asymmetric crypto with elliptic curve cryptography to store confidential data securely.\n\nWith ``python -m CryptoLibrary`` you can generate a key pair (private and public key) for your test env.\nYou will get the public key after generating.\n\nthis public key can now be used to encrypt every data you do not want to be public.\nPasswords, personal data, etc.\n\nyou can use ``python -m CryptoClient`` on you computer where you want to encrypt data.\nEncrypted Data will look like this:\n\n``crypt:tIdr5s65+ggfJZl46pJgljioCUePUdZLozgiwquznw+xSlmzT3dcvfrTL9wIdRwmNOJuONT7FBW5``\n\nthis encrypted data can now be decrypted with CryptoLibrary within RobotFramework.\n\nCryptoLibrary need the private_key_store.json for this.\nThis is what is generated as key pair.\nPrivate key can be imported in test env with ``python -m CryptoLibrary`` .\n\n|\n\nSuppressing encrypted Text from Logs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll Data that is decrypted by CryptoLibrary is replaced in the log by ``***``\nThis works always and can not be disabled.\nNo need to use special keywords for this.\n\n|\n\nUsage in Test\n~~~~~~~~~~~~~\n\n.. code :: robotframework\n\n    *** Settings ***\n    Resource    imports.resource\n    Library     CryptoLibrary    %{private_key_password}    variable_decryption=False\n    #private key which should be secret, should also be protected by a password\n\n    *** Variables ***\n    ${secret}=     KILL ALL HUMANS!!!\n    ${enc_user}=   crypt:nkpEPOVKfOko3t04XxOupA+F/ANTEuR9aQuPaPeMBGBQenwYf6UNESEl9MWRKGuj60ZWd10=\n    ${enc_pwd}=    crypt:TVpamLXCtrzRsl8UAgD0YuoY+lSJNV73+bTYhOP51zM1GQihgyCvSZ2CoGoKsUHLFjokyJLHxFzPEB4=\n\n    *** Test Cases ***\n    Valid Login\n        Open Browser    ${BASE-URL}\n        Suppress Logging                                  #disable Robot Framework logging\n        ${var}=    set Variable   ${secret}\n        Log    ${var}\n        Unsuppress Logging                                #enable Robot Framework logging\n        ${user}=    Get Decrypted Text    ${enc_user}     #decrypts cipher text and returns plain text\n        Input Text      id:input_username    ${user}\n        ${password}=    Get Decrypted Text    ${enc_pwd}  #decrypts cipher text and returns plain text\n        Input Password    id:input_password    ${password}\n        Click Button    id:button_login\n        Page Should Contain Element    //a[text()='Logout']\n        [Teardown]   Close Browser\n\nin this case the decryption password for the private key.\nIt can also be saved on test env persistently as a hash.\n\nThe parameter **variable_decryption** in the Library call, if set to true it will automatically decode ALL passwords defined in the variables section\nand then ``\"Get Decrypted Text\"`` isn't needed.\n\n|\n\nMenu walkthrough\n----------------\n\n|\n\nCryptoLibrary Command Line Tool\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis Command Line tool has to be used to create a key pair.\nIt can also show the public key and encrypt or decrypt data.\n\n``python -m CryptoLibrary``::\n\n ? What do you want to do?  (Use arrow keys)\n   Encrypt\n   Decrypt\n   Open config --->  ? What do you want to do?  (Use arrow keys)\n   Quit                 Configure key pair    ----------------------------------------------------------------------------------------->  ? What do you want to do?  (Use arrow keys)\n                        Configure public key  --->  ? What do you want to do?  (Use arrow keys)                                             Generate key pair\n                        Back                          Set public key from string  --->   ? Input public_key as Base64:  ThePublicKey        Set key pair from file\n                                                      Get public key from string  --->   Public Key: ThePublicKey                           Set key pair from string\n                                                      Delete public key           --->   ? Do you really want to delete public key?         Delete key pair\n                                                      Back                                                                                  Save private key password\n                                                                                                                                            Delete saved password\n                                                                                                                                            Back\n ? What do you want to do?  (Use arrow keys)\n   Encrypt     ------------------------------------------------------------------->   ? Enter the password to encrypt  YourPassword\n   Decrypt     -----> ? Input encrypted cipher text:  crypt:TheEncryptedPassword      Encrypted password: (use inlc. \"crypt:\")\n   Open config        ? Enter the password to decrypt  **********\n   Quit               Your password is: YourPassword                                  crypt:TheEncryptedPassword=\n\nTo start using the CryptoLibrary, start ``python -m CryptoLibrary`` and choose ``Open config`` -> ``Configure key pair``-> ``Generate key pair``.\n\nThis generates the private and public keys in the ``private_key.json`` and ``public_key.key`` files.\nThe ``private_key.json`` is needed to decrypt the values on your test server and has to be copied manually or added through the CLI interface.\nSee ``Set key pair from...`` above.\n\nNext you can encrypt the values needed on your test server, looking something like ``crypt:nkpEPOVKfOko3t04XxOupA+F/ANTEuR9aQuPaPeMBGBQenwYf6UNESEl9MWRKGuj60ZWd10=``\n\nThere are two options to decrypt your values in the robot file. When CryptoLibrary is loaded with ``variable_decryption=True``,\nALL variables defined in that section, will automatically get decrypted.\nWhen the option is turned off (the default) the keyword ``Get Decrypted Text`` explicitly decrypts specific values.\n\n|\n\nCryptoClient Command Line Tool\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis CryptoClient command line tool is the tool for all test designers that want to encrypt data.\nI can only import and show the public key and encrypt data.\n\n``python -m CryptoClient``::\n\n ? What do you want to do?  (Use arrow keys)\n   Encrypt     --------------------------------------------------------------------------------------->   ? Enter the password to encrypt  YourPassword\n   Open config -----> ? What do you want to do?  (Use arrow keys)                                           Encrypted password: (use inlc. \"crypt:\")\n   Quit                 Set public key from string  --->   ? Input public_key as Base64:  ThePublicKey\n                        Get public key from string  --->   Public Key: ThePublicKey                         crypt:TheEncryptedPassword\n                        Delete public key           --->   ? Do you really want to delete public key?\n                        Back\n\n|\n\nSeleniumLibrary Plugin\n----------------------\n\nCryptoLibrary.Plugin is a SeleniumLibrary Plugin.\nWhen taken into usage, the ``Input Password`` Keyword can now handle decrypted cipher texts as well.\n\nExample:\n\n.. code :: robotframework\n\n    *** Settings ***\n    Library    SeleniumLibrary    plugins=CryptoLibrary.Plugin\n\n\n    *** Variables ***\n    ${Admins-Password}=    crypt:fQ5Iqn/j2lN8rXwimyz0JXlYzD0gTsPRwb0YJ3YSvDchkvDpfwYDmhHxsZ2i7bIQDlsWKJVhBb+Dz4w=\n\n\n    *** Test Cases ***\n    Decrypt as Plugin\n        Open Browser      http://www.keyword-driven.de\n        Input Text        input_username    admin\n        Input Password    input_password    ${Admins-Password}\n\n|\n\nThis is still a Proof of Concept !!11!!1 ;-)\n--------------------------------------------\n\nIt may happen that keywords changes.\ni try not to do, but it can happen.\nFeel free to make a pull Request to improve docs or write some tests for it.\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Snooz82/robotframework-crypto", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "robotframework-crypto", "package_url": "https://pypi.org/project/robotframework-crypto/", "platform": "", "project_url": "https://pypi.org/project/robotframework-crypto/", "project_urls": {"Homepage": "https://github.com/Snooz82/robotframework-crypto"}, "release_url": "https://pypi.org/project/robotframework-crypto/0.2.3/", "requires_dist": ["robotframework (>=3.1)", "PyNaCl (>=1.3.0)", "PyInquirer"], "requires_python": ">=3.6", "summary": "A library for secure password handling.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>CryptoLibrary is a library for secure password handling.\n<a href=\"https://github.com/Snooz82/robotframework-crypto\" rel=\"nofollow\">project page</a></p>\n<p>For more information about Robot Framework, see <a href=\"http://robotframework.org\" rel=\"nofollow\">http://robotframework.org</a>.</p>\n<p><a href=\"https://snooz82.github.io/robotframework-crypto/CryptoLibrary.html\" rel=\"nofollow\">Keyword Documentation</a></p>\n<div>\n<div><br></div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you already have Python &gt;= 3.6 with pip installed, you can simply\nrun:</p>\n<p><tt>pip install <span class=\"pre\">--upgrade</span> <span class=\"pre\">robotframework-crypto</span></tt></p>\n<p>or if you have Python 2 and 3 installed in parallel you may use</p>\n<p><tt>pip3 install <span class=\"pre\">--upgrade</span> <span class=\"pre\">robotframework-crypto</span></tt></p>\n<p>If you have Python 2 \u2026 i am very sorry! Please update!</p>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>CryptoLibrary uses asymmetric crypto with elliptic curve cryptography to store confidential data securely.</p>\n<p>With <tt>python <span class=\"pre\">-m</span> CryptoLibrary</tt> you can generate a key pair (private and public key) for your test env.\nYou will get the public key after generating.</p>\n<p>this public key can now be used to encrypt every data you do not want to be public.\nPasswords, personal data, etc.</p>\n<p>you can use <tt>python <span class=\"pre\">-m</span> CryptoClient</tt> on you computer where you want to encrypt data.\nEncrypted Data will look like this:</p>\n<p><tt>crypt:tIdr5s65+ggfJZl46pJgljioCUePUdZLozgiwquznw+xSlmzT3dcvfrTL9wIdRwmNOJuONT7FBW5</tt></p>\n<p>this encrypted data can now be decrypted with CryptoLibrary within RobotFramework.</p>\n<p>CryptoLibrary need the private_key_store.json for this.\nThis is what is generated as key pair.\nPrivate key can be imported in test env with <tt>python <span class=\"pre\">-m</span> CryptoLibrary</tt> .</p>\n<div>\n<div><br></div>\n</div>\n<div id=\"suppressing-encrypted-text-from-logs\">\n<h3>Suppressing encrypted Text from Logs</h3>\n<p>All Data that is decrypted by CryptoLibrary is replaced in the log by <tt>***</tt>\nThis works always and can not be disabled.\nNo need to use special keywords for this.</p>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"usage-in-test\">\n<h3>Usage in Test</h3>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Resource</span><span class=\"p\">    </span><span class=\"nn\">imports.resource</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">     </span><span class=\"nn\">CryptoLibrary</span><span class=\"p\">    %{</span><span class=\"nv\">private_key_password</span><span class=\"p\">}    </span><span class=\"s\">variable_decryption=False</span><span class=\"p\">\n</span><span class=\"c\">#private key which should be secret, should also be protected by a password\n</span><span class=\"p\">\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">secret</span><span class=\"p\">}=     </span><span class=\"s\">KILL ALL HUMANS!!!</span><span class=\"p\">\n${</span><span class=\"nv\">enc_user</span><span class=\"p\">}=   </span><span class=\"s\">crypt:nkpEPOVKfOko3t04XxOupA+F/ANTEuR9aQuPaPeMBGBQenwYf6UNESEl9MWRKGuj60ZWd10=</span><span class=\"p\">\n${</span><span class=\"nv\">enc_pwd</span><span class=\"p\">}=    </span><span class=\"s\">crypt:TVpamLXCtrzRsl8UAgD0YuoY+lSJNV73+bTYhOP51zM1GQihgyCvSZ2CoGoKsUHLFjokyJLHxFzPEB4=</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Test Cases ***</span><span class=\"p\">\n</span><span class=\"gu\">Valid Login</span><span class=\"p\">\n    </span><span class=\"nf\">Open Browser</span><span class=\"p\">    ${</span><span class=\"nv\">BASE-URL</span><span class=\"p\">}\n    </span><span class=\"nf\">Suppress Logging</span><span class=\"p\">                                  </span><span class=\"c\">#disable Robot Framework logging\n</span><span class=\"p\">    ${</span><span class=\"nv\">var</span><span class=\"p\">}=    </span><span class=\"nf\">set Variable</span><span class=\"p\">   ${</span><span class=\"nv\">secret</span><span class=\"p\">}\n    </span><span class=\"nf\">Log</span><span class=\"p\">    ${</span><span class=\"nv\">var</span><span class=\"p\">}\n    </span><span class=\"nf\">Unsuppress Logging</span><span class=\"p\">                                </span><span class=\"c\">#enable Robot Framework logging\n</span><span class=\"p\">    ${</span><span class=\"nv\">user</span><span class=\"p\">}=    </span><span class=\"nf\">Get Decrypted Text</span><span class=\"p\">    ${</span><span class=\"nv\">enc_user</span><span class=\"p\">}     </span><span class=\"c\">#decrypts cipher text and returns plain text\n</span><span class=\"p\">    </span><span class=\"nf\">Input Text</span><span class=\"p\">      </span><span class=\"s\">id:input_username</span><span class=\"p\">    ${</span><span class=\"nv\">user</span><span class=\"p\">}\n    ${</span><span class=\"nv\">password</span><span class=\"p\">}=    </span><span class=\"nf\">Get Decrypted Text</span><span class=\"p\">    ${</span><span class=\"nv\">enc_pwd</span><span class=\"p\">}  </span><span class=\"c\">#decrypts cipher text and returns plain text\n</span><span class=\"p\">    </span><span class=\"nf\">Input Password</span><span class=\"p\">    </span><span class=\"s\">id:input_password</span><span class=\"p\">    ${</span><span class=\"nv\">password</span><span class=\"p\">}\n    </span><span class=\"nf\">Click Button</span><span class=\"p\">    </span><span class=\"s\">id:button_login</span><span class=\"p\">\n    </span><span class=\"nf\">Page Should Contain Element</span><span class=\"p\">    </span><span class=\"s\">//a[text()='Logout']</span><span class=\"p\">\n    [</span><span class=\"kn\">Teardown</span><span class=\"p\">]   </span><span class=\"nf\">Close Browser</span>\n</pre>\n<p>in this case the decryption password for the private key.\nIt can also be saved on test env persistently as a hash.</p>\n<p>The parameter <strong>variable_decryption</strong> in the Library call, if set to true it will automatically decode ALL passwords defined in the variables section\nand then <tt>\"Get Decrypted Text\"</tt> isn\u2019t needed.</p>\n<div>\n<div><br></div>\n</div>\n</div>\n</div>\n<div id=\"menu-walkthrough\">\n<h2>Menu walkthrough</h2>\n<div>\n<div><br></div>\n</div>\n<div id=\"cryptolibrary-command-line-tool\">\n<h3>CryptoLibrary Command Line Tool</h3>\n<p>This Command Line tool has to be used to create a key pair.\nIt can also show the public key and encrypt or decrypt data.</p>\n<p><tt>python <span class=\"pre\">-m</span> CryptoLibrary</tt>:</p>\n<pre>? What do you want to do?  (Use arrow keys)\n  Encrypt\n  Decrypt\n  Open config ---&gt;  ? What do you want to do?  (Use arrow keys)\n  Quit                 Configure key pair    -----------------------------------------------------------------------------------------&gt;  ? What do you want to do?  (Use arrow keys)\n                       Configure public key  ---&gt;  ? What do you want to do?  (Use arrow keys)                                             Generate key pair\n                       Back                          Set public key from string  ---&gt;   ? Input public_key as Base64:  ThePublicKey        Set key pair from file\n                                                     Get public key from string  ---&gt;   Public Key: ThePublicKey                           Set key pair from string\n                                                     Delete public key           ---&gt;   ? Do you really want to delete public key?         Delete key pair\n                                                     Back                                                                                  Save private key password\n                                                                                                                                           Delete saved password\n                                                                                                                                           Back\n? What do you want to do?  (Use arrow keys)\n  Encrypt     -------------------------------------------------------------------&gt;   ? Enter the password to encrypt  YourPassword\n  Decrypt     -----&gt; ? Input encrypted cipher text:  crypt:TheEncryptedPassword      Encrypted password: (use inlc. \"crypt:\")\n  Open config        ? Enter the password to decrypt  **********\n  Quit               Your password is: YourPassword                                  crypt:TheEncryptedPassword=\n</pre>\n<p>To start using the CryptoLibrary, start <tt>python <span class=\"pre\">-m</span> CryptoLibrary</tt> and choose <tt>Open config</tt> -&gt; <tt>Configure key pair</tt>-&gt; <tt>Generate key pair</tt>.</p>\n<p>This generates the private and public keys in the <tt>private_key.json</tt> and <tt>public_key.key</tt> files.\nThe <tt>private_key.json</tt> is needed to decrypt the values on your test server and has to be copied manually or added through the CLI interface.\nSee <tt>Set key pair <span class=\"pre\">from...</span></tt> above.</p>\n<p>Next you can encrypt the values needed on your test server, looking something like <tt>crypt:nkpEPOVKfOko3t04XxOupA+F/ANTEuR9aQuPaPeMBGBQenwYf6UNESEl9MWRKGuj60ZWd10=</tt></p>\n<p>There are two options to decrypt your values in the robot file. When CryptoLibrary is loaded with <tt>variable_decryption=True</tt>,\nALL variables defined in that section, will automatically get decrypted.\nWhen the option is turned off (the default) the keyword <tt>Get Decrypted Text</tt> explicitly decrypts specific values.</p>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"cryptoclient-command-line-tool\">\n<h3>CryptoClient Command Line Tool</h3>\n<p>This CryptoClient command line tool is the tool for all test designers that want to encrypt data.\nI can only import and show the public key and encrypt data.</p>\n<p><tt>python <span class=\"pre\">-m</span> CryptoClient</tt>:</p>\n<pre>? What do you want to do?  (Use arrow keys)\n  Encrypt     ---------------------------------------------------------------------------------------&gt;   ? Enter the password to encrypt  YourPassword\n  Open config -----&gt; ? What do you want to do?  (Use arrow keys)                                           Encrypted password: (use inlc. \"crypt:\")\n  Quit                 Set public key from string  ---&gt;   ? Input public_key as Base64:  ThePublicKey\n                       Get public key from string  ---&gt;   Public Key: ThePublicKey                         crypt:TheEncryptedPassword\n                       Delete public key           ---&gt;   ? Do you really want to delete public key?\n                       Back\n</pre>\n<div>\n<div><br></div>\n</div>\n</div>\n</div>\n<div id=\"seleniumlibrary-plugin\">\n<h2>SeleniumLibrary Plugin</h2>\n<p>CryptoLibrary.Plugin is a SeleniumLibrary Plugin.\nWhen taken into usage, the <tt>Input Password</tt> Keyword can now handle decrypted cipher texts as well.</p>\n<p>Example:</p>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">SeleniumLibrary</span><span class=\"p\">    </span><span class=\"s\">plugins=CryptoLibrary.Plugin</span><span class=\"p\">\n\n\n</span><span class=\"gh\">*** Variables ***</span><span class=\"p\">\n${</span><span class=\"nv\">Admins-Password</span><span class=\"p\">}=    </span><span class=\"s\">crypt:fQ5Iqn/j2lN8rXwimyz0JXlYzD0gTsPRwb0YJ3YSvDchkvDpfwYDmhHxsZ2i7bIQDlsWKJVhBb+Dz4w=</span><span class=\"p\">\n\n\n</span><span class=\"gh\">*** Test Cases ***</span><span class=\"p\">\n</span><span class=\"gu\">Decrypt as Plugin</span><span class=\"p\">\n    </span><span class=\"nf\">Open Browser</span><span class=\"p\">      </span><span class=\"s\">http://www.keyword-driven.de</span><span class=\"p\">\n    </span><span class=\"nf\">Input Text</span><span class=\"p\">        </span><span class=\"s\">input_username</span><span class=\"p\">    </span><span class=\"s\">admin</span><span class=\"p\">\n    </span><span class=\"nf\">Input Password</span><span class=\"p\">    </span><span class=\"s\">input_password</span><span class=\"p\">    ${</span><span class=\"nv\">Admins-Password</span><span class=\"p\">}</span>\n</pre>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"this-is-still-a-proof-of-concept-11-1\">\n<h2>This is still a Proof of Concept !!11!!1 ;-)</h2>\n<p>It may happen that keywords changes.\ni try not to do, but it can happen.\nFeel free to make a pull Request to improve docs or write some tests for it.</p>\n</div>\n\n          </div>"}, "last_serial": 7052463, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "4e57fadc92b9af33c562764c7bd2173d", "sha256": "9ae37be2992b6bc33550a532bb74bdd3d4d84e293bec962987272078cc30ae09"}, "downloads": -1, "filename": "robotframework_crypto-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4e57fadc92b9af33c562764c7bd2173d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6", "size": 6437, "upload_time": "2019-08-12T19:37:08", "upload_time_iso_8601": "2019-08-12T19:37:08.526149Z", "url": "https://files.pythonhosted.org/packages/c6/0c/aa75f352cb6f99632f7f88430ed351c62ba338f060b742f070700394611a/robotframework_crypto-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ffb5be75de89d6cb00e691e8068ad3d", "sha256": "353e10791398128eff36b14d84c61d0f4ba387d949a7adf0ef6670f038700262"}, "downloads": -1, "filename": "robotframework-crypto-0.0.0.tar.gz", "has_sig": false, "md5_digest": "3ffb5be75de89d6cb00e691e8068ad3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6", "size": 5761, "upload_time": "2019-08-12T19:37:10", "upload_time_iso_8601": "2019-08-12T19:37:10.890060Z", "url": "https://files.pythonhosted.org/packages/23/72/b84ce6004f9cf72d7a6bfcaa76b4c494c5fbf9573cfc09ed18c2b839a7bd/robotframework-crypto-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "6dcf4f22f8f4453cc1b18cf93dd577fe", "sha256": "950be86680ea083dff30069889fab2fcf7cf6fb127121b7c3902f55c5b04cf6a"}, "downloads": -1, "filename": "robotframework_crypto-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6dcf4f22f8f4453cc1b18cf93dd577fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17299, "upload_time": "2019-09-05T21:54:19", "upload_time_iso_8601": "2019-09-05T21:54:19.368030Z", "url": "https://files.pythonhosted.org/packages/8f/6a/fbf945264e00f1bbd318c8e154e4ba00ac241c357ca92858c1b10ef1159a/robotframework_crypto-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de0539e41703f2525293d3c56a07d7e3", "sha256": "e6c3858b242d6cb4ba222f0a18d9e9c744b7c49fcbe37bffeb2df8881a9d310e"}, "downloads": -1, "filename": "robotframework-crypto-0.0.1.tar.gz", "has_sig": false, "md5_digest": "de0539e41703f2525293d3c56a07d7e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 59508, "upload_time": "2019-09-05T21:54:21", "upload_time_iso_8601": "2019-09-05T21:54:21.145432Z", "url": "https://files.pythonhosted.org/packages/dd/ea/b214203464fbe3c98630f33e7ccb18c1cb92c67ac7cf387f0995f356a7d3/robotframework-crypto-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2ef937c0594a37ed90ce227dc1a3d28f", "sha256": "827b90acec7d157be11c46d75cfb6fb4a782c1c9ebf3bfbd196d143cc4e4ed86"}, "downloads": -1, "filename": "robotframework_crypto-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2ef937c0594a37ed90ce227dc1a3d28f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17333, "upload_time": "2019-09-05T22:21:37", "upload_time_iso_8601": "2019-09-05T22:21:37.028088Z", "url": "https://files.pythonhosted.org/packages/26/26/3d87e4ff9e77b11563f91757586b02620d8a0137b2fc337501ce7f3748c3/robotframework_crypto-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8491a446be88d9e5ea77f0bac449754", "sha256": "bfe68e47d6e9b92a288d4b64b889ddfced69d660dcbea9f62373a9e1a967cf63"}, "downloads": -1, "filename": "robotframework-crypto-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e8491a446be88d9e5ea77f0bac449754", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 59530, "upload_time": "2019-09-05T22:21:38", "upload_time_iso_8601": "2019-09-05T22:21:38.998787Z", "url": "https://files.pythonhosted.org/packages/5e/9c/72411250605cfd1d9ea30c35f6a6228842bc65f9d83e12339a6229f75274/robotframework-crypto-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "88d19f3aa09d069b08913cc44be197de", "sha256": "a8345847ce8f514ee711e451a7c9726430a2166c6ada4514fe5277ec2da5d5c5"}, "downloads": -1, "filename": "robotframework_crypto-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88d19f3aa09d069b08913cc44be197de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17733, "upload_time": "2019-10-24T10:14:56", "upload_time_iso_8601": "2019-10-24T10:14:56.409376Z", "url": "https://files.pythonhosted.org/packages/48/e9/a701ee64d40da920658c9d40460213620bf0c7a66ec1543be418fb582005/robotframework_crypto-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c848ed577ec2cc0654c5c92a3310115", "sha256": "75ea1c0eacc1a0e27dfea1253bad2e8791ef9e0158fd3460e47ba415e5fbf9a4"}, "downloads": -1, "filename": "robotframework-crypto-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c848ed577ec2cc0654c5c92a3310115", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 60053, "upload_time": "2019-10-24T10:14:58", "upload_time_iso_8601": "2019-10-24T10:14:58.131798Z", "url": "https://files.pythonhosted.org/packages/8a/9a/aecce54c99f9f963fc4d0fcd5d2b1c21a4df25010a8f66ceb0e742044fd4/robotframework-crypto-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0131377d427c96fb39ecdd32b9428880", "sha256": "53eb63c434f61635a10ff921f8bb17b3ede723b1dedf8ca53bfef39268a61f94"}, "downloads": -1, "filename": "robotframework_crypto-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0131377d427c96fb39ecdd32b9428880", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19011, "upload_time": "2020-01-27T22:51:13", "upload_time_iso_8601": "2020-01-27T22:51:13.189610Z", "url": "https://files.pythonhosted.org/packages/53/3d/bb21d1aa2d2711a77fb2841c766f9b2ff9e856ea92d2b8c5eef92ce46573/robotframework_crypto-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e110ffaf9c1b33c8f636d96ab63a961a", "sha256": "08292ab1a212de209f035bbd369ee4dbed34abb8b096764503d481a059cd77c3"}, "downloads": -1, "filename": "robotframework-crypto-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e110ffaf9c1b33c8f636d96ab63a961a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 62584, "upload_time": "2020-01-27T22:51:15", "upload_time_iso_8601": "2020-01-27T22:51:15.694086Z", "url": "https://files.pythonhosted.org/packages/bd/88/db6e117729df8abcdd37344313466de66208017010bbde77b387933f3420/robotframework-crypto-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "37aca0cdbe20d3ac302dd9c344b88f20", "sha256": "50e7eb104b37e88f1ea28bc4aad444defe7785e63c1c5203f85b3190206d74b5"}, "downloads": -1, "filename": "robotframework_crypto-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "37aca0cdbe20d3ac302dd9c344b88f20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19050, "upload_time": "2020-01-27T23:07:13", "upload_time_iso_8601": "2020-01-27T23:07:13.697872Z", "url": "https://files.pythonhosted.org/packages/d5/9f/0c4bb45ef5af50119b93e481eb0572ca79ff9f395a4edce614298b9b172f/robotframework_crypto-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "478fe614f9924cc6246a2424a6cd571e", "sha256": "344afa67bd1b8733bcf9ea0d1ea77ee16cdb96f41f194f32f254aa95ad17e93d"}, "downloads": -1, "filename": "robotframework-crypto-0.2.1.tar.gz", "has_sig": false, "md5_digest": "478fe614f9924cc6246a2424a6cd571e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 62683, "upload_time": "2020-01-27T23:07:15", "upload_time_iso_8601": "2020-01-27T23:07:15.285523Z", "url": "https://files.pythonhosted.org/packages/bf/a8/e6475f11f74f135ace8f8ef2e33a28be9bacfe0818b060ec29640f62deb3/robotframework-crypto-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e8988f22fc2128b4083bafd1bcc2146e", "sha256": "b5b239345807a7db6eaa24be312e6e18b3b8eac84123045045639226a1ddfcde"}, "downloads": -1, "filename": "robotframework_crypto-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e8988f22fc2128b4083bafd1bcc2146e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21335, "upload_time": "2020-03-16T17:11:46", "upload_time_iso_8601": "2020-03-16T17:11:46.267527Z", "url": "https://files.pythonhosted.org/packages/ea/2f/5a935a367660ac2db5b7f9583622fd3502ea5a1730399e8930cbb3ea6ecd/robotframework_crypto-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff7d00d95696968fa606ae0464fedcc7", "sha256": "1c91f9d3c6beb7878aa44dbb1cbdac1801a9896645e8d572a9434dc3d35403cb"}, "downloads": -1, "filename": "robotframework-crypto-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ff7d00d95696968fa606ae0464fedcc7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 67967, "upload_time": "2020-03-16T17:11:47", "upload_time_iso_8601": "2020-03-16T17:11:47.982784Z", "url": "https://files.pythonhosted.org/packages/c3/1f/2913f84af260e1b20b6fc75c0f7afa26020c6c98221c326bf604258d760a/robotframework-crypto-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d7a7955fb8b0cd7180bba582a36c20b8", "sha256": "a23c836a6d3862364f34bc0db7acac6ec585b3642ba124c72eafc2e1f4a9fe55"}, "downloads": -1, "filename": "robotframework_crypto-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d7a7955fb8b0cd7180bba582a36c20b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21445, "upload_time": "2020-04-19T10:23:10", "upload_time_iso_8601": "2020-04-19T10:23:10.887713Z", "url": "https://files.pythonhosted.org/packages/e4/dc/dd35eec48812857b60745b4881799e78ab88cb97f956cef03d1866eb75e7/robotframework_crypto-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01caef4a004c45ce6fcb24eeb570bf92", "sha256": "7c9e2c028cac60b437963835f31dff3ad59a15f68ba04e2721d43992a375dabb"}, "downloads": -1, "filename": "robotframework-crypto-0.2.3.tar.gz", "has_sig": false, "md5_digest": "01caef4a004c45ce6fcb24eeb570bf92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 68315, "upload_time": "2020-04-19T10:23:12", "upload_time_iso_8601": "2020-04-19T10:23:12.657231Z", "url": "https://files.pythonhosted.org/packages/10/a7/4d6bca96bdd0ef5616475a7c3f2ab00f2a566a56173c4ec6de898fcf4c66/robotframework-crypto-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7a7955fb8b0cd7180bba582a36c20b8", "sha256": "a23c836a6d3862364f34bc0db7acac6ec585b3642ba124c72eafc2e1f4a9fe55"}, "downloads": -1, "filename": "robotframework_crypto-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d7a7955fb8b0cd7180bba582a36c20b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21445, "upload_time": "2020-04-19T10:23:10", "upload_time_iso_8601": "2020-04-19T10:23:10.887713Z", "url": "https://files.pythonhosted.org/packages/e4/dc/dd35eec48812857b60745b4881799e78ab88cb97f956cef03d1866eb75e7/robotframework_crypto-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01caef4a004c45ce6fcb24eeb570bf92", "sha256": "7c9e2c028cac60b437963835f31dff3ad59a15f68ba04e2721d43992a375dabb"}, "downloads": -1, "filename": "robotframework-crypto-0.2.3.tar.gz", "has_sig": false, "md5_digest": "01caef4a004c45ce6fcb24eeb570bf92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 68315, "upload_time": "2020-04-19T10:23:12", "upload_time_iso_8601": "2020-04-19T10:23:12.657231Z", "url": "https://files.pythonhosted.org/packages/10/a7/4d6bca96bdd0ef5616475a7c3f2ab00f2a566a56173c4ec6de898fcf4c66/robotframework-crypto-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:57 2020"}