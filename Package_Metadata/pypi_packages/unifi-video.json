{"info": {"author": "yuppity", "author_email": "yuppity_pypi@wubbalubba.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# unifi-video-api\n\n[![Build Status](https://travis-ci.org/yuppity/unifi-video-api.svg?branch=master)](https://travis-ci.org/yuppity/unifi-video-api)\n[![Documentation Status](https://readthedocs.org/projects/unifi-video-api/badge/?version=latest)](https://unifi-video-api.readthedocs.io/en/latest/?badge=latest)\n\nPython API for interfacing with UniFi Video.\n\n**Supported UniFi Video versions**: v3.9.12 to v3.10.11\n\n**Supported Ubiquiti camera models**: UVC, UVC G3, UVC G3 Dome, UVC Dome, UVC Pro, UVC G3 Pro,\nUVC G3 Flex, UVC Micro, UVC G3 Micro, airCam, airCam Dome, and airCam Mini, UVC G4 Bullet, UVC G4 Pro.\n\n\n## Features\n**For a single UniFi Video server**:\n* Support both username/password and API key auths\n* Provide GET, POST, PUT, and DELETE methods\n* Handle session tracking and login when necessary\n* Provide iterable collections for cameras and recordings that the UniFi Video server\n  is aware of\n\n**Per camera**:\n* Set or show picture settings: brightness, contrast, saturation, hue, denoise,\n  sharpness, dynamic range\n* Set or show IR led state\n* Set or show on-display text\n* Set or show timestamp state\n* Set or show watermark/logo state\n* Set recording mode to fulltime, motion, or disabled\n* Set recording pre/post padding\n* Take and download pictures (snapshots)\n* Download camera footage between arbitrary start and end times\n\n**Per recording**:\n* Delete\n* Download\n* Snapshot (thumbnail) download\n\n## Installation\n\nEither grab it from PyPI\n\n```\npip install unifi-video\n```\n\nor download a release and manually place [unifi_video](unifi_video) in your project\ndirectory, or any path in `$PYTHONPATH`.\n\nYou shouldn't need any external libraries, unless you want to run the tests or\nbuild the docs (see [requirements_dev.txt](requirements_dev.txt)).\n*unifi-video-api* does use the [six](https://pypi.org/project/six/) library but\nwill fallback to using the included *six* should it fail to import *six* from\nsystem level packages.\n\nBoth python 2.7+ and python3 are supported.\n\n## Usage\n\nSee the [docs](https://unifi-video-api.readthedocs.io/) for an API reference.\n\n```python\nfrom unifi_video import UnifiVideoAPI\n\n# Default kwargs: addr = 'localhost', port = 7080, schema = http\nuva = UnifiVideoAPI(username='username', password='password', addr='10.3.2.1')\n\n# Use API key (can be set per user in Unifi NVR user settings)\nuva = UnifiVideoAPI(api_key='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', addr='10.3.2.1')\n\n# Skip version checking\nuva = UnifiVideoAPI(api_key='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', addr='10.3.2.1',\n  check_ufv_version=False)\n\n# Use HTTPS and skip cert verification\nuva = UnifiVideoAPI(api_key='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', addr='10.3.2.1',\n  port=7443, schema='https', verify_cert=False)\n\n# Save snapshot from camera whose id, name or onscreen display text\n# is \"Garage\"\nuva.get_camera('Garage').snapshot('some/path/snapshot.jpg')\n\n# Save snapshot from all cameras to ./snapshot_camera id_timestamp.jpg\nfor camera in uva.cameras:\n  camera.snapshot()\n\n# Get footage from camera \"Garage\" for specific timespan.\n# (The resulting file will be 0 bytes when no footage is found.)\nuva.get_camera('Garage').recording_between('2018-12-01 00:00:00',\n  '2018-12-01 00:05:00')\n\n# Specify filename\nuva.get_camera('Garage').recording_between('2018-12-01 00:00:00',\n  '2018-12-01 00:05:00', 'first_mins_of_dec.mp4')\n\n# Change onscreen display text\nuva.get_camera('Garage').set_onscreen_text('Home garage')\n\n# Set IR leds to auto mode\nuva.get_camera('Garage').ir_leds('auto')\n\n# Turn off IR leds (manual mode implied)\nuva.get_camera('Garage').ir_leds('off')\n\n# Turn on IR leds (manual mode implied)\nuva.get_camera('Garage').ir_leds('on')\n\n# Set camera to record at all times and to pre capture 5 secs\nuva.get_camera('Garage').set_recording_settings('fulltime',\n  pre_padding_secs=5)\n\n# Set camera to record motion events only\nuva.get_camera('Garage').set_recording_settings('motion')\n\n# Disable recording altogether\nuva.get_camera('Garage').set_recording_settings('disable')\n\n# List recordings\nfor rec in uva.recordings:\n  print(rec)\n\n# Download recording, write to local file recording01.mp4\nuva.recordings['xxxxxxxxxxxxxxxxxxxx'].download('recording01.mp4')\n```\n\n\n## Warning\nThis software has been tested against a limited set of API versions and hardware.\nWhile unlikely, should any of the POST payloads result in software or\nhardware failure, the maintainer of this package is not liable.\n\nProceed at your own risk.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yuppity/unifi-video-api", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "unifi-video", "package_url": "https://pypi.org/project/unifi-video/", "platform": "", "project_url": "https://pypi.org/project/unifi-video/", "project_urls": {"Homepage": "https://github.com/yuppity/unifi-video-api"}, "release_url": "https://pypi.org/project/unifi-video/0.1.7/", "requires_dist": null, "requires_python": ">=2.7", "summary": "Python API for UniFi Video", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>unifi-video-api</h1>\n<p><a href=\"https://travis-ci.org/yuppity/unifi-video-api\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b29b0bc276659f58fac988a890e54279466919de/68747470733a2f2f7472617669732d63692e6f72672f797570706974792f756e6966692d766964656f2d6170692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://unifi-video-api.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c56e3b105c886d7db9130e05c8f2b21444f6a7da/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f756e6966692d766964656f2d6170692f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Python API for interfacing with UniFi Video.</p>\n<p><strong>Supported UniFi Video versions</strong>: v3.9.12 to v3.10.11</p>\n<p><strong>Supported Ubiquiti camera models</strong>: UVC, UVC G3, UVC G3 Dome, UVC Dome, UVC Pro, UVC G3 Pro,\nUVC G3 Flex, UVC Micro, UVC G3 Micro, airCam, airCam Dome, and airCam Mini, UVC G4 Bullet, UVC G4 Pro.</p>\n<h2>Features</h2>\n<p><strong>For a single UniFi Video server</strong>:</p>\n<ul>\n<li>Support both username/password and API key auths</li>\n<li>Provide GET, POST, PUT, and DELETE methods</li>\n<li>Handle session tracking and login when necessary</li>\n<li>Provide iterable collections for cameras and recordings that the UniFi Video server\nis aware of</li>\n</ul>\n<p><strong>Per camera</strong>:</p>\n<ul>\n<li>Set or show picture settings: brightness, contrast, saturation, hue, denoise,\nsharpness, dynamic range</li>\n<li>Set or show IR led state</li>\n<li>Set or show on-display text</li>\n<li>Set or show timestamp state</li>\n<li>Set or show watermark/logo state</li>\n<li>Set recording mode to fulltime, motion, or disabled</li>\n<li>Set recording pre/post padding</li>\n<li>Take and download pictures (snapshots)</li>\n<li>Download camera footage between arbitrary start and end times</li>\n</ul>\n<p><strong>Per recording</strong>:</p>\n<ul>\n<li>Delete</li>\n<li>Download</li>\n<li>Snapshot (thumbnail) download</li>\n</ul>\n<h2>Installation</h2>\n<p>Either grab it from PyPI</p>\n<pre><code>pip install unifi-video\n</code></pre>\n<p>or download a release and manually place <a href=\"unifi_video\" rel=\"nofollow\">unifi_video</a> in your project\ndirectory, or any path in <code>$PYTHONPATH</code>.</p>\n<p>You shouldn't need any external libraries, unless you want to run the tests or\nbuild the docs (see <a href=\"requirements_dev.txt\" rel=\"nofollow\">requirements_dev.txt</a>).\n<em>unifi-video-api</em> does use the <a href=\"https://pypi.org/project/six/\" rel=\"nofollow\">six</a> library but\nwill fallback to using the included <em>six</em> should it fail to import <em>six</em> from\nsystem level packages.</p>\n<p>Both python 2.7+ and python3 are supported.</p>\n<h2>Usage</h2>\n<p>See the <a href=\"https://unifi-video-api.readthedocs.io/\" rel=\"nofollow\">docs</a> for an API reference.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">unifi_video</span> <span class=\"kn\">import</span> <span class=\"n\">UnifiVideoAPI</span>\n\n<span class=\"c1\"># Default kwargs: addr = 'localhost', port = 7080, schema = http</span>\n<span class=\"n\">uva</span> <span class=\"o\">=</span> <span class=\"n\">UnifiVideoAPI</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'password'</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"s1\">'10.3.2.1'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use API key (can be set per user in Unifi NVR user settings)</span>\n<span class=\"n\">uva</span> <span class=\"o\">=</span> <span class=\"n\">UnifiVideoAPI</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"s1\">'10.3.2.1'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Skip version checking</span>\n<span class=\"n\">uva</span> <span class=\"o\">=</span> <span class=\"n\">UnifiVideoAPI</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"s1\">'10.3.2.1'</span><span class=\"p\">,</span>\n  <span class=\"n\">check_ufv_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use HTTPS and skip cert verification</span>\n<span class=\"n\">uva</span> <span class=\"o\">=</span> <span class=\"n\">UnifiVideoAPI</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"o\">=</span><span class=\"s1\">'10.3.2.1'</span><span class=\"p\">,</span>\n  <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">7443</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s1\">'https'</span><span class=\"p\">,</span> <span class=\"n\">verify_cert</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save snapshot from camera whose id, name or onscreen display text</span>\n<span class=\"c1\"># is \"Garage\"</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"s1\">'some/path/snapshot.jpg'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save snapshot from all cameras to ./snapshot_camera id_timestamp.jpg</span>\n<span class=\"k\">for</span> <span class=\"n\">camera</span> <span class=\"ow\">in</span> <span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">cameras</span><span class=\"p\">:</span>\n  <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">snapshot</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get footage from camera \"Garage\" for specific timespan.</span>\n<span class=\"c1\"># (The resulting file will be 0 bytes when no footage is found.)</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">recording_between</span><span class=\"p\">(</span><span class=\"s1\">'2018-12-01 00:00:00'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'2018-12-01 00:05:00'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Specify filename</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">recording_between</span><span class=\"p\">(</span><span class=\"s1\">'2018-12-01 00:00:00'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'2018-12-01 00:05:00'</span><span class=\"p\">,</span> <span class=\"s1\">'first_mins_of_dec.mp4'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Change onscreen display text</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_onscreen_text</span><span class=\"p\">(</span><span class=\"s1\">'Home garage'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Set IR leds to auto mode</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ir_leds</span><span class=\"p\">(</span><span class=\"s1\">'auto'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Turn off IR leds (manual mode implied)</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ir_leds</span><span class=\"p\">(</span><span class=\"s1\">'off'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Turn on IR leds (manual mode implied)</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ir_leds</span><span class=\"p\">(</span><span class=\"s1\">'on'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Set camera to record at all times and to pre capture 5 secs</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_recording_settings</span><span class=\"p\">(</span><span class=\"s1\">'fulltime'</span><span class=\"p\">,</span>\n  <span class=\"n\">pre_padding_secs</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Set camera to record motion events only</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_recording_settings</span><span class=\"p\">(</span><span class=\"s1\">'motion'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Disable recording altogether</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">get_camera</span><span class=\"p\">(</span><span class=\"s1\">'Garage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_recording_settings</span><span class=\"p\">(</span><span class=\"s1\">'disable'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># List recordings</span>\n<span class=\"k\">for</span> <span class=\"n\">rec</span> <span class=\"ow\">in</span> <span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">recordings</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rec</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Download recording, write to local file recording01.mp4</span>\n<span class=\"n\">uva</span><span class=\"o\">.</span><span class=\"n\">recordings</span><span class=\"p\">[</span><span class=\"s1\">'xxxxxxxxxxxxxxxxxxxx'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'recording01.mp4'</span><span class=\"p\">)</span>\n</pre>\n<h2>Warning</h2>\n<p>This software has been tested against a limited set of API versions and hardware.\nWhile unlikely, should any of the POST payloads result in software or\nhardware failure, the maintainer of this package is not liable.</p>\n<p>Proceed at your own risk.</p>\n\n          </div>"}, "last_serial": 7019898, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6e84e21eb8f884daad8ba95edfabd420", "sha256": "d8595feddc3d2eacc5450524928796c4b2643368efa1c0c656bf5deec43004dc"}, "downloads": -1, "filename": "unifi-video-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6e84e21eb8f884daad8ba95edfabd420", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 20277, "upload_time": "2019-10-07T16:03:36", "upload_time_iso_8601": "2019-10-07T16:03:36.113215Z", "url": "https://files.pythonhosted.org/packages/79/80/7c71f1239c68f011e1af179a20082b1715500b2575759cbfbcc93fcce688/unifi-video-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "de1edc387819443ee8a50b23750af397", "sha256": "d425e97fe2bb9e0d8e39b40319d35581aa900679bb0e8f85c62132a3368bb7fb"}, "downloads": -1, "filename": "unifi-video-0.1.1.tar.gz", "has_sig": false, "md5_digest": "de1edc387819443ee8a50b23750af397", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 20294, "upload_time": "2019-10-07T17:05:09", "upload_time_iso_8601": "2019-10-07T17:05:09.078798Z", "url": "https://files.pythonhosted.org/packages/87/b9/80be74718a6dc498fa6c3e0e3396dcc96d5917e9fc8457ebb98788948824/unifi-video-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e7d5c88b289b0f55f365c706141ce4df", "sha256": "71b683d1c03de1999f84ea91963319b7e997c3f9927e5a05f8aa497073d6d1a8"}, "downloads": -1, "filename": "unifi-video-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e7d5c88b289b0f55f365c706141ce4df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21346, "upload_time": "2019-10-13T20:57:28", "upload_time_iso_8601": "2019-10-13T20:57:28.324787Z", "url": "https://files.pythonhosted.org/packages/5e/53/fb1988935fb1270c2617c87211628b8d649972c776f76c96a14f48eadaff/unifi-video-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e341307ba6b8f0f0b06dc156c80bd584", "sha256": "c63d8dbf52a49200b61ab5e476897dbc8233ee029f3d514634ac577600d8a8c0"}, "downloads": -1, "filename": "unifi-video-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e341307ba6b8f0f0b06dc156c80bd584", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21360, "upload_time": "2019-10-15T21:44:06", "upload_time_iso_8601": "2019-10-15T21:44:06.146778Z", "url": "https://files.pythonhosted.org/packages/04/63/3c8e040d0814cc1a6946a08d557a07e3c0972203f79b2d6fa34e421f632b/unifi-video-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f9e659efdfc86291e604cdb189c34e22", "sha256": "f3b5150e5b7ef2da6fb063975b3066b8cbb5e7938d84bbc87f1f749f98fab94c"}, "downloads": -1, "filename": "unifi-video-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f9e659efdfc86291e604cdb189c34e22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21455, "upload_time": "2019-10-20T20:01:32", "upload_time_iso_8601": "2019-10-20T20:01:32.853531Z", "url": "https://files.pythonhosted.org/packages/c6/34/ae1abaf060845c1283e99b02de51a260417715f5b09b4bae87d6fb5dd39c/unifi-video-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "12bfbbbdd4b6036189f01179249d3d3f", "sha256": "70348266f32bc2b461b1da10b0f26e487520cc52bb14f75b984dda0f57cb8c21"}, "downloads": -1, "filename": "unifi-video-0.1.5.tar.gz", "has_sig": false, "md5_digest": "12bfbbbdd4b6036189f01179249d3d3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21917, "upload_time": "2019-12-07T22:01:51", "upload_time_iso_8601": "2019-12-07T22:01:51.928056Z", "url": "https://files.pythonhosted.org/packages/f8/af/b28a6760601bb7150a422966b79343dd67b98212696c7280b0d64836a754/unifi-video-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "2b601831143dfc6ae17048c2bac325e6", "sha256": "33442b4ab588e003f3524e80c1cb36a14de6f15f99ec9264340c90b33d7d5891"}, "downloads": -1, "filename": "unifi-video-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2b601831143dfc6ae17048c2bac325e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21497, "upload_time": "2020-01-19T11:14:36", "upload_time_iso_8601": "2020-01-19T11:14:36.901785Z", "url": "https://files.pythonhosted.org/packages/c6/6d/cfcead041c5eb1f74056e2ea6fd2a3031eaef4ff84adcde71d586f37e5cc/unifi-video-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e1c1c06a88d39d58c0ef322a1d3f6639", "sha256": "4d58c8fba12e71bebbe48f24edb75d9e6899e7e4be0110fabd5262d06c5abd6d"}, "downloads": -1, "filename": "unifi-video-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e1c1c06a88d39d58c0ef322a1d3f6639", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21729, "upload_time": "2020-04-14T20:04:59", "upload_time_iso_8601": "2020-04-14T20:04:59.967824Z", "url": "https://files.pythonhosted.org/packages/37/ba/612805506f1c868301a9a5f8ba8efedca6a7d9beb2e5fd53edb0be3f335e/unifi-video-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1c1c06a88d39d58c0ef322a1d3f6639", "sha256": "4d58c8fba12e71bebbe48f24edb75d9e6899e7e4be0110fabd5262d06c5abd6d"}, "downloads": -1, "filename": "unifi-video-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e1c1c06a88d39d58c0ef322a1d3f6639", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 21729, "upload_time": "2020-04-14T20:04:59", "upload_time_iso_8601": "2020-04-14T20:04:59.967824Z", "url": "https://files.pythonhosted.org/packages/37/ba/612805506f1c868301a9a5f8ba8efedca6a7d9beb2e5fd53edb0be3f335e/unifi-video-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:33 2020"}