{"info": {"author": "Brad Balderson", "author_email": "brad.balderson@uqconnect.edu.au", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "This repository stores a basic implementation for creating a neighbour joining tree from a given distance or similarity matrix.\n\nGenerating a distance matrix (A good way to do this is to use sklearn.DistanceMetrics with real data):\n\n    from sklearn.neighbors import DistanceMetric\n\n    dist = DistanceMetric.get_metric('euclidean')\n    X = [[0, 1, 2],\n         [3, 4, 5],\n         [2, 3, 1],\n         [0, 2, 1]]\n    dist_mat = dist.pairwise(X)\n\nNow that we have our distance matrix, we can now use it to construct a neighbour joining tree, \ngiving some labels for the different samples:\n\n    import numpy\n    import TreeMethods.TreeBuild as TB\n\n    tree = TB.njTree(dist_mat, numpy.array(['A', 'B', 'C', 'D']))\n\nWe can then use ete3 to construct this into a tree object:\n\n    from ete3 import Tree\n\n    tree = Tree(tree)\n    print(tree)\n\n       /-B\n      |\n      |   /-D\n    --|--|\n      |   \\-A\n      |\n       \\-C\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BradBalderson/TreeMethods", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "TreeMethods", "package_url": "https://pypi.org/project/TreeMethods/", "platform": "", "project_url": "https://pypi.org/project/TreeMethods/", "project_urls": {"Homepage": "https://github.com/BradBalderson/TreeMethods"}, "release_url": "https://pypi.org/project/TreeMethods/1.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Creating a neighbour joining tree.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This repository stores a basic implementation for creating a neighbour joining tree from a given distance or similarity matrix.</p>\n<p>Generating a distance matrix (A good way to do this is to use sklearn.DistanceMetrics with real data):</p>\n<pre><code>from sklearn.neighbors import DistanceMetric\n\ndist = DistanceMetric.get_metric('euclidean')\nX = [[0, 1, 2],\n     [3, 4, 5],\n     [2, 3, 1],\n     [0, 2, 1]]\ndist_mat = dist.pairwise(X)\n</code></pre>\n<p>Now that we have our distance matrix, we can now use it to construct a neighbour joining tree,\ngiving some labels for the different samples:</p>\n<pre><code>import numpy\nimport TreeMethods.TreeBuild as TB\n\ntree = TB.njTree(dist_mat, numpy.array(['A', 'B', 'C', 'D']))\n</code></pre>\n<p>We can then use ete3 to construct this into a tree object:</p>\n<pre><code>from ete3 import Tree\n\ntree = Tree(tree)\nprint(tree)\n\n   /-B\n  |\n  |   /-D\n--|--|\n  |   \\-A\n  |\n   \\-C\n</code></pre>\n\n          </div>"}, "last_serial": 6073239, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "ed3741ca21a46580e1fd578035450eee", "sha256": "b317f4a3e78e02143b971fd2fad5ab8171e84fc57980773c4366e28497da90f4"}, "downloads": -1, "filename": "TreeMethods-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ed3741ca21a46580e1fd578035450eee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4574, "upload_time": "2019-11-04T05:45:29", "upload_time_iso_8601": "2019-11-04T05:45:29.849275Z", "url": "https://files.pythonhosted.org/packages/15/62/854233be901bdcfeb6098553025312e7671ef2577eb9e5ccee81b0245241/TreeMethods-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d79cb83ca124692fef6aeeadc4f9eb8", "sha256": "a890bee6de98d1f96425d59f5e17125f49504096262f16bc60586e81efb4db1f"}, "downloads": -1, "filename": "TreeMethods-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1d79cb83ca124692fef6aeeadc4f9eb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3458, "upload_time": "2019-11-04T05:45:32", "upload_time_iso_8601": "2019-11-04T05:45:32.108571Z", "url": "https://files.pythonhosted.org/packages/22/8f/ab8a71428b507449e9f492f75f02d07cade4fc7b909cc3e43c55b458804c/TreeMethods-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed3741ca21a46580e1fd578035450eee", "sha256": "b317f4a3e78e02143b971fd2fad5ab8171e84fc57980773c4366e28497da90f4"}, "downloads": -1, "filename": "TreeMethods-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ed3741ca21a46580e1fd578035450eee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4574, "upload_time": "2019-11-04T05:45:29", "upload_time_iso_8601": "2019-11-04T05:45:29.849275Z", "url": "https://files.pythonhosted.org/packages/15/62/854233be901bdcfeb6098553025312e7671ef2577eb9e5ccee81b0245241/TreeMethods-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d79cb83ca124692fef6aeeadc4f9eb8", "sha256": "a890bee6de98d1f96425d59f5e17125f49504096262f16bc60586e81efb4db1f"}, "downloads": -1, "filename": "TreeMethods-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1d79cb83ca124692fef6aeeadc4f9eb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3458, "upload_time": "2019-11-04T05:45:32", "upload_time_iso_8601": "2019-11-04T05:45:32.108571Z", "url": "https://files.pythonhosted.org/packages/22/8f/ab8a71428b507449e9f492f75f02d07cade4fc7b909cc3e43c55b458804c/TreeMethods-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:37 2020"}