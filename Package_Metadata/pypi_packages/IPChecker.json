{"info": {"author": "Boumediene Kaddour", "author_email": "snboumediene@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "##################################\r\n __Program__: IPChecker\r\n __version__: 1.2.0\r\n __Author__ : Boumediene Kaddour\r\n __Country__: Algeria\r\n##################################\r\n\r\nIPChecker is a tiny Python library that is used to check if an IP version address is Private, Public or Invalid,\r\nThe library returns Booleans and contains a couple of methods summurized as follows:\r\n\r\n  isValid(): This method returns True, if a valid IPv4's given, otherwise, it returns False.\r\n  isPrivate(): This little method returns True if the given IP is private, otherwise, False is returned.\r\n  isMCast(): This little method returns True, if a Valid IPv4 is given and it's among the multicast ip range, otherwise, it returns a False. \r\n  isPublic(): This little method returns True if the given IP is a Valid IPv4, not private and not multicast address, otherwise, False is returned.\r\n\r\nUsage:\r\n >>> from IPChecker import IPChecker\r\n >>> obj = IPChecker(\"172.16.122.254\")\r\n >>> obj.isValid()\r\n >>> True\r\n >>> obj.isPrivate()\r\n >>> True\r\n >>> obj.isMCast()\r\n >>> False\r\n >>> obj.isPublic()\r\n >>> False\r\n \r\n Here is a sample grabbed from the IPchecker source code given as an example of how you can checkout for a valid IPv4 address using regular expressions.\r\n\r\n in this example, the built-in python re module is used.\r\n \r\n >>> def isValid(self):\r\n >>> ____if findall( \"(?i)^(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$\" ,self.IP):\r\n >>> ________ return True\r\n >>> ____else:\r\n >>> ________ return False", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/IPchecker", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "IPChecker", "package_url": "https://pypi.org/project/IPChecker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/IPChecker/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/IPchecker"}, "release_url": "https://pypi.org/project/IPChecker/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Check if an IPv4 is Private, Public,Multicast or Invalid", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ##################################\n<br> __Program__: IPChecker\n<br> __version__: 1.2.0\n<br> __Author__ : Boumediene Kaddour\n<br> __Country__: Algeria\n<br>##################################\n<br>\n<br>IPChecker is a tiny Python library that is used to check if an IP version address is Private, Public or Invalid,\n<br>The library returns Booleans and contains a couple of methods summurized as follows:\n<br>\n<br>  isValid(): This method returns True, if a valid IPv4's given, otherwise, it returns False.\n<br>  isPrivate(): This little method returns True if the given IP is private, otherwise, False is returned.\n<br>  isMCast(): This little method returns True, if a Valid IPv4 is given and it's among the multicast ip range, otherwise, it returns a False. \n<br>  isPublic(): This little method returns True if the given IP is a Valid IPv4, not private and not multicast address, otherwise, False is returned.\n<br>\n<br>Usage:\n<br> &gt;&gt;&gt; from IPChecker import IPChecker\n<br> &gt;&gt;&gt; obj = IPChecker(\"172.16.122.254\")\n<br> &gt;&gt;&gt; obj.isValid()\n<br> &gt;&gt;&gt; True\n<br> &gt;&gt;&gt; obj.isPrivate()\n<br> &gt;&gt;&gt; True\n<br> &gt;&gt;&gt; obj.isMCast()\n<br> &gt;&gt;&gt; False\n<br> &gt;&gt;&gt; obj.isPublic()\n<br> &gt;&gt;&gt; False\n<br> \n<br> Here is a sample grabbed from the IPchecker source code given as an example of how you can checkout for a valid IPv4 address using regular expressions.\n<br>\n<br> in this example, the built-in python re module is used.\n<br> \n<br> &gt;&gt;&gt; def isValid(self):\n<br> &gt;&gt;&gt; ____if findall( \"(?i)^(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).(\\d|\\d\\d|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$\" ,self.IP):\n<br> &gt;&gt;&gt; ________ return True\n<br> &gt;&gt;&gt; ____else:\n<br> &gt;&gt;&gt; ________ return False\n          </div>"}, "last_serial": 1738253, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "cc25ed5df045bc13e0cc15411f8ef7eb", "sha256": "04685b986318485fc106b1e6f6d97b1032f3eb0de5c8065ad597f664532ca1b9"}, "downloads": -1, "filename": "ipchecker-1.0.tar.gz", "has_sig": false, "md5_digest": "cc25ed5df045bc13e0cc15411f8ef7eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1610, "upload_time": "2015-09-20T18:16:58", "upload_time_iso_8601": "2015-09-20T18:16:58.540525Z", "url": "https://files.pythonhosted.org/packages/f3/be/bbdca504d5b38fe5aff3da51728d71408404dba89642b078cc40b1e041f9/ipchecker-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "34580a7d1302d9a2188df646c1530022", "sha256": "4059817936225ee1a1fab38c792ad1cbf2a14a851f517d2ac5500dc1a4cd9520"}, "downloads": -1, "filename": "IPChecker-1.1.tar.gz", "has_sig": false, "md5_digest": "34580a7d1302d9a2188df646c1530022", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1614, "upload_time": "2015-09-20T18:17:14", "upload_time_iso_8601": "2015-09-20T18:17:14.064214Z", "url": "https://files.pythonhosted.org/packages/78/4b/ed6462a5c0b2ca8bc18297544307c536ea64934f8e0ceb3ab8e52f86301d/IPChecker-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "3de24932163b9cddb0ed7774096c40cd", "sha256": "8d15a56211a38aaae59739b4dc32fe59fa11be96129d6794dcbc808bbaa3b563"}, "downloads": -1, "filename": "IPChecker-1.2.tar.gz", "has_sig": false, "md5_digest": "3de24932163b9cddb0ed7774096c40cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1608, "upload_time": "2015-09-25T11:16:30", "upload_time_iso_8601": "2015-09-25T11:16:30.910197Z", "url": "https://files.pythonhosted.org/packages/53/2d/6db63e19f0181a3cc81344411fc3aba0281ed1df0d4352d228819bd1e621/IPChecker-1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "94fc433097625c4dcfe195d7e6f1d8e1", "sha256": "82c8c569d6b396ba33af4cd0a91aaf31841f2bb52351814c56d510a59d9d7f80"}, "downloads": -1, "filename": "IPChecker-1.2.0.tar.gz", "has_sig": false, "md5_digest": "94fc433097625c4dcfe195d7e6f1d8e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1650, "upload_time": "2015-09-25T11:32:59", "upload_time_iso_8601": "2015-09-25T11:32:59.761928Z", "url": "https://files.pythonhosted.org/packages/b0/3c/0327dabf12c612d3f07795eb374d856532bb25c027d4cdae1a40a5b6cb95/IPChecker-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "94fc433097625c4dcfe195d7e6f1d8e1", "sha256": "82c8c569d6b396ba33af4cd0a91aaf31841f2bb52351814c56d510a59d9d7f80"}, "downloads": -1, "filename": "IPChecker-1.2.0.tar.gz", "has_sig": false, "md5_digest": "94fc433097625c4dcfe195d7e6f1d8e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1650, "upload_time": "2015-09-25T11:32:59", "upload_time_iso_8601": "2015-09-25T11:32:59.761928Z", "url": "https://files.pythonhosted.org/packages/b0/3c/0327dabf12c612d3f07795eb374d856532bb25c027d4cdae1a40a5b6cb95/IPChecker-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:42 2020"}