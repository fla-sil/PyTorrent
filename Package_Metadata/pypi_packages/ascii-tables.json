{"info": {"author": "Thanos Giannooulos", "author_email": "thanosgn@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# ascii-tables\n\nCreate a pretty looking ascii table.\n\n## Usage (command line):\n```\npython ascii-tables.py [options] < input_file.txt\n```\n\nWhere `input_file.txt` contains your input separated by (any amount of) tabs or 4/8/.. spaces and new-line characters and the output table is printed on the terminal.\n\n## Usage (gui):\n```\npython gui.py\n```\n\n## Example:\n### Input:\n```\nCol 1\tCol 2\tCol 3\tCol 4\nVal1\tVal2\tVal3\tVal4\nVal11\tVal22\tVal33\tVal44\nVala\tValb\tValc\tVald\n```\n### Output (-h option):\n```\n+-------+-------+-------+-------+\n| Col 1 | Col 2 | Col 3 | Col 4 |\n+=======+=======+=======+=======+\n| Val1  | Val2  | Val3  | Val4  |\n+-------+-------+-------+-------+\n| Val11 | Val22 | Val33 | Val44 |\n+-------+-------+-------+-------+\n| Vala  | Valb  | Valc  | Vald  |\n+-------+-------+-------+-------+\n```\n\nThe input in the command line execution can have an arbitrary amount of tabs separating the values. For example either one of the following inputs will output the same result:\n### Inputs:\n```\ninput_size\talgorithmA\talgorithmB\talgorithmC\talgorithmD\n1\t206.4 sec.\t206.4 sec.\t0.02 sec.\t0.02 sec.\n4\t900 sec.\t431.1 sec.\t0.08 sec.\t0.062 sec.\n250\t-\t80 min.\t2.27 sec.\t1.305 sec.\n1000\t-\t-\t8.77 sec.\t4.086 sec.\n5000\t-\t-\t33.53 sec.\t16.80 sec.\n10000\t-\t-\t85.4 sec.\t47.18 sec.\n```\nor\n```\ninput_size\talgorithmA\talgorithmB\talgorithmC\talgorithmD\n1\t\t\t206.4 sec.\t206.4 sec.\t0.02 sec.\t0.02 sec.\n4\t\t\t900 sec.\t431.1 sec.\t0.08 sec.\t0.062 sec.\n250\t\t\t-\t\t\t80 min.\t\t2.27 sec.\t1.305 sec.\n1000\t\t-\t\t\t-\t\t\t8.77 sec.\t4.086 sec.\n5000\t\t-\t\t\t-\t\t\t33.53 sec.\t16.80 sec.\n10000\t\t-\t\t\t-\t\t\t85.4 sec.\t47.18 sec.\n```\n### Output (-h and -v options):\n```\n+------------+------------+------------+------------+------------+\n| input_size \u2016 algorithmA | algorithmB | algorithmC | algorithmD |\n+============+============+============+============+============+\n|     1      \u2016 206.4 sec. | 206.4 sec. | 0.02 sec.  | 0.02 sec.  |\n+------------+------------+------------+------------+------------+\n|     4      \u2016  900 sec.  | 431.1 sec. | 0.08 sec.  | 0.062 sec. |\n+------------+------------+------------+------------+------------+\n|    250     \u2016     -      |  80 min.   | 2.27 sec.  | 1.305 sec. |\n+------------+------------+------------+------------+------------+\n|    1000    \u2016     -      |     -      | 8.77 sec.  | 4.086 sec. |\n+------------+------------+------------+------------+------------+\n|    5000    \u2016     -      |     -      | 33.53 sec. | 16.80 sec. |\n+------------+------------+------------+------------+------------+\n|   10000    \u2016     -      |     -      | 85.4 sec.  | 47.18 sec. |\n+------------+------------+------------+------------+------------+\n\n```\n\n### Options:\n  1. [`-h` double horizontal line after first row. (Uses '=' character)]\n  2. [`-v` double vertical line after first column. (Uses '\u2016' unicode character)]\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thanosgn/ascii-tables", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ascii-tables", "package_url": "https://pypi.org/project/ascii-tables/", "platform": "", "project_url": "https://pypi.org/project/ascii-tables/", "project_urls": {"Homepage": "https://github.com/thanosgn/ascii-tables"}, "release_url": "https://pypi.org/project/ascii-tables/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Create pretty looking ascii tables", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # ascii-tables<br><br>Create a pretty looking ascii table.<br><br>## Usage (command line):<br>```<br>python ascii-tables.py [options] &lt; input_file.txt<br>```<br><br>Where `input_file.txt` contains your input separated by (any amount of) tabs or 4/8/.. spaces and new-line characters and the output table is printed on the terminal.<br><br>## Usage (gui):<br>```<br>python gui.py<br>```<br><br>## Example:<br>### Input:<br>```<br>Col 1\tCol 2\tCol 3\tCol 4<br>Val1\tVal2\tVal3\tVal4<br>Val11\tVal22\tVal33\tVal44<br>Vala\tValb\tValc\tVald<br>```<br>### Output (-h option):<br>```<br>+-------+-------+-------+-------+<br>| Col 1 | Col 2 | Col 3 | Col 4 |<br>+=======+=======+=======+=======+<br>| Val1  | Val2  | Val3  | Val4  |<br>+-------+-------+-------+-------+<br>| Val11 | Val22 | Val33 | Val44 |<br>+-------+-------+-------+-------+<br>| Vala  | Valb  | Valc  | Vald  |<br>+-------+-------+-------+-------+<br>```<br><br>The input in the command line execution can have an arbitrary amount of tabs separating the values. For example either one of the following inputs will output the same result:<br>### Inputs:<br>```<br>input_size\talgorithmA\talgorithmB\talgorithmC\talgorithmD<br>1\t206.4 sec.\t206.4 sec.\t0.02 sec.\t0.02 sec.<br>4\t900 sec.\t431.1 sec.\t0.08 sec.\t0.062 sec.<br>250\t-\t80 min.\t2.27 sec.\t1.305 sec.<br>1000\t-\t-\t8.77 sec.\t4.086 sec.<br>5000\t-\t-\t33.53 sec.\t16.80 sec.<br>10000\t-\t-\t85.4 sec.\t47.18 sec.<br>```<br>or<br>```<br>input_size\talgorithmA\talgorithmB\talgorithmC\talgorithmD<br>1\t\t\t206.4 sec.\t206.4 sec.\t0.02 sec.\t0.02 sec.<br>4\t\t\t900 sec.\t431.1 sec.\t0.08 sec.\t0.062 sec.<br>250\t\t\t-\t\t\t80 min.\t\t2.27 sec.\t1.305 sec.<br>1000\t\t-\t\t\t-\t\t\t8.77 sec.\t4.086 sec.<br>5000\t\t-\t\t\t-\t\t\t33.53 sec.\t16.80 sec.<br>10000\t\t-\t\t\t-\t\t\t85.4 sec.\t47.18 sec.<br>```<br>### Output (-h and -v options):<br>```<br>+------------+------------+------------+------------+------------+<br>| input_size \u2016 algorithmA | algorithmB | algorithmC | algorithmD |<br>+============+============+============+============+============+<br>|     1      \u2016 206.4 sec. | 206.4 sec. | 0.02 sec.  | 0.02 sec.  |<br>+------------+------------+------------+------------+------------+<br>|     4      \u2016  900 sec.  | 431.1 sec. | 0.08 sec.  | 0.062 sec. |<br>+------------+------------+------------+------------+------------+<br>|    250     \u2016     -      |  80 min.   | 2.27 sec.  | 1.305 sec. |<br>+------------+------------+------------+------------+------------+<br>|    1000    \u2016     -      |     -      | 8.77 sec.  | 4.086 sec. |<br>+------------+------------+------------+------------+------------+<br>|    5000    \u2016     -      |     -      | 33.53 sec. | 16.80 sec. |<br>+------------+------------+------------+------------+------------+<br>|   10000    \u2016     -      |     -      | 85.4 sec.  | 47.18 sec. |<br>+------------+------------+------------+------------+------------+<br><br>```<br><br>### Options:<br>  1. [`-h` double horizontal line after first row. (Uses '=' character)]<br>  2. [`-v` double vertical line after first column. (Uses '\u2016' unicode character)]<br><br><br>\n          </div>"}, "last_serial": 4461471, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "311f0107f375ee92398df4717d86a6e7", "sha256": "27401b978b317b3b128cab1987e21426f8b04ecb92012c9502fe46b0f69b154a"}, "downloads": -1, "filename": "ascii_tables-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "311f0107f375ee92398df4717d86a6e7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 2230, "upload_time": "2018-09-21T20:22:29", "upload_time_iso_8601": "2018-09-21T20:22:29.541222Z", "url": "https://files.pythonhosted.org/packages/70/77/fafd77f6200eae9247fab006251820cca3166266010a6a64ab2e2effe9ca/ascii_tables-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69ce292966fb6365b7c43a14d05f0eee", "sha256": "f9493456eabf9ae2fdefd89f51f52af4a0184d3d739fff739fc03c29a32519e2"}, "downloads": -1, "filename": "ascii_tables-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "69ce292966fb6365b7c43a14d05f0eee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3879, "upload_time": "2018-09-21T20:22:31", "upload_time_iso_8601": "2018-09-21T20:22:31.479418Z", "url": "https://files.pythonhosted.org/packages/0c/77/a252ce1d9e145b814dc409249def64d6a5c3ee2dc6fa18f804e23d9b32c0/ascii_tables-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f826f38e1dcb3456cdea428dd74236b0", "sha256": "d8d2c5ae2db761ed61a75aa00a380e22b3e28379fac8a781143dc936171af845"}, "downloads": -1, "filename": "ascii-tables-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f826f38e1dcb3456cdea428dd74236b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2123, "upload_time": "2018-09-21T20:22:33", "upload_time_iso_8601": "2018-09-21T20:22:33.346388Z", "url": "https://files.pythonhosted.org/packages/21/cf/f30df7863d1812191539f8ccdc5edac816917a2dd0863e0f08a975657259/ascii-tables-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6a0eb43fb64398873c742dbf0af74b51", "sha256": "06cf008dd18c723cb2694bffd52a7304ca8fe6e94c9075349abd82c8b21b15ff"}, "downloads": -1, "filename": "ascii_tables-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6a0eb43fb64398873c742dbf0af74b51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5297, "upload_time": "2018-11-07T13:36:45", "upload_time_iso_8601": "2018-11-07T13:36:45.503622Z", "url": "https://files.pythonhosted.org/packages/5d/cd/4298da29ec0dc3a464fc14a330ef701d231f5ff74cdcaffb58c759635f52/ascii_tables-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "575b85f9134fcee5117a32c13a7c3e4b", "sha256": "e5ad6f0e890f34b4c021888ee29df90059e91e75030be41cbf6f3ed246adf9b3"}, "downloads": -1, "filename": "ascii-tables-0.0.3.tar.gz", "has_sig": false, "md5_digest": "575b85f9134fcee5117a32c13a7c3e4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3144, "upload_time": "2018-11-07T13:36:47", "upload_time_iso_8601": "2018-11-07T13:36:47.261468Z", "url": "https://files.pythonhosted.org/packages/7b/d1/87dd434c0bd3028e4d975c7b0e8d3cff40d0589b77e36b3224d98fbc2386/ascii-tables-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a0eb43fb64398873c742dbf0af74b51", "sha256": "06cf008dd18c723cb2694bffd52a7304ca8fe6e94c9075349abd82c8b21b15ff"}, "downloads": -1, "filename": "ascii_tables-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6a0eb43fb64398873c742dbf0af74b51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5297, "upload_time": "2018-11-07T13:36:45", "upload_time_iso_8601": "2018-11-07T13:36:45.503622Z", "url": "https://files.pythonhosted.org/packages/5d/cd/4298da29ec0dc3a464fc14a330ef701d231f5ff74cdcaffb58c759635f52/ascii_tables-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "575b85f9134fcee5117a32c13a7c3e4b", "sha256": "e5ad6f0e890f34b4c021888ee29df90059e91e75030be41cbf6f3ed246adf9b3"}, "downloads": -1, "filename": "ascii-tables-0.0.3.tar.gz", "has_sig": false, "md5_digest": "575b85f9134fcee5117a32c13a7c3e4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3144, "upload_time": "2018-11-07T13:36:47", "upload_time_iso_8601": "2018-11-07T13:36:47.261468Z", "url": "https://files.pythonhosted.org/packages/7b/d1/87dd434c0bd3028e4d975c7b0e8d3cff40d0589b77e36b3224d98fbc2386/ascii-tables-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:02 2020"}