{"info": {"author": "plausibility", "author_email": "chris@gibsonsec.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2"], "description": "corrections\n===========\n\nAn extendable Python based Twitter bot which will reply to various keyworded tweets.\n\n*\"Isn't this against the ToS?\"*, I hear you ask. Well, sort of, but sort of not. Yes, it might be covered by the *spamming* or *unsolicited mentions* rules, but in my opinion, no more than some asshole going around correcting people manually, depending on your settings.\n\nExample usage\n-------------\nHere's my favourite use of the Corrections bot (and why I actually wrote this): the **a lot** correction bot:\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from corrections import Correct\n    from random import choice\n\n    class Alot(Correct):\n        auth = (OAUTH_TOKEN,\n                OAUTH_SECRET,\n                CONSUMER_KEY,\n                CONSUMER_SECRET)\n        phrases = [\"alot\"]\n        cooldown = (60 * 5, 60 * 3)\n\n        def reply(self, phrase, user):\n            return choice([\n                \"@{user}: a lot*\",\n                \"@{user}: Surely you mean 'a lot', right?\",\n                \"@{user}: I think you meant 'a lot'!\",\n                \"@{user}: Come on, use 'a lot', lazy..\",\n                \"@{user}: Alot is sad you can't use 'a lot' right..\",\n                \"@{user}: There should be a space in there somewhere.. 'a lot'*\",\n            ]).format(user=user)\n\n    if __name__ == \"__main__\":\n        correct = Alot()\n        correct()\n\nJust for testing\n----------------\nWant to make sure your bot is functional but don't want to start spamming tweets yet?\nEasy! Set `dry = True` in your Corrections class and Corrections won't actually update your status.\n\n.. code-block:: python\n\n    class Alot(Correct):\n        auth = (OAUTH_TOKEN,\n                OAUTH_SECRET,\n                CONSUMER_KEY,\n                CONSUMER_SECRET)\n        phrases = [...]\n        cooldown = (...)\n        dry = True\n\n        def reply(...):\n            # ...", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/plausibility/corrections", "keywords": "twitter bot corrections", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "corrections", "package_url": "https://pypi.org/project/corrections/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/corrections/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/plausibility/corrections"}, "release_url": "https://pypi.org/project/corrections/0.2.3/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An extendable Python based Twitter bot which will reply to various keyworded tweets.</p>\n<p><em>\u201cIsn\u2019t this against the ToS?\u201d</em>, I hear you ask. Well, sort of, but sort of not. Yes, it might be covered by the <em>spamming</em> or <em>unsolicited mentions</em> rules, but in my opinion, no more than some asshole going around correcting people manually, depending on your settings.</p>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>Here\u2019s my favourite use of the Corrections bot (and why I actually wrote this): the <strong>a lot</strong> correction bot:</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">corrections</span> <span class=\"kn\">import</span> <span class=\"n\">Correct</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">choice</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Alot</span><span class=\"p\">(</span><span class=\"n\">Correct</span><span class=\"p\">):</span>\n    <span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">OAUTH_TOKEN</span><span class=\"p\">,</span>\n            <span class=\"n\">OAUTH_SECRET</span><span class=\"p\">,</span>\n            <span class=\"n\">CONSUMER_KEY</span><span class=\"p\">,</span>\n            <span class=\"n\">CONSUMER_SECRET</span><span class=\"p\">)</span>\n    <span class=\"n\">phrases</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"alot\"</span><span class=\"p\">]</span>\n    <span class=\"n\">cooldown</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">reply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">phrase</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">choice</span><span class=\"p\">([</span>\n            <span class=\"s2\">\"@</span><span class=\"si\">{user}</span><span class=\"s2\">: a lot*\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"@</span><span class=\"si\">{user}</span><span class=\"s2\">: Surely you mean 'a lot', right?\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"@</span><span class=\"si\">{user}</span><span class=\"s2\">: I think you meant 'a lot'!\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"@</span><span class=\"si\">{user}</span><span class=\"s2\">: Come on, use 'a lot', lazy..\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"@</span><span class=\"si\">{user}</span><span class=\"s2\">: Alot is sad you can't use 'a lot' right..\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"@</span><span class=\"si\">{user}</span><span class=\"s2\">: There should be a space in there somewhere.. 'a lot'*\"</span><span class=\"p\">,</span>\n        <span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">correct</span> <span class=\"o\">=</span> <span class=\"n\">Alot</span><span class=\"p\">()</span>\n    <span class=\"n\">correct</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"just-for-testing\">\n<h2>Just for testing</h2>\n<p>Want to make sure your bot is functional but don\u2019t want to start spamming tweets yet?\nEasy! Set <cite>dry = True</cite> in your Corrections class and Corrections won\u2019t actually update your status.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Alot</span><span class=\"p\">(</span><span class=\"n\">Correct</span><span class=\"p\">):</span>\n    <span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">OAUTH_TOKEN</span><span class=\"p\">,</span>\n            <span class=\"n\">OAUTH_SECRET</span><span class=\"p\">,</span>\n            <span class=\"n\">CONSUMER_KEY</span><span class=\"p\">,</span>\n            <span class=\"n\">CONSUMER_SECRET</span><span class=\"p\">)</span>\n    <span class=\"n\">phrases</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n    <span class=\"n\">cooldown</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">dry</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">reply</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">):</span>\n        <span class=\"c1\"># ...</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 783607, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "35d3db3ecce3c811c1daca65e9761d68", "sha256": "0b2f9cbd92cc5e2bf1502f9c6d50ffceb960fddced0aee21b1b36495e4b313a8"}, "downloads": -1, "filename": "corrections-0.1.0.tar.gz", "has_sig": false, "md5_digest": "35d3db3ecce3c811c1daca65e9761d68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2085, "upload_time": "2013-06-04T08:27:56", "upload_time_iso_8601": "2013-06-04T08:27:56.211479Z", "url": "https://files.pythonhosted.org/packages/6e/61/608cf5424ac924e0b56749233311bd8a6e073acb12458e4a79313c36db60/corrections-0.1.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "bd4fd317731097317758931fdc14e98e", "sha256": "b474fe8909e243b3046eb116a6d5d1f23f8342524de1af00b14b754198ff0a98"}, "downloads": -1, "filename": "corrections-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bd4fd317731097317758931fdc14e98e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4252, "upload_time": "2013-06-28T19:28:33", "upload_time_iso_8601": "2013-06-28T19:28:33.872216Z", "url": "https://files.pythonhosted.org/packages/29/a7/b9f8f6d9bc22ad2f1f7a9a0cbfc0295a06a8b9ac8d4a67950639dba34aaf/corrections-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "bcc1e508b4fa09a8a619a587552e4543", "sha256": "a4b6efc71e4715a88fdd524d4a815326c4dab22b565d27898b3a22cd6fcfb7d2"}, "downloads": -1, "filename": "corrections-0.2.3.tar.gz", "has_sig": false, "md5_digest": "bcc1e508b4fa09a8a619a587552e4543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4536, "upload_time": "2013-07-01T09:57:03", "upload_time_iso_8601": "2013-07-01T09:57:03.895175Z", "url": "https://files.pythonhosted.org/packages/ed/b8/bf3ff314586b8fe924fbdbc62bfee64cddedae86954be501e7487d180bf4/corrections-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bcc1e508b4fa09a8a619a587552e4543", "sha256": "a4b6efc71e4715a88fdd524d4a815326c4dab22b565d27898b3a22cd6fcfb7d2"}, "downloads": -1, "filename": "corrections-0.2.3.tar.gz", "has_sig": false, "md5_digest": "bcc1e508b4fa09a8a619a587552e4543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4536, "upload_time": "2013-07-01T09:57:03", "upload_time_iso_8601": "2013-07-01T09:57:03.895175Z", "url": "https://files.pythonhosted.org/packages/ed/b8/bf3ff314586b8fe924fbdbc62bfee64cddedae86954be501e7487d180bf4/corrections-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:06 2020"}