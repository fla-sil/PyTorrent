{"info": {"author": "Max Franks", "author_email": "eliquious@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "Bops is a numpy-based analysis module focusing on the manipulation, grouping and \r\nfiltering of data from various sources. Bops also has map-reduce functionality. \r\nWhile there are some datasets which need distributed map-reduce jobs, the \r\nauthor has the point of view that most do not. Bops gives tremendous power in \r\ndata grouping without the sacrifice of speed or simplicity.\r\n\r\nBops is tightly integrated with numpy to produce a very fast analysis package. \r\nThe module has one main class for data manipulation, called a 'bop'. Bops was \r\ninitially named for 'boolean operations'. The module has been greatly expanded \r\nto include map-reduce and data grouping on top of the initial filtering \r\ncapability. \r\n\r\nBops expects a two-dimensional data structure for initialization along with the \r\nattributes of the data (ie. column names). After the data is contained in \r\na 'bop', it can be filtered ('select' function), grouped on \r\nmultiple columns ('groupby' function) and sorted ('orderby' function).\r\n\r\nThe 'select' function allows you to filter on multiple aspects of the data \r\nby manipulating numpy boolean arrays. The 'groupby' function can group data on \r\nsimilar attributes. However, unlike the 'GROUP BY' functions found in SQL, \r\nbops' 'groupby' function returns the data found in the group along with the \r\ngroup's unique identifiers. On top of these functions, bops also contains a \r\nsort function, called 'orderby', which allows the programmer to order the data \r\non multiple columns.\r\n\r\nThese functions provide enormous power in data analysis, primarily by grouping \r\ndata on multiple attributes then returning the results to be manipulated. This \r\nstrength is magnified by added map-reduce functionality. The map function \r\nallows a programmer to aggregate data based on custom logic. A simple example \r\nwould be grouping by gender and decade of age (30's, 40's, ...) for every \r\nrow in a dataset. A reduce function would then be ran on each group found by \r\nthe map function. Using the same example, one could use the built-in len or sum \r\nfunctions in python as the reduce function to generate histograms of gender \r\nand age groups.\r\n\r\n\r\nGiving the programmer capability and removing limitations is the goal for Bops \r\nto aid data analysis.\r\n\r\n**Changes v0.4.1 - 0.5**\r\n\r\n * Added aliases:\r\n\r\n  * **float**: `np.float_`\r\n  * **int**: `np.int_`\r\n  * **bool**: `np.bool_`\r\n  * **str**: `np.str_`\r\n  * **unicode**: `np.unicode_`\r\n  * **complex**: `np.complex_`\r\n\r\n * Changed the default *expand* option to True for the 'mapreduce' and 'mapreducebatch' functions. This is to comply with the groupby function, so that the *expand* options would match across the module.\r\n\r\n\r\n**Mailing List**\r\n\r\nA mailing list has been created to support the use of this module. You can join \r\nand follow the discussion on `Google groups <http://groups.google.com/group/python-bops>`_. Any errors, issues and enhancements can be discussed here.\r\n\r\nBops aims to be a top-notch data analysis module, but only with your help can this module actually be great. Please chime into the discussion. Your inputs are welcome as well as any suggested features, patches or fixes.\r\n\r\n\r\n**Google Code**\r\n\r\nThe module is now on Google Code: http://code.google.com/p/bops/\r\n\r\nIssues, bugs and suggested enhancments can be submitted there.", "description_content_type": null, "docs_url": "https://pythonhosted.org/bops/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://packages.python.org/bops", "keywords": "mapreduce data analysis map-reduce", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bops", "package_url": "https://pypi.org/project/bops/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bops/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://packages.python.org/bops"}, "release_url": "https://pypi.org/project/bops/0.5/", "requires_dist": null, "requires_python": null, "summary": "A non-distributed numpy-based analysis module focusing on the manipulation,                     grouping and filtering of data from various sources.                     Bops also has map-reduce functionality.", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Bops is a numpy-based analysis module focusing on the manipulation, grouping and\nfiltering of data from various sources. Bops also has map-reduce functionality.\nWhile there are some datasets which need distributed map-reduce jobs, the\nauthor has the point of view that most do not. Bops gives tremendous power in\ndata grouping without the sacrifice of speed or simplicity.</p>\n<p>Bops is tightly integrated with numpy to produce a very fast analysis package.\nThe module has one main class for data manipulation, called a \u2018bop\u2019. Bops was\ninitially named for \u2018boolean operations\u2019. The module has been greatly expanded\nto include map-reduce and data grouping on top of the initial filtering\ncapability.</p>\n<p>Bops expects a two-dimensional data structure for initialization along with the\nattributes of the data (ie. column names). After the data is contained in\na \u2018bop\u2019, it can be filtered (\u2018select\u2019 function), grouped on\nmultiple columns (\u2018groupby\u2019 function) and sorted (\u2018orderby\u2019 function).</p>\n<p>The \u2018select\u2019 function allows you to filter on multiple aspects of the data\nby manipulating numpy boolean arrays. The \u2018groupby\u2019 function can group data on\nsimilar attributes. However, unlike the \u2018GROUP BY\u2019 functions found in SQL,\nbops\u2019 \u2018groupby\u2019 function returns the data found in the group along with the\ngroup\u2019s unique identifiers. On top of these functions, bops also contains a\nsort function, called \u2018orderby\u2019, which allows the programmer to order the data\non multiple columns.</p>\n<p>These functions provide enormous power in data analysis, primarily by grouping\ndata on multiple attributes then returning the results to be manipulated. This\nstrength is magnified by added map-reduce functionality. The map function\nallows a programmer to aggregate data based on custom logic. A simple example\nwould be grouping by gender and decade of age (30\u2019s, 40\u2019s, \u2026) for every\nrow in a dataset. A reduce function would then be ran on each group found by\nthe map function. Using the same example, one could use the built-in len or sum\nfunctions in python as the reduce function to generate histograms of gender\nand age groups.</p>\n<p>Giving the programmer capability and removing limitations is the goal for Bops\nto aid data analysis.</p>\n<p><strong>Changes v0.4.1 - 0.5</strong></p>\n<blockquote>\n<ul>\n<li>Added aliases:</li>\n</ul>\n<blockquote>\n<ul>\n<li><strong>float</strong>: <cite>np.float_</cite></li>\n<li><strong>int</strong>: <cite>np.int_</cite></li>\n<li><strong>bool</strong>: <cite>np.bool_</cite></li>\n<li><strong>str</strong>: <cite>np.str_</cite></li>\n<li><strong>unicode</strong>: <cite>np.unicode_</cite></li>\n<li><strong>complex</strong>: <cite>np.complex_</cite></li>\n</ul>\n</blockquote>\n<ul>\n<li>Changed the default <em>expand</em> option to True for the \u2018mapreduce\u2019 and \u2018mapreducebatch\u2019 functions. This is to comply with the groupby function, so that the <em>expand</em> options would match across the module.</li>\n</ul>\n</blockquote>\n<p><strong>Mailing List</strong></p>\n<p>A mailing list has been created to support the use of this module. You can join\nand follow the discussion on <a href=\"http://groups.google.com/group/python-bops\" rel=\"nofollow\">Google groups</a>. Any errors, issues and enhancements can be discussed here.</p>\n<p>Bops aims to be a top-notch data analysis module, but only with your help can this module actually be great. Please chime into the discussion. Your inputs are welcome as well as any suggested features, patches or fixes.</p>\n<p><strong>Google Code</strong></p>\n<p>The module is now on Google Code: <a href=\"http://code.google.com/p/bops/\" rel=\"nofollow\">http://code.google.com/p/bops/</a></p>\n<p>Issues, bugs and suggested enhancments can be submitted there.</p>\n\n          </div>"}, "last_serial": 786981, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "be7e2b627efbb1dfde11a4a1dd2de12d", "sha256": "3a06841786c77b9946b7d9fce963e6d25b216a41039b6803f675fec5d6b41a45"}, "downloads": -1, "filename": "bops-0.5.zip", "has_sig": false, "md5_digest": "be7e2b627efbb1dfde11a4a1dd2de12d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26444, "upload_time": "2011-12-14T21:00:53", "upload_time_iso_8601": "2011-12-14T21:00:53.355241Z", "url": "https://files.pythonhosted.org/packages/9a/9a/f429eaf898120ca166d3ff69ad5e494615df452af2d8c7604eb6064be48e/bops-0.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be7e2b627efbb1dfde11a4a1dd2de12d", "sha256": "3a06841786c77b9946b7d9fce963e6d25b216a41039b6803f675fec5d6b41a45"}, "downloads": -1, "filename": "bops-0.5.zip", "has_sig": false, "md5_digest": "be7e2b627efbb1dfde11a4a1dd2de12d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26444, "upload_time": "2011-12-14T21:00:53", "upload_time_iso_8601": "2011-12-14T21:00:53.355241Z", "url": "https://files.pythonhosted.org/packages/9a/9a/f429eaf898120ca166d3ff69ad5e494615df452af2d8c7604eb6064be48e/bops-0.5.zip", "yanked": false}], "timestamp": "Thu May  7 22:36:41 2020"}