{"info": {"author": "Chris Maillefaud", "author_email": "chrismaillefaud@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Welcome to Stela\n\n[![PyPI](https://img.shields.io/pypi/v/stela)](https://pypi.org/project/stela/)\n[![Build](https://github.com/chrismaille/stela/workflows/tests/badge.svg)](https://github.com/chrismaille/stela/actions)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/stela)](https://www.python.org)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\"\nsrc=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n\n[Stela](https://en.wikipedia.org/wiki/Stele) were the \"configuration\nfiles\" of ancient times. This library aims to simplify your project\nconfigurations, from *json*, *yaml*, *ini* or *toml* files in a single\nPython dictionary, which values can be easily be override by environment\nvariables.\n\n### Install\n\n```shell\n$ pip install stela\n```\n\n### Example\n\nYou can use `.yaml`, `.ini`, `.json` and `.toml` files. Suppose a file\ncalled `development.ini` which contains:\n\n```ini\n[foo]\nbar = value\n```\n\nStela will convert data into a python dictionary:\n\n```python\n{\n    \"foo\": {\n        \"bar\": \"value\"\n    }\n}\n```\n\nAnd you can use the settings like this:\n\n```python\nfrom stela import settings\n\nmy_conf = settings[\"foo.bar\"]\n# my_conf = \"value\"\n```\n\nThis is possible because Stela uses under the hood the\n[Scalpl](https://github.com/ducdetronquito/scalpl) library.\n\n### How Stela find the configuration files?\n\nBy default, Stela will use the value from `ENVIRONMENT` environment\nvariable to find correspondent INI file. For example, if you set\n`ENVIRONMENT=development` Stela will look for `development.ini` file in\nproject root.\n\nYou can change this behaviour inside `pyproject.toml` file:\n\n```toml\n[tools.stela]\nenvironment_variable_name = \"ENVIRONMENT\"\nconfig_file_extension = \"INI\" # YAML, TOML, JSON\nconfig_file_prefix = \"\"  # You can add a prefix before name - ex.: env_development.ini\nconfig_file_suffix = \"\"  # You can add a suffix after name - ex.: development_v1.ini\ndefault_environment = \"development\" # use this if you do not want to define the ENVIRONMENT key\nconfig_file_path = \".\"  # relative path from project root for configuration files\n```\n\n### How Stela find the Environment Variables?\n\nWhen asked for a value, Stela will try to find a environment variable\nusing the full uppercase slug path. For example, if key is `foo.bar`,\nStela will search for a env called `FOO_BAR` before returning his dict\nvalue. Also, you can add a prefix/suffix in this calculated environment\nname (ex.: `MYPROJECT_FOO_BAR`). To do this, define them in\n`pyproject.toml`:\n\n```toml\n[tools.stela]\nenvironment_prefix = \"MYPROJECT_\"\nenvironment_suffix = \"\"\n```\n\nIn above case, Stela will look for the `MYPROJECT_FOO_BAR` env:\n\n```python\n# FOO_BAR = \"hello_world\" or\n# MYPROJECT_FOO_BAR = \"hello world\" if you define environment_prefix\nfrom stela import settings\n\nmy_conf = settings[\"foo.bar\"]\n# my_conf = \"hello world\"\n```\n\nAlso, you can define Stela to never get values from environment\nvariables, only from dictionary:\n\n```toml\n[tools.stela]\ndo_not_read_environment = true\n```\n\n### How Stela handle more complex cases?\n\nStela uses this lifecycle to handle the settings load:\n\n```text\nPre-Load (optional) -> Load or Default Load > Post-Load (optional)\n```\n\nIf you have more complex cases to retrieve your project settings (ex.:\nreading external services, load settings from database or parse from a\ndifferent file format or library), you can use Stela decorators for\n`pre_load`, `load` and `post_load` phases:\n\n* If you use the `pre_load` decorator, data parsed in this phase will be\n  passed to **Load** phase.\n* If you use the `load` decorator, it will be used instead the Stela's\n  `default_loader`. The data returned here will update the dictionary\n  received in previous phase\n* If you use the `post_load` decorator, data returned in this phase will\n  update the dictionary received in previous phase.\n\nOnly one function are allowed per phase.\n\n>  These loaders need to return a valid Python dictionary.\n\n##### Lifecycle example:\n\n```python\nfrom stela.decorators import pre_load, load, post_load\nfrom typing import Dict, Any\nfrom stela import StelaOptions\n\n@pre_load\ndef pre_load(options: StelaOptions) -> Dict[Any, Any]:\n    # data value is: {}\n    # Stela Options are available in options object.\n    return {\"foo\": \"bar\"}\n\n@load\ndef load(data: dict, options: StelaOptions) -> Dict[Any, Any]:\n    # data value is: {\"foo\": \"bar\"}\n    # Using load, default_loader will not be invoked\n    return {\"has_dogs\": True}\n\n@post_load\ndef post_load(data: dict, options: StelaOptions) -> Dict[Any, Any]:\n    # data value is: {\"foo\": \"bar\", \"has_dogs\": True}\n    return {\"number_of_dogs\": 1}\n\n# Final data is {\"foo\": \"bar\", \"has_dogs\": True, \"number_of_dogs\": 1}\n```\n\n##### Post-Load SSM Example:\n\n```python\n# stela_loader.py\nimport boto3\nfrom stela.decorators import post_load\nfrom stela import StelaOptions\nfrom typing import Dict, Any\n\n@post_load\ndef add_ssm_parameters(data: dict, options: StelaOptions) -> Dict[Any, Any]:\n    \"\"\"Load settings from SSM to current Stela data.\n    \n    This loader will be called after Stela default loader.\n    Data returned must be a Python Dictionary.\n    \n    :param data (dict): Data parsed from previous phases\n    :param options (obj): Stela Options from pyproject.toml\n    :return Dict[Any, Any]\n    \"\"\"\n    ssm = boto3.client('ssm')\n    environment = options.current_environment\n    parameters = ssm.get_parameters_by_path(\n        Name=f'/foo/bar/{environment}',\n        WithDecryption=True\n    )\n    return parameters\n```\n\n### When Stela read the data?\n\nStela are imported once, at module level. This is the python equivalent\nfor a Singleton object - project settings are load and immediately\navailable:\n\n```python\nfrom stela import settings\nfrom flask import Flask\n\napp = Flask(__name__)\napp.config.update(\n    SECRET_KEY=settings[\"my_app.secret\"] # will read from dict or MY_APP_SECRET value\n)\n\n@app.route(\"/\")\ndef hello():\n    return f\"Hello, Environment is {settings.stela_options.current_environment}\"\n```\n\nIf you need to reload settings, use the `stela.stela_reload` function:\n\n```python\nfrom stela import stela_reload\n\ndef test_different_environments(monkeypatch):\n    from stela import settings\n    assert settings.stela_options.current_environment == \"test\"\n    \n    monkeypatch.setenv(\"ENVIRONMENT\", \"production\")\n    settings = stela_reload()\n    assert settings.stela_options.current_environment == \"production\"\n    monkeypatch.delenv(\"ENVIRONMENT\")\n```\n\n### How Stela read the dictionary values?\n\nStela will respect the file format limitations. For example, INI files\nalways return values as string, TOML files returning datetime objects,\netc...\n\nFor environment variables, Stela will return value as string, by\ndefault. For example: `NUMBER_OF_CATS=3` will return a string.\n\nYou can set Stela to literal evaluate these values, as per\n[ast.literal_eval](https://docs.python.org/3.7/library/ast.html?highlight=literal_eval#ast.literal_eval)\nrules. To do this, add in `pyproject.toml`:\n\n```toml\n[tool.stela]\nevaluate_data = true\n```\n\n### All Stela Configuration Options:\n\nAll configuration files can be override using a environment variable,\nusing the `STELA_` prefix. For example, `default_environment` turns\n`STELA_DEFAULT_ENVIRONMENT`.\n\n```toml\n# All keys and default values available in pyproject.toml\n[tool.stela]\nenvironment_variable_name = \"ENVIRONMENT\"\nconfig_file_extension = \"INI\" # YAML, TOML, JSON\nconfig_file_prefix = \"\"  # You can add a prefix before name - ex.: env_development.ini\nconfig_file_suffix = \"\"  # You can add a suffix after name - ex.: development_v1.ini\nconfig_file_path = \".\"\nenvironment_prefix = \"\"  # ex.: settings[\"foo.bar\"'] looks for MY_PREFIX_FOO_BAR\nenvironment_suffix = \"\"  # ex.: settings[\"foo.bar\"'] looks for FOO_BAR_MY_SUFFIX\ndefault_environment = \"\"\nevaluate_data = false\ndo_not_read_environment = false\nshow_logs = true  # as per loguru settings.\n```\n\n### Not working?\n\nDont panic. Get a towel and, please, open a\n[issue](https://github.com/chrismaille/stela/issues).\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chrismaille/stela", "keywords": "settings,configuration,parser", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "stela", "package_url": "https://pypi.org/project/stela/", "platform": "", "project_url": "https://pypi.org/project/stela/", "project_urls": {"Homepage": "https://github.com/chrismaille/stela", "Repository": "https://github.com/chrismaille/stela"}, "release_url": "https://pypi.org/project/stela/1.0.11/", "requires_dist": ["loguru", "pyyaml", "scalpl", "toml", "dataclasses; python_version < \"3.7\""], "requires_python": ">=3.6,<4.0", "summary": "Find and read your project configuration files easily", "version": "1.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome to Stela</h1>\n<p><a href=\"https://pypi.org/project/stela/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f456a3078f271c417d24ced3bea8c1a5154e567d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7374656c61\"></a>\n<a href=\"https://github.com/chrismaille/stela/actions\" rel=\"nofollow\"><img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32dbfe8e9e13a52a86b41714bcaa26c492b7134c/68747470733a2f2f6769746875622e636f6d2f63687269736d61696c6c652f7374656c612f776f726b666c6f77732f74657374732f62616467652e737667\"></a>\n<a href=\"https://www.python.org\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98ad9018002ee826650315319edb0ef123601364/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7374656c61\"></a>\n<a href=\"https://conventionalcommits.org\" rel=\"nofollow\"><img alt=\"Conventional Commits\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c56cb99c6fb01fa6c680929fe04e2e8152f5315/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e76656e74696f6e616c253230436f6d6d6974732d312e302e302d79656c6c6f772e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Stele\" rel=\"nofollow\">Stela</a> were the \"configuration\nfiles\" of ancient times. This library aims to simplify your project\nconfigurations, from <em>json</em>, <em>yaml</em>, <em>ini</em> or <em>toml</em> files in a single\nPython dictionary, which values can be easily be override by environment\nvariables.</p>\n<h3>Install</h3>\n<pre>$ pip install stela\n</pre>\n<h3>Example</h3>\n<p>You can use <code>.yaml</code>, <code>.ini</code>, <code>.json</code> and <code>.toml</code> files. Suppose a file\ncalled <code>development.ini</code> which contains:</p>\n<pre><span class=\"k\">[foo]</span>\n<span class=\"na\">bar</span> <span class=\"o\">=</span> <span class=\"s\">value</span>\n</pre>\n<p>Stela will convert data into a python dictionary:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"bar\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>And you can use the settings like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"n\">my_conf</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"s2\">\"foo.bar\"</span><span class=\"p\">]</span>\n<span class=\"c1\"># my_conf = \"value\"</span>\n</pre>\n<p>This is possible because Stela uses under the hood the\n<a href=\"https://github.com/ducdetronquito/scalpl\" rel=\"nofollow\">Scalpl</a> library.</p>\n<h3>How Stela find the configuration files?</h3>\n<p>By default, Stela will use the value from <code>ENVIRONMENT</code> environment\nvariable to find correspondent INI file. For example, if you set\n<code>ENVIRONMENT=development</code> Stela will look for <code>development.ini</code> file in\nproject root.</p>\n<p>You can change this behaviour inside <code>pyproject.toml</code> file:</p>\n<pre><span class=\"k\">[tools.stela]</span>\n<span class=\"n\">environment_variable_name</span> <span class=\"o\">=</span> <span class=\"s\">\"ENVIRONMENT\"</span>\n<span class=\"n\">config_file_extension</span> <span class=\"o\">=</span> <span class=\"s\">\"INI\"</span> <span class=\"c1\"># YAML, TOML, JSON</span>\n<span class=\"n\">config_file_prefix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># You can add a prefix before name - ex.: env_development.ini</span>\n<span class=\"n\">config_file_suffix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># You can add a suffix after name - ex.: development_v1.ini</span>\n<span class=\"n\">default_environment</span> <span class=\"o\">=</span> <span class=\"s\">\"development\"</span> <span class=\"c1\"># use this if you do not want to define the ENVIRONMENT key</span>\n<span class=\"n\">config_file_path</span> <span class=\"o\">=</span> <span class=\"s\">\".\"</span>  <span class=\"c1\"># relative path from project root for configuration files</span>\n</pre>\n<h3>How Stela find the Environment Variables?</h3>\n<p>When asked for a value, Stela will try to find a environment variable\nusing the full uppercase slug path. For example, if key is <code>foo.bar</code>,\nStela will search for a env called <code>FOO_BAR</code> before returning his dict\nvalue. Also, you can add a prefix/suffix in this calculated environment\nname (ex.: <code>MYPROJECT_FOO_BAR</code>). To do this, define them in\n<code>pyproject.toml</code>:</p>\n<pre><span class=\"k\">[tools.stela]</span>\n<span class=\"n\">environment_prefix</span> <span class=\"o\">=</span> <span class=\"s\">\"MYPROJECT_\"</span>\n<span class=\"n\">environment_suffix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n</pre>\n<p>In above case, Stela will look for the <code>MYPROJECT_FOO_BAR</code> env:</p>\n<pre><span class=\"c1\"># FOO_BAR = \"hello_world\" or</span>\n<span class=\"c1\"># MYPROJECT_FOO_BAR = \"hello world\" if you define environment_prefix</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"n\">my_conf</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"s2\">\"foo.bar\"</span><span class=\"p\">]</span>\n<span class=\"c1\"># my_conf = \"hello world\"</span>\n</pre>\n<p>Also, you can define Stela to never get values from environment\nvariables, only from dictionary:</p>\n<pre><span class=\"k\">[tools.stela]</span>\n<span class=\"n\">do_not_read_environment</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</pre>\n<h3>How Stela handle more complex cases?</h3>\n<p>Stela uses this lifecycle to handle the settings load:</p>\n<pre>Pre-Load (optional) -&gt; Load or Default Load &gt; Post-Load (optional)\n</pre>\n<p>If you have more complex cases to retrieve your project settings (ex.:\nreading external services, load settings from database or parse from a\ndifferent file format or library), you can use Stela decorators for\n<code>pre_load</code>, <code>load</code> and <code>post_load</code> phases:</p>\n<ul>\n<li>If you use the <code>pre_load</code> decorator, data parsed in this phase will be\npassed to <strong>Load</strong> phase.</li>\n<li>If you use the <code>load</code> decorator, it will be used instead the Stela's\n<code>default_loader</code>. The data returned here will update the dictionary\nreceived in previous phase</li>\n<li>If you use the <code>post_load</code> decorator, data returned in this phase will\nupdate the dictionary received in previous phase.</li>\n</ul>\n<p>Only one function are allowed per phase.</p>\n<blockquote>\n<p>These loaders need to return a valid Python dictionary.</p>\n</blockquote>\n<h5>Lifecycle example:</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stela.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">pre_load</span><span class=\"p\">,</span> <span class=\"n\">load</span><span class=\"p\">,</span> <span class=\"n\">post_load</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">StelaOptions</span>\n\n<span class=\"nd\">@pre_load</span>\n<span class=\"k\">def</span> <span class=\"nf\">pre_load</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">StelaOptions</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># data value is: {}</span>\n    <span class=\"c1\"># Stela Options are available in options object.</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@load</span>\n<span class=\"k\">def</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">StelaOptions</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># data value is: {\"foo\": \"bar\"}</span>\n    <span class=\"c1\"># Using load, default_loader will not be invoked</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"has_dogs\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@post_load</span>\n<span class=\"k\">def</span> <span class=\"nf\">post_load</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">StelaOptions</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># data value is: {\"foo\": \"bar\", \"has_dogs\": True}</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"number_of_dogs\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Final data is {\"foo\": \"bar\", \"has_dogs\": True, \"number_of_dogs\": 1}</span>\n</pre>\n<h5>Post-Load SSM Example:</h5>\n<pre><span class=\"c1\"># stela_loader.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stela.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">post_load</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">StelaOptions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span>\n\n<span class=\"nd\">@post_load</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_ssm_parameters</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">StelaOptions</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n    <span class=\"sd\">\"\"\"Load settings from SSM to current Stela data.</span>\n<span class=\"sd\">    </span>\n<span class=\"sd\">    This loader will be called after Stela default loader.</span>\n<span class=\"sd\">    Data returned must be a Python Dictionary.</span>\n<span class=\"sd\">    </span>\n<span class=\"sd\">    :param data (dict): Data parsed from previous phases</span>\n<span class=\"sd\">    :param options (obj): Stela Options from pyproject.toml</span>\n<span class=\"sd\">    :return Dict[Any, Any]</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">ssm</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'ssm'</span><span class=\"p\">)</span>\n    <span class=\"n\">environment</span> <span class=\"o\">=</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">current_environment</span>\n    <span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"n\">ssm</span><span class=\"o\">.</span><span class=\"n\">get_parameters_by_path</span><span class=\"p\">(</span>\n        <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">'/foo/bar/</span><span class=\"si\">{</span><span class=\"n\">environment</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n        <span class=\"n\">WithDecryption</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">parameters</span>\n</pre>\n<h3>When Stela read the data?</h3>\n<p>Stela are imported once, at module level. This is the python equivalent\nfor a Singleton object - project settings are load and immediately\navailable:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n    <span class=\"n\">SECRET_KEY</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"s2\">\"my_app.secret\"</span><span class=\"p\">]</span> <span class=\"c1\"># will read from dict or MY_APP_SECRET value</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Hello, Environment is </span><span class=\"si\">{</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">stela_options</span><span class=\"o\">.</span><span class=\"n\">current_environment</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n</pre>\n<p>If you need to reload settings, use the <code>stela.stela_reload</code> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">stela_reload</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_different_environments</span><span class=\"p\">(</span><span class=\"n\">monkeypatch</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">stela</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n    <span class=\"k\">assert</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">stela_options</span><span class=\"o\">.</span><span class=\"n\">current_environment</span> <span class=\"o\">==</span> <span class=\"s2\">\"test\"</span>\n    \n    <span class=\"n\">monkeypatch</span><span class=\"o\">.</span><span class=\"n\">setenv</span><span class=\"p\">(</span><span class=\"s2\">\"ENVIRONMENT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"production\"</span><span class=\"p\">)</span>\n    <span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">stela_reload</span><span class=\"p\">()</span>\n    <span class=\"k\">assert</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">stela_options</span><span class=\"o\">.</span><span class=\"n\">current_environment</span> <span class=\"o\">==</span> <span class=\"s2\">\"production\"</span>\n    <span class=\"n\">monkeypatch</span><span class=\"o\">.</span><span class=\"n\">delenv</span><span class=\"p\">(</span><span class=\"s2\">\"ENVIRONMENT\"</span><span class=\"p\">)</span>\n</pre>\n<h3>How Stela read the dictionary values?</h3>\n<p>Stela will respect the file format limitations. For example, INI files\nalways return values as string, TOML files returning datetime objects,\netc...</p>\n<p>For environment variables, Stela will return value as string, by\ndefault. For example: <code>NUMBER_OF_CATS=3</code> will return a string.</p>\n<p>You can set Stela to literal evaluate these values, as per\n<a href=\"https://docs.python.org/3.7/library/ast.html?highlight=literal_eval#ast.literal_eval\" rel=\"nofollow\">ast.literal_eval</a>\nrules. To do this, add in <code>pyproject.toml</code>:</p>\n<pre><span class=\"k\">[tool.stela]</span>\n<span class=\"n\">evaluate_data</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</pre>\n<h3>All Stela Configuration Options:</h3>\n<p>All configuration files can be override using a environment variable,\nusing the <code>STELA_</code> prefix. For example, <code>default_environment</code> turns\n<code>STELA_DEFAULT_ENVIRONMENT</code>.</p>\n<pre><span class=\"c1\"># All keys and default values available in pyproject.toml</span>\n<span class=\"k\">[tool.stela]</span>\n<span class=\"n\">environment_variable_name</span> <span class=\"o\">=</span> <span class=\"s\">\"ENVIRONMENT\"</span>\n<span class=\"n\">config_file_extension</span> <span class=\"o\">=</span> <span class=\"s\">\"INI\"</span> <span class=\"c1\"># YAML, TOML, JSON</span>\n<span class=\"n\">config_file_prefix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># You can add a prefix before name - ex.: env_development.ini</span>\n<span class=\"n\">config_file_suffix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># You can add a suffix after name - ex.: development_v1.ini</span>\n<span class=\"n\">config_file_path</span> <span class=\"o\">=</span> <span class=\"s\">\".\"</span>\n<span class=\"n\">environment_prefix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># ex.: settings[\"foo.bar\"'] looks for MY_PREFIX_FOO_BAR</span>\n<span class=\"n\">environment_suffix</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># ex.: settings[\"foo.bar\"'] looks for FOO_BAR_MY_SUFFIX</span>\n<span class=\"n\">default_environment</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n<span class=\"n\">evaluate_data</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">do_not_read_environment</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">show_logs</span> <span class=\"o\">=</span> <span class=\"n\">true</span>  <span class=\"c1\"># as per loguru settings.</span>\n</pre>\n<h3>Not working?</h3>\n<p>Dont panic. Get a towel and, please, open a\n<a href=\"https://github.com/chrismaille/stela/issues\" rel=\"nofollow\">issue</a>.</p>\n\n          </div>"}, "last_serial": 7005175, "releases": {"1.0.0a0": [{"comment_text": "", "digests": {"md5": "ae55fce07552580c1d88377712687dec", "sha256": "29d0212122a58da31b36b74631232f1f4c90c67087aac3b227596be1e27d0530"}, "downloads": -1, "filename": "stela-1.0.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae55fce07552580c1d88377712687dec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 18943, "upload_time": "2020-03-25T22:59:44", "upload_time_iso_8601": "2020-03-25T22:59:44.883672Z", "url": "https://files.pythonhosted.org/packages/ce/75/aa6d7072ac32afdce0297f9c5472a2ee7749518a11f769553f6768ead671/stela-1.0.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb9d7a0cd138034d9864da5d6145bb57", "sha256": "6a567e96db79d0653762cd6482e604d076737bc4d3ffc27c139403363cb78d3f"}, "downloads": -1, "filename": "stela-1.0.0a0.tar.gz", "has_sig": false, "md5_digest": "eb9d7a0cd138034d9864da5d6145bb57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 17572, "upload_time": "2020-03-25T22:59:46", "upload_time_iso_8601": "2020-03-25T22:59:46.849197Z", "url": "https://files.pythonhosted.org/packages/d0/0a/217af73c7fbfe37166d51765188ebc6fb4258af0525dffc3c869cc626d87/stela-1.0.0a0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "829a6173fe87aacdbfbbfdc7d9f16c10", "sha256": "ad1738f651fb821061606e48f0d1c4926cae92851035681652e6779b8be9d5dc"}, "downloads": -1, "filename": "stela-1.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "829a6173fe87aacdbfbbfdc7d9f16c10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 18944, "upload_time": "2020-03-25T23:28:48", "upload_time_iso_8601": "2020-03-25T23:28:48.047970Z", "url": "https://files.pythonhosted.org/packages/04/ca/b1a273ef66f111d789182697121d4f84d583f5a5b41d54a034384ee7504c/stela-1.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f4d599dcdae5d7a8a5ca3bef8efa7e9", "sha256": "f42affdefe4b33a3567a152017a622d78f1486f085b4eef1e0a6c2a164a454f1"}, "downloads": -1, "filename": "stela-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "4f4d599dcdae5d7a8a5ca3bef8efa7e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 17564, "upload_time": "2020-03-25T23:28:49", "upload_time_iso_8601": "2020-03-25T23:28:49.057254Z", "url": "https://files.pythonhosted.org/packages/9e/d1/8afbf8162d1a490846e2db7b02a1f8df769d5edbdfefdab3b3fd35170e0b/stela-1.0.0a1.tar.gz", "yanked": false}], "1.0.0a10": [{"comment_text": "", "digests": {"md5": "9f66c39591a6d95d85ce1c4896c17933", "sha256": "810eafaca1525bd5ebca0c2fa94253e0a4b7393db822c948998ffe56b0046e0f"}, "downloads": -1, "filename": "stela-1.0.0a10-py3-none-any.whl", "has_sig": false, "md5_digest": "9f66c39591a6d95d85ce1c4896c17933", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21837, "upload_time": "2020-03-26T01:38:22", "upload_time_iso_8601": "2020-03-26T01:38:22.136294Z", "url": "https://files.pythonhosted.org/packages/90/ac/3f4b328dd1c083788a4324dbb2e90f1931c6f47d2402ca3c0576aaded9ab/stela-1.0.0a10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18d693034ccdad1be65ce01a922ea813", "sha256": "5400d543e433275a4c1ed33a8d9a1df6b757a7bfb7360b52852b56bd8a39b5a2"}, "downloads": -1, "filename": "stela-1.0.0a10.tar.gz", "has_sig": false, "md5_digest": "18d693034ccdad1be65ce01a922ea813", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23419, "upload_time": "2020-03-26T01:38:23", "upload_time_iso_8601": "2020-03-26T01:38:23.395099Z", "url": "https://files.pythonhosted.org/packages/fd/19/fade08338b784f5afba915edbbfe53e582ca481c8d04cb3559567719e0fe/stela-1.0.0a10.tar.gz", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "3256a0a543ca9c4051289714b1103b5c", "sha256": "34c4a19e27550ef26259b5c4f7fe4dbad7e8891f37d943b149965818e9dbf380"}, "downloads": -1, "filename": "stela-1.0.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "3256a0a543ca9c4051289714b1103b5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21829, "upload_time": "2020-03-26T00:03:57", "upload_time_iso_8601": "2020-03-26T00:03:57.547286Z", "url": "https://files.pythonhosted.org/packages/a4/1e/f22c65411f3c1fb5b55afec0db0388cfa68bfb94f0ef0aeae77c76ec8abd/stela-1.0.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f77202e20b6eef401a05f877e44d6a4", "sha256": "950b12e2cfecf239cf3e012d38207fbf94e2a4d60b868d5c45f37a774114047d"}, "downloads": -1, "filename": "stela-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "6f77202e20b6eef401a05f877e44d6a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23407, "upload_time": "2020-03-26T00:03:58", "upload_time_iso_8601": "2020-03-26T00:03:58.551406Z", "url": "https://files.pythonhosted.org/packages/03/bc/84ad020d59b6f4fac9473d8681f3093a0249b605bfc103c55ca428e0833c/stela-1.0.0a2.tar.gz", "yanked": false}], "1.0.0a3": [{"comment_text": "", "digests": {"md5": "96101b72fb0803e2e3909aa9131e21dd", "sha256": "1a74486c43ae14f2b68c2981c45a3b12fe263f232852cb8938e4400f8017d343"}, "downloads": -1, "filename": "stela-1.0.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "96101b72fb0803e2e3909aa9131e21dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21830, "upload_time": "2020-03-26T00:23:52", "upload_time_iso_8601": "2020-03-26T00:23:52.227617Z", "url": "https://files.pythonhosted.org/packages/bd/74/012e9494dce9515333f0d1f822b2803b7e4e07d0c1eae31a54095bad705f/stela-1.0.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c82f6fd4787a140df4b1a99ff7e0dd5", "sha256": "5c62f947576dc9122cd58bd51cd7176b5a1b9435d6fcbce69425bce69bbdb16b"}, "downloads": -1, "filename": "stela-1.0.0a3.tar.gz", "has_sig": false, "md5_digest": "6c82f6fd4787a140df4b1a99ff7e0dd5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23398, "upload_time": "2020-03-26T00:23:53", "upload_time_iso_8601": "2020-03-26T00:23:53.432906Z", "url": "https://files.pythonhosted.org/packages/17/d9/869f78d945f9c6a9e3d04a97119b8265c2556bee9de80802b1b4cd87a551/stela-1.0.0a3.tar.gz", "yanked": false}], "1.0.0a4": [{"comment_text": "", "digests": {"md5": "d906dd96f8edb43cd8223a1b74b1ba9b", "sha256": "55ac72a32c976c9e2033f32d60149609f5c1aba5eadcf0114820f57c9d1e7d0b"}, "downloads": -1, "filename": "stela-1.0.0a4-py3-none-any.whl", "has_sig": false, "md5_digest": "d906dd96f8edb43cd8223a1b74b1ba9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21830, "upload_time": "2020-03-26T00:40:30", "upload_time_iso_8601": "2020-03-26T00:40:30.857463Z", "url": "https://files.pythonhosted.org/packages/c7/23/2ff81404bad5f03425fca7a161340524f6912b9c3accc96fa3bdc67e8082/stela-1.0.0a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da842bdaa27daf069079df7aacb818be", "sha256": "6ac3aa8a0e0521f271a52793370d4987a7bd251d16ca4590952842cebc724387"}, "downloads": -1, "filename": "stela-1.0.0a4.tar.gz", "has_sig": false, "md5_digest": "da842bdaa27daf069079df7aacb818be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23410, "upload_time": "2020-03-26T00:40:32", "upload_time_iso_8601": "2020-03-26T00:40:32.045971Z", "url": "https://files.pythonhosted.org/packages/ce/72/84b3cb3844f5da54ece8740e483de01b962e54c32904b8b9befb9724a0e9/stela-1.0.0a4.tar.gz", "yanked": false}], "1.0.0a5": [{"comment_text": "", "digests": {"md5": "0238467404998c977243791836ef24fb", "sha256": "9554cea775f43638e21e326c43f2b216295da7da4310716b40945e475577a91c"}, "downloads": -1, "filename": "stela-1.0.0a5-py3-none-any.whl", "has_sig": false, "md5_digest": "0238467404998c977243791836ef24fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21831, "upload_time": "2020-03-26T01:04:34", "upload_time_iso_8601": "2020-03-26T01:04:34.032325Z", "url": "https://files.pythonhosted.org/packages/7f/1e/e12ed624a894285f21439e1ff72420514a1041517cf32dde5d6e8803ba1b/stela-1.0.0a5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecf309a3937107a22a7364ffc252b2db", "sha256": "778e081d06432a4af3ecac64697c04971f7ac3814afab7051a734554411392d9"}, "downloads": -1, "filename": "stela-1.0.0a5.tar.gz", "has_sig": false, "md5_digest": "ecf309a3937107a22a7364ffc252b2db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23414, "upload_time": "2020-03-26T01:04:35", "upload_time_iso_8601": "2020-03-26T01:04:35.282012Z", "url": "https://files.pythonhosted.org/packages/71/02/968bef63a755abdc41fd88b23a1246ea745feae7e3931d679633585be3e2/stela-1.0.0a5.tar.gz", "yanked": false}], "1.0.0a6": [{"comment_text": "", "digests": {"md5": "efbe21e3b28be9805356e9f465bab7d1", "sha256": "5cc00a1c0eb81f76c863fa6816a844e69289d3006a2a28d7e9e2aff5a2ba7a35"}, "downloads": -1, "filename": "stela-1.0.0a6-py3-none-any.whl", "has_sig": false, "md5_digest": "efbe21e3b28be9805356e9f465bab7d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21830, "upload_time": "2020-03-26T01:10:01", "upload_time_iso_8601": "2020-03-26T01:10:01.165890Z", "url": "https://files.pythonhosted.org/packages/6e/83/72537b7f0853ba25f1e8e70f8be30569e7aa0807f0f0d6e83a226e7d6254/stela-1.0.0a6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "888edca6b64012589cc5d6f0b7b905f7", "sha256": "9c66a92facf9bf60d20e60657d4b7ce4346c35e0ee6c32bf36b8a6a0648ccc87"}, "downloads": -1, "filename": "stela-1.0.0a6.tar.gz", "has_sig": false, "md5_digest": "888edca6b64012589cc5d6f0b7b905f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23406, "upload_time": "2020-03-26T01:10:02", "upload_time_iso_8601": "2020-03-26T01:10:02.363794Z", "url": "https://files.pythonhosted.org/packages/d2/cd/8249771407e0bfacf01dcf36ec60d3559504faef12e8e61b9ef4ff15d14f/stela-1.0.0a6.tar.gz", "yanked": false}], "1.0.0a7": [{"comment_text": "", "digests": {"md5": "e51ca522848bc74c3be9e8ce9727d7fa", "sha256": "b4bcff8eb96714681dd60265c6fa67894bc0cecf763924bb1900c6d1ee2acad1"}, "downloads": -1, "filename": "stela-1.0.0a7-py3-none-any.whl", "has_sig": false, "md5_digest": "e51ca522848bc74c3be9e8ce9727d7fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21830, "upload_time": "2020-03-26T01:13:30", "upload_time_iso_8601": "2020-03-26T01:13:30.712593Z", "url": "https://files.pythonhosted.org/packages/4a/fd/843a8aa8ad3bae779b7f1d9ce4490e146aabbbd00f9f73c248675f37e082/stela-1.0.0a7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f95dbeceb7fb28d57c321f1311946416", "sha256": "6b3c0dea27448efe14656891d77fd7809a0c90d56c30c9bfe6a6df6514f6000e"}, "downloads": -1, "filename": "stela-1.0.0a7.tar.gz", "has_sig": false, "md5_digest": "f95dbeceb7fb28d57c321f1311946416", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23411, "upload_time": "2020-03-26T01:13:31", "upload_time_iso_8601": "2020-03-26T01:13:31.644849Z", "url": "https://files.pythonhosted.org/packages/c8/11/462023ff58519b085db6ff43c9cbf0e1cf01c943c5a41d45a8adb344153f/stela-1.0.0a7.tar.gz", "yanked": false}], "1.0.0a8": [{"comment_text": "", "digests": {"md5": "5aea47e186969544538fc4c588f9b47e", "sha256": "08f47690898447346d6ad03c4d5b4dd957ef43b8c2071880053e43c62b9a8d17"}, "downloads": -1, "filename": "stela-1.0.0a8-py3-none-any.whl", "has_sig": false, "md5_digest": "5aea47e186969544538fc4c588f9b47e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21830, "upload_time": "2020-03-26T01:20:17", "upload_time_iso_8601": "2020-03-26T01:20:17.862155Z", "url": "https://files.pythonhosted.org/packages/c1/f9/cc12e0d1e46b602f7b49668e4d90c9fa15c6e4f765f2ccfe8e9f8ad9815a/stela-1.0.0a8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "834069f7ecc14b2e63ff365201229ef8", "sha256": "2310daf945d4616ff01037949cc1c8640b13d33cb490fa9fa88f750b521574d7"}, "downloads": -1, "filename": "stela-1.0.0a8.tar.gz", "has_sig": false, "md5_digest": "834069f7ecc14b2e63ff365201229ef8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23398, "upload_time": "2020-03-26T01:20:19", "upload_time_iso_8601": "2020-03-26T01:20:19.047120Z", "url": "https://files.pythonhosted.org/packages/14/a6/31e3845ee07c7696bba6193e17e4d5f1094a7c65d506550e9909a14d1926/stela-1.0.0a8.tar.gz", "yanked": false}], "1.0.0a9": [{"comment_text": "", "digests": {"md5": "1023020a5bd77aa2f514be3160e69332", "sha256": "3f0f9ba8db4e155e88c328565b03cdf50b11797c03518c66b358a597811470e1"}, "downloads": -1, "filename": "stela-1.0.0a9-py3-none-any.whl", "has_sig": false, "md5_digest": "1023020a5bd77aa2f514be3160e69332", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21830, "upload_time": "2020-03-26T01:28:48", "upload_time_iso_8601": "2020-03-26T01:28:48.361955Z", "url": "https://files.pythonhosted.org/packages/39/6c/af8af584f1a9498a2b9aee0e292780f27a47132d2befab6f7a9ec6dcf4f8/stela-1.0.0a9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7021e6e3091e2678077e460ac694b2e5", "sha256": "d02c82f38918f5ac35fa32f3d5d36f305434de4e6b44be06a4849439d5c4553b"}, "downloads": -1, "filename": "stela-1.0.0a9.tar.gz", "has_sig": false, "md5_digest": "7021e6e3091e2678077e460ac694b2e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23403, "upload_time": "2020-03-26T01:28:49", "upload_time_iso_8601": "2020-03-26T01:28:49.866777Z", "url": "https://files.pythonhosted.org/packages/8c/fa/bd908e8760fbddfc9e2f9294d9d68d5e4bd9b56aef9453a53b6a41bb9ba0/stela-1.0.0a9.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e07a05fe463b0c523c7adace753a6039", "sha256": "43a3cc1f90365ffcdcc1db4a35c8f741f8088168540fe5d3e99afd5bf8015eb5"}, "downloads": -1, "filename": "stela-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e07a05fe463b0c523c7adace753a6039", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21808, "upload_time": "2020-03-26T01:59:55", "upload_time_iso_8601": "2020-03-26T01:59:55.776308Z", "url": "https://files.pythonhosted.org/packages/8c/f9/1e84c6b976afa346f745728c7f5a43e4a5accc460c2d831a85e03695a4f2/stela-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e00b0dea9bcd04d3b959c3c9a920c941", "sha256": "e979640d16f0d6dac9264fc960035ec0d76c7174b70d216e05edb2ce24e9c19e"}, "downloads": -1, "filename": "stela-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e00b0dea9bcd04d3b959c3c9a920c941", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23403, "upload_time": "2020-03-26T01:59:57", "upload_time_iso_8601": "2020-03-26T01:59:57.048724Z", "url": "https://files.pythonhosted.org/packages/9d/90/58744d59247de1d6a64922a400670b1a7cd121c473af03f98f99ee4c8605/stela-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "f34628d7dce1b1e708cb9044acc3436e", "sha256": "b2dda59245efdcc45300da4bf3eb66d57965fcd44a565e66bfe5f9f20757dfbe"}, "downloads": -1, "filename": "stela-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f34628d7dce1b1e708cb9044acc3436e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22120, "upload_time": "2020-04-12T14:33:26", "upload_time_iso_8601": "2020-04-12T14:33:26.371571Z", "url": "https://files.pythonhosted.org/packages/dd/fc/1c252f92a3efc527b858a7b0d3060fb6faa4b7b854c75c17461761963c7e/stela-1.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb65d0b10176d954300abe589eab4d5f", "sha256": "dd049ecff9b00e358fdc886f15d08de2a559e860da9b512b3189e1e3676065a0"}, "downloads": -1, "filename": "stela-1.0.10.tar.gz", "has_sig": false, "md5_digest": "cb65d0b10176d954300abe589eab4d5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23703, "upload_time": "2020-04-12T14:33:27", "upload_time_iso_8601": "2020-04-12T14:33:27.334647Z", "url": "https://files.pythonhosted.org/packages/0f/29/dc90c2bf95f00978ae2cc2e3c4cd05974f79557c9251a8d0c0d3462239eb/stela-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "afb0087c445812edbca14ea64ccb2a52", "sha256": "42b07ec64dd8efabaa9685a30f396223b8742eaac1d5440b17cf7629f3f77ed2"}, "downloads": -1, "filename": "stela-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "afb0087c445812edbca14ea64ccb2a52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22126, "upload_time": "2020-04-12T15:59:56", "upload_time_iso_8601": "2020-04-12T15:59:56.895874Z", "url": "https://files.pythonhosted.org/packages/0d/97/c8312af0bc99a42cc14e17f7e693e003d01e4b99700845ef9a383181ebf7/stela-1.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b62eda4d70f0799af6d12936bdbe5f27", "sha256": "42dabca7ca96cd1c76afad6dd5099a4cbd2bd654c5d1d4dcb367952ff69a181f"}, "downloads": -1, "filename": "stela-1.0.11.tar.gz", "has_sig": false, "md5_digest": "b62eda4d70f0799af6d12936bdbe5f27", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23687, "upload_time": "2020-04-12T15:59:58", "upload_time_iso_8601": "2020-04-12T15:59:58.146307Z", "url": "https://files.pythonhosted.org/packages/c1/38/a82573c63d150b87c19e7783e3282738c5e37e8b9d98fe7a762792d1bfa7/stela-1.0.11.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f75a5fbd9e41697f3af2e5c82fe09c13", "sha256": "48d3f2d4e86a78db2e4d4ac247714f902609d57372f435557feb7e38db4f1ab9"}, "downloads": -1, "filename": "stela-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f75a5fbd9e41697f3af2e5c82fe09c13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21809, "upload_time": "2020-03-26T02:27:14", "upload_time_iso_8601": "2020-03-26T02:27:14.512513Z", "url": "https://files.pythonhosted.org/packages/dc/c1/1d2edf50625da937fbe7cde114fdb926ccf65619cbbd9cac3606c0705919/stela-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5d443a3eff431d393534eea870cf908", "sha256": "2069de2474d26e4ab0a33f5c8e161cc7cb6586b239504c6f7d830b29c6e9afce"}, "downloads": -1, "filename": "stela-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c5d443a3eff431d393534eea870cf908", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23384, "upload_time": "2020-03-26T02:27:15", "upload_time_iso_8601": "2020-03-26T02:27:15.786276Z", "url": "https://files.pythonhosted.org/packages/6a/a2/8d6e000a3469caaa65fce171a16316fe0be1c1ca6435b50b32ca351f7881/stela-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "de86c1e116a7a00fc9551c1772dc636e", "sha256": "8e115d5d052be3883d4d8bb2e8976798f495b09be145dfc1bcafe9553c252f50"}, "downloads": -1, "filename": "stela-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "de86c1e116a7a00fc9551c1772dc636e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 21902, "upload_time": "2020-03-26T13:31:27", "upload_time_iso_8601": "2020-03-26T13:31:27.198101Z", "url": "https://files.pythonhosted.org/packages/89/53/0eae82c93e5bf28e867b1e7562f21d0daebeaf2e6b9f8263b14672bb0591/stela-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b201e906074daad9d9f01e0e2adadea5", "sha256": "13535562979bf095cf6f5dd50fd9a7b9e3dc1a88c843e22fd1014ade436c0a3d"}, "downloads": -1, "filename": "stela-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b201e906074daad9d9f01e0e2adadea5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, !=2.7.*, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 23514, "upload_time": "2020-03-26T13:31:28", "upload_time_iso_8601": "2020-03-26T13:31:28.505023Z", "url": "https://files.pythonhosted.org/packages/f1/27/2f8ef2a8ec207e863c01bee4609078c6aff23d560935dc287d7c75675361/stela-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "8a96cecbfa30f2ed61c483ba2b73bc33", "sha256": "213baf1d1186c977085fb6143771dfd568edcfc22aadfc61d3f70241a1a5eefa"}, "downloads": -1, "filename": "stela-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8a96cecbfa30f2ed61c483ba2b73bc33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 21872, "upload_time": "2020-04-06T16:57:12", "upload_time_iso_8601": "2020-04-06T16:57:12.780284Z", "url": "https://files.pythonhosted.org/packages/cf/01/5e4020f60392d1b23f60c7eba3b32870631cc7f1415f8357def03975641a/stela-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bcba56f48fde154698636fa272b2a2c", "sha256": "d71f4ffe43b66775b92f6d2a1e206ea7861dcd10ca1361d3d18b7a730e4f014d"}, "downloads": -1, "filename": "stela-1.0.5.tar.gz", "has_sig": false, "md5_digest": "2bcba56f48fde154698636fa272b2a2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23488, "upload_time": "2020-04-06T16:57:14", "upload_time_iso_8601": "2020-04-06T16:57:14.070245Z", "url": "https://files.pythonhosted.org/packages/9f/c6/cfa4e02a4cefbecf8e1afe31979fdaa212df26d941554bec79a5a65c2447/stela-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "fd37460ebcb3c83fb3e53c6c84cbd96b", "sha256": "e32ee8b5d83974e98f81d6bc69cae4c9d5b94b4af6dbde0af9e24a8792894ad3"}, "downloads": -1, "filename": "stela-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "fd37460ebcb3c83fb3e53c6c84cbd96b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22605, "upload_time": "2020-04-06T19:16:53", "upload_time_iso_8601": "2020-04-06T19:16:53.774522Z", "url": "https://files.pythonhosted.org/packages/2a/58/92044ec2dae6bdb85e9253e095fe52fa72ab3feb5b2a33afce951792650f/stela-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "345377cd0fd56cfad07fb6bc6f218172", "sha256": "c46e289bd8b9d214e8acce4c13e9373e8bde0238caa8376836f1b7d56e5299de"}, "downloads": -1, "filename": "stela-1.0.6.tar.gz", "has_sig": false, "md5_digest": "345377cd0fd56cfad07fb6bc6f218172", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 24088, "upload_time": "2020-04-06T19:16:54", "upload_time_iso_8601": "2020-04-06T19:16:54.765380Z", "url": "https://files.pythonhosted.org/packages/92/19/06a132264adfecd11686880ef44b6d63cfe4667bcc0b7e2147a69502bd4e/stela-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "c9a189fa192e47a99aec3ec0588d1737", "sha256": "8440e8471e44b0c046c5b39621588e03cbc0e13186cd73ed4734b7a37cbd1b8e"}, "downloads": -1, "filename": "stela-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c9a189fa192e47a99aec3ec0588d1737", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22157, "upload_time": "2020-04-06T21:20:15", "upload_time_iso_8601": "2020-04-06T21:20:15.407107Z", "url": "https://files.pythonhosted.org/packages/09/7f/8b13638c77be9e396bad402d04d52a03d1d69b8f8962d477783085a9742e/stela-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d655baca07a5b270fc8120edd1d58be", "sha256": "527ad6f13ce6685c7e1b66ecfff321d8e47fd8adddd814763fdeab12f33b0e20"}, "downloads": -1, "filename": "stela-1.0.7.tar.gz", "has_sig": false, "md5_digest": "1d655baca07a5b270fc8120edd1d58be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23686, "upload_time": "2020-04-06T21:20:16", "upload_time_iso_8601": "2020-04-06T21:20:16.692423Z", "url": "https://files.pythonhosted.org/packages/34/fc/4aa98bb538cddef974fb65531e8b8f4099b1c81240a09e0c460ffe608cf1/stela-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "f140a90c86630d597a88d8323a1f1a33", "sha256": "10e9f707c135627ed0c4f7b97d229aab4b20c111a57e134cea6d33d02e2eb6e7"}, "downloads": -1, "filename": "stela-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "f140a90c86630d597a88d8323a1f1a33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22161, "upload_time": "2020-04-06T22:20:17", "upload_time_iso_8601": "2020-04-06T22:20:17.571245Z", "url": "https://files.pythonhosted.org/packages/7a/31/1bb981465e46034054384b053a3b216ef072462099d5aa0f458cd2a29a73/stela-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a54f160870019a416fa779816c5165d", "sha256": "8881fa8531235b8c0b179acf51c91843f7b87ab24f207b678f9de0ba090f5252"}, "downloads": -1, "filename": "stela-1.0.8.tar.gz", "has_sig": false, "md5_digest": "1a54f160870019a416fa779816c5165d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23711, "upload_time": "2020-04-06T22:20:18", "upload_time_iso_8601": "2020-04-06T22:20:18.930774Z", "url": "https://files.pythonhosted.org/packages/8e/1e/a40427bc4a18c972889bc993230a7585a59240ecda874625d87315fa7ab2/stela-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "8ff0bbff7f83d2a033d795b151dc5340", "sha256": "53c98230fe4fca0f91d54f07d1a460a254cb3fe1d71f502b9c462e56fffca753"}, "downloads": -1, "filename": "stela-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "8ff0bbff7f83d2a033d795b151dc5340", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22096, "upload_time": "2020-04-06T22:56:04", "upload_time_iso_8601": "2020-04-06T22:56:04.182272Z", "url": "https://files.pythonhosted.org/packages/34/b3/2b9603ec9130453eb6c445125bc9892aeed7d32fcc932e21e6457a89b2ea/stela-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44a7a420c238b4eed42ba625f06191bb", "sha256": "df388583508c29869855d77c829259854cbec32ac05ab23cd31f5f1c3d008d31"}, "downloads": -1, "filename": "stela-1.0.9.tar.gz", "has_sig": false, "md5_digest": "44a7a420c238b4eed42ba625f06191bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23655, "upload_time": "2020-04-06T22:56:05", "upload_time_iso_8601": "2020-04-06T22:56:05.429666Z", "url": "https://files.pythonhosted.org/packages/52/d1/10c8e413c4eaf96dfab0f31d7af392d6e6878ba871881f7f5cfbc459c8bc/stela-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afb0087c445812edbca14ea64ccb2a52", "sha256": "42b07ec64dd8efabaa9685a30f396223b8742eaac1d5440b17cf7629f3f77ed2"}, "downloads": -1, "filename": "stela-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "afb0087c445812edbca14ea64ccb2a52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22126, "upload_time": "2020-04-12T15:59:56", "upload_time_iso_8601": "2020-04-12T15:59:56.895874Z", "url": "https://files.pythonhosted.org/packages/0d/97/c8312af0bc99a42cc14e17f7e693e003d01e4b99700845ef9a383181ebf7/stela-1.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b62eda4d70f0799af6d12936bdbe5f27", "sha256": "42dabca7ca96cd1c76afad6dd5099a4cbd2bd654c5d1d4dcb367952ff69a181f"}, "downloads": -1, "filename": "stela-1.0.11.tar.gz", "has_sig": false, "md5_digest": "b62eda4d70f0799af6d12936bdbe5f27", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 23687, "upload_time": "2020-04-12T15:59:58", "upload_time_iso_8601": "2020-04-12T15:59:58.146307Z", "url": "https://files.pythonhosted.org/packages/c1/38/a82573c63d150b87c19e7783e3282738c5e37e8b9d98fe7a762792d1bfa7/stela-1.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:06 2020"}