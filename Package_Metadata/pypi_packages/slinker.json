{"info": {"author": "Young King", "author_email": "jek@discorporate.us", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Slinker\n=======\n\nSlinker provide a single one to one event, we call it a ``link``.\n\nA ``link`` can only have a single sender and a single reciver.\n\n\nThe source code is locate at `github <https://github.com/youngking/slinker>`_ .\n\n.. image:: https://travis-ci.org/youngking/slinker.png?branch=master\n   :alt: Build Status\n\n\nIntroduction\n------------------\n\nLink receiver can subscribe to specific link. A reciver function required\na sender argument, and a keyworld argument which is optional.\n\n  >>> from slinker import Namespace\n  >>> links = Namespace()\n  >>> started = links.link('round-started')\n  >>> def each(round):\n  ...     print \"Round %s!\" % round\n  ...\n  >>> started.connect(each)\n  >>> for round in range(1, 4):\n  ...     started.send(round)\n  ...\n  Round 1!\n  Round 2!\n  Round 3!\n\nHere provide a decorator ``receiver`` which can be used for connect. Because a\nlink can only have one reciever. If you want to connect to another receiver, \nyou must disconnect the formly receiver.\n\n  >>> started.disconnect(each)\n  >>> from slinker import receiver\n  >>> @receiver(started)\n      def test(sender, **kwargs):\n  ...     return sender\n  >>> func, result = started.send('hello')\n  >>> func == test\n  ... True\n  >>> result == 'hello'\n  ...  True\n\n\nMore examples\n----------------\n\nsee the ``tests`` directory.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.flyzen.com", "keywords": "signal event emit rpc", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "slinker", "package_url": "https://pypi.org/project/slinker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/slinker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.flyzen.com"}, "release_url": "https://pypi.org/project/slinker/0.1/", "requires_dist": null, "requires_python": null, "summary": "A signal one to one event", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Slinker provide a single one to one event, we call it a <tt>link</tt>.</p>\n<p>A <tt>link</tt> can only have a single sender and a single reciver.</p>\n<p>The source code is locate at <a href=\"https://github.com/youngking/slinker\" rel=\"nofollow\">github</a> .</p>\n<img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/750a1c0c8ebaf6afb7568e2b05a3cbcf1e0ba80d/68747470733a2f2f7472617669732d63692e6f72672f796f756e676b696e672f736c696e6b65722e706e673f6272616e63683d6d6173746572\">\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Link receiver can subscribe to specific link. A reciver function required\na sender argument, and a keyworld argument which is optional.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from slinker import Namespace\n&gt;&gt;&gt; links = Namespace()\n&gt;&gt;&gt; started = links.link('round-started')\n&gt;&gt;&gt; def each(round):\n...     print \"Round %s!\" % round\n...\n&gt;&gt;&gt; started.connect(each)\n&gt;&gt;&gt; for round in range(1, 4):\n...     started.send(round)\n...\nRound 1!\nRound 2!\nRound 3!\n</pre>\n</blockquote>\n<p>Here provide a decorator <tt>receiver</tt> which can be used for connect. Because a\nlink can only have one reciever. If you want to connect to another receiver,\nyou must disconnect the formly receiver.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; started.disconnect(each)\n&gt;&gt;&gt; from slinker import receiver\n&gt;&gt;&gt; @receiver(started)\n    def test(sender, **kwargs):\n...     return sender\n&gt;&gt;&gt; func, result = started.send('hello')\n&gt;&gt;&gt; func == test\n... True\n&gt;&gt;&gt; result == 'hello'\n...  True\n</pre>\n</blockquote>\n</div>\n<div id=\"more-examples\">\n<h2>More examples</h2>\n<p>see the <tt>tests</tt> directory.</p>\n</div>\n\n          </div>"}, "last_serial": 799706, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f1455eb187c431e69029ade8bae86060", "sha256": "3500ee34aa1a41ef6de19fe626e784ef0d9fc587cac2b6acf96989b3c3e52d9d"}, "downloads": -1, "filename": "slinker-0.1.tar.gz", "has_sig": false, "md5_digest": "f1455eb187c431e69029ade8bae86060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6703, "upload_time": "2013-03-29T06:32:16", "upload_time_iso_8601": "2013-03-29T06:32:16.195118Z", "url": "https://files.pythonhosted.org/packages/44/59/2291d0a130b960d8b98e5405b8bb7e118f55ff5d7a340824d01523e9f98a/slinker-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1455eb187c431e69029ade8bae86060", "sha256": "3500ee34aa1a41ef6de19fe626e784ef0d9fc587cac2b6acf96989b3c3e52d9d"}, "downloads": -1, "filename": "slinker-0.1.tar.gz", "has_sig": false, "md5_digest": "f1455eb187c431e69029ade8bae86060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6703, "upload_time": "2013-03-29T06:32:16", "upload_time_iso_8601": "2013-03-29T06:32:16.195118Z", "url": "https://files.pythonhosted.org/packages/44/59/2291d0a130b960d8b98e5405b8bb7e118f55ff5d7a340824d01523e9f98a/slinker-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:21 2020"}