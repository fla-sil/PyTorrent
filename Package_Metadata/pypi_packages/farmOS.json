{"info": {"author": "farmOS team", "author_email": "mike@mstenta.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# farmOS.py\n\n[![Licence](https://img.shields.io/badge/Licence-GPL%203.0-blue.svg)](https://opensource.org/licenses/GPL-3.0/)\n[![Release](https://img.shields.io/github/release/farmOS/farmOS.py.svg?style=flat)](https://github.com/farmOS/farmOS.py/releases)\n[![Last commit](https://img.shields.io/github/last-commit/farmOS/farmOS.py.svg?style=flat)](https://github.com/farmOS/farmOS.py/commits)\n[![Twitter](https://img.shields.io/twitter/follow/farmOSorg.svg?label=%40farmOSorg&style=flat)](https://twitter.com/farmOSorg)\n[![Chat](https://img.shields.io/matrix/farmOS:matrix.org.svg)](https://riot.im/app/#/room/#farmOS:matrix.org)\n\nfarmOS.py is a Python library for interacting with [farmOS](https://farmOS.org)\nover API.\n\nFor more information on farmOS, visit [farmOS.org](https://farmOS.org).\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Authentication](#authentication)\n    - [OAuth](#OAuth)\n     - [OAuth Password Credentials](#oauth-password-credentials-most-common)\n     - [OAuth Authorization Flow](#oauth-authorization-flow-advanced)\n     - [Saving OAuth Tokens](#saving-oauth-tokens)\n  - [Server Info](#server-info)   \n  - [Logs](#logs)\n    - [`.get()`](#get)\n    - [`.send()`](#send)\n    - [`.delete()`](#delete)\n  - [Assets](#assets)\n    - [`.get()`](#get-1)\n    - [`.send()`](#send-1)\n    - [`.delete()`](#delete-1)\n  - [Areas](#areas)\n    - [`.get()`](#get-2)\n    - [`.send()`](#send-2)\n    - [`.delete()`](#delete-2)\n  - [Taxonomy Terms](#taxonomy-terms)\n    - [`.get()`](#get-3)\n    - [`.send()`](#send-3)\n    - [`.delete()`](#delete-3)\n  - [Logging](#logging)\n\n\n## Installation\n\nTo install using pip:\n\n```bash\n$ pip install farmOS\n```\n\n## Usage\n\n### Authentication\n\n#### OAuth (Added in v0.1.6)\n\nSupport for OAuth was added to [farmOS.py] starting with v0.1.6. To authorize\nand authenticate via OAuth, just supply the required parameters when creating\na client. The library will know to use an OAuth Password Credentials or \nAuthorization Code flow.\n\n##### OAuth Password Credentials (most common)\n\n```python\nfrom farmOS import farmOS\n\nhostname = \"myfarm.farmos.net\"\nusername = \"username\"\npassword = \"password\"\n\nfarm_client = farmOS(\n    hostname=hostname,\n    username=username,\n    password=password,\n    client_id = \"farm\", # The default oauth client_id enabled on all farmOS servers.\n    # scope=\"farm_info\" # The default scope is \"user_access\". Only needed if testing different scope.\n)\n```\n\nRunning from a Python Console, the `password` can also be omitted and entered\nat runtime. This allows testing without saving a password in plaintext:\n\n```python\n>>> from farmOS import farmOS\n>>> farm_client = farmOS(hostname=hostname, username=username, client_id=\"farm\")\n>>> Warning: Password input may be echoed.\n>>> Enter password: >? MY_PASSWORD\n>>> farm_client.info()\n'name': 'server-name', 'url': 'http://localhost', 'api_version': '1.2', 'user': ....\n```\n\n##### OAuth Authorization Flow (advanced)\n\nIt's also possible to run the Authorization Code Flow from the Python console.\nThis is great way to test the Authorization process users will go through. The\nconsole will print a link to navigate to where you sign in to farmOS and \ncomplete the authorization process. You then copy the `link` from the page you\nare redirected to back into the console. This supplies the `farm_client` with\nan an authorization `code` that it uses to request an OAuth `token`. \n\n```python\n>>> farm_client = farmOS(hostname=hostname, client_id=\"farm\")\nPlease go here and authorize, http://localhost/oauth2/authorize?response_type=code&client_id=farmos_development&redirect_uri=http%3A%2F%2Flocalhost%2Fapi%2Fauthorized&scope=user_access&state=V9RCDd4yrSWZP8iGXt6qW51sYxsFZs&access_type=offline&prompt=select_account\nPaste the full redirect URL here:>? http://localhost/api/authorized?code=33429f3530e36f4bdf3c2adbbfcd5b7d73e89d5c&state=V9RCDd4yrSWZP8iGXt6qW51sYxsFZs\n>>> farm_client.info()\n'name': 'server-name', 'url': 'http://localhost', 'api_version': '1.2', 'user': ....\n```\n\n##### Saving OAuth Tokens\n\nfarmOS.py can save OAuth Tokens to a config file so that they can be used at a\nlater time. To do this, supply a `config_file` and `profile_name` to save the\nconnection info under.\n\n```python\nfrom farmOS import farmOS\n\nhostname = \"myfarm.farmos.net\"\nusername = \"username\"\npassword = \"password\"\n\nfarm_client = farmOS(\n    hostname=hostname,\n    username=username,\n    password=password,\n    client_id=\"farm\", # The default oauth client_id enabled on all farmOS servers.\n    config_file=\"farmos_config.cfg\",    \n    profile_name=\"My farmOS Server\"\n)\n```\n\nAfter initial connection, the config will be saved to `profile_name` in `config_file`.\n\nLater authentication can then simply be done by supplying just the `config_file` and\n`profile_name` when creating a farmOS client (as long as OAuth tokens have not expired):\n\n```python\nfrom farmOS import farmOS\n\nfarm_client = farmOS(\n    config_file=\"farmos_config.cfg\",    \n    profile_name=\"My farmOS Server\"\n)\n```\n\n#### Drupal Auth\n\nSimple one-time communication to the farmOS server can be completed via Drupal Auth:\n\n```python\nfrom farmOS import farmOS\n\nhostname = \"myfarm.farmos.net\"\nusername = \"username\"\npassword = \"password\"\n\nfarm_client = farmOS(\n    hostname=hostname,\n    username=username,\n    password=password,\n)\n```\n\n### Server Info\n\n```python\n\ninfo = farm_client.info()\n\n{\n    'name': 'farmos-test',\n    'url': 'http://localhost',\n    'api_version': '1.2',\n    'user': {\n        'uid': '4',\n        'name': 'paul',\n        'mail': 'paul.weidner+2@gmail.com'\n    },\n    'google_maps_api_key': 'AIzaSyCCHTbAGC_gHegwepMxBu_AKd_RmP54mDg',\n    'metrics': {\n        'equipment': {'label': 'Equipment', 'value': '7', 'link': 'farm/assets/equipment/list', 'weight': 0},\n        'areas': {'label': 'Areas', 'value': '20', 'link': 'farm/areas', 'weight': 100},\n        'field': {'label': 'Field area', 'value': '532 hectares', 'link': 'farm/areas', 'weight': 101}\n    },\n    'system_of_measurement': 'metric',\n}\n```\n\n### Logs\n\n\nA log is any type of event that occurs on the farm, from a planting to a harvest\nto just a general observation.\n\nMethods for getting, sending and deleting logs are namespaced on the `farm.log`\nproperty.\n\n#### `.get()`\n\n```python\n# Get all logs\nlogs = farm_client.log.get()['list']\n\n# Get harvest logs\nfilters = {\n    'type': 'farm_harvest'\n}\n\nharvests = farm_client.log.get(filters=filters)['list']\n\n# Get log number 37\nlog = farm_client.log.get(37)\n```\n\nThe four default log types are:\n\n- `farm_activity`\n- `farm_harvest`\n- `farm_input`\n- `farm_observation`\n\nOther log types may be provided by add-on modules in farmOS.\n\n#### `.send()`\n\nSend can be used to create a new log, or if the `id` property is included, to\nupdate an existing log:\n\n```python\n\n# Create observation log\nobservation_log = {\n  \"name\": \"My Great Planting\",\n  \"type\": \"farm_observation\",\n  \"done\": 0,\n  \"notes\": \"Some notes\"    \n}\nlog = farm_client.log.send(log)\n\n# Mark log 35 as done\ndone = {\n    'id': 45,\n    'done': 1\n}\nlog = farm_client.log.send(done)\n```\n\n#### `.delete()`\n\n```python\nfarm_client.log.delete(123)\n```\n\n### Assets\n\nAssets are any piece of property or durable good that belongs to the farm, such\nas a piece of equipment, a specific crop, or an animal.\n\nMethods for getting, sending and deleting assets are namespaced on the\n`farm.asset` property.\n\n#### `.get()`\n\n```python\n\n# Get all assets\nassets = farm_client.asset.get()['list']\n\n# Get all animal assets\nfilters = {\n  'type':'animal'\n}\nanimals = farm_client.asset.get(filters=filters)['list']\n\n# Get asset ID 45\nasset = farm_client.asset.get(45)\n```\n\nSome common asset types include:\n\n- `animal`\n- `equipment`\n- `planting`\n\nOther asset types may be provided by add-on modules in farmOS.\n\n#### `.send()`\n\nSend can be used to create a new asset, or if the `id` property is included, to update an existing asset:\n\n```python\n\nplanting_asset = {\n  \"name\": \"My Great Planting\",\n  \"type\": \"planting\",\n  \"crop\": [\n    {\"id\": 8} # Crop term id\n  ]\n}\n\nasset = farm_client.asset.send(planting_asset)\n```\n\n#### `.delete()`\n\n```python\nfarm_client.asset.delete(123)\n```\n\n### Areas\n\nAn area is any well defined location that has been mapped in farmOS, such as a field, greenhouse, building, etc.\n\nHere's an example of what an area looks like as a Python dict:\n\n```python\n{\n  'tid': '22',\n  'name': 'F1',\n  'description': '',\n  'area_type': 'greenhouse',\n  'geofield': [\n    {\n      'geom': 'POLYGON ((-75.53640916943549 42.54421203378203, -75.53607389330863 42.54421796218091, -75.53607121109961 42.54415472589722, -75.53640648722647 42.54414682135726, -75.53640916943549 42.54421203378203))',\n    }\n  ],\n  'vocabulary': {\n    'id': '2',\n    'resource': 'taxonomy_vocabulary'\n  },\n  'parent': [\n    {\n      'id': 11,\n      'resource': 'taxonomy_term'\n    }\n  ],\n  'weight': '0',\n}\n```\n\nMethods for getting, sending and deleting areas are namespaced on the `farm.area` property.\n\n#### `.get()`\n\n```python\n\n# Get all areas\nareas = farm_client.area.get()['list']\n\n# Get field areas\nfilters = {\n  'area_type':'field'\n}\nfields = farm_client.area.get(filters=filters)['list']\n\n# Get area with tid 37\narea = farm_client.area.get(37)\n```\n\n__NOTE:__ Areas use a `tid` property, unlike logs and assets which have an `id`. This stands for taxonomy ID. In the future this may be changed to make it more consistent with the other entities.\n\nSome common area types include:\n\n- `field`\n- `building`\n- `property`\n- `water`\n- `other`\n\nOther area types may be provided by add-on modules in farmOS.\n\n#### `.send()`\n\nSend can be used to create a new area, or if the `tid` property is included, to update an existing area:\n\n```python\n\n\n\n```\n\n#### `.delete()`\n\n```python\nfarm_client.area.delete(123)\n```\n\n### Taxonomy Terms\n\nfarmOS allows farmers to build vocabularies of terms for various categorization\npurposes. These are referred to as \"taxonomies\" in farmOS (and Drupal), although\n\"vocabulary\" is sometimes used interchangeably.\n\nSome things that are represented as taxonomy terms include quantity units,\ncrops/varieties, animal species/breeds, input materials, and log categories.\nSee \"Endpoints\" above for specific API endpoints URLs.\n\nA very basic taxonomy term JSON structure looks like this:\n\n```json\n{\n  \"tid\": \"3\",\n  \"name\": \"Cabbage\",\n  \"description\": \"\",\n  \"vocabulary\": {\n    \"id\": \"7\",\n    \"resource\": \"taxonomy_vocabulary\",\n  },\n  \"parent\": [\n    {\n      \"id\": \"10\",\n      \"resource\": \"taxonomy_term\",\n    },\n  ],\n  \"weight\": \"5\",\n}\n```\n\nThe `tid` is the unique ID of the term (database primary key). When creating a\nnew term, the only required fields are `name` and `vocabulary`. The vocabulary\nis an ID that corresponds to the specific vocabulary the term will be a part of\n(eg: quantity units, crops/varieties, log categories, etc). The fields `parent`\nand `weight` control term hierarchy and ordering (a heavier `weight` will sort\nit lower in the list).\n\n#### `.get()`\n\n```python\n\n# Get all terms\nterms = farm_client.term.get()['list']\n\n# Get all terms from farm_crops vocabulary\ncrops = farm_client.term.get('farm_crops')['list']\n\n# Get term ID 67\nterm = farm_client.term.get(67)\n```\n\n#### `.send()`\n\nSend can be used to create a new taxonomy term, or if the `tid` property is included in the term object, to update an existing area:\n\n```python\n\n```\n\n#### `.delete()`\n\n```python\nfarm_client.term.delete(56)\n```\n\n### Logging\n\nYou can configure how `farmOS` logs are displayed with the following:\n```python\nimport logging\n\n# Required to init a config on the ROOT logger, that all other inherit from\nlogging.basicConfig()\n\n # Configure all loggers under farmOS (farmOS.client, famrOS.session) to desired level\nlogging.getLogger(\"farmOS\").setLevel(logging.DEBUG)\n\n # Hide debug logging from the farmOS.session module\nlogging.getLogger(\"farmOS.session\").setLevel(logging.WARNING)\n```\nMore info on logging in Python [here](https://docs.python.org/3/howto/logging.html#logging-basic-tutorial).\n\n## TESTING\nFunctional tests require a live instance of farmOS to communicate with.\nConfigure credentials for the farmOS instance to test against by setting the following environment variables: \n\nFor farmOS Drupal Authentication:\n`FARMOS_HOSTNAME`, `FARMOS_RESTWS_USERNAME`, and `FARMOS_RESTWS_PASSWORD`\n\nFor farmOS OAuth Authentication (Password Flow):\n`FARMOS_HOSTNAME`, `FARMOS_OAUTH_USERNAME`, `FARMOS_OAUTH_PASSWORD`, `FARMOS_OAUTH_CLIENT_ID`, `FARMOS_OAUTH_CLIENT_SECRET`\n\nAutomated tests are run with pytest\n\n    python setup.py test\n\n## MAINTAINERS\n\n * Paul Weidner (paul121) - https://github.com/paul121\n * Michael Stenta (m.stenta) - https://github.com/mstenta\n\nThis project has been sponsored by:\n\n * [Farmier](https://farmier.com)\n * [Pennsylvania Association for Sustainable Agriculture](https://pasafarming.org)\n * [Our Sci](http://our-sci.net)\n * [Bionutrient Food Association](https://bionutrient.org)\n * [Foundation for Food and Agriculture Research](https://foundationfar.org/)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/farmOS/farmOS.py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "farmOS", "package_url": "https://pypi.org/project/farmOS/", "platform": "", "project_url": "https://pypi.org/project/farmOS/", "project_urls": {"Homepage": "https://github.com/farmOS/farmOS.py"}, "release_url": "https://pypi.org/project/farmOS/0.1.6/", "requires_dist": null, "requires_python": ">=3", "summary": "A Python library for interacting with farmOS over API.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>farmOS.py</h1>\n<p><a href=\"https://opensource.org/licenses/GPL-3.0/\" rel=\"nofollow\"><img alt=\"Licence\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cce3c64c02a36c8728c5ca35abf2e593b5bd9419/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e63652d47504c253230332e302d626c75652e737667\"></a>\n<a href=\"https://github.com/farmOS/farmOS.py/releases\" rel=\"nofollow\"><img alt=\"Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6f6364d0164172476751f43d73a62b410f7d0e4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6661726d4f532f6661726d4f532e70792e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://github.com/farmOS/farmOS.py/commits\" rel=\"nofollow\"><img alt=\"Last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7bff51c046f8bc8fae2b67283d0d0fb122b9265/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6661726d4f532f6661726d4f532e70792e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://twitter.com/farmOSorg\" rel=\"nofollow\"><img alt=\"Twitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98d17d39f59f0ed7ea7a3d7640a0c9fb51673d5a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6661726d4f536f72672e7376673f6c6162656c3d2534306661726d4f536f7267267374796c653d666c6174\"></a>\n<a href=\"https://riot.im/app/#/room/#farmOS:matrix.org\" rel=\"nofollow\"><img alt=\"Chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d39e7af5fc921cc25a45eb1c71ea0ae1136d4f3/68747470733a2f2f696d672e736869656c64732e696f2f6d61747269782f6661726d4f533a6d61747269782e6f72672e737667\"></a></p>\n<p>farmOS.py is a Python library for interacting with <a href=\"https://farmOS.org\" rel=\"nofollow\">farmOS</a>\nover API.</p>\n<p>For more information on farmOS, visit <a href=\"https://farmOS.org\" rel=\"nofollow\">farmOS.org</a>.</p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#authentication\" rel=\"nofollow\">Authentication</a>\n<ul>\n<li><a href=\"#OAuth\" rel=\"nofollow\">OAuth</a></li>\n<li><a href=\"#oauth-password-credentials-most-common\" rel=\"nofollow\">OAuth Password Credentials</a></li>\n<li><a href=\"#oauth-authorization-flow-advanced\" rel=\"nofollow\">OAuth Authorization Flow</a></li>\n<li><a href=\"#saving-oauth-tokens\" rel=\"nofollow\">Saving OAuth Tokens</a></li>\n</ul>\n</li>\n<li><a href=\"#server-info\" rel=\"nofollow\">Server Info</a></li>\n<li><a href=\"#logs\" rel=\"nofollow\">Logs</a>\n<ul>\n<li><a href=\"#get\" rel=\"nofollow\"><code>.get()</code></a></li>\n<li><a href=\"#send\" rel=\"nofollow\"><code>.send()</code></a></li>\n<li><a href=\"#delete\" rel=\"nofollow\"><code>.delete()</code></a></li>\n</ul>\n</li>\n<li><a href=\"#assets\" rel=\"nofollow\">Assets</a>\n<ul>\n<li><a href=\"#get-1\" rel=\"nofollow\"><code>.get()</code></a></li>\n<li><a href=\"#send-1\" rel=\"nofollow\"><code>.send()</code></a></li>\n<li><a href=\"#delete-1\" rel=\"nofollow\"><code>.delete()</code></a></li>\n</ul>\n</li>\n<li><a href=\"#areas\" rel=\"nofollow\">Areas</a>\n<ul>\n<li><a href=\"#get-2\" rel=\"nofollow\"><code>.get()</code></a></li>\n<li><a href=\"#send-2\" rel=\"nofollow\"><code>.send()</code></a></li>\n<li><a href=\"#delete-2\" rel=\"nofollow\"><code>.delete()</code></a></li>\n</ul>\n</li>\n<li><a href=\"#taxonomy-terms\" rel=\"nofollow\">Taxonomy Terms</a>\n<ul>\n<li><a href=\"#get-3\" rel=\"nofollow\"><code>.get()</code></a></li>\n<li><a href=\"#send-3\" rel=\"nofollow\"><code>.send()</code></a></li>\n<li><a href=\"#delete-3\" rel=\"nofollow\"><code>.delete()</code></a></li>\n</ul>\n</li>\n<li><a href=\"#logging\" rel=\"nofollow\">Logging</a></li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>To install using pip:</p>\n<pre>$ pip install farmOS\n</pre>\n<h2>Usage</h2>\n<h3>Authentication</h3>\n<h4>OAuth (Added in v0.1.6)</h4>\n<p>Support for OAuth was added to [farmOS.py] starting with v0.1.6. To authorize\nand authenticate via OAuth, just supply the required parameters when creating\na client. The library will know to use an OAuth Password Credentials or\nAuthorization Code flow.</p>\n<h5>OAuth Password Credentials (most common)</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">farmOS</span> <span class=\"kn\">import</span> <span class=\"n\">farmOS</span>\n\n<span class=\"n\">hostname</span> <span class=\"o\">=</span> <span class=\"s2\">\"myfarm.farmos.net\"</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"username\"</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s2\">\"password\"</span>\n\n<span class=\"n\">farm_client</span> <span class=\"o\">=</span> <span class=\"n\">farmOS</span><span class=\"p\">(</span>\n    <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"n\">hostname</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">password</span><span class=\"p\">,</span>\n    <span class=\"n\">client_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"farm\"</span><span class=\"p\">,</span> <span class=\"c1\"># The default oauth client_id enabled on all farmOS servers.</span>\n    <span class=\"c1\"># scope=\"farm_info\" # The default scope is \"user_access\". Only needed if testing different scope.</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Running from a Python Console, the <code>password</code> can also be omitted and entered\nat runtime. This allows testing without saving a password in plaintext:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">farmOS</span> <span class=\"kn\">import</span> <span class=\"n\">farmOS</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">farm_client</span> <span class=\"o\">=</span> <span class=\"n\">farmOS</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"n\">hostname</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s2\">\"farm\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"ne\">Warning</span><span class=\"p\">:</span> <span class=\"n\">Password</span> <span class=\"nb\">input</span> <span class=\"n\">may</span> <span class=\"n\">be</span> <span class=\"n\">echoed</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Enter</span> <span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"o\">&gt;</span><span class=\"err\">?</span> <span class=\"n\">MY_PASSWORD</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'server-name'</span><span class=\"p\">,</span> <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'api_version'</span><span class=\"p\">:</span> <span class=\"s1\">'1.2'</span><span class=\"p\">,</span> <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"o\">....</span>\n</pre>\n<h5>OAuth Authorization Flow (advanced)</h5>\n<p>It's also possible to run the Authorization Code Flow from the Python console.\nThis is great way to test the Authorization process users will go through. The\nconsole will print a link to navigate to where you sign in to farmOS and\ncomplete the authorization process. You then copy the <code>link</code> from the page you\nare redirected to back into the console. This supplies the <code>farm_client</code> with\nan an authorization <code>code</code> that it uses to request an OAuth <code>token</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">farm_client</span> <span class=\"o\">=</span> <span class=\"n\">farmOS</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"n\">hostname</span><span class=\"p\">,</span> <span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s2\">\"farm\"</span><span class=\"p\">)</span>\n<span class=\"n\">Please</span> <span class=\"n\">go</span> <span class=\"n\">here</span> <span class=\"ow\">and</span> <span class=\"n\">authorize</span><span class=\"p\">,</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">localhost</span><span class=\"o\">/</span><span class=\"n\">oauth2</span><span class=\"o\">/</span><span class=\"n\">authorize</span><span class=\"err\">?</span><span class=\"n\">response_type</span><span class=\"o\">=</span><span class=\"n\">code</span><span class=\"o\">&amp;</span><span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"n\">farmos_development</span><span class=\"o\">&amp;</span><span class=\"n\">redirect_uri</span><span class=\"o\">=</span><span class=\"n\">http</span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"n\">A</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"n\">F</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"n\">Flocalhost</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"n\">Fapi</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"n\">Fauthorized</span><span class=\"o\">&amp;</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">user_access</span><span class=\"o\">&amp;</span><span class=\"n\">state</span><span class=\"o\">=</span><span class=\"n\">V9RCDd4yrSWZP8iGXt6qW51sYxsFZs</span><span class=\"o\">&amp;</span><span class=\"n\">access_type</span><span class=\"o\">=</span><span class=\"n\">offline</span><span class=\"o\">&amp;</span><span class=\"n\">prompt</span><span class=\"o\">=</span><span class=\"n\">select_account</span>\n<span class=\"n\">Paste</span> <span class=\"n\">the</span> <span class=\"n\">full</span> <span class=\"n\">redirect</span> <span class=\"n\">URL</span> <span class=\"n\">here</span><span class=\"p\">:</span><span class=\"o\">&gt;</span><span class=\"err\">?</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">localhost</span><span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">authorized</span><span class=\"err\">?</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">33429</span><span class=\"n\">f3530e36f4bdf3c2adbbfcd5b7d73e89d5c</span><span class=\"o\">&amp;</span><span class=\"n\">state</span><span class=\"o\">=</span><span class=\"n\">V9RCDd4yrSWZP8iGXt6qW51sYxsFZs</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'server-name'</span><span class=\"p\">,</span> <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'api_version'</span><span class=\"p\">:</span> <span class=\"s1\">'1.2'</span><span class=\"p\">,</span> <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"o\">....</span>\n</pre>\n<h5>Saving OAuth Tokens</h5>\n<p>farmOS.py can save OAuth Tokens to a config file so that they can be used at a\nlater time. To do this, supply a <code>config_file</code> and <code>profile_name</code> to save the\nconnection info under.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">farmOS</span> <span class=\"kn\">import</span> <span class=\"n\">farmOS</span>\n\n<span class=\"n\">hostname</span> <span class=\"o\">=</span> <span class=\"s2\">\"myfarm.farmos.net\"</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"username\"</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s2\">\"password\"</span>\n\n<span class=\"n\">farm_client</span> <span class=\"o\">=</span> <span class=\"n\">farmOS</span><span class=\"p\">(</span>\n    <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"n\">hostname</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">password</span><span class=\"p\">,</span>\n    <span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s2\">\"farm\"</span><span class=\"p\">,</span> <span class=\"c1\"># The default oauth client_id enabled on all farmOS servers.</span>\n    <span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s2\">\"farmos_config.cfg\"</span><span class=\"p\">,</span>    \n    <span class=\"n\">profile_name</span><span class=\"o\">=</span><span class=\"s2\">\"My farmOS Server\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>After initial connection, the config will be saved to <code>profile_name</code> in <code>config_file</code>.</p>\n<p>Later authentication can then simply be done by supplying just the <code>config_file</code> and\n<code>profile_name</code> when creating a farmOS client (as long as OAuth tokens have not expired):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">farmOS</span> <span class=\"kn\">import</span> <span class=\"n\">farmOS</span>\n\n<span class=\"n\">farm_client</span> <span class=\"o\">=</span> <span class=\"n\">farmOS</span><span class=\"p\">(</span>\n    <span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s2\">\"farmos_config.cfg\"</span><span class=\"p\">,</span>    \n    <span class=\"n\">profile_name</span><span class=\"o\">=</span><span class=\"s2\">\"My farmOS Server\"</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>Drupal Auth</h4>\n<p>Simple one-time communication to the farmOS server can be completed via Drupal Auth:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">farmOS</span> <span class=\"kn\">import</span> <span class=\"n\">farmOS</span>\n\n<span class=\"n\">hostname</span> <span class=\"o\">=</span> <span class=\"s2\">\"myfarm.farmos.net\"</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"username\"</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s2\">\"password\"</span>\n\n<span class=\"n\">farm_client</span> <span class=\"o\">=</span> <span class=\"n\">farmOS</span><span class=\"p\">(</span>\n    <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"n\">hostname</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">password</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Server Info</h3>\n<pre><span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'farmos-test'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'api_version'</span><span class=\"p\">:</span> <span class=\"s1\">'1.2'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'uid'</span><span class=\"p\">:</span> <span class=\"s1\">'4'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'paul'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'mail'</span><span class=\"p\">:</span> <span class=\"s1\">'paul.weidner+2@gmail.com'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'google_maps_api_key'</span><span class=\"p\">:</span> <span class=\"s1\">'AIzaSyCCHTbAGC_gHegwepMxBu_AKd_RmP54mDg'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'equipment'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"s1\">'Equipment'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'7'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'farm/assets/equipment/list'</span><span class=\"p\">,</span> <span class=\"s1\">'weight'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">},</span>\n        <span class=\"s1\">'areas'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"s1\">'Areas'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'20'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'farm/areas'</span><span class=\"p\">,</span> <span class=\"s1\">'weight'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">},</span>\n        <span class=\"s1\">'field'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"s1\">'Field area'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'532 hectares'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'farm/areas'</span><span class=\"p\">,</span> <span class=\"s1\">'weight'</span><span class=\"p\">:</span> <span class=\"mi\">101</span><span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'system_of_measurement'</span><span class=\"p\">:</span> <span class=\"s1\">'metric'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Logs</h3>\n<p>A log is any type of event that occurs on the farm, from a planting to a harvest\nto just a general observation.</p>\n<p>Methods for getting, sending and deleting logs are namespaced on the <code>farm.log</code>\nproperty.</p>\n<h4><code>.get()</code></h4>\n<pre><span class=\"c1\"># Get all logs</span>\n<span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get harvest logs</span>\n<span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'farm_harvest'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">harvests</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"n\">filters</span><span class=\"p\">)[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get log number 37</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">37</span><span class=\"p\">)</span>\n</pre>\n<p>The four default log types are:</p>\n<ul>\n<li><code>farm_activity</code></li>\n<li><code>farm_harvest</code></li>\n<li><code>farm_input</code></li>\n<li><code>farm_observation</code></li>\n</ul>\n<p>Other log types may be provided by add-on modules in farmOS.</p>\n<h4><code>.send()</code></h4>\n<p>Send can be used to create a new log, or if the <code>id</code> property is included, to\nupdate an existing log:</p>\n<pre><span class=\"c1\"># Create observation log</span>\n<span class=\"n\">observation_log</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Great Planting\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"farm_observation\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"done\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"notes\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Some notes\"</span>    \n<span class=\"p\">}</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Mark log 35 as done</span>\n<span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">45</span><span class=\"p\">,</span>\n    <span class=\"s1\">'done'</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">done</span><span class=\"p\">)</span>\n</pre>\n<h4><code>.delete()</code></h4>\n<pre><span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)</span>\n</pre>\n<h3>Assets</h3>\n<p>Assets are any piece of property or durable good that belongs to the farm, such\nas a piece of equipment, a specific crop, or an animal.</p>\n<p>Methods for getting, sending and deleting assets are namespaced on the\n<code>farm.asset</code> property.</p>\n<h4><code>.get()</code></h4>\n<pre><span class=\"c1\"># Get all assets</span>\n<span class=\"n\">assets</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get all animal assets</span>\n<span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'animal'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">animals</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"n\">filters</span><span class=\"p\">)[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get asset ID 45</span>\n<span class=\"n\">asset</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n</pre>\n<p>Some common asset types include:</p>\n<ul>\n<li><code>animal</code></li>\n<li><code>equipment</code></li>\n<li><code>planting</code></li>\n</ul>\n<p>Other asset types may be provided by add-on modules in farmOS.</p>\n<h4><code>.send()</code></h4>\n<p>Send can be used to create a new asset, or if the <code>id</code> property is included, to update an existing asset:</p>\n<pre><span class=\"n\">planting_asset</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Great Planting\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"planting\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"crop\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">}</span> <span class=\"c1\"># Crop term id</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">asset</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">planting_asset</span><span class=\"p\">)</span>\n</pre>\n<h4><code>.delete()</code></h4>\n<pre><span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)</span>\n</pre>\n<h3>Areas</h3>\n<p>An area is any well defined location that has been mapped in farmOS, such as a field, greenhouse, building, etc.</p>\n<p>Here's an example of what an area looks like as a Python dict:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"s1\">'tid'</span><span class=\"p\">:</span> <span class=\"s1\">'22'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'F1'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_type'</span><span class=\"p\">:</span> <span class=\"s1\">'greenhouse'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'geofield'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"s1\">'geom'</span><span class=\"p\">:</span> <span class=\"s1\">'POLYGON ((-75.53640916943549 42.54421203378203, -75.53607389330863 42.54421796218091, -75.53607121109961 42.54415472589722, -75.53640648722647 42.54414682135726, -75.53640916943549 42.54421203378203))'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"s1\">'vocabulary'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'2'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'resource'</span><span class=\"p\">:</span> <span class=\"s1\">'taxonomy_vocabulary'</span>\n  <span class=\"p\">},</span>\n  <span class=\"s1\">'parent'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">11</span><span class=\"p\">,</span>\n      <span class=\"s1\">'resource'</span><span class=\"p\">:</span> <span class=\"s1\">'taxonomy_term'</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"s1\">'weight'</span><span class=\"p\">:</span> <span class=\"s1\">'0'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Methods for getting, sending and deleting areas are namespaced on the <code>farm.area</code> property.</p>\n<h4><code>.get()</code></h4>\n<pre><span class=\"c1\"># Get all areas</span>\n<span class=\"n\">areas</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get field areas</span>\n<span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'area_type'</span><span class=\"p\">:</span><span class=\"s1\">'field'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"n\">filters</span><span class=\"p\">)[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get area with tid 37</span>\n<span class=\"n\">area</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">37</span><span class=\"p\">)</span>\n</pre>\n<p><strong>NOTE:</strong> Areas use a <code>tid</code> property, unlike logs and assets which have an <code>id</code>. This stands for taxonomy ID. In the future this may be changed to make it more consistent with the other entities.</p>\n<p>Some common area types include:</p>\n<ul>\n<li><code>field</code></li>\n<li><code>building</code></li>\n<li><code>property</code></li>\n<li><code>water</code></li>\n<li><code>other</code></li>\n</ul>\n<p>Other area types may be provided by add-on modules in farmOS.</p>\n<h4><code>.send()</code></h4>\n<p>Send can be used to create a new area, or if the <code>tid</code> property is included, to update an existing area:</p>\n<pre></pre>\n<h4><code>.delete()</code></h4>\n<pre><span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)</span>\n</pre>\n<h3>Taxonomy Terms</h3>\n<p>farmOS allows farmers to build vocabularies of terms for various categorization\npurposes. These are referred to as \"taxonomies\" in farmOS (and Drupal), although\n\"vocabulary\" is sometimes used interchangeably.</p>\n<p>Some things that are represented as taxonomy terms include quantity units,\ncrops/varieties, animal species/breeds, input materials, and log categories.\nSee \"Endpoints\" above for specific API endpoints URLs.</p>\n<p>A very basic taxonomy term JSON structure looks like this:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"tid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Cabbage\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"vocabulary\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"7\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"taxonomy_vocabulary\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"parent\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"10\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"taxonomy_term\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"weight\"</span><span class=\"p\">:</span> <span class=\"s2\">\"5\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The <code>tid</code> is the unique ID of the term (database primary key). When creating a\nnew term, the only required fields are <code>name</code> and <code>vocabulary</code>. The vocabulary\nis an ID that corresponds to the specific vocabulary the term will be a part of\n(eg: quantity units, crops/varieties, log categories, etc). The fields <code>parent</code>\nand <code>weight</code> control term hierarchy and ordering (a heavier <code>weight</code> will sort\nit lower in the list).</p>\n<h4><code>.get()</code></h4>\n<pre><span class=\"c1\"># Get all terms</span>\n<span class=\"n\">terms</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get all terms from farm_crops vocabulary</span>\n<span class=\"n\">crops</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'farm_crops'</span><span class=\"p\">)[</span><span class=\"s1\">'list'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get term ID 67</span>\n<span class=\"n\">term</span> <span class=\"o\">=</span> <span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">67</span><span class=\"p\">)</span>\n</pre>\n<h4><code>.send()</code></h4>\n<p>Send can be used to create a new taxonomy term, or if the <code>tid</code> property is included in the term object, to update an existing area:</p>\n<pre></pre>\n<h4><code>.delete()</code></h4>\n<pre><span class=\"n\">farm_client</span><span class=\"o\">.</span><span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"mi\">56</span><span class=\"p\">)</span>\n</pre>\n<h3>Logging</h3>\n<p>You can configure how <code>farmOS</code> logs are displayed with the following:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"c1\"># Required to init a config on the ROOT logger, that all other inherit from</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">()</span>\n\n <span class=\"c1\"># Configure all loggers under farmOS (farmOS.client, famrOS.session) to desired level</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s2\">\"farmOS\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n <span class=\"c1\"># Hide debug logging from the farmOS.session module</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s2\">\"farmOS.session\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n</pre>\n<p>More info on logging in Python <a href=\"https://docs.python.org/3/howto/logging.html#logging-basic-tutorial\" rel=\"nofollow\">here</a>.</p>\n<h2>TESTING</h2>\n<p>Functional tests require a live instance of farmOS to communicate with.\nConfigure credentials for the farmOS instance to test against by setting the following environment variables:</p>\n<p>For farmOS Drupal Authentication:\n<code>FARMOS_HOSTNAME</code>, <code>FARMOS_RESTWS_USERNAME</code>, and <code>FARMOS_RESTWS_PASSWORD</code></p>\n<p>For farmOS OAuth Authentication (Password Flow):\n<code>FARMOS_HOSTNAME</code>, <code>FARMOS_OAUTH_USERNAME</code>, <code>FARMOS_OAUTH_PASSWORD</code>, <code>FARMOS_OAUTH_CLIENT_ID</code>, <code>FARMOS_OAUTH_CLIENT_SECRET</code></p>\n<p>Automated tests are run with pytest</p>\n<pre><code>python setup.py test\n</code></pre>\n<h2>MAINTAINERS</h2>\n<ul>\n<li>Paul Weidner (paul121) - <a href=\"https://github.com/paul121\" rel=\"nofollow\">https://github.com/paul121</a></li>\n<li>Michael Stenta (m.stenta) - <a href=\"https://github.com/mstenta\" rel=\"nofollow\">https://github.com/mstenta</a></li>\n</ul>\n<p>This project has been sponsored by:</p>\n<ul>\n<li><a href=\"https://farmier.com\" rel=\"nofollow\">Farmier</a></li>\n<li><a href=\"https://pasafarming.org\" rel=\"nofollow\">Pennsylvania Association for Sustainable Agriculture</a></li>\n<li><a href=\"http://our-sci.net\" rel=\"nofollow\">Our Sci</a></li>\n<li><a href=\"https://bionutrient.org\" rel=\"nofollow\">Bionutrient Food Association</a></li>\n<li><a href=\"https://foundationfar.org/\" rel=\"nofollow\">Foundation for Food and Agriculture Research</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7095395, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "db7552606fce4342258e6764d899d110", "sha256": "8328a3bcacb844d73b6c5da2340a124b908caee42858ee44437fc89605acd977"}, "downloads": -1, "filename": "farmOS-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "db7552606fce4342258e6764d899d110", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": ">=3", "size": 11771, "upload_time": "2019-09-26T04:45:15", "upload_time_iso_8601": "2019-09-26T04:45:15.490783Z", "url": "https://files.pythonhosted.org/packages/22/8e/edab44c47749311e1b90dbf18a2f67057b6e53cef400492dbeb651d67b4c/farmOS-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1afd9346112c5657ad3728e7004b5d4", "sha256": "2626c146b33644d8027cf2d9ae804c3637ca3fb66984c2b4715cfe2493226259"}, "downloads": -1, "filename": "farmOS-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "d1afd9346112c5657ad3728e7004b5d4", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3", "size": 16745, "upload_time": "2019-04-03T04:40:22", "upload_time_iso_8601": "2019-04-03T04:40:22.206429Z", "url": "https://files.pythonhosted.org/packages/e4/fe/f30990ca699c63c12d9c6fcaf7cd1cc5f7e3f79638192cd1ce839f2d254e/farmOS-0.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccfbe4a1f6ea338ae2ea1d92831f88c9", "sha256": "0c068f39df2638f1f2bca14c2d05a78d470ac2c2103bc4dc0094223c2b4293d8"}, "downloads": -1, "filename": "farmOS-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ccfbe4a1f6ea338ae2ea1d92831f88c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20629, "upload_time": "2019-04-03T04:40:20", "upload_time_iso_8601": "2019-04-03T04:40:20.277606Z", "url": "https://files.pythonhosted.org/packages/79/aa/6139a4d95df5712c2cbbd64e45f1d14ed9060ed56e1fa2b2b9fd1b46f7cf/farmOS-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a96e475bff6c3223cd3f03b79b043ed5", "sha256": "50166c135951ac0bd2f0ea0f00d8373468d11ad7327a2035ea1f54c64ea41e49"}, "downloads": -1, "filename": "farmOS-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a96e475bff6c3223cd3f03b79b043ed5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5771, "upload_time": "2019-04-03T04:40:23", "upload_time_iso_8601": "2019-04-03T04:40:23.382632Z", "url": "https://files.pythonhosted.org/packages/cc/44/7d51bacb6d44f9577e20bfe3f5f3911d8a3322fb27634ffa257f1dd73d8c/farmOS-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4f0018e8ad1a76b5787db792e634a6a2", "sha256": "7feb5c3c7123eb4da51970035cdf94cc5759d8078871b2199dcfe993ec998d72"}, "downloads": -1, "filename": "farmOS-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4f0018e8ad1a76b5787db792e634a6a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 19850, "upload_time": "2019-04-30T17:59:54", "upload_time_iso_8601": "2019-04-30T17:59:54.162781Z", "url": "https://files.pythonhosted.org/packages/3e/ea/28015ee0eb323ee3259b960f7eedaa8abde4ad05311b9e59204e44bb0799/farmOS-0.0.2-py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "1932294ef2575bed9e6f00eb295a2831", "sha256": "5a3aaef1cb9b9a674b5388fb91412fedf93215a5b9fd402e2a6357c059bc45ae"}, "downloads": -1, "filename": "farmOS-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1932294ef2575bed9e6f00eb295a2831", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 24334, "upload_time": "2019-09-25T05:14:09", "upload_time_iso_8601": "2019-09-25T05:14:09.948181Z", "url": "https://files.pythonhosted.org/packages/78/86/50afcb1f45a0a6cf8429d1868fc2376cb3f4bdbaaef5cf8cf0b4752d9fb5/farmOS-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f97e200037819a6accad4bd484631530", "sha256": "ec53a86baeb1c7e016d9e165444d8d46f30767b7dc646eeb4eeacc45dfdb13f6"}, "downloads": -1, "filename": "farmOS-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f97e200037819a6accad4bd484631530", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11056, "upload_time": "2019-09-25T05:15:52", "upload_time_iso_8601": "2019-09-25T05:15:52.843090Z", "url": "https://files.pythonhosted.org/packages/e9/70/34f46d7a00b8749b664ad7b9515dd5a805b7f388cd3a4bddab69226ce270/farmOS-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9806dc108336e4637dbb39b1b17749fe", "sha256": "d538c81672d857602ea975f8c29c63c0b14aab53df04d98e8dcea66c3118b362"}, "downloads": -1, "filename": "farmOS-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9806dc108336e4637dbb39b1b17749fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 24583, "upload_time": "2019-09-26T04:45:11", "upload_time_iso_8601": "2019-09-26T04:45:11.296209Z", "url": "https://files.pythonhosted.org/packages/bc/75/c2b0cc927b9fd10db460a071af12fcb88ba8ed5f76a5a3de724d951fd55e/farmOS-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49c611902d7f4a255c1c15522fd45210", "sha256": "c98b17d5668ecedb6f3275c2dfed03aadfad35cf2717e5998e6d61fd64bcfdbf"}, "downloads": -1, "filename": "farmOS-0.1.1.tar.gz", "has_sig": false, "md5_digest": "49c611902d7f4a255c1c15522fd45210", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11336, "upload_time": "2019-09-26T04:45:17", "upload_time_iso_8601": "2019-09-26T04:45:17.561459Z", "url": "https://files.pythonhosted.org/packages/32/01/6abc065d2021a290ece14350a41a942c94270c12875177b544c5af209e1e/farmOS-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "61fab3ecb2dcb5bc7a969815a1354808", "sha256": "9d5bf488fd1b3f93a8242919a653a16ff5e39001085af96650aa3141112870c0"}, "downloads": -1, "filename": "farmOS-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "61fab3ecb2dcb5bc7a969815a1354808", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 25109, "upload_time": "2019-10-04T02:28:10", "upload_time_iso_8601": "2019-10-04T02:28:10.714795Z", "url": "https://files.pythonhosted.org/packages/2f/3d/683b3ab9263874c98875243754578d1e82b5fffa0e51ba3c93edad8e86b0/farmOS-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba7106ef5bea8f5c307623aa1352ef38", "sha256": "886222d4b8c537fc54e5d91f35e9df3a2bbe745c61954feff5c0bdf18ba891aa"}, "downloads": -1, "filename": "farmOS-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ba7106ef5bea8f5c307623aa1352ef38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11747, "upload_time": "2019-10-04T02:28:12", "upload_time_iso_8601": "2019-10-04T02:28:12.607016Z", "url": "https://files.pythonhosted.org/packages/70/98/584b9fcf5fdb0861b8c66e6ae5af416ea58880b56c1a46ffd7569edc1e25/farmOS-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6b217cc7ee8fa89bd7a9bf636407690e", "sha256": "db87ee06b1ffc152230ce490395c44ede5ec767cc62ee2658f270a42292f0c32"}, "downloads": -1, "filename": "farmOS-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6b217cc7ee8fa89bd7a9bf636407690e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 25105, "upload_time": "2019-10-04T03:30:50", "upload_time_iso_8601": "2019-10-04T03:30:50.214229Z", "url": "https://files.pythonhosted.org/packages/12/81/45454af60d635c25f076cfa9ad528b7f0ea9a76a8bcd59093d074885a968/farmOS-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40eb8fc2962b8d908fc02c91d9534d2f", "sha256": "51b211e94572c8e2366ef239cb1536dc4b26d2c2efe38493e9e2ee9e0039b1c8"}, "downloads": -1, "filename": "farmOS-0.1.3.tar.gz", "has_sig": false, "md5_digest": "40eb8fc2962b8d908fc02c91d9534d2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11754, "upload_time": "2019-10-04T03:30:52", "upload_time_iso_8601": "2019-10-04T03:30:52.003170Z", "url": "https://files.pythonhosted.org/packages/69/6f/85476f828bbe7e34cf98bd667c7e145ed821f742d59d539a688705079541/farmOS-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "9cea8a8b793ac1b09eff05f5d227dfd0", "sha256": "3c30dbdfa9a527a34610fca18c5d941919b88d4c03071f3d2adb65f303a8eb46"}, "downloads": -1, "filename": "farmOS-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9cea8a8b793ac1b09eff05f5d227dfd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 25189, "upload_time": "2019-12-03T00:10:11", "upload_time_iso_8601": "2019-12-03T00:10:11.927208Z", "url": "https://files.pythonhosted.org/packages/ba/04/046dc2be3ba4f3ce3888a60832b266ebc96a2ad3e4c62e9ec5e7535e1b60/farmOS-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81a868f052ab6980a10e2e40d4cdbf1e", "sha256": "be59fb386a1a958007a957a84bd15590be0cb4a453cafbdef2d54528e5c8d246"}, "downloads": -1, "filename": "farmOS-0.1.4.tar.gz", "has_sig": false, "md5_digest": "81a868f052ab6980a10e2e40d4cdbf1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11866, "upload_time": "2019-12-03T00:10:13", "upload_time_iso_8601": "2019-12-03T00:10:13.771605Z", "url": "https://files.pythonhosted.org/packages/1b/a5/044671ad13ff7dcfe241a321a238a9f963395bc319bb9987c88329f0074b/farmOS-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "a9951f50f4c34687a431f71ec721a787", "sha256": "615c876a45950d4762d42877325083bd090490a5a0b586c6335d26ecd9a81025"}, "downloads": -1, "filename": "farmOS-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a9951f50f4c34687a431f71ec721a787", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26160, "upload_time": "2019-12-19T18:01:50", "upload_time_iso_8601": "2019-12-19T18:01:50.541902Z", "url": "https://files.pythonhosted.org/packages/f6/66/a171ae526d60a4f095fbbdb594bd4190476133ba35011f2bbaaab178d504/farmOS-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c35064e841b065bad018593455dc411", "sha256": "638e593a501206ae6699019a5ead18a5c67f7af188e6479c5f99fc6b8c66c2ab"}, "downloads": -1, "filename": "farmOS-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3c35064e841b065bad018593455dc411", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12856, "upload_time": "2019-12-19T18:01:51", "upload_time_iso_8601": "2019-12-19T18:01:51.981088Z", "url": "https://files.pythonhosted.org/packages/22/a4/b76cdc693eb6de910fa7683eb857022c9fd3b9a8cd2fe8f7099fd8e3d9fd/farmOS-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "1cbac962004a4df7c4806f64f57eda2a", "sha256": "182cc0e86a4bacaf46fabc978ee91c12f10a9f8f72d25dcdeae0897b63af05e5"}, "downloads": -1, "filename": "farmOS-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1cbac962004a4df7c4806f64f57eda2a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 20813, "upload_time": "2020-04-24T19:18:21", "upload_time_iso_8601": "2020-04-24T19:18:21.337446Z", "url": "https://files.pythonhosted.org/packages/84/b9/6b853773e4ccd4b8a58de1290f133919ff55e71db78b540e3ba8940184f5/farmOS-0.1.6.tar.gz", "yanked": false}], "0.1.6b1": [{"comment_text": "", "digests": {"md5": "fc82ea6234bd52ad225d35d4cf0c0574", "sha256": "89a1b96751a318160d8e2b24abee278ac763e2c3f8026c167068f8e8897b36a6"}, "downloads": -1, "filename": "farmOS-0.1.6b1-py3-none-any.whl", "has_sig": false, "md5_digest": "fc82ea6234bd52ad225d35d4cf0c0574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26573, "upload_time": "2020-02-04T00:21:03", "upload_time_iso_8601": "2020-02-04T00:21:03.175974Z", "url": "https://files.pythonhosted.org/packages/d0/ef/e68c3cb949d142ef348e30eb0c7beeae542429a8603dbe25fc71b9535b65/farmOS-0.1.6b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9af0874dcf9bb5c1cf7f1545a060c161", "sha256": "3062f7bfecb53dfcd56bb629ed08b13529ccf01797346c7a3268caf532bcbeec"}, "downloads": -1, "filename": "farmOS-0.1.6b1.tar.gz", "has_sig": false, "md5_digest": "9af0874dcf9bb5c1cf7f1545a060c161", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 13424, "upload_time": "2020-02-04T00:21:04", "upload_time_iso_8601": "2020-02-04T00:21:04.875131Z", "url": "https://files.pythonhosted.org/packages/6b/a6/fca43cdaf6bbb7fac84906683bdc62e74125385c698cbfbe0906b48ac67e/farmOS-0.1.6b1.tar.gz", "yanked": false}], "0.1.6b2": [{"comment_text": "", "digests": {"md5": "82df793425dd803f3d4389e1035311c3", "sha256": "8ed03a152aab1053f532588d921d6e3a2e61f8c1ac196ff6756387ca33a7dcc2"}, "downloads": -1, "filename": "farmOS-0.1.6b2-py3-none-any.whl", "has_sig": false, "md5_digest": "82df793425dd803f3d4389e1035311c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26577, "upload_time": "2020-02-04T19:41:42", "upload_time_iso_8601": "2020-02-04T19:41:42.528148Z", "url": "https://files.pythonhosted.org/packages/6a/5d/565aad4ae6cdaa47007bdf693ff6b3ab2f187ee0b1d36dfee5f19c6b3f3b/farmOS-0.1.6b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7780bd0ccb668f9b90a4d1bd749840b2", "sha256": "ac6b2110c6695a6415d0aeb4e525c9b81a8786a6c2f872b5760ee9698cba50ff"}, "downloads": -1, "filename": "farmOS-0.1.6b2.tar.gz", "has_sig": false, "md5_digest": "7780bd0ccb668f9b90a4d1bd749840b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 13429, "upload_time": "2020-02-04T19:41:44", "upload_time_iso_8601": "2020-02-04T19:41:44.989805Z", "url": "https://files.pythonhosted.org/packages/fc/77/b99f550e3620baa8f9c339473e8c69bb67edfaeb039f5b83b7eb4163f59a/farmOS-0.1.6b2.tar.gz", "yanked": false}], "0.1.6b3": [{"comment_text": "", "digests": {"md5": "e0c44cadd55bee888e6f2b5f74be0956", "sha256": "ce42955b31f8a82a4b416227d0342dd74072a5b7e77dc1f24fe03da6afbc8760"}, "downloads": -1, "filename": "farmOS-0.1.6b3-py3-none-any.whl", "has_sig": false, "md5_digest": "e0c44cadd55bee888e6f2b5f74be0956", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26602, "upload_time": "2020-02-10T19:21:12", "upload_time_iso_8601": "2020-02-10T19:21:12.989250Z", "url": "https://files.pythonhosted.org/packages/9f/f0/189bc481a4eaf8cfb1de961f0afe3a4fb615f902b7d2d3c7688592af256c/farmOS-0.1.6b3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77d8937c75b71623ee18bee07dc3e4b7", "sha256": "07f4b07a14567caff9ffaba8914450fff66cc260e305dfeedbe38689f7d95888"}, "downloads": -1, "filename": "farmOS-0.1.6b3.tar.gz", "has_sig": false, "md5_digest": "77d8937c75b71623ee18bee07dc3e4b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 13451, "upload_time": "2020-02-10T19:21:14", "upload_time_iso_8601": "2020-02-10T19:21:14.279298Z", "url": "https://files.pythonhosted.org/packages/a0/c8/f85495430007dff28721f5466a46c163382ed42d6eaf9f2da3380cdd0028/farmOS-0.1.6b3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cbac962004a4df7c4806f64f57eda2a", "sha256": "182cc0e86a4bacaf46fabc978ee91c12f10a9f8f72d25dcdeae0897b63af05e5"}, "downloads": -1, "filename": "farmOS-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1cbac962004a4df7c4806f64f57eda2a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 20813, "upload_time": "2020-04-24T19:18:21", "upload_time_iso_8601": "2020-04-24T19:18:21.337446Z", "url": "https://files.pythonhosted.org/packages/84/b9/6b853773e4ccd4b8a58de1290f133919ff55e71db78b540e3ba8940184f5/farmOS-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:43 2020"}