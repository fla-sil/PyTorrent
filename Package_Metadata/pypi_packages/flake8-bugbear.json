{"info": {"author": "\u0141ukasz Langa", "author_email": "lukasz@langa.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: Flake8", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance"], "description": "==============\nflake8-bugbear\n==============\n\n.. image:: https://travis-ci.org/PyCQA/flake8-bugbear.svg?branch=master\n    :target: https://travis-ci.org/PyCQA/flake8-bugbear\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\nA plugin for Flake8 finding likely bugs and design problems in your\nprogram.  Contains warnings that don't belong in pyflakes and\npycodestyle::\n\n    bug\u00b7bear  (b\u016dg\u2032b\u00e2r\u2032)\n    n.\n    1. A cause of fear, anxiety, or irritation: *Overcrowding is often\n       a bugbear for train commuters.*\n    2. A difficult or persistent problem: *\"One of the major bugbears of\n       traditional AI is the difficulty of programming computers to\n       recognize that different but similar objects are instances of the\n       same type of thing\" (Jack Copeland).*\n    3. A fearsome imaginary creature, especially one evoked to frighten\n       children.\n\nIt is felt that these lints don't belong in the main Python tools as they\nare very opinionated and do not have a PEP or standard behind them. Due to\n``flake8`` being designed to be extensible, the original creators of these lints\nbelieved that a plugin was the best route. This has resulted in better development\nvelocity for contributors and adaptive deployment for ``flake8`` users.\n\nInstallation\n------------\n\nInstall from ``pip`` with:\n\n.. code-block:: sh\n\n     pip install flake8-bugbear\n\nIt will then automatically be run as part of ``flake8``; you can check it has\nbeen picked up with:\n\n.. code-block:: sh\n\n    $ flake8 --version\n    3.5.0 (assertive: 1.0.1, flake8-bugbear: 18.2.0, flake8-comprehensions: 1.4.1, mccabe: 0.6.1, pycodestyle: 2.3.1, pyflakes: 1.6.0) CPython 3.7.0 on Darwin\n\nList of warnings\n----------------\n\n**B001**: Do not use bare ``except:``, it also catches unexpected events\nlike memory errors, interrupts, system exit, and so on.  Prefer ``except\nException:``.  If you're sure what you're doing, be explicit and write\n``except BaseException:``.  Disable E722 to avoid duplicate warnings.\n\n**B002**: Python does not support the unary prefix increment. Writing\n``++n`` is equivalent to ``+(+(n))``, which equals ``n``. You meant ``n\n+= 1``.\n\n**B003**: Assigning to ``os.environ`` doesn't clear the\nenvironment.  Subprocesses are going to see outdated\nvariables, in disagreement with the current process.  Use\n``os.environ.clear()`` or the ``env=``  argument to Popen.\n\n**B004**: Using ``hasattr(x, '__call__')`` to test if ``x`` is callable\nis unreliable.  If ``x`` implements custom ``__getattr__`` or its\n``__call__`` is itself not callable, you might get misleading\nresults.  Use ``callable(x)`` for consistent results.\n\n**B005**: Using ``.strip()`` with multi-character strings is misleading\nthe reader. It looks like stripping a substring. Move your\ncharacter set to a constant if this is deliberate. Use\n``.replace()`` or regular expressions to remove string fragments.\n\n**B006**: Do not use mutable data structures for argument defaults.  They\nare created during function definition time. All calls to the function\nreuse this one instance of that data structure, persisting changes\nbetween them.\n\n**B007**: Loop control variable not used within the loop body.  If this is\nintended, start the name with an underscore.\n\n**B008**: Do not perform function calls in argument defaults.  The call is\nperformed only once at function definition time. All calls to your\nfunction will reuse the result of that definition-time function call.  If\nthis is intended, assign the function call to a module-level variable and\nuse that variable as a default value.\n\n**B009**: Do not call ``getattr(x, 'attr')``, instead use normal\nproperty access: ``x.attr``. Missing a default to ``getattr`` will cause\nan ``AttributeError`` to be raised for non-existent properties. There is\nno additional safety in using ``getattr`` if you know the attribute name\nahead of time.\n\n**B010**: Do not call ``setattr(x, 'attr', val)``, instead use normal\nproperty access: ``x.attr = val``. There is no additional safety in\nusing ``setattr`` if you know the attribute name ahead of time.\n\n**B011**: Do not call `assert False` since `python -O` removes these calls.\nInstead callers should `raise AssertionError()`.\n\n**B012**: Use of `break`, `continue` or `return` inside `finally` blocks will\nsilence exceptions or override return values from the `try` or `except` blocks.\nTo silence an exception, do it explicitly in the `except` block. To properly use\na `break`, `continue` or `return` refactor your code so these statements are not\nin the `finally` block.\n\n**B013**: A length-one tuple literal is redundant.  Write `except SomeError:`\ninstead of `except (SomeError,):`.\n\n**B014**: Redundant exception types in `except (Exception, TypeError):`.\nWrite `except Exception:`, which catches exactly the same exceptions.\n\n\nPython 3 compatibility warnings\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThese have higher risk of false positives but discover regressions that\nare dangerous to slip through when test coverage is not great. Let me\nknow if a popular library is triggering any of the following warnings\nfor valid code.\n\n**B301**: Python 3 does not include ``.iter*`` methods on dictionaries.\nThe default behavior is to return iterables. Simply remove the ``iter``\nprefix from the method.  For Python 2 compatibility, also prefer the\nPython 3 equivalent if you expect that the size of the dict to be small\nand bounded. The performance regression on Python 2 will be negligible\nand the code is going to be the clearest.  Alternatively, use\n``six.iter*`` or ``future.utils.iter*``.\n\n**B302**: Python 3 does not include ``.view*`` methods on dictionaries.\nThe default behavior is to return viewables. Simply remove the ``view``\nprefix from the method.  For Python 2 compatibility, also prefer the\nPython 3 equivalent if you expect that the size of the dict to be small\nand bounded. The performance regression on Python 2 will be negligible\nand the code is going to be the clearest.  Alternatively, use\n``six.view*`` or ``future.utils.view*``.\n\n**B303**: The ``__metaclass__`` attribute on a class definition does\nnothing on Python 3. Use ``class MyClass(BaseClass, metaclass=...)``.\nFor Python 2 compatibility, use ``six.add_metaclass``.\n\n**B304**: ``sys.maxint`` is not a thing on Python 3. Use\n``sys.maxsize``.\n\n**B305**: ``.next()`` is not a thing on Python 3. Use the ``next()``\nbuiltin. For Python 2 compatibility, use ``six.next()``.\n\n**B306**: ``BaseException.message`` has been deprecated as of Python 2.6\nand is removed in Python 3. Use ``str(e)`` to access the user-readable\nmessage. Use ``e.args`` to access arguments passed to the exception.\n\n\nOpinionated warnings\n~~~~~~~~~~~~~~~~~~~~\n\nThe following warnings are disabled by default because they are\ncontroversial.  They may or may not apply to you, enable them explicitly\nin your configuration if you find them useful.  Read below on how to\nenable.\n\n**B901**: Using ``return x`` in a generator function used to be\nsyntactically invalid in Python 2. In Python 3 ``return x`` can be used\nin a generator as a return value in conjunction with ``yield from``.\nUsers coming from Python 2 may expect the old behavior which might lead\nto bugs.  Use native ``async def`` coroutines or mark intentional\n``return x`` usage with ``# noqa`` on the same line.\n\n**B902**: Invalid first argument used for method. Use ``self`` for\ninstance methods, and ``cls`` for class methods (which includes ``__new__``\nand ``__init_subclass__``) or instance methods of metaclasses (detected as\nclasses directly inheriting from ``type``).\n\n**B903**: Use ``collections.namedtuple`` (or ``typing.NamedTuple``) for\ndata classes that only set attributes in an ``__init__`` method, and do\nnothing else. If the attributes should be mutable, define the attributes\nin ``__slots__`` to save per-instance memory and to prevent accidentally\ncreating additional attributes on instances.\n\n**B950**: Line too long. This is a pragmatic equivalent of\n``pycodestyle``'s E501: it considers \"max-line-length\" but only triggers\nwhen the value has been exceeded by **more than 10%**. You will no\nlonger be forced to reformat code due to the closing parenthesis being\none character too far to satisfy the linter. At the same time, if you do\nsignificantly violate the line length, you will receive a message that\nstates what the actual limit is. This is inspired by Raymond Hettinger's\n`\"Beyond PEP 8\" talk <https://www.youtube.com/watch?v=wf-BqAjZb8M>`_ and\nhighway patrol not stopping you if you drive < 5mph too fast. Disable\nE501 to avoid duplicate warnings.\n\n\nHow to enable opinionated warnings\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo enable these checks, specify a ``--select`` command-line option or\n``select=`` option in your config file.  As of Flake8 3.0, this option\nis a whitelist (checks not listed are being implicitly disabled), so you\nhave to explicitly specify all checks you want enabled. For example::\n\n\t[flake8]\n\tmax-line-length = 80\n\tmax-complexity = 12\n\t...\n\tignore = E501\n\tselect = C,E,F,W,B,B901\n\nNote that we're enabling the complexity checks, the PEP8 ``pycodestyle``\nerrors and warnings, the pyflakes fatals and all default Bugbear checks.\nFinally, we're also specifying B901 as a check that we want enabled.\nSome checks might need other flake8 checks disabled - e.g. E501 must be\ndisabled for B950 to be hit.\n\nIf you'd like all optional warnings to be enabled for you (future proof\nyour config!), say ``B9`` instead of ``B901``. You will need Flake8 3.2+\nfor this feature.\n\nNote that ``pycodestyle`` also has a bunch of warnings that are disabled\nby default.  Those get enabled as soon as there is an ``ignore =`` line\nin your configuration.  I think this behavior is surprising so Bugbear's\nopinionated warnings require explicit selection.\n\n\nTests\n-----\n\nJust run::\n\n    python tests/test_bugbear.py\n\n\nLicense\n-------\n\nMIT\n\n\nChange Log\n----------\n\n20.1.4\n~~~~~~\n\n* Ignore keywords for B009/B010\n\n20.1.3\n~~~~~~\n\n* Silence B009/B010 for non-identifiers\n* State an ignore might be needed for optional B9x checks\n\n20.1.2\n~~~~~~\n\n* Fix error on attributes-of-attributes in `except (...):` clauses\n\n20.1.1\n~~~~~~\n\n* Allow continue/break within loops in finally clauses for B012\n* For B001, also check for ``except ():``\n* Introduce B013 and B014 to check tuples in ``except (..., ):`` statements\n\n20.1.0\n~~~~~~\n\n* Warn about continue/return/break in finally block (#100)\n* Removed a colon from the descriptive message in B008. (#96)\n\n19.8.0\n~~~~~~\n\n* Fix .travis.yml syntax + add Python 3.8 + nightly tests\n* Fix `black` formatting + enforce via CI\n* Make B901 not apply to __await__ methods\n\n19.3.0\n~~~~~~\n\n* allow 'mcs' for metaclass classmethod first arg (PyCharm default)\n* Introduce B011\n* Introduce B009 and B010\n* Exclude immutable calls like tuple() and frozenset() from B008\n* For B902, the first argument for metaclass class methods can be\n  \"mcs\", matching the name preferred by PyCharm.\n\n18.8.0\n~~~~~~\n\n* black format all .py files\n* Examine kw-only args for mutable defaults\n* Test for Python 3.7\n\n18.2.0\n~~~~~~\n\n* packaging fixes\n\n\n17.12.0\n~~~~~~~\n\n* graduated to Production/Stable in trove classifiers\n\n* introduced B008\n\n17.4.0\n~~~~~~\n\n* bugfix: Also check async functions for B006 + B902\n\n17.3.0\n~~~~~~\n\n* introduced B903 (patch contributed by Martijn Pieters)\n\n* bugfix: B902 now enforces `cls` for instance methods on metaclasses\n  and `metacls` for class methods on metaclasses\n\n17.2.0\n~~~~~~\n\n* introduced B902\n\n* bugfix: opinionated warnings no longer invisible in Syntastic\n\n* bugfix: opinionated warnings stay visible when --select on the\n  command-line is used with full three-digit error codes\n\n16.12.2\n~~~~~~~\n\n* bugfix: opinionated warnings no longer get enabled when user specifies\n  ``ignore =`` in the configuration.  Now they require explicit\n  selection as documented above also in this case.\n\n16.12.1\n~~~~~~~\n\n* bugfix: B007 no longer crashes on tuple unpacking in for-loops\n\n16.12.0\n~~~~~~~\n\n* introduced B007\n\n* bugfix: remove an extra colon in error formatting that was making Bugbear\n  errors invisible in Syntastic\n\n* marked as \"Beta\" in trove classifiers, it's been used in production\n  for 8+ months\n\n16.11.1\n~~~~~~~\n\n* introduced B005\n\n* introduced B006\n\n* introduced B950\n\n16.11.0\n~~~~~~~\n\n* bugfix: don't raise false positives in B901 on closures within\n  generators\n\n* gracefully fail on Python 2 in setup.py\n\n16.10.0\n~~~~~~~\n\n* introduced B004\n\n* introduced B901, thanks Markus!\n\n* update ``flake8`` constraint to at least 3.0.0\n\n16.9.0\n~~~~~~\n\n* introduced B003\n\n16.7.1\n~~~~~~\n\n* bugfix: don't omit message code in B306's warning\n\n* change dependency on ``pep8`` to dependency on ``pycodestyle``, update\n  ``flake8`` constraint to at least 2.6.2\n\n16.7.0\n~~~~~~\n\n* introduced B306\n\n16.6.1\n~~~~~~\n\n* bugfix: don't crash on files with tuple unpacking in class bodies\n\n16.6.0\n~~~~~~\n\n* introduced B002, B301, B302, B303, B304, and B305\n\n16.4.2\n~~~~~~\n\n* packaging herp derp\n\n16.4.1\n~~~~~~\n\n* bugfix: include tests in the source package (to make ``setup.py test``\n  work for everyone)\n\n* bugfix: explicitly open README.rst in UTF-8 in setup.py for systems\n  with other default encodings\n\n16.4.0\n~~~~~~\n\n* first published version\n\n* date-versioned\n\n\nAuthors\n-------\n\nGlued together by `\u0141ukasz Langa <mailto:lukasz@langa.pl>`_. Multiple\nimprovements by `Markus Unterwaditzer <mailto:markus@unterwaditzer.net>`_,\n`Martijn Pieters <mailto:github.com@zopatista.com>`_,\n`Cooper Lees <mailto:me@cooperlees.com>`_, and `Ryan May <mailto:rmay31@gmail.com>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PyCQA/flake8-bugbear", "keywords": "flake8 bugbear bugs pyflakes pylint linter qa", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-bugbear", "package_url": "https://pypi.org/project/flake8-bugbear/", "platform": "", "project_url": "https://pypi.org/project/flake8-bugbear/", "project_urls": {"Homepage": "https://github.com/PyCQA/flake8-bugbear"}, "release_url": "https://pypi.org/project/flake8-bugbear/20.1.4/", "requires_dist": ["flake8 (>=3.0.0)", "attrs (>=19.2.0)"], "requires_python": ">=3.6", "summary": "A plugin for flake8 finding likely bugs and design problems in your program. Contains warnings that don't belong in pyflakes and pycodestyle.", "version": "20.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/PyCQA/flake8-bugbear\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/PyCQA/flake8-bugbear.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33fc613f02e79daa040e4f9430632d33f6e72a71/68747470733a2f2f7472617669732d63692e6f72672f50794351412f666c616b65382d627567626561722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>A plugin for Flake8 finding likely bugs and design problems in your\nprogram.  Contains warnings that don\u2019t belong in pyflakes and\npycodestyle:</p>\n<pre>bug\u00b7bear  (b\u016dg\u2032b\u00e2r\u2032)\nn.\n1. A cause of fear, anxiety, or irritation: *Overcrowding is often\n   a bugbear for train commuters.*\n2. A difficult or persistent problem: *\"One of the major bugbears of\n   traditional AI is the difficulty of programming computers to\n   recognize that different but similar objects are instances of the\n   same type of thing\" (Jack Copeland).*\n3. A fearsome imaginary creature, especially one evoked to frighten\n   children.\n</pre>\n<p>It is felt that these lints don\u2019t belong in the main Python tools as they\nare very opinionated and do not have a PEP or standard behind them. Due to\n<tt>flake8</tt> being designed to be extensible, the original creators of these lints\nbelieved that a plugin was the best route. This has resulted in better development\nvelocity for contributors and adaptive deployment for <tt>flake8</tt> users.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from <tt>pip</tt> with:</p>\n<pre>pip install flake8-bugbear\n</pre>\n<p>It will then automatically be run as part of <tt>flake8</tt>; you can check it has\nbeen picked up with:</p>\n<pre>$ flake8 --version\n<span class=\"m\">3</span>.5.0 <span class=\"o\">(</span>assertive: <span class=\"m\">1</span>.0.1, flake8-bugbear: <span class=\"m\">18</span>.2.0, flake8-comprehensions: <span class=\"m\">1</span>.4.1, mccabe: <span class=\"m\">0</span>.6.1, pycodestyle: <span class=\"m\">2</span>.3.1, pyflakes: <span class=\"m\">1</span>.6.0<span class=\"o\">)</span> CPython <span class=\"m\">3</span>.7.0 on Darwin\n</pre>\n</div>\n<div id=\"list-of-warnings\">\n<h2>List of warnings</h2>\n<p><strong>B001</strong>: Do not use bare <tt>except:</tt>, it also catches unexpected events\nlike memory errors, interrupts, system exit, and so on.  Prefer <tt>except\nException:</tt>.  If you\u2019re sure what you\u2019re doing, be explicit and write\n<tt>except BaseException:</tt>.  Disable E722 to avoid duplicate warnings.</p>\n<p><strong>B002</strong>: Python does not support the unary prefix increment. Writing\n<tt>++n</tt> is equivalent to <tt><span class=\"pre\">+(+(n))</span></tt>, which equals <tt>n</tt>. You meant <tt>n\n+= 1</tt>.</p>\n<p><strong>B003</strong>: Assigning to <tt>os.environ</tt> doesn\u2019t clear the\nenvironment.  Subprocesses are going to see outdated\nvariables, in disagreement with the current process.  Use\n<tt>os.environ.clear()</tt> or the <tt>env=</tt>  argument to Popen.</p>\n<p><strong>B004</strong>: Using <tt>hasattr(x, '__call__')</tt> to test if <tt>x</tt> is callable\nis unreliable.  If <tt>x</tt> implements custom <tt>__getattr__</tt> or its\n<tt>__call__</tt> is itself not callable, you might get misleading\nresults.  Use <tt>callable(x)</tt> for consistent results.</p>\n<p><strong>B005</strong>: Using <tt>.strip()</tt> with multi-character strings is misleading\nthe reader. It looks like stripping a substring. Move your\ncharacter set to a constant if this is deliberate. Use\n<tt>.replace()</tt> or regular expressions to remove string fragments.</p>\n<p><strong>B006</strong>: Do not use mutable data structures for argument defaults.  They\nare created during function definition time. All calls to the function\nreuse this one instance of that data structure, persisting changes\nbetween them.</p>\n<p><strong>B007</strong>: Loop control variable not used within the loop body.  If this is\nintended, start the name with an underscore.</p>\n<p><strong>B008</strong>: Do not perform function calls in argument defaults.  The call is\nperformed only once at function definition time. All calls to your\nfunction will reuse the result of that definition-time function call.  If\nthis is intended, assign the function call to a module-level variable and\nuse that variable as a default value.</p>\n<p><strong>B009</strong>: Do not call <tt>getattr(x, 'attr')</tt>, instead use normal\nproperty access: <tt>x.attr</tt>. Missing a default to <tt>getattr</tt> will cause\nan <tt>AttributeError</tt> to be raised for non-existent properties. There is\nno additional safety in using <tt>getattr</tt> if you know the attribute name\nahead of time.</p>\n<p><strong>B010</strong>: Do not call <tt>setattr(x, 'attr', val)</tt>, instead use normal\nproperty access: <tt>x.attr = val</tt>. There is no additional safety in\nusing <tt>setattr</tt> if you know the attribute name ahead of time.</p>\n<p><strong>B011</strong>: Do not call <cite>assert False</cite> since <cite>python -O</cite> removes these calls.\nInstead callers should <cite>raise AssertionError()</cite>.</p>\n<p><strong>B012</strong>: Use of <cite>break</cite>, <cite>continue</cite> or <cite>return</cite> inside <cite>finally</cite> blocks will\nsilence exceptions or override return values from the <cite>try</cite> or <cite>except</cite> blocks.\nTo silence an exception, do it explicitly in the <cite>except</cite> block. To properly use\na <cite>break</cite>, <cite>continue</cite> or <cite>return</cite> refactor your code so these statements are not\nin the <cite>finally</cite> block.</p>\n<p><strong>B013</strong>: A length-one tuple literal is redundant.  Write <cite>except SomeError:</cite>\ninstead of <cite>except (SomeError,):</cite>.</p>\n<p><strong>B014</strong>: Redundant exception types in <cite>except (Exception, TypeError):</cite>.\nWrite <cite>except Exception:</cite>, which catches exactly the same exceptions.</p>\n<div id=\"python-3-compatibility-warnings\">\n<h3>Python 3 compatibility warnings</h3>\n<p>These have higher risk of false positives but discover regressions that\nare dangerous to slip through when test coverage is not great. Let me\nknow if a popular library is triggering any of the following warnings\nfor valid code.</p>\n<p><strong>B301</strong>: Python 3 does not include <tt>.iter*</tt> methods on dictionaries.\nThe default behavior is to return iterables. Simply remove the <tt>iter</tt>\nprefix from the method.  For Python 2 compatibility, also prefer the\nPython 3 equivalent if you expect that the size of the dict to be small\nand bounded. The performance regression on Python 2 will be negligible\nand the code is going to be the clearest.  Alternatively, use\n<tt>six.iter*</tt> or <tt>future.utils.iter*</tt>.</p>\n<p><strong>B302</strong>: Python 3 does not include <tt>.view*</tt> methods on dictionaries.\nThe default behavior is to return viewables. Simply remove the <tt>view</tt>\nprefix from the method.  For Python 2 compatibility, also prefer the\nPython 3 equivalent if you expect that the size of the dict to be small\nand bounded. The performance regression on Python 2 will be negligible\nand the code is going to be the clearest.  Alternatively, use\n<tt>six.view*</tt> or <tt>future.utils.view*</tt>.</p>\n<p><strong>B303</strong>: The <tt>__metaclass__</tt> attribute on a class definition does\nnothing on Python 3. Use <tt>class MyClass(BaseClass, <span class=\"pre\">metaclass=...)</span></tt>.\nFor Python 2 compatibility, use <tt>six.add_metaclass</tt>.</p>\n<p><strong>B304</strong>: <tt>sys.maxint</tt> is not a thing on Python 3. Use\n<tt>sys.maxsize</tt>.</p>\n<p><strong>B305</strong>: <tt>.next()</tt> is not a thing on Python 3. Use the <tt>next()</tt>\nbuiltin. For Python 2 compatibility, use <tt>six.next()</tt>.</p>\n<p><strong>B306</strong>: <tt>BaseException.message</tt> has been deprecated as of Python 2.6\nand is removed in Python 3. Use <tt>str(e)</tt> to access the user-readable\nmessage. Use <tt>e.args</tt> to access arguments passed to the exception.</p>\n</div>\n<div id=\"opinionated-warnings\">\n<h3>Opinionated warnings</h3>\n<p>The following warnings are disabled by default because they are\ncontroversial.  They may or may not apply to you, enable them explicitly\nin your configuration if you find them useful.  Read below on how to\nenable.</p>\n<p><strong>B901</strong>: Using <tt>return x</tt> in a generator function used to be\nsyntactically invalid in Python 2. In Python 3 <tt>return x</tt> can be used\nin a generator as a return value in conjunction with <tt>yield from</tt>.\nUsers coming from Python 2 may expect the old behavior which might lead\nto bugs.  Use native <tt>async def</tt> coroutines or mark intentional\n<tt>return x</tt> usage with <tt># noqa</tt> on the same line.</p>\n<p><strong>B902</strong>: Invalid first argument used for method. Use <tt>self</tt> for\ninstance methods, and <tt>cls</tt> for class methods (which includes <tt>__new__</tt>\nand <tt>__init_subclass__</tt>) or instance methods of metaclasses (detected as\nclasses directly inheriting from <tt>type</tt>).</p>\n<p><strong>B903</strong>: Use <tt>collections.namedtuple</tt> (or <tt>typing.NamedTuple</tt>) for\ndata classes that only set attributes in an <tt>__init__</tt> method, and do\nnothing else. If the attributes should be mutable, define the attributes\nin <tt>__slots__</tt> to save per-instance memory and to prevent accidentally\ncreating additional attributes on instances.</p>\n<p><strong>B950</strong>: Line too long. This is a pragmatic equivalent of\n<tt>pycodestyle</tt>\u2019s E501: it considers \u201cmax-line-length\u201d but only triggers\nwhen the value has been exceeded by <strong>more than 10%</strong>. You will no\nlonger be forced to reformat code due to the closing parenthesis being\none character too far to satisfy the linter. At the same time, if you do\nsignificantly violate the line length, you will receive a message that\nstates what the actual limit is. This is inspired by Raymond Hettinger\u2019s\n<a href=\"https://www.youtube.com/watch?v=wf-BqAjZb8M\" rel=\"nofollow\">\u201cBeyond PEP 8\u201d talk</a> and\nhighway patrol not stopping you if you drive &lt; 5mph too fast. Disable\nE501 to avoid duplicate warnings.</p>\n</div>\n<div id=\"how-to-enable-opinionated-warnings\">\n<h3>How to enable opinionated warnings</h3>\n<p>To enable these checks, specify a <tt><span class=\"pre\">--select</span></tt> command-line option or\n<tt>select=</tt> option in your config file.  As of Flake8 3.0, this option\nis a whitelist (checks not listed are being implicitly disabled), so you\nhave to explicitly specify all checks you want enabled. For example:</p>\n<pre>[flake8]\nmax-line-length = 80\nmax-complexity = 12\n...\nignore = E501\nselect = C,E,F,W,B,B901\n</pre>\n<p>Note that we\u2019re enabling the complexity checks, the PEP8 <tt>pycodestyle</tt>\nerrors and warnings, the pyflakes fatals and all default Bugbear checks.\nFinally, we\u2019re also specifying B901 as a check that we want enabled.\nSome checks might need other flake8 checks disabled - e.g. E501 must be\ndisabled for B950 to be hit.</p>\n<p>If you\u2019d like all optional warnings to be enabled for you (future proof\nyour config!), say <tt>B9</tt> instead of <tt>B901</tt>. You will need Flake8 3.2+\nfor this feature.</p>\n<p>Note that <tt>pycodestyle</tt> also has a bunch of warnings that are disabled\nby default.  Those get enabled as soon as there is an <tt>ignore =</tt> line\nin your configuration.  I think this behavior is surprising so Bugbear\u2019s\nopinionated warnings require explicit selection.</p>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Just run:</p>\n<pre>python tests/test_bugbear.py\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n<div id=\"change-log\">\n<h2>Change Log</h2>\n<div id=\"id1\">\n<h3>20.1.4</h3>\n<ul>\n<li>Ignore keywords for B009/B010</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>20.1.3</h3>\n<ul>\n<li>Silence B009/B010 for non-identifiers</li>\n<li>State an ignore might be needed for optional B9x checks</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>20.1.2</h3>\n<ul>\n<li>Fix error on attributes-of-attributes in <cite>except (\u2026):</cite> clauses</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>20.1.1</h3>\n<ul>\n<li>Allow continue/break within loops in finally clauses for B012</li>\n<li>For B001, also check for <tt>except ():</tt></li>\n<li>Introduce B013 and B014 to check tuples in <tt>except <span class=\"pre\">(...,</span> ):</tt> statements</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>20.1.0</h3>\n<ul>\n<li>Warn about continue/return/break in finally block (#100)</li>\n<li>Removed a colon from the descriptive message in B008. (#96)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>19.8.0</h3>\n<ul>\n<li>Fix .travis.yml syntax + add Python 3.8 + nightly tests</li>\n<li>Fix <cite>black</cite> formatting + enforce via CI</li>\n<li>Make B901 not apply to __await__ methods</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>19.3.0</h3>\n<ul>\n<li>allow \u2018mcs\u2019 for metaclass classmethod first arg (PyCharm default)</li>\n<li>Introduce B011</li>\n<li>Introduce B009 and B010</li>\n<li>Exclude immutable calls like tuple() and frozenset() from B008</li>\n<li>For B902, the first argument for metaclass class methods can be\n\u201cmcs\u201d, matching the name preferred by PyCharm.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>18.8.0</h3>\n<ul>\n<li>black format all .py files</li>\n<li>Examine kw-only args for mutable defaults</li>\n<li>Test for Python 3.7</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>18.2.0</h3>\n<ul>\n<li>packaging fixes</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>17.12.0</h3>\n<ul>\n<li>graduated to Production/Stable in trove classifiers</li>\n<li>introduced B008</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>17.4.0</h3>\n<ul>\n<li>bugfix: Also check async functions for B006 + B902</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>17.3.0</h3>\n<ul>\n<li>introduced B903 (patch contributed by Martijn Pieters)</li>\n<li>bugfix: B902 now enforces <cite>cls</cite> for instance methods on metaclasses\nand <cite>metacls</cite> for class methods on metaclasses</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>17.2.0</h3>\n<ul>\n<li>introduced B902</li>\n<li>bugfix: opinionated warnings no longer invisible in Syntastic</li>\n<li>bugfix: opinionated warnings stay visible when \u2013select on the\ncommand-line is used with full three-digit error codes</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>16.12.2</h3>\n<ul>\n<li>bugfix: opinionated warnings no longer get enabled when user specifies\n<tt>ignore =</tt> in the configuration.  Now they require explicit\nselection as documented above also in this case.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>16.12.1</h3>\n<ul>\n<li>bugfix: B007 no longer crashes on tuple unpacking in for-loops</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>16.12.0</h3>\n<ul>\n<li>introduced B007</li>\n<li>bugfix: remove an extra colon in error formatting that was making Bugbear\nerrors invisible in Syntastic</li>\n<li>marked as \u201cBeta\u201d in trove classifiers, it\u2019s been used in production\nfor 8+ months</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>16.11.1</h3>\n<ul>\n<li>introduced B005</li>\n<li>introduced B006</li>\n<li>introduced B950</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>16.11.0</h3>\n<ul>\n<li>bugfix: don\u2019t raise false positives in B901 on closures within\ngenerators</li>\n<li>gracefully fail on Python 2 in setup.py</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>16.10.0</h3>\n<ul>\n<li>introduced B004</li>\n<li>introduced B901, thanks Markus!</li>\n<li>update <tt>flake8</tt> constraint to at least 3.0.0</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>16.9.0</h3>\n<ul>\n<li>introduced B003</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>16.7.1</h3>\n<ul>\n<li>bugfix: don\u2019t omit message code in B306\u2019s warning</li>\n<li>change dependency on <tt>pep8</tt> to dependency on <tt>pycodestyle</tt>, update\n<tt>flake8</tt> constraint to at least 2.6.2</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>16.7.0</h3>\n<ul>\n<li>introduced B306</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>16.6.1</h3>\n<ul>\n<li>bugfix: don\u2019t crash on files with tuple unpacking in class bodies</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>16.6.0</h3>\n<ul>\n<li>introduced B002, B301, B302, B303, B304, and B305</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>16.4.2</h3>\n<ul>\n<li>packaging herp derp</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>16.4.1</h3>\n<ul>\n<li>bugfix: include tests in the source package (to make <tt>setup.py test</tt>\nwork for everyone)</li>\n<li>bugfix: explicitly open README.rst in UTF-8 in setup.py for systems\nwith other default encodings</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>16.4.0</h3>\n<ul>\n<li>first published version</li>\n<li>date-versioned</li>\n</ul>\n</div>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Glued together by <a href=\"mailto:lukasz%40langa.pl\">\u0141ukasz Langa</a>. Multiple\nimprovements by <a href=\"mailto:markus%40unterwaditzer.net\">Markus Unterwaditzer</a>,\n<a href=\"mailto:github.com%40zopatista.com\">Martijn Pieters</a>,\n<a href=\"mailto:me%40cooperlees.com\">Cooper Lees</a>, and <a href=\"mailto:rmay31%40gmail.com\">Ryan May</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6552937, "releases": {"16.10.0": [{"comment_text": "", "digests": {"md5": "1d2811ab497f03800cebd51ae6d464a2", "sha256": "b98687a43fe1dbfed292af5699eebdb0107342a8add35d950e364214422d3ba2"}, "downloads": -1, "filename": "flake8-bugbear-16.10.0.tar.gz", "has_sig": false, "md5_digest": "1d2811ab497f03800cebd51ae6d464a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9593, "upload_time": "2016-10-03T22:15:28", "upload_time_iso_8601": "2016-10-03T22:15:28.013741Z", "url": "https://files.pythonhosted.org/packages/f0/cd/927ab5ee575eac7206e4304e01563a3ce0c3f6332b40541bf21b106474fb/flake8-bugbear-16.10.0.tar.gz", "yanked": false}], "16.10.1": [{"comment_text": "", "digests": {"md5": "744a96303eadda46b525ede957e66714", "sha256": "3d75b242981dba4fee4584b5f54e2e3ea1f846f3cfe11dfbaa9ce0b2ad2dfb23"}, "downloads": -1, "filename": "flake8-bugbear-16.10.1.tar.gz", "has_sig": false, "md5_digest": "744a96303eadda46b525ede957e66714", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9663, "upload_time": "2016-10-04T20:23:54", "upload_time_iso_8601": "2016-10-04T20:23:54.515885Z", "url": "https://files.pythonhosted.org/packages/18/08/b397ae2f961649e625e45905c4ba3abd252fc4f618109c997b30286d7f3b/flake8-bugbear-16.10.1.tar.gz", "yanked": false}], "16.11.0": [{"comment_text": "", "digests": {"md5": "aca30a55b1e54259ee678e22999a073f", "sha256": "b161243aa532ec2e2db53e53b618fb9ceab4919543bf4b3c92dc21fb28d22def"}, "downloads": -1, "filename": "flake8-bugbear-16.11.0.tar.gz", "has_sig": false, "md5_digest": "aca30a55b1e54259ee678e22999a073f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9697, "upload_time": "2016-11-08T16:55:12", "upload_time_iso_8601": "2016-11-08T16:55:12.283505Z", "url": "https://files.pythonhosted.org/packages/18/48/456c1743e2bd7b7934ced5047b75cf0ccd1c785ac5924b4898b947685b1a/flake8-bugbear-16.11.0.tar.gz", "yanked": false}], "16.11.1": [{"comment_text": "", "digests": {"md5": "0a41bc76a301db2d28db9c0d44299970", "sha256": "db9435cb9fa2f7c73fc11c42266a9de3ca0dfea3a81fe539efc1fe56945f9f4d"}, "downloads": -1, "filename": "flake8-bugbear-16.11.1.tar.gz", "has_sig": false, "md5_digest": "0a41bc76a301db2d28db9c0d44299970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11465, "upload_time": "2016-11-27T09:49:21", "upload_time_iso_8601": "2016-11-27T09:49:21.549582Z", "url": "https://files.pythonhosted.org/packages/17/fd/d07cb234b4e591e481e21a338f34e9dc8522cc2871de9ae7053d47bb23d0/flake8-bugbear-16.11.1.tar.gz", "yanked": false}], "16.12.0": [{"comment_text": "", "digests": {"md5": "000bf0c6793110a76f6f700ae5882d1b", "sha256": "bd2d101c406c56487be240035042a85642991903a3acb666b43996f225be8f46"}, "downloads": -1, "filename": "flake8_bugbear-16.12.0-py35.py36-none-any.whl", "has_sig": false, "md5_digest": "000bf0c6793110a76f6f700ae5882d1b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 14278, "upload_time": "2016-12-13T06:25:04", "upload_time_iso_8601": "2016-12-13T06:25:04.932774Z", "url": "https://files.pythonhosted.org/packages/51/4f/7615e8a0372a0b069c3d7e3ef394e568e170941432d50ac67a5720453759/flake8_bugbear-16.12.0-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4012223781178f84950abeb5e84e1bdc", "sha256": "af0096b22c846396b257daf0df854794cbf3340bcd09f5466a16ce7b506b39a5"}, "downloads": -1, "filename": "flake8-bugbear-16.12.0.tar.gz", "has_sig": false, "md5_digest": "4012223781178f84950abeb5e84e1bdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12259, "upload_time": "2016-12-13T06:24:56", "upload_time_iso_8601": "2016-12-13T06:24:56.890158Z", "url": "https://files.pythonhosted.org/packages/9c/47/e391a0d4f75d0656b189b6ac3319976640f72f61862232661e9996e306d7/flake8-bugbear-16.12.0.tar.gz", "yanked": false}], "16.12.1": [{"comment_text": "", "digests": {"md5": "96f2f8525430493042a4de27ce2352bc", "sha256": "6e63200df3120a6b94be271d3a3cbb9fa5f18e0ad6b5cb7337644f0aa4c5d0bc"}, "downloads": -1, "filename": "flake8_bugbear-16.12.1-py35.py36-none-any.whl", "has_sig": false, "md5_digest": "96f2f8525430493042a4de27ce2352bc", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 14419, "upload_time": "2016-12-13T22:34:41", "upload_time_iso_8601": "2016-12-13T22:34:41.294536Z", "url": "https://files.pythonhosted.org/packages/13/0e/3416f374882339801698c39f6514f5a3a0f84e2504f3222ed4e831a5969b/flake8_bugbear-16.12.1-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1c2d9de9c28257873292c88ec9357e2", "sha256": "d6c90cd0e803c62c77ceca168fe1439c775e2f3a7ecfd2ed513be8886f681b1f"}, "downloads": -1, "filename": "flake8-bugbear-16.12.1.tar.gz", "has_sig": false, "md5_digest": "d1c2d9de9c28257873292c88ec9357e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12647, "upload_time": "2016-12-13T22:34:48", "upload_time_iso_8601": "2016-12-13T22:34:48.523077Z", "url": "https://files.pythonhosted.org/packages/6e/02/cb74acaaec54233debdfd6b4404bf01b8c6d1e11b48c45d42f8448e5e4c2/flake8-bugbear-16.12.1.tar.gz", "yanked": false}], "16.12.2": [{"comment_text": "", "digests": {"md5": "0b06ff9fe526bb6658d231d9bbcf7422", "sha256": "4120e11efbd64e9a0f46cd7d8e7954e85da8e86e2d3099bcbc798e739abf8dcb"}, "downloads": -1, "filename": "flake8_bugbear-16.12.2-py3.5.egg", "has_sig": false, "md5_digest": "0b06ff9fe526bb6658d231d9bbcf7422", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 17140, "upload_time": "2016-12-20T00:16:48", "upload_time_iso_8601": "2016-12-20T00:16:48.488288Z", "url": "https://files.pythonhosted.org/packages/77/a4/97d43ec710f92ea25c843f7429278c92cfa72a647dc263bc7ca970f3a568/flake8_bugbear-16.12.2-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1dbfafa372b9aef1bb506dc25ecf1139", "sha256": "84a5c86421a846c317a54034c371ee18717a741fbba1c1495651681c1f380626"}, "downloads": -1, "filename": "flake8_bugbear-16.12.2-py35.py36-none-any.whl", "has_sig": false, "md5_digest": "1dbfafa372b9aef1bb506dc25ecf1139", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 15352, "upload_time": "2016-12-20T00:17:22", "upload_time_iso_8601": "2016-12-20T00:17:22.943417Z", "url": "https://files.pythonhosted.org/packages/a0/e0/49ba616c02a7721666989dbb9332de3baac6310ac12fa912410702445003/flake8_bugbear-16.12.2-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "211541203171665d825b7c1b6e622441", "sha256": "d302b15daad307c02bee22b80fcf855785747a88a350c29af121fb33e60d6eb2"}, "downloads": -1, "filename": "flake8-bugbear-16.12.2.tar.gz", "has_sig": false, "md5_digest": "211541203171665d825b7c1b6e622441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13398, "upload_time": "2016-12-20T00:16:38", "upload_time_iso_8601": "2016-12-20T00:16:38.527361Z", "url": "https://files.pythonhosted.org/packages/66/3e/390877ea6623f2623a30207241c9512692158dadc10bc29a1cb66b73858d/flake8-bugbear-16.12.2.tar.gz", "yanked": false}], "16.4.0": [{"comment_text": "", "digests": {"md5": "2b759dde842d90452dc6c9f0dee281c4", "sha256": "f2f7bb101875a6964f173691b8e96da29020a6fe3d613b06364b78d906e686bd"}, "downloads": -1, "filename": "flake8-bugbear-16.4.0.tar.gz", "has_sig": false, "md5_digest": "2b759dde842d90452dc6c9f0dee281c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3255, "upload_time": "2016-04-13T01:32:40", "upload_time_iso_8601": "2016-04-13T01:32:40.740204Z", "url": "https://files.pythonhosted.org/packages/1d/b0/719f4320ef805241d2c9de72d329630f79235048d6cff97f7447e382f14a/flake8-bugbear-16.4.0.tar.gz", "yanked": false}], "16.4.2": [{"comment_text": "", "digests": {"md5": "8c6be08b3ed839ebee1e8b3ccb4cec8b", "sha256": "4b610c9da396368b4672642b92587f2f988ce130000bad52e8fdea0cb6eac22b"}, "downloads": -1, "filename": "flake8-bugbear-16.4.2.tar.gz", "has_sig": false, "md5_digest": "8c6be08b3ed839ebee1e8b3ccb4cec8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4684, "upload_time": "2016-05-06T21:46:13", "upload_time_iso_8601": "2016-05-06T21:46:13.903415Z", "url": "https://files.pythonhosted.org/packages/8e/41/17c5081d0c86395c4073433f96da707681ededd1615bb21cbf5bbfc772fb/flake8-bugbear-16.4.2.tar.gz", "yanked": false}], "16.6.0": [{"comment_text": "", "digests": {"md5": "8cb7621ba78b92d9c7cfc5c5bbb6b11d", "sha256": "0162463cb45ad462fc640b5cca1cc7c0741b4d2ecc14394f08d223fd654085db"}, "downloads": -1, "filename": "flake8-bugbear-16.6.0.tar.gz", "has_sig": false, "md5_digest": "8cb7621ba78b92d9c7cfc5c5bbb6b11d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6887, "upload_time": "2016-06-08T21:29:33", "upload_time_iso_8601": "2016-06-08T21:29:33.492270Z", "url": "https://files.pythonhosted.org/packages/a0/75/cf014f183c7b4ef3c46b092f2accbd12f2ddb92120ca0d51e46c3e840e91/flake8-bugbear-16.6.0.tar.gz", "yanked": false}], "16.6.1": [{"comment_text": "", "digests": {"md5": "b3958a3a2d17fa9c99cddda462252cf8", "sha256": "a6bd88fc93f05ebbb8c9a1f4a030ad507f9c34d93fd241684290c1b5b52f074e"}, "downloads": -1, "filename": "flake8-bugbear-16.6.1.tar.gz", "has_sig": false, "md5_digest": "b3958a3a2d17fa9c99cddda462252cf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7083, "upload_time": "2016-06-09T22:43:22", "upload_time_iso_8601": "2016-06-09T22:43:22.865651Z", "url": "https://files.pythonhosted.org/packages/fc/f2/ae9826df3ed1f67cce69318a789dd8286d7d4c39d686d75d33fa75c877ed/flake8-bugbear-16.6.1.tar.gz", "yanked": false}], "16.7.0": [{"comment_text": "", "digests": {"md5": "b479eb6c6baef7de88481537f8e31039", "sha256": "7910669f0517b7d08e4af018f06e46292a80d07509488f0f103a99552b091a51"}, "downloads": -1, "filename": "flake8-bugbear-16.7.0.tar.gz", "has_sig": false, "md5_digest": "b479eb6c6baef7de88481537f8e31039", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7282, "upload_time": "2016-07-01T22:32:35", "upload_time_iso_8601": "2016-07-01T22:32:35.496469Z", "url": "https://files.pythonhosted.org/packages/0a/89/8289e36c4223e55ad0bacad7cc31216d22fd1041f92c594636200423b7e7/flake8-bugbear-16.7.0.tar.gz", "yanked": false}], "16.7.1": [{"comment_text": "", "digests": {"md5": "bea5e347553776448757b88cd93a7208", "sha256": "3c1646dad69d8c884a0ea290f22cd805dda0fde1056cf32b2bbf45137bbd5362"}, "downloads": -1, "filename": "flake8-bugbear-16.7.1.tar.gz", "has_sig": false, "md5_digest": "bea5e347553776448757b88cd93a7208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7453, "upload_time": "2016-07-01T22:48:27", "upload_time_iso_8601": "2016-07-01T22:48:27.688546Z", "url": "https://files.pythonhosted.org/packages/16/c1/741f60f541dcc2c54fdddbb5b0aa9f9081821bad347a03e95aff76cece3f/flake8-bugbear-16.7.1.tar.gz", "yanked": false}], "16.9.0": [{"comment_text": "", "digests": {"md5": "1cc07e8336855ec64cca97261b249259", "sha256": "4cdc800e312d0ddb9bab5c3876a9038fdc21d5f5d2ff6453eaa85c30d5f25bf0"}, "downloads": -1, "filename": "flake8-bugbear-16.9.0.tar.gz", "has_sig": false, "md5_digest": "1cc07e8336855ec64cca97261b249259", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7838, "upload_time": "2016-09-01T01:20:32", "upload_time_iso_8601": "2016-09-01T01:20:32.905622Z", "url": "https://files.pythonhosted.org/packages/92/9a/209cc38a01ba71cf6e0f971511be10bd9b6866f7dfead4dcc9474bb08a4f/flake8-bugbear-16.9.0.tar.gz", "yanked": false}], "17.12.0": [{"comment_text": "", "digests": {"md5": "579bdf3ed88bbfaff4d6a64bc5fbeff5", "sha256": "9ac9952cb5838dc26408460cb9d1fbfefbd19cb5c51bb66c6b6c664158f4cb7c"}, "downloads": -1, "filename": "flake8_bugbear-17.12.0-py35.py36-none-any.whl", "has_sig": true, "md5_digest": "579bdf3ed88bbfaff4d6a64bc5fbeff5", "packagetype": "bdist_wheel", "python_version": "py35.py36", "requires_python": null, "size": 18670, "upload_time": "2017-12-12T17:19:15", "upload_time_iso_8601": "2017-12-12T17:19:15.428447Z", "url": "https://files.pythonhosted.org/packages/35/65/74fb4636dc299ba8d6392457123942dc8d081fd17872ea35a43726438a15/flake8_bugbear-17.12.0-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21af18ecf0f3212fe1019a2bfa005eb6", "sha256": "5cef9246d7f6721b8ccc6eeb78cf26dae303097e31da0f307a60e516a23ecd72"}, "downloads": -1, "filename": "flake8-bugbear-17.12.0.tar.gz", "has_sig": true, "md5_digest": "21af18ecf0f3212fe1019a2bfa005eb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20778, "upload_time": "2017-12-12T17:19:17", "upload_time_iso_8601": "2017-12-12T17:19:17.742482Z", "url": "https://files.pythonhosted.org/packages/dd/4f/da9edb9df6667f33ebe009ad9352189916e2bd350622d9f2a79258417d18/flake8-bugbear-17.12.0.tar.gz", "yanked": false}], "17.2.0": [{"comment_text": "", "digests": {"md5": "dc91241669f60ca0fe012e0b4b7cc53c", "sha256": "78fc88b85325657266f32594a405c036e49f665b98db710f0ebf4ed54b1b163a"}, "downloads": -1, "filename": "flake8_bugbear-17.2.0-py35.py36-none-any.whl", "has_sig": false, "md5_digest": "dc91241669f60ca0fe012e0b4b7cc53c", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 16204, "upload_time": "2017-02-16T02:59:43", "upload_time_iso_8601": "2017-02-16T02:59:43.457922Z", "url": "https://files.pythonhosted.org/packages/dc/28/c6caa87194581ee39e093a22420aa64e5833c57769e14f0fff912bbeb152/flake8_bugbear-17.2.0-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ec1efc830f9043216609efae23a8cd4", "sha256": "67213b9908c405023fb31559659f75826a9f241cf14b9c6d33b4762760361cb7"}, "downloads": -1, "filename": "flake8-bugbear-17.2.0.tar.gz", "has_sig": false, "md5_digest": "8ec1efc830f9043216609efae23a8cd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14587, "upload_time": "2017-02-16T02:59:24", "upload_time_iso_8601": "2017-02-16T02:59:24.459810Z", "url": "https://files.pythonhosted.org/packages/3b/3b/f41def44ca78bd934eb3abb78c11cd7d79297bf48f8339875d0c226c68b4/flake8-bugbear-17.2.0.tar.gz", "yanked": false}], "17.3.0": [{"comment_text": "", "digests": {"md5": "9854b9cb2143ddf8e66e5b08c9c4678a", "sha256": "2eda82856c18035b4b018044eccc5d5c8efa5a504c2289d3904b582e9e9303a0"}, "downloads": -1, "filename": "flake8_bugbear-17.3.0-py35.py36-none-any.whl", "has_sig": false, "md5_digest": "9854b9cb2143ddf8e66e5b08c9c4678a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 17282, "upload_time": "2017-03-02T02:53:46", "upload_time_iso_8601": "2017-03-02T02:53:46.871065Z", "url": "https://files.pythonhosted.org/packages/74/e7/f6cad2cfc92587c13ca87a25865047b67c0055b3cac3e7a77ab8a75fa815/flake8_bugbear-17.3.0-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "518b6a8ec5afdf6705659705eeed898c", "sha256": "77c9c6abbe4ab22d1c0087ee5a2aa1a541a5525089704edd0e4680538ac431f2"}, "downloads": -1, "filename": "flake8-bugbear-17.3.0.tar.gz", "has_sig": false, "md5_digest": "518b6a8ec5afdf6705659705eeed898c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15682, "upload_time": "2017-03-02T02:53:38", "upload_time_iso_8601": "2017-03-02T02:53:38.101764Z", "url": "https://files.pythonhosted.org/packages/e5/22/9ce29d36621309756329aa47a1c603778889784b33ac6284b28091457520/flake8-bugbear-17.3.0.tar.gz", "yanked": false}], "17.4.0": [{"comment_text": "", "digests": {"md5": "2c1c9c26bb1b125295af6545c141068c", "sha256": "7490f848130771d83caa63b54080cbb8c04ccd22d647b9daaf87e7bafc3ce9c9"}, "downloads": -1, "filename": "flake8_bugbear-17.4.0-py35.py36-none-any.whl", "has_sig": true, "md5_digest": "2c1c9c26bb1b125295af6545c141068c", "packagetype": "bdist_wheel", "python_version": "py35.py36", "requires_python": null, "size": 17383, "upload_time": "2017-04-14T17:38:24", "upload_time_iso_8601": "2017-04-14T17:38:24.581626Z", "url": "https://files.pythonhosted.org/packages/63/3a/cea3fea5c3c51ef4540d08e91c6d2261e1ebdd854b0a2356769624c0701b/flake8_bugbear-17.4.0-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f543d716ce11914390e8ef4aca932d83", "sha256": "f459d93951b187aee9e584c7fa24684a9b8485f46c53cfbce2b7be7313a6d733"}, "downloads": -1, "filename": "flake8-bugbear-17.4.0.tar.gz", "has_sig": true, "md5_digest": "f543d716ce11914390e8ef4aca932d83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15777, "upload_time": "2017-04-14T17:38:27", "upload_time_iso_8601": "2017-04-14T17:38:27.971575Z", "url": "https://files.pythonhosted.org/packages/f2/00/aa7acb3e2d20ffae986d35dad9d4d403cc1e1f68ad1ee5b45034ce2dbc76/flake8-bugbear-17.4.0.tar.gz", "yanked": false}], "18.2.0": [{"comment_text": "", "digests": {"md5": "9f7cfe9806b935d11020347839741080", "sha256": "541746f0f3b2f1a8d7278e1d2d218df298996b60b02677708560db7c7e620e3b"}, "downloads": -1, "filename": "flake8_bugbear-18.2.0-py35.py36-none-any.whl", "has_sig": true, "md5_digest": "9f7cfe9806b935d11020347839741080", "packagetype": "bdist_wheel", "python_version": "py35.py36", "requires_python": ">=3.5", "size": 18727, "upload_time": "2018-02-05T13:14:52", "upload_time_iso_8601": "2018-02-05T13:14:52.013005Z", "url": "https://files.pythonhosted.org/packages/3d/d0/c7d82ee3d27052116b34d4d1068e342f6a6b3599245b25a595d08426e5ee/flake8_bugbear-18.2.0-py35.py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a9921a73bffb9a76976860fbd34c5e7", "sha256": "5f14a99d458e29cb92be9079c970030e0dd398b2decb179d76d39a5266ea1578"}, "downloads": -1, "filename": "flake8-bugbear-18.2.0.tar.gz", "has_sig": true, "md5_digest": "6a9921a73bffb9a76976860fbd34c5e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21550, "upload_time": "2018-02-05T13:14:55", "upload_time_iso_8601": "2018-02-05T13:14:55.894188Z", "url": "https://files.pythonhosted.org/packages/dd/57/32d9d54aa1236e300928d04a360983c3dca143be6a5c25800752e5094037/flake8-bugbear-18.2.0.tar.gz", "yanked": false}], "18.8.0": [{"comment_text": "", "digests": {"md5": "a54509686753c3e0068bf56e76fadcd3", "sha256": "07b6e769d7f4e168d590f7088eae40f6ddd9fa4952bed31602def65842682c83"}, "downloads": -1, "filename": "flake8_bugbear-18.8.0-py35.py36.py37-none-any.whl", "has_sig": false, "md5_digest": "a54509686753c3e0068bf56e76fadcd3", "packagetype": "bdist_wheel", "python_version": "py35.py36.py37", "requires_python": ">=3.5", "size": 13188, "upload_time": "2018-08-13T22:15:54", "upload_time_iso_8601": "2018-08-13T22:15:54.029854Z", "url": "https://files.pythonhosted.org/packages/e6/ee/89c141cbbab3fe6dc3776636a41cc4f756e7140142d526c2f99ab8ca2f1c/flake8_bugbear-18.8.0-py35.py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de717e0f8040e1f95d2afde3957444fb", "sha256": "0ccf56975f4db1d69dc1cf3598c99d768ebf95d0cad27d76087954aa399b515a"}, "downloads": -1, "filename": "flake8-bugbear-18.8.0.tar.gz", "has_sig": false, "md5_digest": "de717e0f8040e1f95d2afde3957444fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21951, "upload_time": "2018-08-13T22:16:05", "upload_time_iso_8601": "2018-08-13T22:16:05.885629Z", "url": "https://files.pythonhosted.org/packages/94/9f/cbc86f7776d1148630827235e39d43d714c7a2dd978ffd817dfac3e79e92/flake8-bugbear-18.8.0.tar.gz", "yanked": false}], "19.3.0": [{"comment_text": "", "digests": {"md5": "d41446bdf91b6e3248dcdbb20ac3b693", "sha256": "fef9c9826d14ec23187ae1edeb3c6513c4e46bf0e70d86bac38f7d9aabae113d"}, "downloads": -1, "filename": "flake8_bugbear-19.3.0-py35.py36.py37-none-any.whl", "has_sig": false, "md5_digest": "d41446bdf91b6e3248dcdbb20ac3b693", "packagetype": "bdist_wheel", "python_version": "py35.py36.py37", "requires_python": ">=3.5", "size": 13790, "upload_time": "2019-03-28T17:10:26", "upload_time_iso_8601": "2019-03-28T17:10:26.896857Z", "url": "https://files.pythonhosted.org/packages/90/70/f2a84fd1f8015630a1832f797143860a2f5f3f265aabde97e84bd9015539/flake8_bugbear-19.3.0-py35.py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98b3b558999cd42418823e8fa39b948a", "sha256": "5070774b668be92c4312e5ca82748ddf4ecaa7a24ff062662681bb745c7896eb"}, "downloads": -1, "filename": "flake8-bugbear-19.3.0.tar.gz", "has_sig": false, "md5_digest": "98b3b558999cd42418823e8fa39b948a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 22624, "upload_time": "2019-03-28T17:10:40", "upload_time_iso_8601": "2019-03-28T17:10:40.135180Z", "url": "https://files.pythonhosted.org/packages/ed/da/2f1385b96dcf5eb909279b21f1a88d255d9a2295285e8daece67a016e98a/flake8-bugbear-19.3.0.tar.gz", "yanked": false}], "19.8.0": [{"comment_text": "", "digests": {"md5": "087bce7464ed41c8d52ab4ab7a55d686", "sha256": "ded4d282778969b5ab5530ceba7aa1a9f1b86fa7618fc96a19a1d512331640f8"}, "downloads": -1, "filename": "flake8_bugbear-19.8.0-py35.py36.py37-none-any.whl", "has_sig": false, "md5_digest": "087bce7464ed41c8d52ab4ab7a55d686", "packagetype": "bdist_wheel", "python_version": "py35.py36.py37", "requires_python": ">=3.5", "size": 14012, "upload_time": "2019-08-12T04:20:54", "upload_time_iso_8601": "2019-08-12T04:20:54.392716Z", "url": "https://files.pythonhosted.org/packages/9f/f8/170861859fb8ae97923b4fc28501dd25209925e25face836562d3e3f5ea2/flake8_bugbear-19.8.0-py35.py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39251f96f2e31155d25a8fe222c2e7e0", "sha256": "d8c466ea79d5020cb20bf9f11cf349026e09517a42264f313d3f6fddb83e0571"}, "downloads": -1, "filename": "flake8-bugbear-19.8.0.tar.gz", "has_sig": false, "md5_digest": "39251f96f2e31155d25a8fe222c2e7e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 22948, "upload_time": "2019-08-12T04:21:04", "upload_time_iso_8601": "2019-08-12T04:21:04.807370Z", "url": "https://files.pythonhosted.org/packages/a3/5b/360ab3308b5aa448fb0d44c26b07725f5a9d0ecc5b539a733efe711414f3/flake8-bugbear-19.8.0.tar.gz", "yanked": false}], "20.1.0": [{"comment_text": "", "digests": {"md5": "8f93ccf4acf276ca4b3e88098f5fdcdb", "sha256": "1bb5683b74ab86084c856153804fd7066e9d409fb507efaad6adedc1ff052de5"}, "downloads": -1, "filename": "flake8_bugbear-20.1.0-py36.py37.py38-none-any.whl", "has_sig": false, "md5_digest": "8f93ccf4acf276ca4b3e88098f5fdcdb", "packagetype": "bdist_wheel", "python_version": "py36.py37.py38", "requires_python": ">=3.6", "size": 14147, "upload_time": "2020-01-02T00:27:08", "upload_time_iso_8601": "2020-01-02T00:27:08.738785Z", "url": "https://files.pythonhosted.org/packages/33/da/e5d49e7a0994a7211b29d1792d9f00b3c4568317e7a6e08a3b613639eb31/flake8_bugbear-20.1.0-py36.py37.py38-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6be2df77010ca9d179c866aae5bfcb6", "sha256": "775aa4cbff549d0e6a2e80c323297dc348f077186bfd556afe2354fffcac5c86"}, "downloads": -1, "filename": "flake8-bugbear-20.1.0.tar.gz", "has_sig": false, "md5_digest": "c6be2df77010ca9d179c866aae5bfcb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23272, "upload_time": "2020-01-02T00:27:10", "upload_time_iso_8601": "2020-01-02T00:27:10.359508Z", "url": "https://files.pythonhosted.org/packages/fb/d6/b4900ed9596b040301e22b79762a5ab9b0e8f09ee043ca72306c930b920a/flake8-bugbear-20.1.0.tar.gz", "yanked": false}], "20.1.1": [{"comment_text": "", "digests": {"md5": "270e985564b0025bfc481456df06c862", "sha256": "180b08493fc633899c8aad7c46b8fdf0ec4939272ed0db6fad0f4eba56827352"}, "downloads": -1, "filename": "flake8_bugbear-20.1.1-py36.py37.py38-none-any.whl", "has_sig": false, "md5_digest": "270e985564b0025bfc481456df06c862", "packagetype": "bdist_wheel", "python_version": "py36.py37.py38", "requires_python": ">=3.6", "size": 15071, "upload_time": "2020-01-05T02:03:21", "upload_time_iso_8601": "2020-01-05T02:03:21.479278Z", "url": "https://files.pythonhosted.org/packages/fc/2a/595c6ad3a3efb5c6b18e738f0c8596e2e53d47bbd3ea448ae81e5e163da5/flake8_bugbear-20.1.1-py36.py37.py38-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9a4ee6a16979e555bc51b1c8de62c5b", "sha256": "a1fc463cba38e3b62c6d483db4a8a7b8f1326a51eefd1a4079717262d5e1a4d6"}, "downloads": -1, "filename": "flake8-bugbear-20.1.1.tar.gz", "has_sig": false, "md5_digest": "b9a4ee6a16979e555bc51b1c8de62c5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24887, "upload_time": "2020-01-05T02:03:23", "upload_time_iso_8601": "2020-01-05T02:03:23.097422Z", "url": "https://files.pythonhosted.org/packages/11/b9/512d179540df9e66689f8f57fafaa326baadbede33e229eb23415d63bfaa/flake8-bugbear-20.1.1.tar.gz", "yanked": false}], "20.1.2": [{"comment_text": "", "digests": {"md5": "94bf9e9238abf40fb64043b8a791cb88", "sha256": "09a12ebe427279cf7aa9445114a68d83a6f0ffccdd4105368d6e85373541eb8f"}, "downloads": -1, "filename": "flake8_bugbear-20.1.2-py36.py37.py38-none-any.whl", "has_sig": false, "md5_digest": "94bf9e9238abf40fb64043b8a791cb88", "packagetype": "bdist_wheel", "python_version": "py36.py37.py38", "requires_python": ">=3.6", "size": 15181, "upload_time": "2020-01-06T03:52:18", "upload_time_iso_8601": "2020-01-06T03:52:18.157823Z", "url": "https://files.pythonhosted.org/packages/64/c6/226fbbbc249819959f9a658c8a7d48559da7c887f21fe5b4b89b46ec9b2d/flake8_bugbear-20.1.2-py36.py37.py38-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcc802faaeb09a8f4a6b988cbbff42e0", "sha256": "bc4a35972342256abddf84591fbb82f7360981db1b71e39a8ba0400e906239cf"}, "downloads": -1, "filename": "flake8-bugbear-20.1.2.tar.gz", "has_sig": false, "md5_digest": "bcc802faaeb09a8f4a6b988cbbff42e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25476, "upload_time": "2020-01-06T03:52:19", "upload_time_iso_8601": "2020-01-06T03:52:19.808442Z", "url": "https://files.pythonhosted.org/packages/01/77/78e255a09aed5b33a0603df6c2043f20dc5f4dc8383deb96b2a110f2e949/flake8-bugbear-20.1.2.tar.gz", "yanked": false}], "20.1.3": [{"comment_text": "", "digests": {"md5": "06d3be3e09fb72efbbbd6107d3234326", "sha256": "cc73c885e2c605dc89073afc16e308bba987098a9507023aa24590bd06ebd786"}, "downloads": -1, "filename": "flake8_bugbear-20.1.3-py36.py37.py38-none-any.whl", "has_sig": false, "md5_digest": "06d3be3e09fb72efbbbd6107d3234326", "packagetype": "bdist_wheel", "python_version": "py36.py37.py38", "requires_python": ">=3.6", "size": 15418, "upload_time": "2020-01-29T03:12:02", "upload_time_iso_8601": "2020-01-29T03:12:02.058362Z", "url": "https://files.pythonhosted.org/packages/41/43/a5686813698534f040287fcba49717cf747ca65c6df28e099853455c3ac7/flake8_bugbear-20.1.3-py36.py37.py38-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "544122dc1ca889d62d7683a7ffcb326c", "sha256": "3f11243dc710486449fac3be776ac2723786ed544fc0734f6134935ded82a1e9"}, "downloads": -1, "filename": "flake8-bugbear-20.1.3.tar.gz", "has_sig": false, "md5_digest": "544122dc1ca889d62d7683a7ffcb326c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25878, "upload_time": "2020-01-29T03:12:04", "upload_time_iso_8601": "2020-01-29T03:12:04.394938Z", "url": "https://files.pythonhosted.org/packages/6f/94/12719998158c92d89ff410a03b95817a2007795c664297682e00b7c1d308/flake8-bugbear-20.1.3.tar.gz", "yanked": false}], "20.1.4": [{"comment_text": "", "digests": {"md5": "66cf7c41e08d7ed3899edb62d4568581", "sha256": "a3ddc03ec28ba2296fc6f89444d1c946a6b76460f859795b35b77d4920a51b63"}, "downloads": -1, "filename": "flake8_bugbear-20.1.4-py36.py37.py38-none-any.whl", "has_sig": false, "md5_digest": "66cf7c41e08d7ed3899edb62d4568581", "packagetype": "bdist_wheel", "python_version": "py36.py37.py38", "requires_python": ">=3.6", "size": 15460, "upload_time": "2020-02-01T04:11:01", "upload_time_iso_8601": "2020-02-01T04:11:01.062509Z", "url": "https://files.pythonhosted.org/packages/28/40/05cd054132c56c78b92cc1c6691be954adc36f5880adef2cdc1daa9661f2/flake8_bugbear-20.1.4-py36.py37.py38-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bf5a8b9aca13aeaf52eab92122cf1ca", "sha256": "bd02e4b009fb153fe6072c31c52aeab5b133d508095befb2ffcf3b41c4823162"}, "downloads": -1, "filename": "flake8-bugbear-20.1.4.tar.gz", "has_sig": false, "md5_digest": "4bf5a8b9aca13aeaf52eab92122cf1ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25933, "upload_time": "2020-02-01T04:11:02", "upload_time_iso_8601": "2020-02-01T04:11:02.909268Z", "url": "https://files.pythonhosted.org/packages/42/b5/1555ab5ae03c3fdd5b441cc1cbe0ac5cf67e81e09aaab233c414546491c4/flake8-bugbear-20.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66cf7c41e08d7ed3899edb62d4568581", "sha256": "a3ddc03ec28ba2296fc6f89444d1c946a6b76460f859795b35b77d4920a51b63"}, "downloads": -1, "filename": "flake8_bugbear-20.1.4-py36.py37.py38-none-any.whl", "has_sig": false, "md5_digest": "66cf7c41e08d7ed3899edb62d4568581", "packagetype": "bdist_wheel", "python_version": "py36.py37.py38", "requires_python": ">=3.6", "size": 15460, "upload_time": "2020-02-01T04:11:01", "upload_time_iso_8601": "2020-02-01T04:11:01.062509Z", "url": "https://files.pythonhosted.org/packages/28/40/05cd054132c56c78b92cc1c6691be954adc36f5880adef2cdc1daa9661f2/flake8_bugbear-20.1.4-py36.py37.py38-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bf5a8b9aca13aeaf52eab92122cf1ca", "sha256": "bd02e4b009fb153fe6072c31c52aeab5b133d508095befb2ffcf3b41c4823162"}, "downloads": -1, "filename": "flake8-bugbear-20.1.4.tar.gz", "has_sig": false, "md5_digest": "4bf5a8b9aca13aeaf52eab92122cf1ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25933, "upload_time": "2020-02-01T04:11:02", "upload_time_iso_8601": "2020-02-01T04:11:02.909268Z", "url": "https://files.pythonhosted.org/packages/42/b5/1555ab5ae03c3fdd5b441cc1cbe0ac5cf67e81e09aaab233c414546491c4/flake8-bugbear-20.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:58 2020"}