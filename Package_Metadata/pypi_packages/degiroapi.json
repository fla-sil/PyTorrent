{"info": {"author": "Lorenz Kraus", "author_email": "lorenz.kraus@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# DegiroAPI\nAn unofficial API for the trading platform Degiro written in Python\n\n## Getting Started\n\n### Installing\n```\npip install degiroapi\n```\n### Dependecies\n```\npip install requests\n```\n### Imports\n```\nimport degiroapi\nfrom degiroapi.product import Product\nfrom degiroapi.order import Order\nfrom degiroapi.utils import pretty_json\n```\n### Logging into your account\n```\ndegiro = degiroapi.DeGiro()\ndegiro.login(\"username\", \"password\")\n```\n### Logging out\n\n```\ndegiro.logout()\n```\n\n## Available Functions\n* login\n* logout\n* getdata\n* search_products\n* transactions\n* orders\n* get_stock_list\n* buyorder\n* sellorder\n## getdata\nPrinting your current cach funds:\n```\ncachfunds = degiro.getdata(degiroapi.Data.Type.CACHFUNDS)\nfor data in cachfunds:\n    print(data)\n```\nPrinting your current portfolio:\n```\nportfolio = degiro.getdata(degiroapi.Data.Type.PORTFOLIO)\nfor data in portfolio:\n    print(data)\n```\n## search_products\nSearching for a product:\n```\nproducts = degiro.search_products('Pfizer')\nprint(Product(products[0]).id)\n```\n## transactions\nPrinting your transactions in a given time interval:\n```\nfrom datetime import datetime, timedelta\n\ntransactions = degiro.transactions(datetime(2019, 1, 1), datetime.now())\nprint(pretty_json(transactions))\n```\n## orders\nPrinting your order history(the maximum timespan is 90 days)\n```\nfrom datetime import datetime, timedelta\n\norders = degiro.orders(datetime.now() - timedelta(days=90), datetime.now())\nprint(pretty_json(orders))\n```\n## get_stock_list\nGet the symbols of the S&P500 stocks:\n```\nsp5symbols = []\nproducts = degiro.get_stock_list(14, 846)\nfor product in products:\n    sp5symbols.append(Product(product).symbol)\n```\nGet the symbols of the german30 stocks:\n```\ndaxsymbols = []\nproducts = degiro.get_stock_list(6, 906)\nfor product in products:\n    daxsymbols.append(Product(product).symbol)\n```\n## buyorder\nPlacing a buy order is dependent on the order Type:\n\n### Limit order \nYou have to set a limit order price to which the order gets executed.\n**arguments**: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for unlimited, size, limit(the limit price)\n```\ndegiro.buyorder(Order.Type.LIMIT, Product(products[0]).id, 3, 1, 30)\n```\n\n### StopLimit order\nSets a limit order when the stoploss price is reached (not bought for more than the limit at the stop loss price):\n**arguments**: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for \"unlimited\"), size, limit(the limit price), stop_loss(stop loss price)\n```\ndegiro.buyorder(Order.Type.STOPLIMIT, Product(products[0]).id, 3, 1, 38, 38)\n```\n\n### Market order\nBought at the market price:\n**arguments**: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for \"unlimited\"), size\n```\ndegiro.buyorder(Order.Type.MARKET, Product(products[0]).id, 3, 1)\n```\n\n### StopLoss order\nThe stop loss price has to be higher than the current price, when current price reaches the stoploss price the order is placed:\n**arguments**: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for \"unlimited\"), size\n```\ndegiro.buyorder(Order.Type.STOPLOSS, Product(products[0]).id, 3, 1, None, 38)\n```\n\n## sellorder\nPlacing a sell order is dependent on the order Type:\nEquivalent to the buy orders:\n```\ndegiro.sellorder(Order.Type.LIMIT, Product(products[0]).id, 3, 1, 40)\n```\n\n```\ndegiro.sellorder(Order.Type.STOPLIMIT, Product(products[0]).id, 3, 1, 37, 38)\n```\n\n```\ndegiro.sellorder(Order.Type.MARKET, Product(products[0]).id, 3, 1)\n```\n\n```\ndegiro.sellorder(Order.Type.STOPLOSS, Product(products[0]).id, 3, 1, None, 38)\n```\n\n\n## Usage\nFor documented examples see [examples.py](https://github.com/lolokraus/DegiroAPI/blob/master/examples/examples.py)\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lolokraus/DegiroAPI", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "degiroapi", "package_url": "https://pypi.org/project/degiroapi/", "platform": "", "project_url": "https://pypi.org/project/degiroapi/", "project_urls": {"Homepage": "https://github.com/lolokraus/DegiroAPI"}, "release_url": "https://pypi.org/project/degiroapi/0.8.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An unofficial API for the trading platform Degiro written in Python", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DegiroAPI</h1>\n<p>An unofficial API for the trading platform Degiro written in Python</p>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<pre><code>pip install degiroapi\n</code></pre>\n<h3>Dependecies</h3>\n<pre><code>pip install requests\n</code></pre>\n<h3>Imports</h3>\n<pre><code>import degiroapi\nfrom degiroapi.product import Product\nfrom degiroapi.order import Order\nfrom degiroapi.utils import pretty_json\n</code></pre>\n<h3>Logging into your account</h3>\n<pre><code>degiro = degiroapi.DeGiro()\ndegiro.login(\"username\", \"password\")\n</code></pre>\n<h3>Logging out</h3>\n<pre><code>degiro.logout()\n</code></pre>\n<h2>Available Functions</h2>\n<ul>\n<li>login</li>\n<li>logout</li>\n<li>getdata</li>\n<li>search_products</li>\n<li>transactions</li>\n<li>orders</li>\n<li>get_stock_list</li>\n<li>buyorder</li>\n<li>sellorder</li>\n</ul>\n<h2>getdata</h2>\n<p>Printing your current cach funds:</p>\n<pre><code>cachfunds = degiro.getdata(degiroapi.Data.Type.CACHFUNDS)\nfor data in cachfunds:\n    print(data)\n</code></pre>\n<p>Printing your current portfolio:</p>\n<pre><code>portfolio = degiro.getdata(degiroapi.Data.Type.PORTFOLIO)\nfor data in portfolio:\n    print(data)\n</code></pre>\n<h2>search_products</h2>\n<p>Searching for a product:</p>\n<pre><code>products = degiro.search_products('Pfizer')\nprint(Product(products[0]).id)\n</code></pre>\n<h2>transactions</h2>\n<p>Printing your transactions in a given time interval:</p>\n<pre><code>from datetime import datetime, timedelta\n\ntransactions = degiro.transactions(datetime(2019, 1, 1), datetime.now())\nprint(pretty_json(transactions))\n</code></pre>\n<h2>orders</h2>\n<p>Printing your order history(the maximum timespan is 90 days)</p>\n<pre><code>from datetime import datetime, timedelta\n\norders = degiro.orders(datetime.now() - timedelta(days=90), datetime.now())\nprint(pretty_json(orders))\n</code></pre>\n<h2>get_stock_list</h2>\n<p>Get the symbols of the S&amp;P500 stocks:</p>\n<pre><code>sp5symbols = []\nproducts = degiro.get_stock_list(14, 846)\nfor product in products:\n    sp5symbols.append(Product(product).symbol)\n</code></pre>\n<p>Get the symbols of the german30 stocks:</p>\n<pre><code>daxsymbols = []\nproducts = degiro.get_stock_list(6, 906)\nfor product in products:\n    daxsymbols.append(Product(product).symbol)\n</code></pre>\n<h2>buyorder</h2>\n<p>Placing a buy order is dependent on the order Type:</p>\n<h3>Limit order</h3>\n<p>You have to set a limit order price to which the order gets executed.\n<strong>arguments</strong>: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for unlimited, size, limit(the limit price)</p>\n<pre><code>degiro.buyorder(Order.Type.LIMIT, Product(products[0]).id, 3, 1, 30)\n</code></pre>\n<h3>StopLimit order</h3>\n<p>Sets a limit order when the stoploss price is reached (not bought for more than the limit at the stop loss price):\n<strong>arguments</strong>: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for \"unlimited\"), size, limit(the limit price), stop_loss(stop loss price)</p>\n<pre><code>degiro.buyorder(Order.Type.STOPLIMIT, Product(products[0]).id, 3, 1, 38, 38)\n</code></pre>\n<h3>Market order</h3>\n<p>Bought at the market price:\n<strong>arguments</strong>: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for \"unlimited\"), size</p>\n<pre><code>degiro.buyorder(Order.Type.MARKET, Product(products[0]).id, 3, 1)\n</code></pre>\n<h3>StopLoss order</h3>\n<p>The stop loss price has to be higher than the current price, when current price reaches the stoploss price the order is placed:\n<strong>arguments</strong>: order type, product id, execution time type (either 1 for \"valid on a daily basis\", or 3 for \"unlimited\"), size</p>\n<pre><code>degiro.buyorder(Order.Type.STOPLOSS, Product(products[0]).id, 3, 1, None, 38)\n</code></pre>\n<h2>sellorder</h2>\n<p>Placing a sell order is dependent on the order Type:\nEquivalent to the buy orders:</p>\n<pre><code>degiro.sellorder(Order.Type.LIMIT, Product(products[0]).id, 3, 1, 40)\n</code></pre>\n<pre><code>degiro.sellorder(Order.Type.STOPLIMIT, Product(products[0]).id, 3, 1, 37, 38)\n</code></pre>\n<pre><code>degiro.sellorder(Order.Type.MARKET, Product(products[0]).id, 3, 1)\n</code></pre>\n<pre><code>degiro.sellorder(Order.Type.STOPLOSS, Product(products[0]).id, 3, 1, None, 38)\n</code></pre>\n<h2>Usage</h2>\n<p>For documented examples see <a href=\"https://github.com/lolokraus/DegiroAPI/blob/master/examples/examples.py\" rel=\"nofollow\">examples.py</a></p>\n\n          </div>"}, "last_serial": 7011179, "releases": {"0.7": [{"comment_text": "", "digests": {"md5": "6d001fb1bca224b6cb7fcf7295b02c65", "sha256": "02bdc1665e4b749d2b35d968a33fe87a1d141bd5c28bd95275770412c7517399"}, "downloads": -1, "filename": "degiroapi-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6d001fb1bca224b6cb7fcf7295b02c65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5673, "upload_time": "2020-04-11T14:05:50", "upload_time_iso_8601": "2020-04-11T14:05:50.979925Z", "url": "https://files.pythonhosted.org/packages/c2/c6/c283d3aa7fef486523d1858ec72fc329fc065684e7b7118215eed109fc4f/degiroapi-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f2e60de71476a38c069f7e6fb66a425", "sha256": "d1771d0cdc5f4ff3b63ca3f74fc89684fd9a1d8bd44570f05b6b254231ee5684"}, "downloads": -1, "filename": "degiroapi-0.7.tar.gz", "has_sig": false, "md5_digest": "5f2e60de71476a38c069f7e6fb66a425", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3885, "upload_time": "2020-04-11T14:05:53", "upload_time_iso_8601": "2020-04-11T14:05:53.037950Z", "url": "https://files.pythonhosted.org/packages/0d/35/855c1cacaed3cd82075221c73cef5947866e152e1dd62a973eb5cb242a1e/degiroapi-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "65c46cc6e04fa21d54da32896f35fd00", "sha256": "e2abcd609ddf405666b74a93d4ba068a669dadd50e2eedc01eaaef15c273a522"}, "downloads": -1, "filename": "degiroapi-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "65c46cc6e04fa21d54da32896f35fd00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6693, "upload_time": "2020-04-11T15:38:46", "upload_time_iso_8601": "2020-04-11T15:38:46.792973Z", "url": "https://files.pythonhosted.org/packages/fd/5f/38459c64454e87addace59db214c83a1af2f4c51956d8160ed541a51365c/degiroapi-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f18f19a51c334612baa7d98c5e2bc40", "sha256": "d459b448c68e1ebdc0d38260f46bfa6eec9f292cd1907aefb6ce1ed0e0f6b99e"}, "downloads": -1, "filename": "degiroapi-0.8.tar.gz", "has_sig": false, "md5_digest": "4f18f19a51c334612baa7d98c5e2bc40", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6278, "upload_time": "2020-04-11T15:38:48", "upload_time_iso_8601": "2020-04-11T15:38:48.173019Z", "url": "https://files.pythonhosted.org/packages/96/06/49f3ad788bae3747f45c9247ea5542b8a596ccc26ed2d8ed94a4f7057d09/degiroapi-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "5eec127cc35fd4519ff545ec8b1ec157", "sha256": "cd93c5d9931873b5339035c64b5968dfa67f70d855e6f1fbf0470cd7c2758b72"}, "downloads": -1, "filename": "degiroapi-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5eec127cc35fd4519ff545ec8b1ec157", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6801, "upload_time": "2020-04-13T16:45:02", "upload_time_iso_8601": "2020-04-13T16:45:02.221743Z", "url": "https://files.pythonhosted.org/packages/5a/38/590412300a3802919da61d54d6a172cbf4538a09c54bfd4fd106e35c159c/degiroapi-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b380cdff890c711e52748c67610efcbe", "sha256": "c1fac71e630ed1e548053cb7f158c191f01786e8129bf4f705538202b83c7f51"}, "downloads": -1, "filename": "degiroapi-0.8.1.tar.gz", "has_sig": false, "md5_digest": "b380cdff890c711e52748c67610efcbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6516, "upload_time": "2020-04-13T16:45:04", "upload_time_iso_8601": "2020-04-13T16:45:04.116727Z", "url": "https://files.pythonhosted.org/packages/0e/bc/b5e3a5431393882b6c8858a7f09adfc0fdec7045ce5ff076bae5a7aba863/degiroapi-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5eec127cc35fd4519ff545ec8b1ec157", "sha256": "cd93c5d9931873b5339035c64b5968dfa67f70d855e6f1fbf0470cd7c2758b72"}, "downloads": -1, "filename": "degiroapi-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5eec127cc35fd4519ff545ec8b1ec157", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6801, "upload_time": "2020-04-13T16:45:02", "upload_time_iso_8601": "2020-04-13T16:45:02.221743Z", "url": "https://files.pythonhosted.org/packages/5a/38/590412300a3802919da61d54d6a172cbf4538a09c54bfd4fd106e35c159c/degiroapi-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b380cdff890c711e52748c67610efcbe", "sha256": "c1fac71e630ed1e548053cb7f158c191f01786e8129bf4f705538202b83c7f51"}, "downloads": -1, "filename": "degiroapi-0.8.1.tar.gz", "has_sig": false, "md5_digest": "b380cdff890c711e52748c67610efcbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6516, "upload_time": "2020-04-13T16:45:04", "upload_time_iso_8601": "2020-04-13T16:45:04.116727Z", "url": "https://files.pythonhosted.org/packages/0e/bc/b5e3a5431393882b6c8858a7f09adfc0fdec7045ce5ff076bae5a7aba863/degiroapi-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:14 2020"}