{"info": {"author": "ProGamerGov", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Artistic Software", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# neural-style-pt\n\nThis is a PyTorch implementation of the paper [A Neural Algorithm of Artistic Style](http://arxiv.org/abs/1508.06576)\nby Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge. The code is based on Justin Johnson's [Neural-Style](https://github.com/jcjohnson/neural-style).\n\nThe paper presents an algorithm for combining the content of one image with the style of another image using\nconvolutional neural networks. Here's an example that maps the artistic style of\n[The Starry Night](https://en.wikipedia.org/wiki/The_Starry_Night)\nonto a night-time photograph of the Stanford campus:\n\n<div align=\"center\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/starry_night_google.jpg\" height=\"223px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/hoovertowernight.jpg\" height=\"223px\">\n<img src=\"https://user-images.githubusercontent.com/10626398/66707704-310a8000-ed02-11e9-92f9-e2f74ef74270.jpg\" width=\"710px\">\n\n</div>\n\nApplying the style of different images to the same content image gives interesting results.\nHere we reproduce Figure 2 from the paper, which renders a photograph of the Tubingen in Germany in a\nvariety of styles:\n\n<div align=\"center\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/tubingen.jpg\" height=\"250px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_shipwreck.png\" height=\"250px\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_starry.png\" height=\"250px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_scream.png\" height=\"250px\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_seated_nude.png\" height=\"250px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_composition_vii.png\" height=\"250px\">\n\n</div>\n\nHere are the results of applying the style of various pieces of artwork to this photograph of the\ngolden gate bridge:\n\n\n<div align=\"center\"\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/golden_gate.jpg\" height=\"200px\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/frida_kahlo.jpg\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_kahlo.png\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/escher_sphere.jpg\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_escher.png\" height=\"160px\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/woman-with-hat-matisse.jpg\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_matisse.png\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/the_scream.jpg\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_scream.png\" height=\"160px\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/starry_night_crop.png\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry.png\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/seated-nude.jpg\" height=\"160px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_seated.png\" height=\"160px\">\n</div>\n\n### Content / Style Tradeoff\n\nThe algorithm allows the user to trade-off the relative weight of the style and content reconstruction terms,\nas shown in this example where we port the style of [Picasso's 1907 self-portrait](http://www.wikiart.org/en/pablo-picasso/self-portrait-1907) onto Brad Pitt:\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/picasso_selfport1907.jpg\" height=\"220px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/inputs/brad_pitt.jpg\" height=\"220px\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/pitt_picasso_content_5_style_100.png\" height=\"220px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/pitt_picasso_content_1_style_100.png\" height=\"220px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/pitt_picasso_content_01_style_100.png\" height=\"220px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/pitt_picasso_content_0025_style_100.png\" height=\"220px\">\n</div>\n\n### Style Scale\n\nBy resizing the style image before extracting style features, we can control the types of artistic\nfeatures that are transfered from the style image; you can control this behavior with the `-style_scale` flag.\nBelow we see three examples of rendering the Golden Gate Bridge in the style of The Starry Night.\nFrom left to right, `-style_scale` is 2.0, 1.0, and 0.5.\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry_scale2.png\" height=175px>\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry_scale1.png\" height=175px>\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry_scale05.png\" height=175px>\n</div>\n\n### Multiple Style Images\nYou can use more than one style image to blend multiple artistic styles.\n\nClockwise from upper left: \"The Starry Night\" + \"The Scream\", \"The Scream\" + \"Composition VII\",\n\"Seated Nude\" + \"Composition VII\", and \"Seated Nude\" + \"The Starry Night\"\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_starry_scream.png\" height=\"250px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_scream_composition_vii.png\" height=\"250px\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_starry_seated.png\" height=\"250px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_seated_nude_composition_vii.png\" height=\"250px\">\n</div>\n\n\n### Style Interpolation\nWhen using multiple style images, you can control the degree to which they are blended:\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry_scream_3_7.png\" height=\"175px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry_scream_5_5.png\" height=\"175px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/golden_gate_starry_scream_7_3.png\" height=\"175px\">\n</div>\n\n### Transfer style but not color\nIf you add the flag `-original_colors 1` then the output image will retain the colors of the original image.\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_starry.png\" height=\"185px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_scream.png\" height=\"185px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/tubingen_composition_vii.png\" height=\"185px\">\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/original_color/tubingen_starry.png\" height=\"185px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/original_color/tubingen_scream.png\" height=\"185px\">\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/original_color/tubingen_composition_vii.png\" height=\"185px\">\n</div>\n\n## Setup:\n\nWhile you can use Python 2's pip, it's recommended that you use Python 3's pip:\n\n```\n# in a terminal, run the command\npip3 install neural-style\n```\n\n\nAfter installing neural-style-pt, you'll need to run the following script to download the default VGG and NIN models:\n\n\n```\nneural-style -download_models\n```\n\nBy default the models are downloaded to your home directory, but you can specify a download location with:\n\n```\nneural-style -download_models <download_path>\n```\n\nThis will download the original [VGG-19 model](https://gist.github.com/ksimonyan/3785162f95cd2d5fee77#file-readme-md).\nThe original [VGG-16 model](https://gist.github.com/ksimonyan/211839e770f7b538e2d8#file-readme-md) will also be downloaded. By default the original VGG-19 model is used.\n\nIf you have a smaller memory GPU then using NIN Imagenet model will be better and gives slightly worse yet comparable results. You can get the details on the model from [BVLC Caffe ModelZoo](https://github.com/BVLC/caffe/wiki/Model-Zoo). The NIN model is downloaded when you run `neural-style -download_models`.\n\n## Usage\nBasic usage:\n```\nneural-style -style_image <image.jpg> -content_image <image.jpg>\n```\n\ncuDNN usage with NIN Model:\n```\nneural-style -style_image examples/inputs/picasso_selfport1907.jpg -content_image examples/inputs/brad_pitt.jpg -output_image profile.png -model_file models/nin_imagenet.pth -gpu 0 -backend cudnn -num_iterations 1000 -seed 123 -content_layers relu0,relu3,relu7,relu12 -style_layers relu0,relu3,relu7,relu12 -content_weight 10 -style_weight 500 -image_size 512 -optimizer adam\n```\n\n![cuDNN NIN Model Picasso Brad Pitt](https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/pitt_picasso_nin_cudnn.png)\n\n\nTo use multiple style images, pass a comma-separated list like this:\n\n`-style_image starry_night.jpg,the_scream.jpg`.\n\nNote that paths to images should not contain the `~` character to represent your home directory; you should instead use a relative\npath or a full absolute path.\n\n**Options**:\n\n* `-image_size`: Maximum side length (in pixels) of the generated image. Default is 512.\n* `-style_blend_weights`: The weight for blending the style of multiple style images, as a\n  comma-separated list, such as `-style_blend_weights 3,7`. By default all style images\n  are equally weighted.\n* `-gpu`: Zero-indexed ID of the GPU to use; for CPU mode set `-gpu` to `c`.\n\n**Optimization options**:\n\n* `-content_weight`: How much to weight the content reconstruction term. Default is 5e0.\n* `-style_weight`: How much to weight the style reconstruction term. Default is 1e2.\n* `-tv_weight`: Weight of total-variation (TV) regularization; this helps to smooth the image.\n  Default is 1e-3. Set to 0 to disable TV regularization.\n* `-num_iterations`: Default is 1000.\n* `-init`: Method for generating the generated image; one of `random` or `image`.\n  Default is `random` which uses a noise initialization as in the paper; `image`\n  initializes with the content image.\n* `-init_image`: Replaces the initialization image with a user specified image.\n* `-optimizer`: The optimization algorithm to use; either `lbfgs` or `adam`; default is `lbfgs`.\n  L-BFGS tends to give better results, but uses more memory. Switching to ADAM will reduce memory usage;\n  when using ADAM you will probably need to play with other parameters to get good results, especially\n  the style weight, content weight, and learning rate.\n* `-learning_rate`: Learning rate to use with the ADAM optimizer. Default is 1e1.\n\n**Output options**:\n\n* `-output_image`: Name of the output image. Default is `out.png`.\n* `-print_iter`: Print progress every `print_iter` iterations. Set to 0 to disable printing.\n* `-save_iter`: Save the image every `save_iter` iterations. Set to 0 to disable saving intermediate results.\n\n**Layer options**:\n\n* `-content_layers`: Comma-separated list of layer names to use for content reconstruction.\n  Default is `relu4_2`.\n* `-style_layers`: Comma-separated list of layer names to use for style reconstruction.\n  Default is `relu1_1,relu2_1,relu3_1,relu4_1,relu5_1`.\n\n**Other options**:\n\n* `-style_scale`: Scale at which to extract features from the style image. Default is 1.0.\n* `-original_colors`: If you set this to 1, then the output image will keep the colors of the content image.\n* `-model_file`: Path to the `.pth` file for the VGG Caffe model. Default is the original VGG-19 model; you can also try the original VGG-16 model.\n* `-pooling`: The type of pooling layers to use; one of `max` or `avg`. Default is `max`.\n  The VGG-19 models uses max pooling layers, but the paper mentions that replacing these layers with average\n  pooling layers can improve the results. I haven't been able to get good results using average pooling, but\n  the option is here.\n* `-seed`: An integer value that you can specify for repeatable results. By default this value is random for each run.\n* `-multidevice_strategy`: A comma-separated list of layer indices at which to split the network when using multiple devices. See [Multi-GPU scaling](https://github.com/ProGamerGov/neural-style-pt/tree/pip-master#multi-gpu-scaling) for more details.\n* `-backend`: `nn`, `cudnn`, or `mkl`. Default is `nn`.\n  `mkl` requires Intel's MKL backend.\n* `-cudnn_autotune`: When using the cuDNN backend, pass this flag to use the built-in cuDNN autotuner to select\n  the best convolution algorithms for your architecture. This will make the first iteration a bit slower and can\n  take a bit more memory, but may significantly speed up the cuDNN backend.\n* `-download_models`: Path to where the VGG-19, VGG-16, and NIN models will be downloaded to. If no path is specified, the models will be downloaded to your home directory.\n\n## Frequently Asked Questions\n\n**Problem:** The program runs out of memory and dies\n\n**Solution:** Try reducing the image size: `-image_size 256` (or lower). Note that different image sizes will likely\nrequire non-default values for `-style_weight` and `-content_weight` for optimal results.\nIf you are running on a GPU, you can also try running with `-backend cudnn` to reduce memory usage.\n\n**Problem:** `-backend cudnn` is slower than default NN backend\n\n**Solution:** Add the flag `-cudnn_autotune`; this will use the built-in cuDNN autotuner to select the best convolution algorithms.\n\n**Problem:** Get the following error message:\n\n`Missing key(s) in state_dict: \"classifier.0.bias\", \"classifier.0.weight\", \"classifier.3.bias\", \"classifier.3.weight\". Unexpected key(s) in state_dict: \"classifier.1.weight\", \"classifier.1.bias\", \"classifier.4.weight\", \"classifier.4.bias\".`\n\n**Solution:** Due to a mix up with layer locations, older models require a fix to be compatible with newer versions of PyTorch. Donwloading the models with `neural-style -download_models` will automatically perform these fixes after downloading the models. You can find other compatible models [here](https://github.com/ProGamerGov/neural-style-pt/wiki/Other-Models).\n\n\n\n## Memory Usage\nBy default, `neural-style-pt` uses the `nn` backend for convolutions and L-BFGS for optimization. These give good results, but can both use a lot of memory. You can reduce memory usage with the following:\n\n* **Use cuDNN**: Add the flag `-backend cudnn` to use the cuDNN backend. This will only work in GPU mode.\n* **Use ADAM**: Add the flag `-optimizer adam` to use ADAM instead of L-BFGS. This should significantly\n  reduce memory usage, but may require tuning of other parameters for good results; in particular you should\n  play with the learning rate, content weight, and style weight.\n  This should work in both CPU and GPU modes.\n* **Reduce image size**: If the above tricks are not enough, you can reduce the size of the generated image;\n  pass the flag `-image_size 256` to generate an image at half the default size.\n\nWith the default settings, neural-style-pt uses about 3.7 GB of GPU memory on my system; switching to ADAM and cuDNN reduces the GPU memory footprint to about 1GB.\n\n## Speed\nSpeed can vary a lot depending on the backend and the optimizer.\nHere are some times for running 500 iterations with `-image_size=512` on a Tesla K80 with different settings:\n* `-backend nn -optimizer lbfgs`: 117 seconds\n* `-backend nn -optimizer adam`: 100 seconds\n* `-backend cudnn -optimizer lbfgs`: 124 seconds\n* `-backend cudnn -optimizer adam`: 107 seconds\n* `-backend cudnn -cudnn_autotune -optimizer lbfgs`: 109 seconds\n* `-backend cudnn -cudnn_autotune -optimizer adam`: 91 seconds\n\nHere are the same benchmarks on a GTX 1080:\n* `-backend nn -optimizer lbfgs`: 56 seconds\n* `-backend nn -optimizer adam`: 38 seconds\n* `-backend cudnn -optimizer lbfgs`: 40 seconds\n* `-backend cudnn -optimizer adam`: 40 seconds\n* `-backend cudnn -cudnn_autotune -optimizer lbfgs`: 23 seconds\n* `-backend cudnn -cudnn_autotune -optimizer adam`: 24 seconds\n\n## Multi-GPU scaling\nYou can use multiple CPU and GPU devices to process images at higher resolutions; different layers of the network will be\ncomputed on different devices. You can control which GPU and CPU devices are used with the `-gpu` flag, and you can control\nhow to split layers across devices using the `-multidevice_strategy` flag.\n\nFor example in a server with four GPUs, you can give the flag `-gpu 0,1,2,3` to process on GPUs 0, 1, 2, and 3 in that order; by also giving the flag `-multidevice_strategy 3,6,12` you indicate that the first two layers should be computed on GPU 0, layers 3 to 5 should be computed on GPU 1, layers 6 to 11 should be computed on GPU 2, and the remaining layers should be computed on GPU 3. You will need to tune the `-multidevice_strategy` for your setup in order to achieve maximal resolution.\n\nWe can achieve very high quality results at high resolution by combining multi-GPU processing with multiscale\ngeneration as described in the paper\n<a href=\"https://arxiv.org/abs/1611.07865\">**Controlling Perceptual Factors in Neural Style Transfer**</a> by Leon A. Gatys,\nAlexander S. Ecker, Matthias Bethge, Aaron Hertzmann and Eli Shechtman.\n\n\nHere is a 4016 x 2213 image generated on a server with eight Tesla K80 GPUs:\n\n<img src=\"https://raw.githubusercontent.com/ProGamerGov/neural-style-pt/master/examples/outputs/starry_stanford_bigger.png\" height=\"400px\">\n\nThe script used to generate this image <a href='examples/scripts/starry_stanford_bigger.sh'>can be found here</a>.\n\n## Implementation details\nImages are initialized with white noise and optimized using L-BFGS.\n\nWe perform style reconstructions using the `conv1_1`, `conv2_1`, `conv3_1`, `conv4_1`, and `conv5_1` layers\nand content reconstructions using the `conv4_2` layer. As in the paper, the five style reconstruction losses have\nequal weights.\n\n## Citation\n\nIf you find this code useful for your research, please cite:\n\n```\n@misc{ProGamerGov2018,\nauthor = {ProGamerGov},\ntitle = {neural-style-pt},\nyear = {2018},\npublisher = {GitHub},\njournal = {GitHub repository},\nhowpublished = {\\url{https://github.com/ProGamerGov/neural-style-pt}},\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ProGamerGov/neural-style-pt/tree/pip-master/", "keywords": "neural artistic style neural-style neural-style-pt pytorch style transfer style-transfer pytorch-style-transfer neuralart neural-art nst neural-style-transfer deepstyle deep-style mlart machine-learning-art aiart ai-art gatys justin-johnson torch deepdream", "license": "", "maintainer": "", "maintainer_email": "", "name": "neural-style", "package_url": "https://pypi.org/project/neural-style/", "platform": "", "project_url": "https://pypi.org/project/neural-style/", "project_urls": {"Homepage": "https://github.com/ProGamerGov/neural-style-pt/tree/pip-master/"}, "release_url": "https://pypi.org/project/neural-style/0.5.7/", "requires_dist": ["torch", "torchvision", "pillow"], "requires_python": "", "summary": "A PyTorch implementation of artistic style transfer", "version": "0.5.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>neural-style-pt</h1>\n<p>This is a PyTorch implementation of the paper <a href=\"http://arxiv.org/abs/1508.06576\" rel=\"nofollow\">A Neural Algorithm of Artistic Style</a>\nby Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge. The code is based on Justin Johnson's <a href=\"https://github.com/jcjohnson/neural-style\" rel=\"nofollow\">Neural-Style</a>.</p>\n<p>The paper presents an algorithm for combining the content of one image with the style of another image using\nconvolutional neural networks. Here's an example that maps the artistic style of\n<a href=\"https://en.wikipedia.org/wiki/The_Starry_Night\" rel=\"nofollow\">The Starry Night</a>\nonto a night-time photograph of the Stanford campus:</p>\n<div>\n<img height=\"223px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cde78a0b64e02922b571f64e6bb1f8aa5b55fa0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f7374617272795f6e696768745f676f6f676c652e6a7067\">\n<img height=\"223px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1e0e00edb1d358a3083b56bfc0950afde60a718/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f686f6f766572746f7765726e696768742e6a7067\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7795ab3d2234a89f889eb7567db54be272d743bc/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31303632363339382f36363730373730342d33313061383030302d656430322d313165392d393266392d6532663734656637343237302e6a7067\" width=\"710px\">\n</div>\n<p>Applying the style of different images to the same content image gives interesting results.\nHere we reproduce Figure 2 from the paper, which renders a photograph of the Tubingen in Germany in a\nvariety of styles:</p>\n<div>\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d631eda767c950d848c13f04f70807d24e716d1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f747562696e67656e2e6a7067\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92312236931fc9df80fad1126984cb4272a2b790/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f73686970777265636b2e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/134a619ab2b958234e83e3b5d6f3c490a9f1aba2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f7374617272792e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/899028ccf29f4862a58a8ec77c6c754f8099879e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f73637265616d2e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86ee2a7a4395072f2536f90e59fda7e34735982c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f7365617465645f6e7564652e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fe0baa31d93d9d174905d63c6ebe5b39cee2fa7/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f636f6d706f736974696f6e5f7669692e706e67\">\n</div>\n<p>Here are the results of applying the style of various pieces of artwork to this photograph of the\ngolden gate bridge:</p>\n<div>\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbee59fef179fbda4d348d0cc573c3bc0309bced/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f66726964615f6b61686c6f2e6a7067\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0561bd023355579fba836b226da131b323542a3c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f6b61686c6f2e706e67\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b664038599d073fd4c7e2e21410520e9bc1d97c5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f6573636865725f7370686572652e6a7067\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2e5868393826ff2c485f0460bb120328194bb44/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f6573636865722e706e67\">\n</div>\n<div>\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5379da0b34454f08afe976208abc2034a8a888b2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f776f6d616e2d776974682d6861742d6d6174697373652e6a7067\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cba3128050f628ecb42de1294b05bbb8ce2f2db/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f6d6174697373652e706e67\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7e4a6147f840bfa4a8be4aa15af79fbacf3d92e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f7468655f73637265616d2e6a7067\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b74c429533bd8533ccd210a0ee2141ad2861bbb8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f73637265616d2e706e67\">\n</div>\n<div>\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59a2abe31b4989c929171975d270cedfdbc0e354/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f7374617272795f6e696768745f63726f702e706e67\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9715bef10a9a2f1370d483faf6779cfad28724cc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272792e706e67\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bd7c1fa64dd88b1a7cc8a0dbe1ed229f1866d28/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f7365617465642d6e7564652e6a7067\">\n<img height=\"160px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9e482080f7cc5a917d64028c4f00e04426e3e7b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7365617465642e706e67\">\n</div>\n<h3>Content / Style Tradeoff</h3>\n<p>The algorithm allows the user to trade-off the relative weight of the style and content reconstruction terms,\nas shown in this example where we port the style of <a href=\"http://www.wikiart.org/en/pablo-picasso/self-portrait-1907\" rel=\"nofollow\">Picasso's 1907 self-portrait</a> onto Brad Pitt:</p>\n<div>\n<img height=\"220px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfd316a6a4792ff9de272e817eb2c7ad202c46c8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f7069636173736f5f73656c66706f7274313930372e6a7067\">\n<img height=\"220px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67fa7389dcf04ecbef925f21af35ed9628ce6e7d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f696e707574732f627261645f706974742e6a7067\">\n</div>\n<div>\n<img height=\"220px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf98c2e414a3789a734713a39339dd9b41f83825/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f706974745f7069636173736f5f636f6e74656e745f355f7374796c655f3130302e706e67\">\n<img height=\"220px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd414d6c06985f3683d13c7396c6d9d7fcd79bdf/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f706974745f7069636173736f5f636f6e74656e745f315f7374796c655f3130302e706e67\">\n<img height=\"220px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f9d9eaae6865588742297df15a490d8463e5e02/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f706974745f7069636173736f5f636f6e74656e745f30315f7374796c655f3130302e706e67\">\n<img height=\"220px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/479c96d77dcb9b2b6022aa3bb93b4ebe2000496d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f706974745f7069636173736f5f636f6e74656e745f303032355f7374796c655f3130302e706e67\">\n</div>\n<h3>Style Scale</h3>\n<p>By resizing the style image before extracting style features, we can control the types of artistic\nfeatures that are transfered from the style image; you can control this behavior with the <code>-style_scale</code> flag.\nBelow we see three examples of rendering the Golden Gate Bridge in the style of The Starry Night.\nFrom left to right, <code>-style_scale</code> is 2.0, 1.0, and 0.5.</p>\n<div>\n<img height=\"175px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0489edcee94d5483aca3060c98da54c1c840d40/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272795f7363616c65322e706e67\">\n<img height=\"175px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be85d7d14abe2832e4ff0a864a99a373fa561a22/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272795f7363616c65312e706e67\">\n<img height=\"175px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d6f257c044b5525cb6c7a0a80785e2a347033c2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272795f7363616c6530352e706e67\">\n</div>\n<h3>Multiple Style Images</h3>\n<p>You can use more than one style image to blend multiple artistic styles.</p>\n<p>Clockwise from upper left: \"The Starry Night\" + \"The Scream\", \"The Scream\" + \"Composition VII\",\n\"Seated Nude\" + \"Composition VII\", and \"Seated Nude\" + \"The Starry Night\"</p>\n<div>\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29ebf33df4a20161771582cb02f6dd569bed7b87/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f7374617272795f73637265616d2e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/206098c5142794fd1b10903d0b0befeaaa1128a1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f73637265616d5f636f6d706f736974696f6e5f7669692e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/421e6671bae1c77ea37e2c35aad254fd3ff5b97d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f7374617272795f7365617465642e706e67\">\n<img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b8fc98e1db5fed22c38a18c0fd91aa7e79622d6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f7365617465645f6e7564655f636f6d706f736974696f6e5f7669692e706e67\">\n</div>\n<h3>Style Interpolation</h3>\n<p>When using multiple style images, you can control the degree to which they are blended:</p>\n<div>\n<img height=\"175px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f26dbde1508e591797f5475be13e9c3c5c101a3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272795f73637265616d5f335f372e706e67\">\n<img height=\"175px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a2a191a1a78db9a3a782c36899b236d6b898836/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272795f73637265616d5f355f352e706e67\">\n<img height=\"175px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/836eab073ad9fd64d2134b31b4a5e431ae9d0a85/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f676f6c64656e5f676174655f7374617272795f73637265616d5f375f332e706e67\">\n</div>\n<h3>Transfer style but not color</h3>\n<p>If you add the flag <code>-original_colors 1</code> then the output image will retain the colors of the original image.</p>\n<div>\n<img height=\"185px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/134a619ab2b958234e83e3b5d6f3c490a9f1aba2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f7374617272792e706e67\">\n<img height=\"185px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/899028ccf29f4862a58a8ec77c6c754f8099879e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f73637265616d2e706e67\">\n<img height=\"185px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fe0baa31d93d9d174905d63c6ebe5b39cee2fa7/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f747562696e67656e5f636f6d706f736974696f6e5f7669692e706e67\">\n<img height=\"185px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/715a859bba7645ec3c3a4f69e5d55ea6e7031c27/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f6f726967696e616c5f636f6c6f722f747562696e67656e5f7374617272792e706e67\">\n<img height=\"185px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06b79c4ed939abde76e80266f834af32292a5f1c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f6f726967696e616c5f636f6c6f722f747562696e67656e5f73637265616d2e706e67\">\n<img height=\"185px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9db1f3c803ffca3dd16da4857ff13d27f8ba1e0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f6f726967696e616c5f636f6c6f722f747562696e67656e5f636f6d706f736974696f6e5f7669692e706e67\">\n</div>\n<h2>Setup:</h2>\n<p>While you can use Python 2's pip, it's recommended that you use Python 3's pip:</p>\n<pre><code># in a terminal, run the command\npip3 install neural-style\n</code></pre>\n<p>After installing neural-style-pt, you'll need to run the following script to download the default VGG and NIN models:</p>\n<pre><code>neural-style -download_models\n</code></pre>\n<p>By default the models are downloaded to your home directory, but you can specify a download location with:</p>\n<pre><code>neural-style -download_models &lt;download_path&gt;\n</code></pre>\n<p>This will download the original <a href=\"https://gist.github.com/ksimonyan/3785162f95cd2d5fee77#file-readme-md\" rel=\"nofollow\">VGG-19 model</a>.\nThe original <a href=\"https://gist.github.com/ksimonyan/211839e770f7b538e2d8#file-readme-md\" rel=\"nofollow\">VGG-16 model</a> will also be downloaded. By default the original VGG-19 model is used.</p>\n<p>If you have a smaller memory GPU then using NIN Imagenet model will be better and gives slightly worse yet comparable results. You can get the details on the model from <a href=\"https://github.com/BVLC/caffe/wiki/Model-Zoo\" rel=\"nofollow\">BVLC Caffe ModelZoo</a>. The NIN model is downloaded when you run <code>neural-style -download_models</code>.</p>\n<h2>Usage</h2>\n<p>Basic usage:</p>\n<pre><code>neural-style -style_image &lt;image.jpg&gt; -content_image &lt;image.jpg&gt;\n</code></pre>\n<p>cuDNN usage with NIN Model:</p>\n<pre><code>neural-style -style_image examples/inputs/picasso_selfport1907.jpg -content_image examples/inputs/brad_pitt.jpg -output_image profile.png -model_file models/nin_imagenet.pth -gpu 0 -backend cudnn -num_iterations 1000 -seed 123 -content_layers relu0,relu3,relu7,relu12 -style_layers relu0,relu3,relu7,relu12 -content_weight 10 -style_weight 500 -image_size 512 -optimizer adam\n</code></pre>\n<p><img alt=\"cuDNN NIN Model Picasso Brad Pitt\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5050e98d8fa927e5b0f6bbc6bf51d7499b5ef46d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f706974745f7069636173736f5f6e696e5f6375646e6e2e706e67\"></p>\n<p>To use multiple style images, pass a comma-separated list like this:</p>\n<p><code>-style_image starry_night.jpg,the_scream.jpg</code>.</p>\n<p>Note that paths to images should not contain the <code>~</code> character to represent your home directory; you should instead use a relative\npath or a full absolute path.</p>\n<p><strong>Options</strong>:</p>\n<ul>\n<li><code>-image_size</code>: Maximum side length (in pixels) of the generated image. Default is 512.</li>\n<li><code>-style_blend_weights</code>: The weight for blending the style of multiple style images, as a\ncomma-separated list, such as <code>-style_blend_weights 3,7</code>. By default all style images\nare equally weighted.</li>\n<li><code>-gpu</code>: Zero-indexed ID of the GPU to use; for CPU mode set <code>-gpu</code> to <code>c</code>.</li>\n</ul>\n<p><strong>Optimization options</strong>:</p>\n<ul>\n<li><code>-content_weight</code>: How much to weight the content reconstruction term. Default is 5e0.</li>\n<li><code>-style_weight</code>: How much to weight the style reconstruction term. Default is 1e2.</li>\n<li><code>-tv_weight</code>: Weight of total-variation (TV) regularization; this helps to smooth the image.\nDefault is 1e-3. Set to 0 to disable TV regularization.</li>\n<li><code>-num_iterations</code>: Default is 1000.</li>\n<li><code>-init</code>: Method for generating the generated image; one of <code>random</code> or <code>image</code>.\nDefault is <code>random</code> which uses a noise initialization as in the paper; <code>image</code>\ninitializes with the content image.</li>\n<li><code>-init_image</code>: Replaces the initialization image with a user specified image.</li>\n<li><code>-optimizer</code>: The optimization algorithm to use; either <code>lbfgs</code> or <code>adam</code>; default is <code>lbfgs</code>.\nL-BFGS tends to give better results, but uses more memory. Switching to ADAM will reduce memory usage;\nwhen using ADAM you will probably need to play with other parameters to get good results, especially\nthe style weight, content weight, and learning rate.</li>\n<li><code>-learning_rate</code>: Learning rate to use with the ADAM optimizer. Default is 1e1.</li>\n</ul>\n<p><strong>Output options</strong>:</p>\n<ul>\n<li><code>-output_image</code>: Name of the output image. Default is <code>out.png</code>.</li>\n<li><code>-print_iter</code>: Print progress every <code>print_iter</code> iterations. Set to 0 to disable printing.</li>\n<li><code>-save_iter</code>: Save the image every <code>save_iter</code> iterations. Set to 0 to disable saving intermediate results.</li>\n</ul>\n<p><strong>Layer options</strong>:</p>\n<ul>\n<li><code>-content_layers</code>: Comma-separated list of layer names to use for content reconstruction.\nDefault is <code>relu4_2</code>.</li>\n<li><code>-style_layers</code>: Comma-separated list of layer names to use for style reconstruction.\nDefault is <code>relu1_1,relu2_1,relu3_1,relu4_1,relu5_1</code>.</li>\n</ul>\n<p><strong>Other options</strong>:</p>\n<ul>\n<li><code>-style_scale</code>: Scale at which to extract features from the style image. Default is 1.0.</li>\n<li><code>-original_colors</code>: If you set this to 1, then the output image will keep the colors of the content image.</li>\n<li><code>-model_file</code>: Path to the <code>.pth</code> file for the VGG Caffe model. Default is the original VGG-19 model; you can also try the original VGG-16 model.</li>\n<li><code>-pooling</code>: The type of pooling layers to use; one of <code>max</code> or <code>avg</code>. Default is <code>max</code>.\nThe VGG-19 models uses max pooling layers, but the paper mentions that replacing these layers with average\npooling layers can improve the results. I haven't been able to get good results using average pooling, but\nthe option is here.</li>\n<li><code>-seed</code>: An integer value that you can specify for repeatable results. By default this value is random for each run.</li>\n<li><code>-multidevice_strategy</code>: A comma-separated list of layer indices at which to split the network when using multiple devices. See <a href=\"https://github.com/ProGamerGov/neural-style-pt/tree/pip-master#multi-gpu-scaling\" rel=\"nofollow\">Multi-GPU scaling</a> for more details.</li>\n<li><code>-backend</code>: <code>nn</code>, <code>cudnn</code>, or <code>mkl</code>. Default is <code>nn</code>.\n<code>mkl</code> requires Intel's MKL backend.</li>\n<li><code>-cudnn_autotune</code>: When using the cuDNN backend, pass this flag to use the built-in cuDNN autotuner to select\nthe best convolution algorithms for your architecture. This will make the first iteration a bit slower and can\ntake a bit more memory, but may significantly speed up the cuDNN backend.</li>\n<li><code>-download_models</code>: Path to where the VGG-19, VGG-16, and NIN models will be downloaded to. If no path is specified, the models will be downloaded to your home directory.</li>\n</ul>\n<h2>Frequently Asked Questions</h2>\n<p><strong>Problem:</strong> The program runs out of memory and dies</p>\n<p><strong>Solution:</strong> Try reducing the image size: <code>-image_size 256</code> (or lower). Note that different image sizes will likely\nrequire non-default values for <code>-style_weight</code> and <code>-content_weight</code> for optimal results.\nIf you are running on a GPU, you can also try running with <code>-backend cudnn</code> to reduce memory usage.</p>\n<p><strong>Problem:</strong> <code>-backend cudnn</code> is slower than default NN backend</p>\n<p><strong>Solution:</strong> Add the flag <code>-cudnn_autotune</code>; this will use the built-in cuDNN autotuner to select the best convolution algorithms.</p>\n<p><strong>Problem:</strong> Get the following error message:</p>\n<p><code>Missing key(s) in state_dict: \"classifier.0.bias\", \"classifier.0.weight\", \"classifier.3.bias\", \"classifier.3.weight\". Unexpected key(s) in state_dict: \"classifier.1.weight\", \"classifier.1.bias\", \"classifier.4.weight\", \"classifier.4.bias\".</code></p>\n<p><strong>Solution:</strong> Due to a mix up with layer locations, older models require a fix to be compatible with newer versions of PyTorch. Donwloading the models with <code>neural-style -download_models</code> will automatically perform these fixes after downloading the models. You can find other compatible models <a href=\"https://github.com/ProGamerGov/neural-style-pt/wiki/Other-Models\" rel=\"nofollow\">here</a>.</p>\n<h2>Memory Usage</h2>\n<p>By default, <code>neural-style-pt</code> uses the <code>nn</code> backend for convolutions and L-BFGS for optimization. These give good results, but can both use a lot of memory. You can reduce memory usage with the following:</p>\n<ul>\n<li><strong>Use cuDNN</strong>: Add the flag <code>-backend cudnn</code> to use the cuDNN backend. This will only work in GPU mode.</li>\n<li><strong>Use ADAM</strong>: Add the flag <code>-optimizer adam</code> to use ADAM instead of L-BFGS. This should significantly\nreduce memory usage, but may require tuning of other parameters for good results; in particular you should\nplay with the learning rate, content weight, and style weight.\nThis should work in both CPU and GPU modes.</li>\n<li><strong>Reduce image size</strong>: If the above tricks are not enough, you can reduce the size of the generated image;\npass the flag <code>-image_size 256</code> to generate an image at half the default size.</li>\n</ul>\n<p>With the default settings, neural-style-pt uses about 3.7 GB of GPU memory on my system; switching to ADAM and cuDNN reduces the GPU memory footprint to about 1GB.</p>\n<h2>Speed</h2>\n<p>Speed can vary a lot depending on the backend and the optimizer.\nHere are some times for running 500 iterations with <code>-image_size=512</code> on a Tesla K80 with different settings:</p>\n<ul>\n<li><code>-backend nn -optimizer lbfgs</code>: 117 seconds</li>\n<li><code>-backend nn -optimizer adam</code>: 100 seconds</li>\n<li><code>-backend cudnn -optimizer lbfgs</code>: 124 seconds</li>\n<li><code>-backend cudnn -optimizer adam</code>: 107 seconds</li>\n<li><code>-backend cudnn -cudnn_autotune -optimizer lbfgs</code>: 109 seconds</li>\n<li><code>-backend cudnn -cudnn_autotune -optimizer adam</code>: 91 seconds</li>\n</ul>\n<p>Here are the same benchmarks on a GTX 1080:</p>\n<ul>\n<li><code>-backend nn -optimizer lbfgs</code>: 56 seconds</li>\n<li><code>-backend nn -optimizer adam</code>: 38 seconds</li>\n<li><code>-backend cudnn -optimizer lbfgs</code>: 40 seconds</li>\n<li><code>-backend cudnn -optimizer adam</code>: 40 seconds</li>\n<li><code>-backend cudnn -cudnn_autotune -optimizer lbfgs</code>: 23 seconds</li>\n<li><code>-backend cudnn -cudnn_autotune -optimizer adam</code>: 24 seconds</li>\n</ul>\n<h2>Multi-GPU scaling</h2>\n<p>You can use multiple CPU and GPU devices to process images at higher resolutions; different layers of the network will be\ncomputed on different devices. You can control which GPU and CPU devices are used with the <code>-gpu</code> flag, and you can control\nhow to split layers across devices using the <code>-multidevice_strategy</code> flag.</p>\n<p>For example in a server with four GPUs, you can give the flag <code>-gpu 0,1,2,3</code> to process on GPUs 0, 1, 2, and 3 in that order; by also giving the flag <code>-multidevice_strategy 3,6,12</code> you indicate that the first two layers should be computed on GPU 0, layers 3 to 5 should be computed on GPU 1, layers 6 to 11 should be computed on GPU 2, and the remaining layers should be computed on GPU 3. You will need to tune the <code>-multidevice_strategy</code> for your setup in order to achieve maximal resolution.</p>\n<p>We can achieve very high quality results at high resolution by combining multi-GPU processing with multiscale\ngeneration as described in the paper\n<a href=\"https://arxiv.org/abs/1611.07865\" rel=\"nofollow\"><strong>Controlling Perceptual Factors in Neural Style Transfer</strong></a> by Leon A. Gatys,\nAlexander S. Ecker, Matthias Bethge, Aaron Hertzmann and Eli Shechtman.</p>\n<p>Here is a 4016 x 2213 image generated on a server with eight Tesla K80 GPUs:</p>\n<img height=\"400px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fdbf6ff4e322f3dce35ab27b583b462dd1627e8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f50726f47616d6572476f762f6e657572616c2d7374796c652d70742f6d61737465722f6578616d706c65732f6f7574707574732f7374617272795f7374616e666f72645f6269676765722e706e67\">\n<p>The script used to generate this image <a href=\"examples/scripts/starry_stanford_bigger.sh\" rel=\"nofollow\">can be found here</a>.</p>\n<h2>Implementation details</h2>\n<p>Images are initialized with white noise and optimized using L-BFGS.</p>\n<p>We perform style reconstructions using the <code>conv1_1</code>, <code>conv2_1</code>, <code>conv3_1</code>, <code>conv4_1</code>, and <code>conv5_1</code> layers\nand content reconstructions using the <code>conv4_2</code> layer. As in the paper, the five style reconstruction losses have\nequal weights.</p>\n<h2>Citation</h2>\n<p>If you find this code useful for your research, please cite:</p>\n<pre><code>@misc{ProGamerGov2018,\nauthor = {ProGamerGov},\ntitle = {neural-style-pt},\nyear = {2018},\npublisher = {GitHub},\njournal = {GitHub repository},\nhowpublished = {\\url{https://github.com/ProGamerGov/neural-style-pt}},\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6637310, "releases": {"0.0.1.dev1": [{"comment_text": "", "digests": {"md5": "2dc71ab16099583d6a69a83369864891", "sha256": "1d588ea778c336ccff292b02ff957b2cd5fd0abf85039b3d1146ccbe5560a061"}, "downloads": -1, "filename": "neural_style-0.0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "2dc71ab16099583d6a69a83369864891", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13810, "upload_time": "2019-08-01T16:46:57", "upload_time_iso_8601": "2019-08-01T16:46:57.681539Z", "url": "https://files.pythonhosted.org/packages/fc/dc/f9f60acaa079466ce6955aa5d1d764e78faba6e8c3e56e955b2552c10701/neural_style-0.0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "699eea4c591c319b9255f5f3ee2bd2e4", "sha256": "9bfc4c85826fda06388dd5d1c0e8c65e1064de3a92a935a5cc36ce1fb376e227"}, "downloads": -1, "filename": "neural-style-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "699eea4c591c319b9255f5f3ee2bd2e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14170, "upload_time": "2019-08-01T16:46:59", "upload_time_iso_8601": "2019-08-01T16:46:59.924204Z", "url": "https://files.pythonhosted.org/packages/29/3c/a7fea2589a0a49e2c759dbd4c457527671db075626dcc3e0864457167948/neural-style-0.0.1.dev1.tar.gz", "yanked": false}], "0.0.2.dev1": [{"comment_text": "", "digests": {"md5": "3bf10851ea8edf873acd15b28dd1518e", "sha256": "241b00716ffdcbbee329dbf8d2e9e90006bc28f073ef03f501cd49d58212f945"}, "downloads": -1, "filename": "neural_style-0.0.2.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3bf10851ea8edf873acd15b28dd1518e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13832, "upload_time": "2019-08-01T23:22:29", "upload_time_iso_8601": "2019-08-01T23:22:29.467325Z", "url": "https://files.pythonhosted.org/packages/01/f4/cfeb0d368edcb82f2fa07765ae429896c33666fb6c8c4a82ae4907423ff6/neural_style-0.0.2.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c58ab7d4555da766ca2cc57980d6ccfe", "sha256": "d89a09a4b164e81be790a0af0995aaf79bb23647be10397b281a2be07b8316d5"}, "downloads": -1, "filename": "neural_style-0.0.2.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "c58ab7d4555da766ca2cc57980d6ccfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13829, "upload_time": "2019-08-01T23:14:00", "upload_time_iso_8601": "2019-08-01T23:14:00.215746Z", "url": "https://files.pythonhosted.org/packages/62/b7/4d832a5b3ffd98d887b7bfe1bb8dc17f95a0557494e2afdf0d5615f0effd/neural_style-0.0.2.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ed0aaf9dd01d194eeb15255253d582d", "sha256": "11012826fd12080fa092014e7dc455acfa0cad4b5af14668809c350c755095fc"}, "downloads": -1, "filename": "neural-style-0.0.2.dev1.tar.gz", "has_sig": false, "md5_digest": "9ed0aaf9dd01d194eeb15255253d582d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14151, "upload_time": "2019-08-01T23:14:01", "upload_time_iso_8601": "2019-08-01T23:14:01.791516Z", "url": "https://files.pythonhosted.org/packages/4a/f7/f082306ac6a122545cbf1803843048c97b5b9cac776c9b3ca20a87dc8fb3/neural-style-0.0.2.dev1.tar.gz", "yanked": false}], "0.0.2.dev2": [{"comment_text": "", "digests": {"md5": "f0b8e9c0dfa0736b10484cfa040ff1e9", "sha256": "efabafe0cac544aac6a62e436da00f6a211f492cc1f827b696e01ed93029351d"}, "downloads": -1, "filename": "neural_style-0.0.2.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0b8e9c0dfa0736b10484cfa040ff1e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13896, "upload_time": "2019-08-02T00:18:56", "upload_time_iso_8601": "2019-08-02T00:18:56.031455Z", "url": "https://files.pythonhosted.org/packages/e6/94/9194a7a1dd3844f4eb8251c30b13f8692c2e89d8dc68230456792b114879/neural_style-0.0.2.dev2-py2.py3-none-any.whl", "yanked": false}], "0.0.3.dev1": [{"comment_text": "", "digests": {"md5": "aa16822aea2af696125057d7fcec085d", "sha256": "6d626c18a3896902ef45816086d4e33da45089fcea13c91edac2c9472279bd79"}, "downloads": -1, "filename": "neural_style-0.0.3.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa16822aea2af696125057d7fcec085d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13836, "upload_time": "2019-08-02T00:25:20", "upload_time_iso_8601": "2019-08-02T00:25:20.746662Z", "url": "https://files.pythonhosted.org/packages/7e/b3/ae7a0c65fa923bb6306f79f309635b0f84c91e953e91a2165acb99a16301/neural_style-0.0.3.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "603062e6d9d166d6f0679a61c2ca7fcb", "sha256": "605392e944f8f48a1fa01d7f9658990593c1109c770923f6d9b5b665391fdd21"}, "downloads": -1, "filename": "neural-style-0.0.3.dev1.tar.gz", "has_sig": false, "md5_digest": "603062e6d9d166d6f0679a61c2ca7fcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14162, "upload_time": "2019-08-02T00:26:03", "upload_time_iso_8601": "2019-08-02T00:26:03.274791Z", "url": "https://files.pythonhosted.org/packages/69/26/a1753628baded8359a029cc82fa325081693c3daf9a51d239fc9ac9e51a9/neural-style-0.0.3.dev1.tar.gz", "yanked": false}], "0.0.3.dev2": [{"comment_text": "", "digests": {"md5": "56e1c914526c4e94e083a6b1be3c1a05", "sha256": "ac379e1dd75c5d22b6149106c25e79e606a05f13618d2508d481d47ab31eafb3"}, "downloads": -1, "filename": "neural_style-0.0.3.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "56e1c914526c4e94e083a6b1be3c1a05", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13836, "upload_time": "2019-08-02T00:31:27", "upload_time_iso_8601": "2019-08-02T00:31:27.845442Z", "url": "https://files.pythonhosted.org/packages/4c/3a/6f76426f75348b268bbcfa0cb7d7472c02ca03a8391ac741a978a9b30aa1/neural_style-0.0.3.dev2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c31f7cba7a3d84dc52ff67b0b721e4b", "sha256": "a7c8a028bf08f5a329f14eb185bf3091776da388d86ce170689abbfe8fa0489c"}, "downloads": -1, "filename": "neural-style-0.0.3.dev2.tar.gz", "has_sig": false, "md5_digest": "6c31f7cba7a3d84dc52ff67b0b721e4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14167, "upload_time": "2019-08-02T00:31:30", "upload_time_iso_8601": "2019-08-02T00:31:30.833150Z", "url": "https://files.pythonhosted.org/packages/ac/fd/4af46c7d3b53b32a48d17de3644fce84a498b6c33db938ad1caa4ff7eceb/neural-style-0.0.3.dev2.tar.gz", "yanked": false}], "0.0.4.dev1": [{"comment_text": "", "digests": {"md5": "1b6b644e81728d54080d0d7cc3420336", "sha256": "c02f38ef09660049371a7d298268d7329086984d5cb4f022c35a3637f4068f83"}, "downloads": -1, "filename": "neural_style-0.0.4.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1b6b644e81728d54080d0d7cc3420336", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14005, "upload_time": "2019-08-02T00:48:13", "upload_time_iso_8601": "2019-08-02T00:48:13.654868Z", "url": "https://files.pythonhosted.org/packages/cb/f9/c29cebaeeb08b75fbf86fefdc851dabd605d72a4e465a57bd84b27c3df29/neural_style-0.0.4.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79ae27e87b71765db6cd8e80af4bd117", "sha256": "d819699f8c3c6f43eba92a17f72ed383d1826a29f6ef0e1047b7be99bfdc2a8f"}, "downloads": -1, "filename": "neural-style-0.0.4.dev1.tar.gz", "has_sig": false, "md5_digest": "79ae27e87b71765db6cd8e80af4bd117", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14286, "upload_time": "2019-08-02T00:48:15", "upload_time_iso_8601": "2019-08-02T00:48:15.274411Z", "url": "https://files.pythonhosted.org/packages/78/09/a48f6ed580702207b93e88088426c4a8e63287ddc874c0a897360590a0d3/neural-style-0.0.4.dev1.tar.gz", "yanked": false}], "0.0.4.dev2": [{"comment_text": "", "digests": {"md5": "99c25133756780ae4672e541ceed9758", "sha256": "b337adbb794470c4cbff52e551564ac06f95b6f96ba6a1fa4f3ac0434c1476be"}, "downloads": -1, "filename": "neural_style-0.0.4.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "99c25133756780ae4672e541ceed9758", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14055, "upload_time": "2019-08-02T00:52:33", "upload_time_iso_8601": "2019-08-02T00:52:33.700000Z", "url": "https://files.pythonhosted.org/packages/31/c3/cf9453c4569108b00bdc257d43311d9cc6601ed22d7f31b3bddbc6c3a36f/neural_style-0.0.4.dev2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14aa5124fa43f512ee5cd8ace54d72b7", "sha256": "c442d6bc25fdebe174e88abcc7ca73901ef0a7a0334c8c42f2d5dcaa648f9b2c"}, "downloads": -1, "filename": "neural-style-0.0.4.dev2.tar.gz", "has_sig": false, "md5_digest": "14aa5124fa43f512ee5cd8ace54d72b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14321, "upload_time": "2019-08-02T00:52:36", "upload_time_iso_8601": "2019-08-02T00:52:36.296837Z", "url": "https://files.pythonhosted.org/packages/9e/59/399d5ba7c4f877351701ba746f7b0ad331fc2975c3ff23a76794ebec1729/neural-style-0.0.4.dev2.tar.gz", "yanked": false}], "0.0.4.dev3": [{"comment_text": "", "digests": {"md5": "0c5f64e8d469bce648684c49d2bb758f", "sha256": "c5e8c97b0b3bd1fb51585d5d4c1c3f062a0b384cc430e78aee082e2f053ea9be"}, "downloads": -1, "filename": "neural_style-0.0.4.dev3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c5f64e8d469bce648684c49d2bb758f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14060, "upload_time": "2019-08-02T00:55:55", "upload_time_iso_8601": "2019-08-02T00:55:55.151626Z", "url": "https://files.pythonhosted.org/packages/56/1b/f6a4716a9b3c208b908da72dea84b1390007b3f1938f9a38c8edb5909f91/neural_style-0.0.4.dev3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "450232e44ee3d270a947dcc872bdb872", "sha256": "7d1da2e74fcc501fff2566e72cb97ddfae98ba9cc7f69c1cd8d00aa667fff509"}, "downloads": -1, "filename": "neural-style-0.0.4.dev3.tar.gz", "has_sig": false, "md5_digest": "450232e44ee3d270a947dcc872bdb872", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14323, "upload_time": "2019-08-02T00:55:58", "upload_time_iso_8601": "2019-08-02T00:55:58.272639Z", "url": "https://files.pythonhosted.org/packages/a8/a5/f7db5a642968fc00d4476eb5e0fc8b7818ea9110cb202fd5bdf4c2f626d0/neural-style-0.0.4.dev3.tar.gz", "yanked": false}], "0.0.4.dev4": [{"comment_text": "", "digests": {"md5": "aa4b420a33b7fef0bf0954633f81b705", "sha256": "9d380e16253b71080c5a29500946e4968ef9cdb9c7ce23eb574293759578013f"}, "downloads": -1, "filename": "neural_style-0.0.4.dev4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa4b420a33b7fef0bf0954633f81b705", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14063, "upload_time": "2019-08-02T00:57:54", "upload_time_iso_8601": "2019-08-02T00:57:54.947638Z", "url": "https://files.pythonhosted.org/packages/2f/d7/6b0aa160796b59fab74c7f0e51e947f95d84d28939be35abe124ff49fbfe/neural_style-0.0.4.dev4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cb67734788372d431b1bb3ee906b5e2", "sha256": "fd65e0e1319e5225353bb1b1b8cd9f5226257a122b7d64b059924c7b887b1ee4"}, "downloads": -1, "filename": "neural-style-0.0.4.dev4.tar.gz", "has_sig": false, "md5_digest": "6cb67734788372d431b1bb3ee906b5e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14320, "upload_time": "2019-08-02T00:57:58", "upload_time_iso_8601": "2019-08-02T00:57:58.846792Z", "url": "https://files.pythonhosted.org/packages/7b/bb/701d21365c2a8ed5f19385f8b4d0de6d32f0f7aff89ca5113565dea15ad8/neural-style-0.0.4.dev4.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "db7f63667ce652c230d7207c5715760a", "sha256": "e27af77939204886f6e6f7745ce80619ce64da9e480cded9b07a764be39d675a"}, "downloads": -1, "filename": "neural_style-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "db7f63667ce652c230d7207c5715760a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14027, "upload_time": "2019-09-04T17:44:26", "upload_time_iso_8601": "2019-09-04T17:44:26.425020Z", "url": "https://files.pythonhosted.org/packages/90/f6/b2530c7b671c713e976b6ab12a15dad368377934ecdc387234fe4f19e6ab/neural_style-0.1-py2.py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ea125d22e9f0e8c65931192d8b0444d2", "sha256": "0ee8613644260cecdf051a3ced8a107d641931e4ff2d5e9eac5ecb4ef20e7728"}, "downloads": -1, "filename": "neural_style-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea125d22e9f0e8c65931192d8b0444d2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14263, "upload_time": "2019-09-16T00:07:46", "upload_time_iso_8601": "2019-09-16T00:07:46.831041Z", "url": "https://files.pythonhosted.org/packages/37/33/552d8d704bb80ee1a65182e0980c8655b8c671d76045bf75c98afb422b23/neural_style-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8707055b98952a5078f015c0c023c9da", "sha256": "241a50fa41f89d05acb54c6ff8c9c956afce20eb52b520cf83098f43897bf73b"}, "downloads": -1, "filename": "neural_style-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8707055b98952a5078f015c0c023c9da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14260, "upload_time": "2019-09-16T00:10:46", "upload_time_iso_8601": "2019-09-16T00:10:46.842783Z", "url": "https://files.pythonhosted.org/packages/7a/f5/67a266d2e679bdf4a6c24bef76e8cab99f0bfa60b38dd0890476e772d704/neural_style-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1c3519586d7f45992d010a086d9274c", "sha256": "b8b6c707bbf41c90b37dc29afd1532c67afb1c833012bf46d57a9e055ab45762"}, "downloads": -1, "filename": "neural-style-0.2.tar.gz", "has_sig": false, "md5_digest": "a1c3519586d7f45992d010a086d9274c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13516, "upload_time": "2019-09-16T00:07:48", "upload_time_iso_8601": "2019-09-16T00:07:48.427160Z", "url": "https://files.pythonhosted.org/packages/c8/0b/a729007dca1c17f6fd8ac9f13f3a066ea31bc89b2ff012b80ed70231a818/neural-style-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3b63ad4fd14d2443cdad23e95d774549", "sha256": "5907cc369ec3bd98391f502f62c2c2bf9c577f4ce3adfe3d50ed53530353e909"}, "downloads": -1, "filename": "neural_style-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "3b63ad4fd14d2443cdad23e95d774549", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 14865, "upload_time": "2019-09-29T00:41:38", "upload_time_iso_8601": "2019-09-29T00:41:38.087191Z", "url": "https://files.pythonhosted.org/packages/45/75/5cad0592f065e7a7b208f720ee435294e7c714c986f297552d6d7fe9db6f/neural_style-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83eeb4d920b0092c6db8a9fd9893b630", "sha256": "68f465c0e4f584d2823b6d0a692c66e33f28b6001c06289e9f1444d7b95b01fd"}, "downloads": -1, "filename": "neural_style-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83eeb4d920b0092c6db8a9fd9893b630", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14869, "upload_time": "2019-09-29T00:41:39", "upload_time_iso_8601": "2019-09-29T00:41:39.862284Z", "url": "https://files.pythonhosted.org/packages/ae/33/0ef625bebf888345cf47d4cc8158bb597f139f1fa133e72635a3d7450cf4/neural_style-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9506524d5d7f5204a2e6078cb919f00b", "sha256": "7e0c6af4aa94aedbb8c6e0d8935f60da1cdb809180a8be44fbef78c6a033a50f"}, "downloads": -1, "filename": "neural_style-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9506524d5d7f5204a2e6078cb919f00b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14863, "upload_time": "2019-09-29T00:41:41", "upload_time_iso_8601": "2019-09-29T00:41:41.764051Z", "url": "https://files.pythonhosted.org/packages/c6/f3/9e7e943c0742c9c2ee4d2b0a043e342003809d80765de5bd2687996fce0e/neural_style-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4030aa48b64835a7ef4fea954faf17c2", "sha256": "5c076e0ceb7542e5c30f0eeaa02a1f7978f06cd023685e0a7bfac12e5834f1ff"}, "downloads": -1, "filename": "neural-style-0.3.tar.gz", "has_sig": false, "md5_digest": "4030aa48b64835a7ef4fea954faf17c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15311, "upload_time": "2019-09-29T00:41:43", "upload_time_iso_8601": "2019-09-29T00:41:43.603807Z", "url": "https://files.pythonhosted.org/packages/d5/1c/9371005df318434e054d76e935e64205ed69ba9660ec0c7eff6dbc8e5ac2/neural-style-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f8baf17091326d054e0b36256c026b1a", "sha256": "64ea953223ea5d28bd435c2d412d2ec4a7c12ccb05c7f9bae13892b8ee4a6f7f"}, "downloads": -1, "filename": "neural_style-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "f8baf17091326d054e0b36256c026b1a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 14862, "upload_time": "2019-09-29T00:54:34", "upload_time_iso_8601": "2019-09-29T00:54:34.038808Z", "url": "https://files.pythonhosted.org/packages/89/6f/269563ba6b2477e6133377aa2316156c1dae9049477471b031edc9ff738d/neural_style-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4920560ce7c0782a8ad338a46d8ca992", "sha256": "fbb0584810bdce92cdc441deb8951eb67ce3b719d18e86af4aac312bc37c6257"}, "downloads": -1, "filename": "neural_style-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4920560ce7c0782a8ad338a46d8ca992", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14866, "upload_time": "2019-09-29T00:54:47", "upload_time_iso_8601": "2019-09-29T00:54:47.271082Z", "url": "https://files.pythonhosted.org/packages/4b/43/f5aeb268231e94bac30d5b547d7e91439e42af58ca8ac0443f10bd7d5810/neural_style-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49d42aed0747c7d0615aa6aa8b04d343", "sha256": "76133cc2c5232aca0e5c05c493c6c3ebfb453b8077529051cb64ae19d8d79c28"}, "downloads": -1, "filename": "neural_style-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "49d42aed0747c7d0615aa6aa8b04d343", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14861, "upload_time": "2019-09-29T00:54:48", "upload_time_iso_8601": "2019-09-29T00:54:48.916741Z", "url": "https://files.pythonhosted.org/packages/1b/b4/611366f763cbf55863c5fadde1529534f27b7a3e229a0205254b25dcd12b/neural_style-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6deef228bc16b76178e313eb1ecaf028", "sha256": "4ed6fc64d60c4eccf7ba0cf9dff9722f5a211eb79208fccb8d97b5644976e50e"}, "downloads": -1, "filename": "neural-style-0.4.tar.gz", "has_sig": false, "md5_digest": "6deef228bc16b76178e313eb1ecaf028", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15324, "upload_time": "2019-09-29T00:54:50", "upload_time_iso_8601": "2019-09-29T00:54:50.707215Z", "url": "https://files.pythonhosted.org/packages/76/d5/a6783660ec4bbf82298837644d99faee65f156dacef09e790c7d0c90060b/neural-style-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "21ceb570e5e379bb79f249630c9d3017", "sha256": "c950ea0f7cbb533249bce85f59373b81f4c75ca51ed2299aeaec52ebfd69cda4"}, "downloads": -1, "filename": "neural_style-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "21ceb570e5e379bb79f249630c9d3017", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 14947, "upload_time": "2019-09-29T18:09:14", "upload_time_iso_8601": "2019-09-29T18:09:14.980902Z", "url": "https://files.pythonhosted.org/packages/d5/b1/9051d06d321e8b8bd5872a251666b046929b2308aac5cf8c7a107f1812c6/neural_style-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "098d823bd121a91de07910e93a2355bf", "sha256": "3c464d10eabf0ffc391ba9dcd1fb17771fa5d0d364958fad47d939d2420d3171"}, "downloads": -1, "filename": "neural_style-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "098d823bd121a91de07910e93a2355bf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14952, "upload_time": "2019-09-29T18:09:16", "upload_time_iso_8601": "2019-09-29T18:09:16.693709Z", "url": "https://files.pythonhosted.org/packages/8d/87/1663ed48e0a7c510a259d77ea256e34fd68a4869cfab0964a7d4daf19857/neural_style-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9ee8cd770b0b1e1498202025e82940b", "sha256": "e05be5b01f9aefe0e10fb936445440448981d76e1dd589846f3a93e631dfa69c"}, "downloads": -1, "filename": "neural_style-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9ee8cd770b0b1e1498202025e82940b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14947, "upload_time": "2019-09-29T18:09:18", "upload_time_iso_8601": "2019-09-29T18:09:18.437810Z", "url": "https://files.pythonhosted.org/packages/78/62/8591393333662a19f5a896ca72a8cea25e065726c9750abe038041631938/neural_style-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09b6c1466f5dda7682b99a09795aff1e", "sha256": "03568554d47b10fa8adc2327acde98e43dc162d226eb15ec548d160b34c1d946"}, "downloads": -1, "filename": "neural-style-0.4.1.tar.gz", "has_sig": false, "md5_digest": "09b6c1466f5dda7682b99a09795aff1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15445, "upload_time": "2019-09-29T18:09:20", "upload_time_iso_8601": "2019-09-29T18:09:20.186786Z", "url": "https://files.pythonhosted.org/packages/e6/05/b59cfb5cc246849c9a28f773b8acc0f1fec231a0458d47e669f6aa783044/neural-style-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "393e5b9a88d41aa5a06c4a5004018152", "sha256": "ed95146a84c77bca59133fc2234a502e656a7768c00cad41918873087f8fdb9c"}, "downloads": -1, "filename": "neural_style-0.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "393e5b9a88d41aa5a06c4a5004018152", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 14961, "upload_time": "2019-09-29T18:10:21", "upload_time_iso_8601": "2019-09-29T18:10:21.031144Z", "url": "https://files.pythonhosted.org/packages/2f/57/ed37577e8ff570cb0a9a5327a2d935e86213bca4d3ab28557e2c1e01e068/neural_style-0.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab1b3cf2012d5b202a858c3a27cd0fd1", "sha256": "36e32a3c2694a89bfe46c677d0846396148fd4957edc770fafcadb65d421ee20"}, "downloads": -1, "filename": "neural_style-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab1b3cf2012d5b202a858c3a27cd0fd1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14964, "upload_time": "2019-09-29T18:10:22", "upload_time_iso_8601": "2019-09-29T18:10:22.806524Z", "url": "https://files.pythonhosted.org/packages/4d/dd/dcca30896a897e014aa2db26d73f0b77661de20ba4eb5002a331f20fe451/neural_style-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd0ab069c153efdf3cdf22d889569650", "sha256": "de14b0a4c2db70331dd6bad90d1be234d6e015eada42a99cb1f7e84f5c0a9e30"}, "downloads": -1, "filename": "neural_style-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fd0ab069c153efdf3cdf22d889569650", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14961, "upload_time": "2019-09-29T18:10:25", "upload_time_iso_8601": "2019-09-29T18:10:25.096737Z", "url": "https://files.pythonhosted.org/packages/8d/28/56f6541e2a23cf346c78ac78efdf6cb6102e64870360f28bb5ecdd0d1984/neural_style-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5587e127c235d3ef019109d07df0aa0", "sha256": "398b9ff548f81f8dd87e968f0cefb586d0f453702c65469f9bb78ae4e23bfd4c"}, "downloads": -1, "filename": "neural-style-0.4.2.tar.gz", "has_sig": false, "md5_digest": "c5587e127c235d3ef019109d07df0aa0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15478, "upload_time": "2019-09-29T18:10:26", "upload_time_iso_8601": "2019-09-29T18:10:26.534074Z", "url": "https://files.pythonhosted.org/packages/68/78/adba3f0e3dff4cf0d22c25814399b87d2369fb53c5d48da9335fdfe44a09/neural-style-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "a44628756655aef0cb4e3df6fb65f041", "sha256": "ce3d524a78569d175bf4b713c0214b64eea47f47fb7901400d855ea08385fb8b"}, "downloads": -1, "filename": "neural_style-0.4.3-py2-none-any.whl", "has_sig": false, "md5_digest": "a44628756655aef0cb4e3df6fb65f041", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15092, "upload_time": "2019-10-05T15:53:15", "upload_time_iso_8601": "2019-10-05T15:53:15.949367Z", "url": "https://files.pythonhosted.org/packages/57/8e/52a3b25fa0ec8b71d5375531844e3321a0ea839f835b819ddefaaf10a051/neural_style-0.4.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e64123101c27bde977b5a018ddc2d48", "sha256": "42ddb8dbc5b104213ae94130d80b5a1bb9ea7becdb591d04a3499bb6a8b3dfa6"}, "downloads": -1, "filename": "neural_style-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e64123101c27bde977b5a018ddc2d48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15095, "upload_time": "2019-10-05T15:53:17", "upload_time_iso_8601": "2019-10-05T15:53:17.421173Z", "url": "https://files.pythonhosted.org/packages/bd/22/c38d232da8dc6164ab8a8232ebda8fb1f86a5e9bb9c72633bc432b70f774/neural_style-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a750f460795ed3b49367d65206fc4fb", "sha256": "0ca10e59cd2057a6108b81ac76381b17a87fa2497f00c887bb30f6b8ff9c89d2"}, "downloads": -1, "filename": "neural_style-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4a750f460795ed3b49367d65206fc4fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15092, "upload_time": "2019-10-05T15:53:19", "upload_time_iso_8601": "2019-10-05T15:53:19.151446Z", "url": "https://files.pythonhosted.org/packages/c6/65/970297e574960cf7471e9c3c8bb607560dcd742d91f62d0556c9a991d72d/neural_style-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "901bb894434ad293994831e2040f92ff", "sha256": "6053fb7f352f7e5df5fc8a29c4ca55fa975542550c76c2f0a894a249cb4d7ee5"}, "downloads": -1, "filename": "neural-style-0.4.3.tar.gz", "has_sig": false, "md5_digest": "901bb894434ad293994831e2040f92ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15600, "upload_time": "2019-10-05T15:53:20", "upload_time_iso_8601": "2019-10-05T15:53:20.640714Z", "url": "https://files.pythonhosted.org/packages/d0/20/bde29deea1c472dcb0f352513a6b96a557c1d96665fda4cb3224826a0980/neural-style-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "9381de547e5445bceae2e4b99722a05c", "sha256": "b92d6075758a51d60a410f581ac72c0085b3bcb2fb58ea15e1feb49914471c9d"}, "downloads": -1, "filename": "neural_style-0.4.4-py2-none-any.whl", "has_sig": false, "md5_digest": "9381de547e5445bceae2e4b99722a05c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15100, "upload_time": "2019-10-05T16:02:57", "upload_time_iso_8601": "2019-10-05T16:02:57.133767Z", "url": "https://files.pythonhosted.org/packages/a9/6b/b161ce4014bb68b2d3534fa8dc9348fda3c5c7ca692cab054faeb0fa10ab/neural_style-0.4.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e3f9e92ef249102f3a489064fa0abb2", "sha256": "1ca4f5bc557cf230260e99c88545ad6b6aec0345fed83bf3ad7bb0091897d78d"}, "downloads": -1, "filename": "neural_style-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e3f9e92ef249102f3a489064fa0abb2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15102, "upload_time": "2019-10-05T16:02:58", "upload_time_iso_8601": "2019-10-05T16:02:58.842929Z", "url": "https://files.pythonhosted.org/packages/ed/b4/9a7444bd0bd6be42b3987bf7514e4e86d580be303d6db3a14f20a582ba2e/neural_style-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ad076ff1f123606aaf0866c32c0469e", "sha256": "3d05c722051892545b1f5809d42a7433fdb1c0b4c66d9803a52992d873bc0042"}, "downloads": -1, "filename": "neural_style-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5ad076ff1f123606aaf0866c32c0469e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15099, "upload_time": "2019-10-05T16:03:00", "upload_time_iso_8601": "2019-10-05T16:03:00.491998Z", "url": "https://files.pythonhosted.org/packages/19/dc/9ca1094508fe029551b2741476486a19e4de66de592afac09e9c880da592/neural_style-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d73058253b33d26e7bcd49c681dcdd40", "sha256": "4f840c518cfb20558d4c7200a3e4df32657ea38c3f06ab6b2f9ee2e60f2359c5"}, "downloads": -1, "filename": "neural-style-0.4.4.tar.gz", "has_sig": false, "md5_digest": "d73058253b33d26e7bcd49c681dcdd40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15609, "upload_time": "2019-10-05T16:03:02", "upload_time_iso_8601": "2019-10-05T16:03:02.197773Z", "url": "https://files.pythonhosted.org/packages/b1/d2/ffd3b5ca568b47e7848bd536ce23eae30e9831fff814fe3f78633a77d040/neural-style-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "62eb676e18b6b78041f857525a81460e", "sha256": "293120115d4129651848972cf09ee8bbc1db59abf10b8bb383cda643064a281e"}, "downloads": -1, "filename": "neural_style-0.4.5-py2-none-any.whl", "has_sig": false, "md5_digest": "62eb676e18b6b78041f857525a81460e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15139, "upload_time": "2019-10-05T16:14:57", "upload_time_iso_8601": "2019-10-05T16:14:57.926136Z", "url": "https://files.pythonhosted.org/packages/41/2a/698c05d07ec53f9cd6844f766d9394d99fa0d47a3fb50026e6970e41e5cf/neural_style-0.4.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b85cfc2ff96705e501eae1c4a2c5c261", "sha256": "b7b6196f5daab4aa4eec5e4cd951beea20ede02e6f159cd346c2bea85fb06f45"}, "downloads": -1, "filename": "neural_style-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b85cfc2ff96705e501eae1c4a2c5c261", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15142, "upload_time": "2019-10-05T16:14:59", "upload_time_iso_8601": "2019-10-05T16:14:59.604564Z", "url": "https://files.pythonhosted.org/packages/42/9c/2a6943892f10094bdc48f8a51db2f734c7ee09611ff77f2ab8ff6ace3be4/neural_style-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3736b3f50db9037da0f63cda1a36ae79", "sha256": "eca9f5389e4331878ab0d12b883a24889007f686ca2ec574463c12869b854ea0"}, "downloads": -1, "filename": "neural_style-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3736b3f50db9037da0f63cda1a36ae79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15139, "upload_time": "2019-10-05T16:15:01", "upload_time_iso_8601": "2019-10-05T16:15:01.386563Z", "url": "https://files.pythonhosted.org/packages/b3/d5/eb9418359e42ebbd3f38c52af2aaf7a9dd64f5a4b87208e3f80febef0a47/neural_style-0.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1523a336eefada96334358184a9fd65", "sha256": "4caec878a2af58808271e4805d52fb63429a1e380fc2bf7d282e08276c459543"}, "downloads": -1, "filename": "neural-style-0.4.5.tar.gz", "has_sig": false, "md5_digest": "c1523a336eefada96334358184a9fd65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15724, "upload_time": "2019-10-05T16:15:03", "upload_time_iso_8601": "2019-10-05T16:15:03.330781Z", "url": "https://files.pythonhosted.org/packages/fc/7f/583203137462734d31dea7dc12c8781a359630b5d978b000d6a462fe913f/neural-style-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "84053a008b101ed11e553fe00ab572aa", "sha256": "7eaecec439e72470330b5125d9551789e9071ce8b184c35b48743c123a49e7ca"}, "downloads": -1, "filename": "neural_style-0.4.6-py2-none-any.whl", "has_sig": false, "md5_digest": "84053a008b101ed11e553fe00ab572aa", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15162, "upload_time": "2019-10-05T16:20:29", "upload_time_iso_8601": "2019-10-05T16:20:29.765772Z", "url": "https://files.pythonhosted.org/packages/2f/5f/eb56075be599c54efa3702914d44ae5a4713b60856605cdc4d62553e2906/neural_style-0.4.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e62e92e6eda3561d0d625c8fcd107cf2", "sha256": "85a9163654f9af25cb28ddd4b08d742f64d9ee005fb71bcc70a0e415520bc99d"}, "downloads": -1, "filename": "neural_style-0.4.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e62e92e6eda3561d0d625c8fcd107cf2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15165, "upload_time": "2019-10-05T16:20:31", "upload_time_iso_8601": "2019-10-05T16:20:31.240303Z", "url": "https://files.pythonhosted.org/packages/fa/f5/50fc2d60291ec8b09e62195039ab76674d474fea52d48ee15f27c50a6db4/neural_style-0.4.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dda436bbdb98bc3ac5783e84a41e0f5d", "sha256": "4237948feb46ffa96fb119f8514f02ee8ef10ffd34e194bdd3d9652617a13792"}, "downloads": -1, "filename": "neural_style-0.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dda436bbdb98bc3ac5783e84a41e0f5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15160, "upload_time": "2019-10-05T16:20:32", "upload_time_iso_8601": "2019-10-05T16:20:32.654780Z", "url": "https://files.pythonhosted.org/packages/9c/a7/32bf8663c902dc4966725acb7505624a927ee0a048d7d1436d9b47721f04/neural_style-0.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f50e0badaa209bddd585261612677f7", "sha256": "5d7b07f363cc96118d2622a01a535ca907695d54697b14bc8e11dbfd85bb69c0"}, "downloads": -1, "filename": "neural-style-0.4.6.tar.gz", "has_sig": false, "md5_digest": "8f50e0badaa209bddd585261612677f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15801, "upload_time": "2019-10-05T16:20:34", "upload_time_iso_8601": "2019-10-05T16:20:34.322035Z", "url": "https://files.pythonhosted.org/packages/44/a1/1ec9dbae733b6127390e64c81baf86b1bbefae482d00a1bc5604e6fae25a/neural-style-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "b9cdac0cc2e5f8e54e52d05276a612d6", "sha256": "52148e1622fb61e7ff5f41c674adfcf77495b5d422fed63f4483ffaa6e667b50"}, "downloads": -1, "filename": "neural_style-0.4.7-py2-none-any.whl", "has_sig": false, "md5_digest": "b9cdac0cc2e5f8e54e52d05276a612d6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21293, "upload_time": "2019-10-06T18:34:02", "upload_time_iso_8601": "2019-10-06T18:34:02.745726Z", "url": "https://files.pythonhosted.org/packages/5c/a3/d9757f0c93704759b918d674c999772a057b970a1c76ee7e9fc493091d7c/neural_style-0.4.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c8332b81d95f5a39def60c9c8e52a7", "sha256": "3c4a7224cdb82994d4e892a7ea595e4ee6b2e934c2fd32677985072acb0ca679"}, "downloads": -1, "filename": "neural_style-0.4.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6c8332b81d95f5a39def60c9c8e52a7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21338, "upload_time": "2019-10-06T18:34:04", "upload_time_iso_8601": "2019-10-06T18:34:04.549578Z", "url": "https://files.pythonhosted.org/packages/7f/32/d7aaee9f4f6fe9c70f1d2825579b10eeae470f6a0e3a9e1819507daebe2c/neural_style-0.4.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c97f7ab786df0eea39396a7441266b71", "sha256": "82a0e03f7f94216ea5fbf54903903181be5be65c6e223f1f01051b7b54881a89"}, "downloads": -1, "filename": "neural_style-0.4.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c97f7ab786df0eea39396a7441266b71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21334, "upload_time": "2019-10-06T18:34:06", "upload_time_iso_8601": "2019-10-06T18:34:06.623714Z", "url": "https://files.pythonhosted.org/packages/cd/d1/50e569bc559ba3cb6750dd177045bb642068269aa36084795775fdcdce10/neural_style-0.4.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a9c4b78e10aee8fed6ac171bf7c5ffa", "sha256": "9369b085e7ef93810fed25784194f2ec08b4b1b99ca84c34ec9bdd6764a27967"}, "downloads": -1, "filename": "neural-style-0.4.7.tar.gz", "has_sig": false, "md5_digest": "9a9c4b78e10aee8fed6ac171bf7c5ffa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16398, "upload_time": "2019-10-06T18:34:08", "upload_time_iso_8601": "2019-10-06T18:34:08.556905Z", "url": "https://files.pythonhosted.org/packages/ba/c8/90d1f2566a05b1a351be0b30c4dcd9033a572f9bc8bd63dee29054571ab8/neural-style-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "166c155bf0dfd6acd4e0be3a142c4300", "sha256": "b33f434398a06fe7f0a8d88885acc4edc5406380ced09ac6b613d3e5650c6c55"}, "downloads": -1, "filename": "neural_style-0.4.8-py2-none-any.whl", "has_sig": false, "md5_digest": "166c155bf0dfd6acd4e0be3a142c4300", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15679, "upload_time": "2019-10-06T18:50:48", "upload_time_iso_8601": "2019-10-06T18:50:48.294574Z", "url": "https://files.pythonhosted.org/packages/52/0b/102115c5c3b9b064023ecc93322604c0858b97bf4af393f2c488487c3669/neural_style-0.4.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ef9eea7d62118d579a264318467de28", "sha256": "2e1e511ae2fe92dca87ea072c70f6505f725412c4e836f79036c743e3358a520"}, "downloads": -1, "filename": "neural_style-0.4.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ef9eea7d62118d579a264318467de28", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15680, "upload_time": "2019-10-06T18:50:50", "upload_time_iso_8601": "2019-10-06T18:50:50.008186Z", "url": "https://files.pythonhosted.org/packages/87/60/5e102c5defe40d2c129afde7a946de6b4ed7dc6d721a246c84383ab15e07/neural_style-0.4.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1d151ee88773b8fc327794c7642b474", "sha256": "ef44fea3aaef87ba7cf885823a242d555975d424bf55422baccf2e6aeb1902e4"}, "downloads": -1, "filename": "neural_style-0.4.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e1d151ee88773b8fc327794c7642b474", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15676, "upload_time": "2019-10-06T18:50:51", "upload_time_iso_8601": "2019-10-06T18:50:51.433297Z", "url": "https://files.pythonhosted.org/packages/d4/6a/a1640af356cacc39cec1dfc2c0d98a7b407bec9179e7a08b82c0283c58a1/neural_style-0.4.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb4571a269eaa8e895d2e5f1ccfca5b0", "sha256": "99fd5545644272d80578560259e32d09d6cb04413910328ae7596753301ff805"}, "downloads": -1, "filename": "neural-style-0.4.8.tar.gz", "has_sig": false, "md5_digest": "eb4571a269eaa8e895d2e5f1ccfca5b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16407, "upload_time": "2019-10-06T18:50:53", "upload_time_iso_8601": "2019-10-06T18:50:53.219084Z", "url": "https://files.pythonhosted.org/packages/32/72/2b1c5c712a22562b428081629d33466b5b88192076e8235e58a06cdc44b8/neural-style-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "82a77535f9a2bdcb2c76998211ceae5b", "sha256": "6b1712e39ebfe1cacac50fe4b0afc3598271c13adde312f391010132a6f7ba21"}, "downloads": -1, "filename": "neural_style-0.4.9-py2-none-any.whl", "has_sig": false, "md5_digest": "82a77535f9a2bdcb2c76998211ceae5b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15665, "upload_time": "2019-10-06T18:53:56", "upload_time_iso_8601": "2019-10-06T18:53:56.146663Z", "url": "https://files.pythonhosted.org/packages/97/1a/cd0430c66386a907f29b71a4fa8355e41974aab80b3bfe8b4ca40c7d6002/neural_style-0.4.9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "972a1b05b03f094f88a731947138cdf1", "sha256": "91e1789569cee28fd05b04c2bae3df79842f388759575beb3d1028fed88aed62"}, "downloads": -1, "filename": "neural_style-0.4.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "972a1b05b03f094f88a731947138cdf1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15669, "upload_time": "2019-10-06T18:53:58", "upload_time_iso_8601": "2019-10-06T18:53:58.006783Z", "url": "https://files.pythonhosted.org/packages/81/6c/64001244d8574dbf425049812461c6ccd475b564a549a232a2489ed82d31/neural_style-0.4.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a60fde431b5b9f74b333d6f5ab514358", "sha256": "50b7b60a4c7284fa4616dff12e41e2b5e83a457777e1328bdc4884f0c9748a4e"}, "downloads": -1, "filename": "neural_style-0.4.9-py3-none-any.whl", "has_sig": false, "md5_digest": "a60fde431b5b9f74b333d6f5ab514358", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15666, "upload_time": "2019-10-06T18:53:59", "upload_time_iso_8601": "2019-10-06T18:53:59.415763Z", "url": "https://files.pythonhosted.org/packages/5e/0d/c5ec9e7941604bbd40f3778f78e77a9b4496edf249e2f5a90689255832e6/neural_style-0.4.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01d84ba7ef62a8dc96d0e439e1714749", "sha256": "5c39c46588b9a3afb83c4cdfe96cf260853db63f0530d30e85ff3a0841c2050f"}, "downloads": -1, "filename": "neural-style-0.4.9.tar.gz", "has_sig": false, "md5_digest": "01d84ba7ef62a8dc96d0e439e1714749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16401, "upload_time": "2019-10-06T18:54:00", "upload_time_iso_8601": "2019-10-06T18:54:00.799514Z", "url": "https://files.pythonhosted.org/packages/7d/cb/d0c3654961568d33c7e0c5c99d5b5f420053d8270e8b6e7804e52089f173/neural-style-0.4.9.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "1338114cfb39a444d6c63eb4d69d18d6", "sha256": "ce0beed5601616f221beec1a49de8142eb07b3e1701033473260c4e279b998d6"}, "downloads": -1, "filename": "neural_style-0.5.2-py2-none-any.whl", "has_sig": false, "md5_digest": "1338114cfb39a444d6c63eb4d69d18d6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21429, "upload_time": "2019-10-12T14:23:53", "upload_time_iso_8601": "2019-10-12T14:23:53.125019Z", "url": "https://files.pythonhosted.org/packages/59/ed/44f5be3fb41087b2da1c06d5fb8074eab0a5cb971b8a257038fab7657c68/neural_style-0.5.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acdb3b1f3e2524ab1f9b516d39a45e98", "sha256": "92f21bf325f0eb1922fc4cd9d0faf376171ed91d8ca5d3c81eecdbd3f90b81a1"}, "downloads": -1, "filename": "neural_style-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "acdb3b1f3e2524ab1f9b516d39a45e98", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15818, "upload_time": "2019-10-12T14:23:30", "upload_time_iso_8601": "2019-10-12T14:23:30.450745Z", "url": "https://files.pythonhosted.org/packages/ab/28/4764c3193a7f5c930224c80c95b3f495cbde83527482e91189e4e8079a43/neural_style-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d42a2662f245a68c529a3afffdd5b5fd", "sha256": "a5be62a6e8f5ceb0b607fa014ae9a9312b565f644f19649a194e61966202a331"}, "downloads": -1, "filename": "neural_style-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d42a2662f245a68c529a3afffdd5b5fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15813, "upload_time": "2019-10-12T14:23:56", "upload_time_iso_8601": "2019-10-12T14:23:56.249015Z", "url": "https://files.pythonhosted.org/packages/b8/08/23abc25c04d3ea2dd0e6736ca70d41fca4845b4e012c003b0ecc48af401b/neural_style-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "069f6674c85be74f2a1c67bb161f978a", "sha256": "d6be11e1b3b77e2e58b48bd8047fede31d415a6b48a9979d3fdb9145fe4a643d"}, "downloads": -1, "filename": "neural-style-0.5.2.tar.gz", "has_sig": false, "md5_digest": "069f6674c85be74f2a1c67bb161f978a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16533, "upload_time": "2019-10-12T14:23:58", "upload_time_iso_8601": "2019-10-12T14:23:58.024913Z", "url": "https://files.pythonhosted.org/packages/d5/15/036845ce74ba3bc67016959d842ad879809f0f892f8807223fa6b4046656/neural-style-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "2bf81c364ba8127cab771819ff7a047f", "sha256": "dd0fc23bf0d2914bce2f03ab06d17212764e3aae2412d09634efa8ef3ca75aea"}, "downloads": -1, "filename": "neural_style-0.5.3-py2-none-any.whl", "has_sig": false, "md5_digest": "2bf81c364ba8127cab771819ff7a047f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21527, "upload_time": "2019-10-13T16:43:50", "upload_time_iso_8601": "2019-10-13T16:43:50.420274Z", "url": "https://files.pythonhosted.org/packages/1a/f5/2a10ec2ce3e2b7079e45a41d67eec5c4d52af3f3f4c2cb29d39e59e86660/neural_style-0.5.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70f6138f36cc18af922b89dd3c9e8e6b", "sha256": "7f0eda475c03965b532c5df3eb1a96a6b65467057720e3522d60e8dd08172490"}, "downloads": -1, "filename": "neural_style-0.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "70f6138f36cc18af922b89dd3c9e8e6b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15868, "upload_time": "2019-10-13T16:43:24", "upload_time_iso_8601": "2019-10-13T16:43:24.274077Z", "url": "https://files.pythonhosted.org/packages/fe/ed/e4f53b9de36cde8776ff3661567e9f23fa35aa213e4da5f1b200ab292437/neural_style-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90aa0d56f23a11937d0e595b74231923", "sha256": "8eec8ab8ad5c6111058b1cc2d5cfe64eae8703f5e3e064c7967d44f7e22f769c"}, "downloads": -1, "filename": "neural_style-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "90aa0d56f23a11937d0e595b74231923", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15861, "upload_time": "2019-10-13T16:43:52", "upload_time_iso_8601": "2019-10-13T16:43:52.322785Z", "url": "https://files.pythonhosted.org/packages/ee/f3/5594c86b23d23539888b625cfdf339710d42b8a07848f4d1e135a90aab01/neural_style-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0462fd2f977334896bc1d0f5f8cf5aae", "sha256": "48c6fc060ee35cb50b8b04a2f20d23561d6b57e7200c296a9e922777dba99832"}, "downloads": -1, "filename": "neural-style-0.5.3.tar.gz", "has_sig": false, "md5_digest": "0462fd2f977334896bc1d0f5f8cf5aae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16566, "upload_time": "2019-10-13T16:43:54", "upload_time_iso_8601": "2019-10-13T16:43:54.594784Z", "url": "https://files.pythonhosted.org/packages/00/c1/4aee1a53f6e63576aa6987ffbda43da7065b43acd2ea1af7082e6a528ce7/neural-style-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "48184eaf0419eca680604b7a02a6a44e", "sha256": "37cf12f199688275c91dcf2226ea4fe02a077096ebb688289eb8962186a23686"}, "downloads": -1, "filename": "neural_style-0.5.4-py2-none-any.whl", "has_sig": false, "md5_digest": "48184eaf0419eca680604b7a02a6a44e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21552, "upload_time": "2019-10-13T17:02:23", "upload_time_iso_8601": "2019-10-13T17:02:23.612443Z", "url": "https://files.pythonhosted.org/packages/51/2a/50584b265e5f305f500e6f4b7c950c364e2060143d646759f2c6d0c9d656/neural_style-0.5.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96efbc4b8cdfdeb96ac752ff29595fc0", "sha256": "356628b93c51517f085159df7c8d9b6934559affc27d3b03c5f0bacf3607d87c"}, "downloads": -1, "filename": "neural_style-0.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "96efbc4b8cdfdeb96ac752ff29595fc0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15892, "upload_time": "2019-10-13T17:01:48", "upload_time_iso_8601": "2019-10-13T17:01:48.699816Z", "url": "https://files.pythonhosted.org/packages/16/b9/6582ff4ac3bda31a531fb1b948ae18bfae734c7b5c8f007aff7ab0f06a76/neural_style-0.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ec7d905bac4c7e792c91f8081e1d755", "sha256": "87ef4b8d30f23e702f2536c460abb47041cd317978870bf12f66eec58b8fc78b"}, "downloads": -1, "filename": "neural_style-0.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6ec7d905bac4c7e792c91f8081e1d755", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15887, "upload_time": "2019-10-13T17:02:25", "upload_time_iso_8601": "2019-10-13T17:02:25.195230Z", "url": "https://files.pythonhosted.org/packages/e0/f5/c2a6eda39f373bda005e4113bf9281e33c374cd465c440e491ee3f55a99e/neural_style-0.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef007ce2697ce2f1cd764d27f8df3f83", "sha256": "59a4ccb0281e69b0e2eefe0511174961740593b70ddbf6225432eaaa22eb6bb4"}, "downloads": -1, "filename": "neural-style-0.5.4.tar.gz", "has_sig": false, "md5_digest": "ef007ce2697ce2f1cd764d27f8df3f83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16610, "upload_time": "2019-10-13T17:02:26", "upload_time_iso_8601": "2019-10-13T17:02:26.858263Z", "url": "https://files.pythonhosted.org/packages/87/f8/8249fd5535f76dbd79f3b241570c4060cf7ae0c1224ad172ac9a85e5ac1d/neural-style-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "284728a97f1a5354af13f7c1101acc91", "sha256": "5d9ae86c1929c4ca6086955ba7571a861871b1bbadfe35ef5b1c23f01994dd02"}, "downloads": -1, "filename": "neural_style-0.5.5-py2-none-any.whl", "has_sig": false, "md5_digest": "284728a97f1a5354af13f7c1101acc91", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21612, "upload_time": "2019-10-27T14:02:11", "upload_time_iso_8601": "2019-10-27T14:02:11.495644Z", "url": "https://files.pythonhosted.org/packages/64/d9/46175162e04c74ffebc4599555988c49e796b26f48665aec73c41a55bf02/neural_style-0.5.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "177e91c7c18ebb59ef9c392940617e82", "sha256": "fa9e1006a0f5f6cfcd0d39ab42a84be5630122b4fa61b07e77c4b630b87b2685"}, "downloads": -1, "filename": "neural_style-0.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "177e91c7c18ebb59ef9c392940617e82", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15951, "upload_time": "2019-10-27T14:02:13", "upload_time_iso_8601": "2019-10-27T14:02:13.317975Z", "url": "https://files.pythonhosted.org/packages/28/23/83c6b6e3d6a43c018459eb52d00d169381be3774d30249614cd4e6ee4261/neural_style-0.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45632b0dc949b512548b8452049a37de", "sha256": "537e07c85e6c683d32e56d126373ca7afaa018858d6dd55ce693f8fe34cd8bcc"}, "downloads": -1, "filename": "neural_style-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "45632b0dc949b512548b8452049a37de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15948, "upload_time": "2019-10-27T14:01:07", "upload_time_iso_8601": "2019-10-27T14:01:07.690798Z", "url": "https://files.pythonhosted.org/packages/90/41/43d523c79fbcc5cae165fef7867d03fe9db467125cd9f8599a9772b72504/neural_style-0.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbc4d3a8cf25144e3da562bed3223105", "sha256": "1edf06172773917d5f773b6fd7d89c86dc8a0c9199845e042e5a245b2eb1be21"}, "downloads": -1, "filename": "neural-style-0.5.5.tar.gz", "has_sig": false, "md5_digest": "fbc4d3a8cf25144e3da562bed3223105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16666, "upload_time": "2019-10-27T14:02:15", "upload_time_iso_8601": "2019-10-27T14:02:15.033522Z", "url": "https://files.pythonhosted.org/packages/ab/b6/af05b88c2693a433e21d66a17279d7e626de592f3794341ba1c3ffe0b833/neural-style-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "0abe0f13cc471ae31a080e17faf4de9b", "sha256": "2f758f76bf1c7bcfb93ed9fe9d897ab7096e505f035773d32562de1c70da9d30"}, "downloads": -1, "filename": "neural_style-0.5.6-py2-none-any.whl", "has_sig": false, "md5_digest": "0abe0f13cc471ae31a080e17faf4de9b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 22104, "upload_time": "2019-11-16T01:59:19", "upload_time_iso_8601": "2019-11-16T01:59:19.971103Z", "url": "https://files.pythonhosted.org/packages/af/a3/0b5536640251c6be32c4e9f170dbdf56fe0d2dc97994ea1896e24f9d1b32/neural_style-0.5.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "018371cf512e3651737ada3fa3d21d33", "sha256": "669b7c99249a510bf7de66f658f0b41c1899b669d2c3ed1ae6ee3695440ac5ed"}, "downloads": -1, "filename": "neural_style-0.5.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "018371cf512e3651737ada3fa3d21d33", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16393, "upload_time": "2019-11-16T01:59:21", "upload_time_iso_8601": "2019-11-16T01:59:21.720878Z", "url": "https://files.pythonhosted.org/packages/04/7d/2ae5e9b4b91fd85521ca71523212f99d2cb7d1187b66e385d2c3c7afd67b/neural_style-0.5.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9efdf2700427a28a4a426cf33a829b0d", "sha256": "6dd3b9437c59a091be4aa845d1665d2b1a184a97953c30ac476cd3c0947fb360"}, "downloads": -1, "filename": "neural_style-0.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "9efdf2700427a28a4a426cf33a829b0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16389, "upload_time": "2019-11-16T01:57:47", "upload_time_iso_8601": "2019-11-16T01:57:47.680844Z", "url": "https://files.pythonhosted.org/packages/c4/68/e9d218fe2968b8142cc8ef13f5d7716356b4b2ab9bdb8141ef538710b6c7/neural_style-0.5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69be80fd4ac9f57c710a9dd92509ec03", "sha256": "9b8b856510151bc1b7b2ff913028e973d91016991834f3b55c72fb2597a3a069"}, "downloads": -1, "filename": "neural-style-0.5.6.tar.gz", "has_sig": false, "md5_digest": "69be80fd4ac9f57c710a9dd92509ec03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16772, "upload_time": "2019-11-16T01:59:22", "upload_time_iso_8601": "2019-11-16T01:59:22.924895Z", "url": "https://files.pythonhosted.org/packages/52/5e/c1a17a4ba4f6c428baf141fd5926c1e6cb9fd170bb0ce434dee71b70702d/neural-style-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "c2e9812408675cce23bfd7f42787b64e", "sha256": "30c7755b695823befaced59f401abef792d53232092c1bfd60ac2b3a1ed21298"}, "downloads": -1, "filename": "neural_style-0.5.7-py2-none-any.whl", "has_sig": false, "md5_digest": "c2e9812408675cce23bfd7f42787b64e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16386, "upload_time": "2020-02-15T18:58:22", "upload_time_iso_8601": "2020-02-15T18:58:22.124505Z", "url": "https://files.pythonhosted.org/packages/0c/e6/b8cff2d1599912e74865ab6c67b6a8a0fc2b4fab810165c8cfd49724c879/neural_style-0.5.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdf6e77d6231d9eb61662e256faba6b1", "sha256": "74105bdb79d0df33fb3c4c5a6db50bba22e4601e3094293ad38f99d93e26e2cd"}, "downloads": -1, "filename": "neural_style-0.5.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fdf6e77d6231d9eb61662e256faba6b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16387, "upload_time": "2020-02-15T18:58:23", "upload_time_iso_8601": "2020-02-15T18:58:23.705010Z", "url": "https://files.pythonhosted.org/packages/88/6b/db87dc3244b832dfba32c8814c11a11dd8e5d925cfc83102ec871f587939/neural_style-0.5.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee775b455e2cbb22259cc180180339e9", "sha256": "47b0944c57d371387c13770a64a43a0829f25453c56e6b3a16bce1402e212dd1"}, "downloads": -1, "filename": "neural_style-0.5.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ee775b455e2cbb22259cc180180339e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16385, "upload_time": "2020-02-15T18:57:39", "upload_time_iso_8601": "2020-02-15T18:57:39.623497Z", "url": "https://files.pythonhosted.org/packages/8a/f9/06c8d79db0264f041c10649e9fde30390eb0f17aca6b756d7490dbb0f454/neural_style-0.5.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "499ffd8a5fafc412fe4eba172ee4d827", "sha256": "28234f2116d1f9d11b22081463f9597825cf88bbe524edbb614f45b15054020c"}, "downloads": -1, "filename": "neural-style-0.5.7.tar.gz", "has_sig": false, "md5_digest": "499ffd8a5fafc412fe4eba172ee4d827", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15500, "upload_time": "2020-02-15T18:58:26", "upload_time_iso_8601": "2020-02-15T18:58:26.054814Z", "url": "https://files.pythonhosted.org/packages/f9/06/72be88a4f63b51e47fcdace7ee030ccca7925b3c704e07302dbec0dc3e22/neural-style-0.5.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2e9812408675cce23bfd7f42787b64e", "sha256": "30c7755b695823befaced59f401abef792d53232092c1bfd60ac2b3a1ed21298"}, "downloads": -1, "filename": "neural_style-0.5.7-py2-none-any.whl", "has_sig": false, "md5_digest": "c2e9812408675cce23bfd7f42787b64e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16386, "upload_time": "2020-02-15T18:58:22", "upload_time_iso_8601": "2020-02-15T18:58:22.124505Z", "url": "https://files.pythonhosted.org/packages/0c/e6/b8cff2d1599912e74865ab6c67b6a8a0fc2b4fab810165c8cfd49724c879/neural_style-0.5.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdf6e77d6231d9eb61662e256faba6b1", "sha256": "74105bdb79d0df33fb3c4c5a6db50bba22e4601e3094293ad38f99d93e26e2cd"}, "downloads": -1, "filename": "neural_style-0.5.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fdf6e77d6231d9eb61662e256faba6b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16387, "upload_time": "2020-02-15T18:58:23", "upload_time_iso_8601": "2020-02-15T18:58:23.705010Z", "url": "https://files.pythonhosted.org/packages/88/6b/db87dc3244b832dfba32c8814c11a11dd8e5d925cfc83102ec871f587939/neural_style-0.5.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee775b455e2cbb22259cc180180339e9", "sha256": "47b0944c57d371387c13770a64a43a0829f25453c56e6b3a16bce1402e212dd1"}, "downloads": -1, "filename": "neural_style-0.5.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ee775b455e2cbb22259cc180180339e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16385, "upload_time": "2020-02-15T18:57:39", "upload_time_iso_8601": "2020-02-15T18:57:39.623497Z", "url": "https://files.pythonhosted.org/packages/8a/f9/06c8d79db0264f041c10649e9fde30390eb0f17aca6b756d7490dbb0f454/neural_style-0.5.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "499ffd8a5fafc412fe4eba172ee4d827", "sha256": "28234f2116d1f9d11b22081463f9597825cf88bbe524edbb614f45b15054020c"}, "downloads": -1, "filename": "neural-style-0.5.7.tar.gz", "has_sig": false, "md5_digest": "499ffd8a5fafc412fe4eba172ee4d827", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15500, "upload_time": "2020-02-15T18:58:26", "upload_time_iso_8601": "2020-02-15T18:58:26.054814Z", "url": "https://files.pythonhosted.org/packages/f9/06/72be88a4f63b51e47fcdace7ee030ccca7925b3c704e07302dbec0dc3e22/neural-style-0.5.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:47 2020"}