{"info": {"author": "Angus Yeh", "author_email": "a.yeh@auckland.ac.nz", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2"], "description": "# Install\n\n    pip install -U cmflow\n\n# Install Dependency\n\nOn Windows, `Shapely` and `Rtree` are easier to be installed by using Christoph Gohlke's non-official build: \n\n- [https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely](https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely)\n- [https://www.lfd.uci.edu/~gohlke/pythonlibs/#rtree](https://www.lfd.uci.edu/~gohlke/pythonlibs/#rtree)\n\n`descartes` can be installed on all platform by:\n\n    pip install descartes\n\nOn Linux (Ubuntu shown here) these can be installed via apt-get:\n\n    sudo apt-get install -y python-shapely\n    sudo apt-get install -y python-rtree\n    sudo apt-get install -y python-descartes\n\n# Example\n\nCreates BMStats that can be used later, from Leapfrog Geology:\n\n    # (ONLY ONCE) geo used to get geology from Leapfrog geological model\n    cmgeo = mulgrid('g_very_fine.dat')\n\n    # CSV file created by Leapfrog using cmgeo above\n    leapfrog = LeapfrogGM()\n    leapfrog.import_leapfrog_csv('grid_gtmp_ay2017_03_6_fit.csv')\n\n    cm_geology = CM_Blocky(cmgeo, leapfrog)\n\n    # whatever active model we are working on\n    bmgeo = mulgrid('gwaixx_yy.dat')\n\n    bms_geology = cm_geology.calc_bmstats(bm_geo)\n    bms_geology.save('a.json')\n\nA BMStats object can be reused (very fast) to eg.\n\n    bms_geology = BMStats('a.json')\n\n    # get a cell's stats\n    cs = bms_geology.cellstats['abc12']\n\n    # rock that occupies most in cell 'abc12'\n    rock_name = bms_geology.zones[np.argmax(cs)]\n\n    # how many rock in cell 'abc12'\n    n_rock = len(np.nonzero(cs))\n\n    # list all rocks in cell 'abc12'\n    rocks = [bm_geology.zones[i] for i in np.nonzero(cs)]\n\n\n\n\n# BMStats\n\nThis is the object that we keep for later use.  It is associated to a certain\n\"geometry\" file.  So each cell has information on zones. Usually this is\ngenerated by cm.populate_model(), which can be expensive.\n\n- ? should I call it CMStats?\n- ? TODO, .cellstats access by cell index\n- ? TODO, .\n\nBase Model Stats, mainly numpy arrays with rows corresponding to mulgrid\nblocks, and columns corresponding to zones.  Each is a value, usually\nbetween 0.0 and 1.0.  Often 1.0 is indicating that particular block is fully\nwithin the zone.\n\n.stats numpy array (n,m), n = num of model blocks, m = num of zones\n.zones list of zone names (str)\n.zonestats dict of stats column by zone names\n.cellstats dict of stats row by block name\n\n    6 elements, 3 zones\n     A    B    C\n    0.0, 0.7, 0.3,  -> row sum to 1.0, element 0, 0.7 rock B, 0.3 rock C \n    1.0, 0.0, 0.0, \n    1.0, 0.0, 0.0, \n    0.0, 0.5, 0.5, \n    0.1, 0.2, 0.7, \n    0.0, 1.0, 0.0, \n    (this is only one way of using it, such as a rocktype)\n\n.stats, numpy array (n * m), n number of geometry cells, m number of zones\n.zones, a list of zone name, eg. geology rock names, fault names etc\n.zonestats, a dict keyed by zone name, an array of size number of cells, each cell is between \n.cellstats, a dict of stats by cell name\n\n.save()\n.load()\n.add_stats() add another bmstat, merge stats\n.add_cm() calls cm.populate_model, and merge stats\n\n# CM\n# CM_Blocky\n# CM_Prism\n# CM_Faults\n\nThese are the objects that can be created in order to create the final BMStats\nobjects.  The common method .populate_model(bm_geo) is called to create BMStats\nobjects.  It means the conceptual model is \"applied\" onto the bm_geo.\n\n- TODO, .populate_model() should return BMStats instead\n- ? TODO, .populate_model() should be called something else?\n\n.populate_model(bm_geo) takes a target geometry, and return/creates BMStats\n\n\n# LeapfrogGM\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/cmflow", "keywords": "", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "cmflow", "package_url": "https://pypi.org/project/cmflow/", "platform": "", "project_url": "https://pypi.org/project/cmflow/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/cmflow"}, "release_url": "https://pypi.org/project/cmflow/0.1.1.dev55/", "requires_dist": null, "requires_python": "", "summary": "Building TOUGH2/Waiwera models from layers of conceptual models", "version": "0.1.1.dev55", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Install</h1>\n<pre><code>pip install -U cmflow\n</code></pre>\n<h1>Install Dependency</h1>\n<p>On Windows, <code>Shapely</code> and <code>Rtree</code> are easier to be installed by using Christoph Gohlke's non-official build:</p>\n<ul>\n<li><a href=\"https://www.lfd.uci.edu/%7Egohlke/pythonlibs/#shapely\" rel=\"nofollow\">https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely</a></li>\n<li><a href=\"https://www.lfd.uci.edu/%7Egohlke/pythonlibs/#rtree\" rel=\"nofollow\">https://www.lfd.uci.edu/~gohlke/pythonlibs/#rtree</a></li>\n</ul>\n<p><code>descartes</code> can be installed on all platform by:</p>\n<pre><code>pip install descartes\n</code></pre>\n<p>On Linux (Ubuntu shown here) these can be installed via apt-get:</p>\n<pre><code>sudo apt-get install -y python-shapely\nsudo apt-get install -y python-rtree\nsudo apt-get install -y python-descartes\n</code></pre>\n<h1>Example</h1>\n<p>Creates BMStats that can be used later, from Leapfrog Geology:</p>\n<pre><code># (ONLY ONCE) geo used to get geology from Leapfrog geological model\ncmgeo = mulgrid('g_very_fine.dat')\n\n# CSV file created by Leapfrog using cmgeo above\nleapfrog = LeapfrogGM()\nleapfrog.import_leapfrog_csv('grid_gtmp_ay2017_03_6_fit.csv')\n\ncm_geology = CM_Blocky(cmgeo, leapfrog)\n\n# whatever active model we are working on\nbmgeo = mulgrid('gwaixx_yy.dat')\n\nbms_geology = cm_geology.calc_bmstats(bm_geo)\nbms_geology.save('a.json')\n</code></pre>\n<p>A BMStats object can be reused (very fast) to eg.</p>\n<pre><code>bms_geology = BMStats('a.json')\n\n# get a cell's stats\ncs = bms_geology.cellstats['abc12']\n\n# rock that occupies most in cell 'abc12'\nrock_name = bms_geology.zones[np.argmax(cs)]\n\n# how many rock in cell 'abc12'\nn_rock = len(np.nonzero(cs))\n\n# list all rocks in cell 'abc12'\nrocks = [bm_geology.zones[i] for i in np.nonzero(cs)]\n</code></pre>\n<h1>BMStats</h1>\n<p>This is the object that we keep for later use.  It is associated to a certain\n\"geometry\" file.  So each cell has information on zones. Usually this is\ngenerated by cm.populate_model(), which can be expensive.</p>\n<ul>\n<li>? should I call it CMStats?</li>\n<li>? TODO, .cellstats access by cell index</li>\n<li>? TODO, .</li>\n</ul>\n<p>Base Model Stats, mainly numpy arrays with rows corresponding to mulgrid\nblocks, and columns corresponding to zones.  Each is a value, usually\nbetween 0.0 and 1.0.  Often 1.0 is indicating that particular block is fully\nwithin the zone.</p>\n<p>.stats numpy array (n,m), n = num of model blocks, m = num of zones\n.zones list of zone names (str)\n.zonestats dict of stats column by zone names\n.cellstats dict of stats row by block name</p>\n<pre><code>6 elements, 3 zones\n A    B    C\n0.0, 0.7, 0.3,  -&gt; row sum to 1.0, element 0, 0.7 rock B, 0.3 rock C \n1.0, 0.0, 0.0, \n1.0, 0.0, 0.0, \n0.0, 0.5, 0.5, \n0.1, 0.2, 0.7, \n0.0, 1.0, 0.0, \n(this is only one way of using it, such as a rocktype)\n</code></pre>\n<p>.stats, numpy array (n * m), n number of geometry cells, m number of zones\n.zones, a list of zone name, eg. geology rock names, fault names etc\n.zonestats, a dict keyed by zone name, an array of size number of cells, each cell is between\n.cellstats, a dict of stats by cell name</p>\n<p>.save()\n.load()\n.add_stats() add another bmstat, merge stats\n.add_cm() calls cm.populate_model, and merge stats</p>\n<h1>CM</h1>\n<h1>CM_Blocky</h1>\n<h1>CM_Prism</h1>\n<h1>CM_Faults</h1>\n<p>These are the objects that can be created in order to create the final BMStats\nobjects.  The common method .populate_model(bm_geo) is called to create BMStats\nobjects.  It means the conceptual model is \"applied\" onto the bm_geo.</p>\n<ul>\n<li>TODO, .populate_model() should return BMStats instead</li>\n<li>? TODO, .populate_model() should be called something else?</li>\n</ul>\n<p>.populate_model(bm_geo) takes a target geometry, and return/creates BMStats</p>\n<h1>LeapfrogGM</h1>\n\n          </div>"}, "last_serial": 6787837, "releases": {"0.1.1.dev39": [{"comment_text": "", "digests": {"md5": "a3829fff2ce00229007dbd88d906145c", "sha256": "fb0a040ae7722fc346594a6206226cdd8d8b45b5d97e77d28961d255802e0039"}, "downloads": -1, "filename": "cmflow-0.1.1.dev39-py2-none-any.whl", "has_sig": false, "md5_digest": "a3829fff2ce00229007dbd88d906145c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500957, "upload_time": "2020-02-24T01:55:38", "upload_time_iso_8601": "2020-02-24T01:55:38.755931Z", "url": "https://files.pythonhosted.org/packages/ef/69/1486d45367db5e18b8eab6e6eed98891bdcd7abeb61d41287ff4b7c476f4/cmflow-0.1.1.dev39-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7266b769715901379657586e1098558b", "sha256": "c68e3abef2618590750faac9d000b310c1e649c140fcc682523790eb0301953b"}, "downloads": -1, "filename": "cmflow-0.1.1.dev39.tar.gz", "has_sig": false, "md5_digest": "7266b769715901379657586e1098558b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 500190, "upload_time": "2020-02-24T01:55:47", "upload_time_iso_8601": "2020-02-24T01:55:47.310625Z", "url": "https://files.pythonhosted.org/packages/86/73/a93c112b7d0cea4cd96d9520cbd21352c2767bd51953a9bda115f199fd97/cmflow-0.1.1.dev39.tar.gz", "yanked": false}], "0.1.1.dev40": [{"comment_text": "", "digests": {"md5": "1358b2ca07e2ab1623365c59bb377931", "sha256": "e770b7f5a3a26dee6227759b5efd45a70156d2fd41bbc47cb127d14baf0c5ab3"}, "downloads": -1, "filename": "cmflow-0.1.1.dev40-py2-none-any.whl", "has_sig": false, "md5_digest": "1358b2ca07e2ab1623365c59bb377931", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500955, "upload_time": "2020-02-24T01:58:19", "upload_time_iso_8601": "2020-02-24T01:58:19.206112Z", "url": "https://files.pythonhosted.org/packages/3e/df/897c25e1278b6309f19a0aaa8bb355bcf8883675fd0da5c1470a3249a0a0/cmflow-0.1.1.dev40-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "773002435e7dcc8ffd15eb1d31b31591", "sha256": "0758b0aad263268a92d84be75cebaaeed31f4fbf327e80a37a4bed6cc2456647"}, "downloads": -1, "filename": "cmflow-0.1.1.dev40.tar.gz", "has_sig": false, "md5_digest": "773002435e7dcc8ffd15eb1d31b31591", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 500226, "upload_time": "2020-02-24T01:58:35", "upload_time_iso_8601": "2020-02-24T01:58:35.063438Z", "url": "https://files.pythonhosted.org/packages/97/58/43cff819b61e3c6cec88047e1615cfd6552f17607a5e905f8d42a91d195d/cmflow-0.1.1.dev40.tar.gz", "yanked": false}], "0.1.1.dev42": [{"comment_text": "", "digests": {"md5": "7df6250fc96b0d26a57afec027007375", "sha256": "e7dddea90d1571abbcca277f5d90a9e935202ac14981f20d2b5f70b7b3308a25"}, "downloads": -1, "filename": "cmflow-0.1.1.dev42-py2-none-any.whl", "has_sig": false, "md5_digest": "7df6250fc96b0d26a57afec027007375", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500272, "upload_time": "2020-02-24T02:32:48", "upload_time_iso_8601": "2020-02-24T02:32:48.801367Z", "url": "https://files.pythonhosted.org/packages/5c/ad/449beafc4b640d854e8ede332046e588c176d398338c9eb4838f6f0894e8/cmflow-0.1.1.dev42-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbdddd880c990635cc2a1905da658ea8", "sha256": "1222db16e95a332bea571d93cf3b1d9ab9b1f908d120d1e59c96787a1abf520b"}, "downloads": -1, "filename": "cmflow-0.1.1.dev42.tar.gz", "has_sig": false, "md5_digest": "fbdddd880c990635cc2a1905da658ea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 500842, "upload_time": "2020-02-24T02:32:50", "upload_time_iso_8601": "2020-02-24T02:32:50.263940Z", "url": "https://files.pythonhosted.org/packages/21/94/39af78faf2bc1f498e2289038c2de199349a6b3d613bcc620e4de717d4c4/cmflow-0.1.1.dev42.tar.gz", "yanked": false}], "0.1.1.dev43": [{"comment_text": "", "digests": {"md5": "4b00cffeeb4ebd8088ddcba6f9f8d737", "sha256": "7004c952f10623f3c8204f8be270343c724550c123b63a5cbdcc574b5ebaa788"}, "downloads": -1, "filename": "cmflow-0.1.1.dev43-py2-none-any.whl", "has_sig": false, "md5_digest": "4b00cffeeb4ebd8088ddcba6f9f8d737", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500653, "upload_time": "2020-03-10T16:28:03", "upload_time_iso_8601": "2020-03-10T16:28:03.907396Z", "url": "https://files.pythonhosted.org/packages/46/a7/31f7834283b3e1704864d6cec292378f216d79ed4497168c343345752284/cmflow-0.1.1.dev43-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "120b39e674370608dd8308b7dd8f5049", "sha256": "a7f3f443ce1c3723fa9220501c214260b3411f9973474daf688dc238a6388bbd"}, "downloads": -1, "filename": "cmflow-0.1.1.dev43.tar.gz", "has_sig": false, "md5_digest": "120b39e674370608dd8308b7dd8f5049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 499829, "upload_time": "2020-03-10T16:28:05", "upload_time_iso_8601": "2020-03-10T16:28:05.038352Z", "url": "https://files.pythonhosted.org/packages/ad/41/89640ccb0f52b9e09aa68ad14b6142330be284824a2becdc0d2197f9b1c5/cmflow-0.1.1.dev43.tar.gz", "yanked": false}], "0.1.1.dev54": [{"comment_text": "", "digests": {"md5": "28288e789a8c64a8b263f3c998b2e16a", "sha256": "1238f7f974e2de55f83c8491e2c850ccde28edaf805eedad62b2841a3bd290ce"}, "downloads": -1, "filename": "cmflow-0.1.1.dev54-py2-none-any.whl", "has_sig": false, "md5_digest": "28288e789a8c64a8b263f3c998b2e16a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500653, "upload_time": "2020-03-10T16:28:48", "upload_time_iso_8601": "2020-03-10T16:28:48.034007Z", "url": "https://files.pythonhosted.org/packages/5a/bb/067092ba53c759adc66b5a10cb7917a935c42f9fb84983b752a839426331/cmflow-0.1.1.dev54-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97b0102822249ceca64e34eb721277e6", "sha256": "cda2ce8aefa4122f4d4257419877c83ef380ac2f1298baea5a852b30351e1c66"}, "downloads": -1, "filename": "cmflow-0.1.1.dev54.tar.gz", "has_sig": false, "md5_digest": "97b0102822249ceca64e34eb721277e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 499947, "upload_time": "2020-03-10T16:28:49", "upload_time_iso_8601": "2020-03-10T16:28:49.207511Z", "url": "https://files.pythonhosted.org/packages/d9/e3/d7c22801b05853c02d0273f58e7340df6d841b62de74b96a0168330ef47d/cmflow-0.1.1.dev54.tar.gz", "yanked": false}], "0.1.1.dev55": [{"comment_text": "", "digests": {"md5": "25ab10eda2b7f926d5f6062ecf9d87dd", "sha256": "16e39bc060a8cc2d4f82b5d49e599233a76a838c73cdb2d1481fc9e00297472c"}, "downloads": -1, "filename": "cmflow-0.1.1.dev55-py2-none-any.whl", "has_sig": false, "md5_digest": "25ab10eda2b7f926d5f6062ecf9d87dd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500661, "upload_time": "2020-03-10T20:27:19", "upload_time_iso_8601": "2020-03-10T20:27:19.518384Z", "url": "https://files.pythonhosted.org/packages/27/00/d5e1db417a4fb1d0c6bfd5b032099abe4fe29a03fc281b12de371ff1d029/cmflow-0.1.1.dev55-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29f22005a3da7abc11543ad22a93ffac", "sha256": "eef8347a88e8b91eee04d6bfcc6c79f913d68b22c0c9fcae72c47c8e5966f584"}, "downloads": -1, "filename": "cmflow-0.1.1.dev55.tar.gz", "has_sig": false, "md5_digest": "29f22005a3da7abc11543ad22a93ffac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 499978, "upload_time": "2020-03-10T20:27:21", "upload_time_iso_8601": "2020-03-10T20:27:21.463290Z", "url": "https://files.pythonhosted.org/packages/d2/86/9cebe7582eaaee545fc61e7770fa6ac4e6cecb3f6bc52a03fb72bdb531bd/cmflow-0.1.1.dev55.tar.gz", "yanked": false}], "0.1.1.dev8": [{"comment_text": "", "digests": {"md5": "ef4f89093bb19213a973e30d853c68bd", "sha256": "6e4f4bd83554b62c24cec09356df075b6f8cea6a8ba36fe2b2c02a97e36af25b"}, "downloads": -1, "filename": "cmflow-0.1.1.dev8-py2-none-any.whl", "has_sig": false, "md5_digest": "ef4f89093bb19213a973e30d853c68bd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 499073, "upload_time": "2020-01-22T20:24:04", "upload_time_iso_8601": "2020-01-22T20:24:04.888464Z", "url": "https://files.pythonhosted.org/packages/38/8f/baf1a37b033887fd4b8d756f862e6e50f8cc906f1cc82d3f6f46c334aed0/cmflow-0.1.1.dev8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb8f910bf05121fe22ebbbfbc473f82e", "sha256": "929131eb5fab7ab0306427170ba47bb3956848624d89529594f9184a0bb8381d"}, "downloads": -1, "filename": "cmflow-0.1.1.dev8.tar.gz", "has_sig": false, "md5_digest": "fb8f910bf05121fe22ebbbfbc473f82e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 496696, "upload_time": "2020-01-22T20:24:15", "upload_time_iso_8601": "2020-01-22T20:24:15.088318Z", "url": "https://files.pythonhosted.org/packages/d6/51/545f4a444d60548ce8220ede38cb13937dd8dd1bb7c94d02825b4d541b84/cmflow-0.1.1.dev8.tar.gz", "yanked": false}], "0.1.1.dev9": [{"comment_text": "", "digests": {"md5": "c9713f938a4f0d775a150de2b04713c7", "sha256": "dde410c9f8cf834ae05754fab0e42c4a5b6d541afc334c799744b40f9948ae3b"}, "downloads": -1, "filename": "cmflow-0.1.1.dev9-py2-none-any.whl", "has_sig": false, "md5_digest": "c9713f938a4f0d775a150de2b04713c7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 499073, "upload_time": "2020-01-22T20:49:50", "upload_time_iso_8601": "2020-01-22T20:49:50.730314Z", "url": "https://files.pythonhosted.org/packages/43/e8/96353686b0795ab52788b9de6d9ce7f9f03493109bf9e2d47d68cd46ef53/cmflow-0.1.1.dev9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "806e9e9b1a3a102e639b28394a8f4519", "sha256": "2b898b5e79bc2ef6b833f4120be229b097b970215520a32b9fd57bf3e1abb078"}, "downloads": -1, "filename": "cmflow-0.1.1.dev9.tar.gz", "has_sig": false, "md5_digest": "806e9e9b1a3a102e639b28394a8f4519", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 496736, "upload_time": "2020-01-22T20:50:07", "upload_time_iso_8601": "2020-01-22T20:50:07.677996Z", "url": "https://files.pythonhosted.org/packages/ad/d3/d99261a8312f9c620ceb47f35a38c002e794590134af2ec91d91d273f8e8/cmflow-0.1.1.dev9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25ab10eda2b7f926d5f6062ecf9d87dd", "sha256": "16e39bc060a8cc2d4f82b5d49e599233a76a838c73cdb2d1481fc9e00297472c"}, "downloads": -1, "filename": "cmflow-0.1.1.dev55-py2-none-any.whl", "has_sig": false, "md5_digest": "25ab10eda2b7f926d5f6062ecf9d87dd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 500661, "upload_time": "2020-03-10T20:27:19", "upload_time_iso_8601": "2020-03-10T20:27:19.518384Z", "url": "https://files.pythonhosted.org/packages/27/00/d5e1db417a4fb1d0c6bfd5b032099abe4fe29a03fc281b12de371ff1d029/cmflow-0.1.1.dev55-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29f22005a3da7abc11543ad22a93ffac", "sha256": "eef8347a88e8b91eee04d6bfcc6c79f913d68b22c0c9fcae72c47c8e5966f584"}, "downloads": -1, "filename": "cmflow-0.1.1.dev55.tar.gz", "has_sig": false, "md5_digest": "29f22005a3da7abc11543ad22a93ffac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 499978, "upload_time": "2020-03-10T20:27:21", "upload_time_iso_8601": "2020-03-10T20:27:21.463290Z", "url": "https://files.pythonhosted.org/packages/d2/86/9cebe7582eaaee545fc61e7770fa6ac4e6cecb3f6bc52a03fb72bdb531bd/cmflow-0.1.1.dev55.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:34 2020"}