{"info": {"author": "Robert Sachunsky", "author_email": "sachunsky@informatik.uni-leipzig.de", "bugtrack_url": null, "classifiers": [], "description": "# ocrd_publaynet\n\n    convert PubLayNet data into METS/PAGE-XML\n\n## Introduction\n\nThis offers [OCR-D](https://ocr-d.github.io) compliant (i.e. [METS-XML](https://ocr-d.github.io/en/spec/mets)/[PAGE-XML](https://ocr-d.github.io/en/spec/page) based) conversion for [PubLayNet](https://github.com/ibm-aur-nlp/PubLayNet) or similar, [MS-COCO](http://cocodataset.org/#format-data)-based, ground-truth data.\n\n## Installation\n\n### System packages\n\nInstall GNU `make` and `wget` if you wish to use the Makefile.\n\n    # on Debian / Ubuntu:\n    sudo apt install make wget\n\nInstall Python3 regardless:\n\n    # on Debian / Ubuntu:\n    sudo apt install python3 python3-pip python3-venv\n\nEquivalently:\n\n    # on Debian / Ubuntu:\n    sudo make deps-ubuntu\n\n### Python packages\n\nIt is strongly recommended to use [venv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). You can create and install a virtual environment of your own (which the Makefile will re-use when activated), or have the Makefile do that for you.\n\n    pip install -r requirements.txt\n    pip install .\n\nEquivalently:\n\n    make install\n\n## Usage\n\n### command-line interface `ocrd-import-mscoco`\n\nOnce installed, the following executable becomes available:\n\n```\nUsage: ocrd-import-mscoco [OPTIONS] COCOFILE DIRECTORY\n\n  Convert MS-COCO JSON to METS/PAGE XML files.\n\n  Load JSON ``cocofile`` (in MS-COCO format) and chdir to ``directory``\n  (which it refers to).\n\n  Start a METS file mets.xml with references to the image files (under\n  fileGrp ``OCR-D-IMG``) and their corresponding PAGE-XML annotations (under\n  fileGrp ``OCR-D-GT-SEG-BLOCK``), as parsed from ``cocofile`` and written\n  using the same basename.\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### apply on `PubLayNet`\n\nTo apply on the validation subsection:\n\n    ocrd-import-mscoco publaynet/val.json publaynet/val\n\nThis will create a METS `publaynet/val/mets.xml` and PAGE files `publaynet/val/*.xml` for all image files.\n\nTo apply on the training subsection:\n\n    ocrd-import-mscoco publaynet/train.json publaynet/train\n\nThis will create a METS `publaynet/train/mets.xml` and PAGE files `publaynet/train/*.xml` for all image files.\n\nEquivalently (including download/extraction if necessary):\n\n    make convert\n\n> **Note**: PubLayNet itself requires approximately 103 GB of disk space. If you already have it (elsewhere), but still wish to use the Makefile to convert the files, make sure to symlink it here, so it does not get downloaded twice: `ln -s your/path/to/publaynet publaynet`\n\n\n### all Makefile targets\n\n```\nRules to install ocrd-import-mscoco, and to use it on\nPubLayNet (by downloading, extracting and converting).\n\nTargets:\n\thelp: this message\n\tdeps-ubuntu: install system dependencies for Ubuntu\n\tall: alias for `install download convert`\n\tinstall: alias for `pip install .`\n\tdownload: alias for `publaynet.tar.gz`\n\tconvert: alias for `publaynet/val/mets.xml publaynet/train/mets.xml`\n\tuninstall: alias for `pip uninstall ocrd_publaynet`\n\tclean-xml: remove results of conversion (METS and PAGE files in `publaynet`)\n\tclean: remove `publaynet` altogether\n\nVariables:\n\tVIRTUAL_ENV: absolute path to (re-)use for the virtual environment\n\tPYTHON: name of the Python binary\n\tPIP: name of the Python packaging binary\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bertsky/ocrd_publaynet", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "ocrd-publaynet", "package_url": "https://pypi.org/project/ocrd-publaynet/", "platform": "", "project_url": "https://pypi.org/project/ocrd-publaynet/", "project_urls": {"Homepage": "https://github.com/bertsky/ocrd_publaynet"}, "release_url": "https://pypi.org/project/ocrd-publaynet/0.1.0/", "requires_dist": ["ocrd (>=2.4.0)", "click (>=7.0)", "numpy"], "requires_python": "", "summary": "convert PubLayNet data into METS/PAGE-XML", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ocrd_publaynet</h1>\n<pre><code>convert PubLayNet data into METS/PAGE-XML\n</code></pre>\n<h2>Introduction</h2>\n<p>This offers <a href=\"https://ocr-d.github.io\" rel=\"nofollow\">OCR-D</a> compliant (i.e. <a href=\"https://ocr-d.github.io/en/spec/mets\" rel=\"nofollow\">METS-XML</a>/<a href=\"https://ocr-d.github.io/en/spec/page\" rel=\"nofollow\">PAGE-XML</a> based) conversion for <a href=\"https://github.com/ibm-aur-nlp/PubLayNet\" rel=\"nofollow\">PubLayNet</a> or similar, <a href=\"http://cocodataset.org/#format-data\" rel=\"nofollow\">MS-COCO</a>-based, ground-truth data.</p>\n<h2>Installation</h2>\n<h3>System packages</h3>\n<p>Install GNU <code>make</code> and <code>wget</code> if you wish to use the Makefile.</p>\n<pre><code># on Debian / Ubuntu:\nsudo apt install make wget\n</code></pre>\n<p>Install Python3 regardless:</p>\n<pre><code># on Debian / Ubuntu:\nsudo apt install python3 python3-pip python3-venv\n</code></pre>\n<p>Equivalently:</p>\n<pre><code># on Debian / Ubuntu:\nsudo make deps-ubuntu\n</code></pre>\n<h3>Python packages</h3>\n<p>It is strongly recommended to use <a href=\"https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/\" rel=\"nofollow\">venv</a>. You can create and install a virtual environment of your own (which the Makefile will re-use when activated), or have the Makefile do that for you.</p>\n<pre><code>pip install -r requirements.txt\npip install .\n</code></pre>\n<p>Equivalently:</p>\n<pre><code>make install\n</code></pre>\n<h2>Usage</h2>\n<h3>command-line interface <code>ocrd-import-mscoco</code></h3>\n<p>Once installed, the following executable becomes available:</p>\n<pre><code>Usage: ocrd-import-mscoco [OPTIONS] COCOFILE DIRECTORY\n\n  Convert MS-COCO JSON to METS/PAGE XML files.\n\n  Load JSON ``cocofile`` (in MS-COCO format) and chdir to ``directory``\n  (which it refers to).\n\n  Start a METS file mets.xml with references to the image files (under\n  fileGrp ``OCR-D-IMG``) and their corresponding PAGE-XML annotations (under\n  fileGrp ``OCR-D-GT-SEG-BLOCK``), as parsed from ``cocofile`` and written\n  using the same basename.\n\nOptions:\n  --help  Show this message and exit.\n</code></pre>\n<h3>apply on <code>PubLayNet</code></h3>\n<p>To apply on the validation subsection:</p>\n<pre><code>ocrd-import-mscoco publaynet/val.json publaynet/val\n</code></pre>\n<p>This will create a METS <code>publaynet/val/mets.xml</code> and PAGE files <code>publaynet/val/*.xml</code> for all image files.</p>\n<p>To apply on the training subsection:</p>\n<pre><code>ocrd-import-mscoco publaynet/train.json publaynet/train\n</code></pre>\n<p>This will create a METS <code>publaynet/train/mets.xml</code> and PAGE files <code>publaynet/train/*.xml</code> for all image files.</p>\n<p>Equivalently (including download/extraction if necessary):</p>\n<pre><code>make convert\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: PubLayNet itself requires approximately 103 GB of disk space. If you already have it (elsewhere), but still wish to use the Makefile to convert the files, make sure to symlink it here, so it does not get downloaded twice: <code>ln -s your/path/to/publaynet publaynet</code></p>\n</blockquote>\n<h3>all Makefile targets</h3>\n<pre><code>Rules to install ocrd-import-mscoco, and to use it on\nPubLayNet (by downloading, extracting and converting).\n\nTargets:\n\thelp: this message\n\tdeps-ubuntu: install system dependencies for Ubuntu\n\tall: alias for `install download convert`\n\tinstall: alias for `pip install .`\n\tdownload: alias for `publaynet.tar.gz`\n\tconvert: alias for `publaynet/val/mets.xml publaynet/train/mets.xml`\n\tuninstall: alias for `pip uninstall ocrd_publaynet`\n\tclean-xml: remove results of conversion (METS and PAGE files in `publaynet`)\n\tclean: remove `publaynet` altogether\n\nVariables:\n\tVIRTUAL_ENV: absolute path to (re-)use for the virtual environment\n\tPYTHON: name of the Python binary\n\tPIP: name of the Python packaging binary\n</code></pre>\n\n          </div>"}, "last_serial": 6656870, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "79fae8bcca25f9a587013432c88287c8", "sha256": "b475c8240bdd6e8447821c66e11d879f785808af966075a855ff4776ba1effef"}, "downloads": -1, "filename": "ocrd_publaynet-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79fae8bcca25f9a587013432c88287c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4826, "upload_time": "2020-02-18T22:27:28", "upload_time_iso_8601": "2020-02-18T22:27:28.167700Z", "url": "https://files.pythonhosted.org/packages/a9/fe/1bff85bdd521494e73b1186765512b5dd31f74ae918c9fd3bdb72506cd08/ocrd_publaynet-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "490cd22b9619c5b4a2de92cc8d710ab1", "sha256": "c0707b30ece563c0746a61ea0faa25c91a6b7a1d53e9de86ddc195ed4327d3e7"}, "downloads": -1, "filename": "ocrd_publaynet-0.1.0.tar.gz", "has_sig": false, "md5_digest": "490cd22b9619c5b4a2de92cc8d710ab1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4299, "upload_time": "2020-02-18T22:27:31", "upload_time_iso_8601": "2020-02-18T22:27:31.104641Z", "url": "https://files.pythonhosted.org/packages/e5/ed/745821655d8557daccfbdfb052ebb9cf7ec213888934f79f1ac24c431ef8/ocrd_publaynet-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79fae8bcca25f9a587013432c88287c8", "sha256": "b475c8240bdd6e8447821c66e11d879f785808af966075a855ff4776ba1effef"}, "downloads": -1, "filename": "ocrd_publaynet-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79fae8bcca25f9a587013432c88287c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4826, "upload_time": "2020-02-18T22:27:28", "upload_time_iso_8601": "2020-02-18T22:27:28.167700Z", "url": "https://files.pythonhosted.org/packages/a9/fe/1bff85bdd521494e73b1186765512b5dd31f74ae918c9fd3bdb72506cd08/ocrd_publaynet-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "490cd22b9619c5b4a2de92cc8d710ab1", "sha256": "c0707b30ece563c0746a61ea0faa25c91a6b7a1d53e9de86ddc195ed4327d3e7"}, "downloads": -1, "filename": "ocrd_publaynet-0.1.0.tar.gz", "has_sig": false, "md5_digest": "490cd22b9619c5b4a2de92cc8d710ab1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4299, "upload_time": "2020-02-18T22:27:31", "upload_time_iso_8601": "2020-02-18T22:27:31.104641Z", "url": "https://files.pythonhosted.org/packages/e5/ed/745821655d8557daccfbdfb052ebb9cf7ec213888934f79f1ac24c431ef8/ocrd_publaynet-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:39 2020"}