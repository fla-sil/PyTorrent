{"info": {"author": "Mirko Boehm", "author_email": "mirko@kde.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pandoc-acronyms - A Pandoc filter for managing acronyms\n\n## Acronyms? WTF?\n\nThere is a convention in more precise writing to provide the full text\nof an acronym at first use. This can get difficult for example if the\ntext of documents is split over multiple files, which makes it hard\nfor the authors to know where the acronym will be used first. Such a\ntask is best left to the computer. This is what the `pandoc-acronyms`\nfilter is for. Authors list acronyms in a data file and then reference\nthem in the text.\n\n## HOWTO: [`pip install pandoc-acronyms`](https://pypi.org/project/pandoc-acronyms/)\n\nWrite a data file that contains your acronyms:\n\n    {\n\t\t\"aba\": {\n\t\t\t\"shortform\": \"ABA\",\n\t\t\t\"longform\": \"a better acronym\"\n\t\t},\n\t\t\"bba\": {\n\t\t\t\"shortform\": \"BBA\",\n\t\t\t\"longform\": \"beer brewing attitude\"\n\t\t}\n\t}\n\nThen in the text, use the acronym in encoded form like `[!bba]`. The\nfilter will recognize it. On first use it replaces the marker with\n\"beer brewing attitude (BBA)\".  Any later use will be replaced by\n\"BBA\". The filter will print a notice if an acronym is found in the\ntext that is not defined in the data file. The keys start with a\ncharacter and may consist of letters, numbers, dashes, the plus sign\nand underscores (\"a-b\", \"ab\", \"a_b\" or \"c++\", but not \"++c\").\n\nThe replacements will be made to the text and are independent of the\nselected output format. While tools such\nas [pandoc-ac](https://github.com/Enet4/pandoc-ac) help users with\ngenerating acronym commands in LaTeX, `pandoc-acronyms` is designed to\nwork directly on the document text.\n\n## Using acronyms in the input text\n\nThe most common way to write an acronym in the text is [!key]. To customize the output, the acronym specification can be made more specific:\n\n* [!+key] selects the plural form of the acronym.\n* [!^key] selects the uppercase form of the acronym. This only affects the long form, the abbreviated short form will not be changed.\n* [!+^key] For plural uppercase variants, plural must be specified first.\n\nIt is also possible to select which form should be inserted into the text (this can be combined with plural or uppercase selection):\n\n* [!key>] inserts the long form (\"beer brewing attitude\").\n* [!key<] inserts the short form (\"BBA\").\n* [!key!] inserts the explained form (\"beer brewing attitude (BBA)\").\n\n## Using the filter with pandoc\n\nThe filter mechanism is a built-in feature of pandoc. The filter is\nadded to how pandoc is invoked:\n\n\t> pandoc --filter pandoc-acronyms document.md\n\nPandoc does not allow to pass parameters to filters. The\nacronym filter needs to load the acronyms from the data file. To work\naround this, the parameters to the filter can be passed in environment\nvariables:\n\n\t> pandoc-acronyms --help\n\tUsage: pandoc-acronyms [OPTIONS] [FORMAT]...\n\n\tThe pandoc-acronyms filter.\n\n\tOptions:\n\t\t-a, --acronyms TEXT           A file with acronym definitions in JSON\n        \t\t                      format.\n\t\t-v, --verbose / --no-verbose  Enable verbose output.\n\t\t-s, --suggest / --no-suggest  Suggest marking acronyms detected in the text.\n\t\t-e, --error / --no-error      Exit with an error if an undefined acronym is\n\t\t\t\t\t\t\t\t\t  used.\n\t\t-d, --debug / --no-debug      Enable debug output.\n\t\t--version                     Show the version and exit.\n\t\t--help                        Show this message and exit.\n\nThe environment variable PANDOC_ACRONYMS_ACRONYMS can be used to\nreplace the --acronyms option. Similarly, the variable\nPANDOC_ACRONYMS_VERBOSE enables diagnostic output. All command line options\nof `pandoc-acronyms` can be controlled with environment variables the same\nway:\n\n* --acronyms: PANDOC_ACRONYMS_ACRONYMS\n* --verbose/--no-verbose: PANDOC_ACRONYMS_VERBOSE\n* --suggest/--no-suggest': PANDOC_ACRONYMS_SUGGEST\n* --error/--no-error: PANDOC_ACRONYMS_ERROR\n* --debug/--no-debug: PANDOC_ACRONYMS_DEBUG\n\n## Installation\n\nThe `pandoc-acronyms` program is released via the [Python Package Index](https://pypi.org/):\n\n\t> pip install pandoc-acronyms\n\t...\n\nAlternatively, developers can clone\nthe [main repository](https://gitlab.com/mirkoboehm/pandoc-acronyms)\nand install using Python setuptools:\n\n\t> python setup.py install\n\t...\n\nOnce installed either way, the filter is available as a stand-alone program in the\ninstallation location used by Python.\n\n## Testing and debugging\n\nThe `pandoc-acronyms` code uses the standard Python unittest\nframework. Most tests are data-driven in that they use regular\nMarkdown files and JSON acronym dictionaries as input and test how the\ncode handles them. To test the filter code as regular Python unit\ntests, test Markdown input is first converted into the Pandoc \"native\nJSON\" format in memory and then fed to the filter code by the\ntests. This means the unit tests run stand-alone (without the need for\nPandon to invoke them as a filter), making the test code easily\ndebugable.\n\n## How to contribute\n\nThe\n[Git repository for the pandoc acronym filter](https://gitlab.com/mirkoboehm/pandoc-acronyms) is\nhosted on Gitlab. It uses the Gitlab CI system to ensure quality, also\nfor development branches and incoming merge requests. Deployment\nto [PyPI](https://pypi.org/) is automated. Development branches and\nmerge requests will be deployed to\nthe\n[PyPI test instance](https://test.pypi.org/project/pandoc-acronyms/)\nas development packages. Commits to master will be deployed to regular\nPyPI as development packages. Tagged versions on master are deployed\nto PyPI\nas\n[stable releases](https://pypi.org/project/pandoc-acronyms/#history).\n\nTo contribute, please submit a merge request. Your merge\nrequest should maintain or increase the test coverage.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/mirkoboehm/pandoc-acronyms", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pandoc-acronyms", "package_url": "https://pypi.org/project/pandoc-acronyms/", "platform": "", "project_url": "https://pypi.org/project/pandoc-acronyms/", "project_urls": {"Homepage": "https://gitlab.com/mirkoboehm/pandoc-acronyms"}, "release_url": "https://pypi.org/project/pandoc-acronyms/0.5.202003081156/", "requires_dist": ["Click"], "requires_python": ">=3.6", "summary": "A Python filter to manage acronyms", "version": "0.5.202003081156", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pandoc-acronyms - A Pandoc filter for managing acronyms</h1>\n<h2>Acronyms? WTF?</h2>\n<p>There is a convention in more precise writing to provide the full text\nof an acronym at first use. This can get difficult for example if the\ntext of documents is split over multiple files, which makes it hard\nfor the authors to know where the acronym will be used first. Such a\ntask is best left to the computer. This is what the <code>pandoc-acronyms</code>\nfilter is for. Authors list acronyms in a data file and then reference\nthem in the text.</p>\n<h2>HOWTO: <a href=\"https://pypi.org/project/pandoc-acronyms/\" rel=\"nofollow\"><code>pip install pandoc-acronyms</code></a></h2>\n<p>Write a data file that contains your acronyms:</p>\n<pre><code>{\n\t\"aba\": {\n\t\t\"shortform\": \"ABA\",\n\t\t\"longform\": \"a better acronym\"\n\t},\n\t\"bba\": {\n\t\t\"shortform\": \"BBA\",\n\t\t\"longform\": \"beer brewing attitude\"\n\t}\n}\n</code></pre>\n<p>Then in the text, use the acronym in encoded form like <code>[!bba]</code>. The\nfilter will recognize it. On first use it replaces the marker with\n\"beer brewing attitude (BBA)\".  Any later use will be replaced by\n\"BBA\". The filter will print a notice if an acronym is found in the\ntext that is not defined in the data file. The keys start with a\ncharacter and may consist of letters, numbers, dashes, the plus sign\nand underscores (\"a-b\", \"ab\", \"a_b\" or \"c++\", but not \"++c\").</p>\n<p>The replacements will be made to the text and are independent of the\nselected output format. While tools such\nas <a href=\"https://github.com/Enet4/pandoc-ac\" rel=\"nofollow\">pandoc-ac</a> help users with\ngenerating acronym commands in LaTeX, <code>pandoc-acronyms</code> is designed to\nwork directly on the document text.</p>\n<h2>Using acronyms in the input text</h2>\n<p>The most common way to write an acronym in the text is [!key]. To customize the output, the acronym specification can be made more specific:</p>\n<ul>\n<li>[!+key] selects the plural form of the acronym.</li>\n<li>[!^key] selects the uppercase form of the acronym. This only affects the long form, the abbreviated short form will not be changed.</li>\n<li>[!+^key] For plural uppercase variants, plural must be specified first.</li>\n</ul>\n<p>It is also possible to select which form should be inserted into the text (this can be combined with plural or uppercase selection):</p>\n<ul>\n<li>[!key&gt;] inserts the long form (\"beer brewing attitude\").</li>\n<li>[!key&lt;] inserts the short form (\"BBA\").</li>\n<li>[!key!] inserts the explained form (\"beer brewing attitude (BBA)\").</li>\n</ul>\n<h2>Using the filter with pandoc</h2>\n<p>The filter mechanism is a built-in feature of pandoc. The filter is\nadded to how pandoc is invoked:</p>\n<pre><code>&gt; pandoc --filter pandoc-acronyms document.md\n</code></pre>\n<p>Pandoc does not allow to pass parameters to filters. The\nacronym filter needs to load the acronyms from the data file. To work\naround this, the parameters to the filter can be passed in environment\nvariables:</p>\n<pre><code>&gt; pandoc-acronyms --help\nUsage: pandoc-acronyms [OPTIONS] [FORMAT]...\n\nThe pandoc-acronyms filter.\n\nOptions:\n\t-a, --acronyms TEXT           A file with acronym definitions in JSON\n    \t\t                      format.\n\t-v, --verbose / --no-verbose  Enable verbose output.\n\t-s, --suggest / --no-suggest  Suggest marking acronyms detected in the text.\n\t-e, --error / --no-error      Exit with an error if an undefined acronym is\n\t\t\t\t\t\t\t\t  used.\n\t-d, --debug / --no-debug      Enable debug output.\n\t--version                     Show the version and exit.\n\t--help                        Show this message and exit.\n</code></pre>\n<p>The environment variable PANDOC_ACRONYMS_ACRONYMS can be used to\nreplace the --acronyms option. Similarly, the variable\nPANDOC_ACRONYMS_VERBOSE enables diagnostic output. All command line options\nof <code>pandoc-acronyms</code> can be controlled with environment variables the same\nway:</p>\n<ul>\n<li>--acronyms: PANDOC_ACRONYMS_ACRONYMS</li>\n<li>--verbose/--no-verbose: PANDOC_ACRONYMS_VERBOSE</li>\n<li>--suggest/--no-suggest': PANDOC_ACRONYMS_SUGGEST</li>\n<li>--error/--no-error: PANDOC_ACRONYMS_ERROR</li>\n<li>--debug/--no-debug: PANDOC_ACRONYMS_DEBUG</li>\n</ul>\n<h2>Installation</h2>\n<p>The <code>pandoc-acronyms</code> program is released via the <a href=\"https://pypi.org/\" rel=\"nofollow\">Python Package Index</a>:</p>\n<pre><code>&gt; pip install pandoc-acronyms\n...\n</code></pre>\n<p>Alternatively, developers can clone\nthe <a href=\"https://gitlab.com/mirkoboehm/pandoc-acronyms\" rel=\"nofollow\">main repository</a>\nand install using Python setuptools:</p>\n<pre><code>&gt; python setup.py install\n...\n</code></pre>\n<p>Once installed either way, the filter is available as a stand-alone program in the\ninstallation location used by Python.</p>\n<h2>Testing and debugging</h2>\n<p>The <code>pandoc-acronyms</code> code uses the standard Python unittest\nframework. Most tests are data-driven in that they use regular\nMarkdown files and JSON acronym dictionaries as input and test how the\ncode handles them. To test the filter code as regular Python unit\ntests, test Markdown input is first converted into the Pandoc \"native\nJSON\" format in memory and then fed to the filter code by the\ntests. This means the unit tests run stand-alone (without the need for\nPandon to invoke them as a filter), making the test code easily\ndebugable.</p>\n<h2>How to contribute</h2>\n<p>The\n<a href=\"https://gitlab.com/mirkoboehm/pandoc-acronyms\" rel=\"nofollow\">Git repository for the pandoc acronym filter</a> is\nhosted on Gitlab. It uses the Gitlab CI system to ensure quality, also\nfor development branches and incoming merge requests. Deployment\nto <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a> is automated. Development branches and\nmerge requests will be deployed to\nthe\n<a href=\"https://test.pypi.org/project/pandoc-acronyms/\" rel=\"nofollow\">PyPI test instance</a>\nas development packages. Commits to master will be deployed to regular\nPyPI as development packages. Tagged versions on master are deployed\nto PyPI\nas\n<a href=\"https://pypi.org/project/pandoc-acronyms/#history\" rel=\"nofollow\">stable releases</a>.</p>\n<p>To contribute, please submit a merge request. Your merge\nrequest should maintain or increase the test coverage.</p>\n\n          </div>"}, "last_serial": 6873859, "releases": {"0.3.202002050136": [{"comment_text": "", "digests": {"md5": "ab4003663957d994c9e8d7f21b04befd", "sha256": "2e18a60c1c12646a554ee2d5e23aa97ca31d4605d464ba76ed3fbedbbae0ce5a"}, "downloads": -1, "filename": "pandoc_acronyms-0.3.202002050136-py3-none-any.whl", "has_sig": false, "md5_digest": "ab4003663957d994c9e8d7f21b04befd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15638, "upload_time": "2020-02-05T00:52:31", "upload_time_iso_8601": "2020-02-05T00:52:31.802653Z", "url": "https://files.pythonhosted.org/packages/69/e3/fb0beed28352cf40e91a53ccec9276e1f09d37f4c636a1efc30e9d9787eb/pandoc_acronyms-0.3.202002050136-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78010748f4cf749046acc3711d2c0f87", "sha256": "0b11bffc4d9f2ba3f1527e5fb7b51c13d027b0e27c8a8723b1598dcd8c8a9dc0"}, "downloads": -1, "filename": "pandoc-acronyms-0.3.202002050136.tar.gz", "has_sig": false, "md5_digest": "78010748f4cf749046acc3711d2c0f87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7767, "upload_time": "2020-02-05T00:52:33", "upload_time_iso_8601": "2020-02-05T00:52:33.833511Z", "url": "https://files.pythonhosted.org/packages/11/c0/e6457e5366c4677a6d483fc0c39feb703d3c31763182cf829336257e55a4/pandoc-acronyms-0.3.202002050136.tar.gz", "yanked": false}], "0.3.dev202002071310": [{"comment_text": "", "digests": {"md5": "31fe5d348a89c5a3359504f9db0d23c0", "sha256": "b4ee346db2ff0d4cb9816c67559943bc4648fb27f23b9b6233bed6bfea1deff5"}, "downloads": -1, "filename": "pandoc_acronyms-0.3.dev202002071310-py3-none-any.whl", "has_sig": false, "md5_digest": "31fe5d348a89c5a3359504f9db0d23c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15688, "upload_time": "2020-02-07T12:22:43", "upload_time_iso_8601": "2020-02-07T12:22:43.733708Z", "url": "https://files.pythonhosted.org/packages/17/4d/78c014591e5d3eb2f861f71341e04f9a9252e7a84f0d2818fa719b3853b2/pandoc_acronyms-0.3.dev202002071310-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ffcf1afc4285a6f07563d2086bb4558", "sha256": "07210b07ddec8689c88d557266b998684eff791984a7cf39193815491805c557"}, "downloads": -1, "filename": "pandoc-acronyms-0.3.dev202002071310.tar.gz", "has_sig": false, "md5_digest": "3ffcf1afc4285a6f07563d2086bb4558", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7781, "upload_time": "2020-02-07T12:22:44", "upload_time_iso_8601": "2020-02-07T12:22:44.967668Z", "url": "https://files.pythonhosted.org/packages/d0/e9/7239b0bf0da752be068b9d5d10ecbc749afaf2522aa83864a8d91280437f/pandoc-acronyms-0.3.dev202002071310.tar.gz", "yanked": false}], "0.3.dev202002202125": [{"comment_text": "", "digests": {"md5": "0bbd09b46e07f0525849187b36408706", "sha256": "5dd8824aa004feeb131b3c5c4a9618f8f7aef6c3d457b075a7938484990b57b3"}, "downloads": -1, "filename": "pandoc_acronyms-0.3.dev202002202125-py3-none-any.whl", "has_sig": false, "md5_digest": "0bbd09b46e07f0525849187b36408706", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16101, "upload_time": "2020-02-20T21:20:32", "upload_time_iso_8601": "2020-02-20T21:20:32.597465Z", "url": "https://files.pythonhosted.org/packages/8e/d0/865c1c3ba5201bc64551a04deb0651114fcb09cd6d0dabb69237d415e6f8/pandoc_acronyms-0.3.dev202002202125-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69ae289f1062eca6472e4373f0f1c5cf", "sha256": "b0bda6fc6145d5243803c687a3923975fdf92cbc62cae7b321f354eb191cb86d"}, "downloads": -1, "filename": "pandoc-acronyms-0.3.dev202002202125.tar.gz", "has_sig": false, "md5_digest": "69ae289f1062eca6472e4373f0f1c5cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8165, "upload_time": "2020-02-20T21:20:33", "upload_time_iso_8601": "2020-02-20T21:20:33.511140Z", "url": "https://files.pythonhosted.org/packages/c4/b7/6007a90726eeaabb80b689c88446be6cd321d9bf83eac118b262a3832511/pandoc-acronyms-0.3.dev202002202125.tar.gz", "yanked": false}], "0.4.202002202125": [{"comment_text": "", "digests": {"md5": "267fe40cee6fccc75134c3156ddedad8", "sha256": "d85477e49d3df14c9ae1e7b937f960cf5e862d4e2fc42f46ddf71564a2ca3659"}, "downloads": -1, "filename": "pandoc_acronyms-0.4.202002202125-py3-none-any.whl", "has_sig": false, "md5_digest": "267fe40cee6fccc75134c3156ddedad8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16061, "upload_time": "2020-02-20T21:27:32", "upload_time_iso_8601": "2020-02-20T21:27:32.766135Z", "url": "https://files.pythonhosted.org/packages/2f/b3/37820fd3b6b5fd682ddc677e3b52c627f436a3cc8303665e697f0fc3cc1c/pandoc_acronyms-0.4.202002202125-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0aaa309676ccd557e01c0ce883d86c97", "sha256": "e13e4b4c60a91ca3ceb12d2da4b04476ae74969a0d8756b17c61e7a449c9ac92"}, "downloads": -1, "filename": "pandoc-acronyms-0.4.202002202125.tar.gz", "has_sig": false, "md5_digest": "0aaa309676ccd557e01c0ce883d86c97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8164, "upload_time": "2020-02-20T21:27:33", "upload_time_iso_8601": "2020-02-20T21:27:33.931166Z", "url": "https://files.pythonhosted.org/packages/03/e6/961e67481cf36d59be90a58b854074839b515c74921506def1833994e6c9/pandoc-acronyms-0.4.202002202125.tar.gz", "yanked": false}], "0.4.dev202002202110": [{"comment_text": "", "digests": {"md5": "ed6f930bf1c3ec82751e7d10f4d6e337", "sha256": "c1f9fdeccd493f131e5787193f13511296f8b5e21aaf309ee99b76d086ea03e7"}, "downloads": -1, "filename": "pandoc_acronyms-0.4.dev202002202110-py3-none-any.whl", "has_sig": false, "md5_digest": "ed6f930bf1c3ec82751e7d10f4d6e337", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16101, "upload_time": "2020-02-20T20:21:32", "upload_time_iso_8601": "2020-02-20T20:21:32.394110Z", "url": "https://files.pythonhosted.org/packages/d2/60/b1ee99afe3ec50b16f40a8ee4cf58dd1d2983753d08aca08d726ea441fcc/pandoc_acronyms-0.4.dev202002202110-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d063cf48441d200c07ca56e380dd6067", "sha256": "5e017fae322b73f4f4be292bfda127d2288bff32e22a683de833375af0e69184"}, "downloads": -1, "filename": "pandoc-acronyms-0.4.dev202002202110.tar.gz", "has_sig": false, "md5_digest": "d063cf48441d200c07ca56e380dd6067", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8164, "upload_time": "2020-02-20T20:21:33", "upload_time_iso_8601": "2020-02-20T20:21:33.498786Z", "url": "https://files.pythonhosted.org/packages/5d/b5/57fdea583ccdc6b5dd0d7995d9d1b11e3ade7d56504504504ac9f9c9dfed/pandoc-acronyms-0.4.dev202002202110.tar.gz", "yanked": false}], "0.4.dev202002291140": [{"comment_text": "", "digests": {"md5": "2691f037cb0f1a78a10c1f3aaf277fe8", "sha256": "f574cff2f632f126eb4d3682b8c1b417bebe4b647b72f55c6b7f26308b3cb7b1"}, "downloads": -1, "filename": "pandoc_acronyms-0.4.dev202002291140-py3-none-any.whl", "has_sig": false, "md5_digest": "2691f037cb0f1a78a10c1f3aaf277fe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16300, "upload_time": "2020-03-01T16:49:06", "upload_time_iso_8601": "2020-03-01T16:49:06.764539Z", "url": "https://files.pythonhosted.org/packages/f9/c1/e5cd702110a594caa6236dad0b4fef7962e65d7c1b9d0603bb712f0b170d/pandoc_acronyms-0.4.dev202002291140-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "677fd9e2a1bd0fdc65ac48e126b58841", "sha256": "ae7ef0b3178b2a70357b135783f081a9076f0ffe666a3eb7341cb9fbf14a06b8"}, "downloads": -1, "filename": "pandoc-acronyms-0.4.dev202002291140.tar.gz", "has_sig": false, "md5_digest": "677fd9e2a1bd0fdc65ac48e126b58841", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8350, "upload_time": "2020-03-01T16:49:07", "upload_time_iso_8601": "2020-03-01T16:49:07.858094Z", "url": "https://files.pythonhosted.org/packages/b1/07/d050b86539f00777ec1eccc4ee21900f1257ee73af586906cad4e4dce785/pandoc-acronyms-0.4.dev202002291140.tar.gz", "yanked": false}], "0.4.dev202003081156": [{"comment_text": "", "digests": {"md5": "cf03c630ba8ffe03a7d53cab4552e185", "sha256": "a7e086a7489ee0605416b85234ff90a2bcb85a458f330e57939ddbc8fa26a4a1"}, "downloads": -1, "filename": "pandoc_acronyms-0.4.dev202003081156-py3-none-any.whl", "has_sig": false, "md5_digest": "cf03c630ba8ffe03a7d53cab4552e185", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18331, "upload_time": "2020-03-08T11:43:15", "upload_time_iso_8601": "2020-03-08T11:43:15.094384Z", "url": "https://files.pythonhosted.org/packages/e0/f7/98a8ae2fe7974173b47e2cb2d37ff195a5e55191c2adc12a3cb6a75415c1/pandoc_acronyms-0.4.dev202003081156-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51a6023855df45f824eb9b6ef18f9059", "sha256": "33c5def4443e11439ed3ab972112c379d2221c17e48c6d2240522375db7b5628"}, "downloads": -1, "filename": "pandoc-acronyms-0.4.dev202003081156.tar.gz", "has_sig": false, "md5_digest": "51a6023855df45f824eb9b6ef18f9059", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11334, "upload_time": "2020-03-08T11:43:16", "upload_time_iso_8601": "2020-03-08T11:43:16.010423Z", "url": "https://files.pythonhosted.org/packages/4b/7f/90bab3e34e8de5b3dc218cb7c50ffb41de8dea1bd937ca1b365410cd3170/pandoc-acronyms-0.4.dev202003081156.tar.gz", "yanked": false}], "0.5.202003081156": [{"comment_text": "", "digests": {"md5": "82b9d18a7396398b1b91fad0c3ad5b71", "sha256": "7602f106008cae035cd387673af0cb273295e528d755eb966edd1a210c589df3"}, "downloads": -1, "filename": "pandoc_acronyms-0.5.202003081156-py3-none-any.whl", "has_sig": false, "md5_digest": "82b9d18a7396398b1b91fad0c3ad5b71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18290, "upload_time": "2020-03-24T15:36:36", "upload_time_iso_8601": "2020-03-24T15:36:36.438712Z", "url": "https://files.pythonhosted.org/packages/45/6b/b651f7e90693dd9af7f3459b54aaa37f27e6df07e84f2aaba7a33cd44c31/pandoc_acronyms-0.5.202003081156-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90d4294558670914fa9ced15c7262ac6", "sha256": "2d05c03ec5a04298f43c1b7e9ce2d051d051b9ecb79a2646b738872e6630c76e"}, "downloads": -1, "filename": "pandoc-acronyms-0.5.202003081156.tar.gz", "has_sig": false, "md5_digest": "90d4294558670914fa9ced15c7262ac6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11335, "upload_time": "2020-03-24T15:36:37", "upload_time_iso_8601": "2020-03-24T15:36:37.557538Z", "url": "https://files.pythonhosted.org/packages/35/2e/d493e8b5c8e1b733e92ac0d4a88ed48883368de7321a187a7eaf6d43da1f/pandoc-acronyms-0.5.202003081156.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82b9d18a7396398b1b91fad0c3ad5b71", "sha256": "7602f106008cae035cd387673af0cb273295e528d755eb966edd1a210c589df3"}, "downloads": -1, "filename": "pandoc_acronyms-0.5.202003081156-py3-none-any.whl", "has_sig": false, "md5_digest": "82b9d18a7396398b1b91fad0c3ad5b71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18290, "upload_time": "2020-03-24T15:36:36", "upload_time_iso_8601": "2020-03-24T15:36:36.438712Z", "url": "https://files.pythonhosted.org/packages/45/6b/b651f7e90693dd9af7f3459b54aaa37f27e6df07e84f2aaba7a33cd44c31/pandoc_acronyms-0.5.202003081156-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90d4294558670914fa9ced15c7262ac6", "sha256": "2d05c03ec5a04298f43c1b7e9ce2d051d051b9ecb79a2646b738872e6630c76e"}, "downloads": -1, "filename": "pandoc-acronyms-0.5.202003081156.tar.gz", "has_sig": false, "md5_digest": "90d4294558670914fa9ced15c7262ac6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11335, "upload_time": "2020-03-24T15:36:37", "upload_time_iso_8601": "2020-03-24T15:36:37.557538Z", "url": "https://files.pythonhosted.org/packages/35/2e/d493e8b5c8e1b733e92ac0d4a88ed48883368de7321a187a7eaf6d43da1f/pandoc-acronyms-0.5.202003081156.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:25 2020"}