{"info": {"author": "Dan Kuester, Shane Allman, Paul Blanchard, Yao Ma", "author_email": "daniel.kuester@nist.gov", "bugtrack_url": null, "classifiers": [], "description": "The `labbench` module provides tools for instrument automation and data management in scripted lab experiments.\n\nA device driver implemented with labbench is a light wrapper around another instrument control library.\nThis means another library (like pyvisa, pyserial, libtelnet, or even a C or .NET DLL) provides low-level routines. The labbench\nabstraction provides several benefits:\n\n* automatic acquisition logging into an SQLite database,\n* automatically-generated jupyter notebook monitoring widgets,\n* interact with settings and data on remote devices with native python data types (instead of strings),\n* python exceptions on invalid device state settings (instead of silent failure),\n* drivers provide consistent style and API conventions for easy scripting (hello, tab completion!),\n* ensure devices disconnect properly when acquisition completes (even on exceptions), and\n* conversion of vector or tabular data to [pandas](pandas.pydata.org) Series or DataFrame objects for rapid exploration of data.\n\nTogether, these features help to minimize the amount of \"copy-and-paste\" code that can make your lab automation scripts error-prone and difficult to maintain.\nThe python code that results can be clear, concise, reusable and maintainable, and\nprovide consistent formatting for stored data.\nThe result helps researchers to meet NIST's\n[open data](https://www.nist.gov/open) obligations, even for complicated, large,\nand heterogeneous datasets.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/usnistgov/labbench", "keywords": "", "license": "NIST", "maintainer": "", "maintainer_email": "", "name": "labbench", "package_url": "https://pypi.org/project/labbench/", "platform": "", "project_url": "https://pypi.org/project/labbench/", "project_urls": {"Homepage": "https://github.com/usnistgov/labbench"}, "release_url": "https://pypi.org/project/labbench/0.20/", "requires_dist": ["pandas (>=0.20)", "pyserial (>=3.0)", "pyvisa (>=1.8)", "coloredlogs (>=7.0)", "future", "numpy (>=1.0)", "scipy (>=0.9)", "sortedcontainers (>=1.4)", "psutil (>=5.0)", "sqlalchemy", "GitPython (>=2.0)", "pyarrow", "traitlets (>=4)", "sphinx (>=1.6) ; extra == 'html'", "recommonmark ; extra == 'html'", "notebook ; extra == 'notebook'", "ipywidgets ; extra == 'notebook'"], "requires_python": "", "summary": "scripting tools for streamlined laboratory automation", "version": "0.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <code>labbench</code> module provides tools for instrument automation and data management in scripted lab experiments.</p>\n<p>A device driver implemented with labbench is a light wrapper around another instrument control library.\nThis means another library (like pyvisa, pyserial, libtelnet, or even a C or .NET DLL) provides low-level routines. The labbench\nabstraction provides several benefits:</p>\n<ul>\n<li>automatic acquisition logging into an SQLite database,</li>\n<li>automatically-generated jupyter notebook monitoring widgets,</li>\n<li>interact with settings and data on remote devices with native python data types (instead of strings),</li>\n<li>python exceptions on invalid device state settings (instead of silent failure),</li>\n<li>drivers provide consistent style and API conventions for easy scripting (hello, tab completion!),</li>\n<li>ensure devices disconnect properly when acquisition completes (even on exceptions), and</li>\n<li>conversion of vector or tabular data to <a href=\"pandas.pydata.org\" rel=\"nofollow\">pandas</a> Series or DataFrame objects for rapid exploration of data.</li>\n</ul>\n<p>Together, these features help to minimize the amount of \"copy-and-paste\" code that can make your lab automation scripts error-prone and difficult to maintain.\nThe python code that results can be clear, concise, reusable and maintainable, and\nprovide consistent formatting for stored data.\nThe result helps researchers to meet NIST's\n<a href=\"https://www.nist.gov/open\" rel=\"nofollow\">open data</a> obligations, even for complicated, large,\nand heterogeneous datasets.</p>\n\n          </div>"}, "last_serial": 5946503, "releases": {"0.0.1": [], "0.20": [{"comment_text": "", "digests": {"md5": "406f0376066d2f28dc9a0dca5bbd6f74", "sha256": "ab1e517b9e49a98981324ec4ab248dfbf1fa2a9e2addca5b99f67211c5b27e9d"}, "downloads": -1, "filename": "labbench-0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "406f0376066d2f28dc9a0dca5bbd6f74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 65330, "upload_time": "2019-10-08T20:22:23", "upload_time_iso_8601": "2019-10-08T20:22:23.693983Z", "url": "https://files.pythonhosted.org/packages/0e/fd/2d1cc4c49ad350c54cd1192019bd8f73890815b25735bb935f018aab62bb/labbench-0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32d07785f5dbec27a3ab703fea3ddd5b", "sha256": "1b26031c2e56b344aeb76dbe9179593b8f3be924c52e19fda61fcdac5308faa8"}, "downloads": -1, "filename": "labbench-0.20.tar.gz", "has_sig": false, "md5_digest": "32d07785f5dbec27a3ab703fea3ddd5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59399, "upload_time": "2019-10-08T20:22:24", "upload_time_iso_8601": "2019-10-08T20:22:24.996102Z", "url": "https://files.pythonhosted.org/packages/69/bc/8b039a9b902115aeee33ea2917516b899512d1b2e3b2821e4a14b4ccd815/labbench-0.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "406f0376066d2f28dc9a0dca5bbd6f74", "sha256": "ab1e517b9e49a98981324ec4ab248dfbf1fa2a9e2addca5b99f67211c5b27e9d"}, "downloads": -1, "filename": "labbench-0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "406f0376066d2f28dc9a0dca5bbd6f74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 65330, "upload_time": "2019-10-08T20:22:23", "upload_time_iso_8601": "2019-10-08T20:22:23.693983Z", "url": "https://files.pythonhosted.org/packages/0e/fd/2d1cc4c49ad350c54cd1192019bd8f73890815b25735bb935f018aab62bb/labbench-0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32d07785f5dbec27a3ab703fea3ddd5b", "sha256": "1b26031c2e56b344aeb76dbe9179593b8f3be924c52e19fda61fcdac5308faa8"}, "downloads": -1, "filename": "labbench-0.20.tar.gz", "has_sig": false, "md5_digest": "32d07785f5dbec27a3ab703fea3ddd5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59399, "upload_time": "2019-10-08T20:22:24", "upload_time_iso_8601": "2019-10-08T20:22:24.996102Z", "url": "https://files.pythonhosted.org/packages/69/bc/8b039a9b902115aeee33ea2917516b899512d1b2e3b2821e4a14b4ccd815/labbench-0.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:23 2020"}