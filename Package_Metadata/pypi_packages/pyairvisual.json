{"info": {"author": "Aaron Bach", "author_email": "bachya1208@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# \u2600\ufe0f pyairvisual: a thin Python wrapper for the AirVisual\u00a9 API\n\n[![CI](https://github.com/bachya/pyairvisual/workflows/CI/badge.svg)](https://github.com/bachya/pyairvisual/actions)\n[![PyPi](https://img.shields.io/pypi/v/pyairvisual.svg)](https://pypi.python.org/pypi/pyairvisual)\n[![Version](https://img.shields.io/pypi/pyversions/pyairvisual.svg)](https://pypi.python.org/pypi/pyairvisual)\n[![License](https://img.shields.io/pypi/l/pyairvisual.svg)](https://github.com/bachya/pyairvisual/blob/master/LICENSE)\n[![Code Coverage](https://codecov.io/gh/bachya/pyairvisual/branch/master/graph/badge.svg)](https://codecov.io/gh/bachya/pyairvisual)\n[![Maintainability](https://api.codeclimate.com/v1/badges/948e4e3c84e5c49826f1/maintainability)](https://codeclimate.com/github/bachya/pyairvisual/maintainability)\n[![Say Thanks](https://img.shields.io/badge/SayThanks-!-1EAEDB.svg)](https://saythanks.io/to/bachya)\n\n`pyairvisual` is a simple, clean, well-tested library for interacting with\n[AirVisual](https://www.airvisual.com/) to retrieve air quality information.\n\n- [Python Versions](#python-versions)\n- [Installation](#installation)\n- [API Key](#api-key)\n  * [Community](#community)\n  * [Startup](#startup)\n  * [Enterprise](#enterprise)\n- [Usage](#usage)\n  * [Using the Cloud API](#using-the-cloud-api)\n  * [Working with Node/Pro Units](#working-with-node-pro-units)\n- [Contributing](#contributing)\n\n# Python Versions\n\n`pyairvisual` is currently supported on:\n\n* Python 3.6\n* Python 3.7\n* Python 3.8\n\n# Installation\n\n```python\npip install pyairvisual\n```\n\n# API Key\n\nYou can get an AirVisual API key from\n[the AirVisual API site](https://www.airvisual.com/user/api). Depending on\nthe plan you choose, more functionality will be available from the API:\n\n## Community\n\nThe Community Plan gives access to:\n\n* List supported countries\n* List supported states\n* List supported cities\n* Get data from the nearest city based on IP address\n* Get data from the nearest city based on latitude/longitude\n* Get data from a specific city\n\n## Startup\n\nThe Startup Plan gives access to:\n\n* List supported stations in a city\n* Get data from the nearest station based on IP address\n* Get data from the nearest station based on latitude/longitude\n* Get data from a specific station\n\n## Enterprise\n\nThe Enterprise Plan gives access to:\n\n* Get a global city ranking of air quality\n\n# Usage\n\n## Using the Cloud API\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom pyairvisual import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    async with ClientSession() as session:\n        # If an API key isn't provided, only Nodes can be queried; everything else\n        # requires an API key:\n        client = Client(api_key=\"<YOUR_AIRVISUAL_API_KEY>\", session=session)\n\n        # Get data based on the city nearest to your IP address:\n        data = await client.data.nearest_city()\n\n        # ...or get data based on the city nearest to a latitude/longitude:\n        data = await client.data.nearest_city(\n            latitude=39.742599, longitude=-104.9942557)\n\n        # ...or get it explicitly:\n        data = await client.data.city(\n            city=\"Los Angeles\", state=\"California\", country=\"USA\")\n\n        # If you have the appropriate API key, you can also get data based on\n        # station (nearest or explicit):\n        data = await client.data.nearest_station()\n        data = await client.data.nearest_station(\n            latitude=39.742599, longitude=-104.9942557)\n        data = await client.data.station(\n            station=\"US Embassy in Beijing\",\n            city=\"Beijing\",\n            state=\"Beijing\",\n            country=\"China\")\n\n        # With the appropriate API key, you can get an air quality ranking:\n        data = await client.data.ranking()\n\n        # pyairvisual gives you several methods to look locations up:\n        countries = await client.supported.countries()\n        states = await client.supported.states(\"USA\")\n        cities = await client.supported.cities(\"USA\", \"Colorado\")\n        stations = await client.supported.stations(\"USA\", \"Colorado\", \"Denver\")\n\n\nasyncio.run(main())\n```\n\nBy default, the library creates a new connection to AirVisual with each coroutine. If\nyou are calling a large number of coroutines (or merely want to squeeze out every second\nof runtime savings possible), an\n[`aiohttp`](https://github.com/aio-libs/aiohttp) `ClientSession` can be used for connection\npooling:\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom pyairvisual import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    async with ClientSession() as session:\n        client = Client(api_key=\"<YOUR_AIRVISUAL_API_KEY>\", session=session)\n\n        # ...\n\n\nasyncio.run(main())\n```\n\n## Working with Node/Pro Units\n\n`pyairvisual` also allows users to interact with\n[Node/Pro units](https://www.airvisual.com/air-quality-monitor), both via the cloud API:\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom pyairvisual import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    client = Client()\n\n    # The Node/Pro unit ID can be retrieved from the \"API\" section of the cloud\n    # dashboard:\n    data = await client.node.from_cloud_api(\"<NODE_ID>\")\n\n\nasyncio.run(main())\n```\n\n...or over the local network (the unit password can be found on the device itself):\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom pyairvisual import Client\nfrom pyairvisual.node import NodeSamba\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    client = Client()\n\n    # Can take several optional parameters:\n    #   1. include_history: include historical measurements (defaults to True)\n    #   2. include_trends: include trends (defaults to True)\n    #   3. measurements_to_use: the number of measurements to use when calculating\n    #      trends (defaults to -1, which means \"use all measurements\")\n    data = await client.node.from_samba(\n        \"<IP_ADDRESS_OR_HOST>\",\n        \"<PASSWORD>\",\n        include_history=True,\n        include_trends=True,\n        measurements_to_use=10,\n    )\n\n\nasyncio.run(main())\n```\n\nCheck out the examples, the tests, and the source files themselves for method\nsignatures and more examples.\n\n# Contributing\n\n1. [Check for open features/bugs](https://github.com/bachya/pyairvisual/issues)\n  or [initiate a discussion on one](https://github.com/bachya/pyairvisual/issues/new).\n2. [Fork the repository](https://github.com/bachya/pyairvisual/fork).\n3. (_optional, but highly recommended_) Create a virtual environment: `python3 -m venv .venv`\n4. (_optional, but highly recommended_) Enter the virtual environment: `source ./.venv/bin/activate`\n5. Install the dev environment: `script/setup`\n6. Code your new feature or bug fix.\n7. Write tests that cover your new functionality.\n8. Run tests and ensure 100% code coverage: `script/test`\n9. Update `README.md` with any new documentation.\n10. Add yourself to `AUTHORS.md`.\n11. Submit a pull request!\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bachya/pyairvisual", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyairvisual", "package_url": "https://pypi.org/project/pyairvisual/", "platform": "", "project_url": "https://pypi.org/project/pyairvisual/", "project_urls": {"Homepage": "https://github.com/bachya/pyairvisual", "Repository": "https://github.com/bachya/pyairvisual"}, "release_url": "https://pypi.org/project/pyairvisual/4.4.0/", "requires_dist": ["aiohttp (>=3.6.2,<4.0.0)", "numpy (>=1.18.2,<2.0.0)", "pysmb (>=1.1.28,<2.0.0)"], "requires_python": ">=3.6.0,<4.0.0", "summary": "A simple API for AirVisual air quality data", "version": "4.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\u2600\ufe0f pyairvisual: a thin Python wrapper for the AirVisual\u00a9 API</h1>\n<p><a href=\"https://github.com/bachya/pyairvisual/actions\" rel=\"nofollow\"><img alt=\"CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4454acacd939a9494e1e49d1f6a4a9ef00dcb0bb/68747470733a2f2f6769746875622e636f6d2f6261636879612f707961697276697375616c2f776f726b666c6f77732f43492f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyairvisual\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/088fc9de11e53a1cfb5fd6659afd8e6948b25401/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707961697276697375616c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyairvisual\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/299c5223f38a4dad1b369b6e6720e098508bcfa6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707961697276697375616c2e737667\"></a>\n<a href=\"https://github.com/bachya/pyairvisual/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cb5e3e138df0ea937a7909fc6cb20cf5cb06ca0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f707961697276697375616c2e737667\"></a>\n<a href=\"https://codecov.io/gh/bachya/pyairvisual\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8b495cf1b18d8439eff0dd3e0e1e0fa36c29cb5/68747470733a2f2f636f6465636f762e696f2f67682f6261636879612f707961697276697375616c2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/bachya/pyairvisual/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/947b44b3ba0556f11bffa9bf655ddd02f475f7a9/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f39343865346533633834653563343938323666312f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://saythanks.io/to/bachya\" rel=\"nofollow\"><img alt=\"Say Thanks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/836a72b26b72545aaf496536c5baba94f15fb592/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361795468616e6b732d212d3145414544422e737667\"></a></p>\n<p><code>pyairvisual</code> is a simple, clean, well-tested library for interacting with\n<a href=\"https://www.airvisual.com/\" rel=\"nofollow\">AirVisual</a> to retrieve air quality information.</p>\n<ul>\n<li><a href=\"#python-versions\" rel=\"nofollow\">Python Versions</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#api-key\" rel=\"nofollow\">API Key</a>\n<ul>\n<li><a href=\"#community\" rel=\"nofollow\">Community</a></li>\n<li><a href=\"#startup\" rel=\"nofollow\">Startup</a></li>\n<li><a href=\"#enterprise\" rel=\"nofollow\">Enterprise</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#using-the-cloud-api\" rel=\"nofollow\">Using the Cloud API</a></li>\n<li><a href=\"#working-with-node-pro-units\" rel=\"nofollow\">Working with Node/Pro Units</a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n<h1>Python Versions</h1>\n<p><code>pyairvisual</code> is currently supported on:</p>\n<ul>\n<li>Python 3.6</li>\n<li>Python 3.7</li>\n<li>Python 3.8</li>\n</ul>\n<h1>Installation</h1>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pyairvisual</span>\n</pre>\n<h1>API Key</h1>\n<p>You can get an AirVisual API key from\n<a href=\"https://www.airvisual.com/user/api\" rel=\"nofollow\">the AirVisual API site</a>. Depending on\nthe plan you choose, more functionality will be available from the API:</p>\n<h2>Community</h2>\n<p>The Community Plan gives access to:</p>\n<ul>\n<li>List supported countries</li>\n<li>List supported states</li>\n<li>List supported cities</li>\n<li>Get data from the nearest city based on IP address</li>\n<li>Get data from the nearest city based on latitude/longitude</li>\n<li>Get data from a specific city</li>\n</ul>\n<h2>Startup</h2>\n<p>The Startup Plan gives access to:</p>\n<ul>\n<li>List supported stations in a city</li>\n<li>Get data from the nearest station based on IP address</li>\n<li>Get data from the nearest station based on latitude/longitude</li>\n<li>Get data from a specific station</li>\n</ul>\n<h2>Enterprise</h2>\n<p>The Enterprise Plan gives access to:</p>\n<ul>\n<li>Get a global city ranking of air quality</li>\n</ul>\n<h1>Usage</h1>\n<h2>Using the Cloud API</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyairvisual</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"c1\"># If an API key isn't provided, only Nodes can be queried; everything else</span>\n        <span class=\"c1\"># requires an API key:</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;YOUR_AIRVISUAL_API_KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Get data based on the city nearest to your IP address:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">nearest_city</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># ...or get data based on the city nearest to a latitude/longitude:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">nearest_city</span><span class=\"p\">(</span>\n            <span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">39.742599</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">104.9942557</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># ...or get it explicitly:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">city</span><span class=\"p\">(</span>\n            <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s2\">\"Los Angeles\"</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s2\">\"California\"</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"USA\"</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># If you have the appropriate API key, you can also get data based on</span>\n        <span class=\"c1\"># station (nearest or explicit):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">nearest_station</span><span class=\"p\">()</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">nearest_station</span><span class=\"p\">(</span>\n            <span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">39.742599</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">104.9942557</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">station</span><span class=\"p\">(</span>\n            <span class=\"n\">station</span><span class=\"o\">=</span><span class=\"s2\">\"US Embassy in Beijing\"</span><span class=\"p\">,</span>\n            <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s2\">\"Beijing\"</span><span class=\"p\">,</span>\n            <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s2\">\"Beijing\"</span><span class=\"p\">,</span>\n            <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"China\"</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># With the appropriate API key, you can get an air quality ranking:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">ranking</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># pyairvisual gives you several methods to look locations up:</span>\n        <span class=\"n\">countries</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">supported</span><span class=\"o\">.</span><span class=\"n\">countries</span><span class=\"p\">()</span>\n        <span class=\"n\">states</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">supported</span><span class=\"o\">.</span><span class=\"n\">states</span><span class=\"p\">(</span><span class=\"s2\">\"USA\"</span><span class=\"p\">)</span>\n        <span class=\"n\">cities</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">supported</span><span class=\"o\">.</span><span class=\"n\">cities</span><span class=\"p\">(</span><span class=\"s2\">\"USA\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Colorado\"</span><span class=\"p\">)</span>\n        <span class=\"n\">stations</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">supported</span><span class=\"o\">.</span><span class=\"n\">stations</span><span class=\"p\">(</span><span class=\"s2\">\"USA\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Colorado\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Denver\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>By default, the library creates a new connection to AirVisual with each coroutine. If\nyou are calling a large number of coroutines (or merely want to squeeze out every second\nof runtime savings possible), an\n<a href=\"https://github.com/aio-libs/aiohttp\" rel=\"nofollow\"><code>aiohttp</code></a> <code>ClientSession</code> can be used for connection\npooling:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyairvisual</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;YOUR_AIRVISUAL_API_KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># ...</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>Working with Node/Pro Units</h2>\n<p><code>pyairvisual</code> also allows users to interact with\n<a href=\"https://www.airvisual.com/air-quality-monitor\" rel=\"nofollow\">Node/Pro units</a>, both via the cloud API:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyairvisual</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># The Node/Pro unit ID can be retrieved from the \"API\" section of the cloud</span>\n    <span class=\"c1\"># dashboard:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">from_cloud_api</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;NODE_ID&gt;\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>...or over the local network (the unit password can be found on the device itself):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyairvisual</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyairvisual.node</span> <span class=\"kn\">import</span> <span class=\"n\">NodeSamba</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Can take several optional parameters:</span>\n    <span class=\"c1\">#   1. include_history: include historical measurements (defaults to True)</span>\n    <span class=\"c1\">#   2. include_trends: include trends (defaults to True)</span>\n    <span class=\"c1\">#   3. measurements_to_use: the number of measurements to use when calculating</span>\n    <span class=\"c1\">#      trends (defaults to -1, which means \"use all measurements\")</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">from_samba</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"&lt;IP_ADDRESS_OR_HOST&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;PASSWORD&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"n\">include_history</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">include_trends</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">measurements_to_use</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>Check out the examples, the tests, and the source files themselves for method\nsignatures and more examples.</p>\n<h1>Contributing</h1>\n<ol>\n<li><a href=\"https://github.com/bachya/pyairvisual/issues\" rel=\"nofollow\">Check for open features/bugs</a>\nor <a href=\"https://github.com/bachya/pyairvisual/issues/new\" rel=\"nofollow\">initiate a discussion on one</a>.</li>\n<li><a href=\"https://github.com/bachya/pyairvisual/fork\" rel=\"nofollow\">Fork the repository</a>.</li>\n<li>(<em>optional, but highly recommended</em>) Create a virtual environment: <code>python3 -m venv .venv</code></li>\n<li>(<em>optional, but highly recommended</em>) Enter the virtual environment: <code>source ./.venv/bin/activate</code></li>\n<li>Install the dev environment: <code>script/setup</code></li>\n<li>Code your new feature or bug fix.</li>\n<li>Write tests that cover your new functionality.</li>\n<li>Run tests and ensure 100% code coverage: <code>script/test</code></li>\n<li>Update <code>README.md</code> with any new documentation.</li>\n<li>Add yourself to <code>AUTHORS.md</code>.</li>\n<li>Submit a pull request!</li>\n</ol>\n\n          </div>"}, "last_serial": 7101714, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f55889b891842d94c0f4909692500e2e", "sha256": "3170bd1a7bdb98a2daa4c51921e75d5c6b53a854d9999f9575ae6e87a8645ca0"}, "downloads": -1, "filename": "pyairvisual-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f55889b891842d94c0f4909692500e2e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5491, "upload_time": "2017-09-04T20:02:10", "upload_time_iso_8601": "2017-09-04T20:02:10.890566Z", "url": "https://files.pythonhosted.org/packages/08/28/9a56ddde419b83c688e34584246b2d60464739d63aa4788ba29caf7932ae/pyairvisual-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4690abfff5882c0807de5884eece8449", "sha256": "db53bb316427f2f15899125174a2c542647780391ccdebcbd33ba09e8c98d151"}, "downloads": -1, "filename": "pyairvisual-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4690abfff5882c0807de5884eece8449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3942, "upload_time": "2017-09-04T20:02:16", "upload_time_iso_8601": "2017-09-04T20:02:16.623764Z", "url": "https://files.pythonhosted.org/packages/5f/bf/e24886503bbb95bc8f7f4729b34c40f162ad96baff0d4bc989b679164e68/pyairvisual-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "9490a1ef28f531f1530091400c004a51", "sha256": "1d5bc85f4f5ed1f42330279f6babb66871e1fb8b66715408acf37ddfc2dab212"}, "downloads": -1, "filename": "pyairvisual-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9490a1ef28f531f1530091400c004a51", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5496, "upload_time": "2017-09-23T22:03:38", "upload_time_iso_8601": "2017-09-23T22:03:38.282275Z", "url": "https://files.pythonhosted.org/packages/19/38/a43e4a24cd58e728cb3c2253cb12d743fc3864fcbe88579a24b9472a82bd/pyairvisual-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e26f0ac05d2f8ea5725dd45d6080796", "sha256": "4906bfe93ed8551f949d66471748a84ca1c1f4d866055bc4016dc69d456c0cc2"}, "downloads": -1, "filename": "pyairvisual-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7e26f0ac05d2f8ea5725dd45d6080796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3953, "upload_time": "2017-09-23T22:03:39", "upload_time_iso_8601": "2017-09-23T22:03:39.767482Z", "url": "https://files.pythonhosted.org/packages/25/f9/c840939b69890e01238d62798a767a76b91a780b47a7840a59779cd105f4/pyairvisual-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "9a93af593c0c3fb030ea0ca77e103d74", "sha256": "9d5e09eb206c667b65eba1faaf3e0bf91137571ab37932a0c419c71b2c6a6222"}, "downloads": -1, "filename": "pyairvisual-2.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "9a93af593c0c3fb030ea0ca77e103d74", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5.0", "size": 6038, "upload_time": "2018-06-11T21:56:18", "upload_time_iso_8601": "2018-06-11T21:56:18.039737Z", "url": "https://files.pythonhosted.org/packages/ce/27/bbfcc2dbd44c8d8df458c4baf763fc0c97f1c6bc723999bb3060105b2780/pyairvisual-2.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e902ed898bdca21b556dfbd07b68ccf5", "sha256": "4f3ca41c30d9bae362dc6fdf649dab9fcaf415c01d49dd4d1f98f8487faa40c6"}, "downloads": -1, "filename": "pyairvisual-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e902ed898bdca21b556dfbd07b68ccf5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 6057, "upload_time": "2018-06-11T21:56:19", "upload_time_iso_8601": "2018-06-11T21:56:19.342111Z", "url": "https://files.pythonhosted.org/packages/c3/2e/47260ce5683ff163aa3cfc06042788934c2a313522ef158f4f96445de9c2/pyairvisual-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "f82ba96c23a981e535c3f43ebff5da74", "sha256": "94c6da88ff54564bdf1332b02c79dfc98434901f0bf24a9ad04363ca62ab0800"}, "downloads": -1, "filename": "pyairvisual-2.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "f82ba96c23a981e535c3f43ebff5da74", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5.0", "size": 6295, "upload_time": "2018-06-12T14:36:19", "upload_time_iso_8601": "2018-06-12T14:36:19.386272Z", "url": "https://files.pythonhosted.org/packages/8d/dd/bd9db698490efb80ff6df5dd4f47322ab369d38f4ff5822766ac9be570ed/pyairvisual-2.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd30a4c0fed6b31d845defd3406f8de5", "sha256": "9323c367c5cf484c4fdb24525cc428804cf493a2f190c67500c74d63eaa0033d"}, "downloads": -1, "filename": "pyairvisual-2.0.1.tar.gz", "has_sig": false, "md5_digest": "bd30a4c0fed6b31d845defd3406f8de5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 6422, "upload_time": "2018-06-12T14:36:20", "upload_time_iso_8601": "2018-06-12T14:36:20.473030Z", "url": "https://files.pythonhosted.org/packages/3a/2f/243568b6d5164359fbcafb74fa9272599e671a6f9b465c658e76cb61376a/pyairvisual-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "83af1331eb792a8bfd5ac25904cd7850", "sha256": "a5408ccec2749f5f40da06b976ae42af67094aaf9b16d1b053069efa7bdecb19"}, "downloads": -1, "filename": "pyairvisual-2.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "83af1331eb792a8bfd5ac25904cd7850", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6.0", "size": 6353, "upload_time": "2018-09-24T18:08:55", "upload_time_iso_8601": "2018-09-24T18:08:55.883360Z", "url": "https://files.pythonhosted.org/packages/c2/79/55ba1b79856d3b7bc0c459f957a78568afd75051ab4f7bb73378caf16381/pyairvisual-2.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "000dc4e4629802eb6f6a5e6b4e39cd02", "sha256": "e4c4a202b2580dc195933d6897436d64cb6f58f7d3cf7116a5d4b250bdf5cca1"}, "downloads": -1, "filename": "pyairvisual-2.0.2.tar.gz", "has_sig": false, "md5_digest": "000dc4e4629802eb6f6a5e6b4e39cd02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 6342, "upload_time": "2018-09-24T18:08:57", "upload_time_iso_8601": "2018-09-24T18:08:57.127618Z", "url": "https://files.pythonhosted.org/packages/1d/bc/f940d784961381f340fdeb358ef54224d7e484e271c360e5a4c66e854feb/pyairvisual-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "12630468161a015440ac8e6db99961e6", "sha256": "3d0b32a324133de2e8d06dd153e5dba88ca1b6cb5f60cfb9b674a0da44638e9b"}, "downloads": -1, "filename": "pyairvisual-2.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "12630468161a015440ac8e6db99961e6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6.0", "size": 6357, "upload_time": "2018-09-24T18:26:02", "upload_time_iso_8601": "2018-09-24T18:26:02.694424Z", "url": "https://files.pythonhosted.org/packages/ea/60/9446607ec232c42eb32b85bbbe775d67ab072ada1790580edbbeb247934a/pyairvisual-2.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b3bf8d4d3a2bd9893a821d73c998bcf", "sha256": "610e386c870116e701ca3795ea998b1e506d12ed150f5d0252a62c85d405152e"}, "downloads": -1, "filename": "pyairvisual-2.0.3.tar.gz", "has_sig": false, "md5_digest": "8b3bf8d4d3a2bd9893a821d73c998bcf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 6335, "upload_time": "2018-09-24T18:26:03", "upload_time_iso_8601": "2018-09-24T18:26:03.975900Z", "url": "https://files.pythonhosted.org/packages/fe/93/132a0c10696176f0afe8bbb419de8067d0dd601e494eadacfb8c6ae218f9/pyairvisual-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "444995f186b914f8ea0a89eb5831690a", "sha256": "2d43317e0d267a4c64f79faabf369802660e6775216d281d6ca71a778bcb37a6"}, "downloads": -1, "filename": "pyairvisual-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "444995f186b914f8ea0a89eb5831690a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 6439, "upload_time": "2018-11-03T03:33:18", "upload_time_iso_8601": "2018-11-03T03:33:18.437517Z", "url": "https://files.pythonhosted.org/packages/72/27/a0e18758f8a5a96ee08ff24651b774c23c14f20b3a513a8a601a769d1d1c/pyairvisual-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a394338b2b38aa054dcb4afc251c42ea", "sha256": "08893ee23cf62a7d1d9d5ef9b2cde8ac33956fafb255707b790fedeb7ee8dbc5"}, "downloads": -1, "filename": "pyairvisual-2.0.4.tar.gz", "has_sig": false, "md5_digest": "a394338b2b38aa054dcb4afc251c42ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 6442, "upload_time": "2018-11-03T03:33:19", "upload_time_iso_8601": "2018-11-03T03:33:19.678266Z", "url": "https://files.pythonhosted.org/packages/f1/6f/303d63011e609f15f7892d187d9bb05887ddaa58b4cdb4e3b5baa3046d13/pyairvisual-2.0.4.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "24d2055402722defe04ac0b550e9dd98", "sha256": "746900d74fb4cbfad7ba2b78e6231b3857e2f3eef93e7b5ad549ec1cbd4586ee"}, "downloads": -1, "filename": "pyairvisual-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "24d2055402722defe04ac0b550e9dd98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 11593, "upload_time": "2019-02-16T03:20:59", "upload_time_iso_8601": "2019-02-16T03:20:59.766153Z", "url": "https://files.pythonhosted.org/packages/61/c9/b5e9ac64de7f2d36858c8649e2942929c7c7ceeb6e33384085636f226a60/pyairvisual-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c684075164a188c5b1e3b252911398ac", "sha256": "62878c8a0cb02b161b1cadf2b4b4d2738231e3dd9ab21af9809e9c3d61136338"}, "downloads": -1, "filename": "pyairvisual-3.0.0.tar.gz", "has_sig": false, "md5_digest": "c684075164a188c5b1e3b252911398ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 9308, "upload_time": "2019-02-16T03:21:01", "upload_time_iso_8601": "2019-02-16T03:21:01.139374Z", "url": "https://files.pythonhosted.org/packages/c6/b7/085f569a752976330c31d1be1222a9d78864f9e4af114e515928862fd12e/pyairvisual-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "50325eb481fa0798b2e7f567f003d56c", "sha256": "d4c79fd35538774ac423b0ab5e1061715d316e0c997db04800eac95181d1f94d"}, "downloads": -1, "filename": "pyairvisual-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "50325eb481fa0798b2e7f567f003d56c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 11587, "upload_time": "2019-02-28T00:24:20", "upload_time_iso_8601": "2019-02-28T00:24:20.559834Z", "url": "https://files.pythonhosted.org/packages/b9/70/13a1ce96f4fd98d6bf6443c9a65cdc7c93a50647e99cec0796de8f5f1eb4/pyairvisual-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db2ba93d1d565a9f8f12dbde9a4c4ca3", "sha256": "b7e330864bf4e7143ae53886e91124cf31e76470fd95f9e00ac287531d50e8d3"}, "downloads": -1, "filename": "pyairvisual-3.0.1.tar.gz", "has_sig": false, "md5_digest": "db2ba93d1d565a9f8f12dbde9a4c4ca3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 9302, "upload_time": "2019-02-28T00:24:21", "upload_time_iso_8601": "2019-02-28T00:24:21.790520Z", "url": "https://files.pythonhosted.org/packages/01/c1/cabf63ae86d7423246951bacbd7aec586e3f158540e2e1b4039113c4a5f6/pyairvisual-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "ef0cd6306e30899e0b72e99a2bb30093", "sha256": "29a91da79466b8ff603f38312cec6e88b5fd9ffce70957e459196f63623148d5"}, "downloads": -1, "filename": "pyairvisual-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ef0cd6306e30899e0b72e99a2bb30093", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 11515, "upload_time": "2019-09-24T18:19:12", "upload_time_iso_8601": "2019-09-24T18:19:12.321865Z", "url": "https://files.pythonhosted.org/packages/8a/32/5f570f7f0170940a4dcc8cd452b32e7bbdd03871907e0e87202b7a892f28/pyairvisual-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "283c22b1c5431b4fda298569907627ae", "sha256": "bb6db83aea6fd96faad2e2b0f971312508f7f48121196974e2e9844326c90e54"}, "downloads": -1, "filename": "pyairvisual-3.0.2.tar.gz", "has_sig": false, "md5_digest": "283c22b1c5431b4fda298569907627ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 9200, "upload_time": "2019-09-24T18:19:14", "upload_time_iso_8601": "2019-09-24T18:19:14.088157Z", "url": "https://files.pythonhosted.org/packages/79/7e/5f6de934d05abe364006d1f5259f4e69124d0a2a4f03bfed66ce8e0c0871/pyairvisual-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "8cdead955146cd69f90020a45e90c7ab", "sha256": "32fe0fe3d82c2dc409008144ee56c18a415bb95556c252239010313242bf982a"}, "downloads": -1, "filename": "pyairvisual-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8cdead955146cd69f90020a45e90c7ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 7308, "upload_time": "2019-11-18T04:07:18", "upload_time_iso_8601": "2019-11-18T04:07:18.552595Z", "url": "https://files.pythonhosted.org/packages/df/7d/0f025234b07b2ecdf16d1be8822ab560049c55623f66257fde17f323a9ea/pyairvisual-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99e9f844e6b4e190dac5ae6c179b9150", "sha256": "92770ae22aa10dca049b60cdab7c3a6cfd0368682a9cc5ca5def4a3730763cf5"}, "downloads": -1, "filename": "pyairvisual-3.0.3.tar.gz", "has_sig": false, "md5_digest": "99e9f844e6b4e190dac5ae6c179b9150", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 7025, "upload_time": "2019-11-18T04:07:19", "upload_time_iso_8601": "2019-11-18T04:07:19.712242Z", "url": "https://files.pythonhosted.org/packages/8a/c7/948da773edc693ae90b7b721e88cc01ca278c93aa93ac3c8db53d78b2bf7/pyairvisual-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "22aec6287fd41beb2f00670e1f2f7545", "sha256": "59d67616026b50dc1cd15bf9b1ca9f55a5358b45835ddd6127be09f7eb5a9f18"}, "downloads": -1, "filename": "pyairvisual-3.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "22aec6287fd41beb2f00670e1f2f7545", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 7342, "upload_time": "2020-02-11T02:03:39", "upload_time_iso_8601": "2020-02-11T02:03:39.617209Z", "url": "https://files.pythonhosted.org/packages/fa/1b/0dc68640258b60ddc23ec42ba0181e11c0a4d8663954ef64196b287ce694/pyairvisual-3.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2670f9f1d542b80791a40d2473649696", "sha256": "f0cfeacdb8528d4309c5c41eb972c08fcfb66ee1eeeae4eaf00908de8adec345"}, "downloads": -1, "filename": "pyairvisual-3.0.4.tar.gz", "has_sig": false, "md5_digest": "2670f9f1d542b80791a40d2473649696", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 7242, "upload_time": "2020-02-11T02:03:40", "upload_time_iso_8601": "2020-02-11T02:03:40.938148Z", "url": "https://files.pythonhosted.org/packages/fb/18/687bde13d67bc02e0abeb7d2d9732bde082f83d9d090c4f382877440cd36/pyairvisual-3.0.4.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "5ec2d91c9d9d12e3286f7f52edbe9001", "sha256": "05259657eec7af9a423bd7dd0f39df68b59d0ec4ed9bf18c1812bed0318b8f97"}, "downloads": -1, "filename": "pyairvisual-3.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5ec2d91c9d9d12e3286f7f52edbe9001", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 7416, "upload_time": "2020-02-11T22:03:57", "upload_time_iso_8601": "2020-02-11T22:03:57.074186Z", "url": "https://files.pythonhosted.org/packages/a1/47/4dceab525e597314ef2d4fa87fcf79c5f815b2e1334ac286a7081481130c/pyairvisual-3.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a758ace0968f9299b4cfb366c8299ed2", "sha256": "df903eabe69987f756639e236a5f1ce69c8c5c476f4d55bb064391d2a7346896"}, "downloads": -1, "filename": "pyairvisual-3.0.5.tar.gz", "has_sig": false, "md5_digest": "a758ace0968f9299b4cfb366c8299ed2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 7313, "upload_time": "2020-02-11T22:03:58", "upload_time_iso_8601": "2020-02-11T22:03:58.309684Z", "url": "https://files.pythonhosted.org/packages/7a/d2/5e6034496e6cc14705d7988b4d055c987a40bc07f834a34ad4b1c44d14fc/pyairvisual-3.0.5.tar.gz", "yanked": false}], "3.0.6": [{"comment_text": "", "digests": {"md5": "eb3bf00104a6e902ca998026f69e5e81", "sha256": "1a1b8b2b04be7b896a48839697f3c211f7d6e5afff9ea9e045c07b37783d4021"}, "downloads": -1, "filename": "pyairvisual-3.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "eb3bf00104a6e902ca998026f69e5e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 7709, "upload_time": "2020-03-11T19:22:01", "upload_time_iso_8601": "2020-03-11T19:22:01.442693Z", "url": "https://files.pythonhosted.org/packages/33/d6/b5b724b1b42824a2fdd239a6bc4d04904a4136480357b325263cac6cd6ac/pyairvisual-3.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd155771d0bc7547bea4094e1bc96e5", "sha256": "37d1a39d63ef5990c616cfdc8176e04514ad115fd2dd296a5e8318f94c74d0e4"}, "downloads": -1, "filename": "pyairvisual-3.0.6.tar.gz", "has_sig": false, "md5_digest": "abd155771d0bc7547bea4094e1bc96e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 7532, "upload_time": "2020-03-11T19:22:02", "upload_time_iso_8601": "2020-03-11T19:22:02.634864Z", "url": "https://files.pythonhosted.org/packages/55/24/c0e8d377465c775fa038776e02cd44528bfd134fac1a23e4b58119caba23/pyairvisual-3.0.6.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "36f7143e13b69eb91ab0fd5f3bee340e", "sha256": "7e087e85e837c16fede7aceb48c9cab443b4301f54d74a922e7c545e5b4a7080"}, "downloads": -1, "filename": "pyairvisual-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36f7143e13b69eb91ab0fd5f3bee340e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 8535, "upload_time": "2020-03-14T23:50:21", "upload_time_iso_8601": "2020-03-14T23:50:21.840296Z", "url": "https://files.pythonhosted.org/packages/a7/d6/5dea4d952d9bb22637862a299187381780ca7e2c8d29f2f9c0a3afcb8e03/pyairvisual-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "153e872bf6d9c29e94f4a17c888d16b9", "sha256": "8480e65dd933c26a3108a11ae9d41a3e1ba57e3073c2f25f4d732ed10862c048"}, "downloads": -1, "filename": "pyairvisual-4.0.0.tar.gz", "has_sig": false, "md5_digest": "153e872bf6d9c29e94f4a17c888d16b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 8130, "upload_time": "2020-03-14T23:50:22", "upload_time_iso_8601": "2020-03-14T23:50:22.832116Z", "url": "https://files.pythonhosted.org/packages/8d/89/ecaa90d53ee1a075e37f67c0a04e3fecbced5de55d381de9115ed59f11fd/pyairvisual-4.0.0.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "67c3a1f27d7ff10085562ae4cce72583", "sha256": "b4572ba4352656a81794ea40b703608705541df2776224839d5eb42d2320e290"}, "downloads": -1, "filename": "pyairvisual-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "67c3a1f27d7ff10085562ae4cce72583", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 10080, "upload_time": "2020-03-19T03:52:45", "upload_time_iso_8601": "2020-03-19T03:52:45.467801Z", "url": "https://files.pythonhosted.org/packages/16/61/95f6b91f2d7316aaed57d8e2292f71babb18f0379bb4a9fa76899bfc0e53/pyairvisual-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e482fce573b04034029805c70443a6f7", "sha256": "2c5be5e9329c60212871e1f554e8dd5cd706eb1e9a41c484af21488bc74d112e"}, "downloads": -1, "filename": "pyairvisual-4.1.0.tar.gz", "has_sig": false, "md5_digest": "e482fce573b04034029805c70443a6f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 11204, "upload_time": "2020-03-19T03:52:46", "upload_time_iso_8601": "2020-03-19T03:52:46.738786Z", "url": "https://files.pythonhosted.org/packages/2a/b6/2afe964c86d0cfe47026f50977a0795e9cd9cd8b2ed607cacc54f658cfff/pyairvisual-4.1.0.tar.gz", "yanked": false}], "4.2.0": [{"comment_text": "", "digests": {"md5": "cb66dacac364621a4e5e767d82af17f6", "sha256": "12f5d6ab77058d11d1fe2b5d6729892332b8a2d73f03f0864e016978abfcf3c7"}, "downloads": -1, "filename": "pyairvisual-4.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cb66dacac364621a4e5e767d82af17f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 10478, "upload_time": "2020-03-19T04:40:23", "upload_time_iso_8601": "2020-03-19T04:40:23.861116Z", "url": "https://files.pythonhosted.org/packages/bf/79/06b2a0619d77b42c75767d76d3766963de8638db0c14a8cd983d5c8b0b09/pyairvisual-4.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5461c783b5cbb861b4e1620f2958409", "sha256": "a09e3d0ca9363a3b3c301093a26dfcb169da73be102ecc4d7611c51f4ffe9bfd"}, "downloads": -1, "filename": "pyairvisual-4.2.0.tar.gz", "has_sig": false, "md5_digest": "c5461c783b5cbb861b4e1620f2958409", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 11609, "upload_time": "2020-03-19T04:40:25", "upload_time_iso_8601": "2020-03-19T04:40:25.055045Z", "url": "https://files.pythonhosted.org/packages/ff/55/1b2094e5826024cbdfc2a3837021ef76211fac0f9e6caeaa05e898867daa/pyairvisual-4.2.0.tar.gz", "yanked": false}], "4.3.0": [{"comment_text": "", "digests": {"md5": "f672b6beb3fc61ff40a475519f0a519a", "sha256": "1d2e0feaa3d6301127d97de93cd4768a3ec83dfcd3d94870c6cc305d6b2b114b"}, "downloads": -1, "filename": "pyairvisual-4.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f672b6beb3fc61ff40a475519f0a519a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 10755, "upload_time": "2020-04-03T04:38:23", "upload_time_iso_8601": "2020-04-03T04:38:23.766670Z", "url": "https://files.pythonhosted.org/packages/c5/8d/90dbcc71739d24fc0271f7519e09deb805ba59d98c66e12b6d4ba6c5d938/pyairvisual-4.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c381362797dcbb0f1fff0b7b50ea49f6", "sha256": "275d19369064fed3d03d93d8f374094db54e3c6e53d2f3e6ca88730b343a4252"}, "downloads": -1, "filename": "pyairvisual-4.3.0.tar.gz", "has_sig": false, "md5_digest": "c381362797dcbb0f1fff0b7b50ea49f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 11973, "upload_time": "2020-04-03T04:38:24", "upload_time_iso_8601": "2020-04-03T04:38:24.914316Z", "url": "https://files.pythonhosted.org/packages/6f/27/5ec7a02f7b2ee96b5993a9b4ef0482c0acaf4ba9c9c753806e85bc1d5d6b/pyairvisual-4.3.0.tar.gz", "yanked": false}], "4.4.0": [{"comment_text": "", "digests": {"md5": "3781b4163bb024c951bb720f013b2c30", "sha256": "58258406a6e3a3d8a6c6bcc2c3c2493a4e7db898dcb42d1cd690debcd0c6e1ba"}, "downloads": -1, "filename": "pyairvisual-4.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3781b4163bb024c951bb720f013b2c30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 10876, "upload_time": "2020-04-25T23:18:34", "upload_time_iso_8601": "2020-04-25T23:18:34.973952Z", "url": "https://files.pythonhosted.org/packages/9f/25/298fa42b14f9529c4169afe956e8f7725b6d9f85b2e5850614f3a53a3090/pyairvisual-4.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a37084583a63a352db2bd21918e0d787", "sha256": "e0d72104ad1b676773a7ae4c2e6ce5c77e43b477ab29fac3e0c5d79f77ac88a4"}, "downloads": -1, "filename": "pyairvisual-4.4.0.tar.gz", "has_sig": false, "md5_digest": "a37084583a63a352db2bd21918e0d787", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 12089, "upload_time": "2020-04-25T23:18:35", "upload_time_iso_8601": "2020-04-25T23:18:35.945354Z", "url": "https://files.pythonhosted.org/packages/ab/00/0e0a67f34053a87a8a67d75b528212230549263fc9483e5f570e60ce3bbc/pyairvisual-4.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3781b4163bb024c951bb720f013b2c30", "sha256": "58258406a6e3a3d8a6c6bcc2c3c2493a4e7db898dcb42d1cd690debcd0c6e1ba"}, "downloads": -1, "filename": "pyairvisual-4.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3781b4163bb024c951bb720f013b2c30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0,<4.0.0", "size": 10876, "upload_time": "2020-04-25T23:18:34", "upload_time_iso_8601": "2020-04-25T23:18:34.973952Z", "url": "https://files.pythonhosted.org/packages/9f/25/298fa42b14f9529c4169afe956e8f7725b6d9f85b2e5850614f3a53a3090/pyairvisual-4.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a37084583a63a352db2bd21918e0d787", "sha256": "e0d72104ad1b676773a7ae4c2e6ce5c77e43b477ab29fac3e0c5d79f77ac88a4"}, "downloads": -1, "filename": "pyairvisual-4.4.0.tar.gz", "has_sig": false, "md5_digest": "a37084583a63a352db2bd21918e0d787", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0,<4.0.0", "size": 12089, "upload_time": "2020-04-25T23:18:35", "upload_time_iso_8601": "2020-04-25T23:18:35.945354Z", "url": "https://files.pythonhosted.org/packages/ab/00/0e0a67f34053a87a8a67d75b528212230549263fc9483e5f570e60ce3bbc/pyairvisual-4.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:52 2020"}