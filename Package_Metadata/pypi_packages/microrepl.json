{"info": {"author": "Nicholas H.Tollervey", "author_email": "ntoll@ntoll.org", "bugtrack_url": null, "classifiers": [], "description": "MicroPython micro:bit REPL\n==========================\n\nThis script lets you run commands directly onto a connected micro:bit device.\nPut simply, you get to program the micro:bit in real time, just like we used\nto with the old BBC micro from the 1980's. This encourages exploration,\nexperimentation and a sense of adventure. It's also a good way to play with\nthe device to learn about its capabilities.\n\nThe script detects the port to which the micro:bit is connected and uses\nPySerial to make a connection to the micro:bit's Read Evaluate Print Loop\n(REPL).\n\nFor more information about what a REPL, is check out this Wikipedia article:\n\nhttps://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\n\nInstallation\n------------\n\nUnfortunately, Windows does not come with serial/COM drivers for the micro:bit\ninstalled by default (happily, Linux and OSX do).\n\nIf you're on Windows, in order to make this work you should use the\nmbedWinSerial_16466.exe file (found in the root directory of this project) to\ninstall the correct drivers. You *MUST* have your micro:bit plugged into your\ncomputer when you run this command.\n\nFor more information and the latest versions of this driver please visit:\n\nhttps://developer.mbed.org/handbook/Windows-serial-configuration\n\nAssuming this requirement is met, you can install/run the script in three ways:\n\n1. Install via pip and PyPI::\n\n    # pip install microrepl\n\n2. Install via setup.py::\n\n    # python setup.py install\n\n3. Run the script from within the repository::\n\n    # pip install -r requirements.txt\n    # python microrepl.py\n\nAll of the above should probably be done within a virtualenv. The first two\noptions will result in two commands being installed: microrepl or its alias\nurepl. Simply type these at the command prompt to run the application.\n\nGetting Started\n---------------\n\nWhen you run the script it will try to be as helpful as possible in working out\nwhy it can't connect. In most cases it will try to print some helpful advice.\n\nOnce connected the script will stop the program running on the micro:bit in\norder to drop you into the REPL itself. You type Python commands next to the\nprompt (``>>>``).\n\nIf things don't seem to be working, re-flash your micro:bit using the\n``firmware.hex`` file in this directory, and try again.\n\nYou can use the TAB key to auto-complete words. For example, if you\ntype ``microbit.sc`` then hit TAB, MicroPython will helpfully complete the\nword for you, like this: ``microbit.screen``.\n\nYou can move forwards and backwards through your command history by using the\nup arrow key (to move back through your command history) and down arrow key\n(to move forwards through your command history). The left and right arrow\nkeys allow you to move through the text of your command without deleting it.\n\nUse the TAB and arrow key commands! They save a lot of typing and look really\ncool.\n\nUnplugging the device and pressing the reset button will re-start the program\nas the version you originally flashed onto the device.\n\nUseful Commands\n---------------\n\nA good place to start is to type ``help()``. From here you should be able\nto explore the device and the MicroPython version of Python 3.\n\nAll the micro:bit's hardware is available to program via the ``microbit``\nmodule. To start using it type the command ``import microbit``. Do fun things\nsuch as ``microbit.display.scroll('Hello, World!')`` and watch the device react\nin real-time.\n\nType the command ``dir()`` to see a list of all the things currently\navailable to you - this includes the various classes and functions for the\nprogram you may have already flashed onto the micro:bit.\n\nFind Out More\n-------------\n\nTo learn more about the amazing MicroPython visit: http://micropython.org/\n\nThe BBC micro:bit's (non-Pythonic) home is: http://microbit.co.uk/\n\nTo learn about the Python language visit: http://python.org/\n\n\nRelease History\n---------------\n\n0.5\n+++\n\nUpdated to latest version of PySerial.\n\n0.4\n+++\n\nWindows support added. Requires installation of drivers found in the\nmbedWinSerial_16466.exe executable. More information can be found at the ARM\nwebsite: https://developer.mbed.org/handbook/Windows-serial-configuration\n\n0.1\n+++\n\nInitial release. Works on Linux and OSX on both Python 2.7 and 3.3+. Windows\nversion coming soon.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://micropython.org/", "keywords": "", "license": "apache2", "maintainer": "", "maintainer_email": "", "name": "microrepl", "package_url": "https://pypi.org/project/microrepl/", "platform": "", "project_url": "https://pypi.org/project/microrepl/", "project_urls": {"Homepage": "http://micropython.org/"}, "release_url": "https://pypi.org/project/microrepl/0.6/", "requires_dist": ["pyserial"], "requires_python": "", "summary": "A REPL client for MicroPython running on the BBC micro:bit.", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This script lets you run commands directly onto a connected micro:bit device.\nPut simply, you get to program the micro:bit in real time, just like we used\nto with the old BBC micro from the 1980\u2019s. This encourages exploration,\nexperimentation and a sense of adventure. It\u2019s also a good way to play with\nthe device to learn about its capabilities.</p>\n<p>The script detects the port to which the micro:bit is connected and uses\nPySerial to make a connection to the micro:bit\u2019s Read Evaluate Print Loop\n(REPL).</p>\n<p>For more information about what a REPL, is check out this Wikipedia article:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Unfortunately, Windows does not come with serial/COM drivers for the micro:bit\ninstalled by default (happily, Linux and OSX do).</p>\n<p>If you\u2019re on Windows, in order to make this work you should use the\nmbedWinSerial_16466.exe file (found in the root directory of this project) to\ninstall the correct drivers. You <em>MUST</em> have your micro:bit plugged into your\ncomputer when you run this command.</p>\n<p>For more information and the latest versions of this driver please visit:</p>\n<p><a href=\"https://developer.mbed.org/handbook/Windows-serial-configuration\" rel=\"nofollow\">https://developer.mbed.org/handbook/Windows-serial-configuration</a></p>\n<p>Assuming this requirement is met, you can install/run the script in three ways:</p>\n<ol>\n<li><p>Install via pip and PyPI:</p>\n<pre># pip install microrepl\n</pre>\n</li>\n<li><p>Install via setup.py:</p>\n<pre># python setup.py install\n</pre>\n</li>\n<li><p>Run the script from within the repository:</p>\n<pre># pip install -r requirements.txt\n# python microrepl.py\n</pre>\n</li>\n</ol>\n<p>All of the above should probably be done within a virtualenv. The first two\noptions will result in two commands being installed: microrepl or its alias\nurepl. Simply type these at the command prompt to run the application.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>When you run the script it will try to be as helpful as possible in working out\nwhy it can\u2019t connect. In most cases it will try to print some helpful advice.</p>\n<p>Once connected the script will stop the program running on the micro:bit in\norder to drop you into the REPL itself. You type Python commands next to the\nprompt (<tt>&gt;&gt;&gt;</tt>).</p>\n<p>If things don\u2019t seem to be working, re-flash your micro:bit using the\n<tt>firmware.hex</tt> file in this directory, and try again.</p>\n<p>You can use the TAB key to auto-complete words. For example, if you\ntype <tt>microbit.sc</tt> then hit TAB, MicroPython will helpfully complete the\nword for you, like this: <tt>microbit.screen</tt>.</p>\n<p>You can move forwards and backwards through your command history by using the\nup arrow key (to move back through your command history) and down arrow key\n(to move forwards through your command history). The left and right arrow\nkeys allow you to move through the text of your command without deleting it.</p>\n<p>Use the TAB and arrow key commands! They save a lot of typing and look really\ncool.</p>\n<p>Unplugging the device and pressing the reset button will re-start the program\nas the version you originally flashed onto the device.</p>\n</div>\n<div id=\"useful-commands\">\n<h2>Useful Commands</h2>\n<p>A good place to start is to type <tt>help()</tt>. From here you should be able\nto explore the device and the MicroPython version of Python 3.</p>\n<p>All the micro:bit\u2019s hardware is available to program via the <tt>microbit</tt>\nmodule. To start using it type the command <tt>import microbit</tt>. Do fun things\nsuch as <tt><span class=\"pre\">microbit.display.scroll('Hello,</span> <span class=\"pre\">World!')</span></tt> and watch the device react\nin real-time.</p>\n<p>Type the command <tt>dir()</tt> to see a list of all the things currently\navailable to you - this includes the various classes and functions for the\nprogram you may have already flashed onto the micro:bit.</p>\n</div>\n<div id=\"find-out-more\">\n<h2>Find Out More</h2>\n<p>To learn more about the amazing MicroPython visit: <a href=\"http://micropython.org/\" rel=\"nofollow\">http://micropython.org/</a></p>\n<p>The BBC micro:bit\u2019s (non-Pythonic) home is: http://microbit.co.uk/</p>\n<p>To learn about the Python language visit: <a href=\"http://python.org/\" rel=\"nofollow\">http://python.org/</a></p>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<div id=\"id1\">\n<h3>0.5</h3>\n<p>Updated to latest version of PySerial.</p>\n</div>\n<div id=\"id2\">\n<h3>0.4</h3>\n<p>Windows support added. Requires installation of drivers found in the\nmbedWinSerial_16466.exe executable. More information can be found at the ARM\nwebsite: <a href=\"https://developer.mbed.org/handbook/Windows-serial-configuration\" rel=\"nofollow\">https://developer.mbed.org/handbook/Windows-serial-configuration</a></p>\n</div>\n<div id=\"id3\">\n<h3>0.1</h3>\n<p>Initial release. Works on Linux and OSX on both Python 2.7 and 3.3+. Windows\nversion coming soon.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3675867, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "9b5a1e32dc32c67556003cb38d2225de", "sha256": "2fd5437136100e6d2585687e3fe7f3badbaf740647ce3d4f0fb5865a719226e8"}, "downloads": -1, "filename": "microrepl-0.2.tar.gz", "has_sig": false, "md5_digest": "9b5a1e32dc32c67556003cb38d2225de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3799, "upload_time": "2015-09-05T19:05:38", "upload_time_iso_8601": "2015-09-05T19:05:38.593368Z", "url": "https://files.pythonhosted.org/packages/e8/2c/92c1af1fbfaf0f195ed4b9207951df9a0b6266c922c1b47dde1a678c4798/microrepl-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5a0568ce8b572d0f84cf0b88ee75d653", "sha256": "d2834348d46d212ec6e24cfce51eeac2062c7999fc20ec205b2e1eb13aa582cf"}, "downloads": -1, "filename": "microrepl-0.3.tar.gz", "has_sig": false, "md5_digest": "5a0568ce8b572d0f84cf0b88ee75d653", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3900, "upload_time": "2015-09-05T19:14:24", "upload_time_iso_8601": "2015-09-05T19:14:24.090398Z", "url": "https://files.pythonhosted.org/packages/79/17/2f87abb7f6bff4ade0f766ba9244dfe419c7af61d7e6fd04321ec8823abb/microrepl-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "a639d86c9a429a331d0958eff5dddae9", "sha256": "a7f5472cc04edac5badba383994a918e249e92eea9df442c70301a2db98ce141"}, "downloads": -1, "filename": "microrepl-0.4.tar.gz", "has_sig": false, "md5_digest": "a639d86c9a429a331d0958eff5dddae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 579005, "upload_time": "2015-09-08T01:29:00", "upload_time_iso_8601": "2015-09-08T01:29:00.209179Z", "url": "https://files.pythonhosted.org/packages/d0/25/37d5653a0f0080c74e9abc50405653a03b6f00e844def691cedb190593a9/microrepl-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "45bc1d97451bfeb00e3c5956d12ab9dc", "sha256": "fb9ae7ac7d033928a4fb5a69940fb72d770dcd905e934a88c5f6014ba4f94dc9"}, "downloads": -1, "filename": "microrepl-0.5.tar.gz", "has_sig": false, "md5_digest": "45bc1d97451bfeb00e3c5956d12ab9dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 579330, "upload_time": "2016-03-14T08:19:29", "upload_time_iso_8601": "2016-03-14T08:19:29.891528Z", "url": "https://files.pythonhosted.org/packages/0a/92/16fa5d9428c24acbab026e30cde6deb60bdb9f2e1815e977d9c062bb6686/microrepl-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "37a3aa195d366bdfb7dec570a1ac96c5", "sha256": "59e09db899809d4b3ec4f2e303468c5c230fd7facd1e441b94bf9bcd8f1af89b"}, "downloads": -1, "filename": "microrepl-0.6-py3-none-any.whl", "has_sig": true, "md5_digest": "37a3aa195d366bdfb7dec570a1ac96c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7760, "upload_time": "2018-03-16T11:04:48", "upload_time_iso_8601": "2018-03-16T11:04:48.572455Z", "url": "https://files.pythonhosted.org/packages/4b/f7/ad7c1771ebceebab1ce3be2ac8df675ab7ca1841b7628f72937195b3e92f/microrepl-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9986a797b97a198b30b21a9c0cd9c0b7", "sha256": "20ce959e4cd0fbce90ff68023e1f4bd9ddb11afee9c1953142169d2d2686a5f9"}, "downloads": -1, "filename": "microrepl-0.6.tar.gz", "has_sig": true, "md5_digest": "9986a797b97a198b30b21a9c0cd9c0b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 579395, "upload_time": "2018-03-16T11:04:50", "upload_time_iso_8601": "2018-03-16T11:04:50.737688Z", "url": "https://files.pythonhosted.org/packages/fd/66/eea75d90e1fde919e66706d064db7176ff846f277b6597283878d0a32ac1/microrepl-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "37a3aa195d366bdfb7dec570a1ac96c5", "sha256": "59e09db899809d4b3ec4f2e303468c5c230fd7facd1e441b94bf9bcd8f1af89b"}, "downloads": -1, "filename": "microrepl-0.6-py3-none-any.whl", "has_sig": true, "md5_digest": "37a3aa195d366bdfb7dec570a1ac96c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7760, "upload_time": "2018-03-16T11:04:48", "upload_time_iso_8601": "2018-03-16T11:04:48.572455Z", "url": "https://files.pythonhosted.org/packages/4b/f7/ad7c1771ebceebab1ce3be2ac8df675ab7ca1841b7628f72937195b3e92f/microrepl-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9986a797b97a198b30b21a9c0cd9c0b7", "sha256": "20ce959e4cd0fbce90ff68023e1f4bd9ddb11afee9c1953142169d2d2686a5f9"}, "downloads": -1, "filename": "microrepl-0.6.tar.gz", "has_sig": true, "md5_digest": "9986a797b97a198b30b21a9c0cd9c0b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 579395, "upload_time": "2018-03-16T11:04:50", "upload_time_iso_8601": "2018-03-16T11:04:50.737688Z", "url": "https://files.pythonhosted.org/packages/fd/66/eea75d90e1fde919e66706d064db7176ff846f277b6597283878d0a32ac1/microrepl-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:58 2020"}