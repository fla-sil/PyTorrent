{"info": {"author": "Carlos Ronchi and Lun Zhang", "author_email": "carloshvronchi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Education", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Healthcare Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics"], "description": "perscode\n===\n\nVectorization methods for persistence diagrams based in the paper [Persistence Codebooks for\nTopological Data Analysis](https://arxiv.org/abs/1802.04852).\n\n## Usage\n\n```python\nimport perscode\nimport numpy as np\n\n# generate diagrams\ndiagrams = [np.random.rand(100,2) for _ in range(20)]\nfor diagram in diagrams:\n    diagram[:,1] += diagram[:,0]\n\n# N is the size of the vectors\n# normalize is a Bool to whether or not normalize the output vector\npbow = perscode.PBoW(N = 3, normalize = False)\nwpbow = perscode.wPBoW(N = 3)\n# n_subsample is an int or None. If none all points will be used when calculating GMMs.\nspbow = perscode.sPBoW(N = 10, n_subsample = None)\n\n# vectorize diagrams\npbow_diagrams  = pbow.transform(diagrams)\nwpbow_diagrams = wpbow.transform(diagrams)\nspbow_diagrams = spbow.transform(diagrams)\n\n# for PVLAD and stable PVLAD\npvlad = perscode.PVLAD(N = 3)\nspvlad = perscode.sPVLAD(N = 3)\n\npvlad_diagrams = pvlad.transform(diagrams)\nspvlad_diagrams = spvlad.transform(diagrams)\n```\n\n## TODO\n- [x] Implement options to pass cluster centers as arguments in wPBoW and sPBoW.\n- [x] Implement PVLAD\n- [x] Implement sPVLAD\n- [ ] Implement PFV\n- [x] Implement optional weighted subsampling to wPBoW, sPBoW, sPVLAD classes.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chronchi/perscode", "keywords": "persistent homology,persistence codebooks,persistence diagrams,topological data analysis,algebraic topology", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "perscode", "package_url": "https://pypi.org/project/perscode/", "platform": "", "project_url": "https://pypi.org/project/perscode/", "project_urls": {"Homepage": "https://github.com/chronchi/perscode"}, "release_url": "https://pypi.org/project/perscode/0.0.1/", "requires_dist": ["scikit-learn", "numpy"], "requires_python": "", "summary": "Representation of persistence diagrams using persistence codebooks", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>perscode</h1>\n<p>Vectorization methods for persistence diagrams based in the paper <a href=\"https://arxiv.org/abs/1802.04852\" rel=\"nofollow\">Persistence Codebooks for\nTopological Data Analysis</a>.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">perscode</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># generate diagrams</span>\n<span class=\"n\">diagrams</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)]</span>\n<span class=\"k\">for</span> <span class=\"n\">diagram</span> <span class=\"ow\">in</span> <span class=\"n\">diagrams</span><span class=\"p\">:</span>\n    <span class=\"n\">diagram</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">diagram</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># N is the size of the vectors</span>\n<span class=\"c1\"># normalize is a Bool to whether or not normalize the output vector</span>\n<span class=\"n\">pbow</span> <span class=\"o\">=</span> <span class=\"n\">perscode</span><span class=\"o\">.</span><span class=\"n\">PBoW</span><span class=\"p\">(</span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">normalize</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">wpbow</span> <span class=\"o\">=</span> <span class=\"n\">perscode</span><span class=\"o\">.</span><span class=\"n\">wPBoW</span><span class=\"p\">(</span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># n_subsample is an int or None. If none all points will be used when calculating GMMs.</span>\n<span class=\"n\">spbow</span> <span class=\"o\">=</span> <span class=\"n\">perscode</span><span class=\"o\">.</span><span class=\"n\">sPBoW</span><span class=\"p\">(</span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">n_subsample</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># vectorize diagrams</span>\n<span class=\"n\">pbow_diagrams</span>  <span class=\"o\">=</span> <span class=\"n\">pbow</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">diagrams</span><span class=\"p\">)</span>\n<span class=\"n\">wpbow_diagrams</span> <span class=\"o\">=</span> <span class=\"n\">wpbow</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">diagrams</span><span class=\"p\">)</span>\n<span class=\"n\">spbow_diagrams</span> <span class=\"o\">=</span> <span class=\"n\">spbow</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">diagrams</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># for PVLAD and stable PVLAD</span>\n<span class=\"n\">pvlad</span> <span class=\"o\">=</span> <span class=\"n\">perscode</span><span class=\"o\">.</span><span class=\"n\">PVLAD</span><span class=\"p\">(</span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">spvlad</span> <span class=\"o\">=</span> <span class=\"n\">perscode</span><span class=\"o\">.</span><span class=\"n\">sPVLAD</span><span class=\"p\">(</span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">pvlad_diagrams</span> <span class=\"o\">=</span> <span class=\"n\">pvlad</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">diagrams</span><span class=\"p\">)</span>\n<span class=\"n\">spvlad_diagrams</span> <span class=\"o\">=</span> <span class=\"n\">spvlad</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">diagrams</span><span class=\"p\">)</span>\n</pre>\n<h2>TODO</h2>\n<ul>\n<li>[x] Implement options to pass cluster centers as arguments in wPBoW and sPBoW.</li>\n<li>[x] Implement PVLAD</li>\n<li>[x] Implement sPVLAD</li>\n<li>[ ] Implement PFV</li>\n<li>[x] Implement optional weighted subsampling to wPBoW, sPBoW, sPVLAD classes.</li>\n</ul>\n\n          </div>"}, "last_serial": 5657455, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "436d65a727c7fecab72a2b436e4b7213", "sha256": "500bb429a6d858925726bd82ee1e5b75949e612f6ea501ecbef75a9db12705af"}, "downloads": -1, "filename": "perscode-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "436d65a727c7fecab72a2b436e4b7213", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12988, "upload_time": "2019-08-09T19:17:12", "upload_time_iso_8601": "2019-08-09T19:17:12.589978Z", "url": "https://files.pythonhosted.org/packages/e3/20/68a49e23d77ce74b4f88272ef63db0247af7e4d7a9e30b5f74518a7287f8/perscode-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c22bf97f2532c31fb81025e5d30d9240", "sha256": "c03380257b2cb0d5af0954f9b94ca49cc18d417b4d73516fa0ba6ef60e8b8374"}, "downloads": -1, "filename": "perscode-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c22bf97f2532c31fb81025e5d30d9240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6645, "upload_time": "2019-08-09T19:17:14", "upload_time_iso_8601": "2019-08-09T19:17:14.799630Z", "url": "https://files.pythonhosted.org/packages/72/60/cd01dff7f7eaab84afd5fd17998bba609c2bd683639b54154b8f2bf78c8e/perscode-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "436d65a727c7fecab72a2b436e4b7213", "sha256": "500bb429a6d858925726bd82ee1e5b75949e612f6ea501ecbef75a9db12705af"}, "downloads": -1, "filename": "perscode-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "436d65a727c7fecab72a2b436e4b7213", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12988, "upload_time": "2019-08-09T19:17:12", "upload_time_iso_8601": "2019-08-09T19:17:12.589978Z", "url": "https://files.pythonhosted.org/packages/e3/20/68a49e23d77ce74b4f88272ef63db0247af7e4d7a9e30b5f74518a7287f8/perscode-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c22bf97f2532c31fb81025e5d30d9240", "sha256": "c03380257b2cb0d5af0954f9b94ca49cc18d417b4d73516fa0ba6ef60e8b8374"}, "downloads": -1, "filename": "perscode-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c22bf97f2532c31fb81025e5d30d9240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6645, "upload_time": "2019-08-09T19:17:14", "upload_time_iso_8601": "2019-08-09T19:17:14.799630Z", "url": "https://files.pythonhosted.org/packages/72/60/cd01dff7f7eaab84afd5fd17998bba609c2bd683639b54154b8f2bf78c8e/perscode-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:14 2020"}