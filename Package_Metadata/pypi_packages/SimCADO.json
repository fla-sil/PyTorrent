{"info": {"author": "Kieran Leschinski, Oliver Czoske, Miguel Verdugo", "author_email": "kieran.leschinski@unive.ac.at, oliver.czoske@univie.ac.at, miguel.verdugo@univie.ac.at", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Astronomy"], "description": "# SimCADO - the instrument data simulator for MICADO\n\n[![Documentation Status](https://readthedocs.org/projects/simcado/badge/?version=latest)](https://simcado.readthedocs.io/en/latest/?badge=latest)\n[![Testing Status](https://travis-ci.org/astronomyk/SimCADO.svg?branch=master)](https://travis-ci.org/astronomyk/SimCADO.svg?branch=master)\n\n\nDocumentation for SimCADO can be found here:\n\n[https://readthedocs.org/projects/simcado/](https://readthedocs.org/projects/simcado/)\n\n## SimCADO in a nutshell\nSimCADO is a python package designed to simulate the effects of the Atmosphere, E-ELT, and MICADO instrument on incoming light. The current version (v0.2) can simulate the MICADO imaging modi (4mas and 1.5mas per pixel in the wavelength range 0.7\u00b5m to 2.5\u00b5m).\n\n### Reference Material\n\n* The inner workings of SimCADO are described in detail in [Leschinski et al. (2016)](https://arxiv.org/pdf/1609.01480v1.pdf)\n\n* The current status of MICADO is described in [Davies et al. (2016)](https://arxiv.org/pdf/1607.01954.pdf)\n\n\n## Downloading and Installing\nFor more information, see the the documentation\n\n**SimCADO has only been tested in Python 3.x**. \n\nIt is highly recommended to use Python 3, however the basics of generating images will still work in Python 2.7. We cannot guarantee this though. See the [Features](Features.md) page for more info on which functions with which Python version.\n\nThe quick way:\n\n    $ pip install simcado\n\nThe **first time** in python \n\n    >>> import simcado\n    >>> simcado.get_extras()\n    >>>\n    >>> # !! Only works in Python 3 - See Downloads section\n    >>> simcado.install_noise_cube()\n\n### Keeping SimCADO updated\n\nAs MICADO developes, the data files that SimCADO uses will also be updated. Therefore before you do any major work with SimCADO we *HIGHLY* recommend calling:\n\n    >>> simcado.get_extras()\n\n\n## Running a simulation in 3 lines\n\n**the keyword OBS_EXPTIME has been replaced by OBS_DIT in the latest version of SimCADO**\n\nThe easiest way to run a simulation is to create, or load, a Source object and then call the `.run()` command. If you specify a filename, the resulting image will be output to a FITS file under that name. If you do not specify a filename, the output will be returned to the console/notebook as an `astropy.io.fits.HDUList` object.\n\nTo begin, we will import the simcado module (assuming it is already installed).\n\n    >>> import simcado\n\nAt the very least, we need to create a `Source` object which contains both spatial and spectral information on our object of interest. Here we use the built-in command `.source.source_1E4_Msun_cluster()` to create a `Source`-object for a 10000-Msun stellar cluster. (See [Creating Sources](examples/Source.md) for more information).\n\n    >>> src = simcado.source.source_1E4_Msun_cluster()\n\nWe now pass the `source` object through SimCADO. This is as easy as calling `.run()`. If we specify a `filename`, SimCADO will write the output to disk in the form of a FITS file. If no `filename` is given, then SimCADO returns an `astropy.io.fits` object to the console/notebook.\n\n    >>> simcado.run(src, filename=\"my_first_sim.fits\")\n\n### Changing simulation parameters\n\nThe `sim.run()` also takes any [configuration keywords](Keywords.md) as parameters for running the simulation. For example, the default exposure time for the simulation is 60 seconds, however this can be increased of decreased by using the keyword `OBS_DIT` (and/or combining it with `OBS_NDIT`). A stacked 6x 10 minute observation sequence would look like:\n\n    >>> simcado.run(src, filename=\"my_first_sim.fits\", OBS_DIT=600, OBS_NDIT=6)\n\nThat's it. Of course SimCADO can also go in the other direction, providing many more levels of complexity, but for that the reader is directed to the examples pages and/or the [API](API/_build/index.html) documentation\n\n### SimCADO building blocks\nFor a brief explanation of how SimCADO works and which classes are relevant, please see either the [Getting Started](GettingStarted.md) or [SimCADO in depth](deep_stuff/SimCADO.md) section.\n\n## Bugs and Issues\n\nWe freely admit that there may still be several bugs that we have not found. If you come across an buggy part of SimCADO, *please please* tell us. We can't make SimCADO better if we don't know about things.\n\nThe preferable option is to open an issue on our Github page: [astronomyk/SimCADO/issues](https://github.com/astronomyk/SimCADO/issues), or you can contact either one of us directly.\n\nPlease always include the output of\n\n    >>> simcado.bug_report()\n\n\n## Contact\n\nFor questions and complaints alike, please contact the authors:\n\n* [kieran.leschinski@univie.ac.at]()\n* [oliver.czoske@univie.ac.at]()\n* [miguel.verdugo@univie.ac.at]()\n\n**Developers (Vienna):** Kieran Leschinski, Oliver Czoske, Miguel Verdugo\n\n**Data Flow Team Leader (Gronigen):** Gijs Verdoes Kleijn\n\n**MICADO home office (MPE):** http://www.mpe.mpg.de/ir/micado\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://simcado.readthedocs.io/en/latest/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "SimCADO", "package_url": "https://pypi.org/project/SimCADO/", "platform": "", "project_url": "https://pypi.org/project/SimCADO/", "project_urls": {"Homepage": "https://simcado.readthedocs.io/en/latest/"}, "release_url": "https://pypi.org/project/SimCADO/0.7.dev1/", "requires_dist": ["numpy (>1.10.4)", "scipy (>0.17)", "astropy (>1.1.2)", "wget (>3.0)", "requests (>2.0)", "synphot (>0.1)", "matplotlib (>1.5.0)", "poppy (>0.4)", "pyyaml"], "requires_python": "", "summary": "SimCADO: The MICADO Instrument simulator", "version": "0.7.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SimCADO - the instrument data simulator for MICADO</h1>\n<p><a href=\"https://simcado.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d2581ffbf5b598e54c3e2a403ce731bd99c0e8b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73696d6361646f2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/astronomyk/SimCADO.svg?branch=master\" rel=\"nofollow\"><img alt=\"Testing Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef2877858611edf7b3056fffa83550f3be4852e5/68747470733a2f2f7472617669732d63692e6f72672f617374726f6e6f6d796b2f53696d4341444f2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Documentation for SimCADO can be found here:</p>\n<p><a href=\"https://readthedocs.org/projects/simcado/\" rel=\"nofollow\">https://readthedocs.org/projects/simcado/</a></p>\n<h2>SimCADO in a nutshell</h2>\n<p>SimCADO is a python package designed to simulate the effects of the Atmosphere, E-ELT, and MICADO instrument on incoming light. The current version (v0.2) can simulate the MICADO imaging modi (4mas and 1.5mas per pixel in the wavelength range 0.7\u00b5m to 2.5\u00b5m).</p>\n<h3>Reference Material</h3>\n<ul>\n<li>\n<p>The inner workings of SimCADO are described in detail in <a href=\"https://arxiv.org/pdf/1609.01480v1.pdf\" rel=\"nofollow\">Leschinski et al. (2016)</a></p>\n</li>\n<li>\n<p>The current status of MICADO is described in <a href=\"https://arxiv.org/pdf/1607.01954.pdf\" rel=\"nofollow\">Davies et al. (2016)</a></p>\n</li>\n</ul>\n<h2>Downloading and Installing</h2>\n<p>For more information, see the the documentation</p>\n<p><strong>SimCADO has only been tested in Python 3.x</strong>.</p>\n<p>It is highly recommended to use Python 3, however the basics of generating images will still work in Python 2.7. We cannot guarantee this though. See the <a href=\"Features.md\" rel=\"nofollow\">Features</a> page for more info on which functions with which Python version.</p>\n<p>The quick way:</p>\n<pre><code>$ pip install simcado\n</code></pre>\n<p>The <strong>first time</strong> in python</p>\n<pre><code>&gt;&gt;&gt; import simcado\n&gt;&gt;&gt; simcado.get_extras()\n&gt;&gt;&gt;\n&gt;&gt;&gt; # !! Only works in Python 3 - See Downloads section\n&gt;&gt;&gt; simcado.install_noise_cube()\n</code></pre>\n<h3>Keeping SimCADO updated</h3>\n<p>As MICADO developes, the data files that SimCADO uses will also be updated. Therefore before you do any major work with SimCADO we <em>HIGHLY</em> recommend calling:</p>\n<pre><code>&gt;&gt;&gt; simcado.get_extras()\n</code></pre>\n<h2>Running a simulation in 3 lines</h2>\n<p><strong>the keyword OBS_EXPTIME has been replaced by OBS_DIT in the latest version of SimCADO</strong></p>\n<p>The easiest way to run a simulation is to create, or load, a Source object and then call the <code>.run()</code> command. If you specify a filename, the resulting image will be output to a FITS file under that name. If you do not specify a filename, the output will be returned to the console/notebook as an <code>astropy.io.fits.HDUList</code> object.</p>\n<p>To begin, we will import the simcado module (assuming it is already installed).</p>\n<pre><code>&gt;&gt;&gt; import simcado\n</code></pre>\n<p>At the very least, we need to create a <code>Source</code> object which contains both spatial and spectral information on our object of interest. Here we use the built-in command <code>.source.source_1E4_Msun_cluster()</code> to create a <code>Source</code>-object for a 10000-Msun stellar cluster. (See <a href=\"examples/Source.md\" rel=\"nofollow\">Creating Sources</a> for more information).</p>\n<pre><code>&gt;&gt;&gt; src = simcado.source.source_1E4_Msun_cluster()\n</code></pre>\n<p>We now pass the <code>source</code> object through SimCADO. This is as easy as calling <code>.run()</code>. If we specify a <code>filename</code>, SimCADO will write the output to disk in the form of a FITS file. If no <code>filename</code> is given, then SimCADO returns an <code>astropy.io.fits</code> object to the console/notebook.</p>\n<pre><code>&gt;&gt;&gt; simcado.run(src, filename=\"my_first_sim.fits\")\n</code></pre>\n<h3>Changing simulation parameters</h3>\n<p>The <code>sim.run()</code> also takes any <a href=\"Keywords.md\" rel=\"nofollow\">configuration keywords</a> as parameters for running the simulation. For example, the default exposure time for the simulation is 60 seconds, however this can be increased of decreased by using the keyword <code>OBS_DIT</code> (and/or combining it with <code>OBS_NDIT</code>). A stacked 6x 10 minute observation sequence would look like:</p>\n<pre><code>&gt;&gt;&gt; simcado.run(src, filename=\"my_first_sim.fits\", OBS_DIT=600, OBS_NDIT=6)\n</code></pre>\n<p>That's it. Of course SimCADO can also go in the other direction, providing many more levels of complexity, but for that the reader is directed to the examples pages and/or the <a href=\"API/_build/index.html\" rel=\"nofollow\">API</a> documentation</p>\n<h3>SimCADO building blocks</h3>\n<p>For a brief explanation of how SimCADO works and which classes are relevant, please see either the <a href=\"GettingStarted.md\" rel=\"nofollow\">Getting Started</a> or <a href=\"deep_stuff/SimCADO.md\" rel=\"nofollow\">SimCADO in depth</a> section.</p>\n<h2>Bugs and Issues</h2>\n<p>We freely admit that there may still be several bugs that we have not found. If you come across an buggy part of SimCADO, <em>please please</em> tell us. We can't make SimCADO better if we don't know about things.</p>\n<p>The preferable option is to open an issue on our Github page: <a href=\"https://github.com/astronomyk/SimCADO/issues\" rel=\"nofollow\">astronomyk/SimCADO/issues</a>, or you can contact either one of us directly.</p>\n<p>Please always include the output of</p>\n<pre><code>&gt;&gt;&gt; simcado.bug_report()\n</code></pre>\n<h2>Contact</h2>\n<p>For questions and complaints alike, please contact the authors:</p>\n<ul>\n<li><a href=\"\" rel=\"nofollow\">kieran.leschinski@univie.ac.at</a></li>\n<li><a href=\"\" rel=\"nofollow\">oliver.czoske@univie.ac.at</a></li>\n<li><a href=\"\" rel=\"nofollow\">miguel.verdugo@univie.ac.at</a></li>\n</ul>\n<p><strong>Developers (Vienna):</strong> Kieran Leschinski, Oliver Czoske, Miguel Verdugo</p>\n<p><strong>Data Flow Team Leader (Gronigen):</strong> Gijs Verdoes Kleijn</p>\n<p><strong>MICADO home office (MPE):</strong> <a href=\"http://www.mpe.mpg.de/ir/micado\" rel=\"nofollow\">http://www.mpe.mpg.de/ir/micado</a></p>\n\n          </div>"}, "last_serial": 6094198, "releases": {"0.5.dev2": [{"comment_text": "", "digests": {"md5": "2d01838d298538f7febe661a72a91c11", "sha256": "8c06b40ed8e1122c932315f16c81d1bf32761e07f620728ff8a75ada05265518"}, "downloads": -1, "filename": "SimCADO-0.5.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "2d01838d298538f7febe661a72a91c11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 114971, "upload_time": "2019-03-08T13:56:20", "upload_time_iso_8601": "2019-03-08T13:56:20.368778Z", "url": "https://files.pythonhosted.org/packages/ac/87/49a4536b5d1c3c443483f1a033d01f4e6b8dba6acd00b0cc7aa8d3cb077d/SimCADO-0.5.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56944b305d9865bb96914fb7d7635cf5", "sha256": "2f287244b6bf0e63edc891dd9a42f915de486cde5738d0b3ff59fec48c1f42af"}, "downloads": -1, "filename": "SimCADO-0.5.dev2.tar.gz", "has_sig": false, "md5_digest": "56944b305d9865bb96914fb7d7635cf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111777, "upload_time": "2019-03-08T13:56:21", "upload_time_iso_8601": "2019-03-08T13:56:21.915170Z", "url": "https://files.pythonhosted.org/packages/b4/99/7d17f909aa11c86c0c6e23c34f663d9008533775cd6d51d1b461d026da2f/SimCADO-0.5.dev2.tar.gz", "yanked": false}], "0.5.dev3": [{"comment_text": "", "digests": {"md5": "53c205dc713b19cdbe78df3b2c7d501b", "sha256": "63a603897b8e1317419a41764da826226ca0c38eca919190fac8be3b0c3e8c30"}, "downloads": -1, "filename": "SimCADO-0.5.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "53c205dc713b19cdbe78df3b2c7d501b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 114996, "upload_time": "2019-03-12T15:51:18", "upload_time_iso_8601": "2019-03-12T15:51:18.148970Z", "url": "https://files.pythonhosted.org/packages/cf/d0/2adb4cfbf46e6026e589b48af237d0df97124deff1fa7b908fb5cc91d9b6/SimCADO-0.5.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb7abac15d80229c50b8760fb4fac02d", "sha256": "2c70e0e475c81756095e633f48f7cd92c82999f08785ee19138b252a78ebd083"}, "downloads": -1, "filename": "SimCADO-0.5.dev3.tar.gz", "has_sig": false, "md5_digest": "eb7abac15d80229c50b8760fb4fac02d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111800, "upload_time": "2019-03-12T15:51:20", "upload_time_iso_8601": "2019-03-12T15:51:20.134259Z", "url": "https://files.pythonhosted.org/packages/a6/61/dad611d34d93069061467aa4973ce1e054fd7114ad3c1e19e5bfae814011/SimCADO-0.5.dev3.tar.gz", "yanked": false}], "0.6.dev0": [{"comment_text": "", "digests": {"md5": "fc07720e8e1818e653a82ff866873c3f", "sha256": "b6787e587aee037cc85c49440ed8340750b4395830b073345bf4d514ba230779"}, "downloads": -1, "filename": "SimCADO-0.6.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc07720e8e1818e653a82ff866873c3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 124499, "upload_time": "2019-03-26T09:40:54", "upload_time_iso_8601": "2019-03-26T09:40:54.706613Z", "url": "https://files.pythonhosted.org/packages/0a/30/ac1b82560fb0adf533bf639a259e65c7bb41706ab49a98e76fb32c30d143/SimCADO-0.6.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9099ff13d8a4bfe9b62a0cb5fa318956", "sha256": "0e666c4257b199b59f7c15e99ce7a933fde7b9b294a3f2089f02336c9da6d5f6"}, "downloads": -1, "filename": "SimCADO-0.6.dev0.tar.gz", "has_sig": false, "md5_digest": "9099ff13d8a4bfe9b62a0cb5fa318956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120585, "upload_time": "2019-03-26T09:40:56", "upload_time_iso_8601": "2019-03-26T09:40:56.718556Z", "url": "https://files.pythonhosted.org/packages/6b/6c/09a29bb0d11c026bfc73e54a19891d85a844bab1fc77a2c1b4d0880b8370/SimCADO-0.6.dev0.tar.gz", "yanked": false}], "0.6.dev1": [{"comment_text": "", "digests": {"md5": "8f6fbdb1e29f5089b2a7cf29f92d9075", "sha256": "7e27681aa1602f5c9ee33870c2a36dd0a102cfe472a2c947308c51d03405ed25"}, "downloads": -1, "filename": "SimCADO-0.6.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f6fbdb1e29f5089b2a7cf29f92d9075", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 125673, "upload_time": "2019-04-03T11:08:42", "upload_time_iso_8601": "2019-04-03T11:08:42.338120Z", "url": "https://files.pythonhosted.org/packages/ee/c0/16cfc6ec960d1ec9d8c88ff87e21ea6a3cdca237f6db845cd9accd2c7ac3/SimCADO-0.6.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41b624f61f447758c4362a5e3be6cf58", "sha256": "6e6005cfb9654e246f6de0d2767b71c4cda596b7e3ac41eea9ad5fe498e1b02e"}, "downloads": -1, "filename": "SimCADO-0.6.dev1.tar.gz", "has_sig": false, "md5_digest": "41b624f61f447758c4362a5e3be6cf58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117925, "upload_time": "2019-04-03T11:08:44", "upload_time_iso_8601": "2019-04-03T11:08:44.289220Z", "url": "https://files.pythonhosted.org/packages/8b/5b/aaf8cd3d7ffd2b817c7142b66cc1935321341ec0df9c8b1838e6b70fbd99/SimCADO-0.6.dev1.tar.gz", "yanked": false}], "0.6.dev3": [{"comment_text": "", "digests": {"md5": "2095c4d3650a4d90a138f1d34aac310d", "sha256": "833003468bd4671cce6f54bd6fabcbdc4e3e976d401abd4b18e8d6f875a940a5"}, "downloads": -1, "filename": "SimCADO-0.6.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "2095c4d3650a4d90a138f1d34aac310d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 125894, "upload_time": "2019-07-30T14:19:51", "upload_time_iso_8601": "2019-07-30T14:19:51.024154Z", "url": "https://files.pythonhosted.org/packages/48/92/42591e9d77f297f615da648f3470c5256613f33159cb2a48a6934e6e2acd/SimCADO-0.6.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aef199ecfd176394356f5e0a3a3979de", "sha256": "113c8333f1071538989274e7eda2dab6bd5956eafdc4c013bdffb9b57d3ec17a"}, "downloads": -1, "filename": "SimCADO-0.6.dev3.tar.gz", "has_sig": false, "md5_digest": "aef199ecfd176394356f5e0a3a3979de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118019, "upload_time": "2019-07-30T14:19:53", "upload_time_iso_8601": "2019-07-30T14:19:53.001031Z", "url": "https://files.pythonhosted.org/packages/38/9e/6eb3dd4ecd2032923623fc22bf8ce80fb4172d9bdaf7498fed1c76e31bf0/SimCADO-0.6.dev3.tar.gz", "yanked": false}], "0.7.dev0": [{"comment_text": "", "digests": {"md5": "2da7d701351e0767176717c7655e8928", "sha256": "c0dd1beda5363ba31d7617421ab28ebbf920e2fb1bdc9df583dcb2c84d624b67"}, "downloads": -1, "filename": "SimCADO-0.7.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "2da7d701351e0767176717c7655e8928", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 126270, "upload_time": "2019-09-19T14:42:56", "upload_time_iso_8601": "2019-09-19T14:42:56.913358Z", "url": "https://files.pythonhosted.org/packages/49/1d/9e4a3db3e279eece7bd5c7eb164e75011ce72fb57cd6b8f741dd70fab48f/SimCADO-0.7.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e692aaf1a0979c18e5ae1f707c52338", "sha256": "a33adf585010ef3e26f2d475134d83306c9e9224db8997e69bd3341864d660b0"}, "downloads": -1, "filename": "SimCADO-0.7.dev0.tar.gz", "has_sig": false, "md5_digest": "7e692aaf1a0979c18e5ae1f707c52338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118418, "upload_time": "2019-09-19T14:42:59", "upload_time_iso_8601": "2019-09-19T14:42:59.094891Z", "url": "https://files.pythonhosted.org/packages/5c/e7/8fb94b2d77ed8f8f94997fd4e64d8cb4b9634ced05ca5b67ea917380bf45/SimCADO-0.7.dev0.tar.gz", "yanked": false}], "0.7.dev1": [{"comment_text": "", "digests": {"md5": "067ff6c5978b3f9ceaa381c781d1657c", "sha256": "a391f1d399b0116c3c6e5c15e8970cfae3ce2d2945ba9116d37cab69d9b8506b"}, "downloads": -1, "filename": "SimCADO-0.7.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "067ff6c5978b3f9ceaa381c781d1657c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 126372, "upload_time": "2019-11-07T15:47:30", "upload_time_iso_8601": "2019-11-07T15:47:30.196156Z", "url": "https://files.pythonhosted.org/packages/2f/d5/22dfd4e059bf9e7fdf15413fc9d1a99144c1dbaba294fa53c46abedf3acd/SimCADO-0.7.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e83d8f89a2e8c324cc802bb7d84dc94", "sha256": "66e8de19c7248a7679bc5d113431478dd486bdbe7e4380fc1f9680df2b1136fa"}, "downloads": -1, "filename": "SimCADO-0.7.dev1.tar.gz", "has_sig": false, "md5_digest": "5e83d8f89a2e8c324cc802bb7d84dc94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118520, "upload_time": "2019-11-07T15:47:32", "upload_time_iso_8601": "2019-11-07T15:47:32.221844Z", "url": "https://files.pythonhosted.org/packages/47/dd/3b293c1a0556398bc2c57b51290e13b463e739a28198cd200f8d18bbf7dd/SimCADO-0.7.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "067ff6c5978b3f9ceaa381c781d1657c", "sha256": "a391f1d399b0116c3c6e5c15e8970cfae3ce2d2945ba9116d37cab69d9b8506b"}, "downloads": -1, "filename": "SimCADO-0.7.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "067ff6c5978b3f9ceaa381c781d1657c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 126372, "upload_time": "2019-11-07T15:47:30", "upload_time_iso_8601": "2019-11-07T15:47:30.196156Z", "url": "https://files.pythonhosted.org/packages/2f/d5/22dfd4e059bf9e7fdf15413fc9d1a99144c1dbaba294fa53c46abedf3acd/SimCADO-0.7.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e83d8f89a2e8c324cc802bb7d84dc94", "sha256": "66e8de19c7248a7679bc5d113431478dd486bdbe7e4380fc1f9680df2b1136fa"}, "downloads": -1, "filename": "SimCADO-0.7.dev1.tar.gz", "has_sig": false, "md5_digest": "5e83d8f89a2e8c324cc802bb7d84dc94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118520, "upload_time": "2019-11-07T15:47:32", "upload_time_iso_8601": "2019-11-07T15:47:32.221844Z", "url": "https://files.pythonhosted.org/packages/47/dd/3b293c1a0556398bc2c57b51290e13b463e739a28198cd200f8d18bbf7dd/SimCADO-0.7.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:17 2020"}