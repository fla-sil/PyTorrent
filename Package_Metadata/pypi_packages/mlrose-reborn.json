{"info": {"author": "Genevieve Hayes (modifed by Andrew Rollings, forked by Ryan McDermott)", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# mlrose: Machine Learning, Randomized Optimization and SEarch\nmlrose is a Python package for applying some of the most common randomized optimization and search algorithms to a range of different optimization problems, over both discrete- and continuous-valued parameter spaces.\n\n## Project Background\nmlrose was initially developed to support students of Georgia Tech's OMSCS/OMSA offering of CS 7641: Machine Learning.\n\nIt includes implementations of all randomized optimization algorithms taught in this course, as well as functionality to apply these algorithms to integer-string optimization problems, such as N-Queens and the Knapsack problem; continuous-valued optimization problems, such as the neural network weight problem; and tour optimization problems, such as the Travelling Salesperson problem. It also has the flexibility to solve user-defined optimization problems. \n\nAt the time of development, there did not exist a single Python package that collected all of this functionality together in the one location.\n\n## Main Features\n\n#### *Randomized Optimization Algorithms*\n- Implementations of: hill climbing, randomized hill climbing, simulated annealing, genetic algorithm and (discrete) MIMIC;\n- Solve both maximization and minimization problems;\n- Define the algorithm's initial state or start from a random state;\n- Define your own simulated annealing decay schedule or use one of three pre-defined, customizable decay schedules: geometric decay, arithmetic decay or exponential decay.\n\n#### *Problem Types*\n- Solve discrete-value (bit-string and integer-string), continuous-value and tour optimization (travelling salesperson) problems;\n- Define your own fitness function for optimization or use a pre-defined function.\n- Pre-defined fitness functions exist for solving the: One Max, Flip Flop, Four Peaks, Six Peaks, Continuous Peaks, Knapsack, Travelling Salesperson, N-Queens and Max-K Color optimization problems.\n\n#### *Machine Learning Weight Optimization*\n- Optimize the weights of neural networks, linear regression models and logistic regression models using randomized hill climbing, simulated annealing, the genetic algorithm or gradient descent;\n- Supports classification and regression neural networks.\n\n## Installation\nmlrose was written in Python 3 and requires NumPy, SciPy and Scikit-Learn (sklearn).\n\nThe latest version can be installed using `pip`:\n```\npip install -e git+git://github.com/hiive/mlrose#egg=mlrose-hiive\n```\n\n## Documentation\nThe official mlrose documentation can be found [here](https://mlrose.readthedocs.io/). \n\nA Jupyter notebook containing the examples used in the documentation is also available [here](https://github.com/gkhayes/mlrose/blob/master/tutorial_examples.ipynb).\n\n## Licensing, Authors, Acknowledgements\nmlrose was written by Genevieve Hayes and is distributed under the [3-Clause BSD license](https://github.com/gkhayes/mlrose/blob/master/LICENSE). \n\nYou can cite mlrose in research publications and reports as follows:\n* Hayes, G. (2019). ***mlrose: Machine Learning, Randomized Optimization and SEarch package for Python***. https://github.com/gkhayes/mlrose. Accessed: *day month year*.\n\nYou can cite this fork in a similar way, but please be sure to reference the original work.\nThanks to David S. Park for the MIMIC enhancements (from https://github.com/parkds/mlrose).\n\n\nBibTeX entry:\n```\n@misc{Hayes19,\n author = {Hayes, G},\n title \t= {{mlrose: Machine Learning, Randomized Optimization and SEarch package for Python}},\n year \t= 2019,\n howpublished = {\\url{https://github.com/gkhayes/mlrose}},\n note \t= {Accessed: day month year}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ryanmcdermott/mlrose", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mlrose-reborn", "package_url": "https://pypi.org/project/mlrose-reborn/", "platform": "", "project_url": "https://pypi.org/project/mlrose-reborn/", "project_urls": {"Homepage": "https://github.com/ryanmcdermott/mlrose"}, "release_url": "https://pypi.org/project/mlrose-reborn/2.0.0/", "requires_dist": null, "requires_python": ">=3", "summary": "mlrose_reborn: Machine Learning, Randomized Optimization and Search", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mlrose: Machine Learning, Randomized Optimization and SEarch</h1>\n<p>mlrose is a Python package for applying some of the most common randomized optimization and search algorithms to a range of different optimization problems, over both discrete- and continuous-valued parameter spaces.</p>\n<h2>Project Background</h2>\n<p>mlrose was initially developed to support students of Georgia Tech's OMSCS/OMSA offering of CS 7641: Machine Learning.</p>\n<p>It includes implementations of all randomized optimization algorithms taught in this course, as well as functionality to apply these algorithms to integer-string optimization problems, such as N-Queens and the Knapsack problem; continuous-valued optimization problems, such as the neural network weight problem; and tour optimization problems, such as the Travelling Salesperson problem. It also has the flexibility to solve user-defined optimization problems.</p>\n<p>At the time of development, there did not exist a single Python package that collected all of this functionality together in the one location.</p>\n<h2>Main Features</h2>\n<h4><em>Randomized Optimization Algorithms</em></h4>\n<ul>\n<li>Implementations of: hill climbing, randomized hill climbing, simulated annealing, genetic algorithm and (discrete) MIMIC;</li>\n<li>Solve both maximization and minimization problems;</li>\n<li>Define the algorithm's initial state or start from a random state;</li>\n<li>Define your own simulated annealing decay schedule or use one of three pre-defined, customizable decay schedules: geometric decay, arithmetic decay or exponential decay.</li>\n</ul>\n<h4><em>Problem Types</em></h4>\n<ul>\n<li>Solve discrete-value (bit-string and integer-string), continuous-value and tour optimization (travelling salesperson) problems;</li>\n<li>Define your own fitness function for optimization or use a pre-defined function.</li>\n<li>Pre-defined fitness functions exist for solving the: One Max, Flip Flop, Four Peaks, Six Peaks, Continuous Peaks, Knapsack, Travelling Salesperson, N-Queens and Max-K Color optimization problems.</li>\n</ul>\n<h4><em>Machine Learning Weight Optimization</em></h4>\n<ul>\n<li>Optimize the weights of neural networks, linear regression models and logistic regression models using randomized hill climbing, simulated annealing, the genetic algorithm or gradient descent;</li>\n<li>Supports classification and regression neural networks.</li>\n</ul>\n<h2>Installation</h2>\n<p>mlrose was written in Python 3 and requires NumPy, SciPy and Scikit-Learn (sklearn).</p>\n<p>The latest version can be installed using <code>pip</code>:</p>\n<pre><code>pip install -e git+git://github.com/hiive/mlrose#egg=mlrose-hiive\n</code></pre>\n<h2>Documentation</h2>\n<p>The official mlrose documentation can be found <a href=\"https://mlrose.readthedocs.io/\" rel=\"nofollow\">here</a>.</p>\n<p>A Jupyter notebook containing the examples used in the documentation is also available <a href=\"https://github.com/gkhayes/mlrose/blob/master/tutorial_examples.ipynb\" rel=\"nofollow\">here</a>.</p>\n<h2>Licensing, Authors, Acknowledgements</h2>\n<p>mlrose was written by Genevieve Hayes and is distributed under the <a href=\"https://github.com/gkhayes/mlrose/blob/master/LICENSE\" rel=\"nofollow\">3-Clause BSD license</a>.</p>\n<p>You can cite mlrose in research publications and reports as follows:</p>\n<ul>\n<li>Hayes, G. (2019). <em><strong>mlrose: Machine Learning, Randomized Optimization and SEarch package for Python</strong></em>. <a href=\"https://github.com/gkhayes/mlrose\" rel=\"nofollow\">https://github.com/gkhayes/mlrose</a>. Accessed: <em>day month year</em>.</li>\n</ul>\n<p>You can cite this fork in a similar way, but please be sure to reference the original work.\nThanks to David S. Park for the MIMIC enhancements (from <a href=\"https://github.com/parkds/mlrose\" rel=\"nofollow\">https://github.com/parkds/mlrose</a>).</p>\n<p>BibTeX entry:</p>\n<pre><code>@misc{Hayes19,\n author = {Hayes, G},\n title \t= {{mlrose: Machine Learning, Randomized Optimization and SEarch package for Python}},\n year \t= 2019,\n howpublished = {\\url{https://github.com/gkhayes/mlrose}},\n note \t= {Accessed: day month year}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6638067, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "ba77e665c7017b810c72feaeb3a23b29", "sha256": "91d324f9d2f6e037cd5b2ec98cc119f14895e26e8870f64c494e1e4e6425c1b3"}, "downloads": -1, "filename": "mlrose_reborn-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ba77e665c7017b810c72feaeb3a23b29", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 47524, "upload_time": "2020-02-15T23:27:03", "upload_time_iso_8601": "2020-02-15T23:27:03.557785Z", "url": "https://files.pythonhosted.org/packages/96/af/4ec1517bdea7e0fefc3b4f64c8c5763a5f9ca617e27088c9d4d7a4b1989d/mlrose_reborn-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba77e665c7017b810c72feaeb3a23b29", "sha256": "91d324f9d2f6e037cd5b2ec98cc119f14895e26e8870f64c494e1e4e6425c1b3"}, "downloads": -1, "filename": "mlrose_reborn-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ba77e665c7017b810c72feaeb3a23b29", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 47524, "upload_time": "2020-02-15T23:27:03", "upload_time_iso_8601": "2020-02-15T23:27:03.557785Z", "url": "https://files.pythonhosted.org/packages/96/af/4ec1517bdea7e0fefc3b4f64c8c5763a5f9ca617e27088c9d4d7a4b1989d/mlrose_reborn-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:23 2020"}