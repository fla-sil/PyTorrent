{"info": {"author": "Colin Nolan", "author_email": "colin.nolan@sanger.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "|Build Status| |codecov.io| |Documentation Status| # Use In Test *I\ndon't care how it's done, I just want to use it in my tests!*\n\n`Less blurb, more documentation - link to\nReadTheDocs <https://useintest.readthedocs.io>`__.\n\nKey Features\n------------\n\n-  Simple way of running services (e.g. Mongo, CouchDB, iRODS) and using\n   executables (e.g. Samtools, icommands).\n-  No knowledge of containers required.\n-  No knowledge of service/executables required (how to install it, when\n   it's ready to use, etc.).\n-  Does not require the installation of anything on your local machine,\n   aside from Docker.\n-  Makes it simple to test against multiple versions of the same service\n   or set of executables.\n-  Easy to achieve test isolation.\n\nModules\n-------\n\nOut of the box support for:\n\n-  Mongo\n-  CouchDB\n-  iRODS\n-  Samtools\n-  GitLab\n-  Gogs\n-  Bissell\n-  Consul\n\nWhy Use This Library?\n---------------------\n\nSoftware no longer works in isolation; with the trend towards\nmicroservices over monoliths, modern day applications rely on numerous\nexternal services for both data and computation.\n\nMocks can be a quick way to test against something that (should) behave\nlike the external service that your application uses. However, unless a\nwell respected mocking framework exists, the mock you'll end up with\nwill probably make the same bad assumptions about the behaviour of\nservice as your faulty code does!\n\nTesting with the \"real thing\" or a shared dev mirror of it is probably\nnot a good idea during development, particularly if the services that\nyou're using hold state. You want to be able to run the tests in\nparallel, have repeatability and have availability, be it for when\nyou're offline or for collaborators outside of your organisation. You\nalso want to be able to wipe the slate clean and start again if\nsomething goes terribly wrong! It is unlikely you will be able to do\nthis in any kind of shared environment.\n\nThis library offers a way to just start up services and then throw them\naway after each test case, with no mess left over on your machine. It\ngives complete test isolation along with confidence that you're testing\nwith services similar to those used in production.\n\nQuick Examples\n--------------\n\nStart up a containerised instance of Mongo:\n\n.. code:: python\n\n    from useintest.modules.mongo import MongoServiceController\n\n    # Starts a containerised version of Mongo\n    controller = MongoServiceController()              \n    with controller.start_service() as service:      \n        run_my_tests(my_application, service.host, service.port)\n\nUse samtools in a container from the host machine via \"proxy\nexecutables\":\n\n.. code:: python\n\n    from useintest.modules.samtools import SamtoolsExecutablesController\n\n    controller = SamtoolsExecutablesController()  \n    executables_directory = controller.write_executables()\n    # In the case of Samtools, there will be one executable in `executables_directory` named \"samtools\"\n    run_my_tests(my_application, executables_directory)\n    controller.tear_down()\n\nDocumentation\n-------------\n\nFor more details, including information on how to setup and use the\nlibrary, please `view the documentation on\nReadTheDocs <https://useintest.readthedocs.io>`__ or read it from\n``/docs``.\n\n.. |Build Status| image:: https://travis-ci.org/wtsi-hgi/useintest.svg\n   :target: https://travis-ci.org/wtsi-hgi/useintest\n.. |codecov.io| image:: https://codecov.io/gh/wtsi-hgi/useintest/graph/badge.svg\n   :target: https://codecov.io/github/wtsi-hgi/useintest\n.. |Documentation Status| image:: https://readthedocs.org/projects/useintest/badge/?version=latest\n   :target: http://useintest.readthedocs.io/en/latest/?badge=latest\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wtsi-hgi/useintest", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "useintest", "package_url": "https://pypi.org/project/useintest/", "platform": "", "project_url": "https://pypi.org/project/useintest/", "project_urls": {"Homepage": "https://github.com/wtsi-hgi/useintest"}, "release_url": "https://pypi.org/project/useintest/5.0.0/", "requires_dist": null, "requires_python": "", "summary": "I don't care how it's done, I just want to use it in my tests!", "version": "5.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/wtsi-hgi/useintest\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec207d236bc84359c63b342a9873d7a13f1d956d/68747470733a2f2f7472617669732d63692e6f72672f777473692d6867692f757365696e746573742e737667\"></a> <a href=\"https://codecov.io/github/wtsi-hgi/useintest\" rel=\"nofollow\"><img alt=\"codecov.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea98925f89f5645d4d88930cc62ff789cc32fd8d/68747470733a2f2f636f6465636f762e696f2f67682f777473692d6867692f757365696e746573742f67726170682f62616467652e737667\"></a> <a href=\"http://useintest.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75faecec46c01f4a5a0e70ba6d8e3fa5a4613f1f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f757365696e746573742f62616467652f3f76657273696f6e3d6c6174657374\"></a> # Use In Test <em>I\ndon\u2019t care how it\u2019s done, I just want to use it in my tests!</em></p>\n<p><a href=\"https://useintest.readthedocs.io\" rel=\"nofollow\">Less blurb, more documentation - link to\nReadTheDocs</a>.</p>\n<div id=\"key-features\">\n<h2>Key Features</h2>\n<ul>\n<li>Simple way of running services (e.g. Mongo, CouchDB, iRODS) and using\nexecutables (e.g. Samtools, icommands).</li>\n<li>No knowledge of containers required.</li>\n<li>No knowledge of service/executables required (how to install it, when\nit\u2019s ready to use, etc.).</li>\n<li>Does not require the installation of anything on your local machine,\naside from Docker.</li>\n<li>Makes it simple to test against multiple versions of the same service\nor set of executables.</li>\n<li>Easy to achieve test isolation.</li>\n</ul>\n</div>\n<div id=\"modules\">\n<h2>Modules</h2>\n<p>Out of the box support for:</p>\n<ul>\n<li>Mongo</li>\n<li>CouchDB</li>\n<li>iRODS</li>\n<li>Samtools</li>\n<li>GitLab</li>\n<li>Gogs</li>\n<li>Bissell</li>\n<li>Consul</li>\n</ul>\n</div>\n<div id=\"why-use-this-library\">\n<h2>Why Use This Library?</h2>\n<p>Software no longer works in isolation; with the trend towards\nmicroservices over monoliths, modern day applications rely on numerous\nexternal services for both data and computation.</p>\n<p>Mocks can be a quick way to test against something that (should) behave\nlike the external service that your application uses. However, unless a\nwell respected mocking framework exists, the mock you\u2019ll end up with\nwill probably make the same bad assumptions about the behaviour of\nservice as your faulty code does!</p>\n<p>Testing with the \u201creal thing\u201d or a shared dev mirror of it is probably\nnot a good idea during development, particularly if the services that\nyou\u2019re using hold state. You want to be able to run the tests in\nparallel, have repeatability and have availability, be it for when\nyou\u2019re offline or for collaborators outside of your organisation. You\nalso want to be able to wipe the slate clean and start again if\nsomething goes terribly wrong! It is unlikely you will be able to do\nthis in any kind of shared environment.</p>\n<p>This library offers a way to just start up services and then throw them\naway after each test case, with no mess left over on your machine. It\ngives complete test isolation along with confidence that you\u2019re testing\nwith services similar to those used in production.</p>\n</div>\n<div id=\"quick-examples\">\n<h2>Quick Examples</h2>\n<p>Start up a containerised instance of Mongo:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">useintest.modules.mongo</span> <span class=\"kn\">import</span> <span class=\"n\">MongoServiceController</span>\n\n<span class=\"c1\"># Starts a containerised version of Mongo</span>\n<span class=\"n\">controller</span> <span class=\"o\">=</span> <span class=\"n\">MongoServiceController</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"n\">start_service</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">service</span><span class=\"p\">:</span>\n    <span class=\"n\">run_my_tests</span><span class=\"p\">(</span><span class=\"n\">my_application</span><span class=\"p\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n</pre>\n<p>Use samtools in a container from the host machine via \u201cproxy\nexecutables\u201d:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">useintest.modules.samtools</span> <span class=\"kn\">import</span> <span class=\"n\">SamtoolsExecutablesController</span>\n\n<span class=\"n\">controller</span> <span class=\"o\">=</span> <span class=\"n\">SamtoolsExecutablesController</span><span class=\"p\">()</span>\n<span class=\"n\">executables_directory</span> <span class=\"o\">=</span> <span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"n\">write_executables</span><span class=\"p\">()</span>\n<span class=\"c1\"># In the case of Samtools, there will be one executable in `executables_directory` named \"samtools\"</span>\n<span class=\"n\">run_my_tests</span><span class=\"p\">(</span><span class=\"n\">my_application</span><span class=\"p\">,</span> <span class=\"n\">executables_directory</span><span class=\"p\">)</span>\n<span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"n\">tear_down</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For more details, including information on how to setup and use the\nlibrary, please <a href=\"https://useintest.readthedocs.io\" rel=\"nofollow\">view the documentation on\nReadTheDocs</a> or read it from\n<tt>/docs</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 3545979, "releases": {"3.2.0": [{"comment_text": "", "digests": {"md5": "dcc9cba856bdff983f7ed9e13e5ecee2", "sha256": "753f5abddf149e5f14915f38cb481baaaa197ac4d6643b9dc7c1f4c0751dea54"}, "downloads": -1, "filename": "useintest-3.2.0.tar.gz", "has_sig": false, "md5_digest": "dcc9cba856bdff983f7ed9e13e5ecee2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32011, "upload_time": "2017-11-20T14:38:56", "upload_time_iso_8601": "2017-11-20T14:38:56.851722Z", "url": "https://files.pythonhosted.org/packages/b4/03/e5f704a44c19b5c0fb820b99b2aba68585be857ce986eb89711b59796123/useintest-3.2.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "9630b93462a0146c2d4b097d68a5432e", "sha256": "0685eeefa04493d1b7d34667a45db7be6bc317ada6bc568581fc16bb6eac4bb5"}, "downloads": -1, "filename": "useintest-4.0.0.tar.gz", "has_sig": false, "md5_digest": "9630b93462a0146c2d4b097d68a5432e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32923, "upload_time": "2017-11-22T16:34:21", "upload_time_iso_8601": "2017-11-22T16:34:21.559643Z", "url": "https://files.pythonhosted.org/packages/0a/3b/cc0805db14ca330238bda8f0f1883d23483e49df9963f31425e90187957d/useintest-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "5cad91308be3429113ee3348bfa1a9bd", "sha256": "707ac5770996f6d4536215c2d6dcc30d5d44a8b77153d04a40df130dd71af580"}, "downloads": -1, "filename": "useintest-4.0.1.tar.gz", "has_sig": false, "md5_digest": "5cad91308be3429113ee3348bfa1a9bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33252, "upload_time": "2017-12-05T16:49:48", "upload_time_iso_8601": "2017-12-05T16:49:48.590408Z", "url": "https://files.pythonhosted.org/packages/d7/9e/06b311f2217aa627f494db1a0bbcab161235c92ddbdcf84793e1de911c46/useintest-4.0.1.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "769065c2382614571d38f209d99b3917", "sha256": "9e44e326a56b647ea887dd83adeb252dd68952e877513691f247e0145e461e28"}, "downloads": -1, "filename": "useintest-4.1.0.tar.gz", "has_sig": false, "md5_digest": "769065c2382614571d38f209d99b3917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33684, "upload_time": "2018-01-19T09:26:33", "upload_time_iso_8601": "2018-01-19T09:26:33.091359Z", "url": "https://files.pythonhosted.org/packages/11/1e/64cbb06680f2a1c23536f6c7022263de15e7d1073a39425f945748d4b5c9/useintest-4.1.0.tar.gz", "yanked": false}], "5.0.0": [{"comment_text": "", "digests": {"md5": "e7b7eb556591aba23a5f40840e898c65", "sha256": "8b67a565ac2a89014b188f56b45191574101bf49c4b4e9cc16f49cef0e66fbe5"}, "downloads": -1, "filename": "useintest-5.0.0.tar.gz", "has_sig": false, "md5_digest": "e7b7eb556591aba23a5f40840e898c65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33855, "upload_time": "2018-02-02T15:43:52", "upload_time_iso_8601": "2018-02-02T15:43:52.546530Z", "url": "https://files.pythonhosted.org/packages/44/ab/ad38d2d1b842f58b623577f965b82eb98dfd759819bb8fd936cf4cdd8481/useintest-5.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7b7eb556591aba23a5f40840e898c65", "sha256": "8b67a565ac2a89014b188f56b45191574101bf49c4b4e9cc16f49cef0e66fbe5"}, "downloads": -1, "filename": "useintest-5.0.0.tar.gz", "has_sig": false, "md5_digest": "e7b7eb556591aba23a5f40840e898c65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33855, "upload_time": "2018-02-02T15:43:52", "upload_time_iso_8601": "2018-02-02T15:43:52.546530Z", "url": "https://files.pythonhosted.org/packages/44/ab/ad38d2d1b842f58b623577f965b82eb98dfd759819bb8fd936cf4cdd8481/useintest-5.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:10 2020"}