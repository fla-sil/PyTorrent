{"info": {"author": "S.P. Mohanty", "author_email": "mohanty@aicrowd.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Flatland\n========\n\n![Test Running](https://gitlab.aicrowd.com/flatland/flatland/badges/master/pipeline.svg)![Test Coverage](https://gitlab.aicrowd.com/flatland/flatland/badges/master/coverage.svg \"asdff\")\n\n\n![Flatland](https://i.imgur.com/0rnbSLY.gif)\n\n## About Flatland\n\nFlatland is a opensource toolkit for developing and comparing Multi Agent Reinforcement Learning algorithms in little (or ridiculously large !) gridworlds.\n\nThe base environment is a two-dimensional grid in which many agents can be placed, and each agent must solve one or more navigational tasks in the grid world. More details about the environment and the problem statement can be found in the [official docs](http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/).\n\nThis library was developed by [SBB](<https://www.sbb.ch/en/>), [AIcrowd](https://www.aicrowd.com/) and numerous contributors and AIcrowd research fellows from the AIcrowd community. \n\nThis library was developed specifically for the [Flatland Challenge](https://www.aicrowd.com/challenges/flatland-challenge) in which we strongly encourage you to take part in. \n\n**NOTE This document is best viewed in the official documentation site at** [Flatland-RL Docs](http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/)\n\n\n## Installation\n### Installation Prerequistes\n\n* Install [Anaconda](https://www.anaconda.com/distribution/) by following the instructions [here](https://www.anaconda.com/distribution/).\n* Create a new conda environment:\n\n```console\n$ conda create python=3.6 --name flatland-rl\n$ conda activate flatland-rl\n```\n\n* Install the necessary dependencies\n\n```console\n$ conda install -c conda-forge cairosvg pycairo\n$ conda install -c anaconda tk  \n```\n\n### Install Flatland\n#### Stable Release\n\nTo install flatland, run this command in your terminal:\n\n```console\n$ pip install flatland-rl\n```\n\nThis is the preferred method to install flatland, as it will always install the most recent stable release.\n\nIf you don't have `pip`_ installed, this `Python installation guide`_ can guide\nyou through the process.\n\n.. _pip: https://pip.pypa.io\n.. _Python installation guide: http://docs.python-guide.org/en/latest/starting/installation/\n\n\n#### From sources\n\nThe sources for flatland can be downloaded from [gitlab](https://gitlab.aicrowd.com/flatland/flatland)\n\nYou can clone the public repository:\n```console\n$ git clone git@gitlab.aicrowd.com:flatland/flatland.git\n```\n\nOnce you have a copy of the source, you can install it with:\n\n```console\n$ python setup.py install\n```\n\n### Test installation\n\nTest that the installation works\n\n```console\n$ flatland-demo\n```\n\n\n\n### Jupyter Canvas Widget\nIf you work with jupyter notebook you need to install the Jupyer Canvas Widget. To install the Jupyter Canvas Widget read also\n[https://github.com/Who8MyLunch/Jupyter_Canvas_Widget#installation]([https://github.com/Who8MyLunch/Jupyter_Canvas_Widget#installation)\n\n## Basic Usage\n\nBasic usage of the RailEnv environment used by the Flatland Challenge (also see [Example](https://gitlab.aicrowd.com/flatland/flatland/blob/master/examples/introduction_flatland_2_1.py))\n\n\n```python\nfrom flatland.envs.observations import GlobalObsForRailEnv\n# First of all we import the Flatland rail environment\nfrom flatland.envs.rail_env import RailEnv\nfrom flatland.envs.rail_generators import sparse_rail_generator\nfrom flatland.envs.schedule_generators import sparse_schedule_generator\n# We also include a renderer because we want to visualize what is going on in the environment\nfrom flatland.utils.rendertools import RenderTool, AgentRenderVariant\n\nwidth = 100  # With of map\nheight = 100  # Height of map\nnr_trains = 50  # Number of trains that have an assigned task in the env\ncities_in_map = 20  # Number of cities where agents can start or end\nseed = 14  # Random seed\ngrid_distribution_of_cities = False  # Type of city distribution, if False cities are randomly placed\nmax_rails_between_cities = 2  # Max number of tracks allowed between cities. This is number of entry point to a city\nmax_rail_in_cities = 6  # Max number of parallel tracks within a city, representing a realistic trainstation\n\nrail_generator = sparse_rail_generator(max_num_cities=cities_in_map,\n                                       seed=seed,\n                                       grid_mode=grid_distribution_of_cities,\n                                       max_rails_between_cities=max_rails_between_cities,\n                                       max_rails_in_city=max_rail_in_cities,\n                                       )\n\n# The schedule generator can make very basic schedules with a start point, end point and a speed profile for each agent.\n# The speed profiles can be adjusted directly as well as shown later on. We start by introducing a statistical\n# distribution of speed profiles\n\n# Different agent types (trains) with different speeds.\nspeed_ration_map = {1.: 0.25,  # Fast passenger train\n                    1. / 2.: 0.25,  # Fast freight train\n                    1. / 3.: 0.25,  # Slow commuter train\n                    1. / 4.: 0.25}  # Slow freight train\n\n# We can now initiate the schedule generator with the given speed profiles\n\nschedule_generator = sparse_schedule_generator(speed_ration_map)\n\n# We can furthermore pass stochastic data to the RailEnv constructor which will allow for stochastic malfunctions\n# during an episode.\n\nstochastic_data = {'prop_malfunction': 0.3,  # Percentage of defective agents\n                   'malfunction_rate': 30,  # Rate of malfunction occurence\n                   'min_duration': 3,  # Minimal duration of malfunction\n                   'max_duration': 20  # Max duration of malfunction\n                   }\n\n# Custom observation builder without predictor\nobservation_builder = GlobalObsForRailEnv()\n\n# Custom observation builder with predictor, uncomment line below if you want to try this one\n# observation_builder = TreeObsForRailEnv(max_depth=2, predictor=ShortestPathPredictorForRailEnv())\n\n# Construct the enviornment with the given observation, generataors, predictors, and stochastic data\nenv = RailEnv(width=width,\n              height=height,\n              rail_generator=rail_generator,\n              schedule_generator=schedule_generator,\n              number_of_agents=nr_trains,\n              malfunction_generator_and_process_data=malfunction_from_params(stochastic_data),\n              obs_builder_object=observation_builder,\n              remove_agents_at_target=True  # Removes agents at the end of their journey to make space for others\n              )\n\n# Initiate the renderer\nenv_renderer = RenderTool(env, gl=\"PILSVG\",\n                          agent_render_variant=AgentRenderVariant.AGENT_SHOWS_OPTIONS_AND_BOX,\n                          show_debug=False,\n                          screen_height=1080,  # Adjust these parameters to fit your resolution\n                          screen_width=1920)  # Adjust these parameters to fit your resolution\n\n\ndef my_controller():\n    \"\"\"\n    You are supposed to write this controller\n    \"\"\"\n    _action = {}\n    for _idx in range(NUMBER_OF_AGENTS):\n        _action[_idx] = np.random.randint(0, 5)\n    return _action\n\nfor step in range(100):\n\n    _action = my_controller()\n    obs, all_rewards, done, info = env.step(_action)\n    print(\"Rewards: {}, [done={}]\".format( all_rewards, done))\n    env_renderer.render_env(show=True, frames=False, show_observations=False)\n    time.sleep(0.3)\n```\n\nand **ideally** you should see something along the lines of\n\n![Flatland](https://i.imgur.com/Pc9aH4P.gif)\n\nBest of Luck !!\n\n## Communication\n* [Official Documentation](http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/)\n* [Discussion Forum](https://discourse.aicrowd.com/c/flatland-challenge)\n* [Issue Tracker](https://gitlab.aicrowd.com/flatland/flatland/issues/)\n\n\n## Contributions\nPlease follow the [Contribution Guidelines](http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/contributing.html) for more details on how you can successfully contribute to the project. We enthusiastically look forward to your contributions.\n\n## Partners\n<a href=\"https://sbb.ch\" target=\"_blank\"><img src=\"https://i.imgur.com/OSCXtde.png\" alt=\"SBB\"/></a>\n<a href=\"https://www.aicrowd.com\"  target=\"_blank\"><img src=\"https://avatars1.githubusercontent.com/u/44522764?s=200&v=4\" alt=\"AICROWD\"/></a>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.aicrowd.com/flatland/flatland", "keywords": "flatland", "license": "", "maintainer": "", "maintainer_email": "", "name": "flatland-rl", "package_url": "https://pypi.org/project/flatland-rl/", "platform": "", "project_url": "https://pypi.org/project/flatland-rl/", "project_urls": {"Homepage": "https://gitlab.aicrowd.com/flatland/flatland"}, "release_url": "https://pypi.org/project/flatland-rl/2.1.10/", "requires_dist": null, "requires_python": "", "summary": "Multi Agent Reinforcement Learning on Trains", "version": "2.1.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flatland</h1>\n<p><img alt=\"Test Running\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f77fe26ab154037ff5225c1981ad99b957b01a2/68747470733a2f2f6769746c61622e616963726f77642e636f6d2f666c61746c616e642f666c61746c616e642f6261646765732f6d61737465722f706970656c696e652e737667\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4901195dedd6b3da57096af31278364a05e03e4e/68747470733a2f2f6769746c61622e616963726f77642e636f6d2f666c61746c616e642f666c61746c616e642f6261646765732f6d61737465722f636f7665726167652e737667\"></p>\n<p><img alt=\"Flatland\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b551579a4bea4128dc3f10c48b534bcff1dc0222/68747470733a2f2f692e696d6775722e636f6d2f30726e62534c592e676966\"></p>\n<h2>About Flatland</h2>\n<p>Flatland is a opensource toolkit for developing and comparing Multi Agent Reinforcement Learning algorithms in little (or ridiculously large !) gridworlds.</p>\n<p>The base environment is a two-dimensional grid in which many agents can be placed, and each agent must solve one or more navigational tasks in the grid world. More details about the environment and the problem statement can be found in the <a href=\"http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/\" rel=\"nofollow\">official docs</a>.</p>\n<p>This library was developed by <a href=\"https://www.sbb.ch/en/\" rel=\"nofollow\">SBB</a>, <a href=\"https://www.aicrowd.com/\" rel=\"nofollow\">AIcrowd</a> and numerous contributors and AIcrowd research fellows from the AIcrowd community.</p>\n<p>This library was developed specifically for the <a href=\"https://www.aicrowd.com/challenges/flatland-challenge\" rel=\"nofollow\">Flatland Challenge</a> in which we strongly encourage you to take part in.</p>\n<p><strong>NOTE This document is best viewed in the official documentation site at</strong> <a href=\"http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/\" rel=\"nofollow\">Flatland-RL Docs</a></p>\n<h2>Installation</h2>\n<h3>Installation Prerequistes</h3>\n<ul>\n<li>Install <a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\">Anaconda</a> by following the instructions <a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\">here</a>.</li>\n<li>Create a new conda environment:</li>\n</ul>\n<pre><span class=\"gp\">$</span> conda create <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.6 --name flatland-rl\n<span class=\"gp\">$</span> conda activate flatland-rl\n</pre>\n<ul>\n<li>Install the necessary dependencies</li>\n</ul>\n<pre><span class=\"gp\">$</span> conda install -c conda-forge cairosvg pycairo\n<span class=\"gp\">$</span> conda install -c anaconda tk  \n</pre>\n<h3>Install Flatland</h3>\n<h4>Stable Release</h4>\n<p>To install flatland, run this command in your terminal:</p>\n<pre><span class=\"gp\">$</span> pip install flatland-rl\n</pre>\n<p>This is the preferred method to install flatland, as it will always install the most recent stable release.</p>\n<p>If you don't have <code>pip</code>_ installed, this <code>Python installation guide</code>_ can guide\nyou through the process.</p>\n<p>.. _pip: <a href=\"https://pip.pypa.io\" rel=\"nofollow\">https://pip.pypa.io</a>\n.. _Python installation guide: <a href=\"http://docs.python-guide.org/en/latest/starting/installation/\" rel=\"nofollow\">http://docs.python-guide.org/en/latest/starting/installation/</a></p>\n<h4>From sources</h4>\n<p>The sources for flatland can be downloaded from <a href=\"https://gitlab.aicrowd.com/flatland/flatland\" rel=\"nofollow\">gitlab</a></p>\n<p>You can clone the public repository:</p>\n<pre><span class=\"gp\">$</span> git clone git@gitlab.aicrowd.com:flatland/flatland.git\n</pre>\n<p>Once you have a copy of the source, you can install it with:</p>\n<pre><span class=\"gp\">$</span> python setup.py install\n</pre>\n<h3>Test installation</h3>\n<p>Test that the installation works</p>\n<pre><span class=\"gp\">$</span> flatland-demo\n</pre>\n<h3>Jupyter Canvas Widget</h3>\n<p>If you work with jupyter notebook you need to install the Jupyer Canvas Widget. To install the Jupyter Canvas Widget read also\n<a href=\"%5Bhttps://github.com/Who8MyLunch/Jupyter_Canvas_Widget#installation\" rel=\"nofollow\">https://github.com/Who8MyLunch/Jupyter_Canvas_Widget#installation</a></p>\n<h2>Basic Usage</h2>\n<p>Basic usage of the RailEnv environment used by the Flatland Challenge (also see <a href=\"https://gitlab.aicrowd.com/flatland/flatland/blob/master/examples/introduction_flatland_2_1.py\" rel=\"nofollow\">Example</a>)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flatland.envs.observations</span> <span class=\"kn\">import</span> <span class=\"n\">GlobalObsForRailEnv</span>\n<span class=\"c1\"># First of all we import the Flatland rail environment</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flatland.envs.rail_env</span> <span class=\"kn\">import</span> <span class=\"n\">RailEnv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flatland.envs.rail_generators</span> <span class=\"kn\">import</span> <span class=\"n\">sparse_rail_generator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flatland.envs.schedule_generators</span> <span class=\"kn\">import</span> <span class=\"n\">sparse_schedule_generator</span>\n<span class=\"c1\"># We also include a renderer because we want to visualize what is going on in the environment</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flatland.utils.rendertools</span> <span class=\"kn\">import</span> <span class=\"n\">RenderTool</span><span class=\"p\">,</span> <span class=\"n\">AgentRenderVariant</span>\n\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>  <span class=\"c1\"># With of map</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>  <span class=\"c1\"># Height of map</span>\n<span class=\"n\">nr_trains</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>  <span class=\"c1\"># Number of trains that have an assigned task in the env</span>\n<span class=\"n\">cities_in_map</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>  <span class=\"c1\"># Number of cities where agents can start or end</span>\n<span class=\"n\">seed</span> <span class=\"o\">=</span> <span class=\"mi\">14</span>  <span class=\"c1\"># Random seed</span>\n<span class=\"n\">grid_distribution_of_cities</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Type of city distribution, if False cities are randomly placed</span>\n<span class=\"n\">max_rails_between_cities</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>  <span class=\"c1\"># Max number of tracks allowed between cities. This is number of entry point to a city</span>\n<span class=\"n\">max_rail_in_cities</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>  <span class=\"c1\"># Max number of parallel tracks within a city, representing a realistic trainstation</span>\n\n<span class=\"n\">rail_generator</span> <span class=\"o\">=</span> <span class=\"n\">sparse_rail_generator</span><span class=\"p\">(</span><span class=\"n\">max_num_cities</span><span class=\"o\">=</span><span class=\"n\">cities_in_map</span><span class=\"p\">,</span>\n                                       <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"n\">seed</span><span class=\"p\">,</span>\n                                       <span class=\"n\">grid_mode</span><span class=\"o\">=</span><span class=\"n\">grid_distribution_of_cities</span><span class=\"p\">,</span>\n                                       <span class=\"n\">max_rails_between_cities</span><span class=\"o\">=</span><span class=\"n\">max_rails_between_cities</span><span class=\"p\">,</span>\n                                       <span class=\"n\">max_rails_in_city</span><span class=\"o\">=</span><span class=\"n\">max_rail_in_cities</span><span class=\"p\">,</span>\n                                       <span class=\"p\">)</span>\n\n<span class=\"c1\"># The schedule generator can make very basic schedules with a start point, end point and a speed profile for each agent.</span>\n<span class=\"c1\"># The speed profiles can be adjusted directly as well as shown later on. We start by introducing a statistical</span>\n<span class=\"c1\"># distribution of speed profiles</span>\n\n<span class=\"c1\"># Different agent types (trains) with different speeds.</span>\n<span class=\"n\">speed_ration_map</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mf\">1.</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span>  <span class=\"c1\"># Fast passenger train</span>\n                    <span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"mf\">2.</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span>  <span class=\"c1\"># Fast freight train</span>\n                    <span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"mf\">3.</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span>  <span class=\"c1\"># Slow commuter train</span>\n                    <span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"mf\">4.</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"p\">}</span>  <span class=\"c1\"># Slow freight train</span>\n\n<span class=\"c1\"># We can now initiate the schedule generator with the given speed profiles</span>\n\n<span class=\"n\">schedule_generator</span> <span class=\"o\">=</span> <span class=\"n\">sparse_schedule_generator</span><span class=\"p\">(</span><span class=\"n\">speed_ration_map</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We can furthermore pass stochastic data to the RailEnv constructor which will allow for stochastic malfunctions</span>\n<span class=\"c1\"># during an episode.</span>\n\n<span class=\"n\">stochastic_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'prop_malfunction'</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>  <span class=\"c1\"># Percentage of defective agents</span>\n                   <span class=\"s1\">'malfunction_rate'</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>  <span class=\"c1\"># Rate of malfunction occurence</span>\n                   <span class=\"s1\">'min_duration'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>  <span class=\"c1\"># Minimal duration of malfunction</span>\n                   <span class=\"s1\">'max_duration'</span><span class=\"p\">:</span> <span class=\"mi\">20</span>  <span class=\"c1\"># Max duration of malfunction</span>\n                   <span class=\"p\">}</span>\n\n<span class=\"c1\"># Custom observation builder without predictor</span>\n<span class=\"n\">observation_builder</span> <span class=\"o\">=</span> <span class=\"n\">GlobalObsForRailEnv</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Custom observation builder with predictor, uncomment line below if you want to try this one</span>\n<span class=\"c1\"># observation_builder = TreeObsForRailEnv(max_depth=2, predictor=ShortestPathPredictorForRailEnv())</span>\n\n<span class=\"c1\"># Construct the enviornment with the given observation, generataors, predictors, and stochastic data</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">RailEnv</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span>\n              <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">,</span>\n              <span class=\"n\">rail_generator</span><span class=\"o\">=</span><span class=\"n\">rail_generator</span><span class=\"p\">,</span>\n              <span class=\"n\">schedule_generator</span><span class=\"o\">=</span><span class=\"n\">schedule_generator</span><span class=\"p\">,</span>\n              <span class=\"n\">number_of_agents</span><span class=\"o\">=</span><span class=\"n\">nr_trains</span><span class=\"p\">,</span>\n              <span class=\"n\">malfunction_generator_and_process_data</span><span class=\"o\">=</span><span class=\"n\">malfunction_from_params</span><span class=\"p\">(</span><span class=\"n\">stochastic_data</span><span class=\"p\">),</span>\n              <span class=\"n\">obs_builder_object</span><span class=\"o\">=</span><span class=\"n\">observation_builder</span><span class=\"p\">,</span>\n              <span class=\"n\">remove_agents_at_target</span><span class=\"o\">=</span><span class=\"kc\">True</span>  <span class=\"c1\"># Removes agents at the end of their journey to make space for others</span>\n              <span class=\"p\">)</span>\n\n<span class=\"c1\"># Initiate the renderer</span>\n<span class=\"n\">env_renderer</span> <span class=\"o\">=</span> <span class=\"n\">RenderTool</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">gl</span><span class=\"o\">=</span><span class=\"s2\">\"PILSVG\"</span><span class=\"p\">,</span>\n                          <span class=\"n\">agent_render_variant</span><span class=\"o\">=</span><span class=\"n\">AgentRenderVariant</span><span class=\"o\">.</span><span class=\"n\">AGENT_SHOWS_OPTIONS_AND_BOX</span><span class=\"p\">,</span>\n                          <span class=\"n\">show_debug</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                          <span class=\"n\">screen_height</span><span class=\"o\">=</span><span class=\"mi\">1080</span><span class=\"p\">,</span>  <span class=\"c1\"># Adjust these parameters to fit your resolution</span>\n                          <span class=\"n\">screen_width</span><span class=\"o\">=</span><span class=\"mi\">1920</span><span class=\"p\">)</span>  <span class=\"c1\"># Adjust these parameters to fit your resolution</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_controller</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    You are supposed to write this controller</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">_action</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">for</span> <span class=\"n\">_idx</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">NUMBER_OF_AGENTS</span><span class=\"p\">):</span>\n        <span class=\"n\">_action</span><span class=\"p\">[</span><span class=\"n\">_idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">_action</span>\n\n<span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n\n    <span class=\"n\">_action</span> <span class=\"o\">=</span> <span class=\"n\">my_controller</span><span class=\"p\">()</span>\n    <span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">all_rewards</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">,</span> <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">_action</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Rewards: </span><span class=\"si\">{}</span><span class=\"s2\">, [done=</span><span class=\"si\">{}</span><span class=\"s2\">]\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span> <span class=\"n\">all_rewards</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">))</span>\n    <span class=\"n\">env_renderer</span><span class=\"o\">.</span><span class=\"n\">render_env</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">frames</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">show_observations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n</pre>\n<p>and <strong>ideally</strong> you should see something along the lines of</p>\n<p><img alt=\"Flatland\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d711d80e5c268ed21e42fa5001bf09c30ff1cb5/68747470733a2f2f692e696d6775722e636f6d2f506339614834502e676966\"></p>\n<p>Best of Luck !!</p>\n<h2>Communication</h2>\n<ul>\n<li><a href=\"http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/\" rel=\"nofollow\">Official Documentation</a></li>\n<li><a href=\"https://discourse.aicrowd.com/c/flatland-challenge\" rel=\"nofollow\">Discussion Forum</a></li>\n<li><a href=\"https://gitlab.aicrowd.com/flatland/flatland/issues/\" rel=\"nofollow\">Issue Tracker</a></li>\n</ul>\n<h2>Contributions</h2>\n<p>Please follow the <a href=\"http://flatland-rl-docs.s3-website.eu-central-1.amazonaws.com/contributing.html\" rel=\"nofollow\">Contribution Guidelines</a> for more details on how you can successfully contribute to the project. We enthusiastically look forward to your contributions.</p>\n<h2>Partners</h2>\n<p><a href=\"https://sbb.ch\" rel=\"nofollow\"><img alt=\"SBB\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/530b3624149078817d0b13c28fb4724e53782a51/68747470733a2f2f692e696d6775722e636f6d2f4f5343587464652e706e67\"></a>\n<a href=\"https://www.aicrowd.com\" rel=\"nofollow\"><img alt=\"AICROWD\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c0be372ac1d90cf80c225bf690eb9a32f0a0503/68747470733a2f2f61766174617273312e67697468756275736572636f6e74656e742e636f6d2f752f34343532323736343f733d32303026763d34\"></a></p>\n\n          </div>"}, "last_serial": 6090046, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f209607558f2ed30644a3fdbc2d7f059", "sha256": "cb040b44d21c1266c6560bd621875fa77fb5806fb3dff9d9016fa19b408a4f05"}, "downloads": -1, "filename": "flatland_rl-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f209607558f2ed30644a3fdbc2d7f059", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2897, "upload_time": "2019-04-03T05:13:18", "upload_time_iso_8601": "2019-04-03T05:13:18.011066Z", "url": "https://files.pythonhosted.org/packages/76/52/23680ee30905f8b589858d2bcc7c3e1d1d9de6e0a347bd4d7828669d7019/flatland_rl-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ad95d324446fafc3d088c3eba8b0505", "sha256": "92f7ed02087d5b79f3de94cb1a88c08568ba31214703b900c10edffdf94b52af"}, "downloads": -1, "filename": "flatland-rl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0ad95d324446fafc3d088c3eba8b0505", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13273, "upload_time": "2019-04-03T05:13:20", "upload_time_iso_8601": "2019-04-03T05:13:20.400652Z", "url": "https://files.pythonhosted.org/packages/6e/95/bde1139a727450951e0b86045262ec908b979a9076aba2b779f270771f3d/flatland-rl-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "486df2b6182c46ff774180efde413e53", "sha256": "85873eef1d65272d9137fc77ce0fd7faf31d305409c80b548ab47d58f83a233b"}, "downloads": -1, "filename": "flatland_rl-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "486df2b6182c46ff774180efde413e53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2881, "upload_time": "2019-04-03T05:23:04", "upload_time_iso_8601": "2019-04-03T05:23:04.276705Z", "url": "https://files.pythonhosted.org/packages/25/7e/087003e5b53a98b403e1976a3b08816189551d8f55094db0780474e4396c/flatland_rl-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e083e5bd66a266c5502fe032a1267ae3", "sha256": "4e441d06f1eb830b52b91a93761856e30f44ccacea5724ad49b5f5709a9ee5c7"}, "downloads": -1, "filename": "flatland-rl-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e083e5bd66a266c5502fe032a1267ae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13219, "upload_time": "2019-04-03T05:23:05", "upload_time_iso_8601": "2019-04-03T05:23:05.443921Z", "url": "https://files.pythonhosted.org/packages/86/b6/fa04c4dbc97f43f37c41bac3f7ad224357915377da2b8b69a03586ee6617/flatland-rl-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5dae09c28a7d04558cde86ad0bba88d6", "sha256": "f7b62e4b3936147ca12af864b54e441c85cc26f4076aebef07534820fe362c85"}, "downloads": -1, "filename": "flatland-rl-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5dae09c28a7d04558cde86ad0bba88d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2061463, "upload_time": "2019-07-03T05:26:05", "upload_time_iso_8601": "2019-07-03T05:26:05.483934Z", "url": "https://files.pythonhosted.org/packages/c3/c8/05eb63985624a654cdd0ec734b8e349974fbe53515f8c21738bdb8df3262/flatland-rl-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b4e657933b609d6c3af2a3bf1d7e3adb", "sha256": "1117879e07cdba35a628434d4ad846a067afd654e3d5514507c75a5a26e7ada6"}, "downloads": -1, "filename": "flatland-rl-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4e657933b609d6c3af2a3bf1d7e3adb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2062833, "upload_time": "2019-07-08T12:05:09", "upload_time_iso_8601": "2019-07-08T12:05:09.861270Z", "url": "https://files.pythonhosted.org/packages/c1/97/416fe034e6620283078a28a1fe7112699d820b092207eaa4a00130d90f02/flatland-rl-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c3fbec718e2dc6a64053a53143d7a970", "sha256": "ca7bad08db5ac810ea339d9da7b724892119a531ed9fbdb2f51d0e9d40844cfb"}, "downloads": -1, "filename": "flatland-rl-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c3fbec718e2dc6a64053a53143d7a970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2714295, "upload_time": "2019-07-24T12:23:33", "upload_time_iso_8601": "2019-07-24T12:23:33.889607Z", "url": "https://files.pythonhosted.org/packages/60/17/af1c286da97f12022a2fc557a409967aadfb96047a789f17d54a9c11750c/flatland-rl-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "abac71b4962eb4db983b1812d8f7a38d", "sha256": "7fd20e25cc32ac9eae1ee0981f40d8414ba07e7641a9cb23996de15cc2ace180"}, "downloads": -1, "filename": "flatland-rl-0.3.1.tar.gz", "has_sig": false, "md5_digest": "abac71b4962eb4db983b1812d8f7a38d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2699687, "upload_time": "2019-07-25T03:04:23", "upload_time_iso_8601": "2019-07-25T03:04:23.651821Z", "url": "https://files.pythonhosted.org/packages/ba/b3/30c1afb78c806b9de59eeb8f35c9f54ffb099573e088008027bf87e1084e/flatland-rl-0.3.1.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "685cf2f63a28c1b6fcf43dc7e2046539", "sha256": "f36a343da70de89b0635419e156e53d5de37c625c34668219c724a1cf5225044"}, "downloads": -1, "filename": "flatland-rl-0.3.10.tar.gz", "has_sig": false, "md5_digest": "685cf2f63a28c1b6fcf43dc7e2046539", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2670397, "upload_time": "2019-07-30T16:45:35", "upload_time_iso_8601": "2019-07-30T16:45:35.387095Z", "url": "https://files.pythonhosted.org/packages/08/29/eba9315ca16358dd931a24f5dffb3c57288f7dd6baebfa708be574d7d252/flatland-rl-0.3.10.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "c1c4566dc5be9fde6f7233490cdf1565", "sha256": "30bd1901700e9e81d6352845151efbba28d8c6918744ca27dd3ff75c20e2b92e"}, "downloads": -1, "filename": "flatland-rl-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c1c4566dc5be9fde6f7233490cdf1565", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2644579, "upload_time": "2019-07-26T09:52:09", "upload_time_iso_8601": "2019-07-26T09:52:09.146837Z", "url": "https://files.pythonhosted.org/packages/e9/6e/057724fe41156c1ed967b306e27283aafd790ec3e8acfc213f147702bf0f/flatland-rl-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "14b3f39cf5d18224d0760260bffa64cc", "sha256": "676ebde9c7259df32f75e4047ca3846e8161839f3935e5ffd636cf99c75f0b10"}, "downloads": -1, "filename": "flatland-rl-0.3.3.tar.gz", "has_sig": false, "md5_digest": "14b3f39cf5d18224d0760260bffa64cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2644809, "upload_time": "2019-07-29T10:49:24", "upload_time_iso_8601": "2019-07-29T10:49:24.579818Z", "url": "https://files.pythonhosted.org/packages/74/11/cfe05bda959105e0a2b0fd01ff39450ebfa9df7839de4ab4b80a4973e0db/flatland-rl-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "9f157e3ae368b1f5153a23e11b1b0cf4", "sha256": "619ce7cd4e051b62ae528c6bf97ef0bd9bfbb8815b91eab66f0a0196ad89f981"}, "downloads": -1, "filename": "flatland-rl-0.3.4.tar.gz", "has_sig": false, "md5_digest": "9f157e3ae368b1f5153a23e11b1b0cf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2648209, "upload_time": "2019-07-29T16:26:57", "upload_time_iso_8601": "2019-07-29T16:26:57.162781Z", "url": "https://files.pythonhosted.org/packages/62/5a/1b2d6f0b3c0617f25db9ecb30d3ef8ae4cd5ff2303270a2119c353f1359b/flatland-rl-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "ecffda36f541278dcb65c62d7b0d8112", "sha256": "bb9a1297d7768d627808ed92f4ac0f567ca4709f2ea135b7c41b58b061d1d670"}, "downloads": -1, "filename": "flatland-rl-0.3.5.tar.gz", "has_sig": false, "md5_digest": "ecffda36f541278dcb65c62d7b0d8112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2670148, "upload_time": "2019-07-29T23:11:26", "upload_time_iso_8601": "2019-07-29T23:11:26.153111Z", "url": "https://files.pythonhosted.org/packages/4c/32/67a982d3975030dc1e59ed808903f2e1317ff1868bb96f63dd32363c229f/flatland-rl-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "b9b2782bb9f102994806e8eafa413dc1", "sha256": "103af09780c06379ebb250a04cf5c6df8d1ce909906ea7704e340f81053e0bd8"}, "downloads": -1, "filename": "flatland-rl-0.3.6.tar.gz", "has_sig": false, "md5_digest": "b9b2782bb9f102994806e8eafa413dc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2648499, "upload_time": "2019-07-30T00:19:55", "upload_time_iso_8601": "2019-07-30T00:19:55.936184Z", "url": "https://files.pythonhosted.org/packages/fb/6e/ae25f63e28fc0eb6f76bc37247869e64d70decc8c54d467c880021d5fe1b/flatland-rl-0.3.6.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "8339a8a8d0178e54d50accd131750926", "sha256": "22b8d48a11cbf554f5f370d5958b85fb38557d6006d2dad9aef76f1fa1eeefa9"}, "downloads": -1, "filename": "flatland-rl-0.3.8.tar.gz", "has_sig": false, "md5_digest": "8339a8a8d0178e54d50accd131750926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2648502, "upload_time": "2019-07-30T01:07:41", "upload_time_iso_8601": "2019-07-30T01:07:41.728842Z", "url": "https://files.pythonhosted.org/packages/15/d9/c6b77f98ba808e6c68bae6e113754ad9f3aef7a84430bffd6696512d2880/flatland-rl-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "e3daf2ece44b84599c8bd259b6d7e885", "sha256": "92feb7c5794d204c9ee39b2c1009287e62f87e9552125457f95be627a5e202fa"}, "downloads": -1, "filename": "flatland-rl-0.3.9.tar.gz", "has_sig": false, "md5_digest": "e3daf2ece44b84599c8bd259b6d7e885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2670208, "upload_time": "2019-07-30T03:07:10", "upload_time_iso_8601": "2019-07-30T03:07:10.695973Z", "url": "https://files.pythonhosted.org/packages/07/2e/5876c498a1191a75b40640bf1b2b780b977adb7aa8e6c03a05cfb9f77333/flatland-rl-0.3.9.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "2c1c6b9a2b12dc338fffc94a6b817434", "sha256": "24a34dbcb1c5c6aa25d5a3f8e213f3e5997b96e0ae6d6ac4c4321049641afdb8"}, "downloads": -1, "filename": "flatland-rl-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2c1c6b9a2b12dc338fffc94a6b817434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2667883, "upload_time": "2019-09-06T13:03:00", "upload_time_iso_8601": "2019-09-06T13:03:00.245983Z", "url": "https://files.pythonhosted.org/packages/61/d0/e4769ff43b9c525ee6e6d23054186b0ef536d8a75bacde454e50936399ab/flatland-rl-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "8017f2661e2fef5e72c25704ecb0f96f", "sha256": "09324456cd1f2eaeb9e90e34f3cd5d3ad88adc47335edf1d2c10d684433b54ed"}, "downloads": -1, "filename": "flatland-rl-2.1.0.tar.gz", "has_sig": false, "md5_digest": "8017f2661e2fef5e72c25704ecb0f96f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2436970, "upload_time": "2019-10-09T12:03:06", "upload_time_iso_8601": "2019-10-09T12:03:06.509049Z", "url": "https://files.pythonhosted.org/packages/bb/67/9d406c01f81c353a6ccf5d86d154554731fdba36c3995a4d359d769351a0/flatland-rl-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "2acc983465aa316e9fbce102a511d23a", "sha256": "ee2d39331b63687ae9c214d52f303fc1977c0211f7a980271aac6233fe3cc3e6"}, "downloads": -1, "filename": "flatland-rl-2.1.1.tar.gz", "has_sig": false, "md5_digest": "2acc983465aa316e9fbce102a511d23a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2437578, "upload_time": "2019-10-09T14:36:02", "upload_time_iso_8601": "2019-10-09T14:36:02.107578Z", "url": "https://files.pythonhosted.org/packages/b4/f2/c322e8e8bac7dd546035a051509333281bada75765a10cbd4f3b8233993a/flatland-rl-2.1.1.tar.gz", "yanked": false}], "2.1.10": [{"comment_text": "", "digests": {"md5": "c6015f7f921159202e268bf0484c05c8", "sha256": "e3b6a3f26315aa94657f29c6cffe865d51c16d43eb6940883e005974e6d093f0"}, "downloads": -1, "filename": "flatland-rl-2.1.10.tar.gz", "has_sig": false, "md5_digest": "c6015f7f921159202e268bf0484c05c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2467391, "upload_time": "2019-11-06T22:36:42", "upload_time_iso_8601": "2019-11-06T22:36:42.060385Z", "url": "https://files.pythonhosted.org/packages/d5/9a/f60d2a5d2737e7b3711b07bbdc4f1eccdea77b67f71263d5b3ff5576df7d/flatland-rl-2.1.10.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "1b8c898e471742fe2b753f4fe41d689a", "sha256": "8db85dcdf14907f81e33d9f5d8aec580642c8b5912e0670fa5cb00e513e9a932"}, "downloads": -1, "filename": "flatland-rl-2.1.2.tar.gz", "has_sig": false, "md5_digest": "1b8c898e471742fe2b753f4fe41d689a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2461483, "upload_time": "2019-10-09T20:45:00", "upload_time_iso_8601": "2019-10-09T20:45:00.550687Z", "url": "https://files.pythonhosted.org/packages/0a/88/7b7d7971034fe9e11606b56b2d407f00fa36fe682ba8070a62252fa9bbe9/flatland-rl-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "62b46fa059d645b0b7537a22f8b188ea", "sha256": "836bbc54bc6ca6b9ff0d44b01042deba4fde5f8121afb9c9978ac01933a2f47d"}, "downloads": -1, "filename": "flatland-rl-2.1.3.tar.gz", "has_sig": false, "md5_digest": "62b46fa059d645b0b7537a22f8b188ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2439959, "upload_time": "2019-10-10T12:35:28", "upload_time_iso_8601": "2019-10-10T12:35:28.239254Z", "url": "https://files.pythonhosted.org/packages/84/81/b946f3a7780943d69ed14158ecec12d60415a5d01a751b96e869599af94e/flatland-rl-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "b33a32d6362aa574596291a432982bc4", "sha256": "817bfb59321553f91dd48404a12c9e70aeb143421d499f76500255f419f4f9de"}, "downloads": -1, "filename": "flatland-rl-2.1.4.tar.gz", "has_sig": false, "md5_digest": "b33a32d6362aa574596291a432982bc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2440130, "upload_time": "2019-10-10T16:22:49", "upload_time_iso_8601": "2019-10-10T16:22:49.440009Z", "url": "https://files.pythonhosted.org/packages/90/cc/6a63ac90c4995bda8eac7548f8ee15b72b5820e81bc3f468dfc979e3bcd5/flatland-rl-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "e71708c969c852ec91dc05d147b91f18", "sha256": "2a8df581b230cd9103c89f1726091b33b0f04722fad303f54c4f876f01b81beb"}, "downloads": -1, "filename": "flatland-rl-2.1.5.tar.gz", "has_sig": false, "md5_digest": "e71708c969c852ec91dc05d147b91f18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2443005, "upload_time": "2019-10-13T19:29:46", "upload_time_iso_8601": "2019-10-13T19:29:46.593336Z", "url": "https://files.pythonhosted.org/packages/af/df/bcc703bdff3b5806b432f718e2be2d1ffc353c33a396803e59dfa9652057/flatland-rl-2.1.5.tar.gz", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "655be3adcfb6864b9a2e5f17539c0313", "sha256": "f1d6fa4d65c549aa16b05a5997b4ee538e342eea27a6f3766a03e14eb326c4f4"}, "downloads": -1, "filename": "flatland-rl-2.1.6.tar.gz", "has_sig": false, "md5_digest": "655be3adcfb6864b9a2e5f17539c0313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2443036, "upload_time": "2019-10-14T11:15:14", "upload_time_iso_8601": "2019-10-14T11:15:14.685267Z", "url": "https://files.pythonhosted.org/packages/64/c4/f927cee9ee6abb0b4f954a4516c05dde276cf83b9771ff99e9937e2812af/flatland-rl-2.1.6.tar.gz", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "2713a36066eded9463c4d2a8de4b27d0", "sha256": "cde90a8a0463f0889395ad170b531e58e932336897c4cc909e57dd081f396274"}, "downloads": -1, "filename": "flatland-rl-2.1.7.tar.gz", "has_sig": false, "md5_digest": "2713a36066eded9463c4d2a8de4b27d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2444517, "upload_time": "2019-10-18T17:07:59", "upload_time_iso_8601": "2019-10-18T17:07:59.395474Z", "url": "https://files.pythonhosted.org/packages/02/bc/7d1c8448c122880bd42c6d59c4ec01db08883451f6e64a96345faa6c9905/flatland-rl-2.1.7.tar.gz", "yanked": false}], "2.1.8": [{"comment_text": "", "digests": {"md5": "60b40dc33f7aba5383f6408f303a50e3", "sha256": "3dca764b99a07ebc6151181f5d334bb889999c4e2befc08d39a2ccdf5c579e7e"}, "downloads": -1, "filename": "flatland-rl-2.1.8.tar.gz", "has_sig": false, "md5_digest": "60b40dc33f7aba5383f6408f303a50e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2472952, "upload_time": "2019-10-24T19:57:53", "upload_time_iso_8601": "2019-10-24T19:57:53.512328Z", "url": "https://files.pythonhosted.org/packages/5d/f0/63eed9a8bd4f374c1d3a1f4ef11399acded36012d80a70bbdddabe480a37/flatland-rl-2.1.8.tar.gz", "yanked": false}], "2.1.9": [{"comment_text": "", "digests": {"md5": "21b22995bf99a6f6baf9785ee583171f", "sha256": "2f2963c1cee668829f7e4afe84a352d03504b274c6eaa5412c1c8d8af536ae97"}, "downloads": -1, "filename": "flatland-rl-2.1.9.tar.gz", "has_sig": false, "md5_digest": "21b22995bf99a6f6baf9785ee583171f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2469030, "upload_time": "2019-11-06T21:39:27", "upload_time_iso_8601": "2019-11-06T21:39:27.644017Z", "url": "https://files.pythonhosted.org/packages/18/85/f899f7ae1247a84db7c1288fc6655bab2ba985f610e827fa2a74b25efcb6/flatland-rl-2.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6015f7f921159202e268bf0484c05c8", "sha256": "e3b6a3f26315aa94657f29c6cffe865d51c16d43eb6940883e005974e6d093f0"}, "downloads": -1, "filename": "flatland-rl-2.1.10.tar.gz", "has_sig": false, "md5_digest": "c6015f7f921159202e268bf0484c05c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2467391, "upload_time": "2019-11-06T22:36:42", "upload_time_iso_8601": "2019-11-06T22:36:42.060385Z", "url": "https://files.pythonhosted.org/packages/d5/9a/f60d2a5d2737e7b3711b07bbdc4f1eccdea77b67f71263d5b3ff5576df7d/flatland-rl-2.1.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:04 2020"}