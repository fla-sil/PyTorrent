{"info": {"author": "dynobo", "author_email": "dynobo@mailbox.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture", "Topic :: Utilities"], "description": "<!-- markdownlint-disable MD013 MD026 MD033 -->\n\n# normcap\n\n**_OCR powered screen-capture tool to capture information instead of images._**\n\n<p align=\"center\"><br>\n<a href=\"https://github.com/dynobo/normcap/releases\"><img alt=\"Build passing\" src=\"https://github.com/dynobo/normcap/workflows/Build/badge.svg\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\"><img alt=\"License: GPLv3\" src=\"https://img.shields.io/badge/License-GPLv3-blue.svg\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/Code%20style-black-%23000000\"></a>\n<a href='https://coveralls.io/github/dynobo/normcap'><img src='https://coveralls.io/repos/github/dynobo/normcap/badge.svg' alt='Coverage Status' /></a>\n</p>\n\n<p align=\"center\">\n<strong>Links:</strong> <a href=\"https://github.com/dynobo/normcap/releases\">Releases</a> |\n<a href=\"https://github.com/dynobo/normcap/blob/master/CHANGELOG.md\">Changelog</a> |\n<a href=\"https://github.com/dynobo/normcap/labels/backlog\">Roadmap</a> |\n<a href=\"https://github.com/dynobo/normcap/\">Repo</a>\n</p>\n\n<p align=\"center\">\n<strong>Content:</strong> <a href=\"#Introduction\">Introduction</a> |\n<a href=\"#Installation\">Installation</a> |\n<a href=\"#Usage\">Usage</a> |\n<a href=\"#Contribute\">Contribute</a> |\n<a href=\"#Contribute\">Credits</a>\n<br><br></p>\n\n## Introduction\n\n**Basic usage:**\n\n1. Launch `normcap`\n2. Select a region on the screen\n3. Retrieve recognized text in clipboard\n\n![](https://raw.githubusercontent.com/dynobo/normcap/master/ressource/normcap.gif)\n\n([Screencast on GitHub](https://raw.githubusercontent.com/dynobo/normcap/master/ressource/normcap.gif))\n\n## Installation\n\n### On Linux\n\n1\\. Install dependencies:\n\n```sh\n## on Ubuntu/Debian:\nsudo apt-get install tesseract-ocr xclip python3-tk python3-pil.imagetk libleptonica-dev libtesseract-dev\n\n# on Arch:\nsudo pacman -S tesseract tesseract-data-eng leptonica xclip tk python-pillow\n\n# on Fedora\nsudo dnf install tesseract tesseract-devel leptonica-devel xclip python3-tkinter\n```\n\n2\\. Install normcap:\n\n```sh\n## on Ubuntu/Debian:\npip3 install normcap\n\n# on Arch:\npip install normcap\n```\n\n(**_OR_** download and extract binary package from the [latest release](https://github.com/dynobo/normcap/releases))\n\n3\\. Execute `./normcap`\n\n### On Windows _(recommended method)_\n\n1\\. Download and extract the binary package from the [latest release](https://github.com/dynobo/normcap/releases) (no installation required)\n\n2\\. Execute `normcap.exe`\n\n### On Windows _(alternative method)_\n\n1\\. Install \"Tesseract\", e.g. by using the [installer provided by UB Mannheim](https://github.com/UB-Mannheim/tesseract/wiki)\n\n2\\. Set the environment variable `TESSDATA_PREFIX` to Tesseract's data folder, e.g.:\n\n```cmd\nsetx TESSDATA_PREFIX \"C:\\Program Files\\Tesseract-OCR\\tessdata\"\n```\n\n3\\. Install [tesserocr](https://pypi.org/project/tesserocr/), e.g. by using the [Windows specific wheel](https://github.com/simonflueckiger/tesserocr-windows_build):\n\n```bash\npip install https://github.com/simonflueckiger/tesserocr-windows_build/releases/download/tesserocr-v2.4.0-tesseract-4.0.0/tesserocr-2.4.0-cp37-cp37m-win_amd64.whl\n```\n\n4\\. Run\n\n```sh\npip install normcap\n```\n\n5\\. Execute `normcap`\n\n### On Mac\n\n**_Attention! On Mac, not everything works. [Help needed!](https://github.com/dynobo/normcap/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)_**\n\n1\\. Install dependencies:\n\n```sh\nbrew install tesseract tesseract-lang\n```\n\n2\\. Install normcap:\n\n```sh\npip install normcap\n```\n\n(**_OR_** download and extract binary package from the [latest release](https://github.com/dynobo/normcap/releases))\n\n3\\. Execute `normcap.app`\n\n## Usage\n\n### General\n\n- After launching `normcap` press `<esc>` to abort and quit.\n\n- Before letting the mouse button go, press the `<space>`-key to switch mode, as indicated by a symbol:\n\n  - **\u2630 (raw):** Copy detected text line by line, without further modification\n  - **\u2636 (parse):** Try to auto-detect the type of text using [magics](#Magics) and format the text accordingly, then copy\n\n- To download additional languages for Mac and Linux, check the official repository of your distribution for `tesseract`-languages. Packages' names might vary.\n\n- The [Windows release](https://github.com/dynobo/normcap/releases) of normcap supports English and German out of the box. If you need additional languages, download the appropriate files from [the tesseract repo](https://github.com/tesseract-ocr/tessdata_best) and place them into the `/normcap/tessdata/` folder.\n\n- normcap is intended to be executed on demand via a keybinding or desktop shortcut. Therefore it doesn't occupy resources by running in the background, but its startup is a bit slower.\n\n- By default normcap is \"stateless\": it copies recognized text to the system's clipboard but doesn't save images or text on the disk. However, you can use the `--path` switch to store the images in any folder.\n\n### Command line options\n\nnormcap has no settings, just a set of command line arguments:\n\n```plain\n(normcap)dynobo@cioran:~$ normcap --help\nusage: normcap [-h] [-v] [-m MODE] [-l LANG] [-c COLOR] [-p PATH]\n\nOCR-powered screen-capture tool to capture information instead of images.\n\noptional arguments:\n  -h, --help               show this help message and exit\n  -v, --verbose            print debug information to console (default: False)\n  -m MODE, --mode MODE     startup mode [raw,parse] (default: parse)\n  -l LANG, --lang LANG     languages for ocr, e.g. eng+deu (default: eng)\n  -c COLOR, --color COLOR  set primary color for UI (default: #FF0000)\n  -p PATH, --path PATH     set a path for storing images (default: None)\n```\n\n### Magics\n\n\"Magics\" are like add-ons providing automated functionality to intelligently detect and format the captured input.\n\nFirst, every \"magic\" calculates a \"**score**\" to determine the likelihood of being responsible for this type of text. Second, the \"magic\" which achieved the highest \"score\" takes the necessary actions to **\"transform\"** the input text according to its type.\n\nCurrently implemented Magics:\n\n| Magic                | Score                                                | Transform                                                                            |\n| -------------------- | ---------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| **Single&nbsp;line** | Only single line is detected                         | Trim unnecessary whitespace                                                          |\n| **Multi&nbsp;line**  | Multi lines, but single Paragraph                    | Separated by line breaks and trim each lined                                         |\n| **Paragraph**        | Multiple blocks of lines or multiple paragraphs      | Join every paragraph into a single line, separate different paragraphs by empty line |\n| **E-Mail**           | Number of chars in email addresses vs. overall chars | Transform to a comma-separated list of email addresses                               |\n| **URL**              | Number of chars in URLs vs. overall chars            | Transform to line-break separated URLs                                               |\n\n### Why \"normcap\"?\n\nSee [XKCD](https://xkcd.com):\n\n<a href=\"https://xkcd.com/2116/\"><img src=\"https://imgs.xkcd.com/comics/norm_normal_file_format.png\" width=\"250px;\"></a>\n\n## Contribute\n\n### Setup Environment\n\nPrerequisites are **Python**, **Tesseract** (incl. **language data**) and on Linux also **XClip**.\n\n```sh\n# Clone repository\ngit clone https://github.com/dynobo/normcap.git\n\n# Change into project directory\ncd normcap\n\n# Install pipenv (if not already installed)\npip install pipenv\n\n# Install project development incl. dependencies\npipenv install --dev\n\n# Register pre-commit hook\npipenv run pre-commit install -t pre-commit\n\n# Run normcap in pipenv environment\npipenv run python -m normcap\n```\n\n### Design Principles\n\n- **Multi-Platform**<br>Should work on Linux, Mac & Windows.\n- **Don't run as service**<br>As normcap is (hopefully) not used too often, it shouldn't consume resources in the background, even if it leads to slower start-up time.\n- **No network connection**<br>Everything should run locally without any network communication.\n- **Avoid text in UI**<br>This just avoids translations ;-) And I think it is feasible in such a simple application.\n- **Avoid configuration file or settings UI**<br>Focus on simplicity and core functionality.\n- **Dependencies**<br>The fewer dependencies, the better. Of course, I have to compromise, but I'm always open to suggestions on how to further reduce dependencies.\n- **Chain of Responsibility as main design pattern**<br>[See description on refactoring.guru](https://refactoring.guru/design-patterns/chain-of-responsibility)\n- **Multi-Monitors**<br>Supports setups with two or more displays\n\n## Credits\n\nThis project uses the following non-standard libraries:\n\n- [mss](https://pypi.org/project/mss/) _- taking screenshots_\n- [pillow](https://pypi.org/project/Pillow/) _- manipulating images_\n- [tesserocr](https://pypi.org/project/tesserocr/) _- wrapper for tesseract's API_\n- [pyperclip](https://pypi.org/project/pyperclip/) _- accessing clipboard_\n- [pyinstaller](https://pypi.org/project/PyInstaller/) _- packaging for platforms_\n\nAnd it depends on external software\n\n- [tesseract](https://github.com/tesseract-ocr/tesseract) - _OCR engine_\n\nThanks to the maintainers of those nice libraries!\n\n## Certification\n\n![WOMM](https://raw.githubusercontent.com/dynobo/lmdiag/master/badge.png)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dynobo/normcap", "keywords": "screenshot ocr capture clipboard", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "normcap", "package_url": "https://pypi.org/project/normcap/", "platform": "", "project_url": "https://pypi.org/project/normcap/", "project_urls": {"Homepage": "https://github.com/dynobo/normcap"}, "release_url": "https://pypi.org/project/normcap/0.1.4/", "requires_dist": ["mss", "Pillow", "pyperclip", "tesserocr", "pyscreenshot"], "requires_python": ">=3.7.0", "summary": "OCR-powered screen-capture tool to capture information instead of images", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>normcap</h1>\n<p><strong><em>OCR powered screen-capture tool to capture information instead of images.</em></strong></p>\n<p align=\"center\"><br>\n<a href=\"https://github.com/dynobo/normcap/releases\" rel=\"nofollow\"><img alt=\"Build passing\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5372d4fa01a4dd35588b0854b84ce7c2f1c5f63/68747470733a2f2f6769746875622e636f6d2f64796e6f626f2f6e6f726d6361702f776f726b666c6f77732f4275696c642f62616467652e737667\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPLv3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ab64d961c611279ed8b638ac790e7f523c59105/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f64652532307374796c652d626c61636b2d253233303030303030\"></a>\n<a href=\"https://coveralls.io/github/dynobo/normcap\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dfe163524ccfb68bad665764bffb5b800e925df/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f64796e6f626f2f6e6f726d6361702f62616467652e737667\"></a>\n</p>\n<p align=\"center\">\n<strong>Links:</strong> <a href=\"https://github.com/dynobo/normcap/releases\" rel=\"nofollow\">Releases</a> |\n<a href=\"https://github.com/dynobo/normcap/blob/master/CHANGELOG.md\" rel=\"nofollow\">Changelog</a> |\n<a href=\"https://github.com/dynobo/normcap/labels/backlog\" rel=\"nofollow\">Roadmap</a> |\n<a href=\"https://github.com/dynobo/normcap/\" rel=\"nofollow\">Repo</a>\n</p>\n<p align=\"center\">\n<strong>Content:</strong> <a href=\"#Introduction\" rel=\"nofollow\">Introduction</a> |\n<a href=\"#Installation\" rel=\"nofollow\">Installation</a> |\n<a href=\"#Usage\" rel=\"nofollow\">Usage</a> |\n<a href=\"#Contribute\" rel=\"nofollow\">Contribute</a> |\n<a href=\"#Contribute\" rel=\"nofollow\">Credits</a>\n<br><br></p>\n<h2>Introduction</h2>\n<p><strong>Basic usage:</strong></p>\n<ol>\n<li>Launch <code>normcap</code></li>\n<li>Select a region on the screen</li>\n<li>Retrieve recognized text in clipboard</li>\n</ol>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea3260d8b641002f7c959ebe8b04ac7fd15a23c8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64796e6f626f2f6e6f726d6361702f6d61737465722f726573736f757263652f6e6f726d6361702e676966\"></p>\n<p>(<a href=\"https://raw.githubusercontent.com/dynobo/normcap/master/ressource/normcap.gif\" rel=\"nofollow\">Screencast on GitHub</a>)</p>\n<h2>Installation</h2>\n<h3>On Linux</h3>\n<p>1. Install dependencies:</p>\n<pre><span class=\"c1\">## on Ubuntu/Debian:</span>\nsudo apt-get install tesseract-ocr xclip python3-tk python3-pil.imagetk libleptonica-dev libtesseract-dev\n\n<span class=\"c1\"># on Arch:</span>\nsudo pacman -S tesseract tesseract-data-eng leptonica xclip tk python-pillow\n\n<span class=\"c1\"># on Fedora</span>\nsudo dnf install tesseract tesseract-devel leptonica-devel xclip python3-tkinter\n</pre>\n<p>2. Install normcap:</p>\n<pre><span class=\"c1\">## on Ubuntu/Debian:</span>\npip3 install normcap\n\n<span class=\"c1\"># on Arch:</span>\npip install normcap\n</pre>\n<p>(<strong><em>OR</em></strong> download and extract binary package from the <a href=\"https://github.com/dynobo/normcap/releases\" rel=\"nofollow\">latest release</a>)</p>\n<p>3. Execute <code>./normcap</code></p>\n<h3>On Windows <em>(recommended method)</em></h3>\n<p>1. Download and extract the binary package from the <a href=\"https://github.com/dynobo/normcap/releases\" rel=\"nofollow\">latest release</a> (no installation required)</p>\n<p>2. Execute <code>normcap.exe</code></p>\n<h3>On Windows <em>(alternative method)</em></h3>\n<p>1. Install \"Tesseract\", e.g. by using the <a href=\"https://github.com/UB-Mannheim/tesseract/wiki\" rel=\"nofollow\">installer provided by UB Mannheim</a></p>\n<p>2. Set the environment variable <code>TESSDATA_PREFIX</code> to Tesseract's data folder, e.g.:</p>\n<pre>setx TESSDATA_PREFIX \"C:\\Program Files\\Tesseract-OCR\\tessdata\"\n</pre>\n<p>3. Install <a href=\"https://pypi.org/project/tesserocr/\" rel=\"nofollow\">tesserocr</a>, e.g. by using the <a href=\"https://github.com/simonflueckiger/tesserocr-windows_build\" rel=\"nofollow\">Windows specific wheel</a>:</p>\n<pre>pip install https://github.com/simonflueckiger/tesserocr-windows_build/releases/download/tesserocr-v2.4.0-tesseract-4.0.0/tesserocr-2.4.0-cp37-cp37m-win_amd64.whl\n</pre>\n<p>4. Run</p>\n<pre>pip install normcap\n</pre>\n<p>5. Execute <code>normcap</code></p>\n<h3>On Mac</h3>\n<p><strong><em>Attention! On Mac, not everything works. <a href=\"https://github.com/dynobo/normcap/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22\" rel=\"nofollow\">Help needed!</a></em></strong></p>\n<p>1. Install dependencies:</p>\n<pre>brew install tesseract tesseract-lang\n</pre>\n<p>2. Install normcap:</p>\n<pre>pip install normcap\n</pre>\n<p>(<strong><em>OR</em></strong> download and extract binary package from the <a href=\"https://github.com/dynobo/normcap/releases\" rel=\"nofollow\">latest release</a>)</p>\n<p>3. Execute <code>normcap.app</code></p>\n<h2>Usage</h2>\n<h3>General</h3>\n<ul>\n<li>\n<p>After launching <code>normcap</code> press <code>&lt;esc&gt;</code> to abort and quit.</p>\n</li>\n<li>\n<p>Before letting the mouse button go, press the <code>&lt;space&gt;</code>-key to switch mode, as indicated by a symbol:</p>\n<ul>\n<li><strong>\u2630 (raw):</strong> Copy detected text line by line, without further modification</li>\n<li><strong>\u2636 (parse):</strong> Try to auto-detect the type of text using <a href=\"#Magics\" rel=\"nofollow\">magics</a> and format the text accordingly, then copy</li>\n</ul>\n</li>\n<li>\n<p>To download additional languages for Mac and Linux, check the official repository of your distribution for <code>tesseract</code>-languages. Packages' names might vary.</p>\n</li>\n<li>\n<p>The <a href=\"https://github.com/dynobo/normcap/releases\" rel=\"nofollow\">Windows release</a> of normcap supports English and German out of the box. If you need additional languages, download the appropriate files from <a href=\"https://github.com/tesseract-ocr/tessdata_best\" rel=\"nofollow\">the tesseract repo</a> and place them into the <code>/normcap/tessdata/</code> folder.</p>\n</li>\n<li>\n<p>normcap is intended to be executed on demand via a keybinding or desktop shortcut. Therefore it doesn't occupy resources by running in the background, but its startup is a bit slower.</p>\n</li>\n<li>\n<p>By default normcap is \"stateless\": it copies recognized text to the system's clipboard but doesn't save images or text on the disk. However, you can use the <code>--path</code> switch to store the images in any folder.</p>\n</li>\n</ul>\n<h3>Command line options</h3>\n<p>normcap has no settings, just a set of command line arguments:</p>\n<pre>(normcap)dynobo@cioran:~$ normcap --help\nusage: normcap [-h] [-v] [-m MODE] [-l LANG] [-c COLOR] [-p PATH]\n\nOCR-powered screen-capture tool to capture information instead of images.\n\noptional arguments:\n  -h, --help               show this help message and exit\n  -v, --verbose            print debug information to console (default: False)\n  -m MODE, --mode MODE     startup mode [raw,parse] (default: parse)\n  -l LANG, --lang LANG     languages for ocr, e.g. eng+deu (default: eng)\n  -c COLOR, --color COLOR  set primary color for UI (default: #FF0000)\n  -p PATH, --path PATH     set a path for storing images (default: None)\n</pre>\n<h3>Magics</h3>\n<p>\"Magics\" are like add-ons providing automated functionality to intelligently detect and format the captured input.</p>\n<p>First, every \"magic\" calculates a \"<strong>score</strong>\" to determine the likelihood of being responsible for this type of text. Second, the \"magic\" which achieved the highest \"score\" takes the necessary actions to <strong>\"transform\"</strong> the input text according to its type.</p>\n<p>Currently implemented Magics:</p>\n<table>\n<thead>\n<tr>\n<th>Magic</th>\n<th>Score</th>\n<th>Transform</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Single\u00a0line</strong></td>\n<td>Only single line is detected</td>\n<td>Trim unnecessary whitespace</td>\n</tr>\n<tr>\n<td><strong>Multi\u00a0line</strong></td>\n<td>Multi lines, but single Paragraph</td>\n<td>Separated by line breaks and trim each lined</td>\n</tr>\n<tr>\n<td><strong>Paragraph</strong></td>\n<td>Multiple blocks of lines or multiple paragraphs</td>\n<td>Join every paragraph into a single line, separate different paragraphs by empty line</td>\n</tr>\n<tr>\n<td><strong>E-Mail</strong></td>\n<td>Number of chars in email addresses vs. overall chars</td>\n<td>Transform to a comma-separated list of email addresses</td>\n</tr>\n<tr>\n<td><strong>URL</strong></td>\n<td>Number of chars in URLs vs. overall chars</td>\n<td>Transform to line-break separated URLs</td>\n</tr></tbody></table>\n<h3>Why \"normcap\"?</h3>\n<p>See <a href=\"https://xkcd.com\" rel=\"nofollow\">XKCD</a>:</p>\n<p><a href=\"https://xkcd.com/2116/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f8441069383e53379bbb927d11ce9e338035f46/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6e6f726d5f6e6f726d616c5f66696c655f666f726d61742e706e67\" width=\"250px;\"></a></p>\n<h2>Contribute</h2>\n<h3>Setup Environment</h3>\n<p>Prerequisites are <strong>Python</strong>, <strong>Tesseract</strong> (incl. <strong>language data</strong>) and on Linux also <strong>XClip</strong>.</p>\n<pre><span class=\"c1\"># Clone repository</span>\ngit clone https://github.com/dynobo/normcap.git\n\n<span class=\"c1\"># Change into project directory</span>\n<span class=\"nb\">cd</span> normcap\n\n<span class=\"c1\"># Install pipenv (if not already installed)</span>\npip install pipenv\n\n<span class=\"c1\"># Install project development incl. dependencies</span>\npipenv install --dev\n\n<span class=\"c1\"># Register pre-commit hook</span>\npipenv run pre-commit install -t pre-commit\n\n<span class=\"c1\"># Run normcap in pipenv environment</span>\npipenv run python -m normcap\n</pre>\n<h3>Design Principles</h3>\n<ul>\n<li><strong>Multi-Platform</strong><br>Should work on Linux, Mac &amp; Windows.</li>\n<li><strong>Don't run as service</strong><br>As normcap is (hopefully) not used too often, it shouldn't consume resources in the background, even if it leads to slower start-up time.</li>\n<li><strong>No network connection</strong><br>Everything should run locally without any network communication.</li>\n<li><strong>Avoid text in UI</strong><br>This just avoids translations ;-) And I think it is feasible in such a simple application.</li>\n<li><strong>Avoid configuration file or settings UI</strong><br>Focus on simplicity and core functionality.</li>\n<li><strong>Dependencies</strong><br>The fewer dependencies, the better. Of course, I have to compromise, but I'm always open to suggestions on how to further reduce dependencies.</li>\n<li><strong>Chain of Responsibility as main design pattern</strong><br><a href=\"https://refactoring.guru/design-patterns/chain-of-responsibility\" rel=\"nofollow\">See description on refactoring.guru</a></li>\n<li><strong>Multi-Monitors</strong><br>Supports setups with two or more displays</li>\n</ul>\n<h2>Credits</h2>\n<p>This project uses the following non-standard libraries:</p>\n<ul>\n<li><a href=\"https://pypi.org/project/mss/\" rel=\"nofollow\">mss</a> <em>- taking screenshots</em></li>\n<li><a href=\"https://pypi.org/project/Pillow/\" rel=\"nofollow\">pillow</a> <em>- manipulating images</em></li>\n<li><a href=\"https://pypi.org/project/tesserocr/\" rel=\"nofollow\">tesserocr</a> <em>- wrapper for tesseract's API</em></li>\n<li><a href=\"https://pypi.org/project/pyperclip/\" rel=\"nofollow\">pyperclip</a> <em>- accessing clipboard</em></li>\n<li><a href=\"https://pypi.org/project/PyInstaller/\" rel=\"nofollow\">pyinstaller</a> <em>- packaging for platforms</em></li>\n</ul>\n<p>And it depends on external software</p>\n<ul>\n<li><a href=\"https://github.com/tesseract-ocr/tesseract\" rel=\"nofollow\">tesseract</a> - <em>OCR engine</em></li>\n</ul>\n<p>Thanks to the maintainers of those nice libraries!</p>\n<h2>Certification</h2>\n<p><img alt=\"WOMM\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e3f5e4bda596e41d031da0371ddee7fee04d818/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64796e6f626f2f6c6d646961672f6d61737465722f62616467652e706e67\"></p>\n\n          </div>"}, "last_serial": 7099413, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e989ebaeb0e96e87d46711a03ad81663", "sha256": "54d445738437131905532c406db752772be0446a100782402307987f3ba821ba"}, "downloads": -1, "filename": "normcap-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e989ebaeb0e96e87d46711a03ad81663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 37477, "upload_time": "2019-12-23T15:08:58", "upload_time_iso_8601": "2019-12-23T15:08:58.018498Z", "url": "https://files.pythonhosted.org/packages/b0/ae/e517c7b93036f5e18fd4b59aab72f8698530a3be7e8244f6b1182e5f0bbc/normcap-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55199bfe6023b14964583b7cd9596757", "sha256": "41b8d2de30a9028b41b02f4c7dbf3ad9d21c0a4ec1539ba60dea8007714df9a5"}, "downloads": -1, "filename": "normcap-0.1.0.tar.gz", "has_sig": false, "md5_digest": "55199bfe6023b14964583b7cd9596757", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 21765, "upload_time": "2019-12-23T15:09:00", "upload_time_iso_8601": "2019-12-23T15:09:00.584450Z", "url": "https://files.pythonhosted.org/packages/7c/4f/d2738a924309cfcbd73eef3da13d0dc253edd1d67cfac3e352e97b2748ac/normcap-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c808697e3a72f879b7b1dd18971c3e39", "sha256": "506a607482c12f8b682de9581c8d2294a929c193bb05b091e23b3a1e35a7fbc8"}, "downloads": -1, "filename": "normcap-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c808697e3a72f879b7b1dd18971c3e39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 37809, "upload_time": "2020-01-17T18:59:27", "upload_time_iso_8601": "2020-01-17T18:59:27.324131Z", "url": "https://files.pythonhosted.org/packages/34/e7/54a1d987d0310d1f0c2e498f5ac144a8e4e7250f9fa0c3ea9a1964bc5529/normcap-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7efc3f30f47fb85850f114c086c76fec", "sha256": "86e374b0701026e6be5b4948fdcffac30d65e3284610dc1985af34e76efd5491"}, "downloads": -1, "filename": "normcap-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7efc3f30f47fb85850f114c086c76fec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 22245, "upload_time": "2020-01-17T18:59:28", "upload_time_iso_8601": "2020-01-17T18:59:28.868557Z", "url": "https://files.pythonhosted.org/packages/b1/74/ef6df4104e6c5e9144fbbf7f18c415fcf2bcfa6b1edeb63e06ec172b00d9/normcap-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2498c3874f550daa16fe4ee619980e8c", "sha256": "efa9479f1fb4d593cf58f9f6df61654ed5e89d92e00f11ecdd9318dee494baa7"}, "downloads": -1, "filename": "normcap-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2498c3874f550daa16fe4ee619980e8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 37887, "upload_time": "2020-03-31T16:50:49", "upload_time_iso_8601": "2020-03-31T16:50:49.048634Z", "url": "https://files.pythonhosted.org/packages/ca/c5/5bea9f9ab0da6399a501a546bb43816b607072558e657cabf826387fc438/normcap-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03d3c530d27e8b8df285a22dc192be3b", "sha256": "8a49caebeae9cd12b97221f133b4ae9a8db97255ade8fddf5d733b6e64bea0b3"}, "downloads": -1, "filename": "normcap-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03d3c530d27e8b8df285a22dc192be3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 22346, "upload_time": "2020-03-31T16:50:50", "upload_time_iso_8601": "2020-03-31T16:50:50.907800Z", "url": "https://files.pythonhosted.org/packages/07/f5/53c6949a01a66df4d99fa95f558264d1edda452a9f9ca83cb91339a65576/normcap-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "18b23f13f95dfd820786f01f37ed44d2", "sha256": "d387d2e92705a81ffcc2104204ca856140b84abd818657f721fa4a6651bb5ce6"}, "downloads": -1, "filename": "normcap-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "18b23f13f95dfd820786f01f37ed44d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 39160, "upload_time": "2020-04-25T13:04:44", "upload_time_iso_8601": "2020-04-25T13:04:44.634279Z", "url": "https://files.pythonhosted.org/packages/28/21/1cfefc845b9d98b9e87894d04c2814d99f85c28ee9cec182a167b1cd2f60/normcap-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "498ab65606f6075040800ddb64383f03", "sha256": "1853a5cd7a5726a4069cb6c833d38369ee883cac5f5877676bfe67813f8c0fa9"}, "downloads": -1, "filename": "normcap-0.1.4.tar.gz", "has_sig": false, "md5_digest": "498ab65606f6075040800ddb64383f03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 23523, "upload_time": "2020-04-25T13:04:46", "upload_time_iso_8601": "2020-04-25T13:04:46.111305Z", "url": "https://files.pythonhosted.org/packages/ab/24/6e4ac0b69af88fa640a1bb98338db284e033ee0d9d342a7afc84db5eb644/normcap-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18b23f13f95dfd820786f01f37ed44d2", "sha256": "d387d2e92705a81ffcc2104204ca856140b84abd818657f721fa4a6651bb5ce6"}, "downloads": -1, "filename": "normcap-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "18b23f13f95dfd820786f01f37ed44d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 39160, "upload_time": "2020-04-25T13:04:44", "upload_time_iso_8601": "2020-04-25T13:04:44.634279Z", "url": "https://files.pythonhosted.org/packages/28/21/1cfefc845b9d98b9e87894d04c2814d99f85c28ee9cec182a167b1cd2f60/normcap-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "498ab65606f6075040800ddb64383f03", "sha256": "1853a5cd7a5726a4069cb6c833d38369ee883cac5f5877676bfe67813f8c0fa9"}, "downloads": -1, "filename": "normcap-0.1.4.tar.gz", "has_sig": false, "md5_digest": "498ab65606f6075040800ddb64383f03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 23523, "upload_time": "2020-04-25T13:04:46", "upload_time_iso_8601": "2020-04-25T13:04:46.111305Z", "url": "https://files.pythonhosted.org/packages/ab/24/6e4ac0b69af88fa640a1bb98338db284e033ee0d9d342a7afc84db5eb644/normcap-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:49 2020"}