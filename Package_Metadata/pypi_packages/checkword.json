{"info": {"author": "Bakhrom Rakhmonov", "author_email": "alex960126@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# checkword\nSimple module for check if the text contains blacklisted or whitelisted words\n\n# Installation\n```\npip install checkword\n```\n---\n## Usage\n```python\nimport checkword\n\n# add some bad words to blacklist\ncheckword.add_bad_words(['some', 'bad', 'words', 'like', 'sheet'])\n\n# and good words\ncheckword.add_good_words(['Festival', 'Event', 'Holiday'])\n\nprint(checkword.blacklisted('My some text to check for bad words'))\n# True\n\nprint(checkword.whitelisted('Another text to check for good words'))\n# False\n```\n---\n### Methods\n\n**add_bad_words(words)**\n> add word or words list/tuple to blacklist\n\n**add_good_words(words)**\n> add word or words list/tuple to whitelist\n\n**blacklisted(text, match_case=False, words=True)**\n> check if text contains any bad words\\\n**text**: text for checking\\\n**match_case**: use case sensitive word matching. \nif True `checkword.blacklisted('bAd')` will be False when `'bad'` is in blacklist \\\n**words**: match only complete words. if True `checkword.blacklisted('my bad string')=True` and `checkword.blacklisted('mybadstring')=False` while `'bad'` is in blacklist\n\n**whitelisted(text, match_case=False, words=True)**\n> check if text contains any whitelisted words\\\n**text**: text for checking\\\n**match_case**: use case sensitive word matching. \nif True `checkword.whitelisted('gOoD')` will be False when `'good'` is in blacklist \\\n**words**: match only complete words. if True `checkword.whitelisted('my good string')=True` and `checkword.whitelisted('mygoodstring')=False` while `'good'` is in blacklist\n\n**remove_bad_word(word)**\n> remove bad word from blacklist\n\n**remove_good_word(word)**\n> remove good word from whitelist\n\n**clear_blacklist()**\n> remove all bad words from blacklist\n\n**clear_whitelist()**\n> remove all good words from whitelist\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexb007/checkword", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "checkword", "package_url": "https://pypi.org/project/checkword/", "platform": "", "project_url": "https://pypi.org/project/checkword/", "project_urls": {"Homepage": "https://github.com/alexb007/checkword"}, "release_url": "https://pypi.org/project/checkword/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Package for checking text for existance of blacklisted or whitelisted words", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>checkword</h1>\n<p>Simple module for check if the text contains blacklisted or whitelisted words</p>\n<h1>Installation</h1>\n<pre><code>pip install checkword\n</code></pre>\n<hr>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">checkword</span>\n\n<span class=\"c1\"># add some bad words to blacklist</span>\n<span class=\"n\">checkword</span><span class=\"o\">.</span><span class=\"n\">add_bad_words</span><span class=\"p\">([</span><span class=\"s1\">'some'</span><span class=\"p\">,</span> <span class=\"s1\">'bad'</span><span class=\"p\">,</span> <span class=\"s1\">'words'</span><span class=\"p\">,</span> <span class=\"s1\">'like'</span><span class=\"p\">,</span> <span class=\"s1\">'sheet'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># and good words</span>\n<span class=\"n\">checkword</span><span class=\"o\">.</span><span class=\"n\">add_good_words</span><span class=\"p\">([</span><span class=\"s1\">'Festival'</span><span class=\"p\">,</span> <span class=\"s1\">'Event'</span><span class=\"p\">,</span> <span class=\"s1\">'Holiday'</span><span class=\"p\">])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">checkword</span><span class=\"o\">.</span><span class=\"n\">blacklisted</span><span class=\"p\">(</span><span class=\"s1\">'My some text to check for bad words'</span><span class=\"p\">))</span>\n<span class=\"c1\"># True</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">checkword</span><span class=\"o\">.</span><span class=\"n\">whitelisted</span><span class=\"p\">(</span><span class=\"s1\">'Another text to check for good words'</span><span class=\"p\">))</span>\n<span class=\"c1\"># False</span>\n</pre>\n<hr>\n<h3>Methods</h3>\n<p><strong>add_bad_words(words)</strong></p>\n<blockquote>\n<p>add word or words list/tuple to blacklist</p>\n</blockquote>\n<p><strong>add_good_words(words)</strong></p>\n<blockquote>\n<p>add word or words list/tuple to whitelist</p>\n</blockquote>\n<p><strong>blacklisted(text, match_case=False, words=True)</strong></p>\n<blockquote>\n<p>check if text contains any bad words<br>\n<strong>text</strong>: text for checking<br>\n<strong>match_case</strong>: use case sensitive word matching.\nif True <code>checkword.blacklisted('bAd')</code> will be False when <code>'bad'</code> is in blacklist <br>\n<strong>words</strong>: match only complete words. if True <code>checkword.blacklisted('my bad string')=True</code> and <code>checkword.blacklisted('mybadstring')=False</code> while <code>'bad'</code> is in blacklist</p>\n</blockquote>\n<p><strong>whitelisted(text, match_case=False, words=True)</strong></p>\n<blockquote>\n<p>check if text contains any whitelisted words<br>\n<strong>text</strong>: text for checking<br>\n<strong>match_case</strong>: use case sensitive word matching.\nif True <code>checkword.whitelisted('gOoD')</code> will be False when <code>'good'</code> is in blacklist <br>\n<strong>words</strong>: match only complete words. if True <code>checkword.whitelisted('my good string')=True</code> and <code>checkword.whitelisted('mygoodstring')=False</code> while <code>'good'</code> is in blacklist</p>\n</blockquote>\n<p><strong>remove_bad_word(word)</strong></p>\n<blockquote>\n<p>remove bad word from blacklist</p>\n</blockquote>\n<p><strong>remove_good_word(word)</strong></p>\n<blockquote>\n<p>remove good word from whitelist</p>\n</blockquote>\n<p><strong>clear_blacklist()</strong></p>\n<blockquote>\n<p>remove all bad words from blacklist</p>\n</blockquote>\n<p><strong>clear_whitelist()</strong></p>\n<blockquote>\n<p>remove all good words from whitelist</p>\n</blockquote>\n\n          </div>"}, "last_serial": 4634275, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "e98c7b09f56e7563f05b3a39589b7147", "sha256": "ff56b7538d5ae42cdc7032a5eed139a66b2ca11338755e0c51eb900f99545b5b"}, "downloads": -1, "filename": "checkword-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e98c7b09f56e7563f05b3a39589b7147", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2651, "upload_time": "2018-12-26T01:03:35", "upload_time_iso_8601": "2018-12-26T01:03:35.800739Z", "url": "https://files.pythonhosted.org/packages/67/7e/93b6c7e11546c18320733a56b0c712bb2657845d072d723292d0e07555fe/checkword-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3d1d14a17e8e0f8053cf5dcbd98660f", "sha256": "7327198b5a2e9c54e633cb72884a96bfa78c1184cf4c5310a726c63cd8b601ac"}, "downloads": -1, "filename": "checkword-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f3d1d14a17e8e0f8053cf5dcbd98660f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1979, "upload_time": "2018-12-26T01:03:37", "upload_time_iso_8601": "2018-12-26T01:03:37.762115Z", "url": "https://files.pythonhosted.org/packages/2c/32/1b670576173d94b7ab57b32352a3d931e91bfc8736d1db45510323238f3f/checkword-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "da7b5a4cdbccce5ccede609013dd1150", "sha256": "4ce8aacabdac469a20ab6ce867b3f0f97b6c402b5d13cf7da414f98a3c337164"}, "downloads": -1, "filename": "checkword-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "da7b5a4cdbccce5ccede609013dd1150", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2960, "upload_time": "2018-12-26T01:27:10", "upload_time_iso_8601": "2018-12-26T01:27:10.291493Z", "url": "https://files.pythonhosted.org/packages/bc/0e/aa1d1133ecc5a330efd55b17f8acf5020956b1c53f63491fe076fe4a2e76/checkword-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbac7806ec55ad9aefce934ca6bc4fba", "sha256": "d293198c86df1519252d5ba41a4034cbdc3f0b3327b0c8d46682b26f0d5a8f8b"}, "downloads": -1, "filename": "checkword-0.0.3.tar.gz", "has_sig": false, "md5_digest": "dbac7806ec55ad9aefce934ca6bc4fba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2402, "upload_time": "2018-12-26T01:27:11", "upload_time_iso_8601": "2018-12-26T01:27:11.698147Z", "url": "https://files.pythonhosted.org/packages/82/14/a4b8e2352398a9e6c30f70cca66ad28030e8751f3c6ef9103d1328abd4f5/checkword-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da7b5a4cdbccce5ccede609013dd1150", "sha256": "4ce8aacabdac469a20ab6ce867b3f0f97b6c402b5d13cf7da414f98a3c337164"}, "downloads": -1, "filename": "checkword-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "da7b5a4cdbccce5ccede609013dd1150", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2960, "upload_time": "2018-12-26T01:27:10", "upload_time_iso_8601": "2018-12-26T01:27:10.291493Z", "url": "https://files.pythonhosted.org/packages/bc/0e/aa1d1133ecc5a330efd55b17f8acf5020956b1c53f63491fe076fe4a2e76/checkword-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbac7806ec55ad9aefce934ca6bc4fba", "sha256": "d293198c86df1519252d5ba41a4034cbdc3f0b3327b0c8d46682b26f0d5a8f8b"}, "downloads": -1, "filename": "checkword-0.0.3.tar.gz", "has_sig": false, "md5_digest": "dbac7806ec55ad9aefce934ca6bc4fba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2402, "upload_time": "2018-12-26T01:27:11", "upload_time_iso_8601": "2018-12-26T01:27:11.698147Z", "url": "https://files.pythonhosted.org/packages/82/14/a4b8e2352398a9e6c30f70cca66ad28030e8751f3c6ef9103d1328abd4f5/checkword-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:42 2020"}