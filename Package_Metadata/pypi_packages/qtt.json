{"info": {"author": "Pieter Eendebak", "author_email": "pieter.eendebak@tno.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "# Welcome\n\nWelcome to the QTT framework. This README will shortly introduce the framework, and it will guide you through the structure, installation process and how to contribute. We look forward to working with you!\n\n# Quantum Technology Toolbox\n\nQuantum Technology Toolbox (QTT) is a Python-based framework developed initially by QuTech for the tuning and calibration of\nquantum dots and spin qubits. [QuTech](http://qutech.nl) is an advanced research center based in Delft, the Netherlands, for quantum\ncomputing and quantum internet, a collaboration founded by the [University of Technology Delft](https://www.tudelft.nl/en) (TU Delft) and\nthe Netherlands Organisation for Applied Scientific Research ([TNO](https://www.tno.nl/en)).\n\nFor usage of QTT see the detailed [documentation](https://qtt.readthedocs.io/en/latest/) on readthedocs.io.\n\n\nQTT is the framework on which you can base your measurement and analysis scripts. QTT is based\non [Qcodes](https://github.com/qdev-dk/Qcodes) (basic framework such as instrument drivers, DataSet) and the [SciPy](https://www.scipy.org/) ecosystem.\n\n## Installation\n\nQTT is compatible with Python 3.5+. QTT can be installed as a pip package to be used in a (virtual) Python environment.\nWe assume that software packages like [git](https://git-scm.com/downloads) and [python](https://www.python.org/downloads/)\nare already installed on your system.\n\nNote: when running Ubuntu Linux, installing these packages is done via:\n```\n$ sudo apt install git gcc python3 python3-venv python3-dev\n```\nfor Python 3.6.x or\n```\n$ sudo apt install git gcc python3.7 python3.7-venv python3.7-dev\n```\nfor Python 3.7.x. Other Linux distributions require similar steps.\n\n### Setting up a virtual environment\nTo create a clean virtual Python environment for your QTT development do:\n```\n$ mkdir qtt\n$ cd qtt\n```\nNow activate the virtual environment. On Linux do:\n```\n$ python3 -m venv env\n$ . ./env/bin/activate\n or\n$ source ./env/bin/activate\n```\nor use the python3.7 equivalent to generate a python 3.7 environment.\nOn Windows do:\n```\n$ python -m venv env\n$ env\\Scripts\\activate.bat\n```\nNow we are ready to install QTT.\n### Installation from Pypi\nTo use QTT, install it as a pip package: \n```\n$ pip install qtt\n```\n### Installing from source\nFor QTT development we advice to install from source. The source for QTT can be found at Github.\nFor the default installation from the QTT source directory execute:\n```\n$ git clone https://github.com/QuTech-Delft/qtt.git\n$ cd qtt\n$ pip install wheel\n$ pip install -e .\n```\nWhen (encountered on Linux) PyQt5 gives an error when installing try upgrading pip and rerun 'pip install -e .'\n```\n$ pip install --upgrade pip\n```\n### When incompatibility problems arise\nSometimes the default installation does not work because of incompatible dependencies between the used packages\non your system. To be sure you use all the right versions of the packages used by QTT and its dependencies do:\n```\n$ pip install . -r requirements_lock.txt\n```\nor for development\n```\n$ pip install -e . -r requirements_lock.txt\n```\nThis will install a tested set of all the packages QTT depends on.\n\n### Testing\n\nTests for the QTT packages are contained in the subdirectory `tests`. To run the tests run the following command:\n\n```\n$ pytest\n```\n### Installing for generating documentation\nTo install the necessary packages to perform documentation activities for QTT do:\n```\n$ pip install -e .[rtd]\n```\nThe documentation generation process is dependent on pandoc. When you want to generate the\ndocumentation and pandoc is not yet installed on your system navigate\nto [Pandoc](https://pandoc.org/installing.html) and follow the instructions found there to install pandoc. \nTo build the 'readthedocs' documentation do:\n```\n$ cd docs\n$ make html\n```\n### Vandersypen research group\n\nFor the Vandersypen research group there are more detailed instructions, read the file INSTALL.md in the spin-projects\nrepository.\n\n### Updating QTT\n\nTo update QTT do:\n```\n$ pip install . --upgrade\n```\n\n## Usage\n\nSee the [documentation](https://qtt.readthedocs.io/en/latest/) and the example notebooks in the [docs/notebooks](docs/notebooks) directory.\n\nFor a general introduction also see\n* [Introduction to Github](https://guides.github.com/activities/hello-world/)\n* [Scientific python lectures](https://github.com/jrjohansson/scientific-python-lectures)\n\nIf you use [Spyder](https://github.com/spyder-ide/spyder) then use the following settings:\n  - Use a `IPython` console and in `Tools->Preferences->IPython console->Graphics` set the IPython backend graphics option to `Qt5`. This ensures correctly displaying the `ParameterViewer` and `DataBrowser`\n  - In `Tools->Preferences->Console->Advanced settings` uncheck the box `Enable UMR`\n\n## Contributing\n\nSee [Contributing](CONTRIBUTING.md) for information about bug/issue reports, contributing code, style, and testing\n\n## License\n\nSee [License](LICENSE.txt)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://qutech.nl", "keywords": "", "license": "MIT", "maintainer": "Pieter Eendebak", "maintainer_email": "pieter.eendebak@tno.nl", "name": "qtt", "package_url": "https://pypi.org/project/qtt/", "platform": "", "project_url": "https://pypi.org/project/qtt/", "project_urls": {"Homepage": "http://qutech.nl"}, "release_url": "https://pypi.org/project/qtt/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "Python-based framework for analysis and tuning of quantum dots", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome</h1>\n<p>Welcome to the QTT framework. This README will shortly introduce the framework, and it will guide you through the structure, installation process and how to contribute. We look forward to working with you!</p>\n<h1>Quantum Technology Toolbox</h1>\n<p>Quantum Technology Toolbox (QTT) is a Python-based framework developed initially by QuTech for the tuning and calibration of\nquantum dots and spin qubits. <a href=\"http://qutech.nl\" rel=\"nofollow\">QuTech</a> is an advanced research center based in Delft, the Netherlands, for quantum\ncomputing and quantum internet, a collaboration founded by the <a href=\"https://www.tudelft.nl/en\" rel=\"nofollow\">University of Technology Delft</a> (TU Delft) and\nthe Netherlands Organisation for Applied Scientific Research (<a href=\"https://www.tno.nl/en\" rel=\"nofollow\">TNO</a>).</p>\n<p>For usage of QTT see the detailed <a href=\"https://qtt.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a> on readthedocs.io.</p>\n<p>QTT is the framework on which you can base your measurement and analysis scripts. QTT is based\non <a href=\"https://github.com/qdev-dk/Qcodes\" rel=\"nofollow\">Qcodes</a> (basic framework such as instrument drivers, DataSet) and the <a href=\"https://www.scipy.org/\" rel=\"nofollow\">SciPy</a> ecosystem.</p>\n<h2>Installation</h2>\n<p>QTT is compatible with Python 3.5+. QTT can be installed as a pip package to be used in a (virtual) Python environment.\nWe assume that software packages like <a href=\"https://git-scm.com/downloads\" rel=\"nofollow\">git</a> and <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">python</a>\nare already installed on your system.</p>\n<p>Note: when running Ubuntu Linux, installing these packages is done via:</p>\n<pre><code>$ sudo apt install git gcc python3 python3-venv python3-dev\n</code></pre>\n<p>for Python 3.6.x or</p>\n<pre><code>$ sudo apt install git gcc python3.7 python3.7-venv python3.7-dev\n</code></pre>\n<p>for Python 3.7.x. Other Linux distributions require similar steps.</p>\n<h3>Setting up a virtual environment</h3>\n<p>To create a clean virtual Python environment for your QTT development do:</p>\n<pre><code>$ mkdir qtt\n$ cd qtt\n</code></pre>\n<p>Now activate the virtual environment. On Linux do:</p>\n<pre><code>$ python3 -m venv env\n$ . ./env/bin/activate\n or\n$ source ./env/bin/activate\n</code></pre>\n<p>or use the python3.7 equivalent to generate a python 3.7 environment.\nOn Windows do:</p>\n<pre><code>$ python -m venv env\n$ env\\Scripts\\activate.bat\n</code></pre>\n<p>Now we are ready to install QTT.</p>\n<h3>Installation from Pypi</h3>\n<p>To use QTT, install it as a pip package:</p>\n<pre><code>$ pip install qtt\n</code></pre>\n<h3>Installing from source</h3>\n<p>For QTT development we advice to install from source. The source for QTT can be found at Github.\nFor the default installation from the QTT source directory execute:</p>\n<pre><code>$ git clone https://github.com/QuTech-Delft/qtt.git\n$ cd qtt\n$ pip install wheel\n$ pip install -e .\n</code></pre>\n<p>When (encountered on Linux) PyQt5 gives an error when installing try upgrading pip and rerun 'pip install -e .'</p>\n<pre><code>$ pip install --upgrade pip\n</code></pre>\n<h3>When incompatibility problems arise</h3>\n<p>Sometimes the default installation does not work because of incompatible dependencies between the used packages\non your system. To be sure you use all the right versions of the packages used by QTT and its dependencies do:</p>\n<pre><code>$ pip install . -r requirements_lock.txt\n</code></pre>\n<p>or for development</p>\n<pre><code>$ pip install -e . -r requirements_lock.txt\n</code></pre>\n<p>This will install a tested set of all the packages QTT depends on.</p>\n<h3>Testing</h3>\n<p>Tests for the QTT packages are contained in the subdirectory <code>tests</code>. To run the tests run the following command:</p>\n<pre><code>$ pytest\n</code></pre>\n<h3>Installing for generating documentation</h3>\n<p>To install the necessary packages to perform documentation activities for QTT do:</p>\n<pre><code>$ pip install -e .[rtd]\n</code></pre>\n<p>The documentation generation process is dependent on pandoc. When you want to generate the\ndocumentation and pandoc is not yet installed on your system navigate\nto <a href=\"https://pandoc.org/installing.html\" rel=\"nofollow\">Pandoc</a> and follow the instructions found there to install pandoc.\nTo build the 'readthedocs' documentation do:</p>\n<pre><code>$ cd docs\n$ make html\n</code></pre>\n<h3>Vandersypen research group</h3>\n<p>For the Vandersypen research group there are more detailed instructions, read the file INSTALL.md in the spin-projects\nrepository.</p>\n<h3>Updating QTT</h3>\n<p>To update QTT do:</p>\n<pre><code>$ pip install . --upgrade\n</code></pre>\n<h2>Usage</h2>\n<p>See the <a href=\"https://qtt.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a> and the example notebooks in the <a href=\"docs/notebooks\" rel=\"nofollow\">docs/notebooks</a> directory.</p>\n<p>For a general introduction also see</p>\n<ul>\n<li><a href=\"https://guides.github.com/activities/hello-world/\" rel=\"nofollow\">Introduction to Github</a></li>\n<li><a href=\"https://github.com/jrjohansson/scientific-python-lectures\" rel=\"nofollow\">Scientific python lectures</a></li>\n</ul>\n<p>If you use <a href=\"https://github.com/spyder-ide/spyder\" rel=\"nofollow\">Spyder</a> then use the following settings:</p>\n<ul>\n<li>Use a <code>IPython</code> console and in <code>Tools-&gt;Preferences-&gt;IPython console-&gt;Graphics</code> set the IPython backend graphics option to <code>Qt5</code>. This ensures correctly displaying the <code>ParameterViewer</code> and <code>DataBrowser</code></li>\n<li>In <code>Tools-&gt;Preferences-&gt;Console-&gt;Advanced settings</code> uncheck the box <code>Enable UMR</code></li>\n</ul>\n<h2>Contributing</h2>\n<p>See <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">Contributing</a> for information about bug/issue reports, contributing code, style, and testing</p>\n<h2>License</h2>\n<p>See <a href=\"LICENSE.txt\" rel=\"nofollow\">License</a></p>\n\n          </div>"}, "last_serial": 6458521, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "b887bf754b6a5cd5605e8d01824654d4", "sha256": "a1c1eb59f43019186a8dcce2acd8b5cccb00332fb726264e71dd4d85267ae68a"}, "downloads": -1, "filename": "qtt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b887bf754b6a5cd5605e8d01824654d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 229139, "upload_time": "2018-08-29T12:19:21", "upload_time_iso_8601": "2018-08-29T12:19:21.456932Z", "url": "https://files.pythonhosted.org/packages/7b/88/910e7fbeea2d1458040916719233ca26ea60b4ae1b5a2a4b10fdcf8e6f41/qtt-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "84142f6588106e38a6f6aec5bff61c61", "sha256": "bad407c2b13dc9cf3e0c534cd317af6d1fee96ead8370c1ed63521b33371feea"}, "downloads": -1, "filename": "qtt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "84142f6588106e38a6f6aec5bff61c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 228778, "upload_time": "2018-09-08T12:39:44", "upload_time_iso_8601": "2018-09-08T12:39:44.994275Z", "url": "https://files.pythonhosted.org/packages/54/8b/fc7de9154b5ae66ff38a90746e29cb9551070d1d5d695f99a6d2046712d0/qtt-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ce84186dec83a8819c86514b944e7f40", "sha256": "37e411af2507a09a7b2c6342599e955c132a6b06b32779f5243ad23f834fd303"}, "downloads": -1, "filename": "qtt-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ce84186dec83a8819c86514b944e7f40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 237735, "upload_time": "2019-04-12T12:00:09", "upload_time_iso_8601": "2019-04-12T12:00:09.779767Z", "url": "https://files.pythonhosted.org/packages/84/1d/35c317235206e860f114571f1e30daacb607408648516c9b674db52df7b5/qtt-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "95a3e9adc25016cab46fdc1846184b5e", "sha256": "843181ee6cb7a061376711d8f7a1df2d7ac8703e6851023bca666c9c7e721f02"}, "downloads": -1, "filename": "qtt-1.2.0.tar.gz", "has_sig": false, "md5_digest": "95a3e9adc25016cab46fdc1846184b5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 345489, "upload_time": "2019-12-18T12:54:25", "upload_time_iso_8601": "2019-12-18T12:54:25.366231Z", "url": "https://files.pythonhosted.org/packages/d6/f5/4b32b50a24618e5fe4d5adac58922d369e3a6b748b7c82e501f0d4742bee/qtt-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "83627a76cb06394a6712ee188dd6cc5b", "sha256": "9f4b1381604294e2a68a86410f3e3652c977c4701919e5df2c80562bc61b5350"}, "downloads": -1, "filename": "qtt-1.2.1.tar.gz", "has_sig": false, "md5_digest": "83627a76cb06394a6712ee188dd6cc5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 345862, "upload_time": "2020-01-15T13:13:24", "upload_time_iso_8601": "2020-01-15T13:13:24.611571Z", "url": "https://files.pythonhosted.org/packages/93/2e/f9983dba4e0095a98a77790a27f7650957a7bc2ccc632c05b7aa3bbe7a39/qtt-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83627a76cb06394a6712ee188dd6cc5b", "sha256": "9f4b1381604294e2a68a86410f3e3652c977c4701919e5df2c80562bc61b5350"}, "downloads": -1, "filename": "qtt-1.2.1.tar.gz", "has_sig": false, "md5_digest": "83627a76cb06394a6712ee188dd6cc5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 345862, "upload_time": "2020-01-15T13:13:24", "upload_time_iso_8601": "2020-01-15T13:13:24.611571Z", "url": "https://files.pythonhosted.org/packages/93/2e/f9983dba4e0095a98a77790a27f7650957a7bc2ccc632c05b7aa3bbe7a39/qtt-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:05 2020"}