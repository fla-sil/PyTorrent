{"info": {"author": "Arni Inaba Kjartansson", "author_email": "arni@grid.is", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "log-enricher\n============\n[![CircleCI](https://circleci.com/gh/arni-inaba/log-enricher.svg?style=svg)](https://circleci.com/gh/arni-inaba/log-enricher)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/log-enricher.svg)](https://pypi.org/project/log-enricher/)\n[![PyPI Version](https://img.shields.io/pypi/v/log-enricher.svg)](https://pypi.org/project/log-enricher/)\n[![License](https://img.shields.io/badge/license-mit-blue.svg)](https://pypi.org/project/log-enricher/)\n\nThis is a log enricher, useful for adding custom fields to log records.\n\nThis was developed at [GRID](https://github.com/GRID-is) for use with our\npython backend services and intended to emit structured logs.\n\ninstallation\n------------\n```\npip install log-enricher\n```\n\nconfiguration\n-------------\n\n`log-enricher.initialize_logging(...)` configures the `logging` library and takes in `enrichers`, a list of \nfunctions that return a dictionary. When a log message is sent, the enrichers are run automatically and their \noutput is added to the log message, if structured logging is enabled.\n\nFurthermore, `initialize_logging()` takes a list of `loggers` to use, a switch to control `structured_logs` \n(JSON logs, default on), and a `log_level` setting.\n\nLogs will be output in a structured JSON format by default - if `structured_logs` is `True` - \nor in a plain, console-friendly format if `structured_logs` is `False`.\n\nconfig example\n--------------\n```python\nimport os\n\nfrom log_enricher import initialize_logging, Level\nfrom log_enricher.enrichers import Enricher\n\nclass UserContextEnricher(Enricher):\n    def __call__(self) -> Dict[str, Any]:\n        user_context = get_user_context()\n        return {\"username\": user_context.get(\"username\")}\n\nextra_log_properties = {\n    \"app_version\": Config.APP_VERSION, \"release_stage\": Config.RELEASE_STAGE\n}\n\ndef main():\n    initialize_logging(\n        loggers=[\"uvicorn\", \"sqlalchemy\"],\n        structured_logs=os.environ.get(\"STRUCTURED_LOGS\", True),\n        log_level=Level.INFO,\n        enrichers=[UserContextEnricher(), lambda: extra_log_properties],\n    )\n```\n\nenrichers\n---------\nTo build a log enricher, make a subclass of Enricher, or Callable, and implement `__call__()`. Any method returning \na dict can be used to enrich log records. See [log_enricher/enrichers.py](log_enricher/enrichers.py). The key-value\npairs in the dict are added as attribute-value pairs to the log record. Of course, any method calls in the \nenrichers need to  work in any subsequent context the logging system is called.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arni-inaba/log-enricher", "keywords": "", "license": "MIT", "maintainer": "Arni Inaba Kjartansson", "maintainer_email": "arni@grid.is", "name": "log-enricher", "package_url": "https://pypi.org/project/log-enricher/", "platform": "", "project_url": "https://pypi.org/project/log-enricher/", "project_urls": {"Homepage": "https://github.com/arni-inaba/log-enricher", "Repository": "https://github.com/arni-inaba/log-enricher"}, "release_url": "https://pypi.org/project/log-enricher/0.1.6/", "requires_dist": ["python-json-logger (>=0.1.11,<0.2.0)", "strenum (>=0.4.0,<0.5.0)"], "requires_python": ">=3.6,<4.0", "summary": "Library to enrich structured logs", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>log-enricher</h1>\n<p><a href=\"https://circleci.com/gh/arni-inaba/log-enricher\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82812d8abef56184312931d98b1ea9a661ce679d/68747470733a2f2f636972636c6563692e636f6d2f67682f61726e692d696e6162612f6c6f672d656e7269636865722e7376673f7374796c653d737667\"></a>\n<a href=\"https://pypi.org/project/log-enricher/\" rel=\"nofollow\"><img alt=\"PyPI Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a134db07439a0f799cbfa8ab051f0af831577c76/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6c6f672d656e7269636865722e737667\"></a>\n<a href=\"https://pypi.org/project/log-enricher/\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abc2fd0c63a6980bc70d828a2affbb3399efd12b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6f672d656e7269636865722e737667\"></a>\n<a href=\"https://pypi.org/project/log-enricher/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9658f321e7cf32253c97c200157f7191ccce1b9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d6d69742d626c75652e737667\"></a></p>\n<p>This is a log enricher, useful for adding custom fields to log records.</p>\n<p>This was developed at <a href=\"https://github.com/GRID-is\" rel=\"nofollow\">GRID</a> for use with our\npython backend services and intended to emit structured logs.</p>\n<h2>installation</h2>\n<pre><code>pip install log-enricher\n</code></pre>\n<h2>configuration</h2>\n<p><code>log-enricher.initialize_logging(...)</code> configures the <code>logging</code> library and takes in <code>enrichers</code>, a list of\nfunctions that return a dictionary. When a log message is sent, the enrichers are run automatically and their\noutput is added to the log message, if structured logging is enabled.</p>\n<p>Furthermore, <code>initialize_logging()</code> takes a list of <code>loggers</code> to use, a switch to control <code>structured_logs</code>\n(JSON logs, default on), and a <code>log_level</code> setting.</p>\n<p>Logs will be output in a structured JSON format by default - if <code>structured_logs</code> is <code>True</code> -\nor in a plain, console-friendly format if <code>structured_logs</code> is <code>False</code>.</p>\n<h2>config example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">log_enricher</span> <span class=\"kn\">import</span> <span class=\"n\">initialize_logging</span><span class=\"p\">,</span> <span class=\"n\">Level</span>\n<span class=\"kn\">from</span> <span class=\"nn\">log_enricher.enrichers</span> <span class=\"kn\">import</span> <span class=\"n\">Enricher</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserContextEnricher</span><span class=\"p\">(</span><span class=\"n\">Enricher</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n        <span class=\"n\">user_context</span> <span class=\"o\">=</span> <span class=\"n\">get_user_context</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"username\"</span><span class=\"p\">:</span> <span class=\"n\">user_context</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">)}</span>\n\n<span class=\"n\">extra_log_properties</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"app_version\"</span><span class=\"p\">:</span> <span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">APP_VERSION</span><span class=\"p\">,</span> <span class=\"s2\">\"release_stage\"</span><span class=\"p\">:</span> <span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">RELEASE_STAGE</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">initialize_logging</span><span class=\"p\">(</span>\n        <span class=\"n\">loggers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"uvicorn\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sqlalchemy\"</span><span class=\"p\">],</span>\n        <span class=\"n\">structured_logs</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"STRUCTURED_LOGS\"</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">),</span>\n        <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"n\">Level</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span>\n        <span class=\"n\">enrichers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">UserContextEnricher</span><span class=\"p\">(),</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">extra_log_properties</span><span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre>\n<h2>enrichers</h2>\n<p>To build a log enricher, make a subclass of Enricher, or Callable, and implement <code>__call__()</code>. Any method returning\na dict can be used to enrich log records. See <a href=\"log_enricher/enrichers.py\" rel=\"nofollow\">log_enricher/enrichers.py</a>. The key-value\npairs in the dict are added as attribute-value pairs to the log record. Of course, any method calls in the\nenrichers need to  work in any subsequent context the logging system is called.</p>\n\n          </div>"}, "last_serial": 6526353, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "159a0ceb0881716050b095c42d025a90", "sha256": "5018f7e92ca1bad02e9784cc94d675f7acbf2b5f2c64cfd0fb2c422d58a36450"}, "downloads": -1, "filename": "log_enricher-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "159a0ceb0881716050b095c42d025a90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 1924, "upload_time": "2019-10-15T10:45:32", "upload_time_iso_8601": "2019-10-15T10:45:32.021834Z", "url": "https://files.pythonhosted.org/packages/a0/cf/8eacd96d6089eadce2a19f31571cf3cddb8a1f793ef918d3beeb72079f62/log_enricher-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a49bb7d0c77b96e0bdc8c03ce17607e5", "sha256": "d173f8d4f967dbfc59a68336f82b845ecb7f5d16154b334c9526fb645cf49719"}, "downloads": -1, "filename": "log-enricher-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a49bb7d0c77b96e0bdc8c03ce17607e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 1632, "upload_time": "2019-10-15T10:45:29", "upload_time_iso_8601": "2019-10-15T10:45:29.086882Z", "url": "https://files.pythonhosted.org/packages/0f/17/eb883ceed36c773635268b2cde13f6068df69f8787f38b6d3e975e4f0b23/log-enricher-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ab48f47c5727938bab6cbe6248c74d5a", "sha256": "4491ef42fb06fa51889d56319d9d2f7dccd34977ba4a4fb428392db54e4b344b"}, "downloads": -1, "filename": "log_enricher-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ab48f47c5727938bab6cbe6248c74d5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 2636, "upload_time": "2019-10-15T15:47:52", "upload_time_iso_8601": "2019-10-15T15:47:52.170464Z", "url": "https://files.pythonhosted.org/packages/57/b3/170c1684be38e48d354da05570cf5b1daf05bb94f56eff4c4e157ced3b3a/log_enricher-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c54d0f137a957276f78881e6b376cd68", "sha256": "acd5a736ebe6d142f8ddc4d20b3b4b6c188ab09cc2e770023637aaa3d44a49e9"}, "downloads": -1, "filename": "log-enricher-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c54d0f137a957276f78881e6b376cd68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 2246, "upload_time": "2019-10-15T15:47:41", "upload_time_iso_8601": "2019-10-15T15:47:41.158796Z", "url": "https://files.pythonhosted.org/packages/b2/7d/098f98961bef83d5456279a6d66e4a5e4fe671f52f4c3fdb1124594f665a/log-enricher-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b708f0c46f3f427106cd5e70c5ee2481", "sha256": "5880118fe7c21611575d114e2128b213a64ff94226cd8144786a5794ceaab2b7"}, "downloads": -1, "filename": "log_enricher-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b708f0c46f3f427106cd5e70c5ee2481", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 2608, "upload_time": "2019-10-16T15:56:40", "upload_time_iso_8601": "2019-10-16T15:56:40.258699Z", "url": "https://files.pythonhosted.org/packages/9c/27/3a7bebfab542ea1d0e466c484a649be39fc23acd06153a9143147f97a23d/log_enricher-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "283ed32b0c0b31b9d623ce7bf567667c", "sha256": "ad8910ba6d6b7746c848e006a4a96e897887487b99b565237b97a914b553acd8"}, "downloads": -1, "filename": "log-enricher-0.1.2.tar.gz", "has_sig": false, "md5_digest": "283ed32b0c0b31b9d623ce7bf567667c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 2219, "upload_time": "2019-10-16T15:56:24", "upload_time_iso_8601": "2019-10-16T15:56:24.686880Z", "url": "https://files.pythonhosted.org/packages/f0/a1/f4addf19fe80822b626fe0fcfb0de7ba7c6c1d0f91b4642913154fd2f235/log-enricher-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6bcf29bb2fb2eb07a146fdff2ddf3075", "sha256": "7737f99353272499f4147bd7d4c14c1ed201eb0fab5b406dda8b7f0714437e8b"}, "downloads": -1, "filename": "log_enricher-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6bcf29bb2fb2eb07a146fdff2ddf3075", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 3899, "upload_time": "2019-10-24T11:08:40", "upload_time_iso_8601": "2019-10-24T11:08:40.957264Z", "url": "https://files.pythonhosted.org/packages/06/9c/47cfcfe9137b8a317d7eb768c27da003789784df123ab12fe782e2390618/log_enricher-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83c84c81d53456a0dd5bfe7dde14fe8b", "sha256": "bfe7fce254568b24a534fa022007c22eef211ffb192fc5da85d9ae28c25fe9ae"}, "downloads": -1, "filename": "log-enricher-0.1.3.tar.gz", "has_sig": false, "md5_digest": "83c84c81d53456a0dd5bfe7dde14fe8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 3755, "upload_time": "2019-10-24T11:08:39", "upload_time_iso_8601": "2019-10-24T11:08:39.454863Z", "url": "https://files.pythonhosted.org/packages/a5/96/e1bef913986f5718af899ab6300a86867b8223368b9e814889f59457ddfe/log-enricher-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6dfd195da60d3cc3ea104be455cc5c8b", "sha256": "c836f5290477bc2e8f21da46b54b29062beba6c8b66201807c0c6300bf8a813f"}, "downloads": -1, "filename": "log_enricher-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6dfd195da60d3cc3ea104be455cc5c8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 4167, "upload_time": "2019-11-08T13:06:43", "upload_time_iso_8601": "2019-11-08T13:06:43.558784Z", "url": "https://files.pythonhosted.org/packages/35/e4/e3e5e5035dd08cdc755163992d8390b3d70ffc7c2a11d459595fc11fc853/log_enricher-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "633a471af0abb1c63d4edb4044f4eade", "sha256": "5dab579eba99f309dc46ce7a7c4cdff2e87d11f591b9dee95a5e97aa7e92c1cd"}, "downloads": -1, "filename": "log-enricher-0.1.4.tar.gz", "has_sig": false, "md5_digest": "633a471af0abb1c63d4edb4044f4eade", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4029, "upload_time": "2019-11-08T13:06:42", "upload_time_iso_8601": "2019-11-08T13:06:42.095222Z", "url": "https://files.pythonhosted.org/packages/bc/e8/49bdd418ca949baa560a046bede7368bf976026741592d7dc09f3a5ded64/log-enricher-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "dfcfae067fa6b69c620cb5276cba9442", "sha256": "dbf78f6a01c026ed714170a75ddf5bca6314ac951ca686d067ea4abed3346c10"}, "downloads": -1, "filename": "log_enricher-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "dfcfae067fa6b69c620cb5276cba9442", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4158, "upload_time": "2019-12-21T11:56:40", "upload_time_iso_8601": "2019-12-21T11:56:40.512426Z", "url": "https://files.pythonhosted.org/packages/c7/c3/a94a1e240848d986f83c5eb41a3f97f7188ac99996bbbed35d5721cb555e/log_enricher-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fad9cd17a117c66d2ece13a291b4271", "sha256": "7faa9af3342e6f5f24813042642e00f593b8cb0226b997cd87249e73797ce5b1"}, "downloads": -1, "filename": "log-enricher-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4fad9cd17a117c66d2ece13a291b4271", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4115, "upload_time": "2019-12-21T11:56:38", "upload_time_iso_8601": "2019-12-21T11:56:38.104684Z", "url": "https://files.pythonhosted.org/packages/ab/eb/55e7ceb75aee834da6b80955b73d5b9d13c2437302e116feab60107883ab/log-enricher-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "03b1122a267b4440381fc1b9d4fa3a51", "sha256": "643bdd568b9bf3f2ebc0b4263861d9af1e926ccdc102b253c0a9f421af91d128"}, "downloads": -1, "filename": "log_enricher-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "03b1122a267b4440381fc1b9d4fa3a51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4080, "upload_time": "2020-01-27T13:20:23", "upload_time_iso_8601": "2020-01-27T13:20:23.258252Z", "url": "https://files.pythonhosted.org/packages/6c/c3/cdb182bf38d84f394c3603504721c8d0bba8ad5de8bed346dd918644398e/log_enricher-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c5de6b854ae168ea09c0067517ef3fc", "sha256": "ea6caf50e5d2ccc1f8b94cbaed8a57fde998fc3695ed665c6cd9b054dcd7f890"}, "downloads": -1, "filename": "log-enricher-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3c5de6b854ae168ea09c0067517ef3fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4036, "upload_time": "2020-01-27T13:20:21", "upload_time_iso_8601": "2020-01-27T13:20:21.695191Z", "url": "https://files.pythonhosted.org/packages/42/50/ffe6993c5b29a130a85ff26ec035801b9131cfb08a0aeadbc66c401bc9fb/log-enricher-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03b1122a267b4440381fc1b9d4fa3a51", "sha256": "643bdd568b9bf3f2ebc0b4263861d9af1e926ccdc102b253c0a9f421af91d128"}, "downloads": -1, "filename": "log_enricher-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "03b1122a267b4440381fc1b9d4fa3a51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4080, "upload_time": "2020-01-27T13:20:23", "upload_time_iso_8601": "2020-01-27T13:20:23.258252Z", "url": "https://files.pythonhosted.org/packages/6c/c3/cdb182bf38d84f394c3603504721c8d0bba8ad5de8bed346dd918644398e/log_enricher-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c5de6b854ae168ea09c0067517ef3fc", "sha256": "ea6caf50e5d2ccc1f8b94cbaed8a57fde998fc3695ed665c6cd9b054dcd7f890"}, "downloads": -1, "filename": "log-enricher-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3c5de6b854ae168ea09c0067517ef3fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4036, "upload_time": "2020-01-27T13:20:21", "upload_time_iso_8601": "2020-01-27T13:20:21.695191Z", "url": "https://files.pythonhosted.org/packages/42/50/ffe6993c5b29a130a85ff26ec035801b9131cfb08a0aeadbc66c401bc9fb/log-enricher-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:22 2020"}