{"info": {"author": "Gilles Fabio", "author_email": "gilles.fabio@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "django-safety\n=============\n\n.. image:: https://secure.travis-ci.org/ulule/django-safety.png?branch=master\n    :alt: Build Status\n    :target: http://travis-ci.org/ulule/django-safety\n\n\n**Generic Django application for safer user accounts.**\n\nFeatures\n--------\n\nSessions\n~~~~~~~~\n\n* User can see all active sessions\n* User can disable a given active session\n* User can disable all active sessions\n\nForce password change\n~~~~~~~~~~~~~~~~~~~~~\n\n* Administrators can require a password change for any user\n\nWorkflows\n---------\n\nSessions\n~~~~~~~~\n\n1. User logs in\n2. We connect the logic to the ``user_logged_in`` signal\n3. We create a new ``safety.models.Session`` instance\n4. User can see the list of her sessions (with IP, last activity and device information)\n5. User can delete a given session in the list\n6. We delete both the related ``safety.models.Session`` instance and related session in store\n7. User can delete all active sessions excepted the current one\n8. We proceed the same way: deleting instances and related sessions from store\n9. User logs out\n10. We connect the logic to the ``user_logged_out`` signal\n11. We delete the related ``safety.models.Session`` instance\n\nForce password change\n~~~~~~~~~~~~~~~~~~~~~\n\n1. Administrator creates a ``PasswordChange`` instance and sets ``required`` to ``True``\n2. When user logs in, it will be redirected to password change form\n3. Until the user does not change its password, it is not authorized to go elsewhere\n4. User changes its password\n5. It is now authorized to go elsewhere\n\nInstallation\n------------\n\nInstalling prerequisites\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nGeoIP library must be installed on your server.\n\nOn OS X with Homebrew:\n\n.. code-block:: bash\n\n    brew install geoip\n\nYou also need the GeoIP databases.\n\nFor Django >= 1.9, download City and Country databases as binary (not CSV):\n\nhttp://dev.maxmind.com/geoip/geoip2/geolite2/\n\nFor Django 1.8, download City and Country legacy databases as binary (not CSV):\n\nhttp://dev.maxmind.com/geoip/legacy/geolite/\n\nCreate a directory wherever you want and uncompress these archives this\ndirectory. Once done, set ``GEOIP_PATH`` setting pointing to this directory:\n\n.. code-block:: python\n\n    GEOIP_PATH = '/absolute/path/to/maxmind/db/directory'\n\nInstalling django-safety\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall\n\n.. code-block:: bash\n\n    $ pip install django-safety\n\nIn your ``settings.py``, add ``safety`` to ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        # Your other apps here.\n        'safety',\n    )\n\nIn your ``urls.py``, include ``safety.urls`` under ``safety`` namespace.\n\n.. code-block:: python\n\n    urlpatterns = [\n        # Your other URLs here.\n        url(r'^security/', include('safety.urls', namespace='safety')),\n    ]\n\nSynchronize the database:\n\n.. code-block:: bash\n\n    $ python manage.py migrate safety\n\nGreat. The session feature is ready.\n\nIf you want to enable the \"force password change\" feature, read the next.\n\nEnabling \"force password change\" feature\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo enable this feature, you have two choices:\n\n* You want to protect only specific views? Use ``password_change_required()`` decorator\n* You want to protect your whole application? Use ``PasswordChangeMiddleware`` middleware\n\nThe decorator works as any Django view decorator.\n\n.. code-block:: python\n\n    #\n    # In your urls.py\n    #\n\n    from safety.decorators import password_change_required\n    from .views import protect_me\n\n    urlpatterns = [\n        # Other URLs here.\n        url(r'^protect-me/$', password_change_required(protect_me)),\n    ]\n\n    #\n    # Or in your views.py (it's up to you)\n    #\n    from django.shortcuts import render\n    from safety.decorators import password_change_required\n\n    @password_change_required\n    def protect_me(request):\n        return render(request, 'protect_me.html')\n\nThe middleware works as any Django middleware.\n\nAdd ``safety.middleware.PasswordChangeMiddleware`` middleware in your ``settings.py``:\n\n.. code-block:: python\n\n    MIDDLEWARE_CLASSES = [\n        'django.middleware.security.SecurityMiddleware',\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.middleware.common.CommonMiddleware',\n        'django.middleware.csrf.CsrfViewMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n        'django.contrib.messages.middleware.MessageMiddleware',\n        'django.middleware.clickjacking.XFrameOptionsMiddleware',\n        'safety.middleware.PasswordChangeMiddleware',\n    ]\n\nDone.\n\nSettings\n--------\n\n+-------------------------------------------+---------------------------------------------------------------------+\n| Setting                                   | Description                                                         |\n+===========================================+=====================================================================+\n| ``SAFETY_LOGIN_REQUIRED_MIXIN_CLASS``     | The Python path to your own \"login required\" mixin class.           |\n|                                           | Defaults to ``safety.mixins.LoginRequiredMixin``.                   |\n+-------------------------------------------+---------------------------------------------------------------------+\n| ``SAFETY_IP_RESOLVER``                    | The Python path to your own IP resolver callable.                   |\n|                                           | Defaults to ``safety.resolvers.remote_addr_ip``.                    |\n+-------------------------------------------+---------------------------------------------------------------------+\n| ``SAFETY_DEVICE_RESOLVER``                | The Python path to your own device resolver callable.               |\n|                                           | Defaults to ``safety.resolvers.device``.                            |\n+-------------------------------------------+---------------------------------------------------------------------+\n| ``SAFETY_LOCATION_RESOLVER``              | The Python path to your own location resolver callable.             |\n|\u00a0                                          |\u00a0Defaults to ``safety.resolvers.location``.                          |\n+-------------------------------------------+---------------------------------------------------------------------+\n\nDevelopment\n-----------\n\n.. code-block:: bash\n\n    # Install pip and virtualenv\n    $ sudo easy_install pip\n    $ sudo pip install virtualenv\n\n    # Clone repository\n    $ git clone https://github.com/ulule/django-safety.git\n\n    # Setup your development environment\n    $ cd django-safety\n    $ make devenv\n    $ source .venv/bin/activate\n\n    # Download GeoIP databases\n    $ make geoip\n\n    # Launch test suite\n    $ make test\n\n    # Launch test suite with tox to check compatibility\n    $ tox\n\n    # Run the example project (default user username is \"johndoe\")\n    $ make example-migrate\n    $ make example-user\n    $ make example-serve\n\nContribute\n----------\n\n1. Create an issue (**before** submitting pull requests)\n2. Submit your bug or feature request\n3. You want to fix or code it yourself? Great! Fork the project\n4. Create a branch, always add tests and make sure they all pass with ``tox``\n5. Submit a pull request\n\nCompatibility\n-------------\n\n- python 2.7: Django 1.8, 1.9\n- Python 3.4: Django 1.8, 1.9\n- Python 3.5: Django 1.8, 1.9", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ulule/django-safety", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-safety", "package_url": "https://pypi.org/project/django-safety/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-safety/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/ulule/django-safety"}, "release_url": "https://pypi.org/project/django-safety/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Generic Django application for safer user accounts", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/ulule/django-safety\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e99e485493572c940fbfc4069316a3f938f1b20/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f756c756c652f646a616e676f2d7361666574792e706e673f6272616e63683d6d6173746572\"></a>\n<p><strong>Generic Django application for safer user accounts.</strong></p>\n<div id=\"features\">\n<h2>Features</h2>\n<div id=\"sessions\">\n<h3>Sessions</h3>\n<ul>\n<li>User can see all active sessions</li>\n<li>User can disable a given active session</li>\n<li>User can disable all active sessions</li>\n</ul>\n</div>\n<div id=\"force-password-change\">\n<h3>Force password change</h3>\n<ul>\n<li>Administrators can require a password change for any user</li>\n</ul>\n</div>\n</div>\n<div id=\"workflows\">\n<h2>Workflows</h2>\n<div id=\"id1\">\n<h3>Sessions</h3>\n<ol>\n<li>User logs in</li>\n<li>We connect the logic to the <tt>user_logged_in</tt> signal</li>\n<li>We create a new <tt>safety.models.Session</tt> instance</li>\n<li>User can see the list of her sessions (with IP, last activity and device information)</li>\n<li>User can delete a given session in the list</li>\n<li>We delete both the related <tt>safety.models.Session</tt> instance and related session in store</li>\n<li>User can delete all active sessions excepted the current one</li>\n<li>We proceed the same way: deleting instances and related sessions from store</li>\n<li>User logs out</li>\n<li>We connect the logic to the <tt>user_logged_out</tt> signal</li>\n<li>We delete the related <tt>safety.models.Session</tt> instance</li>\n</ol>\n</div>\n<div id=\"id2\">\n<h3>Force password change</h3>\n<ol>\n<li>Administrator creates a <tt>PasswordChange</tt> instance and sets <tt>required</tt> to <tt>True</tt></li>\n<li>When user logs in, it will be redirected to password change form</li>\n<li>Until the user does not change its password, it is not authorized to go elsewhere</li>\n<li>User changes its password</li>\n<li>It is now authorized to go elsewhere</li>\n</ol>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"installing-prerequisites\">\n<h3>Installing prerequisites</h3>\n<p>GeoIP library must be installed on your server.</p>\n<p>On OS X with Homebrew:</p>\n<pre>brew install geoip\n</pre>\n<p>You also need the GeoIP databases.</p>\n<p>For Django &gt;= 1.9, download City and Country databases as binary (not CSV):</p>\n<p><a href=\"http://dev.maxmind.com/geoip/geoip2/geolite2/\" rel=\"nofollow\">http://dev.maxmind.com/geoip/geoip2/geolite2/</a></p>\n<p>For Django 1.8, download City and Country legacy databases as binary (not CSV):</p>\n<p><a href=\"http://dev.maxmind.com/geoip/legacy/geolite/\" rel=\"nofollow\">http://dev.maxmind.com/geoip/legacy/geolite/</a></p>\n<p>Create a directory wherever you want and uncompress these archives this\ndirectory. Once done, set <tt>GEOIP_PATH</tt> setting pointing to this directory:</p>\n<pre><span class=\"n\">GEOIP_PATH</span> <span class=\"o\">=</span> <span class=\"s1\">'/absolute/path/to/maxmind/db/directory'</span>\n</pre>\n</div>\n<div id=\"installing-django-safety\">\n<h3>Installing django-safety</h3>\n<p>Install</p>\n<pre>$ pip install django-safety\n</pre>\n<p>In your <tt>settings.py</tt>, add <tt>safety</tt> to <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># Your other apps here.</span>\n    <span class=\"s1\">'safety'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>In your <tt>urls.py</tt>, include <tt>safety.urls</tt> under <tt>safety</tt> namespace.</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># Your other URLs here.</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^security/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'safety.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s1\">'safety'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Synchronize the database:</p>\n<pre>$ python manage.py migrate safety\n</pre>\n<p>Great. The session feature is ready.</p>\n<p>If you want to enable the \u201cforce password change\u201d feature, read the next.</p>\n</div>\n<div id=\"enabling-force-password-change-feature\">\n<h3>Enabling \u201cforce password change\u201d feature</h3>\n<p>To enable this feature, you have two choices:</p>\n<ul>\n<li>You want to protect only specific views? Use <tt>password_change_required()</tt> decorator</li>\n<li>You want to protect your whole application? Use <tt>PasswordChangeMiddleware</tt> middleware</li>\n</ul>\n<p>The decorator works as any Django view decorator.</p>\n<pre><span class=\"c1\">#</span>\n<span class=\"c1\"># In your urls.py</span>\n<span class=\"c1\">#</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">safety.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">password_change_required</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.views</span> <span class=\"kn\">import</span> <span class=\"n\">protect_me</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># Other URLs here.</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^protect-me/$'</span><span class=\"p\">,</span> <span class=\"n\">password_change_required</span><span class=\"p\">(</span><span class=\"n\">protect_me</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Or in your views.py (it's up to you)</span>\n<span class=\"c1\">#</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n<span class=\"kn\">from</span> <span class=\"nn\">safety.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">password_change_required</span>\n\n<span class=\"nd\">@password_change_required</span>\n<span class=\"k\">def</span> <span class=\"nf\">protect_me</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'protect_me.html'</span><span class=\"p\">)</span>\n</pre>\n<p>The middleware works as any Django middleware.</p>\n<p>Add <tt>safety.middleware.PasswordChangeMiddleware</tt> middleware in your <tt>settings.py</tt>:</p>\n<pre><span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'django.middleware.security.SecurityMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.sessions.middleware.SessionMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.middleware.common.CommonMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.middleware.csrf.CsrfViewMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.auth.middleware.AuthenticationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.auth.middleware.SessionAuthenticationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.messages.middleware.MessageMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.middleware.clickjacking.XFrameOptionsMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'safety.middleware.PasswordChangeMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Done.</p>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>SAFETY_LOGIN_REQUIRED_MIXIN_CLASS</tt></td>\n<td>The Python path to your own \u201clogin required\u201d mixin class.\nDefaults to <tt>safety.mixins.LoginRequiredMixin</tt>.</td>\n</tr>\n<tr><td><tt>SAFETY_IP_RESOLVER</tt></td>\n<td>The Python path to your own IP resolver callable.\nDefaults to <tt>safety.resolvers.remote_addr_ip</tt>.</td>\n</tr>\n<tr><td><tt>SAFETY_DEVICE_RESOLVER</tt></td>\n<td>The Python path to your own device resolver callable.\nDefaults to <tt>safety.resolvers.device</tt>.</td>\n</tr>\n<tr><td><tt>SAFETY_LOCATION_RESOLVER</tt></td>\n<td>The Python path to your own location resolver callable.\nDefaults to <tt>safety.resolvers.location</tt>.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<pre><span class=\"c1\"># Install pip and virtualenv\n</span>$ sudo easy_install pip\n$ sudo pip install virtualenv\n\n<span class=\"c1\"># Clone repository\n</span>$ git clone https://github.com/ulule/django-safety.git\n\n<span class=\"c1\"># Setup your development environment\n</span>$ <span class=\"nb\">cd</span> django-safety\n$ make devenv\n$ <span class=\"nb\">source</span> .venv/bin/activate\n\n<span class=\"c1\"># Download GeoIP databases\n</span>$ make geoip\n\n<span class=\"c1\"># Launch test suite\n</span>$ make <span class=\"nb\">test</span>\n\n<span class=\"c1\"># Launch test suite with tox to check compatibility\n</span>$ tox\n\n<span class=\"c1\"># Run the example project (default user username is \"johndoe\")\n</span>$ make example-migrate\n$ make example-user\n$ make example-serve\n</pre>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ol>\n<li>Create an issue (<strong>before</strong> submitting pull requests)</li>\n<li>Submit your bug or feature request</li>\n<li>You want to fix or code it yourself? Great! Fork the project</li>\n<li>Create a branch, always add tests and make sure they all pass with <tt>tox</tt></li>\n<li>Submit a pull request</li>\n</ol>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<ul>\n<li>python 2.7: Django 1.8, 1.9</li>\n<li>Python 3.4: Django 1.8, 1.9</li>\n<li>Python 3.5: Django 1.8, 1.9</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2007665, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b699d628d91b4749140c18e945e6bc31", "sha256": "c00378bdf74988cb562206b3825bcfaba6addd3d9ebdff9f8edb9e2f27ac143b"}, "downloads": -1, "filename": "django-safety-0.1.0.tar.gz", "has_sig": true, "md5_digest": "b699d628d91b4749140c18e945e6bc31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13216, "upload_time": "2016-03-15T11:46:17", "upload_time_iso_8601": "2016-03-15T11:46:17.283503Z", "url": "https://files.pythonhosted.org/packages/49/f3/2e8e2f9fad5bd1abe4a3792fe7e12be28f32ae6c059291f75968b5251db1/django-safety-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b699d628d91b4749140c18e945e6bc31", "sha256": "c00378bdf74988cb562206b3825bcfaba6addd3d9ebdff9f8edb9e2f27ac143b"}, "downloads": -1, "filename": "django-safety-0.1.0.tar.gz", "has_sig": true, "md5_digest": "b699d628d91b4749140c18e945e6bc31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13216, "upload_time": "2016-03-15T11:46:17", "upload_time_iso_8601": "2016-03-15T11:46:17.283503Z", "url": "https://files.pythonhosted.org/packages/49/f3/2e8e2f9fad5bd1abe4a3792fe7e12be28f32ae6c059291f75968b5251db1/django-safety-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:49 2020"}