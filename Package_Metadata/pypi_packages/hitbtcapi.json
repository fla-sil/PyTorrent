{"info": {"author": "Pulkit Gupta", "author_email": "gupta.pulkit91@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "hitbtcapi\n===================\n\nREST API Client for HitBTC\n\n|logo|\n\n.. |logo| image:: https://upload.wikimedia.org/wikipedia/en/9/9f/HitBTC_logo.png\n\nFeatures\n=========\n\n- Convenient methods for making API calls using keyword arguments\n\n    - Automatic classification into form-data or query parameters\n    - Automatic packing into JSON\n\n- Near 100% test coverage.\n- Tab-completable methods and attributes when using `IPython <http://ipython.org/>`_.\n\n\nInstallation\n=============\n\n``hitbtcapi`` is available on `PYPI <https://pypi.python.org/pypi>`_. Install with ``pip``:\n\n.. code:: bash\n\n    $ pip install hitbtcapi\n\nor with ``easy_install``:\n\n.. code:: bash\n\n    $ easy_install hitbtcapi\n\nThe library is currently tested against Python versions 2.7 and 3.4+.\n\nAPI Reference\n===============\n\nThe official documentation can be found on the `HitBTC API reference page <https://api.hitbtc.com/>`_. You can also `explore the API <https://api.hitbtc.com/api/2/explore/>`_ using Swagger UI.\n\n\nPrerequisites\n===============\n\nThe first thing you need to do is to `Sign Up with HitBTC <https://hitbtc.com/signupapp>`_.\n\nNext, you need to obtain an **API Key** and an **API Secret**. If you're writing code for your own HitBTC account, you can create API keys on `HitBTC API Settings <https://hitbtc.com/settings/api-keys>`_ page. You can create multiple API keys with different permissions for your applications.\n\nNOTE: Make sure to enable appropriate permissions for the API key (some require email confirmation).\n\nGetting started\n=================\n\nCreate a ``Client`` object for interacting with the API:\n\n.. code:: python\n\n    from hitbtcapi.client import Client\n\n    api_key = 'your api key'\n    api_secret = 'your api secret'\n\n    client = Client(api_key,api_secret)\n\nError handling\n--------------\nAll errors occurring during interaction with the API will be raised as exceptions. These exceptions will be subclasses of ``hitbtcapi.errors.HitBTCError``. When the error involves an API request and/or response, the error will be a subclass of ``hitbtcapi.errors.APIError``, and include more information about the failed interaction. For full details of error responses, please refer to the `relevant API documentation <https://api.hitbtc.com/#error-response>`_.\n\n+-------------------------+----------------------+\n|          Error          |    HTTP Status code  |\n+=========================+======================+\n| InvalidRequestError     |          400         |\n+-------------------------+----------------------+\n| AuthenticationError     |          401         |\n+-------------------------+----------------------+\n| TwoFactorRequiredError  |          402         |\n+-------------------------+----------------------+\n| InvalidScopeError       |          403         |\n+-------------------------+----------------------+\n| NotFoundError           |          404         |\n+-------------------------+----------------------+\n| ValidationError         |          422         |\n+-------------------------+----------------------+\n| RateLimitExceededError  |          429         |\n+-------------------------+----------------------+\n| InternalServerError     |          500         |\n+-------------------------+----------------------+\n| ServiceUnavailableError |          503         |\n+-------------------------+----------------------+\n| GatewayTimeoutError     |          504         |\n+-------------------------+----------------------+\n\nUsage\n-------\nI've done my best to make the code clean, commented, and understandable; however it may not be exhaustive. For more details, please refer to the `HitBTC API official documentation <https://api.hitbtc.com/>`_ or the `API Explorer <https://api.hitbtc.com/api/2/explore/>`_.\n\n**IN SHORT**\n\n- **Use args for URI paths**\n- **Use kwargs for formData or query parameters**\n\n\n**Public API (Market Data)**\n\nGet available currencies, tokens, ICO etc.\n\n.. code:: python\n\n    client.get_currencies()\n    client.get_currency('BTC')\n\n\nGet currency symbols (currency pairs) traded on HitBTC exchange.\n\n.. code:: python\n\n    client.get_symbols()\n    client.get_symbol('ETHBTC')\n\n\nGet ticker information\n\n.. code:: python\n\n    client.get_tickers()\n    client.get_ticker('ETHBTC')\n\n\nGet trades for a specific symbol\n\n.. code:: python\n\n    client.get_trades('ETHBTC')\n    client.get_trades('ETHBTC',sort='ASC',limit=10)\n\n    # Caution: from is a python keyword,\n    # so cannot be used as a keyword argument to a function,\n    # need to use dict instead\n    import datetime\n    today = datetime.datetime.now()\n    yesterday = today - datetime.timedelta(days=1)\n    params = {\n        'from': today.isoformat(),\n        'to': yesterday.isoformat()\n    }\n    client.get_trades('ETHBTC',sort='ASC',limit=10,**params)\n\n\nGet orderbook (electronic list of buy and sell orders) for a specific symbol, organized by price level\n\n.. code:: python\n\n    client.get_orderbook('ETHBTC')\n    client.get_orderbook('ETHBTC',limit=10)\n\n\nGet candles for a specific symbol (used for `OHLC <https://en.wikipedia.org/wiki/Open-high-low-close_chart>`_)\n\n.. code:: python\n\n    client.get_candles('ETHBTC')\n    client.get_candles('ETHBTC', limit=10, period='H1')\n\n\n**Trading**\n\nGet trading balance for your account\n\n.. code:: python\n\n    client.get_trading_balance()\n\n\nGet a list of active orders or a specific active order\n\n.. code:: python\n\n    client.get_active_orders()\n    client.get_active_orders(symbol='ETHBTC')\n\n    client.get_active_order('840450210')\n    client.get_active_order('840450210', wait=30000)\n\n\nCreate a new order\n\n.. code:: python\n\n    client.create_order(symbol='ETHBTC',side='buy',quantity='0.063',price='0.046016') # required parameters\n    client.create_order(symbol='ETHBTC',side='buy',quantity='0.063',price='0.046016', type='stopLimit', stopPrice='0.073')\n\n\nUpdate an existing order\n\n.. code:: python\n\n    client.update_order('840450210',symbol='ETHBTC',side='buy',quantity='0.063',price='0.046016',timeInForce='GDC')\n\n\nCancel all open orders or a specific open order\n\n.. code:: python\n\n    client.cancel_open_orders()\n    client.cancel_open_orders(symbol='ETHBTC')\n\n    client.cancel_order('840450210')\n\n\nGet personal trading commission rate\n\n.. code:: python\n\n    client.get_trading_fee('ETHBTC')\n\n\n**Trading History**\n\nGet order history\n\n.. code:: python\n\n    client.get_order_history()\n    client.get_order_history(symbol='ETHBTC',limit=10)\n\n    # Caution: from is a python keyword,\n    # so cannot be used as a keyword argument to a function,\n    # need to use dict instead\n    import datetime\n    today = datetime.datetime.now()\n    yesterday = today - datetime.timedelta(days=1)\n    params = {\n        'from': today.isoformat(),\n        'to': yesterday.isoformat()\n    }\n    client.get_order_history(symbol='ETHBTC',limit=10,**params)\n\nGet trade history\n\n.. code:: python\n\n    client.get_trade_history()\n    client.get_trade_history(symbol='ETHBTC',limit=10)\n\n    # Caution: from is a python keyword,\n    # so cannot be used as a keyword argument to a function,\n    # need to use dict instead\n    import datetime\n    today = datetime.datetime.now()\n    yesterday = today - datetime.timedelta(days=1)\n    params = {\n        'from': today.isoformat(),\n        'to': yesterday.isoformat()\n    }\n    client.get_trade_history(symbol='ETHBTC',limit=10,**params)\n\n\nGet trades by order\n\n.. code:: python\n\n    client.get_trades_by_orderid('840450210')\n\n**Account Information**\n\nGet account balance\n\n.. code:: python\n\n    client.get_account_balance()\n\nGet deposit address for the cryptocurrency\n\n.. code:: python\n\n    client.get_deposit_address('BTC')\n\nAdd deposit address for the cryptocurrency\n\n.. code:: python\n\n    client.add_deposit_address('BTC')\n\nWithdraw cryptocurrency\n\n.. code:: python\n\n    client.withdraw('BTC', amount='0.01', address='sOmE-cuRR-encY-addR-essH') # required parameters\n    client.withdraw('BTC', amount='0.01', address='sOmE-cuRR-encY-addR-essH', networkFee='0.0003', includeFee=True, autoCommit=False)\n\n\nCommit cryptocurrency withdrawal\n\n.. code:: python\n\n    client.commit_withdrawal('d2ce578f-647d-4fa0-b1aa-4a27e5ee597b')\n\nRollback cryptocurrency withdrawal\n\n.. code:: python\n\n    client.rollback_withdrawal('d2ce578f-647d-4fa0-b1aa-4a27e5ee597b')\n\nTransfer money between trading and account\n\n.. code:: python\n\n    client.transfer_to_trading(currency='BTC',amount='0.023',type='bankToExchange')\n\nGet all transactions or by id\n\n.. code:: python\n\n    client.get_account_transactions()\n    client.get_account_transactions(currency='BTC',sort='ASC',limit=10)\n\n    # Caution: from is a python keyword,\n    # so cannot be used as a keyword argument to a function,\n    # need to use dict instead\n    import datetime\n    today = datetime.datetime.now()\n    yesterday = today - datetime.timedelta(days=1)\n    params = {\n        'from': today.isoformat(),\n        'to': yesterday.isoformat()\n    }\n    client.get_trade_history(currency='BTC',sort='ASC',limit=10,**params)\n\n    client.get_account_transaction('d2ce578f-647d-4fa0-b1aa-4a27e5ee597b')\n\n\nTesting / Contributing\n=======================\nAny contribution is welcome! The process is simple:\n\n* Fork this repo\n* Make your changes\n* Run the tests (for multiple versions: preferred)\n* Submit a pull request.\n\n\nTesting for your current python version\n------------------------------------------\n\nTests are run via `nosetest <https://nose.readthedocs.io/en/latest/>`_. To run the tests, clone the repository and then:\n\n.. code:: bash\n\n    # Install the required dependencies\n    $ pip install -r requirements.txt\n    $ pip install -r test-requirements.txt\n\n    # Run the tests\n    $ make tests\n\n\nIf you'd also like to generate an HTML coverage report (useful for figuring out which lines of code are actually being tested), make sure the requirements are installed and then run:\n\n.. code:: bash\n\n    $ make coverage\n\n\nTesting for multiple python versions\n------------------------------------------\n\nI am using `tox <http://tox.readthedocs.io/en/latest/install.html>`_ to run the test suite against multiple versions of Python. Tox requires the appropriate Python interpreters to run the tests in different environments. I would recommend using `pyenv <https://github.com/pyenv/pyenv#installation>`_ for this.\n\n\nHowever, the process is a little unintuitive because ``tox`` does not seem to work with multiple versions of python (installed via ``pyenv``) when inside a ``pyenv`` virtual environment. So, first deactivate your pyenv virtual environment:\n\n.. code:: bash\n\n    $ (hitbtcapi-venv) pyenv deactivate\n\n\nand then install `tox` with pip or easy_install:\n\n.. code:: bash\n\n    $ pip install tox # or\n    $ easy_install tox\n\n\nInstall python versions which you want to test:\n\n.. code:: bash\n\n    $ pyenv install 2.7.14\n    $ pyenv install 3.5.0\n    $ pyenv install 3.6.0\n\nand so forth. Now, in your project directory:\n\n.. code:: bash\n\n    # all versions which are in tox.ini file\n    $ pyenv local 2.7.14 3.5.0 3.6.0\n\n    # run the tests for all the above versions\n    $ tox\n\n\nLicense\n=========\n\nThis project is licensed under the MIT License. See the LICENSE file for more details.\n\nAcknowledgements\n=================\n\n- `HitBTC REST API example <https://github.com/hitbtc-com/hitbtc-api/blob/master/example_rest.py>`_", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/pulkit1991/hitbtcapi/tarball/1.1.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pulkit1991/hitbtcapi", "keywords": "hitbtc,api,client,bitcoin,altcoin,trading", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hitbtcapi", "package_url": "https://pypi.org/project/hitbtcapi/", "platform": "", "project_url": "https://pypi.org/project/hitbtcapi/", "project_urls": {"Download": "https://github.com/pulkit1991/hitbtcapi/tarball/1.1.1", "Homepage": "https://github.com/pulkit1991/hitbtcapi"}, "release_url": "https://pypi.org/project/hitbtcapi/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "HitBTC API Client library", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"hitbtcapi\">\n<h2>hitbtcapi</h2>\n<p>REST API Client for HitBTC</p>\n<p><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8bc30fa4a7f51f2cb37126172f49d194542a7bb/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f656e2f392f39662f4869744254435f6c6f676f2e706e67\"></p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Convenient methods for making API calls using keyword arguments</p>\n<blockquote>\n<ul>\n<li>Automatic classification into form-data or query parameters</li>\n<li>Automatic packing into JSON</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Near 100% test coverage.</p>\n</li>\n<li><p>Tab-completable methods and attributes when using <a href=\"http://ipython.org/\" rel=\"nofollow\">IPython</a>.</p>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>hitbtcapi</tt> is available on <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PYPI</a>. Install with <tt>pip</tt>:</p>\n<pre>$ pip install hitbtcapi\n</pre>\n<p>or with <tt>easy_install</tt>:</p>\n<pre>$ easy_install hitbtcapi\n</pre>\n<p>The library is currently tested against Python versions 2.7 and 3.4+.</p>\n</div>\n<div id=\"api-reference\">\n<h2>API Reference</h2>\n<p>The official documentation can be found on the <a href=\"https://api.hitbtc.com/\" rel=\"nofollow\">HitBTC API reference page</a>. You can also <a href=\"https://api.hitbtc.com/api/2/explore/\" rel=\"nofollow\">explore the API</a> using Swagger UI.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>The first thing you need to do is to <a href=\"https://hitbtc.com/signupapp\" rel=\"nofollow\">Sign Up with HitBTC</a>.</p>\n<p>Next, you need to obtain an <strong>API Key</strong> and an <strong>API Secret</strong>. If you\u2019re writing code for your own HitBTC account, you can create API keys on <a href=\"https://hitbtc.com/settings/api-keys\" rel=\"nofollow\">HitBTC API Settings</a> page. You can create multiple API keys with different permissions for your applications.</p>\n<p>NOTE: Make sure to enable appropriate permissions for the API key (some require email confirmation).</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Create a <tt>Client</tt> object for interacting with the API:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hitbtcapi.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'your api key'</span>\n<span class=\"n\">api_secret</span> <span class=\"o\">=</span> <span class=\"s1\">'your api secret'</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span><span class=\"n\">api_secret</span><span class=\"p\">)</span>\n</pre>\n<div id=\"error-handling\">\n<h3>Error handling</h3>\n<p>All errors occurring during interaction with the API will be raised as exceptions. These exceptions will be subclasses of <tt>hitbtcapi.errors.HitBTCError</tt>. When the error involves an API request and/or response, the error will be a subclass of <tt>hitbtcapi.errors.APIError</tt>, and include more information about the failed interaction. For full details of error responses, please refer to the <a href=\"https://api.hitbtc.com/#error-response\" rel=\"nofollow\">relevant API documentation</a>.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Error</th>\n<th>HTTP Status code</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>InvalidRequestError</td>\n<td>400</td>\n</tr>\n<tr><td>AuthenticationError</td>\n<td>401</td>\n</tr>\n<tr><td>TwoFactorRequiredError</td>\n<td>402</td>\n</tr>\n<tr><td>InvalidScopeError</td>\n<td>403</td>\n</tr>\n<tr><td>NotFoundError</td>\n<td>404</td>\n</tr>\n<tr><td>ValidationError</td>\n<td>422</td>\n</tr>\n<tr><td>RateLimitExceededError</td>\n<td>429</td>\n</tr>\n<tr><td>InternalServerError</td>\n<td>500</td>\n</tr>\n<tr><td>ServiceUnavailableError</td>\n<td>503</td>\n</tr>\n<tr><td>GatewayTimeoutError</td>\n<td>504</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>I\u2019ve done my best to make the code clean, commented, and understandable; however it may not be exhaustive. For more details, please refer to the <a href=\"https://api.hitbtc.com/\" rel=\"nofollow\">HitBTC API official documentation</a> or the <a href=\"https://api.hitbtc.com/api/2/explore/\" rel=\"nofollow\">API Explorer</a>.</p>\n<p><strong>IN SHORT</strong></p>\n<ul>\n<li><strong>Use args for URI paths</strong></li>\n<li><strong>Use kwargs for formData or query parameters</strong></li>\n</ul>\n<p><strong>Public API (Market Data)</strong></p>\n<p>Get available currencies, tokens, ICO etc.</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_currencies</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_currency</span><span class=\"p\">(</span><span class=\"s1\">'BTC'</span><span class=\"p\">)</span>\n</pre>\n<p>Get currency symbols (currency pairs) traded on HitBTC exchange.</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_symbols</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_symbol</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n</pre>\n<p>Get ticker information</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_tickers</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_ticker</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n</pre>\n<p>Get trades for a specific symbol</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trades</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trades</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s1\">'ASC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Caution: from is a python keyword,</span>\n<span class=\"c1\"># so cannot be used as a keyword argument to a function,</span>\n<span class=\"c1\"># need to use dict instead</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"n\">today</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">yesterday</span> <span class=\"o\">=</span> <span class=\"n\">today</span> <span class=\"o\">-</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"n\">today</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"n\">yesterday</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trades</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s1\">'ASC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<p>Get orderbook (electronic list of buy and sell orders) for a specific symbol, organized by price level</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_orderbook</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_orderbook</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Get candles for a specific symbol (used for <a href=\"https://en.wikipedia.org/wiki/Open-high-low-close_chart\" rel=\"nofollow\">OHLC</a>)</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_candles</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_candles</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"s1\">'H1'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Trading</strong></p>\n<p>Get trading balance for your account</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trading_balance</span><span class=\"p\">()</span>\n</pre>\n<p>Get a list of active orders or a specific active order</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_active_orders</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_active_orders</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_active_order</span><span class=\"p\">(</span><span class=\"s1\">'840450210'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_active_order</span><span class=\"p\">(</span><span class=\"s1\">'840450210'</span><span class=\"p\">,</span> <span class=\"n\">wait</span><span class=\"o\">=</span><span class=\"mi\">30000</span><span class=\"p\">)</span>\n</pre>\n<p>Create a new order</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_order</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s1\">'buy'</span><span class=\"p\">,</span><span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"s1\">'0.063'</span><span class=\"p\">,</span><span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'0.046016'</span><span class=\"p\">)</span> <span class=\"c1\"># required parameters</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_order</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s1\">'buy'</span><span class=\"p\">,</span><span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"s1\">'0.063'</span><span class=\"p\">,</span><span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'0.046016'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'stopLimit'</span><span class=\"p\">,</span> <span class=\"n\">stopPrice</span><span class=\"o\">=</span><span class=\"s1\">'0.073'</span><span class=\"p\">)</span>\n</pre>\n<p>Update an existing order</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_order</span><span class=\"p\">(</span><span class=\"s1\">'840450210'</span><span class=\"p\">,</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s1\">'buy'</span><span class=\"p\">,</span><span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"s1\">'0.063'</span><span class=\"p\">,</span><span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'0.046016'</span><span class=\"p\">,</span><span class=\"n\">timeInForce</span><span class=\"o\">=</span><span class=\"s1\">'GDC'</span><span class=\"p\">)</span>\n</pre>\n<p>Cancel all open orders or a specific open order</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">cancel_open_orders</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">cancel_open_orders</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">cancel_order</span><span class=\"p\">(</span><span class=\"s1\">'840450210'</span><span class=\"p\">)</span>\n</pre>\n<p>Get personal trading commission rate</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trading_fee</span><span class=\"p\">(</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Trading History</strong></p>\n<p>Get order history</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_order_history</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_order_history</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Caution: from is a python keyword,</span>\n<span class=\"c1\"># so cannot be used as a keyword argument to a function,</span>\n<span class=\"c1\"># need to use dict instead</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"n\">today</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">yesterday</span> <span class=\"o\">=</span> <span class=\"n\">today</span> <span class=\"o\">-</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"n\">today</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"n\">yesterday</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_order_history</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<p>Get trade history</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trade_history</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trade_history</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Caution: from is a python keyword,</span>\n<span class=\"c1\"># so cannot be used as a keyword argument to a function,</span>\n<span class=\"c1\"># need to use dict instead</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"n\">today</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">yesterday</span> <span class=\"o\">=</span> <span class=\"n\">today</span> <span class=\"o\">-</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"n\">today</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"n\">yesterday</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trade_history</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'ETHBTC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<p>Get trades by order</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trades_by_orderid</span><span class=\"p\">(</span><span class=\"s1\">'840450210'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Account Information</strong></p>\n<p>Get account balance</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_account_balance</span><span class=\"p\">()</span>\n</pre>\n<p>Get deposit address for the cryptocurrency</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_deposit_address</span><span class=\"p\">(</span><span class=\"s1\">'BTC'</span><span class=\"p\">)</span>\n</pre>\n<p>Add deposit address for the cryptocurrency</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add_deposit_address</span><span class=\"p\">(</span><span class=\"s1\">'BTC'</span><span class=\"p\">)</span>\n</pre>\n<p>Withdraw cryptocurrency</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">withdraw</span><span class=\"p\">(</span><span class=\"s1\">'BTC'</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'0.01'</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'sOmE-cuRR-encY-addR-essH'</span><span class=\"p\">)</span> <span class=\"c1\"># required parameters</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">withdraw</span><span class=\"p\">(</span><span class=\"s1\">'BTC'</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'0.01'</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'sOmE-cuRR-encY-addR-essH'</span><span class=\"p\">,</span> <span class=\"n\">networkFee</span><span class=\"o\">=</span><span class=\"s1\">'0.0003'</span><span class=\"p\">,</span> <span class=\"n\">includeFee</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">autoCommit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Commit cryptocurrency withdrawal</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">commit_withdrawal</span><span class=\"p\">(</span><span class=\"s1\">'d2ce578f-647d-4fa0-b1aa-4a27e5ee597b'</span><span class=\"p\">)</span>\n</pre>\n<p>Rollback cryptocurrency withdrawal</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">rollback_withdrawal</span><span class=\"p\">(</span><span class=\"s1\">'d2ce578f-647d-4fa0-b1aa-4a27e5ee597b'</span><span class=\"p\">)</span>\n</pre>\n<p>Transfer money between trading and account</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">transfer_to_trading</span><span class=\"p\">(</span><span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s1\">'BTC'</span><span class=\"p\">,</span><span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'0.023'</span><span class=\"p\">,</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'bankToExchange'</span><span class=\"p\">)</span>\n</pre>\n<p>Get all transactions or by id</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_account_transactions</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_account_transactions</span><span class=\"p\">(</span><span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s1\">'BTC'</span><span class=\"p\">,</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s1\">'ASC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Caution: from is a python keyword,</span>\n<span class=\"c1\"># so cannot be used as a keyword argument to a function,</span>\n<span class=\"c1\"># need to use dict instead</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"n\">today</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">yesterday</span> <span class=\"o\">=</span> <span class=\"n\">today</span> <span class=\"o\">-</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"n\">today</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"n\">yesterday</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_trade_history</span><span class=\"p\">(</span><span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s1\">'BTC'</span><span class=\"p\">,</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s1\">'ASC'</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_account_transaction</span><span class=\"p\">(</span><span class=\"s1\">'d2ce578f-647d-4fa0-b1aa-4a27e5ee597b'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"testing-contributing\">\n<h2>Testing / Contributing</h2>\n<p>Any contribution is welcome! The process is simple:</p>\n<ul>\n<li>Fork this repo</li>\n<li>Make your changes</li>\n<li>Run the tests (for multiple versions: preferred)</li>\n<li>Submit a pull request.</li>\n</ul>\n<div id=\"testing-for-your-current-python-version\">\n<h3>Testing for your current python version</h3>\n<p>Tests are run via <a href=\"https://nose.readthedocs.io/en/latest/\" rel=\"nofollow\">nosetest</a>. To run the tests, clone the repository and then:</p>\n<pre><span class=\"c1\"># Install the required dependencies\n</span>$ pip install -r requirements.txt\n$ pip install -r test-requirements.txt\n\n<span class=\"c1\"># Run the tests\n</span>$ make tests\n</pre>\n<p>If you\u2019d also like to generate an HTML coverage report (useful for figuring out which lines of code are actually being tested), make sure the requirements are installed and then run:</p>\n<pre>$ make coverage\n</pre>\n</div>\n<div id=\"testing-for-multiple-python-versions\">\n<h3>Testing for multiple python versions</h3>\n<p>I am using <a href=\"http://tox.readthedocs.io/en/latest/install.html\" rel=\"nofollow\">tox</a> to run the test suite against multiple versions of Python. Tox requires the appropriate Python interpreters to run the tests in different environments. I would recommend using <a href=\"https://github.com/pyenv/pyenv#installation\" rel=\"nofollow\">pyenv</a> for this.</p>\n<p>However, the process is a little unintuitive because <tt>tox</tt> does not seem to work with multiple versions of python (installed via <tt>pyenv</tt>) when inside a <tt>pyenv</tt> virtual environment. So, first deactivate your pyenv virtual environment:</p>\n<pre>$ <span class=\"o\">(</span>hitbtcapi-venv<span class=\"o\">)</span> pyenv deactivate\n</pre>\n<p>and then install <cite>tox</cite> with pip or easy_install:</p>\n<pre>$ pip install tox <span class=\"c1\"># or\n</span>$ easy_install tox\n</pre>\n<p>Install python versions which you want to test:</p>\n<pre>$ pyenv install <span class=\"m\">2</span>.7.14\n$ pyenv install <span class=\"m\">3</span>.5.0\n$ pyenv install <span class=\"m\">3</span>.6.0\n</pre>\n<p>and so forth. Now, in your project directory:</p>\n<pre><span class=\"c1\"># all versions which are in tox.ini file\n</span>$ pyenv <span class=\"nb\">local</span> <span class=\"m\">2</span>.7.14 <span class=\"m\">3</span>.5.0 <span class=\"m\">3</span>.6.0\n\n<span class=\"c1\"># run the tests for all the above versions\n</span>$ tox\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the MIT License. See the LICENSE file for more details.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<ul>\n<li><a href=\"https://github.com/hitbtc-com/hitbtc-api/blob/master/example_rest.py\" rel=\"nofollow\">HitBTC REST API example</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3750857, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "99b286906f29881ad88421c91a45fa69", "sha256": "a223b789814ee180aac9546ca60630a2ddc15c9979f4674bdaf022d945672112"}, "downloads": -1, "filename": "hitbtcapi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "99b286906f29881ad88421c91a45fa69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8179, "upload_time": "2018-04-06T09:48:15", "upload_time_iso_8601": "2018-04-06T09:48:15.023625Z", "url": "https://files.pythonhosted.org/packages/c0/55/c265e69a3695ef6d13e6097ea45cd4a8b7035f1605f99f29a0a075ea98f7/hitbtcapi-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "86a980179c79cfd88164776cc6be958a", "sha256": "8e1a0138be4287fad214cc80107ff68ce0ae18bad4b4ab75e05fb70000da0ae8"}, "downloads": -1, "filename": "hitbtcapi-1.1.0.tar.gz", "has_sig": false, "md5_digest": "86a980179c79cfd88164776cc6be958a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11618, "upload_time": "2018-04-10T05:11:17", "upload_time_iso_8601": "2018-04-10T05:11:17.971108Z", "url": "https://files.pythonhosted.org/packages/fc/32/b6e088ace8c37c5922e5cb3b9f5cd798e07ec31f961e46758b1af91d3fc2/hitbtcapi-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "842eaf0c7d86d8704a22d7181c4309a5", "sha256": "453d84858021080327170ff0256ff184926e37ca7152584c1e483747dbe1df67"}, "downloads": -1, "filename": "hitbtcapi-1.1.1.tar.gz", "has_sig": false, "md5_digest": "842eaf0c7d86d8704a22d7181c4309a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11726, "upload_time": "2018-04-10T05:54:23", "upload_time_iso_8601": "2018-04-10T05:54:23.365694Z", "url": "https://files.pythonhosted.org/packages/08/b7/a5c9a53eb50faae0d1da1e34b6589ebaa011197649fd1176e18761adc67e/hitbtcapi-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "842eaf0c7d86d8704a22d7181c4309a5", "sha256": "453d84858021080327170ff0256ff184926e37ca7152584c1e483747dbe1df67"}, "downloads": -1, "filename": "hitbtcapi-1.1.1.tar.gz", "has_sig": false, "md5_digest": "842eaf0c7d86d8704a22d7181c4309a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11726, "upload_time": "2018-04-10T05:54:23", "upload_time_iso_8601": "2018-04-10T05:54:23.365694Z", "url": "https://files.pythonhosted.org/packages/08/b7/a5c9a53eb50faae0d1da1e34b6589ebaa011197649fd1176e18761adc67e/hitbtcapi-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:04 2020"}