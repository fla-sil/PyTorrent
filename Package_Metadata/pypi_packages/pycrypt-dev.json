{"info": {"author": "Ayan Bag", "author_email": "ayanbag9474@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "# PyCrypt\n\nA collection of **cryptographic algorithms** like Reverse Cipher , Caeser Cipher and many more to be used in encryption srcipts.It is easy to use and can be implement in any scripts with little or no knowledge of Cryptography.\n\n**It is still in devolopment**\n\n# Algoritms include:\n\nTill now I am able include only a handfull of cryptograhic algoritms and **looking forward to add more**.The algorithms included in PyCrypt package :\n* Reverse Cipher\n* Caeser Cipher\n* ROT13 Cipher\n* XOR Cipher\n* Affine Cipher\n* Viginere Cipher\n\n# Installation\n\nFrom Pypi:\n\nMake sure you're using `python3` and have `pip` installed and enabled. On the command line, simply run:\n\n`pip install pycrypt_dev`\n\nAnd From GitHub Repo:\n\nclone the repository\n\n`git clone https://github.com/ayanbag/pycrypt.git`\n\nNavigate into the project directory\n\n`cd pycrypt`\n\nInstall pydl and its dependencies\n\n`python setup.py install`\n\n\n# Tutorials\n\nTo use **PyCrypt** in your programs, you have to import it : \n\n`import py.pycrypt`\n\n\n* Reverse Cipher:\n\n`py.pycrypt.reverse.cipher(message)`\n\nwhere, message -> It is a set of characters or strings which you want to encrypt.\n\n**NOTE**:\n\nTo decrypt the current cipher text which is encrypted with Reverse Cipher,\n\n~~~~\nfrom pycrypt import reverse_cipher\ncipher_text=\"nayA'\nprint(reverse_cipher(cipher_text))\n~~~~\nOutput : Ayan\n\n* Caeser Cipher:\n\n`py.pycrypt.caesar_cipher(message,encode=False,decode=False)`\n\nwhere, message ->(string) It is a set of characters or strings which you want to encrypt or decrypt.\n\nencode ->(Boolean) Set *True* if you want to encrypt the current message.By default it is *False*.\n\ndecode ->(Boolean) Set *True* if you want to decrypt the current cipher text.By default it is *False*.\n\n* ROT13 Cipher:\n\n`py.pycrypt.rot13_cipher(message)`\n\nwhere, message ->(string) It is a set of characters or strings which you want to encrypt.\n\n**NOTE**:\n\nTo decrypt the current cipher text which is encrypted with ROT13 Cipher,\n\n~~~~\nfrom py.pycrypt import rot13_cipher\ncipher_text=\"nlna'\nprint(rot13_cipher(cipher_text))\n~~~~\nOutput : ayan\n\n* XOR Cipher:\n\n`py.pycrypt.xor_cipher(message,key)`\n\nwhere, message ->(string) It is a set of characters or strings which you want to encrypt.\n\nkey ->(string) Used to encrypt message.\n\n**NOTE**:\n\nTo decrypt the current cipher text which is encrypted with XOR Algoritms,\n\n~~~~\nfrom py.pycrypt import xor_cipher\ncipher_text=\"SHRZ'\nprint(xor_cipher(cipher_text))\n~~~~\nOutput : ayan\n\n* Affine Cipher:\n\n`py.pycrypt.affine_cipher(message,encode=False,decode=False)`\n\nwhere, message ->(string) It is a set of characters or strings which you want to encrypt or decrypt.\n\nencode ->(Boolean) Set *True* if you want to encrypt the current message.By default it is *False*.\n\ndecode ->(Boolean) Set *True* if you want to decrypt the current cipher text.By default it is *False*.\n\n* Viginere Cipher:\n\n`py.pycrypt.viginere_cipher(message,keyword='crypto',decencode=False,decode=False)`\n\nwhere, message ->(string) It is a set of characters or strings which you want to encrypt or decrypt.\n\nkeyword ->(string) Used to encrypt or decrypt message as key to the lock.\n\nencode ->(Boolean) Set *True* if you want to encrypt the current message.By default it is *False*.\n\ndecode ->(Boolean) Set *True* if you want to decrypt the current cipher text.By default it is *False*.\n\n# PyCrypt CLI\n\nPyCrypt comes with a interctive Help CLI. To activate the PyCrypt Help CLI , on the command line, simply run:\n\n`$ pycrypt`\n\n**or**\n\n`$ pycrypt [Funtion_Name]`\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ayanbag/pycrypt", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pycrypt-dev", "package_url": "https://pypi.org/project/pycrypt-dev/", "platform": "", "project_url": "https://pypi.org/project/pycrypt-dev/", "project_urls": {"Homepage": "https://github.com/ayanbag/pycrypt"}, "release_url": "https://pypi.org/project/pycrypt-dev/0.1.dev1/", "requires_dist": ["pyperclip"], "requires_python": ">=3.4", "summary": "A Python packege for Cryptographic algorithms", "version": "0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # PyCrypt<br><br>A collection of **cryptographic algorithms** like Reverse Cipher , Caeser Cipher and many more to be used in encryption srcipts.It is easy to use and can be implement in any scripts with little or no knowledge of Cryptography.<br><br>**It is still in devolopment**<br><br># Algoritms include:<br><br>Till now I am able include only a handfull of cryptograhic algoritms and **looking forward to add more**.The algorithms included in PyCrypt package :<br>* Reverse Cipher<br>* Caeser Cipher<br>* ROT13 Cipher<br>* XOR Cipher<br>* Affine Cipher<br>* Viginere Cipher<br><br># Installation<br><br>From Pypi:<br><br>Make sure you're using `python3` and have `pip` installed and enabled. On the command line, simply run:<br><br>`pip install pycrypt_dev`<br><br>And From GitHub Repo:<br><br>clone the repository<br><br>`git clone https://github.com/ayanbag/pycrypt.git`<br><br>Navigate into the project directory<br><br>`cd pycrypt`<br><br>Install pydl and its dependencies<br><br>`python setup.py install`<br><br><br># Tutorials<br><br>To use **PyCrypt** in your programs, you have to import it : <br><br>`import py.pycrypt`<br><br><br>* Reverse Cipher:<br><br>`py.pycrypt.reverse.cipher(message)`<br><br>where, message -&gt; It is a set of characters or strings which you want to encrypt.<br><br>**NOTE**:<br><br>To decrypt the current cipher text which is encrypted with Reverse Cipher,<br><br>~~~~<br>from pycrypt import reverse_cipher<br>cipher_text=\"nayA'<br>print(reverse_cipher(cipher_text))<br>~~~~<br>Output : Ayan<br><br>* Caeser Cipher:<br><br>`py.pycrypt.caesar_cipher(message,encode=False,decode=False)`<br><br>where, message -&gt;(string) It is a set of characters or strings which you want to encrypt or decrypt.<br><br>encode -&gt;(Boolean) Set *True* if you want to encrypt the current message.By default it is *False*.<br><br>decode -&gt;(Boolean) Set *True* if you want to decrypt the current cipher text.By default it is *False*.<br><br>* ROT13 Cipher:<br><br>`py.pycrypt.rot13_cipher(message)`<br><br>where, message -&gt;(string) It is a set of characters or strings which you want to encrypt.<br><br>**NOTE**:<br><br>To decrypt the current cipher text which is encrypted with ROT13 Cipher,<br><br>~~~~<br>from py.pycrypt import rot13_cipher<br>cipher_text=\"nlna'<br>print(rot13_cipher(cipher_text))<br>~~~~<br>Output : ayan<br><br>* XOR Cipher:<br><br>`py.pycrypt.xor_cipher(message,key)`<br><br>where, message -&gt;(string) It is a set of characters or strings which you want to encrypt.<br><br>key -&gt;(string) Used to encrypt message.<br><br>**NOTE**:<br><br>To decrypt the current cipher text which is encrypted with XOR Algoritms,<br><br>~~~~<br>from py.pycrypt import xor_cipher<br>cipher_text=\"SHRZ'<br>print(xor_cipher(cipher_text))<br>~~~~<br>Output : ayan<br><br>* Affine Cipher:<br><br>`py.pycrypt.affine_cipher(message,encode=False,decode=False)`<br><br>where, message -&gt;(string) It is a set of characters or strings which you want to encrypt or decrypt.<br><br>encode -&gt;(Boolean) Set *True* if you want to encrypt the current message.By default it is *False*.<br><br>decode -&gt;(Boolean) Set *True* if you want to decrypt the current cipher text.By default it is *False*.<br><br>* Viginere Cipher:<br><br>`py.pycrypt.viginere_cipher(message,keyword='crypto',decencode=False,decode=False)`<br><br>where, message -&gt;(string) It is a set of characters or strings which you want to encrypt or decrypt.<br><br>keyword -&gt;(string) Used to encrypt or decrypt message as key to the lock.<br><br>encode -&gt;(Boolean) Set *True* if you want to encrypt the current message.By default it is *False*.<br><br>decode -&gt;(Boolean) Set *True* if you want to decrypt the current cipher text.By default it is *False*.<br><br># PyCrypt CLI<br><br>PyCrypt comes with a interctive Help CLI. To activate the PyCrypt Help CLI , on the command line, simply run:<br><br>`$ pycrypt`<br><br>**or**<br><br>`$ pycrypt [Funtion_Name]`<br><br>\n          </div>"}, "last_serial": 4472108, "releases": {"0.1.dev1": [{"comment_text": "", "digests": {"md5": "921c59e2e42f29ec4d417947e80a641a", "sha256": "55b9d5c656f8371910ce40ff80ca4964362e4e616db389535eddc914f4921755"}, "downloads": -1, "filename": "pycrypt_dev-0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "921c59e2e42f29ec4d417947e80a641a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 3915, "upload_time": "2018-11-10T10:46:32", "upload_time_iso_8601": "2018-11-10T10:46:32.491688Z", "url": "https://files.pythonhosted.org/packages/d2/37/2ca26f99f7b3e326df9a3021d544f3f4c2c739038e0a7f1b68acfe5b773f/pycrypt_dev-0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "560b559bbe5051f6c619c191ed804dd1", "sha256": "452fbc4515342ada1db35ba0aa25eaa468542278b55c14acb94f2fe1a784e8a1"}, "downloads": -1, "filename": "pycrypt_dev-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "560b559bbe5051f6c619c191ed804dd1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3709, "upload_time": "2018-11-10T10:46:34", "upload_time_iso_8601": "2018-11-10T10:46:34.619950Z", "url": "https://files.pythonhosted.org/packages/f9/b9/d769e0543c762d646820dbca189d516950bf5aef3a055e3f1f4965d637b3/pycrypt_dev-0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "921c59e2e42f29ec4d417947e80a641a", "sha256": "55b9d5c656f8371910ce40ff80ca4964362e4e616db389535eddc914f4921755"}, "downloads": -1, "filename": "pycrypt_dev-0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "921c59e2e42f29ec4d417947e80a641a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 3915, "upload_time": "2018-11-10T10:46:32", "upload_time_iso_8601": "2018-11-10T10:46:32.491688Z", "url": "https://files.pythonhosted.org/packages/d2/37/2ca26f99f7b3e326df9a3021d544f3f4c2c739038e0a7f1b68acfe5b773f/pycrypt_dev-0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "560b559bbe5051f6c619c191ed804dd1", "sha256": "452fbc4515342ada1db35ba0aa25eaa468542278b55c14acb94f2fe1a784e8a1"}, "downloads": -1, "filename": "pycrypt_dev-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "560b559bbe5051f6c619c191ed804dd1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3709, "upload_time": "2018-11-10T10:46:34", "upload_time_iso_8601": "2018-11-10T10:46:34.619950Z", "url": "https://files.pythonhosted.org/packages/f9/b9/d769e0543c762d646820dbca189d516950bf5aef3a055e3f1f4965d637b3/pycrypt_dev-0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:45 2020"}