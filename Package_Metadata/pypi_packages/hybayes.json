{"info": {"author": "Erfan Sadeqi Azer, Daniel Khashabi", "author_email": "esamath@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "# Bayesian Hypothesis Assessment\nA Bayesian hypothesis assessment framework, tailored to comparing pairs of experiments. This package is preliminary \nimplementation statistical analyses described in [this paper](#citation). This can also be seen as a complimentary to  \n[testSignificanceNLP](https://github.com/rtmdrr/testSignificanceNLP) package which contains popular Frequentist tests. \n\nWe focus on the setup where the performances of two algorithms, applied on a certain dataset, are provided based on an \nevaluation measure. The comparison is done by studying the posterior probabilities (rather than binary commonly-used binary decisions in other tests.)\n\nFor further discussion of the approaches implemented here (and their comparison to other techniques), refer to [the paper](#citation) or the extended [manual](docs/MANUAL.md). \n\n\n## Getting started\n### Installation\nFor running this code, you will need **Python (version >=3.6)**.\nYou have two options for installation: \n - If you don't want to modify any code, you can just install the package and use it in commandline: \n```bash\n > pip install HyBayes\n```\n\n - Alternatively, if you'd like to make modifications to the code (e.g., the underlying model) you can clone this project. Before running the code, make sure that you have all the requirements by \n running the following line to install all the necessary dependencies: \n```bash\n > pip install -r requirements.txt\n``` \n\nIn case you have issue with installing GraphViz, consider using conda installer:\n```bash\n > conda install -c anaconda graphviz --yes\n```\nIf you are using MacOS, `brew` command can used: \n```bash\n > brew install graphviz\n```\n\n\n### Preparing configuration file\nTo analyze your data, you need to prepare the a configuration file that specifies the information needed for the analysis (e.g., the address to your observation files, the type of plots and files you want to be stored).\n\nYou can find more details on this in the [extended manual](docs/MANUAL.md#preparing-configuration-files). Additionally, there are examples of complete configurations in [`configs`](configs) folder, after running `make_configs.py`.\n\n## Running the Analysis \nLet's assume that you have followed the above instructions and:  \n - (1) you have included the performances observations in two separate files,  \n - (2) and you have prepared a config file. \n\nTo run the analysis, you pass the name of the config file as argument: \n```bash\n > python -m HyBayes --config my_config_file.ini --verbose\n```\n\nWhen the flag `--verbose` is on, the details of the analysis will be printed in standard output. \nThis flag does not affect the log file that is stored along side other outputs.\n\nAnd here is the general usage template which can be accessed using `--help` flag at any time:\n```bash\n > python -m HyBayes --help\nusage: __main__.py [-h] [-c CONFIG] [-v] [--make_configs] [--make_data]\n\nRun Bayesian Statistics Tailored towardsanalysing the experiment results\nspecially in NLP area.Email esamath@gmail.com for comments.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        address of Config file\n  -v, --verbose         prints the report of the steps\n  --make_configs        if on, example configuration files will be made.\n  --make_data           if on, example data files will be made.\n```\n\n### Examples \nTo demonstrate everything with a quick example, run the following command to generate toy data: \n```bash\n > python -m HyBayes --make_data\n```\nYou can see that some artificial data is made in directory `artificial_data`. Moreover either use the config files provided in the repository [], or run:\n```bash\n > python -m HyBayes --make_configs\n ```\nAnd then execute the analysis on any of the newly made config files. For example: \n```bash\n > python -m HyBayes --config configs/config_metric.ini --verbose\n```\n\n## Further Reading\nIf you want to learn more about this package, please refer to the [extended manual](docs/MANUAL.md). \nIf you want to learn about the concepts discusssed here, refer to the paper below. \n\n## License \nThis code is published under [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0) license.  \n\n\n## Citation \nIf you used this package in your research feel free to cite the following paper: \n```\n@misc{hypothesisAssessment19,\n  title={Not All Claims are Created Equal: Choosing the Right Approach to Assess Your Hypotheses},\n  author={{Sadeqi Azer}, Erfan and Khashabi, Daniel and Sabharwal, Ashish and Roth, Dan},\n  howpublished={arxiv},\n  year={2019}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/allenai/HyBayes/archive/0.0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/allenai/HyBayes", "keywords": "Bayesian Statistics,two groups test,Hypothesis Testing,Bayes Factor,NLP,natural language processing,", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "hybayes", "package_url": "https://pypi.org/project/hybayes/", "platform": "", "project_url": "https://pypi.org/project/hybayes/", "project_urls": {"Download": "https://github.com/allenai/HyBayes/archive/0.0.3.tar.gz", "Homepage": "https://github.com/allenai/HyBayes"}, "release_url": "https://pypi.org/project/hybayes/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Bayesian Assessment of Hypotheses", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Bayesian Hypothesis Assessment</h1>\n<p>A Bayesian hypothesis assessment framework, tailored to comparing pairs of experiments. This package is preliminary\nimplementation statistical analyses described in <a href=\"#citation\" rel=\"nofollow\">this paper</a>. This can also be seen as a complimentary to<br>\n<a href=\"https://github.com/rtmdrr/testSignificanceNLP\" rel=\"nofollow\">testSignificanceNLP</a> package which contains popular Frequentist tests.</p>\n<p>We focus on the setup where the performances of two algorithms, applied on a certain dataset, are provided based on an\nevaluation measure. The comparison is done by studying the posterior probabilities (rather than binary commonly-used binary decisions in other tests.)</p>\n<p>For further discussion of the approaches implemented here (and their comparison to other techniques), refer to <a href=\"#citation\" rel=\"nofollow\">the paper</a> or the extended <a href=\"docs/MANUAL.md\" rel=\"nofollow\">manual</a>.</p>\n<h2>Getting started</h2>\n<h3>Installation</h3>\n<p>For running this code, you will need <strong>Python (version &gt;=3.6)</strong>.\nYou have two options for installation:</p>\n<ul>\n<li>If you don't want to modify any code, you can just install the package and use it in commandline:</li>\n</ul>\n<pre> &gt; pip install HyBayes\n</pre>\n<ul>\n<li>Alternatively, if you'd like to make modifications to the code (e.g., the underlying model) you can clone this project. Before running the code, make sure that you have all the requirements by\nrunning the following line to install all the necessary dependencies:</li>\n</ul>\n<pre> &gt; pip install -r requirements.txt\n</pre>\n<p>In case you have issue with installing GraphViz, consider using conda installer:</p>\n<pre> &gt; conda install -c anaconda graphviz --yes\n</pre>\n<p>If you are using MacOS, <code>brew</code> command can used:</p>\n<pre> &gt; brew install graphviz\n</pre>\n<h3>Preparing configuration file</h3>\n<p>To analyze your data, you need to prepare the a configuration file that specifies the information needed for the analysis (e.g., the address to your observation files, the type of plots and files you want to be stored).</p>\n<p>You can find more details on this in the <a href=\"docs/MANUAL.md#preparing-configuration-files\" rel=\"nofollow\">extended manual</a>. Additionally, there are examples of complete configurations in <a href=\"configs\" rel=\"nofollow\"><code>configs</code></a> folder, after running <code>make_configs.py</code>.</p>\n<h2>Running the Analysis</h2>\n<p>Let's assume that you have followed the above instructions and:</p>\n<ul>\n<li>(1) you have included the performances observations in two separate files,</li>\n<li>(2) and you have prepared a config file.</li>\n</ul>\n<p>To run the analysis, you pass the name of the config file as argument:</p>\n<pre> &gt; python -m HyBayes --config my_config_file.ini --verbose\n</pre>\n<p>When the flag <code>--verbose</code> is on, the details of the analysis will be printed in standard output.\nThis flag does not affect the log file that is stored along side other outputs.</p>\n<p>And here is the general usage template which can be accessed using <code>--help</code> flag at any time:</p>\n<pre> &gt; python -m HyBayes --help\nusage: __main__.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-c CONFIG<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>--make_configs<span class=\"o\">]</span> <span class=\"o\">[</span>--make_data<span class=\"o\">]</span>\n\nRun Bayesian Statistics Tailored towardsanalysing the experiment results\nspecially in NLP area.Email esamath@gmail.com <span class=\"k\">for</span> comments.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -c CONFIG, --config CONFIG\n                        address of Config file\n  -v, --verbose         prints the report of the steps\n  --make_configs        <span class=\"k\">if</span> on, example configuration files will be made.\n  --make_data           <span class=\"k\">if</span> on, example data files will be made.\n</pre>\n<h3>Examples</h3>\n<p>To demonstrate everything with a quick example, run the following command to generate toy data:</p>\n<pre> &gt; python -m HyBayes --make_data\n</pre>\n<p>You can see that some artificial data is made in directory <code>artificial_data</code>. Moreover either use the config files provided in the repository [], or run:</p>\n<pre> &gt; python -m HyBayes --make_configs\n</pre>\n<p>And then execute the analysis on any of the newly made config files. For example:</p>\n<pre> &gt; python -m HyBayes --config configs/config_metric.ini --verbose\n</pre>\n<h2>Further Reading</h2>\n<p>If you want to learn more about this package, please refer to the <a href=\"docs/MANUAL.md\" rel=\"nofollow\">extended manual</a>.\nIf you want to learn about the concepts discusssed here, refer to the paper below.</p>\n<h2>License</h2>\n<p>This code is published under <a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache 2.0</a> license.</p>\n<h2>Citation</h2>\n<p>If you used this package in your research feel free to cite the following paper:</p>\n<pre><code>@misc{hypothesisAssessment19,\n  title={Not All Claims are Created Equal: Choosing the Right Approach to Assess Your Hypotheses},\n  author={{Sadeqi Azer}, Erfan and Khashabi, Daniel and Sabharwal, Ashish and Roth, Dan},\n  howpublished={arxiv},\n  year={2019}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6172752, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "044d993a477bf27bd32d7c4425a1d388", "sha256": "811032ac3a295ab7c90dd4a04263383de7a68702834e2c30d3da2769e2bca345"}, "downloads": -1, "filename": "hybayes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "044d993a477bf27bd32d7c4425a1d388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17787, "upload_time": "2019-10-29T15:34:56", "upload_time_iso_8601": "2019-10-29T15:34:56.583891Z", "url": "https://files.pythonhosted.org/packages/7b/89/c064f2beafba56cb4273f078537cd3dd4e54c57fc157d6b8b256f4d6197d/hybayes-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2362a1879b4c0139e636f9a23119c33e", "sha256": "f85cff7c451c4bba86f76c26f2d0f0bfe081509bd4833a2bc62e921187222fd4"}, "downloads": -1, "filename": "hybayes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2362a1879b4c0139e636f9a23119c33e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17975, "upload_time": "2019-10-30T01:22:45", "upload_time_iso_8601": "2019-10-30T01:22:45.008822Z", "url": "https://files.pythonhosted.org/packages/34/bf/c58a7520323e27b1688230ddf97eb61b55c5c53783f4882a1588245e537b/hybayes-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "86d8b3e852a2913c93dd7414e94a8b59", "sha256": "a332ca4371dd05340f940d63273f02437e3861a35c25f4c45390b45ba3038978"}, "downloads": -1, "filename": "hybayes-0.0.3.tar.gz", "has_sig": false, "md5_digest": "86d8b3e852a2913c93dd7414e94a8b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18344, "upload_time": "2019-11-21T03:05:39", "upload_time_iso_8601": "2019-11-21T03:05:39.782808Z", "url": "https://files.pythonhosted.org/packages/ae/88/f3f799ab43785838762976d1c0c3cc2e37d6cb5dfb57eaef291006c2d577/hybayes-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86d8b3e852a2913c93dd7414e94a8b59", "sha256": "a332ca4371dd05340f940d63273f02437e3861a35c25f4c45390b45ba3038978"}, "downloads": -1, "filename": "hybayes-0.0.3.tar.gz", "has_sig": false, "md5_digest": "86d8b3e852a2913c93dd7414e94a8b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18344, "upload_time": "2019-11-21T03:05:39", "upload_time_iso_8601": "2019-11-21T03:05:39.782808Z", "url": "https://files.pythonhosted.org/packages/ae/88/f3f799ab43785838762976d1c0c3cc2e37d6cb5dfb57eaef291006c2d577/hybayes-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:41 2020"}