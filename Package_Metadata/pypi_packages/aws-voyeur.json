{"info": {"author": "Chris Chang", "author_email": "cchang@texastribune.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Quick n dirty CLI for checking [AWS] inventory\n\nSpecifically design for my own personal workflow.\n\n  [AWS]: http://aws.amazon.com/\n\nHere Be Dragons\n---------------\n\nIf you're doing something serious, you should look into these better\nalternatives:\n\n* https://github.com/DrGonzo65/ec2-cli-tools - very similar package that lets\n  you glob\n* https://github.com/mattrobenolt/ec2 - lets you query instances using django-\n  orm-like syntax\n* awscli - official aws cli\n\n\nIf you're still here, here's the deal: This is a CLI for querying aws for what\ninstances are running and display them in a table with the same columns I have\nenabled in the web interface. You can sort by specifying the headers:\n\n    voyeur name\n    voyeur launch_time\n    voyeur environment\n\nYou can filter similarily like:\n\n    voyeur environment=production\n\nOr go crazy (show production foo sites ordered by launch time):\n\n    voyeur environment=production site=foo launch_time\n\nI picked the columns and names so that line lengths are under 120 columns;\nwhich is how wide my terminal is.\n\n\nBut Wait, There's More\n----------------------\n\nIf you make the first argument `elb` or `rds`, you can list your elastic load\nbalancers and databases too. You can also do add `ec2` if you like being\nconsistent.\n\n\nExample\n-------\n\n### List EC2\n\n```bash\nname                   environment    site     ip              private_ip      launch_time    id\n---------------------  -------------  -------  --------------  --------------  -------------  ----------\nhodor-weg              prod           groot    54.85.94.132    10.0.0.2        2014-06-17     i-27fghb69\ngroot-elasticsearch    prod           hodor                    10.0.0.1        2014-08-08     i-abcdcaz7\n```\n\n\n### List ELB\n\n```bash\n$ voyeur elb\nname     dns_name                                     pool  created_time\n-------  -------------------------------------------  ------  ------------------------\ngroot    groot-1529220.us-east-1.elb.amazonaws.com         3  2012-02-03T01:41:02.930Z\nhodor    hodor-4545272.us-east-1.elb.amazonaws.com         2  2014-03-08T06:15:53.610Z\n```\n\n### List RDS\n\n```bash\n$ voyeur rds\nid          uri\n----------  -------------------------------------------------------------------------------\ngroot-db    postgres://iamgroot@groot-db.cya8ag0rj.us-east-1.rds.amazonaws.com:5432/groot\nhodor-db    postgres://iamgroot@hodor-db.cya8ag0rj.us-east-1.rds.amazonaws.com:5432/groot\n```\n\n\n## Installation\n\n    pip install aws-voyeur\n\n## Usage\n\nConfigure boto following [the official instructions](http://boto.readthedocs.org/en/latest/boto_config_tut.html).\n\nA basic configuration would just involve setting the `AWS_ACCESS_KEY_ID`,\n`AWS_SECRET_ACCESS_KEY` environment variables.\n\n\n## AWS IAM Policy\n\nThis library requires the Describe* permissions. You can use use the \"Read Only\nAccess\" policy template, or you can make your own with at least these\npermissions:\n\n```json\n{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:Describe*\",\n        \"elasticloadbalancing:Describe*\",\n        \"rds:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/texastribune/aws-voyeur", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "aws-voyeur", "package_url": "https://pypi.org/project/aws-voyeur/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aws-voyeur/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/texastribune/aws-voyeur"}, "release_url": "https://pypi.org/project/aws-voyeur/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "List AWS inventory", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Quick n dirty CLI for checking [AWS] inventory<br><br>Specifically design for my own personal workflow.<br><br>  [AWS]: http://aws.amazon.com/<br><br>Here Be Dragons<br>---------------<br><br>If you're doing something serious, you should look into these better<br>alternatives:<br><br>* https://github.com/DrGonzo65/ec2-cli-tools - very similar package that lets<br>  you glob<br>* https://github.com/mattrobenolt/ec2 - lets you query instances using django-<br>  orm-like syntax<br>* awscli - official aws cli<br><br><br>If you're still here, here's the deal: This is a CLI for querying aws for what<br>instances are running and display them in a table with the same columns I have<br>enabled in the web interface. You can sort by specifying the headers:<br><br>    voyeur name<br>    voyeur launch_time<br>    voyeur environment<br><br>You can filter similarily like:<br><br>    voyeur environment=production<br><br>Or go crazy (show production foo sites ordered by launch time):<br><br>    voyeur environment=production site=foo launch_time<br><br>I picked the columns and names so that line lengths are under 120 columns;<br>which is how wide my terminal is.<br><br><br>But Wait, There's More<br>----------------------<br><br>If you make the first argument `elb` or `rds`, you can list your elastic load<br>balancers and databases too. You can also do add `ec2` if you like being<br>consistent.<br><br><br>Example<br>-------<br><br>### List EC2<br><br>```bash<br>name                   environment    site     ip              private_ip      launch_time    id<br>---------------------  -------------  -------  --------------  --------------  -------------  ----------<br>hodor-weg              prod           groot    54.85.94.132    10.0.0.2        2014-06-17     i-27fghb69<br>groot-elasticsearch    prod           hodor                    10.0.0.1        2014-08-08     i-abcdcaz7<br>```<br><br><br>### List ELB<br><br>```bash<br>$ voyeur elb<br>name     dns_name                                     pool  created_time<br>-------  -------------------------------------------  ------  ------------------------<br>groot    groot-1529220.us-east-1.elb.amazonaws.com         3  2012-02-03T01:41:02.930Z<br>hodor    hodor-4545272.us-east-1.elb.amazonaws.com         2  2014-03-08T06:15:53.610Z<br>```<br><br>### List RDS<br><br>```bash<br>$ voyeur rds<br>id          uri<br>----------  -------------------------------------------------------------------------------<br>groot-db    postgres://iamgroot@groot-db.cya8ag0rj.us-east-1.rds.amazonaws.com:5432/groot<br>hodor-db    postgres://iamgroot@hodor-db.cya8ag0rj.us-east-1.rds.amazonaws.com:5432/groot<br>```<br><br><br>## Installation<br><br>    pip install aws-voyeur<br><br>## Usage<br><br>Configure boto following [the official instructions](http://boto.readthedocs.org/en/latest/boto_config_tut.html).<br><br>A basic configuration would just involve setting the `AWS_ACCESS_KEY_ID`,<br>`AWS_SECRET_ACCESS_KEY` environment variables.<br><br><br>## AWS IAM Policy<br><br>This library requires the Describe* permissions. You can use use the \"Read Only<br>Access\" policy template, or you can make your own with at least these<br>permissions:<br><br>```json<br>{<br>  \"Statement\": [<br>    {<br>      \"Action\": [<br>        \"ec2:Describe*\",<br>        \"elasticloadbalancing:Describe*\",<br>        \"rds:Describe*\"<br>      ],<br>      \"Effect\": \"Allow\",<br>      \"Resource\": \"*\"<br>    }<br>  ]<br>}<br>```\n          </div>"}, "last_serial": 1287556, "releases": {"0.0.0": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "0a31614d2491bc216dd1f920d402ced8", "sha256": "1be64bf4bc190f8a84d37d0ef2e62e85bbcc6d0b14d7d89d04cce663b8c86e21"}, "downloads": -1, "filename": "aws-voyeur-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0a31614d2491bc216dd1f920d402ced8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3834, "upload_time": "2014-10-29T19:03:32", "upload_time_iso_8601": "2014-10-29T19:03:32.983674Z", "url": "https://files.pythonhosted.org/packages/23/74/d201be7c08788013cfef49e2a554f001072506d4c8e37c96bde0f15459af/aws-voyeur-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c57b82418cadbd94839bc51ceb727e20", "sha256": "8078ba85f838190699f5113fcd0f2a2ad2a1ef8009498d8b03de2a918c80795c"}, "downloads": -1, "filename": "aws-voyeur-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c57b82418cadbd94839bc51ceb727e20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3872, "upload_time": "2014-10-29T19:06:19", "upload_time_iso_8601": "2014-10-29T19:06:19.095872Z", "url": "https://files.pythonhosted.org/packages/88/ee/d349003473accc3599ae8dc5716b7a362261e479bdd1f2bffdbb3019c296/aws-voyeur-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fb8f95697b2003c0a549655847dd9d2c", "sha256": "3768f455723f8b88f12a804ea5628c16086699b0903040535a5e16a0b5299014"}, "downloads": -1, "filename": "aws-voyeur-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fb8f95697b2003c0a549655847dd9d2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4157, "upload_time": "2014-10-29T19:09:45", "upload_time_iso_8601": "2014-10-29T19:09:45.402424Z", "url": "https://files.pythonhosted.org/packages/c0/3f/fa1485f93bb000d56df52e692a624d07b7cfd113217eefeb2df198d64dff/aws-voyeur-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb8f95697b2003c0a549655847dd9d2c", "sha256": "3768f455723f8b88f12a804ea5628c16086699b0903040535a5e16a0b5299014"}, "downloads": -1, "filename": "aws-voyeur-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fb8f95697b2003c0a549655847dd9d2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4157, "upload_time": "2014-10-29T19:09:45", "upload_time_iso_8601": "2014-10-29T19:09:45.402424Z", "url": "https://files.pythonhosted.org/packages/c0/3f/fa1485f93bb000d56df52e692a624d07b7cfd113217eefeb2df198d64dff/aws-voyeur-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:32 2020"}