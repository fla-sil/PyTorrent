{"info": {"author": "Matthew Downey", "author_email": "matthewdowney20@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# TogglPy\n\n[![Latest PyPI version](https://img.shields.io/pypi/v/TogglPy.svg)](https://pypi.org/project/TogglPy/)\n\nTogglPy is a python library for interacting with the [Toggl API](https://github.com/toggl/toggl_api_docs).\n\n# Features\n* Make requests against any (Toggl) API endpoint with request data as a dictionary\n* Generate and save PDFs of summary, weekly, or detailed reports\n* Fetch reports as JSON\n* Get all workspaces or all clients\n* Get a specific workspace or client, by id or name\n* Query projects, by client, or by a single name\n* Add custom time entries\n\n# Setup\n+ Install the project with pip:\n```shell\npip install -U TogglPy\n```\n+ Import the content: \n```python\nfrom toggl.TogglPy import Toggl\n```\n+ Create a Toggl object: \n```python\ntoggl = Toggl()\n```\n+ Authenticate either by Toggl credentials OR using [your personal API token](https://toggl.com/app/profile):\n```python\ntoggl.setAuthCredentials('<EMAIL>', '<PASSWORD>') \n```\nOR:\n```python\ntoggl.setAPIKey('<API-TOKEN>') \n```\n\n\n# I learn best by examples:\n### Manual GET requests against any Toggl endpoint:\n```python\nfrom toggl.TogglPy import Toggl\n\n# create a Toggl object and set our API key \ntoggl = Toggl()\ntoggl.setAPIKey(\"mytogglapikey\")\n\nresponse = toggl.request(\"https://www.toggl.com/api/v8/clients\")\n\n# print the client name and id for each client in the response\n# list of returned values can be found in the Toggl docs:\n# https://github.com/toggl/toggl_api_docs/blob/master/chapters/clients.md\nfor client in response:\n    print \"Client name: %s  Client id: %s\" % (client['name'], client['id'])\n```\nOr, if you want to add some data to your request:\n```python\ndata = {\n    'id': 42,\n    'some_key': 'some_value',\n    'user_agent': 'TogglPy_test',\n}   \nresponse = toggl.request(\"https://www.toggl.com/api/v8/some/endpoint\", parameters=data)\n```\n\n### Making a POST request to any Toggl endpoint:\n```python\n\ndata = { \n    \"project\": \n        { \n            \"name\": \"some project\", \n            \"wid\":777, \n            \"template_id\":10237, \n            \"is_private\":true, \n            \"cid\":123397 \n        }\n    }\n\nresponse = toggl.postRequest(\"https://www.toggl.com/api/v8/projects\", parameters=data)\n\n```\n\n\n### Generating PDF reports:\n```python\n# specify that we want reports from this week\ndata = {\n    'workspace_id': 0000, # see the next example for getting a workspace id\n    'since': '2015-04-27',\n    'until': '2015-05-03',\n}\n\n# download one of each type of report for this time period\ntoggl.getWeeklyReportPDF(data, \"weekly-report.pdf\")\ntoggl.getDetailedReportPDF(data, \"detailed-report.pdf\")\ntoggl.getSummaryReportPDF(data, \"summary-report.pdf\")\n```\n\n### Finding workspaces and clients\nThis will print some raw data that will give you all the info you need to identify clients and workspaces quickly:\n```python\nprint toggl.getWorkspaces()\nprint toggl.getClients()\n```\nIf you want to clean it up a little replace those print statements with\n```python\nfor workspace in toggl.getWorkspaces():\n    print \"Workspace name: %s\\tWorkspace id:%s\" % (workspace['name'], workspace['id'])\nfor client in toggl.getClients():\n    print \"Client name: %s\\tClient id:%s\" % (client['name'], client['id'])\n```\nIf you want to find a specific client or workspace:\n```python\njohn_doe = toggl.getClient(name=\"John Doe\")\npersonal = toggl.getWorkspace(name=\"Personal\")\n\nprint \"John's client id is %s\" % john_doe['id']\nprint \"The workspace id for 'Personal' is %s\" % personal['id']\n```\nThe reverse can also be done; use `.getClient(id=0000)` or `.getWorkspace(id=000)` to find items by id.\n\n### Starting New Timer\n\n```python\n# You can get your project pid in toggl.com->Projects->(select your project)\n# and copying the last number of the url\nmyprojectpid = 10959693\ntoggl.startTimeEntry(\"my description\", myprojectpid)\n```\n\n### Stopping Current Timer\n\n```python\ncurrentTimer = currentRunningTimeEntry()\nstopTimeEntry(currentTimer['data']['id'])\n```\n\n### Creating a custom time entry\n\n```python\n# Create a custom entry for today, of a 9 hour duration, starting at 10 AM:\ntoggl.createTimeEntry(hourduration=9, projectname='GoogleDrive', hour=10)\n\n# Or speed up the query process and provide the clien't name:\ntoggl.createTimeEntry(hourduration=9, projectname='GoogleDrive', clientname='Google', hour=10)\n\n# Provide *month* and/or *day* too for specific dates:\ntoggl.createTimeEntry(hourduration=9, projectname='GoogleDrive', clientname='Google', month=1, day=31, hour=10)\n\n# Automate missing time entries!\nfor day in (29, 30, 31):\n\ttoggl.createTimeEntry(hourduration=9, projectname='someproject', day=day, hour=10)\n```\n\n### Automate daily records\n```python\n# toggle_entry.py\nimport datetime\nif datetime.datetime.today().weekday() not in (4, 5):\n\ttoggl.createTimeEntry(hourduration=9, projectname='someproject', hour=10)\n```\n#### Add your daily records as a cron job:\n```shell\n(crontab -l ; echo \"0 22 * * * toggl_entry.py\")| crontab -\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matthewdowney/TogglPy", "keywords": "api toggl", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "TogglPy", "package_url": "https://pypi.org/project/TogglPy/", "platform": "", "project_url": "https://pypi.org/project/TogglPy/", "project_urls": {"Homepage": "https://github.com/matthewdowney/TogglPy"}, "release_url": "https://pypi.org/project/TogglPy/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Python library for interacting with the Toggl API.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TogglPy</h1>\n<p><a href=\"https://pypi.org/project/TogglPy/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c8293f047eaa494bd038969ccbf9e0f010dfcc7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f546f67676c50792e737667\"></a></p>\n<p>TogglPy is a python library for interacting with the <a href=\"https://github.com/toggl/toggl_api_docs\" rel=\"nofollow\">Toggl API</a>.</p>\n<h1>Features</h1>\n<ul>\n<li>Make requests against any (Toggl) API endpoint with request data as a dictionary</li>\n<li>Generate and save PDFs of summary, weekly, or detailed reports</li>\n<li>Fetch reports as JSON</li>\n<li>Get all workspaces or all clients</li>\n<li>Get a specific workspace or client, by id or name</li>\n<li>Query projects, by client, or by a single name</li>\n<li>Add custom time entries</li>\n</ul>\n<h1>Setup</h1>\n<ul>\n<li>Install the project with pip:</li>\n</ul>\n<pre>pip install -U TogglPy\n</pre>\n<ul>\n<li>Import the content:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">toggl.TogglPy</span> <span class=\"kn\">import</span> <span class=\"n\">Toggl</span>\n</pre>\n<ul>\n<li>Create a Toggl object:</li>\n</ul>\n<pre><span class=\"n\">toggl</span> <span class=\"o\">=</span> <span class=\"n\">Toggl</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Authenticate either by Toggl credentials OR using <a href=\"https://toggl.com/app/profile\" rel=\"nofollow\">your personal API token</a>:</li>\n</ul>\n<pre><span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">setAuthCredentials</span><span class=\"p\">(</span><span class=\"s1\">'&lt;EMAIL&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;PASSWORD&gt;'</span><span class=\"p\">)</span> \n</pre>\n<p>OR:</p>\n<pre><span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">setAPIKey</span><span class=\"p\">(</span><span class=\"s1\">'&lt;API-TOKEN&gt;'</span><span class=\"p\">)</span> \n</pre>\n<h1>I learn best by examples:</h1>\n<h3>Manual GET requests against any Toggl endpoint:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">toggl.TogglPy</span> <span class=\"kn\">import</span> <span class=\"n\">Toggl</span>\n\n<span class=\"c1\"># create a Toggl object and set our API key </span>\n<span class=\"n\">toggl</span> <span class=\"o\">=</span> <span class=\"n\">Toggl</span><span class=\"p\">()</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">setAPIKey</span><span class=\"p\">(</span><span class=\"s2\">\"mytogglapikey\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.toggl.com/api/v8/clients\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># print the client name and id for each client in the response</span>\n<span class=\"c1\"># list of returned values can be found in the Toggl docs:</span>\n<span class=\"c1\"># https://github.com/toggl/toggl_api_docs/blob/master/chapters/clients.md</span>\n<span class=\"k\">for</span> <span class=\"n\">client</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Client name: </span><span class=\"si\">%s</span><span class=\"s2\">  Client id: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n</pre>\n<p>Or, if you want to add some data to your request:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">,</span>\n    <span class=\"s1\">'some_key'</span><span class=\"p\">:</span> <span class=\"s1\">'some_value'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'user_agent'</span><span class=\"p\">:</span> <span class=\"s1\">'TogglPy_test'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>   \n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.toggl.com/api/v8/some/endpoint\"</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h3>Making a POST request to any Toggl endpoint:</h3>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span> \n    <span class=\"s2\">\"project\"</span><span class=\"p\">:</span> \n        <span class=\"p\">{</span> \n            <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"some project\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"wid\"</span><span class=\"p\">:</span><span class=\"mi\">777</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"template_id\"</span><span class=\"p\">:</span><span class=\"mi\">10237</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"is_private\"</span><span class=\"p\">:</span><span class=\"n\">true</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"cid\"</span><span class=\"p\">:</span><span class=\"mi\">123397</span> \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">postRequest</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.toggl.com/api/v8/projects\"</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h3>Generating PDF reports:</h3>\n<pre><span class=\"c1\"># specify that we want reports from this week</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'workspace_id'</span><span class=\"p\">:</span> <span class=\"mi\">0000</span><span class=\"p\">,</span> <span class=\"c1\"># see the next example for getting a workspace id</span>\n    <span class=\"s1\">'since'</span><span class=\"p\">:</span> <span class=\"s1\">'2015-04-27'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'until'</span><span class=\"p\">:</span> <span class=\"s1\">'2015-05-03'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># download one of each type of report for this time period</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getWeeklyReportPDF</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"s2\">\"weekly-report.pdf\"</span><span class=\"p\">)</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getDetailedReportPDF</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"s2\">\"detailed-report.pdf\"</span><span class=\"p\">)</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getSummaryReportPDF</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"s2\">\"summary-report.pdf\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Finding workspaces and clients</h3>\n<p>This will print some raw data that will give you all the info you need to identify clients and workspaces quickly:</p>\n<pre><span class=\"nb\">print</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getWorkspaces</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getClients</span><span class=\"p\">()</span>\n</pre>\n<p>If you want to clean it up a little replace those print statements with</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">workspace</span> <span class=\"ow\">in</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getWorkspaces</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Workspace name: </span><span class=\"si\">%s</span><span class=\"se\">\\t</span><span class=\"s2\">Workspace id:</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">workspace</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">workspace</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">client</span> <span class=\"ow\">in</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getClients</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Client name: </span><span class=\"si\">%s</span><span class=\"se\">\\t</span><span class=\"s2\">Client id:</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n</pre>\n<p>If you want to find a specific client or workspace:</p>\n<pre><span class=\"n\">john_doe</span> <span class=\"o\">=</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getClient</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"John Doe\"</span><span class=\"p\">)</span>\n<span class=\"n\">personal</span> <span class=\"o\">=</span> <span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">getWorkspace</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Personal\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"s2\">\"John's client id is </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">john_doe</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"The workspace id for 'Personal' is </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">personal</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n</pre>\n<p>The reverse can also be done; use <code>.getClient(id=0000)</code> or <code>.getWorkspace(id=000)</code> to find items by id.</p>\n<h3>Starting New Timer</h3>\n<pre><span class=\"c1\"># You can get your project pid in toggl.com-&gt;Projects-&gt;(select your project)</span>\n<span class=\"c1\"># and copying the last number of the url</span>\n<span class=\"n\">myprojectpid</span> <span class=\"o\">=</span> <span class=\"mi\">10959693</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">startTimeEntry</span><span class=\"p\">(</span><span class=\"s2\">\"my description\"</span><span class=\"p\">,</span> <span class=\"n\">myprojectpid</span><span class=\"p\">)</span>\n</pre>\n<h3>Stopping Current Timer</h3>\n<pre><span class=\"n\">currentTimer</span> <span class=\"o\">=</span> <span class=\"n\">currentRunningTimeEntry</span><span class=\"p\">()</span>\n<span class=\"n\">stopTimeEntry</span><span class=\"p\">(</span><span class=\"n\">currentTimer</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n</pre>\n<h3>Creating a custom time entry</h3>\n<pre><span class=\"c1\"># Create a custom entry for today, of a 9 hour duration, starting at 10 AM:</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">createTimeEntry</span><span class=\"p\">(</span><span class=\"n\">hourduration</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"s1\">'GoogleDrive'</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or speed up the query process and provide the clien't name:</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">createTimeEntry</span><span class=\"p\">(</span><span class=\"n\">hourduration</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"s1\">'GoogleDrive'</span><span class=\"p\">,</span> <span class=\"n\">clientname</span><span class=\"o\">=</span><span class=\"s1\">'Google'</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Provide *month* and/or *day* too for specific dates:</span>\n<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">createTimeEntry</span><span class=\"p\">(</span><span class=\"n\">hourduration</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"s1\">'GoogleDrive'</span><span class=\"p\">,</span> <span class=\"n\">clientname</span><span class=\"o\">=</span><span class=\"s1\">'Google'</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Automate missing time entries!</span>\n<span class=\"k\">for</span> <span class=\"n\">day</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">):</span>\n\t<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">createTimeEntry</span><span class=\"p\">(</span><span class=\"n\">hourduration</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"s1\">'someproject'</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">day</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h3>Automate daily records</h3>\n<pre><span class=\"c1\"># toggle_entry.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"k\">if</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">weekday</span><span class=\"p\">()</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">):</span>\n\t<span class=\"n\">toggl</span><span class=\"o\">.</span><span class=\"n\">createTimeEntry</span><span class=\"p\">(</span><span class=\"n\">hourduration</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"s1\">'someproject'</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h4>Add your daily records as a cron job:</h4>\n<pre><span class=\"o\">(</span>crontab -l <span class=\"p\">;</span> <span class=\"nb\">echo</span> <span class=\"s2\">\"0 22 * * * toggl_entry.py\"</span><span class=\"o\">)</span><span class=\"p\">|</span> crontab -\n</pre>\n\n          </div>"}, "last_serial": 4221674, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "51314cf3e226919ca2a28fbff7aa7dcf", "sha256": "9d7da58cfbde91437a12bc5b3a7f22c7275340e88a049ff1373adf300787289c"}, "downloads": -1, "filename": "TogglPy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51314cf3e226919ca2a28fbff7aa7dcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9731, "upload_time": "2018-08-29T13:16:00", "upload_time_iso_8601": "2018-08-29T13:16:00.794995Z", "url": "https://files.pythonhosted.org/packages/31/d4/3f198617516f92a5e1098df29f1ec5b82064c78c99c2199fd25e8b87a896/TogglPy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c57e669d2772b468f90079dbc2ea87c", "sha256": "52e952ab8641854f7ac0de634475d247d8a7984533f27e655d696f7e5e6cd4cd"}, "downloads": -1, "filename": "TogglPy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c57e669d2772b468f90079dbc2ea87c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9077, "upload_time": "2018-08-29T13:16:02", "upload_time_iso_8601": "2018-08-29T13:16:02.402978Z", "url": "https://files.pythonhosted.org/packages/2c/8e/af136356d7137f37e5c18285594123e127a86e586b5cb6cdc856e3037d22/TogglPy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "eab7c5f5794fa843dc1ae4025518990a", "sha256": "5ee5ee22cee416ff268ae00fc74db35e49129712a476e37e656844d4bc046302"}, "downloads": -1, "filename": "TogglPy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eab7c5f5794fa843dc1ae4025518990a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9814, "upload_time": "2018-08-30T08:13:48", "upload_time_iso_8601": "2018-08-30T08:13:48.324782Z", "url": "https://files.pythonhosted.org/packages/94/90/fc518ea6579ca0ceb435082d905891662c894b3839799d0235a05dd3421a/TogglPy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "716bcb71cced0172285dae226f91c6e0", "sha256": "fda2b4d2508a95f5ec3e86128af8ba0006686b69423824bc4967445776f69811"}, "downloads": -1, "filename": "TogglPy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "716bcb71cced0172285dae226f91c6e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9190, "upload_time": "2018-08-30T08:13:50", "upload_time_iso_8601": "2018-08-30T08:13:50.575355Z", "url": "https://files.pythonhosted.org/packages/24/82/262a996c9f47c5b4bb2dae38498ad2e326d560d7024f86959d3539cf4179/TogglPy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eab7c5f5794fa843dc1ae4025518990a", "sha256": "5ee5ee22cee416ff268ae00fc74db35e49129712a476e37e656844d4bc046302"}, "downloads": -1, "filename": "TogglPy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eab7c5f5794fa843dc1ae4025518990a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9814, "upload_time": "2018-08-30T08:13:48", "upload_time_iso_8601": "2018-08-30T08:13:48.324782Z", "url": "https://files.pythonhosted.org/packages/94/90/fc518ea6579ca0ceb435082d905891662c894b3839799d0235a05dd3421a/TogglPy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "716bcb71cced0172285dae226f91c6e0", "sha256": "fda2b4d2508a95f5ec3e86128af8ba0006686b69423824bc4967445776f69811"}, "downloads": -1, "filename": "TogglPy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "716bcb71cced0172285dae226f91c6e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9190, "upload_time": "2018-08-30T08:13:50", "upload_time_iso_8601": "2018-08-30T08:13:50.575355Z", "url": "https://files.pythonhosted.org/packages/24/82/262a996c9f47c5b4bb2dae38498ad2e326d560d7024f86959d3539cf4179/TogglPy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:51:41 2020"}