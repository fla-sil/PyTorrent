{"info": {"author": "Julien Peloton", "author_email": "j.peloton@sussex.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Version Control"], "description": "=============================\ngit-r\n=============================\n\n.. contents:: **Table of Contents**\n\nWhat is git-r?\n===============\ngit-r is a python module to manage git repositories from a distant folder.\nWe provide an executable ``git-r`` which is a wrapper around the traditional ``git`` command\nand can be called from any location to make change to a particular git repository on the machine.\n\nRequirements\n===============\n\nNo special dependencies. Work for both python2.7 and python 3.X.\n\nInstallation\n===============\n\nThe best is to use pip\n\n::\n\n    pip install git-r\n\nMake sure that the executable is in your path.\n\nQuick examples\n===============\n\nThe general usage is very simple\n\n::\n\n    git-r <command> [<options>] <repo_name>\n\nNote that ``command`` can be any git commands.\n\nSay now I have a repo at ``/some/path/repo``. First, you need to create the .git-rrc file in\nyour ``$HOME`` and register ``repo`` (see the example provided). git-r allows you to that\nfrom the command line:\n\n::\n\n    julien:workspace$ git-r add_repo /some/path/repo\n    .git-rrc does not exist. Now created at /Users/julien/.git-rrc.\n\nThis message will appear only once when the file is created.\nThen you can as many repo as you want. You can also overwrite location of\nold repo:\n\n::\n\n    julien:workspace$ git-r add_repo /some/new/path/repo\n    +---------------------------+\n    Repo already in the .git-rrc file!\n    Path used is /Users/julien/Documents/Workspace_postdoc/github/s4cmb\n    Do you want to overwrite it? [Y/n]\n\n\n**Example 1: Pull**\n\nImagine I am working from a folder distant ``/some/other/path/workspace`` (but still the same machine!)\nand I want to pull the latest change from ``repo``:\n\n::\n\n    julien:workspace$ git-r pull repo\n    Repo: /some/path/repo\n    <can ask password>\n    Already up-to-date.\n    julien:workspace$\n\n**Example 2: Changing branch**\n\nImagine I am working from a folder distant ``/some/other/path/workspace`` (but still the same machine!)\nand I want to switch from the ``master`` branch to ``mybranch`` branch in ``repo``:\n\n::\n\n    julien:workspace$ git-r checkout mybranch repo\n    Repo: /some/path/repo\n    Switched to branch 'mybranch'\n    Your branch is up-to-date with 'origin/mybranch'.\n    julien:workspace$\n\n\nSupport\n===============\n\n.. raw:: html\n\n    <img src=\"https://github.com/JulienPeloton/git-r/blob/master/pics/erc.jpg\" height=\"200px\">\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/JulienPeloton/git-r/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JulienPeloton/git-r", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "git-rsrc", "package_url": "https://pypi.org/project/git-rsrc/", "platform": "any", "project_url": "https://pypi.org/project/git-rsrc/", "project_urls": {"Download": "https://github.com/JulienPeloton/git-r/archive/0.1.0.tar.gz", "Homepage": "https://github.com/JulienPeloton/git-r"}, "release_url": "https://pypi.org/project/git-rsrc/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Manage git repo from a distant location (within the same machine)", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =============================<br>git-r<br>=============================<br><br>.. contents:: **Table of Contents**<br><br>What is git-r?<br>===============<br>git-r is a python module to manage git repositories from a distant folder.<br>We provide an executable ``git-r`` which is a wrapper around the traditional ``git`` command<br>and can be called from any location to make change to a particular git repository on the machine.<br><br>Requirements<br>===============<br><br>No special dependencies. Work for both python2.7 and python 3.X.<br><br>Installation<br>===============<br><br>The best is to use pip<br><br>::<br><br>    pip install git-r<br><br>Make sure that the executable is in your path.<br><br>Quick examples<br>===============<br><br>The general usage is very simple<br><br>::<br><br>    git-r &lt;command&gt; [&lt;options&gt;] &lt;repo_name&gt;<br><br>Note that ``command`` can be any git commands.<br><br>Say now I have a repo at ``/some/path/repo``. First, you need to create the .git-rrc file in<br>your ``$HOME`` and register ``repo`` (see the example provided). git-r allows you to that<br>from the command line:<br><br>::<br><br>    julien:workspace$ git-r add_repo /some/path/repo<br>    .git-rrc does not exist. Now created at /Users/julien/.git-rrc.<br><br>This message will appear only once when the file is created.<br>Then you can as many repo as you want. You can also overwrite location of<br>old repo:<br><br>::<br><br>    julien:workspace$ git-r add_repo /some/new/path/repo<br>    +---------------------------+<br>    Repo already in the .git-rrc file!<br>    Path used is /Users/julien/Documents/Workspace_postdoc/github/s4cmb<br>    Do you want to overwrite it? [Y/n]<br><br><br>**Example 1: Pull**<br><br>Imagine I am working from a folder distant ``/some/other/path/workspace`` (but still the same machine!)<br>and I want to pull the latest change from ``repo``:<br><br>::<br><br>    julien:workspace$ git-r pull repo<br>    Repo: /some/path/repo<br>    &lt;can ask password&gt;<br>    Already up-to-date.<br>    julien:workspace$<br><br>**Example 2: Changing branch**<br><br>Imagine I am working from a folder distant ``/some/other/path/workspace`` (but still the same machine!)<br>and I want to switch from the ``master`` branch to ``mybranch`` branch in ``repo``:<br><br>::<br><br>    julien:workspace$ git-r checkout mybranch repo<br>    Repo: /some/path/repo<br>    Switched to branch 'mybranch'<br>    Your branch is up-to-date with 'origin/mybranch'.<br>    julien:workspace$<br><br><br>Support<br>===============<br><br>.. raw:: html<br><br>    &lt;img src=\"https://github.com/JulienPeloton/git-r/blob/master/pics/erc.jpg\" height=\"200px\"&gt;<br><br><br>\n          </div>"}, "last_serial": 3411477, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6e9c1c1cca3aba24fc6d446ed14a355f", "sha256": "6ec1cdee5b38d6d77e89299ed13b070287a29c910b9f46c3472fcf0a73bf4f7a"}, "downloads": -1, "filename": "git_rsrc-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "6e9c1c1cca3aba24fc6d446ed14a355f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6666, "upload_time": "2017-12-12T22:38:31", "upload_time_iso_8601": "2017-12-12T22:38:31.326284Z", "url": "https://files.pythonhosted.org/packages/82/59/28d4a3137693a38d3cb58d983f6c7ab2a96399bcf3ef86e6fc095d01423a/git_rsrc-0.1.0-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e9c1c1cca3aba24fc6d446ed14a355f", "sha256": "6ec1cdee5b38d6d77e89299ed13b070287a29c910b9f46c3472fcf0a73bf4f7a"}, "downloads": -1, "filename": "git_rsrc-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "6e9c1c1cca3aba24fc6d446ed14a355f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6666, "upload_time": "2017-12-12T22:38:31", "upload_time_iso_8601": "2017-12-12T22:38:31.326284Z", "url": "https://files.pythonhosted.org/packages/82/59/28d4a3137693a38d3cb58d983f6c7ab2a96399bcf3ef86e6fc095d01423a/git_rsrc-0.1.0-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:56:47 2020"}