{"info": {"author": "Chuck Bassett", "author_email": "iamchuckb@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# django-geohashing\n\nA Django application for calculating geohashes and exposing them \nvia RESTful interface. Requires Django 1.8.x+ (takes advantage of\nupdated argument parsing for custom management commands, see: \n[Django 1.8 Release Notes][1] for more information).\n\n## Installation\n\nInstall with pip:\n\n```bash\npip install django-geohashing\n```\n\n## Quick Start\n\n1. Add \"geohashing\"  and \"rest_framework\" to your INSTALLED_APPS:\n\n    ```python\n    INSTALLED_APPS = (\n       ...\n       'geohashing',\n       'rest_framework',\n    )\n    ```\n\n2. Create the geohashing tables by resyncing your models:\n\n    ```bash\n    python manage.py migrate\n    ```\n\n3. Populate the table using the `get_historical_djia` management command:\n\n    ```bash\n    python manage.py get_historical_djia --start <date> --end <date>\n    ```\n\n   The `get_historical_djia` command takes two optional parameters:\n   `--start` and `--end`. These parameters accept date strings of the format\n   `YYYY-MM-DD`. They may be used to limit the set of results from\n   which to database is populated (so for instance to only retrieve and process \n   only the 30 most recent DJIA openings instead of every opening since 1928).\n\n   The parameters are optional but their use is very much encouraged; otherwise \n   tens of thousands of records will be retrieved and imported individually.\n\n4. To expose the geohashing offsets via REST API, include `geohashing.urls` in\n   your `urls.py`. Though not strictly required, as a best practice a namespace \n   for the urls should be provided:\n\n    ```python\n    from django.conf.urls import url\n\n    urlpatterns = [\n        url(r'^geohashing/', include('geohashing.urls', namespace='geohashing')),\n    ]\n    ```\n\n## TODO\n\nThis project is still in an extremely early alpha stage. Tasks that still need \nto be tackled:\n\n- Update the importer to:\n\n    - Handle the creation of new Day objects and the update of existing Day \n      objects seperately so that we can use `bulk_create` to improve \n      performance.\n    - Extrapolate data points beyond the maximum date when enough information\n      is available to do so.\n    - Add a `get_current_djia` management command to be used for retrieving\n      today's opening value. Occasionally the various sources for the opening \n      value are initially inconsistent with one another. The management command \n      should handle this gracefully by waiting for consensus.\n\n- Add unit tests and docs\n- Run Flake8 against the codebase and fix any glaring PEP-8 violations\n- Set up Continuous Integration...integration\n\n[1]: https://docs.djangoproject.com/en/1.8/releases/1.8/#extending-management-command-arguments-through-command-option-list", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": null, "keywords": "geohashing xkcd django", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-geohashing", "package_url": "https://pypi.org/project/django-geohashing/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-geohashing/", "project_urls": null, "release_url": "https://pypi.org/project/django-geohashing/0.2.1/", "requires_dist": ["django", "requests", "djangorestframework"], "requires_python": null, "summary": "Django app for working with XKCD geohashing data", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-geohashing<br><br>A Django application for calculating geohashes and exposing them <br>via RESTful interface. Requires Django 1.8.x+ (takes advantage of<br>updated argument parsing for custom management commands, see: <br>[Django 1.8 Release Notes][1] for more information).<br><br>## Installation<br><br>Install with pip:<br><br>```bash<br>pip install django-geohashing<br>```<br><br>## Quick Start<br><br>1. Add \"geohashing\"  and \"rest_framework\" to your INSTALLED_APPS:<br><br>    ```python<br>    INSTALLED_APPS = (<br>       ...<br>       'geohashing',<br>       'rest_framework',<br>    )<br>    ```<br><br>2. Create the geohashing tables by resyncing your models:<br><br>    ```bash<br>    python manage.py migrate<br>    ```<br><br>3. Populate the table using the `get_historical_djia` management command:<br><br>    ```bash<br>    python manage.py get_historical_djia --start &lt;date&gt; --end &lt;date&gt;<br>    ```<br><br>   The `get_historical_djia` command takes two optional parameters:<br>   `--start` and `--end`. These parameters accept date strings of the format<br>   `YYYY-MM-DD`. They may be used to limit the set of results from<br>   which to database is populated (so for instance to only retrieve and process <br>   only the 30 most recent DJIA openings instead of every opening since 1928).<br><br>   The parameters are optional but their use is very much encouraged; otherwise <br>   tens of thousands of records will be retrieved and imported individually.<br><br>4. To expose the geohashing offsets via REST API, include `geohashing.urls` in<br>   your `urls.py`. Though not strictly required, as a best practice a namespace <br>   for the urls should be provided:<br><br>    ```python<br>    from django.conf.urls import url<br><br>    urlpatterns = [<br>        url(r'^geohashing/', include('geohashing.urls', namespace='geohashing')),<br>    ]<br>    ```<br><br>## TODO<br><br>This project is still in an extremely early alpha stage. Tasks that still need <br>to be tackled:<br><br>- Update the importer to:<br><br>    - Handle the creation of new Day objects and the update of existing Day <br>      objects seperately so that we can use `bulk_create` to improve <br>      performance.<br>    - Extrapolate data points beyond the maximum date when enough information<br>      is available to do so.<br>    - Add a `get_current_djia` management command to be used for retrieving<br>      today's opening value. Occasionally the various sources for the opening <br>      value are initially inconsistent with one another. The management command <br>      should handle this gracefully by waiting for consensus.<br><br>- Add unit tests and docs<br>- Run Flake8 against the codebase and fix any glaring PEP-8 violations<br>- Set up Continuous Integration...integration<br><br>[1]: https://docs.djangoproject.com/en/1.8/releases/1.8/#extending-management-command-arguments-through-command-option-list\n          </div>"}, "last_serial": 1523352, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "12e1a4ebc058debc8f687c46e81d2d8b", "sha256": "bb78b6c227a7b2ace4cf34caba5aa64cd478d069a40e5f2a6f2d3e759cb185ca"}, "downloads": -1, "filename": "django_geohashing-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "12e1a4ebc058debc8f687c46e81d2d8b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11401, "upload_time": "2015-04-23T14:39:24", "upload_time_iso_8601": "2015-04-23T14:39:24.244850Z", "url": "https://files.pythonhosted.org/packages/57/17/5283b7a62d51bb1ce864dd460ea26561dddf68feda0fae19a1c869d1ba09/django_geohashing-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b4e08332e7c1a1963cc39dabf10a555", "sha256": "3e5e2cdb7c82cc3829eadc4edea7455b6c6f65a39c563aece48c7d017a7d2c00"}, "downloads": -1, "filename": "django-geohashing-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6b4e08332e7c1a1963cc39dabf10a555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8427, "upload_time": "2015-04-23T14:39:27", "upload_time_iso_8601": "2015-04-23T14:39:27.914436Z", "url": "https://files.pythonhosted.org/packages/50/38/ce204d4daf8ec662ac45e66153b3383da957f7d51aa5ac1ad00b46421849/django-geohashing-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cb14a643a8fa705a17c378fc26e6ad2e", "sha256": "fb245d19f3ccc23aa6d9f58e0038e8326fc8aef57384122e67383b52fc62521a"}, "downloads": -1, "filename": "django_geohashing-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb14a643a8fa705a17c378fc26e6ad2e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11907, "upload_time": "2015-04-27T11:57:13", "upload_time_iso_8601": "2015-04-27T11:57:13.872704Z", "url": "https://files.pythonhosted.org/packages/fd/a4/6e030b7f608e2790f08a426a842cce93e093e2973b4ead4ddcbc2f3867d9/django_geohashing-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "419156edf66503faafcadefb083b6c25", "sha256": "723a2e11e490f768e29b7b11d62822c72a41b0ff235d8b6387adb9bd74720a62"}, "downloads": -1, "filename": "django-geohashing-0.2.0.tar.gz", "has_sig": false, "md5_digest": "419156edf66503faafcadefb083b6c25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9035, "upload_time": "2015-04-27T11:57:16", "upload_time_iso_8601": "2015-04-27T11:57:16.218874Z", "url": "https://files.pythonhosted.org/packages/69/b1/61b39a3ce7e594951cfa3e8ff82abee7db66435fccd139a8efb0ab7d551a/django-geohashing-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fbc39a2b1befed0d4f7a8f2be45a3ad8", "sha256": "2b8f4cac09b097c11c01d81e8532b104b84ed27bf312be34da5f808cc4d155bb"}, "downloads": -1, "filename": "django_geohashing-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbc39a2b1befed0d4f7a8f2be45a3ad8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12421, "upload_time": "2015-04-27T19:02:40", "upload_time_iso_8601": "2015-04-27T19:02:40.333761Z", "url": "https://files.pythonhosted.org/packages/1c/d2/2d768eeebf44e548e2285f4f7a24161415486ea6879ca5fb2374eab4a669/django_geohashing-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e371739680c0d2cd09cf167e9126e490", "sha256": "abba4d264f4b9251413a7a45124587c11378411567f07d04648ed216f18c3f5a"}, "downloads": -1, "filename": "django-geohashing-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e371739680c0d2cd09cf167e9126e490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8709, "upload_time": "2015-04-27T19:02:43", "upload_time_iso_8601": "2015-04-27T19:02:43.150127Z", "url": "https://files.pythonhosted.org/packages/70/c1/f4e6111f1aee4385dd14d26d1d2a52d9478af8b9b7b1cdaab68f247f1907/django-geohashing-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbc39a2b1befed0d4f7a8f2be45a3ad8", "sha256": "2b8f4cac09b097c11c01d81e8532b104b84ed27bf312be34da5f808cc4d155bb"}, "downloads": -1, "filename": "django_geohashing-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbc39a2b1befed0d4f7a8f2be45a3ad8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12421, "upload_time": "2015-04-27T19:02:40", "upload_time_iso_8601": "2015-04-27T19:02:40.333761Z", "url": "https://files.pythonhosted.org/packages/1c/d2/2d768eeebf44e548e2285f4f7a24161415486ea6879ca5fb2374eab4a669/django_geohashing-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e371739680c0d2cd09cf167e9126e490", "sha256": "abba4d264f4b9251413a7a45124587c11378411567f07d04648ed216f18c3f5a"}, "downloads": -1, "filename": "django-geohashing-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e371739680c0d2cd09cf167e9126e490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8709, "upload_time": "2015-04-27T19:02:43", "upload_time_iso_8601": "2015-04-27T19:02:43.150127Z", "url": "https://files.pythonhosted.org/packages/70/c1/f4e6111f1aee4385dd14d26d1d2a52d9478af8b9b7b1cdaab68f247f1907/django-geohashing-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:53 2020"}