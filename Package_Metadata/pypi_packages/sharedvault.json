{"info": {"author": "Dorian Jaminais", "author_email": "sharedvault@jaminais.fr", "bugtrack_url": null, "classifiers": ["License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SharedVault\nSharedVault is a small application that allows you to define a secret that will require multiple people to unlock.\n\n# How does it work ?\nAt the core, SharedVault uses Shamir's Secret Sharing algorythm (some code is directly copied from the wikipedia page). This allows us to define a key(M, N) and N parts where the key can be recovered from M parts. \nOn top of that we add a layer where each user has a public/private key that encrypts the shares they hold.\nThis allows the following features:\n* A user change chose and change their password.\n* A user has a single password to remember (instead of one per share).\n* We can grant users access without having to communicate the share over untrusted network.\n\n# Security consideration\n## Private keys\nPrivate keys are stored in the main database and encrypted with the user's password. A weak/leaked password will compromise the private key and therefore all the shares it can decrypt.\n\n## Secret encryption\nThe secret itself is encrypted using the Fernet algorythm. The key is derived with Scrypt from the secret number generated by Shamir's Secret Sharing algorythm. \nNote that I have no idea what I am doing so it is likely that there is a flaw related to the scrypt configuration that could compromise a secret's safety.\n\n## Revoking access\nEverytime a secret is updated we generate a brand new set of keys for the new encryption. This allows us to deny future access to a user that has their key removed from the secret.\n\n# How to use it ?\n\nI will add more ways to use this tool but right now there is a cli that you can run with:\n```\n$ pipenv run python -m cli --db=$DB_CONN_STR --help\n```\n\nDepending on the type of database you use, you might need additional dependencies. You can read more about the connection string format, available backends and additional dependencies at https://docs.sqlalchemy.org/en/13/core/engines.html.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nanassito/sharedvault", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sharedvault", "package_url": "https://pypi.org/project/sharedvault/", "platform": "", "project_url": "https://pypi.org/project/sharedvault/", "project_urls": {"Homepage": "https://github.com/nanassito/sharedvault"}, "release_url": "https://pypi.org/project/sharedvault/1.0/", "requires_dist": ["cryptography", "sqlalchemy"], "requires_python": ">=3.6", "summary": "SharedVault is a small application that allows you to define a secret that will require multiple people to unlock.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SharedVault</h1>\n<p>SharedVault is a small application that allows you to define a secret that will require multiple people to unlock.</p>\n<h1>How does it work ?</h1>\n<p>At the core, SharedVault uses Shamir's Secret Sharing algorythm (some code is directly copied from the wikipedia page). This allows us to define a key(M, N) and N parts where the key can be recovered from M parts.\nOn top of that we add a layer where each user has a public/private key that encrypts the shares they hold.\nThis allows the following features:</p>\n<ul>\n<li>A user change chose and change their password.</li>\n<li>A user has a single password to remember (instead of one per share).</li>\n<li>We can grant users access without having to communicate the share over untrusted network.</li>\n</ul>\n<h1>Security consideration</h1>\n<h2>Private keys</h2>\n<p>Private keys are stored in the main database and encrypted with the user's password. A weak/leaked password will compromise the private key and therefore all the shares it can decrypt.</p>\n<h2>Secret encryption</h2>\n<p>The secret itself is encrypted using the Fernet algorythm. The key is derived with Scrypt from the secret number generated by Shamir's Secret Sharing algorythm.\nNote that I have no idea what I am doing so it is likely that there is a flaw related to the scrypt configuration that could compromise a secret's safety.</p>\n<h2>Revoking access</h2>\n<p>Everytime a secret is updated we generate a brand new set of keys for the new encryption. This allows us to deny future access to a user that has their key removed from the secret.</p>\n<h1>How to use it ?</h1>\n<p>I will add more ways to use this tool but right now there is a cli that you can run with:</p>\n<pre><code>$ pipenv run python -m cli --db=$DB_CONN_STR --help\n</code></pre>\n<p>Depending on the type of database you use, you might need additional dependencies. You can read more about the connection string format, available backends and additional dependencies at <a href=\"https://docs.sqlalchemy.org/en/13/core/engines.html\" rel=\"nofollow\">https://docs.sqlalchemy.org/en/13/core/engines.html</a>.</p>\n\n          </div>"}, "last_serial": 6766563, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9395fa2586c814eb1ecaf2a391d49557", "sha256": "17bf906edc930c077700a458868dd0580951ccfd2823d082f4bdd15016a743db"}, "downloads": -1, "filename": "sharedvault-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9395fa2586c814eb1ecaf2a391d49557", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2106, "upload_time": "2020-03-07T05:17:37", "upload_time_iso_8601": "2020-03-07T05:17:37.613564Z", "url": "https://files.pythonhosted.org/packages/04/ff/1a13a553c937c2096fd481eea092392c5e3fe066b34b7620377b5000c8ac/sharedvault-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ee649cd271dd11cc61432a7c295b406", "sha256": "f859139a3053c885fb4a3b6e4569ec47bf0fb345a77aede3b92535f435537a33"}, "downloads": -1, "filename": "sharedvault-1.0.tar.gz", "has_sig": false, "md5_digest": "0ee649cd271dd11cc61432a7c295b406", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2431, "upload_time": "2020-03-07T05:17:42", "upload_time_iso_8601": "2020-03-07T05:17:42.317137Z", "url": "https://files.pythonhosted.org/packages/71/f0/58807d99366ec979fe07e6f4c0fd378a2ccf205f41dc1fcb72e9ea8b7488/sharedvault-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9395fa2586c814eb1ecaf2a391d49557", "sha256": "17bf906edc930c077700a458868dd0580951ccfd2823d082f4bdd15016a743db"}, "downloads": -1, "filename": "sharedvault-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9395fa2586c814eb1ecaf2a391d49557", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2106, "upload_time": "2020-03-07T05:17:37", "upload_time_iso_8601": "2020-03-07T05:17:37.613564Z", "url": "https://files.pythonhosted.org/packages/04/ff/1a13a553c937c2096fd481eea092392c5e3fe066b34b7620377b5000c8ac/sharedvault-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ee649cd271dd11cc61432a7c295b406", "sha256": "f859139a3053c885fb4a3b6e4569ec47bf0fb345a77aede3b92535f435537a33"}, "downloads": -1, "filename": "sharedvault-1.0.tar.gz", "has_sig": false, "md5_digest": "0ee649cd271dd11cc61432a7c295b406", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2431, "upload_time": "2020-03-07T05:17:42", "upload_time_iso_8601": "2020-03-07T05:17:42.317137Z", "url": "https://files.pythonhosted.org/packages/71/f0/58807d99366ec979fe07e6f4c0fd378a2ccf205f41dc1fcb72e9ea8b7488/sharedvault-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:38 2020"}