{"info": {"author": "Corey Oordt", "author_email": "coreyoordt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============\nDashboard Mods\n==============\n\nDashboard Mods is a set of ``DashboardModule``\\ s for \n`django-admin-tools <http://pypi.python.org/pypi/django-admin-tools/>`_\\ .\n\nChanges\n=======\n\n**0.2** Updated to support Django Admin Tools 0.4.0\n\nInstallation\n============\n\nUsing PIP::\n\n\tpip install dashboardmods\n\t\nor download the app `here <http://pypi.python.org/pypi/dashboardmods/>`_ ::\n\n\tpython setup.py install\n\n\nAdd **dashboardmods** to your settings **INSTALLED_APPS**::\n\n    INSTALLED_APPS = (\n        ...\n        'dashboardmods',\n        ...\n    )\n\n\nMemcacheDashboardModule\n=======================\n\nDisplays a bar graph of memory usage, hit/miss ratio and uptime for each memcache server configured in Django's settings.\n\nTo enable, simply add::\n\n\tfrom dashboardmods import get_memcache_dash_modules\n\nat the top of the page and in the ``__init__`` method add::\n\n\tself.children.extend(get_memcache_dash_modules())\n\nIf no memcache servers are configured, nothing happens.\n\nVarnishDashboardModule\n======================\n\nDisplays a bar graph of memory usage and hit/miss ratios for each Varnish server configured in ``VARNISH_MANAGEMENT_ADDRS``\\ . It uses \n`python-varnish <http://pypi.python.org/pypi/django-varnish/>`_ for communication. See its docs for more information on setup and installation of ``python-varnish``\\ .\n\nTo enable, simply add::\n\n\tfrom dashboardmods import get_varnish_dash_modules\n\nat the top of the page and in the ``__init__`` method add::\n\n\tself.children.extend(get_varnish_dash_modules())\n\nIf no Varnish servers are configured, nothing happens.\n\nRSSDashboardModule\n==================\n\nThis is a model that allows the dynamic input of RSS feeds to appear as a ``DashboardModule``\\ .\n\nTo enable, add ``dashboardmods`` to your ``INSTALLED_APPS`` and ``./manage.py syncdb``\\ . \n\nThen add::\n\n\tfrom dashboardmods import get_rss_dash_modules\n\nat the top of the page and in the ``__init__`` method add::\n\n\tself.children.extend(get_rss_dash_modules())\n\nIf no ``RSSDashboardModule`` records are entered, nothing happens. As soon as one is entered, the ``DashboardModule`` is immediately available.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/callowayproject/dashboardmods", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "dashboardmods", "package_url": "https://pypi.org/project/dashboardmods/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dashboardmods/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/callowayproject/dashboardmods"}, "release_url": "https://pypi.org/project/dashboardmods/1.0/", "requires_dist": null, "requires_python": null, "summary": "A collection of dashboard modules for django-admin-tools", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Dashboard Mods is a set of <tt>DashboardModule</tt>s for\n<a href=\"http://pypi.python.org/pypi/django-admin-tools/\" rel=\"nofollow\">django-admin-tools</a>.</p>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p><strong>0.2</strong> Updated to support Django Admin Tools 0.4.0</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using PIP:</p>\n<pre>pip install dashboardmods\n</pre>\n<p>or download the app <a href=\"http://pypi.python.org/pypi/dashboardmods/\" rel=\"nofollow\">here</a></p>\n<pre>python setup.py install\n</pre>\n<p>Add <strong>dashboardmods</strong> to your settings <strong>INSTALLED_APPS</strong>:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'dashboardmods',\n    ...\n)\n</pre>\n</div>\n<div id=\"memcachedashboardmodule\">\n<h2>MemcacheDashboardModule</h2>\n<p>Displays a bar graph of memory usage, hit/miss ratio and uptime for each memcache server configured in Django\u2019s settings.</p>\n<p>To enable, simply add:</p>\n<pre>from dashboardmods import get_memcache_dash_modules\n</pre>\n<p>at the top of the page and in the <tt>__init__</tt> method add:</p>\n<pre>self.children.extend(get_memcache_dash_modules())\n</pre>\n<p>If no memcache servers are configured, nothing happens.</p>\n</div>\n<div id=\"varnishdashboardmodule\">\n<h2>VarnishDashboardModule</h2>\n<p>Displays a bar graph of memory usage and hit/miss ratios for each Varnish server configured in <tt>VARNISH_MANAGEMENT_ADDRS</tt>. It uses\n<a href=\"http://pypi.python.org/pypi/django-varnish/\" rel=\"nofollow\">python-varnish</a> for communication. See its docs for more information on setup and installation of <tt><span class=\"pre\">python-varnish</span></tt>.</p>\n<p>To enable, simply add:</p>\n<pre>from dashboardmods import get_varnish_dash_modules\n</pre>\n<p>at the top of the page and in the <tt>__init__</tt> method add:</p>\n<pre>self.children.extend(get_varnish_dash_modules())\n</pre>\n<p>If no Varnish servers are configured, nothing happens.</p>\n</div>\n<div id=\"rssdashboardmodule\">\n<h2>RSSDashboardModule</h2>\n<p>This is a model that allows the dynamic input of RSS feeds to appear as a <tt>DashboardModule</tt>.</p>\n<p>To enable, add <tt>dashboardmods</tt> to your <tt>INSTALLED_APPS</tt> and <tt>./manage.py syncdb</tt>.</p>\n<p>Then add:</p>\n<pre>from dashboardmods import get_rss_dash_modules\n</pre>\n<p>at the top of the page and in the <tt>__init__</tt> method add:</p>\n<pre>self.children.extend(get_rss_dash_modules())\n</pre>\n<p>If no <tt>RSSDashboardModule</tt> records are entered, nothing happens. As soon as one is entered, the <tt>DashboardModule</tt> is immediately available.</p>\n</div>\n\n          </div>"}, "last_serial": 962949, "releases": {"0.1beta1": [{"comment_text": "", "digests": {"md5": "d8f53477433c1394f50297de670eadfd", "sha256": "3dade1269b1e627c50eb67455a56b7e113911bb5c79955aad5fe86faedeb3ab7"}, "downloads": -1, "filename": "dashboardmods-0.1beta1.tar.gz", "has_sig": false, "md5_digest": "d8f53477433c1394f50297de670eadfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 339401, "upload_time": "2010-06-18T02:50:08", "upload_time_iso_8601": "2010-06-18T02:50:08.015575Z", "url": "https://files.pythonhosted.org/packages/40/ba/89c7209d74651d6f105fecb6f73754f48bc44f6c5ef5354de27b18ff8273/dashboardmods-0.1beta1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ca1c1452ed467a0bc06c1b9360da84f2", "sha256": "fe82866d4c97992d08957e574fc81da6a6801bc1495982b07c787fba522185ce"}, "downloads": -1, "filename": "dashboardmods-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ca1c1452ed467a0bc06c1b9360da84f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 264168, "upload_time": "2011-05-22T03:03:11", "upload_time_iso_8601": "2011-05-22T03:03:11.215345Z", "url": "https://files.pythonhosted.org/packages/c3/03/4c5701d2719766ef1adb226edbc32a6746ae5163172a7f4aa808be3cf495/dashboardmods-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "084521a9077a03a08b51e4d9ba2efb66", "sha256": "0bb0fd029a107b02c7cbb6345f24a6ab9e25903de8b20a18d44fabb806ccc32a"}, "downloads": -1, "filename": "dashboardmods-0.2.2.tar.gz", "has_sig": false, "md5_digest": "084521a9077a03a08b51e4d9ba2efb66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 263366, "upload_time": "2011-08-12T17:05:19", "upload_time_iso_8601": "2011-08-12T17:05:19.345870Z", "url": "https://files.pythonhosted.org/packages/06/49/e104f559b6212728749d82c1171189c8716ce952da4ed631c57dbfa0e0c3/dashboardmods-0.2.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "5e0845a8553ac7951ce4bec244e427ed", "sha256": "5ba511f1514abf795f40920cbf064d63d69f49ea87b68d6b54f4a4cf02d41f57"}, "downloads": -1, "filename": "dashboardmods-1.0.tar.gz", "has_sig": false, "md5_digest": "5e0845a8553ac7951ce4bec244e427ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 241792, "upload_time": "2014-01-07T20:22:38", "upload_time_iso_8601": "2014-01-07T20:22:38.500789Z", "url": "https://files.pythonhosted.org/packages/ba/00/0b690926608398a273c3eb5f9f83a036198a7cbbc0dc6623145f38587116/dashboardmods-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5e0845a8553ac7951ce4bec244e427ed", "sha256": "5ba511f1514abf795f40920cbf064d63d69f49ea87b68d6b54f4a4cf02d41f57"}, "downloads": -1, "filename": "dashboardmods-1.0.tar.gz", "has_sig": false, "md5_digest": "5e0845a8553ac7951ce4bec244e427ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 241792, "upload_time": "2014-01-07T20:22:38", "upload_time_iso_8601": "2014-01-07T20:22:38.500789Z", "url": "https://files.pythonhosted.org/packages/ba/00/0b690926608398a273c3eb5f9f83a036198a7cbbc0dc6623145f38587116/dashboardmods-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:37 2020"}