{"info": {"author": "Hyunchel Kim", "author_email": "hyunchel.inbox@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# mochart\n\n[![CircleCI](https://circleci.com/gh/hyunchel/mochart/tree/master.svg?style=svg)](https://circleci.com/gh/hyunchel/mochart/tree/master)\n\nmochart(**m**usic **o**n **chart**) is a simple webpage parser that aims to retrieve song rankings in JSON compatible data format.\n\n## Installation\n\nA simple `pip` install:\n```bash\npip install mochart\n```\n\n## Example\n\nRealtime ranks from Melon:\n```python\nfrom mochart import melon\nranks = melon.realtime()\nprint(ranks)\n```\nAt the time of this writing, the code would print:\n```json\n[{\n\t\"title\": \"SOLO\",\n\t\"artist\": \"\uc81c\ub2c8 (JENNIE)\",\n\t\"album\": \"SOLO\"\n}, {\n\t\"title\": \"\ubd04\ubc14\ub78c\",\n\t\"artist\": \"Wanna One (\uc6cc\ub108\uc6d0)\",\n\t\"album\": \"1\u00b9\u00b9=1 (POWER OF DESTINY)\"\n}, {\n\t\"title\": \"Tempo\",\n\t\"artist\": \"EXO\",\n\t\"album\": \"DON`T MESS UP MY TEMPO - The 5th Album\"\n}, {\n\t\"title\": \"YES or YES\",\n\t\"artist\": \"TWICE (\ud2b8\uc640\uc774\uc2a4)\",\n\t\"album\": \"YES or YES\"\n}, {\n\t\"title\": \"\ub108\ub97c \ub9cc\ub098\",\n\t\"artist\": \"\ud3f4\ud0b4\",\n\t\"album\": \"\ub108\ub97c \ub9cc\ub098\"\n}, {\n\t\"title\": \"\uc544\ub984\ub2f5\uace0\ub3c4 \uc544\ud504\uad6c\ub098\",\n\t\"artist\": \"\ube44\ud22c\ube44\",\n\t\"album\": \"HOUR MOMENT\"\n}, {\n\t\"title\": \"Gravity\",\n\t\"artist\": \"EXO\",\n\t\"album\": \"DON`T MESS UP MY TEMPO - The 5th Album\"\n}...]\n```\n> feat. \uc544\uc774\ub3cc\uc804\uc7c1\n\n## API\n\nAll functions in a provider(e.g. Melon) will return Python List that contains music information in order of its ranking.\n\nGenerally, a rank contains title, aritst, and album in string format as seen above.\n\n*Not all providers support the these functions.*\n\n#### realtime\nReturn the most current ranks at the time of query.\n\n#### trend\nReturn songs that are trending at the time of query.\n\n#### day\nReturn ranks given day.\n\n#### week\nReturn ranks given week.\n\n#### month\nReturn ranks given month.\n\n#### year\nReturn ranks given year.\n\n\n## Datetime\n\nGiven datetime object will be converted into a local datetime for the provider. For example A datetime given to `melon.day(today)`, the argument `today` will be converted to  `Asia/Seoul` timezone before the query.\n\nNote that if incorrect time is given to any function, it could return either an empty array or ranks of the closest date.\n\nAlso, if no datetime object is provided as an argument, the current time will be used in the query.\n\n## Contribution\n\nYou are more than welcome to contribute a new chart and/or ideas on this project.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hyunchel/mochart", "keywords": "music online chart ranking melon mnet naver gaon oricon", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mochart", "package_url": "https://pypi.org/project/mochart/", "platform": "", "project_url": "https://pypi.org/project/mochart/", "project_urls": {"Bug Tracker": "https://github.com/hyunchel/mochart/issues", "Documentation": "https://github.com/hyunchel/mochart/README.md", "Homepage": "https://github.com/hyunchel/mochart", "Source Code": "https://github.com/hyunchel/mochart"}, "release_url": "https://pypi.org/project/mochart/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Music online charts.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mochart</h1>\n<p><a href=\"https://circleci.com/gh/hyunchel/mochart/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/248a5ab747714012465a716f698a836a6fcd93d6/68747470733a2f2f636972636c6563692e636f6d2f67682f6879756e6368656c2f6d6f63686172742f747265652f6d61737465722e7376673f7374796c653d737667\"></a></p>\n<p>mochart(<strong>m</strong>usic <strong>o</strong>n <strong>chart</strong>) is a simple webpage parser that aims to retrieve song rankings in JSON compatible data format.</p>\n<h2>Installation</h2>\n<p>A simple <code>pip</code> install:</p>\n<pre>pip install mochart\n</pre>\n<h2>Example</h2>\n<p>Realtime ranks from Melon:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mochart</span> <span class=\"kn\">import</span> <span class=\"n\">melon</span>\n<span class=\"n\">ranks</span> <span class=\"o\">=</span> <span class=\"n\">melon</span><span class=\"o\">.</span><span class=\"n\">realtime</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ranks</span><span class=\"p\">)</span>\n</pre>\n<p>At the time of this writing, the code would print:</p>\n<pre><span class=\"p\">[{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SOLO\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\uc81c\ub2c8 (JENNIE)\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SOLO\"</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\ubd04\ubc14\ub78c\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Wanna One (\uc6cc\ub108\uc6d0)\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\u00b9\u00b9=1 (POWER OF DESTINY)\"</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Tempo\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"EXO\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DON`T MESS UP MY TEMPO - The 5th Album\"</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YES or YES\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"TWICE (\ud2b8\uc640\uc774\uc2a4)\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YES or YES\"</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\ub108\ub97c \ub9cc\ub098\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\ud3f4\ud0b4\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\ub108\ub97c \ub9cc\ub098\"</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\uc544\ub984\ub2f5\uace0\ub3c4 \uc544\ud504\uad6c\ub098\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\ube44\ud22c\ube44\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"HOUR MOMENT\"</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t<span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Gravity\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"artist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"EXO\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"album\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DON`T MESS UP MY TEMPO - The 5th Album\"</span>\n<span class=\"p\">}</span><span class=\"err\">...</span><span class=\"p\">]</span>\n</pre>\n<blockquote>\n<p>feat. \uc544\uc774\ub3cc\uc804\uc7c1</p>\n</blockquote>\n<h2>API</h2>\n<p>All functions in a provider(e.g. Melon) will return Python List that contains music information in order of its ranking.</p>\n<p>Generally, a rank contains title, aritst, and album in string format as seen above.</p>\n<p><em>Not all providers support the these functions.</em></p>\n<h4>realtime</h4>\n<p>Return the most current ranks at the time of query.</p>\n<h4>trend</h4>\n<p>Return songs that are trending at the time of query.</p>\n<h4>day</h4>\n<p>Return ranks given day.</p>\n<h4>week</h4>\n<p>Return ranks given week.</p>\n<h4>month</h4>\n<p>Return ranks given month.</p>\n<h4>year</h4>\n<p>Return ranks given year.</p>\n<h2>Datetime</h2>\n<p>Given datetime object will be converted into a local datetime for the provider. For example A datetime given to <code>melon.day(today)</code>, the argument <code>today</code> will be converted to  <code>Asia/Seoul</code> timezone before the query.</p>\n<p>Note that if incorrect time is given to any function, it could return either an empty array or ranks of the closest date.</p>\n<p>Also, if no datetime object is provided as an argument, the current time will be used in the query.</p>\n<h2>Contribution</h2>\n<p>You are more than welcome to contribute a new chart and/or ideas on this project.</p>\n\n          </div>"}, "last_serial": 4524658, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2da99808dc2781eb68bba205512cc09e", "sha256": "717fba6e0d9937c563f4fe8ddc13e6459b8680c8fd8c0be5bb4dfa2de5852020"}, "downloads": -1, "filename": "mochart-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2da99808dc2781eb68bba205512cc09e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7073, "upload_time": "2018-11-24T22:28:24", "upload_time_iso_8601": "2018-11-24T22:28:24.738421Z", "url": "https://files.pythonhosted.org/packages/e8/a3/cc19e8d5bcf19bfba99a28380de3980db68aec09a3f2ba41401391c969de/mochart-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4d08f73a800310b12a0889a23fa07637", "sha256": "039fc07b782427cdb7507ebea4919bfaab0f17eafc97b0ad697f28fd4ab20e2d"}, "downloads": -1, "filename": "mochart-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4d08f73a800310b12a0889a23fa07637", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7057, "upload_time": "2018-11-24T22:40:06", "upload_time_iso_8601": "2018-11-24T22:40:06.175236Z", "url": "https://files.pythonhosted.org/packages/4c/ac/af30a20e39ad17a74a55b7b085bb8bf0e7ad65989121bae17d7c5d9a83b2/mochart-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d08f73a800310b12a0889a23fa07637", "sha256": "039fc07b782427cdb7507ebea4919bfaab0f17eafc97b0ad697f28fd4ab20e2d"}, "downloads": -1, "filename": "mochart-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4d08f73a800310b12a0889a23fa07637", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7057, "upload_time": "2018-11-24T22:40:06", "upload_time_iso_8601": "2018-11-24T22:40:06.175236Z", "url": "https://files.pythonhosted.org/packages/4c/ac/af30a20e39ad17a74a55b7b085bb8bf0e7ad65989121bae17d7c5d9a83b2/mochart-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:05 2020"}