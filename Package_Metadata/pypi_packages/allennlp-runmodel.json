{"info": {"author": "liu xue yan", "author_email": "liu_xue_yan@foxmail.com", "bugtrack_url": null, "classifiers": [], "description": "# allennlp-runmodel\n\nRun a [AllenNLP] trained model, and serve it with WebAPI.\n\n## Usage\n\n### Run the program\n\nExecute the program in terminator, the option `--help` will show help message:\n\n```console\n$ allennlp-runmodel --help\nUsage: allennlp-runmodel [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]...\n\n  Start a webservice for running AllenNLP models.\n\nOptions:\n  -V, --version\n  -h, --host TEXT                 TCP/IP host for HTTP server.  [default:\n                                  localhost]\n  -p, --port INTEGER              TCP/IP port for HTTP server.  [default:\n                                  8000]\n  -a, --path TEXT                 File system path for HTTP server Unix domain\n                                  socket. Listening on Unix domain sockets is\n                                  not supported by all operating systems.\n  -l, --logging-config FILE       Path to logging configuration file (JSON,\n                                  YAML or INI) (ref: https://docs.python.org/l\n                                  ibrary/logging.config.html#logging-config-\n                                  dictschema)\n  -v, --logging-level [critical|fatal|error|warn|warning|info|debug|notset]\n                                  Sets the logging level, only affected when\n                                  `--logging-config` not specified.  [default:\n                                  info]\n  --help                          Show this message and exit.\n\nCommands:\n  load  Load a pre-trained AllenNLP model from it's archive file, and put\n        it...\n\n```\n\nand\n\n```sh\n$ allennlp-runmodel load --help\nUsage: allennlp-runmodel load [OPTIONS] ARCHIVE\n\n  Load a pre-trained AllenNLP model from it's archive file, and put it into\n  the webservice contrainer.\n\nOptions:\n  -m, --model-name TEXT           Model name used in URL. eg: http://xxx.xxx.x\n                                  xx.xxx:8000/?model=model_name\n  -t, --num-threads INTEGER       Sets the number of OpenMP threads used for\n                                  parallelizing CPU operations. [default: 4\n                                  (on this machine)]\n  -w, --max-workers INTEGER       Uses a pool of at most max_workers threads\n                                  to execute calls asynchronously. [default:\n                                  num_threads/cpu_count (1 on this machine)]\n  -w, --worker-type [process|thread]\n                                  Sets the workers execute in thread or\n                                  process.  [default: process]\n  -d, --cuda-device INTEGER       If CUDA_DEVICE is >= 0, the model will be\n                                  loaded onto the corresponding GPU. Otherwise\n                                  it will be loaded onto the CPU.  [default:\n                                  -1]\n  -e, --predictor-name TEXT       Optionally specify which `Predictor`\n                                  subclass; otherwise, the default one for the\n                                  model will be used.\n  --help                          Show this message and exit.\n```\n\n`load` sub-command can be called many times to load multiple models.\n\neg:\n\n```sh\nallennlp-runmodel  --port 8080 load --model-name model1 /path/of/model1.tar.gz load --model-name model2 /path/of/model2.tar.gz\n```\n\n### Make prediction from HTTP client\n\n```sh\ncurl \\\n  --header \"Content-Type: application/json\" \\\n  --request POST \\\n  --data '{\"premise\":\"Two women are embracing while holding to go packages.\",\"hypothesis\":\"The sisters are hugging goodbye while holding to go packages after just eating lunch.\"}' \\\n  http://localhost:8080/?model=model1\n```\n\n------\n[AllenNLP]: https://allennlp.org/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tanbro/allennlp-runmodel", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "allennlp-runmodel", "package_url": "https://pypi.org/project/allennlp-runmodel/", "platform": "", "project_url": "https://pypi.org/project/allennlp-runmodel/", "project_urls": {"Homepage": "https://github.com/tanbro/allennlp-runmodel"}, "release_url": "https://pypi.org/project/allennlp-runmodel/0.2.1/", "requires_dist": ["allennlp", "aiohttp", "click", "toml ; extra == 'toml'", "PyYAML ; extra == 'yaml'"], "requires_python": "", "summary": "Run a AllenNLP trained model, and serve it with WebAPI.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>allennlp-runmodel</h1>\n<p>Run a <a href=\"https://allennlp.org/\" rel=\"nofollow\">AllenNLP</a> trained model, and serve it with WebAPI.</p>\n<h2>Usage</h2>\n<h3>Run the program</h3>\n<p>Execute the program in terminator, the option <code>--help</code> will show help message:</p>\n<pre><span class=\"gp\">$</span> allennlp-runmodel --help\n<span class=\"go\">Usage: allennlp-runmodel [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]...</span>\n\n<span class=\"go\">  Start a webservice for running AllenNLP models.</span>\n\n<span class=\"go\">Options:</span>\n<span class=\"go\">  -V, --version</span>\n<span class=\"go\">  -h, --host TEXT                 TCP/IP host for HTTP server.  [default:</span>\n<span class=\"go\">                                  localhost]</span>\n<span class=\"go\">  -p, --port INTEGER              TCP/IP port for HTTP server.  [default:</span>\n<span class=\"go\">                                  8000]</span>\n<span class=\"go\">  -a, --path TEXT                 File system path for HTTP server Unix domain</span>\n<span class=\"go\">                                  socket. Listening on Unix domain sockets is</span>\n<span class=\"go\">                                  not supported by all operating systems.</span>\n<span class=\"go\">  -l, --logging-config FILE       Path to logging configuration file (JSON,</span>\n<span class=\"go\">                                  YAML or INI) (ref: https://docs.python.org/l</span>\n<span class=\"go\">                                  ibrary/logging.config.html#logging-config-</span>\n<span class=\"go\">                                  dictschema)</span>\n<span class=\"go\">  -v, --logging-level [critical|fatal|error|warn|warning|info|debug|notset]</span>\n<span class=\"go\">                                  Sets the logging level, only affected when</span>\n<span class=\"go\">                                  `--logging-config` not specified.  [default:</span>\n<span class=\"go\">                                  info]</span>\n<span class=\"go\">  --help                          Show this message and exit.</span>\n\n<span class=\"go\">Commands:</span>\n<span class=\"go\">  load  Load a pre-trained AllenNLP model from it's archive file, and put</span>\n<span class=\"go\">        it...</span>\n</pre>\n<p>and</p>\n<pre>$ allennlp-runmodel load --help\nUsage: allennlp-runmodel load <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> ARCHIVE\n\n  Load a pre-trained AllenNLP model from it<span class=\"err\">'</span>s archive file, and put it into\n  the webservice contrainer.\n\nOptions:\n  -m, --model-name TEXT           Model name used in URL. eg: http://xxx.xxx.x\n                                  xx.xxx:8000/?model<span class=\"o\">=</span>model_name\n  -t, --num-threads INTEGER       Sets the number of OpenMP threads used <span class=\"k\">for</span>\n                                  parallelizing CPU operations. <span class=\"o\">[</span>default: <span class=\"m\">4</span>\n                                  <span class=\"o\">(</span>on this machine<span class=\"o\">)]</span>\n  -w, --max-workers INTEGER       Uses a pool of at most max_workers threads\n                                  to execute calls asynchronously. <span class=\"o\">[</span>default:\n                                  num_threads/cpu_count <span class=\"o\">(</span><span class=\"m\">1</span> on this machine<span class=\"o\">)]</span>\n  -w, --worker-type <span class=\"o\">[</span>process<span class=\"p\">|</span>thread<span class=\"o\">]</span>\n                                  Sets the workers execute in thread or\n                                  process.  <span class=\"o\">[</span>default: process<span class=\"o\">]</span>\n  -d, --cuda-device INTEGER       If CUDA_DEVICE is &gt;<span class=\"o\">=</span> <span class=\"m\">0</span>, the model will be\n                                  loaded onto the corresponding GPU. Otherwise\n                                  it will be loaded onto the CPU.  <span class=\"o\">[</span>default:\n                                  -1<span class=\"o\">]</span>\n  -e, --predictor-name TEXT       Optionally specify which <span class=\"sb\">`</span>Predictor<span class=\"sb\">`</span>\n                                  subclass<span class=\"p\">;</span> otherwise, the default one <span class=\"k\">for</span> the\n                                  model will be used.\n  --help                          Show this message and exit.\n</pre>\n<p><code>load</code> sub-command can be called many times to load multiple models.</p>\n<p>eg:</p>\n<pre>allennlp-runmodel  --port <span class=\"m\">8080</span> load --model-name model1 /path/of/model1.tar.gz load --model-name model2 /path/of/model2.tar.gz\n</pre>\n<h3>Make prediction from HTTP client</h3>\n<pre>curl <span class=\"se\">\\</span>\n  --header <span class=\"s2\">\"Content-Type: application/json\"</span> <span class=\"se\">\\</span>\n  --request POST <span class=\"se\">\\</span>\n  --data <span class=\"s1\">'{\"premise\":\"Two women are embracing while holding to go packages.\",\"hypothesis\":\"The sisters are hugging goodbye while holding to go packages after just eating lunch.\"}'</span> <span class=\"se\">\\</span>\n  http://localhost:8080/?model<span class=\"o\">=</span>model1\n</pre>\n<hr>\n\n          </div>"}, "last_serial": 4630543, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "335e0ba910b02dc92f4fbf70ddbbf44b", "sha256": "ccc6474dce5d6a963c368a8433796718af03f6dec37f12e33df104d1acede803"}, "downloads": -1, "filename": "allennlp_runmodel-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "335e0ba910b02dc92f4fbf70ddbbf44b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.1", "size": 5814, "upload_time": "2018-11-07T10:13:08", "upload_time_iso_8601": "2018-11-07T10:13:08.140704Z", "url": "https://files.pythonhosted.org/packages/93/ab/1147408d9c29341e732eff30ddcca511ee9f0eef47b5bc7dbae5efd51ebe/allennlp_runmodel-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73222ef34e9795c8b1236f51b9eef2be", "sha256": "f19a49f1ff6c5d1f3ce4350e2b94f0d7b0625d73df86ec0b05188340781dceec"}, "downloads": -1, "filename": "allennlp-runmodel-0.1.tar.gz", "has_sig": false, "md5_digest": "73222ef34e9795c8b1236f51b9eef2be", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.1", "size": 9302, "upload_time": "2018-11-07T10:13:10", "upload_time_iso_8601": "2018-11-07T10:13:10.142842Z", "url": "https://files.pythonhosted.org/packages/95/d9/2ee1cfa4e2f4d9b3d6abc79726a23476c87826b19e6ceec4964052fb40e9/allennlp-runmodel-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6e6c8ad406d0949af3a2bff8e267605a", "sha256": "c597b4fae0da5a6c573c31070ec690c23b73e4d358d2e2b5f3406b9c91adf219"}, "downloads": -1, "filename": "allennlp_runmodel-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e6c8ad406d0949af3a2bff8e267605a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.1", "size": 6355, "upload_time": "2018-11-14T05:10:13", "upload_time_iso_8601": "2018-11-14T05:10:13.320089Z", "url": "https://files.pythonhosted.org/packages/0e/fb/9318dd8953429f6e20640dbf9dcea7d5786a0fda9e491acffb7962a4d4d9/allennlp_runmodel-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51eec8fbe37441d8412aedbba3e817df", "sha256": "089b0d841282fdab66d91bf8ea755389b7628de9ffd2230e6e19ef30ab1513c7"}, "downloads": -1, "filename": "allennlp-runmodel-0.1.1.tar.gz", "has_sig": false, "md5_digest": "51eec8fbe37441d8412aedbba3e817df", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.1", "size": 9845, "upload_time": "2018-11-14T05:10:31", "upload_time_iso_8601": "2018-11-14T05:10:31.276930Z", "url": "https://files.pythonhosted.org/packages/5a/bd/f0572a9887aad83a76a0632037ec289da3db9ccdad945da2d459a96edac8/allennlp-runmodel-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5d5200ee01f98a4161504d3a8fd24a23", "sha256": "304cf87695d0bda75e24efa0df449baf32745d1bf503046a2f0c97f904485341"}, "downloads": -1, "filename": "allennlp_runmodel-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5d5200ee01f98a4161504d3a8fd24a23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.1", "size": 8317, "upload_time": "2018-11-15T09:25:23", "upload_time_iso_8601": "2018-11-15T09:25:23.192252Z", "url": "https://files.pythonhosted.org/packages/ae/fb/9d4f2e610a26e0ff160a404a4b4392c14d85fd6be37782cff6ae54c195e9/allennlp_runmodel-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a32b4d5203dc034c32063432d3cabda9", "sha256": "947e944e476bd18a3eb9be0664afe73ba424c2fbc5514776be9a858a59df74e6"}, "downloads": -1, "filename": "allennlp-runmodel-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a32b4d5203dc034c32063432d3cabda9", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.1", "size": 10670, "upload_time": "2018-11-15T09:25:25", "upload_time_iso_8601": "2018-11-15T09:25:25.174851Z", "url": "https://files.pythonhosted.org/packages/99/8b/599cc72b8efe4597ca124c04f90f06f348a5ca6d7270878e98b26bdb5529/allennlp-runmodel-0.1.2.tar.gz", "yanked": false}], "0.1.2.1": [{"comment_text": "", "digests": {"md5": "0aeeea75612436011a6440051f0e2e37", "sha256": "dff4c641c2c6132973ea9c94c20c0ab8e15acf549b00c43e83f888d243adc9ae"}, "downloads": -1, "filename": "allennlp_runmodel-0.1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0aeeea75612436011a6440051f0e2e37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8332, "upload_time": "2018-11-20T02:15:04", "upload_time_iso_8601": "2018-11-20T02:15:04.960350Z", "url": "https://files.pythonhosted.org/packages/4d/e9/319b58c03156102ad139f5c5542c19178bd734fa01f9ffdb5e44133658aa/allennlp_runmodel-0.1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d103796c123040792f9fe9a31c626d9", "sha256": "dd5435eb20c99965e4c531c976e36cfa8d9e761c3565d958df8bff8562912d04"}, "downloads": -1, "filename": "allennlp-runmodel-0.1.2.1.tar.gz", "has_sig": false, "md5_digest": "8d103796c123040792f9fe9a31c626d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10753, "upload_time": "2018-11-20T02:15:06", "upload_time_iso_8601": "2018-11-20T02:15:06.819507Z", "url": "https://files.pythonhosted.org/packages/30/ec/5e3dba41181e3ce12b8ab7381bb1abe0fc611730ccfa1c934664c3e96677/allennlp-runmodel-0.1.2.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fa2021fb1e4a5c296ed987a00d12d10d", "sha256": "2dc80815218b751d73c21cd865e7799dd4ceeec6fa62775c74af8b9a7163ce05"}, "downloads": -1, "filename": "allennlp_runmodel-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fa2021fb1e4a5c296ed987a00d12d10d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9945, "upload_time": "2018-11-20T09:49:29", "upload_time_iso_8601": "2018-11-20T09:49:29.569797Z", "url": "https://files.pythonhosted.org/packages/bf/4a/14f6d38075a68b1622463270fa8aa0317070705e9838adf39d0b39be0d13/allennlp_runmodel-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cc04ca993360da9da3f37a3c11d0d00", "sha256": "305a8191f5bd00d666af12d460e01054915063ca444d94ef445bc9b87e22b47d"}, "downloads": -1, "filename": "allennlp-runmodel-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2cc04ca993360da9da3f37a3c11d0d00", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18095, "upload_time": "2018-11-20T09:49:31", "upload_time_iso_8601": "2018-11-20T09:49:31.274085Z", "url": "https://files.pythonhosted.org/packages/bb/b7/7b5901b3c6cfb777f25a8ead09128a5f5df1976baadfa92484b303ee2317/allennlp-runmodel-0.2.0.tar.gz", "yanked": false}], "0.2.0.1": [{"comment_text": "", "digests": {"md5": "5f4bf4938baec1a74ce604cd3d1396d2", "sha256": "f4643e717e6560bf4bdd3c2aae3b05767516306feb55fe9045cd99932473c9b1"}, "downloads": -1, "filename": "allennlp_runmodel-0.2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5f4bf4938baec1a74ce604cd3d1396d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10198, "upload_time": "2018-11-21T07:04:52", "upload_time_iso_8601": "2018-11-21T07:04:52.859525Z", "url": "https://files.pythonhosted.org/packages/61/b1/d1028a8198e9d776219560656b0617f5763c10c6935882aa53f2732806bf/allennlp_runmodel-0.2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "094c42a6e617f022b5d43b5906812407", "sha256": "f01207ee936a0af793d157ab26bb28eeb99d2e48d34a0af689016ac7b9d0fbf8"}, "downloads": -1, "filename": "allennlp-runmodel-0.2.0.1.tar.gz", "has_sig": false, "md5_digest": "094c42a6e617f022b5d43b5906812407", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18327, "upload_time": "2018-11-21T07:04:54", "upload_time_iso_8601": "2018-11-21T07:04:54.794019Z", "url": "https://files.pythonhosted.org/packages/60/f9/be0e405e11e0f60b8be168df8fe93bb99c0c0b82a2f30fd58e13d2f91239/allennlp-runmodel-0.2.0.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "73b26aecbe85b52fb6ec801d44556968", "sha256": "843dd5a48cae5e9e3226de5f1333d4c90b26cba6ca6cb8dbbb573467e84bc3db"}, "downloads": -1, "filename": "allennlp_runmodel-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "73b26aecbe85b52fb6ec801d44556968", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9106, "upload_time": "2018-12-24T04:04:39", "upload_time_iso_8601": "2018-12-24T04:04:39.771051Z", "url": "https://files.pythonhosted.org/packages/47/a6/dfc57aba1e27d63f88b7ed781473638d0615a06041466c4921b934d0db81/allennlp_runmodel-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da7cad4d8f6010ceab43b22ef520df96", "sha256": "ce95b33bc41cbd722bab6a3d0d4a5799364fe6d8e7f803f3fd909ec5d32ae9f6"}, "downloads": -1, "filename": "allennlp-runmodel-0.2.1.tar.gz", "has_sig": false, "md5_digest": "da7cad4d8f6010ceab43b22ef520df96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18434, "upload_time": "2018-12-24T04:04:41", "upload_time_iso_8601": "2018-12-24T04:04:41.803246Z", "url": "https://files.pythonhosted.org/packages/4e/df/d031d822dbc8e0e53fdc991f7700b9189b0d5a019b5e5b8b99e72757ac34/allennlp-runmodel-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73b26aecbe85b52fb6ec801d44556968", "sha256": "843dd5a48cae5e9e3226de5f1333d4c90b26cba6ca6cb8dbbb573467e84bc3db"}, "downloads": -1, "filename": "allennlp_runmodel-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "73b26aecbe85b52fb6ec801d44556968", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9106, "upload_time": "2018-12-24T04:04:39", "upload_time_iso_8601": "2018-12-24T04:04:39.771051Z", "url": "https://files.pythonhosted.org/packages/47/a6/dfc57aba1e27d63f88b7ed781473638d0615a06041466c4921b934d0db81/allennlp_runmodel-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da7cad4d8f6010ceab43b22ef520df96", "sha256": "ce95b33bc41cbd722bab6a3d0d4a5799364fe6d8e7f803f3fd909ec5d32ae9f6"}, "downloads": -1, "filename": "allennlp-runmodel-0.2.1.tar.gz", "has_sig": false, "md5_digest": "da7cad4d8f6010ceab43b22ef520df96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18434, "upload_time": "2018-12-24T04:04:41", "upload_time_iso_8601": "2018-12-24T04:04:41.803246Z", "url": "https://files.pythonhosted.org/packages/4e/df/d031d822dbc8e0e53fdc991f7700b9189b0d5a019b5e5b8b99e72757ac34/allennlp-runmodel-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:28 2020"}