{"info": {"author": "Leonardo Arroyo", "author_email": "contato@leonardoarroyo.com", "bugtrack_url": null, "classifiers": [], "description": "=====\nDjango Git Submodules\n=====\n\nDjango Submodules is a simple Django app that allows you\nto manage apps as git submodules instead of pip.\nThis allows you to have a local development version of\nthird-party packages and merge changes from upstream.\n\nIdeally should only be used in development.\nThese changes should be pushed back to the package repository\nand installed with pip on production.\n\nQuick start\n-----------\n1. Install django-git-submodules::\n\n    pip install django-git-submodule\n\n2. Clone the the package you want on your project root::\n\n    git clone https://github.com/tomchristie/django-rest-framework.git\n\n3. Import the app in your `settings.py`::\n\n    from dj_git_submodule import submodule\n    submodule.add('django-rest-framework')\n\n4. Now you should be able to add the app to `INSTALLED_APPS` and have django find it successfully.\n\n5. If you need to import multiple apps, you can create a file alongside your requirements.txt::\n    from dj_git_submodule import submodule\n    submodule.register('submodules.txt')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "MIT license, see LICENSE.", "maintainer": null, "maintainer_email": null, "name": "django-submodule", "package_url": "https://pypi.org/project/django-submodule/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-submodule/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-submodule/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Adds packages to syspath so they can be used as git submodules instead of pip packages. Should be only used in development.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>Django Git Submodules<br>=====<br><br>Django Submodules is a simple Django app that allows you<br>to manage apps as git submodules instead of pip.<br>This allows you to have a local development version of<br>third-party packages and merge changes from upstream.<br><br>Ideally should only be used in development.<br>These changes should be pushed back to the package repository<br>and installed with pip on production.<br><br>Quick start<br>-----------<br>1. Install django-git-submodules::<br><br>    pip install django-git-submodule<br><br>2. Clone the the package you want on your project root::<br><br>    git clone https://github.com/tomchristie/django-rest-framework.git<br><br>3. Import the app in your `settings.py`::<br><br>    from dj_git_submodule import submodule<br>    submodule.add('django-rest-framework')<br><br>4. Now you should be able to add the app to `INSTALLED_APPS` and have django find it successfully.<br><br>5. If you need to import multiple apps, you can create a file alongside your requirements.txt::<br>    from dj_git_submodule import submodule<br>    submodule.register('submodules.txt')\n          </div>"}, "last_serial": 2309921, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Fri May  8 00:52:49 2020"}