{"info": {"author": "Evgeny Frolov", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Interactive ProgressBar\nPython progress bar that uses native ipython functionality. Widget-free. Works even in JupyterLab.\n\nThe reason for creating this package is that other progress bars use custom bar objects and/or widget tools, ignoring the builtin `IPython` functionality. This makes them unusable in \"clean\" environments like JupyterLab. In contrast, `ipypb` can run even in very restricted environments.\n\nAnother useful feature of `ipypb` is that the progress bar information is available even after closing a notebook and killing its ipython kernel. Once you launch this notebook again, you'll see the same progress bar information as before closing instead of widjet-related erorrs like `Failed to display Jupyter Widget of type HBox`, as shown below:\n\n![tqdm - display failure](https://user-images.githubusercontent.com/5283394/52354932-66a7ec80-2a42-11e9-9c10-d314c2bb2f5f.png)\n\nAlso have a look at this [NBViewer example](https://nbviewer.jupyter.org/github/evfro/ipypb/blob/master/examples/Usage%20examples.ipynb).\n\n# Notes\nCurrently at beta stage.\n\nSimple usage example:\n```python\nfrom time import sleep\nfrom ipypb import track\n\nfor i in track(range(10)):\n    sleep(0.1)\n```\nA few other conveniences are available. For example, you can use `ipypb` as a python's range-like function:\n```python\nfrom ipypb import irange\n\nfor i in irange(1, 10, 2): # same as range(1, 10, 2) but with progressbar\n    # <do stuff>\n    ...\n```\nIt may also be helpful to use the factory method `ipb`, which handles different usage scenarios and returns either `track` or `irange` instance depending on input arguments. Another usage example is when you already have a bunch of code with [`tqdm`](https://github.com/tqdm/tqdm) and want to \nreplace it with `ipypb`:\n```python\nfrom ipypb import ipb\n\ntqdm_notebook = ipb\n# or if you run it in interactive shell\ntqdm = ipb\n```\nIt will automatically process keyword arguments to ensure compatibility with `tqdm`'s API. Note, that `ipb` offers a common interface for both notebook and terminal environments.\n\n## Asynchronous flow\nIt's also possible to use `ipypb` for tracking tasks that are executed asyncrhonously or in parallel. The major use case is when the order of executed tasks from a task pool doesn't correspond to the desired order for displaying a progress. In this case, you can instruct `ipypb` to preserve the desired order by submitting a description of the progress hierarchy. Below is an example for simple heirarchy consisting of three levels: `i <-- j <-- k`. Progress on each parent level depends on full exectunion of its sublevels. Note how levels `k:1` and `k:2` get moved to the group `j:0` they belong to, even though initially they appear in the end, below the `j:1` group:\n\n![ipypb - async flow](https://user-images.githubusercontent.com/5283394/52353228-26933a80-2a3f-11e9-927a-6bd114f87abe.gif)\n\n**Note**: this feature is currently in provisional state, which means that its API main change in future releases. In order to test it, do \n```python\nfrom ipypb import chain\n```\n\n# Install\n`pip install --upgrade ipypb`\n\n# Requirements\nPython 3.6+ and IPython v.5.6+ excluding v.6.1 and v.6.2\n\n# Limitations\n- The feature to erase progressbar when loop is over is not yet supported.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "progressbar", "license": "", "maintainer": "", "maintainer_email": "", "name": "ipypb", "package_url": "https://pypi.org/project/ipypb/", "platform": "any", "project_url": "https://pypi.org/project/ipypb/", "project_urls": null, "release_url": "https://pypi.org/project/ipypb/0.5.2/", "requires_dist": null, "requires_python": "", "summary": "Interactive ProgressBar natively built with IPython", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Interactive ProgressBar</h1>\n<p>Python progress bar that uses native ipython functionality. Widget-free. Works even in JupyterLab.</p>\n<p>The reason for creating this package is that other progress bars use custom bar objects and/or widget tools, ignoring the builtin <code>IPython</code> functionality. This makes them unusable in \"clean\" environments like JupyterLab. In contrast, <code>ipypb</code> can run even in very restricted environments.</p>\n<p>Another useful feature of <code>ipypb</code> is that the progress bar information is available even after closing a notebook and killing its ipython kernel. Once you launch this notebook again, you'll see the same progress bar information as before closing instead of widjet-related erorrs like <code>Failed to display Jupyter Widget of type HBox</code>, as shown below:</p>\n<p><img alt=\"tqdm - display failure\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b20d57c731efbf02c070cbbf01bdb8197054d64/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353238333339342f35323335343933322d36366137656338302d326134322d313165392d396331302d6433313463326262326635662e706e67\"></p>\n<p>Also have a look at this <a href=\"https://nbviewer.jupyter.org/github/evfro/ipypb/blob/master/examples/Usage%20examples.ipynb\" rel=\"nofollow\">NBViewer example</a>.</p>\n<h1>Notes</h1>\n<p>Currently at beta stage.</p>\n<p>Simple usage example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ipypb</span> <span class=\"kn\">import</span> <span class=\"n\">track</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">track</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<p>A few other conveniences are available. For example, you can use <code>ipypb</code> as a python's range-like function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ipypb</span> <span class=\"kn\">import</span> <span class=\"n\">irange</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">irange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">):</span> <span class=\"c1\"># same as range(1, 10, 2) but with progressbar</span>\n    <span class=\"c1\"># &lt;do stuff&gt;</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>It may also be helpful to use the factory method <code>ipb</code>, which handles different usage scenarios and returns either <code>track</code> or <code>irange</code> instance depending on input arguments. Another usage example is when you already have a bunch of code with <a href=\"https://github.com/tqdm/tqdm\" rel=\"nofollow\"><code>tqdm</code></a> and want to\nreplace it with <code>ipypb</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ipypb</span> <span class=\"kn\">import</span> <span class=\"n\">ipb</span>\n\n<span class=\"n\">tqdm_notebook</span> <span class=\"o\">=</span> <span class=\"n\">ipb</span>\n<span class=\"c1\"># or if you run it in interactive shell</span>\n<span class=\"n\">tqdm</span> <span class=\"o\">=</span> <span class=\"n\">ipb</span>\n</pre>\n<p>It will automatically process keyword arguments to ensure compatibility with <code>tqdm</code>'s API. Note, that <code>ipb</code> offers a common interface for both notebook and terminal environments.</p>\n<h2>Asynchronous flow</h2>\n<p>It's also possible to use <code>ipypb</code> for tracking tasks that are executed asyncrhonously or in parallel. The major use case is when the order of executed tasks from a task pool doesn't correspond to the desired order for displaying a progress. In this case, you can instruct <code>ipypb</code> to preserve the desired order by submitting a description of the progress hierarchy. Below is an example for simple heirarchy consisting of three levels: <code>i &lt;-- j &lt;-- k</code>. Progress on each parent level depends on full exectunion of its sublevels. Note how levels <code>k:1</code> and <code>k:2</code> get moved to the group <code>j:0</code> they belong to, even though initially they appear in the end, below the <code>j:1</code> group:</p>\n<p><img alt=\"ipypb - async flow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6980b4d8e667b032ddeba75327874cf587b17346/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353238333339342f35323335333232382d32363933336138302d326133662d313165392d393237612d3662643131346638376162652e676966\"></p>\n<p><strong>Note</strong>: this feature is currently in provisional state, which means that its API main change in future releases. In order to test it, do</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ipypb</span> <span class=\"kn\">import</span> <span class=\"n\">chain</span>\n</pre>\n<h1>Install</h1>\n<p><code>pip install --upgrade ipypb</code></p>\n<h1>Requirements</h1>\n<p>Python 3.6+ and IPython v.5.6+ excluding v.6.1 and v.6.2</p>\n<h1>Limitations</h1>\n<ul>\n<li>The feature to erase progressbar when loop is over is not yet supported.</li>\n</ul>\n\n          </div>"}, "last_serial": 4790025, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "9392c0e7bbf0c4dd36ab35279b9fc501", "sha256": "0a45d45e571027b2a5d92c5ca3d64a1de09f1c5802c63af6514101bafa946e1a"}, "downloads": -1, "filename": "ipypb-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9392c0e7bbf0c4dd36ab35279b9fc501", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5577, "upload_time": "2019-01-08T15:20:05", "upload_time_iso_8601": "2019-01-08T15:20:05.623777Z", "url": "https://files.pythonhosted.org/packages/67/79/abfb814f347bf5b80caabb18a6257b71ec71e32b6f0afe98f48cf09f4212/ipypb-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c15508c60ccb79c74bc9fd3cd71572f5", "sha256": "a042ae3bacc2c6f428708d93ab99e48f9cdbd43a989abd843cea596da2993324"}, "downloads": -1, "filename": "ipypb-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c15508c60ccb79c74bc9fd3cd71572f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4314, "upload_time": "2019-01-08T15:20:07", "upload_time_iso_8601": "2019-01-08T15:20:07.546995Z", "url": "https://files.pythonhosted.org/packages/19/52/30528b4812e4321af68448ea6f5ea49910e09ab96094cdcd659d2933e348/ipypb-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "168607c26218758e4029907796ad4b4d", "sha256": "f4d1945e8e405a9dc336110c459864c6b4f16aef52c90e8977a08332db94a551"}, "downloads": -1, "filename": "ipypb-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "168607c26218758e4029907796ad4b4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6215, "upload_time": "2019-01-09T04:26:33", "upload_time_iso_8601": "2019-01-09T04:26:33.898336Z", "url": "https://files.pythonhosted.org/packages/73/42/93875703450f14b1451057c68edad9e890bdad35b18d165049511d74ce43/ipypb-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c681f6b7d14ca42f68a0eda760b51cb", "sha256": "78f0003e300fa93f44dca6d31c968dfd2d0d3e0c8e0d8b528d6a1a3aea24dd3c"}, "downloads": -1, "filename": "ipypb-0.5.1.tar.gz", "has_sig": false, "md5_digest": "2c681f6b7d14ca42f68a0eda760b51cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5044, "upload_time": "2019-01-09T04:26:35", "upload_time_iso_8601": "2019-01-09T04:26:35.337019Z", "url": "https://files.pythonhosted.org/packages/a2/33/94904fdad5c7abff3914f43cda7c7e9a4d73dc31deff4ba670dc72652150/ipypb-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "d41b7402d275036bf731b48afa643fa6", "sha256": "625a201d4c912ac498fa297f19291959f3dadbd37247d873d0291bf197e0f82d"}, "downloads": -1, "filename": "ipypb-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d41b7402d275036bf731b48afa643fa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8589, "upload_time": "2019-02-07T08:17:02", "upload_time_iso_8601": "2019-02-07T08:17:02.986359Z", "url": "https://files.pythonhosted.org/packages/03/34/0690f80e96e5fe8dbc8b29ed5255ad066555e13807989084eac6d4ca4fca/ipypb-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9d32da46c211f0a34fd74cc7df4ddc", "sha256": "ce87f3845502ca1e47a69aa79a03fbca13edd8e23fbcdbe608c4c6b243bed2b3"}, "downloads": -1, "filename": "ipypb-0.5.2.tar.gz", "has_sig": false, "md5_digest": "ec9d32da46c211f0a34fd74cc7df4ddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7480, "upload_time": "2019-02-07T08:17:05", "upload_time_iso_8601": "2019-02-07T08:17:05.464314Z", "url": "https://files.pythonhosted.org/packages/d4/3d/27a4c48c11e06b7f0ffe9898156f29184dc68698e70bb556daa9638474b8/ipypb-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d41b7402d275036bf731b48afa643fa6", "sha256": "625a201d4c912ac498fa297f19291959f3dadbd37247d873d0291bf197e0f82d"}, "downloads": -1, "filename": "ipypb-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d41b7402d275036bf731b48afa643fa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8589, "upload_time": "2019-02-07T08:17:02", "upload_time_iso_8601": "2019-02-07T08:17:02.986359Z", "url": "https://files.pythonhosted.org/packages/03/34/0690f80e96e5fe8dbc8b29ed5255ad066555e13807989084eac6d4ca4fca/ipypb-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9d32da46c211f0a34fd74cc7df4ddc", "sha256": "ce87f3845502ca1e47a69aa79a03fbca13edd8e23fbcdbe608c4c6b243bed2b3"}, "downloads": -1, "filename": "ipypb-0.5.2.tar.gz", "has_sig": false, "md5_digest": "ec9d32da46c211f0a34fd74cc7df4ddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7480, "upload_time": "2019-02-07T08:17:05", "upload_time_iso_8601": "2019-02-07T08:17:05.464314Z", "url": "https://files.pythonhosted.org/packages/d4/3d/27a4c48c11e06b7f0ffe9898156f29184dc68698e70bb556daa9638474b8/ipypb-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:27 2020"}