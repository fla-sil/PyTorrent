{"info": {"author": "Dmitry Orlov <me@mosquito.su>", "author_email": "me@mosquito.su", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: System :: Clustering"], "description": "======\nAIORMQ\n======\n\n.. image:: https://coveralls.io/repos/github/mosquito/aiormq/badge.svg?branch=master\n   :target: https://coveralls.io/github/mosquito/aiormq?branch=master\n   :alt: Coveralls\n\n.. image:: https://img.shields.io/pypi/status/aiormq.svg\n   :target: https://github.com/mosquito/aiormq\n   :alt: Status\n\n.. image:: https://github.com/mosquito/aiormq/workflows/tox/badge.svg\n   :target: https://github.com/mosquito/aiormq/actions?query=workflow%3Atox\n   :alt: Build status\n\n.. image:: https://img.shields.io/pypi/v/aiormq.svg\n   :target: https://pypi.python.org/pypi/aiormq/\n   :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/wheel/aiormq.svg\n   :target: https://pypi.python.org/pypi/aiormq/\n\n.. image:: https://img.shields.io/pypi/pyversions/aiormq.svg\n   :target: https://pypi.python.org/pypi/aiormq/\n\n.. image:: https://img.shields.io/pypi/l/aiormq.svg\n   :target: https://github.com/mosquito/aiormq/blob/master/LICENSE.md\n\n\naiormq is a pure python AMQP client library.\n\n.. contents:: Table of contents\n\nStatus\n======\n\nProduction/Stable\n\nFeatures\n========\n\n* Connecting by URL\n\n * amqp example: **amqp://user:password@server.host/vhost**\n * secure amqp example: **amqps://user:password@server.host/vhost?cafile=ca.pem&keyfile=key.pem&certfile=cert.pem&no_verify_ssl=0**\n\n* Buffered queue for received frames\n* Only `PLAIN`_ auth mechanism support\n* `Publisher confirms`_ support\n* `Transactions`_ support\n* Channel based asynchronous locks\n\n  .. note::\n      AMQP 0.9.1 requires serialize sending for some frame types\n      on the channel. e.g. Content body must be following after\n      content header. But frames might be sent asynchronously\n      on another channels.\n\n* Tracking unroutable messages\n  (Use **connection.channel(on_return_raises=False)** for disabling)\n* Full SSL/TLS support with url query parameters:\n    * ``cafile=`` - string contains path to ca certificate file\n    * ``capath=`` - string contains path to ca certificates\n    * ``cadata=`` - base64 encoded ca certificate data\n    * ``keyfile=`` - string contains path to key file\n    * ``certfile=`` - string contains path to certificate file\n    * ``no_verify_ssl`` - boolean disables certificates validation\n* Python `type hints`_\n* Uses `pamqp`_ as an AMQP 0.9.1 frame encoder/decoder\n\n\n.. _Publisher confirms: https://www.rabbitmq.com/confirms.html\n.. _Transactions: https://www.rabbitmq.com/semantics.html\n.. _PLAIN: https://www.rabbitmq.com/authentication.html\n.. _type hints: https://docs.python.org/3/library/typing.html\n.. _pamqp: https://pypi.org/project/pamqp/\n\nTutorial\n========\n\nIntroduction\n------------\n\nSimple consumer\n***************\n\n.. code-block:: python\n\n    import asyncio\n    import aiormq\n\n    async def on_message(message):\n        \"\"\"\n        on_message doesn't necessarily have to be defined as async.\n        Here it is to show that it's possible.\n        \"\"\"\n        print(\" [x] Received message %r\" % message)\n        print(\"Message body is: %r\" % message.body)\n        print(\"Before sleep!\")\n        await asyncio.sleep(5)   # Represents async I/O operations\n        print(\"After sleep!\")\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        # Declaring queue\n        deaclare_ok = await channel.queue_declare('helo')\n        consume_ok = await channel.basic_consume(\n            deaclare_ok.queue, on_message, no_ack=True\n        )\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n    loop.run_forever()\n\n\nSimple publisher\n****************\n\n.. code-block:: python\n\n    import asyncio\n    import aiormq\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost//\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        # Sending the message\n        await channel.basic_publish(b'Hello World!', routing_key='hello')\n        print(\" [x] Sent 'Hello World!'\")\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\nWork Queues\n-----------\n\nCreate new task\n***************\n\n.. code-block:: python\n\n    import sys\n    import asyncio\n    import aiormq\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        body = b' '.join(sys.argv[1:]) or b\"Hello World!\"\n\n        # Sending the message\n        await channel.basic_publish(\n            body,\n            routing_key='task_queue',\n            properties=aiormq.spec.Basic.Properties(\n                delivery_mode=1,\n            )\n        )\n\n        print(\" [x] Sent %r\" % body)\n\n        await connection.close()\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\nSimple worker\n*************\n\n.. code-block:: python\n\n    import asyncio\n    import aiormq\n    import aiormq.types\n\n\n    async def on_message(message: aiormq.types.DeliveredMessage):\n        print(\" [x] Received message %r\" % (message,))\n        print(\"     Message body is: %r\" % (message.body,))\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n\n        # Creating a channel\n        channel = await connection.channel()\n        await channel.basic_qos(prefetch_count=1)\n\n        # Declaring queue\n        declare_ok = await channel.queue_declare('task_queue', durable=True)\n\n        # Start listening the queue with name 'task_queue'\n        await channel.basic_consume(declare_ok.queue, on_message, no_ack=True)\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n    # we enter a never-ending loop that waits for data and runs\n    # callbacks whenever necessary.\n    print(\" [*] Waiting for messages. To exit press CTRL+C\")\n    loop.run_forever()\n\n\nPublish Subscribe\n-----------------\n\nPublisher\n*********\n\n.. code-block:: python\n\n    import sys\n    import asyncio\n    import aiormq\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        await channel.exchange_declare(\n            exchange='logs', exchange_type='fanout'\n        )\n\n        body = b' '.join(sys.argv[1:]) or b\"Hello World!\"\n\n        # Sending the message\n        await channel.basic_publish(\n            body, routing_key='info', exchange='logs'\n        )\n\n        print(\" [x] Sent %r\" % (body,))\n\n        await connection.close()\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\nSubscriber\n**********\n\n.. code-block:: python\n\n    import asyncio\n    import aiormq\n    import aiormq.types\n\n\n    async def on_message(message: aiormq.types.DeliveredMessage):\n        print(\"[x] %r\" % (message.body,))\n\n        await message.channel.basic_ack(\n            message.delivery.delivery_tag\n        )\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n        await channel.basic_qos(prefetch_count=1)\n\n        await channel.exchange_declare(\n            exchange='logs', exchange_type='fanout'\n        )\n\n        # Declaring queue\n        declare_ok = await channel.queue_declare(exclusive=True)\n\n        # Binding the queue to the exchange\n        await channel.queue_bind(declare_ok.queue, 'logs')\n\n        # Start listening the queue with name 'task_queue'\n        await channel.basic_consume(declare_ok.queue, on_message)\n\n\n    loop = asyncio.get_event_loop()\n    loop.create_task(main())\n\n    # we enter a never-ending loop that waits for data\n    # and runs callbacks whenever necessary.\n    print(' [*] Waiting for logs. To exit press CTRL+C')\n    loop.run_forever()\n\n\nRouting\n-------\n\nDirect consumer\n***************\n\n.. code-block:: python\n\n    import sys\n    import asyncio\n    import aiormq\n    import aiormq.types\n\n\n    async def on_message(message: aiormq.types.DeliveredMessage):\n        print(\" [x] %r:%r\" % (message.delivery.routing_key, message.body))\n        await message.channel.basic_ack(\n            message.delivery.delivery_tag\n        )\n\n\n    async def main():\n        # Perform connection\n        connection = aiormq.Connection(\"amqp://guest:guest@localhost/\")\n        await connection.connect()\n\n        # Creating a channel\n        channel = await connection.channel()\n        await channel.basic_qos(prefetch_count=1)\n\n        severities = sys.argv[1:]\n\n        if not severities:\n            sys.stderr.write(\n                \"Usage: %s [info] [warning] [error]\\n\" % sys.argv[0]\n            )\n            sys.exit(1)\n\n        # Declare an exchange\n        await channel.exchange_declare(\n            exchange='logs', exchange_type='direct'\n        )\n\n        # Declaring random queue\n        declare_ok = await channel.queue_declare(durable=True, auto_delete=True)\n\n        for severity in severities:\n            await channel.queue_bind(\n                declare_ok.queue, 'logs', routing_key=severity\n            )\n\n        # Start listening the random queue\n        await channel.basic_consume(declare_ok.queue, on_message)\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n    # we enter a never-ending loop that waits for data\n    # and runs callbacks whenever necessary.\n    print(\" [*] Waiting for messages. To exit press CTRL+C\")\n    loop.run_forever()\n\n\nEmitter\n*******\n\n.. code-block:: python\n\n    import sys\n    import asyncio\n    import aiormq\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        await channel.exchange_declare(\n            exchange='logs', exchange_type='direct'\n        )\n\n        body = (\n            b' '.join(arg.encode() for arg in sys.argv[2:])\n            or\n            b\"Hello World!\"\n        )\n\n        # Sending the message\n        routing_key = sys.argv[1] if len(sys.argv) > 2 else 'info'\n\n        await channel.basic_publish(\n            body, exchange='logs', routing_key=routing_key,\n            properties=aiormq.spec.Basic.Properties(\n                delivery_mode=1\n            )\n        )\n\n        print(\" [x] Sent %r\" % body)\n\n        await connection.close()\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\nTopics\n------\n\nPublisher\n*********\n\n.. code-block:: python\n\n    import sys\n    import asyncio\n    import aiormq\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        await channel.exchange_declare('topic_logs', exchange_type='topic')\n\n        routing_key = (\n            sys.argv[1] if len(sys.argv) > 2 else 'anonymous.info'\n        )\n\n        body = (\n            b' '.join(arg.encode() for arg in sys.argv[2:])\n            or\n            b\"Hello World!\"\n        )\n\n        # Sending the message\n        await channel.basic_publish(\n            body, exchange='topic_logs', routing_key=routing_key,\n            properties=aiormq.spec.Basic.Properties(\n                delivery_mode=1\n            )\n        )\n\n        print(\" [x] Sent %r\" % (body,))\n\n        await connection.close()\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\nConsumer\n********\n\n.. code-block:: python\n\n    import asyncio\n    import sys\n    import aiormq\n    import aiormq.types\n\n\n    async def on_message(message: aiormq.types.DeliveredMessage):\n        print(\" [x] %r:%r\" % (message.delivery.routing_key, message.body))\n        await message.channel.basic_ack(\n            message.delivery.delivery_tag\n        )\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\n            \"amqp://guest:guest@localhost/\", loop=loop\n        )\n\n        # Creating a channel\n        channel = await connection.channel()\n        await channel.basic_qos(prefetch_count=1)\n\n        # Declare an exchange\n        await channel.exchange_declare('topic_logs', exchange_type='topic')\n\n        # Declaring queue\n        declare_ok = await channel.queue_declare('task_queue', durable=True)\n\n        binding_keys = sys.argv[1:]\n\n        if not binding_keys:\n            sys.stderr.write(\n                \"Usage: %s [binding_key]...\\n\" % sys.argv[0]\n            )\n            sys.exit(1)\n\n        for binding_key in binding_keys:\n            await channel.queue_bind(\n                declare_ok.queue, 'topic_logs', routing_key=binding_key\n            )\n\n        # Start listening the queue with name 'task_queue'\n        await channel.basic_consume(declare_ok.queue, on_message)\n\n\n    loop = asyncio.get_event_loop()\n    loop.create_task(main())\n\n    # we enter a never-ending loop that waits for\n    # data and runs callbacks whenever necessary.\n    print(\" [*] Waiting for messages. To exit press CTRL+C\")\n    loop.run_forever()\n\nRemote procedure call (RPC)\n---------------------------\n\nRPC server\n**********\n\n.. code-block:: python\n\n    import asyncio\n    import aiormq\n    import aiormq.types\n\n\n    def fib(n):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        else:\n            return fib(n-1) + fib(n-2)\n\n\n    async def on_message(message:aiormq.types.DeliveredMessage):\n        n = int(message.body.decode())\n\n        print(\" [.] fib(%d)\" % n)\n        response = str(fib(n)).encode()\n\n        await message.channel.basic_publish(\n            response, routing_key=message.reply_to,\n            properties=aiormq.spec.Basic.Properties(\n                correlation_id=message.correlation_id\n            ),\n\n        )\n\n        await message.channel.basic_ack(message.delivery.delivery_tag)\n        print('Request complete')\n\n\n    async def main():\n        # Perform connection\n        connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n        # Creating a channel\n        channel = await connection.channel()\n\n        # Declaring queue\n        declare_ok = await channel.queue_declare('rpc_queue')\n\n        # Start listening the queue with name 'hello'\n        await channel.basic_consume(declare_ok.queue, on_message)\n\n\n    loop = asyncio.get_event_loop()\n    loop.create_task(main(loop))\n\n    # we enter a never-ending loop that waits for data\n    # and runs callbacks whenever necessary.\n    print(\" [x] Awaiting RPC requests\")\n    loop.run_forever()\n\n\nRPC client\n**********\n\n.. code-block:: python\n\n    import asyncio\n    import uuid\n    import aiormq\n    import aiormq.types\n\n\n    class FibonacciRpcClient:\n        def __init__(self):\n            self.connection = None      # type: aiormq.Connection\n            self.channel = None         # type: aiormq.Channel\n            self.callback_queue = ''\n            self.futures = {}\n            self.loop = loop\n\n        async def connect(self):\n            self.connection = await aiormq.connect(\"amqp://guest:guest@localhost/\")\n\n            self.channel = await self.connection.channel()\n            declare_ok = await self.channel.queue_declare(\n                exclusive=True, auto_delete=True\n            )\n\n            await self.channel.basic_consume(declare_ok.queue, self.on_response)\n\n            self.callback_queue = declare_ok.queue\n\n            return self\n\n        async def on_response(self, message: aiormq.types.DeliveredMessage):\n            future = self.futures.pop(message.correlation_id)\n            future.set_result(message.body)\n\n        async def call(self, n):\n            correlation_id = str(uuid.uuid4())\n            future = loop.create_future()\n\n            self.futures[correlation_id] = future\n\n            await self.channel.basic_publish(\n                str(n).encode(), routing_key='rpc_queue',\n                properties=aiormq.spec.Basic.Properties(\n                    content_type='text/plain',\n                    correlation_id=correlation_id,\n                    reply_to=self.callback_queue,\n                )\n            )\n\n            return int(await future)\n\n\n    async def main():\n        fibonacci_rpc = await FibonacciRpcClient().connect()\n        print(\" [x] Requesting fib(30)\")\n        response = await fibonacci_rpc.call(30)\n        print(\" [.] Got %r\" % response)\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mosquito/aiormq", "keywords": "rabbitmq,asyncio,amqp,amqp 0.9.1,driver,pamqp", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "aiormq", "package_url": "https://pypi.org/project/aiormq/", "platform": "", "project_url": "https://pypi.org/project/aiormq/", "project_urls": {"Homepage": "https://github.com/mosquito/aiormq"}, "release_url": "https://pypi.org/project/aiormq/3.2.2/", "requires_dist": ["pamqp (==2.3.0)", "yarl", "aiomisc (<10) ; extra == 'develop'", "async-generator ; extra == 'develop'", "coverage (!=4.3) ; extra == 'develop'", "coveralls ; extra == 'develop'", "pylava ; extra == 'develop'", "pytest ; extra == 'develop'", "pytest-cov ; extra == 'develop'", "tox (>=2.4) ; extra == 'develop'"], "requires_python": ">3.5.*", "summary": "Pure python AMQP asynchronous client library", "version": "3.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://coveralls.io/github/mosquito/aiormq?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe3adf9ed50d0f65924c289ada6f07083d133194/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6f73717569746f2f61696f726d712f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/mosquito/aiormq\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ea7f1f48603107d473dee142638cae7a5de7f4e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f61696f726d712e737667\"></a>\n<a href=\"https://github.com/mosquito/aiormq/actions?query=workflow%3Atox\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5318d56f30830eeb9b490527a867568a5f42faec/68747470733a2f2f6769746875622e636f6d2f6d6f73717569746f2f61696f726d712f776f726b666c6f77732f746f782f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aiormq/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5f57e7c2bddca95245a0b9b31204681efc1622e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f726d712e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aiormq/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/wheel/aiormq.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c61782427fe0a826119de097bcb1b15e210a5f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f61696f726d712e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aiormq/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/aiormq.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca2c78f276ac5c43ed2eca55311343b8d679b4f3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f726d712e737667\"></a>\n<a href=\"https://github.com/mosquito/aiormq/blob/master/LICENSE.md\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/aiormq.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71c39e85bb226ada4482b91e2485c28838fa19d2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61696f726d712e737667\"></a>\n<p>aiormq is a pure python AMQP client library.</p>\n<div id=\"table-of-contents\">\n<p>Table of contents</p>\n<ul>\n<li><a href=\"#status\" id=\"id2\" rel=\"nofollow\">Status</a></li>\n<li><a href=\"#features\" id=\"id3\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#tutorial\" id=\"id4\" rel=\"nofollow\">Tutorial</a><ul>\n<li><a href=\"#introduction\" id=\"id5\" rel=\"nofollow\">Introduction</a><ul>\n<li><a href=\"#simple-consumer\" id=\"id6\" rel=\"nofollow\">Simple consumer</a></li>\n<li><a href=\"#simple-publisher\" id=\"id7\" rel=\"nofollow\">Simple publisher</a></li>\n</ul>\n</li>\n<li><a href=\"#work-queues\" id=\"id8\" rel=\"nofollow\">Work Queues</a><ul>\n<li><a href=\"#create-new-task\" id=\"id9\" rel=\"nofollow\">Create new task</a></li>\n<li><a href=\"#simple-worker\" id=\"id10\" rel=\"nofollow\">Simple worker</a></li>\n</ul>\n</li>\n<li><a href=\"#publish-subscribe\" id=\"id11\" rel=\"nofollow\">Publish Subscribe</a><ul>\n<li><a href=\"#publisher\" id=\"id12\" rel=\"nofollow\">Publisher</a></li>\n<li><a href=\"#subscriber\" id=\"id13\" rel=\"nofollow\">Subscriber</a></li>\n</ul>\n</li>\n<li><a href=\"#routing\" id=\"id14\" rel=\"nofollow\">Routing</a><ul>\n<li><a href=\"#direct-consumer\" id=\"id15\" rel=\"nofollow\">Direct consumer</a></li>\n<li><a href=\"#emitter\" id=\"id16\" rel=\"nofollow\">Emitter</a></li>\n</ul>\n</li>\n<li><a href=\"#topics\" id=\"id17\" rel=\"nofollow\">Topics</a><ul>\n<li><a href=\"#id1\" id=\"id18\" rel=\"nofollow\">Publisher</a></li>\n<li><a href=\"#consumer\" id=\"id19\" rel=\"nofollow\">Consumer</a></li>\n</ul>\n</li>\n<li><a href=\"#remote-procedure-call-rpc\" id=\"id20\" rel=\"nofollow\">Remote procedure call (RPC)</a><ul>\n<li><a href=\"#rpc-server\" id=\"id21\" rel=\"nofollow\">RPC server</a></li>\n<li><a href=\"#rpc-client\" id=\"id22\" rel=\"nofollow\">RPC client</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"status\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Status</a></h2>\n<p>Production/Stable</p>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Features</a></h2>\n<ul>\n<li>Connecting by URL</li>\n</ul>\n<blockquote>\n<ul>\n<li>amqp example: <strong>amqp://user:password@server.host/vhost</strong></li>\n<li>secure amqp example: <strong>amqps://user:password@server.host/vhost?cafile=ca.pem&amp;keyfile=key.pem&amp;certfile=cert.pem&amp;no_verify_ssl=0</strong></li>\n</ul>\n</blockquote>\n<ul>\n<li><p>Buffered queue for received frames</p>\n</li>\n<li><p>Only <a href=\"https://www.rabbitmq.com/authentication.html\" rel=\"nofollow\">PLAIN</a> auth mechanism support</p>\n</li>\n<li><p><a href=\"https://www.rabbitmq.com/confirms.html\" rel=\"nofollow\">Publisher confirms</a> support</p>\n</li>\n<li><p><a href=\"https://www.rabbitmq.com/semantics.html\" rel=\"nofollow\">Transactions</a> support</p>\n</li>\n<li><p>Channel based asynchronous locks</p>\n<div>\n<p>Note</p>\n<p>AMQP 0.9.1 requires serialize sending for some frame types\non the channel. e.g. Content body must be following after\ncontent header. But frames might be sent asynchronously\non another channels.</p>\n</div>\n</li>\n<li><p>Tracking unroutable messages\n(Use <strong>connection.channel(on_return_raises=False)</strong> for disabling)</p>\n</li>\n<li><dl>\n<dt>Full SSL/TLS support with url query parameters:</dt>\n<dd><ul>\n<li><tt>cafile=</tt> - string contains path to ca certificate file</li>\n<li><tt>capath=</tt> - string contains path to ca certificates</li>\n<li><tt>cadata=</tt> - base64 encoded ca certificate data</li>\n<li><tt>keyfile=</tt> - string contains path to key file</li>\n<li><tt>certfile=</tt> - string contains path to certificate file</li>\n<li><tt>no_verify_ssl</tt> - boolean disables certificates validation</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p>Python <a href=\"https://docs.python.org/3/library/typing.html\" rel=\"nofollow\">type hints</a></p>\n</li>\n<li><p>Uses <a href=\"https://pypi.org/project/pamqp/\" rel=\"nofollow\">pamqp</a> as an AMQP 0.9.1 frame encoder/decoder</p>\n</li>\n</ul>\n</div>\n<div id=\"tutorial\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Tutorial</a></h2>\n<div id=\"introduction\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Introduction</a></h3>\n<div id=\"simple-consumer\">\n<h4><a href=\"#id6\" rel=\"nofollow\">Simple consumer</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    on_message doesn't necessarily have to be defined as async.\n    Here it is to show that it's possible.\n    \"\"\"</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Received message </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Message body is: </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Before sleep!\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>   <span class=\"c1\"># Represents async I/O operations</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"After sleep!\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Declaring queue</span>\n    <span class=\"n\">deaclare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span><span class=\"s1\">'helo'</span><span class=\"p\">)</span>\n    <span class=\"n\">consume_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span>\n        <span class=\"n\">deaclare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">on_message</span><span class=\"p\">,</span> <span class=\"n\">no_ack</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"simple-publisher\">\n<h4><a href=\"#id7\" rel=\"nofollow\">Simple publisher</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost//\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Sending the message</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'Hello World!'</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Sent 'Hello World!'\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n</div>\n<div id=\"work-queues\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Work Queues</a></h3>\n<div id=\"create-new-task\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Create new task</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span> <span class=\"ow\">or</span> <span class=\"sa\">b</span><span class=\"s2\">\"Hello World!\"</span>\n\n    <span class=\"c1\"># Sending the message</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span>\n        <span class=\"n\">body</span><span class=\"p\">,</span>\n        <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"s1\">'task_queue'</span><span class=\"p\">,</span>\n        <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">spec</span><span class=\"o\">.</span><span class=\"n\">Basic</span><span class=\"o\">.</span><span class=\"n\">Properties</span><span class=\"p\">(</span>\n            <span class=\"n\">delivery_mode</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Sent </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"simple-worker\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Simple worker</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq.types</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DeliveredMessage</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Received message </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"     Message body is: </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">,))</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_qos</span><span class=\"p\">(</span><span class=\"n\">prefetch_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Declaring queue</span>\n    <span class=\"n\">declare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span><span class=\"s1\">'task_queue'</span><span class=\"p\">,</span> <span class=\"n\">durable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Start listening the queue with name 'task_queue'</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">on_message</span><span class=\"p\">,</span> <span class=\"n\">no_ack</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># we enter a never-ending loop that waits for data and runs</span>\n<span class=\"c1\"># callbacks whenever necessary.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [*] Waiting for messages. To exit press CTRL+C\"</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"publish-subscribe\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Publish Subscribe</a></h3>\n<div id=\"publisher\">\n<h4><a href=\"#id12\" rel=\"nofollow\">Publisher</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">exchange_declare</span><span class=\"p\">(</span>\n        <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span><span class=\"p\">,</span> <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s1\">'fanout'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span> <span class=\"ow\">or</span> <span class=\"sa\">b</span><span class=\"s2\">\"Hello World!\"</span>\n\n    <span class=\"c1\"># Sending the message</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span>\n        <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"s1\">'info'</span><span class=\"p\">,</span> <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Sent </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,))</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"subscriber\">\n<h4><a href=\"#id13\" rel=\"nofollow\">Subscriber</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq.types</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DeliveredMessage</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"[x] </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">,))</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_ack</span><span class=\"p\">(</span>\n        <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">delivery</span><span class=\"o\">.</span><span class=\"n\">delivery_tag</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_qos</span><span class=\"p\">(</span><span class=\"n\">prefetch_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">exchange_declare</span><span class=\"p\">(</span>\n        <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span><span class=\"p\">,</span> <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s1\">'fanout'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Declaring queue</span>\n    <span class=\"n\">declare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span><span class=\"n\">exclusive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Binding the queue to the exchange</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_bind</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"s1\">'logs'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Start listening the queue with name 'task_queue'</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">on_message</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># we enter a never-ending loop that waits for data</span>\n<span class=\"c1\"># and runs callbacks whenever necessary.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">' [*] Waiting for logs. To exit press CTRL+C'</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"routing\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Routing</a></h3>\n<div id=\"direct-consumer\">\n<h4><a href=\"#id15\" rel=\"nofollow\">Direct consumer</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq.types</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DeliveredMessage</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] </span><span class=\"si\">%r</span><span class=\"s2\">:</span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">delivery</span><span class=\"o\">.</span><span class=\"n\">routing_key</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">))</span>\n    <span class=\"k\">await</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_ack</span><span class=\"p\">(</span>\n        <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">delivery</span><span class=\"o\">.</span><span class=\"n\">delivery_tag</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_qos</span><span class=\"p\">(</span><span class=\"n\">prefetch_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"n\">severities</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">severities</span><span class=\"p\">:</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Usage: </span><span class=\"si\">%s</span><span class=\"s2\"> [info] [warning] [error]</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Declare an exchange</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">exchange_declare</span><span class=\"p\">(</span>\n        <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span><span class=\"p\">,</span> <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s1\">'direct'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Declaring random queue</span>\n    <span class=\"n\">declare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span><span class=\"n\">durable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">auto_delete</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">severity</span> <span class=\"ow\">in</span> <span class=\"n\">severities</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_bind</span><span class=\"p\">(</span>\n            <span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"s1\">'logs'</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"n\">severity</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Start listening the random queue</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">on_message</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># we enter a never-ending loop that waits for data</span>\n<span class=\"c1\"># and runs callbacks whenever necessary.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [*] Waiting for messages. To exit press CTRL+C\"</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"emitter\">\n<h4><a href=\"#id16\" rel=\"nofollow\">Emitter</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">exchange_declare</span><span class=\"p\">(</span>\n        <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span><span class=\"p\">,</span> <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s1\">'direct'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"sa\">b</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">arg</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:])</span>\n        <span class=\"ow\">or</span>\n        <span class=\"sa\">b</span><span class=\"s2\">\"Hello World!\"</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Sending the message</span>\n    <span class=\"n\">routing_key</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"k\">else</span> <span class=\"s1\">'info'</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span>\n        <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"n\">routing_key</span><span class=\"p\">,</span>\n        <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">spec</span><span class=\"o\">.</span><span class=\"n\">Basic</span><span class=\"o\">.</span><span class=\"n\">Properties</span><span class=\"p\">(</span>\n            <span class=\"n\">delivery_mode</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Sent </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n</div>\n<div id=\"topics\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Topics</a></h3>\n<div id=\"id1\">\n<h4><a href=\"#id18\" rel=\"nofollow\">Publisher</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">exchange_declare</span><span class=\"p\">(</span><span class=\"s1\">'topic_logs'</span><span class=\"p\">,</span> <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s1\">'topic'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">routing_key</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"k\">else</span> <span class=\"s1\">'anonymous.info'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"sa\">b</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">arg</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:])</span>\n        <span class=\"ow\">or</span>\n        <span class=\"sa\">b</span><span class=\"s2\">\"Hello World!\"</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Sending the message</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span>\n        <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'topic_logs'</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"n\">routing_key</span><span class=\"p\">,</span>\n        <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">spec</span><span class=\"o\">.</span><span class=\"n\">Basic</span><span class=\"o\">.</span><span class=\"n\">Properties</span><span class=\"p\">(</span>\n            <span class=\"n\">delivery_mode</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Sent </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,))</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"consumer\">\n<h4><a href=\"#id19\" rel=\"nofollow\">Consumer</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq.types</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DeliveredMessage</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] </span><span class=\"si\">%r</span><span class=\"s2\">:</span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">delivery</span><span class=\"o\">.</span><span class=\"n\">routing_key</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">))</span>\n    <span class=\"k\">await</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_ack</span><span class=\"p\">(</span>\n        <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">delivery</span><span class=\"o\">.</span><span class=\"n\">delivery_tag</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_qos</span><span class=\"p\">(</span><span class=\"n\">prefetch_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Declare an exchange</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">exchange_declare</span><span class=\"p\">(</span><span class=\"s1\">'topic_logs'</span><span class=\"p\">,</span> <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s1\">'topic'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Declaring queue</span>\n    <span class=\"n\">declare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span><span class=\"s1\">'task_queue'</span><span class=\"p\">,</span> <span class=\"n\">durable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">binding_keys</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">binding_keys</span><span class=\"p\">:</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Usage: </span><span class=\"si\">%s</span><span class=\"s2\"> [binding_key]...</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">binding_key</span> <span class=\"ow\">in</span> <span class=\"n\">binding_keys</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_bind</span><span class=\"p\">(</span>\n            <span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"s1\">'topic_logs'</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"n\">binding_key</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Start listening the queue with name 'task_queue'</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">on_message</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># we enter a never-ending loop that waits for</span>\n<span class=\"c1\"># data and runs callbacks whenever necessary.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [*] Waiting for messages. To exit press CTRL+C\"</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"remote-procedure-call-rpc\">\n<h3><a href=\"#id20\" rel=\"nofollow\">Remote procedure call (RPC)</a></h3>\n<div id=\"rpc-server\">\n<h4><a href=\"#id21\" rel=\"nofollow\">RPC server</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq.types</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n    <span class=\"k\">elif</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">1</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">:</span><span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DeliveredMessage</span><span class=\"p\">):</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [.] fib(</span><span class=\"si\">%d</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span>\n        <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">reply_to</span><span class=\"p\">,</span>\n        <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">spec</span><span class=\"o\">.</span><span class=\"n\">Basic</span><span class=\"o\">.</span><span class=\"n\">Properties</span><span class=\"p\">(</span>\n            <span class=\"n\">correlation_id</span><span class=\"o\">=</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">correlation_id</span>\n        <span class=\"p\">),</span>\n\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_ack</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">delivery</span><span class=\"o\">.</span><span class=\"n\">delivery_tag</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Request complete'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Perform connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Creating a channel</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Declaring queue</span>\n    <span class=\"n\">declare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span><span class=\"s1\">'rpc_queue'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Start listening the queue with name 'hello'</span>\n    <span class=\"k\">await</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">on_message</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># we enter a never-ending loop that waits for data</span>\n<span class=\"c1\"># and runs callbacks whenever necessary.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Awaiting RPC requests\"</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"rpc-client\">\n<h4><a href=\"#id22\" rel=\"nofollow\">RPC client</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiormq.types</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FibonacciRpcClient</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>      <span class=\"c1\"># type: aiormq.Connection</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>         <span class=\"c1\"># type: aiormq.Channel</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">callback_queue</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">futures</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">loop</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"amqp://guest:guest@localhost/\"</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n        <span class=\"n\">declare_ok</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">queue_declare</span><span class=\"p\">(</span>\n            <span class=\"n\">exclusive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">auto_delete</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_consume</span><span class=\"p\">(</span><span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_response</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">callback_queue</span> <span class=\"o\">=</span> <span class=\"n\">declare_ok</span><span class=\"o\">.</span><span class=\"n\">queue</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DeliveredMessage</span><span class=\"p\">):</span>\n        <span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">correlation_id</span><span class=\"p\">)</span>\n        <span class=\"n\">future</span><span class=\"o\">.</span><span class=\"n\">set_result</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">call</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">correlation_id</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">())</span>\n        <span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_future</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"p\">[</span><span class=\"n\">correlation_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">future</span>\n\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span>\n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(),</span> <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"s1\">'rpc_queue'</span><span class=\"p\">,</span>\n            <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">aiormq</span><span class=\"o\">.</span><span class=\"n\">spec</span><span class=\"o\">.</span><span class=\"n\">Basic</span><span class=\"o\">.</span><span class=\"n\">Properties</span><span class=\"p\">(</span>\n                <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"s1\">'text/plain'</span><span class=\"p\">,</span>\n                <span class=\"n\">correlation_id</span><span class=\"o\">=</span><span class=\"n\">correlation_id</span><span class=\"p\">,</span>\n                <span class=\"n\">reply_to</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">callback_queue</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">future</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">fibonacci_rpc</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">FibonacciRpcClient</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [x] Requesting fib(30)\"</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">fibonacci_rpc</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" [.] Got </span><span class=\"si\">%r</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7179157, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "5cf29f8c0b048bc88154be082e9a85d8", "sha256": "09283adef09b46460bf93bad81d2a2f5b72f47f3fb14e86b21e911e91bd90f74"}, "downloads": -1, "filename": "aiormq-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5cf29f8c0b048bc88154be082e9a85d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 26699, "upload_time": "2019-01-08T23:27:19", "upload_time_iso_8601": "2019-01-08T23:27:19.190627Z", "url": "https://files.pythonhosted.org/packages/02/ac/46105870c33d853117ea772bac8a288e91d25d89870dca0dc18cd47dee11/aiormq-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1262cc23fd39fa24856bd7da005a0448", "sha256": "dd09221a9e534cdc0b97dd861e313d4d21aea7a4d7db534031da108a5512ad87"}, "downloads": -1, "filename": "aiormq-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1262cc23fd39fa24856bd7da005a0448", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 15488, "upload_time": "2019-01-08T23:27:20", "upload_time_iso_8601": "2019-01-08T23:27:20.395328Z", "url": "https://files.pythonhosted.org/packages/b5/6d/e99ec102d54f22486ccf3409a881571bf97aae7271924452b3cc201fb85e/aiormq-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "73df0e899a509f6c0f2ef34b51f4c56c", "sha256": "bf31faa53cc19756b09f33ca2f9e01159ba361e9fc0dddbded9b480ecff1558e"}, "downloads": -1, "filename": "aiormq-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "73df0e899a509f6c0f2ef34b51f4c56c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 26948, "upload_time": "2019-01-08T23:39:51", "upload_time_iso_8601": "2019-01-08T23:39:51.505504Z", "url": "https://files.pythonhosted.org/packages/ea/f7/e5809fd1d5aa72610f02655dfd1f15c48ea6181d8782541011e62fddd05b/aiormq-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f40317df00b95b2cce26846ff2e823b", "sha256": "72905de95a54559732081a9ee850ff941a438e99bdcfff1b341a978874c470ad"}, "downloads": -1, "filename": "aiormq-0.2.3.tar.gz", "has_sig": false, "md5_digest": "2f40317df00b95b2cce26846ff2e823b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 16049, "upload_time": "2019-01-08T23:39:52", "upload_time_iso_8601": "2019-01-08T23:39:52.924010Z", "url": "https://files.pythonhosted.org/packages/47/58/8849af32a077e72aec1b6311d25a18d6fae501625c845ba9057102819b9c/aiormq-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "36e76f36621f0f86bcb0876e21aec767", "sha256": "5863f49ca1f06b03f54705cba1205c896456e014f68530cef77c5ba4da7744ca"}, "downloads": -1, "filename": "aiormq-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36e76f36621f0f86bcb0876e21aec767", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 28452, "upload_time": "2019-01-10T22:49:25", "upload_time_iso_8601": "2019-01-10T22:49:25.916459Z", "url": "https://files.pythonhosted.org/packages/2e/69/c7d88dfd85a72192e28aa378c8365b43c551483c1599aa379345eadd1e46/aiormq-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "697b96e52f3fde4035c7c6d8c272c6bc", "sha256": "7c375aa79f6780a91a4a577e88b477a5dff5e324e63c10522ee0679725dc1a61"}, "downloads": -1, "filename": "aiormq-0.3.0.tar.gz", "has_sig": false, "md5_digest": "697b96e52f3fde4035c7c6d8c272c6bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 19177, "upload_time": "2019-01-10T22:49:27", "upload_time_iso_8601": "2019-01-10T22:49:27.743523Z", "url": "https://files.pythonhosted.org/packages/2f/32/71296ea5949ef001f118f35d67dfc92c6e29523f8896bfe49e9bf36c226c/aiormq-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "4a377b1d7593d9155ce72abc192c4dfa", "sha256": "e348273546b8b8640821d2fd53ba3ddc4811ebeb6b57bc7d1263875906b7fe74"}, "downloads": -1, "filename": "aiormq-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4a377b1d7593d9155ce72abc192c4dfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29222, "upload_time": "2019-01-10T23:09:57", "upload_time_iso_8601": "2019-01-10T23:09:57.026371Z", "url": "https://files.pythonhosted.org/packages/12/a2/fa361285090d954aa12a029f03186fe5706603498d56d2edf935e76cd117/aiormq-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87e7cc6f12dbd77e451aaf91a47577c5", "sha256": "057bedb5f2e979950b58bfc1b81f6d35dbec9ff5eefcbae4efc3747d2f8ac495"}, "downloads": -1, "filename": "aiormq-0.3.1.tar.gz", "has_sig": false, "md5_digest": "87e7cc6f12dbd77e451aaf91a47577c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21124, "upload_time": "2019-01-10T23:09:58", "upload_time_iso_8601": "2019-01-10T23:09:58.668890Z", "url": "https://files.pythonhosted.org/packages/51/bc/765df28a9b6fc85105f2c8c5f01cb90026a7f3d90925417ab75ba487c63d/aiormq-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "3b2ad2253841eb860271273f7bc7075e", "sha256": "12461a49dc5fd28cb1f4d3cd76a966a96308dc3dd79fa331c9442663780944c4"}, "downloads": -1, "filename": "aiormq-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3b2ad2253841eb860271273f7bc7075e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29228, "upload_time": "2019-01-10T23:11:54", "upload_time_iso_8601": "2019-01-10T23:11:54.635259Z", "url": "https://files.pythonhosted.org/packages/4d/5a/4827e9c84985c8ed2d5a1bc375372692c9ef26051dca2dd33341230d430a/aiormq-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97d6257f2b917f8bed34fe199506703f", "sha256": "b14e4ee3441e9c135b3a7b670746b4b01d496ab997aa0bf9978940a3972bd1f2"}, "downloads": -1, "filename": "aiormq-0.3.2.tar.gz", "has_sig": false, "md5_digest": "97d6257f2b917f8bed34fe199506703f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21155, "upload_time": "2019-01-10T23:11:56", "upload_time_iso_8601": "2019-01-10T23:11:56.409349Z", "url": "https://files.pythonhosted.org/packages/f9/2b/76bf0892ea6d65518236b3c8e427ba542d97c6c117e66735c879bcf2e4c6/aiormq-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "a83c81109aa6d793c0ae74cc3fd2ac5e", "sha256": "a0ae5395c58db17895eecf38c52f3a952118d76668a7e067d72479f46c980777"}, "downloads": -1, "filename": "aiormq-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a83c81109aa6d793c0ae74cc3fd2ac5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 21108, "upload_time": "2019-01-20T10:59:20", "upload_time_iso_8601": "2019-01-20T10:59:20.254781Z", "url": "https://files.pythonhosted.org/packages/11/0a/3dca1bc7c821197d25a14b35847e89be6d1317168550eb0004ebda218f29/aiormq-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e84fcd0c715414418130ea30d88db86f", "sha256": "b01fb8746cb76b6447508feefc799489dd6fa3d217fb09ff34170a21edb78f0c"}, "downloads": -1, "filename": "aiormq-0.3.3.tar.gz", "has_sig": false, "md5_digest": "e84fcd0c715414418130ea30d88db86f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21047, "upload_time": "2019-01-20T10:59:22", "upload_time_iso_8601": "2019-01-20T10:59:22.130908Z", "url": "https://files.pythonhosted.org/packages/0d/71/1f293a477cacfdf8fc8a39552f93c16833a1f1910ec90c60519baca2f725/aiormq-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "43c553c49395895278a6465427623752", "sha256": "12438c0d3ed630c9cea92dbfca87afa57eb924a1769114a90d6548e831ff965d"}, "downloads": -1, "filename": "aiormq-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "43c553c49395895278a6465427623752", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 21119, "upload_time": "2019-01-20T11:40:40", "upload_time_iso_8601": "2019-01-20T11:40:40.200479Z", "url": "https://files.pythonhosted.org/packages/48/9d/ca2e3a53b2b5455d574e45502aca9daeb98c96cd0e079485c01595b36cd8/aiormq-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ce7b5d3d2fea85f6c25fa3515efe597", "sha256": "2e5a033f5059ba5f254c5a53be860fdf452005ca9a5062d3c59354b81400a96f"}, "downloads": -1, "filename": "aiormq-0.4.0.tar.gz", "has_sig": false, "md5_digest": "7ce7b5d3d2fea85f6c25fa3515efe597", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21056, "upload_time": "2019-01-20T11:40:41", "upload_time_iso_8601": "2019-01-20T11:40:41.859016Z", "url": "https://files.pythonhosted.org/packages/87/56/60fd84382c440ba9cae0610b333c8e822f4af94d59f6eeed9927a1cba226/aiormq-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "1fe2f201ab6764cb21f8bd1c0622b39a", "sha256": "fb10085f14c972a141505d93bbcbf25cf19d6796157d17cc355ced317b6828f5"}, "downloads": -1, "filename": "aiormq-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1fe2f201ab6764cb21f8bd1c0622b39a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 20613, "upload_time": "2019-01-20T11:52:01", "upload_time_iso_8601": "2019-01-20T11:52:01.375919Z", "url": "https://files.pythonhosted.org/packages/05/98/97e88d600761fe46302a2a296be26c1dac064e36c5f28e514903271d1c81/aiormq-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0e142f0b841d1adf7ed051017600953", "sha256": "4e9b8c179f9adfcf78598d687652705557002a9468301161197c1fcd1f2fd5a4"}, "downloads": -1, "filename": "aiormq-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e0e142f0b841d1adf7ed051017600953", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20538, "upload_time": "2019-01-20T11:52:03", "upload_time_iso_8601": "2019-01-20T11:52:03.026779Z", "url": "https://files.pythonhosted.org/packages/2d/8a/3b80d5b9ad6ae7fcbc5b0059c607dc80c404f5e2494e8e961c6a8e3effee/aiormq-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "2cdea7db34f699c46dcdd56b0f2da44a", "sha256": "5550bf99a6c8f3199b1cde37de2be6d7de561871b203fe6f986cafab360732cd"}, "downloads": -1, "filename": "aiormq-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2cdea7db34f699c46dcdd56b0f2da44a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 20632, "upload_time": "2019-01-20T12:23:59", "upload_time_iso_8601": "2019-01-20T12:23:59.242124Z", "url": "https://files.pythonhosted.org/packages/a7/de/1f98061dd5b2243daab5cc82dd904415a2437312b64b7bfb2a691ae129b1/aiormq-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "864f94058421503f0a56ab6c44cee750", "sha256": "dfe95d7672f38e63eb00babf7892bb634a51e38ec221ac75d2954244d6fbf79e"}, "downloads": -1, "filename": "aiormq-0.6.0.tar.gz", "has_sig": false, "md5_digest": "864f94058421503f0a56ab6c44cee750", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20555, "upload_time": "2019-01-20T12:24:01", "upload_time_iso_8601": "2019-01-20T12:24:01.145244Z", "url": "https://files.pythonhosted.org/packages/40/51/6e3cba019c453ec7e848832ce43122014e957ea2ad7bef38cc4335143dca/aiormq-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "92edb919d260f825041444fbea6a6627", "sha256": "dd3faa843f8f16d7015d59e9196a670e56da6d1a0397f24ea9cfd915ab0c6301"}, "downloads": -1, "filename": "aiormq-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "92edb919d260f825041444fbea6a6627", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 20635, "upload_time": "2019-01-20T17:45:16", "upload_time_iso_8601": "2019-01-20T17:45:16.974774Z", "url": "https://files.pythonhosted.org/packages/fe/42/73be3fb9999529eb1a008c40330c5128efa5b195bc19ead5cab42ca4baca/aiormq-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80029d9392997a2d0d21b7bda380b28d", "sha256": "0414671cec6cd0a7c48f13d7c10d09441ee58b574ab31dd5de3beb344f645c8c"}, "downloads": -1, "filename": "aiormq-0.6.1.tar.gz", "has_sig": false, "md5_digest": "80029d9392997a2d0d21b7bda380b28d", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20566, "upload_time": "2019-01-20T17:45:21", "upload_time_iso_8601": "2019-01-20T17:45:21.399459Z", "url": "https://files.pythonhosted.org/packages/b5/8c/92fbfe968a28b184b96d52f51c8db229dc7c984d96d2dc2851a1940a41db/aiormq-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "8df429812a4107f5cf294af10b23e4f4", "sha256": "2f3cbd5021c589e551bd896bc969cb6af67cb3cde2f2c351e2749fdf7e89488f"}, "downloads": -1, "filename": "aiormq-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8df429812a4107f5cf294af10b23e4f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 20688, "upload_time": "2019-01-20T18:18:57", "upload_time_iso_8601": "2019-01-20T18:18:57.414591Z", "url": "https://files.pythonhosted.org/packages/45/0f/58a4c6f08b4ed68e2eeaa944c07449b2fda372cbdf43476c4dc063231f15/aiormq-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d31d438c39d5b8774a520bddf38e0d7", "sha256": "229a04f14e2185b37e0c40bc31bad3b36da2edd157bd47617ce91c9c8ffb952d"}, "downloads": -1, "filename": "aiormq-0.7.0.tar.gz", "has_sig": false, "md5_digest": "6d31d438c39d5b8774a520bddf38e0d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20611, "upload_time": "2019-01-20T18:18:59", "upload_time_iso_8601": "2019-01-20T18:18:59.088865Z", "url": "https://files.pythonhosted.org/packages/b4/4b/3165af83074d4a1ad0a3d9108e31ed5389897b65e935d24f98ce27b2b8f2/aiormq-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "2eb0d6547de35de3885ee12ac8b5fc25", "sha256": "aaa10cf9c9445974f4cadedc71f33cf1dd74c98d1708858cb3c0958c1b2989ca"}, "downloads": -1, "filename": "aiormq-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2eb0d6547de35de3885ee12ac8b5fc25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 28820, "upload_time": "2019-01-21T13:01:43", "upload_time_iso_8601": "2019-01-21T13:01:43.864219Z", "url": "https://files.pythonhosted.org/packages/02/a5/6c20367685a925e77ad32a7aec796d3fe714a5d1478dfddd7d9c0dd5a9c8/aiormq-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "602003d67f594b4bfccfa047ca6273c7", "sha256": "84fcaad5438fab60f2b4573b665c973b880c78c29eb1b253609f46f54441b8d2"}, "downloads": -1, "filename": "aiormq-0.7.1.tar.gz", "has_sig": false, "md5_digest": "602003d67f594b4bfccfa047ca6273c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20672, "upload_time": "2019-01-21T13:01:45", "upload_time_iso_8601": "2019-01-21T13:01:45.541696Z", "url": "https://files.pythonhosted.org/packages/a5/58/be78222c8a4f29a3d858c3fce44c99037f635d0296f449fa4178c50fad1a/aiormq-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "5ac00d35b16adbcaeb96072bf8904fc9", "sha256": "052c93b33061332879d491294a11b03cf193bc1cc573d97224136360ed19c97f"}, "downloads": -1, "filename": "aiormq-0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5ac00d35b16adbcaeb96072bf8904fc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 28904, "upload_time": "2019-01-22T22:07:40", "upload_time_iso_8601": "2019-01-22T22:07:40.363614Z", "url": "https://files.pythonhosted.org/packages/ef/d2/aebe529bebfb3cd16d41887b8e5b4785e0a4f106b37c1e2201cf667ced0a/aiormq-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "189a2da5d69f25efb81730290fcac6cb", "sha256": "87d652ca36de45b2ddaee7ba9337607443e8a511116185cdd01bd2037fc8d80e"}, "downloads": -1, "filename": "aiormq-0.7.2.tar.gz", "has_sig": false, "md5_digest": "189a2da5d69f25efb81730290fcac6cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20766, "upload_time": "2019-01-22T22:07:42", "upload_time_iso_8601": "2019-01-22T22:07:42.490583Z", "url": "https://files.pythonhosted.org/packages/8b/bb/b8530f766b71b9380abf5c89c758722364952b5420509f1f981c8c0bcccb/aiormq-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "83db50896609b651094af12e239cce85", "sha256": "1794753585bf4fb743695c37c8e7ed2864c4d55a12576b8c4cd342d1ae963f8b"}, "downloads": -1, "filename": "aiormq-0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "83db50896609b651094af12e239cce85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 20872, "upload_time": "2019-02-03T20:41:20", "upload_time_iso_8601": "2019-02-03T20:41:20.943536Z", "url": "https://files.pythonhosted.org/packages/8e/30/f7fb28ae01809653ebbc0f1aae3ca953507e5f60b4fd5fb4fd57d41795f9/aiormq-0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c81d131613b5381499d451b722b5be71", "sha256": "97f1f13f260664c4aff883ed8944d90f6bf644f46074ea7f9a2c27ee318f30ab"}, "downloads": -1, "filename": "aiormq-0.7.3.tar.gz", "has_sig": false, "md5_digest": "c81d131613b5381499d451b722b5be71", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20866, "upload_time": "2019-02-03T20:41:23", "upload_time_iso_8601": "2019-02-03T20:41:23.500709Z", "url": "https://files.pythonhosted.org/packages/de/c2/fb782342d69310d724f8701f936deb3937b90328925bafe5ff9ad4645fe3/aiormq-0.7.3.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "206cc9f3b5403a60739fe486e91d9a60", "sha256": "c4f868986249d780442debcf1729ec281b0b2297031c4551bae9bd0e78335e9e"}, "downloads": -1, "filename": "aiormq-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "206cc9f3b5403a60739fe486e91d9a60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 20871, "upload_time": "2019-02-04T19:00:23", "upload_time_iso_8601": "2019-02-04T19:00:23.712426Z", "url": "https://files.pythonhosted.org/packages/d8/7f/1d06bb286d57c17728b861098c58eb012c7005838e7956855e6d2c8c5183/aiormq-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7eecdc7e0085b53da824a654f452fa6b", "sha256": "c296ef028b106b63fbe089b8c3bbbba2526b1503b85c443631e6a5cc0b2e54a5"}, "downloads": -1, "filename": "aiormq-0.8.0.tar.gz", "has_sig": false, "md5_digest": "7eecdc7e0085b53da824a654f452fa6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20880, "upload_time": "2019-02-04T19:00:25", "upload_time_iso_8601": "2019-02-04T19:00:25.457378Z", "url": "https://files.pythonhosted.org/packages/fc/83/97533fae688cf98a2475151935cd504512563e782836ba3ad431744b27ec/aiormq-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "d27901165e77769ca7840dfbd18aef75", "sha256": "68c5fe07f1b53beb59a4e9102d4181598bf87da1d3150cca853443794fbd60ad"}, "downloads": -1, "filename": "aiormq-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d27901165e77769ca7840dfbd18aef75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 21438, "upload_time": "2019-02-07T13:58:35", "upload_time_iso_8601": "2019-02-07T13:58:35.828555Z", "url": "https://files.pythonhosted.org/packages/2d/6b/c6e6088338fc19a1e398a85c2db639689afa56196aa6c90722eb29f2e5cd/aiormq-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "956dd10ee1be3a9afd3bd23fc9a10e8e", "sha256": "df273bff269e259d45280359d88cb08532f22ddd0d3490a64d1f5347d2d53e1a"}, "downloads": -1, "filename": "aiormq-0.9.0.tar.gz", "has_sig": false, "md5_digest": "956dd10ee1be3a9afd3bd23fc9a10e8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21366, "upload_time": "2019-02-07T13:58:37", "upload_time_iso_8601": "2019-02-07T13:58:37.337164Z", "url": "https://files.pythonhosted.org/packages/ed/26/da675a766903a732aceddd8cd7ed771b28840fbd5ceb9d58bc8c7897e724/aiormq-0.9.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ad4c6d793cdfda5e480d5eb114cdbbce", "sha256": "943b10cda5c1999e8fcd3e6561260e3c9c79666089aa99fcecffbc81f8092a7b"}, "downloads": -1, "filename": "aiormq-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad4c6d793cdfda5e480d5eb114cdbbce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29599, "upload_time": "2019-02-07T22:00:09", "upload_time_iso_8601": "2019-02-07T22:00:09.434765Z", "url": "https://files.pythonhosted.org/packages/3c/29/47056708761c13022ca68644f5e2767e973e22531bbee0183d9f4af5b15d/aiormq-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "363f7513dbd728129484c59ef0cb8817", "sha256": "d8a568721d3c1636e9855ea2cda565d14741b516f9471976b1290632bc3588ce"}, "downloads": -1, "filename": "aiormq-1.0.0.tar.gz", "has_sig": false, "md5_digest": "363f7513dbd728129484c59ef0cb8817", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21493, "upload_time": "2019-02-07T22:00:11", "upload_time_iso_8601": "2019-02-07T22:00:11.030306Z", "url": "https://files.pythonhosted.org/packages/ad/93/a431bcaa74c6afbe86fcffc29db12441fbae2e2febfee7e5bc356d39c474/aiormq-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "222a988a1e39e537407adfd8038cbdba", "sha256": "2c1a44b86ac0e67f21241c9a3433bca01a0fec28c943c31d840f697c4ca10ec7"}, "downloads": -1, "filename": "aiormq-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "222a988a1e39e537407adfd8038cbdba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29636, "upload_time": "2019-02-08T21:02:13", "upload_time_iso_8601": "2019-02-08T21:02:13.330777Z", "url": "https://files.pythonhosted.org/packages/0a/2e/8453b7e96d0776234ad41d968b5084bb2fd6a8b2c2ebc71e6d5cc7b5ccaa/aiormq-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5471828c52e60d049a842f3252f8170c", "sha256": "11d335d0994a4ada15a6baedc4d349c874fd9473d0e2932bbb7906bf22c8a492"}, "downloads": -1, "filename": "aiormq-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5471828c52e60d049a842f3252f8170c", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21513, "upload_time": "2019-02-08T21:02:15", "upload_time_iso_8601": "2019-02-08T21:02:15.021279Z", "url": "https://files.pythonhosted.org/packages/86/79/8c9a6e69842b1694fed2eccf0c8539b67494861d0edd14c8645d2252a6c2/aiormq-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9bad839fe9ce44f877c40ad083f17fd3", "sha256": "eb7013510816c0e601894de6dd14fcdf360acaa0f1f224d852656a2649899d66"}, "downloads": -1, "filename": "aiormq-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9bad839fe9ce44f877c40ad083f17fd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29765, "upload_time": "2019-02-11T09:07:02", "upload_time_iso_8601": "2019-02-11T09:07:02.046861Z", "url": "https://files.pythonhosted.org/packages/31/69/bca885963fec6426609f396c96385e49b357332988a61c0473a21793e937/aiormq-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a19201ed3cb62edf1433fb0397ed457", "sha256": "49bbaa0f00ca4bc71ca9ca489ea9e34388b13f45cb478a82463394c18a9cbd7a"}, "downloads": -1, "filename": "aiormq-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0a19201ed3cb62edf1433fb0397ed457", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21662, "upload_time": "2019-02-11T09:07:03", "upload_time_iso_8601": "2019-02-11T09:07:03.901667Z", "url": "https://files.pythonhosted.org/packages/d8/4c/ea1cfbe46c6d4f96264a5aadd7ab2030f5e622f3dbca24899cc5f295f10f/aiormq-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1d8e721073b5c80d0b1a07ad540cd5fa", "sha256": "572e1eb30765be93c758a9e6958c47e7401cac879e289332e356c7cf3722a303"}, "downloads": -1, "filename": "aiormq-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1d8e721073b5c80d0b1a07ad540cd5fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 21784, "upload_time": "2019-02-11T10:39:41", "upload_time_iso_8601": "2019-02-11T10:39:41.891949Z", "url": "https://files.pythonhosted.org/packages/d3/e0/62cb178cd55434a17590aec1becfa551ed9408036af829677bfae7375618/aiormq-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ce59de7974c37ece2cf9f6f5f78dfb9", "sha256": "1e80de25f3a3683719c8c7cb24b3fd0cf536ba2b172e0c0ab13553b5c366e06d"}, "downloads": -1, "filename": "aiormq-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6ce59de7974c37ece2cf9f6f5f78dfb9", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21678, "upload_time": "2019-02-11T10:39:43", "upload_time_iso_8601": "2019-02-11T10:39:43.491653Z", "url": "https://files.pythonhosted.org/packages/d9/02/143fc1f68d91ca5a956bbcaba5136cf4e8f817c0ae60761db447e4d09bef/aiormq-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "80f6852165674e846f986be536412fb2", "sha256": "d287ea310c07704c4df949d587e2180ecc9e0d55942d4a4ea822fb57a46ce3cf"}, "downloads": -1, "filename": "aiormq-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "80f6852165674e846f986be536412fb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29907, "upload_time": "2019-02-11T19:21:19", "upload_time_iso_8601": "2019-02-11T19:21:19.044982Z", "url": "https://files.pythonhosted.org/packages/de/61/1956ecae4be3dc033f5a484f4df315957e9c15cf589c1c3a10aad25cd1bb/aiormq-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06b91c6673ee499996961c42f090c88b", "sha256": "6428feb3c6d4452c197c5feace5399903c0fb8a24cd3ea44cb3b1a261936d4f5"}, "downloads": -1, "filename": "aiormq-1.1.1.tar.gz", "has_sig": false, "md5_digest": "06b91c6673ee499996961c42f090c88b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21778, "upload_time": "2019-02-11T19:21:20", "upload_time_iso_8601": "2019-02-11T19:21:20.825490Z", "url": "https://files.pythonhosted.org/packages/28/99/a07a02996db7ead9d350cbd3dceaf6b28c8264cf69f3228210313c6fc4a4/aiormq-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "5243e9ea8a691688b3cbe2e0f5cd319b", "sha256": "b5ff5a78fb972fa1c917fc2594a8154d843c800815e571d8b5bc1241d45f3219"}, "downloads": -1, "filename": "aiormq-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5243e9ea8a691688b3cbe2e0f5cd319b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 29910, "upload_time": "2019-02-18T18:09:28", "upload_time_iso_8601": "2019-02-18T18:09:28.137773Z", "url": "https://files.pythonhosted.org/packages/89/c4/c0ba6c9942a8cfb4c8431e1a6316abf02923cd03ded3fce3246e6262dace/aiormq-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a65a8118e6254a66661d286a9bd1eae", "sha256": "41dfb98160b92fa9357ff0c4be751e3eb220b1fa04eb5432122fb01832469a15"}, "downloads": -1, "filename": "aiormq-1.1.2.tar.gz", "has_sig": false, "md5_digest": "0a65a8118e6254a66661d286a9bd1eae", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21781, "upload_time": "2019-02-18T18:09:29", "upload_time_iso_8601": "2019-02-18T18:09:29.925595Z", "url": "https://files.pythonhosted.org/packages/08/e1/a3612862f3699c1b2e0dc5db7c5ba650cb5c0924cc8ab8bde419c2f88daf/aiormq-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "2f4f82f2e6a54cd36abf639eba663ae5", "sha256": "08169657d58c720618d2a0ec3f5ad976ead37b5f7f034a6f191ed01054285dcd"}, "downloads": -1, "filename": "aiormq-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f4f82f2e6a54cd36abf639eba663ae5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 21739, "upload_time": "2019-02-20T13:33:08", "upload_time_iso_8601": "2019-02-20T13:33:08.796113Z", "url": "https://files.pythonhosted.org/packages/e1/af/04a137386256465458e0a826c2a5ed39fa887d3cfef74d114afe3861f847/aiormq-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfd9ae67d5e622c79a4f9c03038c2361", "sha256": "1fef036cd86995d449bb15c406203cb87c7fa20c569a106649ae074a208d40fd"}, "downloads": -1, "filename": "aiormq-1.2.0.tar.gz", "has_sig": false, "md5_digest": "cfd9ae67d5e622c79a4f9c03038c2361", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21698, "upload_time": "2019-02-20T13:33:15", "upload_time_iso_8601": "2019-02-20T13:33:15.632765Z", "url": "https://files.pythonhosted.org/packages/b7/27/1f4b4a4345b3f139bea9e81d28af01bcc69eeded007660ae237dce3bcc48/aiormq-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "ec31b01c8e672d3ce150c982d04c7c61", "sha256": "760b269c02822582acb421dc1f2e2e959c4de70abb0492608d2267d7023dcccf"}, "downloads": -1, "filename": "aiormq-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ec31b01c8e672d3ce150c982d04c7c61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 21738, "upload_time": "2019-02-21T16:00:45", "upload_time_iso_8601": "2019-02-21T16:00:45.769530Z", "url": "https://files.pythonhosted.org/packages/a4/ef/6cc42e9c014ea33153c4c5e0c7c9e8aaf444c5ae3d33337f3542ae3fab01/aiormq-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1857c427381a292711c2d69ebe61cc59", "sha256": "e961b1e33c38dae04fe6277a24c033570de742fcd05c12cd2dc19ca1cf80469d"}, "downloads": -1, "filename": "aiormq-1.2.1.tar.gz", "has_sig": false, "md5_digest": "1857c427381a292711c2d69ebe61cc59", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21690, "upload_time": "2019-02-21T16:00:48", "upload_time_iso_8601": "2019-02-21T16:00:48.013120Z", "url": "https://files.pythonhosted.org/packages/4d/7d/eacf184d4ed237742faa7bc3748e727e4350ba00f4049abc2147d20ce65d/aiormq-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "61b0389ec117311aa574acd43b125f5d", "sha256": "480b6e4e96c22136fec520020cb13c820686d23f64993ae49df7ebc6ebf89502"}, "downloads": -1, "filename": "aiormq-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "61b0389ec117311aa574acd43b125f5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 30331, "upload_time": "2019-02-26T11:56:28", "upload_time_iso_8601": "2019-02-26T11:56:28.252062Z", "url": "https://files.pythonhosted.org/packages/ee/7c/ccc2bd6d1374b13b37d750e5222b8c448f64ad20a8bbfdcdf08cdc7e5b63/aiormq-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b42b0e95f22b974fe8b40cc5cc9baff5", "sha256": "8919b94d1aa3016faf49add2a346370edb20c9777323373d230fbec66a760b7b"}, "downloads": -1, "filename": "aiormq-1.2.2.tar.gz", "has_sig": false, "md5_digest": "b42b0e95f22b974fe8b40cc5cc9baff5", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 22159, "upload_time": "2019-02-26T11:56:29", "upload_time_iso_8601": "2019-02-26T11:56:29.973274Z", "url": "https://files.pythonhosted.org/packages/a3/f9/b1ef697f05989710d65880e167f0e2a226c56e987ae60b204171131d8c0f/aiormq-1.2.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "3c65d804a0d134b182820045c4a52056", "sha256": "f1fed3d3023b3a327c9d7301349ce0a75b7c8a09c2b7850631f3316ac8c675c4"}, "downloads": -1, "filename": "aiormq-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3c65d804a0d134b182820045c4a52056", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 30497, "upload_time": "2019-02-26T13:48:02", "upload_time_iso_8601": "2019-02-26T13:48:02.098035Z", "url": "https://files.pythonhosted.org/packages/4e/7e/cb654ea3e8c350904349d15c82b30b4fe338e299eabe71f0bd6481bdcd40/aiormq-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af959e958b12abf86f820c052bfa5f0a", "sha256": "6cb6a78dc7cd8983539974c9f948c5f2acc28e475a4b031866b271c3e8937c78"}, "downloads": -1, "filename": "aiormq-2.0.0.tar.gz", "has_sig": false, "md5_digest": "af959e958b12abf86f820c052bfa5f0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 22310, "upload_time": "2019-02-26T13:48:03", "upload_time_iso_8601": "2019-02-26T13:48:03.741552Z", "url": "https://files.pythonhosted.org/packages/38/b8/607f7733330f1652f3c63ccde2ffa3c84472299a27d33429071f19c70bc2/aiormq-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "39248d7b0d664a06aa1532b550bc9b11", "sha256": "7d0146ea803699a5d4b7c1459c1065d110e52afcb785b2b9e70591a7af9ddbb2"}, "downloads": -1, "filename": "aiormq-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "39248d7b0d664a06aa1532b550bc9b11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 31144, "upload_time": "2019-02-26T13:53:11", "upload_time_iso_8601": "2019-02-26T13:53:11.321915Z", "url": "https://files.pythonhosted.org/packages/b7/17/e63177c0624d3103c26d7ec1c310fcff68495ecd128a8b0c07a3dfd15d8e/aiormq-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5379d06f54d08ded13b3f080506679c5", "sha256": "40832b67a96b63d0dc70292daf094ec5a0cab8649120333543bd07ccafc2b502"}, "downloads": -1, "filename": "aiormq-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5379d06f54d08ded13b3f080506679c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 22896, "upload_time": "2019-02-26T13:53:13", "upload_time_iso_8601": "2019-02-26T13:53:13.138420Z", "url": "https://files.pythonhosted.org/packages/4b/95/77f4c4577f311655c2918a6ca8999607d882552dbea4a0fc1da048962e13/aiormq-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "3f37e9b39872e46e29272c7df56ed29e", "sha256": "60ccfcbd236058063c1425fbb62535cd0bc2596f16eac7bff6a7223a39099c1c"}, "downloads": -1, "filename": "aiormq-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3f37e9b39872e46e29272c7df56ed29e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 31401, "upload_time": "2019-03-10T21:28:10", "upload_time_iso_8601": "2019-03-10T21:28:10.935114Z", "url": "https://files.pythonhosted.org/packages/a1/1c/08e9cd94e2b7a4798379925e3b77029d8cf364736b9718e210f4ae427742/aiormq-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c26cb095cdf06def85ef47cda7b01f7", "sha256": "ac7b86d84bd2c0b47904a2f0718fe499dd3d5a3f62a1f55cf1cfea8e8423b966"}, "downloads": -1, "filename": "aiormq-2.1.0.tar.gz", "has_sig": false, "md5_digest": "8c26cb095cdf06def85ef47cda7b01f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 23095, "upload_time": "2019-03-10T21:28:12", "upload_time_iso_8601": "2019-03-10T21:28:12.844132Z", "url": "https://files.pythonhosted.org/packages/61/2b/45fe94324106ca580923d52ae62f998b06a565a36e11859206c3c200b448/aiormq-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "b2d15a90b9fa63a08b26ae923290cd80", "sha256": "9718d9f19d708894a99f76d0128a3f394c9c55d6e057351dc629b271537c7c80"}, "downloads": -1, "filename": "aiormq-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2d15a90b9fa63a08b26ae923290cd80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 31948, "upload_time": "2019-03-24T21:12:28", "upload_time_iso_8601": "2019-03-24T21:12:28.833702Z", "url": "https://files.pythonhosted.org/packages/a7/97/8fbb594f6573ec8ec6b7f419dc8e5db8dfd0e8bcad1ddf21ee47db2302ae/aiormq-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61dcfaeb741f4be7cb6fc5b7c84ce5c0", "sha256": "db8fc644e539901c35f6aff9c7049bf9807abf7e42219f6728050e962850ada5"}, "downloads": -1, "filename": "aiormq-2.1.1.tar.gz", "has_sig": false, "md5_digest": "61dcfaeb741f4be7cb6fc5b7c84ce5c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 23684, "upload_time": "2019-03-24T21:12:30", "upload_time_iso_8601": "2019-03-24T21:12:30.573544Z", "url": "https://files.pythonhosted.org/packages/f9/52/7012b044a70a09aa4760dc81fba198e00fe7df523894b8484a02c6e46b83/aiormq-2.1.1.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "bdc4832299c4d0d90754fedb8b2c07bc", "sha256": "b753974e7da758885335dd445b2ee7dd21d5160b21811858a4dd2c5d30595f36"}, "downloads": -1, "filename": "aiormq-2.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bdc4832299c4d0d90754fedb8b2c07bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 32655, "upload_time": "2019-03-24T23:18:30", "upload_time_iso_8601": "2019-03-24T23:18:30.765625Z", "url": "https://files.pythonhosted.org/packages/a1/26/a4adafce2ed0d9b65cf62eaa518446aea395f3f417b3048700a75742b6c7/aiormq-2.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "076c2c77ca419caec2a96909a166c2de", "sha256": "b8442ad75ec28bfc65503372266745728f0710cbe1aeeb762f8d43054caaf9bd"}, "downloads": -1, "filename": "aiormq-2.3.1.tar.gz", "has_sig": false, "md5_digest": "076c2c77ca419caec2a96909a166c2de", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24260, "upload_time": "2019-03-24T23:18:32", "upload_time_iso_8601": "2019-03-24T23:18:32.686500Z", "url": "https://files.pythonhosted.org/packages/b5/1f/ada99bcde170f296fbd75a69dbaf0df2e88450a56989e8cbf65fac68590c/aiormq-2.3.1.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "d64d79ccd3e62bc1a8fe31aea99740ab", "sha256": "487cb80986440471fd6f038c9149da675318d79c811d2e3150185b94a64d1eeb"}, "downloads": -1, "filename": "aiormq-2.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d64d79ccd3e62bc1a8fe31aea99740ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 32871, "upload_time": "2019-03-26T13:49:21", "upload_time_iso_8601": "2019-03-26T13:49:21.387289Z", "url": "https://files.pythonhosted.org/packages/d5/97/41eea9d67f745fb390f376588d7abbc558386c2b20431e52ceb85f5cbd7e/aiormq-2.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cdd575b6b62f5be1bad57a7ee09f16b", "sha256": "12b13f1d0c82c6b6fc4041c6673f339d1144ab0bf37cc897e25a8758401ec8c0"}, "downloads": -1, "filename": "aiormq-2.3.3.tar.gz", "has_sig": false, "md5_digest": "0cdd575b6b62f5be1bad57a7ee09f16b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24409, "upload_time": "2019-03-26T13:49:23", "upload_time_iso_8601": "2019-03-26T13:49:23.155855Z", "url": "https://files.pythonhosted.org/packages/e0/34/db33804e916626f5a9dc506496d989393e4037ca8157bf95eeaf6f192e94/aiormq-2.3.3.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "fe551c08ba3adda487371269aca30d7c", "sha256": "f22b145deb131e4a4d71f0929ffb1439bc5069d74d9e1cdb300a95f1c7fa17b0"}, "downloads": -1, "filename": "aiormq-2.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe551c08ba3adda487371269aca30d7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 33006, "upload_time": "2019-04-13T15:43:13", "upload_time_iso_8601": "2019-04-13T15:43:13.539071Z", "url": "https://files.pythonhosted.org/packages/71/15/e124b7f0bbf6f1b1543b978e01cff14adcaf355f46084c2cd9380be31f00/aiormq-2.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67f17457c3a05591d4cc1c18c3ad3065", "sha256": "564150325fcdb1984a53ae6fe02a0360cfdac4520fa60ffeb72fa616da45b5b4"}, "downloads": -1, "filename": "aiormq-2.4.0.tar.gz", "has_sig": false, "md5_digest": "67f17457c3a05591d4cc1c18c3ad3065", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24518, "upload_time": "2019-04-13T15:43:15", "upload_time_iso_8601": "2019-04-13T15:43:15.544841Z", "url": "https://files.pythonhosted.org/packages/f1/02/f26f68a186ea6e150e66f061f87e79643124834bb25185cf9177dd933b81/aiormq-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "099eb41bef7a6cc0d8a8c75a594dd1a4", "sha256": "2249b9d8b6f8d4ef2e9e13932d17b6941cf1ecaa46b9ac95b7af5f8f826a4275"}, "downloads": -1, "filename": "aiormq-2.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "099eb41bef7a6cc0d8a8c75a594dd1a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 33149, "upload_time": "2019-04-15T06:17:15", "upload_time_iso_8601": "2019-04-15T06:17:15.435573Z", "url": "https://files.pythonhosted.org/packages/f9/a6/d6ac7af8463f04ab04c63e002bee1ffa44d534a3e00454b91eb26f36e8d6/aiormq-2.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b450588dfd2185beeb6c0ab9f309c34a", "sha256": "3aa7abcee50c518aab253f5ce7263cef3aa31a1c31d6c0233ef54e6c900307fb"}, "downloads": -1, "filename": "aiormq-2.4.1.tar.gz", "has_sig": false, "md5_digest": "b450588dfd2185beeb6c0ab9f309c34a", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24610, "upload_time": "2019-04-15T06:17:17", "upload_time_iso_8601": "2019-04-15T06:17:17.005113Z", "url": "https://files.pythonhosted.org/packages/40/72/165f45e031966701ef6c3eaa5d93e53ea14cbb5a49ffd398d10715232bc6/aiormq-2.4.1.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "2736c831430943f108cc7e2e63aa948e", "sha256": "6b110c87a9bff971972ea0bc785197f7a2ba5ab36051015275d3fa8011025b23"}, "downloads": -1, "filename": "aiormq-2.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2736c831430943f108cc7e2e63aa948e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 33147, "upload_time": "2019-04-19T16:11:05", "upload_time_iso_8601": "2019-04-19T16:11:05.234177Z", "url": "https://files.pythonhosted.org/packages/2d/f2/753f1f601344d324dccbc8567d4f07ae6193400668ffee921171ff23b825/aiormq-2.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "277464e1a2ab36bd2e7aa95dfedd9e7f", "sha256": "399015098ad1e496c675c70b23356b4f8439007b3022ea870dc17419368d0f94"}, "downloads": -1, "filename": "aiormq-2.4.2.tar.gz", "has_sig": false, "md5_digest": "277464e1a2ab36bd2e7aa95dfedd9e7f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24624, "upload_time": "2019-04-19T16:11:07", "upload_time_iso_8601": "2019-04-19T16:11:07.122979Z", "url": "https://files.pythonhosted.org/packages/62/f0/087ecb5fc9dd11822d97c98ac4c89b4512b40e515195007124c133f80652/aiormq-2.4.2.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "fab60116db93a1e16e91c869f82448c4", "sha256": "19489efae3fedbef68b44ed39103455823e1d3caa098e80595155d25a0f244c1"}, "downloads": -1, "filename": "aiormq-2.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fab60116db93a1e16e91c869f82448c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 33132, "upload_time": "2019-04-19T16:49:52", "upload_time_iso_8601": "2019-04-19T16:49:52.103784Z", "url": "https://files.pythonhosted.org/packages/9c/8c/b89b919173c8a77db0d0969f6c37fb74789b692cbc5cfa7116cc4d60f111/aiormq-2.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab12238d69715f6df60936d59062c6fc", "sha256": "d2eac8f81e56e1e8e7bc2e38b720dd7825318cd299d2155fd03b456241c68789"}, "downloads": -1, "filename": "aiormq-2.5.0.tar.gz", "has_sig": false, "md5_digest": "ab12238d69715f6df60936d59062c6fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24613, "upload_time": "2019-04-19T16:49:53", "upload_time_iso_8601": "2019-04-19T16:49:53.909615Z", "url": "https://files.pythonhosted.org/packages/fe/1f/a07930fe69e576566bbeb24f7eade49424daee84212d38bcde130b689bc1/aiormq-2.5.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "81c20a674cb51c294109dc406aa7af7d", "sha256": "be3e74b6f4a490ea1f3d393c186e98e8214cdde26f7073812b23fc002fff7383"}, "downloads": -1, "filename": "aiormq-2.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "81c20a674cb51c294109dc406aa7af7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 33187, "upload_time": "2019-04-23T17:18:07", "upload_time_iso_8601": "2019-04-23T17:18:07.286485Z", "url": "https://files.pythonhosted.org/packages/95/33/1037dcdb8ef28dace5af27b7d80c0ae7341578e8077b987c61da6e5e16a2/aiormq-2.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3377df3c3ea30f74497282bd4e3cd4a", "sha256": "2e18576a90dfdaa91f705bd226506d9589353350f09b7121179c0bf5350a79a8"}, "downloads": -1, "filename": "aiormq-2.5.1.tar.gz", "has_sig": false, "md5_digest": "d3377df3c3ea30f74497282bd4e3cd4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24664, "upload_time": "2019-04-23T17:18:09", "upload_time_iso_8601": "2019-04-23T17:18:09.523471Z", "url": "https://files.pythonhosted.org/packages/56/e6/77217e483f1ba04aa9c5b43a8a0d4960b9082976010b1a5cc2ff814c48bc/aiormq-2.5.1.tar.gz", "yanked": false}], "2.5.2": [{"comment_text": "", "digests": {"md5": "f3739baec9c4ec426cc76ad863eb7a6e", "sha256": "79b41e51481fb7617279414e4428a644a944beb4dea8ea0febd67a8902976250"}, "downloads": -1, "filename": "aiormq-2.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f3739baec9c4ec426cc76ad863eb7a6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 25127, "upload_time": "2019-04-30T08:11:03", "upload_time_iso_8601": "2019-04-30T08:11:03.142776Z", "url": "https://files.pythonhosted.org/packages/db/6b/91e4a0be104839db1ec6e91fec8d3e991f434c60261b95c86920bb3ce41d/aiormq-2.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9339f81d082004ae06572a9c3456991", "sha256": "f134cc91ac111b0135c97539272579b1d15b69f25c75a935f6ee39e5194df231"}, "downloads": -1, "filename": "aiormq-2.5.2.tar.gz", "has_sig": false, "md5_digest": "a9339f81d082004ae06572a9c3456991", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24656, "upload_time": "2019-04-30T08:11:09", "upload_time_iso_8601": "2019-04-30T08:11:09.102778Z", "url": "https://files.pythonhosted.org/packages/cf/67/ee1e02210e9617de5f97296423951d5d1c0cafba00a8e7cb29ca036de0d7/aiormq-2.5.2.tar.gz", "yanked": false}], "2.5.3": [{"comment_text": "", "digests": {"md5": "8abb55a3ee17be43cade0c732513dbdc", "sha256": "cddfd907c211fe41d8b255a441fe8e64e8a056bedac762732a6e4e4b692a7ee2"}, "downloads": -1, "filename": "aiormq-2.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8abb55a3ee17be43cade0c732513dbdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33186, "upload_time": "2019-05-14T07:25:23", "upload_time_iso_8601": "2019-05-14T07:25:23.149605Z", "url": "https://files.pythonhosted.org/packages/d3/9c/03a0892e24da38239470177974294892cfe6128191ebdf775d147c37f069/aiormq-2.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ae7d40a4b76b2f714db7c6963e38ea8", "sha256": "61d9e967f4383410ec98923efbb758d44a378cdd8c647d4ee743cd98e0848ad8"}, "downloads": -1, "filename": "aiormq-2.5.3.tar.gz", "has_sig": false, "md5_digest": "0ae7d40a4b76b2f714db7c6963e38ea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24492, "upload_time": "2019-05-14T07:25:25", "upload_time_iso_8601": "2019-05-14T07:25:25.294795Z", "url": "https://files.pythonhosted.org/packages/4f/34/439e9cabd5e2e07643829c079af6e8f48a5ffeb33ab82cf23ffcb56b7bce/aiormq-2.5.3.tar.gz", "yanked": false}], "2.5.4": [{"comment_text": "", "digests": {"md5": "bf0064b97a652c6fb190d014a4c067aa", "sha256": "bcfd5098b8504a3354d1d7425927ffb84f1f5b91b56ab49ceedc9fae4137ec5c"}, "downloads": -1, "filename": "aiormq-2.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bf0064b97a652c6fb190d014a4c067aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 33197, "upload_time": "2019-06-13T14:50:49", "upload_time_iso_8601": "2019-06-13T14:50:49.182777Z", "url": "https://files.pythonhosted.org/packages/c2/c5/be2c7244e382eada97c28b92b799b5852167bd56f984f64cce3e16d10493/aiormq-2.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e5fd896d02d2fc119e161c4b7c8ef2e", "sha256": "58acfd3c5b389080cc568c30d018c54820328617309ebfa12c462b0fd9fdc5d6"}, "downloads": -1, "filename": "aiormq-2.5.4.tar.gz", "has_sig": false, "md5_digest": "5e5fd896d02d2fc119e161c4b7c8ef2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 24681, "upload_time": "2019-06-13T14:50:51", "upload_time_iso_8601": "2019-06-13T14:50:51.825843Z", "url": "https://files.pythonhosted.org/packages/4d/80/19980d411bfc15642fb8895dc093024b92358d0d1388fad5433c5b5b7a60/aiormq-2.5.4.tar.gz", "yanked": false}], "2.5.5": [{"comment_text": "", "digests": {"md5": "6b986a489a20af5329f3af493576795a", "sha256": "f36be480de4009ddb621a8795c52f0c146813799f56d79e126dfa60e13e41dd9"}, "downloads": -1, "filename": "aiormq-2.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6b986a489a20af5329f3af493576795a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 26869, "upload_time": "2019-06-13T15:27:01", "upload_time_iso_8601": "2019-06-13T15:27:01.187068Z", "url": "https://files.pythonhosted.org/packages/64/9d/978af7a98ed54f84e6a34bbb3353771e260c69fccde70dd335f115e098bd/aiormq-2.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f19ab69874d51dd2277df87d49ac98ea", "sha256": "038bd43d68f8e77bf79c7cc362da9df5ca6497c23c3bf20ee43ce1622448ef8a"}, "downloads": -1, "filename": "aiormq-2.5.5.tar.gz", "has_sig": false, "md5_digest": "f19ab69874d51dd2277df87d49ac98ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20359, "upload_time": "2019-06-13T15:27:04", "upload_time_iso_8601": "2019-06-13T15:27:04.318986Z", "url": "https://files.pythonhosted.org/packages/d1/f7/8a85711ecd9bece31f89f23a65b020f44f855c9320204b35121cede2166a/aiormq-2.5.5.tar.gz", "yanked": false}], "2.5.6": [{"comment_text": "", "digests": {"md5": "81403bbc24284e7db31212410eb1238f", "sha256": "bc5ee013be15af51da7816c528a31ab241251df68ed0aa24e5c36e2f60f5e46b"}, "downloads": -1, "filename": "aiormq-2.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "81403bbc24284e7db31212410eb1238f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26866, "upload_time": "2019-06-21T21:23:10", "upload_time_iso_8601": "2019-06-21T21:23:10.171728Z", "url": "https://files.pythonhosted.org/packages/9e/0f/d6bc2b267f1041b0f4852765635d9106765ed36ddcbc3236b65e320d5691/aiormq-2.5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cad64cfce70385b5c8fad9c02a54219", "sha256": "37b8ce8700685534e80da85347f7d8b3054d6d0592f91275dee1440c85db7a7b"}, "downloads": -1, "filename": "aiormq-2.5.6.tar.gz", "has_sig": false, "md5_digest": "0cad64cfce70385b5c8fad9c02a54219", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20306, "upload_time": "2019-06-21T21:23:12", "upload_time_iso_8601": "2019-06-21T21:23:12.696407Z", "url": "https://files.pythonhosted.org/packages/cc/0a/2cf5923e7d4969be7ead942236ab8999688590fc8e0328bc7e157c88f709/aiormq-2.5.6.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "884735e3dc3f6bca7b2cc8cf8c8b98de", "sha256": "eab19c590a8b497572944da362a44bc6496476b39a5b3f3f1483a88805b90975"}, "downloads": -1, "filename": "aiormq-2.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "884735e3dc3f6bca7b2cc8cf8c8b98de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 26889, "upload_time": "2019-06-28T09:03:58", "upload_time_iso_8601": "2019-06-28T09:03:58.560641Z", "url": "https://files.pythonhosted.org/packages/30/4b/9629593379737a9a8951521af5d96362fddd1f4ee3bce08129a78dabb2e0/aiormq-2.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "479c16126999f27b1513eea5ed8aa0ef", "sha256": "cb1fa37d13ff8cad71ff7eef3618b6f75afe7a1988608d731ba8cb495174bd1e"}, "downloads": -1, "filename": "aiormq-2.6.0.tar.gz", "has_sig": false, "md5_digest": "479c16126999f27b1513eea5ed8aa0ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20334, "upload_time": "2019-06-28T09:04:01", "upload_time_iso_8601": "2019-06-28T09:04:01.099940Z", "url": "https://files.pythonhosted.org/packages/3d/8a/e8cd317dc686a406a80e21ff11b937967ea4e2fbc4e33d6c3f6b960526bc/aiormq-2.6.0.tar.gz", "yanked": false}], "2.6.1b0": [{"comment_text": "", "digests": {"md5": "15477ceab24236a227f8a2438e16557b", "sha256": "9a614fdc75b9fad49beedcff8acc7bec395ed9eebdb9533e80d4db803ccc5a78"}, "downloads": -1, "filename": "aiormq-2.6.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "15477ceab24236a227f8a2438e16557b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 26884, "upload_time": "2019-07-01T13:35:30", "upload_time_iso_8601": "2019-07-01T13:35:30.841920Z", "url": "https://files.pythonhosted.org/packages/65/23/b22fcb9ee18a20f5237675e702ab2e87035596e24c18bc5da9d41d9201ac/aiormq-2.6.1b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fe906217dadffc411b582cf06068d7f", "sha256": "6ff9c34a0705a3e25760af909623e64dc2388539a29def422d5368fb9aea7fe4"}, "downloads": -1, "filename": "aiormq-2.6.1b0.tar.gz", "has_sig": false, "md5_digest": "6fe906217dadffc411b582cf06068d7f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20347, "upload_time": "2019-07-01T13:35:33", "upload_time_iso_8601": "2019-07-01T13:35:33.836148Z", "url": "https://files.pythonhosted.org/packages/54/2a/791a29627f540913f0913235139ab5ed29ee73c281c6a97834730407b213/aiormq-2.6.1b0.tar.gz", "yanked": false}], "2.6.1b2": [{"comment_text": "", "digests": {"md5": "d571bbfc1a375fafb090f3fd69815b50", "sha256": "5e277109e4905b8680fcf26933b7a3e83195e3f2e7195831ea0dd5feb725747c"}, "downloads": -1, "filename": "aiormq-2.6.1b2-py3-none-any.whl", "has_sig": false, "md5_digest": "d571bbfc1a375fafb090f3fd69815b50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 26882, "upload_time": "2019-07-04T14:30:32", "upload_time_iso_8601": "2019-07-04T14:30:32.847627Z", "url": "https://files.pythonhosted.org/packages/c4/1d/4375e69a5e719adc9a1f34d4b0227a9f4bf43e47cf744de7a56a5122da5d/aiormq-2.6.1b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f788863365f9612e1887cb472b24942", "sha256": "b947630b2a7da74d79a5be9528d6d71c126e9dbe8d3112138ae2a23a02ed551f"}, "downloads": -1, "filename": "aiormq-2.6.1b2.tar.gz", "has_sig": false, "md5_digest": "9f788863365f9612e1887cb472b24942", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20354, "upload_time": "2019-07-04T14:30:36", "upload_time_iso_8601": "2019-07-04T14:30:36.478065Z", "url": "https://files.pythonhosted.org/packages/ac/50/db6a301781eecb17490da12fb27d6f39b42b16b4221d65560dc1dcb5ad51/aiormq-2.6.1b2.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "54809f3d89bf163d451251e510a31b1e", "sha256": "c5bd3b1c43f543856b669a19256bdccba1f8c606d1cb6818f271ec2628581408"}, "downloads": -1, "filename": "aiormq-2.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "54809f3d89bf163d451251e510a31b1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27007, "upload_time": "2019-08-01T06:42:21", "upload_time_iso_8601": "2019-08-01T06:42:21.938600Z", "url": "https://files.pythonhosted.org/packages/d8/a8/eda89e3db32164e1374c5b80dc1bc00841fd8a746b983e857370fe3acbd3/aiormq-2.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7336797bb59ff9e2ebdd796faeec506f", "sha256": "2c36ccb96b13088abfdc572454683f4146a76ee9b32d2777cec0bd695819feef"}, "downloads": -1, "filename": "aiormq-2.7.0.tar.gz", "has_sig": false, "md5_digest": "7336797bb59ff9e2ebdd796faeec506f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20412, "upload_time": "2019-08-01T06:42:24", "upload_time_iso_8601": "2019-08-01T06:42:24.720001Z", "url": "https://files.pythonhosted.org/packages/c2/25/0c181b485f5a390cba4c0c5eb2d066f6d5055dd570afdbfbdeabdc46db78/aiormq-2.7.0.tar.gz", "yanked": false}], "2.7.1": [{"comment_text": "", "digests": {"md5": "a84f02fb5b1fa728e2979a5e8e097844", "sha256": "e4645d69f15e65c47efd3c7aba0d40d6c40ac010b8a6bb0e3fcbd4c7f7432e0f"}, "downloads": -1, "filename": "aiormq-2.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a84f02fb5b1fa728e2979a5e8e097844", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27013, "upload_time": "2019-08-01T14:08:49", "upload_time_iso_8601": "2019-08-01T14:08:49.339857Z", "url": "https://files.pythonhosted.org/packages/09/1a/382534177e7d3fede402eaf264018c0efd8116901fdad05d8334cfe19a6c/aiormq-2.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "017e338ffffcd9657a831847708b7ad4", "sha256": "d3a73b487336513c6f585316593c4273dd2ff58f815f8d592ca375d3aff7f124"}, "downloads": -1, "filename": "aiormq-2.7.1.tar.gz", "has_sig": false, "md5_digest": "017e338ffffcd9657a831847708b7ad4", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20512, "upload_time": "2019-08-01T14:08:52", "upload_time_iso_8601": "2019-08-01T14:08:52.670779Z", "url": "https://files.pythonhosted.org/packages/7e/4e/a853aa42e671b6051766c93c4fe986ffe656ed070c5b472363a2df2105fd/aiormq-2.7.1.tar.gz", "yanked": false}], "2.7.2": [{"comment_text": "", "digests": {"md5": "cc22c4a2ca35e0f07fec212e4b5485a6", "sha256": "007f8cbd08cd4d5fbac91bb12a327cc4848a5b0638385e7037d699b394317375"}, "downloads": -1, "filename": "aiormq-2.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cc22c4a2ca35e0f07fec212e4b5485a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27019, "upload_time": "2019-08-02T11:22:15", "upload_time_iso_8601": "2019-08-02T11:22:15.717396Z", "url": "https://files.pythonhosted.org/packages/07/4a/cdb0b0eaec8d488cea742604c21e8b27b98347d1d678cc1c39242182b511/aiormq-2.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0017747c0e505db9e83f2c6aaa2e5de1", "sha256": "45f26b23dcc7533a1d8fa61efbf1b9797c38af0082a776259033c82e55bdc268"}, "downloads": -1, "filename": "aiormq-2.7.2.tar.gz", "has_sig": false, "md5_digest": "0017747c0e505db9e83f2c6aaa2e5de1", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20514, "upload_time": "2019-08-02T11:22:19", "upload_time_iso_8601": "2019-08-02T11:22:19.666780Z", "url": "https://files.pythonhosted.org/packages/e8/90/81184f5809b5551a57c44c26344015233d2e69d9f826d6d84f6ee218c6ec/aiormq-2.7.2.tar.gz", "yanked": false}], "2.7.3": [{"comment_text": "", "digests": {"md5": "85761ffb470fbc327f2fc7dd80c90dbe", "sha256": "25cecfa561485ac47e538e4ffe8b4d35b2b1406e5863264331a07cd24ac6fb44"}, "downloads": -1, "filename": "aiormq-2.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "85761ffb470fbc327f2fc7dd80c90dbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27024, "upload_time": "2019-08-22T17:02:07", "upload_time_iso_8601": "2019-08-22T17:02:07.796104Z", "url": "https://files.pythonhosted.org/packages/f1/90/d5968b987b4d366250dc1b1a35e4dcae234dbb7b7e46dd5e205aeee683d5/aiormq-2.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fda89572f12364554e114a61d1a6e8c", "sha256": "f9da4bb894bef1b7cce97da9b9565ab41f01eae340674981ed87ed3b0229565d"}, "downloads": -1, "filename": "aiormq-2.7.3.tar.gz", "has_sig": false, "md5_digest": "2fda89572f12364554e114a61d1a6e8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20519, "upload_time": "2019-08-22T17:02:10", "upload_time_iso_8601": "2019-08-22T17:02:10.487349Z", "url": "https://files.pythonhosted.org/packages/2e/ae/2feb665e4f97cc0a6f841d08f668a79fe35df20debd60646db0c7a560979/aiormq-2.7.3.tar.gz", "yanked": false}], "2.7.4": [{"comment_text": "", "digests": {"md5": "d1c27ba15756d8ab02bb0cdb75e9c4bb", "sha256": "472734ab3cf18001fb8cedb38ee13008292230a461b6482dbdf65590441ce32c"}, "downloads": -1, "filename": "aiormq-2.7.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d1c27ba15756d8ab02bb0cdb75e9c4bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27089, "upload_time": "2019-08-29T11:39:34", "upload_time_iso_8601": "2019-08-29T11:39:34.887851Z", "url": "https://files.pythonhosted.org/packages/cf/5b/0bce70be5d80bd3a967a15ac81a217b2b078728838fdb6ab054fe4fbcbd3/aiormq-2.7.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6328a55f49c491274aa7e0657aa0bd10", "sha256": "4b6b2b43616b7a6b353ecf9896ae29ac2f74a38c4c53bfe73824ac2807faca5d"}, "downloads": -1, "filename": "aiormq-2.7.4.tar.gz", "has_sig": false, "md5_digest": "6328a55f49c491274aa7e0657aa0bd10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20495, "upload_time": "2019-08-29T11:39:38", "upload_time_iso_8601": "2019-08-29T11:39:38.006144Z", "url": "https://files.pythonhosted.org/packages/5e/4e/c5122642f8ae3ed4b60c9e70a4cf3a6298874eaffda99b1938fdee7a6e0c/aiormq-2.7.4.tar.gz", "yanked": false}], "2.7.5": [{"comment_text": "", "digests": {"md5": "d601336ab1ef6d389759c070f8669001", "sha256": "f8eef1f98bc331a266404d925745fac589dab30412688564d740754d6d643863"}, "downloads": -1, "filename": "aiormq-2.7.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d601336ab1ef6d389759c070f8669001", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27127, "upload_time": "2019-09-05T12:37:08", "upload_time_iso_8601": "2019-09-05T12:37:08.993433Z", "url": "https://files.pythonhosted.org/packages/58/cd/f69672f92ef91ba1af3439e8135da66abfdf9e69f872e8deb26847f63cf8/aiormq-2.7.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de2d4f9e13902e69ccad17c674d4add8", "sha256": "0b755b748d87d5ec63b4b7f162102333bf0901caf1f8a2bf29467bbdd54e637d"}, "downloads": -1, "filename": "aiormq-2.7.5.tar.gz", "has_sig": false, "md5_digest": "de2d4f9e13902e69ccad17c674d4add8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20539, "upload_time": "2019-09-05T12:37:11", "upload_time_iso_8601": "2019-09-05T12:37:11.743689Z", "url": "https://files.pythonhosted.org/packages/80/40/665d28e69e659ec67957dbd50f41857939d81c7edd020a34bde4e366ac2a/aiormq-2.7.5.tar.gz", "yanked": false}], "2.8.0": [{"comment_text": "", "digests": {"md5": "6fd43ac5a24d931879f06c7abf2f9a5f", "sha256": "e220d3f9477bb2959b729b79bec815148ddb8a7686fc6c3d05d41c88ebd7c59e"}, "downloads": -1, "filename": "aiormq-2.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6fd43ac5a24d931879f06c7abf2f9a5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27424, "upload_time": "2019-09-23T17:03:42", "upload_time_iso_8601": "2019-09-23T17:03:42.014202Z", "url": "https://files.pythonhosted.org/packages/fa/8a/caf8ad5ff432950484424a8c6df160e925cb4bbd4d4a2a94ba6ddf8dd482/aiormq-2.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b7ade85825bee7a6009f9217a23ea30", "sha256": "c3e4dd01a2948a75f739fb637334dbb8c6f1a4cecf74d5ed662dc3bab7f39973"}, "downloads": -1, "filename": "aiormq-2.8.0.tar.gz", "has_sig": false, "md5_digest": "1b7ade85825bee7a6009f9217a23ea30", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20818, "upload_time": "2019-09-23T17:03:45", "upload_time_iso_8601": "2019-09-23T17:03:45.478852Z", "url": "https://files.pythonhosted.org/packages/1b/28/57639d0c82f68cf1fdfd1d3a4951ef91b22330f28a813a2021bf9fcd0081/aiormq-2.8.0.tar.gz", "yanked": false}], "2.8.1": [{"comment_text": "", "digests": {"md5": "a48e998fc138c6ca1391b0fc513098dc", "sha256": "87ff8e130f4d4be1876ce6a8b5ee949007cc4df5b53d868b725d8ba277525f4f"}, "downloads": -1, "filename": "aiormq-2.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a48e998fc138c6ca1391b0fc513098dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27465, "upload_time": "2019-10-16T15:50:48", "upload_time_iso_8601": "2019-10-16T15:50:48.154782Z", "url": "https://files.pythonhosted.org/packages/be/4e/5cb32ea52485091da9d93eea065c483714dd6e1c14453bee11da16462eac/aiormq-2.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb3126148aa35b61f20fdca85b4d72de", "sha256": "5d622013212d107a5c0903bb4f8857aafbbbb9049c2edd36ca817358517fc4d8"}, "downloads": -1, "filename": "aiormq-2.8.1.tar.gz", "has_sig": false, "md5_digest": "fb3126148aa35b61f20fdca85b4d72de", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20862, "upload_time": "2019-10-16T15:51:09", "upload_time_iso_8601": "2019-10-16T15:51:09.277216Z", "url": "https://files.pythonhosted.org/packages/f3/c7/cadca2f89ea194c638446c8014148a6783dc721bcdb666b7be2f13d5ef05/aiormq-2.8.1.tar.gz", "yanked": false}], "2.9.0": [{"comment_text": "", "digests": {"md5": "1cc2fe232c7be9ffe0c445c838d5b433", "sha256": "1314854611e63e0a87e3b821b335f5539574a5d36b6aa2696af59d02ca9cf7b4"}, "downloads": -1, "filename": "aiormq-2.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1cc2fe232c7be9ffe0c445c838d5b433", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27473, "upload_time": "2019-10-16T16:18:22", "upload_time_iso_8601": "2019-10-16T16:18:22.203532Z", "url": "https://files.pythonhosted.org/packages/ae/72/e8c5d9b1b4bc310221213b4cb55e93bff919c09e79d0ad6b639e783023d6/aiormq-2.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f903abefa33a13c8a3a14a62860bcfc", "sha256": "9cdebaa6fd3008c442782f83693b29f276d26b5296c755cc9fe0e5b1ebf7aa5b"}, "downloads": -1, "filename": "aiormq-2.9.0.tar.gz", "has_sig": false, "md5_digest": "1f903abefa33a13c8a3a14a62860bcfc", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20864, "upload_time": "2019-10-16T16:18:30", "upload_time_iso_8601": "2019-10-16T16:18:30.245551Z", "url": "https://files.pythonhosted.org/packages/52/b3/70b55583c124668b81cae648944f048c0614bf8dbfa05baf1c7ba1f597e1/aiormq-2.9.0.tar.gz", "yanked": false}], "2.9.1": [{"comment_text": "", "digests": {"md5": "c8e45b9e9df30246f0fad8a2fd0dc958", "sha256": "afc0d46837b121585e4faec0a7646706429b4e2f5110ae8d0b5cdc3708b4b0e5"}, "downloads": -1, "filename": "aiormq-2.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8e45b9e9df30246f0fad8a2fd0dc958", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27471, "upload_time": "2019-10-16T16:21:57", "upload_time_iso_8601": "2019-10-16T16:21:57.430785Z", "url": "https://files.pythonhosted.org/packages/a1/ff/2cebc70ae7a96bda5048ad9ff7b2ab91c801cec9c908bddbec60de989b13/aiormq-2.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7dd09d118c147d66166b66aa21f782c4", "sha256": "dc0fbbc7f8ad5af6a2cc18e00ccc5f925984cde3db6e8fe952c07b7ef157b5f2"}, "downloads": -1, "filename": "aiormq-2.9.1.tar.gz", "has_sig": false, "md5_digest": "7dd09d118c147d66166b66aa21f782c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20866, "upload_time": "2019-10-16T16:22:01", "upload_time_iso_8601": "2019-10-16T16:22:01.002786Z", "url": "https://files.pythonhosted.org/packages/e4/57/1ff8245347e1cf90dbeca71123a271246ea52e50a133e3421439c3d99d80/aiormq-2.9.1.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "4d4d843c639ef1a8ae15fc59e1df5a5d", "sha256": "1d494dfd25d782b48417736acc9b802a5fd0089cd90b199a63df8860ada71689"}, "downloads": -1, "filename": "aiormq-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d4d843c639ef1a8ae15fc59e1df5a5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27676, "upload_time": "2019-10-30T22:46:52", "upload_time_iso_8601": "2019-10-30T22:46:52.154747Z", "url": "https://files.pythonhosted.org/packages/1a/cb/d58bb203bcf53c1420dd55f55f8c19326d80ba9576e2f287ca0562f43eca/aiormq-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac9724cc8efc440a310a97f24a90803f", "sha256": "6198a22165655f294e75cba83467ed2da6c67cb2be2404c5df525a613e2f8e44"}, "downloads": -1, "filename": "aiormq-3.0.1.tar.gz", "has_sig": false, "md5_digest": "ac9724cc8efc440a310a97f24a90803f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20992, "upload_time": "2019-10-30T22:46:54", "upload_time_iso_8601": "2019-10-30T22:46:54.412885Z", "url": "https://files.pythonhosted.org/packages/88/d9/ffeceed040a8579264210477a0555c9313f8bdebf9c773839850efd9f1f6/aiormq-3.0.1.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "45db08063ac8c3b770a2f860534f86c3", "sha256": "a3e5feb56be735e6fab1e485295458183fc209ffa43f2f99734d055b68ea71c4"}, "downloads": -1, "filename": "aiormq-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "45db08063ac8c3b770a2f860534f86c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27700, "upload_time": "2019-11-13T20:47:20", "upload_time_iso_8601": "2019-11-13T20:47:20.370622Z", "url": "https://files.pythonhosted.org/packages/f2/69/245ee8913d2f6338300b7bc2f3b8190039d2910a9ad0b1d9ffb33b92ee2f/aiormq-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28e91f1930af4aa0324a3b0026bdf52b", "sha256": "d7e25ea77d085b64c2b4c0b8372cd73a1410d7509acfcc32719c74659fd423c4"}, "downloads": -1, "filename": "aiormq-3.1.0.tar.gz", "has_sig": false, "md5_digest": "28e91f1930af4aa0324a3b0026bdf52b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20960, "upload_time": "2019-11-13T20:47:23", "upload_time_iso_8601": "2019-11-13T20:47:23.126904Z", "url": "https://files.pythonhosted.org/packages/2a/26/7d1f1d090eb844dc1b1704c3b39fa85a7847761763db66a099942f8dbc9a/aiormq-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "c07ffa2825132f67f31793e347b47073", "sha256": "612c3251ffb736a8ba3603392b961fc1684f47650fcf542da02eab4b0bb3b271"}, "downloads": -1, "filename": "aiormq-3.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c07ffa2825132f67f31793e347b47073", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27677, "upload_time": "2019-11-19T17:32:56", "upload_time_iso_8601": "2019-11-19T17:32:56.272086Z", "url": "https://files.pythonhosted.org/packages/18/ff/0b1229e7aea9177a4c9533e1e4287770bf54c1972a1d0b4a4c78fa88d23a/aiormq-3.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e9d6a1b6e4bb819630b3fd6007d07fd", "sha256": "621e6fb4a28331dfae6ed0038f8de9ae083600f6aa8815f25143fe86ef9461d1"}, "downloads": -1, "filename": "aiormq-3.1.1.tar.gz", "has_sig": false, "md5_digest": "8e9d6a1b6e4bb819630b3fd6007d07fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 20968, "upload_time": "2019-11-19T17:32:58", "upload_time_iso_8601": "2019-11-19T17:32:58.839396Z", "url": "https://files.pythonhosted.org/packages/51/62/e31b124b5be06c95858ec84dacf20a55926e9fcf64fa30876fda04e07a52/aiormq-3.1.1.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "2086147605f239da5b67220b1a1a9ce9", "sha256": "c94b57ed7b383721d183b134617ebcdd26810755980e5ef6f8239d545f380c46"}, "downloads": -1, "filename": "aiormq-3.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2086147605f239da5b67220b1a1a9ce9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27680, "upload_time": "2019-11-19T18:24:48", "upload_time_iso_8601": "2019-11-19T18:24:48.521507Z", "url": "https://files.pythonhosted.org/packages/93/79/5e4cc3576b6885398225d172bf17433b606a3e3177f1e7af18d071fb76de/aiormq-3.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23163e220f5953a32922ccd9ab87998", "sha256": "fbd0a856d01fad22b2c197291429a1fd74938ff592ed6e7648849bbd61424e93"}, "downloads": -1, "filename": "aiormq-3.1.2.tar.gz", "has_sig": false, "md5_digest": "e23163e220f5953a32922ccd9ab87998", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21022, "upload_time": "2019-11-19T18:24:51", "upload_time_iso_8601": "2019-11-19T18:24:51.134084Z", "url": "https://files.pythonhosted.org/packages/c3/85/8da8a32bbbf67fa7bf0f4cf5f1255905e273afbd236b35ec4df8f9f0dce2/aiormq-3.1.2.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "5267fb7ec00378b0968ed13cb615e5b8", "sha256": "9210f3389200aee7d8067f6435f4a9eff2d3a30b88beb5eaae406ccc11c0fc01"}, "downloads": -1, "filename": "aiormq-3.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5267fb7ec00378b0968ed13cb615e5b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27745, "upload_time": "2019-11-20T20:05:11", "upload_time_iso_8601": "2019-11-20T20:05:11.095703Z", "url": "https://files.pythonhosted.org/packages/84/28/de1860901845f79c684a3567822f5148d957e3151d4d8d41dbad25b22977/aiormq-3.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6b2861d808cbc7548400b5612492003", "sha256": "8c215a970133ab5ee7c478decac55b209af7731050f52d11439fe910fa0f9e9d"}, "downloads": -1, "filename": "aiormq-3.2.0.tar.gz", "has_sig": false, "md5_digest": "e6b2861d808cbc7548400b5612492003", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21021, "upload_time": "2019-11-20T20:05:13", "upload_time_iso_8601": "2019-11-20T20:05:13.370965Z", "url": "https://files.pythonhosted.org/packages/89/93/54f60ec35ec76287eb857954764badf676c36e73a9631471f2daa79da38f/aiormq-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "6a8c4e671c6a88706269d8e4c524f575", "sha256": "286e0b0772075580466e45f98f051b9728a9316b9c36f0c14c7bc1409be375b0"}, "downloads": -1, "filename": "aiormq-3.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a8c4e671c6a88706269d8e4c524f575", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27789, "upload_time": "2020-02-17T14:36:47", "upload_time_iso_8601": "2020-02-17T14:36:47.966083Z", "url": "https://files.pythonhosted.org/packages/bc/f8/77a1694064c677afaaae111e28e2b32dd70c5f9dce3836bad0df20f27201/aiormq-3.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92a9ff93b799dae0b4f91c8b50d565db", "sha256": "7ed7d6df6b57af7f8bce7d1ebcbdfc32b676192e46703e81e9e217316e56b5bd"}, "downloads": -1, "filename": "aiormq-3.2.1.tar.gz", "has_sig": false, "md5_digest": "92a9ff93b799dae0b4f91c8b50d565db", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21179, "upload_time": "2020-02-17T14:36:50", "upload_time_iso_8601": "2020-02-17T14:36:50.665230Z", "url": "https://files.pythonhosted.org/packages/6a/f6/caadd5537577a7c6b2f94b2a8563b55d84b1df674334bc5ae971a85488cd/aiormq-3.2.1.tar.gz", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "e05566c003a8104b5f185906cee1363b", "sha256": "41a9d4eb17db805f30ed172f3f609fe0c2b16657fb15b1b67df19d251dd93c0d"}, "downloads": -1, "filename": "aiormq-3.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e05566c003a8104b5f185906cee1363b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27792, "upload_time": "2020-05-06T10:15:39", "upload_time_iso_8601": "2020-05-06T10:15:39.481011Z", "url": "https://files.pythonhosted.org/packages/ed/90/e8089608c2fcf75d6a8ff805611a1e31ed7cc523f5eafe244a2fb3dd75b8/aiormq-3.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "439efe2d4eeec6c9e586255d3bb9a5fd", "sha256": "7c19477a9450824cb79f9949fd238f4148e2c0dca67756a2868863c387209f04"}, "downloads": -1, "filename": "aiormq-3.2.2.tar.gz", "has_sig": false, "md5_digest": "439efe2d4eeec6c9e586255d3bb9a5fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21709, "upload_time": "2020-05-06T10:15:41", "upload_time_iso_8601": "2020-05-06T10:15:41.574989Z", "url": "https://files.pythonhosted.org/packages/79/d5/26d22ef4ecde74cce21d55e3a7ef72ff9fcd84b607a819fbf6e8cc492f13/aiormq-3.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e05566c003a8104b5f185906cee1363b", "sha256": "41a9d4eb17db805f30ed172f3f609fe0c2b16657fb15b1b67df19d251dd93c0d"}, "downloads": -1, "filename": "aiormq-3.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e05566c003a8104b5f185906cee1363b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.*", "size": 27792, "upload_time": "2020-05-06T10:15:39", "upload_time_iso_8601": "2020-05-06T10:15:39.481011Z", "url": "https://files.pythonhosted.org/packages/ed/90/e8089608c2fcf75d6a8ff805611a1e31ed7cc523f5eafe244a2fb3dd75b8/aiormq-3.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "439efe2d4eeec6c9e586255d3bb9a5fd", "sha256": "7c19477a9450824cb79f9949fd238f4148e2c0dca67756a2868863c387209f04"}, "downloads": -1, "filename": "aiormq-3.2.2.tar.gz", "has_sig": false, "md5_digest": "439efe2d4eeec6c9e586255d3bb9a5fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.*", "size": 21709, "upload_time": "2020-05-06T10:15:41", "upload_time_iso_8601": "2020-05-06T10:15:41.574989Z", "url": "https://files.pythonhosted.org/packages/79/d5/26d22ef4ecde74cce21d55e3a7ef72ff9fcd84b607a819fbf6e8cc492f13/aiormq-3.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:50 2020"}