{"info": {"author": "Manan Shah", "author_email": "manan.shah.777@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha"], "description": "Description\r\n===========\r\n\r\nA package that uses linguistic analysis in order to determine the author of a document. Currently version 0.0.1.\r\n\r\nInstallation\r\n------------\r\n\r\n1. Install the package from the PyPi homepage (run `setup.py install`) \r\n2. Import the package in your project (`from authorid import authorid`)\r\n3. You're good to go! You can now run individual functions (i.e. `authorid.run()`) by calling the package name. \r\n\r\nUsage\r\n-----\r\n\r\n`authorid` is a package meant to help analyze linguistic features of files and determine their potential author, provided a list of attributes. \r\nIn order to invoke the primary utility, simply run `authorid.run()` and you will be prompted for a file containing the mystery text. After analysis\r\nis complete, the program will print a signature for that file, and prompt for a directory where `.stats` files are stored. \r\n\r\nIf this is the first time you are running `authorid`, exit out of the main program now, and copy the signature list to another file, ending with the \r\nsignature `.stats`. A sample .stats file may look like the following::\r\n\r\n\r\n    first last\r\n    4.41553119311\r\n    0.0563451817574\r\n    0.02229943808\r\n    16.8869087498\r\n    2.54817097682\r\n\r\n\r\nRemember to order the information correctly in order to ensure optimal results. Complete this step for various files, and when you have a directory containing\r\nyour made `.stats` files (this process will be automated in `0.0.2`), run `authorid.run()` once more, this time with a mystery file and providing the directory with\r\nyour STATS files. The program will compare signatures with those in the list and provide a \"best match\" author.\r\n\r\nOther utility functions are also available, which are listed below (also open sourced on GitHub)::\r\n\r\n    def clean_up(s)\r\n    def average_word_length(text)\r\n    def type_token_ratio(text)\r\n    def hapax_legomana_ratio(text)\r\n    def split_on_separators(original, separators)\r\n    def average_sentence_length(text)\r\n    def avg_sentence_complexity(text)\r\n    def get_valid_filename(prompt)\r\n    def read_directory_name(prompt)\r\n    def compare_signatures(sig1, sig2, weight)\r\n    def read_signature(filename)\r\n    def run()\r\n\r\nNote that `text` is a list of strings.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "linguistics author finding", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "authorid", "package_url": "https://pypi.org/project/authorid/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/authorid/", "project_urls": {"Download": "UNKNOWN"}, "release_url": "https://pypi.org/project/authorid/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A utility to determine the author of a document using linguistic analysis", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A package that uses linguistic analysis in order to determine the author of a document. Currently version 0.0.1.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Install the package from the PyPi homepage (run <cite>setup.py install</cite>)</li>\n<li>Import the package in your project (<cite>from authorid import authorid</cite>)</li>\n<li>You\u2019re good to go! You can now run individual functions (i.e. <cite>authorid.run()</cite>) by calling the package name.</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><cite>authorid</cite> is a package meant to help analyze linguistic features of files and determine their potential author, provided a list of attributes.\nIn order to invoke the primary utility, simply run <cite>authorid.run()</cite> and you will be prompted for a file containing the mystery text. After analysis\nis complete, the program will print a signature for that file, and prompt for a directory where <cite>.stats</cite> files are stored.</p>\n<p>If this is the first time you are running <cite>authorid</cite>, exit out of the main program now, and copy the signature list to another file, ending with the\nsignature <cite>.stats</cite>. A sample .stats file may look like the following:</p>\n<pre>first last\n4.41553119311\n0.0563451817574\n0.02229943808\n16.8869087498\n2.54817097682\n</pre>\n<p>Remember to order the information correctly in order to ensure optimal results. Complete this step for various files, and when you have a directory containing\nyour made <cite>.stats</cite> files (this process will be automated in <cite>0.0.2</cite>), run <cite>authorid.run()</cite> once more, this time with a mystery file and providing the directory with\nyour STATS files. The program will compare signatures with those in the list and provide a \u201cbest match\u201d author.</p>\n<p>Other utility functions are also available, which are listed below (also open sourced on GitHub):</p>\n<pre>def clean_up(s)\ndef average_word_length(text)\ndef type_token_ratio(text)\ndef hapax_legomana_ratio(text)\ndef split_on_separators(original, separators)\ndef average_sentence_length(text)\ndef avg_sentence_complexity(text)\ndef get_valid_filename(prompt)\ndef read_directory_name(prompt)\ndef compare_signatures(sig1, sig2, weight)\ndef read_signature(filename)\ndef run()\n</pre>\n<p>Note that <cite>text</cite> is a list of strings.</p>\n</div>\n\n          </div>"}, "last_serial": 1137933, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "42ca1daee7eeacecfd588434b0ca06a1", "sha256": "4a2bb54e5ebb27d742b0bc6e29ce1324a2ec05eac00d21d8eeba9b2e9df7ecc6"}, "downloads": -1, "filename": "authorid-0.0.1.zip", "has_sig": false, "md5_digest": "42ca1daee7eeacecfd588434b0ca06a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8446, "upload_time": "2014-06-26T06:13:16", "upload_time_iso_8601": "2014-06-26T06:13:16.264656Z", "url": "https://files.pythonhosted.org/packages/e1/78/a136e6a23bee451c124b6470e9c33e1265a7dde1d8c481bc37f03365cbf7/authorid-0.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42ca1daee7eeacecfd588434b0ca06a1", "sha256": "4a2bb54e5ebb27d742b0bc6e29ce1324a2ec05eac00d21d8eeba9b2e9df7ecc6"}, "downloads": -1, "filename": "authorid-0.0.1.zip", "has_sig": false, "md5_digest": "42ca1daee7eeacecfd588434b0ca06a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8446, "upload_time": "2014-06-26T06:13:16", "upload_time_iso_8601": "2014-06-26T06:13:16.264656Z", "url": "https://files.pythonhosted.org/packages/e1/78/a136e6a23bee451c124b6470e9c33e1265a7dde1d8c481bc37f03365cbf7/authorid-0.0.1.zip", "yanked": false}], "timestamp": "Thu May  7 18:16:22 2020"}