{"info": {"author": "Ond\u0159ej T\u016fma", "author_email": "mcbig@zeropage.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "extendparser\n============\n\nExtend parser is set of ``ConfigParser`` extensions. All extensions are added\nto one final class ``ExtendParser``. For more details see source code, or use\nhelp.\n\n\n:copyright: 2018, see AUTHORS for more details\n:license: BSD, see LICENSE for more details\n\nLibrary\n-------\n\nExtendParser\n~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> from extendparser import ExtendParser\n    >>> cp = ExtendParser()\n\nInclude\n~~~~~~~\nInclude class can append content of other configuration to calling. Let's have\nthese configuration files:\n\n.. code:: ini\n\n  # test.ini\n  [main]\n  string = value\n  .include numbers.ini\n\n.. code:: ini\n\n  # numbers.ini\n  integer = 42\n  .include const.ini\n\n.. code:: ini\n\n  # const.ini\n  pi = 3.14\n\n\nHere is the string buffer which ConfiguratinParser will read:\n\n.. code:: ini\n\n  # test.ini\n  [main]\n  string = value\n  # numbers.ini\n  integer = 42\n  # const.ini\n  pi = 3.14\n\nGet\n~~~\nGet class have two smart methods ``get_option`` and ``get_section`` to get\nvalue(s) in any type you want.\n\n.. code:: python\n\n    >>> from extendparser.get import Get\n    >>> cp = Get()\n    >>> print(cp.get_option(\"test\", \"number\", target=int, fallback=1))\n    1\n    >>> print(cp.get_option(\"test\", \"list\", target=list, fallback=[\"a\"],\n    ...                      delimiter=','))\n    ['a']\n    >>> cp.add_section(\"test\")\n    >>> cp.set(\"test\", \"tuple\", \"a:b:c\")\n    >>> print(cp.get_option(\"test\", \"tuple\", target=tuple, delimiter=':'))\n    ('a', 'b', 'c')\n    >>> print(cp.get_section(\"test\", ((\"tuple\", tuple, tuple(), ':'),\n    ...                               (\"string\", str, \"value\"))))\n    {'tuple': ('a', 'b', 'c'), 'string': 'value'}\n\nInstallation\n------------\n\n.. code:: sh\n\n  ~$ pip install extendparser\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ondratu/extendparser", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "extendparser", "package_url": "https://pypi.org/project/extendparser/", "platform": "", "project_url": "https://pypi.org/project/extendparser/", "project_urls": {"Homepage": "https://github.com/ondratu/extendparser"}, "release_url": "https://pypi.org/project/extendparser/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "ExtendParser extend stanrad ConfigParser for some functionality.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Extend parser is set of <tt>ConfigParser</tt> extensions. All extensions are added\nto one final class <tt>ExtendParser</tt>. For more details see source code, or use\nhelp.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>copyright:</th><td>2018, see AUTHORS for more details</td>\n</tr>\n<tr><th>license:</th><td>BSD, see LICENSE for more details</td>\n</tr>\n</tbody>\n</table>\n<div id=\"library\">\n<h2>Library</h2>\n<div id=\"id1\">\n<h3>ExtendParser</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">extendparser</span> <span class=\"kn\">import</span> <span class=\"n\">ExtendParser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cp</span> <span class=\"o\">=</span> <span class=\"n\">ExtendParser</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"include\">\n<h3>Include</h3>\n<p>Include class can append content of other configuration to calling. Let\u2019s have\nthese configuration files:</p>\n<pre><span class=\"c1\"># test.ini</span>\n<span class=\"k\">[main]</span>\n<span class=\"na\">string</span> <span class=\"o\">=</span> <span class=\"s\">value</span>\n<span class=\"na\">.include numbers.ini</span>\n</pre>\n<pre><span class=\"c1\"># numbers.ini</span>\n<span class=\"na\">integer</span> <span class=\"o\">=</span> <span class=\"s\">42</span>\n<span class=\"na\">.include const.ini</span>\n</pre>\n<pre><span class=\"c1\"># const.ini</span>\n<span class=\"na\">pi</span> <span class=\"o\">=</span> <span class=\"s\">3.14</span>\n</pre>\n<p>Here is the string buffer which ConfiguratinParser will read:</p>\n<pre><span class=\"c1\"># test.ini</span>\n<span class=\"k\">[main]</span>\n<span class=\"na\">string</span> <span class=\"o\">=</span> <span class=\"s\">value</span>\n<span class=\"c1\"># numbers.ini</span>\n<span class=\"na\">integer</span> <span class=\"o\">=</span> <span class=\"s\">42</span>\n<span class=\"c1\"># const.ini</span>\n<span class=\"na\">pi</span> <span class=\"o\">=</span> <span class=\"s\">3.14</span>\n</pre>\n</div>\n<div id=\"get\">\n<h3>Get</h3>\n<p>Get class have two smart methods <tt>get_option</tt> and <tt>get_section</tt> to get\nvalue(s) in any type you want.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">extendparser.get</span> <span class=\"kn\">import</span> <span class=\"n\">Get</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cp</span> <span class=\"o\">=</span> <span class=\"n\">Get</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"o\">.</span><span class=\"n\">get_option</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">fallback</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"o\">.</span><span class=\"n\">get_option</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"list\"</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"n\">fallback</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>                      <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s1\">','</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cp</span><span class=\"o\">.</span><span class=\"n\">add_section</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cp</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tuple\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a:b:c\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"o\">.</span><span class=\"n\">get_option</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tuple\"</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s1\">':'</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"o\">.</span><span class=\"n\">get_section</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"p\">((</span><span class=\"s2\">\"tuple\"</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">(),</span> <span class=\"s1\">':'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>                               <span class=\"p\">(</span><span class=\"s2\">\"string\"</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">\"value\"</span><span class=\"p\">))))</span>\n<span class=\"p\">{</span><span class=\"s1\">'tuple'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">),</span> <span class=\"s1\">'string'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>~$ pip install extendparser\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3911580, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "d197b91c0a505197dfe21ab35d8aff0c", "sha256": "1c5b131677425ecc86281622113db40371f66ea8ddf4a3c573606d1755dbc6f9"}, "downloads": -1, "filename": "extendparser-0.2.0-py2-none-any.whl", "has_sig": true, "md5_digest": "d197b91c0a505197dfe21ab35d8aff0c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8367, "upload_time": "2018-05-30T05:46:05", "upload_time_iso_8601": "2018-05-30T05:46:05.394263Z", "url": "https://files.pythonhosted.org/packages/47/dd/1e231d0c15c2f682fe90dce01147edfcb85d4a0ff7afeca31a4b1bdfed47/extendparser-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c1d9f414b86e1b86cf0e4e920c979b3", "sha256": "f03a2bc3a2a0bb27694c9e5ecf409831cff4bef3fe5f94446ed56a1510529245"}, "downloads": -1, "filename": "extendparser-0.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "8c1d9f414b86e1b86cf0e4e920c979b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8366, "upload_time": "2018-05-30T05:46:06", "upload_time_iso_8601": "2018-05-30T05:46:06.965818Z", "url": "https://files.pythonhosted.org/packages/b3/d8/47bd785c9dd8daf97cebaa4434d7e01b5dc59977bd4397c5032da39ec070/extendparser-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7853a924285af9825802bafde7e50c0e", "sha256": "7bd54acea1ecfc88465409b2841e0d6212ada5875f98bef7da43add1293b0263"}, "downloads": -1, "filename": "extendparser-0.2.0.tar.gz", "has_sig": true, "md5_digest": "7853a924285af9825802bafde7e50c0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6932, "upload_time": "2018-05-30T05:46:08", "upload_time_iso_8601": "2018-05-30T05:46:08.260473Z", "url": "https://files.pythonhosted.org/packages/51/0f/3b8f5e1fbe72441df6e849ffe211fe79323098e5938388e198512c35e78a/extendparser-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d197b91c0a505197dfe21ab35d8aff0c", "sha256": "1c5b131677425ecc86281622113db40371f66ea8ddf4a3c573606d1755dbc6f9"}, "downloads": -1, "filename": "extendparser-0.2.0-py2-none-any.whl", "has_sig": true, "md5_digest": "d197b91c0a505197dfe21ab35d8aff0c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8367, "upload_time": "2018-05-30T05:46:05", "upload_time_iso_8601": "2018-05-30T05:46:05.394263Z", "url": "https://files.pythonhosted.org/packages/47/dd/1e231d0c15c2f682fe90dce01147edfcb85d4a0ff7afeca31a4b1bdfed47/extendparser-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c1d9f414b86e1b86cf0e4e920c979b3", "sha256": "f03a2bc3a2a0bb27694c9e5ecf409831cff4bef3fe5f94446ed56a1510529245"}, "downloads": -1, "filename": "extendparser-0.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "8c1d9f414b86e1b86cf0e4e920c979b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8366, "upload_time": "2018-05-30T05:46:06", "upload_time_iso_8601": "2018-05-30T05:46:06.965818Z", "url": "https://files.pythonhosted.org/packages/b3/d8/47bd785c9dd8daf97cebaa4434d7e01b5dc59977bd4397c5032da39ec070/extendparser-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7853a924285af9825802bafde7e50c0e", "sha256": "7bd54acea1ecfc88465409b2841e0d6212ada5875f98bef7da43add1293b0263"}, "downloads": -1, "filename": "extendparser-0.2.0.tar.gz", "has_sig": true, "md5_digest": "7853a924285af9825802bafde7e50c0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6932, "upload_time": "2018-05-30T05:46:08", "upload_time_iso_8601": "2018-05-30T05:46:08.260473Z", "url": "https://files.pythonhosted.org/packages/51/0f/3b8f5e1fbe72441df6e849ffe211fe79323098e5938388e198512c35e78a/extendparser-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:32 2020"}