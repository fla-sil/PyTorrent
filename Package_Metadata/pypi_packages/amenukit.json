{"info": {"author": "Robert Ledger", "author_email": "robert@pytrash.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Gui independent menu system.\r\n-----------------------------\r\n\r\nThis module is in its infancy and as it's goals are very ambitious there is no\r\nguarantee that it will survive.  The following are the goals of the project not\r\na statement of achievement.  At the moment it should be considered 'vapourware'\r\n\r\nThis module will simplify the specification, creation, and\r\ndynamic manipulation of gui menus. Menus systems written with this module will\r\nwork without modification on all supported gui's.\r\n\r\nThe kit supplies wrappers for four common python gui's:\r\n\r\n - tkinter    [tkmenukit.py]\r\n - pygtk      [gtkmenukit.py]\r\n - pyqt       [qtmenukit.py]\r\n - wxPython   [wxmenukit.py]\r\n\r\nMenus are represented by python objects linked together in a tree structure. The\r\npython objects can be inactive, or active.  Active menus are connected to real\r\nmenus in the gui and changes made to the python structure will be reflected in\r\nthe gui.\r\n\r\nMenus (and menu fragments) can be built up using normal python methods for\r\nmanipulating data structures or from lists of python strings or from data\r\nformats such as XML, jason, yaml etc. Python menu structures, however\r\nconstructed, can be converted easily into any of these formats.\r\n\r\nPorting a menu system from one gui to another, simply involves importing a\r\ndifferent wrapper module. Everything else will work exactly the same.", "description_content_type": null, "docs_url": null, "download_url": "http://sourceforge.net/projects/amenukit/files/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://amenukit.sourceforge.net/", "keywords": "menu", "license": "GNU Library or Lesser General Public License (LGPL)", "maintainer": "", "maintainer_email": "", "name": "amenukit", "package_url": "https://pypi.org/project/amenukit/", "platform": "Any in theory but only tested on Ubuntu 9.4.", "project_url": "https://pypi.org/project/amenukit/", "project_urls": {"Download": "http://sourceforge.net/projects/amenukit/files/", "Homepage": "http://amenukit.sourceforge.net/"}, "release_url": "https://pypi.org/project/amenukit/0.1a1/", "requires_dist": null, "requires_python": null, "summary": "Cross gui-menu building utility.", "version": "0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module is in its infancy and as it\u2019s goals are very ambitious there is no\nguarantee that it will survive.  The following are the goals of the project not\na statement of achievement.  At the moment it should be considered \u2018vapourware\u2019</p>\n<p>This module will simplify the specification, creation, and\ndynamic manipulation of gui menus. Menus systems written with this module will\nwork without modification on all supported gui\u2019s.</p>\n<p>The kit supplies wrappers for four common python gui\u2019s:</p>\n<blockquote>\n<ul>\n<li>tkinter    [tkmenukit.py]</li>\n<li>pygtk      [gtkmenukit.py]</li>\n<li>pyqt       [qtmenukit.py]</li>\n<li>wxPython   [wxmenukit.py]</li>\n</ul>\n</blockquote>\n<p>Menus are represented by python objects linked together in a tree structure. The\npython objects can be inactive, or active.  Active menus are connected to real\nmenus in the gui and changes made to the python structure will be reflected in\nthe gui.</p>\n<p>Menus (and menu fragments) can be built up using normal python methods for\nmanipulating data structures or from lists of python strings or from data\nformats such as XML, jason, yaml etc. Python menu structures, however\nconstructed, can be converted easily into any of these formats.</p>\n<p>Porting a menu system from one gui to another, simply involves importing a\ndifferent wrapper module. Everything else will work exactly the same.</p>\n\n          </div>"}, "last_serial": 131154, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "4b2d5ecb31a28f32f549bd82a2e3c7ff", "sha256": "1391e8acf8aba518869f4b0c68a29ab599ef89bd434dff2d1522d0c1e0ac3ebe"}, "downloads": -1, "filename": "amenukit-0.1a1.tar.gz", "has_sig": false, "md5_digest": "4b2d5ecb31a28f32f549bd82a2e3c7ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8158, "upload_time": "2009-10-09T13:01:44", "upload_time_iso_8601": "2009-10-09T13:01:44.111203Z", "url": "https://files.pythonhosted.org/packages/e1/06/b1745d089e73072cea137c4b83f7b21c11cf3e112c4d1d07f70e21065456/amenukit-0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b2d5ecb31a28f32f549bd82a2e3c7ff", "sha256": "1391e8acf8aba518869f4b0c68a29ab599ef89bd434dff2d1522d0c1e0ac3ebe"}, "downloads": -1, "filename": "amenukit-0.1a1.tar.gz", "has_sig": false, "md5_digest": "4b2d5ecb31a28f32f549bd82a2e3c7ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8158, "upload_time": "2009-10-09T13:01:44", "upload_time_iso_8601": "2009-10-09T13:01:44.111203Z", "url": "https://files.pythonhosted.org/packages/e1/06/b1745d089e73072cea137c4b83f7b21c11cf3e112c4d1d07f70e21065456/amenukit-0.1a1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:22 2020"}