{"info": {"author": "Kevin Dious", "author_email": "kdious@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "PurgoMalum Client\n=================\n\nThis is a Python client for the\n`PurgoMalum <https://www.purgomalum.com/index.html>`__ web service.\n\nInstallation\n------------\n\n::\n\n    pip install purgomalum\n\nor\n\n::\n\n    python setup.py install\n\nUsage\n-----\n\nTo use the basic filtering you can call the ``contains_profanity`` or\nthe ``retrieve_filtered_text`` methods from the client:\n\n::\n\n    >>> from purgo_malum import client\n    >>> client.contains_profanity('You are an @a$$hole')\n    True\n\n    >>> client.retrieve_filtered_text('You are an @a$$hole')\n    u'You are an ********'\n\nThe client functions also support adding words to the profanity list,\nsetting your own filter text, and setting your own filter characters:\n\n::\n\n    >>> from purgo_malum import client\n    >>> client.contains_profanity('You are a good friend', add='you')\n    True\n\n    >>> client.retrieve_filtered_text('You are a good friend', add='you,are', fill_text='[filtered]')\n    u'[filtered]  [filtered] a good friend'\n\n    >>> client.retrieve_filtered_text('You are a good friend', add='you,are', fill_char='|')\n    u'||| ||| a good friend'\n\nYou can also get the raw data that the PurgoMalum API returns by calling\nthe ``raw`` version of the APIs:\n\n::\n\n    >>> from purgo_malum import client\n    >>> client.retrieve_filtered_text_raw('You are an @a$$hole', 'json')\n    {u'result': u'You are an ********'}\n    >>> client.retrieve_filtered_text_raw('You are an @a$$hole', 'plain')\n    u'You are an ********'\n    >>> client.retrieve_filtered_text_raw('You are an @a$$hole', 'xml')\n    u'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><PurgoMalum xmlns=\"http://www.purgomalum.com\"><result>You are an ********</result></PurgoMalum>'\n\nThis can be helpful in the event that the API changes and/or you feel\nyou can use the raw data in some manner.\n\nYou can also see the URL that is created for a specific request by using\nthe ``build_url`` method (mainly helpful for testing):\n\n::\n\n    >>> client.build_url('test text', 'json', add='test', fill_text='[filtered]')\n    u'https://www.purgomalum.com/service/json?text=test+text&add=test&fill_text=%5Bfiltered%5D'\n\nTesting\n-------\n\nTests have been for python 2.7 and python 3 using ``pytest``. The unit\ntests do call the actual PurgoMalum production API in order to test\nagainst potential API changes.\n\nBefore running tests make sure to install\n`pytest <https://pypi.org/project/pytest/>`__,\n`pytest-cov <https://pypi.org/project/pytest-cov/>`__,\n`pytest-mock <https://pypi.org/project/pytest-mock/>`__, and\n`mock <https://pypi.org/project/mock/>`__ (already included in\n`requirements.txt <requirements.txt>`__).\n\nTo execute the tests and generate a code coverage report run the\nfollowing:\n\n::\n\n    pytest --cov-report term-missing --cov=purgo_malum/\n\nYou should see:\n\n::\n\n    Name                      Stmts   Miss  Cover   Missing\n    -------------------------------------------------------\n    purgo_malum/__init__.py       0      0   100%\n    purgo_malum/client.py        54      0   100%\n    -------------------------------------------------------\n    TOTAL                        54      0   100%\n\nMiscellaneous\n-------------\n\nThis is my first offering to the open source community. If you see any\nissues with this client library and/or potential improvements please let\nme know and I will make the necessary updates.\n\nDonation\n--------\n\nIf this is helpful to you in any please consider a small donation.\n\n|paypal|\n\n.. |paypal| image:: https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\n   :target: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GFDDW292XZVDJ&source=url", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/kdious/purgomalum-python/tarball/1.0.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kdious/purgomalum-python", "keywords": "profanity,filter,PurgoMalum,purgomalum,purgo_malum,purgo-malum,Purgo Malum", "license": "", "maintainer": "", "maintainer_email": "", "name": "PurgoMalum", "package_url": "https://pypi.org/project/PurgoMalum/", "platform": "", "project_url": "https://pypi.org/project/PurgoMalum/", "project_urls": {"Download": "https://github.com/kdious/purgomalum-python/tarball/1.0.3", "Homepage": "https://github.com/kdious/purgomalum-python"}, "release_url": "https://pypi.org/project/PurgoMalum/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "A python client for the PurgoMalum profanity filter web service", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Python client for the\n<a href=\"https://www.purgomalum.com/index.html\" rel=\"nofollow\">PurgoMalum</a> web service.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install purgomalum\n</pre>\n<p>or</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use the basic filtering you can call the <tt>contains_profanity</tt> or\nthe <tt>retrieve_filtered_text</tt> methods from the client:</p>\n<pre>&gt;&gt;&gt; from purgo_malum import client\n&gt;&gt;&gt; client.contains_profanity('You are an @a$$hole')\nTrue\n\n&gt;&gt;&gt; client.retrieve_filtered_text('You are an @a$$hole')\nu'You are an ********'\n</pre>\n<p>The client functions also support adding words to the profanity list,\nsetting your own filter text, and setting your own filter characters:</p>\n<pre>&gt;&gt;&gt; from purgo_malum import client\n&gt;&gt;&gt; client.contains_profanity('You are a good friend', add='you')\nTrue\n\n&gt;&gt;&gt; client.retrieve_filtered_text('You are a good friend', add='you,are', fill_text='[filtered]')\nu'[filtered]  [filtered] a good friend'\n\n&gt;&gt;&gt; client.retrieve_filtered_text('You are a good friend', add='you,are', fill_char='|')\nu'||| ||| a good friend'\n</pre>\n<p>You can also get the raw data that the PurgoMalum API returns by calling\nthe <tt>raw</tt> version of the APIs:</p>\n<pre>&gt;&gt;&gt; from purgo_malum import client\n&gt;&gt;&gt; client.retrieve_filtered_text_raw('You are an @a$$hole', 'json')\n{u'result': u'You are an ********'}\n&gt;&gt;&gt; client.retrieve_filtered_text_raw('You are an @a$$hole', 'plain')\nu'You are an ********'\n&gt;&gt;&gt; client.retrieve_filtered_text_raw('You are an @a$$hole', 'xml')\nu'&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;&lt;PurgoMalum xmlns=\"http://www.purgomalum.com\"&gt;&lt;result&gt;You are an ********&lt;/result&gt;&lt;/PurgoMalum&gt;'\n</pre>\n<p>This can be helpful in the event that the API changes and/or you feel\nyou can use the raw data in some manner.</p>\n<p>You can also see the URL that is created for a specific request by using\nthe <tt>build_url</tt> method (mainly helpful for testing):</p>\n<pre>&gt;&gt;&gt; client.build_url('test text', 'json', add='test', fill_text='[filtered]')\nu'https://www.purgomalum.com/service/json?text=test+text&amp;add=test&amp;fill_text=%5Bfiltered%5D'\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Tests have been for python 2.7 and python 3 using <tt>pytest</tt>. The unit\ntests do call the actual PurgoMalum production API in order to test\nagainst potential API changes.</p>\n<p>Before running tests make sure to install\n<a href=\"https://pypi.org/project/pytest/\" rel=\"nofollow\">pytest</a>,\n<a href=\"https://pypi.org/project/pytest-cov/\" rel=\"nofollow\">pytest-cov</a>,\n<a href=\"https://pypi.org/project/pytest-mock/\" rel=\"nofollow\">pytest-mock</a>, and\n<a href=\"https://pypi.org/project/mock/\" rel=\"nofollow\">mock</a> (already included in\n<a href=\"requirements.txt\" rel=\"nofollow\">requirements.txt</a>).</p>\n<p>To execute the tests and generate a code coverage report run the\nfollowing:</p>\n<pre>pytest --cov-report term-missing --cov=purgo_malum/\n</pre>\n<p>You should see:</p>\n<pre>Name                      Stmts   Miss  Cover   Missing\n-------------------------------------------------------\npurgo_malum/__init__.py       0      0   100%\npurgo_malum/client.py        54      0   100%\n-------------------------------------------------------\nTOTAL                        54      0   100%\n</pre>\n</div>\n<div id=\"miscellaneous\">\n<h2>Miscellaneous</h2>\n<p>This is my first offering to the open source community. If you see any\nissues with this client library and/or potential improvements please let\nme know and I will make the necessary updates.</p>\n</div>\n<div id=\"donation\">\n<h2>Donation</h2>\n<p>If this is helpful to you in any please consider a small donation.</p>\n<p><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=GFDDW292XZVDJ&amp;source=url\" rel=\"nofollow\"><img alt=\"paypal\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac49730821d272ac3a4d4e7608ed886a10858e1b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966\"></a></p>\n</div>\n\n          </div>"}, "last_serial": 5908121, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "70e35279a9ad7621026fd333d76829af", "sha256": "0addb2d753f2f5af0a1d73578ccbe049a176bc1d96e3c21877dba96df86fbc5d"}, "downloads": -1, "filename": "PurgoMalum-1.0.3.tar.gz", "has_sig": false, "md5_digest": "70e35279a9ad7621026fd333d76829af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5321, "upload_time": "2019-09-30T17:36:01", "upload_time_iso_8601": "2019-09-30T17:36:01.762779Z", "url": "https://files.pythonhosted.org/packages/ba/b6/9feb9f7101509b8aae0ec928bd5de0534ce591a1fd87b2851152a50f03fa/PurgoMalum-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70e35279a9ad7621026fd333d76829af", "sha256": "0addb2d753f2f5af0a1d73578ccbe049a176bc1d96e3c21877dba96df86fbc5d"}, "downloads": -1, "filename": "PurgoMalum-1.0.3.tar.gz", "has_sig": false, "md5_digest": "70e35279a9ad7621026fd333d76829af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5321, "upload_time": "2019-09-30T17:36:01", "upload_time_iso_8601": "2019-09-30T17:36:01.762779Z", "url": "https://files.pythonhosted.org/packages/ba/b6/9feb9f7101509b8aae0ec928bd5de0534ce591a1fd87b2851152a50f03fa/PurgoMalum-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:17 2020"}