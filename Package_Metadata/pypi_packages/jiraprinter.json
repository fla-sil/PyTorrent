{"info": {"author": "Ingo Fruend", "author_email": "ingo.fruend@twentybn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only"], "description": "jira ticket printer\n===================\n\nJira does not provide a nice printable layout for tickets and nicer\nprinting options are costly. This script just wraps the jira-api to\nallow formatting using jinja2 templates. This way, tickets can easily be\nformatted in a printer friendly way.\n\nGetting started\n---------------\n\nThe jiraprinter works on python3 only.\n\nJiraprinter is on pypi, so you can simply run\n\n::\n\n    pip install jiraprinter\n\nTo install it. This will also create the two commands ``jira.py`` and\n``prepare_token`` used below.\n\nYou can run the command line tool by calling\n\n::\n\n    $ jira.py export <Ticket-Id> [<Ticket-Id> ...]\n\nHere, angle brackets (``<>``) denote variable parameters and square\nbrackets (``[]``) denote optional parameters. This is similar to unix\n``man`` pages. You can start the web-interface for selecting tickets and\nprinting them by calling\n\n::\n\n    $ jira.py select\n\nThe web-interface will then be available at ``localhost:8080``.\n\nSetting your credentials\n------------------------\n\nIt is recommended that you put the URL of your jira server as well as\nyour credentials into separate environment variables. Your user\ncredentials need to be passed in base 64 encoding, which can be done\nusing the ``prepare_token.py`` script:\n\n::\n\n    $ prepare_token.py\n    Please enter your jira user name: myname\n    Please enter your jira password:\n    fowkeofoakjdfolai\n\nThat last name is your jira credentials in base 64 encoding. It is\nrecommended that you set your jira credentials and the url of the server\nin your bashrc (if you use bash). To do so, add the following lines to\nyour ``~/.bashrc`` file.\n\n::\n\n    export JIRAURL=https://jira.mycompany/rest/api/2\n    export JIRACREDENTIALS=fowkeofoakjdfolai\n\nObviously, both the URL and the credentials are completely made up.\n\nAuthentication error\n--------------------\n\nError messages are typically rather long and complex. If you see a 401\nstatus code somewhere at the end of the stacktrace, that means that\nyou're not correctly authenticated. In that case, you might want to\ncheck your user name and password.\n\nTravis\n------\n\nTest status on current master: |build status|\n\n.. |build status| image:: https://travis-ci.org/igordertigor/jiraprinter.svg?branch=master\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "jira printing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jiraprinter", "package_url": "https://pypi.org/project/jiraprinter/", "platform": "", "project_url": "https://pypi.org/project/jiraprinter/", "project_urls": null, "release_url": "https://pypi.org/project/jiraprinter/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Simple printing interface for jira", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Jira does not provide a nice printable layout for tickets and nicer\nprinting options are costly. This script just wraps the jira-api to\nallow formatting using jinja2 templates. This way, tickets can easily be\nformatted in a printer friendly way.</p>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>The jiraprinter works on python3 only.</p>\n<p>Jiraprinter is on pypi, so you can simply run</p>\n<pre>pip install jiraprinter\n</pre>\n<p>To install it. This will also create the two commands <tt>jira.py</tt> and\n<tt>prepare_token</tt> used below.</p>\n<p>You can run the command line tool by calling</p>\n<pre>$ jira.py export &lt;Ticket-Id&gt; [&lt;Ticket-Id&gt; ...]\n</pre>\n<p>Here, angle brackets (<tt>&lt;&gt;</tt>) denote variable parameters and square\nbrackets (<tt>[]</tt>) denote optional parameters. This is similar to unix\n<tt>man</tt> pages. You can start the web-interface for selecting tickets and\nprinting them by calling</p>\n<pre>$ jira.py select\n</pre>\n<p>The web-interface will then be available at <tt>localhost:8080</tt>.</p>\n</div>\n<div id=\"setting-your-credentials\">\n<h2>Setting your credentials</h2>\n<p>It is recommended that you put the URL of your jira server as well as\nyour credentials into separate environment variables. Your user\ncredentials need to be passed in base 64 encoding, which can be done\nusing the <tt>prepare_token.py</tt> script:</p>\n<pre>$ prepare_token.py\nPlease enter your jira user name: myname\nPlease enter your jira password:\nfowkeofoakjdfolai\n</pre>\n<p>That last name is your jira credentials in base 64 encoding. It is\nrecommended that you set your jira credentials and the url of the server\nin your bashrc (if you use bash). To do so, add the following lines to\nyour <tt><span class=\"pre\">~/.bashrc</span></tt> file.</p>\n<pre>export JIRAURL=https://jira.mycompany/rest/api/2\nexport JIRACREDENTIALS=fowkeofoakjdfolai\n</pre>\n<p>Obviously, both the URL and the credentials are completely made up.</p>\n</div>\n<div id=\"authentication-error\">\n<h2>Authentication error</h2>\n<p>Error messages are typically rather long and complex. If you see a 401\nstatus code somewhere at the end of the stacktrace, that means that\nyou\u2019re not correctly authenticated. In that case, you might want to\ncheck your user name and password.</p>\n</div>\n<div id=\"travis\">\n<h2>Travis</h2>\n<p>Test status on current master: <img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87285843d5e89d5d055b6f6caa2b9e138f284898/68747470733a2f2f7472617669732d63692e6f72672f69676f726465727469676f722f6a6972617072696e7465722e7376673f6272616e63683d6d6173746572\"></p>\n</div>\n\n          </div>"}, "last_serial": 2504375, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "6538e71447378dde6e46f61321f1e43d", "sha256": "a1bfe43101818b469a7789f1d53856854867c5684742892a8ec589be530c70fc"}, "downloads": -1, "filename": "jiraprinter-0.0.0.tar.gz", "has_sig": false, "md5_digest": "6538e71447378dde6e46f61321f1e43d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4211, "upload_time": "2016-12-06T13:49:33", "upload_time_iso_8601": "2016-12-06T13:49:33.831980Z", "url": "https://files.pythonhosted.org/packages/e1/39/cdf787e2bc57fe9088a88f3eccfa054cec3d99634322ea604095329a775b/jiraprinter-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "5c3b627321335d4c4c6cbd504720d25a", "sha256": "373248e69515a0615500d5292dd582af1c6eea524262e75d0c06bbce202b3192"}, "downloads": -1, "filename": "jiraprinter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5c3b627321335d4c4c6cbd504720d25a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4310, "upload_time": "2016-12-07T09:44:08", "upload_time_iso_8601": "2016-12-07T09:44:08.751490Z", "url": "https://files.pythonhosted.org/packages/66/a9/07660d3c7847d5b1ce60a55b8e2b998303a656804f945c8cfe174e709c14/jiraprinter-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c3b627321335d4c4c6cbd504720d25a", "sha256": "373248e69515a0615500d5292dd582af1c6eea524262e75d0c06bbce202b3192"}, "downloads": -1, "filename": "jiraprinter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5c3b627321335d4c4c6cbd504720d25a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4310, "upload_time": "2016-12-07T09:44:08", "upload_time_iso_8601": "2016-12-07T09:44:08.751490Z", "url": "https://files.pythonhosted.org/packages/66/a9/07660d3c7847d5b1ce60a55b8e2b998303a656804f945c8cfe174e709c14/jiraprinter-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:32 2020"}