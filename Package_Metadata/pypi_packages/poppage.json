{"info": {"author": "Jeff Rimko", "author_email": "jeffrimko@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "|License| |Build Status|\n\nIntroduction\n============\n\nPopPage is a simple command-line utility originally intended as a static\nwebsite generator but has since grown into a\n`cookiecutter <https://github.com/audreyr/cookiecutter>`__ clone. The\nmain features of PopPage are:\n\n-  Uses `Jinja2 templates <http://jinja.pocoo.org/>`__ to generate\n   output.\n\n-  Fairly good support for\n   `cookiecutter <https://github.com/audreyr/cookiecutter>`__ templates.\n\n-  Uses YAML to store default key/values for template variables.\n\n-  Output can be single files or directories.\n\n-  Key/values applied to the templates variables can specified on the\n   command line.\n\nA collection of templates is `available\nhere <https://github.com/jeffrimko/PopPageTemplates>`__.\n\nStatus\n======\n\nCurrently, this project is in the **development release** stage. While\nthis project is suitable for use, please note that there may be\nincompatibilities in new releases.\n\nRelease notes are maintained in the project\n`changelog <https://github.com/jeffrimko/PopPage/blob/master/CHANGELOG.adoc>`__.\n\nRequirements\n============\n\nPopPage runs on Python 2.7/3.x and uses some third-party libraries.\n\nInstallation\n============\n\nPopPage is `available on PyPI\nhere <https://pypi.python.org/pypi/poppage>`__ and can be installed with\npip using the following command: ``pip install poppage``\n\nUsage\n=====\n\nPopPage can be run from the command line using ``poppage``. Type\n``poppage --help`` for usage information. The following subcommands are\navailable:\n\n-  ``check`` - Check the given INPATH template for variables.\n\n-  ``make`` - Generates directories and files based on the given INPATH\n   template.\n\n-  ``run`` - Generates the OUTPATH, executes commands, then deletes\n   OUTPATH.\n\nSome Important Notes\n--------------------\n\nBefore showing any examples, keep these notes in mind:\n\n-  Template file/directory names can contain template variables (e.g.\n   ``{{foo}}.txt``). The provided key/values will be used for the output\n   file generation unless an explicit OUTPATH is provided.\n\n-  The output will be passed to ``stdout`` if INPATH is a file (rather\n   than a directory) and INPATH does not contain a template variable and\n   no OUTPATH is specified.\n\nCLI Key/Values\n--------------\n\nThe following is a quick example of using PopPage from the CLI:\n\n-  Template file (``template.jinja2``):\n\n   ::\n\n       Hello {{name}}!\n\n-  PopPage command:\n\n   ::\n\n       poppage make --inpath template.jinja2 --string name world\n\n-  Output to ``stdout``:\n\n   ::\n\n       Hello world!\n\nYAML Key/Values\n---------------\n\nAdditionally, default key/values can be stored in a YAML file:\n\n-  Template file (``template.jinja2``):\n\n   ::\n\n       Hello {{name}}!\n\n-  Defaults file (``defaults.yaml``):\n\n   ::\n\n       name: sun\n\n-  PopPage command:\n\n   ::\n\n       poppage make --inpath template.jinja2 --defaults defaults.yaml\n\n-  Output to ``stdout``:\n\n   ::\n\n       Hello sun!\n\nCustom YAML Tags\n----------------\n\nThe following custom YAML tags are provided:\n\n-  ``!file`` - Reads value from a file as a string.\n\n-  ``!yaml`` - Reads value from file as YAML.\n\n-  ``!opt`` - Like ``!yaml`` but only for populating the ``__opt__``\n   key.\n\n-  ``!cmd`` - Reads value from a CLI command output.\n\n-  ``!ask`` - Prompts the user to input a value.\n\n-  ``!py`` - Executes Python code.\n\nCheck out this example:\n\n-  Template file (``template.jinja2``):\n\n   ::\n\n       Hello {{first}} {{last}}!\n\n-  Defaults file (``defaults.yaml``):\n\n   ::\n\n       first: !file myfile.txt\n       last: !cmd python -c \"print('Skywalker')\"\n\n-  Content of ``myfile.txt``:\n\n   ::\n\n       Anakin\n\n-  PopPage command:\n\n   ::\n\n       poppage make --inpath template.jinja2 --defaults defaults.yaml\n\n-  Output to ``stdout``:\n\n   ::\n\n       Hello Anakin Skywalker!\n\nSometimes it might be helpful to process variables in a defaults file.\nThe ``!py`` tag can be used in this scenario:\n\n::\n\n    name: !ask &name \"Enter a name\" \n    loud: !py [\"'{0}'.upper()\", *name] \n\n-  The anchor ``&name`` is created.\n\n-  A list must be provided to the ``!py`` tag. The code is the first\n   element and it can contain standard Python string format variables\n   (e.g. ``{0}``) which will be replaced by the following list elements.\n   Note that an anchor reference can be used as an element!\n\nOption Defaults\n---------------\n\nDefault utility options can be provided in the defaults file under the\n``__opt__`` root key.\n\nCheck out these examples:\n\n-  Basic option defaults:\n\n   ::\n\n       __opt__:\n           inpath: template.jinja2\n           outpath: myfile.txt\n\n-  Another options example:\n\n   ::\n\n       __opt__:\n           inpath: template.jinja2\n           outpath: myfile.py\n           execute: python myfile.py\n\n-  For ``make`` commands, multiple ``inpath`` and ``outpath`` pairs can\n   be specified, the lists are zipped to join the pairs:\n\n   ::\n\n       __opt__:\n           command: make\n           inpath:\n             - template1.jinja2\n             - template2.jinja2\n           outpath:\n             - myfile1.py\n             - myfile2.py\n\n-  The execute option can be a template:\n\n   ::\n\n       __opt__:\n           inpath: template.jinja2\n           execute: python {{outpath}}\n\n-  Populate the options using a YAML file:\n\n   ::\n\n       __opt__: !opt myopts.yaml\n\nCookiecutter Compatiblity\n-------------------------\n\nPopPage should be compatible with many\n`cookiecutter <https://github.com/audreyr/cookiecutter>`__ templates.\nUsing https://github.com/solarnz/cookiecutter-avr as an example, check\nfor the variables in the template:\n\n::\n\n    poppage check --inpath https://github.com/solarnz/cookiecutter-avr\n    # Found variables:\n    #   cookiecutter::full_name\n    #   cookiecutter::repo_name\n    #   cookiecutter::year\n\nCreate a file to store your default values, for example\n``defaults.yaml``:\n\n::\n\n    cookiecutter:\n        full_name: Henry Jones\n        repo_name: LastCrusade\n        year: 1989\n\nRun PopPage to generate your files:\n\n::\n\n    poppage make --inpath https://github.com/solarnz/cookiecutter-avr --defaults defaults.yaml --outpath mydest\n    # This will generate the entire repo to a new directory named mydest.\n\n::\n\n    # Or you can do:\n    poppage make --inpath https://github.com/solarnz/cookiecutter-avr/tree/master/%7B%7Bcookiecutter.repo_name%7D%7D --defaults defaults.yaml\n    # This will generate the {{cookiecutter.repo_name}} subdirectory to a new directory based on the given variables, in this case LastCrusade.\n\nDemo Video\n----------\n\nA quick demo video is `available here on\nYouTube <https://youtu.be/955GwxbDx2k>`__. This video demos using a\nsingle set of requirements information to generate native shell scripts\nfor both Windows and Linux. The templates used in this demo are\navailable on GitHub at the following locations:\n\n-  `Linux Bash\n   Script <https://github.com/jeffrimko/PopPageTemplates/tree/master/check_deps_bash>`__\n\n-  `Microsoft Batch\n   Script <https://github.com/jeffrimko/PopPageTemplates/tree/master/check_deps_batch>`__\n\nSimilar\n=======\n\nThe following projects are similar and may be worth checking out:\n\n-  `cookiecutter <https://github.com/audreyr/cookiecutter>`__\n\n.. |License| image:: http://img.shields.io/:license-mit-blue.svg\n.. |Build Status| image:: https://travis-ci.org/jeffrimko/PopPage.svg?branch=master\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeffrimko/PopPage", "keywords": "project-templates file-templates file-generation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "poppage", "package_url": "https://pypi.org/project/poppage/", "platform": "", "project_url": "https://pypi.org/project/poppage/", "project_urls": {"Homepage": "https://github.com/jeffrimko/PopPage"}, "release_url": "https://pypi.org/project/poppage/0.8.1/", "requires_dist": null, "requires_python": "", "summary": "Utility for generating files and directories from templates.", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3bce731641275320d590068fc0fbf71a5c2444a/687474703a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d6d69742d626c75652e737667\"> <img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83f1fb80533478823812264575006399e43c3431/68747470733a2f2f7472617669732d63692e6f72672f6a65666672696d6b6f2f506f70506167652e7376673f6272616e63683d6d6173746572\"></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>PopPage is a simple command-line utility originally intended as a static\nwebsite generator but has since grown into a\n<a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">cookiecutter</a> clone. The\nmain features of PopPage are:</p>\n<ul>\n<li>Uses <a href=\"http://jinja.pocoo.org/\" rel=\"nofollow\">Jinja2 templates</a> to generate\noutput.</li>\n<li>Fairly good support for\n<a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">cookiecutter</a> templates.</li>\n<li>Uses YAML to store default key/values for template variables.</li>\n<li>Output can be single files or directories.</li>\n<li>Key/values applied to the templates variables can specified on the\ncommand line.</li>\n</ul>\n<p>A collection of templates is <a href=\"https://github.com/jeffrimko/PopPageTemplates\" rel=\"nofollow\">available\nhere</a>.</p>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Currently, this project is in the <strong>development release</strong> stage. While\nthis project is suitable for use, please note that there may be\nincompatibilities in new releases.</p>\n<p>Release notes are maintained in the project\n<a href=\"https://github.com/jeffrimko/PopPage/blob/master/CHANGELOG.adoc\" rel=\"nofollow\">changelog</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>PopPage runs on Python 2.7/3.x and uses some third-party libraries.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>PopPage is <a href=\"https://pypi.python.org/pypi/poppage\" rel=\"nofollow\">available on PyPI\nhere</a> and can be installed with\npip using the following command: <tt>pip install poppage</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>PopPage can be run from the command line using <tt>poppage</tt>. Type\n<tt>poppage <span class=\"pre\">--help</span></tt> for usage information. The following subcommands are\navailable:</p>\n<ul>\n<li><tt>check</tt> - Check the given INPATH template for variables.</li>\n<li><tt>make</tt> - Generates directories and files based on the given INPATH\ntemplate.</li>\n<li><tt>run</tt> - Generates the OUTPATH, executes commands, then deletes\nOUTPATH.</li>\n</ul>\n<div id=\"some-important-notes\">\n<h3>Some Important Notes</h3>\n<p>Before showing any examples, keep these notes in mind:</p>\n<ul>\n<li>Template file/directory names can contain template variables (e.g.\n<tt><span class=\"pre\">{{foo}}.txt</span></tt>). The provided key/values will be used for the output\nfile generation unless an explicit OUTPATH is provided.</li>\n<li>The output will be passed to <tt>stdout</tt> if INPATH is a file (rather\nthan a directory) and INPATH does not contain a template variable and\nno OUTPATH is specified.</li>\n</ul>\n</div>\n<div id=\"cli-key-values\">\n<h3>CLI Key/Values</h3>\n<p>The following is a quick example of using PopPage from the CLI:</p>\n<ul>\n<li><p>Template file (<tt>template.jinja2</tt>):</p>\n<pre>Hello {{name}}!\n</pre>\n</li>\n<li><p>PopPage command:</p>\n<pre>poppage make --inpath template.jinja2 --string name world\n</pre>\n</li>\n<li><p>Output to <tt>stdout</tt>:</p>\n<pre>Hello world!\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"yaml-key-values\">\n<h3>YAML Key/Values</h3>\n<p>Additionally, default key/values can be stored in a YAML file:</p>\n<ul>\n<li><p>Template file (<tt>template.jinja2</tt>):</p>\n<pre>Hello {{name}}!\n</pre>\n</li>\n<li><p>Defaults file (<tt>defaults.yaml</tt>):</p>\n<pre>name: sun\n</pre>\n</li>\n<li><p>PopPage command:</p>\n<pre>poppage make --inpath template.jinja2 --defaults defaults.yaml\n</pre>\n</li>\n<li><p>Output to <tt>stdout</tt>:</p>\n<pre>Hello sun!\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"custom-yaml-tags\">\n<h3>Custom YAML Tags</h3>\n<p>The following custom YAML tags are provided:</p>\n<ul>\n<li><tt>!file</tt> - Reads value from a file as a string.</li>\n<li><tt>!yaml</tt> - Reads value from file as YAML.</li>\n<li><tt>!opt</tt> - Like <tt>!yaml</tt> but only for populating the <tt>__opt__</tt>\nkey.</li>\n<li><tt>!cmd</tt> - Reads value from a CLI command output.</li>\n<li><tt>!ask</tt> - Prompts the user to input a value.</li>\n<li><tt>!py</tt> - Executes Python code.</li>\n</ul>\n<p>Check out this example:</p>\n<ul>\n<li><p>Template file (<tt>template.jinja2</tt>):</p>\n<pre>Hello {{first}} {{last}}!\n</pre>\n</li>\n<li><p>Defaults file (<tt>defaults.yaml</tt>):</p>\n<pre>first: !file myfile.txt\nlast: !cmd python -c \"print('Skywalker')\"\n</pre>\n</li>\n<li><p>Content of <tt>myfile.txt</tt>:</p>\n<pre>Anakin\n</pre>\n</li>\n<li><p>PopPage command:</p>\n<pre>poppage make --inpath template.jinja2 --defaults defaults.yaml\n</pre>\n</li>\n<li><p>Output to <tt>stdout</tt>:</p>\n<pre>Hello Anakin Skywalker!\n</pre>\n</li>\n</ul>\n<p>Sometimes it might be helpful to process variables in a defaults file.\nThe <tt>!py</tt> tag can be used in this scenario:</p>\n<pre>name: !ask &amp;name \"Enter a name\"\nloud: !py [\"'{0}'.upper()\", *name]\n</pre>\n<ul>\n<li>The anchor <tt>&amp;name</tt> is created.</li>\n<li>A list must be provided to the <tt>!py</tt> tag. The code is the first\nelement and it can contain standard Python string format variables\n(e.g. <tt>{0}</tt>) which will be replaced by the following list elements.\nNote that an anchor reference can be used as an element!</li>\n</ul>\n</div>\n<div id=\"option-defaults\">\n<h3>Option Defaults</h3>\n<p>Default utility options can be provided in the defaults file under the\n<tt>__opt__</tt> root key.</p>\n<p>Check out these examples:</p>\n<ul>\n<li><p>Basic option defaults:</p>\n<pre>__opt__:\n    inpath: template.jinja2\n    outpath: myfile.txt\n</pre>\n</li>\n<li><p>Another options example:</p>\n<pre>__opt__:\n    inpath: template.jinja2\n    outpath: myfile.py\n    execute: python myfile.py\n</pre>\n</li>\n<li><p>For <tt>make</tt> commands, multiple <tt>inpath</tt> and <tt>outpath</tt> pairs can\nbe specified, the lists are zipped to join the pairs:</p>\n<pre>__opt__:\n    command: make\n    inpath:\n      - template1.jinja2\n      - template2.jinja2\n    outpath:\n      - myfile1.py\n      - myfile2.py\n</pre>\n</li>\n<li><p>The execute option can be a template:</p>\n<pre>__opt__:\n    inpath: template.jinja2\n    execute: python {{outpath}}\n</pre>\n</li>\n<li><p>Populate the options using a YAML file:</p>\n<pre>__opt__: !opt myopts.yaml\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"cookiecutter-compatiblity\">\n<h3>Cookiecutter Compatiblity</h3>\n<p>PopPage should be compatible with many\n<a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">cookiecutter</a> templates.\nUsing <a href=\"https://github.com/solarnz/cookiecutter-avr\" rel=\"nofollow\">https://github.com/solarnz/cookiecutter-avr</a> as an example, check\nfor the variables in the template:</p>\n<pre>poppage check --inpath https://github.com/solarnz/cookiecutter-avr\n# Found variables:\n#   cookiecutter::full_name\n#   cookiecutter::repo_name\n#   cookiecutter::year\n</pre>\n<p>Create a file to store your default values, for example\n<tt>defaults.yaml</tt>:</p>\n<pre>cookiecutter:\n    full_name: Henry Jones\n    repo_name: LastCrusade\n    year: 1989\n</pre>\n<p>Run PopPage to generate your files:</p>\n<pre>poppage make --inpath https://github.com/solarnz/cookiecutter-avr --defaults defaults.yaml --outpath mydest\n# This will generate the entire repo to a new directory named mydest.\n</pre>\n<pre># Or you can do:\npoppage make --inpath https://github.com/solarnz/cookiecutter-avr/tree/master/%7B%7Bcookiecutter.repo_name%7D%7D --defaults defaults.yaml\n# This will generate the {{cookiecutter.repo_name}} subdirectory to a new directory based on the given variables, in this case LastCrusade.\n</pre>\n</div>\n<div id=\"demo-video\">\n<h3>Demo Video</h3>\n<p>A quick demo video is <a href=\"https://youtu.be/955GwxbDx2k\" rel=\"nofollow\">available here on\nYouTube</a>. This video demos using a\nsingle set of requirements information to generate native shell scripts\nfor both Windows and Linux. The templates used in this demo are\navailable on GitHub at the following locations:</p>\n<ul>\n<li><a href=\"https://github.com/jeffrimko/PopPageTemplates/tree/master/check_deps_bash\" rel=\"nofollow\">Linux Bash\nScript</a></li>\n<li><a href=\"https://github.com/jeffrimko/PopPageTemplates/tree/master/check_deps_batch\" rel=\"nofollow\">Microsoft Batch\nScript</a></li>\n</ul>\n</div>\n</div>\n<div id=\"similar\">\n<h2>Similar</h2>\n<p>The following projects are similar and may be worth checking out:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">cookiecutter</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5718276, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "a3dd08a564a90fbfa31fe6a8145fa842", "sha256": "70410f0d6545597d3a010cc7070dbd3dd12ad40ddd87e672d96368bbf0035df3"}, "downloads": -1, "filename": "poppage-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a3dd08a564a90fbfa31fe6a8145fa842", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4030, "upload_time": "2017-07-27T02:02:54", "upload_time_iso_8601": "2017-07-27T02:02:54.120712Z", "url": "https://files.pythonhosted.org/packages/92/b8/6cd45319c44cd4f8a0442e8561cbfd6e123bdd784b8eb10a1225798a9770/poppage-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8127ffd59b54c69aca0ae35097f6776f", "sha256": "bbef416a4a828541eb025c6180be346bd5b8722c25ee37c51498c5c6a8be076c"}, "downloads": -1, "filename": "poppage-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8127ffd59b54c69aca0ae35097f6776f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4049, "upload_time": "2017-07-27T02:36:57", "upload_time_iso_8601": "2017-07-27T02:36:57.209209Z", "url": "https://files.pythonhosted.org/packages/90/de/808104881ffffd3d085f8687f59e2c9428c39e6b49b2f9690c16c1658dc9/poppage-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "4d119bba578861c5cb08382ab9a5fefb", "sha256": "96cc4914925ef61d9372c23d427876126766b963769670e7a75de7aa1508032d"}, "downloads": -1, "filename": "poppage-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4d119bba578861c5cb08382ab9a5fefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4049, "upload_time": "2017-07-27T03:08:44", "upload_time_iso_8601": "2017-07-27T03:08:44.392461Z", "url": "https://files.pythonhosted.org/packages/63/3d/fcfea6fbf91736e05387f7f84d15506d92d15bfa64878f374c49de541f19/poppage-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d0c3326049a2592013c1447f9c0dd0c5", "sha256": "3dc733383e93f1ca5d001c9f181c9432ac59d90bfd6b085177e9e4ac180c1be9"}, "downloads": -1, "filename": "poppage-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d0c3326049a2592013c1447f9c0dd0c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5401, "upload_time": "2017-07-29T16:07:49", "upload_time_iso_8601": "2017-07-29T16:07:49.614156Z", "url": "https://files.pythonhosted.org/packages/cb/49/adf501b501e9f4ec0c061231317bc00cbd1b7bcb09b846164566c60f7995/poppage-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a360722b8127d5e27996ae135564081a", "sha256": "1ba7a51aa7bdcee5faed515b2f148551df65f753830a30f4b78a16375a0e9006"}, "downloads": -1, "filename": "poppage-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a360722b8127d5e27996ae135564081a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5520, "upload_time": "2017-07-30T14:23:00", "upload_time_iso_8601": "2017-07-30T14:23:00.592064Z", "url": "https://files.pythonhosted.org/packages/52/c0/332c4953a8da539c9470cb860ae69f5bb25a109a7eefd891ea49a88aab39/poppage-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "b491ec1c63213840ddb3b35c906df8ee", "sha256": "2a23b3952c26a3917773d1c78fe5f5fec4001d2452387c723d10d95dd7c1035a"}, "downloads": -1, "filename": "poppage-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b491ec1c63213840ddb3b35c906df8ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6422, "upload_time": "2017-08-03T03:11:39", "upload_time_iso_8601": "2017-08-03T03:11:39.496466Z", "url": "https://files.pythonhosted.org/packages/bd/f2/52bfd4cf122c9ba7d27641d439236c74b59c74cde2b52a9adc6f1b5dc15c/poppage-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "1a7994528bc65b3943936953e108fc88", "sha256": "0a84fded1133bb65f2b4c6ceec8ab368356d0b0b0734931ac98d419f7ff476c1"}, "downloads": -1, "filename": "poppage-0.3.3.tar.gz", "has_sig": false, "md5_digest": "1a7994528bc65b3943936953e108fc88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6795, "upload_time": "2017-09-03T16:50:16", "upload_time_iso_8601": "2017-09-03T16:50:16.514253Z", "url": "https://files.pythonhosted.org/packages/1d/0f/cf4ff9bf9734ef546638b8b1c69de6e0f02f3b80e2bcfe30bdfea006d6b0/poppage-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "25fd83cf8500c5f0ff4bb307c79f87f8", "sha256": "63f001c094bccba5eb738e3964020e77c049d8c3ab40c50ebad15f159dbe96ba"}, "downloads": -1, "filename": "poppage-0.4.0.tar.gz", "has_sig": false, "md5_digest": "25fd83cf8500c5f0ff4bb307c79f87f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7723, "upload_time": "2017-10-20T03:17:23", "upload_time_iso_8601": "2017-10-20T03:17:23.757937Z", "url": "https://files.pythonhosted.org/packages/85/c4/7c4d84b167cb9791da92c4b211f5af0c9ccab0a136dd9527647e7329e107/poppage-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "10712e409aa26895c1adc9048355895b", "sha256": "6b607578385603a17de6549aebf5230f9fd0aa8cee853aacc949208c88648b53"}, "downloads": -1, "filename": "poppage-0.5.0.tar.gz", "has_sig": false, "md5_digest": "10712e409aa26895c1adc9048355895b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8546, "upload_time": "2017-10-23T00:43:14", "upload_time_iso_8601": "2017-10-23T00:43:14.451144Z", "url": "https://files.pythonhosted.org/packages/38/3b/31ad896e1e3f35e6e0b76b4a2c7925e461310408af9bcbbff3e38f3cb47c/poppage-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "557c587de07dd795c0357c60018f7164", "sha256": "cdfa08745c08b8db5c16cec0ca75c15b937bd95672b6c8abdcc3ef488613b826"}, "downloads": -1, "filename": "poppage-0.5.1.tar.gz", "has_sig": false, "md5_digest": "557c587de07dd795c0357c60018f7164", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8803, "upload_time": "2017-10-24T01:57:23", "upload_time_iso_8601": "2017-10-24T01:57:23.266239Z", "url": "https://files.pythonhosted.org/packages/94/ad/aa8ed3f4e113c4321efbb80749fab0fd50aec56309a4c23c6c4295b0074e/poppage-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "016cc6be1afc3f1f0ad40a430008aa09", "sha256": "d375776ef8b9089b635323c7b95580be5440ac0843eddc37ec98c0462adbda1d"}, "downloads": -1, "filename": "poppage-0.5.2.tar.gz", "has_sig": false, "md5_digest": "016cc6be1afc3f1f0ad40a430008aa09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8808, "upload_time": "2017-10-24T02:18:24", "upload_time_iso_8601": "2017-10-24T02:18:24.043041Z", "url": "https://files.pythonhosted.org/packages/88/6a/4c0f169f0a79bc4fefe145e87e896f40851db179233c72f7edca5b98f7df/poppage-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "b9bb3a6819276e667776912e1cf0258f", "sha256": "1dae7ac1d465161fd065a101ea174e7d94a21fd67d8e6205bc5e0d463040b8d8"}, "downloads": -1, "filename": "poppage-0.5.3.tar.gz", "has_sig": false, "md5_digest": "b9bb3a6819276e667776912e1cf0258f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9028, "upload_time": "2017-10-24T03:28:03", "upload_time_iso_8601": "2017-10-24T03:28:03.031847Z", "url": "https://files.pythonhosted.org/packages/3a/06/6381936506cfffb7b53af56ee5c6f1f74a0dcee025bddd17f0b703fd6904/poppage-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "4a15f5b8cdf3017e66db3bd4caa3eb65", "sha256": "92b7584f65dab1046339045828dd5bc9b722b9ac53b5b966313ce4641170dfab"}, "downloads": -1, "filename": "poppage-0.6.0.tar.gz", "has_sig": false, "md5_digest": "4a15f5b8cdf3017e66db3bd4caa3eb65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9027, "upload_time": "2017-10-24T04:43:10", "upload_time_iso_8601": "2017-10-24T04:43:10.710126Z", "url": "https://files.pythonhosted.org/packages/f8/f5/05f95856e9cc21294474a6b1862eed60ac361627c8b9384a80e109a15af2/poppage-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "c404e5e822c0c4da60285ec359604e46", "sha256": "5b61b7f6081aca50168b7e072e28e3165754f853afc76c88bd9e9017f1c195c0"}, "downloads": -1, "filename": "poppage-0.6.1.tar.gz", "has_sig": false, "md5_digest": "c404e5e822c0c4da60285ec359604e46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8049, "upload_time": "2017-10-28T19:32:29", "upload_time_iso_8601": "2017-10-28T19:32:29.038128Z", "url": "https://files.pythonhosted.org/packages/0e/d2/74aa8dc8ef493cc4565e7f9e97c11170f9d142949a5ab824a7a840adeb89/poppage-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "efb032d048043d4a0c367353486aa26b", "sha256": "0d9e239126bd031091fee0e53cbc5bfa74967a085a0bc612ab89ffe395f7cd34"}, "downloads": -1, "filename": "poppage-0.6.2.tar.gz", "has_sig": false, "md5_digest": "efb032d048043d4a0c367353486aa26b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9235, "upload_time": "2017-10-31T01:56:49", "upload_time_iso_8601": "2017-10-31T01:56:49.256460Z", "url": "https://files.pythonhosted.org/packages/19/ff/c7d1dd019075bce1bcf39254149d220a1968df8fae21a29abdc5dc7983a4/poppage-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "02815427dda8dcd2baf53218384bc47b", "sha256": "d53237785f1a0ef8a0a08cef33801f70d174852d6dc6ddc34111749cd74beb73"}, "downloads": -1, "filename": "poppage-0.6.3.tar.gz", "has_sig": false, "md5_digest": "02815427dda8dcd2baf53218384bc47b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9241, "upload_time": "2017-11-02T03:17:59", "upload_time_iso_8601": "2017-11-02T03:17:59.128319Z", "url": "https://files.pythonhosted.org/packages/71/b3/4541b4cefa43b760425a319713f1280ccfb4e64bc326e4275e87b893db47/poppage-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "28141c8691693cecafe10c6b46fcf315", "sha256": "2a2f4b09406d446483be3e76fd8811f4c24cbfde4466ec7cd823dcea83d5b472"}, "downloads": -1, "filename": "poppage-0.6.4.tar.gz", "has_sig": false, "md5_digest": "28141c8691693cecafe10c6b46fcf315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9376, "upload_time": "2017-11-04T21:40:38", "upload_time_iso_8601": "2017-11-04T21:40:38.617351Z", "url": "https://files.pythonhosted.org/packages/75/46/356fe3b7f8ed247f14e6e4d2333e8c9228d89e52958ceee2ffb0c6f503a5/poppage-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "9a1bcca4bf26ad9b30228db61603cc71", "sha256": "92c6d41d2b2f0b787e4d53d3e3293c89dfc05e226fc19bd3a4d2d86b4869da10"}, "downloads": -1, "filename": "poppage-0.6.5.tar.gz", "has_sig": false, "md5_digest": "9a1bcca4bf26ad9b30228db61603cc71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9452, "upload_time": "2017-11-06T00:40:34", "upload_time_iso_8601": "2017-11-06T00:40:34.316801Z", "url": "https://files.pythonhosted.org/packages/42/28/deba114da3111675937cf2e690d4d66145ac2f45ac8cd95180f468a09244/poppage-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "4e4fcaa4e78a716fe64fc898d22a0434", "sha256": "ed72b08d60925f4fc1735f4a7f6407a2f060c078a422faae4160e31aa59567bb"}, "downloads": -1, "filename": "poppage-0.6.6.tar.gz", "has_sig": false, "md5_digest": "4e4fcaa4e78a716fe64fc898d22a0434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9524, "upload_time": "2017-12-07T05:02:32", "upload_time_iso_8601": "2017-12-07T05:02:32.117943Z", "url": "https://files.pythonhosted.org/packages/67/55/c6f586a65603a2d5814907ce1533d54086aed34cba856eb2131b4dfc6b68/poppage-0.6.6.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "609568e5b01b2ac58cd382596e252150", "sha256": "6a7d35e321f2a76b263428702da53c14c2b7d05559f76a4e91e1052c981ab602"}, "downloads": -1, "filename": "poppage-0.6.7.tar.gz", "has_sig": false, "md5_digest": "609568e5b01b2ac58cd382596e252150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10094, "upload_time": "2017-12-15T00:02:40", "upload_time_iso_8601": "2017-12-15T00:02:40.697922Z", "url": "https://files.pythonhosted.org/packages/bb/5d/709baa069595f2dd95c583d0933eec7692a9f1847b7f0ca632718bfbe5e5/poppage-0.6.7.tar.gz", "yanked": false}], "0.6.8": [{"comment_text": "", "digests": {"md5": "ec1f56a82d881589d6a929d69947e8ec", "sha256": "29383af40cfa09d0e731f1f776aa83113e97c76e366bea80864c639779bb81b4"}, "downloads": -1, "filename": "poppage-0.6.8.tar.gz", "has_sig": false, "md5_digest": "ec1f56a82d881589d6a929d69947e8ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10011, "upload_time": "2017-12-17T17:38:50", "upload_time_iso_8601": "2017-12-17T17:38:50.085226Z", "url": "https://files.pythonhosted.org/packages/46/af/a57a2af57fdda336a53adfde7dce966598ef459aa5294b168fcc6fd17f9a/poppage-0.6.8.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "3cba0c4435ddef97a243fc705e15d8e1", "sha256": "dff6ab68f28ce2a10a38d0617ff71a1cbcfc26dfd3a5d5a8b926ee42d5858696"}, "downloads": -1, "filename": "poppage-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3cba0c4435ddef97a243fc705e15d8e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10270, "upload_time": "2018-02-23T01:34:19", "upload_time_iso_8601": "2018-02-23T01:34:19.666647Z", "url": "https://files.pythonhosted.org/packages/c1/4e/70d666f99dfaca811a12294b4b0a190b8dd62a41afb71c6da4d8ae978485/poppage-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "f6304ca604df3b9af3576aaf51075051", "sha256": "1017a9ccfeac515d3bf0732daa3db5c653a3c75507f40d2ef907813d24310e01"}, "downloads": -1, "filename": "poppage-0.7.1.tar.gz", "has_sig": false, "md5_digest": "f6304ca604df3b9af3576aaf51075051", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10602, "upload_time": "2018-08-14T01:25:36", "upload_time_iso_8601": "2018-08-14T01:25:36.631697Z", "url": "https://files.pythonhosted.org/packages/a9/e6/c6092615e97f1e0b46e4005ef1ccc4a120fa43c460d2455e5267d9d65f68/poppage-0.7.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "3e726cb0423147c439d93e3d64294480", "sha256": "f3d37c148b0e684e31097f6c5736eb058c276b5c2e3336da4d14dfdd973d781b"}, "downloads": -1, "filename": "poppage-0.8.0.tar.gz", "has_sig": false, "md5_digest": "3e726cb0423147c439d93e3d64294480", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11444, "upload_time": "2018-12-29T19:37:08", "upload_time_iso_8601": "2018-12-29T19:37:08.464682Z", "url": "https://files.pythonhosted.org/packages/6d/ec/0aecd98ac7d5dfae71ebc30409b7b6d6d1ffe34f66ceb09af7469e1a63e1/poppage-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "2496728c803023887ccd2d1ba04bc5de", "sha256": "608e5fd96432df940885326094c866a2a11b1afab8f16f02d88cb369154ede32"}, "downloads": -1, "filename": "poppage-0.8.1.tar.gz", "has_sig": false, "md5_digest": "2496728c803023887ccd2d1ba04bc5de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11195, "upload_time": "2019-08-23T02:02:30", "upload_time_iso_8601": "2019-08-23T02:02:30.300803Z", "url": "https://files.pythonhosted.org/packages/9c/04/c17a7d298de7b6d8514f80df67ea94d41c6f54b7f8860d7a276504caea10/poppage-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2496728c803023887ccd2d1ba04bc5de", "sha256": "608e5fd96432df940885326094c866a2a11b1afab8f16f02d88cb369154ede32"}, "downloads": -1, "filename": "poppage-0.8.1.tar.gz", "has_sig": false, "md5_digest": "2496728c803023887ccd2d1ba04bc5de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11195, "upload_time": "2019-08-23T02:02:30", "upload_time_iso_8601": "2019-08-23T02:02:30.300803Z", "url": "https://files.pythonhosted.org/packages/9c/04/c17a7d298de7b6d8514f80df67ea94d41c6f54b7f8860d7a276504caea10/poppage-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:33 2020"}