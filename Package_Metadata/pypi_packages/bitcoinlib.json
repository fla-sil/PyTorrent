{"info": {"author": "1200wd", "author_email": "info@1200wd.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Security :: Cryptography", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Python Bitcoin Library\n======================\n\nBitcoin, Litecoin and Dash Crypto Currency Library for Python.\n\nIncludes a fully functional wallet, with multi signature, multi currency and multiple accounts.\nYou this library at a high level and create and manage wallets for the command line or at a low level\nand create your own custom made transactions, keys or wallets.\n\nThe BitcoinLib connects to various service providers automatically to update wallets, transactions and\nblockchain information. It does currently not parse the blockchain itself.\n\n\n.. image:: https://travis-ci.org/1200wd/bitcoinlib.svg?branch=master\n    :target: https://travis-ci.org/1200wd/bitcoinlib\n    :alt: Travis\n.. image:: https://img.shields.io/pypi/v/bitcoinlib.svg\n    :target: https://pypi.org/pypi/bitcoinlib/\n    :alt: PyPi\n.. image:: https://readthedocs.org/projects/bitcoinlib/badge/?version=latest\n    :target: http://bitcoinlib.readthedocs.io/en/latest/?badge=latest\n    :alt: RTD\n.. image:: https://coveralls.io/repos/github/1200wd/bitcoinlib/badge.svg?branch=installation-documentation-update\n    :target: https://coveralls.io/github/1200wd/bitcoinlib?branch=master\n    :alt: Coveralls\n\n\nDocumentation\n-------------\n\nRead the full documentation at: http://bitcoinlib.readthedocs.io/\n\n\nDisclaimer\n----------\n\nThis library is still in development, please use at your own risk and test sufficiently before using it in a\nproduction environment.\n\n\nSome Examples\n=============\n\nWallet\n------\n\nThe bitcoin library contains a wallet implementation using SQLAlchemy and SQLite3 to import, create and manage\nkeys in a Hierarchical Deterministic way.\n\nExample: Create wallet and generate new address (key) to receive bitcoins\n\n.. code-block:: pycon\n\n   >>> from bitcoinlib.wallets import HDWallet\n   >>> w = HDWallet.create('Wallet1')\n   >>> key1 = w.get_key()\n   >>> key1.address\n   '1Fo7STj6LdRhUuD1AiEsHpH65pXzraGJ9j'\n\nNow send a small transaction to your wallet and use the scan() method to update transactions and UTXO's\n\n.. code-block:: pycon\n\n    >>> w.scan()\n    >>> w.info()  # Shows wallet information, keys, transactions and UTXO's\n\nWhen your wallet received a payment and has unspent transaction outputs, you can send bitcoins easily.\nIf successful a transaction ID is returned\n\n.. code-block:: pycon\n\n    >>> t = w.send_to('12ooWd8Xag7hsgP9PBPnmyGe36VeUrpMSH', 100000)\n    'b7feea5e7c79d4f6f343b5ca28fa2a1fcacfe9a2b7f44f3d2fd8d6c2d82c4078'\n    >>> t.info  # Shows transaction information and send results\n\n\nWallet from passphrase with accounts and multiple currencies\n------------------------------------------------------------\n\nThe following code creates a wallet with two bitcoin and one litecoin account from a Mnemonic passphrase.\nThe complete wallet can be recovered from the passphrase which is the masterkey.\n\n.. code-block:: python\n\n    from bitcoinlib.wallets import HDWallet, wallet_delete\n    from bitcoinlib.mnemonic import Mnemonic\n\n    passphrase = Mnemonic().generate()\n    print(passphrase)\n    w = HDWallet.create(\"Wallet2\", keys=passphrase, network='bitcoin')\n    account_btc2 = w.new_account('Account BTC 2')\n    account_ltc1 = w.new_account('Account LTC', network='litecoin')\n    w.get_key()\n    w.get_key(account_btc2.account_id)\n    w.get_key(account_ltc1.account_id)\n    w.info()\n\n\nMulti Signature Wallets\n-----------------------\n\nCreate a Multisig wallet with 2 cosigner which both need to sign a transaction.\n\n.. code-block:: python\n\n    from bitcoinlib.wallets import HDWallet\n    from bitcoinlib.keys import HDKey\n\n    NETWORK = 'testnet'\n    k1 = HDKey('tprv8ZgxMBicQKsPd1Q44tfDiZC98iYouKRC2CzjT3HGt1yYw2zuX2awTotzGAZQEAU9bi2M5MCj8iedP9MREPjUgpDEBwBgGi2C8eK'\n                '5zNYeiX8', network=NETWORK)\n    k2 = HDKey('tprv8ZgxMBicQKsPeUbMS6kswJc11zgVEXUnUZuGo3bF6bBrAg1ieFfUdPc9UHqbD5HcXizThrcKike1c4z6xHrz6MWGwy8L6YKVbgJ'\n                'MeQHdWDp', network=NETWORK)\n    w1 = HDWallet.create('multisig_2of2_cosigner1', sigs_required=2,\n                         keys=[k1, k2.public_master(multisig=True)], network=NETWORK)\n    w2 = HDWallet.create('multisig_2of2_cosigner2',  sigs_required=2,\n                         keys=[k1.public_master(multisig=True), k2], network=NETWORK)\n    print(\"Deposit testnet bitcoin to this address to create transaction: \", w1.get_key().address)\n\nCreate a transaction in the first wallet\n\n.. code-block:: python\n\n    w1.utxos_update()\n    t = w1.sweep('mwCwTceJvYV27KXBc3NJZys6CjsgsoeHmf', min_confirms=0)\n    t.info()\n\nAnd then import the transaction in the second wallet, sign it and push it to the network\n\n.. code-block:: python\n\n    w2.get_key()\n    t2 = w2.transaction_import(t)\n    t2.sign()\n    t2.send()\n    t2.info()\n\n\nSegregated Witness Wallet\n-------------------------\n\nEasily create and manage segwit wallets. Both native segwit with base32/bech32 addresses and P2SH nested segwit\nwallets with traditional addresses are available.\n\nCreate a native single key P2WPKH wallet:\n\n.. code-block:: pycon\n\n    >>> from bitcoinlib.wallets import HDWallet\n    >>> w = HDWallet.create('wallet_segwit_p2wpkh', witness_type='segwit')\n    >>> w.get_key().address\n    bc1q84y2quplejutvu0h4gw9hy59fppu3thg0u2xz3\n\nOr create a P2SH nested single key P2SH_P2WPKH wallet:\n\n.. code-block:: pycon\n\n    >>> from bitcoinlib.wallets import HDWallet\n    >>> w = HDWallet.create('wallet_segwit_p2sh_p2wpkh', witness_type='p2sh-segwit')\n    >>> w.get_key().address\n    36ESSWgR4WxXJSc4ysDSJvecyY6FJkhUbp\n\n\nCommand Line Tool\n-----------------\n\nWith the command line tool you can create and manage wallet without any Python programming.\n\nTo create a new Bitcoin wallet\n\n.. code-block:: bash\n\n    $ clw NewWallet\n    Command Line Wallet for BitcoinLib\n\n    Wallet newwallet does not exist, create new wallet [yN]? y\n\n    CREATE wallet 'newwallet' (bitcoin network)\n\n    Your mnemonic private key sentence is: force humble chair kiss season ready elbow cool awake divorce famous tunnel\n\n    Please write down on paper and backup. With this key you can restore your wallet and all keys\n\n\nYou can use clw to create simple or multisig wallets for various networks, manage public and private keys\nand managing transactions.\n\nFor the full command line wallet documentation please read\n\nhttp://bitcoinlib.readthedocs.io/en/latest/_static/manuals.command-line-wallet.html\n\n\nMnemonic key generation\n-----------------------\n\nAllows you to use easy to remember passphrases consisting of a number of words to store private keys (BIP0039).\nYou can password protect this passphrase (BIP0038), and use the HD Wallet structure to generate a almost infinite \nnumber of new private keys and bitcoin addresses (BIP0043 and BIP0044).\n\nExample: Generate a list of words passphrase and derive a private key seed\n\n.. code-block:: pycon\n\n   >>> from bitcoinlib.mnemonic import Mnemonic\n   >>> from bitcoinlib.encoding import to_hexstring\n   >>> words = Mnemonic().generate()\n   >>> words\n   unique aisle iron extend earn cigar trust source next depart yard bind\n   >>> to_hexstring(Mnemonic().to_seed(words))\n   '9c6f41a347bf4f326f9c989fb522bec1b82c36463580d1769daadba7d59f69a305505fdd5d2131c9c60255c79279d4e8896155e0b126abea036da56a766f81a1'\n\n\nService providers\n-----------------\nCommunicates with pools of bitcoin service providers to retreive transaction, address, blockchain information. \nCan be used to push a transaction to the network, determine optimal service fee for a transaction or to update your\nwallet's balance.\n\nWhen working with wallets connections to service providers are automatically managed so you don't have to worry\nabout them. You can however easily use the Service object directly.\n\nExample: Get estimated transaction fee in sathosis per Kb for confirmation within 5 blocks\n\n.. code-block:: pycon\n\n   >>> from bitcoinlib.services.services import Service\n   >>> Service().estimatefee(5)\n   138964\n\n\nOther Databases\n---------------\n\nBitcoinlib uses the SQLite database by default but other databases are supported as well.\nSee http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.databases.html for instructions on how to use\nMySQL or PostgreSQL.\n\n\nMore examples\n-------------\nFor more examples see https://github.com/1200wd/bitcoinlib/tree/master/examples\n\n\nImplements the following Bitcoin Improvement Proposals\n------------------------------------------------------\n- Hierarchical Deterministic Wallets (BIP0032)\n- Passphrase-protected private key (BIP0038)\n- Mnemonic code for generating deterministic keys (BIP0039)\n- Purpose Field for Deterministic Wallets (BIP0043)\n- Multi-Account Hierarchy for Deterministic Wallets (BIP0044)\n- Structure for Deterministic P2SH Multisignature Wallets (BIP0045)\n- Bech32/base32 address format for native v0-16 witness outputs (BIP0173)\n- Native and P2SH nested Segregated Witness transactions (BIP0141 and BIP0143)\n\n\nInstalling and updating\n=======================\n\nPre-requirements Linux\n----------------------\n\n``sudo apt install build-essential python-dev python3-dev libgmp3-dev``\n\nTo install OpenSSL development package on Debian, Ubuntu or their derivatives\n\n``sudo apt install libssl-dev``\n\nTo install OpenSSL development package on Fedora, CentOS or RHEL\n\n``sudo yum install gcc openssl-devel``\n\n\nPre-requirements Windows\n------------------------\n\nThis library requires a Microsoft Visual C++ Compiler. See\nhttp://bitcoinlib.readthedocs.io/en/latest/_static/manuals.install.html\n\nThe fastecdsa library is not enabled at this moment on windows, the slower ecdsa library is installed.\n\n\nInstall with pip\n----------------\n\n``pip install bitcoinlib``\n\nThese packages will be installed\n* fastecdsa (or ecdsa on Windows)\n* pyaes\n* scrypt\n* sqlalchemy\n* requests\n* enum34 (for older Python installations)\n* pathlib2 (for Python 2)\n* six\n\n\nInstall development environment\n-------------------------------\n\nRequired packages:\n\n``sudo apt install -y postgresql postgresql-contrib mysql-server libpq-dev libmysqlclient-dev``\n\nCreate a virtual environment for instance on linux with virtualenv:\n\n.. code-block:: bash\n\n    $ virtualenv -p python3 venv/bitcoinlib\n    $ source venv/bitcoinlib/bin/activate\n\nThen clone the repository and install dependencies:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/1200wd/bitcoinlib.git\n    $ cd bitcoinlib\n    $ pip install -r requirements-dev.txt\n\n\nTroubleshooting\n---------------\n\nWhen you experience issues with the scrypt package when installing you can try to solve this by removing and reinstall\nscrypt:\n\n.. code-block:: bash\n\n    $ pip uninstall scrypt\n    $ pip install scrypt\n\nPlease make sure you also have the Python development and SSL development packages installed, see 'Other requirements'\nabove.\n\nYou can also use pyscrypt instead of scrypt. Pyscrypt is a pure Python scrypt password-based key derivation library.\nIt works but it is slow when using BIP38 password protected keys.\n\n.. code-block:: bash\n\n    $ pip install pyscrypt\n\nIf you run into issues to not hesitate to contact us or file an issue at https://github.com/1200wd/bitcoinlib/issues\n\n\nUpdate library\n--------------\n\nUpdate to the latest version of the library with\n\n.. code-block:: bash\n\n    $ pip install bitcoinlib --upgrade\n\nTo upgrade make sure everything is backuped and run updatedb.py from the installation directory.\n\n.. code-block:: bash\n\n    $ python updatedb.py -d [<link-to-database-if-not-standard>]\n\n\nFor more information on installing, updating and maintenance see\nhttps://bitcoinlib.readthedocs.io/en/latest/_static/manuals.install.html#installation\n\n\nFuture / Roadmap\n================\n\n* Create Script class and support advanced scripts\n* Fully support timelocks\n* Support for Trezor wallet\n* Improve speed and security\n* Integrate in ERP and shopping solutions such as Odoo, Magento, Shopware\n* Support for lightning network\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/1200wd/bitcoinlib", "keywords": "bitcoin library cryptocurrency wallet crypto keys segwit litecoin dash", "license": "GNU3", "maintainer": "", "maintainer_email": "", "name": "bitcoinlib", "package_url": "https://pypi.org/project/bitcoinlib/", "platform": "", "project_url": "https://pypi.org/project/bitcoinlib/", "project_urls": {"Homepage": "http://github.com/1200wd/bitcoinlib"}, "release_url": "https://pypi.org/project/bitcoinlib/0.4.14/", "requires_dist": null, "requires_python": "", "summary": "Bitcoin and Other cryptocurrency Library", "version": "0.4.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-bitcoin-library\">\n<h2>Python Bitcoin Library</h2>\n<p>Bitcoin, Litecoin and Dash Crypto Currency Library for Python.</p>\n<p>Includes a fully functional wallet, with multi signature, multi currency and multiple accounts.\nYou this library at a high level and create and manage wallets for the command line or at a low level\nand create your own custom made transactions, keys or wallets.</p>\n<p>The BitcoinLib connects to various service providers automatically to update wallets, transactions and\nblockchain information. It does currently not parse the blockchain itself.</p>\n<a href=\"https://travis-ci.org/1200wd/bitcoinlib\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf674fbe2d73df6e27decdf51f449877a2f0ad4c/68747470733a2f2f7472617669732d63692e6f72672f3132303077642f626974636f696e6c69622e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/pypi/bitcoinlib/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f1b52363d7f8fcd0c9520501b862ee70150c116/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f626974636f696e6c69622e737667\"></a>\n<a href=\"http://bitcoinlib.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"RTD\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c35bdd26d3b7d6bf83f91eb76b919f5a431f655/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f626974636f696e6c69622f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/1200wd/bitcoinlib?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15f0a5ac525aae58c51c59e31ffe12d1a32f1ba1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f3132303077642f626974636f696e6c69622f62616467652e7376673f6272616e63683d696e7374616c6c6174696f6e2d646f63756d656e746174696f6e2d757064617465\"></a>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Read the full documentation at: <a href=\"http://bitcoinlib.readthedocs.io/\" rel=\"nofollow\">http://bitcoinlib.readthedocs.io/</a></p>\n</div>\n<div id=\"disclaimer\">\n<h3>Disclaimer</h3>\n<p>This library is still in development, please use at your own risk and test sufficiently before using it in a\nproduction environment.</p>\n</div>\n</div>\n<div id=\"some-examples\">\n<h2>Some Examples</h2>\n<div id=\"wallet\">\n<h3>Wallet</h3>\n<p>The bitcoin library contains a wallet implementation using SQLAlchemy and SQLite3 to import, create and manage\nkeys in a Hierarchical Deterministic way.</p>\n<p>Example: Create wallet and generate new address (key) to receive bitcoins</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.wallets</span> <span class=\"kn\">import</span> <span class=\"n\">HDWallet</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">HDWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'Wallet1'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">key1</span> <span class=\"o\">=</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">key1</span><span class=\"o\">.</span><span class=\"n\">address</span>\n<span class=\"go\">'1Fo7STj6LdRhUuD1AiEsHpH65pXzraGJ9j'</span>\n</pre>\n<p>Now send a small transaction to your wallet and use the scan() method to update transactions and UTXO\u2019s</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>  <span class=\"c1\"># Shows wallet information, keys, transactions and UTXO's</span>\n</pre>\n<p>When your wallet received a payment and has unspent transaction outputs, you can send bitcoins easily.\nIf successful a transaction ID is returned</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">send_to</span><span class=\"p\">(</span><span class=\"s1\">'12ooWd8Xag7hsgP9PBPnmyGe36VeUrpMSH'</span><span class=\"p\">,</span> <span class=\"mi\">100000</span><span class=\"p\">)</span>\n<span class=\"go\">'b7feea5e7c79d4f6f343b5ca28fa2a1fcacfe9a2b7f44f3d2fd8d6c2d82c4078'\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">info</span>  <span class=\"c1\"># Shows transaction information and send results</span>\n</pre>\n</div>\n<div id=\"wallet-from-passphrase-with-accounts-and-multiple-currencies\">\n<h3>Wallet from passphrase with accounts and multiple currencies</h3>\n<p>The following code creates a wallet with two bitcoin and one litecoin account from a Mnemonic passphrase.\nThe complete wallet can be recovered from the passphrase which is the masterkey.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.wallets</span> <span class=\"kn\">import</span> <span class=\"n\">HDWallet</span><span class=\"p\">,</span> <span class=\"n\">wallet_delete</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.mnemonic</span> <span class=\"kn\">import</span> <span class=\"n\">Mnemonic</span>\n\n<span class=\"n\">passphrase</span> <span class=\"o\">=</span> <span class=\"n\">Mnemonic</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">passphrase</span><span class=\"p\">)</span>\n<span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">HDWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">\"Wallet2\"</span><span class=\"p\">,</span> <span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"n\">passphrase</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'bitcoin'</span><span class=\"p\">)</span>\n<span class=\"n\">account_btc2</span> <span class=\"o\">=</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">new_account</span><span class=\"p\">(</span><span class=\"s1\">'Account BTC 2'</span><span class=\"p\">)</span>\n<span class=\"n\">account_ltc1</span> <span class=\"o\">=</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">new_account</span><span class=\"p\">(</span><span class=\"s1\">'Account LTC'</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'litecoin'</span><span class=\"p\">)</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">()</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">(</span><span class=\"n\">account_btc2</span><span class=\"o\">.</span><span class=\"n\">account_id</span><span class=\"p\">)</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">(</span><span class=\"n\">account_ltc1</span><span class=\"o\">.</span><span class=\"n\">account_id</span><span class=\"p\">)</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"multi-signature-wallets\">\n<h3>Multi Signature Wallets</h3>\n<p>Create a Multisig wallet with 2 cosigner which both need to sign a transaction.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.wallets</span> <span class=\"kn\">import</span> <span class=\"n\">HDWallet</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.keys</span> <span class=\"kn\">import</span> <span class=\"n\">HDKey</span>\n\n<span class=\"n\">NETWORK</span> <span class=\"o\">=</span> <span class=\"s1\">'testnet'</span>\n<span class=\"n\">k1</span> <span class=\"o\">=</span> <span class=\"n\">HDKey</span><span class=\"p\">(</span><span class=\"s1\">'tprv8ZgxMBicQKsPd1Q44tfDiZC98iYouKRC2CzjT3HGt1yYw2zuX2awTotzGAZQEAU9bi2M5MCj8iedP9MREPjUgpDEBwBgGi2C8eK'</span>\n            <span class=\"s1\">'5zNYeiX8'</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"n\">NETWORK</span><span class=\"p\">)</span>\n<span class=\"n\">k2</span> <span class=\"o\">=</span> <span class=\"n\">HDKey</span><span class=\"p\">(</span><span class=\"s1\">'tprv8ZgxMBicQKsPeUbMS6kswJc11zgVEXUnUZuGo3bF6bBrAg1ieFfUdPc9UHqbD5HcXizThrcKike1c4z6xHrz6MWGwy8L6YKVbgJ'</span>\n            <span class=\"s1\">'MeQHdWDp'</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"n\">NETWORK</span><span class=\"p\">)</span>\n<span class=\"n\">w1</span> <span class=\"o\">=</span> <span class=\"n\">HDWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'multisig_2of2_cosigner1'</span><span class=\"p\">,</span> <span class=\"n\">sigs_required</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                     <span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">k1</span><span class=\"p\">,</span> <span class=\"n\">k2</span><span class=\"o\">.</span><span class=\"n\">public_master</span><span class=\"p\">(</span><span class=\"n\">multisig</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)],</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"n\">NETWORK</span><span class=\"p\">)</span>\n<span class=\"n\">w2</span> <span class=\"o\">=</span> <span class=\"n\">HDWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'multisig_2of2_cosigner2'</span><span class=\"p\">,</span>  <span class=\"n\">sigs_required</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                     <span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">k1</span><span class=\"o\">.</span><span class=\"n\">public_master</span><span class=\"p\">(</span><span class=\"n\">multisig</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"n\">k2</span><span class=\"p\">],</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"n\">NETWORK</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Deposit testnet bitcoin to this address to create transaction: \"</span><span class=\"p\">,</span> <span class=\"n\">w1</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">)</span>\n</pre>\n<p>Create a transaction in the first wallet</p>\n<pre><span class=\"n\">w1</span><span class=\"o\">.</span><span class=\"n\">utxos_update</span><span class=\"p\">()</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">w1</span><span class=\"o\">.</span><span class=\"n\">sweep</span><span class=\"p\">(</span><span class=\"s1\">'mwCwTceJvYV27KXBc3NJZys6CjsgsoeHmf'</span><span class=\"p\">,</span> <span class=\"n\">min_confirms</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n<p>And then import the transaction in the second wallet, sign it and push it to the network</p>\n<pre><span class=\"n\">w2</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">()</span>\n<span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">w2</span><span class=\"o\">.</span><span class=\"n\">transaction_import</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"n\">t2</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">()</span>\n<span class=\"n\">t2</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n<span class=\"n\">t2</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"segregated-witness-wallet\">\n<h3>Segregated Witness Wallet</h3>\n<p>Easily create and manage segwit wallets. Both native segwit with base32/bech32 addresses and P2SH nested segwit\nwallets with traditional addresses are available.</p>\n<p>Create a native single key P2WPKH wallet:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.wallets</span> <span class=\"kn\">import</span> <span class=\"n\">HDWallet</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">HDWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'wallet_segwit_p2wpkh'</span><span class=\"p\">,</span> <span class=\"n\">witness_type</span><span class=\"o\">=</span><span class=\"s1\">'segwit'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">address</span>\n<span class=\"go\">bc1q84y2quplejutvu0h4gw9hy59fppu3thg0u2xz3</span>\n</pre>\n<p>Or create a P2SH nested single key P2SH_P2WPKH wallet:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.wallets</span> <span class=\"kn\">import</span> <span class=\"n\">HDWallet</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">HDWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'wallet_segwit_p2sh_p2wpkh'</span><span class=\"p\">,</span> <span class=\"n\">witness_type</span><span class=\"o\">=</span><span class=\"s1\">'p2sh-segwit'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">address</span>\n<span class=\"go\">36ESSWgR4WxXJSc4ysDSJvecyY6FJkhUbp</span>\n</pre>\n</div>\n<div id=\"command-line-tool\">\n<h3>Command Line Tool</h3>\n<p>With the command line tool you can create and manage wallet without any Python programming.</p>\n<p>To create a new Bitcoin wallet</p>\n<pre>$ clw NewWallet\nCommand Line Wallet <span class=\"k\">for</span> BitcoinLib\n\nWallet newwallet does not exist, create new wallet <span class=\"o\">[</span>yN<span class=\"o\">]</span>? y\n\nCREATE wallet <span class=\"s1\">'newwallet'</span> <span class=\"o\">(</span>bitcoin network<span class=\"o\">)</span>\n\nYour mnemonic private key sentence is: force humble chair kiss season ready elbow cool awake divorce famous tunnel\n\nPlease write down on paper and backup. With this key you can restore your wallet and all keys\n</pre>\n<p>You can use clw to create simple or multisig wallets for various networks, manage public and private keys\nand managing transactions.</p>\n<p>For the full command line wallet documentation please read</p>\n<p><a href=\"http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.command-line-wallet.html\" rel=\"nofollow\">http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.command-line-wallet.html</a></p>\n</div>\n<div id=\"mnemonic-key-generation\">\n<h3>Mnemonic key generation</h3>\n<p>Allows you to use easy to remember passphrases consisting of a number of words to store private keys (BIP0039).\nYou can password protect this passphrase (BIP0038), and use the HD Wallet structure to generate a almost infinite\nnumber of new private keys and bitcoin addresses (BIP0043 and BIP0044).</p>\n<p>Example: Generate a list of words passphrase and derive a private key seed</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.mnemonic</span> <span class=\"kn\">import</span> <span class=\"n\">Mnemonic</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.encoding</span> <span class=\"kn\">import</span> <span class=\"n\">to_hexstring</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">Mnemonic</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">words</span>\n<span class=\"go\">unique aisle iron extend earn cigar trust source next depart yard bind\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">to_hexstring</span><span class=\"p\">(</span><span class=\"n\">Mnemonic</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_seed</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">))</span>\n<span class=\"go\">'9c6f41a347bf4f326f9c989fb522bec1b82c36463580d1769daadba7d59f69a305505fdd5d2131c9c60255c79279d4e8896155e0b126abea036da56a766f81a1'</span>\n</pre>\n</div>\n<div id=\"service-providers\">\n<h3>Service providers</h3>\n<p>Communicates with pools of bitcoin service providers to retreive transaction, address, blockchain information.\nCan be used to push a transaction to the network, determine optimal service fee for a transaction or to update your\nwallet\u2019s balance.</p>\n<p>When working with wallets connections to service providers are automatically managed so you don\u2019t have to worry\nabout them. You can however easily use the Service object directly.</p>\n<p>Example: Get estimated transaction fee in sathosis per Kb for confirmation within 5 blocks</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">bitcoinlib.services.services</span> <span class=\"kn\">import</span> <span class=\"n\">Service</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Service</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">estimatefee</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"go\">138964</span>\n</pre>\n</div>\n<div id=\"other-databases\">\n<h3>Other Databases</h3>\n<p>Bitcoinlib uses the SQLite database by default but other databases are supported as well.\nSee <a href=\"http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.databases.html\" rel=\"nofollow\">http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.databases.html</a> for instructions on how to use\nMySQL or PostgreSQL.</p>\n</div>\n<div id=\"more-examples\">\n<h3>More examples</h3>\n<p>For more examples see <a href=\"https://github.com/1200wd/bitcoinlib/tree/master/examples\" rel=\"nofollow\">https://github.com/1200wd/bitcoinlib/tree/master/examples</a></p>\n</div>\n<div id=\"implements-the-following-bitcoin-improvement-proposals\">\n<h3>Implements the following Bitcoin Improvement Proposals</h3>\n<ul>\n<li>Hierarchical Deterministic Wallets (BIP0032)</li>\n<li>Passphrase-protected private key (BIP0038)</li>\n<li>Mnemonic code for generating deterministic keys (BIP0039)</li>\n<li>Purpose Field for Deterministic Wallets (BIP0043)</li>\n<li>Multi-Account Hierarchy for Deterministic Wallets (BIP0044)</li>\n<li>Structure for Deterministic P2SH Multisignature Wallets (BIP0045)</li>\n<li>Bech32/base32 address format for native v0-16 witness outputs (BIP0173)</li>\n<li>Native and P2SH nested Segregated Witness transactions (BIP0141 and BIP0143)</li>\n</ul>\n</div>\n</div>\n<div id=\"installing-and-updating\">\n<h2>Installing and updating</h2>\n<div id=\"pre-requirements-linux\">\n<h3>Pre-requirements Linux</h3>\n<p><tt>sudo apt install <span class=\"pre\">build-essential</span> <span class=\"pre\">python-dev</span> <span class=\"pre\">python3-dev</span> <span class=\"pre\">libgmp3-dev</span></tt></p>\n<p>To install OpenSSL development package on Debian, Ubuntu or their derivatives</p>\n<p><tt>sudo apt install <span class=\"pre\">libssl-dev</span></tt></p>\n<p>To install OpenSSL development package on Fedora, CentOS or RHEL</p>\n<p><tt>sudo yum install gcc <span class=\"pre\">openssl-devel</span></tt></p>\n</div>\n<div id=\"pre-requirements-windows\">\n<h3>Pre-requirements Windows</h3>\n<p>This library requires a Microsoft Visual C++ Compiler. See\n<a href=\"http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.install.html\" rel=\"nofollow\">http://bitcoinlib.readthedocs.io/en/latest/_static/manuals.install.html</a></p>\n<p>The fastecdsa library is not enabled at this moment on windows, the slower ecdsa library is installed.</p>\n</div>\n<div id=\"install-with-pip\">\n<h3>Install with pip</h3>\n<p><tt>pip install bitcoinlib</tt></p>\n<p>These packages will be installed\n* fastecdsa (or ecdsa on Windows)\n* pyaes\n* scrypt\n* sqlalchemy\n* requests\n* enum34 (for older Python installations)\n* pathlib2 (for Python 2)\n* six</p>\n</div>\n<div id=\"install-development-environment\">\n<h3>Install development environment</h3>\n<p>Required packages:</p>\n<p><tt>sudo apt install <span class=\"pre\">-y</span> postgresql <span class=\"pre\">postgresql-contrib</span> <span class=\"pre\">mysql-server</span> <span class=\"pre\">libpq-dev</span> <span class=\"pre\">libmysqlclient-dev</span></tt></p>\n<p>Create a virtual environment for instance on linux with virtualenv:</p>\n<pre>$ virtualenv -p python3 venv/bitcoinlib\n$ <span class=\"nb\">source</span> venv/bitcoinlib/bin/activate\n</pre>\n<p>Then clone the repository and install dependencies:</p>\n<pre>$ git clone https://github.com/1200wd/bitcoinlib.git\n$ <span class=\"nb\">cd</span> bitcoinlib\n$ pip install -r requirements-dev.txt\n</pre>\n</div>\n<div id=\"troubleshooting\">\n<h3>Troubleshooting</h3>\n<p>When you experience issues with the scrypt package when installing you can try to solve this by removing and reinstall\nscrypt:</p>\n<pre>$ pip uninstall scrypt\n$ pip install scrypt\n</pre>\n<p>Please make sure you also have the Python development and SSL development packages installed, see \u2018Other requirements\u2019\nabove.</p>\n<p>You can also use pyscrypt instead of scrypt. Pyscrypt is a pure Python scrypt password-based key derivation library.\nIt works but it is slow when using BIP38 password protected keys.</p>\n<pre>$ pip install pyscrypt\n</pre>\n<p>If you run into issues to not hesitate to contact us or file an issue at <a href=\"https://github.com/1200wd/bitcoinlib/issues\" rel=\"nofollow\">https://github.com/1200wd/bitcoinlib/issues</a></p>\n</div>\n<div id=\"update-library\">\n<h3>Update library</h3>\n<p>Update to the latest version of the library with</p>\n<pre>$ pip install bitcoinlib --upgrade\n</pre>\n<p>To upgrade make sure everything is backuped and run updatedb.py from the installation directory.</p>\n<pre>$ python updatedb.py -d <span class=\"o\">[</span>&lt;link-to-database-if-not-standard&gt;<span class=\"o\">]</span>\n</pre>\n<p>For more information on installing, updating and maintenance see\n<a href=\"https://bitcoinlib.readthedocs.io/en/latest/_static/manuals.install.html#installation\" rel=\"nofollow\">https://bitcoinlib.readthedocs.io/en/latest/_static/manuals.install.html#installation</a></p>\n</div>\n</div>\n<div id=\"future-roadmap\">\n<h2>Future / Roadmap</h2>\n<ul>\n<li>Create Script class and support advanced scripts</li>\n<li>Fully support timelocks</li>\n<li>Support for Trezor wallet</li>\n<li>Improve speed and security</li>\n<li>Integrate in ERP and shopping solutions such as Odoo, Magento, Shopware</li>\n<li>Support for lightning network</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6852554, "releases": {"0.3.33a0": [{"comment_text": "", "digests": {"md5": "29e4ba838e2a95685b105bb504d0733b", "sha256": "fb339e96ef7243d6aee9c82562bfcc5ac78d67e20a421bf0ffe694930d8070f9"}, "downloads": -1, "filename": "bitcoinlib-0.3.33a0.tar.gz", "has_sig": false, "md5_digest": "29e4ba838e2a95685b105bb504d0733b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 282291, "upload_time": "2018-02-23T20:01:13", "upload_time_iso_8601": "2018-02-23T20:01:13.061792Z", "url": "https://files.pythonhosted.org/packages/7c/e7/6be564a34162d41dcae89640981a8da82d0d5bbf284253777ef4de1cbb3b/bitcoinlib-0.3.33a0.tar.gz", "yanked": false}], "0.3.33a1": [{"comment_text": "", "digests": {"md5": "29380196818fc2ee022295aeff5461aa", "sha256": "42bb892ecf7b3f247fce2c7f7c645924342112c99c428f8afdb2bd08369ad829"}, "downloads": -1, "filename": "bitcoinlib-0.3.33a1.tar.gz", "has_sig": false, "md5_digest": "29380196818fc2ee022295aeff5461aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 285293, "upload_time": "2018-03-18T07:49:17", "upload_time_iso_8601": "2018-03-18T07:49:17.488458Z", "url": "https://files.pythonhosted.org/packages/f2/51/8cc72d22826dccfddd5e17cffda4b5761df600eb8e23881795e393247950/bitcoinlib-0.3.33a1.tar.gz", "yanked": false}], "0.3.33a2": [{"comment_text": "", "digests": {"md5": "545f2ece04aaacedd18b0a31d7cb8d92", "sha256": "484e320b523f73c6108f24aaa9cee1ca399c318c17f23464796aea3b0cd20a8a"}, "downloads": -1, "filename": "bitcoinlib-0.3.33a2.tar.gz", "has_sig": false, "md5_digest": "545f2ece04aaacedd18b0a31d7cb8d92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 285282, "upload_time": "2018-03-18T13:09:26", "upload_time_iso_8601": "2018-03-18T13:09:26.023313Z", "url": "https://files.pythonhosted.org/packages/92/e9/171570c42c44547662fef331e460d604c031a28aeb84c9a94a62560c847d/bitcoinlib-0.3.33a2.tar.gz", "yanked": false}], "0.3.33a3": [{"comment_text": "", "digests": {"md5": "bd680d2eb8431d16ee9197794eabbbdf", "sha256": "c8a9a63a784fabc785d66d210aaffbf91e4d8a1295e741ac3dc59b6a7e99a429"}, "downloads": -1, "filename": "bitcoinlib-0.3.33a3.tar.gz", "has_sig": false, "md5_digest": "bd680d2eb8431d16ee9197794eabbbdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 285679, "upload_time": "2018-03-20T17:52:31", "upload_time_iso_8601": "2018-03-20T17:52:31.023999Z", "url": "https://files.pythonhosted.org/packages/6e/b0/7a20251c5d194830ebf069b2884be958cf224796a8a86adf98d910897752/bitcoinlib-0.3.33a3.tar.gz", "yanked": false}], "0.3.33a4": [{"comment_text": "", "digests": {"md5": "6b507b1fc659e89493af7a065eb5500e", "sha256": "aeca5580dbcb6518be43f51daf2a61fa6bc2ca5d131a097f192479191caf5bf7"}, "downloads": -1, "filename": "bitcoinlib-0.3.33a4.tar.gz", "has_sig": false, "md5_digest": "6b507b1fc659e89493af7a065eb5500e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 285724, "upload_time": "2018-03-20T19:33:59", "upload_time_iso_8601": "2018-03-20T19:33:59.914587Z", "url": "https://files.pythonhosted.org/packages/e1/63/1fed07894a907bd94f779f66248104324f13dff11679c76170f50ea40058/bitcoinlib-0.3.33a4.tar.gz", "yanked": false}], "0.3.34": [{"comment_text": "", "digests": {"md5": "82a76814076ab9c7dd9ddbb59c5c3415", "sha256": "816ef9733d65a76c301141c9a9d0e851057519a8a767f1fc2b06d8b7e57392fc"}, "downloads": -1, "filename": "bitcoinlib-0.3.34.tar.gz", "has_sig": false, "md5_digest": "82a76814076ab9c7dd9ddbb59c5c3415", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 296144, "upload_time": "2018-04-06T08:43:39", "upload_time_iso_8601": "2018-04-06T08:43:39.666050Z", "url": "https://files.pythonhosted.org/packages/c0/d6/b8a4cc9a3be3d8a406030562fce9d7a08af1908bed3bbd50a77c84e50878/bitcoinlib-0.3.34.tar.gz", "yanked": false}], "0.3.34a1": [{"comment_text": "", "digests": {"md5": "ba84529b658e2611e357b92b7af77807", "sha256": "5d0ef2cc8d1e02631a7222c543602becd2a083f6a373578fdc262e4ab2ff4384"}, "downloads": -1, "filename": "bitcoinlib-0.3.34a1.tar.gz", "has_sig": false, "md5_digest": "ba84529b658e2611e357b92b7af77807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 296162, "upload_time": "2018-04-06T11:35:45", "upload_time_iso_8601": "2018-04-06T11:35:45.411346Z", "url": "https://files.pythonhosted.org/packages/83/cd/966b1354218780fc1a2143d0e10af8bc7f4d3052de5f35cda1d0e4ebb9a3/bitcoinlib-0.3.34a1.tar.gz", "yanked": false}], "0.3.34a2": [{"comment_text": "", "digests": {"md5": "93c26decf7ff7383838b406ac52175f8", "sha256": "1a6db2d581706021e0cef938115562ae802c0de33ac5c5d2757ec6ff30517be4"}, "downloads": -1, "filename": "bitcoinlib-0.3.34a2.tar.gz", "has_sig": false, "md5_digest": "93c26decf7ff7383838b406ac52175f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 296525, "upload_time": "2018-04-09T18:57:43", "upload_time_iso_8601": "2018-04-09T18:57:43.636913Z", "url": "https://files.pythonhosted.org/packages/15/d7/a5b80cc32de871e15b00f185a12a137b40fbf8fdbad2e8b72c2d0cea5969/bitcoinlib-0.3.34a2.tar.gz", "yanked": false}], "0.3.35.post1": [{"comment_text": "", "digests": {"md5": "c7e5f713f618ddf0e43852b11de96bd9", "sha256": "699c97b1d32ee77c57c496198ecc87d4d6978df6167262c715feb1d07f2bb054"}, "downloads": -1, "filename": "bitcoinlib-0.3.35.post1.tar.gz", "has_sig": false, "md5_digest": "c7e5f713f618ddf0e43852b11de96bd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 305889, "upload_time": "2018-05-18T11:51:22", "upload_time_iso_8601": "2018-05-18T11:51:22.374396Z", "url": "https://files.pythonhosted.org/packages/34/a3/7d073bec0944f4f061d615e6008e9a9e6f4456c6723ef29fbee2f861b02c/bitcoinlib-0.3.35.post1.tar.gz", "yanked": false}], "0.3.36": [{"comment_text": "", "digests": {"md5": "e81ab993dff5184069371113f14a0ee0", "sha256": "8e5ac234c67e99673ac985912cfe2cde06950f93431249942d61d1aff925bdb5"}, "downloads": -1, "filename": "bitcoinlib-0.3.36.tar.gz", "has_sig": false, "md5_digest": "e81ab993dff5184069371113f14a0ee0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 306535, "upload_time": "2018-05-23T08:08:45", "upload_time_iso_8601": "2018-05-23T08:08:45.564096Z", "url": "https://files.pythonhosted.org/packages/76/d5/6a4679510ff67d4545f76876088551a92d64259d7ad08436aea752c8373b/bitcoinlib-0.3.36.tar.gz", "yanked": false}], "0.3.36a0": [{"comment_text": "", "digests": {"md5": "481c2c84a4ea9b0c87f865bbf5da67e3", "sha256": "200b8c7e90694698f6d2dd8fe181c4fec72ae9c08d341a82812f8eff94b3f032"}, "downloads": -1, "filename": "bitcoinlib-0.3.36a0.tar.gz", "has_sig": false, "md5_digest": "481c2c84a4ea9b0c87f865bbf5da67e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 306297, "upload_time": "2018-05-22T21:42:23", "upload_time_iso_8601": "2018-05-22T21:42:23.683666Z", "url": "https://files.pythonhosted.org/packages/fa/25/7190efb0f100cd48699bb20cef0c6adf2c464ad6721b275c617d11011a93/bitcoinlib-0.3.36a0.tar.gz", "yanked": false}], "0.3.37": [{"comment_text": "", "digests": {"md5": "6c25731b1a6e4e60e76849b533067989", "sha256": "09bd08b41c9ab148cb5d9cb207385ea3ad062c1f9939244d5722041e1fe9a16f"}, "downloads": -1, "filename": "bitcoinlib-0.3.37.tar.gz", "has_sig": false, "md5_digest": "6c25731b1a6e4e60e76849b533067989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 318127, "upload_time": "2018-07-11T12:31:56", "upload_time_iso_8601": "2018-07-11T12:31:56.518473Z", "url": "https://files.pythonhosted.org/packages/26/51/8e99b9fff9cf63e9caeb37aa84be677ce13c2609d8f686d963c2e52efd30/bitcoinlib-0.3.37.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8720d8d40236261f25e3e253d44cdfbf", "sha256": "838e8e69417d75161cd5e32357d4589105d95a9f46780c6840f43ab8f8aa3664"}, "downloads": -1, "filename": "bitcoinlib-0.4.0.tar.gz", "has_sig": false, "md5_digest": "8720d8d40236261f25e3e253d44cdfbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 330622, "upload_time": "2018-10-26T21:17:46", "upload_time_iso_8601": "2018-10-26T21:17:46.957224Z", "url": "https://files.pythonhosted.org/packages/1f/d8/321beac21196982c312797c9110e309f742093ea88662d8ee1b39bb8f83b/bitcoinlib-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "61906b3891621f010e3affb09f9a6d14", "sha256": "478c67be1695f67d73a990c3adc3a98129636ac4dceb8025c92f9b25f3ee2dc3"}, "downloads": -1, "filename": "bitcoinlib-0.4.1.tar.gz", "has_sig": false, "md5_digest": "61906b3891621f010e3affb09f9a6d14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 330853, "upload_time": "2018-10-26T21:37:42", "upload_time_iso_8601": "2018-10-26T21:37:42.402115Z", "url": "https://files.pythonhosted.org/packages/83/9a/d44fcea6e40ea82acb6f11d0f288c0816f29fdbd34acc4364bf9e8459ece/bitcoinlib-0.4.1.tar.gz", "yanked": false}], "0.4.10": [{"comment_text": "", "digests": {"md5": "071ae851563ec1e9af4afa14e77a7476", "sha256": "aef747dc349c8bae237feafb62d2798449ade28933b3ffad82006ef376590b16"}, "downloads": -1, "filename": "bitcoinlib-0.4.10.tar.gz", "has_sig": false, "md5_digest": "071ae851563ec1e9af4afa14e77a7476", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 375865, "upload_time": "2019-07-07T15:38:30", "upload_time_iso_8601": "2019-07-07T15:38:30.492722Z", "url": "https://files.pythonhosted.org/packages/42/e2/710d44c746a909781ad9d49bd3d831b681f393824d3bc9773dc8ab298a0f/bitcoinlib-0.4.10.tar.gz", "yanked": false}], "0.4.11": [{"comment_text": "", "digests": {"md5": "1981814618af8161174c5b5b9b096bf0", "sha256": "d7701aed2916694e81489520f25d9733e1a98ff804b4765980d2c4d2ee22b5e0"}, "downloads": -1, "filename": "bitcoinlib-0.4.11.tar.gz", "has_sig": false, "md5_digest": "1981814618af8161174c5b5b9b096bf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 394386, "upload_time": "2019-11-12T20:27:29", "upload_time_iso_8601": "2019-11-12T20:27:29.617468Z", "url": "https://files.pythonhosted.org/packages/c5/e4/c2dca483739b414b5671541d8357ba87d1ecb9da1094a7d4dd1a7e4a5d33/bitcoinlib-0.4.11.tar.gz", "yanked": false}], "0.4.12": [{"comment_text": "", "digests": {"md5": "690c5b583b14e0fa2bf067e047eec938", "sha256": "8815f39cf52a42c7499c82511bcba25dc3556ee3b3dabfc997a59023c038e6ab"}, "downloads": -1, "filename": "bitcoinlib-0.4.12.tar.gz", "has_sig": false, "md5_digest": "690c5b583b14e0fa2bf067e047eec938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 405309, "upload_time": "2020-01-17T12:06:13", "upload_time_iso_8601": "2020-01-17T12:06:13.436822Z", "url": "https://files.pythonhosted.org/packages/15/8b/6514ec69cdb7da2b7eb5a5f72ee7c510a57a346a7fd61feb9ac7930f58bf/bitcoinlib-0.4.12.tar.gz", "yanked": false}], "0.4.13": [{"comment_text": "", "digests": {"md5": "d3fb2780c4d628073dc442b634082bb0", "sha256": "a794fcf8c3d0215673d7b1bad2ae82f848249f853692dbf8245d48af8e1e44f2"}, "downloads": -1, "filename": "bitcoinlib-0.4.13.tar.gz", "has_sig": false, "md5_digest": "d3fb2780c4d628073dc442b634082bb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 408545, "upload_time": "2020-02-19T14:18:52", "upload_time_iso_8601": "2020-02-19T14:18:52.207358Z", "url": "https://files.pythonhosted.org/packages/f6/ad/07f814aada015131b7aa2a42f7bd0a68b8cd66362288a20067b1b88692e9/bitcoinlib-0.4.13.tar.gz", "yanked": false}], "0.4.14": [{"comment_text": "", "digests": {"md5": "9744035220173e6504ddd75a3de50a77", "sha256": "2bd336c7436b8d1875abcfce0a700e27b06f48c9b50b622adc8f97d7c65a5614"}, "downloads": -1, "filename": "bitcoinlib-0.4.14.tar.gz", "has_sig": false, "md5_digest": "9744035220173e6504ddd75a3de50a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 418102, "upload_time": "2020-03-20T20:22:40", "upload_time_iso_8601": "2020-03-20T20:22:40.984988Z", "url": "https://files.pythonhosted.org/packages/d5/5d/82ee2839784b79a8bbb9448298885ac36d2c865eae135ebd78ae70ca228f/bitcoinlib-0.4.14.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "3bba47360f4fe87dad3354e7c1725d1f", "sha256": "2abe60d8a6f585c8c06608e507693fc81844bd1516f6de5cbb7040d4fbcb9c0a"}, "downloads": -1, "filename": "bitcoinlib-0.4.2.tar.gz", "has_sig": false, "md5_digest": "3bba47360f4fe87dad3354e7c1725d1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 339772, "upload_time": "2018-11-24T20:58:20", "upload_time_iso_8601": "2018-11-24T20:58:20.604077Z", "url": "https://files.pythonhosted.org/packages/5a/9c/ebabd215437a2d5d40860950c31962c1c33bf7116fb6b4e4c0548b947f3f/bitcoinlib-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "4c3e2ba225915cf7828d254f26beb6a2", "sha256": "c3ededc45511dd7d0cad214b0519c876d553ae27d8143ec82f9094544ffba472"}, "downloads": -1, "filename": "bitcoinlib-0.4.3.tar.gz", "has_sig": false, "md5_digest": "4c3e2ba225915cf7828d254f26beb6a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 344134, "upload_time": "2018-12-10T09:21:22", "upload_time_iso_8601": "2018-12-10T09:21:22.195631Z", "url": "https://files.pythonhosted.org/packages/89/86/0ea45632dd13afaa58914aae15a5200ab89b4075b0b29eb5e6da9602d54c/bitcoinlib-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "0dbb686cb6ff1b4096638db324795460", "sha256": "4621bb69d09f78305905e68284b7b9b3d3d6a58d7d384a813a057fcfd6cfbd82"}, "downloads": -1, "filename": "bitcoinlib-0.4.4.tar.gz", "has_sig": false, "md5_digest": "0dbb686cb6ff1b4096638db324795460", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 345141, "upload_time": "2018-12-24T21:11:17", "upload_time_iso_8601": "2018-12-24T21:11:17.616697Z", "url": "https://files.pythonhosted.org/packages/f0/13/617a144ef9d26cebc909b320347bee34f9ad244489979fb99f970491cd56/bitcoinlib-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "b048142bbeb0223dfa2b236ab3c3b9f6", "sha256": "4ae9e7badace8322b51c7da7cab623816942a898cea9d1a311d3a2ff6be1f73c"}, "downloads": -1, "filename": "bitcoinlib-0.4.5.tar.gz", "has_sig": false, "md5_digest": "b048142bbeb0223dfa2b236ab3c3b9f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 354996, "upload_time": "2019-03-04T19:44:25", "upload_time_iso_8601": "2019-03-04T19:44:25.733460Z", "url": "https://files.pythonhosted.org/packages/b9/32/c94feaeffeb5e2b4813e262ec223c1315ff995c961f38f7467e8d26ccab1/bitcoinlib-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "663b00f7864c5164aac8b4e12bee42d1", "sha256": "d421f38e36569e5f3394694cd675d96b6a08dd1faa3ea02d7bc49766df8f2c81"}, "downloads": -1, "filename": "bitcoinlib-0.4.6.tar.gz", "has_sig": false, "md5_digest": "663b00f7864c5164aac8b4e12bee42d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 356058, "upload_time": "2019-03-29T13:34:58", "upload_time_iso_8601": "2019-03-29T13:34:58.093235Z", "url": "https://files.pythonhosted.org/packages/ec/70/7fc69e83f51b897e619f34dfec4f7a5102a3042fa99d95f7be1916ef340d/bitcoinlib-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "93c775aa10ce5e70f5c6aec438d4003f", "sha256": "78fe49204f5be55ed69c2a5c900134621b19d8527947aaf973359d1b46d3199b"}, "downloads": -1, "filename": "bitcoinlib-0.4.7.tar.gz", "has_sig": false, "md5_digest": "93c775aa10ce5e70f5c6aec438d4003f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 358799, "upload_time": "2019-04-21T09:09:53", "upload_time_iso_8601": "2019-04-21T09:09:53.263395Z", "url": "https://files.pythonhosted.org/packages/b2/07/f49bff5c88f7d6cb57acb1000d0ab15e45785060db26804f64fa8aeaf4cd/bitcoinlib-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "e1ae00d2704563c693f3e389a846f932", "sha256": "f037a2c20c7c31be463ee563101bfcf0f8d96fd95b28ba52ed9ab8ce0f31f20c"}, "downloads": -1, "filename": "bitcoinlib-0.4.8.tar.gz", "has_sig": false, "md5_digest": "e1ae00d2704563c693f3e389a846f932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 367008, "upload_time": "2019-06-20T07:22:57", "upload_time_iso_8601": "2019-06-20T07:22:57.883129Z", "url": "https://files.pythonhosted.org/packages/6b/34/8761684d6a146c4ce1a979383456de42e2c511f185e61655beba20c304ee/bitcoinlib-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "85b60c0f1be2935f00fa79369320bd22", "sha256": "56ff29dd322b40c6364a25af2209f7a388746f7df1b18a94e9a7cf1454f013f3"}, "downloads": -1, "filename": "bitcoinlib-0.4.9.tar.gz", "has_sig": false, "md5_digest": "85b60c0f1be2935f00fa79369320bd22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 367057, "upload_time": "2019-07-03T21:12:39", "upload_time_iso_8601": "2019-07-03T21:12:39.452077Z", "url": "https://files.pythonhosted.org/packages/43/06/fbb3eb559083758eeaa714996bea3c1f0525dc006d323fe0d542b1ae2f18/bitcoinlib-0.4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9744035220173e6504ddd75a3de50a77", "sha256": "2bd336c7436b8d1875abcfce0a700e27b06f48c9b50b622adc8f97d7c65a5614"}, "downloads": -1, "filename": "bitcoinlib-0.4.14.tar.gz", "has_sig": false, "md5_digest": "9744035220173e6504ddd75a3de50a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 418102, "upload_time": "2020-03-20T20:22:40", "upload_time_iso_8601": "2020-03-20T20:22:40.984988Z", "url": "https://files.pythonhosted.org/packages/d5/5d/82ee2839784b79a8bbb9448298885ac36d2c865eae135ebd78ae70ca228f/bitcoinlib-0.4.14.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:18 2020"}