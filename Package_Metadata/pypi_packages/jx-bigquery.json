{"info": {"author": "Kyle Lahnakoski", "author_email": "kyle@lahnakoski.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# jx-bigquery\n\nJSON Expressions for BigQuery\n\n\n## Status\n\nMarch 2020 - Active but incomplete:  Can insert [tidy](https://en.wikipedia.org/wiki/Tidy_data) JSON documents into BigQuery while managing the schema.  Queries are not supported yet.\n\n## Overview\n\nThe library is intended to manage multiple BigQuery tables to give the illusion of one table with a dynamically managed schema. \n\n\n## Definitions\n\n* `partition` - Big data is split into separate containers based on age. This allows queries on recent data to use less resources, and allows old data to be dropped quickly\n* `cluster` - another name for the sorted order of the data in a partition. Sorting by the most common used lookup will make queries faster\n* `id` - The set of columns that identifies the document \n\n\n## Configuration\n\n* `table` - Any name you wish to give to this table series\n* `top_level_fields` - BigQuery demands that control columns are top-level.  Define them here.\n* `partition` - \n  * `field` - The dot-delimited field used to partition the tables (must be time datatype)\n  * `expire` - When BigQuery will automatically drop your data. \n* `id` - The identification of documents \n  * `field` - the set of columns to uniquely identify this document\n  * `version` - column used to determine age of a document; replacing newer with older\n* `cluster` - Columns used to sort the partitions \n* `schema` - {name: type} dictionary - needed when there is no data; BigQuery demands column definitions\n* `sharded` - *boolean* - set to `true` if you allow this library to track multiple tables. It allows for schema migration (expansion only), and for faster insert from a multitude of machines  \n* `account_info` - The information BigQuery provides to connect \n\n### Example\n\nThis is a complicated example. See [tests/config.json](https://github.com/klahnakoski/jx-bigquery/blob/dev/tests/config.json) for a minimal example.\n\n```json\n{\n    \"table\": \"my_table_name\",\n    \"top_level_fields\": {},\n    \"partition\": {\n        \"field\": \"submit_time\",\n        \"expire\": \"2year\"\n    },\n    \"id\": {\n        \"field\": \"id\",\n        \"version\": \"last_modified\"\n    },\n    \"cluster\": [\n        \"id\",\n        \"last_modified\"\n    ],\n    \"schema\": {\n        \"id\": \"integer\",\n        \"submit_time\": \"time\",\n        \"last_modified\": \"time\"\n    },\n    \"sharded\": true,\n    \"account_info\": {\n        \"private_key_id\": {\n            \"$ref\": \"env://BIGQUERY_PRIVATE_KEY_ID\"\n        },\n        \"private_key\": {\n            \"$ref\": \"env://BIGQUERY_PRIVATE_KEY\"\n        },\n        \"type\": \"service_account\",\n        \"project_id\": \"my-project-id\",\n        \"client_email\": \"me@my_project.iam.gserviceaccount.com\",\n        \"client_id\": \"12345\",\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n        \"token_uri\": \"https://oauth2.googleapis.com/token\",\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/my-project.iam.gserviceaccount.com\"\n    }\n}\n```\n\n## Usage\n\nSetup `Dataset` with an application name\n\n```python\n    dataset = bigquery.Dataset(\n        dataset=application_name, \n        kwargs=settings\n    )\n```\n\nCreate a table\n\n```python\n    destination = dataset.get_or_create_table(settings.destination)\n```\n\nInsert documents as you please\n\n\n```python\n    destination.extend(documents)\n```\n\nRequest a merge when done\n\n```python\n    destination.merge()\n```\n\n## Running tests\n\n\nFork and clone this repo. \n\n```\ngit clone https://github.com/klahnakoski/jx-bigquery.git \ncd jx-bigquery\npip install -r requirements.txt\n```\n\nYou will require a Google API key to run tests. The website will allow you to generate one and download a JSON file with the key.  Update the [tests/config.json](https://github.com/klahnakoski/jx-bigquery/blob/dev/tests/config.json) to point to that file: \n\n\n```\n# contents of tests/config.json\n{\n  \"destination\": {\n    \"account_info\": {\n      \"$ref\": \"file:///e:/moz-fx-dev-ekyle-treeherder-a838a7718652.json\"\n    }\n  },\n  \"constants\": {},\n  \"debug\": {\n    \"trace\": true\n  }\n}\n```\n\nThen you can run the tests\n\n```\npython -m unittest discover tests\n```\n\n> **NOTE** - the tests will create a `testing` dataset and generate/drop tables", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/klahnakoski/jx-bigquery", "keywords": "", "license": "MPL 2.0", "maintainer": "", "maintainer_email": "", "name": "jx-bigquery", "package_url": "https://pypi.org/project/jx-bigquery/", "platform": "", "project_url": "https://pypi.org/project/jx-bigquery/", "project_urls": {"Homepage": "https://github.com/klahnakoski/jx-bigquery"}, "release_url": "https://pypi.org/project/jx-bigquery/3.62.20101/", "requires_dist": null, "requires_python": "", "summary": "jx-bigquery - JSON Expressions for BigQuery", "version": "3.62.20101", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jx-bigquery</h1>\n<p>JSON Expressions for BigQuery</p>\n<h2>Status</h2>\n<p>March 2020 - Active but incomplete:  Can insert <a href=\"https://en.wikipedia.org/wiki/Tidy_data\" rel=\"nofollow\">tidy</a> JSON documents into BigQuery while managing the schema.  Queries are not supported yet.</p>\n<h2>Overview</h2>\n<p>The library is intended to manage multiple BigQuery tables to give the illusion of one table with a dynamically managed schema.</p>\n<h2>Definitions</h2>\n<ul>\n<li><code>partition</code> - Big data is split into separate containers based on age. This allows queries on recent data to use less resources, and allows old data to be dropped quickly</li>\n<li><code>cluster</code> - another name for the sorted order of the data in a partition. Sorting by the most common used lookup will make queries faster</li>\n<li><code>id</code> - The set of columns that identifies the document</li>\n</ul>\n<h2>Configuration</h2>\n<ul>\n<li><code>table</code> - Any name you wish to give to this table series</li>\n<li><code>top_level_fields</code> - BigQuery demands that control columns are top-level.  Define them here.</li>\n<li><code>partition</code> -\n<ul>\n<li><code>field</code> - The dot-delimited field used to partition the tables (must be time datatype)</li>\n<li><code>expire</code> - When BigQuery will automatically drop your data.</li>\n</ul>\n</li>\n<li><code>id</code> - The identification of documents\n<ul>\n<li><code>field</code> - the set of columns to uniquely identify this document</li>\n<li><code>version</code> - column used to determine age of a document; replacing newer with older</li>\n</ul>\n</li>\n<li><code>cluster</code> - Columns used to sort the partitions</li>\n<li><code>schema</code> - {name: type} dictionary - needed when there is no data; BigQuery demands column definitions</li>\n<li><code>sharded</code> - <em>boolean</em> - set to <code>true</code> if you allow this library to track multiple tables. It allows for schema migration (expansion only), and for faster insert from a multitude of machines</li>\n<li><code>account_info</code> - The information BigQuery provides to connect</li>\n</ul>\n<h3>Example</h3>\n<p>This is a complicated example. See <a href=\"https://github.com/klahnakoski/jx-bigquery/blob/dev/tests/config.json\" rel=\"nofollow\">tests/config.json</a> for a minimal example.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"table\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_table_name\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"top_level_fields\"</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n    <span class=\"nt\">\"partition\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"field\"</span><span class=\"p\">:</span> <span class=\"s2\">\"submit_time\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"expire\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2year\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"field\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"last_modified\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"cluster\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"id\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"last_modified\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"submit_time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"last_modified\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"sharded\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"account_info\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"private_key_id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"$ref\"</span><span class=\"p\">:</span> <span class=\"s2\">\"env://BIGQUERY_PRIVATE_KEY_ID\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"private_key\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"$ref\"</span><span class=\"p\">:</span> <span class=\"s2\">\"env://BIGQUERY_PRIVATE_KEY\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"service_account\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"project_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-project-id\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"client_email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"me@my_project.iam.gserviceaccount.com\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"client_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"auth_uri\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://accounts.google.com/o/oauth2/auth\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"token_uri\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://oauth2.googleapis.com/token\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"auth_provider_x509_cert_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.googleapis.com/oauth2/v1/certs\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"client_x509_cert_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.googleapis.com/robot/v1/metadata/x509/my-project.iam.gserviceaccount.com\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Usage</h2>\n<p>Setup <code>Dataset</code> with an application name</p>\n<pre>    <span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">(</span>\n        <span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"n\">application_name</span><span class=\"p\">,</span> \n        <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"n\">settings</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Create a table</p>\n<pre>    <span class=\"n\">destination</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">get_or_create_table</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">destination</span><span class=\"p\">)</span>\n</pre>\n<p>Insert documents as you please</p>\n<pre>    <span class=\"n\">destination</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">)</span>\n</pre>\n<p>Request a merge when done</p>\n<pre>    <span class=\"n\">destination</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">()</span>\n</pre>\n<h2>Running tests</h2>\n<p>Fork and clone this repo.</p>\n<pre><code>git clone https://github.com/klahnakoski/jx-bigquery.git \ncd jx-bigquery\npip install -r requirements.txt\n</code></pre>\n<p>You will require a Google API key to run tests. The website will allow you to generate one and download a JSON file with the key.  Update the <a href=\"https://github.com/klahnakoski/jx-bigquery/blob/dev/tests/config.json\" rel=\"nofollow\">tests/config.json</a> to point to that file:</p>\n<pre><code># contents of tests/config.json\n{\n  \"destination\": {\n    \"account_info\": {\n      \"$ref\": \"file:///e:/moz-fx-dev-ekyle-treeherder-a838a7718652.json\"\n    }\n  },\n  \"constants\": {},\n  \"debug\": {\n    \"trace\": true\n  }\n}\n</code></pre>\n<p>Then you can run the tests</p>\n<pre><code>python -m unittest discover tests\n</code></pre>\n<blockquote>\n<p><strong>NOTE</strong> - the tests will create a <code>testing</code> dataset and generate/drop tables</p>\n</blockquote>\n\n          </div>"}, "last_serial": 6995862, "releases": {"3.34.20028": [{"comment_text": "", "digests": {"md5": "04aaf263950b982d3daa338e3b0f5277", "sha256": "4fa437896a3d68711f70729725a6de0b4f3f61a69697c2e66decbc1960d132cb"}, "downloads": -1, "filename": "jx-bigquery-3.34.20028.tar.gz", "has_sig": false, "md5_digest": "04aaf263950b982d3daa338e3b0f5277", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, ==3.6, ==3.7, ==3.8", "size": 27390, "upload_time": "2020-01-28T22:52:35", "upload_time_iso_8601": "2020-01-28T22:52:35.359277Z", "url": "https://files.pythonhosted.org/packages/63/84/6f76d0dd6110f91ad2424271a7911584dd9825c30ce85bdf91beddd73e74/jx-bigquery-3.34.20028.tar.gz", "yanked": false}], "3.38.20029": [{"comment_text": "", "digests": {"md5": "57aeef19e3e6a0cb58791eb42bcf9240", "sha256": "d1a025a9566e2c737ba9a7aa6bf50e8e20733be6692e4322601e2e5c57f63741"}, "downloads": -1, "filename": "jx-bigquery-3.38.20029.tar.gz", "has_sig": false, "md5_digest": "57aeef19e3e6a0cb58791eb42bcf9240", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, ==3.6, ==3.7, ==3.8", "size": 27435, "upload_time": "2020-01-29T03:16:49", "upload_time_iso_8601": "2020-01-29T03:16:49.232522Z", "url": "https://files.pythonhosted.org/packages/7d/7d/0acc40f14795cb26aadd7a2e56ae458a9ecdb131ae08b327cf70bb83b785/jx-bigquery-3.38.20029.tar.gz", "yanked": false}], "3.42.20031": [{"comment_text": "", "digests": {"md5": "2056ee68d5757007d2513f96c36e41af", "sha256": "700e29c2fe57412db5bf6ca7e48cf735cb6581457116a6795c392b81b51f5869"}, "downloads": -1, "filename": "jx-bigquery-3.42.20031.tar.gz", "has_sig": false, "md5_digest": "2056ee68d5757007d2513f96c36e41af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28316, "upload_time": "2020-01-31T14:27:26", "upload_time_iso_8601": "2020-01-31T14:27:26.464168Z", "url": "https://files.pythonhosted.org/packages/97/5c/7d9a380500224c43f4d67bec782dc33303a26ae5d1959065e2891e7ab124/jx-bigquery-3.42.20031.tar.gz", "yanked": false}], "3.45.20031": [{"comment_text": "", "digests": {"md5": "c242552001170972fde7d7d422d5a1cd", "sha256": "153f2ca02c426770451329f76d4f622e470604a1bd607f446781cb7e1177bf7d"}, "downloads": -1, "filename": "jx-bigquery-3.45.20031.tar.gz", "has_sig": false, "md5_digest": "c242552001170972fde7d7d422d5a1cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28261, "upload_time": "2020-01-31T18:17:10", "upload_time_iso_8601": "2020-01-31T18:17:10.638484Z", "url": "https://files.pythonhosted.org/packages/40/e8/485ef668911bcda99d1acea6d380bf98dee251709439ffdc661c30f10bc0/jx-bigquery-3.45.20031.tar.gz", "yanked": false}], "3.47.20042": [{"comment_text": "", "digests": {"md5": "9d8e8e5ab68cdd3e59549fa416ba107f", "sha256": "ee99a6251f8c7a948a5ab3318c2c0eebe461519683bf7cae8e3c8e5548f6ff38"}, "downloads": -1, "filename": "jx-bigquery-3.47.20042.tar.gz", "has_sig": false, "md5_digest": "9d8e8e5ab68cdd3e59549fa416ba107f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28258, "upload_time": "2020-02-11T14:13:46", "upload_time_iso_8601": "2020-02-11T14:13:46.177323Z", "url": "https://files.pythonhosted.org/packages/96/5f/c04aa16fe920434ccb995e2494b6acb7920b184eebab7a6cd8c3a1c26bbc/jx-bigquery-3.47.20042.tar.gz", "yanked": false}], "3.48.20042": [{"comment_text": "", "digests": {"md5": "0cb090458be65f7a9b4b4fcad2331e22", "sha256": "c9e22d07fbf3cb5032ecaefa849ef422e2b5c7f87615bdfd3dd13b0b834d94a2"}, "downloads": -1, "filename": "jx-bigquery-3.48.20042.tar.gz", "has_sig": false, "md5_digest": "0cb090458be65f7a9b4b4fcad2331e22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29727, "upload_time": "2020-02-11T18:15:08", "upload_time_iso_8601": "2020-02-11T18:15:08.055943Z", "url": "https://files.pythonhosted.org/packages/d9/5e/c35409b2f4274a950ae8a0a629b3167cfd927dc543b7d2ee38db7657aa18/jx-bigquery-3.48.20042.tar.gz", "yanked": false}], "3.55.20074": [{"comment_text": "", "digests": {"md5": "d5f76eef9b0731c0aa418a6784fc58b4", "sha256": "f2920f4535fd91edef243a64404d13aa28e096d123f0827f5bc158bbed61379b"}, "downloads": -1, "filename": "jx-bigquery-3.55.20074.tar.gz", "has_sig": false, "md5_digest": "d5f76eef9b0731c0aa418a6784fc58b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32200, "upload_time": "2020-03-14T17:59:02", "upload_time_iso_8601": "2020-03-14T17:59:02.979076Z", "url": "https://files.pythonhosted.org/packages/52/9d/b4b5152f8b2c237312bae465e443f398179bde8d1ccc969cf9fcac6790c8/jx-bigquery-3.55.20074.tar.gz", "yanked": false}], "3.59.20089": [{"comment_text": "", "digests": {"md5": "1c1b1ffc44ad42a9cdcd76dff917601f", "sha256": "de42d7049c7b4e6ee207d556931cb3b7358736d990eaa705a2a4afc40b38212f"}, "downloads": -1, "filename": "jx-bigquery-3.59.20089.tar.gz", "has_sig": false, "md5_digest": "1c1b1ffc44ad42a9cdcd76dff917601f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32685, "upload_time": "2020-03-29T14:39:57", "upload_time_iso_8601": "2020-03-29T14:39:57.500607Z", "url": "https://files.pythonhosted.org/packages/f3/64/1a57867e05282a4ee9aded5d8fb1f716989f291e0f0671f9e9a8f834342c/jx-bigquery-3.59.20089.tar.gz", "yanked": false}], "3.61.20093": [{"comment_text": "", "digests": {"md5": "6338646c22d0772e0a6ced3edaef0188", "sha256": "6370d4ecca6f8a61a9fec62234aac59a304af76d319572a164132dd60e8540b0"}, "downloads": -1, "filename": "jx-bigquery-3.61.20093.tar.gz", "has_sig": false, "md5_digest": "6338646c22d0772e0a6ced3edaef0188", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32905, "upload_time": "2020-04-02T22:51:40", "upload_time_iso_8601": "2020-04-02T22:51:40.910218Z", "url": "https://files.pythonhosted.org/packages/2c/94/2388d91afc33e345060660bc43b4d9f91a613f7cb2438ed902aed97db8fc/jx-bigquery-3.61.20093.tar.gz", "yanked": false}], "3.62.20101": [{"comment_text": "", "digests": {"md5": "1961f106e575695d9a1f071c62ee5cb4", "sha256": "3e1f469177f856b9540ed727993fa12ddf451f671d372e446b129dfe8890abf7"}, "downloads": -1, "filename": "jx-bigquery-3.62.20101.tar.gz", "has_sig": false, "md5_digest": "1961f106e575695d9a1f071c62ee5cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33037, "upload_time": "2020-04-10T19:05:27", "upload_time_iso_8601": "2020-04-10T19:05:27.828700Z", "url": "https://files.pythonhosted.org/packages/22/6b/032fb9fa853c2341a236b08d9dab0583ba8f41a7d830c8460f70436b43a9/jx-bigquery-3.62.20101.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1961f106e575695d9a1f071c62ee5cb4", "sha256": "3e1f469177f856b9540ed727993fa12ddf451f671d372e446b129dfe8890abf7"}, "downloads": -1, "filename": "jx-bigquery-3.62.20101.tar.gz", "has_sig": false, "md5_digest": "1961f106e575695d9a1f071c62ee5cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33037, "upload_time": "2020-04-10T19:05:27", "upload_time_iso_8601": "2020-04-10T19:05:27.828700Z", "url": "https://files.pythonhosted.org/packages/22/6b/032fb9fa853c2341a236b08d9dab0583ba8f41a7d830c8460f70436b43a9/jx-bigquery-3.62.20101.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:59 2020"}