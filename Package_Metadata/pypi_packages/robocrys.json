{"info": {"author": "Alex Ganose", "author_email": "aganose@lbl.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Other/Nonlisted Topic", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "\n<p align=\"center\">\n  <img alt=\"robocrystallographer logo\" src=\"docs_rst/source/_static/logo-01.png\" height=\"200px\">\n</p>\n\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/robocrys/\"><img alt=\"PyPI version\" src=\"https://img.shields.io/pypi/v/robocrys.svg?colorB=blue\"> </a>\n  <a href=\"https://www.codacy.com/app/utf/robocrystallographer\"><img alt=\"Codacy Grade\" src=\"https://img.shields.io/codacy/grade/47f851408d364efa9a8cdf0ed844cd8b.svg\"> </a>\n  <a href=\"https://www.codacy.com/app/utf/robocrystallographer\"><img alt=\"Codacy Coverage\" src=\"https://img.shields.io/codacy/coverage/47f851408d364efa9a8cdf0ed844cd8b.svg?colorB=brightgreen\"> </a>\n<a href=\"https://circleci.com/gh/hackingmaterials/robocrystallographer\"><img alt=\"CircleCI\" src=\"https://img.shields.io/circleci/project/github/hackingmaterials/robocrystallographer/master.svg\"> </a>\n</p>\n\nRobocrystallographer is a tool to generate text descriptions of crystal\nstructures. Similar to how a real-life crystallographer would analyse a\nstructure, robocrystallographer looks at the symmetry, local environment, and\nextended connectivity when generating a description. The package includes\nutilities for identifying molecule names, component orientations,\nheterostructure information, and more...\n\n## Usage\n\nRobocrystallographer can be used from the command-line or from a python API.\nThe package integrates with the [Materials Project](https://materialsproject.org)\nto for allow generation of structure descriptions directly from Materials Project\nids. For example, to generate the description of SnO<sub>2</sub>\n([mp-856](https://materialsproject.org/materials/mp-856/)), one\ncan simply run:\n\n```bash\nrobocrys mp-856\n```\n\nAlternatively, a structure file can be specified in place of a Materials Project id.\nRobocrystallographer supports the same file formats as\n[pymatgen](http://pymatgen.org), including the Crystallographic Information\nFormat (CIF), and common electronic structure package formats such as POSCAR files.\nMore information can be found on the\n[command-line interface page](https://hackingmaterials.github.io/robocrystallographer/cli.html).\n\n### Python interface\n\nThe two core classes in robocrystallographer are:\n\n- `StructureCondenser`: to condense the structure into an descriptive JSON\n  representation.\n- `StructureDescriber`: to turn the condensed structure into a text description.\n\nA minimal working example for generating text descriptions is simply:\n\n```python\nfrom pymatgen import Structure\nfrom robocrys import StructureCondenser, StructureDescriber\n\nstructure = Structure.from_file(\"my_structure.cif\") # other file formats also supported\n\n# alternatively, uncomment the lines below to use the MPRester object\n#\u00a0to fetch structures from the Materials Project database\n# from pymatgen import MPRester\n# structure = MPRester(API_KEY=None).get_structure_by_material_id(\"mp-856\")\n\ncondenser = StructureCondenser()\ndescriber = StructureDescriber()\n\ncondensed_structure = condenser.condense_structure(structure)\ndescription = describer.describe(condensed_structure)\n```\n\nWhere `structure` is a pymatgen Structure object. Both classes have many\noptions for customising the output of the structure\ndescriptions. More information is provided in the\n[module documentation](https://hackingmaterials.github.io/robocrystallographer/modules).\n\n### Intermediate JSON format\n\nThe format of the intermediate JSON representation is detailed on the\n[condensed structure format page](https://hackingmaterials.github.io/robocrystallographer/format.html).\n\n\n### Example output\n\nAn example of the output generated by robocrystallographer for SnO<sub>2</sub> ([mp-856](https://materialsproject.org/materials/mp-856/)) is given below:\n\n<p align=\"center\">\n<img alt=\"SnO2 crystal structure\" src=\"https://raw.githubusercontent.com/hackingmaterials/robocrystallographer/master/docs/_static/rutile.jpg\" height=\n\"200px\">\n</p>\n\n```\n SnO2 is Rutile structured and crystallizes in the tetragonal P4_2/mnm space\n group. The structure is three-dimensional. Sn(1) is bonded to six equivalent\n O(1) atoms to form a mixture of edge and corner-sharing SnO6 octahedra. The\n corner-sharing octahedral tilt angles are 51\u00b0. All Sn(1)\u2013O(1) bond lengths\n are 2.09 \u00c5. O(1) is bonded in a trigonal planar geometry to three equivalent\n Sn(1) atoms.\n```\n\n## How to cite robocrystallographer\n\nPlease considering citing the following publication if using robocrystallographer in your work:\n\n> Ganose, A., & Jain, A. (2019). Robocrystallographer: Automated crystal structure  text descriptions and analysis. MRS Communications, 9(3), 874-881. https://doi.org/10.1557/mrc.2019.94\n\n## Installation\n\nRobocrystallographer can be installed using pip:\n\n```bash\npip install robocrys\n```\n\nRobocrystallographer requires Python 3.6+. The\n[OpenBabel](http://openbabel.org/wiki/Python)\npackage is required to determine molecule names. This is an optional\nrequirement but its use is recommended for best\nresults. If you are using the [Conda](https://conda.io/) package management\nsystem, OpenBabel can be installed using:\n\n```\nconda install -c conda-forge openbabel\n```\n\n## What\u2019s new?\n\nTrack changes to robocrystallographer through the\n[Changelog](https://hackingmaterials.github.io/robocrystallographer/changelog.html).\n\n## Contributing\n\nRobocrystallographer is in early development but we still welcome your\ncontributions. Please read our [contribution guidelines](https://hackingmaterials.github.io/robocrystallographer/contributing.html)\nfor more information. We maintain a list of all\ncontributors [here](https://hackingmaterials.github.io/robocrystallographer/contributors.html).\n\n## License\n\nRobocrystallographer is released under a modified BSD license;\nthe full text can be found\n[here](https://hackingmaterials.github.io/robocrystallographer/license.html).\n\n## Acknowledgements\n\nLogo by Somewan from the Noun Project.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hackingmaterials/robocrystallographer", "keywords": "crystal-structure crystallography materials-science", "license": "modified BSD", "maintainer": "", "maintainer_email": "", "name": "robocrys", "package_url": "https://pypi.org/project/robocrys/", "platform": "", "project_url": "https://pypi.org/project/robocrys/", "project_urls": {"Homepage": "https://github.com/hackingmaterials/robocrystallographer"}, "release_url": "https://pypi.org/project/robocrys/0.2.1/", "requires_dist": ["spglib", "numpy", "scipy", "pymatgen (>=2017.12.30)", "inflect", "networkx", "matminer (>=0.6.3)", "monty", "pubchempy", "pybtex", "tqdm ; extra == 'dev'", "pybel ; extra == 'dev'", "pebble ; extra == 'dev'", "maggma ; extra == 'dev'", "sphinx ; extra == 'docs'", "sphinx-argparse ; extra == 'docs'", "sphinx-autodoc-typehints ; extra == 'docs'", "m2r ; extra == 'docs'", "nose ; extra == 'tests'", "coverage ; extra == 'tests'", "coveralls ; extra == 'tests'"], "requires_python": "", "summary": "Automatic generation of crystal structure descriptions", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img alt=\"robocrystallographer logo\" height=\"200px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8dac4afb0fe98a48a56327d6d8c402b3ed4a59e0/646f63735f7273742f736f757263652f5f7374617469632f6c6f676f2d30312e706e67\">\n</p>\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/robocrys/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ed43f3709c07098e5d0d6357b4ee87be870c61b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f726f626f637279732e7376673f636f6c6f72423d626c7565\"> </a>\n  <a href=\"https://www.codacy.com/app/utf/robocrystallographer\" rel=\"nofollow\"><img alt=\"Codacy Grade\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41414e83223fd197ca74af5fb92c1ccedfa6f4dc/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f67726164652f34376638353134303864333634656661396138636466306564383434636438622e737667\"> </a>\n  <a href=\"https://www.codacy.com/app/utf/robocrystallographer\" rel=\"nofollow\"><img alt=\"Codacy Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8997a9d6ecd7591d87728105eb6224ec06f1ad7d/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f636f7665726167652f34376638353134303864333634656661396138636466306564383434636438622e7376673f636f6c6f72423d627269676874677265656e\"> </a>\n<a href=\"https://circleci.com/gh/hackingmaterials/robocrystallographer\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69d3befa912f08ec2125e3d8cda3cce108215f6b/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6861636b696e676d6174657269616c732f726f626f6372797374616c6c6f677261706865722f6d61737465722e737667\"> </a>\n</p>\n<p>Robocrystallographer is a tool to generate text descriptions of crystal\nstructures. Similar to how a real-life crystallographer would analyse a\nstructure, robocrystallographer looks at the symmetry, local environment, and\nextended connectivity when generating a description. The package includes\nutilities for identifying molecule names, component orientations,\nheterostructure information, and more...</p>\n<h2>Usage</h2>\n<p>Robocrystallographer can be used from the command-line or from a python API.\nThe package integrates with the <a href=\"https://materialsproject.org\" rel=\"nofollow\">Materials Project</a>\nto for allow generation of structure descriptions directly from Materials Project\nids. For example, to generate the description of SnO<sub>2</sub>\n(<a href=\"https://materialsproject.org/materials/mp-856/\" rel=\"nofollow\">mp-856</a>), one\ncan simply run:</p>\n<pre>robocrys mp-856\n</pre>\n<p>Alternatively, a structure file can be specified in place of a Materials Project id.\nRobocrystallographer supports the same file formats as\n<a href=\"http://pymatgen.org\" rel=\"nofollow\">pymatgen</a>, including the Crystallographic Information\nFormat (CIF), and common electronic structure package formats such as POSCAR files.\nMore information can be found on the\n<a href=\"https://hackingmaterials.github.io/robocrystallographer/cli.html\" rel=\"nofollow\">command-line interface page</a>.</p>\n<h3>Python interface</h3>\n<p>The two core classes in robocrystallographer are:</p>\n<ul>\n<li><code>StructureCondenser</code>: to condense the structure into an descriptive JSON\nrepresentation.</li>\n<li><code>StructureDescriber</code>: to turn the condensed structure into a text description.</li>\n</ul>\n<p>A minimal working example for generating text descriptions is simply:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymatgen</span> <span class=\"kn\">import</span> <span class=\"n\">Structure</span>\n<span class=\"kn\">from</span> <span class=\"nn\">robocrys</span> <span class=\"kn\">import</span> <span class=\"n\">StructureCondenser</span><span class=\"p\">,</span> <span class=\"n\">StructureDescriber</span>\n\n<span class=\"n\">structure</span> <span class=\"o\">=</span> <span class=\"n\">Structure</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s2\">\"my_structure.cif\"</span><span class=\"p\">)</span> <span class=\"c1\"># other file formats also supported</span>\n\n<span class=\"c1\"># alternatively, uncomment the lines below to use the MPRester object</span>\n<span class=\"c1\">#\u00a0to fetch structures from the Materials Project database</span>\n<span class=\"c1\"># from pymatgen import MPRester</span>\n<span class=\"c1\"># structure = MPRester(API_KEY=None).get_structure_by_material_id(\"mp-856\")</span>\n\n<span class=\"n\">condenser</span> <span class=\"o\">=</span> <span class=\"n\">StructureCondenser</span><span class=\"p\">()</span>\n<span class=\"n\">describer</span> <span class=\"o\">=</span> <span class=\"n\">StructureDescriber</span><span class=\"p\">()</span>\n\n<span class=\"n\">condensed_structure</span> <span class=\"o\">=</span> <span class=\"n\">condenser</span><span class=\"o\">.</span><span class=\"n\">condense_structure</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span>\n<span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">describer</span><span class=\"o\">.</span><span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"n\">condensed_structure</span><span class=\"p\">)</span>\n</pre>\n<p>Where <code>structure</code> is a pymatgen Structure object. Both classes have many\noptions for customising the output of the structure\ndescriptions. More information is provided in the\n<a href=\"https://hackingmaterials.github.io/robocrystallographer/modules\" rel=\"nofollow\">module documentation</a>.</p>\n<h3>Intermediate JSON format</h3>\n<p>The format of the intermediate JSON representation is detailed on the\n<a href=\"https://hackingmaterials.github.io/robocrystallographer/format.html\" rel=\"nofollow\">condensed structure format page</a>.</p>\n<h3>Example output</h3>\n<p>An example of the output generated by robocrystallographer for SnO<sub>2</sub> (<a href=\"https://materialsproject.org/materials/mp-856/\" rel=\"nofollow\">mp-856</a>) is given below:</p>\n<p align=\"center\">\n<img alt=\"SnO2 crystal structure\" height=\"200px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54c0a91bb6de66fbf77c422a8844ceb150a987dd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6861636b696e676d6174657269616c732f726f626f6372797374616c6c6f677261706865722f6d61737465722f646f63732f5f7374617469632f727574696c652e6a7067\">\n</p>\n<pre><code> SnO2 is Rutile structured and crystallizes in the tetragonal P4_2/mnm space\n group. The structure is three-dimensional. Sn(1) is bonded to six equivalent\n O(1) atoms to form a mixture of edge and corner-sharing SnO6 octahedra. The\n corner-sharing octahedral tilt angles are 51\u00b0. All Sn(1)\u2013O(1) bond lengths\n are 2.09 \u00c5. O(1) is bonded in a trigonal planar geometry to three equivalent\n Sn(1) atoms.\n</code></pre>\n<h2>How to cite robocrystallographer</h2>\n<p>Please considering citing the following publication if using robocrystallographer in your work:</p>\n<blockquote>\n<p>Ganose, A., &amp; Jain, A. (2019). Robocrystallographer: Automated crystal structure  text descriptions and analysis. MRS Communications, 9(3), 874-881. <a href=\"https://doi.org/10.1557/mrc.2019.94\" rel=\"nofollow\">https://doi.org/10.1557/mrc.2019.94</a></p>\n</blockquote>\n<h2>Installation</h2>\n<p>Robocrystallographer can be installed using pip:</p>\n<pre>pip install robocrys\n</pre>\n<p>Robocrystallographer requires Python 3.6+. The\n<a href=\"http://openbabel.org/wiki/Python\" rel=\"nofollow\">OpenBabel</a>\npackage is required to determine molecule names. This is an optional\nrequirement but its use is recommended for best\nresults. If you are using the <a href=\"https://conda.io/\" rel=\"nofollow\">Conda</a> package management\nsystem, OpenBabel can be installed using:</p>\n<pre><code>conda install -c conda-forge openbabel\n</code></pre>\n<h2>What\u2019s new?</h2>\n<p>Track changes to robocrystallographer through the\n<a href=\"https://hackingmaterials.github.io/robocrystallographer/changelog.html\" rel=\"nofollow\">Changelog</a>.</p>\n<h2>Contributing</h2>\n<p>Robocrystallographer is in early development but we still welcome your\ncontributions. Please read our <a href=\"https://hackingmaterials.github.io/robocrystallographer/contributing.html\" rel=\"nofollow\">contribution guidelines</a>\nfor more information. We maintain a list of all\ncontributors <a href=\"https://hackingmaterials.github.io/robocrystallographer/contributors.html\" rel=\"nofollow\">here</a>.</p>\n<h2>License</h2>\n<p>Robocrystallographer is released under a modified BSD license;\nthe full text can be found\n<a href=\"https://hackingmaterials.github.io/robocrystallographer/license.html\" rel=\"nofollow\">here</a>.</p>\n<h2>Acknowledgements</h2>\n<p>Logo by Somewan from the Noun Project.</p>\n\n          </div>"}, "last_serial": 7166756, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "93d3b8cbb12be6fe85f72f0ef9ce1d0a", "sha256": "e2b4ae60446cbd3f5991b4e3de0250fa39486acf40f286a6120848054bbb5e0e"}, "downloads": -1, "filename": "robocrys-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "93d3b8cbb12be6fe85f72f0ef9ce1d0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3820266, "upload_time": "2018-12-18T23:53:09", "upload_time_iso_8601": "2018-12-18T23:53:09.880835Z", "url": "https://files.pythonhosted.org/packages/86/b0/1414adfb8f1e620315efc7c96ef9c789cc8217626070ee4e7e0abc4501f9/robocrys-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c907321ae2775e140c5078b9d7fde93", "sha256": "1febd2f2ec9d14e0498c3b0d46534a34ffdfb4b2922f7a3514401ff551fd10be"}, "downloads": -1, "filename": "robocrys-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c907321ae2775e140c5078b9d7fde93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3814229, "upload_time": "2018-12-18T23:53:12", "upload_time_iso_8601": "2018-12-18T23:53:12.912950Z", "url": "https://files.pythonhosted.org/packages/d9/8b/4ef6dc375e4509865006ac75dfd12bb90bc302d1be893c9a752345f337a6/robocrys-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "db4231776bfee7c7ff609c0638813a98", "sha256": "7d3d00e02b513d0511a98653b7e986abcaee52e5293b7369d52b05206444ad58"}, "downloads": -1, "filename": "robocrys-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db4231776bfee7c7ff609c0638813a98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3820498, "upload_time": "2018-12-19T05:54:43", "upload_time_iso_8601": "2018-12-19T05:54:43.269876Z", "url": "https://files.pythonhosted.org/packages/fc/24/64d8d5649322277ab64195641e04a9d4324a6372b98253f9f5d4d7ade2bb/robocrys-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7d11a45c736e611dbd08fbd2d1a9307", "sha256": "f74f9bd6b89a7523205c11e8ba0a0796f46cc4ecd1beb9229b4df5aecce5d92e"}, "downloads": -1, "filename": "robocrys-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d7d11a45c736e611dbd08fbd2d1a9307", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3812644, "upload_time": "2018-12-19T05:54:47", "upload_time_iso_8601": "2018-12-19T05:54:47.704454Z", "url": "https://files.pythonhosted.org/packages/5e/68/b74673a1feceea15e3eb85cdce97f4099f3f5e885c8c24283003d765478a/robocrys-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4d4c1a280f2864a4c7fe7a4c05461e90", "sha256": "7ccf7996cd609d631b346195245b4b1eeae822be90908f3fa6d005ad008528f6"}, "downloads": -1, "filename": "robocrys-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4d4c1a280f2864a4c7fe7a4c05461e90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3820515, "upload_time": "2018-12-19T05:57:28", "upload_time_iso_8601": "2018-12-19T05:57:28.518177Z", "url": "https://files.pythonhosted.org/packages/dc/22/fb0957ef96006d67e916b5d06824c261bb80b5c657e53494b8fe8bbd801a/robocrys-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b49a4480e29b4aa86eaaaad64a3458f2", "sha256": "8cfc1f38b0b679ef2d17ffec965b4db87c753c84f89d3d168205858c6907f916"}, "downloads": -1, "filename": "robocrys-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b49a4480e29b4aa86eaaaad64a3458f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3812673, "upload_time": "2018-12-19T05:57:33", "upload_time_iso_8601": "2018-12-19T05:57:33.084583Z", "url": "https://files.pythonhosted.org/packages/ea/93/2937b659f426cbe59db5ebf60dc7fac7559756e90cd41870c9c316328c9d/robocrys-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9fa736ded70e3cbaab90164d203c5613", "sha256": "746dc2730e4a425d23ebe9b98a7aee095197a7e197d49594651c2e4ea6c3ae18"}, "downloads": -1, "filename": "robocrys-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9fa736ded70e3cbaab90164d203c5613", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3819341, "upload_time": "2018-12-19T19:10:52", "upload_time_iso_8601": "2018-12-19T19:10:52.667353Z", "url": "https://files.pythonhosted.org/packages/61/bc/f2549e252658341cf5cf8394e9a2040fb71b869d51f00f99dc4cd62e888b/robocrys-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58485760ec584ac577191d92b56090ce", "sha256": "cfcabc99ebb533da2dd4a6c59ff64905a372e848954fab64f191143470f0dc8e"}, "downloads": -1, "filename": "robocrys-0.1.3.tar.gz", "has_sig": false, "md5_digest": "58485760ec584ac577191d92b56090ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3814970, "upload_time": "2018-12-19T19:10:54", "upload_time_iso_8601": "2018-12-19T19:10:54.971321Z", "url": "https://files.pythonhosted.org/packages/04/56/74d5d6d92b31241a47e87452f6dda611073c8423edd4163008ecc908e458/robocrys-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e9fed761f33edc3090ae8fd6c9929c47", "sha256": "4a4240bd7fd1e95c85d106647173216945fe7f17fb12d37884e1b8a9ac28b261"}, "downloads": -1, "filename": "robocrys-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9fed761f33edc3090ae8fd6c9929c47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3837795, "upload_time": "2020-05-04T19:20:52", "upload_time_iso_8601": "2020-05-04T19:20:52.597186Z", "url": "https://files.pythonhosted.org/packages/85/ac/1f553b6f4f2b930fcfbb179930210cac5c228a5c1f8aa56c0955492b95a1/robocrys-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39248a129028f453dcd0552030ba7400", "sha256": "d11b34ea5e6e3b561c3d471af3bf39d792ad57ead6f19bfaee5f6f9e167261c4"}, "downloads": -1, "filename": "robocrys-0.2.0.tar.gz", "has_sig": false, "md5_digest": "39248a129028f453dcd0552030ba7400", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3823347, "upload_time": "2020-05-04T19:20:55", "upload_time_iso_8601": "2020-05-04T19:20:55.043245Z", "url": "https://files.pythonhosted.org/packages/ec/09/ec3e5f6475919a563ea2376bdec59505f9153f8666ce2728239f1d50f45f/robocrys-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3fcef4365053dc565fcfa4d03950e94a", "sha256": "9d298def59e86bce9b79abc7edc15d8e5b508925ab40405658d8d24e73b6c199"}, "downloads": -1, "filename": "robocrys-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3fcef4365053dc565fcfa4d03950e94a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3837794, "upload_time": "2020-05-04T19:27:37", "upload_time_iso_8601": "2020-05-04T19:27:37.839630Z", "url": "https://files.pythonhosted.org/packages/81/16/b2d10bfbb7d2d9c0b23558114af1cd2753cea607d591988be0f83545da8b/robocrys-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fec7c7fdd93f1ab4a8c35e11e1631201", "sha256": "f082e2c3141130c4aa1227b6f1907a76181eb8502ccb38017c8bc59eed048292"}, "downloads": -1, "filename": "robocrys-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fec7c7fdd93f1ab4a8c35e11e1631201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3823335, "upload_time": "2020-05-04T19:27:40", "upload_time_iso_8601": "2020-05-04T19:27:40.390342Z", "url": "https://files.pythonhosted.org/packages/99/b0/aad34a4a8a95bda8c17ea291f0f61672b21f7bfe105f7b77580467084a42/robocrys-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3fcef4365053dc565fcfa4d03950e94a", "sha256": "9d298def59e86bce9b79abc7edc15d8e5b508925ab40405658d8d24e73b6c199"}, "downloads": -1, "filename": "robocrys-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3fcef4365053dc565fcfa4d03950e94a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3837794, "upload_time": "2020-05-04T19:27:37", "upload_time_iso_8601": "2020-05-04T19:27:37.839630Z", "url": "https://files.pythonhosted.org/packages/81/16/b2d10bfbb7d2d9c0b23558114af1cd2753cea607d591988be0f83545da8b/robocrys-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fec7c7fdd93f1ab4a8c35e11e1631201", "sha256": "f082e2c3141130c4aa1227b6f1907a76181eb8502ccb38017c8bc59eed048292"}, "downloads": -1, "filename": "robocrys-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fec7c7fdd93f1ab4a8c35e11e1631201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3823335, "upload_time": "2020-05-04T19:27:40", "upload_time_iso_8601": "2020-05-04T19:27:40.390342Z", "url": "https://files.pythonhosted.org/packages/99/b0/aad34a4a8a95bda8c17ea291f0f61672b21f7bfe105f7b77580467084a42/robocrys-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:03 2020"}