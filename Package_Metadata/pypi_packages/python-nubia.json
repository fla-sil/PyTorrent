{"info": {"author": "Ahmed Soliman", "author_email": "asoli@fb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# python-nubia\n\n[![Build Status](https://travis-ci.com/facebookincubator/python-nubia.svg?token=aPxsLj8RpMSsSYqaqL5e&branch=master)](https://travis-ci.com/facebookincubator/python-nubia)\n[![Coverage](https://codecov.io/gh/facebookincubator/python-nubia/branch/master/graph/badge.svg)](https://codecov.io/github/facebookincubator/python-nubia)\n[![PyPI version](https://badge.fury.io/py/python-nubia.svg)](https://badge.fury.io/py/python-nubia)\n\nNubia is a lightweight framework for building command-line applications with Python. It was originally designed for the \u201clogdevice interactive shell (aka. `ldshell`)\u201d at Facebook. Since then it was factored out to be a reusable component and several internal Facebook projects now rely on it as a quick and easy way to get an intuitive shell/cli application without too much boilerplate.\n\nNubia is built on top of [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit) which is a fantastic toolkit for building interactive command-line applications.\n\n_Disclaimer: Nubia is beta for non-ldshell use-cases. Some of the design decisions might sound odd but they fit the ldshell usecase perfectly. We are continuously making changes to make it more consistent and generic outside of the ldshell use-case. Until a fully stable release is published, use it on your own risk._\n\nSee the [CONTRIBUTING](CONTRIBUTING.md) file for how to help out.\n\nIf you are curious on the origins of the name, checkout [Nubia on Wikipedia](https://en.wikipedia.org/wiki/Nubia) with its unique and colourful architecture.\n\n## Key Features\n\n* Interactive mode that offers fish-style auto-completion\n* CLI mode that gets generated from your functions and classes.\n* Optional bash/zsh completions via an external utility \u2018nubia-complete\u2019 (experimental)\n* A customisable status-bar in interactive mode.\n* An optional IPython-based interactive shell\n* Arguments with underscores are automatically hyphenated\n* Python3 type annotations are used for input type validation\n\n### Interactive mode\nThe interactive mode in Nubia is what makes it unique. It is very easy to build a unique shell for your program with zero overhead. The interactive shell in its simplistic form offers automatic completions for commands, sub-commands, arguments, and values. It also offers a great deal of control for developers to take control over  auto-completions, even for commands that do not fall under the typical format. An example is the \u201cselect\u201d command in ldshell which is expressed as a SQL-query. We expect that most use cases of Nubia will not need such control and the AutoCommand will be enough without further customisation.\n\nIf you start a nubia-based program without a command, it automatically starts an interactive shell. The interactive mode looks like this:\n\n![Interactive Demo](docs/interactive.gif?raw=true \"Interactive demo\")\n\n### Non-interactive mode\nThe CLI mode works exactly like any traditional unix-based command line utility.\n![Non-interactive Demo](docs/non_interactive.png?raw=true \"Non-interactive demo\")\n\n## Examples\nIt starts with a function like this:\n```py\nimport socket\nimport typing\n\nfrom termcolor import cprint\nfrom nubia import argument, command, context\n\n@command\n@argument(\"hosts\", description=\"Hostnames to resolve\", aliases=[\"i\"])\n@argument(\"bad_name\", name=\"nice\", description=\"testing\")\ndef lookup(hosts: typing.List[str], bad_name: int):\n    \"\"\"\n    This will lookup the hostnames and print the corresponding IP addresses\n    \"\"\"\n    ctx = context.get_context()\n    print(f\"hosts: {hosts}\")\n    cprint(f\"Verbose? {ctx.verbose}\")\n\n    for host in hosts:\n        cprint(f\"{host} is {socket.gethostbyname(host)}\")\n\n    # optional, by default it's 0\n    return 0\n```\n\n## Requirements\n\nNubia-based applications require python 3.6+ and works with both Mac OS X or Linux. While in theory it should work on Windows, it has never been tried.\n\n## Installing Nubia\n\nIf you are installing nubia for your next project, you should be able to easily use pip for that:\n```bash\npip3 install python-nubia\n```\n\n## Building Nubia from source\n\nYou can either setup.py to build a tarball, or use pipenv to setup a virtualenv with all the dependencies installed.\n\n## Running example in virtualenv:\n\nIt's often best to create a virtualenv to contain the dependencies required for python-nubia project.\n```bash\npython3 -m venv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\n```\n\nIf you would like to run the example, then you need to add the root of the source tree into your PYTHONPATH.\n```bash\nvirtualenv .venv\nsource .venv/bin/activate\n\nexport PYTHONPATH=\"$(pwd)\"\npython3 example/nubia_example.py\n```\n\nTo run the unit tests:\n\nFrom within the virtualenv you can use nosetests:\n```bash\nnosetests\n```\n\nOr if you don't want to create a virtualenv, just use:\n```bash\npython3 setup.py nosetests\n```\n\n## Getting Started\n\nSee the [getting started](GETTING_STARTED.md) guide to learn how to build a simple application with Nubia.\n\n## License\npython-nubia is BSD licensed, as found in the LICENSE file.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/facebookincubator/python-nubia", "keywords": "cli shell interactive framework", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-nubia", "package_url": "https://pypi.org/project/python-nubia/", "platform": "", "project_url": "https://pypi.org/project/python-nubia/", "project_urls": {"Homepage": "https://github.com/facebookincubator/python-nubia"}, "release_url": "https://pypi.org/project/python-nubia/0.2b2/", "requires_dist": ["jellyfish", "prettytable", "prompt-toolkit (>=2)", "Pygments", "pyparsing (>=2.2.0)", "termcolor", "wcwidth", "dataclasses ; python_version < \"3.7\""], "requires_python": ">=3.6", "summary": "A framework for building beautiful shells", "version": "0.2b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-nubia</h1>\n<p><a href=\"https://travis-ci.com/facebookincubator/python-nubia\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d1ef48c38e9b60feb59b9dac96d78a204a40f8c/68747470733a2f2f7472617669732d63692e636f6d2f66616365626f6f6b696e63756261746f722f707974686f6e2d6e756269612e7376673f746f6b656e3d615078734c6a3852704d537353597161714c3565266272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/facebookincubator/python-nubia\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4cd2ecb5b5fd174f7affee2c1c633fdc997bb5c9/68747470733a2f2f636f6465636f762e696f2f67682f66616365626f6f6b696e63756261746f722f707974686f6e2d6e756269612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/python-nubia\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37f7f2e8865ecfdfc637cb0f0d2269c726bdb759/68747470733a2f2f62616467652e667572792e696f2f70792f707974686f6e2d6e756269612e737667\"></a></p>\n<p>Nubia is a lightweight framework for building command-line applications with Python. It was originally designed for the \u201clogdevice interactive shell (aka. <code>ldshell</code>)\u201d at Facebook. Since then it was factored out to be a reusable component and several internal Facebook projects now rely on it as a quick and easy way to get an intuitive shell/cli application without too much boilerplate.</p>\n<p>Nubia is built on top of <a href=\"https://github.com/jonathanslenders/python-prompt-toolkit\" rel=\"nofollow\">python-prompt-toolkit</a> which is a fantastic toolkit for building interactive command-line applications.</p>\n<p><em>Disclaimer: Nubia is beta for non-ldshell use-cases. Some of the design decisions might sound odd but they fit the ldshell usecase perfectly. We are continuously making changes to make it more consistent and generic outside of the ldshell use-case. Until a fully stable release is published, use it on your own risk.</em></p>\n<p>See the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a> file for how to help out.</p>\n<p>If you are curious on the origins of the name, checkout <a href=\"https://en.wikipedia.org/wiki/Nubia\" rel=\"nofollow\">Nubia on Wikipedia</a> with its unique and colourful architecture.</p>\n<h2>Key Features</h2>\n<ul>\n<li>Interactive mode that offers fish-style auto-completion</li>\n<li>CLI mode that gets generated from your functions and classes.</li>\n<li>Optional bash/zsh completions via an external utility \u2018nubia-complete\u2019 (experimental)</li>\n<li>A customisable status-bar in interactive mode.</li>\n<li>An optional IPython-based interactive shell</li>\n<li>Arguments with underscores are automatically hyphenated</li>\n<li>Python3 type annotations are used for input type validation</li>\n</ul>\n<h3>Interactive mode</h3>\n<p>The interactive mode in Nubia is what makes it unique. It is very easy to build a unique shell for your program with zero overhead. The interactive shell in its simplistic form offers automatic completions for commands, sub-commands, arguments, and values. It also offers a great deal of control for developers to take control over  auto-completions, even for commands that do not fall under the typical format. An example is the \u201cselect\u201d command in ldshell which is expressed as a SQL-query. We expect that most use cases of Nubia will not need such control and the AutoCommand will be enough without further customisation.</p>\n<p>If you start a nubia-based program without a command, it automatically starts an interactive shell. The interactive mode looks like this:</p>\n<p><img alt=\"Interactive Demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7776be86a1a911f2ac22e63fa26705afadb4a19/646f63732f696e7465726163746976652e6769663f7261773d74727565\"></p>\n<h3>Non-interactive mode</h3>\n<p>The CLI mode works exactly like any traditional unix-based command line utility.\n<img alt=\"Non-interactive Demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85adb9a2c0197240abfe180d8974bdc025a7bb31/646f63732f6e6f6e5f696e7465726163746976652e706e673f7261773d74727565\"></p>\n<h2>Examples</h2>\n<p>It starts with a function like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n<span class=\"kn\">import</span> <span class=\"nn\">typing</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">termcolor</span> <span class=\"kn\">import</span> <span class=\"n\">cprint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nubia</span> <span class=\"kn\">import</span> <span class=\"n\">argument</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">context</span>\n\n<span class=\"nd\">@command</span>\n<span class=\"nd\">@argument</span><span class=\"p\">(</span><span class=\"s2\">\"hosts\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Hostnames to resolve\"</span><span class=\"p\">,</span> <span class=\"n\">aliases</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"i\"</span><span class=\"p\">])</span>\n<span class=\"nd\">@argument</span><span class=\"p\">(</span><span class=\"s2\">\"bad_name\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"nice\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"testing\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">lookup</span><span class=\"p\">(</span><span class=\"n\">hosts</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">bad_name</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    This will lookup the hostnames and print the corresponding IP addresses</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">get_context</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"hosts: </span><span class=\"si\">{</span><span class=\"n\">hosts</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"n\">cprint</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Verbose? </span><span class=\"si\">{</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">host</span> <span class=\"ow\">in</span> <span class=\"n\">hosts</span><span class=\"p\">:</span>\n        <span class=\"n\">cprint</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">host</span><span class=\"si\">}</span><span class=\"s2\"> is </span><span class=\"si\">{</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">gethostbyname</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># optional, by default it's 0</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span>\n</pre>\n<h2>Requirements</h2>\n<p>Nubia-based applications require python 3.6+ and works with both Mac OS X or Linux. While in theory it should work on Windows, it has never been tried.</p>\n<h2>Installing Nubia</h2>\n<p>If you are installing nubia for your next project, you should be able to easily use pip for that:</p>\n<pre>pip3 install python-nubia\n</pre>\n<h2>Building Nubia from source</h2>\n<p>You can either setup.py to build a tarball, or use pipenv to setup a virtualenv with all the dependencies installed.</p>\n<h2>Running example in virtualenv:</h2>\n<p>It's often best to create a virtualenv to contain the dependencies required for python-nubia project.</p>\n<pre>python3 -m venv .venv\n<span class=\"nb\">source</span> .venv/bin/activate\npip install -r requirements.txt\n</pre>\n<p>If you would like to run the example, then you need to add the root of the source tree into your PYTHONPATH.</p>\n<pre>virtualenv .venv\n<span class=\"nb\">source</span> .venv/bin/activate\n\n<span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span><span class=\"s2\">\"</span>\npython3 example/nubia_example.py\n</pre>\n<p>To run the unit tests:</p>\n<p>From within the virtualenv you can use nosetests:</p>\n<pre>nosetests\n</pre>\n<p>Or if you don't want to create a virtualenv, just use:</p>\n<pre>python3 setup.py nosetests\n</pre>\n<h2>Getting Started</h2>\n<p>See the <a href=\"GETTING_STARTED.md\" rel=\"nofollow\">getting started</a> guide to learn how to build a simple application with Nubia.</p>\n<h2>License</h2>\n<p>python-nubia is BSD licensed, as found in the LICENSE file.</p>\n\n          </div>"}, "last_serial": 6218574, "releases": {"0.1b2": [{"comment_text": "", "digests": {"md5": "42d6520526dd69c65b461f2a00d102ec", "sha256": "39acde22176d79cc06de7051e6a4f63dcdea9400979d42b89c097b7f2968b683"}, "downloads": -1, "filename": "python_nubia-0.1b2-py3-none-any.whl", "has_sig": false, "md5_digest": "42d6520526dd69c65b461f2a00d102ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 63064, "upload_time": "2018-08-30T16:06:34", "upload_time_iso_8601": "2018-08-30T16:06:34.027259Z", "url": "https://files.pythonhosted.org/packages/9e/38/7d804c0e2ae06a460a4be06f76935a0ab9e90b67774c1a00d83b94d250c1/python_nubia-0.1b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4962fb883a59cec47a006e3e77c1d03", "sha256": "9f0d7254376778f6e7e7e992728a066f7b5acbc0d15dc5d04e31ebb65a310cbc"}, "downloads": -1, "filename": "python-nubia-0.1b2.tar.gz", "has_sig": false, "md5_digest": "a4962fb883a59cec47a006e3e77c1d03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 46813, "upload_time": "2018-08-30T16:06:35", "upload_time_iso_8601": "2018-08-30T16:06:35.531830Z", "url": "https://files.pythonhosted.org/packages/9c/c6/0fa0d2d33b00a82224233062c1f63fbb132b293baf682534364a15ab6fdb/python-nubia-0.1b2.tar.gz", "yanked": false}], "0.1b4": [{"comment_text": "", "digests": {"md5": "d331e20bb4bac1e8232c81a41077f7b5", "sha256": "b264bb52a3b22c8e329332bb33f9cdde10fff3da8a71b1d78cf4cc1227b1572c"}, "downloads": -1, "filename": "python_nubia-0.1b4-py3-none-any.whl", "has_sig": false, "md5_digest": "d331e20bb4bac1e8232c81a41077f7b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 64575, "upload_time": "2019-01-08T11:50:55", "upload_time_iso_8601": "2019-01-08T11:50:55.939366Z", "url": "https://files.pythonhosted.org/packages/25/02/4b5b6f4b8c05386f59e9fc0f60971c1d482c601dae807cee10d1045919b2/python_nubia-0.1b4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33942ba417e69068beaea0e2868202ce", "sha256": "2dde4242a8d7c33472568348782c584172982ef51e732d03305b7bc450a828b4"}, "downloads": -1, "filename": "python-nubia-0.1b4.tar.gz", "has_sig": false, "md5_digest": "33942ba417e69068beaea0e2868202ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45199, "upload_time": "2019-01-08T11:50:57", "upload_time_iso_8601": "2019-01-08T11:50:57.331390Z", "url": "https://files.pythonhosted.org/packages/c0/77/7f0ea2f1a3078abec0facfffcdb5eaa81eaf2d25c95bd36c4017658d3e82/python-nubia-0.1b4.tar.gz", "yanked": false}], "0.1b5": [{"comment_text": "", "digests": {"md5": "8d82335fdf09b7de4e04985653a79af5", "sha256": "a9dc3aa2a15c0eb0b21762ce13f9a020c9bc703b45f7c34cd161597f2ef2948b"}, "downloads": -1, "filename": "python-nubia-0.1b5.tar.gz", "has_sig": false, "md5_digest": "8d82335fdf09b7de4e04985653a79af5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45934, "upload_time": "2019-04-29T11:40:06", "upload_time_iso_8601": "2019-04-29T11:40:06.538780Z", "url": "https://files.pythonhosted.org/packages/f9/22/9f012c6aa84ee53e32460e846a658b145579adc28401ce7762fb3e38a127/python-nubia-0.1b5.tar.gz", "yanked": false}], "0.1b6": [{"comment_text": "", "digests": {"md5": "9cf958701dd5e4f6396d41ad5379733c", "sha256": "6800063850825c2889c7c9ef045581908c5b0adbc8cdc4b6a97087b81f640aeb"}, "downloads": -1, "filename": "python-nubia-0.1b6.tar.gz", "has_sig": false, "md5_digest": "9cf958701dd5e4f6396d41ad5379733c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45999, "upload_time": "2019-04-29T16:32:21", "upload_time_iso_8601": "2019-04-29T16:32:21.954802Z", "url": "https://files.pythonhosted.org/packages/ce/d7/cc4ad9fbda9041c56501e5ebe6b40ec62fbdf9387f0b5c72107f59f681e6/python-nubia-0.1b6.tar.gz", "yanked": false}], "0.2b1": [{"comment_text": "", "digests": {"md5": "9b90e55a8c760868ac6b51a006ea82e7", "sha256": "146662a2f950704db6ad782d418c8d9bf6ad65f4ce42aef23e0129d710c8ab30"}, "downloads": -1, "filename": "python-nubia-0.2b1.tar.gz", "has_sig": false, "md5_digest": "9b90e55a8c760868ac6b51a006ea82e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51831, "upload_time": "2019-06-01T11:14:52", "upload_time_iso_8601": "2019-06-01T11:14:52.506561Z", "url": "https://files.pythonhosted.org/packages/47/f9/139357a16cd835b3b38fbf6e53bab80867c68bb8b582cd6c3abe51e7ab1d/python-nubia-0.2b1.tar.gz", "yanked": false}], "0.2b2": [{"comment_text": "", "digests": {"md5": "0efa825ad6b4e881a75c06f922756e7f", "sha256": "0081d4b1615b07f51d739167e92fcfc6265baa7810066e5713adcdf5033d5894"}, "downloads": -1, "filename": "python_nubia-0.2b2-py3-none-any.whl", "has_sig": false, "md5_digest": "0efa825ad6b4e881a75c06f922756e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 68625, "upload_time": "2019-11-29T14:39:55", "upload_time_iso_8601": "2019-11-29T14:39:55.505735Z", "url": "https://files.pythonhosted.org/packages/47/32/b0b097aa7249e099997491cd6c56a587b2c7246fa8e1c3b466100d1fcdc6/python_nubia-0.2b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8db0e829cc33b69d946ab27d919d5aaa", "sha256": "e4903f7dcaabf3a06eeb3877158aadf7dd91d7311005e1734920f61a77c352fd"}, "downloads": -1, "filename": "python-nubia-0.2b2.tar.gz", "has_sig": false, "md5_digest": "8db0e829cc33b69d946ab27d919d5aaa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53677, "upload_time": "2019-11-29T14:39:57", "upload_time_iso_8601": "2019-11-29T14:39:57.446415Z", "url": "https://files.pythonhosted.org/packages/5b/11/6b71d3b5fee9a6ad0c6a0ac505215dfc82d3e3392b838d2ce8bc375304b6/python-nubia-0.2b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0efa825ad6b4e881a75c06f922756e7f", "sha256": "0081d4b1615b07f51d739167e92fcfc6265baa7810066e5713adcdf5033d5894"}, "downloads": -1, "filename": "python_nubia-0.2b2-py3-none-any.whl", "has_sig": false, "md5_digest": "0efa825ad6b4e881a75c06f922756e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 68625, "upload_time": "2019-11-29T14:39:55", "upload_time_iso_8601": "2019-11-29T14:39:55.505735Z", "url": "https://files.pythonhosted.org/packages/47/32/b0b097aa7249e099997491cd6c56a587b2c7246fa8e1c3b466100d1fcdc6/python_nubia-0.2b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8db0e829cc33b69d946ab27d919d5aaa", "sha256": "e4903f7dcaabf3a06eeb3877158aadf7dd91d7311005e1734920f61a77c352fd"}, "downloads": -1, "filename": "python-nubia-0.2b2.tar.gz", "has_sig": false, "md5_digest": "8db0e829cc33b69d946ab27d919d5aaa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53677, "upload_time": "2019-11-29T14:39:57", "upload_time_iso_8601": "2019-11-29T14:39:57.446415Z", "url": "https://files.pythonhosted.org/packages/5b/11/6b71d3b5fee9a6ad0c6a0ac505215dfc82d3e3392b838d2ce8bc375304b6/python-nubia-0.2b2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:18 2020"}