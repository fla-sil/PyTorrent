{"info": {"author": "Matt Petersen", "author_email": "peterm0273@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# mnist-py\n\nLazily loads from `/tmp/mnist/` and caches the resulting numpy arrays. Downloads any missing MNIST files first.\n\n## Installation\n\n```bash\npip install mnist-py\n```\n\n## Usage\n\n```python\nfrom mnist import MNIST\n\n\nmnist = MNIST()\n\n# Train set is lazily loaded into memory and cached afterward\nmnist.train_set.images  # (60000, 784)\nmnist.train_set.labels  # (60000, 10)\n\n# Test set is lazily loaded into memory and cached afterward\nmnist.test_set.images   # (10000, 784)\nmnist.test_set.labels   # (10000, 10)\n\n# Yield minibatches from the shuffled train set\nfor images, labels in mnist.train_set.minibatches(batch_size=256):\n    pass\n```\n\n\n## Image data\n\nImages are rows, each of length 784, and with pixel values scaled to the range zero through one.\n\n## Label data\n\nLables are one-hot rows each of length ten.\n\n```python\n[0 0 1 ... 0]  # 3\n[0 0 0 ... 1]  # 9\n```\n\n## Example: Softmax Regression\n```python\nimport numpy as np\n\nfrom mnist import MNIST\n\n\ndef softmax(x: np.array) -> np.array:\n    \"\"\"Apply softmax independently to each row.\"\"\"\n    z = np.exp(x - x.max(1)[:, None])\n    return z / z.sum(1)[:, None]\n\n\ndef main():\n    learning_rate = 0.01\n    batch_size = 256\n    n_epochs = 4\n\n    mnist = MNIST()\n\n    weights = np.random.randn(784, 10) * np.sqrt(2 / 784)\n    for _ in range(n_epochs):\n        for images, labels in mnist.train_set.minibatches(batch_size):\n            preds = softmax(images.dot(weights))\n            error = images.T.dot(preds - labels)\n            weights -= learning_rate * error\n\n            acc = np.mean(preds.argmax(1) == labels.argmax(1))\n            print(f'Train acc: {acc}')\n\n\nif __name__ == '__main__':\n    main()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mattpetersen/mnist-py", "keywords": "mnist", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mnist-py", "package_url": "https://pypi.org/project/mnist-py/", "platform": "", "project_url": "https://pypi.org/project/mnist-py/", "project_urls": {"Homepage": "https://github.com/mattpetersen/mnist-py"}, "release_url": "https://pypi.org/project/mnist-py/0.6/", "requires_dist": ["numpy", "requests"], "requires_python": "", "summary": "Lighweight Numpy MNIST loader", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mnist-py</h1>\n<p>Lazily loads from <code>/tmp/mnist/</code> and caches the resulting numpy arrays. Downloads any missing MNIST files first.</p>\n<h2>Installation</h2>\n<pre>pip install mnist-py\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mnist</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n\n\n<span class=\"n\">mnist</span> <span class=\"o\">=</span> <span class=\"n\">MNIST</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Train set is lazily loaded into memory and cached afterward</span>\n<span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">train_set</span><span class=\"o\">.</span><span class=\"n\">images</span>  <span class=\"c1\"># (60000, 784)</span>\n<span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">train_set</span><span class=\"o\">.</span><span class=\"n\">labels</span>  <span class=\"c1\"># (60000, 10)</span>\n\n<span class=\"c1\"># Test set is lazily loaded into memory and cached afterward</span>\n<span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">test_set</span><span class=\"o\">.</span><span class=\"n\">images</span>   <span class=\"c1\"># (10000, 784)</span>\n<span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">test_set</span><span class=\"o\">.</span><span class=\"n\">labels</span>   <span class=\"c1\"># (10000, 10)</span>\n\n<span class=\"c1\"># Yield minibatches from the shuffled train set</span>\n<span class=\"k\">for</span> <span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"ow\">in</span> <span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">train_set</span><span class=\"o\">.</span><span class=\"n\">minibatches</span><span class=\"p\">(</span><span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h2>Image data</h2>\n<p>Images are rows, each of length 784, and with pixel values scaled to the range zero through one.</p>\n<h2>Label data</h2>\n<p>Lables are one-hot rows each of length ten.</p>\n<pre><span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"o\">...</span> <span class=\"mi\">0</span><span class=\"p\">]</span>  <span class=\"c1\"># 3</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"o\">...</span> <span class=\"mi\">1</span><span class=\"p\">]</span>  <span class=\"c1\"># 9</span>\n</pre>\n<h2>Example: Softmax Regression</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">mnist</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">softmax</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Apply softmax independently to each row.\"\"\"</span>\n    <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)[:,</span> <span class=\"kc\">None</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">z</span> <span class=\"o\">/</span> <span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">learning_rate</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>\n    <span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"mi\">256</span>\n    <span class=\"n\">n_epochs</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n\n    <span class=\"n\">mnist</span> <span class=\"o\">=</span> <span class=\"n\">MNIST</span><span class=\"p\">()</span>\n\n    <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">784</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"mi\">784</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_epochs</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"ow\">in</span> <span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">train_set</span><span class=\"o\">.</span><span class=\"n\">minibatches</span><span class=\"p\">(</span><span class=\"n\">batch_size</span><span class=\"p\">):</span>\n            <span class=\"n\">preds</span> <span class=\"o\">=</span> <span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">weights</span><span class=\"p\">))</span>\n            <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">preds</span> <span class=\"o\">-</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n            <span class=\"n\">weights</span> <span class=\"o\">-=</span> <span class=\"n\">learning_rate</span> <span class=\"o\">*</span> <span class=\"n\">error</span>\n\n            <span class=\"n\">acc</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">preds</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Train acc: </span><span class=\"si\">{</span><span class=\"n\">acc</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6973072, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "61b1e95516a80c97559bc0aa2ef38541", "sha256": "64c23e9f1a29a63e78387106b6b0a10361e414c27334f5645674079aed57d704"}, "downloads": -1, "filename": "mnist_py-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61b1e95516a80c97559bc0aa2ef38541", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1631, "upload_time": "2020-04-07T15:36:08", "upload_time_iso_8601": "2020-04-07T15:36:08.963282Z", "url": "https://files.pythonhosted.org/packages/1c/57/d2c3dddb7dba3a13d3512097dacd94d8a8bf0f42f240a8ce7c19db2fe141/mnist_py-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e2e6b69d46592a1bb55e741824db24b6", "sha256": "739fbd43b992a451c4e0ddb069717ba9f1d07774f59710aac2f104e67340d644"}, "downloads": -1, "filename": "mnist_py-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e2e6b69d46592a1bb55e741824db24b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3197, "upload_time": "2020-04-07T15:40:38", "upload_time_iso_8601": "2020-04-07T15:40:38.993187Z", "url": "https://files.pythonhosted.org/packages/a8/e1/f872fac6bd81f8f440eb553f1b47734cdf840930620a243470e824cf621a/mnist_py-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e4f266adf73eec0d92c8712c11f631a3", "sha256": "c243c392ee9568052a838f2fe4539c22ee5839f361fea2c6ea35336dcab8c8cb"}, "downloads": -1, "filename": "mnist_py-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e4f266adf73eec0d92c8712c11f631a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3199, "upload_time": "2020-04-07T15:42:19", "upload_time_iso_8601": "2020-04-07T15:42:19.470896Z", "url": "https://files.pythonhosted.org/packages/d6/96/470d3fd156911795282e876936c7285ee6bd3ed07af15f0fdeebe9d34024/mnist_py-0.3-py3-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "84cefc981c7f4caa7c238cbe1da7785a", "sha256": "8c52525276f888697ffda53b642f72d789235807a6cc1bd0ee2a28fb857670ec"}, "downloads": -1, "filename": "mnist_py-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "84cefc981c7f4caa7c238cbe1da7785a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3195, "upload_time": "2020-04-07T17:54:35", "upload_time_iso_8601": "2020-04-07T17:54:35.058602Z", "url": "https://files.pythonhosted.org/packages/4e/df/46ec6aa74775c0ac7e89fa45bcd6361db9e7f8c92b69d2de27b1f0ca507d/mnist_py-0.4-py3-none-any.whl", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "0d2d36c0f6c31e97628ca1febb0973a5", "sha256": "2c49de25c2bdf0c4263e8c24b55fc5644375b038f4d07c77bac499dbcedfabcc"}, "downloads": -1, "filename": "mnist_py-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0d2d36c0f6c31e97628ca1febb0973a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2899, "upload_time": "2020-04-07T21:21:02", "upload_time_iso_8601": "2020-04-07T21:21:02.748650Z", "url": "https://files.pythonhosted.org/packages/9f/04/1ff4ff5a2b079dfc7e62bdd9690bee171e090047c8b819f1f43c0abf1319/mnist_py-0.5-py3-none-any.whl", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "2ac63e80668c7a0c757eb2d7dd967e04", "sha256": "7a9cb13b602fdcadce0d680c8f57f7bbe45f445cf726c85fba60fdd0caf8e96e"}, "downloads": -1, "filename": "mnist_py-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2ac63e80668c7a0c757eb2d7dd967e04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3171, "upload_time": "2020-04-07T21:31:35", "upload_time_iso_8601": "2020-04-07T21:31:35.981083Z", "url": "https://files.pythonhosted.org/packages/95/43/dec6d9aac5b54700357d5c8eb2621fb4ecd4256e1a5c282876a424d1b042/mnist_py-0.6-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ac63e80668c7a0c757eb2d7dd967e04", "sha256": "7a9cb13b602fdcadce0d680c8f57f7bbe45f445cf726c85fba60fdd0caf8e96e"}, "downloads": -1, "filename": "mnist_py-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2ac63e80668c7a0c757eb2d7dd967e04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3171, "upload_time": "2020-04-07T21:31:35", "upload_time_iso_8601": "2020-04-07T21:31:35.981083Z", "url": "https://files.pythonhosted.org/packages/95/43/dec6d9aac5b54700357d5c8eb2621fb4ecd4256e1a5c282876a424d1b042/mnist_py-0.6-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:10 2020"}