{"info": {"author": "Jure Ham", "author_email": "jure.ham@zemanta.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha"], "description": "mlask is still fun\n==================\n\nMlask brings a bit of django like structure to\n`Flask <http://flask.pocoo.org/>`_ apps.\n\nInstallation:\n-------------\n\n::\n\n    pip install mlask\n\nCreate your first app:\n----------------------\n\nTo create the skeleton run:\n\n::\n\n    mlask-admin.py startapp your_apps_name\n\nThis command will create a folder named your_apps_name with the\nfollowing files:\n\n* manage.py\n* config.py\n* tests.py\n* views.py\n\nFor the \"hello world\" examples check \"views.py\" and \"tests.py\".\n\nWhen you're ok with your first app, start the testing server by running:\n\n::\n\n    python manage.py runserver\n\nThen run the tests I'm sure you've written:\n\n::\n\n    python manage.py test\n\nEdit \"config.py\" to change server settings, add aditional modules to\nyour app and to define your own configuration. All uppercase variables from\n\"config.py\" are accessible from \"app.config\" module.\nMore on Flask configuration: `flask.pocoo.org/docs/config/ <http://flask.pocoo.org/docs/config/>`_.\n\nAnd that's mostly it. For full Flask documentation visit\n`flask.pocoo.org/docs/api/ <http://flask.pocoo.org/docs/api/>`_.\n\nAll built in commands:\n----------------------\n\n::\n\n    runserver       Starts testing server\n    rungunicorn     Starts Gunicorn server\n    shell           Starts interactive shell with defined app\n    syncdb          Creates all tables defined by SQLAlchemy declarative\n    test            Runs all tests in \"config.TEST_MODULES\"\n    startapp        Creates an app direcory structure for the given app name in the current directory\n\nDefine your own command:\n------------------------\n\nCreate a file mycommands.py with the following content:\n\n::\n\n    from mlask.management.commands import BaseCommand\n\n    class ExampleCommand(BaseCommand):\n        __command_name__ = 'example' #optional\n        __help__ = 'Short help' #optional\n\n        def update_parser(self, parser):\n            # Define rules for parsing the input.\n            # Check argparse for full documentation.\n\n            parser.add_argument('text', help=\"Text to print\")\n\n        def run(self, options):\n            print options.text\n\nAdd \"your_apps_name.mycommands\" module to config.py \"MODULES\" and\ntest it out by running:\n\n::\n\n    python manage.py example \"Hello\"", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hamaxx/mlask", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Mlask", "package_url": "https://pypi.org/project/Mlask/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Mlask/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hamaxx/mlask"}, "release_url": "https://pypi.org/project/Mlask/0.2/", "requires_dist": null, "requires_python": null, "summary": "manage.py for Flask", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mlask brings a bit of django like structure to\n<a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> apps.</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<pre>pip install mlask\n</pre>\n</div>\n<div id=\"create-your-first-app\">\n<h2>Create your first app:</h2>\n<p>To create the skeleton run:</p>\n<pre>mlask-admin.py startapp your_apps_name\n</pre>\n<p>This command will create a folder named your_apps_name with the\nfollowing files:</p>\n<ul>\n<li>manage.py</li>\n<li>config.py</li>\n<li>tests.py</li>\n<li>views.py</li>\n</ul>\n<p>For the \u201chello world\u201d examples check \u201cviews.py\u201d and \u201ctests.py\u201d.</p>\n<p>When you\u2019re ok with your first app, start the testing server by running:</p>\n<pre>python manage.py runserver\n</pre>\n<p>Then run the tests I\u2019m sure you\u2019ve written:</p>\n<pre>python manage.py test\n</pre>\n<p>Edit \u201cconfig.py\u201d to change server settings, add aditional modules to\nyour app and to define your own configuration. All uppercase variables from\n\u201cconfig.py\u201d are accessible from \u201capp.config\u201d module.\nMore on Flask configuration: <a href=\"http://flask.pocoo.org/docs/config/\" rel=\"nofollow\">flask.pocoo.org/docs/config/</a>.</p>\n<p>And that\u2019s mostly it. For full Flask documentation visit\n<a href=\"http://flask.pocoo.org/docs/api/\" rel=\"nofollow\">flask.pocoo.org/docs/api/</a>.</p>\n</div>\n<div id=\"all-built-in-commands\">\n<h2>All built in commands:</h2>\n<pre>runserver       Starts testing server\nrungunicorn     Starts Gunicorn server\nshell           Starts interactive shell with defined app\nsyncdb          Creates all tables defined by SQLAlchemy declarative\ntest            Runs all tests in \"config.TEST_MODULES\"\nstartapp        Creates an app direcory structure for the given app name in the current directory\n</pre>\n</div>\n<div id=\"define-your-own-command\">\n<h2>Define your own command:</h2>\n<p>Create a file mycommands.py with the following content:</p>\n<pre>from mlask.management.commands import BaseCommand\n\nclass ExampleCommand(BaseCommand):\n    __command_name__ = 'example' #optional\n    __help__ = 'Short help' #optional\n\n    def update_parser(self, parser):\n        # Define rules for parsing the input.\n        # Check argparse for full documentation.\n\n        parser.add_argument('text', help=\"Text to print\")\n\n    def run(self, options):\n        print options.text\n</pre>\n<p>Add \u201cyour_apps_name.mycommands\u201d module to config.py \u201cMODULES\u201d and\ntest it out by running:</p>\n<pre>python manage.py example \"Hello\"\n</pre>\n</div>\n\n          </div>"}, "last_serial": 784716, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "123e39016b11013f407b1e0e157a540a", "sha256": "3cfb4e8775490ffcf05c0cae261385d7f01dfa4a6569ee2fde0f7bd885e8bf96"}, "downloads": -1, "filename": "Mlask-0.1.tar.gz", "has_sig": false, "md5_digest": "123e39016b11013f407b1e0e157a540a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5119, "upload_time": "2013-03-16T17:11:14", "upload_time_iso_8601": "2013-03-16T17:11:14.421149Z", "url": "https://files.pythonhosted.org/packages/b6/8e/6547bc7347f68fc12a62bc73a5390507ae6bbf07624fdf8213c511e6ff41/Mlask-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "709bae803563387ef64de22c870154db", "sha256": "0edaa8585bab6a2e52ef0acec5450ec29c0f4c466ba0b1202ea5149f31c63fcd"}, "downloads": -1, "filename": "Mlask-0.1.1.tar.gz", "has_sig": false, "md5_digest": "709bae803563387ef64de22c870154db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5889, "upload_time": "2013-03-19T23:28:07", "upload_time_iso_8601": "2013-03-19T23:28:07.729807Z", "url": "https://files.pythonhosted.org/packages/da/1a/50b8889c7022b7bab134ed00a3974500b7960dad653363b9e8777f53cc8f/Mlask-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0c410964492f2c8accb418c6431d93e7", "sha256": "aa41c0311e97dc83fca7a68b306645ff2e635a25d073db32181b290f3b26994f"}, "downloads": -1, "filename": "Mlask-0.2.tar.gz", "has_sig": false, "md5_digest": "0c410964492f2c8accb418c6431d93e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5994, "upload_time": "2013-03-19T23:54:30", "upload_time_iso_8601": "2013-03-19T23:54:30.772294Z", "url": "https://files.pythonhosted.org/packages/c1/cb/7100d24a2617e0e0879f4b57eaa704827e5775177f27b76f78934ab7a943/Mlask-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c410964492f2c8accb418c6431d93e7", "sha256": "aa41c0311e97dc83fca7a68b306645ff2e635a25d073db32181b290f3b26994f"}, "downloads": -1, "filename": "Mlask-0.2.tar.gz", "has_sig": false, "md5_digest": "0c410964492f2c8accb418c6431d93e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5994, "upload_time": "2013-03-19T23:54:30", "upload_time_iso_8601": "2013-03-19T23:54:30.772294Z", "url": "https://files.pythonhosted.org/packages/c1/cb/7100d24a2617e0e0879f4b57eaa704827e5775177f27b76f78934ab7a943/Mlask-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:38 2020"}