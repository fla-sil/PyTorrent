{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "## Loaderr\nEver wonder why the solutions you think of in your head never work? Why your ability to write awesome code is limited? Well here it is \u2013 you're not using `Loaderr`.\n\nWith `Loaderr`, you can create simple loading icons to use in your projects. Say you want your program to seem like it's processing something?\n\n```\nfrom loaderr import *\nloading(\"Processing$.$\", dots, medium, 5)\n```\n\nIt's that simple! With this code, your program will literally halt its progress just to print:\n\n```\nProcessing.\nProcessing..\nProcessing...\n```\n\n## Tutorial\nThere are two functions in `Loaderr`.\n\n+ `clear_line()`\nSets the cursor back so text can be printed over it.\n\n+ `loading(string, logo, timing, repeat)`\nCreates a \"loading\" thing.\n\n    + The `string` is determines what surrounds the loading animation. For example `Loading$$` will create `Loading.` -> `Loading..` -> `Loading...`. The two `$` indicate where the animation is placed. If the string is empty, it replaces the entire string.\n\n    + The `logo` is an array that stores the animation. To get the dots, you could do `[\".\", \"..\", \"...\"]`.\n\n    + The `timing` is an array the stores the wait times within each animation. For example, `[0.5]` will display the animation every half a second. `[0.1, 0.2]` will display the first frame after `0.1` seconds and the next after `0.2` seconds.\n\n    + The `repeat` is the amount of times to loop the animation.\n\n\n## Pre-Sets\nThere are several pre-defined animations and wait times. These are inside the `loaderr.py` file. For example, `loaderr.table_flip` is `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\u2533\u2501\u2533` -> `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\u2533\u2501\u2533` -> `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35\u253b\u2501\u253b` -> `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35  \u2533\u2501\u2533`\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "loaderr", "package_url": "https://pypi.org/project/loaderr/", "platform": "", "project_url": "https://pypi.org/project/loaderr/", "project_urls": null, "release_url": "https://pypi.org/project/loaderr/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "The worlds best pip package.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## Loaderr<br>Ever wonder why the solutions you think of in your head never work? Why your ability to write awesome code is limited? Well here it is \u2013 you're not using `Loaderr`.<br><br>With `Loaderr`, you can create simple loading icons to use in your projects. Say you want your program to seem like it's processing something?<br><br>```<br>from loaderr import *<br>loading(\"Processing$.$\", dots, medium, 5)<br>```<br><br>It's that simple! With this code, your program will literally halt its progress just to print:<br><br>```<br>Processing.<br>Processing..<br>Processing...<br>```<br><br>## Tutorial<br>There are two functions in `Loaderr`.<br><br>+ `clear_line()`<br>Sets the cursor back so text can be printed over it.<br><br>+ `loading(string, logo, timing, repeat)`<br>Creates a \"loading\" thing.<br><br>    + The `string` is determines what surrounds the loading animation. For example `Loading$$` will create `Loading.` -&gt; `Loading..` -&gt; `Loading...`. The two `$` indicate where the animation is placed. If the string is empty, it replaces the entire string.<br><br>    + The `logo` is an array that stores the animation. To get the dots, you could do `[\".\", \"..\", \"...\"]`.<br><br>    + The `timing` is an array the stores the wait times within each animation. For example, `[0.5]` will display the animation every half a second. `[0.1, 0.2]` will display the first frame after `0.1` seconds and the next after `0.2` seconds.<br><br>    + The `repeat` is the amount of times to loop the animation.<br><br><br>## Pre-Sets<br>There are several pre-defined animations and wait times. These are inside the `loaderr.py` file. For example, `loaderr.table_flip` is `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\u2533\u2501\u2533` -&gt; `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\u2533\u2501\u2533` -&gt; `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35\u253b\u2501\u253b` -&gt; `(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35  \u2533\u2501\u2533`<br><br><br>\n          </div>"}, "last_serial": 3764670, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0ee575ccaaeedccf964c1210d45b0619", "sha256": "e10886ae206ed23bd6874d6f6ec4f17fc57b297faf4698ffaa483713666d1c2a"}, "downloads": -1, "filename": "loaderr-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ee575ccaaeedccf964c1210d45b0619", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4055, "upload_time": "2018-04-14T16:20:25", "upload_time_iso_8601": "2018-04-14T16:20:25.598646Z", "url": "https://files.pythonhosted.org/packages/d8/0e/a494c97d7fdcafc8e65df80af48dd44121b00ea575c80d8b8e1e595c871c/loaderr-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69cf618607e9af139faf114c329672ca", "sha256": "cc6f17580b98c9b258b3f6d587f12ccc7c31712e829a416a84e95713b82f8d24"}, "downloads": -1, "filename": "loaderr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "69cf618607e9af139faf114c329672ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5145, "upload_time": "2018-04-14T16:20:26", "upload_time_iso_8601": "2018-04-14T16:20:26.642009Z", "url": "https://files.pythonhosted.org/packages/72/bd/a7305f6a1b6755b9ce4c3d36857fa3b7c4e12b530240c9a3c25dcd19d446/loaderr-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ee575ccaaeedccf964c1210d45b0619", "sha256": "e10886ae206ed23bd6874d6f6ec4f17fc57b297faf4698ffaa483713666d1c2a"}, "downloads": -1, "filename": "loaderr-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ee575ccaaeedccf964c1210d45b0619", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4055, "upload_time": "2018-04-14T16:20:25", "upload_time_iso_8601": "2018-04-14T16:20:25.598646Z", "url": "https://files.pythonhosted.org/packages/d8/0e/a494c97d7fdcafc8e65df80af48dd44121b00ea575c80d8b8e1e595c871c/loaderr-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69cf618607e9af139faf114c329672ca", "sha256": "cc6f17580b98c9b258b3f6d587f12ccc7c31712e829a416a84e95713b82f8d24"}, "downloads": -1, "filename": "loaderr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "69cf618607e9af139faf114c329672ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5145, "upload_time": "2018-04-14T16:20:26", "upload_time_iso_8601": "2018-04-14T16:20:26.642009Z", "url": "https://files.pythonhosted.org/packages/72/bd/a7305f6a1b6755b9ce4c3d36857fa3b7c4e12b530240c9a3c25dcd19d446/loaderr-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:42 2020"}