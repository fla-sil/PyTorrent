{"info": {"author": "Vernon Cole", "author_email": "vernondcole@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Natural Language :: Latin", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "A \"Roman\" object is stored in the computer as a binary integer,\r\nbut it is displayed in Roman numerals.\r\n(In technical terms, it is a subset of the built-in class int,\r\nwith a _str_() method which returns a Roman numeral string.)\r\n [see PEP 313 for the inspiration]\r\n\r\nThis module has .toRoman() and .fromRoman() methods compatible with Mark Pilgrim's roman.py module, but has a larger range, a more forgiving parser, and allows construction of first class Roman objects.\r\n\r\nRoman objects act very much like the built-in Decimal objects in Python,\r\nthey can be added, subtracted, multiplied, or divided and the result will be\r\nanother object of the same class.\r\n\r\nSo a programmer can say:\r\n\r\n>>>import romanclass as roman\r\n\r\n>>>two = roman.Roman(2)\r\n\r\n>>>five = roman.Roman('V')\r\n\r\n>>>print (two+five)\r\n\r\nand the computer will print:\r\n\r\nVII\r\n\r\nThis module uses unicode characters to support numbers in the range 0<=n<600000,\r\nand has an optional .toUnicodeRoman() method which will output true unicode\r\ncharacter points for I V X L C D M (rather than their look-alike ASCII values)\r\nand will output the points for I thru XII as single unicode code points.\r\n\r\nThe .toRoman() method [and the str() function] will output ASCII compatible\r\nstrings for values <= 3999.\r\n\r\nThe string \"Nulla\" [Latin for \"nothing\"] will be output for a zero value.\r\n\r\nOut of range values will raise romanclass.OutOfRangeError\r\n\r\nBadly formatted Roman numeral input strings will raise romanclass.InvalidRomanNumeralError in .fromRoman() or when initializing a Roman object.\r\n\r\nCaesarCalc.py, A simple four-function Roman calculator is included as a test/demo.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://launchpad.net/romanclass", "keywords": "roman romanclass emulate int", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "romanclass", "package_url": "https://pypi.org/project/romanclass/", "platform": "Windows Linux IronPython", "project_url": "https://pypi.org/project/romanclass/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://launchpad.net/romanclass"}, "release_url": "https://pypi.org/project/romanclass/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Integer subset class using Roman numeral input and output", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            A \"Roman\" object is stored in the computer as a binary integer,\n<br>but it is displayed in Roman numerals.\n<br>(In technical terms, it is a subset of the built-in class int,\n<br>with a _str_() method which returns a Roman numeral string.)\n<br> [see PEP 313 for the inspiration]\n<br>\n<br>This module has .toRoman() and .fromRoman() methods compatible with Mark Pilgrim's roman.py module, but has a larger range, a more forgiving parser, and allows construction of first class Roman objects.\n<br>\n<br>Roman objects act very much like the built-in Decimal objects in Python,\n<br>they can be added, subtracted, multiplied, or divided and the result will be\n<br>another object of the same class.\n<br>\n<br>So a programmer can say:\n<br>\n<br>&gt;&gt;&gt;import romanclass as roman\n<br>\n<br>&gt;&gt;&gt;two = roman.Roman(2)\n<br>\n<br>&gt;&gt;&gt;five = roman.Roman('V')\n<br>\n<br>&gt;&gt;&gt;print (two+five)\n<br>\n<br>and the computer will print:\n<br>\n<br>VII\n<br>\n<br>This module uses unicode characters to support numbers in the range 0&lt;=n&lt;600000,\n<br>and has an optional .toUnicodeRoman() method which will output true unicode\n<br>character points for I V X L C D M (rather than their look-alike ASCII values)\n<br>and will output the points for I thru XII as single unicode code points.\n<br>\n<br>The .toRoman() method [and the str() function] will output ASCII compatible\n<br>strings for values &lt;= 3999.\n<br>\n<br>The string \"Nulla\" [Latin for \"nothing\"] will be output for a zero value.\n<br>\n<br>Out of range values will raise romanclass.OutOfRangeError\n<br>\n<br>Badly formatted Roman numeral input strings will raise romanclass.InvalidRomanNumeralError in .fromRoman() or when initializing a Roman object.\n<br>\n<br>CaesarCalc.py, A simple four-function Roman calculator is included as a test/demo.\n          </div>"}, "last_serial": 246015, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "56561ebb25e6782b5006397bdef0069c", "sha256": "e38755be9a7460208dae5954b4bd7ce71070fbd85d82966ba36d446ed5791899"}, "downloads": -1, "filename": "romanclass-1.0.1.zip", "has_sig": false, "md5_digest": "56561ebb25e6782b5006397bdef0069c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105242, "upload_time": "2010-08-12T01:12:33", "upload_time_iso_8601": "2010-08-12T01:12:33.589720Z", "url": "https://files.pythonhosted.org/packages/33/32/1c8b9e7e16330b72b8b7b18c977cd6648b942c74fe89cea4332f0890b337/romanclass-1.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56561ebb25e6782b5006397bdef0069c", "sha256": "e38755be9a7460208dae5954b4bd7ce71070fbd85d82966ba36d446ed5791899"}, "downloads": -1, "filename": "romanclass-1.0.1.zip", "has_sig": false, "md5_digest": "56561ebb25e6782b5006397bdef0069c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105242, "upload_time": "2010-08-12T01:12:33", "upload_time_iso_8601": "2010-08-12T01:12:33.589720Z", "url": "https://files.pythonhosted.org/packages/33/32/1c8b9e7e16330b72b8b7b18c977cd6648b942c74fe89cea4332f0890b337/romanclass-1.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:01:24 2020"}