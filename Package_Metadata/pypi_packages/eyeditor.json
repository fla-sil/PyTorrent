{"info": {"author": "Hg", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: X11 Applications :: Qt", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: Public Domain", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Text Editors", "Topic :: Text Editors :: Integrated Development Environments (IDE)"], "description": "EYE\n---\n\nEYE is a Qt based text/code editor designed to be customizable/scriptable.\nIt uses Scintilla as the base text widget. It currently supports:\n\n* tabbed, multi-split, multi-window GUI\n* syntax coloring\n* project/directory level editing preferences\n* recursive grep integration\n* Python scriptability\n\nCustomizability\n---------------\n\nBy default, EYE provides a basic UI with a tabbed window with one editor.\nA few widgets and plugins are available but not enabled by default.\n\nAt startup, Python scripts contained in the user configuration directory are run.\nThese scripts can use the EYE API to configure the app as you want.\n\nThey can:\n\n* enable built-in plugins (like automatic syntax coloring when a file is opened) and features\n* create actions on keyboard shortcuts or react on other events\n* customize the menus/toolbars or the rest of the UI\n* make complete plugins\n\nAll of this is doable through the full Python API, the EYE API and the Qt components upon which EYE is based.\n\nWhat plugins are available?\n---------------------------\n\n* simple recursive grep search\n* backward/forward file navigation\n* syntax coloring based on file extension\n* theming\n* macro recording/replay\n* \"project\"-wide indentation style (with support for `.editorconfig <http://editorconfig.org/>`_)\n* file-line bookmarks (not saved on quit though)\n* autocompletion with YouCompleteMe\n\nWhat plugins are planned?\n-------------------------\n\n* build system launch with error annotations in the source code\n* semantic source coloring with clang api\n* controlling a debugger\n* more features for easing navigation and search\n\nWhere is the documentation?\n---------------------------\n\nThe documentation is built with sphinx in the docs dir and can be `consulted online <https://eye.readthedocs.io/>`_.\nIt is also a work-in-progress.\n\nVersion\n-------\n\nEYE is currently in alpha state, say 0.0.1. When it's stable, it will use `semantic versioning <http://semver.org/>`_, for better plugins compatibility.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hydrargyrum/eye", "keywords": "code development editor qt script ide", "license": "WTFPLv2", "maintainer": "", "maintainer_email": "", "name": "eyeditor", "package_url": "https://pypi.org/project/eyeditor/", "platform": "", "project_url": "https://pypi.org/project/eyeditor/", "project_urls": {"Homepage": "https://github.com/hydrargyrum/eye"}, "release_url": "https://pypi.org/project/eyeditor/0.0.1/", "requires_dist": ["six"], "requires_python": "", "summary": "EYE - A Qt-based scriptable text editor", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"eye\">\n<h2>EYE</h2>\n<p>EYE is a Qt based text/code editor designed to be customizable/scriptable.\nIt uses Scintilla as the base text widget. It currently supports:</p>\n<ul>\n<li>tabbed, multi-split, multi-window GUI</li>\n<li>syntax coloring</li>\n<li>project/directory level editing preferences</li>\n<li>recursive grep integration</li>\n<li>Python scriptability</li>\n</ul>\n</div>\n<div id=\"customizability\">\n<h2>Customizability</h2>\n<p>By default, EYE provides a basic UI with a tabbed window with one editor.\nA few widgets and plugins are available but not enabled by default.</p>\n<p>At startup, Python scripts contained in the user configuration directory are run.\nThese scripts can use the EYE API to configure the app as you want.</p>\n<p>They can:</p>\n<ul>\n<li>enable built-in plugins (like automatic syntax coloring when a file is opened) and features</li>\n<li>create actions on keyboard shortcuts or react on other events</li>\n<li>customize the menus/toolbars or the rest of the UI</li>\n<li>make complete plugins</li>\n</ul>\n<p>All of this is doable through the full Python API, the EYE API and the Qt components upon which EYE is based.</p>\n</div>\n<div id=\"what-plugins-are-available\">\n<h2>What plugins are available?</h2>\n<ul>\n<li>simple recursive grep search</li>\n<li>backward/forward file navigation</li>\n<li>syntax coloring based on file extension</li>\n<li>theming</li>\n<li>macro recording/replay</li>\n<li>\u201cproject\u201d-wide indentation style (with support for <a href=\"http://editorconfig.org/\" rel=\"nofollow\">.editorconfig</a>)</li>\n<li>file-line bookmarks (not saved on quit though)</li>\n<li>autocompletion with YouCompleteMe</li>\n</ul>\n</div>\n<div id=\"what-plugins-are-planned\">\n<h2>What plugins are planned?</h2>\n<ul>\n<li>build system launch with error annotations in the source code</li>\n<li>semantic source coloring with clang api</li>\n<li>controlling a debugger</li>\n<li>more features for easing navigation and search</li>\n</ul>\n</div>\n<div id=\"where-is-the-documentation\">\n<h2>Where is the documentation?</h2>\n<p>The documentation is built with sphinx in the docs dir and can be <a href=\"https://eye.readthedocs.io/\" rel=\"nofollow\">consulted online</a>.\nIt is also a work-in-progress.</p>\n</div>\n<div id=\"version\">\n<h2>Version</h2>\n<p>EYE is currently in alpha state, say 0.0.1. When it\u2019s stable, it will use <a href=\"http://semver.org/\" rel=\"nofollow\">semantic versioning</a>, for better plugins compatibility.</p>\n</div>\n\n          </div>"}, "last_serial": 2420753, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9e9fd1bb87458e308e4ccea60a822cfb", "sha256": "47a4b42aed15c5d3eccc43d9957b0ab2b2c87340a2fc8371852186bd242eba6c"}, "downloads": -1, "filename": "eyeditor-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e9fd1bb87458e308e4ccea60a822cfb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123420, "upload_time": "2016-10-24T22:15:00", "upload_time_iso_8601": "2016-10-24T22:15:00.545808Z", "url": "https://files.pythonhosted.org/packages/39/fb/43b9086e2e5332d05a940238bf02e214d8dfa33170addfd1177fa5bf538d/eyeditor-0.0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e9fd1bb87458e308e4ccea60a822cfb", "sha256": "47a4b42aed15c5d3eccc43d9957b0ab2b2c87340a2fc8371852186bd242eba6c"}, "downloads": -1, "filename": "eyeditor-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e9fd1bb87458e308e4ccea60a822cfb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123420, "upload_time": "2016-10-24T22:15:00", "upload_time_iso_8601": "2016-10-24T22:15:00.545808Z", "url": "https://files.pythonhosted.org/packages/39/fb/43b9086e2e5332d05a940238bf02e214d8dfa33170addfd1177fa5bf538d/eyeditor-0.0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:44:27 2020"}