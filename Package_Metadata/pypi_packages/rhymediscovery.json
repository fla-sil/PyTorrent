{"info": {"author": "Jannis Vamvas", "author_email": "jannis.vamvas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": ".. image:: https://travis-ci.org/jvamvas/rhymediscovery.svg?branch=master\n    :target: https://travis-ci.org/jvamvas/rhymediscovery\n\nrhymediscovery\n--------------\n\nA python package for detecting rhyme schemes in poetry. With standard configuration, it achieves about 65% accuracy in the `rhymedata <https://github.com/sravanareddy/rhymedata>`_ corpus.\n\nBasic usage\n===========\n\n.. code-block::\n\n    pip install rhymediscovery\n\n.. code-block:: python\n\n   >>> from rhymediscovery import find_schemes\n   >>> find_schemes.find_schemes([['herz', 'welt', 'geld', 'schmerz'], ...])\n   [(('herz', 'welt', 'geld', 'schmerz'), (1, 2, 1, 2)), ...]\n\n\nCommand line\n============\n\nThe command line tool :code:`find_schemes` expects a file formatted like the `.pgold` files in the `rhymedata <https://github.com/sravanareddy/rhymedata>`_ corpus. A sample file can be found `here in the repo <https://github.com/jvamvas/rhymediscovery/blob/master/tests/data/sample.pgold>`_.\n\nTo demonstrate the tool, we clone the `rhymedata <https://github.com/sravanareddy/rhymedata>`_ corpus:\n\n.. code-block::\n\n    git clone https://github.com/sravanareddy/rhymedata.git\n\nThen we run:\n\n.. code-block::\n\n    find_schemes rhymedata/english_gold/1415.pgold 1415.out\n\nThe :code:`1415.pgold` file from the corpus has been manually annotated with the correct rhyme schemes. Thus we can evaluate our result file  using:\n\n.. code-block:: bash\n\n    evaluate_schemes 1415.out rhymedata/english_gold/1415.pgold\n\n\nCredits\n=======\nThis package implements the following paper:\n\n* Sravana Reddy and Kevin Knight. \"Unsupervised discovery of rhyme schemes.\" Proceedings of ACL 2011. (`pdf <http://cs.wellesley.edu/~sravana/papers/rhymes_acl.pdf>`_)\n\nIt is a fork of the reference implementation by `@sravanareddy <https://github.com/sravanareddy>`_ which is available in its original form `here <https://github.com/sravanareddy/rhymediscovery>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jvamvas/rhymediscovery", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "rhymediscovery", "package_url": "https://pypi.org/project/rhymediscovery/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rhymediscovery/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jvamvas/rhymediscovery"}, "release_url": "https://pypi.org/project/rhymediscovery/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Unsupervised Discovery of Rhyme Schemes", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jvamvas/rhymediscovery\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jvamvas/rhymediscovery.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/025569fd83f0406c0a0299751598b6ae93b11bb2/68747470733a2f2f7472617669732d63692e6f72672f6a76616d7661732f7268796d65646973636f766572792e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"rhymediscovery\">\n<h2>rhymediscovery</h2>\n<p>A python package for detecting rhyme schemes in poetry. With standard configuration, it achieves about 65% accuracy in the <a href=\"https://github.com/sravanareddy/rhymedata\" rel=\"nofollow\">rhymedata</a> corpus.</p>\n<div id=\"basic-usage\">\n<h3>Basic usage</h3>\n<pre>pip install rhymediscovery\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">rhymediscovery</span> <span class=\"kn\">import</span> <span class=\"n\">find_schemes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">find_schemes</span><span class=\"o\">.</span><span class=\"n\">find_schemes</span><span class=\"p\">([[</span><span class=\"s1\">'herz'</span><span class=\"p\">,</span> <span class=\"s1\">'welt'</span><span class=\"p\">,</span> <span class=\"s1\">'geld'</span><span class=\"p\">,</span> <span class=\"s1\">'schmerz'</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">])</span>\n<span class=\"p\">[((</span><span class=\"s1\">'herz'</span><span class=\"p\">,</span> <span class=\"s1\">'welt'</span><span class=\"p\">,</span> <span class=\"s1\">'geld'</span><span class=\"p\">,</span> <span class=\"s1\">'schmerz'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)),</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"command-line\">\n<h3>Command line</h3>\n<p>The command line tool <code>find_schemes</code> expects a file formatted like the <cite>.pgold</cite> files in the <a href=\"https://github.com/sravanareddy/rhymedata\" rel=\"nofollow\">rhymedata</a> corpus. A sample file can be found <a href=\"https://github.com/jvamvas/rhymediscovery/blob/master/tests/data/sample.pgold\" rel=\"nofollow\">here in the repo</a>.</p>\n<p>To demonstrate the tool, we clone the <a href=\"https://github.com/sravanareddy/rhymedata\" rel=\"nofollow\">rhymedata</a> corpus:</p>\n<pre>git clone https://github.com/sravanareddy/rhymedata.git\n</pre>\n<p>Then we run:</p>\n<pre>find_schemes rhymedata/english_gold/1415.pgold 1415.out\n</pre>\n<p>The <code>1415.pgold</code> file from the corpus has been manually annotated with the correct rhyme schemes. Thus we can evaluate our result file  using:</p>\n<pre>evaluate_schemes <span class=\"m\">1415</span>.out rhymedata/english_gold/1415.pgold\n</pre>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package implements the following paper:</p>\n<ul>\n<li>Sravana Reddy and Kevin Knight. \u201cUnsupervised discovery of rhyme schemes.\u201d Proceedings of ACL 2011. (<a href=\"http://cs.wellesley.edu/~sravana/papers/rhymes_acl.pdf\" rel=\"nofollow\">pdf</a>)</li>\n</ul>\n<p>It is a fork of the reference implementation by <a href=\"https://github.com/sravanareddy\" rel=\"nofollow\">@sravanareddy</a> which is available in its original form <a href=\"https://github.com/sravanareddy/rhymediscovery\" rel=\"nofollow\">here</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2162497, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "a947107641d5a3615bd0f204ab8f6a0f", "sha256": "cd5ad6be73f5e3ec8fc89c6e8b201f96310655b207bbac269c37f8e1c800b232"}, "downloads": -1, "filename": "rhymediscovery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a947107641d5a3615bd0f204ab8f6a0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12430, "upload_time": "2016-06-11T20:12:48", "upload_time_iso_8601": "2016-06-11T20:12:48.688041Z", "url": "https://files.pythonhosted.org/packages/2e/ca/43f33efa03ec421b2235cff0177b7708edad32a24391d35c2405c3d2d3ac/rhymediscovery-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ba729a4d6d7b122071248516fb4d4452", "sha256": "f81ae01902a94b8a7df9231def6589a338a7a3bcf5fa7aacfb9ecbf449b78120"}, "downloads": -1, "filename": "rhymediscovery-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ba729a4d6d7b122071248516fb4d4452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12404, "upload_time": "2016-06-11T20:15:40", "upload_time_iso_8601": "2016-06-11T20:15:40.123724Z", "url": "https://files.pythonhosted.org/packages/a8/1a/5d17c0ee174a01d4970956a5e4b1fcd35a6ca6cbc16f8108bc014bfcc60d/rhymediscovery-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba729a4d6d7b122071248516fb4d4452", "sha256": "f81ae01902a94b8a7df9231def6589a338a7a3bcf5fa7aacfb9ecbf449b78120"}, "downloads": -1, "filename": "rhymediscovery-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ba729a4d6d7b122071248516fb4d4452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12404, "upload_time": "2016-06-11T20:15:40", "upload_time_iso_8601": "2016-06-11T20:15:40.123724Z", "url": "https://files.pythonhosted.org/packages/a8/1a/5d17c0ee174a01d4970956a5e4b1fcd35a6ca6cbc16f8108bc014bfcc60d/rhymediscovery-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:54 2020"}