{"info": {"author": "Samyak Ratna Tamrakar", "author_email": "samyak.r.tamrakar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# NeatLogger\nConvenient wrapper for logging python applications into files with desired separation intervals.\n\n*Note*: Methods to initialize and terminate logging during `multiprocessing` is referenced from [multiprocessing-logging](https://github.com/jruere/multiprocessing-logging).\n\n\n## Requirements\n\n* Python 3+ (Tested in 3.7)\n* multiprocessing-logging == 0.3.1\n\n\n## Install with pip\n```bash\n$ pip install NeatLogger\n```\n\n## Usage\n1. Import the library.\n    ```python\n    from NeatLogger import NeatLogger\n    ```\n2. Create an instance by defining the folder to store log files, the project name, the level of logging, the log file separation interval, whether to log to *sys.stdout* and whether to use UTC for logging.\n    ```python\n    NL = NeatLogger(\n       project_name=\"demo\",\n       log_folder=\"demo_logs\",\n       log_level=\"info\",\n       log_to_stdout=True,\n       use_utc = True,\n       log_file_separation_interval=\"daily\",\n    )\n    ```\n3. Get a logger and start logging.\n    ```python\n    logger = NL.get_logger()\n    logger.info(\"Testing 1 2 3 ...\")\n    ```\n\n*\"Testing 1 2 3 ...\"* is logged to *sys.stdout*, as well as to *./demo_logs/demo_<`datetime`>.log*.\n\nSample usage is also available as **demo.py**. Please refer to it's help for more info.\n\nFor help:\n```bash\npython3 demo.py -h\n```\n\nTo recreate Steps 1-3:\n```bash\npython3 demo.py -p demo -f demo_logs -i daily -l debug -o -u\n```\n\n## Author\n\n**&copy; 2020, [Samyak Ratna Tamrakar](https://www.linkedin.com/in/srtamrakar/)**.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/srtamrakar/python-logger/archive/v_0.2.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/srtamrakar/python-logger", "keywords": "log,logger,logging", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "NeatLogger", "package_url": "https://pypi.org/project/NeatLogger/", "platform": "", "project_url": "https://pypi.org/project/NeatLogger/", "project_urls": {"Download": "https://github.com/srtamrakar/python-logger/archive/v_0.2.1.tar.gz", "Homepage": "https://github.com/srtamrakar/python-logger"}, "release_url": "https://pypi.org/project/NeatLogger/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Convenient wrapper for logging python applications into files with desired separation intervals.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NeatLogger</h1>\n<p>Convenient wrapper for logging python applications into files with desired separation intervals.</p>\n<p><em>Note</em>: Methods to initialize and terminate logging during <code>multiprocessing</code> is referenced from <a href=\"https://github.com/jruere/multiprocessing-logging\" rel=\"nofollow\">multiprocessing-logging</a>.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3+ (Tested in 3.7)</li>\n<li>multiprocessing-logging == 0.3.1</li>\n</ul>\n<h2>Install with pip</h2>\n<pre>$ pip install NeatLogger\n</pre>\n<h2>Usage</h2>\n<ol>\n<li>Import the library.\n<pre><span class=\"kn\">from</span> <span class=\"nn\">NeatLogger</span> <span class=\"kn\">import</span> <span class=\"n\">NeatLogger</span>\n</pre>\n</li>\n<li>Create an instance by defining the folder to store log files, the project name, the level of logging, the log file separation interval, whether to log to <em>sys.stdout</em> and whether to use UTC for logging.\n<pre><span class=\"n\">NL</span> <span class=\"o\">=</span> <span class=\"n\">NeatLogger</span><span class=\"p\">(</span>\n   <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"demo\"</span><span class=\"p\">,</span>\n   <span class=\"n\">log_folder</span><span class=\"o\">=</span><span class=\"s2\">\"demo_logs\"</span><span class=\"p\">,</span>\n   <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s2\">\"info\"</span><span class=\"p\">,</span>\n   <span class=\"n\">log_to_stdout</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n   <span class=\"n\">use_utc</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n   <span class=\"n\">log_file_separation_interval</span><span class=\"o\">=</span><span class=\"s2\">\"daily\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li>Get a logger and start logging.\n<pre><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">NL</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Testing 1 2 3 ...\"</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n<p><em>\"Testing 1 2 3 ...\"</em> is logged to <em>sys.stdout</em>, as well as to <em>./demo_logs/demo_&lt;<code>datetime</code>&gt;.log</em>.</p>\n<p>Sample usage is also available as <strong>demo.py</strong>. Please refer to it's help for more info.</p>\n<p>For help:</p>\n<pre>python3 demo.py -h\n</pre>\n<p>To recreate Steps 1-3:</p>\n<pre>python3 demo.py -p demo -f demo_logs -i daily -l debug -o -u\n</pre>\n<h2>Author</h2>\n<p><strong>\u00a9 2020, <a href=\"https://www.linkedin.com/in/srtamrakar/\" rel=\"nofollow\">Samyak Ratna Tamrakar</a></strong>.</p>\n\n          </div>"}, "last_serial": 6996449, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "96a9447d6e75219e92ca06e81c655f93", "sha256": "8eec942b831bcf7a11595d29a263d819d9a1a5644743d8730937f1dbb30cfec3"}, "downloads": -1, "filename": "NeatLogger-0.2.tar.gz", "has_sig": false, "md5_digest": "96a9447d6e75219e92ca06e81c655f93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3426, "upload_time": "2020-04-10T08:36:23", "upload_time_iso_8601": "2020-04-10T08:36:23.544697Z", "url": "https://files.pythonhosted.org/packages/80/7e/7848eae26cf00effb66b173e5d3774e8338394f4661dff1d6540f1b6befd/NeatLogger-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8194bb39b40448bdf2ec3db6c9f59910", "sha256": "e5ea8e8f6bcf9e9b48c73df7a79420513dcda52d1ca0fe121be9921266dc86b0"}, "downloads": -1, "filename": "NeatLogger-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8194bb39b40448bdf2ec3db6c9f59910", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3423, "upload_time": "2020-04-10T21:03:12", "upload_time_iso_8601": "2020-04-10T21:03:12.941887Z", "url": "https://files.pythonhosted.org/packages/b6/d7/9b4fc288acc548793c31e4f7a25028ea3c02d91832d94606f754815cbbc7/NeatLogger-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8194bb39b40448bdf2ec3db6c9f59910", "sha256": "e5ea8e8f6bcf9e9b48c73df7a79420513dcda52d1ca0fe121be9921266dc86b0"}, "downloads": -1, "filename": "NeatLogger-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8194bb39b40448bdf2ec3db6c9f59910", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3423, "upload_time": "2020-04-10T21:03:12", "upload_time_iso_8601": "2020-04-10T21:03:12.941887Z", "url": "https://files.pythonhosted.org/packages/b6/d7/9b4fc288acc548793c31e4f7a25028ea3c02d91832d94606f754815cbbc7/NeatLogger-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:39 2020"}