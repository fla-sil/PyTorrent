{"info": {"author": "Victor Navarro & Eduardo Graells", "author_email": "victor.navarro@ug.uchile.cl", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# tsnmf-sparse\n\nThis repository contains an implementation of Topic-Supervised Non-Negative Matrix Factorization (TS-NMF) [1] with Sparse Matrices in Python, using a Scikit-Learn's compatible API.\n\n## How it Works\nFrom [1]:  Suppose that one supervises *k << n* documents and identifies *l << t* topics that were contained in a subset of  the  documents. One can supervise the `NMF` method using this information, represented by an *n\u00c3\u2014d topic supervision* matrix *L*.The elements of *L* contrain the importance weights of matrix *W* and are of the following form:\n\n<img align='middle' src='https://latex.codecogs.com/gif.latex?%5Clarge%20L_%7Bij%7D%3D%5Cleft%5C%7B%5Cbegin%7Bmatrix%7D%201%20%26%5Ctext%7Bif%20topic%20%7D%20j%20%5Ctext%7B%20is%20permitted%20in%20document%20%7D%20i%5C%5C%200%20%26%5Ctext%7Bif%20topic%20%7D%20j%20%5Ctext%7B%20is%20%5Ctextit%7Bnot%7D%20permitted%20in%20document%20%7D%20i%5C%5C%20%5Cend%7Bmatrix%7D%5Cright.'/>\n\nThen, for a term-document matrix *V* and supervision matrix *L*, TS-NMF seeks matrices *W* and *H* that minimize\n\n<img align='middle' src='https://latex.codecogs.com/gif.latex?%5Clarge%20D_%7BTS%7D%28W%2CH%29%3D%7C%7CV-%28W%20%5Ccirc%20L%29%20H%7C%7C%5E2%2C%5Cquad%20W%20%5Cgeq%200%2C%5Cquad%20H%20%5Cgeq0.'/>\n\nWhere \u00e2\u2014\u2039 represent the Hadamard (element-wise) product operator.\n\n## Installation\nYou can install TS-NMF via pip:\n\n```python\npip install tsnmf\n```\n\nOr clonning this repository and running `setup.py`:\n\n```python\npython setup.py install\n```\n## Usage\nTS-NMF is used in a similar way as the module `decomposition.NMF` from Scikit-Learn. The extra thing that you need is a `list of list` that contains the labels to build the matrix *L*.\n\nSuppose you want to get 3 topics from 5 documents. The 5 documents should be represented in a matrix `V`, the most used way is apply a TF-IDF Vectorizer, which reflect how important a word is to a document.\n\nEach element of the `list of list` of labels correspond to a document. These elements contain a list of topics that contrain the document. For example\n\n```python\n\nlabels = [[],\n          [0,2], # document 1\n          [],\n          [],\n          [1]] # document 4\n```\n\nmeans that the document 1 is contrained to be topic 0 or 2 and document 4 to be topic 1. For the other documents all the topics are permitted.\n\nFinally, to run TS-NMF:\n\n```python\nfrom tsnmf import TSNMF\n\ntsnmf = TSNMF(n_components=3, random_state=1)\nW = tsnmf.fit_transform(V, labels=labels)\nH = tsnmf.components_\n```\n\n## Credits\n\n  - Developed mainly by Victor Navarro (@vokturz), under the guidance of Eduardo Graells-Garrido (@carnby), in the context of CONICYT Fondo de Fomento al Desarrollo Cient\u00c3\u00adfico y Tecnol\u00c3\u00b3gico (FONDECYT) Proyecto de Iniciaci\u00c3\u00b3n 11180913.\n  - Based on [scikit-learn's NMF code](https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/decomposition/_nmf.py) and the original [ws-nmf](https://github.com/kelsey-macmillan/ws-nmf). \n\n## References\n\n  1. MacMillan, Kelsey, and James D. Wilson. [\"Topic supervised non-negative matrix factorization.\"](https://arxiv.org/abs/1706.05084) _arXiv preprint arXiv:1706.05084_ (2017).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Vokturz/tsnmf-sparse", "keywords": "tsnmf nmf sparse", "license": "BSD 3-clause \"New\" or \"Revised License\"", "maintainer": "", "maintainer_email": "", "name": "tsnmf", "package_url": "https://pypi.org/project/tsnmf/", "platform": "", "project_url": "https://pypi.org/project/tsnmf/", "project_urls": {"Homepage": "https://github.com/Vokturz/tsnmf-sparse"}, "release_url": "https://pypi.org/project/tsnmf/1.0.4/", "requires_dist": ["numpy", "sklearn", "scipy"], "requires_python": ">=3.6", "summary": "Implementation of Topic-Supervised Non-Negative Matrix Factorization", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tsnmf-sparse</h1>\n<p>This repository contains an implementation of Topic-Supervised Non-Negative Matrix Factorization (TS-NMF) [1] with Sparse Matrices in Python, using a Scikit-Learn's compatible API.</p>\n<h2>How it Works</h2>\n<p>From [1]:  Suppose that one supervises <em>k &lt;&lt; n</em> documents and identifies <em>l &lt;&lt; t</em> topics that were contained in a subset of  the  documents. One can supervise the <code>NMF</code> method using this information, represented by an <em>n\u00c3\u2014d topic supervision</em> matrix <em>L</em>.The elements of <em>L</em> contrain the importance weights of matrix <em>W</em> and are of the following form:</p>\n<img align=\"middle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f3a00f66237c6a9bfb96a9d29e3a60870904574/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2535436c617267652532304c5f253742696a2537442533442535436c656674253543253742253543626567696e2537426d617472697825374425323031253230253236253543746578742537426966253230746f7069632532302537442532306a2532302535437465787425374225323069732532307065726d6974746564253230696e253230646f63756d656e742532302537442532306925354325354325323030253230253236253543746578742537426966253230746f7069632532302537442532306a2532302535437465787425374225323069732532302535437465787469742537426e6f742537442532307065726d6974746564253230696e253230646f63756d656e7425323025374425323069253543253543253230253543656e642537426d617472697825374425354372696768742e\">\n<p>Then, for a term-document matrix <em>V</em> and supervision matrix <em>L</em>, TS-NMF seeks matrices <em>W</em> and <em>H</em> that minimize</p>\n<img align=\"middle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a137a9c23b86f01bf41644c43cec5ebc2f647651/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2535436c61726765253230445f25374254532537442532385725324348253239253344253743253743562d25323857253230253543636972632532304c25323925323048253743253743253545322532432535437175616425323057253230253543676571253230302532432535437175616425323048253230253543676571302e\">\n<p>Where \u00e2\u2014\u2039 represent the Hadamard (element-wise) product operator.</p>\n<h2>Installation</h2>\n<p>You can install TS-NMF via pip:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">tsnmf</span>\n</pre>\n<p>Or clonning this repository and running <code>setup.py</code>:</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span>\n</pre>\n<h2>Usage</h2>\n<p>TS-NMF is used in a similar way as the module <code>decomposition.NMF</code> from Scikit-Learn. The extra thing that you need is a <code>list of list</code> that contains the labels to build the matrix <em>L</em>.</p>\n<p>Suppose you want to get 3 topics from 5 documents. The 5 documents should be represented in a matrix <code>V</code>, the most used way is apply a TF-IDF Vectorizer, which reflect how important a word is to a document.</p>\n<p>Each element of the <code>list of list</code> of labels correspond to a document. These elements contain a list of topics that contrain the document. For example</p>\n<pre><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[[],</span>\n          <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"c1\"># document 1</span>\n          <span class=\"p\">[],</span>\n          <span class=\"p\">[],</span>\n          <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"c1\"># document 4</span>\n</pre>\n<p>means that the document 1 is contrained to be topic 0 or 2 and document 4 to be topic 1. For the other documents all the topics are permitted.</p>\n<p>Finally, to run TS-NMF:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tsnmf</span> <span class=\"kn\">import</span> <span class=\"n\">TSNMF</span>\n\n<span class=\"n\">tsnmf</span> <span class=\"o\">=</span> <span class=\"n\">TSNMF</span><span class=\"p\">(</span><span class=\"n\">n_components</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">tsnmf</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"n\">tsnmf</span><span class=\"o\">.</span><span class=\"n\">components_</span>\n</pre>\n<h2>Credits</h2>\n<ul>\n<li>Developed mainly by Victor Navarro (@vokturz), under the guidance of Eduardo Graells-Garrido (@carnby), in the context of CONICYT Fondo de Fomento al Desarrollo Cient\u00c3\u00adfico y Tecnol\u00c3\u00b3gico (FONDECYT) Proyecto de Iniciaci\u00c3\u00b3n 11180913.</li>\n<li>Based on <a href=\"https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/decomposition/_nmf.py\" rel=\"nofollow\">scikit-learn's NMF code</a> and the original <a href=\"https://github.com/kelsey-macmillan/ws-nmf\" rel=\"nofollow\">ws-nmf</a>.</li>\n</ul>\n<h2>References</h2>\n<ol>\n<li>MacMillan, Kelsey, and James D. Wilson. <a href=\"https://arxiv.org/abs/1706.05084\" rel=\"nofollow\">\"Topic supervised non-negative matrix factorization.\"</a> <em>arXiv preprint arXiv:1706.05084</em> (2017).</li>\n</ol>\n\n          </div>"}, "last_serial": 6875295, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "1a104e3ddc5f3f923e28c9073fa2ec28", "sha256": "73f6d0f620018a86cff8b6354d47d55c27c0aa65d65832fe1de518e2a936fffb"}, "downloads": -1, "filename": "tsnmf-1.0-py3.7.egg", "has_sig": false, "md5_digest": "1a104e3ddc5f3f923e28c9073fa2ec28", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 14340, "upload_time": "2020-03-16T20:09:34", "upload_time_iso_8601": "2020-03-16T20:09:34.049797Z", "url": "https://files.pythonhosted.org/packages/58/f1/6cdbf97703e777334da8e94ecc945fd4531b2d55da07d6ec5406f4ad0eec/tsnmf-1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e938f2313c2f10e0ffb835582ddfda48", "sha256": "78d02dd18f11afc9f34234d924aa06cb07e89f5223138f564c73064c2b14bd6a"}, "downloads": -1, "filename": "tsnmf-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e938f2313c2f10e0ffb835582ddfda48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8928, "upload_time": "2020-03-16T20:09:31", "upload_time_iso_8601": "2020-03-16T20:09:31.862620Z", "url": "https://files.pythonhosted.org/packages/ac/4f/a70819270e409072c86e9481508d9da7f3cd5bf04b8943890872d525e8c3/tsnmf-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ec9779e3ba497ec1599008abdf53622", "sha256": "537c87e1d389cb7f6141873e6f835e8a7e91366f617e8a904a42a663f36f5c87"}, "downloads": -1, "filename": "tsnmf-1.0.tar.gz", "has_sig": false, "md5_digest": "2ec9779e3ba497ec1599008abdf53622", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8054, "upload_time": "2020-03-16T20:09:35", "upload_time_iso_8601": "2020-03-16T20:09:35.114780Z", "url": "https://files.pythonhosted.org/packages/38/c8/74b56789197b57354c6b4f054c78378e5a53d854e2f7279a427635df19ce/tsnmf-1.0.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c7032e401136a5443e5722a39b0c8d78", "sha256": "fbf11e3e772c80045ab960dc65405a9041c6e5dcc342ba115eedf84c65e02a40"}, "downloads": -1, "filename": "tsnmf-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c7032e401136a5443e5722a39b0c8d78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8951, "upload_time": "2020-03-24T19:30:22", "upload_time_iso_8601": "2020-03-24T19:30:22.226809Z", "url": "https://files.pythonhosted.org/packages/b8/9c/12f73495bc33ccd0e15c1ecee27c1f58e4c98bb2a8ff837702d99dc5c58c/tsnmf-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d65511683165e60c10a49a55335e4226", "sha256": "d1fdf999bfac51a468b207c948d1f30d8cd867c94c2ce4e089d0d807b63126e1"}, "downloads": -1, "filename": "tsnmf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "d65511683165e60c10a49a55335e4226", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8060, "upload_time": "2020-03-24T19:30:23", "upload_time_iso_8601": "2020-03-24T19:30:23.577057Z", "url": "https://files.pythonhosted.org/packages/f7/24/f06c37341efe39b8d535de0b241a7f5122f36c79b59d158641b241b954b8/tsnmf-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7032e401136a5443e5722a39b0c8d78", "sha256": "fbf11e3e772c80045ab960dc65405a9041c6e5dcc342ba115eedf84c65e02a40"}, "downloads": -1, "filename": "tsnmf-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c7032e401136a5443e5722a39b0c8d78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8951, "upload_time": "2020-03-24T19:30:22", "upload_time_iso_8601": "2020-03-24T19:30:22.226809Z", "url": "https://files.pythonhosted.org/packages/b8/9c/12f73495bc33ccd0e15c1ecee27c1f58e4c98bb2a8ff837702d99dc5c58c/tsnmf-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d65511683165e60c10a49a55335e4226", "sha256": "d1fdf999bfac51a468b207c948d1f30d8cd867c94c2ce4e089d0d807b63126e1"}, "downloads": -1, "filename": "tsnmf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "d65511683165e60c10a49a55335e4226", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8060, "upload_time": "2020-03-24T19:30:23", "upload_time_iso_8601": "2020-03-24T19:30:23.577057Z", "url": "https://files.pythonhosted.org/packages/f7/24/f06c37341efe39b8d535de0b241a7f5122f36c79b59d158641b241b954b8/tsnmf-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:45:15 2020"}