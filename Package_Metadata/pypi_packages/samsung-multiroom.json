{"info": {"author": "Krystian Galutowski", "author_email": "k.galutowski@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Home Automation"], "description": "Samsung Multiroom (WIP)\n=======================\n\nControl Samsung Multiroom speakers.\n\n.. image:: https://img.shields.io/travis/krygal/samsung_multiroom/master.svg\n    :target: https://travis-ci.org/krygal/samsung_multiroom\n.. image:: https://img.shields.io/librariesio/github/krygal/samsung_multiroom.svg\n.. image:: https://img.shields.io/codeclimate/maintainability-percentage/krygal/samsung_multiroom.svg\n    :target: https://codeclimate.com/github/krygal/samsung_multiroom\n.. image:: https://img.shields.io/codeclimate/coverage/krygal/samsung_multiroom.svg\n    :target: https://codeclimate.com/github/krygal/samsung_multiroom\n.. image:: https://img.shields.io/pypi/v/samsung_multiroom.svg\n    :target: https://pypi.org/project/samsung_multiroom/\n.. image:: https://img.shields.io/pypi/pyversions/samsung_multiroom.svg\n.. image:: https://img.shields.io/pypi/l/samsung_multiroom.svg\n\n\nInstallation\n-------------\n\n .. code:: bash\n\n    pip install samsung_multiroom\n\n\nExample speaker control\n-----------------------\n\n**Initialise**\n\n.. code:: python\n\n    from samsung_multiroom import SamsungMultiroomSpeaker\n\n    # initialise (replace with your speaker's ip address)\n    speaker = SamsungMultiroomSpeaker('192.168.1.129')\n\n    # get speaker name\n    speaker.get_name()\n\n\n**Basic functions**\n\n.. code:: python\n\n    # get/set volume\n    volume = speaker.get_volume()\n    print(volume)\n\n    speaker.set_volume(10)\n\n    # switch source to connect with your samsung tv\n    speaker.set_source('soundshare')\n\n    # mute/unmute\n    speaker.mute()\n    speaker.unmute()\n\n\n**Audio source browsers**\n\n.. code:: python\n\n    # browse dlna device called nas\n    browser = speaker.service('dlna').browser\n    # or shorter\n    browser = speaker.browser('dlna')\n    browser = browser.browse('/nas/Music/By Folder/Air/Moon Safari/CD 1')\n\n    for item in browser:\n        print(item.object_type, item.object_id, item.artist, '-',  item.name)\n\n\n    # browse TuneIn radios\n    browser = speaker.service('tunein').browser\n    browser = browser.browse('/Trending/')\n\n    for item in browser:\n        print(item.object_type, item.object_id, item.name)\n\n\n**App integrations**\n\n.. code:: python\n\n    # check available services\n    names = speaker.get_services_names()\n    print(names)\n\n    # authenticate (unless you've done it already via mobile app)\n    speaker.service('Deezer').login('your email', 'your password')\n\n    browser = speaker.service('Deezer').browser\n    browser = browser.browse('/Browse/Rock/Artists/Queen')\n\n    for item in browser:\n        print(item.object_type, item.object_id, item.name)\n\n\n**Player functions**\n\n.. code:: python\n\n    # create playlist from browser items (see above) and play\n    speaker.player.play(browser)\n\n    # pause/resume\n    speaker.player.pause()\n    speaker.player.resume()\n\n    # repeat mode\n    from samsung_multiroom import REPEAT_ALL, REPEAT_ONE, REPEAT_OFF\n    speaker.player.repeat(REPEAT_ALL)\n\n    # get track info\n    track = speaker.player.get_current_track()\n    print(track)\n\n\n**Equalizer functions**\n\n.. code:: python\n\n    # get preset names\n    presets = speaker.equalizer.get_presets_names()\n    print(presets)\n\n    # set predefined equalizer settings\n    speaker.equalizer.set('Pop')\n\n    # set adhoc settings\n    speaker.equalizer.set([4,3,2,1,2,3,0]) # <-6, 6>\n\n    # overwrite current preset\n    speaker.equalizer.save()\n\n    # ... or save as a new preset\n    speaker.equalizer.save('Experimental')\n\n\n**Clock functions**\n\n.. code:: python\n\n    # set alarm\n    browser = speaker.service('tunein').browser\n    browser = browser.browse('/Trending/')\n\n    speaker.clock.alarm.slot(0).set(\n        time='17:28',\n        weekdays=[0,1,5], # Mon, Tue, Fri\n        playlist=browser,\n    )\n\n    # enable/disable alarm 0\n    speaker.clock.alarm.slot(0).enable()\n    speaker.clock.alarm.slot(0).disable()\n\n    # sleep after 30 seconds\n    speaker.clock.timer.start(300)\n\n    remaining_time = speaker.clock.timer.get_remaining_time()\n    print(remaining_time)\n\n\n**Speaker discovery**\n\n.. code:: python\n\n    from samsung_multiroom import SamsungSpeakerDiscovery\n    speakers = SamsungSpeakerDiscovery().discover() # takes some time\n\n    for s in speakers:\n        print(s.get_name(), '@', s.ip_address)\n\n\n**Speaker grouping**\n\n.. code:: python\n\n    # (after speaker discovery)\n    main_speaker = speakers[0]\n    rest_speakers = speakers[1:]\n\n    speaker_group = main_speaker.group('My first group', rest_speakers)\n\n    # now use speaker group like a speaker\n    speaker_group.set_volume(10)\n\n    browser = speaker_group.service('dlna').browser\n    browser = browser.browse('/nas/Music/By Folder/Air/Moon Safari/CD 1')\n\n    speaker_group.player.play(browser)\n\n\n**Events (preview)**\n\nYou can monitor events emitted by the speaker without polling. Full list of supported events can be found in\nsamsung_multiroom/event/type/.\n\n.. code:: python\n\n    import asyncio\n\n    from samsung_multiroom import SamsungMultiroomSpeaker\n\n\n    # listener will be passed an Event object (see samsung_multiroom/event/type/)\n    def listener(event):\n        print(event.name, event)\n\n\n    async def main():\n        speaker = SamsungMultiroomSpeaker('192.168.1.129')\n        event_loop = speaker.event_loop\n        event_loop.add_listener('*', listener)\n\n        await event_loop.loop()\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n    loop.close()\n\n.. code:: python\n\n    # listen to all events\n    event_loop.add_listener('*', listener)\n\n    # listen to events within a namespace\n    event_loop.add_listener('speaker.service.*', listener)\n\n    # listen to a single event\n    event_loop.add_listener('speaker.service.changed', listener)\n\n\nLicense\n-------\n\nMIT License\n\nCopyright (c) 2018 Krystian Galutowski\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/krygal/samsung_multiroom", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "samsung-multiroom", "package_url": "https://pypi.org/project/samsung-multiroom/", "platform": "", "project_url": "https://pypi.org/project/samsung-multiroom/", "project_urls": {"Homepage": "https://github.com/krygal/samsung_multiroom"}, "release_url": "https://pypi.org/project/samsung-multiroom/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "Samsung multiroom speaker support", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Control Samsung Multiroom speakers.</p>\n<a href=\"https://travis-ci.org/krygal/samsung_multiroom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/krygal/samsung_multiroom/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5454d3f3cb86e923a6c097c1eb12c824c8c75566/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6b727967616c2f73616d73756e675f6d756c7469726f6f6d2f6d61737465722e737667\"></a>\n<img alt=\"https://img.shields.io/librariesio/github/krygal/samsung_multiroom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d97f48aac0b4cfac7bdf698d4a55130f72d64af4/68747470733a2f2f696d672e736869656c64732e696f2f6c6962726172696573696f2f6769746875622f6b727967616c2f73616d73756e675f6d756c7469726f6f6d2e737667\">\n<a href=\"https://codeclimate.com/github/krygal/samsung_multiroom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codeclimate/maintainability-percentage/krygal/samsung_multiroom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9c9369dc488701b86a313e2e79e7f3d09933c61/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f6d61696e7461696e6162696c6974792d70657263656e746167652f6b727967616c2f73616d73756e675f6d756c7469726f6f6d2e737667\"></a>\n<a href=\"https://codeclimate.com/github/krygal/samsung_multiroom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codeclimate/coverage/krygal/samsung_multiroom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ce11c963679aa989d45a06f67fbc0d34d050ec8/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f636f7665726167652f6b727967616c2f73616d73756e675f6d756c7469726f6f6d2e737667\"></a>\n<a href=\"https://pypi.org/project/samsung_multiroom/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/samsung_multiroom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0970db76cb08a3c71d352f9df185a03ab6e4c018/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73616d73756e675f6d756c7469726f6f6d2e737667\"></a>\n<img alt=\"https://img.shields.io/pypi/pyversions/samsung_multiroom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d6879d9dd407e07394fefb79b25472b59d158f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73616d73756e675f6d756c7469726f6f6d2e737667\">\n<img alt=\"https://img.shields.io/pypi/l/samsung_multiroom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd60c639033eb3fdd47eb60195e4a9eb95c36022/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f73616d73756e675f6d756c7469726f6f6d2e737667\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\n<pre>pip install samsung_multiroom\n</pre>\n</blockquote>\n</div>\n<div id=\"example-speaker-control\">\n<h2>Example speaker control</h2>\n<p><strong>Initialise</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">samsung_multiroom</span> <span class=\"kn\">import</span> <span class=\"n\">SamsungMultiroomSpeaker</span>\n\n<span class=\"c1\"># initialise (replace with your speaker's ip address)</span>\n<span class=\"n\">speaker</span> <span class=\"o\">=</span> <span class=\"n\">SamsungMultiroomSpeaker</span><span class=\"p\">(</span><span class=\"s1\">'192.168.1.129'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get speaker name</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">get_name</span><span class=\"p\">()</span>\n</pre>\n<p><strong>Basic functions</strong></p>\n<pre><span class=\"c1\"># get/set volume</span>\n<span class=\"n\">volume</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">get_volume</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">volume</span><span class=\"p\">)</span>\n\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">set_volume</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># switch source to connect with your samsung tv</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">set_source</span><span class=\"p\">(</span><span class=\"s1\">'soundshare'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># mute/unmute</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">mute</span><span class=\"p\">()</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">unmute</span><span class=\"p\">()</span>\n</pre>\n<p><strong>Audio source browsers</strong></p>\n<pre><span class=\"c1\"># browse dlna device called nas</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"s1\">'dlna'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">browser</span>\n<span class=\"c1\"># or shorter</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">browser</span><span class=\"p\">(</span><span class=\"s1\">'dlna'</span><span class=\"p\">)</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">browse</span><span class=\"p\">(</span><span class=\"s1\">'/nas/Music/By Folder/Air/Moon Safari/CD 1'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">browser</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">object_type</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">object_id</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">artist</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">,</span>  <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># browse TuneIn radios</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"s1\">'tunein'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">browser</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">browse</span><span class=\"p\">(</span><span class=\"s1\">'/Trending/'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">browser</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">object_type</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">object_id</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p><strong>App integrations</strong></p>\n<pre><span class=\"c1\"># check available services</span>\n<span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">get_services_names</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># authenticate (unless you've done it already via mobile app)</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"s1\">'Deezer'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s1\">'your email'</span><span class=\"p\">,</span> <span class=\"s1\">'your password'</span><span class=\"p\">)</span>\n\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"s1\">'Deezer'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">browser</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">browse</span><span class=\"p\">(</span><span class=\"s1\">'/Browse/Rock/Artists/Queen'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">browser</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">object_type</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">object_id</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Player functions</strong></p>\n<pre><span class=\"c1\"># create playlist from browser items (see above) and play</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pause/resume</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"p\">()</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">resume</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># repeat mode</span>\n<span class=\"kn\">from</span> <span class=\"nn\">samsung_multiroom</span> <span class=\"kn\">import</span> <span class=\"n\">REPEAT_ALL</span><span class=\"p\">,</span> <span class=\"n\">REPEAT_ONE</span><span class=\"p\">,</span> <span class=\"n\">REPEAT_OFF</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"n\">REPEAT_ALL</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get track info</span>\n<span class=\"n\">track</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">get_current_track</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Equalizer functions</strong></p>\n<pre><span class=\"c1\"># get preset names</span>\n<span class=\"n\">presets</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">equalizer</span><span class=\"o\">.</span><span class=\"n\">get_presets_names</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">presets</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set predefined equalizer settings</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">equalizer</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'Pop'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set adhoc settings</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">equalizer</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"c1\"># &lt;-6, 6&gt;</span>\n\n<span class=\"c1\"># overwrite current preset</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">equalizer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># ... or save as a new preset</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">equalizer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'Experimental'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Clock functions</strong></p>\n<pre><span class=\"c1\"># set alarm</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"s1\">'tunein'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">browser</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">browse</span><span class=\"p\">(</span><span class=\"s1\">'/Trending/'</span><span class=\"p\">)</span>\n\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">alarm</span><span class=\"o\">.</span><span class=\"n\">slot</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span>\n    <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s1\">'17:28'</span><span class=\"p\">,</span>\n    <span class=\"n\">weekdays</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"c1\"># Mon, Tue, Fri</span>\n    <span class=\"n\">playlist</span><span class=\"o\">=</span><span class=\"n\">browser</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># enable/disable alarm 0</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">alarm</span><span class=\"o\">.</span><span class=\"n\">slot</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">()</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">alarm</span><span class=\"o\">.</span><span class=\"n\">slot</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># sleep after 30 seconds</span>\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">timer</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n\n<span class=\"n\">remaining_time</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">timer</span><span class=\"o\">.</span><span class=\"n\">get_remaining_time</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">remaining_time</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Speaker discovery</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">samsung_multiroom</span> <span class=\"kn\">import</span> <span class=\"n\">SamsungSpeakerDiscovery</span>\n<span class=\"n\">speakers</span> <span class=\"o\">=</span> <span class=\"n\">SamsungSpeakerDiscovery</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">discover</span><span class=\"p\">()</span> <span class=\"c1\"># takes some time</span>\n\n<span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">speakers</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_name</span><span class=\"p\">(),</span> <span class=\"s1\">'@'</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">ip_address</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Speaker grouping</strong></p>\n<pre><span class=\"c1\"># (after speaker discovery)</span>\n<span class=\"n\">main_speaker</span> <span class=\"o\">=</span> <span class=\"n\">speakers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">rest_speakers</span> <span class=\"o\">=</span> <span class=\"n\">speakers</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n<span class=\"n\">speaker_group</span> <span class=\"o\">=</span> <span class=\"n\">main_speaker</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s1\">'My first group'</span><span class=\"p\">,</span> <span class=\"n\">rest_speakers</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># now use speaker group like a speaker</span>\n<span class=\"n\">speaker_group</span><span class=\"o\">.</span><span class=\"n\">set_volume</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">speaker_group</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"s1\">'dlna'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">browser</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">browse</span><span class=\"p\">(</span><span class=\"s1\">'/nas/Music/By Folder/Air/Moon Safari/CD 1'</span><span class=\"p\">)</span>\n\n<span class=\"n\">speaker_group</span><span class=\"o\">.</span><span class=\"n\">player</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Events (preview)</strong></p>\n<p>You can monitor events emitted by the speaker without polling. Full list of supported events can be found in\nsamsung_multiroom/event/type/.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">samsung_multiroom</span> <span class=\"kn\">import</span> <span class=\"n\">SamsungMultiroomSpeaker</span>\n\n\n<span class=\"c1\"># listener will be passed an Event object (see samsung_multiroom/event/type/)</span>\n<span class=\"k\">def</span> <span class=\"nf\">listener</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">speaker</span> <span class=\"o\">=</span> <span class=\"n\">SamsungMultiroomSpeaker</span><span class=\"p\">(</span><span class=\"s1\">'192.168.1.129'</span><span class=\"p\">)</span>\n    <span class=\"n\">event_loop</span> <span class=\"o\">=</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">event_loop</span>\n    <span class=\"n\">event_loop</span><span class=\"o\">.</span><span class=\"n\">add_listener</span><span class=\"p\">(</span><span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">event_loop</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"c1\"># listen to all events</span>\n<span class=\"n\">event_loop</span><span class=\"o\">.</span><span class=\"n\">add_listener</span><span class=\"p\">(</span><span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># listen to events within a namespace</span>\n<span class=\"n\">event_loop</span><span class=\"o\">.</span><span class=\"n\">add_listener</span><span class=\"p\">(</span><span class=\"s1\">'speaker.service.*'</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># listen to a single event</span>\n<span class=\"n\">event_loop</span><span class=\"o\">.</span><span class=\"n\">add_listener</span><span class=\"p\">(</span><span class=\"s1\">'speaker.service.changed'</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT License</p>\n<p>Copyright (c) 2018 Krystian Galutowski</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 5168123, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "9694fd9d21e1b6996c45f26cf61a27ef", "sha256": "e45d6390487f3d7ed9bcf009145de7a5ce52bc8bdc7dc80ec0b7379c10a42622"}, "downloads": -1, "filename": "samsung_multiroom-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9694fd9d21e1b6996c45f26cf61a27ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58796, "upload_time": "2019-01-13T17:26:43", "upload_time_iso_8601": "2019-01-13T17:26:43.806279Z", "url": "https://files.pythonhosted.org/packages/13/fd/d0bf6b855989e23eaaa3c056de0bad0c09324f9a9ff437bd3fb79d04bc87/samsung_multiroom-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c02efd1d50c615e3a37f398a6b573cb2", "sha256": "c30994da825c278156ad87a1d15eff14b466a7952dbe6e83da45d3c3730b6992"}, "downloads": -1, "filename": "samsung_multiroom-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c02efd1d50c615e3a37f398a6b573cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66329, "upload_time": "2019-01-16T10:54:09", "upload_time_iso_8601": "2019-01-16T10:54:09.206967Z", "url": "https://files.pythonhosted.org/packages/93/70/2f47f7dfd4cd25c8824be45d959dab2f91a40a2945003b9fffced101aa6f/samsung_multiroom-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0a93b16de711f47d8c481d25eb5c0612", "sha256": "3d956f98986aa3c4f2b9139cf738d3f5d17e8bc5807f6878bc921ada85450773"}, "downloads": -1, "filename": "samsung_multiroom-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0a93b16de711f47d8c481d25eb5c0612", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69266, "upload_time": "2019-01-22T19:20:14", "upload_time_iso_8601": "2019-01-22T19:20:14.702652Z", "url": "https://files.pythonhosted.org/packages/ee/81/4902a5e3e405498abe28a2cdc1ce1c78bc9eca2c4eeeca0326ae7a1e064d/samsung_multiroom-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "59cfc8b70e9de2b2df3e214121b0ab42", "sha256": "7e545f9d14303e904e6226a2a609e9c7ae6950afff9301a01175b8f44a9c50e1"}, "downloads": -1, "filename": "samsung_multiroom-0.0.5.tar.gz", "has_sig": false, "md5_digest": "59cfc8b70e9de2b2df3e214121b0ab42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70729, "upload_time": "2019-01-26T16:08:47", "upload_time_iso_8601": "2019-01-26T16:08:47.825011Z", "url": "https://files.pythonhosted.org/packages/08/af/30cbe279ae2a6cc451ec7233ec03273393e616ea29db220731c9e79d30ef/samsung_multiroom-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "e037601b9f0e2f5c3c9de65976d7476b", "sha256": "3a3a087cd5f62ce31cf550c0e08e3370ad9869e05ac016157e5051d46284eea2"}, "downloads": -1, "filename": "samsung_multiroom-0.0.6.tar.gz", "has_sig": false, "md5_digest": "e037601b9f0e2f5c3c9de65976d7476b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74937, "upload_time": "2019-02-09T17:43:17", "upload_time_iso_8601": "2019-02-09T17:43:17.256442Z", "url": "https://files.pythonhosted.org/packages/73/60/3d6a3e1d63b556ab88cc2c748bbffdb27a940f663e1567a4a9c6e4ecb4db/samsung_multiroom-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b7d4daaab516698f7c0169c921ab6f2c", "sha256": "a92850d198d8b56c44acfe6bd222c7240f4e996e8381d6fe5ecd6a935ed8e4d5"}, "downloads": -1, "filename": "samsung_multiroom-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b7d4daaab516698f7c0169c921ab6f2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74928, "upload_time": "2019-04-20T16:36:49", "upload_time_iso_8601": "2019-04-20T16:36:49.034606Z", "url": "https://files.pythonhosted.org/packages/f5/ec/918b4b3bc03f485e6e574b72f17b1697e4eb905f1ce2ea15ea227df52558/samsung_multiroom-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7d4daaab516698f7c0169c921ab6f2c", "sha256": "a92850d198d8b56c44acfe6bd222c7240f4e996e8381d6fe5ecd6a935ed8e4d5"}, "downloads": -1, "filename": "samsung_multiroom-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b7d4daaab516698f7c0169c921ab6f2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74928, "upload_time": "2019-04-20T16:36:49", "upload_time_iso_8601": "2019-04-20T16:36:49.034606Z", "url": "https://files.pythonhosted.org/packages/f5/ec/918b4b3bc03f485e6e574b72f17b1697e4eb905f1ce2ea15ea227df52558/samsung_multiroom-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:52 2020"}