{"info": {"author": "Thomas Johannesmeyer", "author_email": "opensource@geeky.gent", "bugtrack_url": null, "classifiers": [], "description": "Copyright \u00a9 2018 Thomas Johannesmeyer\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nDescription: ![Tagsnag](./docs/Icon/Multi.png)\n        \n        # Tagsnag\n        \n        The idea behind Tagsnag is to provide a quick & easy to use cli-tool to extract data for comparison from a *similar version* over *multiple* repositories. It was written with educational use in mind: Imagine `n` groups of students handing in assignments via `n` Git repositories. The assignments are tagged rather similary and follow the same structure roughly.\n        \n        \n        ## Installation\n        \n        ### Install using pip:\n        \n        ```bash\n        $ pip install Tagsnag\n        ```\n        \n        \n        ### Manual Installation\n        \n        Tagsnag uses `Python 3.7` and requires `Gitpython` to be installed. You can install it using the provided `Makefile`:\n        \n        ```bash\n        $ make init\n        ```\n        \n        Or manually using `pip`:\n        \n        ```bash\n        $ pip install gitpython\n        ```\n        \n        \n        ## Run\n        \n        To run `tagsnag` over all repositories in a directory enter the directory via shell. The whole set of commands can be found by calling `--help`.\n        \n        ## Overview\n        \n        | Flag              | Description                                                                                          |\n        | :---              | :---                                                                                                 |\n        | `-l, --log`       | Create a logfile.                                                                                    |\n        | `-p, --prune`     | [Read Git manual.](https://git-scm.com/docs/git-prune) May come in handy if tags are replaced a lot. |\n        | `-s, --autostash` | Instead of skipping the untidy repository, stash all changes.                                        |\n        | `-u, --update`    | Run `git checkout master && git pull origin master` on all repositories.                             |\n        | `-v, --verbose`   | Additional logging.                                                                                  |\n        \n        \n        | Modes                  | Necessary Arguments                                        |\n        | :---                   | :---                                                       |\n        | **Extract File**       | `tagsnag --tag=<tag> --filename=<name> --extension=<type>` |\n        | **Extract Dir**        | `tagsnag --tag=<tag> --directory=<name>`                   |\n        | **Extract via XML**    | *(Deprecated)* `tagsnag --xml=<path>`                      |\n        | `--destination=<name>` | *Optional:* Name created destination folder                |\n        \n        \n        ## Updating repositories\n        \n        Run `git checkout master && git pull origin master` on all repositories:\n        \n        ```bash\n        $ tagsnag --update\n        ```\n        \n        ## File extraction\n        \n        ```bash\n        $ tagsnag --tag=<tag>            \\\n        --filename=<filename>            \\\n        --extension=<filetype>           \\\n        --destination=<destination_path>\n        ```\n        \n        The following sample will fuzzy search for a tag containing `1.0`, check it out and search for a file of type `.md` containing the string `readme` in its name. This file will then be copied into the destination folder and be renamed to `<repository_name>.md`:\n        \n        ```bash\n        $ tagsnag                   \\\n        --tag=1.0                   \\\n        --filename=readme           \\\n        --extension=md              \\\n        --destination=./ReadmeFiles\n        ```\n        \n        ## Directory extraction\n        \n        Instead of a filename, you can provide a directory name to extract. Tagsnag will copy the first directory it finds matching the name starting from `root`.\n        \n        ```bash\n        $ tagsnag --tag=<tag>              \\\n        --directory=<directory_name>     \\\n        --destination=<destination_path>\n        ```\n        \n        \n        ### Run with XML file\n        \n        - For more configurability you can put an `xml` file into the folder containing the repos and run it:\n        \n        ```bash\n        $ tagsnag --xml=<path/of/xml_file>\n        ```\n        \n        \n        ## Authors\n        \n        * **Thomas Johannesmeyer** - [www.geeky.gent](http://geeky.gent)\n        \n        ## License\n        \n        This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n        \n        ## Support\n        \n        The framework and code are provided as-is, but if you need help or have suggestions, you can contact me anytime at [opensource@geeky.gent](mailto:opensource@geeky.gent?subject=Tagsnag).\n        \n        \n        ## I'd like to hear from you\n        \n        If you have got any suggestions, please feel free to share them with me. :)\n        \nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 3\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent\nDescription-Content-Type: text/markdown\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/beulenyoshi/tagsnag", "keywords": "", "license": "Tagsnag", "maintainer": "", "maintainer_email": "", "name": "Tagsnag", "package_url": "https://pypi.org/project/Tagsnag/", "platform": "", "project_url": "https://pypi.org/project/Tagsnag/", "project_urls": {"Homepage": "https://github.com/beulenyoshi/tagsnag"}, "release_url": "https://pypi.org/project/Tagsnag/0.10.0/", "requires_dist": null, "requires_python": "", "summary": "Search files over multiple Git repos, and extract a certain version", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Copyright \u00a9 2018 Thomas Johannesmeyer</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \u201cSoftware\u201d),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n<p>Description: ![Tagsnag](./docs/Icon/Multi.png)</p>\n<blockquote>\n<p># Tagsnag</p>\n<p>The idea behind Tagsnag is to provide a quick &amp; easy to use cli-tool to extract data for comparison from a <em>similar version</em> over <em>multiple</em> repositories. It was written with educational use in mind: Imagine <cite>n</cite> groups of students handing in assignments via <cite>n</cite> Git repositories. The assignments are tagged rather similary and follow the same structure roughly.</p>\n<p>## Installation</p>\n<p>### Install using pip:</p>\n<p><tt>`bash\n$ pip install Tagsnag\n`</tt></p>\n<p>### Manual Installation</p>\n<p>Tagsnag uses <cite>Python 3.7</cite> and requires <cite>Gitpython</cite> to be installed. You can install it using the provided <cite>Makefile</cite>:</p>\n<p><tt>`bash\n$ make init\n`</tt></p>\n<p>Or manually using <cite>pip</cite>:</p>\n<p><tt>`bash\n$ pip install gitpython\n`</tt></p>\n<p>## Run</p>\n<p>To run <cite>tagsnag</cite> over all repositories in a directory enter the directory via shell. The whole set of commands can be found by calling <cite>\u2013help</cite>.</p>\n<p>## Overview</p>\n<div>\n<div>Flag              | Description                                                                                          |</div>\n<div>:\u2014              | :\u2014                                                                                                 |</div>\n<div><cite>-l, \u2013log</cite>       | Create a logfile.                                                                                    |</div>\n<div><cite>-p, \u2013prune</cite>     | [Read Git manual.](<a href=\"https://git-scm.com/docs/git-prune\" rel=\"nofollow\">https://git-scm.com/docs/git-prune</a>) May come in handy if tags are replaced a lot. |</div>\n<div><cite>-s, \u2013autostash</cite> | Instead of skipping the untidy repository, stash all changes.                                        |</div>\n<div><cite>-u, \u2013update</cite>    | Run <cite>git checkout master &amp;&amp; git pull origin master</cite> on all repositories.                             |</div>\n<div><cite>-v, \u2013verbose</cite>   | Additional logging.                                                                                  |</div>\n</div>\n<div>\n<div>Modes                  | Necessary Arguments                                        |</div>\n<div>:\u2014                   | :\u2014                                                       |</div>\n<div><strong>Extract File</strong>       | <cite>tagsnag \u2013tag=&lt;tag&gt; \u2013filename=&lt;name&gt; \u2013extension=&lt;type&gt;</cite> |</div>\n<div><strong>Extract Dir</strong>        | <cite>tagsnag \u2013tag=&lt;tag&gt; \u2013directory=&lt;name&gt;</cite>                   |</div>\n<div><strong>Extract via XML</strong>    | <em>(Deprecated)</em> <cite>tagsnag \u2013xml=&lt;path&gt;</cite>                      |</div>\n<div><cite>\u2013destination=&lt;name&gt;</cite> | <em>Optional:</em> Name created destination folder                |</div>\n</div>\n<p>## Updating repositories</p>\n<p>Run <cite>git checkout master &amp;&amp; git pull origin master</cite> on all repositories:</p>\n<p><tt>`bash\n$ tagsnag <span class=\"pre\">--update</span>\n`</tt></p>\n<p>## File extraction</p>\n<p><tt>`bash\n$ tagsnag <span class=\"pre\">--tag=&lt;tag&gt;</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--filename=&lt;filename&gt;</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--extension=&lt;filetype&gt;</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--destination=&lt;destination_path&gt;</span>\n`</tt></p>\n<p>The following sample will fuzzy search for a tag containing <cite>1.0</cite>, check it out and search for a file of type <cite>.md</cite> containing the string <cite>readme</cite> in its name. This file will then be copied into the destination folder and be renamed to <cite>&lt;repository_name&gt;.md</cite>:</p>\n<p><tt>`bash\n$ tagsnag\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--tag=1.0</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--filename=readme</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--extension=md</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--destination=./ReadmeFiles</span>\n`</tt></p>\n<p>## Directory extraction</p>\n<p>Instead of a filename, you can provide a directory name to extract. Tagsnag will copy the first directory it finds matching the name starting from <cite>root</cite>.</p>\n<p><tt>`bash\n$ tagsnag <span class=\"pre\">--tag=&lt;tag&gt;</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--directory=&lt;directory_name&gt;</span>\u00a0\u00a0\u00a0\u00a0 \\\n<span class=\"pre\">--destination=&lt;destination_path&gt;</span>\n`</tt></p>\n<p>### Run with XML file</p>\n<ul>\n<li>For more configurability you can put an <cite>xml</cite> file into the folder containing the repos and run it:</li>\n</ul>\n<p><tt>`bash\n$ tagsnag <span class=\"pre\">--xml=&lt;path/of/xml_file&gt;</span>\n`</tt></p>\n<p>## Authors</p>\n<ul>\n<li><strong>Thomas Johannesmeyer</strong> - [www.geeky.gent](<a href=\"http://geeky.gent\" rel=\"nofollow\">http://geeky.gent</a>)</li>\n</ul>\n<p>## License</p>\n<p>This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details</p>\n<p>## Support</p>\n<p>The framework and code are provided as-is, but if you need help or have suggestions, you can contact me anytime at [<a href=\"mailto:opensource%40geeky.gent\">opensource<span>@</span>geeky<span>.</span>gent</a>](<a href=\"mailto:opensource%40geeky.gent?subject=Tagsnag\">mailto:opensource<span>@</span>geeky<span>.</span>gent?subject=Tagsnag</a>).</p>\n<p>## I\u2019d like to hear from you</p>\n<p>If you have got any suggestions, please feel free to share them with me. :)</p>\n</blockquote>\n<p>Platform: UNKNOWN\nClassifier: Programming Language :: Python :: 3\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent\nDescription-Content-Type: text/markdown</p>\n\n          </div>"}, "last_serial": 5465207, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "a5944fa93776c2a9ff1fdc6bbaff003f", "sha256": "8d4af7507c63f7cf626c6f644dcb617837e372e3be25f8613814001ebcde7e9d"}, "downloads": -1, "filename": "Tagsnag-0.10.0.tar.gz", "has_sig": false, "md5_digest": "a5944fa93776c2a9ff1fdc6bbaff003f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24649, "upload_time": "2019-06-29T12:03:44", "upload_time_iso_8601": "2019-06-29T12:03:44.254687Z", "url": "https://files.pythonhosted.org/packages/d4/33/90f16b3307a2703e0da3249446758d57c5de11c62fd13a982f33d39a361d/Tagsnag-0.10.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "f20f3f22d8ec9277e2bfa963765b9583", "sha256": "8ab6b97ce200b34100c37c3f11a4c5230bf4ae20dacbdd334d6cddf4797db011"}, "downloads": -1, "filename": "Tagsnag-0.8.0.tar.gz", "has_sig": false, "md5_digest": "f20f3f22d8ec9277e2bfa963765b9583", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8935, "upload_time": "2018-11-13T20:01:29", "upload_time_iso_8601": "2018-11-13T20:01:29.263067Z", "url": "https://files.pythonhosted.org/packages/1e/3a/51625f8892c83275ee59a43fbb41d409d989ea7333aa608baa3ed8250981/Tagsnag-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "1747f5e55dee72336b36e9f3b8ea907a", "sha256": "d1a4072b5fdb5833772fd956c579fbb12413ecd500afc32dd7de85fe937adc88"}, "downloads": -1, "filename": "Tagsnag-0.8.1.tar.gz", "has_sig": false, "md5_digest": "1747f5e55dee72336b36e9f3b8ea907a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8962, "upload_time": "2018-11-13T20:08:10", "upload_time_iso_8601": "2018-11-13T20:08:10.469870Z", "url": "https://files.pythonhosted.org/packages/2e/d9/fd42be893b19f78dd230bf1cc2199ac49c8ec6424d51e68ea41bb7f0234a/Tagsnag-0.8.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "60ad048888ddee8b41e87815b45ce8a0", "sha256": "0045764b47db0d8f78940f10f064aef8ca8193dd8a321ecabddf5590f21b9d67"}, "downloads": -1, "filename": "Tagsnag-0.9.0.tar.gz", "has_sig": false, "md5_digest": "60ad048888ddee8b41e87815b45ce8a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9518, "upload_time": "2018-11-16T23:06:15", "upload_time_iso_8601": "2018-11-16T23:06:15.519142Z", "url": "https://files.pythonhosted.org/packages/18/67/423d087b2aeda4189c54f3aa279c9cf67530e193228b9d8387572066c54b/Tagsnag-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a5944fa93776c2a9ff1fdc6bbaff003f", "sha256": "8d4af7507c63f7cf626c6f644dcb617837e372e3be25f8613814001ebcde7e9d"}, "downloads": -1, "filename": "Tagsnag-0.10.0.tar.gz", "has_sig": false, "md5_digest": "a5944fa93776c2a9ff1fdc6bbaff003f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24649, "upload_time": "2019-06-29T12:03:44", "upload_time_iso_8601": "2019-06-29T12:03:44.254687Z", "url": "https://files.pythonhosted.org/packages/d4/33/90f16b3307a2703e0da3249446758d57c5de11c62fd13a982f33d39a361d/Tagsnag-0.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:26 2020"}