{"info": {"author": "Michael Moser", "author_email": "moser.michael@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Debuggers"], "description": "utilities for tracing of python scripts; works similar to trace.py, it can also print out function parameters and return values\nas well as modification of global and local variables.\n \ncan be invoked as a script (after installing the package)\n \npython -m trace/ntrace [options] <python-file-to-trace> [command line of python file to trace]\n \nBy default it shows function parameters and function return values\n \nOptions:\n    -f              trace function parameter calls (default: on)\n    -F              do not trace function parameters\n \n    -r              trace function return values  (default: on)\n    -R              do not trace function return values\n \n    -l              trace source lines before they are executed (default: on)\n    -L              do not trace source lines before they are executed\n \n    -s              trace setting of variablesa (default: off)\n    -S              do not trace setting of variables\n \n    -g              trace getting of variables (default: off)\n    -G              do not trace getting of variables\n \n    -o              print out object content (default: off)\n    -O              do not print out object content\n \n    -t              show the current thread id in prefix for each source line (default on)\n    -T              hide the current thread id  \n \n    -n              show the nesting level, how many levels down the call stack (default on)\n    -N              hide the nesting level\n \nBy default the following options are on: -l -f -r\n \ncan be invoked as an api\n \n-----\n\nclass NTraceFromCommandLine\n    command line parser for ntrace\n \n    Methods defined here:\n\t__init__(self, argv)\n\n---- \n\nclass NTracer\n    the tracer object; invoke this class to run a python file with tracing\n \n    Methods defined here:\n\t__init__(self, traceOptions=31, follow_objects=False)\n\t    object constructor; options are passed as bit mask values via traceOptions parameter, available options:\n \n    TO_FUNCTION_ARGUMENTS       argument flag: print function arguments\n    TO_FUNCTION_RVALUES         argument flag: print function return values\n    TO_SET_VARS                 argument flag: print modification of variables\n    TO_GET_VARS                 argument flag: print variable access\n    TO_TRACE_SRC_LINES          argument flag: show souce lines before they are executed\n    TO_SHOW_PREFIX_TID          show thread id in prefix string of lines traced \n    TO_SHOW_PREFIX_NESTING      show call strack nesting in prefix string of lines traced \n \n    follow_objects parameter is true if object references are to be printed\n    trace(self, progname, tracingenabled=True)\n    tracer invocation\n    progname - python file to be traced\n    tracingenabled - if tracing is initially on (True by default)\n\n\n \nFunctions\n      \t \t\n    enabletrace(on)\n\tenable/disable tracing, can be called from the traced program", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://mosermichael.github.io/cstuff/all/projects/2015/02/24/python-backtrace.html", "keywords": "program tracing,debugging", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "ntrace", "package_url": "https://pypi.org/project/ntrace/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ntrace/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://mosermichael.github.io/cstuff/all/projects/2015/02/24/python-backtrace.html"}, "release_url": "https://pypi.org/project/ntrace/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "execution tracer that gives more output than trace.py", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>utilities for tracing of python scripts; works similar to trace.py, it can also print out function parameters and return values\nas well as modification of global and local variables.</p>\n<p>can be invoked as a script (after installing the package)</p>\n<p>python -m trace/ntrace [options] &lt;python-file-to-trace&gt; [command line of python file to trace]</p>\n<p>By default it shows function parameters and function return values</p>\n<dl>\n<dt>Options:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-f</span></kbd></td>\n<td>trace function parameter calls (default: on)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-F</span></kbd></td>\n<td>do not trace function parameters</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-r</span></kbd></td>\n<td>trace function return values  (default: on)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-R</span></kbd></td>\n<td>do not trace function return values</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-l</span></kbd></td>\n<td>trace source lines before they are executed (default: on)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-L</span></kbd></td>\n<td>do not trace source lines before they are executed</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s</span></kbd></td>\n<td>trace setting of variablesa (default: off)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-S</span></kbd></td>\n<td>do not trace setting of variables</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-g</span></kbd></td>\n<td>trace getting of variables (default: off)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-G</span></kbd></td>\n<td>do not trace getting of variables</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-o</span></kbd></td>\n<td>print out object content (default: off)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-O</span></kbd></td>\n<td>do not print out object content</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-t</span></kbd></td>\n<td>show the current thread id in prefix for each source line (default on)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-T</span></kbd></td>\n<td>hide the current thread id</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-n</span></kbd></td>\n<td>show the nesting level, how many levels down the call stack (default on)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-N</span></kbd></td>\n<td>hide the nesting level</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>By default the following options are on: -l -f -r</p>\n<p>can be invoked as an api</p>\n<hr class=\"docutils\">\n<dl>\n<dt>class NTraceFromCommandLine</dt>\n<dd><p>command line parser for ntrace</p>\n<dl>\n<dt>Methods defined here:</dt>\n<dd>__init__(self, argv)</dd>\n</dl>\n</dd>\n</dl>\n<hr class=\"docutils\">\n<dl>\n<dt>class NTracer</dt>\n<dd><p>the tracer object; invoke this class to run a python file with tracing</p>\n<dl>\n<dt>Methods defined here:</dt>\n<dd><dl>\n<dt>__init__(self, traceOptions=31, follow_objects=False)</dt>\n<dd>object constructor; options are passed as bit mask values via traceOptions parameter, available options:</dd>\n</dl>\n</dd>\n</dl>\n<p>TO_FUNCTION_ARGUMENTS       argument flag: print function arguments\nTO_FUNCTION_RVALUES         argument flag: print function return values\nTO_SET_VARS                 argument flag: print modification of variables\nTO_GET_VARS                 argument flag: print variable access\nTO_TRACE_SRC_LINES          argument flag: show souce lines before they are executed\nTO_SHOW_PREFIX_TID          show thread id in prefix string of lines traced\nTO_SHOW_PREFIX_NESTING      show call strack nesting in prefix string of lines traced</p>\n<p>follow_objects parameter is true if object references are to be printed\ntrace(self, progname, tracingenabled=True)\ntracer invocation\nprogname - python file to be traced\ntracingenabled - if tracing is initially on (True by default)</p>\n</dd>\n</dl>\n<p>Functions</p>\n<blockquote>\n<dl>\n<dt>enabletrace(on)</dt>\n<dd>enable/disable tracing, can be called from the traced program</dd>\n</dl>\n</blockquote>\n\n          </div>"}, "last_serial": 1476523, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "aef734dbe63297a98f1be5fb08e73735", "sha256": "fc5b75dbd7198815d56517ab69035a2a08e13055c92b8d047fa2b7e6cb4d2d72"}, "downloads": -1, "filename": "ntrace-0.0.1.tar.gz", "has_sig": false, "md5_digest": "aef734dbe63297a98f1be5fb08e73735", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11277, "upload_time": "2015-03-25T08:12:24", "upload_time_iso_8601": "2015-03-25T08:12:24.879512Z", "url": "https://files.pythonhosted.org/packages/f2/9c/695c00b51a4344a7d4cec1564119a3eef1330d8de84d4ebb681bf4b015a2/ntrace-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aef734dbe63297a98f1be5fb08e73735", "sha256": "fc5b75dbd7198815d56517ab69035a2a08e13055c92b8d047fa2b7e6cb4d2d72"}, "downloads": -1, "filename": "ntrace-0.0.1.tar.gz", "has_sig": false, "md5_digest": "aef734dbe63297a98f1be5fb08e73735", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11277, "upload_time": "2015-03-25T08:12:24", "upload_time_iso_8601": "2015-03-25T08:12:24.879512Z", "url": "https://files.pythonhosted.org/packages/f2/9c/695c00b51a4344a7d4cec1564119a3eef1330d8de84d4ebb681bf4b015a2/ntrace-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:21 2020"}