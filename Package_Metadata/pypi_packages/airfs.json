{"info": {"author": "J.Goutin", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: System :: Filesystems"], "description": "[![Linux Build Status](https://travis-ci.org/JGoutin/airfs.svg?branch=master)](https://travis-ci.org/JGoutin/airfs)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/7rs8s16srj459o15?svg=true)](https://ci.appveyor.com/project/JGoutin-application/airfs)\n[![codecov](https://codecov.io/gh/JGoutin/airfs/branch/master/graph/badge.svg)](https://codecov.io/gh/JGoutin/airfs)\n[![Documentation Status](https://readthedocs.org/projects/airfs/badge/?version=latest)](https://airfs.readthedocs.io/en/latest/?badge=latest)\n[![PyPI](https://img.shields.io/pypi/v/airfs.svg)](https://pypi.org/project/airfs)\n\nairfs: A Python library for cloud and remote file Systems\n=========================================================\n\nairfs brings standard Python I/O to cloud objects and other remote file systems\nby providing:\n\n* Abstract classes of Cloud objects with the complete ``io.RawIOBase`` and\n  ``io.BufferedIOBase`` standard interfaces.\n* Features equivalent to the standard library (``io``, ``os``, ``os.path``,\n  ``shutil``) for seamlessly managing cloud objects and local files.\n\nThese functions are source agnostic and always provide the same interface for\nall files from cloud storage or local file systems.\n\nBuffered cloud objects also support the following features:\n\n* Buffered asynchronous writing of any object size.\n* Buffered asynchronous preloading in reading mode.\n* Write or read lock depending on memory usage limitation.\n* Maximization of bandwidth using parallels connections.\n\nSupported Cloud storage\n-----------------------\n\nairfs is compatible with the following cloud objects storage services:\n\n* Alibaba Cloud OSS\n* Amazon Web Services S3\n* Microsoft Azure Blobs Storage\n* Microsoft Azure Files Storage\n* OpenStack Swift\n\nairfs can also access any publicly accessible file via HTTP/HTTPS\n(Read only).\n\nAbout airfs and Pycosio\n-----------------------\n\n\"airfs\" is a fork of the Accelize's \n\"[Pycosio](https://github.com/Accelize/pycosio)\" project.\n\nThe \"Pycosio\" project was started in 2018 to complement the products of the\nAccelize company. Over time and as Accelize products evolved, the library was\nno longer needed in the company's products and was maintained less and less.\nSince mid 2019, Accelize no longer has an interest in continuing to develop the\nlibrary and no one is working on it.\n\nAs creator and sole developer of the library at Accelize, I decided to create a\nfork of the project so that it is now maintained by the open source community\nunder the name \"airfs\" (the name \"Pycosio\" being the property of Accelize).\n\n\n", "description_content_type": "text/markdown; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JGoutin/airfs", "keywords": "cloud cloud-storage bucket io stream file-system", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "airfs", "package_url": "https://pypi.org/project/airfs/", "platform": "", "project_url": "https://pypi.org/project/airfs/", "project_urls": {"Documentation": "https://airfs.readthedocs.io", "Download": "https://pypi.org/project/airfs", "Homepage": "https://github.com/JGoutin/airfs"}, "release_url": "https://pypi.org/project/airfs/1.4.0/", "requires_dist": ["requests (>=2.20.0)", "python-dateutil (>=2.6.0)", "azure-storage-file (>=1.3.0) ; extra == 'all'", "python-swiftclient[keystone] (>=3.3.0) ; extra == 'all'", "boto3 (>=1.5.0) ; extra == 'all'", "azure-storage-blob (<=2.1.0,>=1.3.0) ; extra == 'all'", "oss2 (>=2.3.0) ; extra == 'all'", "azure-storage-blob (<=2.1.0,>=1.3.0) ; extra == 'azure_blob'", "azure-storage-file (>=1.3.0) ; extra == 'azure_file'", "oss2 (>=2.3.0) ; extra == 'oss'", "boto3 (>=1.5.0) ; extra == 's3'", "python-swiftclient[keystone] (>=3.3.0) ; extra == 'swift'"], "requires_python": ">=3.5", "summary": "A Python library for cloud and remote file Systems", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/JGoutin/airfs\" rel=\"nofollow\"><img alt=\"Linux Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae57761fe42488ed9fbbb7bae9ffe331d0f37fb0/68747470733a2f2f7472617669732d63692e6f72672f4a476f7574696e2f61697266732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/JGoutin-application/airfs\" rel=\"nofollow\"><img alt=\"Windows Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16f7b69fe9b9f5ad2dd3eb0560ef4abbde1d4d1b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3772733873313673726a3435396f31353f7376673d74727565\"></a>\n<a href=\"https://codecov.io/gh/JGoutin/airfs\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd4a4532732d187361b81e0ce6f4371665c13ea2/68747470733a2f2f636f6465636f762e696f2f67682f4a476f7574696e2f61697266732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://airfs.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/983f16f24c0f33826f6282445c95030353c7487c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61697266732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pypi.org/project/airfs\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8cefb0e42d316ed935f1af467a8b4b0a9b0e8a0e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61697266732e737667\"></a></p>\n<h1>airfs: A Python library for cloud and remote file Systems</h1>\n<p>airfs brings standard Python I/O to cloud objects and other remote file systems\nby providing:</p>\n<ul>\n<li>Abstract classes of Cloud objects with the complete <code>io.RawIOBase</code> and\n<code>io.BufferedIOBase</code> standard interfaces.</li>\n<li>Features equivalent to the standard library (<code>io</code>, <code>os</code>, <code>os.path</code>,\n<code>shutil</code>) for seamlessly managing cloud objects and local files.</li>\n</ul>\n<p>These functions are source agnostic and always provide the same interface for\nall files from cloud storage or local file systems.</p>\n<p>Buffered cloud objects also support the following features:</p>\n<ul>\n<li>Buffered asynchronous writing of any object size.</li>\n<li>Buffered asynchronous preloading in reading mode.</li>\n<li>Write or read lock depending on memory usage limitation.</li>\n<li>Maximization of bandwidth using parallels connections.</li>\n</ul>\n<h2>Supported Cloud storage</h2>\n<p>airfs is compatible with the following cloud objects storage services:</p>\n<ul>\n<li>Alibaba Cloud OSS</li>\n<li>Amazon Web Services S3</li>\n<li>Microsoft Azure Blobs Storage</li>\n<li>Microsoft Azure Files Storage</li>\n<li>OpenStack Swift</li>\n</ul>\n<p>airfs can also access any publicly accessible file via HTTP/HTTPS\n(Read only).</p>\n<h2>About airfs and Pycosio</h2>\n<p>\"airfs\" is a fork of the Accelize's\n\"<a href=\"https://github.com/Accelize/pycosio\" rel=\"nofollow\">Pycosio</a>\" project.</p>\n<p>The \"Pycosio\" project was started in 2018 to complement the products of the\nAccelize company. Over time and as Accelize products evolved, the library was\nno longer needed in the company's products and was maintained less and less.\nSince mid 2019, Accelize no longer has an interest in continuing to develop the\nlibrary and no one is working on it.</p>\n<p>As creator and sole developer of the library at Accelize, I decided to create a\nfork of the project so that it is now maintained by the open source community\nunder the name \"airfs\" (the name \"Pycosio\" being the property of Accelize).</p>\n\n          </div>"}, "last_serial": 6433894, "releases": {"1.4.0": [{"comment_text": "", "digests": {"md5": "c8f1aed27642a1f8598da17ff3bc7120", "sha256": "9884e278eb189dff1af64bd2940f6a71bebb4bf4fcbac2b69964453a6359530e"}, "downloads": -1, "filename": "airfs-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f1aed27642a1f8598da17ff3bc7120", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 68343, "upload_time": "2020-01-10T22:45:18", "upload_time_iso_8601": "2020-01-10T22:45:18.018859Z", "url": "https://files.pythonhosted.org/packages/ef/4f/809e01c90988af1a7bb65586d7f235ab08bf1c92f84028a62d69463c7bd1/airfs-1.4.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8f1aed27642a1f8598da17ff3bc7120", "sha256": "9884e278eb189dff1af64bd2940f6a71bebb4bf4fcbac2b69964453a6359530e"}, "downloads": -1, "filename": "airfs-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f1aed27642a1f8598da17ff3bc7120", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 68343, "upload_time": "2020-01-10T22:45:18", "upload_time_iso_8601": "2020-01-10T22:45:18.018859Z", "url": "https://files.pythonhosted.org/packages/ef/4f/809e01c90988af1a7bb65586d7f235ab08bf1c92f84028a62d69463c7bd1/airfs-1.4.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 16:20:29 2020"}