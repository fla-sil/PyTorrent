{"info": {"author": "cle-b", "author_email": "cle@tictac.pm", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# hookdns\n\nHookDNS is a library which allow you to modify a name resolution in your Python script without any modification in your hosts file or by using a fake DNS.\n\n## Usage\n\nCustom DNS resolutions are describe by a dictionnary where the keys are hostnames\nand the values the expected corresponding addresses.    \n\n    {\n        \"hostname1\": \"addr1\",\n        \"hostname2\": \"addr2\"\n    }\n\nhostname and addr could be a domain name or a string representation of an IPv4/IPV6.\n\n### Example using the patch as a decorator\n\n```python\nimport requests\n\nfrom hookdns import hosts\n\n@hosts({\"example.org\": \"localhost\"})\ndef myfunc():\n    ...\n    r = requests.get(\"http://example.org\") # the request is sent to your local server\n    ...\n```\n\n### Example using the patch as a context manager\n\n```python\nimport requests\n\nfrom hookdns import hosts\n\nwith hosts({\"example.org\": \"localhost\"}):\n    ...\n    r = requests.get(\"http://example.org\") # the request is sent to your local server\n    ...\n```\n### Options\n\nBy default the following function calls are intercepted: *socket.gethostbyname, socket.gethostbyname_ex and socket.getaddrinfo*.\n\nYou can limit the interception to only a restricted list of function.\n\n```python\nimport socket\n\nfrom hookdns import hosts\n\nwith hosts({\"example.org\": \"localhost\"}, only=[\"gethostbyname\"]):\n    ...\n    addr = socket.gethostbyname(\"example.org\") # returns \"127.0.0.1\"\n    print(\"gethostname returns: %s\" % addr)\n\n    _, _, addr = socket.gethostbyname_ex(\"example.org\") # returns the real ip address for example.org\n    print(\"gethostname_ex returns: %s\" % addr[0])\n    ...    \n```\n```\ngethostname returns: 127.0.0.1\ngethostname_ex returns: 93.184.216.34\n```\n\n\n## Limitation\n\nIt works only with Python 3.4 and greater for the moment.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cle-b/hookdns", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hookdns", "package_url": "https://pypi.org/project/hookdns/", "platform": "", "project_url": "https://pypi.org/project/hookdns/", "project_urls": {"Homepage": "https://github.com/cle-b/hookdns"}, "release_url": "https://pypi.org/project/hookdns/1.0.0/", "requires_dist": ["mock"], "requires_python": ">=3.4", "summary": "An easy way to customize the dns resolution", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hookdns</h1>\n<p>HookDNS is a library which allow you to modify a name resolution in your Python script without any modification in your hosts file or by using a fake DNS.</p>\n<h2>Usage</h2>\n<p>Custom DNS resolutions are describe by a dictionnary where the keys are hostnames\nand the values the expected corresponding addresses.</p>\n<pre><code>{\n    \"hostname1\": \"addr1\",\n    \"hostname2\": \"addr2\"\n}\n</code></pre>\n<p>hostname and addr could be a domain name or a string representation of an IPv4/IPV6.</p>\n<h3>Example using the patch as a decorator</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">hookdns</span> <span class=\"kn\">import</span> <span class=\"n\">hosts</span>\n\n<span class=\"nd\">@hosts</span><span class=\"p\">({</span><span class=\"s2\">\"example.org\"</span><span class=\"p\">:</span> <span class=\"s2\">\"localhost\"</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">myfunc</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.org\"</span><span class=\"p\">)</span> <span class=\"c1\"># the request is sent to your local server</span>\n    <span class=\"o\">...</span>\n</pre>\n<h3>Example using the patch as a context manager</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">hookdns</span> <span class=\"kn\">import</span> <span class=\"n\">hosts</span>\n\n<span class=\"k\">with</span> <span class=\"n\">hosts</span><span class=\"p\">({</span><span class=\"s2\">\"example.org\"</span><span class=\"p\">:</span> <span class=\"s2\">\"localhost\"</span><span class=\"p\">}):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.org\"</span><span class=\"p\">)</span> <span class=\"c1\"># the request is sent to your local server</span>\n    <span class=\"o\">...</span>\n</pre>\n<h3>Options</h3>\n<p>By default the following function calls are intercepted: <em>socket.gethostbyname, socket.gethostbyname_ex and socket.getaddrinfo</em>.</p>\n<p>You can limit the interception to only a restricted list of function.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">hookdns</span> <span class=\"kn\">import</span> <span class=\"n\">hosts</span>\n\n<span class=\"k\">with</span> <span class=\"n\">hosts</span><span class=\"p\">({</span><span class=\"s2\">\"example.org\"</span><span class=\"p\">:</span> <span class=\"s2\">\"localhost\"</span><span class=\"p\">},</span> <span class=\"n\">only</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"gethostbyname\"</span><span class=\"p\">]):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">addr</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">gethostbyname</span><span class=\"p\">(</span><span class=\"s2\">\"example.org\"</span><span class=\"p\">)</span> <span class=\"c1\"># returns \"127.0.0.1\"</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"gethostname returns: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">addr</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">addr</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">gethostbyname_ex</span><span class=\"p\">(</span><span class=\"s2\">\"example.org\"</span><span class=\"p\">)</span> <span class=\"c1\"># returns the real ip address for example.org</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"gethostname_ex returns: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">addr</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"o\">...</span>    \n</pre>\n<pre><code>gethostname returns: 127.0.0.1\ngethostname_ex returns: 93.184.216.34\n</code></pre>\n<h2>Limitation</h2>\n<p>It works only with Python 3.4 and greater for the moment.</p>\n\n          </div>"}, "last_serial": 4688872, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ed9d54b913a1d59a80bcc215ec0487d5", "sha256": "0a0852a4b5f3f8fe8a2152a1d4d2eb69bdda8fc12d6cba923d71d70f74381150"}, "downloads": -1, "filename": "hookdns-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ed9d54b913a1d59a80bcc215ec0487d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 9309, "upload_time": "2019-01-12T17:26:13", "upload_time_iso_8601": "2019-01-12T17:26:13.470104Z", "url": "https://files.pythonhosted.org/packages/49/af/c50c5880d5080d700ae49508e8fda4e86af210198a9f4540c3357003bfe0/hookdns-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b91a219d9e0f1ad322a6ed8cf70eb46b", "sha256": "455a223d3dbd24a957145d8c2591155d473550fab5082c70ef080f2aed209889"}, "downloads": -1, "filename": "hookdns-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b91a219d9e0f1ad322a6ed8cf70eb46b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3159, "upload_time": "2019-01-12T17:26:15", "upload_time_iso_8601": "2019-01-12T17:26:15.507669Z", "url": "https://files.pythonhosted.org/packages/07/d3/2ea4cdc77fa363fa85be404b15161c81f9de20105230c596565d1ce4f909/hookdns-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed9d54b913a1d59a80bcc215ec0487d5", "sha256": "0a0852a4b5f3f8fe8a2152a1d4d2eb69bdda8fc12d6cba923d71d70f74381150"}, "downloads": -1, "filename": "hookdns-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ed9d54b913a1d59a80bcc215ec0487d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 9309, "upload_time": "2019-01-12T17:26:13", "upload_time_iso_8601": "2019-01-12T17:26:13.470104Z", "url": "https://files.pythonhosted.org/packages/49/af/c50c5880d5080d700ae49508e8fda4e86af210198a9f4540c3357003bfe0/hookdns-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b91a219d9e0f1ad322a6ed8cf70eb46b", "sha256": "455a223d3dbd24a957145d8c2591155d473550fab5082c70ef080f2aed209889"}, "downloads": -1, "filename": "hookdns-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b91a219d9e0f1ad322a6ed8cf70eb46b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3159, "upload_time": "2019-01-12T17:26:15", "upload_time_iso_8601": "2019-01-12T17:26:15.507669Z", "url": "https://files.pythonhosted.org/packages/07/d3/2ea4cdc77fa363fa85be404b15161c81f9de20105230c596565d1ce4f909/hookdns-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:40 2020"}