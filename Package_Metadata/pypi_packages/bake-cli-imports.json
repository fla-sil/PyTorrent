{"info": {"author": "Kenneth Reitz", "author_email": "me@kennethreitz.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n\n\n<span align=\"center\"><pre align=\"center\"><img src=\"https://github.com/kennethreitz/bake/blob/master/ext/bake.png?raw=true\" /></pre></span>\n\n<p align=\"center\"><code>$ <strong>bake</strong> \u2014 a s\u263frangely familiar workflow utlity. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></p>\n<pre>\n\n<p align=\"center\"><small>~ under development ~&nbsp;&nbsp;</small></p>\n\n<div align=\"left\">\n<code>$ <strong>cat Bakefile</strong>                                                $ <strong>bake install</strong>\n<strong>install</strong>: install/node install/python                            + <strong>Executing install/node</strong>:\n    echo 'All ready!'                                           |  yarn install v1.17.3\n<strong>install/full</strong>: install/system install                            |  info No lockfile found.\n<strong>install/python</strong>: @skip:key=Pipfile.lock                          |  [1/4] Resolving packages...\n    pipenv install                                              |  [2/4] Fetching packages...\n<strong>install/node</strong>: @skip:key=yarn.lock                               |  [3/4] Linking dependencies...\n    yarn install                                                |  [4/4] Building fresh packages...\n<strong>install/system</strong>: @confirm                                        |  success Saved lockfile.\n    brew install pipenv yarn                                    |  Done in 0.05s.\n                                                                + <strong>Executing install/python</strong>:\n<strong>python/format</strong>:                                                  |  Installing dependencies from \u2026\n    black .                                                     + <strong>Executing install</strong>:\n                                                                |  All ready!\n<strong>utils/argv</strong>:                                                     + <strong>Done</strong>.\n    set -u && echo \"$HELLO: $@\"                                 \n                                                                Rinse and repeat\u2026\n<strong>utils/deploy</strong>: @confirm:secure                 \n    exit 0</code>                                              \n    </div>                                                     \n</pre>\n<p align=\"center\"><small>~ <a href=\"https://github.com/kennethreitz/bake/blob/master/Bakefile\">see <strong>bake</strong>'s own <code><strong>Bakefile</strong></code></a> ~&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</small></p>\n\n## What's in the oven?\n\n<ul>\n    <li>A <code>Bakefile</code>, which <strong>looks</strong> and <strong>feels</strong> like the good parts of a <code><strong>Makefile</strong></code>.</li>\n    <li>Except, you can write real <code><strong>bash</strong></code> code!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any and all syntax is accepted \u2014\u00a0no magic going on here. ;)</li>\n<li>Unlike <code><strong>Makefile</strong></code>, you may utilize <code><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong></code> <strong>[</strong><code> 4 \u00d7 <a href=\"https://unicode.org/cldr/utility/character.jsp?a=0020\">U+0020</a> <em>a.k.a.</em> \u201cspaces\u201d</code><strong>]</strong> for indentation.</li>\n    <li>Environment variables are explicitly passed or whitelisted (<code><strong>--allow</strong></code>), not inherited from the parent shell.</li>\n<li>Tasks can be run safely and reliably. Rest assured that scripts are executed from the project root directory.</li>\n<li>There are many other benefits to this design, that have yet to be expressed in this document.</li>\n</ul>\n\n\n------------------\n\n### Automate Workflows \u2014 Bootstrap Development Environments \u2014 Commit The Tasks\n\n\nI love using `Makefile` for one-off **tasks** in projects.\n\nThe problem with doing this is that you can't use familiar bash\u2013isms when doing so, as **GNU Make** doesn't use the familiar **Bash** syntax, nor does it allow for simple ad\u2013hoc use of arbitrary scripting languages (e.g. **Python**).\n\n\nproject seeks to bridge all of these worlds into a single entrypoint \u2014\u00a0ideal for cross\u2013language repositories\n\n-------------------\n\n## Bootstraping `bake` \u2014 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (for local development workflows)\n\n\n#### **Various `*`nix Distributions** (Python 3.6+):\n\nThe primary installation method of `bake`, today, is via `pip`:\n\n```console\n$ pip3 install bake-cli\nCollecting bake-cli\n\u2026\nSuccessfully installed bake-cli-0.2.0 delegator.py-0.1.1 pexpect-4.7.0 ptyprocess-0.6.0\n```\n\n\nThis will always work, but it will not be the default recommendation.\n\n#### MacOS (Previously known as OS X)\n\nInstallation of `bake` will (soon) be very easy, with Homebrew. The formula needs a subtle adjustment \u2014\u00a0if you want to help, [here's the repo](http://github.com/kennethreitz/homebrew--)!\n\n```console\n$ brew install kennethreitz/-/bake\n==> Installing bake from kennethreitz/-\n\u2026\n\ud83c\udf7a  /usr/local/Cellar/bake/19-09-16: 1,563 files, 16.7MB, built in 11 seconds\n```\n\nHomebrew will be the primary installation target of `bake`.\n\n\u2728\ud83c\udf70\u2728\n\n## Bootstraping `bake` \u2014 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (for production workflows)\n\n#### Containers! *e.g.* Docker.\n\nYou an also run `bake` via Docker! An official image has been made available [on DockerHub](https://cloud.docker.com/u/kennethreitz/repository/docker/kennethreitz/bake):\n\n```console\n$ docker run kennethreitz/bake                                                                                                                                                                       Wed Sep 18 10:11:01 2019\nNo Bakefile found!\nUsage:  [OPTIONS] [TASK] [ARGUMENTS]...\n\n $ bake \u2014 the strangely familiar task\u2013runner.\n\nOptions:\n  -b, --bakefile PATH      The Bakefile to use.\n  -l, --list               Lists available tasks (and their dependencies).\n  -h, --help               Show this message and exit.\n  --allow TEXT             Whitelist an environment variable for use.\n  --no-deps                Do not run dependent tasks.\n  --yes                    Set medium\u2013security prompts to yes.\n  --continue               Continue, if a task fails.\n  -i, --interactive        Run in interactive mode.\n  --insecure               Inherit parent shell's environment variables.\n  -s, --silent             Reduce output.\n  -e, --environ-json TEXT  Provide environment variables via JSON.\n  -j, --json               Output in JSON format (stdout).\n```\n\n- **`Bakefile`** is expected to live at **`/app/Bakefile`**. \n- If you inherit from this image, **`ONBUILD`** directives will automatically copy your application code (build context) into the container, into **`/app`**.\n\n**Bonus Points**: this image is also [available on the GitHub Package Registry](https://github.com/kennethreitz/bake/packages/24444) (beta).\n\n---------------\n\n\n### Team & Workflow Management\n\nYou can use `bake` to bootstrap your team's development environments, ensuring a smooth and optimal workflow & local development experience.\n\nHere's an example, using the `Bakefile` provided above:\n\n```console\n$ bake install\n + Executing install/node:\n |  yarn install v1.17.3\n |  info No lockfile found.\n |  [1/4] Resolving packages...\n |  [2/4] Fetching packages...\n |  [3/4] Linking dependencies...\n |  [4/4] Building fresh packages...\n |  success Saved lockfile.\n |  Done in 0.05s.\n + Executing install/python:\n |  Installing dependencies from Pipfile.lock (f10bb0)\u2026\n + Executing install:\n + Done.\n```\n\n### Skip Steps, Automatically\n\nBecause we configured `yarn.lock` and `Pipfile.lock` as cache keys,\nbake will automatically skip the configured steps\u2014 only running them\nwhen the files are changed!\n\nSo, let's run that command again :)\n\n```console\n$ bake install\n + Skipping install/node:\n + Skipping install/python.\n + Executing install:\n + Done.\n```\n\nNeat, eh?\n\n### Arguments & Parameters: Passing Values In\n\n```console\n$ bake utils/argv KEY=VALUES 1 2 3\n + Executing utils/argv:\n |  VALUES: 1 2 3\n + Done.\n ```\n\n### (Optional) Non-Deterministic Confirmation Dialouges\n\n```console\n$ bake utils/deploy\n   What is 10 times 2?: 7\nAborted.\n```\n\n---------------------\n\n\n### Community / Contrib\n\n- [Visual Studio Code Extension](https://marketplace.visualstudio.com/items?itemName=kennethreitz.bake) \u2014 highlights `Bakefile`\u2014 adequately.\n\n----------------------\n\n<p>&nbsp;</p>\n\n<p align=\"center\">\n    This open source software has been designed, for <strong>you</strong>, with much joy, by the hands of:\n</p>\n\n<p>&nbsp;</p>\n\n<p align=\"center\">\n        <a href=\"https://kennethreitz.org/\" rel=\"nofollow\"><img src=\"https://raw.githubusercontent.com/psf/requests/master/ext/kr.png\" align=\"center\" style=\"max-width:100%;\"></a>\n</p>\n\n<p>&nbsp;</p>\n\n<p align=\"center\">\n    <large>\u263f</large>\n</p>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kennethreitz/bake", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bake-cli-imports", "package_url": "https://pypi.org/project/bake-cli-imports/", "platform": "", "project_url": "https://pypi.org/project/bake-cli-imports/", "project_urls": {"Homepage": "https://github.com/kennethreitz/bake"}, "release_url": "https://pypi.org/project/bake-cli-imports/0.13.0/", "requires_dist": ["click", "delegator.py", "pygments", "networkx", "colorama"], "requires_python": ">=3.6.0", "summary": "The familar Make / Bash hybrid.", "version": "0.13.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><span></span></p><pre><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/916f6d1a1c1ab9da81ca18c38c8e81559334afa8/68747470733a2f2f6769746875622e636f6d2f6b656e6e657468726569747a2f62616b652f626c6f622f6d61737465722f6578742f62616b652e706e673f7261773d74727565\"></pre><p></p>\n<p align=\"center\"><code>$ <strong>bake</strong> \u2014 a s\u263frangely familiar workflow utlity. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</code></p>\n<pre><p align=\"center\">&lt;small&gt;~ under development ~\u00a0\u00a0&lt;/small&gt;</p>\n<div>\n<code>$ <strong>cat Bakefile</strong>                                                $ <strong>bake install</strong>\n<strong>install</strong>: install/node install/python                            + <strong>Executing install/node</strong>:\n    echo 'All ready!'                                           |  yarn install v1.17.3\n<strong>install/full</strong>: install/system install                            |  info No lockfile found.\n<strong>install/python</strong>: @skip:key=Pipfile.lock                          |  [1/4] Resolving packages...\n    pipenv install                                              |  [2/4] Fetching packages...\n<strong>install/node</strong>: @skip:key=yarn.lock                               |  [3/4] Linking dependencies...\n    yarn install                                                |  [4/4] Building fresh packages...\n<strong>install/system</strong>: @confirm                                        |  success Saved lockfile.\n    brew install pipenv yarn                                    |  Done in 0.05s.\n                                                                + <strong>Executing install/python</strong>:\n<strong>python/format</strong>:                                                  |  Installing dependencies from \u2026\n    black .                                                     + <strong>Executing install</strong>:\n                                                                |  All ready!\n<strong>utils/argv</strong>:                                                     + <strong>Done</strong>.\n    set -u &amp;&amp; echo \"$HELLO: $@\"                                 \n                                                                Rinse and repeat\u2026\n<strong>utils/deploy</strong>: @confirm:secure                 \n    exit 0</code>                                              \n    </div>                                                     \n</pre>\n<p align=\"center\">&lt;small&gt;~ <a href=\"https://github.com/kennethreitz/bake/blob/master/Bakefile\" rel=\"nofollow\">see <strong>bake</strong>'s own <code><strong>Bakefile</strong></code></a> ~\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/small&gt;</p>\n<h2>What's in the oven?</h2>\n<ul>\n    <li>A <code>Bakefile</code>, which <strong>looks</strong> and <strong>feels</strong> like the good parts of a <code><strong>Makefile</strong></code>.</li>\n    <li>Except, you can write real <code><strong>bash</strong></code> code!\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Any and all syntax is accepted \u2014\u00a0no magic going on here. ;)</li>\n<li>Unlike <code><strong>Makefile</strong></code>, you may utilize <code><strong>\u00a0\u00a0\u00a0\u00a0</strong></code> <strong>[</strong><code> 4 \u00d7 <a href=\"https://unicode.org/cldr/utility/character.jsp?a=0020\" rel=\"nofollow\">U+0020</a> <em>a.k.a.</em> \u201cspaces\u201d</code><strong>]</strong> for indentation.</li>\n    <li>Environment variables are explicitly passed or whitelisted (<code><strong>--allow</strong></code>), not inherited from the parent shell.</li>\n<li>Tasks can be run safely and reliably. Rest assured that scripts are executed from the project root directory.</li>\n<li>There are many other benefits to this design, that have yet to be expressed in this document.</li>\n</ul>\n<hr>\n<h3>Automate Workflows \u2014 Bootstrap Development Environments \u2014 Commit The Tasks</h3>\n<p>I love using <code>Makefile</code> for one-off <strong>tasks</strong> in projects.</p>\n<p>The problem with doing this is that you can't use familiar bash\u2013isms when doing so, as <strong>GNU Make</strong> doesn't use the familiar <strong>Bash</strong> syntax, nor does it allow for simple ad\u2013hoc use of arbitrary scripting languages (e.g. <strong>Python</strong>).</p>\n<p>project seeks to bridge all of these worlds into a single entrypoint \u2014\u00a0ideal for cross\u2013language repositories</p>\n<hr>\n<h2>Bootstraping <code>bake</code> \u2014 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (for local development workflows)</h2>\n<h4><strong>Various <code>*</code>nix Distributions</strong> (Python 3.6+):</h4>\n<p>The primary installation method of <code>bake</code>, today, is via <code>pip</code>:</p>\n<pre><span class=\"gp\">$</span> pip3 install bake-cli\n<span class=\"go\">Collecting bake-cli</span>\n<span class=\"go\">\u2026</span>\n<span class=\"go\">Successfully installed bake-cli-0.2.0 delegator.py-0.1.1 pexpect-4.7.0 ptyprocess-0.6.0</span>\n</pre>\n<p>This will always work, but it will not be the default recommendation.</p>\n<h4>MacOS (Previously known as OS X)</h4>\n<p>Installation of <code>bake</code> will (soon) be very easy, with Homebrew. The formula needs a subtle adjustment \u2014\u00a0if you want to help, <a href=\"http://github.com/kennethreitz/homebrew--\" rel=\"nofollow\">here's the repo</a>!</p>\n<pre><span class=\"gp\">$</span> brew install kennethreitz/-/bake\n<span class=\"go\">==&gt; Installing bake from kennethreitz/-</span>\n<span class=\"go\">\u2026</span>\n<span class=\"go\">\ud83c\udf7a  /usr/local/Cellar/bake/19-09-16: 1,563 files, 16.7MB, built in 11 seconds</span>\n</pre>\n<p>Homebrew will be the primary installation target of <code>bake</code>.</p>\n<p>\u2728\ud83c\udf70\u2728</p>\n<h2>Bootstraping <code>bake</code> \u2014 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (for production workflows)</h2>\n<h4>Containers! <em>e.g.</em> Docker.</h4>\n<p>You an also run <code>bake</code> via Docker! An official image has been made available <a href=\"https://cloud.docker.com/u/kennethreitz/repository/docker/kennethreitz/bake\" rel=\"nofollow\">on DockerHub</a>:</p>\n<pre><span class=\"gp\">$</span> docker run kennethreitz/bake                                                                                                                                                                       Wed Sep <span class=\"m\">18</span> <span class=\"m\">10</span>:11:01 <span class=\"m\">2019</span>\n<span class=\"go\">No Bakefile found!</span>\n<span class=\"go\">Usage:  [OPTIONS] [TASK] [ARGUMENTS]...</span>\n\n<span class=\"gp\"> $</span> bake \u2014 the strangely familiar task\u2013runner.\n\n<span class=\"go\">Options:</span>\n<span class=\"go\">  -b, --bakefile PATH      The Bakefile to use.</span>\n<span class=\"go\">  -l, --list               Lists available tasks (and their dependencies).</span>\n<span class=\"go\">  -h, --help               Show this message and exit.</span>\n<span class=\"go\">  --allow TEXT             Whitelist an environment variable for use.</span>\n<span class=\"go\">  --no-deps                Do not run dependent tasks.</span>\n<span class=\"go\">  --yes                    Set medium\u2013security prompts to yes.</span>\n<span class=\"go\">  --continue               Continue, if a task fails.</span>\n<span class=\"go\">  -i, --interactive        Run in interactive mode.</span>\n<span class=\"go\">  --insecure               Inherit parent shell's environment variables.</span>\n<span class=\"go\">  -s, --silent             Reduce output.</span>\n<span class=\"go\">  -e, --environ-json TEXT  Provide environment variables via JSON.</span>\n<span class=\"go\">  -j, --json               Output in JSON format (stdout).</span>\n</pre>\n<ul>\n<li><strong><code>Bakefile</code></strong> is expected to live at <strong><code>/app/Bakefile</code></strong>.</li>\n<li>If you inherit from this image, <strong><code>ONBUILD</code></strong> directives will automatically copy your application code (build context) into the container, into <strong><code>/app</code></strong>.</li>\n</ul>\n<p><strong>Bonus Points</strong>: this image is also <a href=\"https://github.com/kennethreitz/bake/packages/24444\" rel=\"nofollow\">available on the GitHub Package Registry</a> (beta).</p>\n<hr>\n<h3>Team &amp; Workflow Management</h3>\n<p>You can use <code>bake</code> to bootstrap your team's development environments, ensuring a smooth and optimal workflow &amp; local development experience.</p>\n<p>Here's an example, using the <code>Bakefile</code> provided above:</p>\n<pre><span class=\"gp\">$</span> bake install\n<span class=\"go\"> + Executing install/node:</span>\n<span class=\"go\"> |  yarn install v1.17.3</span>\n<span class=\"go\"> |  info No lockfile found.</span>\n<span class=\"go\"> |  [1/4] Resolving packages...</span>\n<span class=\"go\"> |  [2/4] Fetching packages...</span>\n<span class=\"go\"> |  [3/4] Linking dependencies...</span>\n<span class=\"go\"> |  [4/4] Building fresh packages...</span>\n<span class=\"go\"> |  success Saved lockfile.</span>\n<span class=\"go\"> |  Done in 0.05s.</span>\n<span class=\"go\"> + Executing install/python:</span>\n<span class=\"go\"> |  Installing dependencies from Pipfile.lock (f10bb0)\u2026</span>\n<span class=\"go\"> + Executing install:</span>\n<span class=\"go\"> + Done.</span>\n</pre>\n<h3>Skip Steps, Automatically</h3>\n<p>Because we configured <code>yarn.lock</code> and <code>Pipfile.lock</code> as cache keys,\nbake will automatically skip the configured steps\u2014 only running them\nwhen the files are changed!</p>\n<p>So, let's run that command again :)</p>\n<pre><span class=\"gp\">$</span> bake install\n<span class=\"go\"> + Skipping install/node:</span>\n<span class=\"go\"> + Skipping install/python.</span>\n<span class=\"go\"> + Executing install:</span>\n<span class=\"go\"> + Done.</span>\n</pre>\n<p>Neat, eh?</p>\n<h3>Arguments &amp; Parameters: Passing Values In</h3>\n<pre><span class=\"gp\">$</span> bake utils/argv <span class=\"nv\">KEY</span><span class=\"o\">=</span>VALUES <span class=\"m\">1</span> <span class=\"m\">2</span> <span class=\"m\">3</span>\n<span class=\"go\"> + Executing utils/argv:</span>\n<span class=\"go\"> |  VALUES: 1 2 3</span>\n<span class=\"go\"> + Done.</span>\n</pre>\n<h3>(Optional) Non-Deterministic Confirmation Dialouges</h3>\n<pre><span class=\"gp\">$</span> bake utils/deploy\n<span class=\"go\">   What is 10 times 2?: 7</span>\n<span class=\"go\">Aborted.</span>\n</pre>\n<hr>\n<h3>Community / Contrib</h3>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=kennethreitz.bake\" rel=\"nofollow\">Visual Studio Code Extension</a> \u2014 highlights <code>Bakefile</code>\u2014 adequately.</li>\n</ul>\n<hr>\n<p>\u00a0</p>\n<p align=\"center\">\n    This open source software has been designed, for <strong>you</strong>, with much joy, by the hands of:\n</p>\n<p>\u00a0</p>\n<p align=\"center\">\n        <a href=\"https://kennethreitz.org/\" rel=\"nofollow\"><img align=\"center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a02bc771956705c2b7256cbaae03b3f5dd3315b9/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7073662f72657175657374732f6d61737465722f6578742f6b722e706e67\"></a>\n</p>\n<p>\u00a0</p>\n<p align=\"center\">\n    &lt;large&gt;\u263f&lt;/large&gt;\n</p>\n\n          </div>"}, "last_serial": 5921287, "releases": {"0.13.0": [{"comment_text": "", "digests": {"md5": "730bc15545a2f8d2bb887c109ca89dae", "sha256": "0386cbe3b9b3f5e76f9c2fef87419d1a192fef4005618c28281fd0e1e9a1465e"}, "downloads": -1, "filename": "bake_cli_imports-0.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "730bc15545a2f8d2bb887c109ca89dae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 21268, "upload_time": "2019-10-03T01:35:18", "upload_time_iso_8601": "2019-10-03T01:35:18.039164Z", "url": "https://files.pythonhosted.org/packages/63/8d/043887cc1f687e8b1c31a1afeec0a5f9c5466c01437d98855623d88d1470/bake_cli_imports-0.13.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "730bc15545a2f8d2bb887c109ca89dae", "sha256": "0386cbe3b9b3f5e76f9c2fef87419d1a192fef4005618c28281fd0e1e9a1465e"}, "downloads": -1, "filename": "bake_cli_imports-0.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "730bc15545a2f8d2bb887c109ca89dae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 21268, "upload_time": "2019-10-03T01:35:18", "upload_time_iso_8601": "2019-10-03T01:35:18.039164Z", "url": "https://files.pythonhosted.org/packages/63/8d/043887cc1f687e8b1c31a1afeec0a5f9c5466c01437d98855623d88d1470/bake_cli_imports-0.13.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:15:01 2020"}