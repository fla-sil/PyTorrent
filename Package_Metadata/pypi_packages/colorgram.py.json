{"info": {"author": "Samuel Messner", "author_email": "powpowd@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "colorgram.py\n============\n\n**colorgram.py** is a Python library that lets you extract colors from images. Compared to other libraries, the colorgram algorithm's results are more intense.\n\ncolorgram.py is a port of `colorgram.js <https://github.com/darosh/colorgram-js>`__, a JavaScript library written by GitHub user `@darosh <https://github.com/darosh>`__. The goal is to have 100% accuracy to the results of the original library (a goal that is met). I decided to port it since I much prefer the results the colorgram algorithm gets over those of alternative libraries - have a look in the next section.\n\nResults\n-------\n\n.. image:: http://i.imgur.com/BeReaRM.png\n    :alt: Results of colorgram.py on a 512x512 image\n\nTime-wise, an extraction of a 512x512 image takes about 0.66s (another popular color extraction library, `Color Thief <https://github.com/fengsp/color-thief-py>`__, takes about 1.05s).\n\n\nInstallation\n------------\nYou can install colorgram.py with `pip <https://pip.pypa.io/en/latest/installing/>`__, as following:\n\n::\n\n    pip install colorgram.py\n\nHow to use\n----------\n\nUsing colorgram.py is simple. Mainly there's only one function you'll need to use - ``colorgram.extract``.\n\nExample\n'''''''\n\n.. code:: python\n\n    import colorgram\n\n    # Extract 6 colors from an image.\n    colors = colorgram.extract('sweet_pic.jpg', 6)\n\n    # colorgram.extract returns Color objects, which let you access\n    # RGB, HSL, and what proportion of the image was that color.\n    first_color = colors[0]\n    rgb = first_color.rgb # e.g. (255, 151, 210)\n    hsl = first_color.hsl # e.g. (230, 255, 203)\n    proportion  = first_color.proportion # e.g. 0.34\n\n    # RGB and HSL are named tuples, so values can be accessed as properties.\n    # These all work just as well:\n    red = rgb[0]\n    red = rgb.r\n    saturation = hsl[1]\n    saturation = hsl.s\n\n``colorgram.extract(image, number_of_colors)``\n''''''''''''''''''''''''''''''''''''''''''''''\nExtract colors from an image. ``image`` may be either a path to a file, a file-like object, or a Pillow ``Image`` object. The function will return a list of ``number_of_colors`` ``Color`` objects.\n\n``colorgram.Color``\n'''''''''''''''''''\nA color extracted from an image. Its properties are:\n\n* ``Color.rgb`` - The color represented as a ``namedtuple`` of RGB from 0 to 255, e.g. ``(r=255, g=151, b=210)``.\n* ``Color.hsl`` - The color represented as a ``namedtuple`` of HSL from 0 to 255, e.g. ``(h=230, s=255, l=203)``.\n* ``Color.proportion`` - The proportion of the image that is in the extracted color from 0 to 1, e.g. ``0.34``.\n\nSorting by HSL\n''''''''''''''\nSomething the original library lets you do is sort the colors you get by HSL. In actuality, though, the colors are only sorted by hue (as of colorgram.js 0.1.5), while saturation and lightness are ignored. To get the corresponding result in colorgram.py, simply do:\n\n.. code:: python\n\n    colors.sort(key=lambda c: c.hsl.h)\n    # or...\n    sorted(colors, key=lambda c: c.hsl.h)\n\nContact\n-------\n\nIf you find a bug in the colorgram.py, or if there's a feature you would like to be added, please `open an issue <https://github.com/obskyr/colorgram.py/issues>`__ on GitHub.\n\nIf you have a question about the library, or if you'd just like to talk about, well, anything, that's no problem at all. You can reach me in any of these ways:\n\n* Tweet `@obskyr <https://twitter.com/obskyr>`__\n* `E-mail me <mailto:powpowd@gmail.com>`__\n\nTo get a quick answer, Twitter is your best bet.\n\nEnjoy!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/obskyr/colorgram.py/tarball/v1.2.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/obskyr/colorgram.py", "keywords": "color colors palette extract image picture", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "colorgram.py", "package_url": "https://pypi.org/project/colorgram.py/", "platform": "", "project_url": "https://pypi.org/project/colorgram.py/", "project_urls": {"Download": "https://github.com/obskyr/colorgram.py/tarball/v1.2.0", "Homepage": "https://github.com/obskyr/colorgram.py"}, "release_url": "https://pypi.org/project/colorgram.py/1.2.0/", "requires_dist": ["pillow (>=3.3.1)"], "requires_python": "", "summary": "A Python module for extracting colors from images. Get a palette of any picture!", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>colorgram.py</strong> is a Python library that lets you extract colors from images. Compared to other libraries, the colorgram algorithm\u2019s results are more intense.</p>\n<p>colorgram.py is a port of <a href=\"https://github.com/darosh/colorgram-js\" rel=\"nofollow\">colorgram.js</a>, a JavaScript library written by GitHub user <a href=\"https://github.com/darosh\" rel=\"nofollow\">@darosh</a>. The goal is to have 100% accuracy to the results of the original library (a goal that is met). I decided to port it since I much prefer the results the colorgram algorithm gets over those of alternative libraries - have a look in the next section.</p>\n<div id=\"results\">\n<h2>Results</h2>\n<img alt=\"Results of colorgram.py on a 512x512 image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3156e9119e43df492e053db050c574b522b5dc5/687474703a2f2f692e696d6775722e636f6d2f4265526561524d2e706e67\">\n<p>Time-wise, an extraction of a 512x512 image takes about 0.66s (another popular color extraction library, <a href=\"https://github.com/fengsp/color-thief-py\" rel=\"nofollow\">Color Thief</a>, takes about 1.05s).</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install colorgram.py with <a href=\"https://pip.pypa.io/en/latest/installing/\" rel=\"nofollow\">pip</a>, as following:</p>\n<pre>pip install colorgram.py\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Using colorgram.py is simple. Mainly there\u2019s only one function you\u2019ll need to use - <tt>colorgram.extract</tt>.</p>\n<div id=\"example\">\n<h3>Example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">colorgram</span>\n\n<span class=\"c1\"># Extract 6 colors from an image.</span>\n<span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"n\">colorgram</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">(</span><span class=\"s1\">'sweet_pic.jpg'</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># colorgram.extract returns Color objects, which let you access</span>\n<span class=\"c1\"># RGB, HSL, and what proportion of the image was that color.</span>\n<span class=\"n\">first_color</span> <span class=\"o\">=</span> <span class=\"n\">colors</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">rgb</span> <span class=\"o\">=</span> <span class=\"n\">first_color</span><span class=\"o\">.</span><span class=\"n\">rgb</span> <span class=\"c1\"># e.g. (255, 151, 210)</span>\n<span class=\"n\">hsl</span> <span class=\"o\">=</span> <span class=\"n\">first_color</span><span class=\"o\">.</span><span class=\"n\">hsl</span> <span class=\"c1\"># e.g. (230, 255, 203)</span>\n<span class=\"n\">proportion</span>  <span class=\"o\">=</span> <span class=\"n\">first_color</span><span class=\"o\">.</span><span class=\"n\">proportion</span> <span class=\"c1\"># e.g. 0.34</span>\n\n<span class=\"c1\"># RGB and HSL are named tuples, so values can be accessed as properties.</span>\n<span class=\"c1\"># These all work just as well:</span>\n<span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"o\">.</span><span class=\"n\">r</span>\n<span class=\"n\">saturation</span> <span class=\"o\">=</span> <span class=\"n\">hsl</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">saturation</span> <span class=\"o\">=</span> <span class=\"n\">hsl</span><span class=\"o\">.</span><span class=\"n\">s</span>\n</pre>\n</div>\n<div id=\"colorgram-extract-image-number-of-colors\">\n<h3><tt>colorgram.extract(image, number_of_colors)</tt></h3>\n<p>Extract colors from an image. <tt>image</tt> may be either a path to a file, a file-like object, or a Pillow <tt>Image</tt> object. The function will return a list of <tt>number_of_colors</tt> <tt>Color</tt> objects.</p>\n</div>\n<div id=\"colorgram-color\">\n<h3><tt>colorgram.Color</tt></h3>\n<p>A color extracted from an image. Its properties are:</p>\n<ul>\n<li><tt>Color.rgb</tt> - The color represented as a <tt>namedtuple</tt> of RGB from 0 to 255, e.g. <tt>(r=255, g=151, b=210)</tt>.</li>\n<li><tt>Color.hsl</tt> - The color represented as a <tt>namedtuple</tt> of HSL from 0 to 255, e.g. <tt>(h=230, s=255, l=203)</tt>.</li>\n<li><tt>Color.proportion</tt> - The proportion of the image that is in the extracted color from 0 to 1, e.g. <tt>0.34</tt>.</li>\n</ul>\n</div>\n<div id=\"sorting-by-hsl\">\n<h3>Sorting by HSL</h3>\n<p>Something the original library lets you do is sort the colors you get by HSL. In actuality, though, the colors are only sorted by hue (as of colorgram.js 0.1.5), while saturation and lightness are ignored. To get the corresponding result in colorgram.py, simply do:</p>\n<pre><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">hsl</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"c1\"># or...</span>\n<span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">colors</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">hsl</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>If you find a bug in the colorgram.py, or if there\u2019s a feature you would like to be added, please <a href=\"https://github.com/obskyr/colorgram.py/issues\" rel=\"nofollow\">open an issue</a> on GitHub.</p>\n<p>If you have a question about the library, or if you\u2019d just like to talk about, well, anything, that\u2019s no problem at all. You can reach me in any of these ways:</p>\n<ul>\n<li>Tweet <a href=\"https://twitter.com/obskyr\" rel=\"nofollow\">@obskyr</a></li>\n<li><a href=\"mailto:powpowd%40gmail.com\">E-mail me</a></li>\n</ul>\n<p>To get a quick answer, Twitter is your best bet.</p>\n<p>Enjoy!</p>\n</div>\n\n          </div>"}, "last_serial": 4638856, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3412238e2b02a9b6a51027ab0ad51e68", "sha256": "44437808709d111acd2162ba90107a283a2d00f00fb89846978fdcbe8ef8959e"}, "downloads": -1, "filename": "colorgram.py-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3412238e2b02a9b6a51027ab0ad51e68", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7524, "upload_time": "2016-09-14T12:52:20", "upload_time_iso_8601": "2016-09-14T12:52:20.912116Z", "url": "https://files.pythonhosted.org/packages/10/6a/603519a31bdb873c43b058ac8864cce7446ad140e05ba42bf7b6fdb2dae4/colorgram.py-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fdb45711177173699562a36afede750", "sha256": "6df94b1ff87ba30d2333f5ae0af04c05b554a4978ba081596df852fa549c1b34"}, "downloads": -1, "filename": "colorgram.py-1.0.0.zip", "has_sig": false, "md5_digest": "7fdb45711177173699562a36afede750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10652, "upload_time": "2018-12-27T19:54:50", "upload_time_iso_8601": "2018-12-27T19:54:50.480203Z", "url": "https://files.pythonhosted.org/packages/7b/0d/338b5312aaa3d8563de82a549aabb1048d83ec55478049300222be5cefce/colorgram.py-1.0.0.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "40e3f274f911dbe1894f9bd64dc3d7f7", "sha256": "35f1692a2f070f65eae53645f7c3eebc36488cafeb7434838beb26def2910868"}, "downloads": -1, "filename": "colorgram.py-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "40e3f274f911dbe1894f9bd64dc3d7f7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7877, "upload_time": "2016-09-16T08:52:09", "upload_time_iso_8601": "2016-09-16T08:52:09.269452Z", "url": "https://files.pythonhosted.org/packages/cc/30/dbad15ca1067d695b375b281a71fa006b6058ba71801893ac896d1638172/colorgram.py-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "963752be9a03178979c9f3fd14f57cd5", "sha256": "e990769fa6df7261a450c7d5bef3a1a062f09ba1214bff67b4d6f02970a1a27b"}, "downloads": -1, "filename": "colorgram.py-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "963752be9a03178979c9f3fd14f57cd5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6163, "upload_time": "2018-12-27T19:54:48", "upload_time_iso_8601": "2018-12-27T19:54:48.989765Z", "url": "https://files.pythonhosted.org/packages/46/be/4e6d6e89c3239108709bd4bcbe95777c715510023c8d394bdffebf4596fc/colorgram.py-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0627107b1e0d5dd183dd777edfdc9ecb", "sha256": "e77766a5f9de7207bdef8f1c22a702cbf09630eae3bc46a450b9d9f12a7bfdbf"}, "downloads": -1, "filename": "colorgram.py-1.2.0.tar.gz", "has_sig": false, "md5_digest": "0627107b1e0d5dd183dd777edfdc9ecb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5937, "upload_time": "2018-12-27T19:54:51", "upload_time_iso_8601": "2018-12-27T19:54:51.721197Z", "url": "https://files.pythonhosted.org/packages/41/52/8a6d33deace24a123881a4779467fbf18f8858368c09ff0eb9d6846b8bdd/colorgram.py-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "963752be9a03178979c9f3fd14f57cd5", "sha256": "e990769fa6df7261a450c7d5bef3a1a062f09ba1214bff67b4d6f02970a1a27b"}, "downloads": -1, "filename": "colorgram.py-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "963752be9a03178979c9f3fd14f57cd5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6163, "upload_time": "2018-12-27T19:54:48", "upload_time_iso_8601": "2018-12-27T19:54:48.989765Z", "url": "https://files.pythonhosted.org/packages/46/be/4e6d6e89c3239108709bd4bcbe95777c715510023c8d394bdffebf4596fc/colorgram.py-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0627107b1e0d5dd183dd777edfdc9ecb", "sha256": "e77766a5f9de7207bdef8f1c22a702cbf09630eae3bc46a450b9d9f12a7bfdbf"}, "downloads": -1, "filename": "colorgram.py-1.2.0.tar.gz", "has_sig": false, "md5_digest": "0627107b1e0d5dd183dd777edfdc9ecb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5937, "upload_time": "2018-12-27T19:54:51", "upload_time_iso_8601": "2018-12-27T19:54:51.721197Z", "url": "https://files.pythonhosted.org/packages/41/52/8a6d33deace24a123881a4779467fbf18f8858368c09ff0eb9d6846b8bdd/colorgram.py-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:37 2020"}