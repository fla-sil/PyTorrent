{"info": {"author": "zencore", "author_email": "dobetter@zencore.cn", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# django-cascading-dropdown-widget\n\nProvide a cascading-dropdown widget for django.\n\n## Install\n\n```shell\npip install django-cascading-dropdown-widget\n```\n\n## Usage\n\n**pro/settings.py**\n\n**Note:**\n\n- The application used static file jquery3/jquery.js, so MUST include django_static_jquery3 in INSTALLED_APPS.\n- The application used static file arrive/arrive.min.js, so MUST include django_static_arrive in INSTALLED_APPS.\n- The application used template of django_cascading_dropdown_widget, so MUST include django_cascading_dropdown_widget in INSTALLED_APPS.\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_static_jquery3',\n    'django_static_arrive',\n    'django_cascading_dropdown_widget',\n    ...\n]\n```\n\n**app/admin.py**\n\n**Note:**\n\n- Create a new ModelForm, and setting field widget to DjangoCascadingDropdownWidget.\n- Create a choices generator instance.\n\n```python\nfrom django.contrib import admin\nfrom django_cascading_dropdown_widget.widgets import DjangoCascadingDropdownWidget\nfrom django_cascading_dropdown_widget.widgets import CascadingModelchoices\nfrom django import forms\nfrom .models import Category\nfrom .models import Book\nfrom .models import Character\n\nclass CharacterForm(forms.ModelForm):\n    class Meta:\n        model = Category\n        exclude = []\n        widgets = {\n            \"book\": DjangoCascadingDropdownWidget(choices=CascadingModelchoices({\n                \"model\": Category,\n                \"related_name\": \"books\",\n            },{\n                \"model\": Book,\n                \"fk_name\": \"category\",\n            })),\n        }\n\nclass CharacterAdmin(admin.ModelAdmin):\n    form = CharacterForm\n    list_display = [\"name\", \"book\"]\n```\n\n## Choices generator\n\n### CascadingModelchoices\n\n```python\nclass CascadingModelchoices(object):\n\n    def __init__(self, *cascadings):\n        ...\n```\nThe parameters for CascadingModelchoices generator are the CASCADING-MODEL-SETTINGS(name it cascadings for short). A MODEL-SETTING(name it cascading for short)'s config items are:\n\n- model, required. The Model class.\n- related_name, required but except for the last model-setting. Use the related_name to get the queryset of the next level items.\n- fk_name, required but except for the first model-setting. Which field name to get parent model.\n- empty, optional. Use *empty* string instread of '----- xxx ----' in select for empty value.\n- str, optional. Get item title from *str* method or property instread of get title by *str(item)*.\n\n### SimpleChoices\n### SimpleChoices2 (alias)\n\n```python\nclass SimpleChoices(object):\n\n    def __init__(self, *cascadings, empty1=\"-\"*10, empty2=\"-\"*10):\n        ...\n```\n\n- A cascading is a tuple of (Title1, List).\n- The Title1 is the first level option.\n- The List is the second level selector. The List item is a tuple of (Value2, Title2).\n- The Value2 is the second level option's value.\n- The Title2 is the second level option's title.\n\n### MPTTModel Choices\n\n- Use CascadingModelchoices for the generator.\n- Create *indented_title* function for the MPTTModel. You use whatever name for the *indented_title*.\n\n    ```\n    class MyModel(MPTTModel):\n        def indented_title(self):\n            return (\"-\"*4) * self.get_level() + self.name\n    ```\n\n- Setting ```\"str\": \"indented_title\"``` in cascading.\n- The application django-cascading-dropdown-widget is NOT required django-mptt, so install django-mptt by youself. We have did try...except... with django-mptt's missing.\n\n## Releases\n\n### v0.2.1 2020/03/25\n\n- Use django-static-arrive js file.\n- Fire change event on the hidden input.\n\n### v0.2.0 2020/03/23\n\n- Add SimpleChoices generator.\n- Add `white-space: nowrap;` for django-cascading-dropdown-widget.\n\n### v0.1.0 2020/03/16\n\n- Fisrt release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "django admin extentions,django cascading dropdown widget", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-cascading-dropdown-widget", "package_url": "https://pypi.org/project/django-cascading-dropdown-widget/", "platform": "", "project_url": "https://pypi.org/project/django-cascading-dropdown-widget/", "project_urls": null, "release_url": "https://pypi.org/project/django-cascading-dropdown-widget/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Provide a cascading-dropdown widget for django.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-cascading-dropdown-widget</h1>\n<p>Provide a cascading-dropdown widget for django.</p>\n<h2>Install</h2>\n<pre>pip install django-cascading-dropdown-widget\n</pre>\n<h2>Usage</h2>\n<p><strong>pro/settings.py</strong></p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>The application used static file jquery3/jquery.js, so MUST include django_static_jquery3 in INSTALLED_APPS.</li>\n<li>The application used static file arrive/arrive.min.js, so MUST include django_static_arrive in INSTALLED_APPS.</li>\n<li>The application used template of django_cascading_dropdown_widget, so MUST include django_cascading_dropdown_widget in INSTALLED_APPS.</li>\n</ul>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_static_jquery3'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_static_arrive'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_cascading_dropdown_widget'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p><strong>app/admin.py</strong></p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>Create a new ModelForm, and setting field widget to DjangoCascadingDropdownWidget.</li>\n<li>Create a choices generator instance.</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_cascading_dropdown_widget.widgets</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoCascadingDropdownWidget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_cascading_dropdown_widget.widgets</span> <span class=\"kn\">import</span> <span class=\"n\">CascadingModelchoices</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Category</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Character</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CharacterForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Category</span>\n        <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">widgets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"book\"</span><span class=\"p\">:</span> <span class=\"n\">DjangoCascadingDropdownWidget</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">CascadingModelchoices</span><span class=\"p\">({</span>\n                <span class=\"s2\">\"model\"</span><span class=\"p\">:</span> <span class=\"n\">Category</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"related_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"books\"</span><span class=\"p\">,</span>\n            <span class=\"p\">},{</span>\n                <span class=\"s2\">\"model\"</span><span class=\"p\">:</span> <span class=\"n\">Book</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"fk_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"category\"</span><span class=\"p\">,</span>\n            <span class=\"p\">})),</span>\n        <span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CharacterAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">CharacterForm</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"book\"</span><span class=\"p\">]</span>\n</pre>\n<h2>Choices generator</h2>\n<h3>CascadingModelchoices</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">CascadingModelchoices</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">cascadings</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre>\n<p>The parameters for CascadingModelchoices generator are the CASCADING-MODEL-SETTINGS(name it cascadings for short). A MODEL-SETTING(name it cascading for short)'s config items are:</p>\n<ul>\n<li>model, required. The Model class.</li>\n<li>related_name, required but except for the last model-setting. Use the related_name to get the queryset of the next level items.</li>\n<li>fk_name, required but except for the first model-setting. Which field name to get parent model.</li>\n<li>empty, optional. Use <em>empty</em> string instread of '----- xxx ----' in select for empty value.</li>\n<li>str, optional. Get item title from <em>str</em> method or property instread of get title by <em>str(item)</em>.</li>\n</ul>\n<h3>SimpleChoices</h3>\n<h3>SimpleChoices2 (alias)</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">SimpleChoices</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">cascadings</span><span class=\"p\">,</span> <span class=\"n\">empty1</span><span class=\"o\">=</span><span class=\"s2\">\"-\"</span><span class=\"o\">*</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">empty2</span><span class=\"o\">=</span><span class=\"s2\">\"-\"</span><span class=\"o\">*</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>A cascading is a tuple of (Title1, List).</li>\n<li>The Title1 is the first level option.</li>\n<li>The List is the second level selector. The List item is a tuple of (Value2, Title2).</li>\n<li>The Value2 is the second level option's value.</li>\n<li>The Title2 is the second level option's title.</li>\n</ul>\n<h3>MPTTModel Choices</h3>\n<ul>\n<li>\n<p>Use CascadingModelchoices for the generator.</p>\n</li>\n<li>\n<p>Create <em>indented_title</em> function for the MPTTModel. You use whatever name for the <em>indented_title</em>.</p>\n<pre><code>class MyModel(MPTTModel):\n    def indented_title(self):\n        return (\"-\"*4) * self.get_level() + self.name\n</code></pre>\n</li>\n<li>\n<p>Setting <code>\"str\": \"indented_title\"</code> in cascading.</p>\n</li>\n<li>\n<p>The application django-cascading-dropdown-widget is NOT required django-mptt, so install django-mptt by youself. We have did try...except... with django-mptt's missing.</p>\n</li>\n</ul>\n<h2>Releases</h2>\n<h3>v0.2.1 2020/03/25</h3>\n<ul>\n<li>Use django-static-arrive js file.</li>\n<li>Fire change event on the hidden input.</li>\n</ul>\n<h3>v0.2.0 2020/03/23</h3>\n<ul>\n<li>Add SimpleChoices generator.</li>\n<li>Add <code>white-space: nowrap;</code> for django-cascading-dropdown-widget.</li>\n</ul>\n<h3>v0.1.0 2020/03/16</h3>\n<ul>\n<li>Fisrt release.</li>\n</ul>\n\n          </div>"}, "last_serial": 6881618, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "947109f15b1ef81b787baee07cd25e2e", "sha256": "5e6de25b2b03aeab466fe3ff055e4f34ffa4493995282a915ebf69d063fbe707"}, "downloads": -1, "filename": "django-cascading-dropdown-widget-0.1.0.tar.gz", "has_sig": false, "md5_digest": "947109f15b1ef81b787baee07cd25e2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8786, "upload_time": "2020-03-16T03:32:15", "upload_time_iso_8601": "2020-03-16T03:32:15.277061Z", "url": "https://files.pythonhosted.org/packages/0c/21/0878ac5b0388a5a6d2b6a8bc3d7956cebdf5641797f6ba3756c64ff483f6/django-cascading-dropdown-widget-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3a8fd97b6ef4db312e4fb42a0cb98695", "sha256": "44f515e047572dfee64e48d1c5a53e9802a928bd071fc830ea3a6ac982161158"}, "downloads": -1, "filename": "django-cascading-dropdown-widget-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3a8fd97b6ef4db312e4fb42a0cb98695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9713, "upload_time": "2020-03-23T13:35:50", "upload_time_iso_8601": "2020-03-23T13:35:50.753881Z", "url": "https://files.pythonhosted.org/packages/22/ac/0b5a6114e7847de76ba93c60577af25f86fe0229d3fcbdd6511bb4146289/django-cascading-dropdown-widget-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cb02dedb377182fdd5d795c8664ebd3c", "sha256": "ebd90f16064a5d774a417035c60036494304a2f9900120ee6726dbb529d60987"}, "downloads": -1, "filename": "django-cascading-dropdown-widget-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cb02dedb377182fdd5d795c8664ebd3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8075, "upload_time": "2020-03-25T15:46:24", "upload_time_iso_8601": "2020-03-25T15:46:24.038883Z", "url": "https://files.pythonhosted.org/packages/ad/a4/88b54bbc48ec3a85a08517682c391a3ea12f5368fafe13cf6a9e1b30d2d8/django-cascading-dropdown-widget-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb02dedb377182fdd5d795c8664ebd3c", "sha256": "ebd90f16064a5d774a417035c60036494304a2f9900120ee6726dbb529d60987"}, "downloads": -1, "filename": "django-cascading-dropdown-widget-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cb02dedb377182fdd5d795c8664ebd3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8075, "upload_time": "2020-03-25T15:46:24", "upload_time_iso_8601": "2020-03-25T15:46:24.038883Z", "url": "https://files.pythonhosted.org/packages/ad/a4/88b54bbc48ec3a85a08517682c391a3ea12f5368fafe13cf6a9e1b30d2d8/django-cascading-dropdown-widget-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:15 2020"}