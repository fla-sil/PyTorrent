{"info": {"author": "Logic Supply", "author_email": "jacob.caughfield@logicsupply.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "===============\nPykarbon Module\n===============\nFor the full rundown, read `the rest of the docs <https://pykarbon.readthedocs.io/en/latest/>`_.\n\n-----------\nWhat is it?\n-----------\n\nThe Pykarbon module provides a set of tools for interfacing with the hardware devices on\nOnLogic's 'Karbon' series industrial PCs. These interfaces include the onboard CAN bus,\nDigital IO, and a few other hardware devices.\n\nThe goal of this package is to provide a simple, but powerful, base platform that will allow\nusers to quickly and easily integrate a Karbon into their own application.\n\n*The tools in this package are designed to work with specific hardware;\nthis will not work for more generalized projects*\n\n----------------\nHow do I use it?\n----------------\n\n*You will need to install python 3 prior to following this guide.*\n\nGetting started with pykarbon takes only a few minutes:\n\n- Open up a terminal, and run ``pip install pykarbon``\n\n  + On some systems you may need to run as admin, or use the ``--user`` flag\n\n- Launch a python shell with ``python``\n\n  + Usually linux users do not have write access to serial ports; try ``sudo python``\n\n- Import pykarbon with ``import pykarbon.pykarbon as pk``\n- And finally create a control object using ``dev = pk.Karbon()``\n\nIf all went well, you should now be ready to control a variety of systems, but for now, let's just print out some\nconfiguration information:\n\n- ``dev.show_info()``\n\nAnd close our session:\n\n- ``dev.close()``\n\n-------------------\nWhat else can I do?\n-------------------\n\nPykarbon offers a number of tools for automating and using Karbon series hardware interfaces. These include:\n\n- CAN and DIO background data monitoring\n- Exporting logged data to .csv\n- Registering and making function calls based on these bus events:\n\n  + CAN data IDs\n  + Digital Input Events\n  + DIO Bus States (Allows partial states)\n\n- Automated can message response to registered IDs\n- Automated setting of Digital Output states\n- Automatic CAN baudrate detection\n- Updating user configuration information:\n\n  + Ignition sense enable/disable\n  + Power timing configurations\n  + Low battery shutdown voltage\n  + Etc.\n\n- Firmware update\n\nAdditonally, as Pykarbon's CAN and Terminal sessions must connect to device serial ports, functionality has been added\nto allow running these sessions using a context manager:\n\n.. code-block:: python\n\n    import pykarbon.pykarbon as pk\n    import pykarbon.can as pkc\n\n    with pk.Karbon() as dev:\n        dev.show_info()\n\n    with pkc.Session() as dev:\n        dev.write(0x123, 0x11223344)\n\n\n-------------------------------\nA Simple Example: Pykarbon.Core\n-------------------------------\n\n.. code-block:: python\n\n    import pykarbon.core as pkcore\n\n    # Set up interfaces:\n    can = pkcore.Can()\n    term = pkcore.Terminal()\n\n    # Claim the serial ports for use:\n    can.claim()\n    term.claim()\n\n    # Configure the can baudrate, and view that config\n    term.command('set can-baudrate 800')\n\n    print(\"\\nRead User Configuration:\")\n    term.print_command('config')\n\n    # Write a message, and then listen for and print responses\n    can.send(0x123, 0x11223344)\n\n    print(\"\\nMonitoring CAN Bus, Press CTRL+C to Stop!\")\n    can.sniff() # Will block until you exit with ctrl+c\n\n    # Close the ports!\n    can.release()\n    term.release()\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/onlogic/Pykarbon", "keywords": "", "license": "BSD-2.0", "maintainer": "", "maintainer_email": "", "name": "pykarbon", "package_url": "https://pypi.org/project/pykarbon/", "platform": "", "project_url": "https://pypi.org/project/pykarbon/", "project_urls": {"Homepage": "https://github.com/onlogic/Pykarbon"}, "release_url": "https://pypi.org/project/pykarbon/1.1.7/", "requires_dist": ["pyserial"], "requires_python": "", "summary": "Tools for Karbon hardware interfaces.", "version": "1.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>For the full rundown, read <a href=\"https://pykarbon.readthedocs.io/en/latest/\" rel=\"nofollow\">the rest of the docs</a>.</p>\n<div id=\"what-is-it\">\n<h2>What is it?</h2>\n<p>The Pykarbon module provides a set of tools for interfacing with the hardware devices on\nOnLogic\u2019s \u2018Karbon\u2019 series industrial PCs. These interfaces include the onboard CAN bus,\nDigital IO, and a few other hardware devices.</p>\n<p>The goal of this package is to provide a simple, but powerful, base platform that will allow\nusers to quickly and easily integrate a Karbon into their own application.</p>\n<p><em>The tools in this package are designed to work with specific hardware;\nthis will not work for more generalized projects</em></p>\n</div>\n<div id=\"how-do-i-use-it\">\n<h2>How do I use it?</h2>\n<p><em>You will need to install python 3 prior to following this guide.</em></p>\n<p>Getting started with pykarbon takes only a few minutes:</p>\n<ul>\n<li>Open up a terminal, and run <tt>pip install pykarbon</tt><ul>\n<li>On some systems you may need to run as admin, or use the <tt><span class=\"pre\">--user</span></tt> flag</li>\n</ul>\n</li>\n<li>Launch a python shell with <tt>python</tt><ul>\n<li>Usually linux users do not have write access to serial ports; try <tt>sudo python</tt></li>\n</ul>\n</li>\n<li>Import pykarbon with <tt>import pykarbon.pykarbon as pk</tt></li>\n<li>And finally create a control object using <tt>dev = pk.Karbon()</tt></li>\n</ul>\n<p>If all went well, you should now be ready to control a variety of systems, but for now, let\u2019s just print out some\nconfiguration information:</p>\n<ul>\n<li><tt>dev.show_info()</tt></li>\n</ul>\n<p>And close our session:</p>\n<ul>\n<li><tt>dev.close()</tt></li>\n</ul>\n</div>\n<div id=\"what-else-can-i-do\">\n<h2>What else can I do?</h2>\n<p>Pykarbon offers a number of tools for automating and using Karbon series hardware interfaces. These include:</p>\n<ul>\n<li>CAN and DIO background data monitoring</li>\n<li>Exporting logged data to .csv</li>\n<li>Registering and making function calls based on these bus events:<ul>\n<li>CAN data IDs</li>\n<li>Digital Input Events</li>\n<li>DIO Bus States (Allows partial states)</li>\n</ul>\n</li>\n<li>Automated can message response to registered IDs</li>\n<li>Automated setting of Digital Output states</li>\n<li>Automatic CAN baudrate detection</li>\n<li>Updating user configuration information:<ul>\n<li>Ignition sense enable/disable</li>\n<li>Power timing configurations</li>\n<li>Low battery shutdown voltage</li>\n<li>Etc.</li>\n</ul>\n</li>\n<li>Firmware update</li>\n</ul>\n<p>Additonally, as Pykarbon\u2019s CAN and Terminal sessions must connect to device serial ports, functionality has been added\nto allow running these sessions using a context manager:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykarbon.pykarbon</span> <span class=\"k\">as</span> <span class=\"nn\">pk</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pykarbon.can</span> <span class=\"k\">as</span> <span class=\"nn\">pkc</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">Karbon</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">dev</span><span class=\"p\">:</span>\n    <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">show_info</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pkc</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">dev</span><span class=\"p\">:</span>\n    <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"mh\">0x123</span><span class=\"p\">,</span> <span class=\"mh\">0x11223344</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"a-simple-example-pykarbon-core\">\n<h2>A Simple Example: Pykarbon.Core</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykarbon.core</span> <span class=\"k\">as</span> <span class=\"nn\">pkcore</span>\n\n<span class=\"c1\"># Set up interfaces:</span>\n<span class=\"n\">can</span> <span class=\"o\">=</span> <span class=\"n\">pkcore</span><span class=\"o\">.</span><span class=\"n\">Can</span><span class=\"p\">()</span>\n<span class=\"n\">term</span> <span class=\"o\">=</span> <span class=\"n\">pkcore</span><span class=\"o\">.</span><span class=\"n\">Terminal</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Claim the serial ports for use:</span>\n<span class=\"n\">can</span><span class=\"o\">.</span><span class=\"n\">claim</span><span class=\"p\">()</span>\n<span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">claim</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Configure the can baudrate, and view that config</span>\n<span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'set can-baudrate 800'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Read User Configuration:\"</span><span class=\"p\">)</span>\n<span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">print_command</span><span class=\"p\">(</span><span class=\"s1\">'config'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Write a message, and then listen for and print responses</span>\n<span class=\"n\">can</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"mh\">0x123</span><span class=\"p\">,</span> <span class=\"mh\">0x11223344</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Monitoring CAN Bus, Press CTRL+C to Stop!\"</span><span class=\"p\">)</span>\n<span class=\"n\">can</span><span class=\"o\">.</span><span class=\"n\">sniff</span><span class=\"p\">()</span> <span class=\"c1\"># Will block until you exit with ctrl+c</span>\n\n<span class=\"c1\"># Close the ports!</span>\n<span class=\"n\">can</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">term</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6779003, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "71a5be6fd105c977ff19b303a2af8e79", "sha256": "4a3a67546d09e52db4422a68f9806faa589307b7176a70e8116e3ad52498a06b"}, "downloads": -1, "filename": "pykarbon-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "71a5be6fd105c977ff19b303a2af8e79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20695, "upload_time": "2019-05-30T00:23:06", "upload_time_iso_8601": "2019-05-30T00:23:06.806885Z", "url": "https://files.pythonhosted.org/packages/88/6d/825f53879e67af82e89991bf2ae24fcc37114bb0a73deea843daf6a3e57f/pykarbon-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73397180212f48113550e55218384f55", "sha256": "6d71975366526ea1363d168e7e51e19c55c8a2181c91831bbac7065b09ebcba9"}, "downloads": -1, "filename": "pykarbon-1.0.2.tar.gz", "has_sig": false, "md5_digest": "73397180212f48113550e55218384f55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16316, "upload_time": "2019-05-30T00:23:08", "upload_time_iso_8601": "2019-05-30T00:23:08.344779Z", "url": "https://files.pythonhosted.org/packages/b6/0d/139df6faefa021c7215685d8d074a6dbdec7b47a405260084e3d35998696/pykarbon-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "fb985ab31287e6afeb23cd0d7c79ae71", "sha256": "5d718b72eadf31343c414f80459cd74eb70b661a25154a45db5ecfb78c1ca697"}, "downloads": -1, "filename": "pykarbon-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fb985ab31287e6afeb23cd0d7c79ae71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20906, "upload_time": "2019-05-30T20:35:57", "upload_time_iso_8601": "2019-05-30T20:35:57.195820Z", "url": "https://files.pythonhosted.org/packages/a9/ad/953181cacde59e3f8d8fdb1d135869f84bed6bce76aecc1eca9d7319c342/pykarbon-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46d06cbc7a6ed0e83da050b29ee16d5c", "sha256": "a06fe5a52b4b48082ca16c4efe0f99b5d3766fe9f7d754320ac23486825b041f"}, "downloads": -1, "filename": "pykarbon-1.0.3.tar.gz", "has_sig": false, "md5_digest": "46d06cbc7a6ed0e83da050b29ee16d5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16573, "upload_time": "2019-05-30T20:35:58", "upload_time_iso_8601": "2019-05-30T20:35:58.804935Z", "url": "https://files.pythonhosted.org/packages/21/26/668bfb7d80d0a3bad06adca599a580a255a69135714100940794785aa3f5/pykarbon-1.0.3.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "c29dd5f5e89645317f8bdee1bd988249", "sha256": "0217379e6a030ef08fd10783853412a937c4e508b0eb410a5054d1c0b797e9bb"}, "downloads": -1, "filename": "pykarbon-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c29dd5f5e89645317f8bdee1bd988249", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20969, "upload_time": "2019-06-04T21:52:01", "upload_time_iso_8601": "2019-06-04T21:52:01.814453Z", "url": "https://files.pythonhosted.org/packages/a5/1f/efad6dd01a95c7de66436c44b76f74157d709ffd9fd210449f09eefe8886/pykarbon-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72077539c932dc878acd2ef35b922aa6", "sha256": "da11d8117c99beda7d05e8b4939fcbcdc35cb1cc4bd440bda143a0f130c296c1"}, "downloads": -1, "filename": "pykarbon-1.0.5.tar.gz", "has_sig": false, "md5_digest": "72077539c932dc878acd2ef35b922aa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17175, "upload_time": "2019-06-04T21:52:03", "upload_time_iso_8601": "2019-06-04T21:52:03.635023Z", "url": "https://files.pythonhosted.org/packages/ac/7d/a126ad4825c8d06bda85cb71e6a81358d61cb88acfac7c0b5406393d9791/pykarbon-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "276972a494f9917d7840aeb9979503df", "sha256": "6cc213e198e997fc02127acabc0a96a0078009dd43d7766a080dce7114756acc"}, "downloads": -1, "filename": "pykarbon-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "276972a494f9917d7840aeb9979503df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25515, "upload_time": "2019-08-23T18:40:33", "upload_time_iso_8601": "2019-08-23T18:40:33.169796Z", "url": "https://files.pythonhosted.org/packages/4c/7d/10abf3f208fe77209428d288c71da952c1c524a6e0bdff92b940ef8f476a/pykarbon-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a398f473ca61d078f6be35d41ad96db", "sha256": "6067126bcbba7c85475cec7ed4a5184e9e7d7b9b439c78c1f01396821202b0ed"}, "downloads": -1, "filename": "pykarbon-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7a398f473ca61d078f6be35d41ad96db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21662, "upload_time": "2019-08-23T18:40:34", "upload_time_iso_8601": "2019-08-23T18:40:34.430601Z", "url": "https://files.pythonhosted.org/packages/af/8a/0a1c5907d5f6270114d32738e332c650dbfad9b6ab415fb8789d94670286/pykarbon-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "c6434c5d20cf03a72cfbc469240a2c57", "sha256": "f5c334c6353d7cd503277ae79e056e21fa5f6b556b6c2965e867b0a6a866af95"}, "downloads": -1, "filename": "pykarbon-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c6434c5d20cf03a72cfbc469240a2c57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25781, "upload_time": "2019-09-12T12:30:22", "upload_time_iso_8601": "2019-09-12T12:30:22.837571Z", "url": "https://files.pythonhosted.org/packages/73/ee/e71ccb15a14edfaf729baf3befc780e2a479cbcbfff0c588037f79223e9c/pykarbon-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e9ce52663971c6dafd41420d0b667eb", "sha256": "70a3fd4a04db30bcb636f324fab29f78bcb8274d5d1b96615a6dfcc93717c131"}, "downloads": -1, "filename": "pykarbon-1.1.2.tar.gz", "has_sig": false, "md5_digest": "7e9ce52663971c6dafd41420d0b667eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22059, "upload_time": "2019-09-12T12:30:24", "upload_time_iso_8601": "2019-09-12T12:30:24.545529Z", "url": "https://files.pythonhosted.org/packages/17/6a/45900ee6bb973187420293426e6d8d9395378bdb471751d08c25e2854ab7/pykarbon-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "7fac9fc85707154a6ea9dc961cb3506b", "sha256": "29ed533ae160f542c1cb0e39cb5738d75902b52d6e58ceb48c1796dbef942f9b"}, "downloads": -1, "filename": "pykarbon-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7fac9fc85707154a6ea9dc961cb3506b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26383, "upload_time": "2019-10-04T16:53:42", "upload_time_iso_8601": "2019-10-04T16:53:42.426648Z", "url": "https://files.pythonhosted.org/packages/ec/60/715dab03d110e149f7752219004472eef7d6c5d6b284a77f385bf0fec2aa/pykarbon-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28fccac71bae62391eeff5cfa22303ec", "sha256": "d07c6437bf904abf3cfd358e5864c27cfa2cf76f5806b2398e4e393d4ae4c4e7"}, "downloads": -1, "filename": "pykarbon-1.1.3.tar.gz", "has_sig": false, "md5_digest": "28fccac71bae62391eeff5cfa22303ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22659, "upload_time": "2019-10-04T16:53:44", "upload_time_iso_8601": "2019-10-04T16:53:44.246786Z", "url": "https://files.pythonhosted.org/packages/f4/ad/71a432d81df1d128bde574b8d4b1ab45426aab5b9ab87fb843b227a49d81/pykarbon-1.1.3.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "049083f7abea4bc7090a61fb61bcb33d", "sha256": "dc2a371765dcf41dce18315b57eaab53e5982523b6fe944aa0d5ce93c90e0513"}, "downloads": -1, "filename": "pykarbon-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "049083f7abea4bc7090a61fb61bcb33d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26510, "upload_time": "2019-11-26T21:41:09", "upload_time_iso_8601": "2019-11-26T21:41:09.184661Z", "url": "https://files.pythonhosted.org/packages/cc/1c/25ae5be7efdeb858b54c4697486944c14359f1fe685202c0522114a9b695/pykarbon-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87360b174c657a06fd5d0042364cc4cb", "sha256": "95b425733d460b91e6c110b945dbab7149919b9186830f5511938adfa3d9b170"}, "downloads": -1, "filename": "pykarbon-1.1.5.tar.gz", "has_sig": false, "md5_digest": "87360b174c657a06fd5d0042364cc4cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22812, "upload_time": "2019-11-26T21:41:11", "upload_time_iso_8601": "2019-11-26T21:41:11.038791Z", "url": "https://files.pythonhosted.org/packages/dd/c9/cf5a7623d6b48fbd7dd8ba924ae675c55fc28d4a19253654e133b8688a30/pykarbon-1.1.5.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "c713c434f8146864c233ba3ad3f0a6c4", "sha256": "1bba69da3587e78c45c746e881b2744b7fdf064d0a68fbd90d8a9d507dc2a88d"}, "downloads": -1, "filename": "pykarbon-1.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c713c434f8146864c233ba3ad3f0a6c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28132, "upload_time": "2020-03-09T18:02:18", "upload_time_iso_8601": "2020-03-09T18:02:18.794732Z", "url": "https://files.pythonhosted.org/packages/a5/af/31eaea2b913020a7fe198b38c4f358387c9a1bc1d92cd050f5d09e4ed398/pykarbon-1.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8d3904ae6191cd9e362176e86283222", "sha256": "fecc15e1ba8798712aff7c9856e1c0196ecb51d6dde40a0f57034d8869921bd6"}, "downloads": -1, "filename": "pykarbon-1.1.7.tar.gz", "has_sig": false, "md5_digest": "b8d3904ae6191cd9e362176e86283222", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24007, "upload_time": "2020-03-09T18:02:20", "upload_time_iso_8601": "2020-03-09T18:02:20.526784Z", "url": "https://files.pythonhosted.org/packages/8d/a2/a7a4d99ff6f2d9b0b32d31bb91c606b773723194eeb28c5bea685b40dbb9/pykarbon-1.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c713c434f8146864c233ba3ad3f0a6c4", "sha256": "1bba69da3587e78c45c746e881b2744b7fdf064d0a68fbd90d8a9d507dc2a88d"}, "downloads": -1, "filename": "pykarbon-1.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c713c434f8146864c233ba3ad3f0a6c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28132, "upload_time": "2020-03-09T18:02:18", "upload_time_iso_8601": "2020-03-09T18:02:18.794732Z", "url": "https://files.pythonhosted.org/packages/a5/af/31eaea2b913020a7fe198b38c4f358387c9a1bc1d92cd050f5d09e4ed398/pykarbon-1.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8d3904ae6191cd9e362176e86283222", "sha256": "fecc15e1ba8798712aff7c9856e1c0196ecb51d6dde40a0f57034d8869921bd6"}, "downloads": -1, "filename": "pykarbon-1.1.7.tar.gz", "has_sig": false, "md5_digest": "b8d3904ae6191cd9e362176e86283222", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24007, "upload_time": "2020-03-09T18:02:20", "upload_time_iso_8601": "2020-03-09T18:02:20.526784Z", "url": "https://files.pythonhosted.org/packages/8d/a2/a7a4d99ff6f2d9b0b32d31bb91c606b773723194eeb28c5bea685b40dbb9/pykarbon-1.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:38 2020"}