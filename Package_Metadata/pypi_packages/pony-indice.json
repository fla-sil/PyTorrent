{"info": {"author": "Anthony Monthe (ZuluPro)", "author_email": "anthony.monthe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "===========\nPony Indice\n===========\n\nPony Indice is a Django re-usable app to create a simple search engine for your\nproject.\n\nInstall\n=======\n\nInstall it as usual (pip coming): ::\n\n    pip install pony-indice\n    \nAdd the app in your ``INSTALLED_APPS``: ::\n\n    INSTALLED_APPS = (\n       ...\n       'pony_indice',\n       ...\n    )\n    \nAnd launch the migration to create the table: ::\n\n    ./manage.py migrate\n\nUsage\n=====\n\nThe usage is quite simple: ::\n\n    from pony_indice import registry as indice_registry\n\n    @indice_registry.register()\n    class YourModel(models.Models):\n       rank = models.IntegerField()\n\nNow your model is tagged as \"tracked\" and the following behaviors are added:\n\n- On ``post_save`` signals a ``Link`` will be created/updated in database\n- On ``post_delete`` the ``Link`` will be mark as \"removed\"\n\n(Update aren't taken in account and may lead to broken URLs)\n\nBasicaly this app is based on the other decorated models, but you can easily\nimport ``pony_indice.models.Link`` and add the link which you want, especialy\nexternal ones.\n\nTools\n=====\n\nQuerySet\n--------\n\nThe ``Link``'s queryset has the method ``filter_q`` method, which is a simple\nfilter looking if fields ``display`` or ``description`` contain a string.\nUseful to create easily any search tool.\n\nAdmin\n-----\n\nOf course the admin interface is already configured.\n\nREST Framework\n--------------\n\n``pony_indice.contrib.rest_framework.serializers.LinkSerializer`` and\n``pony_indice.contrib.rest_framework.viewsets.LinkViewsets`` are here to play\nquickly with Django REST Framework.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/ZuluPro/pony-indice", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "pony-indice", "package_url": "https://pypi.org/project/pony-indice/", "platform": "", "project_url": "https://pypi.org/project/pony-indice/", "project_urls": {"Homepage": "https://gitlab.com/ZuluPro/pony-indice"}, "release_url": "https://pypi.org/project/pony-indice/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Search index for Django.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pony Indice is a Django re-usable app to create a simple search engine for your\nproject.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install it as usual (pip coming):</p>\n<pre>pip install pony-indice\n</pre>\n<p>Add the app in your <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n   ...\n   'pony_indice',\n   ...\n)\n</pre>\n<p>And launch the migration to create the table:</p>\n<pre>./manage.py migrate\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The usage is quite simple:</p>\n<pre>from pony_indice import registry as indice_registry\n\n@indice_registry.register()\nclass YourModel(models.Models):\n   rank = models.IntegerField()\n</pre>\n<p>Now your model is tagged as \u201ctracked\u201d and the following behaviors are added:</p>\n<ul>\n<li>On <tt>post_save</tt> signals a <tt>Link</tt> will be created/updated in database</li>\n<li>On <tt>post_delete</tt> the <tt>Link</tt> will be mark as \u201cremoved\u201d</li>\n</ul>\n<p>(Update aren\u2019t taken in account and may lead to broken URLs)</p>\n<p>Basicaly this app is based on the other decorated models, but you can easily\nimport <tt>pony_indice.models.Link</tt> and add the link which you want, especialy\nexternal ones.</p>\n</div>\n<div id=\"tools\">\n<h2>Tools</h2>\n<div id=\"queryset\">\n<h3>QuerySet</h3>\n<p>The <tt>Link</tt>\u2019s queryset has the method <tt>filter_q</tt> method, which is a simple\nfilter looking if fields <tt>display</tt> or <tt>description</tt> contain a string.\nUseful to create easily any search tool.</p>\n</div>\n<div id=\"admin\">\n<h3>Admin</h3>\n<p>Of course the admin interface is already configured.</p>\n</div>\n<div id=\"rest-framework\">\n<h3>REST Framework</h3>\n<p><tt>pony_indice.contrib.rest_framework.serializers.LinkSerializer</tt> and\n<tt>pony_indice.contrib.rest_framework.viewsets.LinkViewsets</tt> are here to play\nquickly with Django REST Framework.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4488221, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "410d79c34da12bcc259d905096a19c7d", "sha256": "2f8d6e266238d8d89a39b6900ebce92714005357b24ff788872727eddc0dce6a"}, "downloads": -1, "filename": "pony-indice-0.0.4.tar.gz", "has_sig": false, "md5_digest": "410d79c34da12bcc259d905096a19c7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7890, "upload_time": "2018-11-10T04:24:36", "upload_time_iso_8601": "2018-11-10T04:24:36.884073Z", "url": "https://files.pythonhosted.org/packages/de/b9/305d645767e9236e75eedda067a57457e4cd2783f18c8941b276c5c2b38b/pony-indice-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "9af2c62d9f76ce389a801f4e625292b5", "sha256": "e788ae85843e2e13ce472fec8e8224aca3435546a66a69b18b0788f020ea5bfc"}, "downloads": -1, "filename": "pony-indice-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9af2c62d9f76ce389a801f4e625292b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11948, "upload_time": "2018-11-11T22:32:50", "upload_time_iso_8601": "2018-11-11T22:32:50.171702Z", "url": "https://files.pythonhosted.org/packages/32/14/095f6e2270f821f4f70321244f228febe7e78978ee5401330aabe710ccc4/pony-indice-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0942b22169d2a35891a3d150a614d09d", "sha256": "40c47e2947edfe7f44f34d56b19d5e1e599be06eca5296b6b1ab3a0a0c7cb711"}, "downloads": -1, "filename": "pony-indice-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0942b22169d2a35891a3d150a614d09d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11953, "upload_time": "2018-11-15T04:50:06", "upload_time_iso_8601": "2018-11-15T04:50:06.316470Z", "url": "https://files.pythonhosted.org/packages/66/16/2f83d26925b4919b9655970e84968f109d6d0a9b12f837572a316fd9192d/pony-indice-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0942b22169d2a35891a3d150a614d09d", "sha256": "40c47e2947edfe7f44f34d56b19d5e1e599be06eca5296b6b1ab3a0a0c7cb711"}, "downloads": -1, "filename": "pony-indice-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0942b22169d2a35891a3d150a614d09d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11953, "upload_time": "2018-11-15T04:50:06", "upload_time_iso_8601": "2018-11-15T04:50:06.316470Z", "url": "https://files.pythonhosted.org/packages/66/16/2f83d26925b4919b9655970e84968f109d6d0a9b12f837572a316fd9192d/pony-indice-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:37 2020"}