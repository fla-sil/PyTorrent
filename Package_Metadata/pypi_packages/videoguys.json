{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# videoguys-python-client\nOfficial API\n\n- API version: 0.1\n- Package version: 0.1.0\n\n## Requirements.\n\nPython 3.5+\n\n### Setuptools\n\nInstall via [Setuptools](https://pypi.org/project/setuptools/) (for local testing).\n\n```sh\npip install --user --upgrade pip\npip install --user --upgrade setuptools\nsudo python setup.py install --user --prefix=\n```\n\nOr\n\nInstall via [Pip](https://pypi.org/project/pip/) (easiest method).\n\n```sh\nsudo python -m pip install videoguys\n```\n\nThen import the package:\n```python\nimport videoguys\n```\n\n## Getting Started\n\nPlease follow the installation procedure and then run the following:\n\n```python\nfrom __future__ import print_function\n\nimport sys\nimport videoguys\n\nfrom pprint import pprint\n\napi_client = videoguys.ApiClient(\n  api_token=\"<api_key>\", api_host=\"[vevio|vidup]\"\n)\n\ntry:\n    pair_response = api_client.getVideoPair(\"<video_code>\")\n    pprint(pair_response)\n\n    video_info = api_client.getVideoInfo(\"<video_code>\")\n    pprint(video_info)\n\n    filepath = \"absolute_path_to_file\"\n    video_upload = api_client.uploadVideo(\n      filepath=filepath, # required filepath for the new video upload\n      # size=size, # optional in this function, filepath will auto determine the size\n      title=title, # optional title for the new video\n      description=description, # optional description for the new video\n      folder_id=folder_id, # optional folder_id for the new video\n      lite=lite, # optional lite setting for the new video [0 or 1]\n      public=public, # optional public setting for the new video [0 or 1]\n    )\n    pprint(video_upload)\n\n    video_uploads = api_client.getVideoUploads()\n    pprint(video_uploads)\n\n    video_upload = api_client.updateVideoUpload(\n      <upload_code>,\n      title=title, # optional new title for the new video\n      description=description, # optional new description for the new video\n      folder_id=folder_id, # optional new folder_id for the new video\n      lite=lite, # optional new lite setting for the new video [0 or 1]\n      public=public, # optional new public setting for the new video [0 or 1]\n    )\n    pprint(video_upload)\n\n    video_upload = api_client.getVideoUpload(<upload_code>)\n    pprint(video_upload)\n\n    deleted_video_upload = api_client.deleteVideoUpload(<upload_code>)\n    pprint(deleted_video_upload)\n\n    url = \"http/https file url\"\n    url_upload = api_client.newUrlUpload(\n      url=url, # required url for the new url upload\n      title=title, # optional title for the new url\n      description=description, # optional description for the new url\n      folder_id=folder_id, # optional folder_id for the new url\n      lite=lite, # optional lite setting for the new url [0 or 1]\n      public=public, # optional public setting for the new url [0 or 1]\n    )\n    pprint(url_upload)\n\n    url_uploads = api_client.getUrlUploads()\n    pprint(url_uploads)\n\n    url_upload = api_client.updateUrlUpload(\n      <upload_code>,\n      title=title, # optional new title for the new url\n      description=description, # optional new description for the new url\n      folder_id=folder_id, # optional new folder_id for the new url\n      lite=lite, # optional new lite setting for the new url [0 or 1]\n      public=public, # optional new public setting for the new url [0 or 1]\n    )\n    pprint(url_upload)\n\n    url_upload = api_client.getUrlUpload(<upload_code>)\n    pprint(url_upload)\n\n    url_upload_status = api_client.getUrlUploadStatus(<upload_code>)\n    pprint(url_upload_status)\n\n    # if the url upload has been downloaded then you should clear it\n      # to avoid concurrent hitting limits\n    if (url_upload_status and\n        'status' in url_upload_status and\n        url_upload_status['status'] == \"downloaded\"):\n\n        deleted_url_upload = api_client.deleteUrlUpload(<upload_code>)\n        pprint(deleted_url_upload)\nexcept ValueError as e:\n    print(\"%s\" % e)\nexcept videoguys.ErrorWithResponse as e:\n    print(\"%s\" % e.response.body['message'])\nexcept:\n    print(\"Unexpected error:\", sys.exc_info()[0])\n\n```\n\n## Documentation For Authorization\n\n All endpoints except getVideoInfo(\"<video_code>\") and getVideoPair(\"<video_code>\") requires authorization.\n\n\n## Author\n\n VideoGuys\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VideoGuys/python-client", "keywords": "Video API,Video Guys,Vevio,Vidup", "license": "", "maintainer": "", "maintainer_email": "", "name": "videoguys", "package_url": "https://pypi.org/project/videoguys/", "platform": "", "project_url": "https://pypi.org/project/videoguys/", "project_urls": {"Homepage": "https://github.com/VideoGuys/python-client"}, "release_url": "https://pypi.org/project/videoguys/0.0.4/", "requires_dist": ["simple-rest-client (==0.5.4)"], "requires_python": "", "summary": "Video API", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>videoguys-python-client</h1>\n<p>Official API</p>\n<ul>\n<li>API version: 0.1</li>\n<li>Package version: 0.1.0</li>\n</ul>\n<h2>Requirements.</h2>\n<p>Python 3.5+</p>\n<h3>Setuptools</h3>\n<p>Install via <a href=\"https://pypi.org/project/setuptools/\" rel=\"nofollow\">Setuptools</a> (for local testing).</p>\n<pre>pip install --user --upgrade pip\npip install --user --upgrade setuptools\nsudo python setup.py install --user --prefix<span class=\"o\">=</span>\n</pre>\n<p>Or</p>\n<p>Install via <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">Pip</a> (easiest method).</p>\n<pre>sudo python -m pip install videoguys\n</pre>\n<p>Then import the package:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">videoguys</span>\n</pre>\n<h2>Getting Started</h2>\n<p>Please follow the installation procedure and then run the following:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">videoguys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n\n<span class=\"n\">api_client</span> <span class=\"o\">=</span> <span class=\"n\">videoguys</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span>\n  <span class=\"n\">api_token</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">api_host</span><span class=\"o\">=</span><span class=\"s2\">\"[vevio|vidup]\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">pair_response</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getVideoPair</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;video_code&gt;\"</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">pair_response</span><span class=\"p\">)</span>\n\n    <span class=\"n\">video_info</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getVideoInfo</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;video_code&gt;\"</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">video_info</span><span class=\"p\">)</span>\n\n    <span class=\"n\">filepath</span> <span class=\"o\">=</span> <span class=\"s2\">\"absolute_path_to_file\"</span>\n    <span class=\"n\">video_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">uploadVideo</span><span class=\"p\">(</span>\n      <span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"c1\"># required filepath for the new video upload</span>\n      <span class=\"c1\"># size=size, # optional in this function, filepath will auto determine the size</span>\n      <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"c1\"># optional title for the new video</span>\n      <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"c1\"># optional description for the new video</span>\n      <span class=\"n\">folder_id</span><span class=\"o\">=</span><span class=\"n\">folder_id</span><span class=\"p\">,</span> <span class=\"c1\"># optional folder_id for the new video</span>\n      <span class=\"n\">lite</span><span class=\"o\">=</span><span class=\"n\">lite</span><span class=\"p\">,</span> <span class=\"c1\"># optional lite setting for the new video [0 or 1]</span>\n      <span class=\"n\">public</span><span class=\"o\">=</span><span class=\"n\">public</span><span class=\"p\">,</span> <span class=\"c1\"># optional public setting for the new video [0 or 1]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">video_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">video_uploads</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getVideoUploads</span><span class=\"p\">()</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">video_uploads</span><span class=\"p\">)</span>\n\n    <span class=\"n\">video_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">updateVideoUpload</span><span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n      <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"c1\"># optional new title for the new video</span>\n      <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"c1\"># optional new description for the new video</span>\n      <span class=\"n\">folder_id</span><span class=\"o\">=</span><span class=\"n\">folder_id</span><span class=\"p\">,</span> <span class=\"c1\"># optional new folder_id for the new video</span>\n      <span class=\"n\">lite</span><span class=\"o\">=</span><span class=\"n\">lite</span><span class=\"p\">,</span> <span class=\"c1\"># optional new lite setting for the new video [0 or 1]</span>\n      <span class=\"n\">public</span><span class=\"o\">=</span><span class=\"n\">public</span><span class=\"p\">,</span> <span class=\"c1\"># optional new public setting for the new video [0 or 1]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">video_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">video_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getVideoUpload</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">video_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">deleted_video_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">deleteVideoUpload</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">deleted_video_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"http/https file url\"</span>\n    <span class=\"n\">url_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">newUrlUpload</span><span class=\"p\">(</span>\n      <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"c1\"># required url for the new url upload</span>\n      <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"c1\"># optional title for the new url</span>\n      <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"c1\"># optional description for the new url</span>\n      <span class=\"n\">folder_id</span><span class=\"o\">=</span><span class=\"n\">folder_id</span><span class=\"p\">,</span> <span class=\"c1\"># optional folder_id for the new url</span>\n      <span class=\"n\">lite</span><span class=\"o\">=</span><span class=\"n\">lite</span><span class=\"p\">,</span> <span class=\"c1\"># optional lite setting for the new url [0 or 1]</span>\n      <span class=\"n\">public</span><span class=\"o\">=</span><span class=\"n\">public</span><span class=\"p\">,</span> <span class=\"c1\"># optional public setting for the new url [0 or 1]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">url_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">url_uploads</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getUrlUploads</span><span class=\"p\">()</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">url_uploads</span><span class=\"p\">)</span>\n\n    <span class=\"n\">url_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">updateUrlUpload</span><span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n      <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"c1\"># optional new title for the new url</span>\n      <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"c1\"># optional new description for the new url</span>\n      <span class=\"n\">folder_id</span><span class=\"o\">=</span><span class=\"n\">folder_id</span><span class=\"p\">,</span> <span class=\"c1\"># optional new folder_id for the new url</span>\n      <span class=\"n\">lite</span><span class=\"o\">=</span><span class=\"n\">lite</span><span class=\"p\">,</span> <span class=\"c1\"># optional new lite setting for the new url [0 or 1]</span>\n      <span class=\"n\">public</span><span class=\"o\">=</span><span class=\"n\">public</span><span class=\"p\">,</span> <span class=\"c1\"># optional new public setting for the new url [0 or 1]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">url_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">url_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getUrlUpload</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">url_upload</span><span class=\"p\">)</span>\n\n    <span class=\"n\">url_upload_status</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">getUrlUploadStatus</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">url_upload_status</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># if the url upload has been downloaded then you should clear it</span>\n      <span class=\"c1\"># to avoid concurrent hitting limits</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">url_upload_status</span> <span class=\"ow\">and</span>\n        <span class=\"s1\">'status'</span> <span class=\"ow\">in</span> <span class=\"n\">url_upload_status</span> <span class=\"ow\">and</span>\n        <span class=\"n\">url_upload_status</span><span class=\"p\">[</span><span class=\"s1\">'status'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"downloaded\"</span><span class=\"p\">):</span>\n\n        <span class=\"n\">deleted_url_upload</span> <span class=\"o\">=</span> <span class=\"n\">api_client</span><span class=\"o\">.</span><span class=\"n\">deleteUrlUpload</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">upload_code</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n        <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">deleted_url_upload</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">ValueError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">videoguys</span><span class=\"o\">.</span><span class=\"n\">ErrorWithResponse</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">[</span><span class=\"s1\">'message'</span><span class=\"p\">])</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Unexpected error:\"</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exc_info</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<h2>Documentation For Authorization</h2>\n<p>All endpoints except getVideoInfo(\"&lt;video_code&gt;\") and getVideoPair(\"&lt;video_code&gt;\") requires authorization.</p>\n<h2>Author</h2>\n<p>VideoGuys</p>\n\n          </div>"}, "last_serial": 6945011, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "a8c458360fec30e5223e17929cdb9143", "sha256": "9a0f7423b41253ac08e45c5d29b42e855a7604eb8b4a315b79f111924bd895d8"}, "downloads": -1, "filename": "videoguys-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a8c458360fec30e5223e17929cdb9143", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5958, "upload_time": "2019-05-16T15:58:34", "upload_time_iso_8601": "2019-05-16T15:58:34.321191Z", "url": "https://files.pythonhosted.org/packages/7e/aa/35c075e61bcbf5a8421f19edd8b8d433bbaf4f18c020f10241857b73be10/videoguys-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "057d88a4147bd84339dfa47e24fecc09", "sha256": "a6f422d7276cd2be2263c4fdf650835e8a44eb699593d489c097e052e38c3dd5"}, "downloads": -1, "filename": "videoguys-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "057d88a4147bd84339dfa47e24fecc09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6850, "upload_time": "2019-06-19T16:02:45", "upload_time_iso_8601": "2019-06-19T16:02:45.953638Z", "url": "https://files.pythonhosted.org/packages/eb/56/d3705d36b99fd92de0fdde8d52143f9f174e656dce07d9aeeb97dbfa4344/videoguys-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fbe0a07232d314757fe7193058fe80b0", "sha256": "ec7a1f2710266c965041de28975d28871ed24b6af8963d135cddaeb0084e99a2"}, "downloads": -1, "filename": "videoguys-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fbe0a07232d314757fe7193058fe80b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6848, "upload_time": "2020-04-03T18:02:15", "upload_time_iso_8601": "2020-04-03T18:02:15.459588Z", "url": "https://files.pythonhosted.org/packages/85/09/6169c9516f2bcebdc208a143b6e14d8c99e60dfdba958c43a498b67b5ba1/videoguys-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d324bdd462353fdf599112798e78548b", "sha256": "454c23f495d039ad4f0466af20c1a83e8d5f7c49e64bdbc725227ea2e36c6485"}, "downloads": -1, "filename": "videoguys-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d324bdd462353fdf599112798e78548b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4700, "upload_time": "2020-04-03T18:02:16", "upload_time_iso_8601": "2020-04-03T18:02:16.835742Z", "url": "https://files.pythonhosted.org/packages/0a/43/44032970cc4d7dbb59b25b031cfeef8b39889b1113383a5824041c93feaa/videoguys-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbe0a07232d314757fe7193058fe80b0", "sha256": "ec7a1f2710266c965041de28975d28871ed24b6af8963d135cddaeb0084e99a2"}, "downloads": -1, "filename": "videoguys-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fbe0a07232d314757fe7193058fe80b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6848, "upload_time": "2020-04-03T18:02:15", "upload_time_iso_8601": "2020-04-03T18:02:15.459588Z", "url": "https://files.pythonhosted.org/packages/85/09/6169c9516f2bcebdc208a143b6e14d8c99e60dfdba958c43a498b67b5ba1/videoguys-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d324bdd462353fdf599112798e78548b", "sha256": "454c23f495d039ad4f0466af20c1a83e8d5f7c49e64bdbc725227ea2e36c6485"}, "downloads": -1, "filename": "videoguys-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d324bdd462353fdf599112798e78548b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4700, "upload_time": "2020-04-03T18:02:16", "upload_time_iso_8601": "2020-04-03T18:02:16.835742Z", "url": "https://files.pythonhosted.org/packages/0a/43/44032970cc4d7dbb59b25b031cfeef8b39889b1113383a5824041c93feaa/videoguys-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:15 2020"}