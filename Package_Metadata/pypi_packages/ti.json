{"info": {"author": "Shrikant Sharat & Trevor Bekolay", "author_email": "tbekolay@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=================================\nti -- A silly simple time tracker\n=================================\n\n``ti`` is a small command line time-tracking application.\nSimple basic usage looks like this::\n\n    $ ti on my-project\n    $ ti fin\n\nYou can also give it human-readable times::\n\n    $ ti on my-project 30mins ago\n\n``ti`` sports many other cool features. Read along to discover.\n\nWat?\n====\n\n``ti`` is a simple command line time tracker. It has been completely rewritten\nin Python (originally a bash script) and has (almost) complete test coverage. It\nis inspired by `timed <http://adeel.github.com/timed>`_, which is a nice project\nthat you should check out if you don't like ``ti``. ``ti`` also takes\ninspiration from the simplicity of `t <http://stevelosh.com/projects/t/>`_.\n\nIf a time-tracking tool makes me think for more than 3-5 seconds, I lose my line\nof thought and forget what I was doing. This is why I created ``ti``. With\n``ti``, you'll be as fast as you can type, which you should be good with anyway.\n\nThe most important part about ``ti`` is that it provides just a few commands to\nmanage your time-tracking and then gets out of your way.\n\nAll data is saved in a JSON file ,``~/.ti-sheet``. (This can be changed using the\n``$SHEET_FILE``  environment variable.) The JSON is easy to access and can be\nprocessed into other more stylized documents. Some ideas:\n\n- Read your JSON file to generate beautiful HTML reports.\n- Build monthly statistics based on tags or tasks.\n- Read your currently working project and display it in your terminal prompt.\n  Maybe even with the number of hours you've been working.\n\nIt's *your* data.\n\nOh and by the way, the source is a fairly small Python script, so if you know\nPython, you may want to skim over it to get a better feel of how it works.\n\n*Note*: If you have used the previous bash version of ``ti``, which was horribly\ntied up to only work on Linux, you might notice the lack of plugins in this\nPython version. I am not really missing them, so I might not add them. If anyone\nhas any interesting use cases for it, I'm willing to consider.\n\nUsage\n=====\n\nHere's the minimal usage style::\n\n    $ ti on my-project\n    Start working on my-project.\n\n    $ ti status\n    You have been working on my-project for less than a minute.\n\n    $ ti fin\n    So you stopped working on my-project.\n\n``on`` and ``fin`` can take a time (format described further down) at which to\napply the action::\n\n    $ ti on another-project 2 hours ago\n    Start working on another-project.\n\n    $ ti s\n    You have been working on another-project for about 2 hours.\n\n    $ ti fin 30 minutes ago\n    So you stopped working on another-project.\n\nAlso illustrating in the previous example is short aliases of all commands,\ntheir first letter. Like, ``s`` for ``status``, ``o`` for ``on``,\n``f`` for ``fin``, etc.\n\nPut brief notes on what you've been doing::\n\n    $ ti note waiting for Napoleon to take over the world\n    $ ti n another simple note for demo purposes\n\nTag your activities for fun and profit::\n\n    $ ti tag imp\n\nGet a log of all activities with the ``log`` (or ``l``) command::\n\n    $ ti log\n\nCommand reference\n=================\n\nRun ``ti -h`` (or ``--help`` or ``help`` or just ``h``)\nto get a short command summary of commands.\n\n``on``\n------\n\n- Short: ``o``\n- Syntax: ``ti (o|on) <name> [<time>...]``\n\nStart tracking time for the project/activity given by `<name>`. For example::\n\n    ti on conquest\n\ntells ``ti`` to start tracking for the activity ``conquest`` *now*.\nYou can optionally specify a relative time in the past like so::\n\n    ti on conquest 10mins ago\n\nThe format of the time is detailed further below.\n\n``fin``\n-------\n\n- Short: ``f``\n- Syntax: ``ti (f|fin) [<time>...]``\n\nEnd tracking for the current activity *now*. Just like with ``on`` command\nabove, you can give an optional time to the past. Example::\n\n    ti fin 10mins ago\n\ntells ``ti`` that you finished working on the current activity at, well, 10\nminutes ago.\n\n``status``\n----------\n\n- Short: ``s``\n- Syntax: ``ti (s|status)``\n\nGives short human-readable message on the current status, i.e., whether anything\nis being tracked currently or not. Example::\n\n    $ ti on conqering-the-world\n    Start working on conqering-the-world.\n    $ ti status\n    You have been working on `conqering-the-world` for less than a minute.\n\n``tag``\n-------\n\n- Short: ``t``\n- Syntax: ``ti (t|tag) <tag>...``\n\nThis command adds the given tags to the current activity. Tags are not currently\nused within the ``ti`` time tracker, but they will be saved in the JSON data\nfile. You may use them for whatever purposes you like.\n\nFor example, if you have a script to generate a HTML report from your ``ti``\ndata, you could tag some activities with a tag like ``red`` or ``important`` so\nthat activity will appear in red in the final HTML report.\n\nUse it like::\n\n    ti tag red for-joe\n\nadds the tags ``red`` and ``for-joe`` to the current activitiy. You can specify\nany number of tags.\n\nTags are currently for your purpose. Use them as you see fit.\n\n``note``\n--------\n\n- Short: ``n``\n- Syntax: ``ti (n|note) <note-text>...``\n\nThis command adds a note on the current activity. Again, like tags, this has no\nsignificance with the time tracking aspect of ``ti``. This is for your own\nrecording purposes and for the scripts your write to process your ``ti`` data.\n\nUse it like::\n\n    ti note Discuss this with the other team.\n\nadds the note ``Discuss this with the other team.`` to the current activity.\n\n``log``\n-------\n\n- Short: ``l1``\n- Syntax: ``ti (l|log) [today]``\n\nGives a table like representation of all activities and total time spent on each\nof them.\n\nTime format\n===========\n\nCurrently only the following are recognized. If there is something that is not\nhandled, but should be, please open an issue about it or a pull request\n(function in question is ``parse_time``)\n\n- *n* seconds ago can be written as:\n    - *n* seconds ago\n    - *n* second ago\n    - *n* secs ago\n    - *n* sec ago\n    - *n* s ago\n    - ``a`` in place of *n* in all above cases, to mean 1 second.\n    - E.g., ``10s ago``, ``a sec ago`` ``25 seconds ago``, ``25seconds ago``.\n\n- *n* minutes ago can be written as:\n    - *n* minutes ago\n    - *n* minute ago\n    - *n* mins ago\n    - *n* min ago\n    - ``a`` in place of *n* in all above cases, to mean 1 minute.\n    - E.g., ``5mins ago``, ``a minute ago``, ``10 minutes ago``.\n\n- *n* hours ago can be written as:\n    - *n* hours ago\n    - *n* hour ago\n    - *n* hrs ago\n    - *n* hr ago\n    - ``a`` or ``an`` in place of *n* in all above cases, to mean 1 hour.\n    - E.g., ``an hour ago``, ``an hr ago``, ``2hrs ago``.\n\nWhere *n* is an arbitrary number and any number of spaces between *n* and the\ntime unit are allowed (including zero spaces).\n\nStatus\n======\n\nThe project is in beta. If you find any bug or have any feedback, please do open\n`a GitHub issue <https://github.com/tbekolay/ti/issues>`_.\n\n\nGimme!\n======\n\nYou can download ``ti`` `from the source on\nGitHub <https://raw.github.com/tbekolay/ti/master/bin/ti>`_.\n\n- Put it somewhere in your ``$PATH`` and make sure it has executable permissions.\n- Install ``pyyaml`` using the command ``pip install --user pyyaml``.\n- Install ``colorama`` using the command ``pip install --user colorama``.\n\nAfter that, ``ti`` should be working fine.\n\nAlso, visit the `project page on GitHub <https://github.com/tbekolay/ti>`_ for\nany further details.\n\nWho?\n====\n\nOriginally created and fed by Shrikant Sharat\n(`@sharat87 <https://twitter.com/#!sharat87>`_).\nNow forked and maintained by Trevor Bekolay\n(`@tbekolay <https://github.com/tbekolay>`_) and friends on GitHub.\n\nLicense\n=======\n\n`MIT License <http://mitl.sharats.me>`_.\n\n===============\nRelease History\n===============\n\n.. Changelog entries should follow this format:\n\n   version (release date)\n   ======================\n\n   **section**\n\n   - One-line description of change (link to Github issue/PR)\n\n.. Changes should be organized in one of several sections:\n\n   - Added\n   - Changed\n   - Removed\n   - Fixed\n\n0.1.2 (November 19, 2017)\n=========================\n\nThis release fixes several Python 3.6 compatibility bugs.\n\n0.1.1 (January 7, 2017)\n=======================\n\nThis release fixes a few bugs with command line handling.\nIf you run into any issues with this release, please\n`file an issue <https://github.com/tbekolay/ti/issues>`_!\n\n0.1.0 (June 27, 2016)\n=====================\n\nFirst release of ``ti`` on PyPI!\nThanks to all of the original authors,\nparticularly Shrikant Sharat,\nwho has turned over development of ``ti``\nto me, Trevor Bekolay.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ti.sharats.me/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ti", "package_url": "https://pypi.org/project/ti/", "platform": "", "project_url": "https://pypi.org/project/ti/", "project_urls": {"Homepage": "http://ti.sharats.me/"}, "release_url": "https://pypi.org/project/ti/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "A silly simple time tracker", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ti-a-silly-simple-time-tracker\">\n<h2>ti \u2013 A silly simple time tracker</h2>\n<p><tt>ti</tt> is a small command line time-tracking application.\nSimple basic usage looks like this:</p>\n<pre>$ ti on my-project\n$ ti fin\n</pre>\n<p>You can also give it human-readable times:</p>\n<pre>$ ti on my-project 30mins ago\n</pre>\n<p><tt>ti</tt> sports many other cool features. Read along to discover.</p>\n<div id=\"wat\">\n<h3>Wat?</h3>\n<p><tt>ti</tt> is a simple command line time tracker. It has been completely rewritten\nin Python (originally a bash script) and has (almost) complete test coverage. It\nis inspired by <a href=\"http://adeel.github.com/timed\" rel=\"nofollow\">timed</a>, which is a nice project\nthat you should check out if you don\u2019t like <tt>ti</tt>. <tt>ti</tt> also takes\ninspiration from the simplicity of <a href=\"http://stevelosh.com/projects/t/\" rel=\"nofollow\">t</a>.</p>\n<p>If a time-tracking tool makes me think for more than 3-5 seconds, I lose my line\nof thought and forget what I was doing. This is why I created <tt>ti</tt>. With\n<tt>ti</tt>, you\u2019ll be as fast as you can type, which you should be good with anyway.</p>\n<p>The most important part about <tt>ti</tt> is that it provides just a few commands to\nmanage your time-tracking and then gets out of your way.</p>\n<p>All data is saved in a JSON file ,``~/.ti-sheet``. (This can be changed using the\n<tt>$SHEET_FILE</tt>  environment variable.) The JSON is easy to access and can be\nprocessed into other more stylized documents. Some ideas:</p>\n<ul>\n<li>Read your JSON file to generate beautiful HTML reports.</li>\n<li>Build monthly statistics based on tags or tasks.</li>\n<li>Read your currently working project and display it in your terminal prompt.\nMaybe even with the number of hours you\u2019ve been working.</li>\n</ul>\n<p>It\u2019s <em>your</em> data.</p>\n<p>Oh and by the way, the source is a fairly small Python script, so if you know\nPython, you may want to skim over it to get a better feel of how it works.</p>\n<p><em>Note</em>: If you have used the previous bash version of <tt>ti</tt>, which was horribly\ntied up to only work on Linux, you might notice the lack of plugins in this\nPython version. I am not really missing them, so I might not add them. If anyone\nhas any interesting use cases for it, I\u2019m willing to consider.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Here\u2019s the minimal usage style:</p>\n<pre>$ ti on my-project\nStart working on my-project.\n\n$ ti status\nYou have been working on my-project for less than a minute.\n\n$ ti fin\nSo you stopped working on my-project.\n</pre>\n<p><tt>on</tt> and <tt>fin</tt> can take a time (format described further down) at which to\napply the action:</p>\n<pre>$ ti on another-project 2 hours ago\nStart working on another-project.\n\n$ ti s\nYou have been working on another-project for about 2 hours.\n\n$ ti fin 30 minutes ago\nSo you stopped working on another-project.\n</pre>\n<p>Also illustrating in the previous example is short aliases of all commands,\ntheir first letter. Like, <tt>s</tt> for <tt>status</tt>, <tt>o</tt> for <tt>on</tt>,\n<tt>f</tt> for <tt>fin</tt>, etc.</p>\n<p>Put brief notes on what you\u2019ve been doing:</p>\n<pre>$ ti note waiting for Napoleon to take over the world\n$ ti n another simple note for demo purposes\n</pre>\n<p>Tag your activities for fun and profit:</p>\n<pre>$ ti tag imp\n</pre>\n<p>Get a log of all activities with the <tt>log</tt> (or <tt>l</tt>) command:</p>\n<pre>$ ti log\n</pre>\n</div>\n<div id=\"command-reference\">\n<h3>Command reference</h3>\n<p>Run <tt>ti <span class=\"pre\">-h</span></tt> (or <tt><span class=\"pre\">--help</span></tt> or <tt>help</tt> or just <tt>h</tt>)\nto get a short command summary of commands.</p>\n<div id=\"on\">\n<h4><tt>on</tt></h4>\n<ul>\n<li>Short: <tt>o</tt></li>\n<li>Syntax: <tt>ti (o|on) &lt;name&gt; <span class=\"pre\">[&lt;time&gt;...]</span></tt></li>\n</ul>\n<p>Start tracking time for the project/activity given by <cite>&lt;name&gt;</cite>. For example:</p>\n<pre>ti on conquest\n</pre>\n<p>tells <tt>ti</tt> to start tracking for the activity <tt>conquest</tt> <em>now</em>.\nYou can optionally specify a relative time in the past like so:</p>\n<pre>ti on conquest 10mins ago\n</pre>\n<p>The format of the time is detailed further below.</p>\n</div>\n<div id=\"fin\">\n<h4><tt>fin</tt></h4>\n<ul>\n<li>Short: <tt>f</tt></li>\n<li>Syntax: <tt>ti (f|fin) <span class=\"pre\">[&lt;time&gt;...]</span></tt></li>\n</ul>\n<p>End tracking for the current activity <em>now</em>. Just like with <tt>on</tt> command\nabove, you can give an optional time to the past. Example:</p>\n<pre>ti fin 10mins ago\n</pre>\n<p>tells <tt>ti</tt> that you finished working on the current activity at, well, 10\nminutes ago.</p>\n</div>\n<div id=\"status\">\n<h4><tt>status</tt></h4>\n<ul>\n<li>Short: <tt>s</tt></li>\n<li>Syntax: <tt>ti (s|status)</tt></li>\n</ul>\n<p>Gives short human-readable message on the current status, i.e., whether anything\nis being tracked currently or not. Example:</p>\n<pre>$ ti on conqering-the-world\nStart working on conqering-the-world.\n$ ti status\nYou have been working on `conqering-the-world` for less than a minute.\n</pre>\n</div>\n<div id=\"tag\">\n<h4><tt>tag</tt></h4>\n<ul>\n<li>Short: <tt>t</tt></li>\n<li>Syntax: <tt>ti (t|tag) <span class=\"pre\">&lt;tag&gt;...</span></tt></li>\n</ul>\n<p>This command adds the given tags to the current activity. Tags are not currently\nused within the <tt>ti</tt> time tracker, but they will be saved in the JSON data\nfile. You may use them for whatever purposes you like.</p>\n<p>For example, if you have a script to generate a HTML report from your <tt>ti</tt>\ndata, you could tag some activities with a tag like <tt>red</tt> or <tt>important</tt> so\nthat activity will appear in red in the final HTML report.</p>\n<p>Use it like:</p>\n<pre>ti tag red for-joe\n</pre>\n<p>adds the tags <tt>red</tt> and <tt><span class=\"pre\">for-joe</span></tt> to the current activitiy. You can specify\nany number of tags.</p>\n<p>Tags are currently for your purpose. Use them as you see fit.</p>\n</div>\n<div id=\"note\">\n<h4><tt>note</tt></h4>\n<ul>\n<li>Short: <tt>n</tt></li>\n<li>Syntax: <tt>ti (n|note) <span class=\"pre\">&lt;note-text&gt;...</span></tt></li>\n</ul>\n<p>This command adds a note on the current activity. Again, like tags, this has no\nsignificance with the time tracking aspect of <tt>ti</tt>. This is for your own\nrecording purposes and for the scripts your write to process your <tt>ti</tt> data.</p>\n<p>Use it like:</p>\n<pre>ti note Discuss this with the other team.\n</pre>\n<p>adds the note <tt>Discuss this with the other team.</tt> to the current activity.</p>\n</div>\n<div id=\"log\">\n<h4><tt>log</tt></h4>\n<ul>\n<li>Short: <tt>l1</tt></li>\n<li>Syntax: <tt>ti (l|log) [today]</tt></li>\n</ul>\n<p>Gives a table like representation of all activities and total time spent on each\nof them.</p>\n</div>\n</div>\n<div id=\"time-format\">\n<h3>Time format</h3>\n<p>Currently only the following are recognized. If there is something that is not\nhandled, but should be, please open an issue about it or a pull request\n(function in question is <tt>parse_time</tt>)</p>\n<ul>\n<li><dl>\n<dt><em>n</em> seconds ago can be written as:</dt>\n<dd><ul>\n<li><em>n</em> seconds ago</li>\n<li><em>n</em> second ago</li>\n<li><em>n</em> secs ago</li>\n<li><em>n</em> sec ago</li>\n<li><em>n</em> s ago</li>\n<li><tt>a</tt> in place of <em>n</em> in all above cases, to mean 1 second.</li>\n<li>E.g., <tt>10s ago</tt>, <tt>a sec ago</tt> <tt>25 seconds ago</tt>, <tt>25seconds ago</tt>.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><em>n</em> minutes ago can be written as:</dt>\n<dd><ul>\n<li><em>n</em> minutes ago</li>\n<li><em>n</em> minute ago</li>\n<li><em>n</em> mins ago</li>\n<li><em>n</em> min ago</li>\n<li><tt>a</tt> in place of <em>n</em> in all above cases, to mean 1 minute.</li>\n<li>E.g., <tt>5mins ago</tt>, <tt>a minute ago</tt>, <tt>10 minutes ago</tt>.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><em>n</em> hours ago can be written as:</dt>\n<dd><ul>\n<li><em>n</em> hours ago</li>\n<li><em>n</em> hour ago</li>\n<li><em>n</em> hrs ago</li>\n<li><em>n</em> hr ago</li>\n<li><tt>a</tt> or <tt>an</tt> in place of <em>n</em> in all above cases, to mean 1 hour.</li>\n<li>E.g., <tt>an hour ago</tt>, <tt>an hr ago</tt>, <tt>2hrs ago</tt>.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>Where <em>n</em> is an arbitrary number and any number of spaces between <em>n</em> and the\ntime unit are allowed (including zero spaces).</p>\n</div>\n<div id=\"id1\">\n<h3>Status</h3>\n<p>The project is in beta. If you find any bug or have any feedback, please do open\n<a href=\"https://github.com/tbekolay/ti/issues\" rel=\"nofollow\">a GitHub issue</a>.</p>\n</div>\n<div id=\"gimme\">\n<h3>Gimme!</h3>\n<p>You can download <tt>ti</tt> <a href=\"https://raw.github.com/tbekolay/ti/master/bin/ti\" rel=\"nofollow\">from the source on\nGitHub</a>.</p>\n<ul>\n<li>Put it somewhere in your <tt>$PATH</tt> and make sure it has executable permissions.</li>\n<li>Install <tt>pyyaml</tt> using the command <tt>pip install <span class=\"pre\">--user</span> pyyaml</tt>.</li>\n<li>Install <tt>colorama</tt> using the command <tt>pip install <span class=\"pre\">--user</span> colorama</tt>.</li>\n</ul>\n<p>After that, <tt>ti</tt> should be working fine.</p>\n<p>Also, visit the <a href=\"https://github.com/tbekolay/ti\" rel=\"nofollow\">project page on GitHub</a> for\nany further details.</p>\n</div>\n<div id=\"who\">\n<h3>Who?</h3>\n<p>Originally created and fed by Shrikant Sharat\n(<a href=\"https://twitter.com/#!sharat87\" rel=\"nofollow\">@sharat87</a>).\nNow forked and maintained by Trevor Bekolay\n(<a href=\"https://github.com/tbekolay\" rel=\"nofollow\">@tbekolay</a>) and friends on GitHub.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p><a href=\"http://mitl.sharats.me\" rel=\"nofollow\">MIT License</a>.</p>\n</div>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<div id=\"november-19-2017\">\n<h3>0.1.2 (November 19, 2017)</h3>\n<p>This release fixes several Python 3.6 compatibility bugs.</p>\n</div>\n<div id=\"january-7-2017\">\n<h3>0.1.1 (January 7, 2017)</h3>\n<p>This release fixes a few bugs with command line handling.\nIf you run into any issues with this release, please\n<a href=\"https://github.com/tbekolay/ti/issues\" rel=\"nofollow\">file an issue</a>!</p>\n</div>\n<div id=\"june-27-2016\">\n<h3>0.1.0 (June 27, 2016)</h3>\n<p>First release of <tt>ti</tt> on PyPI!\nThanks to all of the original authors,\nparticularly Shrikant Sharat,\nwho has turned over development of <tt>ti</tt>\nto me, Trevor Bekolay.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7164748, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "438616c4429f2d1b07c4edf15e7b699f", "sha256": "68df5d7e96dc33e2cf1f52a923bfc2e4e15d9101dd3581123f6370811902d988"}, "downloads": -1, "filename": "ti-0.1.0.tar.gz", "has_sig": false, "md5_digest": "438616c4429f2d1b07c4edf15e7b699f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11561, "upload_time": "2016-06-27T20:33:33", "upload_time_iso_8601": "2016-06-27T20:33:33.988302Z", "url": "https://files.pythonhosted.org/packages/6b/69/b04c712dd4bd09f938520f9343ea19d98e8312af336e11f1a5c704a5d6c8/ti-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "71a2a0cc822ae13663561bcf601173e3", "sha256": "f49b3fc2fcb8fa248379177432a5e14c8d4ce564f026b218988274b8bc14bf72"}, "downloads": -1, "filename": "ti-0.1.1.tar.gz", "has_sig": false, "md5_digest": "71a2a0cc822ae13663561bcf601173e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11822, "upload_time": "2017-01-07T17:26:56", "upload_time_iso_8601": "2017-01-07T17:26:56.057174Z", "url": "https://files.pythonhosted.org/packages/ac/49/55769d2107ea70cabc1ceea33dfbf75468033d243de937c6d46ed6d733c5/ti-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "03bceb0a6206af695275e92658281db3", "sha256": "137d49834896cf05d76a7278c9e3bafc28c3a7546238f5ead04633fb15b83e3c"}, "downloads": -1, "filename": "ti-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03bceb0a6206af695275e92658281db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12075, "upload_time": "2017-11-19T14:57:46", "upload_time_iso_8601": "2017-11-19T14:57:46.885988Z", "url": "https://files.pythonhosted.org/packages/fd/3e/c44363ee2854fa674efe2e4d6a15e657e1d784ff41f6ad2bccae8eed5239/ti-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03bceb0a6206af695275e92658281db3", "sha256": "137d49834896cf05d76a7278c9e3bafc28c3a7546238f5ead04633fb15b83e3c"}, "downloads": -1, "filename": "ti-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03bceb0a6206af695275e92658281db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12075, "upload_time": "2017-11-19T14:57:46", "upload_time_iso_8601": "2017-11-19T14:57:46.885988Z", "url": "https://files.pythonhosted.org/packages/fd/3e/c44363ee2854fa674efe2e4d6a15e657e1d784ff41f6ad2bccae8eed5239/ti-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:34 2020"}