{"info": {"author": "Diego Garcia", "author_email": "drgarcia1986@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# DRF-PDF\n[![Documentation Status](https://readthedocs.org/projects/drf-pdf/badge/?version=latest)](https://readthedocs.org/projects/drf-pdf/?badge=latest)\n[![Build Status](https://travis-ci.org/drgarcia1986/drf-pdf.svg?branch=master)](https://travis-ci.org/drgarcia1986/drf-pdf)\n[![Coverage Status](https://coveralls.io/repos/drgarcia1986/drf-pdf/badge.svg)](https://coveralls.io/r/drgarcia1986/drf-pdf)\n[![Code Health](https://landscape.io/github/drgarcia1986/drf-pdf/master/landscape.svg?style=plastic)](https://landscape.io/github/drgarcia1986/drf-pdf/master)\n\nA simple PDF utils for Django Rest Framework\n\n## Install\n\n```\npip install drf-pdf\n```\n\n## Example\n\n```python\n# coding: utf - 8\nfrom rest_framework import status\nfrom rest_framework.response import Response\nfrom rest_framework.views import APIView\n\nfrom drf_pdf.renderer import PDFRenderer\n\nfrom my_pdf_package import PDFGenerator\n\n\nclass PDFHandler(APIView):\n\n    renderer_classes = (PDFRenderer, )\n\n    def get(self, request):\n        pdf = PDFGenerator('foo')\n        headers = {\n            'Content-Disposition': 'filename=\"foo.pdf\"',\n            'Content-Length': len(pdf),\n        }\n\n        return Response(\n            pdf,\n            headers=headers,\n            status=status.HTTP_200_OK\n        )\n```\n\n### With two or more renderer_classes\n\n\n```python\n# coding: utf - 8\nfrom rest_framework import status\nfrom rest_framework.response import Response\nfrom rest_framework.renderers import JSONRenderer\nfrom rest_framework.views import APIView\n\nfrom drf_pdf.response import PDFResponse\nfrom drf_pdf.renderer import PDFRenderer\n\nfrom my_pdf_package import get_pdf\n\n\nclass PDFHandler(APIView):\n\n    renderer_classes = (PDFRenderer, JSONRenderer)\n\n    def get(self, request, pdf_id):\n        pdf = get_pdf(pdf_id)\n\t\tif not pdf:\n\t\t\treturn Response(\n\t\t\t\t{'error': 'Not found'},\n\t\t\t\tstatus=status.HTTP_404_NOT_FOUND\n\t\t\t)\n\n        return PDFResponse(\n            pdf=pdf,\n\t\t\tfile_name=pdf_id,\n            status=status.HTTP_200_OK\n        )\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/drgarcia1986/drf-pdf", "keywords": "django djangorestframework render response pdf", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "drf-pdf", "package_url": "https://pypi.org/project/drf-pdf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/drf-pdf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/drgarcia1986/drf-pdf"}, "release_url": "https://pypi.org/project/drf-pdf/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "A simple PDF renderer for Django Rest Framework", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # DRF-PDF<br>[![Documentation Status](https://readthedocs.org/projects/drf-pdf/badge/?version=latest)](https://readthedocs.org/projects/drf-pdf/?badge=latest)<br>[![Build Status](https://travis-ci.org/drgarcia1986/drf-pdf.svg?branch=master)](https://travis-ci.org/drgarcia1986/drf-pdf)<br>[![Coverage Status](https://coveralls.io/repos/drgarcia1986/drf-pdf/badge.svg)](https://coveralls.io/r/drgarcia1986/drf-pdf)<br>[![Code Health](https://landscape.io/github/drgarcia1986/drf-pdf/master/landscape.svg?style=plastic)](https://landscape.io/github/drgarcia1986/drf-pdf/master)<br><br>A simple PDF utils for Django Rest Framework<br><br>## Install<br><br>```<br>pip install drf-pdf<br>```<br><br>## Example<br><br>```python<br># coding: utf - 8<br>from rest_framework import status<br>from rest_framework.response import Response<br>from rest_framework.views import APIView<br><br>from drf_pdf.renderer import PDFRenderer<br><br>from my_pdf_package import PDFGenerator<br><br><br>class PDFHandler(APIView):<br><br>    renderer_classes = (PDFRenderer, )<br><br>    def get(self, request):<br>        pdf = PDFGenerator('foo')<br>        headers = {<br>            'Content-Disposition': 'filename=\"foo.pdf\"',<br>            'Content-Length': len(pdf),<br>        }<br><br>        return Response(<br>            pdf,<br>            headers=headers,<br>            status=status.HTTP_200_OK<br>        )<br>```<br><br>### With two or more renderer_classes<br><br><br>```python<br># coding: utf - 8<br>from rest_framework import status<br>from rest_framework.response import Response<br>from rest_framework.renderers import JSONRenderer<br>from rest_framework.views import APIView<br><br>from drf_pdf.response import PDFResponse<br>from drf_pdf.renderer import PDFRenderer<br><br>from my_pdf_package import get_pdf<br><br><br>class PDFHandler(APIView):<br><br>    renderer_classes = (PDFRenderer, JSONRenderer)<br><br>    def get(self, request, pdf_id):<br>        pdf = get_pdf(pdf_id)<br>\t\tif not pdf:<br>\t\t\treturn Response(<br>\t\t\t\t{'error': 'Not found'},<br>\t\t\t\tstatus=status.HTTP_404_NOT_FOUND<br>\t\t\t)<br><br>        return PDFResponse(<br>            pdf=pdf,<br>\t\t\tfile_name=pdf_id,<br>            status=status.HTTP_200_OK<br>        )<br>```\n          </div>"}, "last_serial": 1534912, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4f934062098b9749ca8be757f6e06cb3", "sha256": "33dc865a0b6cdf5093546f8611b49c3fee72f1f3f80089b9f3fa0969fa177395"}, "downloads": -1, "filename": "drf-pdf-0.1.0.zip", "has_sig": false, "md5_digest": "4f934062098b9749ca8be757f6e06cb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7266, "upload_time": "2015-03-06T11:19:40", "upload_time_iso_8601": "2015-03-06T11:19:40.889593Z", "url": "https://files.pythonhosted.org/packages/d0/86/36322f30a97ac8ccfbe9a27adf9b1d09784328365c7e601a3454793cf10e/drf-pdf-0.1.0.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d0b83be45c58750f659be2fab9fe5c32", "sha256": "4e870bff87d19f43fa0bb85f8112ab0588db0c7bb00656f1ec52120d19ac4b2a"}, "downloads": -1, "filename": "drf-pdf-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d0b83be45c58750f659be2fab9fe5c32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4518, "upload_time": "2015-05-06T02:18:22", "upload_time_iso_8601": "2015-05-06T02:18:22.839968Z", "url": "https://files.pythonhosted.org/packages/00/75/65c7f9120e197e142ae0f65aa6d5fecb649a349a1ea36e2ba20db6cb90bc/drf-pdf-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d0b83be45c58750f659be2fab9fe5c32", "sha256": "4e870bff87d19f43fa0bb85f8112ab0588db0c7bb00656f1ec52120d19ac4b2a"}, "downloads": -1, "filename": "drf-pdf-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d0b83be45c58750f659be2fab9fe5c32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4518, "upload_time": "2015-05-06T02:18:22", "upload_time_iso_8601": "2015-05-06T02:18:22.839968Z", "url": "https://files.pythonhosted.org/packages/00/75/65c7f9120e197e142ae0f65aa6d5fecb649a349a1ea36e2ba20db6cb90bc/drf-pdf-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:42 2020"}