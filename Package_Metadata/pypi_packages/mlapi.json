{"info": {"author": "Jo\u00e3o Paulo de Melo", "author_email": "jpmdik@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# MercadoLibre's Python SDK\n\nThis is the official Python SDK for MercadoLibre's Platform.\n\n## How do I install it?\n\n       clone repository\n       https://github.com/mercadolibre/python-sdk.git\n\n## How do I use it?\n\nThe first thing to do is to instance a ```Meli``` class. You'll need to give a ```clientId``` and a ```clientSecret```. You can obtain both after creating your own application. For more information on this please read: [creating an application](http://developers.mercadolibre.com/application-manager/)\n\n### Including the Lib\nInclude the lib meli in your project\n\n### Attention\nDon't forget to set the authentication URL of your country in file lib/config.ini\n\n```python\nimport sys\nsys.path.append('../lib')\nfrom meli import Meli\n```\nStart the development!\n\n### Create an instance of Meli class\nSimple like this\n```python\nmeli = Meli(client_id=1234, client_secret=\"a secret\")\n```\nWith this instance you can start working on MercadoLibre's APIs.\n\nThere are some design considerations worth to mention.\n\n1. This SDK is just a thin layer on top of an http client to handle all the OAuth WebServer flow for you.\n\n2. There is JSON parsing. this SDK will include [json](http://docs.python.org/2/library/json.html) for internal usage.\n\n3. If you already have the access_token and the refresh_token you can pass in the constructor\n\n```python\nmeli = Meli(client_id=1234, client_secret=\"a secret\", access_token=\"Access_Token\", refresh_token=\"Refresh_Token\")\n```\n\n## How do I redirect users to authorize my application?\n\nThis is a 2 step process.\n\nFirst get the link to redirect the user. This is very easy! Just:\n\n```python\nredirectUrl = meli.auth_url(redirect_URI=\"http://somecallbackurl\")\n```\n\nThis will give you the url to redirect the user. You need to specify a callback url which will be the one that the user will redirected after a successfull authrization process.\n\nOnce the user is redirected to your callback url, you'll receive in the query string, a parameter named ```code```. You'll need this for the second part of the process.\n\n```python\nmeli.authorize(code=\"the received code\", redirect_URI=\"http://somecallbackurl\")\n```\n\nThis will get an ```access_token``` and a ```refresh_token``` (is case your application has the ```offline_access```) for your application and your user.\n\nAt this stage your are ready to make call to the API on behalf of the user.\n\n#### Making GET calls\n\n```python\nparams = {'access_token' : meli.access_token}\nresponse = meli.get(path=\"/users/me\", params=params)\n```\n\n#### Making POST calls\n\n```python\nparams = {'access_token' : meli.access_token}\n\n  #this body will be converted into json for you\nbody = {'foo'  : 'bar', 'bar' : 'foo'}\n\nresponse = meli.post(path=\"/items\", body=body, params=params)\n```\n\n#### Making PUT calls\n\n```python\nparams = {'access_token' : meli.access_token}\n\n  #this body will be converted into json for you\nbody = {'foo'  : 'bar', 'bar' : 'foo'}\n\nresponse = meli.put(path=\"/items/123\", body=body, params=params)\n```\n\n#### Making DELETE calls\n```python\nparams = {'access_token' : meli.access_token}\nresponse = meli.delete(path=\"/questions/123\", params=params)\n```\n\n## Examples\n\nDon't forget to check out our examples codes in the folder [examples](https://github.com/mercadolibre/python-sdk/tree/master/examples)\n\n## Community\n\nYou can contact us if you have questions using the standard communication channels described in the [developer's site](http://developers.mercadolibre.com/community/)\n\n## I want to contribute!\n\nThat is great! Just fork the project in github. Create a topic branch, write some code, and add some tests for your new code.\n\nThanks for helping!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mercadolibre/python-sdk", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mlapi", "package_url": "https://pypi.org/project/mlapi/", "platform": "", "project_url": "https://pypi.org/project/mlapi/", "project_urls": {"Homepage": "https://github.com/mercadolibre/python-sdk"}, "release_url": "https://pypi.org/project/mlapi/1.3.8/", "requires_dist": ["configparser"], "requires_python": "", "summary": "Mercado Livre API", "version": "1.3.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MercadoLibre's Python SDK</h1>\n<p>This is the official Python SDK for MercadoLibre's Platform.</p>\n<h2>How do I install it?</h2>\n<pre><code>   clone repository\n   https://github.com/mercadolibre/python-sdk.git\n</code></pre>\n<h2>How do I use it?</h2>\n<p>The first thing to do is to instance a <code>Meli</code> class. You'll need to give a <code>clientId</code> and a <code>clientSecret</code>. You can obtain both after creating your own application. For more information on this please read: <a href=\"http://developers.mercadolibre.com/application-manager/\" rel=\"nofollow\">creating an application</a></p>\n<h3>Including the Lib</h3>\n<p>Include the lib meli in your project</p>\n<h3>Attention</h3>\n<p>Don't forget to set the authentication URL of your country in file lib/config.ini</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'../lib'</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">meli</span> <span class=\"kn\">import</span> <span class=\"n\">Meli</span>\n</pre>\n<p>Start the development!</p>\n<h3>Create an instance of Meli class</h3>\n<p>Simple like this</p>\n<pre><span class=\"n\">meli</span> <span class=\"o\">=</span> <span class=\"n\">Meli</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">,</span> <span class=\"n\">client_secret</span><span class=\"o\">=</span><span class=\"s2\">\"a secret\"</span><span class=\"p\">)</span>\n</pre>\n<p>With this instance you can start working on MercadoLibre's APIs.</p>\n<p>There are some design considerations worth to mention.</p>\n<ol>\n<li>\n<p>This SDK is just a thin layer on top of an http client to handle all the OAuth WebServer flow for you.</p>\n</li>\n<li>\n<p>There is JSON parsing. this SDK will include <a href=\"http://docs.python.org/2/library/json.html\" rel=\"nofollow\">json</a> for internal usage.</p>\n</li>\n<li>\n<p>If you already have the access_token and the refresh_token you can pass in the constructor</p>\n</li>\n</ol>\n<pre><span class=\"n\">meli</span> <span class=\"o\">=</span> <span class=\"n\">Meli</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">,</span> <span class=\"n\">client_secret</span><span class=\"o\">=</span><span class=\"s2\">\"a secret\"</span><span class=\"p\">,</span> <span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"Access_Token\"</span><span class=\"p\">,</span> <span class=\"n\">refresh_token</span><span class=\"o\">=</span><span class=\"s2\">\"Refresh_Token\"</span><span class=\"p\">)</span>\n</pre>\n<h2>How do I redirect users to authorize my application?</h2>\n<p>This is a 2 step process.</p>\n<p>First get the link to redirect the user. This is very easy! Just:</p>\n<pre><span class=\"n\">redirectUrl</span> <span class=\"o\">=</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">auth_url</span><span class=\"p\">(</span><span class=\"n\">redirect_URI</span><span class=\"o\">=</span><span class=\"s2\">\"http://somecallbackurl\"</span><span class=\"p\">)</span>\n</pre>\n<p>This will give you the url to redirect the user. You need to specify a callback url which will be the one that the user will redirected after a successfull authrization process.</p>\n<p>Once the user is redirected to your callback url, you'll receive in the query string, a parameter named <code>code</code>. You'll need this for the second part of the process.</p>\n<pre><span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">\"the received code\"</span><span class=\"p\">,</span> <span class=\"n\">redirect_URI</span><span class=\"o\">=</span><span class=\"s2\">\"http://somecallbackurl\"</span><span class=\"p\">)</span>\n</pre>\n<p>This will get an <code>access_token</code> and a <code>refresh_token</code> (is case your application has the <code>offline_access</code>) for your application and your user.</p>\n<p>At this stage your are ready to make call to the API on behalf of the user.</p>\n<h4>Making GET calls</h4>\n<pre><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'access_token'</span> <span class=\"p\">:</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">access_token</span><span class=\"p\">}</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/users/me\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<h4>Making POST calls</h4>\n<pre><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'access_token'</span> <span class=\"p\">:</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">access_token</span><span class=\"p\">}</span>\n\n  <span class=\"c1\">#this body will be converted into json for you</span>\n<span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span>  <span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span> <span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">}</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/items\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<h4>Making PUT calls</h4>\n<pre><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'access_token'</span> <span class=\"p\">:</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">access_token</span><span class=\"p\">}</span>\n\n  <span class=\"c1\">#this body will be converted into json for you</span>\n<span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span>  <span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span> <span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">}</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/items/123\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<h4>Making DELETE calls</h4>\n<pre><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'access_token'</span> <span class=\"p\">:</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">access_token</span><span class=\"p\">}</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">meli</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/questions/123\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<h2>Examples</h2>\n<p>Don't forget to check out our examples codes in the folder <a href=\"https://github.com/mercadolibre/python-sdk/tree/master/examples\" rel=\"nofollow\">examples</a></p>\n<h2>Community</h2>\n<p>You can contact us if you have questions using the standard communication channels described in the <a href=\"http://developers.mercadolibre.com/community/\" rel=\"nofollow\">developer's site</a></p>\n<h2>I want to contribute!</h2>\n<p>That is great! Just fork the project in github. Create a topic branch, write some code, and add some tests for your new code.</p>\n<p>Thanks for helping!</p>\n\n          </div>"}, "last_serial": 5003174, "releases": {"1.3.8": [{"comment_text": "", "digests": {"md5": "bc8382019d872a0366f84c8d7e667bd0", "sha256": "44d4abfe919c9c8188a99bbc03cdc27a5d149b7fb30d97a21713d9a3ca6b14d4"}, "downloads": -1, "filename": "mlapi-1.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "bc8382019d872a0366f84c8d7e667bd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7401, "upload_time": "2019-03-29T13:03:32", "upload_time_iso_8601": "2019-03-29T13:03:32.530320Z", "url": "https://files.pythonhosted.org/packages/f8/03/139bca46523e3290a5b4488a5883c99946f04fba05816af70ebb9945bc35/mlapi-1.3.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc8382019d872a0366f84c8d7e667bd0", "sha256": "44d4abfe919c9c8188a99bbc03cdc27a5d149b7fb30d97a21713d9a3ca6b14d4"}, "downloads": -1, "filename": "mlapi-1.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "bc8382019d872a0366f84c8d7e667bd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7401, "upload_time": "2019-03-29T13:03:32", "upload_time_iso_8601": "2019-03-29T13:03:32.530320Z", "url": "https://files.pythonhosted.org/packages/f8/03/139bca46523e3290a5b4488a5883c99946f04fba05816af70ebb9945bc35/mlapi-1.3.8-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:39 2020"}