{"info": {"author": "DataArt (http://dataart.com)", "author_email": "info@devicehive.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Home Automation", "Topic :: Internet", "Topic :: Software Development :: Embedded Systems"], "description": "|License|\n\nDevicehive python web configurator\n==================================\n\nThis is proxy package for\n`devicehive-python <https://github.com/devicehive/devicehive-python>`__\nthat provides simple web interface to configure connection.\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install devicehive-webconfig\n\nUsage\n-----\n\nBasics\n~~~~~~\n\n| Web interface based on python HttpServer and implements Devicehive\n  connection in separated thread.\n| It takes *Handler* class as argument like original *Devicehive* class.\n| Only difference that extended *Handler* class from this repository\n  must used.\n| Server could be runned in non-blocking mode, so main thread is free to\n  use.\n| Example:\n\n.. code:: python\n\n    import time\n    import json\n\n    from devicehive_webconfig import Server, Handler\n\n\n    class ExampleHandler(Handler):\n        _device = None\n\n        def handle_connect(self):\n            self._device = self.api.put_device(self._device_id)\n            super(ExampleHandler, self).handle_connect()\n\n        def send(self, data):\n            self._device.send_notification(data)\n\n\n    if __name__ == '__main__':\n        server = Server(ExampleHandler, is_blocking=False)\n        server.start()\n\n        print('Go to http://127.0.0.1:8000/ and configure your connection.')\n        while not server.dh_status.connected:\n            # Wait till DH connection is ready\n            time.sleep(.001)\n\n        for i in range(10):\n            server.deviceHive.handler.send('notification #{}'.format(i))\n\nAdditional *Handler* arguments can be passed as *args* and *kwargs*\n\nAdvanced\n~~~~~~~~\n\nThis library was designed to be easily extended. Additional routes,\ncontrollers, templates and static files can be added. There is an\n`example <examples/extended_web>`__ that shows how this can be done.\n\n.. |License| image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg\n   :target: LICENSE", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://devicehive.com", "keywords": "iot cloud m2m gateway embedded devicehive configurator web ui", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "devicehive-webconfig", "package_url": "https://pypi.org/project/devicehive-webconfig/", "platform": "", "project_url": "https://pypi.org/project/devicehive-webconfig/", "project_urls": {"Homepage": "https://devicehive.com"}, "release_url": "https://pypi.org/project/devicehive-webconfig/1.0.2/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "DeviceHive Python web configurator", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<div id=\"devicehive-python-web-configurator\">\n<h2>Devicehive python web configurator</h2>\n<p>This is proxy package for\n<a href=\"https://github.com/devicehive/devicehive-python\" rel=\"nofollow\">devicehive-python</a>\nthat provides simple web interface to configure connection.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install devicehive-webconfig\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"basics\">\n<h4>Basics</h4>\n<div>\n<div>Web interface based on python HttpServer and implements Devicehive\nconnection in separated thread.</div>\n<div>It takes <em>Handler</em> class as argument like original <em>Devicehive</em> class.</div>\n<div>Only difference that extended <em>Handler</em> class from this repository\nmust used.</div>\n<div>Server could be runned in non-blocking mode, so main thread is free to\nuse.</div>\n<div>Example:</div>\n</div>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">devicehive_webconfig</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span><span class=\"p\">,</span> <span class=\"n\">Handler</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleHandler</span><span class=\"p\">(</span><span class=\"n\">Handler</span><span class=\"p\">):</span>\n    <span class=\"n\">_device</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_device</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">put_device</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_device_id</span><span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ExampleHandler</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">handle_connect</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_device</span><span class=\"o\">.</span><span class=\"n\">send_notification</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"n\">ExampleHandler</span><span class=\"p\">,</span> <span class=\"n\">is_blocking</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Go to http://127.0.0.1:8000/ and configure your connection.'</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">dh_status</span><span class=\"o\">.</span><span class=\"n\">connected</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Wait till DH connection is ready</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">001</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">deviceHive</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'notification #</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n</pre>\n<p>Additional <em>Handler</em> arguments can be passed as <em>args</em> and <em>kwargs</em></p>\n</div>\n<div id=\"advanced\">\n<h4>Advanced</h4>\n<p>This library was designed to be easily extended. Additional routes,\ncontrollers, templates and static files can be added. There is an\n<a href=\"examples/extended_web\" rel=\"nofollow\">example</a> that shows how this can be done.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3752610, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "e840ba501fe183b54522fc92cba91d22", "sha256": "6e2445c237f839afda98696e981d353e15ca963ab7c4936ab2de21559ed3fbcd"}, "downloads": -1, "filename": "devicehive_webconfig-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e840ba501fe183b54522fc92cba91d22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 66771, "upload_time": "2018-04-10T12:51:40", "upload_time_iso_8601": "2018-04-10T12:51:40.927928Z", "url": "https://files.pythonhosted.org/packages/40/bc/cfd821e75d03d3d4e15aebebf049fe7e13c332c8874785c1013645430191/devicehive_webconfig-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bbb0497328c887554d374c377c2b6e24", "sha256": "3e1c7e852f37de94325f6423cffb98614374356650af8fe5fdddeace999057b8"}, "downloads": -1, "filename": "devicehive_webconfig-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bbb0497328c887554d374c377c2b6e24", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 66755, "upload_time": "2018-04-10T15:38:59", "upload_time_iso_8601": "2018-04-10T15:38:59.101654Z", "url": "https://files.pythonhosted.org/packages/1c/d7/26108c01f8ce4b814a4da83af3508968cb5d8f75ce0e8a8b0abe916de907/devicehive_webconfig-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bbb0497328c887554d374c377c2b6e24", "sha256": "3e1c7e852f37de94325f6423cffb98614374356650af8fe5fdddeace999057b8"}, "downloads": -1, "filename": "devicehive_webconfig-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bbb0497328c887554d374c377c2b6e24", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 66755, "upload_time": "2018-04-10T15:38:59", "upload_time_iso_8601": "2018-04-10T15:38:59.101654Z", "url": "https://files.pythonhosted.org/packages/1c/d7/26108c01f8ce4b814a4da83af3508968cb5d8f75ce0e8a8b0abe916de907/devicehive_webconfig-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:53 2020"}