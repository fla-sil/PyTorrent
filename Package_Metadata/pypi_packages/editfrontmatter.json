{"info": {"author": "Karl N. Redman", "author_email": "karl.redman@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Batch Edit Yaml Front Matter\n\nEdit front matter markdown files with Jinja2 templates.\n\n## Description:\n\nThis is a `python3` (v3.5.3+) class/module that can be used for batch processing and<br>\nediting front matter in markdown files. Front matter is managed via<br>\n[Jinja2](http://jinja.pocoo.org/) template processor.\n\n## Features:\n\n* Add / Update / Delete any front matter fields\n* Preserves front matter element order via [oyaml](https://github.com/wimglenn/oyaml)\n* Uses [Jinja2](http://jinja.pocoo.org/) Templates for configuration and processing:\n  * Use Jinja2 filters for complex processing\n  * Incrementally process files with multiple templates\n* Uses Exceptions around sensitive areas of code\n* Examples for implementation:\n  1. [Basic usage](https://karlredman.github.io/EditFrontMatter/examples/example1/readme.html)\n  2. [Advanced mulit-pass processor](https://karlredman.github.io/EditFrontMatter/examples/example2/readme.html)\n  3. [Recursive directory walker that uses multi-threading to edit files](https://karlredman.github.io/EditFrontMatter/examples/example3/readme.html)\n* Documented with [Sphinx](https://www.sphinx-doc.org/en/master/) and [hosted on Github](https://karlredman.github.io/EditFrontMatter)\n\n## Documentation:\n\n* [Project Documentation with examples Page](https://karlredman.github.io/EditFrontMatter/)\n\n# Installation:\n\n```sh\npip install editfrontmatter\n```\n\n## TL;DR Example Usage:\n\n* Original markdown file with yaml front matter ([example1.md](https://github.com/karlredman/EditFrontMatter/blob/master/examples/data/example1.md))\n\n```md\n---\ntitle: \"EditFrontMatter Class Example 1\"\ndescription: \"Edit 2 fields in this front matter\"\ncatagories: [programming, python, markdown]\n\ndeleteme: this will be deleted\n\ntags: [front matter, administration, testing]\n\n# comments and spaces will be eliminated (see docs)\n\nauthor: \"Karl N. Redman\"\ncreatordisplayname: \"Karl N. Redman\"\ncreatoremail: \"karl.redman@example.com\"\ndate: 2019-05-23T17:43:45-05:00\nlastmodifierdisplayname: \"Karl N. Redman\"\nlastmodifieremail: \"karl.redman@gmail.com\"\nlastmod: 2019-05-23T17:43:45-05:00\ntoc: false\ntype: \"page\"\nhasMath: false\ndraft: false\nweight: 5\n---\n\n# EditFontMatter Class Example 1\n\nEdit several fields of front matter.\n\n## Fields affected in this example:\n\n* toc\n  * note: uses local template variable\n  * pre: false\n  * post: true\n* draft:\n  * note: uses jinja2 filter (callback)\n  * pre: false\n  * post: true\n* hasMath\n  * note: uses program variable\n  * pre: true\n  * post: false\n* stuff:\n  * note: uses program variable to create field\n  * pre: did not exist\n  * post: (list) ['one', 'two', 'three']\n* deleteme:\n  * note: removed from final result\n  * pre: this will be deleted\n  * post: N/A\n```\n\n* Jinja2 template that will update the front matter data of the source markdown file ([template1.j2](https://github.com/karlredman/EditFrontMatter/blob/master/examples/data/template1.j2))\n\n```jinja\n{% set toc = \"true\" %}\n\ntoc: {{ toc }}\ndraft: {{ false | canPublish }}\nhasMath: {{ hasMath }}\nstuff: {{ addedVariable }}\n```\n\n* Python program to edit the markdown file with the Jinja2 template ([example1.py](https://github.com/karlredman/EditFrontMatter/blob/master/examples/example1/example1.py))\n\n```py\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\nfrom editfrontmatter import EditFrontMatter\nimport os\n\n\ndef canPublish_func(val):\n    # do some processing....\n    return True\n\n\ndef main():\n\n    # generic path - overridden by env var `TEST_DATA_DIR`\n    DATA_PATH = \"../data/\"\n\n    if \"TEST_DATA_DIR\" in os.environ:\n        DATA_PATH = os.path.abspath(os.environ.get(\"TEST_DATA_DIR\")) + \"/\"\n\n    # set path to input file\n    file_path = os.path.abspath(DATA_PATH + \"example1.md\")\n\n    # initialize `template_str` with template file content\n    template_str = ''.join(open(os.path.abspath(DATA_PATH + \"template1.j2\"), \"r\").readlines())\n    print(template_str)\n\n    # instantiate the processor\n    proc = EditFrontMatter(file_path=file_path, template_str=template_str)\n\n    # set fields to delete from yaml\n    proc.keys_toDelete = ['deleteme']\n\n    # add a filter and callback function\n    proc.add_JinjaFilter('canPublish', canPublish_func)\n\n    # populate variables and run processor\n    proc.run({'toc': 'no effect', 'hasMath': \"false\",\n              'addedVariable': ['one', 'two', 'three']})\n\n    # dump file\n    print(proc.dumpFileData())\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n\n* Final Output:\n\n```md\n---\ntitle: EditFrontMatter Class Example 1\ndescription: Edit 2 fields in this front matter\ncatagories:\n- programming\n- python\n- markdown\ntags:\n- front matter\n- administration\n- testing\nauthor: Karl N. Redman\ncreatordisplayname: Karl N. Redman\ncreatoremail: karl.redman@example.com\ndate: 2019-05-23 22:43:45\nlastmodifierdisplayname: Karl N. Redman\nlastmodifieremail: karl.redman@gmail.com\nlastmod: 2019-05-23 22:43:45\ntoc: true\ntype: page\nhasMath: false\ndraft: true\nweight: 5\nstuff:\n- one\n- two\n- three\n---\n\n# EditFontMatter Class Example 1\n\nEdit several fields of front matter.\n\n## Fields affected in this example:\n\n* toc\n  * note: uses local template variable\n  * pre: false\n  * post: true\n* draft:\n  * note: uses jinja2 filter (callback)\n  * pre: false\n  * post: true\n* hasMath\n  * note: uses program variable\n  * pre: true\n  * post: false\n* stuff:\n  * note: uses program variable to create field\n  * pre: did not exist\n  * post: (list) ['one', 'two', 'three']\n* deleteme:\n  * note: removed from final result\n  * pre: this will be deleted\n  * post: N/A\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://karlredman.github.io/EditFrontMatter", "keywords": "jinja2 markdown front-matter", "license": "", "maintainer": "", "maintainer_email": "", "name": "editfrontmatter", "package_url": "https://pypi.org/project/editfrontmatter/", "platform": "", "project_url": "https://pypi.org/project/editfrontmatter/", "project_urls": {"Documentation": "https://karlredman.github.io/EditFrontMatter", "Homepage": "https://karlredman.github.io/EditFrontMatter", "Source Code": "http://github.com/karlredman/EditFrontMatter"}, "release_url": "https://pypi.org/project/editfrontmatter/0.0.1/", "requires_dist": ["jinja2", "oyaml"], "requires_python": ">=3.5.3", "summary": "Edit front matter with Jinja2 templates", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Batch Edit Yaml Front Matter</h1>\n<p>Edit front matter markdown files with Jinja2 templates.</p>\n<h2>Description:</h2>\n<p>This is a <code>python3</code> (v3.5.3+) class/module that can be used for batch processing and<br>\nediting front matter in markdown files. Front matter is managed via<br>\n<a href=\"http://jinja.pocoo.org/\" rel=\"nofollow\">Jinja2</a> template processor.</p>\n<h2>Features:</h2>\n<ul>\n<li>Add / Update / Delete any front matter fields</li>\n<li>Preserves front matter element order via <a href=\"https://github.com/wimglenn/oyaml\" rel=\"nofollow\">oyaml</a></li>\n<li>Uses <a href=\"http://jinja.pocoo.org/\" rel=\"nofollow\">Jinja2</a> Templates for configuration and processing:\n<ul>\n<li>Use Jinja2 filters for complex processing</li>\n<li>Incrementally process files with multiple templates</li>\n</ul>\n</li>\n<li>Uses Exceptions around sensitive areas of code</li>\n<li>Examples for implementation:\n<ol>\n<li><a href=\"https://karlredman.github.io/EditFrontMatter/examples/example1/readme.html\" rel=\"nofollow\">Basic usage</a></li>\n<li><a href=\"https://karlredman.github.io/EditFrontMatter/examples/example2/readme.html\" rel=\"nofollow\">Advanced mulit-pass processor</a></li>\n<li><a href=\"https://karlredman.github.io/EditFrontMatter/examples/example3/readme.html\" rel=\"nofollow\">Recursive directory walker that uses multi-threading to edit files</a></li>\n</ol>\n</li>\n<li>Documented with <a href=\"https://www.sphinx-doc.org/en/master/\" rel=\"nofollow\">Sphinx</a> and <a href=\"https://karlredman.github.io/EditFrontMatter\" rel=\"nofollow\">hosted on Github</a></li>\n</ul>\n<h2>Documentation:</h2>\n<ul>\n<li><a href=\"https://karlredman.github.io/EditFrontMatter/\" rel=\"nofollow\">Project Documentation with examples Page</a></li>\n</ul>\n<h1>Installation:</h1>\n<pre>pip install editfrontmatter\n</pre>\n<h2>TL;DR Example Usage:</h2>\n<ul>\n<li>Original markdown file with yaml front matter (<a href=\"https://github.com/karlredman/EditFrontMatter/blob/master/examples/data/example1.md\" rel=\"nofollow\">example1.md</a>)</li>\n</ul>\n<pre>---\ntitle: \"EditFrontMatter Class Example 1\"\ndescription: \"Edit 2 fields in this front matter\"\ncatagories: [programming, python, markdown]\n\ndeleteme: this will be deleted\n\ntags: [front matter, administration, testing]\n\n<span class=\"gh\">#</span> comments and spaces will be eliminated (see docs)\n\nauthor: \"Karl N. Redman\"\ncreatordisplayname: \"Karl N. Redman\"\ncreatoremail: \"karl.redman@example.com\"\ndate: 2019-05-23T17:43:45-05:00\nlastmodifierdisplayname: \"Karl N. Redman\"\nlastmodifieremail: \"karl.redman@gmail.com\"\nlastmod: 2019-05-23T17:43:45-05:00\ntoc: false\ntype: \"page\"\nhasMath: false\ndraft: false\nweight: 5\n---\n\n<span class=\"gh\">#</span> EditFontMatter Class Example 1\n\nEdit several fields of front matter.\n\n<span class=\"gu\">##</span> Fields affected in this example:\n\n<span class=\"k\">*</span> toc\n  <span class=\"k\">*</span> note: uses local template variable\n  <span class=\"k\">*</span> pre: false\n  <span class=\"k\">*</span> post: true\n<span class=\"k\">*</span> draft:\n  <span class=\"k\">*</span> note: uses jinja2 filter (callback)\n  <span class=\"k\">*</span> pre: false\n  <span class=\"k\">*</span> post: true\n<span class=\"k\">*</span> hasMath\n  <span class=\"k\">*</span> note: uses program variable\n  <span class=\"k\">*</span> pre: true\n  <span class=\"k\">*</span> post: false\n<span class=\"k\">*</span> stuff:\n  <span class=\"k\">*</span> note: uses program variable to create field\n  <span class=\"k\">*</span> pre: did not exist\n  <span class=\"k\">*</span> post: (list) ['one', 'two', 'three']\n<span class=\"k\">*</span> deleteme:\n  <span class=\"k\">*</span> note: removed from final result\n  <span class=\"k\">*</span> pre: this will be deleted\n  <span class=\"k\">*</span> post: N/A\n</pre>\n<ul>\n<li>Jinja2 template that will update the front matter data of the source markdown file (<a href=\"https://github.com/karlredman/EditFrontMatter/blob/master/examples/data/template1.j2\" rel=\"nofollow\">template1.j2</a>)</li>\n</ul>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">set</span> <span class=\"nv\">toc</span> <span class=\"o\">=</span> <span class=\"s2\">\"true\"</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n\n<span class=\"x\">toc: </span><span class=\"cp\">{{</span> <span class=\"nv\">toc</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">draft: </span><span class=\"cp\">{{</span> <span class=\"kp\">false</span> <span class=\"o\">|</span> <span class=\"nf\">canPublish</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">hasMath: </span><span class=\"cp\">{{</span> <span class=\"nv\">hasMath</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">stuff: </span><span class=\"cp\">{{</span> <span class=\"nv\">addedVariable</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n</pre>\n<ul>\n<li>Python program to edit the markdown file with the Jinja2 template (<a href=\"https://github.com/karlredman/EditFrontMatter/blob/master/examples/example1/example1.py\" rel=\"nofollow\">example1.py</a>)</li>\n</ul>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">editfrontmatter</span> <span class=\"kn\">import</span> <span class=\"n\">EditFrontMatter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">canPublish_func</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do some processing....</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n\n    <span class=\"c1\"># generic path - overridden by env var `TEST_DATA_DIR`</span>\n    <span class=\"n\">DATA_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">\"../data/\"</span>\n\n    <span class=\"k\">if</span> <span class=\"s2\">\"TEST_DATA_DIR\"</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">:</span>\n        <span class=\"n\">DATA_PATH</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"TEST_DATA_DIR\"</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"s2\">\"/\"</span>\n\n    <span class=\"c1\"># set path to input file</span>\n    <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">DATA_PATH</span> <span class=\"o\">+</span> <span class=\"s2\">\"example1.md\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># initialize `template_str` with template file content</span>\n    <span class=\"n\">template_str</span> <span class=\"o\">=</span> <span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">DATA_PATH</span> <span class=\"o\">+</span> <span class=\"s2\">\"template1.j2\"</span><span class=\"p\">),</span> <span class=\"s2\">\"r\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">())</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">template_str</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># instantiate the processor</span>\n    <span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"n\">EditFrontMatter</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">template_str</span><span class=\"o\">=</span><span class=\"n\">template_str</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># set fields to delete from yaml</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">keys_toDelete</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'deleteme'</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># add a filter and callback function</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">add_JinjaFilter</span><span class=\"p\">(</span><span class=\"s1\">'canPublish'</span><span class=\"p\">,</span> <span class=\"n\">canPublish_func</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># populate variables and run processor</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">({</span><span class=\"s1\">'toc'</span><span class=\"p\">:</span> <span class=\"s1\">'no effect'</span><span class=\"p\">,</span> <span class=\"s1\">'hasMath'</span><span class=\"p\">:</span> <span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n              <span class=\"s1\">'addedVariable'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'one'</span><span class=\"p\">,</span> <span class=\"s1\">'two'</span><span class=\"p\">,</span> <span class=\"s1\">'three'</span><span class=\"p\">]})</span>\n\n    <span class=\"c1\"># dump file</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">dumpFileData</span><span class=\"p\">())</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Final Output:</li>\n</ul>\n<pre>---\ntitle: EditFrontMatter Class Example 1\ndescription: Edit 2 fields in this front matter\ncatagories:\n<span class=\"k\">-</span> programming\n<span class=\"k\">-</span> python\n<span class=\"k\">-</span> markdown\ntags:\n<span class=\"k\">-</span> front matter\n<span class=\"k\">-</span> administration\n<span class=\"k\">-</span> testing\nauthor: Karl N. Redman\ncreatordisplayname: Karl N. Redman\ncreatoremail: karl.redman@example.com\ndate: 2019-05-23 22:43:45\nlastmodifierdisplayname: Karl N. Redman\nlastmodifieremail: karl.redman@gmail.com\nlastmod: 2019-05-23 22:43:45\ntoc: true\ntype: page\nhasMath: false\ndraft: true\nweight: 5\nstuff:\n<span class=\"k\">-</span> one\n<span class=\"k\">-</span> two\n<span class=\"k\">-</span> three\n---\n\n<span class=\"gh\">#</span> EditFontMatter Class Example 1\n\nEdit several fields of front matter.\n\n<span class=\"gu\">##</span> Fields affected in this example:\n\n<span class=\"k\">*</span> toc\n  <span class=\"k\">*</span> note: uses local template variable\n  <span class=\"k\">*</span> pre: false\n  <span class=\"k\">*</span> post: true\n<span class=\"k\">*</span> draft:\n  <span class=\"k\">*</span> note: uses jinja2 filter (callback)\n  <span class=\"k\">*</span> pre: false\n  <span class=\"k\">*</span> post: true\n<span class=\"k\">*</span> hasMath\n  <span class=\"k\">*</span> note: uses program variable\n  <span class=\"k\">*</span> pre: true\n  <span class=\"k\">*</span> post: false\n<span class=\"k\">*</span> stuff:\n  <span class=\"k\">*</span> note: uses program variable to create field\n  <span class=\"k\">*</span> pre: did not exist\n  <span class=\"k\">*</span> post: (list) ['one', 'two', 'three']\n<span class=\"k\">*</span> deleteme:\n  <span class=\"k\">*</span> note: removed from final result\n  <span class=\"k\">*</span> pre: this will be deleted\n  <span class=\"k\">*</span> post: N/A\n</pre>\n\n          </div>"}, "last_serial": 5377584, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "66a2933fb0f0aa9b15047d70c2af49a9", "sha256": "323e1e729e361b77b02f94fdfadd566f4b4e552d7fb2864c9dad78738fca50b0"}, "downloads": -1, "filename": "editfrontmatter-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "66a2933fb0f0aa9b15047d70c2af49a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8945, "upload_time": "2019-06-09T12:23:00", "upload_time_iso_8601": "2019-06-09T12:23:00.552276Z", "url": "https://files.pythonhosted.org/packages/18/81/c4d808ce3d9ebb5bcb2ebdd88c3e14eef1f7b20d4d38bb3ef3244c99cd42/editfrontmatter-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d2f99c1cf4eb0888180f0c2f61acbc1", "sha256": "aefb2d584e1ca380bbfff2bcb069f82a8ee59cfb875558c3d7a6c18a2bf3f04e"}, "downloads": -1, "filename": "editfrontmatter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1d2f99c1cf4eb0888180f0c2f61acbc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 7767, "upload_time": "2019-06-09T12:23:02", "upload_time_iso_8601": "2019-06-09T12:23:02.925556Z", "url": "https://files.pythonhosted.org/packages/51/85/1d02aa4fc89425ff295604898fd4f6315eaa4b9f0eb5250faa99ee7c6905/editfrontmatter-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66a2933fb0f0aa9b15047d70c2af49a9", "sha256": "323e1e729e361b77b02f94fdfadd566f4b4e552d7fb2864c9dad78738fca50b0"}, "downloads": -1, "filename": "editfrontmatter-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "66a2933fb0f0aa9b15047d70c2af49a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8945, "upload_time": "2019-06-09T12:23:00", "upload_time_iso_8601": "2019-06-09T12:23:00.552276Z", "url": "https://files.pythonhosted.org/packages/18/81/c4d808ce3d9ebb5bcb2ebdd88c3e14eef1f7b20d4d38bb3ef3244c99cd42/editfrontmatter-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d2f99c1cf4eb0888180f0c2f61acbc1", "sha256": "aefb2d584e1ca380bbfff2bcb069f82a8ee59cfb875558c3d7a6c18a2bf3f04e"}, "downloads": -1, "filename": "editfrontmatter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1d2f99c1cf4eb0888180f0c2f61acbc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 7767, "upload_time": "2019-06-09T12:23:02", "upload_time_iso_8601": "2019-06-09T12:23:02.925556Z", "url": "https://files.pythonhosted.org/packages/51/85/1d02aa4fc89425ff295604898fd4f6315eaa4b9f0eb5250faa99ee7c6905/editfrontmatter-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:44 2020"}