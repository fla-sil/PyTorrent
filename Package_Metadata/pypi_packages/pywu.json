{"info": {"author": "Dan Hasting", "author_email": "dan@hasting.info", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "pywu\n====\n\npywu is a simple python script for fetching data from Weather\nUnderground's API. You need an API key to use the script (get it\n`here <http://www.wunderground.com/weather/api/>`__).\n\n\nInstallation\n------------\n\npywu is available on `PyPI <https://pypi.python.org/pypi/pywu/>`__. You can\ninstall it with pip:\n\n::\n\n    pip3 install pywu\n\nIf installing from source run:\n\n::\n\n    python3 setup.py build install\n\n\nUsage\n-----\n\n::\n\n    pywu [-h] [-v] [-f <min>] {fetch,current,forecast,info} ...\n\nYou must first fetch the data using the fetch command. This stores a\nfile in /tmp that contains the data. All other commands (current,\nforecast, and info) read from this file.\n\nfetch\n~~~~~\n\nPull weather data from server. Use the format '<API key> <city>,<state>'\nor simply your API key and zip code.\n\n::\n\n    pywu fetch <apikey> 'New York,NY'\n    pywu fetch <apikey> 10001\n\nYou can also specify a language (the default is English). For example:\n\n::\n\n    pywu fetch <apikey> <location> FR\n\nA list of possible language codes can be found\n`here <http://www.wunderground.com/weather/api/d/docs?d=language-support>`__.\n\nInstead of the above, you may also use a ~/.pywu.conf file and simply\ncall ``pywu fetch``. See below for more information.\n\ncurrent\n~~~~~~~\n\nDisplay current statistics. Possible commands:\n\n::\n\n    pywu current condition\n    pywu current temp_f\n    pywu current temp_c\n    pywu current humidity\n    pywu current icon\n    pywu current wind\n    pywu current pressure_mb\n    pywu current pressure_in\n    pywu current dewpoint_c\n    pywu current dewpoint_f\n    pywu current heat_index_c\n    pywu current heat_index_f\n    pywu current windchill_c\n    pywu current windchill_f\n    pywu current feelslike_c\n    pywu current feelslike_f\n    pywu current visibility_mi\n    pywu current visibility_km\n    pywu current prec_hour_in\n    pywu current prec_hour_cm\n    pywu current prec_day_in\n    pywu current prec_day_cm\n\nforecast\n~~~~~~~~\n\nDisplay forecast statistics. Possible commands:\n\n::\n\n    pywu forecast day\n    pywu forecast shortdate\n    pywu forecast longdate\n    pywu forecast low_f\n    pywu forecast low_c\n    pywu forecast high_f\n    pywu forecast high_c\n    pywu forecast icon\n    pywu forecast condition\n    pywu forecast rain_in\n    pywu forecast rain_mm\n    pywu forecast snow_in\n    pywu forecast snow_cm\n\nYou can also specify a day:\n\n::\n\n    -d {0,1,2,3,4,5,6,7,8,9}, --day {0,1,2,3,4,5,6,7,8,9}\n\nDefault is 0 (today).\n\nExample:\n\n::\n\n    pywu forecast condition --day 1\n\ninfo\n~~~~\n\nDisplay forecast information. Possible commands:\n\n::\n\n    pywu info city\n    pywu info postal\n    pywu info datetime\n    pywu info location\n    pywu info country\n    pywu info latitude\n    pywu info longitude\n    pywu info elevation\n    pywu info observation\n\nVerbose Output\n~~~~~~~~~~~~~~\n\npywu is designed to stay quiet instead of print information or errors.\nThis is so these messages will not appear when used with Conky. To\noverride this, specify the -v parameter:\n\n::\n\n    pywu -v fetch\n\nFetching Inline\n~~~~~~~~~~~~~~~\n\nThis requires a config file at ~/.pywu.conf. You can also fetch new\ninformation at the same time as you print current/forecast information:\n\n::\n\n    pywu --fetch <min> current condition\n    pywu -f <min> forecast condition -d 3\n\npywu will fetch new information if the current information is older than <min>.\n\n\nConfig file\n-----------\n\npywu supports reading from a config file as well as passing your API\nkey/location via command line. A sample configuration:\n\n~/.pywu.conf:\n\n::\n\n    [PYWU]\n    apikey=<yourapikey>\n    location=New York City, NY\n\nYou can also specify a language within the config file:\n\n::\n\n    [PYWU]\n    ...\n    language=FR\n\n\nConky\n-----\n\npywu can be used with Conky. An example conkyrc is provided in the\nexamples directory. It's recommended to have a script call\n``pywu fetch`` before conky starts and then periodcally from within the\nconkyrc (the example shows every 15 minutes or 900 seconds).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dh4/pywu", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pywu", "package_url": "https://pypi.org/project/pywu/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pywu/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dh4/pywu"}, "release_url": "https://pypi.org/project/pywu/1.1/", "requires_dist": null, "requires_python": null, "summary": "A simple python script for fetching data from Weather Underground's API.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>pywu is a simple python script for fetching data from Weather\nUnderground\u2019s API. You need an API key to use the script (get it\n<a href=\"http://www.wunderground.com/weather/api/\" rel=\"nofollow\">here</a>).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>pywu is available on <a href=\"https://pypi.python.org/pypi/pywu/\" rel=\"nofollow\">PyPI</a>. You can\ninstall it with pip:</p>\n<pre>pip3 install pywu\n</pre>\n<p>If installing from source run:</p>\n<pre>python3 setup.py build install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>pywu [-h] [-v] [-f &lt;min&gt;] {fetch,current,forecast,info} ...\n</pre>\n<p>You must first fetch the data using the fetch command. This stores a\nfile in /tmp that contains the data. All other commands (current,\nforecast, and info) read from this file.</p>\n<div id=\"fetch\">\n<h3>fetch</h3>\n<p>Pull weather data from server. Use the format \u2018&lt;API key&gt; &lt;city&gt;,&lt;state&gt;\u2019\nor simply your API key and zip code.</p>\n<pre>pywu fetch &lt;apikey&gt; 'New York,NY'\npywu fetch &lt;apikey&gt; 10001\n</pre>\n<p>You can also specify a language (the default is English). For example:</p>\n<pre>pywu fetch &lt;apikey&gt; &lt;location&gt; FR\n</pre>\n<p>A list of possible language codes can be found\n<a href=\"http://www.wunderground.com/weather/api/d/docs?d=language-support\" rel=\"nofollow\">here</a>.</p>\n<p>Instead of the above, you may also use a ~/.pywu.conf file and simply\ncall <tt>pywu fetch</tt>. See below for more information.</p>\n</div>\n<div id=\"current\">\n<h3>current</h3>\n<p>Display current statistics. Possible commands:</p>\n<pre>pywu current condition\npywu current temp_f\npywu current temp_c\npywu current humidity\npywu current icon\npywu current wind\npywu current pressure_mb\npywu current pressure_in\npywu current dewpoint_c\npywu current dewpoint_f\npywu current heat_index_c\npywu current heat_index_f\npywu current windchill_c\npywu current windchill_f\npywu current feelslike_c\npywu current feelslike_f\npywu current visibility_mi\npywu current visibility_km\npywu current prec_hour_in\npywu current prec_hour_cm\npywu current prec_day_in\npywu current prec_day_cm\n</pre>\n</div>\n<div id=\"forecast\">\n<h3>forecast</h3>\n<p>Display forecast statistics. Possible commands:</p>\n<pre>pywu forecast day\npywu forecast shortdate\npywu forecast longdate\npywu forecast low_f\npywu forecast low_c\npywu forecast high_f\npywu forecast high_c\npywu forecast icon\npywu forecast condition\npywu forecast rain_in\npywu forecast rain_mm\npywu forecast snow_in\npywu forecast snow_cm\n</pre>\n<p>You can also specify a day:</p>\n<pre>-d {0,1,2,3,4,5,6,7,8,9}, --day {0,1,2,3,4,5,6,7,8,9}\n</pre>\n<p>Default is 0 (today).</p>\n<p>Example:</p>\n<pre>pywu forecast condition --day 1\n</pre>\n</div>\n<div id=\"info\">\n<h3>info</h3>\n<p>Display forecast information. Possible commands:</p>\n<pre>pywu info city\npywu info postal\npywu info datetime\npywu info location\npywu info country\npywu info latitude\npywu info longitude\npywu info elevation\npywu info observation\n</pre>\n</div>\n<div id=\"verbose-output\">\n<h3>Verbose Output</h3>\n<p>pywu is designed to stay quiet instead of print information or errors.\nThis is so these messages will not appear when used with Conky. To\noverride this, specify the -v parameter:</p>\n<pre>pywu -v fetch\n</pre>\n</div>\n<div id=\"fetching-inline\">\n<h3>Fetching Inline</h3>\n<p>This requires a config file at ~/.pywu.conf. You can also fetch new\ninformation at the same time as you print current/forecast information:</p>\n<pre>pywu --fetch &lt;min&gt; current condition\npywu -f &lt;min&gt; forecast condition -d 3\n</pre>\n<p>pywu will fetch new information if the current information is older than &lt;min&gt;.</p>\n</div>\n</div>\n<div id=\"config-file\">\n<h2>Config file</h2>\n<p>pywu supports reading from a config file as well as passing your API\nkey/location via command line. A sample configuration:</p>\n<p>~/.pywu.conf:</p>\n<pre>[PYWU]\napikey=&lt;yourapikey&gt;\nlocation=New York City, NY\n</pre>\n<p>You can also specify a language within the config file:</p>\n<pre>[PYWU]\n...\nlanguage=FR\n</pre>\n</div>\n<div id=\"conky\">\n<h2>Conky</h2>\n<p>pywu can be used with Conky. An example conkyrc is provided in the\nexamples directory. It\u2019s recommended to have a script call\n<tt>pywu fetch</tt> before conky starts and then periodcally from within the\nconkyrc (the example shows every 15 minutes or 900 seconds).</p>\n</div>\n\n          </div>"}, "last_serial": 1725621, "releases": {"1.0": [], "1.1": [{"comment_text": "", "digests": {"md5": "552d4482b25448fe256d7bf3cf8a5922", "sha256": "77ac377bf9b0367c580d08f6eeb631af1e8ceba2b7e9ef64cccf80bd9262394a"}, "downloads": -1, "filename": "pywu-1.1.tar.gz", "has_sig": false, "md5_digest": "552d4482b25448fe256d7bf3cf8a5922", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8598, "upload_time": "2015-09-16T19:24:14", "upload_time_iso_8601": "2015-09-16T19:24:14.395496Z", "url": "https://files.pythonhosted.org/packages/73/07/027e317453736610a7b144787b4c47db73c692de9172781f1f505abcfce4/pywu-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "552d4482b25448fe256d7bf3cf8a5922", "sha256": "77ac377bf9b0367c580d08f6eeb631af1e8ceba2b7e9ef64cccf80bd9262394a"}, "downloads": -1, "filename": "pywu-1.1.tar.gz", "has_sig": false, "md5_digest": "552d4482b25448fe256d7bf3cf8a5922", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8598, "upload_time": "2015-09-16T19:24:14", "upload_time_iso_8601": "2015-09-16T19:24:14.395496Z", "url": "https://files.pythonhosted.org/packages/73/07/027e317453736610a7b144787b4c47db73c692de9172781f1f505abcfce4/pywu-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:07 2020"}