{"info": {"author": "keul", "author_email": "luca@keul.it", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Plone", "Framework :: Plone :: 3.3", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Programming Language :: Python"], "description": ".. contents::\n\nSummary\n=======\n\nThis product make possible the customization of the Plone \"*Add new...*\" menu, commonly filled\nfrom the Plone available content types.\n\nThis is designed for avoiding useless content types but, at the same time, help UI experience of\nnon-technical users.\n\nYou can use this to add new non-standard stuff to the menu (like JavaScript links). See below.\n\nIdea behind this\n================\n\nThe case is related to developed content types that gets added to Plone only for *usability* enhancements.\n\nOne example: have you ever used Plone4ArtistsVideo, or `collective.flowplayer`__?\nIn those products users that want to add new video to a site must use the \"*Add new...*\" menu and select\nthe *File* content.\n\n__ http://pypi.python.org/pypi/collective.flowplayer\n\nSo the editor (that is *never* a developer in real life... you must accept it) must know that when he add\na new file, it magically became a video... This is not so simple to understand; also is impossible to\nunderstand it without a training or by past experience.\nCan't be better if the user could read \"*Add new video*\" in the menu instead?\n\nRight now the best usability choice is to add a new content type to the menu, or develop a new helper portlet\nthat show some links like \"*add a new video here*\".\n\nIn the first case, just copy/paste the original used content if enough (copy/paste the *File* content type and\nrename it in something like \"Video\").\nBut you know... we don't really need those new content types.\n\nIn the second case all is ok, but what Plone users know is to look at the right menu to search for addable\ntypes, not to look in a menu and *also* in another place.\n\nSo:\n\n* user know that for adding new content types, they must use the \"*Add new...*\"\n* users often ignores the magic behind Plone (like the File that became a Video)\n* developer don't like to add new silly content types only to help end users (no, the are not bad guys).\n\nThe problem above is related to the not-customizable state of the \"Add new...\" menu: the editor and the\ndeveloper will be both happy if a new, fake entry could be added to this menu.\nGoing back to the video example:\n\n* the classic *File* entry (that point to *http://myhost/mysite/createObject?type_name=File*)\n* a new \"Video\" entry (again pointing to *http://myhost/mysite/createObject?type_name=File*)\n\nThis products is designed only for this or similar usability issues, however can help you to customize\nexisting elements of the menu on context (for example: the action of adding a new \"News Item\" content in\na folder can be customized to be an alias for another content type, but only for this special folder,\nor you can disable with a falsy espression a content type in a folder, ...).\n\nHow to use\n==========\n\nInstallation\n------------\n\nSimply add the egg to your buildout, and re-run it.\n\n::\n\n    [instance]\n    ...\n    eggs =\n        ...\n        redturtle.custommenu.factories\n    ...\n\nRemember to add also the ZCML slug and overrides if you are testing this on Plone 3.2 or lesser.\n\nAfter this, install the new product in Plone.\n\nCustomize the menu\n------------------\n\nIn your \"Add new...\" menu you'll find a new \"*Customize menu...*\" entry. This will lead you to a\nform where you must enable customization feature on the current context.\nAfter this you can use the a customization form where you can manage local menu changes.\n\n.. figure:: http://keul.it/images/plone/redturtle.customizemenu.factories1.png\n   :align: left\n\nFor every new entry you can/must fill this informations:\n\n`id`\n    Enter here a string to be used to add an HTML id attribute to the new element. You can not provide\n    it, but if you use an already existing ids, the new one will override the old.\n    In this way you can *replace* one of the native (or inherited) menu entry with a new ones.\n`name`\n    Required.\n    Provide the string to be used for displaying the new element.\n`description`\n    The description is used to provide a tooltips hovering the element.\n`icon`\n    A TALES expression that can be used to give an icon to the new element (very common).\n`condition`\n    A TALES condition expression. If not provided, the new element is added to the menu. In provided\n    it is evaluated as True or False, so the element is displayed or not.\n`URL`\n    Required.\n    A TALES expression used to render the HREF attribute on the link in the element. You have total freedom\n    here: you can also render a string as \"*javascript:...*\" to provide some Javascript features.\n\nAlso you can inherit the customization done in the site root everywhere in the site, adding this to all\nother customizations. You can also locally block the inherit of root customization but you can also make\nnew menu elements defined in the root available only in the root itself.\n\nAlso, you can give a right *id* to new entries not only to override menu element from Plone normal\nbehaviour, but also for change a customization done in the site root.\n\n.. figure:: http://keul.it/images/plone/redturtle.customizemenu.factories2.png\n   :align: left\n\nTALES expressions\n-----------------\n\nIn the TALES expression above, you can use those variables:\n\n `context`\n     The current context, as Plone normal meaning\n `container`\n     The container of the current context, or the context itself if the context is a container. This is\n     useful when writing expression that keep in mind the default document in a folder.\n `portal_url`\n     The *portal_url* tool, taken from the Plone site.\n\nGeneric setup support\n---------------------\n\nJuan. [nueces] provided Generic Setup support for this package:\n\n.. code:: xml\n\n    <?xml version=\"1.0\"?>\n    <object>\n      <property name=\"inherit\">True</property>\n      <custommenu>\n        <property name=\"element-id\">pdf-file</property>\n        <property name=\"element-name\">PDF Document</property>\n        <property name=\"element-descr\">A file content to be filled with a PDF document</property>\n        <property name=\"icon-tales\">string:$portal_url/pdf_icon.gif</property>\n        <property name=\"condition-tales\"></property>\n        <property name=\"element-tales\">string:${container/absolute_url}/createObject?type_name=File</property>\n      </custommenu>\n      <custommenu>\n          ...\n      </custommenu>\n      <object name=\"documents\">\n        <property name=\"inherit\">True</property>\n        <custommenu>\n            ...\n        </custommenu>\n        <object name=\"ebooks\">\n           <property name=\"inherit\">True</property>\n           <custommenu>\n                ...\n           </custommenu>\n           ...\n        </object>\n        ...\n      </object>\n      ...\n    <object>\n\nFor a complete code check `collective.examples.custommenufactories`__.\n\n__ http://svn.plone.org/svn/collective/collective.examples.custommenufactories/trunk/\n\nDependencies\n============\n\nAll Plone versions from 3.3 to 4.3 has been tested.\n\nTODO\n====\n\n* JavaScript features for managing entries\n* code needs refactoring\n* think about inherit customizations not only from portal root\n* subsites testing needed\n\n\nChangelog\n=========\n\n0.3.1 (2015-02-24)\n------------------\n\n- Fixed issue when on folders that are not annotable\n  (uncommon, but may happen on old stuff like PloneGazette).\n  [keul]\n- Plone 3/ Plone 4 compatibility on default menu title and description\n  [keul]\n- Fixed tests\n  [keul]\n- Pyflakes cleanup and related errors fixed\n  [keul]\n\n0.3.0 (2013-07-10)\n------------------\n\n* provided Generic Setup support [nueces]\n* now can't no-more manage menu without installing the product [keul]\n* disabled useless JavaScript [keul]\n* now works also with single entry menu (close `#1`__) [keul]\n* now supporting Plone 4 style icons [keul]\n\n  __ https://github.com/keul/redturtle.custommenu.factories/issues/1\n\n0.2.0b - (2010-02-17)\n---------------------\n\n* now local customizations must be enabled and disabled per-context [keul]\n* fixes to XHTML structure and validation [keul]\n* fixed CSS class names to be camelCase as Plone does [keul]\n* added tests [keul]\n* fixed templates to be test compatible [keul]\n* fixed a bug on entry deletion [keul]\n* added missing check on required element for entries (in facts were optional) [keul]\n* added egg support for z3c.autoinclude [keul]\n* now False condition for an element with id hide inherited element with same id [keul]\n* added Plone 4 compatibility [keul]\n\n0.1.0a - (2010-01-04)\n---------------------\n\n* initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/redturtle.custommenu.factories", "keywords": "plone menu factories customize", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "redturtle.custommenu.factories", "package_url": "https://pypi.org/project/redturtle.custommenu.factories/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/redturtle.custommenu.factories/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/redturtle.custommenu.factories"}, "release_url": "https://pypi.org/project/redturtle.custommenu.factories/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Customize the Plone \"add portal content\" menu", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#summary\" id=\"id6\" rel=\"nofollow\">Summary</a></li>\n<li><a href=\"#idea-behind-this\" id=\"id7\" rel=\"nofollow\">Idea behind this</a></li>\n<li><a href=\"#how-to-use\" id=\"id8\" rel=\"nofollow\">How to use</a><ul>\n<li><a href=\"#installation\" id=\"id9\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#customize-the-menu\" id=\"id10\" rel=\"nofollow\">Customize the menu</a></li>\n<li><a href=\"#tales-expressions\" id=\"id11\" rel=\"nofollow\">TALES expressions</a></li>\n<li><a href=\"#generic-setup-support\" id=\"id12\" rel=\"nofollow\">Generic setup support</a></li>\n</ul>\n</li>\n<li><a href=\"#dependencies\" id=\"id13\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#todo\" id=\"id14\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#changelog\" id=\"id15\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id3\" id=\"id16\" rel=\"nofollow\">0.3.1 (2015-02-24)</a></li>\n<li><a href=\"#id4\" id=\"id17\" rel=\"nofollow\">0.3.0 (2013-07-10)</a></li>\n<li><a href=\"#b-2010-02-17\" id=\"id18\" rel=\"nofollow\">0.2.0b - (2010-02-17)</a></li>\n<li><a href=\"#a-2010-01-04\" id=\"id19\" rel=\"nofollow\">0.1.0a - (2010-01-04)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"summary\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Summary</a></h2>\n<p>This product make possible the customization of the Plone \u201c<em>Add new\u2026</em>\u201d menu, commonly filled\nfrom the Plone available content types.</p>\n<p>This is designed for avoiding useless content types but, at the same time, help UI experience of\nnon-technical users.</p>\n<p>You can use this to add new non-standard stuff to the menu (like JavaScript links). See below.</p>\n</div>\n<div id=\"idea-behind-this\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Idea behind this</a></h2>\n<p>The case is related to developed content types that gets added to Plone only for <em>usability</em> enhancements.</p>\n<p>One example: have you ever used Plone4ArtistsVideo, or <a href=\"http://pypi.python.org/pypi/collective.flowplayer\" rel=\"nofollow\">collective.flowplayer</a>?\nIn those products users that want to add new video to a site must use the \u201c<em>Add new\u2026</em>\u201d menu and select\nthe <em>File</em> content.</p>\n<p>So the editor (that is <em>never</em> a developer in real life\u2026 you must accept it) must know that when he add\na new file, it magically became a video\u2026 This is not so simple to understand; also is impossible to\nunderstand it without a training or by past experience.\nCan\u2019t be better if the user could read \u201c<em>Add new video</em>\u201d in the menu instead?</p>\n<p>Right now the best usability choice is to add a new content type to the menu, or develop a new helper portlet\nthat show some links like \u201c<em>add a new video here</em>\u201d.</p>\n<p>In the first case, just copy/paste the original used content if enough (copy/paste the <em>File</em> content type and\nrename it in something like \u201cVideo\u201d).\nBut you know\u2026 we don\u2019t really need those new content types.</p>\n<p>In the second case all is ok, but what Plone users know is to look at the right menu to search for addable\ntypes, not to look in a menu and <em>also</em> in another place.</p>\n<p>So:</p>\n<ul>\n<li>user know that for adding new content types, they must use the \u201c<em>Add new\u2026</em>\u201d</li>\n<li>users often ignores the magic behind Plone (like the File that became a Video)</li>\n<li>developer don\u2019t like to add new silly content types only to help end users (no, the are not bad guys).</li>\n</ul>\n<p>The problem above is related to the not-customizable state of the \u201cAdd new\u2026\u201d menu: the editor and the\ndeveloper will be both happy if a new, fake entry could be added to this menu.\nGoing back to the video example:</p>\n<ul>\n<li>the classic <em>File</em> entry (that point to <em>http://myhost/mysite/createObject?type_name=File</em>)</li>\n<li>a new \u201cVideo\u201d entry (again pointing to <em>http://myhost/mysite/createObject?type_name=File</em>)</li>\n</ul>\n<p>This products is designed only for this or similar usability issues, however can help you to customize\nexisting elements of the menu on context (for example: the action of adding a new \u201cNews Item\u201d content in\na folder can be customized to be an alias for another content type, but only for this special folder,\nor you can disable with a falsy espression a content type in a folder, \u2026).</p>\n</div>\n<div id=\"how-to-use\">\n<h2><a href=\"#id8\" rel=\"nofollow\">How to use</a></h2>\n<div id=\"installation\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Installation</a></h3>\n<p>Simply add the egg to your buildout, and re-run it.</p>\n<pre>[instance]\n...\neggs =\n    ...\n    redturtle.custommenu.factories\n...\n</pre>\n<p>Remember to add also the ZCML slug and overrides if you are testing this on Plone 3.2 or lesser.</p>\n<p>After this, install the new product in Plone.</p>\n</div>\n<div id=\"customize-the-menu\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Customize the menu</a></h3>\n<p>In your \u201cAdd new\u2026\u201d menu you\u2019ll find a new \u201c<em>Customize menu\u2026</em>\u201d entry. This will lead you to a\nform where you must enable customization feature on the current context.\nAfter this you can use the a customization form where you can manage local menu changes.</p>\n<div>\n<img alt=\"http://keul.it/images/plone/redturtle.customizemenu.factories1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b05c8bfe93f354290ef33d74cea3924513021fdb/687474703a2f2f6b65756c2e69742f696d616765732f706c6f6e652f726564747572746c652e637573746f6d697a656d656e752e666163746f72696573312e706e67\">\n</div>\n<p>For every new entry you can/must fill this informations:</p>\n<dl>\n<dt><cite>id</cite></dt>\n<dd>Enter here a string to be used to add an HTML id attribute to the new element. You can not provide\nit, but if you use an already existing ids, the new one will override the old.\nIn this way you can <em>replace</em> one of the native (or inherited) menu entry with a new ones.</dd>\n<dt><cite>name</cite></dt>\n<dd>Required.\nProvide the string to be used for displaying the new element.</dd>\n<dt><cite>description</cite></dt>\n<dd>The description is used to provide a tooltips hovering the element.</dd>\n<dt><cite>icon</cite></dt>\n<dd>A TALES expression that can be used to give an icon to the new element (very common).</dd>\n<dt><cite>condition</cite></dt>\n<dd>A TALES condition expression. If not provided, the new element is added to the menu. In provided\nit is evaluated as True or False, so the element is displayed or not.</dd>\n<dt><cite>URL</cite></dt>\n<dd>Required.\nA TALES expression used to render the HREF attribute on the link in the element. You have total freedom\nhere: you can also render a string as \u201c<em>javascript:\u2026</em>\u201d to provide some Javascript features.</dd>\n</dl>\n<p>Also you can inherit the customization done in the site root everywhere in the site, adding this to all\nother customizations. You can also locally block the inherit of root customization but you can also make\nnew menu elements defined in the root available only in the root itself.</p>\n<p>Also, you can give a right <em>id</em> to new entries not only to override menu element from Plone normal\nbehaviour, but also for change a customization done in the site root.</p>\n<div>\n<img alt=\"http://keul.it/images/plone/redturtle.customizemenu.factories2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64124a39cc433621d44f6a0fd3faa43b6ca6235c/687474703a2f2f6b65756c2e69742f696d616765732f706c6f6e652f726564747572746c652e637573746f6d697a656d656e752e666163746f72696573322e706e67\">\n</div>\n</div>\n<div id=\"tales-expressions\">\n<h3><a href=\"#id11\" rel=\"nofollow\">TALES expressions</a></h3>\n<p>In the TALES expression above, you can use those variables:</p>\n<blockquote>\n<dl>\n<dt><cite>context</cite></dt>\n<dd>The current context, as Plone normal meaning</dd>\n<dt><cite>container</cite></dt>\n<dd>The container of the current context, or the context itself if the context is a container. This is\nuseful when writing expression that keep in mind the default document in a folder.</dd>\n<dt><cite>portal_url</cite></dt>\n<dd>The <em>portal_url</em> tool, taken from the Plone site.</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"generic-setup-support\">\n<h3><a href=\"#id12\" rel=\"nofollow\">Generic setup support</a></h3>\n<p>Juan. [nueces] provided Generic Setup support for this package:</p>\n<pre><span class=\"cp\">&lt;?xml version=\"1.0\"?&gt;</span>\n<span class=\"nt\">&lt;object&gt;</span>\n  <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"inherit\"</span><span class=\"nt\">&gt;</span>True<span class=\"nt\">&lt;/property&gt;</span>\n  <span class=\"nt\">&lt;custommenu&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"element-id\"</span><span class=\"nt\">&gt;</span>pdf-file<span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"element-name\"</span><span class=\"nt\">&gt;</span>PDF Document<span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"element-descr\"</span><span class=\"nt\">&gt;</span>A file content to be filled with a PDF document<span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"icon-tales\"</span><span class=\"nt\">&gt;</span>string:$portal_url/pdf_icon.gif<span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"condition-tales\"</span><span class=\"nt\">&gt;&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"element-tales\"</span><span class=\"nt\">&gt;</span>string:${container/absolute_url}/createObject?type_name=File<span class=\"nt\">&lt;/property&gt;</span>\n  <span class=\"nt\">&lt;/custommenu&gt;</span>\n  <span class=\"nt\">&lt;custommenu&gt;</span>\n      ...\n  <span class=\"nt\">&lt;/custommenu&gt;</span>\n  <span class=\"nt\">&lt;object</span> <span class=\"na\">name=</span><span class=\"s\">\"documents\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"inherit\"</span><span class=\"nt\">&gt;</span>True<span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;custommenu&gt;</span>\n        ...\n    <span class=\"nt\">&lt;/custommenu&gt;</span>\n    <span class=\"nt\">&lt;object</span> <span class=\"na\">name=</span><span class=\"s\">\"ebooks\"</span><span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"inherit\"</span><span class=\"nt\">&gt;</span>True<span class=\"nt\">&lt;/property&gt;</span>\n       <span class=\"nt\">&lt;custommenu&gt;</span>\n            ...\n       <span class=\"nt\">&lt;/custommenu&gt;</span>\n       ...\n    <span class=\"nt\">&lt;/object&gt;</span>\n    ...\n  <span class=\"nt\">&lt;/object&gt;</span>\n  ...\n<span class=\"nt\">&lt;object&gt;</span>\n</pre>\n<p>For a complete code check <a href=\"http://svn.plone.org/svn/collective/collective.examples.custommenufactories/trunk/\" rel=\"nofollow\">collective.examples.custommenufactories</a>.</p>\n</div>\n</div>\n<div id=\"dependencies\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Dependencies</a></h2>\n<p>All Plone versions from 3.3 to 4.3 has been tested.</p>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id14\" rel=\"nofollow\">TODO</a></h2>\n<ul>\n<li>JavaScript features for managing entries</li>\n<li>code needs refactoring</li>\n<li>think about inherit customizations not only from portal root</li>\n<li>subsites testing needed</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id3\">\n<h3><a href=\"#id16\" rel=\"nofollow\">0.3.1 (2015-02-24)</a></h3>\n<ul>\n<li>Fixed issue when on folders that are not annotable\n(uncommon, but may happen on old stuff like PloneGazette).\n[keul]</li>\n<li>Plone 3/ Plone 4 compatibility on default menu title and description\n[keul]</li>\n<li>Fixed tests\n[keul]</li>\n<li>Pyflakes cleanup and related errors fixed\n[keul]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id17\" rel=\"nofollow\">0.3.0 (2013-07-10)</a></h3>\n<ul>\n<li>provided Generic Setup support [nueces]</li>\n<li>now can\u2019t no-more manage menu without installing the product [keul]</li>\n<li>disabled useless JavaScript [keul]</li>\n<li>now works also with single entry menu (close <a href=\"https://github.com/keul/redturtle.custommenu.factories/issues/1\" rel=\"nofollow\">#1</a>) [keul]</li>\n<li>now supporting Plone 4 style icons [keul]</li>\n</ul>\n</div>\n<div id=\"b-2010-02-17\">\n<h3><a href=\"#id18\" rel=\"nofollow\">0.2.0b - (2010-02-17)</a></h3>\n<ul>\n<li>now local customizations must be enabled and disabled per-context [keul]</li>\n<li>fixes to XHTML structure and validation [keul]</li>\n<li>fixed CSS class names to be camelCase as Plone does [keul]</li>\n<li>added tests [keul]</li>\n<li>fixed templates to be test compatible [keul]</li>\n<li>fixed a bug on entry deletion [keul]</li>\n<li>added missing check on required element for entries (in facts were optional) [keul]</li>\n<li>added egg support for z3c.autoinclude [keul]</li>\n<li>now False condition for an element with id hide inherited element with same id [keul]</li>\n<li>added Plone 4 compatibility [keul]</li>\n</ul>\n</div>\n<div id=\"a-2010-01-04\">\n<h3><a href=\"#id19\" rel=\"nofollow\">0.1.0a - (2010-01-04)</a></h3>\n<ul>\n<li>initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1435976, "releases": {"0.1.0a": [{"comment_text": "", "digests": {"md5": "91ada5d9eb201a9c1adf138c5cb6ea9b", "sha256": "4f3bfc8ada5a9ad620a354745f5a39b3800521879f4a619ec52a928873cb83cb"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.1.0a-py2.4.egg", "has_sig": false, "md5_digest": "91ada5d9eb201a9c1adf138c5cb6ea9b", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 29827, "upload_time": "2010-01-04T23:14:21", "upload_time_iso_8601": "2010-01-04T23:14:21.965066Z", "url": "https://files.pythonhosted.org/packages/22/70/0dd8968b572dfa7fda2ee3e3c540b5b0b00150663c8507891405f857826a/redturtle.custommenu.factories-0.1.0a-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7237192aa596b553a60279fd9df5c529", "sha256": "e5ee542541ec47f746742b807bf3a9d4f16e1d8d8c0e84067234b471016835a2"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.1.0a.tar.gz", "has_sig": false, "md5_digest": "7237192aa596b553a60279fd9df5c529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19584, "upload_time": "2010-01-04T23:13:41", "upload_time_iso_8601": "2010-01-04T23:13:41.764000Z", "url": "https://files.pythonhosted.org/packages/6b/d2/cd9814ba4f9620468f25cb81b9addb5e80d2b4b4aa90d2d1281f4bd51237/redturtle.custommenu.factories-0.1.0a.tar.gz", "yanked": false}], "0.2.0b": [{"comment_text": "", "digests": {"md5": "1cc3dfc09decf0a4a82fbb9c57d8fdab", "sha256": "be840058821539feca5fbd6a86b60f329d77c82cf71c9c65372f3683846900c6"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.2.0b-py2.4.egg", "has_sig": false, "md5_digest": "1cc3dfc09decf0a4a82fbb9c57d8fdab", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 45035, "upload_time": "2010-02-17T23:24:24", "upload_time_iso_8601": "2010-02-17T23:24:24.505333Z", "url": "https://files.pythonhosted.org/packages/04/6e/742692c8f7bec18873de62bacdf550d77b1319cb471373e37ffa1a498918/redturtle.custommenu.factories-0.2.0b-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "37f374939cb53d7e50023f7c3c228a86", "sha256": "03f7f4260a08a56c232facfbb0458bc040d35cdd50c45fae29ca64af462ecd10"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.2.0b-py2.6.egg", "has_sig": false, "md5_digest": "37f374939cb53d7e50023f7c3c228a86", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 44765, "upload_time": "2010-02-17T23:24:46", "upload_time_iso_8601": "2010-02-17T23:24:46.696047Z", "url": "https://files.pythonhosted.org/packages/7d/2c/046c3ae56497de1f8d058f5c800d1f2fba8a177ea1914229686d6c9bcdb9/redturtle.custommenu.factories-0.2.0b-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "272e62e027da83a23fb9eb36f8822b59", "sha256": "a10a9b002786d4201885fa8382c08521b6a5320594dcf4c829fa0b4a156e9e5f"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.2.0b.tar.gz", "has_sig": false, "md5_digest": "272e62e027da83a23fb9eb36f8822b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29407, "upload_time": "2010-02-17T23:24:21", "upload_time_iso_8601": "2010-02-17T23:24:21.810443Z", "url": "https://files.pythonhosted.org/packages/0c/6c/a549938f4bfd282b67082a8918414b544503b8465f47ad0f360070a3c3c4/redturtle.custommenu.factories-0.2.0b.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "3d75ff416fa0de4f6bac6e18abe72063", "sha256": "d7e5aac2b9b43b36ff7240674263de35305465cf630ff8ae68e992a88f51ee8b"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.3.0.zip", "has_sig": false, "md5_digest": "3d75ff416fa0de4f6bac6e18abe72063", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63724, "upload_time": "2013-07-10T19:22:19", "upload_time_iso_8601": "2013-07-10T19:22:19.411527Z", "url": "https://files.pythonhosted.org/packages/b5/a3/715f080c994e397f185413eef5403718f19b2de6182e2c1a36a55cb753c0/redturtle.custommenu.factories-0.3.0.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e0ffef547d3e644b9db02795cd4fde12", "sha256": "e94995d73cf65a864fad0eaa06b3bf2857cd3a28116601db91c8cf44685f2fe0"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.3.1.zip", "has_sig": false, "md5_digest": "e0ffef547d3e644b9db02795cd4fde12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64319, "upload_time": "2015-02-24T11:30:22", "upload_time_iso_8601": "2015-02-24T11:30:22.599024Z", "url": "https://files.pythonhosted.org/packages/19/e7/f2fcab61a25b894912610a889303a2ba384139d74817106c9dccdeaa4dda/redturtle.custommenu.factories-0.3.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e0ffef547d3e644b9db02795cd4fde12", "sha256": "e94995d73cf65a864fad0eaa06b3bf2857cd3a28116601db91c8cf44685f2fe0"}, "downloads": -1, "filename": "redturtle.custommenu.factories-0.3.1.zip", "has_sig": false, "md5_digest": "e0ffef547d3e644b9db02795cd4fde12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64319, "upload_time": "2015-02-24T11:30:22", "upload_time_iso_8601": "2015-02-24T11:30:22.599024Z", "url": "https://files.pythonhosted.org/packages/19/e7/f2fcab61a25b894912610a889303a2ba384139d74817106c9dccdeaa4dda/redturtle.custommenu.factories-0.3.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:05:33 2020"}