{"info": {"author": "Vincent Pelletier", "author_email": "plr.vincent@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "Pythonified linux ``asm-generic/ioctl.h`` .\n\nSo you can replicate driver's code computing ``fcntl.ioctl``'s ``opt`` argument.\n\nFor example, starting from the following IOCTL declaration (taken from ``input.h``):\n\n.. code:: C\n\n  #include <sys/ioctl.h>\n  #define EVIOCGNAME(len) _IOC(_IOC_READ, 'E', 0x06, len) /* get device name */\n  \nyou could write the following:\n\n.. code:: python\n\n  from ioctl_opt import IOC, IOC_READ\n  EVIOCGNAME = lambda length: IOC(IOC_READ, ord('E'), 0x06, length)\n\nThe differences are minimal, and all come from python language or coding style:\n\n- macros/constants to use from ``ioctl_opt`` for not start with an underscore\n- defined macro becomes a callable (here a lambda, could be function)\n- ``IOC``'s ``nr`` argument has to be an integer, so C's single-quote char becomes an ``ord`` call\n- avoid shadowing built-in ``len`` function\n\nYou may want to then write a pythonic function to conveniently access that ioctl:\n\n.. code:: python\n\n  import ctypes\n  import fcntl\n  \n  def getDeviceName(fd, length=1024):\n      name = (ctypes.c_char * length)()\n      actual_length = fcntl.ioctl(fd, EVIOCGNAME(length), name, True)\n      if actual_length < 0:\n          raise OSError(-actual_length)\n      if name[actual_length - 1] == b'\\x00':\n          actual_length -= 1\n      return name[:actual_length]\n\nMore advanced example defining hidraw ioctls, requiring structures (for more on how structures are defined, check python's ctype documentation for your python version):\n\n.. code:: python\n\n  import ctypes\n  from ioctl_opt import IOR, IOC, IOC_READ, IOC_WRITE\n\n  # hid.h\n  HID_MAX_DESCRIPTOR_SIZE = 4096\n\n  # hidraw.h\n  class hidraw_report_descriptor(ctypes.Structure):\n      _fields_ = [\n          ('size', ctypes.c_uint),\n          ('value', ctypes.c_ubyte * HID_MAX_DESCRIPTOR_SIZE),\n      ]\n\n  class hidraw_devinfo(ctypes.Structure):\n      _fields_ = [\n          ('bustype', ctypes.c_uint),\n          ('vendor', ctypes.c_short),\n          ('product', ctypes.c_short),\n      ]\n\n  HIDIOCGRDESCSIZE = IOR(ord('H'), 0x01, ctypes.c_int)\n  HIDIOCGRDESC = IOR(ord('H'), 0x02, hidraw_report_descriptor)\n  HIDIOCGRAWINFO = IOR(ord('H'), 0x03, hidraw_devinfo)\n  HIDIOCGRAWNAME = lambda length: IOC(IOC_READ, ord('H'), 0x04, length)\n  HIDIOCGRAWPHYS = lambda length: IOC(IOC_READ, ord('H'), 0x05, length)\n  HIDIOCSFEATURE = lambda length: IOC(IOC_WRITE|IOC_READ, ord('H'), 0x06, length)\n  HIDIOCGFEATURE = lambda length: IOC(IOC_WRITE|IOC_READ, ord('H'), 0x07, length)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/vpelletier/python-ioctl-opt", "keywords": "ioctl", "license": "GPL 2+", "maintainer": "", "maintainer_email": "", "name": "ioctl-opt", "package_url": "https://pypi.org/project/ioctl-opt/", "platform": "", "project_url": "https://pypi.org/project/ioctl-opt/", "project_urls": {"Homepage": "http://github.com/vpelletier/python-ioctl-opt"}, "release_url": "https://pypi.org/project/ioctl-opt/1.2.2/", "requires_dist": null, "requires_python": "", "summary": "Functions to compute fnctl.ioctl's opt argument", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pythonified linux <tt><span class=\"pre\">asm-generic/ioctl.h</span></tt> .</p>\n<p>So you can replicate driver\u2019s code computing <tt>fcntl.ioctl</tt>\u2019s <tt>opt</tt> argument.</p>\n<p>For example, starting from the following IOCTL declaration (taken from <tt>input.h</tt>):</p>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;sys/ioctl.h&gt;</span><span class=\"cp\">\n#define EVIOCGNAME(len) _IOC(_IOC_READ, 'E', 0x06, len) </span><span class=\"cm\">/* get device name */</span>\n</pre>\n<p>you could write the following:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ioctl_opt</span> <span class=\"kn\">import</span> <span class=\"n\">IOC</span><span class=\"p\">,</span> <span class=\"n\">IOC_READ</span>\n<span class=\"n\">EVIOCGNAME</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"n\">IOC</span><span class=\"p\">(</span><span class=\"n\">IOC_READ</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'E'</span><span class=\"p\">),</span> <span class=\"mh\">0x06</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n</pre>\n<p>The differences are minimal, and all come from python language or coding style:</p>\n<ul>\n<li>macros/constants to use from <tt>ioctl_opt</tt> for not start with an underscore</li>\n<li>defined macro becomes a callable (here a lambda, could be function)</li>\n<li><tt>IOC</tt>\u2019s <tt>nr</tt> argument has to be an integer, so C\u2019s single-quote char becomes an <tt>ord</tt> call</li>\n<li>avoid shadowing built-in <tt>len</tt> function</li>\n</ul>\n<p>You may want to then write a pythonic function to conveniently access that ioctl:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ctypes</span>\n<span class=\"kn\">import</span> <span class=\"nn\">fcntl</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">getDeviceName</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_char</span> <span class=\"o\">*</span> <span class=\"n\">length</span><span class=\"p\">)()</span>\n    <span class=\"n\">actual_length</span> <span class=\"o\">=</span> <span class=\"n\">fcntl</span><span class=\"o\">.</span><span class=\"n\">ioctl</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">EVIOCGNAME</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">actual_length</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">OSError</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">actual_length</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"n\">actual_length</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00</span><span class=\"s1\">'</span><span class=\"p\">:</span>\n        <span class=\"n\">actual_length</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">[:</span><span class=\"n\">actual_length</span><span class=\"p\">]</span>\n</pre>\n<p>More advanced example defining hidraw ioctls, requiring structures (for more on how structures are defined, check python\u2019s ctype documentation for your python version):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ctypes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ioctl_opt</span> <span class=\"kn\">import</span> <span class=\"n\">IOR</span><span class=\"p\">,</span> <span class=\"n\">IOC</span><span class=\"p\">,</span> <span class=\"n\">IOC_READ</span><span class=\"p\">,</span> <span class=\"n\">IOC_WRITE</span>\n\n<span class=\"c1\"># hid.h</span>\n<span class=\"n\">HID_MAX_DESCRIPTOR_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">4096</span>\n\n<span class=\"c1\"># hidraw.h</span>\n<span class=\"k\">class</span> <span class=\"nc\">hidraw_report_descriptor</span><span class=\"p\">(</span><span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">Structure</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields_</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'size'</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_uint</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'value'</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_ubyte</span> <span class=\"o\">*</span> <span class=\"n\">HID_MAX_DESCRIPTOR_SIZE</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">hidraw_devinfo</span><span class=\"p\">(</span><span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">Structure</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields_</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'bustype'</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_uint</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'vendor'</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_short</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'product'</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_short</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n<span class=\"n\">HIDIOCGRDESCSIZE</span> <span class=\"o\">=</span> <span class=\"n\">IOR</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x01</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_int</span><span class=\"p\">)</span>\n<span class=\"n\">HIDIOCGRDESC</span> <span class=\"o\">=</span> <span class=\"n\">IOR</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x02</span><span class=\"p\">,</span> <span class=\"n\">hidraw_report_descriptor</span><span class=\"p\">)</span>\n<span class=\"n\">HIDIOCGRAWINFO</span> <span class=\"o\">=</span> <span class=\"n\">IOR</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x03</span><span class=\"p\">,</span> <span class=\"n\">hidraw_devinfo</span><span class=\"p\">)</span>\n<span class=\"n\">HIDIOCGRAWNAME</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"n\">IOC</span><span class=\"p\">(</span><span class=\"n\">IOC_READ</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x04</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n<span class=\"n\">HIDIOCGRAWPHYS</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"n\">IOC</span><span class=\"p\">(</span><span class=\"n\">IOC_READ</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x05</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n<span class=\"n\">HIDIOCSFEATURE</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"n\">IOC</span><span class=\"p\">(</span><span class=\"n\">IOC_WRITE</span><span class=\"o\">|</span><span class=\"n\">IOC_READ</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x06</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n<span class=\"n\">HIDIOCGFEATURE</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"n\">IOC</span><span class=\"p\">(</span><span class=\"n\">IOC_WRITE</span><span class=\"o\">|</span><span class=\"n\">IOC_READ</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'H'</span><span class=\"p\">),</span> <span class=\"mh\">0x07</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 3691585, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "d8747695e45821acf4f66d70887e71c0", "sha256": "c9d56587b8e90f3c3eeb522679a3490d4a0d00c108042578aef19b0dbd5d4731"}, "downloads": -1, "filename": "ioctl-opt-1.1.tar.gz", "has_sig": false, "md5_digest": "d8747695e45821acf4f66d70887e71c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1793, "upload_time": "2013-02-23T22:25:33", "upload_time_iso_8601": "2013-02-23T22:25:33.721379Z", "url": "https://files.pythonhosted.org/packages/ed/c1/341279a2b7424a4613a7c0b0f4b500f58f9a19b1bbb2d5d993c5dbc31bee/ioctl-opt-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "005eba5a9b1b448a944361429361feee", "sha256": "d22c1cb1b65c714dccc5e3d9174af8cf94982b6382d5595d6454b64d752750ef"}, "downloads": -1, "filename": "ioctl-opt-1.2.tar.gz", "has_sig": false, "md5_digest": "005eba5a9b1b448a944361429361feee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2028, "upload_time": "2014-01-24T17:02:03", "upload_time_iso_8601": "2014-01-24T17:02:03.738549Z", "url": "https://files.pythonhosted.org/packages/9d/56/52162604fc5303bfcec530f2583d7f8f148497ab9e3845ae33ce0da34fa1/ioctl-opt-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "95bd2b35470ebb5e7a7b16a247093cdd", "sha256": "b48897b72d1ea96ce0d1860fc5b7b70fd88dde2df28b09541cdd85254339312b"}, "downloads": -1, "filename": "ioctl-opt-1.2.1.tar.gz", "has_sig": false, "md5_digest": "95bd2b35470ebb5e7a7b16a247093cdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2658, "upload_time": "2018-03-21T01:09:03", "upload_time_iso_8601": "2018-03-21T01:09:03.687548Z", "url": "https://files.pythonhosted.org/packages/61/e7/60008e88eb878e011c08c7ff58e7b812a6f79f17e0b3c8fc7ec91773b1a8/ioctl-opt-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "31e2d3627736e22c4201fbd3de7ef823", "sha256": "9628bbd6728f90d019759f54d20b741ddbf9f8db8d41976da4332492f669d643"}, "downloads": -1, "filename": "ioctl-opt-1.2.2.tar.gz", "has_sig": false, "md5_digest": "31e2d3627736e22c4201fbd3de7ef823", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3398, "upload_time": "2018-03-21T13:37:42", "upload_time_iso_8601": "2018-03-21T13:37:42.905968Z", "url": "https://files.pythonhosted.org/packages/af/10/bcae030d1233a12433e9e4543bef7adf047bee7821718d69cfb5a92dc0d0/ioctl-opt-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31e2d3627736e22c4201fbd3de7ef823", "sha256": "9628bbd6728f90d019759f54d20b741ddbf9f8db8d41976da4332492f669d643"}, "downloads": -1, "filename": "ioctl-opt-1.2.2.tar.gz", "has_sig": false, "md5_digest": "31e2d3627736e22c4201fbd3de7ef823", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3398, "upload_time": "2018-03-21T13:37:42", "upload_time_iso_8601": "2018-03-21T13:37:42.905968Z", "url": "https://files.pythonhosted.org/packages/af/10/bcae030d1233a12433e9e4543bef7adf047bee7821718d69cfb5a92dc0d0/ioctl-opt-1.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:02 2020"}