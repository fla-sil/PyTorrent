{"info": {"author": "John Riebold", "author_email": "jmriebold@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "# BoilerPy3\n\n\n## About\n\nBoilerPy3 is a native Python [port](https://github.com/natural/java2python) of Christian Kohlsch\u00fctter's [Boilerpipe](https://github.com/kohlschutter/boilerpipe) library, released under the Apache 2.0 Licence.\n\nThis package is based on [sammyer's](https://github.com/sammyer) [BoilerPy](https://github.com/sammyer/BoilerPy), specifically [mercuree's](https://github.com/mercuree) [Python3-compatible fork](https://github.com/mercuree/BoilerPy). This fork updates the codebase to be more Pythonic (proper attribute access, docstrings, type-hinting, snake case, etc.) and make use Python 3.6 features (f-strings), in addition to switching testing frameworks from Unittest to PyTest.\n\n**Note**: This package is based on Boilerpipe 1.2 (at or before [this commit](https://github.com/kohlschutter/boilerpipe/tree/b0816590340f4317f500c64565b23beb4fb9a827)), as that's when the code was originally ported to Python. I experimented with updating the code to match Boilerpipe 1.3, however because it performed worse in my tests, I ultimately decided to leave it at 1.2-equivalent.\n\n\n## Installation\n\nTo install the latest version from PyPI, execute:\n\n```shell\npip install boilerpy3\n```\n\nIf you'd like to try out any unreleased features you can install directly from GitHub like so:\n\n```shell\npip install git+https://github.com/jmriebold/BoilerPy\n```\n\n\n## Usage\n\nThe top-level interfaces are the Extractors. Use the `get_content()` methods to extract the filtered text.\n\n```python\nfrom boilerpy3 import extractors\n\nextractor = extractors.ArticleExtractor()\n\n# From a URL\ncontent = extractor.get_content_from_url('http://www.example.com/')\n\n# From a file\ncontent = extractor.get_content_from_file('tests/test.html')\n\n# From raw HTML\ncontent = extractor.get_content('<html><body><h1>Example</h1></body></html>')\n```\n\nAlternatively, use `get_doc()` to return a Boilerpipe document from which you can get more detailed information.\n\n```python\nfrom boilerpy3 import extractors\n\nextractor = extractors.ArticleExtractor()\n\ndoc = extractor.get_doc_from_url('http://www.example.com/')\ncontent = doc.content\ntitle = doc.title\n```\n\n\n## Extractors\n\n\n### DefaultExtractor\n\nUsually worse than ArticleExtractor, but simpler/no heuristics. A quite generic full-text extractor. \n\n\n### ArticleExtractor\n\nA full-text extractor which is tuned towards news articles. In this scenario it achieves higher accuracy than DefaultExtractor. Works very well for most types of Article-like HTML.\n\n### ArticleSentencesExtractor\n\nA full-text extractor which is tuned towards extracting sentences from news articles.\n\n\n### LargestContentExtractor\n\nA full-text extractor which extracts the largest text component of a page. For news articles, it may perform better than the DefaultExtractor but usually worse than ArticleExtractor\n\n\n### CanolaExtractor\n\nA full-text extractor trained on [krdwrd](http://krdwrd.org) [Canola](https://krdwrd.org/trac/attachment/wiki/Corpora/Canola/CANOLA.pdf). Works well with SimpleEstimator, too.\n\n\n### KeepEverythingExtractor\n\nDummy extractor which marks everything as content. Should return the input text. Use this to double-check that your problem is within a particular Extractor or somewhere else.\n\n\n### NumWordsRulesExtractor\n\nA quite generic full-text extractor solely based upon the number of words per block (the current, the previous and the next block).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jmriebold/BoilerPy3", "keywords": "boilerpipe,boilerpy,html text extraction,text extraction,full text extraction", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "boilerpy3", "package_url": "https://pypi.org/project/boilerpy3/", "platform": "", "project_url": "https://pypi.org/project/boilerpy3/", "project_urls": {"Homepage": "https://github.com/jmriebold/BoilerPy3"}, "release_url": "https://pypi.org/project/boilerpy3/1.0.2/", "requires_dist": null, "requires_python": ">=3.6.*", "summary": "Python port of Boilerpipe, Boilerplate Removal and Fulltext Extraction from HTML pages", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BoilerPy3</h1>\n<h2>About</h2>\n<p>BoilerPy3 is a native Python <a href=\"https://github.com/natural/java2python\" rel=\"nofollow\">port</a> of Christian Kohlsch\u00fctter's <a href=\"https://github.com/kohlschutter/boilerpipe\" rel=\"nofollow\">Boilerpipe</a> library, released under the Apache 2.0 Licence.</p>\n<p>This package is based on <a href=\"https://github.com/sammyer\" rel=\"nofollow\">sammyer's</a> <a href=\"https://github.com/sammyer/BoilerPy\" rel=\"nofollow\">BoilerPy</a>, specifically <a href=\"https://github.com/mercuree\" rel=\"nofollow\">mercuree's</a> <a href=\"https://github.com/mercuree/BoilerPy\" rel=\"nofollow\">Python3-compatible fork</a>. This fork updates the codebase to be more Pythonic (proper attribute access, docstrings, type-hinting, snake case, etc.) and make use Python 3.6 features (f-strings), in addition to switching testing frameworks from Unittest to PyTest.</p>\n<p><strong>Note</strong>: This package is based on Boilerpipe 1.2 (at or before <a href=\"https://github.com/kohlschutter/boilerpipe/tree/b0816590340f4317f500c64565b23beb4fb9a827\" rel=\"nofollow\">this commit</a>), as that's when the code was originally ported to Python. I experimented with updating the code to match Boilerpipe 1.3, however because it performed worse in my tests, I ultimately decided to leave it at 1.2-equivalent.</p>\n<h2>Installation</h2>\n<p>To install the latest version from PyPI, execute:</p>\n<pre>pip install boilerpy3\n</pre>\n<p>If you'd like to try out any unreleased features you can install directly from GitHub like so:</p>\n<pre>pip install git+https://github.com/jmriebold/BoilerPy\n</pre>\n<h2>Usage</h2>\n<p>The top-level interfaces are the Extractors. Use the <code>get_content()</code> methods to extract the filtered text.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">boilerpy3</span> <span class=\"kn\">import</span> <span class=\"n\">extractors</span>\n\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">extractors</span><span class=\"o\">.</span><span class=\"n\">ArticleExtractor</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># From a URL</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">get_content_from_url</span><span class=\"p\">(</span><span class=\"s1\">'http://www.example.com/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># From a file</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">get_content_from_file</span><span class=\"p\">(</span><span class=\"s1\">'tests/test.html'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># From raw HTML</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">get_content</span><span class=\"p\">(</span><span class=\"s1\">'&lt;html&gt;&lt;body&gt;&lt;h1&gt;Example&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;'</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, use <code>get_doc()</code> to return a Boilerpipe document from which you can get more detailed information.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">boilerpy3</span> <span class=\"kn\">import</span> <span class=\"n\">extractors</span>\n\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">extractors</span><span class=\"o\">.</span><span class=\"n\">ArticleExtractor</span><span class=\"p\">()</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">get_doc_from_url</span><span class=\"p\">(</span><span class=\"s1\">'http://www.example.com/'</span><span class=\"p\">)</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">content</span>\n<span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">title</span>\n</pre>\n<h2>Extractors</h2>\n<h3>DefaultExtractor</h3>\n<p>Usually worse than ArticleExtractor, but simpler/no heuristics. A quite generic full-text extractor.</p>\n<h3>ArticleExtractor</h3>\n<p>A full-text extractor which is tuned towards news articles. In this scenario it achieves higher accuracy than DefaultExtractor. Works very well for most types of Article-like HTML.</p>\n<h3>ArticleSentencesExtractor</h3>\n<p>A full-text extractor which is tuned towards extracting sentences from news articles.</p>\n<h3>LargestContentExtractor</h3>\n<p>A full-text extractor which extracts the largest text component of a page. For news articles, it may perform better than the DefaultExtractor but usually worse than ArticleExtractor</p>\n<h3>CanolaExtractor</h3>\n<p>A full-text extractor trained on <a href=\"http://krdwrd.org\" rel=\"nofollow\">krdwrd</a> <a href=\"https://krdwrd.org/trac/attachment/wiki/Corpora/Canola/CANOLA.pdf\" rel=\"nofollow\">Canola</a>. Works well with SimpleEstimator, too.</p>\n<h3>KeepEverythingExtractor</h3>\n<p>Dummy extractor which marks everything as content. Should return the input text. Use this to double-check that your problem is within a particular Extractor or somewhere else.</p>\n<h3>NumWordsRulesExtractor</h3>\n<p>A quite generic full-text extractor solely based upon the number of words per block (the current, the previous and the next block).</p>\n\n          </div>"}, "last_serial": 6346432, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "f78bb84c2fbdc000e5dc3603eed8c968", "sha256": "ba33a6f65b6110c162b0a9b88ee7fc0469c9e2ac9f34968122ee243f22d69243"}, "downloads": -1, "filename": "boilerpy3-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f78bb84c2fbdc000e5dc3603eed8c968", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.*", "size": 21607, "upload_time": "2019-08-09T23:15:51", "upload_time_iso_8601": "2019-08-09T23:15:51.148386Z", "url": "https://files.pythonhosted.org/packages/31/fb/0c027efd8db1ab6e1a4a1582292251cf86749a46dfd006ed2afe643ff9bd/boilerpy3-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "99cc3917faa8edc4073c05e09dbeb24f", "sha256": "22a239a2eacb232d5c5fad78cbb9a1008880cc06e3a128070b2739ed61e57e96"}, "downloads": -1, "filename": "boilerpy3-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "99cc3917faa8edc4073c05e09dbeb24f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.*", "size": 21609, "upload_time": "2019-12-22T04:23:00", "upload_time_iso_8601": "2019-12-22T04:23:00.791572Z", "url": "https://files.pythonhosted.org/packages/c3/45/b04e90a4d39a9709be248f363148e7f82e1cac34a6e9f83e77aa2eb37326/boilerpy3-1.0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99cc3917faa8edc4073c05e09dbeb24f", "sha256": "22a239a2eacb232d5c5fad78cbb9a1008880cc06e3a128070b2739ed61e57e96"}, "downloads": -1, "filename": "boilerpy3-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "99cc3917faa8edc4073c05e09dbeb24f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.*", "size": 21609, "upload_time": "2019-12-22T04:23:00", "upload_time_iso_8601": "2019-12-22T04:23:00.791572Z", "url": "https://files.pythonhosted.org/packages/c3/45/b04e90a4d39a9709be248f363148e7f82e1cac34a6e9f83e77aa2eb37326/boilerpy3-1.0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:36:48 2020"}