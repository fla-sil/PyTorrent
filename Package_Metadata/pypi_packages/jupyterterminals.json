{"info": {"author": "Will Kessler", "author_email": "will@udacity.com", "bugtrack_url": null, "classifiers": ["Framework :: Jupyter", "Intended Audience :: Education", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# General instructions for building for pip distribution\n\nAfter changing `setup.py` or any part of the JupyterTerminals codebase, increase the version number in setup.py appropriately, around line 37.\n\nThen run the commands shown below to upgrade what's stored in pip\n\n``` shell\npython3 setup.py prep_to_build npm_run_build sdist bdist_wheel\n```\n\nUploading to the pypi test servers:\n\n``` shell\npython3 -m twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose\n```\n\n(For User name you can use `willkessler`.)\n\nInstalling to a host in the cloud, from the test servers:\n``` shell\npython3 -m pip install --index-url https://test.pypi.org/simple/ jupyterterminals\n```\n\nTesting new installation on cloud host:\n\n``` shell\njupyter notebook \u2014port=3001 \u2014ip=127.0.0.1 \u2014allow-root\n```\n\nUploading to the pypi production servers:\n\n``` shell\npython3 -m twine upload dist/*\n```\n\n(For User name you can use `willkessler`.)\n\n# General instructions for building for conda distribution\n\n\nNB: this relies on jupyterterminals being in the main (production) pypi repository.\nFirst time steps:\n\n```\nmkdir conda\ncd conda\nrm -rf jupyterterminals\nconda skeleton pypi jupyterterminals\nconda install conda-verify\n```\n\nModify `jupyterterminals/meta.yaml` to include `build   noarch:  python`.\nModify `jupyterterminals/meta.json` to include github handle: `willkessler`\n\n\n(Re)building on macosx:\n\n(After you make updates, make sure to bump the version number in `jupyterterminals/meta.yml`.\n\n```\nconda build jupyterterminals\nexport TERMINALS_VERSION=0.1.1\nanaconda upload /Users/will/anaconda/conda-bld/noarch/jupyterterminals-$TERMINALS_VERSION-py_0.tar.bz2\n```\n\nThen you want to convert to other architectures and upload these as well:\n\n```\nconda convert --platform all ~/anaconda/conda-bld/osx-64/jupyterterminals-$TERMINALS_VERSION-py36_0.tar.bz2 -o linux64_out\nanaconda upload linux64_out/linux-64/jupyterterminals-$TERMINALS_VERSION-py36_0.tar.bz2\n```\n... etc for all the architectures you want to support. This last step doesn't seem to be necessary any more (01/23/2020).\n\n\nTo install you should be able to do :\n\n```\nconda install -c willkessler jupyterterminals\n```\n\n### Building for Windows and building for pip on Windows\n\nTo debug issues on Windows, you need to have cygwin64 and node installed on the system. Then you need to use `jupyterterminals/package.json_windows` instead of `jupyterterminals/package.json`. This version of `package.json` has a different build step using utilities provided by Cygwin:\n\n```\n...\n  \"scripts\": {\n    \"build\": \"/cygwin64/bin/rm.exe -rf terminals-dist build ../build_for_pip/code-prep && node node_modules/gulp/bin/gulp.js prebuild && cd node_modules/.bin && r_js.cmd -o ../../build.js && cd ../.. && node ./node_modules/gulp/bin/gulp.js moveStyles && cd node_modules/.bin && r_js.cmd -o ../../../build_for_pip/buildPip.js && cd ../.. && node ./node_modules/gulp/bin/gulp.js pipMoveStyles\"\n  },\n...\n```\n\nYou can follow the steps above to build for pip. For creating the pip artifact, from this directory do:\n\n```\npython3 setup.py prep_to_build npm_run_build sdist bdist_wheel\n```\n\nbut then you can install from this build, without uploading to pypi servers, by simply :\n\n1. unpacking the tarball found in the dist directory\n1. switching to the unpack directory\n1. finally: `pip install .`\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/willkessler/jupyterterminals", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jupyterterminals", "package_url": "https://pypi.org/project/jupyterterminals/", "platform": "", "project_url": "https://pypi.org/project/jupyterterminals/", "project_urls": {"Homepage": "https://github.com/willkessler/jupyterterminals"}, "release_url": "https://pypi.org/project/jupyterterminals/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Create inline terminals in Jupyter Notebooks.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>General instructions for building for pip distribution</h1>\n<p>After changing <code>setup.py</code> or any part of the JupyterTerminals codebase, increase the version number in setup.py appropriately, around line 37.</p>\n<p>Then run the commands shown below to upgrade what's stored in pip</p>\n<pre>python3 setup.py prep_to_build npm_run_build sdist bdist_wheel\n</pre>\n<p>Uploading to the pypi test servers:</p>\n<pre>python3 -m twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose\n</pre>\n<p>(For User name you can use <code>willkessler</code>.)</p>\n<p>Installing to a host in the cloud, from the test servers:</p>\n<pre>python3 -m pip install --index-url https://test.pypi.org/simple/ jupyterterminals\n</pre>\n<p>Testing new installation on cloud host:</p>\n<pre>jupyter notebook \u2014port<span class=\"o\">=</span><span class=\"m\">3001</span> \u2014ip<span class=\"o\">=</span><span class=\"m\">127</span>.0.0.1 \u2014allow-root\n</pre>\n<p>Uploading to the pypi production servers:</p>\n<pre>python3 -m twine upload dist/*\n</pre>\n<p>(For User name you can use <code>willkessler</code>.)</p>\n<h1>General instructions for building for conda distribution</h1>\n<p>NB: this relies on jupyterterminals being in the main (production) pypi repository.\nFirst time steps:</p>\n<pre><code>mkdir conda\ncd conda\nrm -rf jupyterterminals\nconda skeleton pypi jupyterterminals\nconda install conda-verify\n</code></pre>\n<p>Modify <code>jupyterterminals/meta.yaml</code> to include <code>build noarch: python</code>.\nModify <code>jupyterterminals/meta.json</code> to include github handle: <code>willkessler</code></p>\n<p>(Re)building on macosx:</p>\n<p>(After you make updates, make sure to bump the version number in <code>jupyterterminals/meta.yml</code>.</p>\n<pre><code>conda build jupyterterminals\nexport TERMINALS_VERSION=0.1.1\nanaconda upload /Users/will/anaconda/conda-bld/noarch/jupyterterminals-$TERMINALS_VERSION-py_0.tar.bz2\n</code></pre>\n<p>Then you want to convert to other architectures and upload these as well:</p>\n<pre><code>conda convert --platform all ~/anaconda/conda-bld/osx-64/jupyterterminals-$TERMINALS_VERSION-py36_0.tar.bz2 -o linux64_out\nanaconda upload linux64_out/linux-64/jupyterterminals-$TERMINALS_VERSION-py36_0.tar.bz2\n</code></pre>\n<p>... etc for all the architectures you want to support. This last step doesn't seem to be necessary any more (01/23/2020).</p>\n<p>To install you should be able to do :</p>\n<pre><code>conda install -c willkessler jupyterterminals\n</code></pre>\n<h3>Building for Windows and building for pip on Windows</h3>\n<p>To debug issues on Windows, you need to have cygwin64 and node installed on the system. Then you need to use <code>jupyterterminals/package.json_windows</code> instead of <code>jupyterterminals/package.json</code>. This version of <code>package.json</code> has a different build step using utilities provided by Cygwin:</p>\n<pre><code>...\n  \"scripts\": {\n    \"build\": \"/cygwin64/bin/rm.exe -rf terminals-dist build ../build_for_pip/code-prep &amp;&amp; node node_modules/gulp/bin/gulp.js prebuild &amp;&amp; cd node_modules/.bin &amp;&amp; r_js.cmd -o ../../build.js &amp;&amp; cd ../.. &amp;&amp; node ./node_modules/gulp/bin/gulp.js moveStyles &amp;&amp; cd node_modules/.bin &amp;&amp; r_js.cmd -o ../../../build_for_pip/buildPip.js &amp;&amp; cd ../.. &amp;&amp; node ./node_modules/gulp/bin/gulp.js pipMoveStyles\"\n  },\n...\n</code></pre>\n<p>You can follow the steps above to build for pip. For creating the pip artifact, from this directory do:</p>\n<pre><code>python3 setup.py prep_to_build npm_run_build sdist bdist_wheel\n</code></pre>\n<p>but then you can install from this build, without uploading to pypi servers, by simply :</p>\n<ol>\n<li>unpacking the tarball found in the dist directory</li>\n<li>switching to the unpack directory</li>\n<li>finally: <code>pip install .</code></li>\n</ol>\n\n          </div>"}, "last_serial": 7117433, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "aaafe1865eab1e863cc6401903680ccd", "sha256": "0d71120f540b4ac6c0764032caa2572a1a70a99b9e6b5057cf4419baf457dd89"}, "downloads": -1, "filename": "jupyterterminals-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aaafe1865eab1e863cc6401903680ccd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 70141, "upload_time": "2020-04-27T04:32:30", "upload_time_iso_8601": "2020-04-27T04:32:30.461066Z", "url": "https://files.pythonhosted.org/packages/07/9c/cc205be19443d67d17ffdf7ba8bd889ef3903d681fa40eca0e75900b0caa/jupyterterminals-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd0badb743f11306b2cd0c9cee6aeeb1", "sha256": "119ef677c2efe769ab096dffb861f166271b46b2fac6aab6158218b04e6acbab"}, "downloads": -1, "filename": "jupyterterminals-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bd0badb743f11306b2cd0c9cee6aeeb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69132, "upload_time": "2020-04-27T04:32:32", "upload_time_iso_8601": "2020-04-27T04:32:32.765580Z", "url": "https://files.pythonhosted.org/packages/3f/ac/d0c370001deb901303dd77db1e7acbd5440f200f7c0193652406570cf0fa/jupyterterminals-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "56f7edb5b58aea06b1cd974f57f43663", "sha256": "f7b6e08870e20a306d310ae9dfd30146f1eab0e75c9b4de1894b0e101e616c31"}, "downloads": -1, "filename": "jupyterterminals-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "56f7edb5b58aea06b1cd974f57f43663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 70165, "upload_time": "2020-04-28T05:56:20", "upload_time_iso_8601": "2020-04-28T05:56:20.782748Z", "url": "https://files.pythonhosted.org/packages/7d/dc/5946411e361caff8e684919d5ed52b0155cb11041e8fc7cb1b4c9fcf6a7d/jupyterterminals-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dfc2ee834cc88add8baba40ae090ec1", "sha256": "db14c877b402f258fd968d43fa10b1c8d50dd7871333035ebe7134255db88e12"}, "downloads": -1, "filename": "jupyterterminals-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0dfc2ee834cc88add8baba40ae090ec1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69153, "upload_time": "2020-04-28T05:56:22", "upload_time_iso_8601": "2020-04-28T05:56:22.898365Z", "url": "https://files.pythonhosted.org/packages/9b/08/2d69f00c5cf32ef818a54b2e576c25a349f2a850ecf4f1ea701a41fe22ca/jupyterterminals-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56f7edb5b58aea06b1cd974f57f43663", "sha256": "f7b6e08870e20a306d310ae9dfd30146f1eab0e75c9b4de1894b0e101e616c31"}, "downloads": -1, "filename": "jupyterterminals-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "56f7edb5b58aea06b1cd974f57f43663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 70165, "upload_time": "2020-04-28T05:56:20", "upload_time_iso_8601": "2020-04-28T05:56:20.782748Z", "url": "https://files.pythonhosted.org/packages/7d/dc/5946411e361caff8e684919d5ed52b0155cb11041e8fc7cb1b4c9fcf6a7d/jupyterterminals-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dfc2ee834cc88add8baba40ae090ec1", "sha256": "db14c877b402f258fd968d43fa10b1c8d50dd7871333035ebe7134255db88e12"}, "downloads": -1, "filename": "jupyterterminals-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0dfc2ee834cc88add8baba40ae090ec1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69153, "upload_time": "2020-04-28T05:56:22", "upload_time_iso_8601": "2020-04-28T05:56:22.898365Z", "url": "https://files.pythonhosted.org/packages/9b/08/2d69f00c5cf32ef818a54b2e576c25a349f2a850ecf4f1ea701a41fe22ca/jupyterterminals-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:07 2020"}