{"info": {"author": "Alexander Tomlinson", "author_email": "tomlinsa@ohsu.edu", "bugtrack_url": null, "classifiers": [], "description": "![version_badge] ![downloads_badge] ![license_badge] ![docs_badge]\n\n# pycrafter4500\n\nThis is an unofficial API for some functionality of the Texas Instruments Lightcrafter 4500.\n\nCode adapted for the TI Lightcrafter 4500 from https://github.com/csi-dcsc/Pycrafter6500\n\nThe DLPC 350 is the controller chip on the LCR 4500.\n\nTI DLPC 350 documentation can be found at: http://www.ti.com/product/DLPC350/technicaldocuments\n\nDoc strings adapted from dlpc350_api.cpp source code.\n\nTo connect to the LCR4500, the libusb-win32 driver is required. The recommended way to do is this is\nwith [Zadig](http://zadig.akeo.ie/). The pyusb package is also required.\n\n\n## Install\n\npycrafter4500 is available through pypi\n\n```bash\npip install pycrafter4500\n```\n\n\n## Usage\n\n```python\nimport pycrafter4500\n```\n\nWaking up from and going into standby:\n\n```python\npycrafter4500.power_up()\npycrafter4500.power_down()\n```\n\nToggling back to video mode from pattern sequence mode:\n\n```python\npycrafter4500.video_mode()\n```\n\nStarting a pattern sequence:\n\n```python\n# for example: 222 hz, 7 bit depth, white\npycrafter4500.pattern_mode(num_pats=3,\n                           fps=222,\n                           bit_depth=7,\n                           led_color=0b111,  # BGR flags                 \n                           )\n```\n\nIf you wish to send other commands, this can be done using the dlpc350 class. See source documentation for further details.\n\n```python\nfrom pycrafter4500 import dlpc350, connect_usb\nfrom pycrafter4500 import bits_to_bytes, conv_len\n\nwith connect_usb() as lcr:\n    lcr.command('w', 0x00, CMD2, CMD3, payload)\n```\n\n  [version_badge]: https://img.shields.io/pypi/v/pycrafter4500.svg\n  [downloads_badge]: https://img.shields.io/pypi/dm/pycrafter4500.svg\n  [license_badge]: https://img.shields.io/github/license/SivyerLab/pyCrafter4500.svg\n  [docs_badge]: https://readthedocs.org/projects/pycrafter4500/badge/", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pycrafter4500.readthedocs.io/en/latest/", "keywords": "lightcrafter 4500 dlpc 350 projector texas", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "pycrafter4500", "package_url": "https://pypi.org/project/pycrafter4500/", "platform": "", "project_url": "https://pypi.org/project/pycrafter4500/", "project_urls": {"Homepage": "https://pycrafter4500.readthedocs.io/en/latest/", "Source Code": "https://github.com/SivyerLab/pyCrafter4500"}, "release_url": "https://pypi.org/project/pycrafter4500/0.6/", "requires_dist": null, "requires_python": "", "summary": "A python interface to communicate over USB with the TI Lightcrafter 4500", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"version_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67f36eb214fd2c1d60a11da7f0789210267bf22f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707963726166746572343530302e737667\"> <img alt=\"downloads_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a878c5d44890d118b9f1ea30c1058bb592957740/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707963726166746572343530302e737667\"> <img alt=\"license_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b8f9af89fc0bac11b24a9bef99601611921b945/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5369767965724c61622f707943726166746572343530302e737667\"> <img alt=\"docs_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ed33639bef97e8c75457cdbb3b1616369bccbda/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707963726166746572343530302f62616467652f\"></p>\n<h1>pycrafter4500</h1>\n<p>This is an unofficial API for some functionality of the Texas Instruments Lightcrafter 4500.</p>\n<p>Code adapted for the TI Lightcrafter 4500 from <a href=\"https://github.com/csi-dcsc/Pycrafter6500\" rel=\"nofollow\">https://github.com/csi-dcsc/Pycrafter6500</a></p>\n<p>The DLPC 350 is the controller chip on the LCR 4500.</p>\n<p>TI DLPC 350 documentation can be found at: <a href=\"http://www.ti.com/product/DLPC350/technicaldocuments\" rel=\"nofollow\">http://www.ti.com/product/DLPC350/technicaldocuments</a></p>\n<p>Doc strings adapted from dlpc350_api.cpp source code.</p>\n<p>To connect to the LCR4500, the libusb-win32 driver is required. The recommended way to do is this is\nwith <a href=\"http://zadig.akeo.ie/\" rel=\"nofollow\">Zadig</a>. The pyusb package is also required.</p>\n<h2>Install</h2>\n<p>pycrafter4500 is available through pypi</p>\n<pre>pip install pycrafter4500\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycrafter4500</span>\n</pre>\n<p>Waking up from and going into standby:</p>\n<pre><span class=\"n\">pycrafter4500</span><span class=\"o\">.</span><span class=\"n\">power_up</span><span class=\"p\">()</span>\n<span class=\"n\">pycrafter4500</span><span class=\"o\">.</span><span class=\"n\">power_down</span><span class=\"p\">()</span>\n</pre>\n<p>Toggling back to video mode from pattern sequence mode:</p>\n<pre><span class=\"n\">pycrafter4500</span><span class=\"o\">.</span><span class=\"n\">video_mode</span><span class=\"p\">()</span>\n</pre>\n<p>Starting a pattern sequence:</p>\n<pre><span class=\"c1\"># for example: 222 hz, 7 bit depth, white</span>\n<span class=\"n\">pycrafter4500</span><span class=\"o\">.</span><span class=\"n\">pattern_mode</span><span class=\"p\">(</span><span class=\"n\">num_pats</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                           <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"mi\">222</span><span class=\"p\">,</span>\n                           <span class=\"n\">bit_depth</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span>\n                           <span class=\"n\">led_color</span><span class=\"o\">=</span><span class=\"mb\">0b111</span><span class=\"p\">,</span>  <span class=\"c1\"># BGR flags                 </span>\n                           <span class=\"p\">)</span>\n</pre>\n<p>If you wish to send other commands, this can be done using the dlpc350 class. See source documentation for further details.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycrafter4500</span> <span class=\"kn\">import</span> <span class=\"n\">dlpc350</span><span class=\"p\">,</span> <span class=\"n\">connect_usb</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pycrafter4500</span> <span class=\"kn\">import</span> <span class=\"n\">bits_to_bytes</span><span class=\"p\">,</span> <span class=\"n\">conv_len</span>\n\n<span class=\"k\">with</span> <span class=\"n\">connect_usb</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">lcr</span><span class=\"p\">:</span>\n    <span class=\"n\">lcr</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">CMD2</span><span class=\"p\">,</span> <span class=\"n\">CMD3</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5986607, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bd99e541e7d46fcbc4c6eea89747ead3", "sha256": "2cae3205ee0c29bbec24a75653cb925b39f0776e34508d3f85c1818413a22631"}, "downloads": -1, "filename": "pycrafter4500-0.1.tar.gz", "has_sig": false, "md5_digest": "bd99e541e7d46fcbc4c6eea89747ead3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5996, "upload_time": "2017-07-06T18:47:49", "upload_time_iso_8601": "2017-07-06T18:47:49.285367Z", "url": "https://files.pythonhosted.org/packages/3a/4f/3fdee81733317af0fb63ae7f2e9df3e6fc1e20173dc30f9e90fa82a3ee8c/pycrafter4500-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "deca5c8dcb694cf4bd2bebfd0953f768", "sha256": "4810fe35c02ed0689bb4c2233bc99dddb971a745a57975b42ff29f40dc913447"}, "downloads": -1, "filename": "pycrafter4500-0.2.tar.gz", "has_sig": false, "md5_digest": "deca5c8dcb694cf4bd2bebfd0953f768", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5959, "upload_time": "2017-07-06T18:55:05", "upload_time_iso_8601": "2017-07-06T18:55:05.281063Z", "url": "https://files.pythonhosted.org/packages/88/bb/a7a4f5bbe246b2d2f60d42f31b5cf17f25505670ba2a17053caa11106fad/pycrafter4500-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "fdb282f761453998859784f2ddc738c7", "sha256": "d2192a577fd9d3ba0623761eab32b845ea890232c7f534d5d84524011f8ba08e"}, "downloads": -1, "filename": "pycrafter4500-0.3.tar.gz", "has_sig": false, "md5_digest": "fdb282f761453998859784f2ddc738c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5961, "upload_time": "2017-07-06T21:07:09", "upload_time_iso_8601": "2017-07-06T21:07:09.722450Z", "url": "https://files.pythonhosted.org/packages/fa/55/60c80df65a2d3f9a2711edfbb8f860847c419d4b224cc15ad06a3bd925a2/pycrafter4500-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6f5a0dda714b0fe24f04df357a12dc28", "sha256": "5864e5a6ba082ab7c9b048f456853a9288c268a08d5a1352c72d1e8dbcc98442"}, "downloads": -1, "filename": "pycrafter4500-0.4.tar.gz", "has_sig": false, "md5_digest": "6f5a0dda714b0fe24f04df357a12dc28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5967, "upload_time": "2017-07-06T21:32:35", "upload_time_iso_8601": "2017-07-06T21:32:35.147978Z", "url": "https://files.pythonhosted.org/packages/2e/1c/bf6a5b2f806769c693f782e6980b013fa3fb5ee9c5797a2266c7bb2beeea/pycrafter4500-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "b7f8e045e9840f0f7c9d77164e291766", "sha256": "dc72b3cad4455d945b178c79fde11655e2ec218918783875d73532ab9eb0874d"}, "downloads": -1, "filename": "pycrafter4500-0.5.tar.gz", "has_sig": false, "md5_digest": "b7f8e045e9840f0f7c9d77164e291766", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5951, "upload_time": "2018-03-08T18:32:06", "upload_time_iso_8601": "2018-03-08T18:32:06.988890Z", "url": "https://files.pythonhosted.org/packages/f0/bc/24618f99d7168c158db4360519df14a3376fe144cdf87722b30233941593/pycrafter4500-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "1dc6e2a2b70910d0f880432d0caeda43", "sha256": "678e51935131e0ed724ec40fe47fae157fa84b9c78f8e64b796fc9c4503d06d6"}, "downloads": -1, "filename": "pycrafter4500-0.6.tar.gz", "has_sig": false, "md5_digest": "1dc6e2a2b70910d0f880432d0caeda43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7147, "upload_time": "2019-10-16T22:07:19", "upload_time_iso_8601": "2019-10-16T22:07:19.840019Z", "url": "https://files.pythonhosted.org/packages/fc/46/f5dd50b8cc8a757992c04e403de3835590929715a381e3c85645a2881c52/pycrafter4500-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1dc6e2a2b70910d0f880432d0caeda43", "sha256": "678e51935131e0ed724ec40fe47fae157fa84b9c78f8e64b796fc9c4503d06d6"}, "downloads": -1, "filename": "pycrafter4500-0.6.tar.gz", "has_sig": false, "md5_digest": "1dc6e2a2b70910d0f880432d0caeda43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7147, "upload_time": "2019-10-16T22:07:19", "upload_time_iso_8601": "2019-10-16T22:07:19.840019Z", "url": "https://files.pythonhosted.org/packages/fc/46/f5dd50b8cc8a757992c04e403de3835590929715a381e3c85645a2881c52/pycrafter4500-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:49 2020"}