{"info": {"author": "Facundo Batista, Nicol\u00e1s Demarchi", "author_email": "facundo@taniquetil.com.ar, mail@gilgamezh.me", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Natural Language :: Spanish", "Operating System :: MacOS", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development", "Topic :: Utilities"], "description": "What is fades?\n==============\n\n\n.. image:: https://travis-ci.org/PyAr/fades.svg?branch=master\n    :target: https://travis-ci.org/PyAr/fades\n.. image:: https://readthedocs.org/projects/fades/badge/?version=latest\n    :target: http://fades.readthedocs.org/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://badge.fury.io/py/fades.svg\n    :target: https://badge.fury.io/py/fades\n.. image:: https://coveralls.io/repos/PyAr/fades/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/PyAr/fades?branch=master\n.. image:: https://build.snapcraft.io/badge/PyAr/fades.svg\n    :target: https://build.snapcraft.io/user/PyAr/fades\n    :alt: Snap Status\n.. image:: https://ci.appveyor.com/api/projects/status/crkqv82t1l731fms/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/facundobatista/fades\n    :alt: Appveyor Status\n\n\nfades is a system that automatically handles the virtualenvs in the\ncases normally found when writing scripts and simple programs, and\neven helps to administer big projects.\n\n.. image:: resources/logo256.png\n\n*fades* will automagically create a new virtualenv (or reuse a previous\ncreated one), installing the necessary dependencies, and execute\nyour script inside that virtualenv, with the only requirement\nof executing the script with *fades* and also marking the required\ndependencies.\n\n*(If you don't have a clue why this is necessary or useful, I'd recommend you\nto read this small text about* `Python and the Management of Dependencies\n<https://github.com/PyAr/fades/blob/master/docs/pydepmanag.rst>`_ *.)*\n\nThe first non-option parameter (if any) would be then the child program\nto execute, and any other parameters after that are passed as is to that\nchild script.\n\n*fades* can also be executed without passing a child script to execute:\nin this mode it will open a Python interactive interpreter inside the\ncreated/reused virtualenv (taking dependencies from ``--dependency`` or\n``--requirement`` options).\n\n.. contents::\n\n\nHow to use it?\n==============\n\nClick in the following image to see a video/screencast that shows most of\nfades features in just 5'...\n\n.. image:: resources/video/screenshot.png\n    :target: https://www.youtube.com/watch?v=BCTd_TyCm98\n\n...or inspect `these several small GIFs <resources/gifs/gifs.rst>`_ that\nshow each a particular `fades` functionality, but please keep also reading\nfor more detailed information...\n\n\nYes, please, I want to read\n---------------------------\n\nWhen you write an script, you have to take two special measures:\n\n- need to execute it with *fades* (not *python*)\n\n- need to mark those dependencies\n\nAt the moment you execute the script, fades will search a\nvirtualenv with the marked dependencies, if it doesn't exists\nfades will create it, and execute the script in that environment.\n\n\nHow to execute the script with fades?\n-------------------------------------\n\nYou can always call your script directly with fades::\n\n    fades myscript.py\n\nHowever, for you to not forget about fades and to not execute it\ndirectly with python, it's better if you put at the beggining of\nthe script the indication for the operating system that it should\nbe executed with fades... ::\n\n    #!/usr/bin/fades\n\n...and also set the executable bit in the script::\n\n    chmod +x yourscript.py\n\n\nHow to mark the dependencies to be installed?\n---------------------------------------------\n\nThe procedure to mark a module imported by the script as a *dependency\nto be installed by fades* is by using a comment.\n\nThis comment will normally be in the same line of the import (recommended,\nless confusing and less error prone in the future), but it also can be in\nthe previous one.\n\nThe simplest comment is like::\n\n    import somemodule   # fades\n    from somepackage import othermodule    # fades\n\nThe ``fades`` is mandatory, in this examples the repository is PyPI,\nsee `About different repositories`_ below for other examples.\n\nWith that comment, *fades* will install automatically in the virtualenv the\n``somemodule`` or ``somepackage`` from PyPI.\n\nAlso, you can indicate a particular version condition, examples::\n\n    import somemodule   # fades == 3\n    import somemodule   # fades >= 2.1\n    import somemodule   # fades >=2.1,<2.8,!=2.6.5\n\nSometimes, the project itself doesn't match the name of the module; in\nthese cases you can specify the project name (optionally, before the\nversion)::\n\n    import bs4   # fades beautifulsoup4\n    import bs4   # fades beautifulsoup4 == 4.2\n\n\nOther ways to specify dependencies\n----------------------------------\n\nApart of marking the imports in the source file, there are other ways\nto tell *fades* which dependencies to install in the virtualenv.\n\nOne way is through command line, passing the ``--dependency`` parameter.\nThis option can be specified multiple times (once per dependency), and\neach time the format is ``repository::dependency``. The dependency may\nhave versions specifications, and the repository is optional (defaults\nto 'pypi').\n\nAnother way is to specify the dependencies in a text file, one dependency\nper line, with each line having the format previously described for\nthe ``--dependency`` parameter. This file is then indicated to fades\nthrough the ``--requirement`` parameter. This option can be specified\nmultiple times.\n\nIn case of multiple definitions of the same dependency, command line\noverrides everything else, and requirements file overrides what is\nspecified in the source code.\n\nFinally, you can include package names in the script docstring, after\na line where \"fades\" is written, until the end of the docstring;\nfor example::\n\n    \"\"\"Script to do stuff.\n\n    It's a very important script.\n\n    We need some dependencies to run ok, installed by fades:\n        request\n        otherpackage\n    \"\"\"\n\n\nAbout different repositories\n----------------------------\n\n*fades* supports installing the required dependencies from multiples repositories: besides PyPI, you can specify URLs that can point to projects from GitHub, Launchpad, etc. (basically, everything that is supported by ``pip`` itself).\n\nWhen a dependency is specified, *fades* deduces the proper repository. For example, in the following examples *fades* will install requests from the latest revision from PyPI in the first case, and in the second case the latest revision from the project itself from GitHub::\n\n    -d requests\n    -d git+https://github.com/kennethreitz/requests.git#egg=requests\n\nIf you prefer, you can be explicit about which kind of repository *fades* should use, prefixing the dependency with the special token double colon (``::``)::\n\n    -d pypi::requests\n    -d vcs::git+https://github.com/kennethreitz/requests.git#egg=requests\n\n\nThere are two basic repositories: ``pypi`` which will make *fades* to install the desired dependency from PyPI, and ``vcs``, which will make *fades* to treat the dependency as a URL for a version control system site. In the first case, for PyPI, a full range of version comparators can be specified, as usual. For ``vcs`` repositories, though, the comparison is always exact: if the very same dependency is specified, a *virtualenv* is reused, otherwise a new one will be created and populated.\n\nIn both cases (specifying the repository explicitly or implicitly) there is no difference if the dependency is specified in the command line, in a ``requirements.txt`` file, in the script's docstring, etc.  In the case of marking the ``import`` directly in the script, it slightly different.\n\nWhen marking the ``import`` it normally happens that the package itself to be installed has the name of the imported module, and because of that it can only be found in PyPI. So, in the following cases the ``pypi`` repository is not only deduced, but unavoidable::\n\n    import requests  # fades\n    from foo import bar  # fades\n    import requests  # fades <= 3\n\nBut if the package is specified (normally needed because it's different than the module name), or if a version control system URL is specified, the same possibilities stated above are available: let *fades* to deduce the proper repository or mark it explicitly::\n\n    import bs4  # fades beautifulsoup\n    import bs4  # fades pypi::beautifulsoup\n    import requests  # fades git+https://github.com/kennethreitz/requests.git#egg=requests\n    import requests  # fades vcs::git+https://github.com/kennethreitz/requests.git#egg=requests\n\nOne last detail about the ``vcs`` repository: the format to write the URLs is the same (as it's passed without modifications) than what ``pip`` itself supports (see `pip docs <https://pip.readthedocs.io/en/stable/reference/pip_install/#vcs-support>`_ for more details).\n\n\nHow to control the virtualenv creation and usage?\n-------------------------------------------------\n\nYou can influence several details of all the virtualenv related process.\n\nThe most important detail is which version of Python will be used in\nthe virtualenv. Of course, the corresponding version of Python needs to\nbe installed in your system, but you can control exactly which one to use.\n\nNo matter which way you're executing the script (see above), you can\npass a ``-p`` or ``--python`` argument, indicating the Python version to\nbe used just with the number (``2.7``), the whole name (``python2.7``) or\nthe whole path (``/usr/bin/python2.7``).\n\nOther detail is the verbosity of *fades* when telling what is doing. By\ndefault, *fades* only will use stderr to tell if a virtualenv is being\ncreated, and to let the user know that is doing an operation that\nrequires an active network connection (e.g. installing a new dependency).\n\nIf you call *fades* with ``-v`` or ``--verbose``, it will send all internal\ndebugging lines to stderr, which may be very useful if any problem arises.\nOn the other hand if you pass the ``-q`` or ``--quiet`` parameter, *fades*\nwill not show anything (unless it has a real problem), so the original\nscript stderr is not polluted at all.\n\nSometimes, you want to run a script provided by one of the dependencies\ninstalled into the virtualenv. *fades* supports this via the ``-x`` (\nor ``--exec`` argument). The parameter given to this option needs to be just\nthe executable name; it's an error to use this to execute anything outside\nthe venv's bin directory, just don't use this option and pass the executable\ndirectly if you want that.\n\nIf you want to use IPython shell you need to call *fades* with ``-i`` or\n``--ipython`` option. This option will add IPython as a dependency to *fades*\nand it will launch this shell instead of the python one.\n\nYou can also use ``--system-site-packages`` to create a venv with access to\nthe system libs.\n\nFinally, no matter how the virtualenv was created, you can always get the\nbase directory of the virtualenv in your system using the ``--get-venv-dir``\noption.\n\n\nHow to deal with packages that are upgraded in PyPI\n---------------------------------------------------\n\nWhen you tell *fades* to create a virtualenv using one dependency and\ndon't specify a version, it will install the latest one from PyPI.\n\nFor example, you do ``fades -d foobar`` and it installs foobar in\nversion 7. At some point, there is a new version of foobar in PyPI,\nversion 8, but if do ``fades -d foobar`` it will just reuse previously\ncreated virtualenv, with version 7, not downloading the new version and\ncreating a new virtualenv with it!\n\nYou can tell fades to do otherwise, just do::\n\n    fades -d foobar --check-updates\n\n...and *fades* will search updates for the package on PyPI, and as it will\nfound version 8, will create a new virtualenv using the latest version.\n\nFrom this moment on, if you request ``fades -d foobar`` it will bring the\nvirtualenv with the new version. If you want to get a virtualenv with\nnot-the-latest version for any dependency, just specify the proper versions.\n\nYou can even use the ``--check-updates`` parameter when specifying the package\nversion. Say you call ``fades -d foobar==7``, *fades* will install version 7 no\nmatter which one is the latest. But if you do::\n\n    fades -d foobar==7 --check-updates\n\n...it will still use version 7, but will inform you that a new version\nis available!\n\n\nUnder the hood options\n----------------------\n\nFor particular use cases you can send specifics arguments to ``virtualenv``, ``pip`` and ``python``. using the\n``--virtuaenv-options``, ``--pip-options`` and ``--python-options`` respectively. You have to use that argument for each argument\nsent.\n\nExamples:\n\n``fades -d requests --virtualenv-options=\"--always-copy\" --virtualenv-options=\"--extra-search-dir=/tmp\"``\n\n``fades -d requests --pip-options=\"--index-url='http://example.com'\"``\n\n``fades --python-options=-B foo.py``\n\n\nSetting options using config files\n----------------------------------\n\nYou can also configure fades using `.ini` config files. fades will search config files in\n`/etc/fades/fades.ini`, the path indicated by `xdg` for your system\n(for example `~/config/fades/fades.ini`) and `.fades.ini`.\n\nSo you can have different settings at system, user and project level.\n\nWith fades installed you can get your config dir running::\n\n    python -c \"from fades.helpers import get_confdir; print(get_confdir())\"\n\n\nThe config files are in `.ini` format. (configparser) and fades will search for a `[fades]` section.\n\nYou have to use the same configurations that in the CLI. The only difference is with the config\noptions with a dash, it has to be replaced with a underscore.::\n\n    [fades]\n    ipython=true\n    verbose=true\n    python=python3\n    check_updates=true\n    dependency=requests;django>=1.8  # separated by semicolon\n\nThere is a little difference in how fades handle these settings: \"dependency\", \"pip-options\" and\n\"virtualenv-options\". In these cases you have to use a semicolon separated list.\n\nThe most important thing is that these options will be merged. So if you configure in\n`/etc/fades/fades.ini` \"dependency=requests\" you will have requests in all the virtualenvs\ncreated by fades.\n\n\nHow to clean up old virtualenvs?\n--------------------------------\n\nWhen using *fades* virtual environments are something you should not have to think about.\n*fades* will do the right thing and create a new virtualenv that matches the required\ndependencies. There are cases however when you'll want to do some clean up to remove\nunnecessary virtual environments from disk.\n\nBy running *fades* with the ``--rm`` argument, *fades* will remove the\nvirtualenv matching the provided UUID if such a virtualenv exists (one easy\nway to find out the virtualenv's UUID is calling *fades* with the\n``--get-venv-dir`` option.\n\nAnother way to clean up the cache is to remove all venvs that haven't been used for some time.\nIn order to do this you need to call *fades* with ``--clean-unused-venvs``.\nWhen fades it's called with this option, it runs in mantain mode, this means that fades will exit\nafter finished this task.\nAll virtualenvs that haven't been used for more days than the value indicated in param will be\nremoved.\n\nIt is recommended to have some automatically way of run this option;\nie, add a cron task that perform this command::\n\n    fades --clean-unused-venvs=42\n\n\nSome command line examples\n--------------------------\n\n``fades foo.py --bar``\n\nExecutes ``foo.py`` under *fades*, passing the ``--bar`` parameter to the child program, in a virtualenv with the dependencies indicated in the source code.\n\n``fades -v foo.py``\n\nExecutes ``foo.py`` under *fades*, showing all the *fades* messages (verbose mode).\n\n``fades -d dependency1 -d dependency2>3.2 foo.py --bar``\n\nExecutes ``foo.py`` under *fades* (passing the ``--bar`` parameter to it), in a virtualenv with the dependencies indicated in the source code and also ``dependency1`` and ``dependency2`` (any version > 3.2).\n\n``fades -d dependency1``\n\nExecutes the Python interactive interpreter in a virtualenv with ``dependency1`` installed.\n\n``fades -r requirements.txt``\n\nExecutes the Python interactive interpreter in a virtualenv after installing there all dependencies taken from the ``requirements.txt`` file.\n\n``fades -r requirements.txt -r requirements_devel.txt``\n\nExecutes the Python interactive interpreter in a virtualenv after installing there all dependencies taken from files ``requirements.txt`` and ``requirements_devel.txt``.\n\n``fades -d django -x django-admin.py startproject foo``\n\nUses the ``django-admin.py`` script to start a new project named ``foo``, without having to have django previously installed.\n\n``fades --rm 89a2bf83-c280-4918-a78d-c35506efd69d``\n\nRemoves a virtualenv matching the given uuid from disk and cache index.\n\n\nWhat if Python is updated in my system?\n---------------------------------------\n\nThe virtualenvs created by fades depend on the Python version used to\ncreate them, considering its major and minor version.\n\nThis means that if run fades with a Python version and then run it again\nwith a different Python version, it may need to create a new virtualenv.\n\nLet's see some examples. Let's say you run fades with ``python``, which\nis a symlink in your ``/usr/bin/`` to ``python3.4`` (running it directly\nby hand or because fades is installed to use that Python version).\n\nIf you have Python 3.4.2 installed in your system, and it's upgraded to\nPython 3.4.3, fades will keep reusing the already created virtualenvs, as\nonly the micro version changed, not minor or major.\n\nBut if Python 3.5 is installed in your system, and the default ``python``\nis pointed to this new one, fades will start creating all the\nvirtualenvs again, with this new version.\n\nThis is a good thing, because you want that the dependencies installed\nwith one specific Python in the virtualenv are kept being used by the\nsame Python version.\n\nHowever, if you want to avoid this behaviour, be sure to always call fades\nwith the specific Python version (``/usr/bin/python3.4`` or ``python3.4``,\nfor example), so it won't matter if a new version is available in the\nsystem.\n\n\nHow to install it\n=================\n\nSeveral instructions to install ``fades`` in different platforms.\n\nSimplest way\n------------\n\nIn some systems you can install ``fades`` directly, no needing to\ninstall previously any dependency.\n\nIf you are in debian unstable or testing, just do (but probably you will not\nget the latest version, see below for alternative installation methods):\n\n    sudo apt-get install fades\n\nFor Arch linux:\n\n    yaourt -S fades\n\nIn systems with Snaps:\n\n    snap install fades\n\nFor Mac OS X (and `Homebrew <http://brew.sh/>`_):\n\n    brew install fades\n\nElse, keep reading to know how to install the dependencies first, and\n``fades`` in your system next.\n\n\nDependencies\n------------\n\nBesides needing Python 3.3 or greater, fades depends also on the\n``pkg_resources`` package, that comes in with ``setuptools``.\nIt's installed almost everywhere, but in any case,\nyou can install it in Ubuntu/Debian with::\n\n    apt-get install python3-setuptools\n\nAnd on Archlinux with::\n\n    pacman -S python-setuptools\n\nIt also depends on ``python-xdg`` package. This package should be\ninstalled on any GNU/Linux OS wiht a freedesktop.org GUI. However it\nis an **optional** dependency.\n\nYou can install it in Ubuntu/Debian with::\n\n    apt-get install python3-xdg\n\nAnd on Archlinux with::\n\n    pacman -S python-xdg\n\nFades also needs the `virtualenv <https://virtualenv.pypa.io/en/latest/>` package to\nsupport different Python versions for child execution. (see `--python` argument.)\n\n\nFor others debian and ubuntu\n----------------------------\n\nIf you are NOT in debian unstable or testing (if you are, see\nabove for better instructions), you can use this\n`.deb <http://taniquetil.com.ar/fades/fades-latest.deb>`_.\n\nDownload it and install doing::\n\n    sudo dpkg -i fades-latest.deb\n\n\nUsing pip if you want\n----------------------\n::\n\n    pip3 install fades\n\n\nMultiplatform tarball\n---------------------\n\nFinally you can always get the multiplatform tarball and install\nit in the old fashion way::\n\n    wget http://taniquetil.com.ar/fades/fades-latest.tar.gz\n    tar -xf fades-latest.tar.gz\n    cd fades-*\n    sudo ./setup.py install\n\n\nCan I try it without installing it?\n-----------------------------------\n\nYes! Branch the project and use the executable::\n\n    git clone https://github.com/PyAr/fades.git\n    cd fades\n    bin/fades your_script.py\n\n\nWhat about Windows?\n-------------------\n\nWindows is a platform supported by fades.\n\nHowever, we don't have a proper Windows installer (a ``.exe`` or\n``.msi``), but you can install it using ``pip``, or from the tarball,\nor try it directly from the project. All these options are properly\ndescribed above.\n\nWe *do* want to have a Windows installer. If you can help us in this\nregard, please contact us. Also we would want a Travis running in\nWindows so that GitHub runs all the tests in this platform too before\nlanding any code. Thanks!\n\n\nGet some help, give some feedback\n=================================\n\nYou can ask any question or send any recommendation or request to\nthe `mailing list <http://listas.python.org.ar/mailman/listinfo/fades>`_.\n\nCome chat with us on IRC. The #fades channel is located at the `Freenode <http://freenode.net/>`_ network.\n\nAlso, you can open an issue\n`here <https://github.com/PyAr/fades/issues/new>`_ (please do if you\nfind any problem!).\n\nThanks in advance for your time.\n\n\nHow to develop fades itself\n===========================\n\nQuick guide to get you up and running in fades development.\n\n\nGetting the code\n----------------\n\nClone the project::\n\n    git clone git@github.com:PyAr/fades.git\n\n\nInstall dependencies\n--------------------\n\n*fades* manages it's own dependencies, so there is nothing extra you need to install.\n\nTo try it, just do::\n\n    bin/fades -V\n\n\nHow to run the tests\n--------------------\n\nWhen starting development, at all times, and specially before wrapping up\na new branch, you need to be sure that all tests pass ok.\n\nThis is very simple, actually, just run::\n\n    ./test\n\nThat will not only check test cases, but also that the code complies with\naesthetic recommendations, and that the README document has a proper format.\n\nIf you want to run *one* particular test, just specify it. Example::\n\n    ./test tests.test_main:DepsMergingTestCase.test_two_different\n\n\nDevelopment process\n-------------------\n\nJust pick an issue from `the list <https://github.com/PyAr/fades/issues>`_.\n\nDevelop, assure ``./test`` is happy, commit, push, create a pull request, etc.\n\nPlease, if you aim for creating a Pull Request with new code (functionality\nor fixes), include tests for your changes.\n\nThanks! Enjoy.", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/PyAr/fades/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PyAr/fades", "keywords": "virtualenv utils utility scripts", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "fades", "package_url": "https://pypi.org/project/fades/", "platform": "", "project_url": "https://pypi.org/project/fades/", "project_urls": {"Download": "https://github.com/PyAr/fades/releases", "Homepage": "https://github.com/PyAr/fades"}, "release_url": "https://pypi.org/project/fades/8.1/", "requires_dist": null, "requires_python": ">=3.3", "summary": "A system that automatically handles the virtualenvs in the cases normally found when writing scripts and simple programs, and even helps to administer big projects.", "version": "8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-fades\">\n<h2><a href=\"#id1\" rel=\"nofollow\">What is fades?</a></h2>\n<a href=\"https://travis-ci.org/PyAr/fades\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/PyAr/fades.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee922111b1d5099d6d5befeac0117ca65b74cd26/68747470733a2f2f7472617669732d63692e6f72672f507941722f66616465732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://fades.readthedocs.org/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03ea1003c074f40cbaec7edac366e3e638bbbbce/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66616465732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://badge.fury.io/py/fades\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/fades.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cdefeb7b616aba3eb8db44a2e530ebc63a4eec8/68747470733a2f2f62616467652e667572792e696f2f70792f66616465732e737667\"></a>\n<a href=\"https://coveralls.io/github/PyAr/fades?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/PyAr/fades/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee71c4e916325bc21ef4547ace03ca35c2d66bff/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f507941722f66616465732f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<a href=\"https://build.snapcraft.io/user/PyAr/fades\" rel=\"nofollow\"><img alt=\"Snap Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dda443afbaa060962a7258b2323e84064447191d/68747470733a2f2f6275696c642e736e617063726166742e696f2f62616467652f507941722f66616465732e737667\"></a>\n<a href=\"https://ci.appveyor.com/project/facundobatista/fades\" rel=\"nofollow\"><img alt=\"Appveyor Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b384fa390b173da300a9e5d9f6c183e068c7da3f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f63726b7176383274316c373331666d732f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<p>fades is a system that automatically handles the virtualenvs in the\ncases normally found when writing scripts and simple programs, and\neven helps to administer big projects.</p>\n<img alt=\"resources/logo256.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7cc4f956ca58344b531d4b256a646a260d3a96ff/7265736f75726365732f6c6f676f3235362e706e67\">\n<p><em>fades</em> will automagically create a new virtualenv (or reuse a previous\ncreated one), installing the necessary dependencies, and execute\nyour script inside that virtualenv, with the only requirement\nof executing the script with <em>fades</em> and also marking the required\ndependencies.</p>\n<p><em>(If you don\u2019t have a clue why this is necessary or useful, I\u2019d recommend you\nto read this small text about</em> <a href=\"https://github.com/PyAr/fades/blob/master/docs/pydepmanag.rst\" rel=\"nofollow\">Python and the Management of Dependencies</a> <em>.)</em></p>\n<p>The first non-option parameter (if any) would be then the child program\nto execute, and any other parameters after that are passed as is to that\nchild script.</p>\n<p><em>fades</em> can also be executed without passing a child script to execute:\nin this mode it will open a Python interactive interpreter inside the\ncreated/reused virtualenv (taking dependencies from <tt><span class=\"pre\">--dependency</span></tt> or\n<tt><span class=\"pre\">--requirement</span></tt> options).</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#what-is-fades\" id=\"id1\" rel=\"nofollow\">What is fades?</a></li>\n<li><a href=\"#how-to-use-it\" id=\"id2\" rel=\"nofollow\">How to use it?</a><ul>\n<li><a href=\"#yes-please-i-want-to-read\" id=\"id3\" rel=\"nofollow\">Yes, please, I want to read</a></li>\n<li><a href=\"#how-to-execute-the-script-with-fades\" id=\"id4\" rel=\"nofollow\">How to execute the script with fades?</a></li>\n<li><a href=\"#how-to-mark-the-dependencies-to-be-installed\" id=\"id5\" rel=\"nofollow\">How to mark the dependencies to be installed?</a></li>\n<li><a href=\"#other-ways-to-specify-dependencies\" id=\"id6\" rel=\"nofollow\">Other ways to specify dependencies</a></li>\n<li><a href=\"#about-different-repositories\" id=\"id7\" rel=\"nofollow\">About different repositories</a></li>\n<li><a href=\"#how-to-control-the-virtualenv-creation-and-usage\" id=\"id8\" rel=\"nofollow\">How to control the virtualenv creation and usage?</a></li>\n<li><a href=\"#how-to-deal-with-packages-that-are-upgraded-in-pypi\" id=\"id9\" rel=\"nofollow\">How to deal with packages that are upgraded in PyPI</a></li>\n<li><a href=\"#under-the-hood-options\" id=\"id10\" rel=\"nofollow\">Under the hood options</a></li>\n<li><a href=\"#setting-options-using-config-files\" id=\"id11\" rel=\"nofollow\">Setting options using config files</a></li>\n<li><a href=\"#how-to-clean-up-old-virtualenvs\" id=\"id12\" rel=\"nofollow\">How to clean up old virtualenvs?</a></li>\n<li><a href=\"#some-command-line-examples\" id=\"id13\" rel=\"nofollow\">Some command line examples</a></li>\n<li><a href=\"#what-if-python-is-updated-in-my-system\" id=\"id14\" rel=\"nofollow\">What if Python is updated in my system?</a></li>\n</ul>\n</li>\n<li><a href=\"#how-to-install-it\" id=\"id15\" rel=\"nofollow\">How to install it</a><ul>\n<li><a href=\"#simplest-way\" id=\"id16\" rel=\"nofollow\">Simplest way</a></li>\n<li><a href=\"#dependencies\" id=\"id17\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#for-others-debian-and-ubuntu\" id=\"id18\" rel=\"nofollow\">For others debian and ubuntu</a></li>\n<li><a href=\"#using-pip-if-you-want\" id=\"id19\" rel=\"nofollow\">Using pip if you want</a></li>\n<li><a href=\"#multiplatform-tarball\" id=\"id20\" rel=\"nofollow\">Multiplatform tarball</a></li>\n<li><a href=\"#can-i-try-it-without-installing-it\" id=\"id21\" rel=\"nofollow\">Can I try it without installing it?</a></li>\n<li><a href=\"#what-about-windows\" id=\"id22\" rel=\"nofollow\">What about Windows?</a></li>\n</ul>\n</li>\n<li><a href=\"#get-some-help-give-some-feedback\" id=\"id23\" rel=\"nofollow\">Get some help, give some feedback</a></li>\n<li><a href=\"#how-to-develop-fades-itself\" id=\"id24\" rel=\"nofollow\">How to develop fades itself</a><ul>\n<li><a href=\"#getting-the-code\" id=\"id25\" rel=\"nofollow\">Getting the code</a></li>\n<li><a href=\"#install-dependencies\" id=\"id26\" rel=\"nofollow\">Install dependencies</a></li>\n<li><a href=\"#how-to-run-the-tests\" id=\"id27\" rel=\"nofollow\">How to run the tests</a></li>\n<li><a href=\"#development-process\" id=\"id28\" rel=\"nofollow\">Development process</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"how-to-use-it\">\n<h2><a href=\"#id2\" rel=\"nofollow\">How to use it?</a></h2>\n<p>Click in the following image to see a video/screencast that shows most of\nfades features in just 5\u2019\u2026</p>\n<a href=\"https://www.youtube.com/watch?v=BCTd_TyCm98\" rel=\"nofollow\"><img alt=\"resources/video/screenshot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c77aabe9ff292c7e4d17c4085398c44e260e7eeb/7265736f75726365732f766964656f2f73637265656e73686f742e706e67\"></a>\n<p>\u2026or inspect <a href=\"resources/gifs/gifs.rst\" rel=\"nofollow\">these several small GIFs</a> that\nshow each a particular <cite>fades</cite> functionality, but please keep also reading\nfor more detailed information\u2026</p>\n<div id=\"yes-please-i-want-to-read\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Yes, please, I want to read</a></h3>\n<p>When you write an script, you have to take two special measures:</p>\n<ul>\n<li>need to execute it with <em>fades</em> (not <em>python</em>)</li>\n<li>need to mark those dependencies</li>\n</ul>\n<p>At the moment you execute the script, fades will search a\nvirtualenv with the marked dependencies, if it doesn\u2019t exists\nfades will create it, and execute the script in that environment.</p>\n</div>\n<div id=\"how-to-execute-the-script-with-fades\">\n<h3><a href=\"#id4\" rel=\"nofollow\">How to execute the script with fades?</a></h3>\n<p>You can always call your script directly with fades:</p>\n<pre>fades myscript.py\n</pre>\n<p>However, for you to not forget about fades and to not execute it\ndirectly with python, it\u2019s better if you put at the beggining of\nthe script the indication for the operating system that it should\nbe executed with fades\u2026</p>\n<pre>#!/usr/bin/fades\n</pre>\n<p>\u2026and also set the executable bit in the script:</p>\n<pre>chmod +x yourscript.py\n</pre>\n</div>\n<div id=\"how-to-mark-the-dependencies-to-be-installed\">\n<h3><a href=\"#id5\" rel=\"nofollow\">How to mark the dependencies to be installed?</a></h3>\n<p>The procedure to mark a module imported by the script as a <em>dependency\nto be installed by fades</em> is by using a comment.</p>\n<p>This comment will normally be in the same line of the import (recommended,\nless confusing and less error prone in the future), but it also can be in\nthe previous one.</p>\n<p>The simplest comment is like:</p>\n<pre>import somemodule   # fades\nfrom somepackage import othermodule    # fades\n</pre>\n<p>The <tt>fades</tt> is mandatory, in this examples the repository is PyPI,\nsee <a href=\"#about-different-repositories\" rel=\"nofollow\">About different repositories</a> below for other examples.</p>\n<p>With that comment, <em>fades</em> will install automatically in the virtualenv the\n<tt>somemodule</tt> or <tt>somepackage</tt> from PyPI.</p>\n<p>Also, you can indicate a particular version condition, examples:</p>\n<pre>import somemodule   # fades == 3\nimport somemodule   # fades &gt;= 2.1\nimport somemodule   # fades &gt;=2.1,&lt;2.8,!=2.6.5\n</pre>\n<p>Sometimes, the project itself doesn\u2019t match the name of the module; in\nthese cases you can specify the project name (optionally, before the\nversion):</p>\n<pre>import bs4   # fades beautifulsoup4\nimport bs4   # fades beautifulsoup4 == 4.2\n</pre>\n</div>\n<div id=\"other-ways-to-specify-dependencies\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Other ways to specify dependencies</a></h3>\n<p>Apart of marking the imports in the source file, there are other ways\nto tell <em>fades</em> which dependencies to install in the virtualenv.</p>\n<p>One way is through command line, passing the <tt><span class=\"pre\">--dependency</span></tt> parameter.\nThis option can be specified multiple times (once per dependency), and\neach time the format is <tt><span class=\"pre\">repository::dependency</span></tt>. The dependency may\nhave versions specifications, and the repository is optional (defaults\nto \u2018pypi\u2019).</p>\n<p>Another way is to specify the dependencies in a text file, one dependency\nper line, with each line having the format previously described for\nthe <tt><span class=\"pre\">--dependency</span></tt> parameter. This file is then indicated to fades\nthrough the <tt><span class=\"pre\">--requirement</span></tt> parameter. This option can be specified\nmultiple times.</p>\n<p>In case of multiple definitions of the same dependency, command line\noverrides everything else, and requirements file overrides what is\nspecified in the source code.</p>\n<p>Finally, you can include package names in the script docstring, after\na line where \u201cfades\u201d is written, until the end of the docstring;\nfor example:</p>\n<pre>\"\"\"Script to do stuff.\n\nIt's a very important script.\n\nWe need some dependencies to run ok, installed by fades:\n    request\n    otherpackage\n\"\"\"\n</pre>\n</div>\n<div id=\"about-different-repositories\">\n<h3><a href=\"#id7\" rel=\"nofollow\">About different repositories</a></h3>\n<p><em>fades</em> supports installing the required dependencies from multiples repositories: besides PyPI, you can specify URLs that can point to projects from GitHub, Launchpad, etc. (basically, everything that is supported by <tt>pip</tt> itself).</p>\n<p>When a dependency is specified, <em>fades</em> deduces the proper repository. For example, in the following examples <em>fades</em> will install requests from the latest revision from PyPI in the first case, and in the second case the latest revision from the project itself from GitHub:</p>\n<pre>-d requests\n-d git+https://github.com/kennethreitz/requests.git#egg=requests\n</pre>\n<p>If you prefer, you can be explicit about which kind of repository <em>fades</em> should use, prefixing the dependency with the special token double colon (<tt>::</tt>):</p>\n<pre>-d pypi::requests\n-d vcs::git+https://github.com/kennethreitz/requests.git#egg=requests\n</pre>\n<p>There are two basic repositories: <tt>pypi</tt> which will make <em>fades</em> to install the desired dependency from PyPI, and <tt>vcs</tt>, which will make <em>fades</em> to treat the dependency as a URL for a version control system site. In the first case, for PyPI, a full range of version comparators can be specified, as usual. For <tt>vcs</tt> repositories, though, the comparison is always exact: if the very same dependency is specified, a <em>virtualenv</em> is reused, otherwise a new one will be created and populated.</p>\n<p>In both cases (specifying the repository explicitly or implicitly) there is no difference if the dependency is specified in the command line, in a <tt>requirements.txt</tt> file, in the script\u2019s docstring, etc.  In the case of marking the <tt>import</tt> directly in the script, it slightly different.</p>\n<p>When marking the <tt>import</tt> it normally happens that the package itself to be installed has the name of the imported module, and because of that it can only be found in PyPI. So, in the following cases the <tt>pypi</tt> repository is not only deduced, but unavoidable:</p>\n<pre>import requests  # fades\nfrom foo import bar  # fades\nimport requests  # fades &lt;= 3\n</pre>\n<p>But if the package is specified (normally needed because it\u2019s different than the module name), or if a version control system URL is specified, the same possibilities stated above are available: let <em>fades</em> to deduce the proper repository or mark it explicitly:</p>\n<pre>import bs4  # fades beautifulsoup\nimport bs4  # fades pypi::beautifulsoup\nimport requests  # fades git+https://github.com/kennethreitz/requests.git#egg=requests\nimport requests  # fades vcs::git+https://github.com/kennethreitz/requests.git#egg=requests\n</pre>\n<p>One last detail about the <tt>vcs</tt> repository: the format to write the URLs is the same (as it\u2019s passed without modifications) than what <tt>pip</tt> itself supports (see <a href=\"https://pip.readthedocs.io/en/stable/reference/pip_install/#vcs-support\" rel=\"nofollow\">pip docs</a> for more details).</p>\n</div>\n<div id=\"how-to-control-the-virtualenv-creation-and-usage\">\n<h3><a href=\"#id8\" rel=\"nofollow\">How to control the virtualenv creation and usage?</a></h3>\n<p>You can influence several details of all the virtualenv related process.</p>\n<p>The most important detail is which version of Python will be used in\nthe virtualenv. Of course, the corresponding version of Python needs to\nbe installed in your system, but you can control exactly which one to use.</p>\n<p>No matter which way you\u2019re executing the script (see above), you can\npass a <tt><span class=\"pre\">-p</span></tt> or <tt><span class=\"pre\">--python</span></tt> argument, indicating the Python version to\nbe used just with the number (<tt>2.7</tt>), the whole name (<tt>python2.7</tt>) or\nthe whole path (<tt>/usr/bin/python2.7</tt>).</p>\n<p>Other detail is the verbosity of <em>fades</em> when telling what is doing. By\ndefault, <em>fades</em> only will use stderr to tell if a virtualenv is being\ncreated, and to let the user know that is doing an operation that\nrequires an active network connection (e.g. installing a new dependency).</p>\n<p>If you call <em>fades</em> with <tt><span class=\"pre\">-v</span></tt> or <tt><span class=\"pre\">--verbose</span></tt>, it will send all internal\ndebugging lines to stderr, which may be very useful if any problem arises.\nOn the other hand if you pass the <tt><span class=\"pre\">-q</span></tt> or <tt><span class=\"pre\">--quiet</span></tt> parameter, <em>fades</em>\nwill not show anything (unless it has a real problem), so the original\nscript stderr is not polluted at all.</p>\n<p>Sometimes, you want to run a script provided by one of the dependencies\ninstalled into the virtualenv. <em>fades</em> supports this via the <tt><span class=\"pre\">-x</span></tt> (\nor <tt><span class=\"pre\">--exec</span></tt> argument). The parameter given to this option needs to be just\nthe executable name; it\u2019s an error to use this to execute anything outside\nthe venv\u2019s bin directory, just don\u2019t use this option and pass the executable\ndirectly if you want that.</p>\n<p>If you want to use IPython shell you need to call <em>fades</em> with <tt><span class=\"pre\">-i</span></tt> or\n<tt><span class=\"pre\">--ipython</span></tt> option. This option will add IPython as a dependency to <em>fades</em>\nand it will launch this shell instead of the python one.</p>\n<p>You can also use <tt><span class=\"pre\">--system-site-packages</span></tt> to create a venv with access to\nthe system libs.</p>\n<p>Finally, no matter how the virtualenv was created, you can always get the\nbase directory of the virtualenv in your system using the <tt><span class=\"pre\">--get-venv-dir</span></tt>\noption.</p>\n</div>\n<div id=\"how-to-deal-with-packages-that-are-upgraded-in-pypi\">\n<h3><a href=\"#id9\" rel=\"nofollow\">How to deal with packages that are upgraded in PyPI</a></h3>\n<p>When you tell <em>fades</em> to create a virtualenv using one dependency and\ndon\u2019t specify a version, it will install the latest one from PyPI.</p>\n<p>For example, you do <tt>fades <span class=\"pre\">-d</span> foobar</tt> and it installs foobar in\nversion 7. At some point, there is a new version of foobar in PyPI,\nversion 8, but if do <tt>fades <span class=\"pre\">-d</span> foobar</tt> it will just reuse previously\ncreated virtualenv, with version 7, not downloading the new version and\ncreating a new virtualenv with it!</p>\n<p>You can tell fades to do otherwise, just do:</p>\n<pre>fades -d foobar --check-updates\n</pre>\n<p>\u2026and <em>fades</em> will search updates for the package on PyPI, and as it will\nfound version 8, will create a new virtualenv using the latest version.</p>\n<p>From this moment on, if you request <tt>fades <span class=\"pre\">-d</span> foobar</tt> it will bring the\nvirtualenv with the new version. If you want to get a virtualenv with\nnot-the-latest version for any dependency, just specify the proper versions.</p>\n<p>You can even use the <tt><span class=\"pre\">--check-updates</span></tt> parameter when specifying the package\nversion. Say you call <tt>fades <span class=\"pre\">-d</span> <span class=\"pre\">foobar==7</span></tt>, <em>fades</em> will install version 7 no\nmatter which one is the latest. But if you do:</p>\n<pre>fades -d foobar==7 --check-updates\n</pre>\n<p>\u2026it will still use version 7, but will inform you that a new version\nis available!</p>\n</div>\n<div id=\"under-the-hood-options\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Under the hood options</a></h3>\n<p>For particular use cases you can send specifics arguments to <tt>virtualenv</tt>, <tt>pip</tt> and <tt>python</tt>. using the\n<tt><span class=\"pre\">--virtuaenv-options</span></tt>, <tt><span class=\"pre\">--pip-options</span></tt> and <tt><span class=\"pre\">--python-options</span></tt> respectively. You have to use that argument for each argument\nsent.</p>\n<p>Examples:</p>\n<p><tt>fades <span class=\"pre\">-d</span> requests <span class=\"pre\">--virtualenv-options=\"--always-copy\"</span> <span class=\"pre\">--virtualenv-options=\"--extra-search-dir=/tmp\"</span></tt></p>\n<p><tt>fades <span class=\"pre\">-d</span> requests <span class=\"pre\">--pip-options=\"--index-url='http://example.com'\"</span></tt></p>\n<p><tt>fades <span class=\"pre\">--python-options=-B</span> foo.py</tt></p>\n</div>\n<div id=\"setting-options-using-config-files\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Setting options using config files</a></h3>\n<p>You can also configure fades using <cite>.ini</cite> config files. fades will search config files in\n<cite>/etc/fades/fades.ini</cite>, the path indicated by <cite>xdg</cite> for your system\n(for example <cite>~/config/fades/fades.ini</cite>) and <cite>.fades.ini</cite>.</p>\n<p>So you can have different settings at system, user and project level.</p>\n<p>With fades installed you can get your config dir running:</p>\n<pre>python -c \"from fades.helpers import get_confdir; print(get_confdir())\"\n</pre>\n<p>The config files are in <cite>.ini</cite> format. (configparser) and fades will search for a <cite>[fades]</cite> section.</p>\n<p>You have to use the same configurations that in the CLI. The only difference is with the config\noptions with a dash, it has to be replaced with a underscore.:</p>\n<pre>[fades]\nipython=true\nverbose=true\npython=python3\ncheck_updates=true\ndependency=requests;django&gt;=1.8  # separated by semicolon\n</pre>\n<p>There is a little difference in how fades handle these settings: \u201cdependency\u201d, \u201cpip-options\u201d and\n\u201cvirtualenv-options\u201d. In these cases you have to use a semicolon separated list.</p>\n<p>The most important thing is that these options will be merged. So if you configure in\n<cite>/etc/fades/fades.ini</cite> \u201cdependency=requests\u201d you will have requests in all the virtualenvs\ncreated by fades.</p>\n</div>\n<div id=\"how-to-clean-up-old-virtualenvs\">\n<h3><a href=\"#id12\" rel=\"nofollow\">How to clean up old virtualenvs?</a></h3>\n<p>When using <em>fades</em> virtual environments are something you should not have to think about.\n<em>fades</em> will do the right thing and create a new virtualenv that matches the required\ndependencies. There are cases however when you\u2019ll want to do some clean up to remove\nunnecessary virtual environments from disk.</p>\n<p>By running <em>fades</em> with the <tt><span class=\"pre\">--rm</span></tt> argument, <em>fades</em> will remove the\nvirtualenv matching the provided UUID if such a virtualenv exists (one easy\nway to find out the virtualenv\u2019s UUID is calling <em>fades</em> with the\n<tt><span class=\"pre\">--get-venv-dir</span></tt> option.</p>\n<p>Another way to clean up the cache is to remove all venvs that haven\u2019t been used for some time.\nIn order to do this you need to call <em>fades</em> with <tt><span class=\"pre\">--clean-unused-venvs</span></tt>.\nWhen fades it\u2019s called with this option, it runs in mantain mode, this means that fades will exit\nafter finished this task.\nAll virtualenvs that haven\u2019t been used for more days than the value indicated in param will be\nremoved.</p>\n<p>It is recommended to have some automatically way of run this option;\nie, add a cron task that perform this command:</p>\n<pre>fades --clean-unused-venvs=42\n</pre>\n</div>\n<div id=\"some-command-line-examples\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Some command line examples</a></h3>\n<p><tt>fades foo.py <span class=\"pre\">--bar</span></tt></p>\n<p>Executes <tt>foo.py</tt> under <em>fades</em>, passing the <tt><span class=\"pre\">--bar</span></tt> parameter to the child program, in a virtualenv with the dependencies indicated in the source code.</p>\n<p><tt>fades <span class=\"pre\">-v</span> foo.py</tt></p>\n<p>Executes <tt>foo.py</tt> under <em>fades</em>, showing all the <em>fades</em> messages (verbose mode).</p>\n<p><tt>fades <span class=\"pre\">-d</span> dependency1 <span class=\"pre\">-d</span> dependency2&gt;3.2 foo.py <span class=\"pre\">--bar</span></tt></p>\n<p>Executes <tt>foo.py</tt> under <em>fades</em> (passing the <tt><span class=\"pre\">--bar</span></tt> parameter to it), in a virtualenv with the dependencies indicated in the source code and also <tt>dependency1</tt> and <tt>dependency2</tt> (any version &gt; 3.2).</p>\n<p><tt>fades <span class=\"pre\">-d</span> dependency1</tt></p>\n<p>Executes the Python interactive interpreter in a virtualenv with <tt>dependency1</tt> installed.</p>\n<p><tt>fades <span class=\"pre\">-r</span> requirements.txt</tt></p>\n<p>Executes the Python interactive interpreter in a virtualenv after installing there all dependencies taken from the <tt>requirements.txt</tt> file.</p>\n<p><tt>fades <span class=\"pre\">-r</span> requirements.txt <span class=\"pre\">-r</span> requirements_devel.txt</tt></p>\n<p>Executes the Python interactive interpreter in a virtualenv after installing there all dependencies taken from files <tt>requirements.txt</tt> and <tt>requirements_devel.txt</tt>.</p>\n<p><tt>fades <span class=\"pre\">-d</span> django <span class=\"pre\">-x</span> <span class=\"pre\">django-admin.py</span> startproject foo</tt></p>\n<p>Uses the <tt><span class=\"pre\">django-admin.py</span></tt> script to start a new project named <tt>foo</tt>, without having to have django previously installed.</p>\n<p><tt>fades <span class=\"pre\">--rm</span> <span class=\"pre\">89a2bf83-c280-4918-a78d-c35506efd69d</span></tt></p>\n<p>Removes a virtualenv matching the given uuid from disk and cache index.</p>\n</div>\n<div id=\"what-if-python-is-updated-in-my-system\">\n<h3><a href=\"#id14\" rel=\"nofollow\">What if Python is updated in my system?</a></h3>\n<p>The virtualenvs created by fades depend on the Python version used to\ncreate them, considering its major and minor version.</p>\n<p>This means that if run fades with a Python version and then run it again\nwith a different Python version, it may need to create a new virtualenv.</p>\n<p>Let\u2019s see some examples. Let\u2019s say you run fades with <tt>python</tt>, which\nis a symlink in your <tt>/usr/bin/</tt> to <tt>python3.4</tt> (running it directly\nby hand or because fades is installed to use that Python version).</p>\n<p>If you have Python 3.4.2 installed in your system, and it\u2019s upgraded to\nPython 3.4.3, fades will keep reusing the already created virtualenvs, as\nonly the micro version changed, not minor or major.</p>\n<p>But if Python 3.5 is installed in your system, and the default <tt>python</tt>\nis pointed to this new one, fades will start creating all the\nvirtualenvs again, with this new version.</p>\n<p>This is a good thing, because you want that the dependencies installed\nwith one specific Python in the virtualenv are kept being used by the\nsame Python version.</p>\n<p>However, if you want to avoid this behaviour, be sure to always call fades\nwith the specific Python version (<tt>/usr/bin/python3.4</tt> or <tt>python3.4</tt>,\nfor example), so it won\u2019t matter if a new version is available in the\nsystem.</p>\n</div>\n</div>\n<div id=\"how-to-install-it\">\n<h2><a href=\"#id15\" rel=\"nofollow\">How to install it</a></h2>\n<p>Several instructions to install <tt>fades</tt> in different platforms.</p>\n<div id=\"simplest-way\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Simplest way</a></h3>\n<p>In some systems you can install <tt>fades</tt> directly, no needing to\ninstall previously any dependency.</p>\n<p>If you are in debian unstable or testing, just do (but probably you will not\nget the latest version, see below for alternative installation methods):</p>\n<blockquote>\nsudo apt-get install fades</blockquote>\n<p>For Arch linux:</p>\n<blockquote>\nyaourt -S fades</blockquote>\n<p>In systems with Snaps:</p>\n<blockquote>\nsnap install fades</blockquote>\n<p>For Mac OS X (and <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a>):</p>\n<blockquote>\nbrew install fades</blockquote>\n<p>Else, keep reading to know how to install the dependencies first, and\n<tt>fades</tt> in your system next.</p>\n</div>\n<div id=\"dependencies\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Dependencies</a></h3>\n<p>Besides needing Python 3.3 or greater, fades depends also on the\n<tt>pkg_resources</tt> package, that comes in with <tt>setuptools</tt>.\nIt\u2019s installed almost everywhere, but in any case,\nyou can install it in Ubuntu/Debian with:</p>\n<pre>apt-get install python3-setuptools\n</pre>\n<p>And on Archlinux with:</p>\n<pre>pacman -S python-setuptools\n</pre>\n<p>It also depends on <tt><span class=\"pre\">python-xdg</span></tt> package. This package should be\ninstalled on any GNU/Linux OS wiht a freedesktop.org GUI. However it\nis an <strong>optional</strong> dependency.</p>\n<p>You can install it in Ubuntu/Debian with:</p>\n<pre>apt-get install python3-xdg\n</pre>\n<p>And on Archlinux with:</p>\n<pre>pacman -S python-xdg\n</pre>\n<p>Fades also needs the <cite>virtualenv &lt;https://virtualenv.pypa.io/en/latest/&gt;</cite> package to\nsupport different Python versions for child execution. (see <cite>\u2013python</cite> argument.)</p>\n</div>\n<div id=\"for-others-debian-and-ubuntu\">\n<h3><a href=\"#id18\" rel=\"nofollow\">For others debian and ubuntu</a></h3>\n<p>If you are NOT in debian unstable or testing (if you are, see\nabove for better instructions), you can use this\n<a href=\"http://taniquetil.com.ar/fades/fades-latest.deb\" rel=\"nofollow\">.deb</a>.</p>\n<p>Download it and install doing:</p>\n<pre>sudo dpkg -i fades-latest.deb\n</pre>\n</div>\n<div id=\"using-pip-if-you-want\">\n<h3><a href=\"#id19\" rel=\"nofollow\">Using pip if you want</a></h3>\n<pre>pip3 install fades\n</pre>\n</div>\n<div id=\"multiplatform-tarball\">\n<h3><a href=\"#id20\" rel=\"nofollow\">Multiplatform tarball</a></h3>\n<p>Finally you can always get the multiplatform tarball and install\nit in the old fashion way:</p>\n<pre>wget http://taniquetil.com.ar/fades/fades-latest.tar.gz\ntar -xf fades-latest.tar.gz\ncd fades-*\nsudo ./setup.py install\n</pre>\n</div>\n<div id=\"can-i-try-it-without-installing-it\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Can I try it without installing it?</a></h3>\n<p>Yes! Branch the project and use the executable:</p>\n<pre>git clone https://github.com/PyAr/fades.git\ncd fades\nbin/fades your_script.py\n</pre>\n</div>\n<div id=\"what-about-windows\">\n<h3><a href=\"#id22\" rel=\"nofollow\">What about Windows?</a></h3>\n<p>Windows is a platform supported by fades.</p>\n<p>However, we don\u2019t have a proper Windows installer (a <tt>.exe</tt> or\n<tt>.msi</tt>), but you can install it using <tt>pip</tt>, or from the tarball,\nor try it directly from the project. All these options are properly\ndescribed above.</p>\n<p>We <em>do</em> want to have a Windows installer. If you can help us in this\nregard, please contact us. Also we would want a Travis running in\nWindows so that GitHub runs all the tests in this platform too before\nlanding any code. Thanks!</p>\n</div>\n</div>\n<div id=\"get-some-help-give-some-feedback\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Get some help, give some feedback</a></h2>\n<p>You can ask any question or send any recommendation or request to\nthe <a href=\"http://listas.python.org.ar/mailman/listinfo/fades\" rel=\"nofollow\">mailing list</a>.</p>\n<p>Come chat with us on IRC. The #fades channel is located at the <a href=\"http://freenode.net/\" rel=\"nofollow\">Freenode</a> network.</p>\n<p>Also, you can open an issue\n<a href=\"https://github.com/PyAr/fades/issues/new\" rel=\"nofollow\">here</a> (please do if you\nfind any problem!).</p>\n<p>Thanks in advance for your time.</p>\n</div>\n<div id=\"how-to-develop-fades-itself\">\n<h2><a href=\"#id24\" rel=\"nofollow\">How to develop fades itself</a></h2>\n<p>Quick guide to get you up and running in fades development.</p>\n<div id=\"getting-the-code\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Getting the code</a></h3>\n<p>Clone the project:</p>\n<pre>git clone git@github.com:PyAr/fades.git\n</pre>\n</div>\n<div id=\"install-dependencies\">\n<h3><a href=\"#id26\" rel=\"nofollow\">Install dependencies</a></h3>\n<p><em>fades</em> manages it\u2019s own dependencies, so there is nothing extra you need to install.</p>\n<p>To try it, just do:</p>\n<pre>bin/fades -V\n</pre>\n</div>\n<div id=\"how-to-run-the-tests\">\n<h3><a href=\"#id27\" rel=\"nofollow\">How to run the tests</a></h3>\n<p>When starting development, at all times, and specially before wrapping up\na new branch, you need to be sure that all tests pass ok.</p>\n<p>This is very simple, actually, just run:</p>\n<pre>./test\n</pre>\n<p>That will not only check test cases, but also that the code complies with\naesthetic recommendations, and that the README document has a proper format.</p>\n<p>If you want to run <em>one</em> particular test, just specify it. Example:</p>\n<pre>./test tests.test_main:DepsMergingTestCase.test_two_different\n</pre>\n</div>\n<div id=\"development-process\">\n<h3><a href=\"#id28\" rel=\"nofollow\">Development process</a></h3>\n<p>Just pick an issue from <a href=\"https://github.com/PyAr/fades/issues\" rel=\"nofollow\">the list</a>.</p>\n<p>Develop, assure <tt>./test</tt> is happy, commit, push, create a pull request, etc.</p>\n<p>Please, if you aim for creating a Pull Request with new code (functionality\nor fixes), include tests for your changes.</p>\n<p>Thanks! Enjoy.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4850334, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7f77f1417fcacf3250c261666d6144b2", "sha256": "bb3f7588663e81520d2ec49f953089ccd26f7eb598bf213df5ed37b86aa40f34"}, "downloads": -1, "filename": "fades-0.1.tar.gz", "has_sig": false, "md5_digest": "7f77f1417fcacf3250c261666d6144b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21876, "upload_time": "2015-02-07T21:18:56", "upload_time_iso_8601": "2015-02-07T21:18:56.050143Z", "url": "https://files.pythonhosted.org/packages/57/94/9af5424c422b4f139e26ff32d7a717b7a64187ad2dc45ff2cfe7acc4d2eb/fades-0.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "ad46a7c512f150ab56e970eedbf84a7d", "sha256": "464192f792d4df137f08d4d2451296ce2255dc2009e7aa799edfc530a7c7a4e8"}, "downloads": -1, "filename": "fades-1.0.tar.gz", "has_sig": false, "md5_digest": "ad46a7c512f150ab56e970eedbf84a7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22206, "upload_time": "2015-02-07T22:49:00", "upload_time_iso_8601": "2015-02-07T22:49:00.721035Z", "url": "https://files.pythonhosted.org/packages/e8/4a/b7abb3a7958fd59316bfff31b261faae18118251830751a09b45a579fd30/fades-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "e0d2689fa56be592501adcd6a1f9548d", "sha256": "72fb05c8560d3a613d050c85ccea1b0e63315bd29b5ccd591a088939ecbd875d"}, "downloads": -1, "filename": "fades-2.0.tar.gz", "has_sig": false, "md5_digest": "e0d2689fa56be592501adcd6a1f9548d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25430, "upload_time": "2015-02-27T17:12:04", "upload_time_iso_8601": "2015-02-27T17:12:04.389949Z", "url": "https://files.pythonhosted.org/packages/7a/9f/a56161f7c3b4604fd34fccda8a816e70d9f0466cad3346c5b039857de530/fades-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "c0390cac992c23fcf4422c6b36276601", "sha256": "33d1a91230cc9815c0a3b0bba7ff809f5e49446d985d72bf4ec2dcdf8f9be71d"}, "downloads": -1, "filename": "fades-2.1.tar.gz", "has_sig": false, "md5_digest": "c0390cac992c23fcf4422c6b36276601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23857, "upload_time": "2015-02-27T17:54:05", "upload_time_iso_8601": "2015-02-27T17:54:05.615500Z", "url": "https://files.pythonhosted.org/packages/8d/16/215f41cdac2dcc9642e63973e84672c012717dbb5b5498bf69abe98a8484/fades-2.1.tar.gz", "yanked": false}], "3": [{"comment_text": "", "digests": {"md5": "78bebd9cfa792c3f5a270c80b8c994fc", "sha256": "e321a33a3e875017b0d6d6464dd7dfebe002d6586783fce2789c28481c7b0f85"}, "downloads": -1, "filename": "fades-3.tar.gz", "has_sig": false, "md5_digest": "78bebd9cfa792c3f5a270c80b8c994fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29224, "upload_time": "2015-06-16T22:40:58", "upload_time_iso_8601": "2015-06-16T22:40:58.835356Z", "url": "https://files.pythonhosted.org/packages/51/a4/1454a6eb292ba720e14cde950ae560a62b74d55c505be678c591425910f0/fades-3.tar.gz", "yanked": false}], "4": [{"comment_text": "", "digests": {"md5": "5084b92260b31afbe0aa430eb501475f", "sha256": "3f9b4eb13bf1ab22c18beb7bd14d0f73bdec41781d31a4e3bafbb4732fd0d98d"}, "downloads": -1, "filename": "fades-4.tar.gz", "has_sig": false, "md5_digest": "5084b92260b31afbe0aa430eb501475f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32567, "upload_time": "2015-11-10T19:58:51", "upload_time_iso_8601": "2015-11-10T19:58:51.181684Z", "url": "https://files.pythonhosted.org/packages/7c/77/370519772cba58940c2cb650395fd5c8526d43247c41fb10dfecd359b8f7/fades-4.tar.gz", "yanked": false}], "5": [{"comment_text": "", "digests": {"md5": "791913189e5a1a987ff6f9f4b2905e37", "sha256": "1952f496059ba6bac535f2c07effae44a55de0654ababaa1a15879c4b3fa89c1"}, "downloads": -1, "filename": "fades-5.tar.gz", "has_sig": false, "md5_digest": "791913189e5a1a987ff6f9f4b2905e37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36617, "upload_time": "2016-02-16T17:00:52", "upload_time_iso_8601": "2016-02-16T17:00:52.312939Z", "url": "https://files.pythonhosted.org/packages/30/0c/ce5e0888a54eb9be01029425d08cee78b37723e4aaa4f58acf79277de011/fades-5.tar.gz", "yanked": false}], "6.0": [{"comment_text": "", "digests": {"md5": "ac2c69b205a5b0cdd8893a018f2ecc0c", "sha256": "747ee3a159be1cb7512fd7ea4163d22e2734209e474aa2dbbccc29a0f0c92d09"}, "downloads": -1, "filename": "fades-6.0.1.tar.gz", "has_sig": false, "md5_digest": "ac2c69b205a5b0cdd8893a018f2ecc0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42965, "upload_time": "2017-05-15T19:01:33", "upload_time_iso_8601": "2017-05-15T19:01:33.941933Z", "url": "https://files.pythonhosted.org/packages/59/18/cc80eb5c0a2e15c4b95df6a3c6158e06acb2e075ef2b811753936a6bdf57/fades-6.0.1.tar.gz", "yanked": false}], "7.0": [{"comment_text": "", "digests": {"md5": "57840f87c8535b277df294ac48661474", "sha256": "b91f2221f1ae8e9eae35f58dac279d2d3935e66de428e79e1509814392449dda"}, "downloads": -1, "filename": "fades-7.0.tar.gz", "has_sig": false, "md5_digest": "57840f87c8535b277df294ac48661474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45536, "upload_time": "2018-03-26T21:31:30", "upload_time_iso_8601": "2018-03-26T21:31:30.418973Z", "url": "https://files.pythonhosted.org/packages/27/89/dd5b165986f4064d2a3285461e1a15fb7006793b453a7b2a3b518377b8f2/fades-7.0.tar.gz", "yanked": false}], "8.1": [{"comment_text": "", "digests": {"md5": "ea2c12bad278b372a6848153f8baae7e", "sha256": "c9ba065b59e9b6a2ab6fb6f65cd71a17e9fc97f543d5c975a4f9841a51d49317"}, "downloads": -1, "filename": "fades-8.1.tar.gz", "has_sig": false, "md5_digest": "ea2c12bad278b372a6848153f8baae7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 54101, "upload_time": "2019-02-08T00:26:17", "upload_time_iso_8601": "2019-02-08T00:26:17.834784Z", "url": "https://files.pythonhosted.org/packages/8b/9c/fd93dff7d8665b704c2f008009876118971df691f8e5bd662befdb8f574c/fades-8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea2c12bad278b372a6848153f8baae7e", "sha256": "c9ba065b59e9b6a2ab6fb6f65cd71a17e9fc97f543d5c975a4f9841a51d49317"}, "downloads": -1, "filename": "fades-8.1.tar.gz", "has_sig": false, "md5_digest": "ea2c12bad278b372a6848153f8baae7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 54101, "upload_time": "2019-02-08T00:26:17", "upload_time_iso_8601": "2019-02-08T00:26:17.834784Z", "url": "https://files.pythonhosted.org/packages/8b/9c/fd93dff7d8665b704c2f008009876118971df691f8e5bd662befdb8f574c/fades-8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:01 2020"}