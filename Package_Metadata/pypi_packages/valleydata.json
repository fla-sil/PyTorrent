{"info": {"author": "Nahuel Chaves", "author_email": "nahuel.chaves@valleyworks.us", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "# Valleydata\n\n# Getting Started\n\nFirst you need to install a few necessary dependencies.\n\n* VirtualBox (https://www.virtualbox.org/).\n* Vagrant (https://www.vagrantup.com/).\n* Install Guest Additions plugin for Vagrant (`vagrant plugin install vagrant-vbguest`)\n\nIf you already use Vagrant, please make sure you update your box before starting it, do it with `vagrant box update`.\n\nThen you can clone this project and run `vagrant up` at the root folder. After this finishes, `vagrant ssh` to get inside the vm. Note: if you already use vagrant, it wont hurt running `vagrant box update` so we use the latest version available.\n\nPackages included in the vm:\n\n* Python 3.5.2 with virtualenv.\n* Latest Nodejs installed with nvm.\n\n# Usage\n\n## MySql\n\nYou can connect using cli or your favorite client using the following config:\n\n* Host: localhost\n* Port: 33061\n* User: root\n* Password: root\n\n##\u00a0Python\n\nRun `vagrant ssh` to get inside the VM, then you will need to make a new virtualenv and install the dependencies.\n\nAfter that you should be able to run `python test.py`\n\n\n# Testing\nRun `python test.py`\n\n\n# Usage\n\n## valleydata class\n\n```\n    valleydata = valleydata(date_list=<list_of_dates>)\n```\n\nNote that `date_list` is a required parameter\n\n### Methods\n\n- **get_top_hours**: Returns a list of tuples ((str)hour, (int)occurrences) representing most active hours. For example:\n```\n    [('03 PM', 5), ('09 PM', 5), ('01 PM', 4)]\n```\n\n- **get_top_weekdays**: Returns a list of tuples ((str)weekday, (int)ocurrences) representing most active weekdays. For example:\n```\n    [('Saturday', 12), ('Sunday', 9), ('Tuesday', 7), ('Friday', 7), ('Monday', 6)]\n```\n\n- **get_ip_info**: Returns a dict with info about a valid ip address (uses `ipinfo.io` external api). For example:\n```\n    {\n        'loc': '45.5186,-73.5545',\n        'city': 'Montr\\xe9al',\n        'country': 'CA',\n        'region': 'Quebec',\n        'hostname': '198-48-208-217.cpe.pppoe.ca', \n        'ip': u'198.48.208.217', \n        'org': u'AS5645 TekSavvy Solutions, Inc.',\n        'postal': u'H2L'\n    }\n```\n\n\n## TextAnalyzer class\n\n```\n    text_analyzer = TextAnalyzer(texts=<list_of_dicts>)\n```\n\nNote that `texts` is a required parameter and should have the following structure:\n\n```\n    {\n        'text': \"string\",\n        'status': \"string\" (texts will be grouped by this string)\n    }\n```\n\n### Methods\n\n- **most_used_words (group=string)**: Returns a list of tuples ((str)word, (int)occurrences). For example:\n```\n    [(u'magni', 3), (u'praesentium', 3), (u'amet', 3), (u'quae', 2), (u'non', 2), (u'molestias', 2)]\n```\n\n- **get_group**: Returns a list of strings that belongs to the given group.\n\n- **get_ranking**: Returns a dict AND a int. The dict contains points for each group and the int indicates the total score. Currently the score goes up if the group is called `approved`, otherwise it will go down.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/valleyworks/valleydata", "keywords": "valleydata valleyworks", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "valleydata", "package_url": "https://pypi.org/project/valleydata/", "platform": "", "project_url": "https://pypi.org/project/valleydata/", "project_urls": {"Homepage": "https://github.com/valleyworks/valleydata"}, "release_url": "https://pypi.org/project/valleydata/0.0.9/", "requires_dist": null, "requires_python": "", "summary": "ValleyData", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Valleydata<br><br># Getting Started<br><br>First you need to install a few necessary dependencies.<br><br>* VirtualBox (https://www.virtualbox.org/).<br>* Vagrant (https://www.vagrantup.com/).<br>* Install Guest Additions plugin for Vagrant (`vagrant plugin install vagrant-vbguest`)<br><br>If you already use Vagrant, please make sure you update your box before starting it, do it with `vagrant box update`.<br><br>Then you can clone this project and run `vagrant up` at the root folder. After this finishes, `vagrant ssh` to get inside the vm. Note: if you already use vagrant, it wont hurt running `vagrant box update` so we use the latest version available.<br><br>Packages included in the vm:<br><br>* Python 3.5.2 with virtualenv.<br>* Latest Nodejs installed with nvm.<br><br># Usage<br><br>## MySql<br><br>You can connect using cli or your favorite client using the following config:<br><br>* Host: localhost<br>* Port: 33061<br>* User: root<br>* Password: root<br><br>##\u00a0Python<br><br>Run `vagrant ssh` to get inside the VM, then you will need to make a new virtualenv and install the dependencies.<br><br>After that you should be able to run `python test.py`<br><br><br># Testing<br>Run `python test.py`<br><br><br># Usage<br><br>## valleydata class<br><br>```<br>    valleydata = valleydata(date_list=&lt;list_of_dates&gt;)<br>```<br><br>Note that `date_list` is a required parameter<br><br>### Methods<br><br>- **get_top_hours**: Returns a list of tuples ((str)hour, (int)occurrences) representing most active hours. For example:<br>```<br>    [('03 PM', 5), ('09 PM', 5), ('01 PM', 4)]<br>```<br><br>- **get_top_weekdays**: Returns a list of tuples ((str)weekday, (int)ocurrences) representing most active weekdays. For example:<br>```<br>    [('Saturday', 12), ('Sunday', 9), ('Tuesday', 7), ('Friday', 7), ('Monday', 6)]<br>```<br><br>- **get_ip_info**: Returns a dict with info about a valid ip address (uses `ipinfo.io` external api). For example:<br>```<br>    {<br>        'loc': '45.5186,-73.5545',<br>        'city': 'Montr\\xe9al',<br>        'country': 'CA',<br>        'region': 'Quebec',<br>        'hostname': '198-48-208-217.cpe.pppoe.ca', <br>        'ip': u'198.48.208.217', <br>        'org': u'AS5645 TekSavvy Solutions, Inc.',<br>        'postal': u'H2L'<br>    }<br>```<br><br><br>## TextAnalyzer class<br><br>```<br>    text_analyzer = TextAnalyzer(texts=&lt;list_of_dicts&gt;)<br>```<br><br>Note that `texts` is a required parameter and should have the following structure:<br><br>```<br>    {<br>        'text': \"string\",<br>        'status': \"string\" (texts will be grouped by this string)<br>    }<br>```<br><br>### Methods<br><br>- **most_used_words (group=string)**: Returns a list of tuples ((str)word, (int)occurrences). For example:<br>```<br>    [(u'magni', 3), (u'praesentium', 3), (u'amet', 3), (u'quae', 2), (u'non', 2), (u'molestias', 2)]<br>```<br><br>- **get_group**: Returns a list of strings that belongs to the given group.<br><br>- **get_ranking**: Returns a dict AND a int. The dict contains points for each group and the int indicates the total score. Currently the score goes up if the group is called `approved`, otherwise it will go down.<br>\n          </div>"}, "last_serial": 2886605, "releases": {"0.0.9": [{"comment_text": "", "digests": {"md5": "483d7bcf632470fe793cd635bb423894", "sha256": "9814db4d8cd49a87fb4453b0d2f28d36c188d5121a7b7bc88516f7a74b313141"}, "downloads": -1, "filename": "valleydata-0.0.9.tar.gz", "has_sig": false, "md5_digest": "483d7bcf632470fe793cd635bb423894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4971, "upload_time": "2017-05-19T22:37:29", "upload_time_iso_8601": "2017-05-19T22:37:29.657078Z", "url": "https://files.pythonhosted.org/packages/ba/2c/137e02057e63822de547ed7d3c620a7fc60043027d11c3212b52d8ffe762/valleydata-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "483d7bcf632470fe793cd635bb423894", "sha256": "9814db4d8cd49a87fb4453b0d2f28d36c188d5121a7b7bc88516f7a74b313141"}, "downloads": -1, "filename": "valleydata-0.0.9.tar.gz", "has_sig": false, "md5_digest": "483d7bcf632470fe793cd635bb423894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4971, "upload_time": "2017-05-19T22:37:29", "upload_time_iso_8601": "2017-05-19T22:37:29.657078Z", "url": "https://files.pythonhosted.org/packages/ba/2c/137e02057e63822de547ed7d3c620a7fc60043027d11c3212b52d8ffe762/valleydata-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:01 2020"}