{"info": {"author": "Prakash Maria Liju P", "author_email": "ppml38@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# CosevaDB - Comma Separated Values DB\nCosevaDB is a light weight SQL database designed to store, retrieve and manage data in csv format.\n\nTargets are,\n- Apps that require SQL DB or external DB server\n- Apps that need lightweight replacement for under-utilised heavy-weight DBs such as oracle, MySQL\n- Those who need a SQL processor and DB to manage existing csv data files\n\nView detailed description on [www.github.com/ppml38/cosevadb](www.github.com/ppml38/cosevadb)\n\n### Features:\n- Written purely in python\n- No external dependencies\n\nIts a best practice to organise folders and csv files i.e., Databases and tables in below structure\n```\ndatabase_name/\n      table_name.csv\n      table_header.csv\n      ...\n```\nAnd to query the database like below\n```python\ncosevadb.query(\"select name from path/to/database_name/table_name.csv, path/to/database_name/table_header.csv where role='Manager' & salary >= 5000\")\n```\n\nHowever it is not mandatory to follow. you can pass the path of any csv file to parse.\n\n### How to install\n```\npip install cosevadb\n```\n\n### Usage\n```python\nfrom cosevadb import cosevadb\ncosevadb.query(\"select name,age from data/passengers.csv,data/header.csv where native='USA'\")\n```\n### Return format\n```\n[sqlcode,'<message>',[result list / empty list]]\n```\n### SQL return codes\n| SQL Code | Description |\n| --- | --- |\n| 1 | Empty result set |\n| 0 | **Success** with atleast one result |\n| -2 |  Unexpected character on position \\<index\\> |\n| -3 |  Unexpected character on where clause position \\<index\\> |\n| -4 |  Unsupported operator in where clause |\n| -5 |  Non numeric operand with arithmatic operator \\<operator\\> |\n| -6 | Non boolean operand(LHS) with logical operator \\<operator\\> |\n| -7 | Non boolean operand(RHS) with logical operator \\<operator\\> |\n| -8 | Operator ! must be followed by = |\n| -9 | Unbalanced paranthesis on LHS of operator \\<operator\\> |\n| -10 | Unbalanced paranthesis on RHS of operator \\<operator\\> |\n| -11 |  No field \\<fieldname\\> found in header file |\n| -12 | Value for variable \\<variablename\\> is missing in atleast one row |\n| -13 | Where clause condition returns non-boolean result |\n| -14 | Incomplete condition in where clause |\n\n### Reserved words\n| Keywords |\n| --- |\n| SELECT |\n| FROM |\n| WHERE |\n\n### Operators supported\n| Operator type | Operators |\n| --- | --- |\n| Arithmatic operators | +, -, *, /, % |\n| Comparison operators | >, <, >=, <=, =, != |\n| Logical operators | &, \\| |\n\n### Operator precedence (in order from high to low)\n| Operator precedence |\n| :---: |\n| \\% |\n| \\/ |\n| \\* |\n| + |\n| \\- |\n| <,<= |\n| \\>,>= |\n| != |\n| = |\n| & |\n| \\| |\n\n### File formats\nComma seperated value(.csv) files.\n\n### Instructions\n* String values should be within '<string>'\n* A file with headers(Comma separated) should be passed along with csv data file\n* As of now only select operations implemented\n* Comparison operator '=' is used instead of '=='\n* **Expression evaluation will use BODMAS as you studied in school. i.e., It has individual operator precedence unlike python or java. (ex): '9-7+1' will result '1' where python eval() will return 3**\n\n### Licence\nMIT Licence. Contributions are welcome\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ppml38/cosevadb", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cosevadb", "package_url": "https://pypi.org/project/cosevadb/", "platform": "", "project_url": "https://pypi.org/project/cosevadb/", "project_urls": {"Homepage": "https://github.com/ppml38/cosevadb"}, "release_url": "https://pypi.org/project/cosevadb/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Light weight SQL database designed to manage data in csv format", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CosevaDB - Comma Separated Values DB</h1>\n<p>CosevaDB is a light weight SQL database designed to store, retrieve and manage data in csv format.</p>\n<p>Targets are,</p>\n<ul>\n<li>Apps that require SQL DB or external DB server</li>\n<li>Apps that need lightweight replacement for under-utilised heavy-weight DBs such as oracle, MySQL</li>\n<li>Those who need a SQL processor and DB to manage existing csv data files</li>\n</ul>\n<p>View detailed description on <a href=\"www.github.com/ppml38/cosevadb\" rel=\"nofollow\">www.github.com/ppml38/cosevadb</a></p>\n<h3>Features:</h3>\n<ul>\n<li>Written purely in python</li>\n<li>No external dependencies</li>\n</ul>\n<p>Its a best practice to organise folders and csv files i.e., Databases and tables in below structure</p>\n<pre><code>database_name/\n      table_name.csv\n      table_header.csv\n      ...\n</code></pre>\n<p>And to query the database like below</p>\n<pre><span class=\"n\">cosevadb</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"select name from path/to/database_name/table_name.csv, path/to/database_name/table_header.csv where role='Manager' &amp; salary &gt;= 5000\"</span><span class=\"p\">)</span>\n</pre>\n<p>However it is not mandatory to follow. you can pass the path of any csv file to parse.</p>\n<h3>How to install</h3>\n<pre><code>pip install cosevadb\n</code></pre>\n<h3>Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cosevadb</span> <span class=\"kn\">import</span> <span class=\"n\">cosevadb</span>\n<span class=\"n\">cosevadb</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"select name,age from data/passengers.csv,data/header.csv where native='USA'\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Return format</h3>\n<pre><code>[sqlcode,'&lt;message&gt;',[result list / empty list]]\n</code></pre>\n<h3>SQL return codes</h3>\n<table>\n<thead>\n<tr>\n<th>SQL Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Empty result set</td>\n</tr>\n<tr>\n<td>0</td>\n<td><strong>Success</strong> with atleast one result</td>\n</tr>\n<tr>\n<td>-2</td>\n<td>Unexpected character on position &lt;index&gt;</td>\n</tr>\n<tr>\n<td>-3</td>\n<td>Unexpected character on where clause position &lt;index&gt;</td>\n</tr>\n<tr>\n<td>-4</td>\n<td>Unsupported operator in where clause</td>\n</tr>\n<tr>\n<td>-5</td>\n<td>Non numeric operand with arithmatic operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-6</td>\n<td>Non boolean operand(LHS) with logical operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-7</td>\n<td>Non boolean operand(RHS) with logical operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-8</td>\n<td>Operator ! must be followed by =</td>\n</tr>\n<tr>\n<td>-9</td>\n<td>Unbalanced paranthesis on LHS of operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-10</td>\n<td>Unbalanced paranthesis on RHS of operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-11</td>\n<td>No field &lt;fieldname&gt; found in header file</td>\n</tr>\n<tr>\n<td>-12</td>\n<td>Value for variable &lt;variablename&gt; is missing in atleast one row</td>\n</tr>\n<tr>\n<td>-13</td>\n<td>Where clause condition returns non-boolean result</td>\n</tr>\n<tr>\n<td>-14</td>\n<td>Incomplete condition in where clause</td>\n</tr></tbody></table>\n<h3>Reserved words</h3>\n<table>\n<thead>\n<tr>\n<th>Keywords</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SELECT</td>\n</tr>\n<tr>\n<td>FROM</td>\n</tr>\n<tr>\n<td>WHERE</td>\n</tr></tbody></table>\n<h3>Operators supported</h3>\n<table>\n<thead>\n<tr>\n<th>Operator type</th>\n<th>Operators</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Arithmatic operators</td>\n<td>+, -, *, /, %</td>\n</tr>\n<tr>\n<td>Comparison operators</td>\n<td>&gt;, &lt;, &gt;=, &lt;=, =, !=</td>\n</tr>\n<tr>\n<td>Logical operators</td>\n<td>&amp;, |</td>\n</tr></tbody></table>\n<h3>Operator precedence (in order from high to low)</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Operator precedence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">%</td>\n</tr>\n<tr>\n<td align=\"center\">/</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n</tr>\n<tr>\n<td align=\"center\">+</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;,&lt;=</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;,&gt;=</td>\n</tr>\n<tr>\n<td align=\"center\">!=</td>\n</tr>\n<tr>\n<td align=\"center\">=</td>\n</tr>\n<tr>\n<td align=\"center\">&amp;</td>\n</tr>\n<tr>\n<td align=\"center\">|</td>\n</tr></tbody></table>\n<h3>File formats</h3>\n<p>Comma seperated value(.csv) files.</p>\n<h3>Instructions</h3>\n<ul>\n<li>String values should be within '&lt;string&gt;'</li>\n<li>A file with headers(Comma separated) should be passed along with csv data file</li>\n<li>As of now only select operations implemented</li>\n<li>Comparison operator '=' is used instead of '=='</li>\n<li><strong>Expression evaluation will use BODMAS as you studied in school. i.e., It has individual operator precedence unlike python or java. (ex): '9-7+1' will result '1' where python eval() will return 3</strong></li>\n</ul>\n<h3>Licence</h3>\n<p>MIT Licence. Contributions are welcome</p>\n\n          </div>"}, "last_serial": 7009961, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "9925a9ba6a09ca533ee2eb7b26a23745", "sha256": "4d8086cde86958ee22b40d344bcafc32b0922cc546fbf88ea9a8d66a306d7651"}, "downloads": -1, "filename": "cosevadb-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9925a9ba6a09ca533ee2eb7b26a23745", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7607, "upload_time": "2020-04-11T16:32:13", "upload_time_iso_8601": "2020-04-11T16:32:13.581564Z", "url": "https://files.pythonhosted.org/packages/48/a3/3b6243e2ae5b4f67c738fed6cbb4600ec15988a97c30fa435c9de1a51a14/cosevadb-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0b1e322a678fb69b04635d7142dd7d9", "sha256": "e2314ef148f7086fbe1a4996246a3770a27db9b4115d71d9d4787bb7d919fd5b"}, "downloads": -1, "filename": "cosevadb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d0b1e322a678fb69b04635d7142dd7d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7151, "upload_time": "2020-04-11T16:32:15", "upload_time_iso_8601": "2020-04-11T16:32:15.092579Z", "url": "https://files.pythonhosted.org/packages/9d/80/e81a904c57b1f65990cf35796e0a22029be6e8abbaacac2cb50c92866c53/cosevadb-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "60f77d5921aa6eb109f5b56fcc29a7a8", "sha256": "53086ac3303b58ae2c7a1e51b50786b38c86603e56e81bf22d9566da7cc166c6"}, "downloads": -1, "filename": "cosevadb-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "60f77d5921aa6eb109f5b56fcc29a7a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9089, "upload_time": "2020-04-13T13:42:10", "upload_time_iso_8601": "2020-04-13T13:42:10.473894Z", "url": "https://files.pythonhosted.org/packages/05/d9/4fc6a71ec52cfc671a549859c659d511167d1e7cc118e91f7eefd1639fb4/cosevadb-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bece2d398cd1122d5d1d3634c2a75d5", "sha256": "465e1ab569629cbfa89e801845b5f9850e3b8e195a8ea24c80b1361fe2cc578f"}, "downloads": -1, "filename": "cosevadb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3bece2d398cd1122d5d1d3634c2a75d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9699, "upload_time": "2020-04-13T13:42:12", "upload_time_iso_8601": "2020-04-13T13:42:12.081700Z", "url": "https://files.pythonhosted.org/packages/29/5b/c26885afc14aee6d9a9c102804f44193de6a75fd27500131f6eba0c98b12/cosevadb-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60f77d5921aa6eb109f5b56fcc29a7a8", "sha256": "53086ac3303b58ae2c7a1e51b50786b38c86603e56e81bf22d9566da7cc166c6"}, "downloads": -1, "filename": "cosevadb-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "60f77d5921aa6eb109f5b56fcc29a7a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9089, "upload_time": "2020-04-13T13:42:10", "upload_time_iso_8601": "2020-04-13T13:42:10.473894Z", "url": "https://files.pythonhosted.org/packages/05/d9/4fc6a71ec52cfc671a549859c659d511167d1e7cc118e91f7eefd1639fb4/cosevadb-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bece2d398cd1122d5d1d3634c2a75d5", "sha256": "465e1ab569629cbfa89e801845b5f9850e3b8e195a8ea24c80b1361fe2cc578f"}, "downloads": -1, "filename": "cosevadb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3bece2d398cd1122d5d1d3634c2a75d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9699, "upload_time": "2020-04-13T13:42:12", "upload_time_iso_8601": "2020-04-13T13:42:12.081700Z", "url": "https://files.pythonhosted.org/packages/29/5b/c26885afc14aee6d9a9c102804f44193de6a75fd27500131f6eba0c98b12/cosevadb-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:01 2020"}