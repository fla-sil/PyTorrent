{"info": {"author": "Sean Gillies", "author_email": "sean.gillies@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "**********************\nzgeo.recipe.openlayers\n**********************\n\n.. contents::\n\nThe recipe provides the means to create `custom build profiles`_ for the\nOpenLayers_ javascript library. A compressed, single OpenLayers.js file, and\naccompanying ``img`` and ``theme`` directories are created in the named\ndirectory under the buildout's ``parts`` directory.\n\nFor example, consider the following buildout.cfg file::\n\n  [buildout]\n  parts = openlayers-2.7-wms\n  \n  [openlayers-2.7-wms]\n  recipe = zgeo.recipe.openlayers\n  url = http://openlayers.org/download/OpenLayers-2.7.tar.gz\n  include =\n      OpenLayers/Map.js\n      OpenLayers/Layer/WMS.js\n\nBuilding it out::\n\n  $ bin/buildout -c buildout.cfg\n  Installing openlayers.\n  openlayers-2.7-wms: Creating download directory: /Users/seang/code/ol-recipes/downloads\n  openlayers-2.7-wms: Extracting package to /Users/seang/code/ol-recipes/parts/openlayers__compile__\n  Merging libraries.\n  Importing: OpenLayers.js\n  Importing: OpenLayers/BaseTypes.js\n  Importing: OpenLayers/Map.js\n  Importing: OpenLayers/SingleFile.js\n  Importing: OpenLayers/Util.js\n  Importing: OpenLayers/BaseTypes/Class.js\n  Importing: OpenLayers/Layer/WMS.js\n  \n  Resolution pass 1... \n  Importing: OpenLayers/BaseTypes/Bounds.js\n  ...\n  \n  Re-ordering files...\n  \n  Exporting:  OpenLayers/SingleFile.js\n  Exporting:  OpenLayers.js\n  ...\n  Exporting:  OpenLayers/Layer/WMS.js\n  \n  Total files merged: 22 \n  Compressing using jsmin.\n  Adding license file.\n  Writing to OpenLayers.js.\n  Done.\n  \nProduces these files::\n\n  $ ls -l parts/openlayers-2.7-wms/\n  total 224\n  -rw-r--r--   1 seang  staff  112535 Jun  3 13:41 OpenLayers.js\n  drwxr-xr-x  25 seang  staff     850 Jun  3 13:41 img\n  drwxr-xr-x   3 seang  staff     102 Jun  3 13:41 theme\n\n.. _custom build profiles: http://docs.openlayers.org/library/deploying.html#custom-build-profiles\n.. _OpenLayers: http://openlayers.org\n\nDetailed Documentation\n**********************\n\nSupported options\n=================\n\nurl\n    URL to the package that will be downloaded and extracted. The\n    supported package formats are .tar.gz, .tar.bz2, and .zip. The\n    value must be a full URL,\n    e.g. http://openlayers.org/download/OpenLayers-2.7.tar.gz. The\n    ``path`` option can not be used at the same time with ``url``.\n\npath\n    Path to a local directory containing the source code to be built\n    and installed. The directory must contain the ``configure``\n    script. The ``url`` option can not be used at the same time with\n    ``path``.\n\nfilename\n    Name of javascript file to be written. Defaults to ``OpenLayers.js``.\n\nmd5sum\n    MD5 checksum for the package file. If available the MD5\n    checksum of the downloaded package will be compared to this value\n    and if the values do not match the execution of the recipe will\n    fail.\n\npatch-binary\n    Path to the ``patch`` program. Defaults to 'patch' which should\n    work on any system that has the ``patch`` program available in the\n    system ``PATH``.\n\npatch-options\n    Options passed to the ``patch`` program. Defaults to ``-p0``.\n\npatches\n    List of patch files to the applied to the extracted source. Each\n    file should be given on a separate line.\n\nkeep-compile-dir\n    Switch to optionally keep the temporary directory where the\n    package was compiled. This is mostly useful for other recipes that\n    use this recipe to compile a software but wish to do some\n    additional steps not handled by this recipe. The location of the\n    compile directory is stored in ``options['compile-directory']``.\n    Accepted values are 'true' or 'false', defaults to 'false'.\n\n\nAdditionally, the recipe honors the ``download-directory`` option set\nin the ``[buildout]`` section and stores the downloaded files under\nit. If the value is not set a directory called ``downloads`` will be\ncreated in the root of the buildout and the ``download-directory``\noption set accordingly.\n\nThe recipe will first check if there is a local copy of the package\nbefore downloading it from the net. Files can be shared among\ndifferent buildouts by setting the ``download-directory`` to the same\nlocation.\n\nExample usage\n=============\n\nWe'll use a simple tarball to demonstrate the recipe\n\n    >>> import os.path\n    >>> src = join(os.path.dirname(__file__), 'testdata')\n    >>> ls(src)\n    -  OpenLayers-2.7.tar.gz\n    -  README.txt\n\nLet's create a buildout to build and install the package\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = package\n    ...\n    ... [package]\n    ... recipe = zgeo.recipe.openlayers\n    ... url = file://%s/OpenLayers-2.7.tar.gz\n    ... include =\n    ...     OpenLayers/Map.js\n    ...     OpenLayers/Layer/WMS.js\n    ... \"\"\" % src)\n\nThis will download, extract and build our demo package with the\ndefault build options\n\n    >>> print system(buildout)\n    Installing package.\n    package: Creating download directory: /sample-buildout/downloads\n    package: Extracting package to /sample-buildout/parts/package__compile__\n    Merging libraries.\n    Importing: OpenLayers.js\n    Importing: OpenLayers/BaseTypes.js\n    Importing: OpenLayers/Map.js\n    Importing: OpenLayers/SingleFile.js\n    Importing: OpenLayers/Util.js\n    Importing: OpenLayers/BaseTypes/Class.js\n    Importing: OpenLayers/Layer/WMS.js\n    <BLANKLINE>\n    Resolution pass 1... \n    Importing: OpenLayers/BaseTypes/Bounds.js\n    Importing: OpenLayers/BaseTypes/Element.js\n    Importing: OpenLayers/BaseTypes/LonLat.js\n    Importing: OpenLayers/BaseTypes/Pixel.js\n    Importing: OpenLayers/BaseTypes/Size.js\n    Importing: OpenLayers/Events.js\n    Importing: OpenLayers/Lang/en.js\n    Importing: OpenLayers/Layer/Grid.js\n    Importing: OpenLayers/Tile/Image.js\n    Importing: OpenLayers/Tween.js\n    <BLANKLINE>\n    Resolution pass 2... \n    Importing: OpenLayers/Lang.js\n    Importing: OpenLayers/Layer/HTTPRequest.js\n    Importing: OpenLayers/Tile.js\n    <BLANKLINE>\n    Resolution pass 3... \n    Importing: OpenLayers/Layer.js\n    <BLANKLINE>\n    Resolution pass 4... \n    Importing: OpenLayers/Projection.js\n    <BLANKLINE>\n    Resolution pass 5... \n    <BLANKLINE>\n    Re-ordering files...\n    <BLANKLINE>\n    Exporting:  OpenLayers/SingleFile.js\n    Exporting:  OpenLayers.js\n    Exporting:  OpenLayers/BaseTypes.js\n    Exporting:  OpenLayers/BaseTypes/Class.js\n    Exporting:  OpenLayers/Util.js\n    Exporting:  OpenLayers/BaseTypes/Bounds.js\n    Exporting:  OpenLayers/BaseTypes/Element.js\n    Exporting:  OpenLayers/BaseTypes/LonLat.js\n    Exporting:  OpenLayers/BaseTypes/Pixel.js\n    Exporting:  OpenLayers/BaseTypes/Size.js\n    Exporting:  OpenLayers/Lang.js\n    Exporting:  OpenLayers/Tween.js\n    Exporting:  OpenLayers/Events.js\n    Exporting:  OpenLayers/Lang/en.js\n    Exporting:  OpenLayers/Projection.js\n    Exporting:  OpenLayers/Tile.js\n    Exporting:  OpenLayers/Map.js\n    Exporting:  OpenLayers/Tile/Image.js\n    Exporting:  OpenLayers/Layer.js\n    Exporting:  OpenLayers/Layer/HTTPRequest.js\n    Exporting:  OpenLayers/Layer/Grid.js\n    Exporting:  OpenLayers/Layer/WMS.js\n    <BLANKLINE>\n    Total files merged: 22 \n    Compressing using jsmin.\n    Adding license file.\n    Writing to OpenLayers.js.\n    Done.\n    <BLANKLINE>\n    \nInstalling checkouts\n====================\n\nSometimes instead of downloading and building an existing tarball we\nneed to work with code that is already available on the filesystem,\nfor example an SVN checkout.\n\nInstead of providing the ``url`` option we will provide a ``path``\noption to the directory containing the source code.\n\nLet's demonstrate this by first unpacking our test package to the\nfilesystem and building that\n\n    >>> checkout_dir = tmpdir('checkout')\n    >>> import setuptools.archive_util\n    >>> setuptools.archive_util.unpack_archive('%s/OpenLayers-2.7.tar.gz' % src,\n    ...                                        checkout_dir)\n    >>> ls(checkout_dir)\n    d OpenLayers-2.7\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = package\n    ...\n    ... [package]\n    ... recipe = zgeo.recipe.openlayers\n    ... path = %s/OpenLayers-2.7\n    ... filename = ol-wms.js\n    ... include =\n    ...     OpenLayers/Map.js\n    ...     OpenLayers/Layer/WMS.js\n    ... \"\"\" % checkout_dir)\n\n    >>> print system(buildout)\n    Uninstalling package.\n    Installing package.\n    package: Using local source directory: /checkout/OpenLayers-2.7\n    Merging libraries.\n    Importing: OpenLayers.js\n    Importing: OpenLayers/BaseTypes.js\n    Importing: OpenLayers/Map.js\n    Importing: OpenLayers/SingleFile.js\n    Importing: OpenLayers/Util.js\n    Importing: OpenLayers/BaseTypes/Class.js\n    Importing: OpenLayers/Layer/WMS.js\n    <BLANKLINE>\n    Resolution pass 1... \n    Importing: OpenLayers/BaseTypes/Bounds.js\n    Importing: OpenLayers/BaseTypes/Element.js\n    Importing: OpenLayers/BaseTypes/LonLat.js\n    Importing: OpenLayers/BaseTypes/Pixel.js\n    Importing: OpenLayers/BaseTypes/Size.js\n    Importing: OpenLayers/Events.js\n    Importing: OpenLayers/Lang/en.js\n    Importing: OpenLayers/Layer/Grid.js\n    Importing: OpenLayers/Tile/Image.js\n    Importing: OpenLayers/Tween.js\n    <BLANKLINE>\n    Resolution pass 2... \n    Importing: OpenLayers/Lang.js\n    Importing: OpenLayers/Layer/HTTPRequest.js\n    Importing: OpenLayers/Tile.js\n    <BLANKLINE>\n    Resolution pass 3... \n    Importing: OpenLayers/Layer.js\n    <BLANKLINE>\n    Resolution pass 4... \n    Importing: OpenLayers/Projection.js\n    <BLANKLINE>\n    Resolution pass 5... \n    <BLANKLINE>\n    Re-ordering files...\n    <BLANKLINE>\n    Exporting:  OpenLayers/SingleFile.js\n    Exporting:  OpenLayers.js\n    Exporting:  OpenLayers/BaseTypes.js\n    Exporting:  OpenLayers/BaseTypes/Class.js\n    Exporting:  OpenLayers/Util.js\n    Exporting:  OpenLayers/BaseTypes/Bounds.js\n    Exporting:  OpenLayers/BaseTypes/Element.js\n    Exporting:  OpenLayers/BaseTypes/LonLat.js\n    Exporting:  OpenLayers/BaseTypes/Pixel.js\n    Exporting:  OpenLayers/BaseTypes/Size.js\n    Exporting:  OpenLayers/Lang.js\n    Exporting:  OpenLayers/Tween.js\n    Exporting:  OpenLayers/Events.js\n    Exporting:  OpenLayers/Lang/en.js\n    Exporting:  OpenLayers/Projection.js\n    Exporting:  OpenLayers/Tile.js\n    Exporting:  OpenLayers/Map.js\n    Exporting:  OpenLayers/Tile/Image.js\n    Exporting:  OpenLayers/Layer.js\n    Exporting:  OpenLayers/Layer/HTTPRequest.js\n    Exporting:  OpenLayers/Layer/Grid.js\n    Exporting:  OpenLayers/Layer/WMS.js\n    <BLANKLINE>\n    Total files merged: 22 \n    Compressing using jsmin.\n    Adding license file.\n    Writing to ol-wms.js.\n    Done.\n    <BLANKLINE>\n    \n    >>> ls('parts/package')\n    d  img\n    -  ol-wms.js\n    d  theme\n\n\nSince using the ``path`` implies that the source code has been\nacquired outside of the control of the recipe also the responsibility\nof managing it is outside of the recipe.\n\nContributors\n************\n\nSean Gillies, Author\n\n\nChange history\n**************\n\n0.2 (2009-06-04)\n================\n\n- Add output filename option.\n\n0.1 (2009-06-03)\n================\n\n- Created recipe with ZopeSkel.\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/sgillies/zgeorecipeopenlayers/", "keywords": "buildout recipe openlayers", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "zgeo.recipe.openlayers", "package_url": "https://pypi.org/project/zgeo.recipe.openlayers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zgeo.recipe.openlayers/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/sgillies/zgeorecipeopenlayers/"}, "release_url": "https://pypi.org/project/zgeo.recipe.openlayers/0.2/", "requires_dist": null, "requires_python": null, "summary": "Build standard or custom profiles of the OpenLayers library", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#detailed-documentation\" id=\"id3\" rel=\"nofollow\">Detailed Documentation</a><ul>\n<li><a href=\"#supported-options\" id=\"id4\" rel=\"nofollow\">Supported options</a></li>\n<li><a href=\"#example-usage\" id=\"id5\" rel=\"nofollow\">Example usage</a></li>\n<li><a href=\"#installing-checkouts\" id=\"id6\" rel=\"nofollow\">Installing checkouts</a></li>\n</ul>\n</li>\n<li><a href=\"#contributors\" id=\"id7\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#change-history\" id=\"id8\" rel=\"nofollow\">Change history</a><ul>\n<li><a href=\"#id1\" id=\"id9\" rel=\"nofollow\">0.2 (2009-06-04)</a></li>\n<li><a href=\"#id2\" id=\"id10\" rel=\"nofollow\">0.1 (2009-06-03)</a></li>\n</ul>\n</li>\n<li><a href=\"#download\" id=\"id11\" rel=\"nofollow\">Download</a></li>\n</ul>\n</div>\n<p>The recipe provides the means to create <a href=\"http://docs.openlayers.org/library/deploying.html#custom-build-profiles\" rel=\"nofollow\">custom build profiles</a> for the\n<a href=\"http://openlayers.org\" rel=\"nofollow\">OpenLayers</a> javascript library. A compressed, single OpenLayers.js file, and\naccompanying <tt>img</tt> and <tt>theme</tt> directories are created in the named\ndirectory under the buildout\u2019s <tt>parts</tt> directory.</p>\n<p>For example, consider the following buildout.cfg file:</p>\n<pre>[buildout]\nparts = openlayers-2.7-wms\n\n[openlayers-2.7-wms]\nrecipe = zgeo.recipe.openlayers\nurl = http://openlayers.org/download/OpenLayers-2.7.tar.gz\ninclude =\n    OpenLayers/Map.js\n    OpenLayers/Layer/WMS.js\n</pre>\n<p>Building it out:</p>\n<pre>$ bin/buildout -c buildout.cfg\nInstalling openlayers.\nopenlayers-2.7-wms: Creating download directory: /Users/seang/code/ol-recipes/downloads\nopenlayers-2.7-wms: Extracting package to /Users/seang/code/ol-recipes/parts/openlayers__compile__\nMerging libraries.\nImporting: OpenLayers.js\nImporting: OpenLayers/BaseTypes.js\nImporting: OpenLayers/Map.js\nImporting: OpenLayers/SingleFile.js\nImporting: OpenLayers/Util.js\nImporting: OpenLayers/BaseTypes/Class.js\nImporting: OpenLayers/Layer/WMS.js\n\nResolution pass 1...\nImporting: OpenLayers/BaseTypes/Bounds.js\n...\n\nRe-ordering files...\n\nExporting:  OpenLayers/SingleFile.js\nExporting:  OpenLayers.js\n...\nExporting:  OpenLayers/Layer/WMS.js\n\nTotal files merged: 22\nCompressing using jsmin.\nAdding license file.\nWriting to OpenLayers.js.\nDone.\n</pre>\n<p>Produces these files:</p>\n<pre>$ ls -l parts/openlayers-2.7-wms/\ntotal 224\n-rw-r--r--   1 seang  staff  112535 Jun  3 13:41 OpenLayers.js\ndrwxr-xr-x  25 seang  staff     850 Jun  3 13:41 img\ndrwxr-xr-x   3 seang  staff     102 Jun  3 13:41 theme\n</pre>\n<div id=\"detailed-documentation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Detailed Documentation</a></h2>\n<div id=\"supported-options\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Supported options</a></h3>\n<dl>\n<dt>url</dt>\n<dd>URL to the package that will be downloaded and extracted. The\nsupported package formats are .tar.gz, .tar.bz2, and .zip. The\nvalue must be a full URL,\ne.g. <a href=\"http://openlayers.org/download/OpenLayers-2.7.tar.gz\" rel=\"nofollow\">http://openlayers.org/download/OpenLayers-2.7.tar.gz</a>. The\n<tt>path</tt> option can not be used at the same time with <tt>url</tt>.</dd>\n<dt>path</dt>\n<dd>Path to a local directory containing the source code to be built\nand installed. The directory must contain the <tt>configure</tt>\nscript. The <tt>url</tt> option can not be used at the same time with\n<tt>path</tt>.</dd>\n<dt>filename</dt>\n<dd>Name of javascript file to be written. Defaults to <tt>OpenLayers.js</tt>.</dd>\n<dt>md5sum</dt>\n<dd>MD5 checksum for the package file. If available the MD5\nchecksum of the downloaded package will be compared to this value\nand if the values do not match the execution of the recipe will\nfail.</dd>\n<dt>patch-binary</dt>\n<dd>Path to the <tt>patch</tt> program. Defaults to \u2018patch\u2019 which should\nwork on any system that has the <tt>patch</tt> program available in the\nsystem <tt>PATH</tt>.</dd>\n<dt>patch-options</dt>\n<dd>Options passed to the <tt>patch</tt> program. Defaults to <tt><span class=\"pre\">-p0</span></tt>.</dd>\n<dt>patches</dt>\n<dd>List of patch files to the applied to the extracted source. Each\nfile should be given on a separate line.</dd>\n<dt>keep-compile-dir</dt>\n<dd>Switch to optionally keep the temporary directory where the\npackage was compiled. This is mostly useful for other recipes that\nuse this recipe to compile a software but wish to do some\nadditional steps not handled by this recipe. The location of the\ncompile directory is stored in <tt><span class=\"pre\">options['compile-directory']</span></tt>.\nAccepted values are \u2018true\u2019 or \u2018false\u2019, defaults to \u2018false\u2019.</dd>\n</dl>\n<p>Additionally, the recipe honors the <tt><span class=\"pre\">download-directory</span></tt> option set\nin the <tt>[buildout]</tt> section and stores the downloaded files under\nit. If the value is not set a directory called <tt>downloads</tt> will be\ncreated in the root of the buildout and the <tt><span class=\"pre\">download-directory</span></tt>\noption set accordingly.</p>\n<p>The recipe will first check if there is a local copy of the package\nbefore downloading it from the net. Files can be shared among\ndifferent buildouts by setting the <tt><span class=\"pre\">download-directory</span></tt> to the same\nlocation.</p>\n</div>\n<div id=\"example-usage\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Example usage</a></h3>\n<p>We\u2019ll use a simple tarball to demonstrate the recipe</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import os.path\n&gt;&gt;&gt; src = join(os.path.dirname(__file__), 'testdata')\n&gt;&gt;&gt; ls(src)\n-  OpenLayers-2.7.tar.gz\n-  README.txt\n</pre>\n</blockquote>\n<p>Let\u2019s create a buildout to build and install the package</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = package\n...\n... [package]\n... recipe = zgeo.recipe.openlayers\n... url = file://%s/OpenLayers-2.7.tar.gz\n... include =\n...     OpenLayers/Map.js\n...     OpenLayers/Layer/WMS.js\n... \"\"\" % src)\n</pre>\n</blockquote>\n<p>This will download, extract and build our demo package with the\ndefault build options</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print system(buildout)\nInstalling package.\npackage: Creating download directory: /sample-buildout/downloads\npackage: Extracting package to /sample-buildout/parts/package__compile__\nMerging libraries.\nImporting: OpenLayers.js\nImporting: OpenLayers/BaseTypes.js\nImporting: OpenLayers/Map.js\nImporting: OpenLayers/SingleFile.js\nImporting: OpenLayers/Util.js\nImporting: OpenLayers/BaseTypes/Class.js\nImporting: OpenLayers/Layer/WMS.js\n&lt;BLANKLINE&gt;\nResolution pass 1...\nImporting: OpenLayers/BaseTypes/Bounds.js\nImporting: OpenLayers/BaseTypes/Element.js\nImporting: OpenLayers/BaseTypes/LonLat.js\nImporting: OpenLayers/BaseTypes/Pixel.js\nImporting: OpenLayers/BaseTypes/Size.js\nImporting: OpenLayers/Events.js\nImporting: OpenLayers/Lang/en.js\nImporting: OpenLayers/Layer/Grid.js\nImporting: OpenLayers/Tile/Image.js\nImporting: OpenLayers/Tween.js\n&lt;BLANKLINE&gt;\nResolution pass 2...\nImporting: OpenLayers/Lang.js\nImporting: OpenLayers/Layer/HTTPRequest.js\nImporting: OpenLayers/Tile.js\n&lt;BLANKLINE&gt;\nResolution pass 3...\nImporting: OpenLayers/Layer.js\n&lt;BLANKLINE&gt;\nResolution pass 4...\nImporting: OpenLayers/Projection.js\n&lt;BLANKLINE&gt;\nResolution pass 5...\n&lt;BLANKLINE&gt;\nRe-ordering files...\n&lt;BLANKLINE&gt;\nExporting:  OpenLayers/SingleFile.js\nExporting:  OpenLayers.js\nExporting:  OpenLayers/BaseTypes.js\nExporting:  OpenLayers/BaseTypes/Class.js\nExporting:  OpenLayers/Util.js\nExporting:  OpenLayers/BaseTypes/Bounds.js\nExporting:  OpenLayers/BaseTypes/Element.js\nExporting:  OpenLayers/BaseTypes/LonLat.js\nExporting:  OpenLayers/BaseTypes/Pixel.js\nExporting:  OpenLayers/BaseTypes/Size.js\nExporting:  OpenLayers/Lang.js\nExporting:  OpenLayers/Tween.js\nExporting:  OpenLayers/Events.js\nExporting:  OpenLayers/Lang/en.js\nExporting:  OpenLayers/Projection.js\nExporting:  OpenLayers/Tile.js\nExporting:  OpenLayers/Map.js\nExporting:  OpenLayers/Tile/Image.js\nExporting:  OpenLayers/Layer.js\nExporting:  OpenLayers/Layer/HTTPRequest.js\nExporting:  OpenLayers/Layer/Grid.js\nExporting:  OpenLayers/Layer/WMS.js\n&lt;BLANKLINE&gt;\nTotal files merged: 22\nCompressing using jsmin.\nAdding license file.\nWriting to OpenLayers.js.\nDone.\n&lt;BLANKLINE&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"installing-checkouts\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Installing checkouts</a></h3>\n<p>Sometimes instead of downloading and building an existing tarball we\nneed to work with code that is already available on the filesystem,\nfor example an SVN checkout.</p>\n<p>Instead of providing the <tt>url</tt> option we will provide a <tt>path</tt>\noption to the directory containing the source code.</p>\n<p>Let\u2019s demonstrate this by first unpacking our test package to the\nfilesystem and building that</p>\n<blockquote>\n<pre>&gt;&gt;&gt; checkout_dir = tmpdir('checkout')\n&gt;&gt;&gt; import setuptools.archive_util\n&gt;&gt;&gt; setuptools.archive_util.unpack_archive('%s/OpenLayers-2.7.tar.gz' % src,\n...                                        checkout_dir)\n&gt;&gt;&gt; ls(checkout_dir)\nd OpenLayers-2.7\n</pre>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = package\n...\n... [package]\n... recipe = zgeo.recipe.openlayers\n... path = %s/OpenLayers-2.7\n... filename = ol-wms.js\n... include =\n...     OpenLayers/Map.js\n...     OpenLayers/Layer/WMS.js\n... \"\"\" % checkout_dir)\n</pre>\n<pre>&gt;&gt;&gt; print system(buildout)\nUninstalling package.\nInstalling package.\npackage: Using local source directory: /checkout/OpenLayers-2.7\nMerging libraries.\nImporting: OpenLayers.js\nImporting: OpenLayers/BaseTypes.js\nImporting: OpenLayers/Map.js\nImporting: OpenLayers/SingleFile.js\nImporting: OpenLayers/Util.js\nImporting: OpenLayers/BaseTypes/Class.js\nImporting: OpenLayers/Layer/WMS.js\n&lt;BLANKLINE&gt;\nResolution pass 1...\nImporting: OpenLayers/BaseTypes/Bounds.js\nImporting: OpenLayers/BaseTypes/Element.js\nImporting: OpenLayers/BaseTypes/LonLat.js\nImporting: OpenLayers/BaseTypes/Pixel.js\nImporting: OpenLayers/BaseTypes/Size.js\nImporting: OpenLayers/Events.js\nImporting: OpenLayers/Lang/en.js\nImporting: OpenLayers/Layer/Grid.js\nImporting: OpenLayers/Tile/Image.js\nImporting: OpenLayers/Tween.js\n&lt;BLANKLINE&gt;\nResolution pass 2...\nImporting: OpenLayers/Lang.js\nImporting: OpenLayers/Layer/HTTPRequest.js\nImporting: OpenLayers/Tile.js\n&lt;BLANKLINE&gt;\nResolution pass 3...\nImporting: OpenLayers/Layer.js\n&lt;BLANKLINE&gt;\nResolution pass 4...\nImporting: OpenLayers/Projection.js\n&lt;BLANKLINE&gt;\nResolution pass 5...\n&lt;BLANKLINE&gt;\nRe-ordering files...\n&lt;BLANKLINE&gt;\nExporting:  OpenLayers/SingleFile.js\nExporting:  OpenLayers.js\nExporting:  OpenLayers/BaseTypes.js\nExporting:  OpenLayers/BaseTypes/Class.js\nExporting:  OpenLayers/Util.js\nExporting:  OpenLayers/BaseTypes/Bounds.js\nExporting:  OpenLayers/BaseTypes/Element.js\nExporting:  OpenLayers/BaseTypes/LonLat.js\nExporting:  OpenLayers/BaseTypes/Pixel.js\nExporting:  OpenLayers/BaseTypes/Size.js\nExporting:  OpenLayers/Lang.js\nExporting:  OpenLayers/Tween.js\nExporting:  OpenLayers/Events.js\nExporting:  OpenLayers/Lang/en.js\nExporting:  OpenLayers/Projection.js\nExporting:  OpenLayers/Tile.js\nExporting:  OpenLayers/Map.js\nExporting:  OpenLayers/Tile/Image.js\nExporting:  OpenLayers/Layer.js\nExporting:  OpenLayers/Layer/HTTPRequest.js\nExporting:  OpenLayers/Layer/Grid.js\nExporting:  OpenLayers/Layer/WMS.js\n&lt;BLANKLINE&gt;\nTotal files merged: 22\nCompressing using jsmin.\nAdding license file.\nWriting to ol-wms.js.\nDone.\n&lt;BLANKLINE&gt;\n</pre>\n<pre>&gt;&gt;&gt; ls('parts/package')\nd  img\n-  ol-wms.js\nd  theme\n</pre>\n</blockquote>\n<p>Since using the <tt>path</tt> implies that the source code has been\nacquired outside of the control of the recipe also the responsibility\nof managing it is outside of the recipe.</p>\n</div>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Contributors</a></h2>\n<p>Sean Gillies, Author</p>\n</div>\n<div id=\"change-history\">\n<h2><a href=\"#id8\" rel=\"nofollow\">Change history</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id9\" rel=\"nofollow\">0.2 (2009-06-04)</a></h3>\n<ul>\n<li>Add output filename option.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id10\" rel=\"nofollow\">0.1 (2009-06-03)</a></h3>\n<ul>\n<li>Created recipe with ZopeSkel.</li>\n</ul>\n</div>\n</div>\n<div id=\"download\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Download</a></h2>\n</div>\n\n          </div>"}, "last_serial": 802273, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "879f23fd184e3ca31bea6f4aa4aebd60", "sha256": "6ea2f5c358b28647ad737100e838fa71b0ab2cc703df9a7ce575a728e1f38881"}, "downloads": -1, "filename": "zgeo.recipe.openlayers-0.1.tar.gz", "has_sig": false, "md5_digest": "879f23fd184e3ca31bea6f4aa4aebd60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9777, "upload_time": "2009-06-03T22:31:16", "upload_time_iso_8601": "2009-06-03T22:31:16.101445Z", "url": "https://files.pythonhosted.org/packages/94/ca/d8c9847207d80cc19b3778b41192b4f5befd5067561ff6a9b7650eebba89/zgeo.recipe.openlayers-0.1.tar.gz", "yanked": false}], "0.1dev": [{"comment_text": "", "digests": {"md5": "4333ef0f00ba69576044f26912ac09d8", "sha256": "82f2345f3d663a0c91221f2b08473da97dff739c49f477b3412f63fae879a60d"}, "downloads": -1, "filename": "zgeo.recipe.openlayers-0.1dev.tar.gz", "has_sig": false, "md5_digest": "4333ef0f00ba69576044f26912ac09d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9428, "upload_time": "2009-06-03T22:10:56", "upload_time_iso_8601": "2009-06-03T22:10:56.068083Z", "url": "https://files.pythonhosted.org/packages/d6/82/bec047c5114d96868b8461253ca566aa4107c11d5d3acd767be1b876d3a2/zgeo.recipe.openlayers-0.1dev.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "62bb0b38acba81284236e67abefab6b4", "sha256": "dc09eaa2f88ec7aacf2f0cad111235ce5aadcb3e80526a3e46c724f77c89c3f5"}, "downloads": -1, "filename": "zgeo.recipe.openlayers-0.2.tar.gz", "has_sig": false, "md5_digest": "62bb0b38acba81284236e67abefab6b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9779, "upload_time": "2009-06-04T21:34:11", "upload_time_iso_8601": "2009-06-04T21:34:11.662009Z", "url": "https://files.pythonhosted.org/packages/04/e2/1c6cc4544924806d294ebc5db75dd77417b274cdaec2fcd8e1b456531c91/zgeo.recipe.openlayers-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62bb0b38acba81284236e67abefab6b4", "sha256": "dc09eaa2f88ec7aacf2f0cad111235ce5aadcb3e80526a3e46c724f77c89c3f5"}, "downloads": -1, "filename": "zgeo.recipe.openlayers-0.2.tar.gz", "has_sig": false, "md5_digest": "62bb0b38acba81284236e67abefab6b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9779, "upload_time": "2009-06-04T21:34:11", "upload_time_iso_8601": "2009-06-04T21:34:11.662009Z", "url": "https://files.pythonhosted.org/packages/04/e2/1c6cc4544924806d294ebc5db75dd77417b274cdaec2fcd8e1b456531c91/zgeo.recipe.openlayers-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:05 2020"}