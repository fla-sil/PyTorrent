{"info": {"author": "beginman", "author_email": "xinxinyu2011@163.com", "bugtrack_url": null, "classifiers": [], "description": "Usage:\r\n\r\n```python\r\nimport tornado.ioloop\r\nimport tornado.web\r\n\r\nfrom toroute import route\r\n\r\n@route('/')\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write(\"Hello, world\")\r\n\r\n@route('/login', name='login')\r\nclass LoginHandler(tornado.web.RequestHandler):\r\n    def get(self, *args, **kwargs):\r\n        self.write('login')\r\n\r\n# group by `/blog`, e.g.: blog app\r\n@route('/list', name='blog_list', kwargs={'data': 'hello'}, group='/blog')\r\nclass BlogListHandler(tornado.web.RequestHandler):\r\n    def initialize(self, **kwargs):\r\n        self.data = kwargs.get('data', None)\r\n\r\n    def get(self, *args, **kwargs):\r\n        self.write(self.data)\r\n\r\n@route('/post', name='blog_post', group='/blog')\r\nclass BlogPostHandler(tornado.web.RequestHandler):\r\n    def get(self, *args, **kwargs):\r\n        print('post complete! redirect:%s' % route.url_for('blog_list'))\r\n        self.redirect(route.url_for('blog_list'))\r\n\r\n@route(r'/view/(?P<pid>\\d+)/detail', name='blog_view', group='/blog')\r\nclass BlogViewHandler(tornado.web.RequestHandler):\r\n    def get(self, pid, **kwargs):\r\n        msg = 'Handle Class for /blog/list is %s' \\\r\n              % route.get_handler_class('/list', group='/blog').__name__\r\n        self.write(msg)\r\n\r\nif __name__ == '__main__':\r\n\r\n    application = tornado.web.Application([\r\n        (r\"/\", MainHandler),\r\n    ] + route.routes())\r\n    application.listen(8000)\r\n    tornado.ioloop.IOLoop.current().start()\r\n\r\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BeginMan/torroute", "keywords": "tornado,routes,flask-like,route decorator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torroute", "package_url": "https://pypi.org/project/torroute/", "platform": "any", "project_url": "https://pypi.org/project/torroute/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/BeginMan/torroute"}, "release_url": "https://pypi.org/project/torroute/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Delicate Tornado Route Decorator.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Usage:\n<br>\n<br>```python\n<br>import tornado.ioloop\n<br>import tornado.web\n<br>\n<br>from toroute import route\n<br>\n<br>@route('/')\n<br>class MainHandler(tornado.web.RequestHandler):\n<br>    def get(self):\n<br>        self.write(\"Hello, world\")\n<br>\n<br>@route('/login', name='login')\n<br>class LoginHandler(tornado.web.RequestHandler):\n<br>    def get(self, *args, **kwargs):\n<br>        self.write('login')\n<br>\n<br># group by `/blog`, e.g.: blog app\n<br>@route('/list', name='blog_list', kwargs={'data': 'hello'}, group='/blog')\n<br>class BlogListHandler(tornado.web.RequestHandler):\n<br>    def initialize(self, **kwargs):\n<br>        self.data = kwargs.get('data', None)\n<br>\n<br>    def get(self, *args, **kwargs):\n<br>        self.write(self.data)\n<br>\n<br>@route('/post', name='blog_post', group='/blog')\n<br>class BlogPostHandler(tornado.web.RequestHandler):\n<br>    def get(self, *args, **kwargs):\n<br>        print('post complete! redirect:%s' % route.url_for('blog_list'))\n<br>        self.redirect(route.url_for('blog_list'))\n<br>\n<br>@route(r'/view/(?P&lt;pid&gt;\\d+)/detail', name='blog_view', group='/blog')\n<br>class BlogViewHandler(tornado.web.RequestHandler):\n<br>    def get(self, pid, **kwargs):\n<br>        msg = 'Handle Class for /blog/list is %s' \\\n<br>              % route.get_handler_class('/list', group='/blog').__name__\n<br>        self.write(msg)\n<br>\n<br>if __name__ == '__main__':\n<br>\n<br>    application = tornado.web.Application([\n<br>        (r\"/\", MainHandler),\n<br>    ] + route.routes())\n<br>    application.listen(8000)\n<br>    tornado.ioloop.IOLoop.current().start()\n<br>\n<br>```\n          </div>"}, "last_serial": 2306672, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "30a5bb8250b77614d944c66c6234c558", "sha256": "43b74b6a271981fccdc444557cdf1ef4a0f455cd9f5e63add50415b9c5d7f0f1"}, "downloads": -1, "filename": "torroute-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30a5bb8250b77614d944c66c6234c558", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1357, "upload_time": "2016-08-26T15:21:07", "upload_time_iso_8601": "2016-08-26T15:21:07.911497Z", "url": "https://files.pythonhosted.org/packages/a9/b2/b5f6b653ff074d961579e7277f4dc2b75e4fd7953c4042ab69d2249eab8d/torroute-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30a5bb8250b77614d944c66c6234c558", "sha256": "43b74b6a271981fccdc444557cdf1ef4a0f455cd9f5e63add50415b9c5d7f0f1"}, "downloads": -1, "filename": "torroute-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30a5bb8250b77614d944c66c6234c558", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1357, "upload_time": "2016-08-26T15:21:07", "upload_time_iso_8601": "2016-08-26T15:21:07.911497Z", "url": "https://files.pythonhosted.org/packages/a9/b2/b5f6b653ff074d961579e7277f4dc2b75e4fd7953c4042ab69d2249eab8d/torroute-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:40 2020"}