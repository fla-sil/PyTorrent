{"info": {"author": "Pavel Yakubovskiy", "author_email": "qubvel@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# EfficientNet Keras (and TensorFlow Keras)\n\nThis repository contains a Keras (and TensorFlow Keras) reimplementation of **EfficientNet**, a lightweight convolutional neural network architecture achieving the [state-of-the-art accuracy with an order of magnitude fewer parameters and FLOPS](https://arxiv.org/abs/1905.11946), on both ImageNet and\nfive other commonly used transfer learning datasets.\n\nThe codebase is heavily inspired by the [TensorFlow implementation](https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet).\n\n## Important!\nThere was a huge library update **24 of July**. Now efficintnet works with both frameworks: `keras` and `tensorflow.keras`.\nIf you have models, trained before that date, to load them, please, use efficientnet of 0.0.4 version (PyPI). You can roll back using `pip install -U efficientnet==0.0.4`.\n\n## Table of Contents\n\n 1. [About EfficientNet Models](#about-efficientnet-models)\n 2. [Examples](#examples)\n 3. [Models](#models)\n 4. [Installation](#installation)\n 5. [Frequently Asked Questions](#frequently-asked-questions)\n 6. [Acknowledgements](#acknowledgements)\n\n## About EfficientNet Models\n\nEfficientNets rely on AutoML and compound scaling to achieve superior performance without compromising resource efficiency. The [AutoML Mobile framework](https://ai.googleblog.com/2018/08/mnasnet-towards-automating-design-of.html) has helped develop a mobile-size baseline network, **EfficientNet-B0**, which is then improved by the compound scaling method  to obtain EfficientNet-B1 to B7.\n\n<table border=\"0\">\n<tr>\n    <td>\n    <img src=\"https://raw.githubusercontent.com/tensorflow/tpu/master/models/official/efficientnet/g3doc/params.png\" width=\"100%\" />\n    </td>\n    <td>\n    <img src=\"https://raw.githubusercontent.com/tensorflow/tpu/master/models/official/efficientnet/g3doc/flops.png\", width=\"90%\" />\n    </td>\n</tr>\n</table>\n\nEfficientNets achieve state-of-the-art accuracy on ImageNet with an order of magnitude better efficiency:\n\n* In high-accuracy regime, EfficientNet-B7 achieves the state-of-the-art 84.4% top-1 / 97.1% top-5 accuracy on ImageNet with 66M parameters and 37B FLOPS. At the same time, the model is 8.4x smaller and 6.1x faster on CPU inference than the former leader, [Gpipe](https://arxiv.org/abs/1811.06965).\n\n* In middle-accuracy regime, EfficientNet-B1 is 7.6x smaller and 5.7x faster on CPU inference than [ResNet-152](https://arxiv.org/abs/1512.03385), with similar ImageNet accuracy.\n\n* Compared to the widely used [ResNet-50](https://arxiv.org/abs/1512.03385), EfficientNet-B4 improves the top-1 accuracy from 76.3% of ResNet-50 to 82.6% (+6.3%), under similar FLOPS constraints.\n\n## Examples\n\n* *Initializing the model*:\n\n```python\n# models can be build with Keras or Tensorflow frameworks\n# use keras and tfkeras modules respectively\n# efficientnet.keras / efficientnet.tfkeras\nimport efficientnet.keras as efn \n\nmodel = efn.EfficientNetB0(weights='imagenet')  # or weights='noisy-student'\n\n```\n\n* *Loading the pre-trained weights*:\n\n```python\n# model use some custom objects, so before loading saved model\n# import module your network was build with\n# e.g. import efficientnet.keras / import efficientnet.tfkeras\nimport efficientnet.tfkeras\nfrom tensorflow.keras.models import load_model\n\nmodel = load_model('path/to/model.h5')\n```\n\nSee the complete example of loading the model and making an inference in the Jupyter notebook [here](https://github.com/qubvel/efficientnet/blob/master/examples/inference_example.ipynb).\n\n## Models\n\nThe performance of each model variant using the pre-trained weights converted from checkpoints provided by the authors is as follows:\n\n| Architecture   | @top1* Imagenet| @top1* Noisy-Student| \n| -------------- | :----: |:---:|\n| EfficientNetB0 | 0.772  |0.788|\n| EfficientNetB1 | 0.791  |0.815|\n| EfficientNetB2 | 0.802  |0.824|\n| EfficientNetB3 | 0.816  |0.841|\n| EfficientNetB4 | 0.830  |0.853|\n| EfficientNetB5 | 0.837  |0.861|\n| EfficientNetB6 | 0.841  |0.864|\n| EfficientNetB7 | 0.844  |0.869|\n\n**\\*** - topK accuracy score for converted models (imagenet `val` set)\n\n## Installation\n\n### Requirements\n\n* `Keras >= 2.2.0` / `TensorFlow >= 1.12.0`\n* `keras_applications >= 1.0.7`\n* `scikit-image`\n\n### Installing from the source\n\n```bash\n$ pip install -U git+https://github.com/qubvel/efficientnet\n```\n\n### Installing from PyPI\n\nPyPI stable release\n\n```bash\n$ pip install -U efficientnet\n```\n\nPyPI latest release (with keras and tf.keras support)\n\n```bash\n$ pip install -U --pre efficientnet\n```\n\n## Frequently Asked Questions\n\n* **How can I convert the original TensorFlow checkpoints to Keras HDF5?**\n\nPick the target directory (like `dist`) and run the [converter script](./scripts) from the repo directory as follows:\n\n```bash\n$ ./scripts/convert_efficientnet.sh --target_dir dist\n```\n\nYou can also optionally create the virtual environment with all the dependencies installed by adding `--make_venv=true` and operate in a self-destructing temporary location instead of the target directory by setting `--tmp_working_dir=true`.\n\n## Acknowledgements\nI would like to thanks community members who actively contribute to this repository:\n\n1) Sasha Illarionov ([@sdll](https://github.com/sdll)) for preparing automated script for weights conversion\n2) Bj\u00f6rn Barz ([@Callidior](https://github.com/Callidior)) for model code adaptation for keras and tensorflow.keras frameworks \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/qubvel/efficientnet", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "efficientnet", "package_url": "https://pypi.org/project/efficientnet/", "platform": "", "project_url": "https://pypi.org/project/efficientnet/", "project_urls": {"Homepage": "https://github.com/qubvel/efficientnet"}, "release_url": "https://pypi.org/project/efficientnet/1.1.0/", "requires_dist": ["keras-applications (<=1.0.8,>=1.0.7)", "scikit-image", "pytest ; extra == 'test'"], "requires_python": ">=3.0.0", "summary": "EfficientNet model re-implementation. Keras and TensorFlow Keras.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>EfficientNet Keras (and TensorFlow Keras)</h1>\n<p>This repository contains a Keras (and TensorFlow Keras) reimplementation of <strong>EfficientNet</strong>, a lightweight convolutional neural network architecture achieving the <a href=\"https://arxiv.org/abs/1905.11946\" rel=\"nofollow\">state-of-the-art accuracy with an order of magnitude fewer parameters and FLOPS</a>, on both ImageNet and\nfive other commonly used transfer learning datasets.</p>\n<p>The codebase is heavily inspired by the <a href=\"https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet\" rel=\"nofollow\">TensorFlow implementation</a>.</p>\n<h2>Important!</h2>\n<p>There was a huge library update <strong>24 of July</strong>. Now efficintnet works with both frameworks: <code>keras</code> and <code>tensorflow.keras</code>.\nIf you have models, trained before that date, to load them, please, use efficientnet of 0.0.4 version (PyPI). You can roll back using <code>pip install -U efficientnet==0.0.4</code>.</p>\n<h2>Table of Contents</h2>\n<ol>\n<li><a href=\"#about-efficientnet-models\" rel=\"nofollow\">About EfficientNet Models</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#models\" rel=\"nofollow\">Models</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#frequently-asked-questions\" rel=\"nofollow\">Frequently Asked Questions</a></li>\n<li><a href=\"#acknowledgements\" rel=\"nofollow\">Acknowledgements</a></li>\n</ol>\n<h2>About EfficientNet Models</h2>\n<p>EfficientNets rely on AutoML and compound scaling to achieve superior performance without compromising resource efficiency. The <a href=\"https://ai.googleblog.com/2018/08/mnasnet-towards-automating-design-of.html\" rel=\"nofollow\">AutoML Mobile framework</a> has helped develop a mobile-size baseline network, <strong>EfficientNet-B0</strong>, which is then improved by the compound scaling method  to obtain EfficientNet-B1 to B7.</p>\n<table>\n<tr>\n    <td>\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acfb05f8a49eb76db65cf17ac4455aa800f1ab37/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f74656e736f72666c6f772f7470752f6d61737465722f6d6f64656c732f6f6666696369616c2f656666696369656e746e65742f6733646f632f706172616d732e706e67\" width=\"100%\">\n    </td>\n    <td>\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02731be4faa16b3d9288be054750067e2621f31a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f74656e736f72666c6f772f7470752f6d61737465722f6d6f64656c732f6f6666696369616c2f656666696369656e746e65742f6733646f632f666c6f70732e706e67\" width=\"90%\">\n    </td>\n</tr>\n</table>\n<p>EfficientNets achieve state-of-the-art accuracy on ImageNet with an order of magnitude better efficiency:</p>\n<ul>\n<li>\n<p>In high-accuracy regime, EfficientNet-B7 achieves the state-of-the-art 84.4% top-1 / 97.1% top-5 accuracy on ImageNet with 66M parameters and 37B FLOPS. At the same time, the model is 8.4x smaller and 6.1x faster on CPU inference than the former leader, <a href=\"https://arxiv.org/abs/1811.06965\" rel=\"nofollow\">Gpipe</a>.</p>\n</li>\n<li>\n<p>In middle-accuracy regime, EfficientNet-B1 is 7.6x smaller and 5.7x faster on CPU inference than <a href=\"https://arxiv.org/abs/1512.03385\" rel=\"nofollow\">ResNet-152</a>, with similar ImageNet accuracy.</p>\n</li>\n<li>\n<p>Compared to the widely used <a href=\"https://arxiv.org/abs/1512.03385\" rel=\"nofollow\">ResNet-50</a>, EfficientNet-B4 improves the top-1 accuracy from 76.3% of ResNet-50 to 82.6% (+6.3%), under similar FLOPS constraints.</p>\n</li>\n</ul>\n<h2>Examples</h2>\n<ul>\n<li><em>Initializing the model</em>:</li>\n</ul>\n<pre><span class=\"c1\"># models can be build with Keras or Tensorflow frameworks</span>\n<span class=\"c1\"># use keras and tfkeras modules respectively</span>\n<span class=\"c1\"># efficientnet.keras / efficientnet.tfkeras</span>\n<span class=\"kn\">import</span> <span class=\"nn\">efficientnet.keras</span> <span class=\"k\">as</span> <span class=\"nn\">efn</span> \n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">efn</span><span class=\"o\">.</span><span class=\"n\">EfficientNetB0</span><span class=\"p\">(</span><span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"s1\">'imagenet'</span><span class=\"p\">)</span>  <span class=\"c1\"># or weights='noisy-student'</span>\n</pre>\n<ul>\n<li><em>Loading the pre-trained weights</em>:</li>\n</ul>\n<pre><span class=\"c1\"># model use some custom objects, so before loading saved model</span>\n<span class=\"c1\"># import module your network was build with</span>\n<span class=\"c1\"># e.g. import efficientnet.keras / import efficientnet.tfkeras</span>\n<span class=\"kn\">import</span> <span class=\"nn\">efficientnet.tfkeras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tensorflow.keras.models</span> <span class=\"kn\">import</span> <span class=\"n\">load_model</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">load_model</span><span class=\"p\">(</span><span class=\"s1\">'path/to/model.h5'</span><span class=\"p\">)</span>\n</pre>\n<p>See the complete example of loading the model and making an inference in the Jupyter notebook <a href=\"https://github.com/qubvel/efficientnet/blob/master/examples/inference_example.ipynb\" rel=\"nofollow\">here</a>.</p>\n<h2>Models</h2>\n<p>The performance of each model variant using the pre-trained weights converted from checkpoints provided by the authors is as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Architecture</th>\n<th align=\"center\">@top1* Imagenet</th>\n<th align=\"center\">@top1* Noisy-Student</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>EfficientNetB0</td>\n<td align=\"center\">0.772</td>\n<td align=\"center\">0.788</td>\n</tr>\n<tr>\n<td>EfficientNetB1</td>\n<td align=\"center\">0.791</td>\n<td align=\"center\">0.815</td>\n</tr>\n<tr>\n<td>EfficientNetB2</td>\n<td align=\"center\">0.802</td>\n<td align=\"center\">0.824</td>\n</tr>\n<tr>\n<td>EfficientNetB3</td>\n<td align=\"center\">0.816</td>\n<td align=\"center\">0.841</td>\n</tr>\n<tr>\n<td>EfficientNetB4</td>\n<td align=\"center\">0.830</td>\n<td align=\"center\">0.853</td>\n</tr>\n<tr>\n<td>EfficientNetB5</td>\n<td align=\"center\">0.837</td>\n<td align=\"center\">0.861</td>\n</tr>\n<tr>\n<td>EfficientNetB6</td>\n<td align=\"center\">0.841</td>\n<td align=\"center\">0.864</td>\n</tr>\n<tr>\n<td>EfficientNetB7</td>\n<td align=\"center\">0.844</td>\n<td align=\"center\">0.869</td>\n</tr></tbody></table>\n<p><strong>*</strong> - topK accuracy score for converted models (imagenet <code>val</code> set)</p>\n<h2>Installation</h2>\n<h3>Requirements</h3>\n<ul>\n<li><code>Keras &gt;= 2.2.0</code> / <code>TensorFlow &gt;= 1.12.0</code></li>\n<li><code>keras_applications &gt;= 1.0.7</code></li>\n<li><code>scikit-image</code></li>\n</ul>\n<h3>Installing from the source</h3>\n<pre>$ pip install -U git+https://github.com/qubvel/efficientnet\n</pre>\n<h3>Installing from PyPI</h3>\n<p>PyPI stable release</p>\n<pre>$ pip install -U efficientnet\n</pre>\n<p>PyPI latest release (with keras and tf.keras support)</p>\n<pre>$ pip install -U --pre efficientnet\n</pre>\n<h2>Frequently Asked Questions</h2>\n<ul>\n<li><strong>How can I convert the original TensorFlow checkpoints to Keras HDF5?</strong></li>\n</ul>\n<p>Pick the target directory (like <code>dist</code>) and run the <a href=\"./scripts\" rel=\"nofollow\">converter script</a> from the repo directory as follows:</p>\n<pre>$ ./scripts/convert_efficientnet.sh --target_dir dist\n</pre>\n<p>You can also optionally create the virtual environment with all the dependencies installed by adding <code>--make_venv=true</code> and operate in a self-destructing temporary location instead of the target directory by setting <code>--tmp_working_dir=true</code>.</p>\n<h2>Acknowledgements</h2>\n<p>I would like to thanks community members who actively contribute to this repository:</p>\n<ol>\n<li>Sasha Illarionov (<a href=\"https://github.com/sdll\" rel=\"nofollow\">@sdll</a>) for preparing automated script for weights conversion</li>\n<li>Bj\u00f6rn Barz (<a href=\"https://github.com/Callidior\" rel=\"nofollow\">@Callidior</a>) for model code adaptation for keras and tensorflow.keras frameworks</li>\n</ol>\n\n          </div>"}, "last_serial": 6717196, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "03189ff5cb788e5f0684e91935613249", "sha256": "d74fa8f90f2a73ad7df4a2599fc938c01345b5deca4d6647976197e9e7ba915f"}, "downloads": -1, "filename": "efficientnet-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03189ff5cb788e5f0684e91935613249", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.0.0", "size": 10512, "upload_time": "2019-05-31T13:32:02", "upload_time_iso_8601": "2019-05-31T13:32:02.841522Z", "url": "https://files.pythonhosted.org/packages/85/c2/d47aa1e692d03b59b8a35e9969919af1c0200e96eb56ed69619adf1f4bad/efficientnet-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98ab287455997f7b273330e34f080036", "sha256": "83bbd5799a4c09f774a69016afb6614879d5383fa3f432a307e440f90276df73"}, "downloads": -1, "filename": "efficientnet-0.0.2.tar.gz", "has_sig": false, "md5_digest": "98ab287455997f7b273330e34f080036", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 11877, "upload_time": "2019-05-31T13:32:05", "upload_time_iso_8601": "2019-05-31T13:32:05.390033Z", "url": "https://files.pythonhosted.org/packages/34/31/93031ed43e1c848b62f920e20757b5c947754946b3db9baa2ebc9af95065/efficientnet-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ab768dc29e941807486f09a1bbeb8738", "sha256": "ea913bab2c21c694fdb9dde81df1ced52e578f485ea4d7b8e7539d19492964e2"}, "downloads": -1, "filename": "efficientnet-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab768dc29e941807486f09a1bbeb8738", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.0.0", "size": 11287, "upload_time": "2019-06-04T12:06:21", "upload_time_iso_8601": "2019-06-04T12:06:21.968760Z", "url": "https://files.pythonhosted.org/packages/66/9c/8bee2927037da1a56e899eb62140fba2862a0d4faeeacbdbe7a1f27bd528/efficientnet-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5343530cd9a6453fbbfd7426ae5ba4d5", "sha256": "880b33a0d6919f20079f5c678c5a6b4527e354d5dcf9967499efee18b0321c29"}, "downloads": -1, "filename": "efficientnet-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5343530cd9a6453fbbfd7426ae5ba4d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 12422, "upload_time": "2019-06-04T12:06:23", "upload_time_iso_8601": "2019-06-04T12:06:23.692732Z", "url": "https://files.pythonhosted.org/packages/78/3b/d68dc41b1c3c7741b512ab41106ef0081e8fd2fe3683af196a523e3bc5f2/efficientnet-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "abc04c6d8974f8a07a987c557e41b45e", "sha256": "b5a74cb90531fac350efc728a434e727c9a174262201f0ec907c2296e4dd4321"}, "downloads": -1, "filename": "efficientnet-0.0.4.tar.gz", "has_sig": false, "md5_digest": "abc04c6d8974f8a07a987c557e41b45e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 13934, "upload_time": "2019-07-16T13:56:20", "upload_time_iso_8601": "2019-07-16T13:56:20.489913Z", "url": "https://files.pythonhosted.org/packages/a6/80/f2c098284f7c07491e66af18d9a5fea595d4b507d10c0845275b8d47dc6f/efficientnet-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "77d14d6420b843ad57b9008ed3d6743e", "sha256": "c6fd035d856c9f1c409f3ac19e7655e54a13851046c821e9d4417fd12bcbaae4"}, "downloads": -1, "filename": "efficientnet-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "77d14d6420b843ad57b9008ed3d6743e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 17685, "upload_time": "2019-10-04T10:15:05", "upload_time_iso_8601": "2019-10-04T10:15:05.195102Z", "url": "https://files.pythonhosted.org/packages/97/82/f3ae07316f0461417dc54affab6e86ab188a5a22f33176d35271628b96e0/efficientnet-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f440c98ae3a65c3d110e528ea8e2cc9e", "sha256": "868715f6f5467186c0fa67ee8c9d50260b22f3a1bfb5919acd9911358be54df9"}, "downloads": -1, "filename": "efficientnet-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f440c98ae3a65c3d110e528ea8e2cc9e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 15153, "upload_time": "2019-10-04T10:15:07", "upload_time_iso_8601": "2019-10-04T10:15:07.122411Z", "url": "https://files.pythonhosted.org/packages/da/94/0af58e74b6e3f1f217a84289e9fd5a11e75276ac675d5c24d512f6a56720/efficientnet-1.0.0.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "e864b3c161d1c1b71b85b11e45304db2", "sha256": "896d15c3af3bf667cd01f7b4be3d01977563c36497a9bdf20063fdb881692a60"}, "downloads": -1, "filename": "efficientnet-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "e864b3c161d1c1b71b85b11e45304db2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 15066, "upload_time": "2019-08-02T11:46:59", "upload_time_iso_8601": "2019-08-02T11:46:59.769564Z", "url": "https://files.pythonhosted.org/packages/a3/57/3f6958739df536df03c15cf6ed620589ff66bba4eaae76e053cdb2d9206d/efficientnet-1.0.0b1.tar.gz", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "6e1fde6bb8a933101b4e91d7ad32a4b8", "sha256": "96b3523124e141be16890d2a5164fad7bc6b29978c306f746e5dbf47e2cbb80a"}, "downloads": -1, "filename": "efficientnet-1.0.0b2.tar.gz", "has_sig": false, "md5_digest": "6e1fde6bb8a933101b4e91d7ad32a4b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 15170, "upload_time": "2019-08-05T08:49:45", "upload_time_iso_8601": "2019-08-05T08:49:45.723560Z", "url": "https://files.pythonhosted.org/packages/0d/3b/43d8559857c0ad75947ff9de116c35f69c41744a0e5bd776a88e8fd82371/efficientnet-1.0.0b2.tar.gz", "yanked": false}], "1.0.0b3": [{"comment_text": "", "digests": {"md5": "4523ffdd8b20627d899e848d87625ff6", "sha256": "36af60ce91ef47e8223d06d85fe6ee3908ac6599bc0d378bb0c17cf497ce6e42"}, "downloads": -1, "filename": "efficientnet-1.0.0b3.tar.gz", "has_sig": false, "md5_digest": "4523ffdd8b20627d899e848d87625ff6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 15056, "upload_time": "2019-08-08T15:40:08", "upload_time_iso_8601": "2019-08-08T15:40:08.802631Z", "url": "https://files.pythonhosted.org/packages/7d/dc/b1c056e41651f939dc725e3ae8b9369fdb1ca9a72761328b4f4b4df28ddc/efficientnet-1.0.0b3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "80daba497ac22bff3d33938aa9f7d082", "sha256": "4f8a56d15e9c44e9a62dae35404079724c4a1d9e9bfbcfd2a18077e5eda58bf7"}, "downloads": -1, "filename": "efficientnet-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "80daba497ac22bff3d33938aa9f7d082", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 18326, "upload_time": "2020-02-28T13:20:48", "upload_time_iso_8601": "2020-02-28T13:20:48.771645Z", "url": "https://files.pythonhosted.org/packages/28/91/67848a143b54c331605bfba5fd31cf4e9db13d2e429d103fe807acc3bcf4/efficientnet-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "059e8f65608eed0d29bda41326404a36", "sha256": "7dbd022687d6850ed969a78a40a4ab676b6d0c3f52ee459b18c16543b6aa397a"}, "downloads": -1, "filename": "efficientnet-1.1.0.tar.gz", "has_sig": false, "md5_digest": "059e8f65608eed0d29bda41326404a36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 15831, "upload_time": "2020-02-28T13:20:49", "upload_time_iso_8601": "2020-02-28T13:20:49.990563Z", "url": "https://files.pythonhosted.org/packages/a8/b8/7a9022c9cdc5abb3cd49ddccf7ad706d51ac52680633ec90ca43fce4e964/efficientnet-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "80daba497ac22bff3d33938aa9f7d082", "sha256": "4f8a56d15e9c44e9a62dae35404079724c4a1d9e9bfbcfd2a18077e5eda58bf7"}, "downloads": -1, "filename": "efficientnet-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "80daba497ac22bff3d33938aa9f7d082", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 18326, "upload_time": "2020-02-28T13:20:48", "upload_time_iso_8601": "2020-02-28T13:20:48.771645Z", "url": "https://files.pythonhosted.org/packages/28/91/67848a143b54c331605bfba5fd31cf4e9db13d2e429d103fe807acc3bcf4/efficientnet-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "059e8f65608eed0d29bda41326404a36", "sha256": "7dbd022687d6850ed969a78a40a4ab676b6d0c3f52ee459b18c16543b6aa397a"}, "downloads": -1, "filename": "efficientnet-1.1.0.tar.gz", "has_sig": false, "md5_digest": "059e8f65608eed0d29bda41326404a36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 15831, "upload_time": "2020-02-28T13:20:49", "upload_time_iso_8601": "2020-02-28T13:20:49.990563Z", "url": "https://files.pythonhosted.org/packages/a8/b8/7a9022c9cdc5abb3cd49ddccf7ad706d51ac52680633ec90ca43fce4e964/efficientnet-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:21 2020"}