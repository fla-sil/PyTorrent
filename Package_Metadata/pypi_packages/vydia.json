{"info": {"author": "kpj", "author_email": "kpjkpjkpjkpjkpjkpj@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Video :: Display"], "description": "Vydia\n=====\n\n`PyPI <https://pypi.python.org/pypi/vydia>`__ `Build\nStatus <https://travis-ci.org/kpj/Vydia>`__\n\nA modularized video player written in Python (supporting AirPlay).\n\n.. figure:: docs/vydia.gif\n   :alt: Vydia-gif\n\n   Vydia-gif\n\nInstallation\n------------\n\n.. code:: bash\n\n   $ pip install vydia\n\nUsage\n-----\n\nSimply call ``vydia`` without arguments to launch the TUI:\n\n.. code:: bash\n\n   $ vydia\n\nParameters and Commands\n-----------------------\n\n.. code:: bash\n\n   $ vydia --help\n   Usage: vydia [OPTIONS] COMMAND [ARGS]...\n\n   Options:\n     --video / --no-video  Suppress mpv video output.\n     --airplay TEXT        Use airplay server if specified (format: \"<ip>:<port>\").\n     --help                Show this message and exit.\n\n   Commands:\n     add_playlist          Add new playlist by id.\n     list_airplay_devices  List available airplay devices.\n\nAdditionally, an internal commandline can be summoned by typing ``:``\n(note: it supports autocompletion using ``[TAB]``). Also, pressing ``h``\nshows a help page.\n\nThe following commands are supported (in the correct context): \\*\nPlaylist View: \\* ``add <playlist id>``: add given playlist \\*\n``delete``: delete currently selected playlist \\* ``quit``: quit Vydia\n(``[q]``) \\* Episode View: \\* ``pause``: toggle pause in running episode\n(``<space>``) \\* ``info``: show video-related information (``i``) \\*\n``reload``: reload playlist using plugin \\* ``reverse``: reverse episode\norder \\* ``shuffle``: shuffle episode order \\* ``next``: play next video\n(``[>]``) \\* ``previous``: play previous video (``[<]``) \\*\n``continue``: continue playback from last save (``[c]``) \\* ``quit``:\nquit Vydia (``[q]``)\n\nFurthermore, the following shortcuts exist: \\* Episode View: \\* ``w``:\n(un)mark currently selected video as watched\n\nPlugins\n-------\n\n-  Filesystem\n-  Youtube", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kpj/Vydia", "keywords": "vydia video playback", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vydia", "package_url": "https://pypi.org/project/vydia/", "platform": "", "project_url": "https://pypi.org/project/vydia/", "project_urls": {"Homepage": "https://github.com/kpj/Vydia"}, "release_url": "https://pypi.org/project/vydia/0.6.4/", "requires_dist": null, "requires_python": "", "summary": "A modularized video player with resume function", "version": "0.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/vydia\" rel=\"nofollow\">PyPI</a> <a href=\"https://travis-ci.org/kpj/Vydia\" rel=\"nofollow\">Build\nStatus</a></p>\n<p>A modularized video player written in Python (supporting AirPlay).</p>\n<div>\n<img alt=\"Vydia-gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e25c30b4971149cce42f936367427c13a89f980b/646f63732f76796469612e676966\">\n<p>Vydia-gif</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install vydia\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Simply call <tt>vydia</tt> without arguments to launch the TUI:</p>\n<pre>$ vydia\n</pre>\n</div>\n<div id=\"parameters-and-commands\">\n<h2>Parameters and Commands</h2>\n<pre>$ vydia --help\nUsage: vydia <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n\nOptions:\n  --video / --no-video  Suppress mpv video output.\n  --airplay TEXT        Use airplay server <span class=\"k\">if</span> specified <span class=\"o\">(</span>format: <span class=\"s2\">\"&lt;ip&gt;:&lt;port&gt;\"</span><span class=\"o\">)</span>.\n  --help                Show this message and exit.\n\nCommands:\n  add_playlist          Add new playlist by id.\n  list_airplay_devices  List available airplay devices.\n</pre>\n<p>Additionally, an internal commandline can be summoned by typing <tt>:</tt>\n(note: it supports autocompletion using <tt>[TAB]</tt>). Also, pressing <tt>h</tt>\nshows a help page.</p>\n<p>The following commands are supported (in the correct context): *\nPlaylist View: * <tt>add &lt;playlist id&gt;</tt>: add given playlist *\n<tt>delete</tt>: delete currently selected playlist * <tt>quit</tt>: quit Vydia\n(<tt>[q]</tt>) * Episode View: * <tt>pause</tt>: toggle pause in running episode\n(<tt>&lt;space&gt;</tt>) * <tt>info</tt>: show video-related information (<tt>i</tt>) *\n<tt>reload</tt>: reload playlist using plugin * <tt>reverse</tt>: reverse episode\norder * <tt>shuffle</tt>: shuffle episode order * <tt>next</tt>: play next video\n(<tt>[&gt;]</tt>) * <tt>previous</tt>: play previous video (<tt>[&lt;]</tt>) *\n<tt>continue</tt>: continue playback from last save (<tt>[c]</tt>) * <tt>quit</tt>:\nquit Vydia (<tt>[q]</tt>)</p>\n<p>Furthermore, the following shortcuts exist: * Episode View: * <tt>w</tt>:\n(un)mark currently selected video as watched</p>\n</div>\n<div id=\"plugins\">\n<h2>Plugins</h2>\n<ul>\n<li>Filesystem</li>\n<li>Youtube</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4036331, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "e0c9ddb2a933601de4175a366b18afbe", "sha256": "e1a228c4af5f6d741273f8ea43d2f7be883dfea3522b3a3e71e13549d6acffaa"}, "downloads": -1, "filename": "vydia-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e0c9ddb2a933601de4175a366b18afbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9720, "upload_time": "2017-11-11T10:41:00", "upload_time_iso_8601": "2017-11-11T10:41:00.197356Z", "url": "https://files.pythonhosted.org/packages/11/6d/5c316299ed29ef003f5e96dc3af67d553c59682915eed37055f7d79fcfa6/vydia-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "cb9e60ebdd11235e0fd9889bb88e1c77", "sha256": "5b65a0f7444801c104976406f376d00373ba042844590bc000f3539c1befa448"}, "downloads": -1, "filename": "vydia-0.6.0.tar.gz", "has_sig": false, "md5_digest": "cb9e60ebdd11235e0fd9889bb88e1c77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14321, "upload_time": "2018-01-30T16:49:12", "upload_time_iso_8601": "2018-01-30T16:49:12.369755Z", "url": "https://files.pythonhosted.org/packages/4c/51/061fb967a8006ca8f7ab8b03ed151429d1f7d8e0fa9919041ca886659f42/vydia-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "14cfaec97b13936a38d4d80c41b43cb8", "sha256": "a323b83e980f7d453b8eeb05db2381702ed74ea51c45fb05c5039cb7e6dc773f"}, "downloads": -1, "filename": "vydia-0.6.1.tar.gz", "has_sig": false, "md5_digest": "14cfaec97b13936a38d4d80c41b43cb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202153, "upload_time": "2018-02-03T00:00:06", "upload_time_iso_8601": "2018-02-03T00:00:06.729361Z", "url": "https://files.pythonhosted.org/packages/88/82/ee091a95998009cfcdbab9799ec1522db1d39a0a462fc091a9bf0306a87b/vydia-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "48fc2a20939f773e064daac6e0d7a847", "sha256": "12726393929307deacb57544557861d2d689dda645e6606d1f323cc1a6495cac"}, "downloads": -1, "filename": "vydia-0.6.2.tar.gz", "has_sig": false, "md5_digest": "48fc2a20939f773e064daac6e0d7a847", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202171, "upload_time": "2018-02-03T12:23:34", "upload_time_iso_8601": "2018-02-03T12:23:34.709866Z", "url": "https://files.pythonhosted.org/packages/ae/51/28c612e41b999517f9904dfd8bd7a5cd7496a2cbc204f3ebd5e937cd92ed/vydia-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "720dc4c593c9bd1c69837331d7a5d0e2", "sha256": "e1290595f77c57b3716c508d44c7ea4d9053abead8a09500e8150ada7a8a943a"}, "downloads": -1, "filename": "vydia-0.6.3.tar.gz", "has_sig": false, "md5_digest": "720dc4c593c9bd1c69837331d7a5d0e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203329, "upload_time": "2018-02-15T13:44:09", "upload_time_iso_8601": "2018-02-15T13:44:09.843253Z", "url": "https://files.pythonhosted.org/packages/b2/9c/19e08cee6cccaa53c943c3c10998dab3465b3442eb9d36ecd076d6a126a0/vydia-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "ce95b05849c2ec884dec7c393160033c", "sha256": "3a43ca20a4b103f91c679f373e24fe6d1e6e124e10adf84789d787e439f0164d"}, "downloads": -1, "filename": "vydia-0.6.4.tar.gz", "has_sig": false, "md5_digest": "ce95b05849c2ec884dec7c393160033c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 558884, "upload_time": "2018-07-06T12:43:46", "upload_time_iso_8601": "2018-07-06T12:43:46.456133Z", "url": "https://files.pythonhosted.org/packages/0b/df/058284431a8add90b3718c3b84e314f962f35e74f8df22b10f69b8ef2489/vydia-0.6.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce95b05849c2ec884dec7c393160033c", "sha256": "3a43ca20a4b103f91c679f373e24fe6d1e6e124e10adf84789d787e439f0164d"}, "downloads": -1, "filename": "vydia-0.6.4.tar.gz", "has_sig": false, "md5_digest": "ce95b05849c2ec884dec7c393160033c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 558884, "upload_time": "2018-07-06T12:43:46", "upload_time_iso_8601": "2018-07-06T12:43:46.456133Z", "url": "https://files.pythonhosted.org/packages/0b/df/058284431a8add90b3718c3b84e314f962f35e74f8df22b10f69b8ef2489/vydia-0.6.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:27 2020"}