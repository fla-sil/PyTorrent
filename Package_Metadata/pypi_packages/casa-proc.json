{"info": {"author": "Rui Xue", "author_email": "rx.astro@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "casa-proc\n==============================================================\n\n**casa-proc** provides you a quick access of the functions from the `CASA package <https://casa.nrao.edu>`_ under Python, i.e., \ncalling CASA tasks or running a user script originally intended for CASA sessions.\nThe program is essentially a basic Python wrapper around the CASA package, by sending data processing \njobs to CASA installed on your OS using its script execution option ``casa -c``.\nHowever, some user-friendly features are built in the wrapper:\n\n- behave like a traditional Python module, easy to use interactively or embed into a Python program\n- no complicated dependency requirement / no modification needed on your CASA package\n- support Python logging\n\nProject links:\n\n* Repo: https://github.com/r-xue/casa-proc\n* PyPI: https://pypi.python.org/pypi/casa-proc\n\n\nInstallation\n~~~~~~~~~~~~\nThe command line script can be installed via::\n\n    pip install --user .                                                # from a local copy \n    pip install --user --upgrade casa-proc                              # from PyPI\n    pip install https://github.com/r-xue/casa-proc/archive/master.zip   # from GitHub\n\nUsage\n~~~~~\n\nTo run a single CASA task::\n\n    import casa_proc\n    casa_proc.casa_task('listobs','data/hxmm01.band6.ms',field='*')\n\nTo run a user CASA script built into the package or written by yourself::\n\n    casa_proc.casa_script('casascript_demo.py',var1='var1_value',var2='var2_value',var3=1,var4=2)\n\nnote: `casascript_demo.py <https://github.com/r-xue/casa-proc/blob/master/demo/casascript_demo.py>`_ here is a CASA user example script.\n\nMore advanced features (e.g. the logging management) are show in the Jupyter Notebook: `test_casaproc.ipynb <https://github.com/r-xue/casa-proc/blob/master/demo/test_casaproc.ipynb>`_\n\nCompatibility and Dependency\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. _below:\n\nThe program is only tested against Python>=3.6 on MacOS, though I expect no issue under any Unix-like system if the below requirements are met:\n\n* Python (>=3.5)\n* CASA (>=5.x)\n\nThe program will automatically create two customized CASA session startup files (``init.py`` and ``prelude.py``) under a scratch folder beneath the CASA preference directory named ``~/.casa/casa_proc/``.\n\nStatus\n~~~~~~\n\nThe code was originally written as a submodule of another Python-based software program I am working on.\nAlthough the shell/wrapper approach is not an efficient solution to run complicated CASA workflows due to the heavy execution overhead,\nthe program might still be a useful lightweight tool for some user cases.\nIf you realize that you have been switching back/forth between Python/iPython and CASA too often, this module may help.\n\nAnother practice of mixing Python-CASA functions/modules is of course installing various Python modules into \nCASA via `casa-python <https://github.com/radio-astro-tools/casa-python>`_.\nThen you can run your external Python function/modules under the CASA interpreter and call it a day.\nHowever, the Python environment / interpreter / modules (e.g. matplotlib) embedded in the current CASA package (specified v5.6 here) are out-of-date (however, see my CASA6 demo below)\nThen the maintenance of your Python codes may become rather complicated as this requires all your externally installed Python modules to be compatible with the Python bundled with CASA. \n\n**This package may become unnecessary in near future**. As part of the ongoing development of \n`CASA 6 <https://science.nrao.edu/enews/casa_008/index.shtml#casa6>`_, and `the transition from Python 2 to 3 <https://science.nrao.edu/enews/casa_006/index.shtml#python>`_, \nCASA will allow to integrate its tasks/tools into your existing Python workflows. The CASA tools and tasks will become standard Python modules as I demonstrate in this Jupyter Notebook:\n`test_casa6.ipynb <https://github.com/r-xue/casa-proc/blob/master/demo/test_casa6.ipynb>`_\n\nNote:\n\n* if your sole purpose is to access/manipulate a Measurement Set from Python, `python-casacore <https://github.com/casacore/python-casacore>`_ will be the best solution.\n* Some other solutions are available for resolving the same issue (accessing CASA functions from Python). I list some of them here as references:\n\n    * `drive-casa <https://github.com/timstaley/drive-casa/tree/casa-release-5>`_\n    * `pkgw-forge <https://newton.cx/~peter/howto/access-casa-in-python-without-casapy>`_ \n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/r-xue/casa-proc", "keywords": "CASA", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "casa-proc", "package_url": "https://pypi.org/project/casa-proc/", "platform": "", "project_url": "https://pypi.org/project/casa-proc/", "project_urls": {"Bug Reports": "https://github.com/r-xue/casa-proc/issues", "Homepage": "http://github.com/r-xue/casa-proc", "Source": "https://github.com/r-xue/casa-proc/"}, "release_url": "https://pypi.org/project/casa-proc/0.1.dev2/", "requires_dist": null, "requires_python": ">=3.6, <4", "summary": "Run CASA scripts within Python", "version": "0.1.dev2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>casa-proc</strong> provides you a quick access of the functions from the <a href=\"https://casa.nrao.edu\" rel=\"nofollow\">CASA package</a> under Python, i.e.,\ncalling CASA tasks or running a user script originally intended for CASA sessions.\nThe program is essentially a basic Python wrapper around the CASA package, by sending data processing\njobs to CASA installed on your OS using its script execution option <tt>casa <span class=\"pre\">-c</span></tt>.\nHowever, some user-friendly features are built in the wrapper:</p>\n<ul>\n<li>behave like a traditional Python module, easy to use interactively or embed into a Python program</li>\n<li>no complicated dependency requirement / no modification needed on your CASA package</li>\n<li>support Python logging</li>\n</ul>\n<p>Project links:</p>\n<ul>\n<li>Repo: <a href=\"https://github.com/r-xue/casa-proc\" rel=\"nofollow\">https://github.com/r-xue/casa-proc</a></li>\n<li>PyPI: <a href=\"https://pypi.python.org/pypi/casa-proc\" rel=\"nofollow\">https://pypi.python.org/pypi/casa-proc</a></li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The command line script can be installed via:</p>\n<pre>pip install --user .                                                # from a local copy\npip install --user --upgrade casa-proc                              # from PyPI\npip install https://github.com/r-xue/casa-proc/archive/master.zip   # from GitHub\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To run a single CASA task:</p>\n<pre>import casa_proc\ncasa_proc.casa_task('listobs','data/hxmm01.band6.ms',field='*')\n</pre>\n<p>To run a user CASA script built into the package or written by yourself:</p>\n<pre>casa_proc.casa_script('casascript_demo.py',var1='var1_value',var2='var2_value',var3=1,var4=2)\n</pre>\n<p>note: <a href=\"https://github.com/r-xue/casa-proc/blob/master/demo/casascript_demo.py\" rel=\"nofollow\">casascript_demo.py</a> here is a CASA user example script.</p>\n<p>More advanced features (e.g. the logging management) are show in the Jupyter Notebook: <a href=\"https://github.com/r-xue/casa-proc/blob/master/demo/test_casaproc.ipynb\" rel=\"nofollow\">test_casaproc.ipynb</a></p>\n</div>\n<div id=\"compatibility-and-dependency\">\n<h2>Compatibility and Dependency</h2>\n<p id=\"below\">The program is only tested against Python&gt;=3.6 on MacOS, though I expect no issue under any Unix-like system if the below requirements are met:</p>\n<ul>\n<li>Python (&gt;=3.5)</li>\n<li>CASA (&gt;=5.x)</li>\n</ul>\n<p>The program will automatically create two customized CASA session startup files (<tt>init.py</tt> and <tt>prelude.py</tt>) under a scratch folder beneath the CASA preference directory named <tt><span class=\"pre\">~/.casa/casa_proc/</span></tt>.</p>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>The code was originally written as a submodule of another Python-based software program I am working on.\nAlthough the shell/wrapper approach is not an efficient solution to run complicated CASA workflows due to the heavy execution overhead,\nthe program might still be a useful lightweight tool for some user cases.\nIf you realize that you have been switching back/forth between Python/iPython and CASA too often, this module may help.</p>\n<p>Another practice of mixing Python-CASA functions/modules is of course installing various Python modules into\nCASA via <a href=\"https://github.com/radio-astro-tools/casa-python\" rel=\"nofollow\">casa-python</a>.\nThen you can run your external Python function/modules under the CASA interpreter and call it a day.\nHowever, the Python environment / interpreter / modules (e.g. matplotlib) embedded in the current CASA package (specified v5.6 here) are out-of-date (however, see my CASA6 demo below)\nThen the maintenance of your Python codes may become rather complicated as this requires all your externally installed Python modules to be compatible with the Python bundled with CASA.</p>\n<p><strong>This package may become unnecessary in near future</strong>. As part of the ongoing development of\n<a href=\"https://science.nrao.edu/enews/casa_008/index.shtml#casa6\" rel=\"nofollow\">CASA 6</a>, and <a href=\"https://science.nrao.edu/enews/casa_006/index.shtml#python\" rel=\"nofollow\">the transition from Python 2 to 3</a>,\nCASA will allow to integrate its tasks/tools into your existing Python workflows. The CASA tools and tasks will become standard Python modules as I demonstrate in this Jupyter Notebook:\n<a href=\"https://github.com/r-xue/casa-proc/blob/master/demo/test_casa6.ipynb\" rel=\"nofollow\">test_casa6.ipynb</a></p>\n<p>Note:</p>\n<ul>\n<li><p>if your sole purpose is to access/manipulate a Measurement Set from Python, <a href=\"https://github.com/casacore/python-casacore\" rel=\"nofollow\">python-casacore</a> will be the best solution.</p>\n</li>\n<li><p>Some other solutions are available for resolving the same issue (accessing CASA functions from Python). I list some of them here as references:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/timstaley/drive-casa/tree/casa-release-5\" rel=\"nofollow\">drive-casa</a></li>\n<li><a href=\"https://newton.cx/~peter/howto/access-casa-in-python-without-casapy\" rel=\"nofollow\">pkgw-forge</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5816087, "releases": {"0.1.dev2": [{"comment_text": "", "digests": {"md5": "e7c8e1a790de432b60856dc05bd7febd", "sha256": "b317b6d5842d635d9a83173fbaacf2fefea0c8dae03d29bcbb40f89e33cd4f23"}, "downloads": -1, "filename": "casa_proc-0.1.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "e7c8e1a790de432b60856dc05bd7febd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8436, "upload_time": "2019-09-11T17:16:05", "upload_time_iso_8601": "2019-09-11T17:16:05.415193Z", "url": "https://files.pythonhosted.org/packages/3c/f5/531eaa56484bb5b04db5a7925ea46293b90ca10b8908effdf5fff81f4459/casa_proc-0.1.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44ea8a3b094ab3fc212c9e760cd18e65", "sha256": "e189e383343b35af95924857ca9e5766e3639e042e9f745c2ac3dbdc7edaf3de"}, "downloads": -1, "filename": "casa-proc-0.1.dev2.tar.gz", "has_sig": false, "md5_digest": "44ea8a3b094ab3fc212c9e760cd18e65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 170961, "upload_time": "2019-09-11T17:18:17", "upload_time_iso_8601": "2019-09-11T17:18:17.965489Z", "url": "https://files.pythonhosted.org/packages/22/2d/0f7fce8e222a3ffe8aa87ee426e902d66f99ca2709bc253a09dfb17047cc/casa-proc-0.1.dev2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7c8e1a790de432b60856dc05bd7febd", "sha256": "b317b6d5842d635d9a83173fbaacf2fefea0c8dae03d29bcbb40f89e33cd4f23"}, "downloads": -1, "filename": "casa_proc-0.1.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "e7c8e1a790de432b60856dc05bd7febd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8436, "upload_time": "2019-09-11T17:16:05", "upload_time_iso_8601": "2019-09-11T17:16:05.415193Z", "url": "https://files.pythonhosted.org/packages/3c/f5/531eaa56484bb5b04db5a7925ea46293b90ca10b8908effdf5fff81f4459/casa_proc-0.1.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44ea8a3b094ab3fc212c9e760cd18e65", "sha256": "e189e383343b35af95924857ca9e5766e3639e042e9f745c2ac3dbdc7edaf3de"}, "downloads": -1, "filename": "casa-proc-0.1.dev2.tar.gz", "has_sig": false, "md5_digest": "44ea8a3b094ab3fc212c9e760cd18e65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 170961, "upload_time": "2019-09-11T17:18:17", "upload_time_iso_8601": "2019-09-11T17:18:17.965489Z", "url": "https://files.pythonhosted.org/packages/22/2d/0f7fce8e222a3ffe8aa87ee426e902d66f99ca2709bc253a09dfb17047cc/casa-proc-0.1.dev2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:21 2020"}