{"info": {"author": "Tim McNamara", "author_email": "paperless@timmcnamara.co.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Topic :: Office/Business", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing", "Topic :: Utilities"], "description": "======================================================\nslate: the easiest way to get text from PDFs in Python\n======================================================\n\n\nSlate is a Python package that simplifies the process of extracting\ntext from PDF files. It depends on the PDFMiner package.\n\nSlate provides one class, PDF. PDF takes a file-like object and\nwill extract all text from the document, presentating each page\nas a string of text:\n\n  >>> with open('example.pdf') as f:\n  ...    doc = slate.PDF(f)\n  ...\n  >>> doc \n  [..., ..., ...]\n  >>> doc[1]\n  'Text from page 2...'\n\nIf your pdf is password protected, pass the password as the\nsecond argument:\n\n  >>> with open('secrets.pdf') as f:\n  ...     doc = slate.PDF(f, 'password')\n  ...\n  >>> doc[0]\n  \"My mother doesn't know this, but...\"\n\nMore complex operations\n-----------------------\n\nIf you would like access to the images, font files and other\ninformation, then take some time to learn the PDFMiner API.\n\n\nWhat is wrong with PDFMiner?\n----------------------------\n\n  1. Getting simple things done, like extracting the text\n     is quite complex. The program is not designed to return\n     Python objects, which makes interfacing things irritating.\n  2. It's an extremely complete set of tools, with multiple \n     and moderately  steep learning curves.\n  3. It's not written with hackability in mind.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/timClicks/slate", "keywords": "pdf,text,text-extraction", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "slate", "package_url": "https://pypi.org/project/slate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/slate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/timClicks/slate"}, "release_url": "https://pypi.org/project/slate/0.5.2/", "requires_dist": null, "requires_python": null, "summary": "Extract text from PDF documents easily.", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Slate is a Python package that simplifies the process of extracting\ntext from PDF files. It depends on the PDFMiner package.</p>\n<p>Slate provides one class, PDF. PDF takes a file-like object and\nwill extract all text from the document, presentating each page\nas a string of text:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; with open('example.pdf') as f:\n...    doc = slate.PDF(f)\n...\n&gt;&gt;&gt; doc\n[..., ..., ...]\n&gt;&gt;&gt; doc[1]\n'Text from page 2...'\n</pre>\n</blockquote>\n<p>If your pdf is password protected, pass the password as the\nsecond argument:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; with open('secrets.pdf') as f:\n...     doc = slate.PDF(f, 'password')\n...\n&gt;&gt;&gt; doc[0]\n\"My mother doesn't know this, but...\"\n</pre>\n</blockquote>\n<div id=\"more-complex-operations\">\n<h2>More complex operations</h2>\n<p>If you would like access to the images, font files and other\ninformation, then take some time to learn the PDFMiner API.</p>\n</div>\n<div id=\"what-is-wrong-with-pdfminer\">\n<h2>What is wrong with PDFMiner?</h2>\n<blockquote>\n<ol>\n<li>Getting simple things done, like extracting the text\nis quite complex. The program is not designed to return\nPython objects, which makes interfacing things irritating.</li>\n<li>It\u2019s an extremely complete set of tools, with multiple\nand moderately  steep learning curves.</li>\n<li>It\u2019s not written with hackability in mind.</li>\n</ol>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1952100, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "f50b363bf83ed0e171139468076cec7b", "sha256": "0ae976b218be0b72e4dd19bd792bfe2540ac75728bfa2c8fde0bdc167b596c64"}, "downloads": -1, "filename": "slate-0.2.3.zip", "has_sig": false, "md5_digest": "f50b363bf83ed0e171139468076cec7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19165, "upload_time": "2010-11-09T00:21:34", "upload_time_iso_8601": "2010-11-09T00:21:34.232829Z", "url": "https://files.pythonhosted.org/packages/b9/50/37ffcdb4f4fb4c41f49f2e01c3b1bc3b9f4d5fff0f47b890f86c95b5af5b/slate-0.2.3.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b86e93edd573572aea33ba4a45348940", "sha256": "0154140ae3d622672aed9d9492292bfd767b6758e09caadcf183de4e220ea94f"}, "downloads": -1, "filename": "slate-0.3.zip", "has_sig": false, "md5_digest": "b86e93edd573572aea33ba4a45348940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20268, "upload_time": "2010-11-10T11:13:00", "upload_time_iso_8601": "2010-11-10T11:13:00.233071Z", "url": "https://files.pythonhosted.org/packages/40/cc/ee9faa3ca14cfc1c5c76305a62b8da84d3ae5abf6cf8c89045a1d48f86ce/slate-0.3.zip", "yanked": false}], "0.4": [], "0.5.2": []}, "urls": [], "timestamp": "Fri May  8 03:08:31 2020"}