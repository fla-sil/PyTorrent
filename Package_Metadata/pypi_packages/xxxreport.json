{"info": {"author": "Stephane Klein", "author_email": "stephane@harobed.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Documentation", "Topic :: Terminals"], "description": "xxxreport\n=========\n\n`xxxreport` is a tools to extract all TODO/XXX comments to generate one plain text or html summary document.\n\n`xxxreport` is inspired by Zope xxxreport tools (http://svn.zope.org/Zope3/trunk/utilities/).\n\nHow to use :\n\n::\n\n    $ easy_install xxxreport\n\nExtract comments :\n\n::\n\n    $ xxxreport --title=WsgiDAV ~/my_python_projects/\n    ===================================\n    TODO/XXX Comment report for WsgiDAV\n    ===================================\n\n\n    Generated on Sun, 01 Nov 2009 19:27:33 CET\n\n    Summary\n    =======\n\n    There are currently 3 TODO/XXX comments.\n\n    Listing\n    =======\n\n    File : wsgidav/addons/virtual_dav_provider.py:220\n\n            # TODO: this is just for demonstration:\n            self.resourceData = _resourceData\n\n\n\n    File : wsgidav/addons/virtual_dav_provider.py:350\n\n    #            dict[\"etag\"] = util.getETag(file path), # TODO: should be using the file path here\n                dict[\"contentType\"] = res.getContentType()\n                dict[\"contentLength\"] = res.getContentLength()\n                dict[\"supportRanges\"] = True\n\n    File : wsgidav/addons/mysql_dav_provider.py:335\n\n            # TODO: calling exists() makes directory browsing VERY slow.\n            #       At least compared to PyFileServer, which simply used string \n            #       functions to get displayType and displayRemarks  \n            if not self.exists(path):\n\n\nMore information :\n\n::\n\n    $ xxxreport --help\n\n\n0.1.3 (2009-11-06)\n==================\n\nFeatures\n--------\n\n* Add ``--file-extension`` option\n* Add ``--marker-prefix`` option", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/xxxreport/", "keywords": "comments,extract,TODO", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "xxxreport", "package_url": "https://pypi.org/project/xxxreport/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xxxreport/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/xxxreport/"}, "release_url": "https://pypi.org/project/xxxreport/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "xxxreport tools extract all TODO/XXX ... comments in a python source source", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"xxxreport\">\n<h2>xxxreport</h2>\n<p><cite>xxxreport</cite> is a tools to extract all TODO/XXX comments to generate one plain text or html summary document.</p>\n<p><cite>xxxreport</cite> is inspired by Zope xxxreport tools (<a href=\"http://svn.zope.org/Zope3/trunk/utilities/\" rel=\"nofollow\">http://svn.zope.org/Zope3/trunk/utilities/</a>).</p>\n<p>How to use :</p>\n<pre>$ easy_install xxxreport\n</pre>\n<p>Extract comments :</p>\n<pre>$ xxxreport --title=WsgiDAV ~/my_python_projects/\n===================================\nTODO/XXX Comment report for WsgiDAV\n===================================\n\n\nGenerated on Sun, 01 Nov 2009 19:27:33 CET\n\nSummary\n=======\n\nThere are currently 3 TODO/XXX comments.\n\nListing\n=======\n\nFile : wsgidav/addons/virtual_dav_provider.py:220\n\n        # TODO: this is just for demonstration:\n        self.resourceData = _resourceData\n\n\n\nFile : wsgidav/addons/virtual_dav_provider.py:350\n\n#            dict[\"etag\"] = util.getETag(file path), # TODO: should be using the file path here\n            dict[\"contentType\"] = res.getContentType()\n            dict[\"contentLength\"] = res.getContentLength()\n            dict[\"supportRanges\"] = True\n\nFile : wsgidav/addons/mysql_dav_provider.py:335\n\n        # TODO: calling exists() makes directory browsing VERY slow.\n        #       At least compared to PyFileServer, which simply used string\n        #       functions to get displayType and displayRemarks\n        if not self.exists(path):\n</pre>\n<p>More information :</p>\n<pre>$ xxxreport --help\n</pre>\n</div>\n<div id=\"id1\">\n<h2>0.1.3 (2009-11-06)</h2>\n<h2 id=\"features\"><span class=\"section-subtitle\">Features</span></h2>\n<ul>\n<li>Add <tt><span class=\"pre\">--file-extension</span></tt> option</li>\n<li>Add <tt><span class=\"pre\">--marker-prefix</span></tt> option</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 801891, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "54059e83cae574cfa1879d0fb323bc94", "sha256": "14486e21491cc9299e84eec19c1447df6c4103b1be2d159e331f8490aaed248e"}, "downloads": -1, "filename": "xxxreport-0.1.tar.gz", "has_sig": false, "md5_digest": "54059e83cae574cfa1879d0fb323bc94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3640, "upload_time": "2009-11-01T20:12:48", "upload_time_iso_8601": "2009-11-01T20:12:48.762915Z", "url": "https://files.pythonhosted.org/packages/bb/48/e9995a187ec80b49517e010f5d5b2faae57bb1488af0182604fcdb8ad7be/xxxreport-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "908e25a5a7fb0ba7369bbbb8fddc82fe", "sha256": "0fd1716755f2d89c0aa46aa7f7afaab6445894ff7cc894b70eb3279c0ccbd111"}, "downloads": -1, "filename": "xxxreport-0.1.1.tar.gz", "has_sig": false, "md5_digest": "908e25a5a7fb0ba7369bbbb8fddc82fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3658, "upload_time": "2009-11-02T10:00:08", "upload_time_iso_8601": "2009-11-02T10:00:08.304570Z", "url": "https://files.pythonhosted.org/packages/b3/e4/804438a144e3c19ffca638c89d9da6cb8068daf841c111365a0354c8674d/xxxreport-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8d319b3c49a6d92e86af272eba621935", "sha256": "f747fa5427f7fb4e957c0a2e3cd4cabc8395923968eb657db69a7048ed397b79"}, "downloads": -1, "filename": "xxxreport-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8d319b3c49a6d92e86af272eba621935", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3654, "upload_time": "2009-11-02T10:10:52", "upload_time_iso_8601": "2009-11-02T10:10:52.572497Z", "url": "https://files.pythonhosted.org/packages/35/10/ea38251dfa444c0d6b9cc3e765f62aaee3dcbcb7b9fa87650515240b1149/xxxreport-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5cfccb1d200d980f740789702581bdb4", "sha256": "4372a3c13d3c2999175bdfa3f7aaa0f883e00e7fcd8e6cb0627dd3c2ac3513d0"}, "downloads": -1, "filename": "xxxreport-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5cfccb1d200d980f740789702581bdb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3971, "upload_time": "2009-11-06T13:04:17", "upload_time_iso_8601": "2009-11-06T13:04:17.396951Z", "url": "https://files.pythonhosted.org/packages/fc/01/761b6c366f4170f7a0c0a78ee3eeeb4912ca9479915c032843fb2327938e/xxxreport-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cfccb1d200d980f740789702581bdb4", "sha256": "4372a3c13d3c2999175bdfa3f7aaa0f883e00e7fcd8e6cb0627dd3c2ac3513d0"}, "downloads": -1, "filename": "xxxreport-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5cfccb1d200d980f740789702581bdb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3971, "upload_time": "2009-11-06T13:04:17", "upload_time_iso_8601": "2009-11-06T13:04:17.396951Z", "url": "https://files.pythonhosted.org/packages/fc/01/761b6c366f4170f7a0c0a78ee3eeeb4912ca9479915c032843fb2327938e/xxxreport-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:58 2020"}