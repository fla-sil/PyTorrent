{"info": {"author": "Cologler", "author_email": "skyoflw@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# pydelegate\n\n![GitHub](https://img.shields.io/github/license/Cologler/pydelegate-python.svg)\n[![Build Status](https://travis-ci.com/Cologler/pydelegate-python.svg?branch=master)](https://travis-ci.com/Cologler/pydelegate-python)\n[![PyPI](https://img.shields.io/pypi/v/pydelegate.svg)](https://pypi.org/project/pydelegate/)\n\na python version delegate like C#.\n\n## Usage\n\n``` py\nfrom pydelegate import Delegate\n\ndef func():\n    return 1\n\nd = Delegate()\nd += func\nassert d() == 1\n```\n\nor you can set init `Delegate` lazy:\n\n``` py\nfrom pydelegate import event_handler\n\ndef func():\n    return 1\n\nd = None\nd += event_handler(func) # event_handler() return a `Delegate`\nassert d() == 1\n```\n\nor if you want inject `self` var in your instance method, use `event` data descriptor:\n\n``` py\nfrom pydelegate import event\n\nclass A:\n    @event\n    def d(self):\n        pass\n    # or\n    e = event('e')\n\ndef func(self):\n    return 1\n\na = A()\na.d += func\nassert a.d() == 1\n```\n\nread unittests for more usages.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Cologler/pydelegate-python", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pydelegate", "package_url": "https://pypi.org/project/pydelegate/", "platform": "", "project_url": "https://pypi.org/project/pydelegate/", "project_urls": {"Homepage": "https://github.com/Cologler/pydelegate-python"}, "release_url": "https://pypi.org/project/pydelegate/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pydelegate</h1>\n<p><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/847f684d120318f7fd109aa5f02de7b7afd70057/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f436f6c6f676c65722f707964656c65676174652d707974686f6e2e737667\">\n<a href=\"https://travis-ci.com/Cologler/pydelegate-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20892abbcbf434b468edbc9c3793d0a3cef937f2/68747470733a2f2f7472617669732d63692e636f6d2f436f6c6f676c65722f707964656c65676174652d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/pydelegate/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e46e7b9b4c11edf09d0a548e05fc044c88d8823/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707964656c65676174652e737667\"></a></p>\n<p>a python version delegate like C#.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydelegate</span> <span class=\"kn\">import</span> <span class=\"n\">Delegate</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">Delegate</span><span class=\"p\">()</span>\n<span class=\"n\">d</span> <span class=\"o\">+=</span> <span class=\"n\">func</span>\n<span class=\"k\">assert</span> <span class=\"n\">d</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n</pre>\n<p>or you can set init <code>Delegate</code> lazy:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydelegate</span> <span class=\"kn\">import</span> <span class=\"n\">event_handler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">d</span> <span class=\"o\">+=</span> <span class=\"n\">event_handler</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span> <span class=\"c1\"># event_handler() return a `Delegate`</span>\n<span class=\"k\">assert</span> <span class=\"n\">d</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n</pre>\n<p>or if you want inject <code>self</code> var in your instance method, use <code>event</code> data descriptor:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydelegate</span> <span class=\"kn\">import</span> <span class=\"n\">event</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"nd\">@event</span>\n    <span class=\"k\">def</span> <span class=\"nf\">d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"c1\"># or</span>\n    <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">'e'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">d</span> <span class=\"o\">+=</span> <span class=\"n\">func</span>\n<span class=\"k\">assert</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n</pre>\n<p>read unittests for more usages.</p>\n\n          </div>"}, "last_serial": 5194469, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1e55ce86b21274b327f765d90c3f2e48", "sha256": "de7bfeb2355ce3a6842b6b3ddc1286e6a427c663a94fdaa2d11318287cfb5eeb"}, "downloads": -1, "filename": "pydelegate-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1e55ce86b21274b327f765d90c3f2e48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3426, "upload_time": "2019-04-26T17:56:11", "upload_time_iso_8601": "2019-04-26T17:56:11.018782Z", "url": "https://files.pythonhosted.org/packages/e3/c9/dad891f1f15e1435e00ff69348676dc956e72a647efd92f1c10437ae3f43/pydelegate-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdce29d8f99ebdec57045019fe3c7606", "sha256": "6278799268d5188479b7e820e4bebaf269e30052acbe3a79abb14e64fcb0c6de"}, "downloads": -1, "filename": "pydelegate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cdce29d8f99ebdec57045019fe3c7606", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2134, "upload_time": "2019-04-26T17:56:26", "upload_time_iso_8601": "2019-04-26T17:56:26.134779Z", "url": "https://files.pythonhosted.org/packages/bd/f6/c0e7ac1b3e015e4a9370099e1cb620830fc60b2aa09c824478241b9063f0/pydelegate-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "38cc7bfc05dfbd4a9dbdec74bcd62aea", "sha256": "02f56dd38543cec565d3f904d98892523226acc6fd107135605af9d8cb9d8379"}, "downloads": -1, "filename": "pydelegate-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "38cc7bfc05dfbd4a9dbdec74bcd62aea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3834, "upload_time": "2019-04-26T18:53:23", "upload_time_iso_8601": "2019-04-26T18:53:23.578863Z", "url": "https://files.pythonhosted.org/packages/79/0a/b24874ef3a5bd88358acc0f042d3a6086f7e1e8a3451b460d60baae73dae/pydelegate-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d847448012d37cbe0bf5574c91c7e342", "sha256": "2366c0a1d1b109d3c29d02f159c895bc163c57d0ce3b4b67010a182132305af6"}, "downloads": -1, "filename": "pydelegate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d847448012d37cbe0bf5574c91c7e342", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2608, "upload_time": "2019-04-26T18:53:26", "upload_time_iso_8601": "2019-04-26T18:53:26.234782Z", "url": "https://files.pythonhosted.org/packages/31/c9/51067154317803897323c6345746128795210faca01cda4074a5e8acbbca/pydelegate-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38cc7bfc05dfbd4a9dbdec74bcd62aea", "sha256": "02f56dd38543cec565d3f904d98892523226acc6fd107135605af9d8cb9d8379"}, "downloads": -1, "filename": "pydelegate-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "38cc7bfc05dfbd4a9dbdec74bcd62aea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3834, "upload_time": "2019-04-26T18:53:23", "upload_time_iso_8601": "2019-04-26T18:53:23.578863Z", "url": "https://files.pythonhosted.org/packages/79/0a/b24874ef3a5bd88358acc0f042d3a6086f7e1e8a3451b460d60baae73dae/pydelegate-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d847448012d37cbe0bf5574c91c7e342", "sha256": "2366c0a1d1b109d3c29d02f159c895bc163c57d0ce3b4b67010a182132305af6"}, "downloads": -1, "filename": "pydelegate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d847448012d37cbe0bf5574c91c7e342", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2608, "upload_time": "2019-04-26T18:53:26", "upload_time_iso_8601": "2019-04-26T18:53:26.234782Z", "url": "https://files.pythonhosted.org/packages/31/c9/51067154317803897323c6345746128795210faca01cda4074a5e8acbbca/pydelegate-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:11 2020"}