{"info": {"author": "Microsoft Corporation", "author_email": "azurekeyvault@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure Key Vault Secret client library for Python\nAzure Key Vault helps solve the following problems:\n- Secrets management (this library) -\nsecurely store and control access to tokens, passwords, certificates, API keys,\nand other secrets\n- Cryptographic key management\n([azure-keyvault-keys](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets)) -\ncreate, store, and control access to the keys used to encrypt your data\n- Certificate management\n([azure-keyvault-certificates](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates)) -\ncreate, manage, and deploy public and private SSL/TLS certificates\n\n[Source code][secret_client_src] | [Package (PyPI)][pypi_package_secrets] | [API reference documentation][reference_docs] | [Product documentation][keyvault_docs] | [Samples][secret_samples]\n\n## Getting started\n### Install packages\nInstall [azure-keyvault-secrets][pypi_package_secrets] and\n[azure-identity][azure_identity_pypi] with [pip][pip]:\n```Bash\npip install azure-keyvault-secrets azure-identity\n```\n[azure-identity][azure_identity] is used for Azure Active Directory\nauthentication as demonstrated below.\n\n### Prerequisites\n* An [Azure subscription][azure_sub]\n* Python 2.7, 3.5.3, or later\n* A Key Vault. If you need to create one, you can use the\n[Azure Cloud Shell][azure_cloud_shell] to create one with these commands\n(replace `\"my-resource-group\"` and `\"my-key-vault\"` with your own, unique\nnames):\n\n  (Optional) if you want a new resource group to hold the Key Vault:\n  ```sh\n  az group create --name my-resource-group --location westus2\n  ```\n\n  Create the Key Vault:\n  ```Bash\n  az keyvault create --resource-group my-resource-group --name my-key-vault\n  ```\n\n  Output:\n  ```json\n  {\n      \"id\": \"...\",\n      \"location\": \"westus2\",\n      \"name\": \"my-key-vault\",\n      \"properties\": {\n          \"accessPolicies\": [...],\n          \"createMode\": null,\n          \"enablePurgeProtection\": null,\n          \"enableSoftDelete\": null,\n          \"enabledForDeployment\": false,\n          \"enabledForDiskEncryption\": null,\n          \"enabledForTemplateDeployment\": null,\n          \"networkAcls\": null,\n          \"provisioningState\": \"Succeeded\",\n          \"sku\": { \"name\": \"standard\" },\n          \"tenantId\": \"...\",\n          \"vaultUri\": \"https://my-key-vault.vault.azure.net/\"\n      },\n      \"resourceGroup\": \"my-resource-group\",\n      \"type\": \"Microsoft.KeyVault/vaults\"\n  }\n  ```\n\n  > The `\"vaultUri\"` property is the `vault_url` used by [SecretClient][secret_client_docs]\n\n### Authenticate the client\nThis document demonstrates using [DefaultAzureCredential][default_cred_ref]\nto authenticate as a service principal. However, [SecretClient][secret_client_docs]\naccepts any [azure-identity][azure_identity] credential. See the\n[azure-identity][azure_identity] documentation for more information about other\ncredentials.\n\n\n#### Create a service principal (optional)\nThis [Azure Cloud Shell][azure_cloud_shell] snippet shows how to create a\nnew service principal. Before using it, replace \"your-application-name\" with\na more appropriate name for your service principal.\n\nCreate a service principal:\n```Bash\naz ad sp create-for-rbac --name http://my-application --skip-assignment\n```\n\n> Output:\n> ```json\n> {\n>     \"appId\": \"generated app id\",\n>     \"displayName\": \"my-application\",\n>     \"name\": \"http://my-application\",\n>     \"password\": \"random password\",\n>     \"tenant\": \"tenant id\"\n> }\n> ```\n\nUse the output to set **AZURE_CLIENT_ID** (\"appId\" above), **AZURE_CLIENT_SECRET**\n(\"password\" above) and **AZURE_TENANT_ID** (\"tenant\" above) environment variables.\nThe following example shows a way to do this in Bash:\n```Bash\nexport AZURE_CLIENT_ID=\"generated app id\"\nexport AZURE_CLIENT_SECRET=\"random password\"\nexport AZURE_TENANT_ID=\"tenant id\"\n```\n\nAuthorize the service principal to perform key operations in your Key Vault:\n```Bash\naz keyvault set-policy --name my-key-vault --spn $AZURE_CLIENT_ID --secret-permissions get set list delete backup recover restore purge\n```\n> Possible permissions:\n> - Secret management: set, backup, delete, get, list, purge, recover, restore\n\n\n#### Create a client\nOnce the **AZURE_CLIENT_ID**, **AZURE_CLIENT_SECRET** and\n**AZURE_TENANT_ID** environment variables are set,\n[DefaultAzureCredential][default_cred_ref] will be able to authenticate the\n[SecretClient][secret_client_docs].\n\nConstructing the client also requires your vault's URL, which you can\nget from the Azure CLI or the Azure Portal. In the Azure Portal, this URL is\nthe vault's \"DNS Name\".\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\n\ncredential = DefaultAzureCredential()\n\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n```\n\n## Key concepts\n### Secret\nA secret consists of a secret value and its associated metadata and management\ninformation. This library handles secret values as strings, but Azure Key Vault\ndoesn't store them as such. For more information about secrets and how Key\nVault stores and manages them, see the\n[Key Vault documentation](https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-vault-secrets).\n\n[SecretClient][secret_client_docs] can set secret values in the vault, update\nsecret metadata, and delete secrets, as shown in the\n[examples](#examples \"examples\") below.\n\n## Examples\nThis section contains code snippets covering common tasks:\n* [Set a Secret](#set-a-secret \"Set a Secret\")\n* [Retrieve a Secret](#retrieve-a-secret \"Retrieve a Secret\")\n* [Update Secret metadata](#update-secret-metadata \"Update Secret metadata\")\n* [Delete a Secret](#delete-a-secret \"Delete a Secret\")\n* [List Secrets](#list-secrets \"List Secrets\")\n* [Asynchronously create a Secret](#asynchronously-create-a-secret \"Asynchronously create a Secret\")\n* [Asynchronously list Secrets](#asynchronously-list-secrets \"Asynchronously list Secrets\")\n\n### Set a Secret\n[set_secret](https://aka.ms/azsdk-python-keyvault-secrets-set-secret) creates\nnew secrets and changes the values of existing secrets. If no secret with the\ngiven name exists, `set_secret` creates a new secret with that name and the\ngiven value. If the given name is in use, `set_secret` creates a new version\nof that secret, with the given value.\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\n\ncredential = DefaultAzureCredential()\n\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nsecret = secret_client.set_secret(\"secret-name\", \"secret-value\")\n\nprint(secret.name)\nprint(secret.value)\nprint(secret.properties.version)\n```\n\n### Retrieve a Secret\n[get_secret](https://aka.ms/azsdk-python-keyvault-secrets-get-secret) retrieves a secret previously stored in the Key Vault.\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\n\ncredential = DefaultAzureCredential()\n\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nsecret = secret_client.get_secret(\"secret-name\")\n\nprint(secret.name)\nprint(secret.value)\n```\n\n### Update Secret metadata\n[update_secret_properites](https://aka.ms/azsdk-python-keyvault-secrets-update-secret-ref) updates a secret's metadata. It cannot change the secret's\nvalue; use [set_secret](#set-a-secret) to set a secret's value.\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\n\ncredential = DefaultAzureCredential()\n\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\n# Clients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved\ncontent_type = \"text/plain\"\n\n# We will also disable the secret for further use\n\nupdated_secret_properties = secret_client.update_secret_properties(\"secret-name\", content_type=content_type, enabled=False)\n\nprint(updated_secret_properties.updated_on)\nprint(updated_secret_properties.content_type)\nprint(updated_secret_properties.enabled)\n```\n\n### Delete a Secret\n[begin_delete_secret](https://aka.ms/azsdk-python-keyvault-secrets-begin-delete-secret-ref) requests Key Vault delete\na secret, returning a poller which allows you to wait for the deletion to finish. Waiting is helpful when the vault has\n[soft-delete][soft_delete] enabled, and you want to purge (permanently delete) the secret as soon as possible.\nWhen [soft-delete][soft_delete] is disabled, `begin_delete_secret` itself is permanent.\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\n\ncredential = DefaultAzureCredential()\n\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\ndeleted_secret = secret_client.begin_delete_secret(\"secret-name\").result()\n\nprint(deleted_secret.name)\nprint(deleted_secret.deleted_date)\n```\n\n### List secrets\n[list_properties_of_secrets](https://aka.ms/azsdk-python-keyvault-secrets-list-properties-secrets-ref) lists the\nproperties of all of the secrets in the client's vault. This list doesn't include the secret's values.\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\n\ncredential = DefaultAzureCredential()\n\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nsecret_properties = secret_client.list_properties_of_secrets()\n\nfor secret_property in secret_properties:\n    # the list doesn't include values or versions of the secrets\n    print(secret_property.name)\n```\n\n### Async API\nThis library includes a complete async API supported on Python 3.5+. To use it, you must\nfirst install an async transport, such as [aiohttp](https://pypi.org/project/aiohttp/).\nSee\n[azure-core documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md#transport)\nfor more information.\n\nAsync clients should be closed when they're no longer needed. Each async\nclient is an async context manager and defines an async `close` method. For\nexample:\n\n```py\nfrom azure.keyvault.secrets import SecretClient\n\n# call close when the client is no longer needed\nclient = SecretClient()\n...\nawait client.close()\n\n# alternatively, use the client as an async context manager\nclient = SecretClient()\nasync with client:\n  ...\n```\n\n### Asynchronously create a secret\n[set_secret](https://aka.ms/azsdk-python-keyvault-secrets-async-set-secret-ref) creates a secret in the Key Vault with the\nspecified optional arguments.\n```python\nfrom azure.identity.aio import DefaultAzureCredential\nfrom azure.keyvault.secrets.aio import SecretClient\n\ncredential = DefaultAzureCredential()\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\nsecret = await secret_client.set_secret(\"secret-name\", \"secret-value\")\n\nprint(secret.name)\nprint(secret.value)\nprint(secret.properties.version)\n```\n\n### Asynchronously list secrets\n[list_properties_of_secrets](https://aka.ms/azsdk-python-keyvault-secrets-async-list-properties-secrets-ref) lists the\nproperties of all of the secrets in the client's vault.\n\n```python\nfrom azure.identity.aio import DefaultAzureCredential\nfrom azure.keyvault.secrets.aio import SecretClient\n\ncredential = DefaultAzureCredential()\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nsecret_properties = secret_client.list_properties_of_secrets()\n\nasync for secret_property in secret_properties:\n    # the list doesn't include values or versions of the secrets\n    print(secret_property.name)\n```\n\n## Troubleshooting\n### General\nKey Vault clients raise exceptions defined in [azure-core][azure_core_exceptions].\nFor example, if you try to get a key that doesn't exist in the vault,\n[SecretClient][secret_client_docs] raises\n[ResourceNotFoundError](https://aka.ms/azsdk-python-core-exceptions-resource-not-found-error):\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\nfrom azure.core.exceptions import ResourceNotFoundError\n\ncredential = DefaultAzureCredential()\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ntry:\n    secret_client.get_secret(\"which-does-not-exist\")\nexcept ResourceNotFoundError as e:\n    print(e.message)\n```\n\n### Logging\nThis library uses the standard\n[logging](https://docs.python.org/3.5/library/logging.html) library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument:\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.secrets import SecretClient\nimport sys\nimport logging\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\ncredential = DefaultAzureCredential()\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nsecret_client = SecretClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential, logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```py\nsecret_client.get_secret(\"my-secret\", logging_enable=True)\n```\n\n## Next steps\nSeveral samples are available in the Azure SDK for Python GitHub repository.\nThese provide example code for additional Key Vault scenarios:\n* [hello_world.py][hello_world_sample] and\n[hello_world_async.py][hello_world_async_sample] - create/get/update/delete secrets\n* [list_operations.py][list_operations_sample] and\n[list_operations_async.py][list_operations_async_sample] - basic list operations for secrets\n* [backup_restore_operations.py][backup_operations_sample] and\n[backup_restore_operations_async.py][backup_operations_async_sample] - backup and\nrestore secrets\n* [recover_purge_operations.py][recover_purge_sample] and\n[recover_purge_operations_async.py][recover_purge_async_sample] - recovering and purging secrets\n\n###  Additional Documentation\nFor more extensive documentation on Azure Key Vault, see the\n[API reference documentation][reference_docs].\n\n## Contributing\nThis project welcomes contributions and suggestions. Most contributions require\nyou to agree to a Contributor License Agreement (CLA) declaring that you have\nthe right to, and actually do, grant us the rights to use your contribution.\nFor details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether\nyou need to provide a CLA and decorate the PR appropriately (e.g., label,\ncomment). Simply follow the instructions provided by the bot. You will only\nneed to do this once across all repos using our CLA.\n\nThis project has adopted the\n[Microsoft Open Source Code of Conduct][code_of_conduct]. For more information,\nsee the Code of Conduct FAQ or contact opencode@microsoft.com with any\nadditional questions or comments.\n\n[azure_cloud_shell]: https://shell.azure.com/bash\n[azure_core_exceptions]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/core/azure-core#azure-core-library-exceptions\n[azure_identity]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\n[azure_identity_pypi]: https://pypi.org/project/azure-identity/\n[azure_sub]: https://azure.microsoft.com/free/\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[default_cred_ref]: https://aka.ms/azsdk-python-identity-default-cred-ref\n[hello_world_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/hello_world.py\n[hello_world_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/hello_world_async.py\n[backup_operations_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/backup_restore_operations.py\n[backup_operations_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/backup_restore_operations_async.py\n[list_operations_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/list_operations.py\n[list_operations_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/list_operations_async.py\n[recover_purge_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/recover_purge_operations.py\n[recover_purge_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/recover_purge_operations_async.py\n[keyvault_docs]: https://docs.microsoft.com/en-us/azure/key-vault/\n[pypi_package_secrets]: https://pypi.org/project/azure-keyvault-secrets/\n[reference_docs]: https://aka.ms/azsdk-python-keyvault-secrets-ref\n[secret_client_src]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/azure/keyvault/secrets\n[secret_client_docs]: https://aka.ms/azsdk-python-keyvault-secrets-secretclient\n[secret_samples]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/samples\n[soft_delete]: https://docs.microsoft.com/en-us/azure/key-vault/key-vault-ovw-soft-delete\n[test_examples_secrets]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/tests/test_samples_secrets.py\n[test_example_secrets_async]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/tests/test_samples_secrets_async.py\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fsdk%2Fkeyvault%2Fazure-keyvault-secrets%2FFREADME.png)\n\n\n# Release History\n\n## 4.1.0 (2020-03-10)\n- `SecretClient` instances have a `close` method which closes opened sockets.\nUsed as a context manager, a `SecretClient` closes opened sockets on exit.\n([#9906](https://github.com/Azure/azure-sdk-for-python/pull/9906))\n- Pollers no longer sleep after operation completion\n([#9991](https://github.com/Azure/azure-sdk-for-python/pull/9991))\n\n## 4.0.1 (2020-02-11)\n- `azure.keyvault.secrets` defines `__version__`\n- Challenge authentication policy preserves request options\n([#8999](https://github.com/Azure/azure-sdk-for-python/pull/8999))\n- Updated `msrest` requirement to >=0.6.0\n- Challenge authentication policy requires TLS\n([#9457](https://github.com/Azure/azure-sdk-for-python/pull/9457))\n- Methods no longer raise the internal error `KeyVaultErrorException`\n([#9690](https://github.com/Azure/azure-sdk-for-python/issues/9690))\n\n## 4.0.0 (2019-10-31)\n### Breaking changes:\n- Moved optional parameters of two methods into kwargs (\n[docs](https://azure.github.io/azure-sdk-for-python/ref/azure.keyvault.secrets.html)\ndetail the new keyword arguments):\n  - `set_secret` now has positional parameters `name` and `value`\n  - `update_secret_properties` now has positional parameters `name` and\n    (optional) `version`\n- Renamed `list_secrets` to `list_properties_of_secrets`\n- Renamed `list_secret_versions` to `list_properties_of_secret_versions`\n- Renamed sync method `delete_secret` to `begin_delete_secret`\n- The sync method `begin_delete_secret` and async `delete_secret` now return pollers that return a `DeletedSecret`\n- Renamed `Secret` to `KeyVaultSecret`\n- `KeyVaultSecret`  properties `created`, `expires`, and `updated` renamed to `created_on`,\n`expires_on`, and `updated_on`\n- The `vault_endpoint` parameter of `SecretClient` has been renamed to `vault_url`\n- The property `vault_endpoint` has been renamed to `vault_url` in all models\n\n\n## 4.0.0b4 (2019-10-08)\n### Breaking changes:\n- `Secret` now has attribute `properties`, which holds certain properties of the\nsecret, such as `version`. This changes the shape of the returned `Secret` type,\nas certain properties of `Secret` (such as `version`) have to be accessed\nthrough the `properties` property. See the updated [docs](https://azure.github.io/azure-sdk-for-python/ref/azure.keyvault.secrets.html)\nfor details.\n- `update_secret` has been renamed to `update_secret_properties`\n- The `vault_url` parameter of `SecretClient` has been renamed to `vault_endpoint`\n- The property `vault_url` has been renamed to `vault_endpoint` in all models\n\n### Fixes and improvements\n- `list_secrets` and `list_secret_versions` return the correct type\n\n## 4.0.0b3 (2019-09-11)\nThis release includes only internal changes.\n\n## 4.0.0b2 (2019-08-06)\n### Breaking changes:\n- Removed `azure.core.Configuration` from the public API in preparation for a\nrevamped configuration API. Static `create_config` methods have been renamed\n`_create_config`, and will be removed in a future release.\n- This version of the library requires `azure-core` 1.0.0b2\n  - If you later want to revert to a version requiring azure-core 1.0.0b1,\n  of this or another Azure SDK library, you must explicitly install azure-core\n  1.0.0b1 as well. For example:\n  `pip install azure-core==1.0.0b1 azure-keyvault-secrets==4.0.0b1`\n\n### New features:\n- Distributed tracing framework OpenCensus is now supported\n- Added support for HTTP challenge based authentication, allowing clients to\ninteract with vaults in sovereign clouds.\n\n## 4.0.0b1 (2019-06-28)\nVersion 4.0.0b1 is the first preview of our efforts to create a user-friendly\nand Pythonic client library for Azure Key Vault. For more information about\npreview releases of other Azure SDK libraries, please visit\nhttps://aka.ms/azure-sdk-preview1-python.\n\nThis library is not a direct replacement for `azure-keyvault`. Applications\nusing that library would require code changes to use `azure-keyvault-secrets`.\nThis package's\n[documentation](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/README.md)\nand\n[samples](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/samples)\ndemonstrate the new API.\n\n### Major changes from `azure-keyvault`\n- Packages scoped by functionality\n    - `azure-keyvault-secrets` contains a client for secret operations,\n    `azure-keyvault-keys` contains a client for key operations\n- Client instances are scoped to vaults (an instance interacts with one vault\nonly)\n- Asynchronous API supported on Python 3.5.3+\n    - the `azure.keyvault.secrets.aio` namespace contains an async equivalent of\n    the synchronous client in `azure.keyvault.secrets`\n- Authentication using `azure-identity` credentials\n  - see this package's\n  [documentation](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/README.md)\n  , and the\n  [Azure Identity documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md)\n  for more information\n\n### `azure-keyvault` features not implemented in this library\n- Certificate management APIs\n- National cloud support. This release supports public global cloud vaults,\n    e.g. https://{vault-name}.vault.azure.net\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-keyvault-secrets", "package_url": "https://pypi.org/project/azure-keyvault-secrets/", "platform": "", "project_url": "https://pypi.org/project/azure-keyvault-secrets/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets"}, "release_url": "https://pypi.org/project/azure-keyvault-secrets/4.1.0/", "requires_dist": ["azure-core (<2.0.0,>=1.2.1)", "msrest (>=0.6.0)", "azure-keyvault-nspkg ; python_version<'3.0'", "enum34 (>=1.0.4) ; python_version<'3.4'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure Key Vault Secrets Client Library for Python", "version": "4.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Azure Key Vault Secret client library for Python</h1>\n<p>Azure Key Vault helps solve the following problems:</p>\n<ul>\n<li>Secrets management (this library) -\nsecurely store and control access to tokens, passwords, certificates, API keys,\nand other secrets</li>\n<li>Cryptographic key management\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets\" rel=\"nofollow\">azure-keyvault-keys</a>) -\ncreate, store, and control access to the keys used to encrypt your data</li>\n<li>Certificate management\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates\" rel=\"nofollow\">azure-keyvault-certificates</a>) -\ncreate, manage, and deploy public and private SSL/TLS certificates</li>\n</ul>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/azure/keyvault/secrets\" rel=\"nofollow\">Source code</a> | <a href=\"https://pypi.org/project/azure-keyvault-secrets/\" rel=\"nofollow\">Package (PyPI)</a> | <a href=\"https://aka.ms/azsdk-python-keyvault-secrets-ref\" rel=\"nofollow\">API reference documentation</a> | <a href=\"https://docs.microsoft.com/en-us/azure/key-vault/\" rel=\"nofollow\">Product documentation</a> | <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/samples\" rel=\"nofollow\">Samples</a></p>\n<h2>Getting started</h2>\n<h3>Install packages</h3>\n<p>Install <a href=\"https://pypi.org/project/azure-keyvault-secrets/\" rel=\"nofollow\">azure-keyvault-secrets</a> and\n<a href=\"https://pypi.org/project/azure-identity/\" rel=\"nofollow\">azure-identity</a> with [pip][pip]:</p>\n<pre>pip install azure-keyvault-secrets azure-identity\n</pre>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a> is used for Azure Active Directory\nauthentication as demonstrated below.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li>\n<p>An <a href=\"https://azure.microsoft.com/free/\" rel=\"nofollow\">Azure subscription</a></p>\n</li>\n<li>\n<p>Python 2.7, 3.5.3, or later</p>\n</li>\n<li>\n<p>A Key Vault. If you need to create one, you can use the\n<a href=\"https://shell.azure.com/bash\" rel=\"nofollow\">Azure Cloud Shell</a> to create one with these commands\n(replace <code>\"my-resource-group\"</code> and <code>\"my-key-vault\"</code> with your own, unique\nnames):</p>\n<p>(Optional) if you want a new resource group to hold the Key Vault:</p>\n<pre>az group create --name my-resource-group --location westus2\n</pre>\n<p>Create the Key Vault:</p>\n<pre>az keyvault create --resource-group my-resource-group --name my-key-vault\n</pre>\n<p>Output:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"location\"</span><span class=\"p\">:</span> <span class=\"s2\">\"westus2\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-key-vault\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"accessPolicies\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"err\">...</span><span class=\"p\">],</span>\n        <span class=\"nt\">\"createMode\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enablePurgeProtection\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enableSoftDelete\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enabledForDeployment\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enabledForDiskEncryption\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enabledForTemplateDeployment\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"networkAcls\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"provisioningState\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Succeeded\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"sku\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"standard\"</span> <span class=\"p\">},</span>\n        <span class=\"nt\">\"tenantId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"vaultUri\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"resourceGroup\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-resource-group\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Microsoft.KeyVault/vaults\"</span>\n<span class=\"p\">}</span>\n</pre>\n<blockquote>\n<p>The <code>\"vaultUri\"</code> property is the <code>vault_url</code> used by <a href=\"https://aka.ms/azsdk-python-keyvault-secrets-secretclient\" rel=\"nofollow\">SecretClient</a></p>\n</blockquote>\n</li>\n</ul>\n<h3>Authenticate the client</h3>\n<p>This document demonstrates using <a href=\"https://aka.ms/azsdk-python-identity-default-cred-ref\" rel=\"nofollow\">DefaultAzureCredential</a>\nto authenticate as a service principal. However, <a href=\"https://aka.ms/azsdk-python-keyvault-secrets-secretclient\" rel=\"nofollow\">SecretClient</a>\naccepts any <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a> credential. See the\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a> documentation for more information about other\ncredentials.</p>\n<h4>Create a service principal (optional)</h4>\n<p>This <a href=\"https://shell.azure.com/bash\" rel=\"nofollow\">Azure Cloud Shell</a> snippet shows how to create a\nnew service principal. Before using it, replace \"your-application-name\" with\na more appropriate name for your service principal.</p>\n<p>Create a service principal:</p>\n<pre>az ad sp create-for-rbac --name http://my-application --skip-assignment\n</pre>\n<blockquote>\n<p>Output:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"appId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"generated app id\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"displayName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-application\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://my-application\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"random password\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"tenant\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tenant id\"</span>\n<span class=\"p\">}</span>\n</pre>\n</blockquote>\n<p>Use the output to set <strong>AZURE_CLIENT_ID</strong> (\"appId\" above), <strong>AZURE_CLIENT_SECRET</strong>\n(\"password\" above) and <strong>AZURE_TENANT_ID</strong> (\"tenant\" above) environment variables.\nThe following example shows a way to do this in Bash:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">AZURE_CLIENT_ID</span><span class=\"o\">=</span><span class=\"s2\">\"generated app id\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">AZURE_CLIENT_SECRET</span><span class=\"o\">=</span><span class=\"s2\">\"random password\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">AZURE_TENANT_ID</span><span class=\"o\">=</span><span class=\"s2\">\"tenant id\"</span>\n</pre>\n<p>Authorize the service principal to perform key operations in your Key Vault:</p>\n<pre>az keyvault set-policy --name my-key-vault --spn <span class=\"nv\">$AZURE_CLIENT_ID</span> --secret-permissions get <span class=\"nb\">set</span> list delete backup recover restore purge\n</pre>\n<blockquote>\n<p>Possible permissions:</p>\n<ul>\n<li>Secret management: set, backup, delete, get, list, purge, recover, restore</li>\n</ul>\n</blockquote>\n<h4>Create a client</h4>\n<p>Once the <strong>AZURE_CLIENT_ID</strong>, <strong>AZURE_CLIENT_SECRET</strong> and\n<strong>AZURE_TENANT_ID</strong> environment variables are set,\n<a href=\"https://aka.ms/azsdk-python-identity-default-cred-ref\" rel=\"nofollow\">DefaultAzureCredential</a> will be able to authenticate the\n<a href=\"https://aka.ms/azsdk-python-keyvault-secrets-secretclient\" rel=\"nofollow\">SecretClient</a>.</p>\n<p>Constructing the client also requires your vault's URL, which you can\nget from the Azure CLI or the Azure Portal. In the Azure Portal, this URL is\nthe vault's \"DNS Name\".</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n</pre>\n<h2>Key concepts</h2>\n<h3>Secret</h3>\n<p>A secret consists of a secret value and its associated metadata and management\ninformation. This library handles secret values as strings, but Azure Key Vault\ndoesn't store them as such. For more information about secrets and how Key\nVault stores and manages them, see the\n<a href=\"https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-vault-secrets\" rel=\"nofollow\">Key Vault documentation</a>.</p>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-secretclient\" rel=\"nofollow\">SecretClient</a> can set secret values in the vault, update\nsecret metadata, and delete secrets, as shown in the\n<a href=\"#examples\" rel=\"nofollow\" title=\"examples\">examples</a> below.</p>\n<h2>Examples</h2>\n<p>This section contains code snippets covering common tasks:</p>\n<ul>\n<li><a href=\"#set-a-secret\" rel=\"nofollow\" title=\"Set a Secret\">Set a Secret</a></li>\n<li><a href=\"#retrieve-a-secret\" rel=\"nofollow\" title=\"Retrieve a Secret\">Retrieve a Secret</a></li>\n<li><a href=\"#update-secret-metadata\" rel=\"nofollow\" title=\"Update Secret metadata\">Update Secret metadata</a></li>\n<li><a href=\"#delete-a-secret\" rel=\"nofollow\" title=\"Delete a Secret\">Delete a Secret</a></li>\n<li><a href=\"#list-secrets\" rel=\"nofollow\" title=\"List Secrets\">List Secrets</a></li>\n<li><a href=\"#asynchronously-create-a-secret\" rel=\"nofollow\" title=\"Asynchronously create a Secret\">Asynchronously create a Secret</a></li>\n<li><a href=\"#asynchronously-list-secrets\" rel=\"nofollow\" title=\"Asynchronously list Secrets\">Asynchronously list Secrets</a></li>\n</ul>\n<h3>Set a Secret</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-set-secret\" rel=\"nofollow\">set_secret</a> creates\nnew secrets and changes the values of existing secrets. If no secret with the\ngiven name exists, <code>set_secret</code> creates a new secret with that name and the\ngiven value. If the given name is in use, <code>set_secret</code> creates a new version\nof that secret, with the given value.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">set_secret</span><span class=\"p\">(</span><span class=\"s2\">\"secret-name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"secret-value\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">properties</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n</pre>\n<h3>Retrieve a Secret</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-get-secret\" rel=\"nofollow\">get_secret</a> retrieves a secret previously stored in the Key Vault.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">\"secret-name\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n<h3>Update Secret metadata</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-update-secret-ref\" rel=\"nofollow\">update_secret_properites</a> updates a secret's metadata. It cannot change the secret's\nvalue; use <a href=\"#set-a-secret\" rel=\"nofollow\">set_secret</a> to set a secret's value.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Clients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved</span>\n<span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"s2\">\"text/plain\"</span>\n\n<span class=\"c1\"># We will also disable the secret for further use</span>\n\n<span class=\"n\">updated_secret_properties</span> <span class=\"o\">=</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">update_secret_properties</span><span class=\"p\">(</span><span class=\"s2\">\"secret-name\"</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"n\">content_type</span><span class=\"p\">,</span> <span class=\"n\">enabled</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updated_secret_properties</span><span class=\"o\">.</span><span class=\"n\">updated_on</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updated_secret_properties</span><span class=\"o\">.</span><span class=\"n\">content_type</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updated_secret_properties</span><span class=\"o\">.</span><span class=\"n\">enabled</span><span class=\"p\">)</span>\n</pre>\n<h3>Delete a Secret</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-begin-delete-secret-ref\" rel=\"nofollow\">begin_delete_secret</a> requests Key Vault delete\na secret, returning a poller which allows you to wait for the deletion to finish. Waiting is helpful when the vault has\n<a href=\"https://docs.microsoft.com/en-us/azure/key-vault/key-vault-ovw-soft-delete\" rel=\"nofollow\">soft-delete</a> enabled, and you want to purge (permanently delete) the secret as soon as possible.\nWhen <a href=\"https://docs.microsoft.com/en-us/azure/key-vault/key-vault-ovw-soft-delete\" rel=\"nofollow\">soft-delete</a> is disabled, <code>begin_delete_secret</code> itself is permanent.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">deleted_secret</span> <span class=\"o\">=</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">begin_delete_secret</span><span class=\"p\">(</span><span class=\"s2\">\"secret-name\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">deleted_secret</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">deleted_secret</span><span class=\"o\">.</span><span class=\"n\">deleted_date</span><span class=\"p\">)</span>\n</pre>\n<h3>List secrets</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-list-properties-secrets-ref\" rel=\"nofollow\">list_properties_of_secrets</a> lists the\nproperties of all of the secrets in the client's vault. This list doesn't include the secret's values.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">secret_properties</span> <span class=\"o\">=</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">list_properties_of_secrets</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">secret_property</span> <span class=\"ow\">in</span> <span class=\"n\">secret_properties</span><span class=\"p\">:</span>\n    <span class=\"c1\"># the list doesn't include values or versions of the secrets</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret_property</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<h3>Async API</h3>\n<p>This library includes a complete async API supported on Python 3.5+. To use it, you must\nfirst install an async transport, such as <a href=\"https://pypi.org/project/aiohttp/\" rel=\"nofollow\">aiohttp</a>.\nSee\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md#transport\" rel=\"nofollow\">azure-core documentation</a>\nfor more information.</p>\n<p>Async clients should be closed when they're no longer needed. Each async\nclient is an async context manager and defines an async <code>close</code> method. For\nexample:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"c1\"># call close when the client is no longer needed</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># alternatively, use the client as an async context manager</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">()</span>\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n  <span class=\"o\">...</span>\n</pre>\n<h3>Asynchronously create a secret</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-async-set-secret-ref\" rel=\"nofollow\">set_secret</a> creates a secret in the Key Vault with the\nspecified optional arguments.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity.aio</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets.aio</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">set_secret</span><span class=\"p\">(</span><span class=\"s2\">\"secret-name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"secret-value\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">properties</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n</pre>\n<h3>Asynchronously list secrets</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-secrets-async-list-properties-secrets-ref\" rel=\"nofollow\">list_properties_of_secrets</a> lists the\nproperties of all of the secrets in the client's vault.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity.aio</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets.aio</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">secret_properties</span> <span class=\"o\">=</span> <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">list_properties_of_secrets</span><span class=\"p\">()</span>\n\n<span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">secret_property</span> <span class=\"ow\">in</span> <span class=\"n\">secret_properties</span><span class=\"p\">:</span>\n    <span class=\"c1\"># the list doesn't include values or versions of the secrets</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">secret_property</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<h2>Troubleshooting</h2>\n<h3>General</h3>\n<p>Key Vault clients raise exceptions defined in <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/core/azure-core#azure-core-library-exceptions\" rel=\"nofollow\">azure-core</a>.\nFor example, if you try to get a key that doesn't exist in the vault,\n<a href=\"https://aka.ms/azsdk-python-keyvault-secrets-secretclient\" rel=\"nofollow\">SecretClient</a> raises\n<a href=\"https://aka.ms/azsdk-python-core-exceptions-resource-not-found-error\" rel=\"nofollow\">ResourceNotFoundError</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ResourceNotFoundError</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">\"which-does-not-exist\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">ResourceNotFoundError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n</pre>\n<h3>Logging</h3>\n<p>This library uses the standard\n<a href=\"https://docs.python.org/3.5/library/logging.html\" rel=\"nofollow\">logging</a> library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.</p>\n<p>Detailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the <code>logging_enable</code> argument:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">SecretClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"c1\"># Create a logger for the 'azure' SDK</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'azure'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Configure a console output</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># This client will log detailed information about its HTTP sessions, at DEBUG level</span>\n<span class=\"n\">secret_client</span> <span class=\"o\">=</span> <span class=\"n\">SecretClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Similarly, <code>logging_enable</code> can enable detailed logging for a single operation,\neven when it isn't enabled for the client:</p>\n<pre><span class=\"n\">secret_client</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">\"my-secret\"</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Next steps</h2>\n<p>Several samples are available in the Azure SDK for Python GitHub repository.\nThese provide example code for additional Key Vault scenarios:</p>\n<ul>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/hello_world.py\" rel=\"nofollow\">hello_world.py</a> and\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/hello_world_async.py\" rel=\"nofollow\">hello_world_async.py</a> - create/get/update/delete secrets</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/list_operations.py\" rel=\"nofollow\">list_operations.py</a> and\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/list_operations_async.py\" rel=\"nofollow\">list_operations_async.py</a> - basic list operations for secrets</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/backup_restore_operations.py\" rel=\"nofollow\">backup_restore_operations.py</a> and\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/backup_restore_operations_async.py\" rel=\"nofollow\">backup_restore_operations_async.py</a> - backup and\nrestore secrets</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/recover_purge_operations.py\" rel=\"nofollow\">recover_purge_operations.py</a> and\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-secrets/samples/recover_purge_operations_async.py\" rel=\"nofollow\">recover_purge_operations_async.py</a> - recovering and purging secrets</li>\n</ul>\n<h3>Additional Documentation</h3>\n<p>For more extensive documentation on Azure Key Vault, see the\n<a href=\"https://aka.ms/azsdk-python-keyvault-secrets-ref\" rel=\"nofollow\">API reference documentation</a>.</p>\n<h2>Contributing</h2>\n<p>This project welcomes contributions and suggestions. Most contributions require\nyou to agree to a Contributor License Agreement (CLA) declaring that you have\nthe right to, and actually do, grant us the rights to use your contribution.\nFor details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">https://cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether\nyou need to provide a CLA and decorate the PR appropriately (e.g., label,\ncomment). Simply follow the instructions provided by the bot. You will only\nneed to do this once across all repos using our CLA.</p>\n<p>This project has adopted the\n<a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>. For more information,\nsee the Code of Conduct FAQ or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any\nadditional questions or comments.</p>\n<p><img alt=\"Impressions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88108f19badbcd70ede94b745bc5d35b2dc420f0/68747470733a2f2f617a7572652d73646b2d696d7072657373696f6e732e617a75726577656273697465732e6e65742f6170692f696d7072657373696f6e732f617a7572652d73646b2d666f722d707974686f6e25324673646b2532466b65797661756c74253246617a7572652d6b65797661756c742d7365637265747325324646524541444d452e706e67\"></p>\n<h1>Release History</h1>\n<h2>4.1.0 (2020-03-10)</h2>\n<ul>\n<li><code>SecretClient</code> instances have a <code>close</code> method which closes opened sockets.\nUsed as a context manager, a <code>SecretClient</code> closes opened sockets on exit.\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/9906\" rel=\"nofollow\">#9906</a>)</li>\n<li>Pollers no longer sleep after operation completion\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/9991\" rel=\"nofollow\">#9991</a>)</li>\n</ul>\n<h2>4.0.1 (2020-02-11)</h2>\n<ul>\n<li><code>azure.keyvault.secrets</code> defines <code>__version__</code></li>\n<li>Challenge authentication policy preserves request options\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/8999\" rel=\"nofollow\">#8999</a>)</li>\n<li>Updated <code>msrest</code> requirement to &gt;=0.6.0</li>\n<li>Challenge authentication policy requires TLS\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/9457\" rel=\"nofollow\">#9457</a>)</li>\n<li>Methods no longer raise the internal error <code>KeyVaultErrorException</code>\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/issues/9690\" rel=\"nofollow\">#9690</a>)</li>\n</ul>\n<h2>4.0.0 (2019-10-31)</h2>\n<h3>Breaking changes:</h3>\n<ul>\n<li>Moved optional parameters of two methods into kwargs (\n<a href=\"https://azure.github.io/azure-sdk-for-python/ref/azure.keyvault.secrets.html\" rel=\"nofollow\">docs</a>\ndetail the new keyword arguments):\n<ul>\n<li><code>set_secret</code> now has positional parameters <code>name</code> and <code>value</code></li>\n<li><code>update_secret_properties</code> now has positional parameters <code>name</code> and\n(optional) <code>version</code></li>\n</ul>\n</li>\n<li>Renamed <code>list_secrets</code> to <code>list_properties_of_secrets</code></li>\n<li>Renamed <code>list_secret_versions</code> to <code>list_properties_of_secret_versions</code></li>\n<li>Renamed sync method <code>delete_secret</code> to <code>begin_delete_secret</code></li>\n<li>The sync method <code>begin_delete_secret</code> and async <code>delete_secret</code> now return pollers that return a <code>DeletedSecret</code></li>\n<li>Renamed <code>Secret</code> to <code>KeyVaultSecret</code></li>\n<li><code>KeyVaultSecret</code>  properties <code>created</code>, <code>expires</code>, and <code>updated</code> renamed to <code>created_on</code>,\n<code>expires_on</code>, and <code>updated_on</code></li>\n<li>The <code>vault_endpoint</code> parameter of <code>SecretClient</code> has been renamed to <code>vault_url</code></li>\n<li>The property <code>vault_endpoint</code> has been renamed to <code>vault_url</code> in all models</li>\n</ul>\n<h2>4.0.0b4 (2019-10-08)</h2>\n<h3>Breaking changes:</h3>\n<ul>\n<li><code>Secret</code> now has attribute <code>properties</code>, which holds certain properties of the\nsecret, such as <code>version</code>. This changes the shape of the returned <code>Secret</code> type,\nas certain properties of <code>Secret</code> (such as <code>version</code>) have to be accessed\nthrough the <code>properties</code> property. See the updated <a href=\"https://azure.github.io/azure-sdk-for-python/ref/azure.keyvault.secrets.html\" rel=\"nofollow\">docs</a>\nfor details.</li>\n<li><code>update_secret</code> has been renamed to <code>update_secret_properties</code></li>\n<li>The <code>vault_url</code> parameter of <code>SecretClient</code> has been renamed to <code>vault_endpoint</code></li>\n<li>The property <code>vault_url</code> has been renamed to <code>vault_endpoint</code> in all models</li>\n</ul>\n<h3>Fixes and improvements</h3>\n<ul>\n<li><code>list_secrets</code> and <code>list_secret_versions</code> return the correct type</li>\n</ul>\n<h2>4.0.0b3 (2019-09-11)</h2>\n<p>This release includes only internal changes.</p>\n<h2>4.0.0b2 (2019-08-06)</h2>\n<h3>Breaking changes:</h3>\n<ul>\n<li>Removed <code>azure.core.Configuration</code> from the public API in preparation for a\nrevamped configuration API. Static <code>create_config</code> methods have been renamed\n<code>_create_config</code>, and will be removed in a future release.</li>\n<li>This version of the library requires <code>azure-core</code> 1.0.0b2\n<ul>\n<li>If you later want to revert to a version requiring azure-core 1.0.0b1,\nof this or another Azure SDK library, you must explicitly install azure-core\n1.0.0b1 as well. For example:\n<code>pip install azure-core==1.0.0b1 azure-keyvault-secrets==4.0.0b1</code></li>\n</ul>\n</li>\n</ul>\n<h3>New features:</h3>\n<ul>\n<li>Distributed tracing framework OpenCensus is now supported</li>\n<li>Added support for HTTP challenge based authentication, allowing clients to\ninteract with vaults in sovereign clouds.</li>\n</ul>\n<h2>4.0.0b1 (2019-06-28)</h2>\n<p>Version 4.0.0b1 is the first preview of our efforts to create a user-friendly\nand Pythonic client library for Azure Key Vault. For more information about\npreview releases of other Azure SDK libraries, please visit\n<a href=\"https://aka.ms/azure-sdk-preview1-python\" rel=\"nofollow\">https://aka.ms/azure-sdk-preview1-python</a>.</p>\n<p>This library is not a direct replacement for <code>azure-keyvault</code>. Applications\nusing that library would require code changes to use <code>azure-keyvault-secrets</code>.\nThis package's\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/README.md\" rel=\"nofollow\">documentation</a>\nand\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/samples\" rel=\"nofollow\">samples</a>\ndemonstrate the new API.</p>\n<h3>Major changes from <code>azure-keyvault</code></h3>\n<ul>\n<li>Packages scoped by functionality\n<ul>\n<li><code>azure-keyvault-secrets</code> contains a client for secret operations,\n<code>azure-keyvault-keys</code> contains a client for key operations</li>\n</ul>\n</li>\n<li>Client instances are scoped to vaults (an instance interacts with one vault\nonly)</li>\n<li>Asynchronous API supported on Python 3.5.3+\n<ul>\n<li>the <code>azure.keyvault.secrets.aio</code> namespace contains an async equivalent of\nthe synchronous client in <code>azure.keyvault.secrets</code></li>\n</ul>\n</li>\n<li>Authentication using <code>azure-identity</code> credentials\n<ul>\n<li>see this package's\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets/README.md\" rel=\"nofollow\">documentation</a>\n, and the\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md\" rel=\"nofollow\">Azure Identity documentation</a>\nfor more information</li>\n</ul>\n</li>\n</ul>\n<h3><code>azure-keyvault</code> features not implemented in this library</h3>\n<ul>\n<li>Certificate management APIs</li>\n<li>National cloud support. This release supports public global cloud vaults,\ne.g. https://{vault-name}.vault.azure.net</li>\n</ul>\n\n          </div>"}, "last_serial": 6786247, "releases": {"4.0.0": [{"comment_text": "", "digests": {"md5": "bf7fe1d938594c0fea1dcc5185e5126f", "sha256": "2eae9264a8f6f59277e1a9bfdbc8b0a15969ee5a80d8efe403d7744805b4a481"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf7fe1d938594c0fea1dcc5185e5126f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 156426, "upload_time": "2019-10-31T23:14:53", "upload_time_iso_8601": "2019-10-31T23:14:53.936106Z", "url": "https://files.pythonhosted.org/packages/0c/24/e460d0a9ff806dd957c3db12f6622af7ebd1616209ed517e3261b4525771/azure_keyvault_secrets-4.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87d32298fce0f4401365825d46a13fdc", "sha256": "97a602406a833e8f117c540c66059c818f4321a35168dd17365fab1e4527d718"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.0.0.zip", "has_sig": false, "md5_digest": "87d32298fce0f4401365825d46a13fdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 270714, "upload_time": "2019-10-31T23:14:55", "upload_time_iso_8601": "2019-10-31T23:14:55.913022Z", "url": "https://files.pythonhosted.org/packages/21/0d/f72fad3b30867a5a79841fdfa0cd7fca272ff82b354493f4595ea7a518c7/azure-keyvault-secrets-4.0.0.zip", "yanked": false}], "4.0.0b1": [{"comment_text": "", "digests": {"md5": "8dfec1e4f89ecc9693bdaa90acc52879", "sha256": "f91901729f7492067b944687381110632251dfaad2059eaff16356723810e714"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.0.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8dfec1e4f89ecc9693bdaa90acc52879", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 146098, "upload_time": "2019-06-28T23:40:03", "upload_time_iso_8601": "2019-06-28T23:40:03.937645Z", "url": "https://files.pythonhosted.org/packages/52/d5/083dc8a4a0f2b66a2be6b69e56434734599066ba481cc1d45d924935c983/azure_keyvault_secrets-4.0.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1917bd29327775bc7062a75f4647b8d", "sha256": "b43fc67115f424777956b1e2f65446aa3d746d5846b6790358f5b5df78804343"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.0.0b1.zip", "has_sig": false, "md5_digest": "e1917bd29327775bc7062a75f4647b8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163633, "upload_time": "2019-06-28T23:40:09", "upload_time_iso_8601": "2019-06-28T23:40:09.228421Z", "url": "https://files.pythonhosted.org/packages/17/de/f6a85ab45deea3daaef9c5c0c8238bdd9134694f4995a9ece5da6eec0625/azure-keyvault-secrets-4.0.0b1.zip", "yanked": false}], "4.0.0b2": [{"comment_text": "", "digests": {"md5": "7db3a1ff5cc8cda1dcb23db1ef80684c", "sha256": "746f941f3d6fb61f6f24d080d6d9902de6e31f2fef7fd819253ab213c1909dec"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7db3a1ff5cc8cda1dcb23db1ef80684c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 150461, "upload_time": "2019-08-06T22:11:20", "upload_time_iso_8601": "2019-08-06T22:11:20.840238Z", "url": "https://files.pythonhosted.org/packages/63/85/71a65d67a2a69a8bef7877d7a4da6bd47e8c84246e938acefd9ddf815c8e/azure_keyvault_secrets-4.0.0b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94f8da273b645df41495deca31a72524", "sha256": "bcef7a09f6d339cf0f3f3ba9ab0824ef29388ef9826aef1271627d5c62db38c4"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.0.0b2.zip", "has_sig": false, "md5_digest": "94f8da273b645df41495deca31a72524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 170007, "upload_time": "2019-08-06T22:11:22", "upload_time_iso_8601": "2019-08-06T22:11:22.726255Z", "url": "https://files.pythonhosted.org/packages/cb/f7/adb87b2bd152d2522339b9d5fdca18c91cadf4060b02a539d502ff9b5324/azure-keyvault-secrets-4.0.0b2.zip", "yanked": false}], "4.0.0b3": [{"comment_text": "", "digests": {"md5": "eeeb56e0fbe7a5a44fc9c048aecf5c7d", "sha256": "4da2fc215b97f283af4fe74fa3fa171786e460496df07e8bde4cea81e2d4143e"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.0.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eeeb56e0fbe7a5a44fc9c048aecf5c7d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 150256, "upload_time": "2019-09-11T17:50:47", "upload_time_iso_8601": "2019-09-11T17:50:47.168327Z", "url": "https://files.pythonhosted.org/packages/e6/5f/ec38b65a7123ba35550e98cd96858c3ea5fa04886aa13790d934cf609330/azure_keyvault_secrets-4.0.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "360a10c701488aff12e41166550fab2b", "sha256": "91a882f20499b582fe4e0f7e76a23e1bfbb37fd28220d79712b4f41497b75170"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.0.0b3.zip", "has_sig": false, "md5_digest": "360a10c701488aff12e41166550fab2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 170141, "upload_time": "2019-09-11T17:50:48", "upload_time_iso_8601": "2019-09-11T17:50:48.986782Z", "url": "https://files.pythonhosted.org/packages/7a/67/a2a62499bd6d9f7ea0fe5caa77978c0b71f42077b3d6927f3deae6531980/azure-keyvault-secrets-4.0.0b3.zip", "yanked": false}], "4.0.0b4": [{"comment_text": "", "digests": {"md5": "619c86bb78a3e5c855363d83856f5b09", "sha256": "c738596eaead8b6cbc4b2d5177e4042a64ce20e6e9bf804f89eaf13ce1e14de5"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.0.0b4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "619c86bb78a3e5c855363d83856f5b09", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 151678, "upload_time": "2019-10-08T20:17:06", "upload_time_iso_8601": "2019-10-08T20:17:06.998559Z", "url": "https://files.pythonhosted.org/packages/04/94/2ccb6b8866759c267befce847e0d0b53a2775efee7d758891a62bc2a83ce/azure_keyvault_secrets-4.0.0b4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07bc68967aff7fc4dba48418feac9328", "sha256": "17b544a47247258e8e6a44ec7a115d18cc63aa7f49ed43c8647f3524326114c4"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.0.0b4.zip", "has_sig": false, "md5_digest": "07bc68967aff7fc4dba48418feac9328", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 253610, "upload_time": "2019-10-08T20:17:09", "upload_time_iso_8601": "2019-10-08T20:17:09.229415Z", "url": "https://files.pythonhosted.org/packages/fd/c0/ded23ee82cbeaf9fb795882731111f7cf73231b8c026bbe0b524aeab3b9e/azure-keyvault-secrets-4.0.0b4.zip", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "38ccf213a95d5664dc8342499e07d482", "sha256": "0f92705444f55ca0d5a892172eda898f42678602834f03fa8012e9979e5fe619"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38ccf213a95d5664dc8342499e07d482", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 158535, "upload_time": "2020-02-11T20:08:26", "upload_time_iso_8601": "2020-02-11T20:08:26.237706Z", "url": "https://files.pythonhosted.org/packages/43/28/8995e0e6daa9d75ef540f18c0cea5b830d14d05504799d446ad5af56790a/azure_keyvault_secrets-4.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e993859c4a9aae9a848ecf8c66f6ec5a", "sha256": "0afd85eaa94962fc8ad9e71348ba0873d723d531163894ee3175f138c3180fe4"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.0.1.zip", "has_sig": false, "md5_digest": "e993859c4a9aae9a848ecf8c66f6ec5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208265, "upload_time": "2020-02-11T20:08:28", "upload_time_iso_8601": "2020-02-11T20:08:28.385313Z", "url": "https://files.pythonhosted.org/packages/9d/a2/7f1ab2832873e8884105957548fd8fbb9997e85202c325fc80bce60a9428/azure-keyvault-secrets-4.0.1.zip", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "3e25f2f54ffe41474b953703c6ed6966", "sha256": "743a2eabb2bbb21d50b46fa6b321361b9b61121387ec35c0f3d953778793c179"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e25f2f54ffe41474b953703c6ed6966", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 157254, "upload_time": "2020-03-10T14:47:50", "upload_time_iso_8601": "2020-03-10T14:47:50.841639Z", "url": "https://files.pythonhosted.org/packages/6e/66/dc763e4ad80ea059d2a3df55fab8fbfb9ce39f79c0fd38f9c469d05bdbea/azure_keyvault_secrets-4.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "838406d473167dc4e4312fb168950105", "sha256": "4f3bfac60e025e01dd1c1998b73649d45d706975356c0cf147174cf5a6ddf8be"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.1.0.zip", "has_sig": false, "md5_digest": "838406d473167dc4e4312fb168950105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212877, "upload_time": "2020-03-10T14:47:52", "upload_time_iso_8601": "2020-03-10T14:47:52.781507Z", "url": "https://files.pythonhosted.org/packages/0e/a1/02fd621bf5f23463d23d9e8d563f85137cac6d07bccdea43e0474c938c44/azure-keyvault-secrets-4.1.0.zip", "yanked": false}], "4.2.0b1": [{"comment_text": "", "digests": {"md5": "9daa4eaf0380195031075502d109c061", "sha256": "99e86310a53755c3de366e5b468e37412fcfd5fa312b9bb5b1acbf71f498a8fb"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.2.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9daa4eaf0380195031075502d109c061", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 224377, "upload_time": "2020-03-10T16:36:22", "upload_time_iso_8601": "2020-03-10T16:36:22.254950Z", "url": "https://files.pythonhosted.org/packages/e8/e7/8db07e7b16d84ebb3d6c64084b37d6c3fbc0303f061513daa5d948652d4d/azure_keyvault_secrets-4.2.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d45eef17f16a7f18a509b3055d519864", "sha256": "bab82c1c5e90b8f2aa537346b1b40b69659d2f50d7390707692adfaab4505bbf"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.2.0b1.zip", "has_sig": false, "md5_digest": "d45eef17f16a7f18a509b3055d519864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 283097, "upload_time": "2020-03-10T16:36:24", "upload_time_iso_8601": "2020-03-10T16:36:24.810434Z", "url": "https://files.pythonhosted.org/packages/fd/73/4e817d5965109aeca924331b8891c3b72f3ba49bf008f24ebab0152b2d5b/azure-keyvault-secrets-4.2.0b1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3e25f2f54ffe41474b953703c6ed6966", "sha256": "743a2eabb2bbb21d50b46fa6b321361b9b61121387ec35c0f3d953778793c179"}, "downloads": -1, "filename": "azure_keyvault_secrets-4.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e25f2f54ffe41474b953703c6ed6966", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 157254, "upload_time": "2020-03-10T14:47:50", "upload_time_iso_8601": "2020-03-10T14:47:50.841639Z", "url": "https://files.pythonhosted.org/packages/6e/66/dc763e4ad80ea059d2a3df55fab8fbfb9ce39f79c0fd38f9c469d05bdbea/azure_keyvault_secrets-4.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "838406d473167dc4e4312fb168950105", "sha256": "4f3bfac60e025e01dd1c1998b73649d45d706975356c0cf147174cf5a6ddf8be"}, "downloads": -1, "filename": "azure-keyvault-secrets-4.1.0.zip", "has_sig": false, "md5_digest": "838406d473167dc4e4312fb168950105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212877, "upload_time": "2020-03-10T14:47:52", "upload_time_iso_8601": "2020-03-10T14:47:52.781507Z", "url": "https://files.pythonhosted.org/packages/0e/a1/02fd621bf5f23463d23d9e8d563f85137cac6d07bccdea43e0474c938c44/azure-keyvault-secrets-4.1.0.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:20 2020"}