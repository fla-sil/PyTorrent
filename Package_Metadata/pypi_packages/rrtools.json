{"info": {"author": "David Toro", "author_email": "davsamirtor@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Education", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=========================================================\nRRtools - Raster Restoration Tools  |build-status| |docs|\n=========================================================\n\nOverview\n========\n\nThis module encapsulates algorithms for the restoration of images and it is\nspecialized in retinal images.\n\nRRtoolbox is a python package which contains source code designed to process images built\nmainly using OpenCV.\n\nRRtoolFC is a development tool using sequential function charts (FC stands for Function Chart)\n\nImrestore is an application to restore images in general but in this case is configured to\nrestore retinal images. Because it is still in development it is the alpha program for testing\nand to let the users find out about its utilities. Do not hesitate to share it to the world,\nlet everyone know how awesome it is!! (be warned that it is for research purposes)\n\nStable:\n\n    - Documentation: http://pythonhosted.org/rrtools\n    - Download Page: https://pypi.python.org/pypi/rrtoolbox\n\nLatest:\n\n    - Documentation: http://rrtools.readthedocs.io/\n    - Project Homepage: https://github.com/davtoh/RRtools\n\nBSD license, (C) 2015-2017 David Toro <davsamirtor@gmail.com>\n\nDocumentation\n=============\n\nFor API documentation, usage and examples see files in the \"documentation\"\ndirectory.  The \".rst\" files can be read in any text editor or being converted to\nHTML or PDF using Sphinx_. A HTML version is online at\nhttp://rrtools.readthedocs.io/en/latest/\n\nRead RRtoolbox (Retinal Restauration Toolbox) manual_ or the dissertation_\nwhich made this project possible with all the concepts.\n\nExamples are found in the directory examples_ and unit tests in tests_.\n\nInstallation\n============\n``pip install rrtools`` should work for most users.\n\nThe usual setup.py for Python_ libraries are used for the source distribution.\nBut OpenCV must be installed separately usually compiled from source. However\nRRtoolbox has a mock module for cv2 called cv2_mock to let the user use the\nfunctions that do not need OpenCV. Notice that this imports RRtoolbox.cv2_mock\nas cv2.\n\nTo install OpenCV without much hassle I recommend installing the binaries from\nthe `Unofficial Windows Binaries for Python`_ and for Debian distributions I\nprovide the bash `OpenCV linux installation`_ so that the user can compile\nopenCV (it can take some time). Bear in mind that for Linux it downloads the\nlatest 2.9 version instead of the new OpenCV version 3 because it does not\nconsent to using non-free sources. So you must accept the terms for OpenCV 2.9.\n\nOnce rrtools is successfully installed you can import the toolbox in python as:\n\n    >>>> import RRtoolbox as rr\n\nReleases\n========\n\nAll releases follow semantic rules proposed in https://www.python.org/dev/peps/pep-0440/ \nand http://semver.org/\n\nTo create executable from source code::\n\n    $ pyinstaller -p ./ -n imrestore -F ./imrestore.py/ --version-file=version\n\n\nTesting and application\n=======================\n\nTo test imrestore script::\n\n    $ python imrestore.py tests/im1*\n\nTo test imrestore executable::\n\n    $./dist/imrestore tests/im1*\n\nTo test imrestore executable if in dist folder::\n\n    $ ./imrestore ../tests/im1*\n\nA basic usage would be typing ``./imrestore tests/im1* --lens`` in the terminal which species\nto imrestore to load from the test path images that start with im1 specified by the wildcard\n'*' and the option ``--lens`` adds, as its name implies, lens to the retinal area.\n\n* So, it loads this image which presents some flares and noise:\n\n.. figure:: https://github.com/davtoh/RRtools/blob/master/tests/im1_1.jpg\n    :align: center\n    :scale: 10%\n\n    Retina photo 1\n\n* The second image is from a different perspective of the same retinal area but has information \n  that the other does not have:\n\n.. figure:: https://github.com/davtoh/RRtools/blob/master/tests/im1_2.jpg\n    :align: center\n    :scale: 10%\n\n    Retina photo 2\n\n* And Voil\u00e0 they are merged into one! notice how the flares tend to disappear and the lens were \n  added too! Because it is in development it still is not that pretty...\n\n.. figure:: https://github.com/davtoh/RRtools/blob/master/tests/_restored_im1_1.jpg\n    :align: center\n    :scale: 10%\n\n    Rethina photo result\n\n\nUsage\n=====\n\nFor help just type in ``./imrestore --help``, it could not be easier than that! but a demo_\nis available using the jupyter notebook to generate the desired commands to learn or use\nin the console while still running the program.\n\n- Contributions and bug reports are appreciated.\n- author: David Toro\n- e-mail: davsamirtor@gmail.com\n- project: https://github.com/davtoh/RRtools\n\n.. _`documentation/index.rst`: https://github.com/davtoh/RRtools/blob/master/documentation/index.rst\n.. _examples: https://github.com/davtoh/RRtools/tree/master/examples\n.. _tests: https://github.com/davtoh/RRtools/tree/master/tests\n.. _Python: http://python.org/\n.. _Sphinx: http://sphinx-doc.org/\n.. _pyinstaller: http://www.pyinstaller.org/\n.. |build-status| image:: https://travis-ci.org/pyserial/pyserial.svg?branch=master\n   :target: https://github.com/davtoh/RRtools/releases\n   :alt: Build status\n.. |docs| image:: https://readthedocs.org/projects/pyserial/badge/?version=latest\n   :target: http://rrtools.readthedocs.io/\n   :alt: Documentation\n.. _manual: https://github.com/davtoh/RRtools/blob/master/documentation/_build/latex/RRtoolbox.pdf\n.. _dissertation:\n.. _demo: https://github.com/davtoh/RRtools/blob/master/ImRestore_demo.ipynb\n.. _`Unofficial Windows Binaries for Python`: http://www.lfd.uci.edu/~gohlke/pythonlibs/\n.. _`OpenCV linux installation`: https://github.com/davtoh/RRtools/blob/master/install_opencv.sh", "description_content_type": null, "docs_url": "https://pythonhosted.org/rrtools/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davtoh/RRtools", "keywords": "sample setuptools development", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "rrtools", "package_url": "https://pypi.org/project/rrtools/", "platform": "any", "project_url": "https://pypi.org/project/rrtools/", "project_urls": {"Homepage": "https://github.com/davtoh/RRtools"}, "release_url": "https://pypi.org/project/rrtools/1.1.0a1.post1/", "requires_dist": ["appdirs (>=1.4)", "dill (>=0.2)", "future (>=0.16)", "joblib (>=0.8)", "matplotlib (>=1.4)", "numpy (>=1.9)", "packaging (>=16.8)", "pycallgraph (>=1)", "pyperclip (>=1.5)", "pyqtgraph (>=0.9)", "sympy (>=1)"], "requires_python": "", "summary": "Raster Restoration tools", "version": "1.1.0a1.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>This module encapsulates algorithms for the restoration of images and it is\nspecialized in retinal images.</p>\n<p>RRtoolbox is a python package which contains source code designed to process images built\nmainly using OpenCV.</p>\n<p>RRtoolFC is a development tool using sequential function charts (FC stands for Function Chart)</p>\n<p>Imrestore is an application to restore images in general but in this case is configured to\nrestore retinal images. Because it is still in development it is the alpha program for testing\nand to let the users find out about its utilities. Do not hesitate to share it to the world,\nlet everyone know how awesome it is!! (be warned that it is for research purposes)</p>\n<p>Stable:</p>\n<blockquote>\n<ul>\n<li>Documentation: <a href=\"http://pythonhosted.org/rrtools\" rel=\"nofollow\">http://pythonhosted.org/rrtools</a></li>\n<li>Download Page: <a href=\"https://pypi.python.org/pypi/rrtoolbox\" rel=\"nofollow\">https://pypi.python.org/pypi/rrtoolbox</a></li>\n</ul>\n</blockquote>\n<p>Latest:</p>\n<blockquote>\n<ul>\n<li>Documentation: <a href=\"http://rrtools.readthedocs.io/\" rel=\"nofollow\">http://rrtools.readthedocs.io/</a></li>\n<li>Project Homepage: <a href=\"https://github.com/davtoh/RRtools\" rel=\"nofollow\">https://github.com/davtoh/RRtools</a></li>\n</ul>\n</blockquote>\n<p>BSD license, (C) 2015-2017 David Toro &lt;<a href=\"mailto:davsamirtor%40gmail.com\">davsamirtor<span>@</span>gmail<span>.</span>com</a>&gt;</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For API documentation, usage and examples see files in the \u201cdocumentation\u201d\ndirectory.  The \u201c.rst\u201d files can be read in any text editor or being converted to\nHTML or PDF using <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a>. A HTML version is online at\n<a href=\"http://rrtools.readthedocs.io/en/latest/\" rel=\"nofollow\">http://rrtools.readthedocs.io/en/latest/</a></p>\n<p>Read RRtoolbox (Retinal Restauration Toolbox) <a href=\"https://github.com/davtoh/RRtools/blob/master/documentation/_build/latex/RRtoolbox.pdf\" rel=\"nofollow\">manual</a> or the <a href=\"https://github.com/davtoh/RRtools/blob/master/ImRestore_demo.ipynb\" rel=\"nofollow\">dissertation</a>\nwhich made this project possible with all the concepts.</p>\n<p>Examples are found in the directory <a href=\"https://github.com/davtoh/RRtools/tree/master/examples\" rel=\"nofollow\">examples</a> and unit tests in <a href=\"https://github.com/davtoh/RRtools/tree/master/tests\" rel=\"nofollow\">tests</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install rrtools</tt> should work for most users.</p>\n<p>The usual setup.py for <a href=\"http://python.org/\" rel=\"nofollow\">Python</a> libraries are used for the source distribution.\nBut OpenCV must be installed separately usually compiled from source. However\nRRtoolbox has a mock module for cv2 called cv2_mock to let the user use the\nfunctions that do not need OpenCV. Notice that this imports RRtoolbox.cv2_mock\nas cv2.</p>\n<p>To install OpenCV without much hassle I recommend installing the binaries from\nthe <a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\" rel=\"nofollow\">Unofficial Windows Binaries for Python</a> and for Debian distributions I\nprovide the bash <a href=\"https://github.com/davtoh/RRtools/blob/master/install_opencv.sh\" rel=\"nofollow\">OpenCV linux installation</a> so that the user can compile\nopenCV (it can take some time). Bear in mind that for Linux it downloads the\nlatest 2.9 version instead of the new OpenCV version 3 because it does not\nconsent to using non-free sources. So you must accept the terms for OpenCV 2.9.</p>\n<p>Once rrtools is successfully installed you can import the toolbox in python as:</p>\n<blockquote>\n&gt;&gt;&gt;&gt; import RRtoolbox as rr</blockquote>\n</div>\n<div id=\"releases\">\n<h2>Releases</h2>\n<p>All releases follow semantic rules proposed in <a href=\"https://www.python.org/dev/peps/pep-0440/\" rel=\"nofollow\">https://www.python.org/dev/peps/pep-0440/</a>\nand <a href=\"http://semver.org/\" rel=\"nofollow\">http://semver.org/</a></p>\n<p>To create executable from source code:</p>\n<pre>$ pyinstaller -p ./ -n imrestore -F ./imrestore.py/ --version-file=version\n</pre>\n</div>\n<div id=\"testing-and-application\">\n<h2>Testing and application</h2>\n<p>To test imrestore script:</p>\n<pre>$ python imrestore.py tests/im1*\n</pre>\n<p>To test imrestore executable:</p>\n<pre>$./dist/imrestore tests/im1*\n</pre>\n<p>To test imrestore executable if in dist folder:</p>\n<pre>$ ./imrestore ../tests/im1*\n</pre>\n<p>A basic usage would be typing <tt>./imrestore tests/im1* <span class=\"pre\">--lens</span></tt> in the terminal which species\nto imrestore to load from the test path images that start with im1 specified by the wildcard\n\u2018*\u2019 and the option <tt><span class=\"pre\">--lens</span></tt> adds, as its name implies, lens to the retinal area.</p>\n<ul>\n<li>So, it loads this image which presents some flares and noise:</li>\n</ul>\n<div>\n<img alt=\"https://github.com/davtoh/RRtools/blob/master/tests/im1_1.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b6259e182dc50c21fed7264be888e6462e2e9f7/68747470733a2f2f6769746875622e636f6d2f646176746f682f5252746f6f6c732f626c6f622f6d61737465722f74657374732f696d315f312e6a7067\">\n<p>Retina photo 1</p>\n</div>\n<ul>\n<li>The second image is from a different perspective of the same retinal area but has information\nthat the other does not have:</li>\n</ul>\n<div>\n<img alt=\"https://github.com/davtoh/RRtools/blob/master/tests/im1_2.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed8648cdb87443cc73b707a5e0c2a9b6f6c44c56/68747470733a2f2f6769746875622e636f6d2f646176746f682f5252746f6f6c732f626c6f622f6d61737465722f74657374732f696d315f322e6a7067\">\n<p>Retina photo 2</p>\n</div>\n<ul>\n<li>And Voil\u00e0 they are merged into one! notice how the flares tend to disappear and the lens were\nadded too! Because it is in development it still is not that pretty\u2026</li>\n</ul>\n<div>\n<img alt=\"https://github.com/davtoh/RRtools/blob/master/tests/_restored_im1_1.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0af59504591409070f88cf542707ac99be5c071f/68747470733a2f2f6769746875622e636f6d2f646176746f682f5252746f6f6c732f626c6f622f6d61737465722f74657374732f5f726573746f7265645f696d315f312e6a7067\">\n<p>Rethina photo result</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For help just type in <tt>./imrestore <span class=\"pre\">--help</span></tt>, it could not be easier than that! but a <a href=\"https://github.com/davtoh/RRtools/blob/master/ImRestore_demo.ipynb\" rel=\"nofollow\">demo</a>\nis available using the jupyter notebook to generate the desired commands to learn or use\nin the console while still running the program.</p>\n<ul>\n<li>Contributions and bug reports are appreciated.</li>\n<li>author: David Toro</li>\n<li>e-mail: <a href=\"mailto:davsamirtor%40gmail.com\">davsamirtor<span>@</span>gmail<span>.</span>com</a></li>\n<li>project: <a href=\"https://github.com/davtoh/RRtools\" rel=\"nofollow\">https://github.com/davtoh/RRtools</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2686675, "releases": {"1.0.0a2": [{"comment_text": "", "digests": {"md5": "5c6a6070796a5071699673a429b26038", "sha256": "47de39da4daa2735001595ff43de2c11d5157728acf0b553799e1e14eff8fe97"}, "downloads": -1, "filename": "rrtools-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "5c6a6070796a5071699673a429b26038", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30878368, "upload_time": "2017-03-04T00:36:18", "upload_time_iso_8601": "2017-03-04T00:36:18.284496Z", "url": "https://files.pythonhosted.org/packages/6f/de/7b396d1e379850d603123e33cf512185b0bb892d8fc84315d85bce643061/rrtools-1.0.0a2.tar.gz", "yanked": false}], "1.0.0a2.post3": [{"comment_text": "", "digests": {"md5": "b75dd296db1b70fc35e8e26f703c0260", "sha256": "8fac0d9a881ed52ac8644a9f701cd889d7dc8d02c78606b08400b84029678b18"}, "downloads": -1, "filename": "rrtools-1.0.0a2.post3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b75dd296db1b70fc35e8e26f703c0260", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 131015, "upload_time": "2017-03-04T18:48:37", "upload_time_iso_8601": "2017-03-04T18:48:37.809564Z", "url": "https://files.pythonhosted.org/packages/04/7b/67a973654af29a0de0ca20650bd14b8fd6b07e5998ef73dc20f1bde0feae/rrtools-1.0.0a2.post3-py2.py3-none-any.whl", "yanked": false}], "1.1.0a1": [{"comment_text": "", "digests": {"md5": "cfff9a2d7ddd8d0c0fed31dc194b707e", "sha256": "8a42897ba26443d862b58ae8df3144e0aef7855b04959402685b001c8bd4be2f"}, "downloads": -1, "filename": "rrtools-1.1.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cfff9a2d7ddd8d0c0fed31dc194b707e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 181523, "upload_time": "2017-03-06T17:32:11", "upload_time_iso_8601": "2017-03-06T17:32:11.507415Z", "url": "https://files.pythonhosted.org/packages/95/4f/150ffd5ee6ea68c0abe4fe6f3c7192fdb95f63868139f775bafd535024e2/rrtools-1.1.0a1-py2.py3-none-any.whl", "yanked": false}], "1.1.0a1.post1": [{"comment_text": "", "digests": {"md5": "575178fa33374de7094b420e74db20c5", "sha256": "b5799ae834ce20bab4c2624c11b212ac37b64001b25b2d8fd9c7ac6c6eb3be9e"}, "downloads": -1, "filename": "rrtools-1.1.0a1.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "575178fa33374de7094b420e74db20c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 182357, "upload_time": "2017-03-06T18:28:44", "upload_time_iso_8601": "2017-03-06T18:28:44.893757Z", "url": "https://files.pythonhosted.org/packages/78/f7/3db1e7056b7bdc7ba17b916fbbc873afed446bc448b3e289728051e9739b/rrtools-1.1.0a1.post1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "575178fa33374de7094b420e74db20c5", "sha256": "b5799ae834ce20bab4c2624c11b212ac37b64001b25b2d8fd9c7ac6c6eb3be9e"}, "downloads": -1, "filename": "rrtools-1.1.0a1.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "575178fa33374de7094b420e74db20c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 182357, "upload_time": "2017-03-06T18:28:44", "upload_time_iso_8601": "2017-03-06T18:28:44.893757Z", "url": "https://files.pythonhosted.org/packages/78/f7/3db1e7056b7bdc7ba17b916fbbc873afed446bc448b3e289728051e9739b/rrtools-1.1.0a1.post1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:45 2020"}