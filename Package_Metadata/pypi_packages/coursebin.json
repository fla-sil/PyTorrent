{"info": {"author": "Elias Berkowitz", "author_email": "eliberkowitz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "List of built-in binaries:\n\n::\n\n    1. `newsemester <semester-number>`\n    2. `newcourse \"[<course-name>]\"`\n    3. `removecourse`\n    4. `newnotes`\n    5. `classcompile`\n    6. `coursecomplete`\n    7. `semestercomplete`\n    8. `printgrades`\n\nThe first time you run a command after ``coursemanager`` installation,\nyou will be prompted to setup your college directory (where all notes,\ncourse directories, and grade files will be stored).\n\n1. ``newsemester <semester-number>``\n\n-  Creates the directory 'Semester ' within your college directory.\n-  Prompts for courses being taken in the new semester. Creates a course\n   directory for each course with a 'Notes' subdirectory in each course\n   directory.\n\n2. ``newcourse \"[<course-name>]\"``\n\n-  Creates a new course with name []. Defaults to the latest semester\n   (highest semester number).\n-  To change the default semester directory, run the following code in\n   python: from course\\_manager import config\\_path print config\\_path\n\nNavigate to the JSON file printed out and change the defalt\\_directory\nvariable to match what you want the current semester to be.\n\n3. ``removecourse``\n\n-  Removes a given course without recording a grade. Gives the option to\n   completely remove the course directory or to archive it to a ZIP\n   file.\n-  Options for courses to remove are based on the default semester (see\n   (2.) for more).\n\n4. ``newnotes``\n\n-  Adds new notes to a given course. If cwd is within a given course\n   directory, the notes will be created for that course. Otherwise,\n   options for courses are based on the default semester (see (2.) for\n   more).\n\n-  By default, ``newnotes`` will create a new .tex file named the\n   current date. The .tex file will contain the necessary components to\n   be recognized as a\n   ```subfile`` <https://www.sharelatex.com/learn/Multi-file_LaTeX_projects>`__\n   of the main.tex file that is initially created within the course\n   directory.\n\n-  A line linking to the new notes file is added to the ``main.tex``\n   file.\n\n5. ``classcompile`` [config]\n\n-  Compiles the ``main.tex`` file for a given course. If cwd is within a\n   given course directory, the notes will be created for that course.\n   Otherwise, options for courses are based on the default semester (see\n   (2.) for more).\n\n-  If ``config`` is used within the command, all LaTeX extra files\n   (``main.log``, ``main.toc``, ``main.out``, and ``main.aux`` are NOT\n   deleted after compilation.)\n\n-  This command compiles the LaTeX twice (LaTeX compilation is a\n   two-pass process, originally to preserve memory. Running only once\n   will not always catch figure and citation references).\n\n6. ``coursecomplete``\n\n-  Archives a given course. Options for courses to remove are based on\n   the default semester (see (2.) for more).\n\n-  Prompts for the grade in that course and how many credits the course\n   was worth. Updates the ``grades.tsv`` file with the new grade.\n\n-  Currently, GPA calculations are based on Brown University grading\n   standards. These settings can be edited in the ``config.json`` file\n   (instructions on how to edit this file are under (2.).\n\n7. ``semestercomplete``\n\n-  Archives the default semester (see (2.) for more about the default\n   semester). Gives the option to keep or remove the default semester\n   directory in addition to archiving it.\n\n-  Runs ``coursecomplete`` on all courses for which grades have not yet\n   been inputted.\n\n-  Updates ``grades.tsv``.\n\n8. ``printgrades``\n\n-  Prints a formatted versions of ``grades.tsv`` to the terminal. (Uses\n   the python\n   ```tabulate`` <https://bitbucket.org/astanin/python-tabulate#rst-header-table-format>`__\n   package. You can edit the format of the output by running\n   ``which printgrades`` and editing the type of table printed. The\n   options can be found with the\n   ```tabulate`` <https://bitbucket.org/astanin/python-tabulate#rst-header-table-format>`__\n   documentation.).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/berkowitze/coursebin", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "coursebin", "package_url": "https://pypi.org/project/coursebin/", "platform": "any", "project_url": "https://pypi.org/project/coursebin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/berkowitze/coursebin"}, "release_url": "https://pypi.org/project/coursebin/1.0.4/", "requires_dist": null, "requires_python": null, "summary": "Tools for undergraduate students to manage classes.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>List of built-in binaries:</p>\n<pre>1. `newsemester &lt;semester-number&gt;`\n2. `newcourse \"[&lt;course-name&gt;]\"`\n3. `removecourse`\n4. `newnotes`\n5. `classcompile`\n6. `coursecomplete`\n7. `semestercomplete`\n8. `printgrades`\n</pre>\n<p>The first time you run a command after <tt>coursemanager</tt> installation,\nyou will be prompted to setup your college directory (where all notes,\ncourse directories, and grade files will be stored).</p>\n<ol>\n<li><tt>newsemester <span class=\"pre\">&lt;semester-number&gt;</span></tt></li>\n</ol>\n<ul>\n<li>Creates the directory \u2018Semester \u2018 within your college directory.</li>\n<li>Prompts for courses being taken in the new semester. Creates a course\ndirectory for each course with a \u2018Notes\u2019 subdirectory in each course\ndirectory.</li>\n</ul>\n<ol>\n<li><tt>newcourse <span class=\"pre\">\"[&lt;course-name&gt;]\"</span></tt></li>\n</ol>\n<ul>\n<li>Creates a new course with name []. Defaults to the latest semester\n(highest semester number).</li>\n<li>To change the default semester directory, run the following code in\npython: from course_manager import config_path print config_path</li>\n</ul>\n<p>Navigate to the JSON file printed out and change the defalt_directory\nvariable to match what you want the current semester to be.</p>\n<ol>\n<li><tt>removecourse</tt></li>\n</ol>\n<ul>\n<li>Removes a given course without recording a grade. Gives the option to\ncompletely remove the course directory or to archive it to a ZIP\nfile.</li>\n<li>Options for courses to remove are based on the default semester (see\n(2.) for more).</li>\n</ul>\n<ol>\n<li><tt>newnotes</tt></li>\n</ol>\n<ul>\n<li>Adds new notes to a given course. If cwd is within a given course\ndirectory, the notes will be created for that course. Otherwise,\noptions for courses are based on the default semester (see (2.) for\nmore).</li>\n<li>By default, <tt>newnotes</tt> will create a new .tex file named the\ncurrent date. The .tex file will contain the necessary components to\nbe recognized as a\n<tt>`subfile</tt> &lt;<a href=\"https://www.sharelatex.com/learn/Multi-file_LaTeX_projects\" rel=\"nofollow\">https://www.sharelatex.com/learn/Multi-file_LaTeX_projects</a>&gt;`__\nof the main.tex file that is initially created within the course\ndirectory.</li>\n<li>A line linking to the new notes file is added to the <tt>main.tex</tt>\nfile.</li>\n</ul>\n<ol>\n<li><tt>classcompile</tt> [config]</li>\n</ol>\n<ul>\n<li>Compiles the <tt>main.tex</tt> file for a given course. If cwd is within a\ngiven course directory, the notes will be created for that course.\nOtherwise, options for courses are based on the default semester (see\n(2.) for more).</li>\n<li>If <tt>config</tt> is used within the command, all LaTeX extra files\n(<tt>main.log</tt>, <tt>main.toc</tt>, <tt>main.out</tt>, and <tt>main.aux</tt> are NOT\ndeleted after compilation.)</li>\n<li>This command compiles the LaTeX twice (LaTeX compilation is a\ntwo-pass process, originally to preserve memory. Running only once\nwill not always catch figure and citation references).</li>\n</ul>\n<ol>\n<li><tt>coursecomplete</tt></li>\n</ol>\n<ul>\n<li>Archives a given course. Options for courses to remove are based on\nthe default semester (see (2.) for more).</li>\n<li>Prompts for the grade in that course and how many credits the course\nwas worth. Updates the <tt>grades.tsv</tt> file with the new grade.</li>\n<li>Currently, GPA calculations are based on Brown University grading\nstandards. These settings can be edited in the <tt>config.json</tt> file\n(instructions on how to edit this file are under (2.).</li>\n</ul>\n<ol>\n<li><tt>semestercomplete</tt></li>\n</ol>\n<ul>\n<li>Archives the default semester (see (2.) for more about the default\nsemester). Gives the option to keep or remove the default semester\ndirectory in addition to archiving it.</li>\n<li>Runs <tt>coursecomplete</tt> on all courses for which grades have not yet\nbeen inputted.</li>\n<li>Updates <tt>grades.tsv</tt>.</li>\n</ul>\n<ol>\n<li><tt>printgrades</tt></li>\n</ol>\n<ul>\n<li>Prints a formatted versions of <tt>grades.tsv</tt> to the terminal. (Uses\nthe python\n<tt>`tabulate</tt> &lt;<a href=\"https://bitbucket.org/astanin/python-tabulate#rst-header-table-format\" rel=\"nofollow\">https://bitbucket.org/astanin/python-tabulate#rst-header-table-format</a>&gt;`__\npackage. You can edit the format of the output by running\n<tt>which printgrades</tt> and editing the type of table printed. The\noptions can be found with the\n<tt>`tabulate</tt> &lt;<a href=\"https://bitbucket.org/astanin/python-tabulate#rst-header-table-format\" rel=\"nofollow\">https://bitbucket.org/astanin/python-tabulate#rst-header-table-format</a>&gt;`__\ndocumentation.).</li>\n</ul>\n\n          </div>"}, "last_serial": 2583557, "releases": {"1.0.3": [], "1.0.4": [{"comment_text": "", "digests": {"md5": "a83cd30bb79b82cfbb2c5e3718487d65", "sha256": "a54f9ca0d5ce7c07647a393c00fc522fb5e963e4340f231263be675002ac444f"}, "downloads": -1, "filename": "coursebin-1.0.4.tar.gz", "has_sig": false, "md5_digest": "a83cd30bb79b82cfbb2c5e3718487d65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12857, "upload_time": "2017-01-18T22:18:21", "upload_time_iso_8601": "2017-01-18T22:18:21.894645Z", "url": "https://files.pythonhosted.org/packages/fa/c4/3faedfa58c47205e6aa1c1ce796c2863b423aa6d35fc8cb76b328599ef0f/coursebin-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a83cd30bb79b82cfbb2c5e3718487d65", "sha256": "a54f9ca0d5ce7c07647a393c00fc522fb5e963e4340f231263be675002ac444f"}, "downloads": -1, "filename": "coursebin-1.0.4.tar.gz", "has_sig": false, "md5_digest": "a83cd30bb79b82cfbb2c5e3718487d65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12857, "upload_time": "2017-01-18T22:18:21", "upload_time_iso_8601": "2017-01-18T22:18:21.894645Z", "url": "https://files.pythonhosted.org/packages/fa/c4/3faedfa58c47205e6aa1c1ce796c2863b423aa6d35fc8cb76b328599ef0f/coursebin-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:51 2020"}