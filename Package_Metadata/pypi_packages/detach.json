{"info": {"author": "Ryan Bourgeois", "author_email": "bluedragonx@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "Detach\n======\nFork and detach the current process.\n\n[![Build Status](https://travis-ci.org/BlueDragonX/detach.svg)](https://travis-ci.org/BlueDragonX/detach)\n\nUsage\n-----\nThe `detach` package contains a context manager called `Detach`. It is used\nwith with `with` statement to fork the current process and execute code in that\nprocess. The child process exits when the context manager exits. The following\nparameters may be passed to `Detach` to change its behavior:\n\n* `stdout` - Redirect child stdout to this stream.\n* `stderr` - Redirect child stderr to this stream.\n* `stdin` - Redirect his stream to child stdin.\n* `close_fds` - Close all file descriptors in the child excluding stdio.\n* `exclude_fds` - Do not close these file descriptors if close_fds is `True`.\n* `daemonize` - Exit the parent process when the context manager exits.\n\nExamples\n--------\n### Simple Fork with STDOUT\n\n    import detach, os, sys\n\n    with detach.Detach(sys.stdout) as d:\n        if d.pid:\n            print(\"forked child with pid {}\".format(d.pid))\n        else:\n            print(\"hello from child process {}\".format(os.getpid()))\n\n### Daemonize \n\n    import detach\n    from your_app import main\n\n    def main():\n        \"\"\"Your daemon code here.\"\"\"\n\n    with detach.Detach(daemonize=True) as d:\n        if d.pid:\n            print(\"started process {} in background\".format(pid))\n        else:\n            main()\n\n### Call External Command\n\n    import detach, sys\n    pid = detach.call(['bash', '-c', 'echo \"my pid is $$\"'], stdout=sys.stdout)\n    print(\"running external command {}\".format(pid)) \n    \n\nLicense\n-------\nCopyright (c) 2014 Ryan Bourgeois. This project and all of its contents is\nlicensed under the BSD-derived license as found in the included [LICENSE][1]\nfile.\n\n[1]: https://github.com/bluedragonx/detach/blob/master/LICENSE \"LICENSE\"", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bluedragonx/detach", "keywords": "fork daemon detach", "license": "BSD-derived", "maintainer": null, "maintainer_email": null, "name": "detach", "package_url": "https://pypi.org/project/detach/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/detach/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bluedragonx/detach"}, "release_url": "https://pypi.org/project/detach/1.0/", "requires_dist": null, "requires_python": null, "summary": "Fork and detach the current processe.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Fork and detach the current process.</p>\n<p>[![Build Status](<a href=\"https://travis-ci.org/BlueDragonX/detach.svg)%5D(https://travis-ci.org/BlueDragonX/detach\" rel=\"nofollow\">https://travis-ci.org/BlueDragonX/detach.svg)](https://travis-ci.org/BlueDragonX/detach</a>)</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The <cite>detach</cite> package contains a context manager called <cite>Detach</cite>. It is used\nwith with <cite>with</cite> statement to fork the current process and execute code in that\nprocess. The child process exits when the context manager exits. The following\nparameters may be passed to <cite>Detach</cite> to change its behavior:</p>\n<ul>\n<li><cite>stdout</cite> - Redirect child stdout to this stream.</li>\n<li><cite>stderr</cite> - Redirect child stderr to this stream.</li>\n<li><cite>stdin</cite> - Redirect his stream to child stdin.</li>\n<li><cite>close_fds</cite> - Close all file descriptors in the child excluding stdio.</li>\n<li><cite>exclude_fds</cite> - Do not close these file descriptors if close_fds is <cite>True</cite>.</li>\n<li><cite>daemonize</cite> - Exit the parent process when the context manager exits.</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>### Simple Fork with STDOUT</p>\n<blockquote>\n<p>import detach, os, sys</p>\n<dl>\n<dt>with detach.Detach(sys.stdout) as d:</dt>\n<dd><dl>\n<dt>if d.pid:</dt>\n<dd>print(\u201cforked child with pid {}\u201d.format(d.pid))</dd>\n<dt>else:</dt>\n<dd>print(\u201chello from child process {}\u201d.format(os.getpid()))</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>### Daemonize</p>\n<blockquote>\n<p>import detach\nfrom your_app import main</p>\n<dl>\n<dt>def main():</dt>\n<dd>\u201c\u201d\u201dYour daemon code here.\u201d\u201d\u201d</dd>\n<dt>with detach.Detach(daemonize=True) as d:</dt>\n<dd><dl>\n<dt>if d.pid:</dt>\n<dd>print(\u201cstarted process {} in background\u201d.format(pid))</dd>\n<dt>else:</dt>\n<dd>main()</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>### Call External Command</p>\n<blockquote>\nimport detach, sys\npid = detach.call([\u2018bash\u2019, \u2018-c\u2019, \u2018echo \u201cmy pid is $$\u201d\u2019], stdout=sys.stdout)\nprint(\u201crunning external command {}\u201d.format(pid))</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2014 Ryan Bourgeois. This project and all of its contents is\nlicensed under the BSD-derived license as found in the included [LICENSE][1]\nfile.</p>\n<p>[1]: <a href=\"https://github.com/bluedragonx/detach/blob/master/LICENSE\" rel=\"nofollow\">https://github.com/bluedragonx/detach/blob/master/LICENSE</a> \u201cLICENSE\u201d</p>\n</div>\n\n          </div>"}, "last_serial": 1141018, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2595cd23c0a99a528b4df956b2625653", "sha256": "7c2b67348bcd2b89c2391c2e8ca0bdf1966ea50358a01063daf3f6ae30b00d42"}, "downloads": -1, "filename": "detach-0.1.tar.gz", "has_sig": false, "md5_digest": "2595cd23c0a99a528b4df956b2625653", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2922, "upload_time": "2014-06-28T06:48:56", "upload_time_iso_8601": "2014-06-28T06:48:56.921390Z", "url": "https://files.pythonhosted.org/packages/26/46/9ea500494644cc5d6309e81b1755e92f86e18e5542b684e0093b860ede5b/detach-0.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "321bb1b6e8581a99689ee09bf88401cf", "sha256": "95b7164735506b9f12181c717d74289cea7f300cb5e1ec1970a3f9f45860683f"}, "downloads": -1, "filename": "detach-1.0.tar.gz", "has_sig": false, "md5_digest": "321bb1b6e8581a99689ee09bf88401cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3365, "upload_time": "2014-06-28T23:48:00", "upload_time_iso_8601": "2014-06-28T23:48:00.199573Z", "url": "https://files.pythonhosted.org/packages/83/4c/6028198445fe35f6ba7a12bca5ec19d8273d2b259b50e8ea0564348a13c2/detach-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "321bb1b6e8581a99689ee09bf88401cf", "sha256": "95b7164735506b9f12181c717d74289cea7f300cb5e1ec1970a3f9f45860683f"}, "downloads": -1, "filename": "detach-1.0.tar.gz", "has_sig": false, "md5_digest": "321bb1b6e8581a99689ee09bf88401cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3365, "upload_time": "2014-06-28T23:48:00", "upload_time_iso_8601": "2014-06-28T23:48:00.199573Z", "url": "https://files.pythonhosted.org/packages/83/4c/6028198445fe35f6ba7a12bca5ec19d8273d2b259b50e8ea0564348a13c2/detach-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:56 2020"}