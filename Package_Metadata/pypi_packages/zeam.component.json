{"info": {"author": "Sylvain Viollon", "author_email": "thefunny@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============\nzeam.component\n==============\n\n``zeam.component`` is inspired by ``zope.component`` and\n``grokcore.component``, but stays much simpler, and have less\nbase concepts. Hopefully this improve flexibility.\n\nRegistration\n------------\n\nA base class can be used to register a component,\n``zeam.component.Component``. It supports all the directives\n``grok.context``, ``grok.adapts``, ``grok.provides`` and ``grok.name``\nlike they are defined in Grok. You can use those to register your\ncomponent as either an Utility, an (named) Adapter or a (named)\nMultiAdapter.\n\nAn another possibility to register a component is to use the\n``component`` decorator, ``zeam.component.component``. It takes as\narguments the interfaces that the component adapts, and as keyword\narguments, ``provides`` the `Interface` that the component provides,\nand as ``name`` the name under which it will be registered.\n\nLookup\n------\n\nYou can lookup a specific registered component with\n``zeam.component.getComponent``. You can optionally provide:\n\n- ``specs``: a tuple of objects or specifications that the component\n  must adapt in order to be returned.\n\n- ``provided``: an `Interface` that the component must provides in\n  order to be returned.\n\n- ``name``: a name under which the component must be registered in\n  order to be returned.\n\n- ``default``: a default value that will be returned if no component\n  match the requirements. If you no default value is provided, and no\n  component is found, an exception will be triggered.\n\n\nYou can lookup a list of possible registered component with\n``zeam.component.getAllComponents``. You can optionally provide:\n\n- ``specs``: tuple of objects or specification stat the component must\n  adapt in order to be returned.\n\n- ``provided``: an `Interface` that the component must provides in\n  order to be returned.\n\n\nPlease note that in both cases the component is directly returned. In\nany case, no construction is done with the result of the lookup.\n\nAn helper ``zeam.component.getWrapper`` that support the same options\nthan the ``zeam.component.getComponent`` function will call the result\nof the lookup passing as argument the values given as ``specs`` to\nit. This is used in order to have a `getAdapter` or `queryAdapter`\nlike behavior. Please note that if an error happens during the\ninitialization of the component, the error won't be catched for you.\n\nChanges\n=======\n\n1.0 (2012/09/03)\n----------------\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/zeam.component", "keywords": "component interface", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "zeam.component", "package_url": "https://pypi.org/project/zeam.component/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zeam.component/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/zeam.component"}, "release_url": "https://pypi.org/project/zeam.component/1.0/", "requires_dist": null, "requires_python": null, "summary": "Component infrastructure, based on zope.interface", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>zeam.component</tt> is inspired by <tt>zope.component</tt> and\n<tt>grokcore.component</tt>, but stays much simpler, and have less\nbase concepts. Hopefully this improve flexibility.</p>\n<div id=\"registration\">\n<h2>Registration</h2>\n<p>A base class can be used to register a component,\n<tt>zeam.component.Component</tt>. It supports all the directives\n<tt>grok.context</tt>, <tt>grok.adapts</tt>, <tt>grok.provides</tt> and <tt>grok.name</tt>\nlike they are defined in Grok. You can use those to register your\ncomponent as either an Utility, an (named) Adapter or a (named)\nMultiAdapter.</p>\n<p>An another possibility to register a component is to use the\n<tt>component</tt> decorator, <tt>zeam.component.component</tt>. It takes as\narguments the interfaces that the component adapts, and as keyword\narguments, <tt>provides</tt> the <cite>Interface</cite> that the component provides,\nand as <tt>name</tt> the name under which it will be registered.</p>\n</div>\n<div id=\"lookup\">\n<h2>Lookup</h2>\n<p>You can lookup a specific registered component with\n<tt>zeam.component.getComponent</tt>. You can optionally provide:</p>\n<ul>\n<li><tt>specs</tt>: a tuple of objects or specifications that the component\nmust adapt in order to be returned.</li>\n<li><tt>provided</tt>: an <cite>Interface</cite> that the component must provides in\norder to be returned.</li>\n<li><tt>name</tt>: a name under which the component must be registered in\norder to be returned.</li>\n<li><tt>default</tt>: a default value that will be returned if no component\nmatch the requirements. If you no default value is provided, and no\ncomponent is found, an exception will be triggered.</li>\n</ul>\n<p>You can lookup a list of possible registered component with\n<tt>zeam.component.getAllComponents</tt>. You can optionally provide:</p>\n<ul>\n<li><tt>specs</tt>: tuple of objects or specification stat the component must\nadapt in order to be returned.</li>\n<li><tt>provided</tt>: an <cite>Interface</cite> that the component must provides in\norder to be returned.</li>\n</ul>\n<p>Please note that in both cases the component is directly returned. In\nany case, no construction is done with the result of the lookup.</p>\n<p>An helper <tt>zeam.component.getWrapper</tt> that support the same options\nthan the <tt>zeam.component.getComponent</tt> function will call the result\nof the lookup passing as argument the values given as <tt>specs</tt> to\nit. This is used in order to have a <cite>getAdapter</cite> or <cite>queryAdapter</cite>\nlike behavior. Please note that if an error happens during the\ninitialization of the component, the error won\u2019t be catched for you.</p>\n<div id=\"changes\">\n<h3>Changes</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>1.0 (2012/09/03)</h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2973069, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b071706d5feeaf576e9c52e46141275c", "sha256": "3580593c782ba74fe5d90d1cd3f5c40c998bb45b849c1d4b58f5918dded3b833"}, "downloads": -1, "filename": "zeam.component-1.0.tar.gz", "has_sig": false, "md5_digest": "b071706d5feeaf576e9c52e46141275c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4373, "upload_time": "2012-09-04T08:54:00", "upload_time_iso_8601": "2012-09-04T08:54:00.833508Z", "url": "https://files.pythonhosted.org/packages/f3/5d/76217dfb9499fe2a4289f8df82af072d660e8cc7427d57bda703b06d3c73/zeam.component-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b071706d5feeaf576e9c52e46141275c", "sha256": "3580593c782ba74fe5d90d1cd3f5c40c998bb45b849c1d4b58f5918dded3b833"}, "downloads": -1, "filename": "zeam.component-1.0.tar.gz", "has_sig": false, "md5_digest": "b071706d5feeaf576e9c52e46141275c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4373, "upload_time": "2012-09-04T08:54:00", "upload_time_iso_8601": "2012-09-04T08:54:00.833508Z", "url": "https://files.pythonhosted.org/packages/f3/5d/76217dfb9499fe2a4289f8df82af072d660e8cc7427d57bda703b06d3c73/zeam.component-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:33 2020"}