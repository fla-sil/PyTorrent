{"info": {"author": "Nils Diefenbach", "author_email": "nlsdfnbch.foss@kolabnow.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![PyPI version](https://badge.fury.io/py/Pysher.svg)](https://badge.fury.io/py/Pysher)\n\nPysher\n=============\n\n`pysher` is a python module for handling pusher websockets. It is based on @ekulyk's `PythonPusherClient`. This fork is meant as \na continuation of the project and is actively maintained. A key difference is the dropped support for pre-3.5 Python versions.\n\nInstallation\n------------\n\nSimply run `python setup.py install` - or install via pip `pip install pysher`.\n\nThis module depends on websocket-client module available from: <http://github.com/websocket-client/websocket-client>\n\nExample\n-------\n\nExample of using this pusher client to consume websockets::\n\n```python\nimport pysher\n\n# Add a logging handler so we can see the raw communication data\nimport logging\nroot = logging.getLogger()\nroot.setLevel(logging.INFO)\nch = logging.StreamHandler(sys.stdout)\nroot.addHandler(ch)\n\npusher = pysher.Pusher(appkey)\n\ndef  my_func(*args, **kwargs):\n    print(\"processing Args:\", args)\n    print(\"processing Kwargs:\", kwargs)\n\n# We can't subscribe until we've connected, so we use a callback handler\n# to subscribe when able\ndef connect_handler(data):\n    channel = pusher.subscribe('mychannel')\n    channel.bind('myevent', my_func)\n\npusher.connection.bind('pusher:connection_established', connect_handler)\npusher.connect()\n\nwhile True:\n    # Do other things in the meantime here...\n    time.sleep(1)\n```\n\nSending pusher events to a channel can be done simply using the pusher client supplied by pusher.  You can get it here: <https://github.com/pusher/pusher-http-python>\n\n    import pusher\n    pusher.app_id = app_id\n    pusher.key = appkey\n\n    p = pusher.Pusher()\n    p['mychannel'].trigger('myevent', 'mydata')\n    \nPerformance\n------\nPysher relies on websocket-client (websocket-client on pyPI, websocket import in code), which by default does utf5 validation in pure python. This is somewhat cpu hungry for lot's of messages (100's of KB/s or more). To optimize this validation consider installing the wsaccel module from pyPI to let websocket-client use C-compiled utf5 validation methods (websocket does this automatically once wsaccel is present and importable).\n\nThanks\n------\nA big thanks to @ekulyk for developing the [PythonPusherClient](https://github.com/ekulyk/PythonPusherClient) library.\n\n\nCopyright\n---------\n\nMTI License - See LICENSE for details.\n\nChangelog\n---------\n## Version 1.0.2\n### Fixed\n - #38 Fix missing `\u1e81s` arg for websocket app callbacks, thanks to @[squgeim](https://github.com/squgeim)\n## Version 1.0.0\n### Updated\n- #35 Support websocket-client >0.48 only and fix reconnect error, thanks to @[agronholm](https://github.com/agronholm)\n\n**This change may break existing setups and is backwards-incompatible!**\n\n## Version 0.5.0\n### Added\n - #14 Added support for cluster configuration, thanks to @[Yvictor](https://github.com/Yvictor)\n\n### Fixed\n - #30 Require websocket-client version 0.48 or earlier.\n - #24 Signature generation now works as expected, thanks to @[agronholm](https://github.com/agronholm)\n - #31 Name threads of the pysher lib for better debugging, thanks to @[caliloo](https://github.com/caliloo)\n\n## Version 0.4.2\n### Fixed:\n - #11 Global Logger settings no longer overridden in Connection logger\n\n## Version 0.4.0\n### Added:\n - #8 Add support for WebSocket over HTTP proxy, thanks to @[1tgr](https://github.com/1tgr)\n\n## Version 0.3.0\n### Added:\n - #7 Auto-resubscribe to channels after reconnecting, thanks to @[pinealan](https://github.com/pinealan)\n\n### Fixed:\n- #4, #5 Updated references to the library name, thanks to @[deanmaniatis](https://github.com/deanmaniatis)\n\n## Version 0.2.0  \n### Added:\n- #2 Allow for token generated by auth endpoint, thanks to @[wardcraigj](https://github.com/wardcraigj)\n- #3 Allow instantiation with custom host, thanks to @[wardcraigj](https://github.com/wardcraigj)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/InscribeAI/Pysher", "keywords": "pusher websocket client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "inscribe-Pysher", "package_url": "https://pypi.org/project/inscribe-Pysher/", "platform": "", "project_url": "https://pypi.org/project/inscribe-Pysher/", "project_urls": {"Homepage": "https://github.com/InscribeAI/Pysher"}, "release_url": "https://pypi.org/project/inscribe-Pysher/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Pusher websocket client for python, based on Erik Kulyk's PythonPusherClient", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/Pysher\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/771548e98e48da4cdc00048d6d0ed5893950a5bd/68747470733a2f2f62616467652e667572792e696f2f70792f5079736865722e737667\"></a></p>\n<h1>Pysher</h1>\n<p><code>pysher</code> is a python module for handling pusher websockets. It is based on @ekulyk's <code>PythonPusherClient</code>. This fork is meant as\na continuation of the project and is actively maintained. A key difference is the dropped support for pre-3.5 Python versions.</p>\n<h2>Installation</h2>\n<p>Simply run <code>python setup.py install</code> - or install via pip <code>pip install pysher</code>.</p>\n<p>This module depends on websocket-client module available from: <a href=\"http://github.com/websocket-client/websocket-client\" rel=\"nofollow\">http://github.com/websocket-client/websocket-client</a></p>\n<h2>Example</h2>\n<p>Example of using this pusher client to consume websockets::</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pysher</span>\n\n<span class=\"c1\"># Add a logging handler so we can see the raw communication data</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">()</span>\n<span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n<span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n\n<span class=\"n\">pusher</span> <span class=\"o\">=</span> <span class=\"n\">pysher</span><span class=\"o\">.</span><span class=\"n\">Pusher</span><span class=\"p\">(</span><span class=\"n\">appkey</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span>  <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"processing Args:\"</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"processing Kwargs:\"</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We can't subscribe until we've connected, so we use a callback handler</span>\n<span class=\"c1\"># to subscribe when able</span>\n<span class=\"k\">def</span> <span class=\"nf\">connect_handler</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">pusher</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s1\">'mychannel'</span><span class=\"p\">)</span>\n    <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s1\">'myevent'</span><span class=\"p\">,</span> <span class=\"n\">my_func</span><span class=\"p\">)</span>\n\n<span class=\"n\">pusher</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s1\">'pusher:connection_established'</span><span class=\"p\">,</span> <span class=\"n\">connect_handler</span><span class=\"p\">)</span>\n<span class=\"n\">pusher</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do other things in the meantime here...</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Sending pusher events to a channel can be done simply using the pusher client supplied by pusher.  You can get it here: <a href=\"https://github.com/pusher/pusher-http-python\" rel=\"nofollow\">https://github.com/pusher/pusher-http-python</a></p>\n<pre><code>import pusher\npusher.app_id = app_id\npusher.key = appkey\n\np = pusher.Pusher()\np['mychannel'].trigger('myevent', 'mydata')\n</code></pre>\n<h2>Performance</h2>\n<p>Pysher relies on websocket-client (websocket-client on pyPI, websocket import in code), which by default does utf5 validation in pure python. This is somewhat cpu hungry for lot's of messages (100's of KB/s or more). To optimize this validation consider installing the wsaccel module from pyPI to let websocket-client use C-compiled utf5 validation methods (websocket does this automatically once wsaccel is present and importable).</p>\n<h2>Thanks</h2>\n<p>A big thanks to @ekulyk for developing the <a href=\"https://github.com/ekulyk/PythonPusherClient\" rel=\"nofollow\">PythonPusherClient</a> library.</p>\n<h2>Copyright</h2>\n<p>MTI License - See LICENSE for details.</p>\n<h2>Changelog</h2>\n<h2>Version 1.0.2</h2>\n<h3>Fixed</h3>\n<ul>\n<li>#38 Fix missing <code>\u1e81s</code> arg for websocket app callbacks, thanks to @<a href=\"https://github.com/squgeim\" rel=\"nofollow\">squgeim</a></li>\n</ul>\n<h2>Version 1.0.0</h2>\n<h3>Updated</h3>\n<ul>\n<li>#35 Support websocket-client &gt;0.48 only and fix reconnect error, thanks to @<a href=\"https://github.com/agronholm\" rel=\"nofollow\">agronholm</a></li>\n</ul>\n<p><strong>This change may break existing setups and is backwards-incompatible!</strong></p>\n<h2>Version 0.5.0</h2>\n<h3>Added</h3>\n<ul>\n<li>#14 Added support for cluster configuration, thanks to @<a href=\"https://github.com/Yvictor\" rel=\"nofollow\">Yvictor</a></li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>#30 Require websocket-client version 0.48 or earlier.</li>\n<li>#24 Signature generation now works as expected, thanks to @<a href=\"https://github.com/agronholm\" rel=\"nofollow\">agronholm</a></li>\n<li>#31 Name threads of the pysher lib for better debugging, thanks to @<a href=\"https://github.com/caliloo\" rel=\"nofollow\">caliloo</a></li>\n</ul>\n<h2>Version 0.4.2</h2>\n<h3>Fixed:</h3>\n<ul>\n<li>#11 Global Logger settings no longer overridden in Connection logger</li>\n</ul>\n<h2>Version 0.4.0</h2>\n<h3>Added:</h3>\n<ul>\n<li>#8 Add support for WebSocket over HTTP proxy, thanks to @<a href=\"https://github.com/1tgr\" rel=\"nofollow\">1tgr</a></li>\n</ul>\n<h2>Version 0.3.0</h2>\n<h3>Added:</h3>\n<ul>\n<li>#7 Auto-resubscribe to channels after reconnecting, thanks to @<a href=\"https://github.com/pinealan\" rel=\"nofollow\">pinealan</a></li>\n</ul>\n<h3>Fixed:</h3>\n<ul>\n<li>#4, #5 Updated references to the library name, thanks to @<a href=\"https://github.com/deanmaniatis\" rel=\"nofollow\">deanmaniatis</a></li>\n</ul>\n<h2>Version 0.2.0</h2>\n<h3>Added:</h3>\n<ul>\n<li>#2 Allow for token generated by auth endpoint, thanks to @<a href=\"https://github.com/wardcraigj\" rel=\"nofollow\">wardcraigj</a></li>\n<li>#3 Allow instantiation with custom host, thanks to @<a href=\"https://github.com/wardcraigj\" rel=\"nofollow\">wardcraigj</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5513038, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "c6ff8879dcd4096ab7306710f0c72fd9", "sha256": "7c49fd76e86289328d2345ed350d8d1eddd57ea7ed4d291f4e4201b8b11d79ef"}, "downloads": -1, "filename": "inscribe-Pysher-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c6ff8879dcd4096ab7306710f0c72fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8524, "upload_time": "2019-07-10T16:49:31", "upload_time_iso_8601": "2019-07-10T16:49:31.923745Z", "url": "https://files.pythonhosted.org/packages/10/b0/93d43c03a4250b2dc9e48fd89427bb084f612d7abc1624ce173e6d13cf89/inscribe-Pysher-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6ff8879dcd4096ab7306710f0c72fd9", "sha256": "7c49fd76e86289328d2345ed350d8d1eddd57ea7ed4d291f4e4201b8b11d79ef"}, "downloads": -1, "filename": "inscribe-Pysher-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c6ff8879dcd4096ab7306710f0c72fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8524, "upload_time": "2019-07-10T16:49:31", "upload_time_iso_8601": "2019-07-10T16:49:31.923745Z", "url": "https://files.pythonhosted.org/packages/10/b0/93d43c03a4250b2dc9e48fd89427bb084f612d7abc1624ce173e6d13cf89/inscribe-Pysher-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:50 2020"}