{"info": {"author": "Jon Crall", "author_email": "erotemic@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Text Editors", "Topic :: Utilities"], "description": "VimTk - The (mostly) Python (g)Vim toolkit \n==========================================\n\n|CircleCI| |Codecov| |Pypi| |Downloads| |ReadTheDocs|\n\n\nDescription \n-----------\n\nThe tools in this package focus on, but are not exclusive to Python development\nwith gVim.  This is both a Vim plugin and a pip installable Python module.\n\n\nUsage \n-----\n\nWe suggest using vim-plug to manage plugins. Install vim plug like this:\n\n.. code:: bash\n\n    # Install vim-plug into your autoload directory\n    \" See: https://github.com/junegunn/vim-plug\n    curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\n\nWe suggest the following vimrc as a template:\n\n.. code:: vim\n\n    \" DEMO_VIMRC: \n\n    call plug#begin('~/.vim/bundle')\n\n    Plug 'sjl/badwolf'\n    Plug 'Erotemic/vimtk'\n\n    call plug#end()            \" required\n\n    filetype plugin indent on\n    syntax on\n\n    \"\"\"\" The above code should be among the first things in your vimrc\n\n\n    \" Map your leader key to comma (much easier to hit)\n    let mapleader = \",\"\n    let maplocalleader = \",\"\n    noremap \\ ,\n\n    \" Make default vimtk remaps\n    :call VimTK_default_remap()\n\n    \" Register files you use all the time with quickopen\n    \" (use <leader>i<char> as a shortcut to specific files\n    call vimtk#quickopen(',', '~/.vimrc')\n    call vimtk#quickopen('5', '~/.bashrc')\n\n\nThis module defines many helper functions, but does not bind them to keys by\ndefault unless ``VimTK_default_remap`` is called. The default bindings are as\nfollows:\n\n.. code:: vim\n\n  noremap <leader>H :call vimtk#helloworld()<Esc>\n\n  noremap  <leader>a :call vimtk#execute_text_in_terminal(mode())<CR>\n  vnoremap <leader>a :call vimtk#execute_text_in_terminal(visualmode())<CR>\n  noremap  <leader>m :call vimtk#execute_text_in_terminal('word')<CR>\n\n  noremap <leader>C :call vimtk#copy_current_fpath()<Esc>\n  noremap <leader>M :call vimtk#ipython_import_all()<CR>\n\n  command! AutoImport call vimtk#insert_auto_import()\n  noremap <leader>pv :call vimtk#insert_print_var_at_cursor()<CR>\n  noremap  <c-M-B> :call vimtk#insert_timerit(mode())<CR><Esc>\n  vnoremap <c-M-B> :call vimtk#insert_timerit(visualmode())<CR><Esc>\n\n  noremap <leader>es :call vimtk#smart_search_word_at_cursor()<CR>\n  noremap <leader>go :call vimtk#open_path_at_cursor(\"e\")<CR>\n  noremap <leader>gf :call vimtk#open_path_at_cursor(\"e\")<CR>\n  noremap <leader>gi :call vimtk#open_path_at_cursor(\"split\")<CR>\n  noremap <leader>gv :call vimtk#open_path_at_cursor(\"vsplit\")<CR>\n  noremap <leader>gv :call vimtk#open_path_at_cursor(\"vsplit\")<CR>\n  noremap <leader>gt :call vimtk#open_path_at_cursor(\"tabe\")<CR>\n  noremap gi :call vimtk#open_path_at_cursor(\"split\")<CR>\n\n\nObviously you can modify the exact key bindings however you would like.\n\n\nHere is what some of these functions do:\n\n- ``vimtk#execute_text_in_terminal`` - copies the current word, line, or visual\n  selection and executes it in your most recently used terminal (perhaps\n  running IPython or bash) without needing to alt-tab or copy paste.\n\n- ``vimtk#ipython_import_all`` - if you are in a python module, this funciton\n  creates a few lines of code that will import everything in this module into\n  the current namespace. Note, it detects if you need to modify your pythonpath\n  and does that.  It also completely disregards ``__all__``. These lines are\n  then executed in your terminal (which should probably be an IPython session)\n\n- ``vimtk#copy_current_fpath`` - Copies the path to the current file into the\n  clipboard. On non-windows the home drive is replaced with ``~``.\n\n- ``vimtk#auto_import`` - Automatically inserts missing Python imports\n\n- ``vimtk#insert_print_var_at_cursor`` - Insert a print statement around the\n  current variable your cursor is on (supports python, bash, cmake, and C++)\n\n- ``vimtk#insert_timerit`` - Make a stub timerit and insert it at the current\n  position\n\n- ``vimtk#open_path_at_cursor`` - Open a file path or web url at your cursor\n\n- ``vimtk#quickopen(char, fpath)`` - Use <leader>[tvio] to open predefined files / directories\n\n\nAlternate VIMRC \n---------------\n\n.. code:: vim\n\n    \" VimTK Recommended VimRC: \n    \" References: https://github.com/Erotemic/vimtk\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    \" # Install vim-plug into your autoload directory\n    \" \" See: https://github.com/junegunn/vim-plug\n    \" curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n    call plug#begin('~/.vim/bundle')\n\n    Plug 'sjl/badwolf'\n    Plug 'Erotemic/vimtk'\n    Plug 'scrooloose/nerdcommenter'\n    Plug 'scrooloose/nerdtree'\n    Plug 'vim-syntastic/syntastic'\n\n    call plug#end()            \" required\n\n    filetype plugin indent on\n    syntax on\n\n    \"\"\"\" The above code should be among the first things in your vimrc\n\n    scriptencoding utf-8\n    set encoding=utf-8\n\n    \" allow backspacing over everything in insert mode\n    set backspace=indent,eol,start\n\n    \" In many terminal emulators the mouse works just fine, thus enable it.\n    if has('mouse')\n      set mouse=a\n    endif\n\n    set fileformat=unix\n    set fileformats=unix,dos\n\n    colorscheme badwolf\n\n    set nomousehide\n\n    set shellslash\n    set grepprg=grep\\ -nH\\ $*\n\n    set autoread\n    set ruler\n\n    \" References: https://vi.stackexchange.com/questions/13034/automatic-whitespace-in-python\n    \" ---- Minimal configuration:\n    set smartindent   \" Do smart autoindenting when starting a new line\n    set shiftwidth=4  \" Set number of spaces per auto indentation\n    set expandtab     \" When using <Tab>, put spaces instead of a <tab> character\n\n    \" ---- Good to have for consistency\n    set tabstop=4   \" Number of spaces that a <Tab> in the file counts for\n    set smarttab    \" At <Tab> at beginning line inserts spaces set in shiftwidth\n\n    \" Highlight search regexes\n    set incsearch\n    set hlsearch\n\n\n    \" https://unix.stackexchange.com/questions/196098/copy-paste-in-xfce4-terminal-adds-0-and-1\n    \" fix terminal spacing issue\n    set t_BE=\n\n    \"set cino='{1s'\n\n    \" Map your leader key to comma (much easier to hit)\n    let mapleader = \",\"\n    let maplocalleader = \",\"\n    noremap \\ ,\n\n    \" Search and replace under cursor\n    noremap <leader>ss :%s/\\<<C-r><C-w>\\>/\n    \"Surround word with quotes\n    noremap <leader>qw ciw'<C-r>\"'<Esc>\n    noremap <leader>qc ciw`<C-r>\"`<Esc>\n\n    \" Window navication\n    \" Alt + jklh\n    map <silent><A-j> <c-w>j\n    map <silent><A-k> <c-w>k\n    map <silent><A-l> <c-w>l\n    map <silent><A-h> <c-w>h\n    \" Control + jklh\n    map <c-j> <c-w>j\n    map <c-k> <c-w>k\n    map <c-l> <c-w>l\n    \" Move in split windows\n    \" Press leader twice to move between windows\n    noremap <leader>, <C-w>w\n    map <c-h> <c-w>h\n\n\n    \" Make default vimtk remaps\n    :call VimTK_default_remap()\n\n    \" Swap colon and semicolon\n    :call vimtk#swap_keys(':', ';')\n\n    \" Register files you use all the time with quickopen\n    \" (use <leader>i<char> as a shortcut to specific files\n    call vimtk#quickopen(',', '~/.vimrc')\n    call vimtk#quickopen('5', '~/.bashrc')\n\n.. |CircleCI| image:: https://circleci.com/gh/Erotemic/vimtk.svg?style=svg\n    :target: https://circleci.com/gh/Erotemic/vimtk\n.. |Travis| image:: https://img.shields.io/travis/Erotemic/vimtk/master.svg?label=Travis%20CI\n   :target: https://travis-ci.org/Erotemic/vimtk?branch=master\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/github/Erotemic/vimtk?branch=master&svg=True\n   :target: https://ci.appveyor.com/project/Erotemic/vimtk/branch/master\n.. |Codecov| image:: https://codecov.io/github/Erotemic/vimtk/badge.svg?branch=master&service=github\n   :target: https://codecov.io/github/Erotemic/vimtk?branch=master\n.. |Pypi| image:: https://img.shields.io/pypi/v/vimtk.svg\n   :target: https://pypi.python.org/pypi/vimtk\n.. |Downloads| image:: https://img.shields.io/pypi/dm/vimtk.svg\n   :target: https://pypistats.org/packages/vimtk\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/vimtk/badge/?version=latest\n    :target: http://vimtk.readthedocs.io/en/latest/\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Erotemic/vimtk", "keywords": "vim,gvim,python", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "vimtk", "package_url": "https://pypi.org/project/vimtk/", "platform": "", "project_url": "https://pypi.org/project/vimtk/", "project_urls": {"Homepage": "https://github.com/Erotemic/vimtk"}, "release_url": "https://pypi.org/project/vimtk/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Python backend for vimtk plugin", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/Erotemic/vimtk\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8162f6fdfc9109412325a2014e1249e84f5b687e/68747470733a2f2f636972636c6563692e636f6d2f67682f45726f74656d69632f76696d746b2e7376673f7374796c653d737667\"></a> <a href=\"https://codecov.io/github/Erotemic/vimtk?branch=master\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f48805a7217549f687d2c9d28b3774c7df65e72/68747470733a2f2f636f6465636f762e696f2f6769746875622f45726f74656d69632f76696d746b2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://pypi.python.org/pypi/vimtk\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec6b7eb3dd5372bf82bbdc78c84e06b314c652a6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76696d746b2e737667\"></a> <a href=\"https://pypistats.org/packages/vimtk\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a58cd73f53d1b2e3299ac95a1ae6f397a6bd336/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f76696d746b2e737667\"></a> <a href=\"http://vimtk.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"ReadTheDocs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8973812ff76d72f3f013b5fdf43c01d4d4ec314/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f76696d746b2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>The tools in this package focus on, but are not exclusive to Python development\nwith gVim.  This is both a Vim plugin and a pip installable Python module.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>We suggest using vim-plug to manage plugins. Install vim plug like this:</p>\n<pre><span class=\"c1\"># Install vim-plug into your autoload directory\n</span><span class=\"s2\">\" See: https://github.com/junegunn/vim-plug\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span>\n</pre>\n<p>We suggest the following vimrc as a template:</p>\n<pre><span class=\"c\">\" DEMO_VIMRC:</span>\n\n<span class=\"k\">call</span> plug#begin<span class=\"p\">(</span><span class=\"s1\">'~/.vim/bundle'</span><span class=\"p\">)</span>\n\nPlug <span class=\"s1\">'sjl/badwolf'</span>\nPlug <span class=\"s1\">'Erotemic/vimtk'</span>\n\n<span class=\"k\">call</span> plug#<span class=\"k\">end</span><span class=\"p\">()</span>            <span class=\"c\">\" required</span>\n\n<span class=\"k\">filetype</span> plugin indent <span class=\"k\">on</span>\n<span class=\"nb\">syntax</span> <span class=\"k\">on</span>\n<span class=\"c\">\n\"\"\"\" The above code should be among the first things in your vimrc</span>\n<span class=\"c\">\n\n\" Map your leader key to comma (much easier to hit)</span>\n<span class=\"k\">let</span> mapleader <span class=\"p\">=</span> <span class=\"s2\">\",\"</span>\n<span class=\"k\">let</span> maplocalleader <span class=\"p\">=</span> <span class=\"s2\">\",\"</span>\n<span class=\"nb\">noremap</span> \\ <span class=\"p\">,</span>\n<span class=\"c\">\n\" Make default vimtk remaps</span>\n<span class=\"p\">:</span><span class=\"k\">call</span> VimTK_default_remap<span class=\"p\">()</span>\n<span class=\"c\">\n\" Register files you use all the time with quickopen</span>\n<span class=\"c\">\" (use &lt;leader&gt;i&lt;char&gt; as a shortcut to specific files</span>\n<span class=\"k\">call</span> vimtk#quickopen<span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">,</span> <span class=\"s1\">'~/.vimrc'</span><span class=\"p\">)</span>\n<span class=\"k\">call</span> vimtk#quickopen<span class=\"p\">(</span><span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"s1\">'~/.bashrc'</span><span class=\"p\">)</span>\n</pre>\n<p>This module defines many helper functions, but does not bind them to keys by\ndefault unless <tt>VimTK_default_remap</tt> is called. The default bindings are as\nfollows:</p>\n<pre><span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>H :<span class=\"k\">call</span> vimtk#helloworld<span class=\"p\">()&lt;</span>Esc<span class=\"p\">&gt;</span>\n\n<span class=\"nb\">noremap</span>  <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span><span class=\"k\">a</span> :<span class=\"k\">call</span> vimtk#execute_text_in_terminal<span class=\"p\">(</span><span class=\"k\">mode</span><span class=\"p\">())&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">vnoremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span><span class=\"k\">a</span> :<span class=\"k\">call</span> vimtk#execute_text_in_terminal<span class=\"p\">(</span>visualmode<span class=\"p\">())&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span>  <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span><span class=\"k\">m</span> :<span class=\"k\">call</span> vimtk#execute_text_in_terminal<span class=\"p\">(</span><span class=\"s1\">'word'</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>C :<span class=\"k\">call</span> vimtk#copy_current_fpath<span class=\"p\">()&lt;</span>Esc<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>M :<span class=\"k\">call</span> vimtk#ipython_import_all<span class=\"p\">()&lt;</span>CR<span class=\"p\">&gt;</span>\n\ncommand<span class=\"p\">!</span> AutoImport <span class=\"k\">call</span> vimtk#insert_auto_import<span class=\"p\">()</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>pv :<span class=\"k\">call</span> vimtk#insert_print_var_at_cursor<span class=\"p\">()&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span>  <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span>M<span class=\"p\">-</span>B<span class=\"p\">&gt;</span> :<span class=\"k\">call</span> vimtk#insert_timerit<span class=\"p\">(</span><span class=\"k\">mode</span><span class=\"p\">())&lt;</span>CR<span class=\"p\">&gt;&lt;</span>Esc<span class=\"p\">&gt;</span>\n<span class=\"nb\">vnoremap</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span>M<span class=\"p\">-</span>B<span class=\"p\">&gt;</span> :<span class=\"k\">call</span> vimtk#insert_timerit<span class=\"p\">(</span>visualmode<span class=\"p\">())&lt;</span>CR<span class=\"p\">&gt;&lt;</span>Esc<span class=\"p\">&gt;</span>\n\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>es :<span class=\"k\">call</span> vimtk#smart_search_word_at_cursor<span class=\"p\">()&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span><span class=\"k\">go</span> :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"e\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>gf :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"e\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>gi :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"split\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>gv :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"vsplit\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>gv :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"vsplit\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>gt :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"tabe\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> gi :<span class=\"k\">call</span> vimtk#open_path_at_cursor<span class=\"p\">(</span><span class=\"s2\">\"split\"</span><span class=\"p\">)&lt;</span>CR<span class=\"p\">&gt;</span>\n</pre>\n<p>Obviously you can modify the exact key bindings however you would like.</p>\n<p>Here is what some of these functions do:</p>\n<ul>\n<li><tt>vimtk#execute_text_in_terminal</tt> - copies the current word, line, or visual\nselection and executes it in your most recently used terminal (perhaps\nrunning IPython or bash) without needing to alt-tab or copy paste.</li>\n<li><tt>vimtk#ipython_import_all</tt> - if you are in a python module, this funciton\ncreates a few lines of code that will import everything in this module into\nthe current namespace. Note, it detects if you need to modify your pythonpath\nand does that.  It also completely disregards <tt>__all__</tt>. These lines are\nthen executed in your terminal (which should probably be an IPython session)</li>\n<li><tt>vimtk#copy_current_fpath</tt> - Copies the path to the current file into the\nclipboard. On non-windows the home drive is replaced with <tt>~</tt>.</li>\n<li><tt>vimtk#auto_import</tt> - Automatically inserts missing Python imports</li>\n<li><tt>vimtk#insert_print_var_at_cursor</tt> - Insert a print statement around the\ncurrent variable your cursor is on (supports python, bash, cmake, and C++)</li>\n<li><tt>vimtk#insert_timerit</tt> - Make a stub timerit and insert it at the current\nposition</li>\n<li><tt>vimtk#open_path_at_cursor</tt> - Open a file path or web url at your cursor</li>\n<li><tt>vimtk#quickopen(char, fpath)</tt> - Use &lt;leader&gt;[tvio] to open predefined files / directories</li>\n</ul>\n</div>\n<div id=\"alternate-vimrc\">\n<h2>Alternate VIMRC</h2>\n<pre><span class=\"c\">\" VimTK Recommended VimRC:</span>\n<span class=\"c\">\" References: https://github.com/Erotemic/vimtk</span>\n<span class=\"c\">\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"</span>\n<span class=\"c\">\" # Install vim-plug into your autoload directory</span>\n<span class=\"c\">\" \" See: https://github.com/junegunn/vim-plug</span>\n<span class=\"c\">\" curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span>\n<span class=\"c\">\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"</span>\n\n<span class=\"k\">call</span> plug#begin<span class=\"p\">(</span><span class=\"s1\">'~/.vim/bundle'</span><span class=\"p\">)</span>\n\nPlug <span class=\"s1\">'sjl/badwolf'</span>\nPlug <span class=\"s1\">'Erotemic/vimtk'</span>\nPlug <span class=\"s1\">'scrooloose/nerdcommenter'</span>\nPlug <span class=\"s1\">'scrooloose/nerdtree'</span>\nPlug <span class=\"s1\">'vim-syntastic/syntastic'</span>\n\n<span class=\"k\">call</span> plug#<span class=\"k\">end</span><span class=\"p\">()</span>            <span class=\"c\">\" required</span>\n\n<span class=\"k\">filetype</span> plugin indent <span class=\"k\">on</span>\n<span class=\"nb\">syntax</span> <span class=\"k\">on</span>\n<span class=\"c\">\n\"\"\"\" The above code should be among the first things in your vimrc</span>\n\n<span class=\"k\">scriptencoding</span> utf<span class=\"m\">-8</span>\n<span class=\"k\">set</span> <span class=\"nb\">encoding</span><span class=\"p\">=</span>utf<span class=\"m\">-8</span>\n<span class=\"c\">\n\" allow backspacing over everything in insert mode</span>\n<span class=\"k\">set</span> <span class=\"nb\">backspace</span><span class=\"p\">=</span>indent<span class=\"p\">,</span><span class=\"nb\">eol</span><span class=\"p\">,</span><span class=\"k\">start</span>\n<span class=\"c\">\n\" In many terminal emulators the mouse works just fine, thus enable it.</span>\n<span class=\"k\">if</span> has<span class=\"p\">(</span><span class=\"s1\">'mouse'</span><span class=\"p\">)</span>\n  <span class=\"k\">set</span> <span class=\"nb\">mouse</span><span class=\"p\">=</span><span class=\"k\">a</span>\n<span class=\"k\">endif</span>\n\n<span class=\"k\">set</span> <span class=\"nb\">fileformat</span><span class=\"p\">=</span>unix\n<span class=\"k\">set</span> <span class=\"nb\">fileformats</span><span class=\"p\">=</span>unix<span class=\"p\">,</span>dos\n\n<span class=\"k\">colorscheme</span> badwolf\n\n<span class=\"k\">set</span> <span class=\"nb\">nomousehide</span>\n\n<span class=\"k\">set</span> <span class=\"nb\">shellslash</span>\n<span class=\"k\">set</span> <span class=\"nb\">grepprg</span><span class=\"p\">=</span><span class=\"k\">grep</span>\\ <span class=\"p\">-</span>nH\\ $*\n\n<span class=\"k\">set</span> <span class=\"nb\">autoread</span>\n<span class=\"k\">set</span> <span class=\"nb\">ruler</span>\n<span class=\"c\">\n\" References: https://vi.stackexchange.com/questions/13034/automatic-whitespace-in-python</span>\n<span class=\"c\">\" ---- Minimal configuration:</span>\n<span class=\"k\">set</span> <span class=\"nb\">smartindent</span>   <span class=\"c\">\" Do smart autoindenting when starting a new line</span>\n<span class=\"k\">set</span> <span class=\"nb\">shiftwidth</span><span class=\"p\">=</span><span class=\"m\">4</span>  <span class=\"c\">\" Set number of spaces per auto indentation</span>\n<span class=\"k\">set</span> <span class=\"nb\">expandtab</span>     <span class=\"c\">\" When using &lt;Tab&gt;, put spaces instead of a &lt;tab&gt; character</span>\n<span class=\"c\">\n\" ---- Good to have for consistency</span>\n<span class=\"k\">set</span> <span class=\"nb\">tabstop</span><span class=\"p\">=</span><span class=\"m\">4</span>   <span class=\"c\">\" Number of spaces that a &lt;Tab&gt; in the file counts for</span>\n<span class=\"k\">set</span> <span class=\"nb\">smarttab</span>    <span class=\"c\">\" At &lt;Tab&gt; at beginning line inserts spaces set in shiftwidth</span>\n<span class=\"c\">\n\" Highlight search regexes</span>\n<span class=\"k\">set</span> <span class=\"nb\">incsearch</span>\n<span class=\"k\">set</span> <span class=\"nb\">hlsearch</span>\n<span class=\"c\">\n\n\" https://unix.stackexchange.com/questions/196098/copy-paste-in-xfce4-terminal-adds-0-and-1</span>\n<span class=\"c\">\" fix terminal spacing issue</span>\n<span class=\"k\">set</span> t_BE<span class=\"p\">=</span>\n<span class=\"c\">\n\"set cino='{1s'</span>\n<span class=\"c\">\n\" Map your leader key to comma (much easier to hit)</span>\n<span class=\"k\">let</span> mapleader <span class=\"p\">=</span> <span class=\"s2\">\",\"</span>\n<span class=\"k\">let</span> maplocalleader <span class=\"p\">=</span> <span class=\"s2\">\",\"</span>\n<span class=\"nb\">noremap</span> \\ <span class=\"p\">,</span>\n<span class=\"c\">\n\" Search and replace under cursor</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span><span class=\"nb\">ss</span> :%s<span class=\"sr\">/\\&lt;&lt;C-r&gt;&lt;C-w&gt;\\&gt;/</span>\n<span class=\"c\">\"Surround word with quotes</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>qw ciw<span class=\"s1\">'&lt;C-r&gt;\"'</span><span class=\"p\">&lt;</span>Esc<span class=\"p\">&gt;</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;</span>qc ciw`<span class=\"p\">&lt;</span>C<span class=\"p\">-</span><span class=\"k\">r</span><span class=\"p\">&gt;</span>\"`<span class=\"p\">&lt;</span>Esc<span class=\"p\">&gt;</span>\n<span class=\"c\">\n\" Window navication</span>\n<span class=\"c\">\" Alt + jklh</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">silent</span><span class=\"p\">&gt;&lt;</span>A<span class=\"p\">-</span><span class=\"k\">j</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">j</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">silent</span><span class=\"p\">&gt;&lt;</span>A<span class=\"p\">-</span><span class=\"k\">k</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">k</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">silent</span><span class=\"p\">&gt;&lt;</span>A<span class=\"p\">-</span><span class=\"k\">l</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">l</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">silent</span><span class=\"p\">&gt;&lt;</span>A<span class=\"p\">-</span><span class=\"k\">h</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">h</span>\n<span class=\"c\">\" Control + jklh</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">j</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">j</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">k</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">k</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">l</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">l</span>\n<span class=\"c\">\" Move in split windows</span>\n<span class=\"c\">\" Press leader twice to move between windows</span>\n<span class=\"nb\">noremap</span> <span class=\"p\">&lt;</span>leader<span class=\"p\">&gt;,</span> <span class=\"p\">&lt;</span>C<span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">w</span>\nmap <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">h</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"k\">c</span><span class=\"p\">-</span><span class=\"k\">w</span><span class=\"p\">&gt;</span><span class=\"k\">h</span>\n<span class=\"c\">\n\n\" Make default vimtk remaps</span>\n<span class=\"p\">:</span><span class=\"k\">call</span> VimTK_default_remap<span class=\"p\">()</span>\n<span class=\"c\">\n\" Swap colon and semicolon</span>\n<span class=\"p\">:</span><span class=\"k\">call</span> vimtk#swap_keys<span class=\"p\">(</span><span class=\"s1\">':'</span><span class=\"p\">,</span> <span class=\"s1\">';'</span><span class=\"p\">)</span>\n<span class=\"c\">\n\" Register files you use all the time with quickopen</span>\n<span class=\"c\">\" (use &lt;leader&gt;i&lt;char&gt; as a shortcut to specific files</span>\n<span class=\"k\">call</span> vimtk#quickopen<span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">,</span> <span class=\"s1\">'~/.vimrc'</span><span class=\"p\">)</span>\n<span class=\"k\">call</span> vimtk#quickopen<span class=\"p\">(</span><span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"s1\">'~/.bashrc'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6248172, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "af3ef1f1f23f6d5170e5eaf9db7bea2a", "sha256": "5cfc646339b891d44ae7ff268696b2968527b766b34db07d746a68ace91568f6"}, "downloads": -1, "filename": "vimtk-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af3ef1f1f23f6d5170e5eaf9db7bea2a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21805, "upload_time": "2019-04-14T02:11:34", "upload_time_iso_8601": "2019-04-14T02:11:34.972323Z", "url": "https://files.pythonhosted.org/packages/43/26/98133df9a11af853c7b2580f1e1d3197a6b9b55237f8e55d9015a9421467/vimtk-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "66b96378df7d666e5fd84d91499de6cc", "sha256": "181cef9b6874587ef5e11859bae6fb9fa12e3bbcb00ade65bbc2c4bf49e46fba"}, "downloads": -1, "filename": "vimtk-0.2.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "66b96378df7d666e5fd84d91499de6cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34631, "upload_time": "2019-11-16T05:22:30", "upload_time_iso_8601": "2019-11-16T05:22:30.513108Z", "url": "https://files.pythonhosted.org/packages/44/8c/d0e4764cb14a24602bb498ad8ed415da4d72677559060d044d33761406c3/vimtk-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96e3fec55804068ad3fff49700f32680", "sha256": "772eac9d81fe4390021f31ffc3c05250f43e499d62160f716cf9ada32052b3b5"}, "downloads": -1, "filename": "vimtk-0.2.0.tar.gz", "has_sig": true, "md5_digest": "96e3fec55804068ad3fff49700f32680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34146, "upload_time": "2019-11-16T05:22:48", "upload_time_iso_8601": "2019-11-16T05:22:48.054691Z", "url": "https://files.pythonhosted.org/packages/d1/61/fc6255ffd8797149ca0d9e3814166b96c22d8a9c329dfebb877ef9a1ee66/vimtk-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "81ca76f8b8f7b0fbd5ef25f8987f2bf2", "sha256": "cb0679cc074ed323347055068df4d33505fd2f0a67e3106cd4ef8f419bfd8ed3"}, "downloads": -1, "filename": "vimtk-0.2.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "81ca76f8b8f7b0fbd5ef25f8987f2bf2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36185, "upload_time": "2019-12-05T16:03:14", "upload_time_iso_8601": "2019-12-05T16:03:14.297797Z", "url": "https://files.pythonhosted.org/packages/bf/53/d86d9cf28b17236be9a2f0c025dc006006b6476ee5d73588916f44c0044a/vimtk-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee18aadbe3388361427bc81ac0103316", "sha256": "372f15fb73462c6607fbcc5fe6a94ba107c51046f4ac966d71a36e8432086860"}, "downloads": -1, "filename": "vimtk-0.2.1.tar.gz", "has_sig": true, "md5_digest": "ee18aadbe3388361427bc81ac0103316", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54142, "upload_time": "2019-12-05T16:03:16", "upload_time_iso_8601": "2019-12-05T16:03:16.680872Z", "url": "https://files.pythonhosted.org/packages/07/94/87585d05245bccd3abe5116ca86a28a9dd68ad181d1cd533884675a4d7cb/vimtk-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81ca76f8b8f7b0fbd5ef25f8987f2bf2", "sha256": "cb0679cc074ed323347055068df4d33505fd2f0a67e3106cd4ef8f419bfd8ed3"}, "downloads": -1, "filename": "vimtk-0.2.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "81ca76f8b8f7b0fbd5ef25f8987f2bf2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36185, "upload_time": "2019-12-05T16:03:14", "upload_time_iso_8601": "2019-12-05T16:03:14.297797Z", "url": "https://files.pythonhosted.org/packages/bf/53/d86d9cf28b17236be9a2f0c025dc006006b6476ee5d73588916f44c0044a/vimtk-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee18aadbe3388361427bc81ac0103316", "sha256": "372f15fb73462c6607fbcc5fe6a94ba107c51046f4ac966d71a36e8432086860"}, "downloads": -1, "filename": "vimtk-0.2.1.tar.gz", "has_sig": true, "md5_digest": "ee18aadbe3388361427bc81ac0103316", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54142, "upload_time": "2019-12-05T16:03:16", "upload_time_iso_8601": "2019-12-05T16:03:16.680872Z", "url": "https://files.pythonhosted.org/packages/07/94/87585d05245bccd3abe5116ca86a28a9dd68ad181d1cd533884675a4d7cb/vimtk-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:58 2020"}