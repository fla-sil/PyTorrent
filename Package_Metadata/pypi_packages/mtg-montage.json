{"info": {"author": "Max Mackie", "author_email": "mtg-montage@f33r.com", "bugtrack_url": null, "classifiers": [], "description": "===========\nMTG Montage\n===========\n\nMTG Montage is a small program that will take a list of Magic: The Gathering\ncards (in standard format), finds images stored locally that match each card\nname, resamples them, and places them on a 3x3 grid in a pdf file. This pdf\ncan be printed and the cards will be the same size as a real magic card.\n\nDisclaimer: This software is to be used for personal proxies only. If you\nenjoy playing the game, buy the cards.\n\nDependencies\n============\n\n* Imagemagick (the montage binary)\n\nUsage\n=====\n\n``mtg-montage`` is very straightforward to use. At the very minimum, it requires\nthree pieces of information: the directory where your images are stored, the file\nthat contains the list of cards you want to proxy, and the name of the pdf output\nfile and where it should be stored. \n\nYou can get more information on all the supported flags by looking at the ``--help``\ntext. Below are some common usage examples.\n\nExamples\n--------\n\n1. Standard usage::\n\n\tmtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf\n\n2. Save the card choices you make::\n\n\tmtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf --savefile ~/choices.txt\n\n3. Load a past set of choices to regenrate the pdf::\n\n\tmtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf --choices ~/choices.txt\n\n4. Run a test, don't actually make the pdf. This is useful if you want to see which cards the program can't find::\n\n\tmtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf --test", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maxmackie/mtg-montage", "keywords": "montage imagemagick magic mtg proxy", "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "mtg-montage", "package_url": "https://pypi.org/project/mtg-montage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mtg-montage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/maxmackie/mtg-montage"}, "release_url": "https://pypi.org/project/mtg-montage/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Creates proxy pages from Magic: The Gathering cards ready for printing", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>MTG Montage is a small program that will take a list of Magic: The Gathering\ncards (in standard format), finds images stored locally that match each card\nname, resamples them, and places them on a 3x3 grid in a pdf file. This pdf\ncan be printed and the cards will be the same size as a real magic card.</p>\n<p>Disclaimer: This software is to be used for personal proxies only. If you\nenjoy playing the game, buy the cards.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Imagemagick (the montage binary)</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt><span class=\"pre\">mtg-montage</span></tt> is very straightforward to use. At the very minimum, it requires\nthree pieces of information: the directory where your images are stored, the file\nthat contains the list of cards you want to proxy, and the name of the pdf output\nfile and where it should be stored.</p>\n<p>You can get more information on all the supported flags by looking at the <tt><span class=\"pre\">--help</span></tt>\ntext. Below are some common usage examples.</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<ol>\n<li><p>Standard usage:</p>\n<pre>mtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf\n</pre>\n</li>\n<li><p>Save the card choices you make:</p>\n<pre>mtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf --savefile ~/choices.txt\n</pre>\n</li>\n<li><p>Load a past set of choices to regenrate the pdf:</p>\n<pre>mtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf --choices ~/choices.txt\n</pre>\n</li>\n<li><p>Run a test, don\u2019t actually make the pdf. This is useful if you want to see which cards the program can\u2019t find:</p>\n<pre>mtg-montage --directory ~/mtg-images/ --input ~/cubelist.txt --output ~/cubelist.pdf --test\n</pre>\n</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1425988, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8b38797adef5ada7ed49465d5f631ff2", "sha256": "f4b87b81ace490560b97095a81064fab2e343005c68111e836e05a2eb9c023bb"}, "downloads": -1, "filename": "mtg-montage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b38797adef5ada7ed49465d5f631ff2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6654, "upload_time": "2015-02-16T20:27:27", "upload_time_iso_8601": "2015-02-16T20:27:27.823821Z", "url": "https://files.pythonhosted.org/packages/48/eb/732159f3ef274c1b81c20dd431b90cb8110b286387f72e4cf0828a73e02e/mtg-montage-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7bd531048a7aa8d0af28709bcc78b45c", "sha256": "d6129e4fcb95d934701fc13d83d17806dec634a311199ce223a6112999cf2856"}, "downloads": -1, "filename": "mtg-montage-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7bd531048a7aa8d0af28709bcc78b45c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7388, "upload_time": "2015-02-16T20:29:20", "upload_time_iso_8601": "2015-02-16T20:29:20.184343Z", "url": "https://files.pythonhosted.org/packages/b7/d1/db2766efa19a700f8764ebae969f1243c107f9364a6f99701c87e3b05ce8/mtg-montage-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8584075c8726deb6b704db612ef54a92", "sha256": "5e2ce33fa1bf43e02ca6b099a86a24cd20dbcb94d6bc54d19cdf346ddcd39d92"}, "downloads": -1, "filename": "mtg-montage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8584075c8726deb6b704db612ef54a92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4122, "upload_time": "2015-02-16T21:05:01", "upload_time_iso_8601": "2015-02-16T21:05:01.916324Z", "url": "https://files.pythonhosted.org/packages/57/82/dac2abea43450e971a860e9264579a1d3e6e36ea30bb5d279a87c4a25a52/mtg-montage-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8584075c8726deb6b704db612ef54a92", "sha256": "5e2ce33fa1bf43e02ca6b099a86a24cd20dbcb94d6bc54d19cdf346ddcd39d92"}, "downloads": -1, "filename": "mtg-montage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8584075c8726deb6b704db612ef54a92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4122, "upload_time": "2015-02-16T21:05:01", "upload_time_iso_8601": "2015-02-16T21:05:01.916324Z", "url": "https://files.pythonhosted.org/packages/57/82/dac2abea43450e971a860e9264579a1d3e6e36ea30bb5d279a87c4a25a52/mtg-montage-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:42 2020"}