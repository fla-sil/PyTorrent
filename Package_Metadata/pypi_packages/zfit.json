{"info": {"author": "Jonas Eschle", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Physics"], "description": "*******************************\nzfit: scalable pythonic fitting\n*******************************\n\n.. image:: https://scikit-hep.org/assets/images/Scikit--HEP-Affiliated-blue.svg\n   :target: https://scikit-hep.org\n\n.. image:: https://img.shields.io/pypi/v/zfit.svg\n   :target: https://pypi.python.org/pypi/zfit\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/zfit\n   :alt: conda-forge\n   :target: https://anaconda.org/conda-forge/zfit\n\n.. image:: https://travis-ci.org/zfit/zfit.svg?branch=develop\n   :target: https://travis-ci.org/zfit/zfit\n\n.. image:: https://coveralls.io/repos/github/zfit/zfit/badge.svg?branch=meta_changes\n   :target: https://coveralls.io/github/zfit/zfit?branch=meta_changes\n\n.. image:: https://www.codefactor.io/repository/github/zfit/zfit/badge\n   :target: https://www.codefactor.io/repository/github/zfit/zfit\n   :alt: CodeFactor\n\n\n|zfit_logo|\n\n\n.. |zfit_logo| image:: docs/images/zfit-fin_400x168.png\n   :target: https://github.com/zfit/zfit\n   :alt: zfit logo\n\n.. |scikit-hep_logo| image:: docs/images/scikit-hep-logo_168x168.png\n   :target: https://scikit-hep.org/affiliated\n   :alt: scikit-hep logo\n\nzfit is a highly scalable and customizable model manipulation and fitting library. It uses\n`TensorFlow <https://www.tensorflow.org/>`_ as its computational backend\nand is optimised for simple and direct manipulation of probability density functions. The project is affiliated with and well integrated into `scikit-hep <https://scikit-hep.org/>`_, the HEP Python ecosystem.\n\n- **Tutorials**: `Interactive IPython Tutorials <https://github.com/zfit/zfit-tutorials>`_\n- **Quick start**: `Example scripts <examples>`_\n- **Develop Documentation**: Full documentation_ and API_\n- **Stable Documentation**: Latest `stable documentation`_\n- **Questions**: see the `FAQ <https://github.com/zfit/zfit/wiki/FAQ>`_,\n  `ask on StackOverflow <https://stackoverflow.com/questions/ask?tags=zfit>`_ (with the **zfit** tag) or `contact`_ us directly.\n- **Physics/HEP**: `zfit-physics <https://github.com/zfit/zfit-physics>`_ is the place to contribute/find more HEP\n  related content\n\n\nIf you use zfit in research, please consider `citing <https://arxiv.org/abs/1910.13429>`_.\n\n*N.B.*: zfit is currently in *beta stage*, so while most core parts are established, some may still be missing and bugs may be encountered.\nIt is, however, mostly ready for production, and is being used in analyses projects.\nIf you want to use it for your project and you are not sure if all the needed functionality is there, feel free to `contact`_.\n\n\nWhy?\n====\n\nThe basic idea behind zfit is to offer a Python oriented alternative to the very successful RooFit library from the `ROOT <https://root.cern.ch/>`_ data analysis package that can integrate with the other packages that are part if the scientific Python ecosystem.\nContrary to the monolithic approach of ROOT/RooFit, the aim of zfit is to be light and flexible enough to integrate with any state-of-art tools and to allow scalability going to larger datasets.\n\nThese core ideas are supported by two basic pillars:\n\n- The skeleton and extension of the code is minimalist, simple and finite:\n  the zfit library is exclusively designed for the purpose of model fitting and sampling with no attempt to extend its functionalities to features such as statistical methods or plotting.\n\n- zfit is designed for optimal parallelisation and scalability by making use of TensorFlow as its backend.\n  The use of TensorFlow provides crucial features in the context of model fitting like taking care of the parallelisation and analytic derivatives.\n\n\n\nHow to use\n==========\n\nWhile the zfit library provides a model fitting and sampling framework for a broad list of applications,\nwe will illustrate its main features with a simple example by fitting a Gaussian distribution with an unbinned\nlikelihood fit and a parameter uncertainty estimation.\n\n\nExample in short\n----------------\n.. code-block:: python\n\n    obs = zfit.Space('x', limits=(-10, 10))\n\n    # create the model\n    mu    = zfit.Parameter(\"mu\"   , 2.4, -1, 5)\n    sigma = zfit.Parameter(\"sigma\", 1.3,  0, 5)\n    gauss = zfit.pdf.Gauss(obs=obs, mu=mu, sigma=sigma)\n\n    # load the data\n    data_np = np.random.normal(size=10000)\n    data = zfit.Data.from_numpy(obs=obs, array=data_np)\n\n    # build the loss\n    nll = zfit.loss.UnbinnedNLL(model=gauss, data=data)\n\n    # minimize\n    minimizer = zfit.minimize.Minuit()\n    result = minimizer.minimize(nll)\n\n    # calculate errors\n    param_errors = result.error()\n\nThis follows the zfit workflow\n\n.. image:: docs/images/zfit_workflow_v1.png\n    :alt: zfit workflow\n\n\n\n\nFull explanation\n----------------\n\nThe default space (e.g. normalization range) of a PDF is defined by an *observable space*, which is created using the ``zfit.Space`` class:\n\n\n.. code-block:: python\n\n    obs = zfit.Space('x', limits=(-10, 10))\n\n\nTo create a simple Gaussian PDF, we define its parameters and their limits using the ``zfit.Parameter`` class.\n\n.. code-block:: python\n\n  # syntax: zfit.Parameter(\"any_name\", value, lower, upper)\n    mu    = zfit.Parameter(\"mu\"   , 2.4, -1, 5)\n    sigma = zfit.Parameter(\"sigma\", 1.3,  0, 5)\n    gauss = zfit.pdf.Gauss(obs=obs, mu=mu, sigma=sigma)\n\nFor simplicity, we create the dataset to be fitted starting from a numpy array, but zfit allows for the use of other sources such as ROOT files:\n\n.. code-block:: python\n\n    mu_true = 0\n    sigma_true = 1\n    data_np = np.random.normal(mu_true, sigma_true, size=10000)\n    data = zfit.Data.from_numpy(obs=obs, array=data_np)\n\nFits are performed in three steps:\n\n1. Creation of a loss function, in our case a negative log-likelihood.\n2. Instantiation of our minimiser of choice, in the example the ``Minuit``.\n3. Minimisation of the loss function.\n\n.. code-block:: python\n\n    # Stage 1: create an unbinned likelihood with the given PDF and dataset\n    nll = zfit.loss.UnbinnedNLL(model=gauss, data=data)\n\n    # Stage 2: instantiate a minimiser (in this case a basic minuit)\n    minimizer = zfit.minimize.Minuit()\n\n    # Stage 3: minimise the given negative log-likelihood\n    result = minimizer.minimize(nll)\n\nErrors are calculated with a further function call to avoid running potentially expensive operations if not needed:\n\n.. code-block:: python\n\n    param_errors = result.error()\n\nOnce we've performed the fit and obtained the corresponding uncertainties, we can examine the fit results:\n\n.. code-block:: python\n\n    print(\"Function minimum:\", result.fmin)\n    print(\"Converged:\", result.converged)\n    print(\"Full minimizer information:\", result.info)\n\n    # Information on all the parameters in the fit\n    params = result.params\n    print(params)\n\n    # Printing information on specific parameters, e.g. mu\n    print(\"mu={}\".format(params[mu]['value']))\n\nAnd that's it!\nFor more details and information of what you can do with zfit, checkout the documentation_.\n\nPrerequisites\n=============\n\n``zfit`` works with Python versions 3.6 and 3.7.\nThe following packages (amongst others) are required:\n\n- `tensorflow <https://www.tensorflow.org/>`_ >= 2.x\n- `tensorflow_probability <https://www.tensorflow.org/probability>`_\n- `scipy <https://www.scipy.org/>`_ >=1.2\n- `uproot <https://github.com/scikit-hep/uproot>`_\n- `iminuit <https://github.com/scikit-hep/iminuit>`_\n\n... and some minor packages. For a full list, check the `requirements <requirements.txt>`_.\n\nInstalling\n==========\n\nzfit is available on conda-forge and pip. If possible, use a conda or virtual environment and do:\n\nFor conda:\n\n.. code-block:: console\n\n    $ conda install zfit -c conda-forge\n\nFor pip (if you don't use conda):\n\n.. code-block:: console\n\n    $ pip install zfit\n\n\nFor the newest development version, you can install the version from git with\n\n.. code-block:: console\n\n   $ pip install git+https://github.com/zfit/zfit\n\n\nContributing\n============\n\nAny idea of how to improve the library? Or interested to write some code?\nContributions are always welcome, please have a look at the `Contributing guide`_.\n\n.. _Contributing guide: CONTRIBUTING.rst\n\n\nContact\n=======\n\nYou can contact us directly:\n - via e-mail: zfit@physik.uzh.ch\n - join our `Gitter channel <https://gitter.im/zfit/zfit>`_\n\n\nOriginal Authors\n================\n\n| Jonas Eschle <jonas.eschle@cern.ch>\n| Albert Puig <albert.puig@cern.ch>\n| Rafael Silva Coutinho <rsilvaco@cern.ch>\n\n\nSee here for `all authors and contributors`_\n\n..  _all authors and contributors: AUTHORS.rst\n\n\nAcknowledgements\n================\n\nzfit has been developed with support from the University of Z\u00fcrich and the Swiss National Science Foundation (SNSF) under contracts 168169 and 174182.\n\nThe idea of zfit is inspired by the `TensorFlowAnalysis <https://gitlab.cern.ch/poluekt/TensorFlowAnalysis>`_ framework developed by Anton Poluektov using the TensorFlow open source library.\n\n.. _documentation: https://zfit.readthedocs.io/en/latest/\n..  _stable documentation: https://zfit.readthedocs.io/en/0.5.1/\n.. _API: https://zfit.readthedocs.io/en/latest/API.html\n\n\n\n\n\n*********\nChangelog\n*********\n\nDevelop\n=======\n\n\nMajor Features and Improvements\n-------------------------------\n\nBreaking changes\n------------------\n\nDepreceations\n-------------\n\n\nBug fixes and small changes\n---------------------------\n\nExperimental\n------------\n\nRequirement changes\n-------------------\n\nThanks\n------\n\n0.5.1 (24.04.2020)\n==================\n(0.5.0 was skipped)\n\nComplete refactoring of Spaces to allow arbitrary function.\nNew, more consistent behavior with extended PDFs.\nSumPDF refactoring, more explicit handling of fracs and yields.\nImproved graph building allowing for more fine-grained control of tracing.\nStabilized minimization including a push-back for NaNs.\n\n\n\nMajor Features and Improvements\n-------------------------------\n- Arbitrary limits as well as vectorization (experimental)\n  are now fully supported. The new `Space` has an additional argument for a function that\n  tests if a vector x is inside.\n\n  To test if a value is inside a space, `Space.inside` can be used. To filter values, `Space.filter`.\n\n  The limits returned are now by default numpy arrays with the shape (1, n_obs). This corresponds well\n  to the old layout and can, using `z.unstack_x(lower)` be treated like `Data`. This has also some\n  consequences for the output format of `rect_area`: this is now a vector.\n\n  Due to the ambiguity of the name `limits`, `area` etc (since they do only reflect the rectangular case)\n  method with leading `rect_*` have been added (`rect_limits`, `rect_area` etc.) and are encouraged to be used.\n\n- Extending a PDF is more straightforward and removes any \"magic\". The philosophy is: a PDF can be extended\n  or not. But it does not change the fundamental behavior of functions.\n\n- SumPDF has been refactored and behaves now as follows:\n  Giving in pdfs (extended or not or mixed) *and* fracs (either length pdfs or one less) will create a\n  non-extended SumPDF using the fracs. The fact that the pdfs are maybe extended is ignored.\n  This will lead to highly consistent behavior.\n  If the number of fracs given equals the number of pdfs, it is up to the user (currently) to take care of\n  the normalization.\n  *Only* if *all* pdfs are extended **and** no fracs are given, the sumpdf will be using the yields as\n  normalized fracs and be extended.\n\n- Improved graph building and `z.function`\n\n  * the `z.function` can now, as with `tf.function`, be used either as a decorator without arguments or as a decorator with arguments. They are the same as in `tf.function`, except of a few additional ones.\n  * `zfit.run.set_mode` allows to set the policy for whether everything is run in eager mode (`graph=False`),\n    everything in graph, or most of it (`graph=True`) or an optimized variant, doing graph building only with\n    losses but not just models (e.g. `pdf` won't trigger a graph build, `loss.value()` will) with `graph='auto'`.\n  * The graph cache can be cleaned manually using `zfit.run.clear_graph_cache()` in order to prevent slowness\n    in repeated tasks.\n\n- Switch for numerical gradients has been added as well in `zfit.run.set_mode(autograd=True/False)`.\n- Resetting to the default can be done with `zfit.run.set_mode_default()`\n- Improved stability of minimizer by adding penalty (currently in `Minuit`) as default. To have a\n  better behavior with toys (e.g. never fail on NaNs but return an invalid `FitResult`), use the\n  `DefaultToyStrategy` in `zfit.mnimize`.\n- Exceptions are now publicly available in `zfit.exception`\n- Added nice printout for `FitResult` and `FitResult.params`.\n- `get_params` is now more meaningful, returning by default all independent parameters of the pdf, including yields.\n  Arguments (`floating`, `is_yield`) allow for more fine-grained control.\n\nBreaking changes\n------------------\n- Multiple limits are now handled by a MultiSpace class. Each Space has only \"one limit\"\n  and no complicated layout has to be remembered. If you want to have a space that is\n  defined in disconnected regions, use the `+` operator or functionally `zfit.dimension.add_spaces`\n\n  To extract limits from multiple limits, `MultiSpace` and `Space` are both iterables, returning\n  the containing spaces respectively itself (for the `Space` case).\n- SumPDF changed in the behavior. Read above in the Major Features and Improvement.\n- Integrals of extended PDFs are not extended anymore, but `ext_integrate` now returns the\n  integral multiplied by the yield.\n\nDepreceations\n-------------\n- `ComposedParameter` takes now `params` instead of `dependents` as argument, it acts now as\n  the arguments to the `value_fn`. To stay future compatible, create e.g. `def value_fn(p1, pa2)`\n  and using `params = ['param1, param2]`, `value_fn` will then be called as `value_fn(param1, parma2)`.\n  `value_fn` without arguments will probably break in the future.\n- `FitResult.error` has been renamed to `errors` to better reflect that multiple errors, the lower and\n  upper are returned.\n\n\nBug fixes and small changes\n---------------------------\n- fix a (nasty, rounding) bug in sampling with multiple limits\n- fix bug in numerical calculation\n- fix bug in SimplePDF\n- fix wrong caching signature may lead to graph not being rebuild\n- add `zfit.param.set_values` method that allows to set the values of multiple\n  parameters with one command. Can, as the `set_value` method be used with a context manager.\n- wrong size of weights when applying cuts in a dataset\n- `with_coords` did drop axes/obs\n- Fix function not traced when an error was raised during first trace\n- MultipleLimits support for analytic integrals\n- `zfit.param.set_values(..)` now also can use a `FitResult` as `values` argument to set the values\n  from.\n\nExperimental\n------------\n- added a new error method, 'zfit_error' that is equivalent to 'minuit_minos', but not fully\n  stable. It can be used with other minimizers as well, not only Minuit.\n\nRequirement changes\n-------------------\n- remove the outdated typing module\n- add tableformatter, colored, colorama for colored table printout\n\nThanks\n------\n- Johannes Lade for code review and discussions.\n- Hans Dembinski for useful inputs to the uncertainties.\n\n0.4.3 (11.3.2020)\n=================\n\n\nMajor Features and Improvements\n-------------------------------\n\n- refactor `hesse_np` with covariance matrix, make it available to all minimizers\n\nBehavioral changes\n------------------\n\n\nBug fixes and small changes\n---------------------------\n\n- fix bug in `hesse_np`\n\n\nRequirement changes\n-------------------\n\n\nThanks\n------\n\n\n0.4.2 (27.2.2020)\n=================\n\n\nMajor Features and Improvements\n-------------------------------\n\n- Refactoring of the Constraints, dividing into `ProbabilityConstraint` that can be\n  sampled from and more general constraints (e.g. for parameter boundaries) that\n  can not be sampled from.\n- Doc improvements in the constraints.\n- Add `hesse` error method ('hesse_np') available to all minimizers (not just Minuit).\n\n\nBehavioral changes\n------------------\n- Changed default step size to an adaptive scheme, a fraction (1e-4) of the range between the lower and upper limits.\n\n\nBug fixes and small changes\n---------------------------\n- Add `use_minuit_grad` option to Minuit optimizer to use the internal gradient, often for more stable fits\n- added experimental flag `zfit.experimental_loss_penalty_nan`, which adds a penalty to the loss in case the value is\n  nan. Can help with the optimisation. Feedback welcome!\n\nRequirement changes\n-------------------\n\n\nThanks\n------\n\n\n0.4.1 (12.1.20)\n===============\n\nRelease to keep up with TensorFlow 2.1\n\nMajor Features and Improvements\n-------------------------------\n\n- Fixed the comparison in caching the graph (implementation detail) that leads to an error.\n\n\n0.4.0 (7.1.2020)\n================\n\nThis release switched to TensorFlow 2.0 eager mode. In case this breaks things for you and you need **urgently**\na running version, install a version\n< 0.4.1. It is highly recommended to upgrade and make the small changes required.\n\nPlease read the `upgrade guide <docs/project/upgrade_guide.rst>` on a more detailed explanation how to upgrade.\n\nTensorFlow 2.0 is eager executing and uses functions to abstract the performance critical parts away.\n\n\nMajor Features and Improvements\n-------------------------------\n- Dependents (currently, and probably also in the future) need more manual tracking. This has mostly\n  an effect on CompositeParameters and SimpleLoss, which now require to specify the dependents by giving\n  the objects it depends (indirectly) on. For example, it is sufficient to give a `ComplexParameter` (which\n  itself is not independent but has dependents) to a `SimpleLoss` as dependents (assuming the loss\n  function depends on it).\n- `ComposedParameter` does no longer allow to give a Tensor but requires a function that, when evaluated,\n  returns the value. It depends on the `dependents` that are now required.\n- Added numerical differentiation, which allows now to wrap any function with `z.py_function` (`zfit.z`).\n  This can be switched on with `zfit.settings.options['numerical_grad'] = True`\n- Added gradient and hessian calculation options to the loss. Support numerical calculation as well.\n- Add caching system for graph to prevent recursive graph building\n- changed backend name to `z` and can be used as `zfit.z` or imported from it. Added:\n\n   - `function` decorator that can be used to trace a function. Respects dependencies of inputs and automatically\n     caches/invalidates the graph and recreates.\n   - `py_function`, same as `tf.py_function`, but checks and may extends in the future\n   - `math` module that contains autodiff and numerical differentiation methods, both working with tensors.\n\nBehavioral changes\n------------------\n- EDM goal of the minuit minimizer has been reduced by a factor of 10 to 10E-3 in agreement with\n  the goal in RooFits Minuit minimizer. This can be varied by specifying the tolerance.\n- known issue: the `projection_pdf` has troubles with the newest TF version and may not work properly (runs out of\n  memory)\n\n\nBug fixes and small changes\n---------------------------\n\nRequirement changes\n-------------------\n- added numdifftools (for numerical differentiation)\n\n\nThanks\n------\n\n0.3.7 (6.12.19)\n================\n\nThis is a legacy release to add some fixes, next release is TF 2 eager mode only release.\n\n\nMajor Features and Improvements\n-------------------------------\n - mostly TF 2.0 compatibility in graph mode, tests against 1.x and 2.x\n\nBehavioral changes\n------------------\n\nBug fixes and small changes\n---------------------------\n - `get_depentents` returns now an OrderedSet\n - errordef is now a (hidden) attribute and can be changed\n - fix bug in polynomials\n\n\nRequirement changes\n-------------------\n - added ordered-set\n\n0.3.6 (12.10.19)\n================\n\n**Special release for conda deployment and version fix (TF 2.0 is out)**\n\n**This is the last release before breaking changes occur**\n\n\nMajor Features and Improvements\n-------------------------------\n - added ConstantParameter and `zfit.param` namespace\n - Available on conda-forge\n\nBehavioral changes\n------------------\n - an implicitly created parameter with a Python numerical (e.g. when instantiating a model)\n   will be converted to a ConstantParameter instead of a fixed Parameter and therefore\n   cannot be set to floating later on.\n\nBug fixes and small changes\n---------------------------\n - added native support TFP distributions for analytic sampling\n - fix Gaussian (TFP Distribution) Constraint with mixed up order of parameters\n\n - `from_numpy` automatically converts to default float regardless the original numpy dtype,\n   `dtype` has to be used as an explicit argument\n\n\nRequirement changes\n-------------------\n - TensorFlow >= 1.14 is required\n\n\nThanks\n------\n - Chris Burr for the conda-forge deployment\n\n\n0.3.4 (30-07-19)\n================\n\n**This is the last release before breaking changes occur**\n\nMajor Features and Improvements\n-------------------------------\n- create `Constraint` class which allows for more fine grained control and information on the applied constraints.\n- Added Polynomial models\n- Improved and fixed sampling (can still be slightly biased)\n\nBehavioral changes\n------------------\nNone\n\nBug fixes and small changes\n---------------------------\n\n- fixed various small bugs\n\nThanks\n------\nfor the contribution of the Constraints to Matthieu Marinangeli <matthieu.marinangeli@cern.ch>\n\n\n\n0.3.3 (15-05-19)\n================\n\nFixed Partial numeric integration\n\nBugfixes mostly, a few major fixes. Partial numeric integration works now.\n\nBugfixes\n - data_range cuts are now applied correctly, also in several dimensions when a subset is selected\n   (which happens internally of some Functors, e.g. ProductPDF). Before, only the selected obs was respected for cuts.\n - parital integration had a wrong take on checking limits (now uses supports).\n\n\n0.3.2 (01-05-19)\n================\n\nWith 0.3.2, bugfixes and three changes in the API/behavior\n\nBreaking changes\n----------------\n - tfp distributions wrapping is now different with dist_kwargs allowing for non-Parameter arguments (like other dists)\n - sampling allows now for importance sampling (sampler in Model specified differently)\n - `model.sample` now also returns a tensor, being consistent with `pdf` and `integrate`\n\nBugfixes\n--------\n - shape handling of tfp dists was \"wrong\" (though not producing wrong results!), fixed. TFP distributions now get a tensor with shape (nevents, nobs) instead of a list of tensors with (nevents,)\n\nImprovements\n------------\n - refactor the sampling for more flexibility and performance (less graph constructed)\n - allow to use more sophisticated importance sampling (e.g. phasespace)\n - on-the-fly normalization (experimentally) implemented with correct gradient\n\n\n\n0.3.1 (30-04-19)\n================\n\n\nMinor improvements and bugfixes including:\n\n- improved importance sampling allowing to preinstantiate objects before it's called inside the while loop\n- fixing a problem with `ztf.sqrt`\n\n\n\n0.3.0 (2019-03-20)\n==================\n\n\nBeta stage and first pip release\n\n\n0.0.1 (2018-03-22)\n==================\n\n\n- First creation of the package.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zfit/zfit", "keywords": "TensorFlow,model,fitting,scalable,HEP", "license": "BSD 3-Clause", "maintainer": "zfit", "maintainer_email": "zfit@physik.uzh.ch", "name": "zfit", "package_url": "https://pypi.org/project/zfit/", "platform": "", "project_url": "https://pypi.org/project/zfit/", "project_urls": {"Homepage": "https://github.com/zfit/zfit"}, "release_url": "https://pypi.org/project/zfit/0.5.1/", "requires_dist": ["tensorflow (>=2)", "tensorflow-probability (>=0.8)", "scipy (>=1.2)", "uproot", "pandas", "numpy (>=1.16)", "iminuit", "colorlog", "texttable", "tabulate", "colored", "colorama", "ordered-set", "numdifftools"], "requires_python": ">=3.6, <3.8", "summary": "scalable pythonic model fitting for high energy physics", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"zfit-scalable-pythonic-fitting\">\n<h2>zfit: scalable pythonic fitting</h2>\n<a href=\"https://scikit-hep.org\" rel=\"nofollow\"><img alt=\"https://scikit-hep.org/assets/images/Scikit--HEP-Affiliated-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d7bf8b2a707927fbc8449ee8e47ee5301b8170c/68747470733a2f2f7363696b69742d6865702e6f72672f6173736574732f696d616765732f5363696b69742d2d4845502d416666696c69617465642d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/zfit\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/zfit.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d76a43e184ff45161728f89d185ef3c1f799e375/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7a6669742e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/zfit\" rel=\"nofollow\"><img alt=\"conda-forge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9c08a1485aa764de8596098f167fd27f24ee913/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f7a666974\"></a>\n<a href=\"https://travis-ci.org/zfit/zfit\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/zfit/zfit.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5bf9511708c0afa949997afe601addca15d44953/68747470733a2f2f7472617669732d63692e6f72672f7a6669742f7a6669742e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://coveralls.io/github/zfit/zfit?branch=meta_changes\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/zfit/zfit/badge.svg?branch=meta_changes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0452299a172e3300c23c87f067ec2f9d1f67e618/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7a6669742f7a6669742f62616467652e7376673f6272616e63683d6d6574615f6368616e676573\"></a>\n<a href=\"https://www.codefactor.io/repository/github/zfit/zfit\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a24bb6256dded01dc0b9a9291d1c8528e68e6cd/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a6669742f7a6669742f6261646765\"></a>\n<p><a href=\"https://github.com/zfit/zfit\" rel=\"nofollow\"><img alt=\"zfit logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e57429e4f908c6916414e1221714290a1905efe7/646f63732f696d616765732f7a6669742d66696e5f343030783136382e706e67\"></a></p>\n<p>zfit is a highly scalable and customizable model manipulation and fitting library. It uses\n<a href=\"https://www.tensorflow.org/\" rel=\"nofollow\">TensorFlow</a> as its computational backend\nand is optimised for simple and direct manipulation of probability density functions. The project is affiliated with and well integrated into <a href=\"https://scikit-hep.org/\" rel=\"nofollow\">scikit-hep</a>, the HEP Python ecosystem.</p>\n<ul>\n<li><strong>Tutorials</strong>: <a href=\"https://github.com/zfit/zfit-tutorials\" rel=\"nofollow\">Interactive IPython Tutorials</a></li>\n<li><strong>Quick start</strong>: <a href=\"examples\" rel=\"nofollow\">Example scripts</a></li>\n<li><strong>Develop Documentation</strong>: Full <a href=\"https://zfit.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a> and <a href=\"https://zfit.readthedocs.io/en/latest/API.html\" rel=\"nofollow\">API</a></li>\n<li><strong>Stable Documentation</strong>: Latest <a href=\"https://zfit.readthedocs.io/en/0.5.1/\" rel=\"nofollow\">stable documentation</a></li>\n<li><strong>Questions</strong>: see the <a href=\"https://github.com/zfit/zfit/wiki/FAQ\" rel=\"nofollow\">FAQ</a>,\n<a href=\"https://stackoverflow.com/questions/ask?tags=zfit\" rel=\"nofollow\">ask on StackOverflow</a> (with the <strong>zfit</strong> tag) or <a href=\"#contact\" rel=\"nofollow\">contact</a> us directly.</li>\n<li><strong>Physics/HEP</strong>: <a href=\"https://github.com/zfit/zfit-physics\" rel=\"nofollow\">zfit-physics</a> is the place to contribute/find more HEP\nrelated content</li>\n</ul>\n<p>If you use zfit in research, please consider <a href=\"https://arxiv.org/abs/1910.13429\" rel=\"nofollow\">citing</a>.</p>\n<p><em>N.B.</em>: zfit is currently in <em>beta stage</em>, so while most core parts are established, some may still be missing and bugs may be encountered.\nIt is, however, mostly ready for production, and is being used in analyses projects.\nIf you want to use it for your project and you are not sure if all the needed functionality is there, feel free to <a href=\"#contact\" rel=\"nofollow\">contact</a>.</p>\n<div id=\"why\">\n<h3>Why?</h3>\n<p>The basic idea behind zfit is to offer a Python oriented alternative to the very successful RooFit library from the <a href=\"https://root.cern.ch/\" rel=\"nofollow\">ROOT</a> data analysis package that can integrate with the other packages that are part if the scientific Python ecosystem.\nContrary to the monolithic approach of ROOT/RooFit, the aim of zfit is to be light and flexible enough to integrate with any state-of-art tools and to allow scalability going to larger datasets.</p>\n<p>These core ideas are supported by two basic pillars:</p>\n<ul>\n<li>The skeleton and extension of the code is minimalist, simple and finite:\nthe zfit library is exclusively designed for the purpose of model fitting and sampling with no attempt to extend its functionalities to features such as statistical methods or plotting.</li>\n<li>zfit is designed for optimal parallelisation and scalability by making use of TensorFlow as its backend.\nThe use of TensorFlow provides crucial features in the context of model fitting like taking care of the parallelisation and analytic derivatives.</li>\n</ul>\n</div>\n<div id=\"how-to-use\">\n<h3>How to use</h3>\n<p>While the zfit library provides a model fitting and sampling framework for a broad list of applications,\nwe will illustrate its main features with a simple example by fitting a Gaussian distribution with an unbinned\nlikelihood fit and a parameter uncertainty estimation.</p>\n<div id=\"example-in-short\">\n<h4>Example in short</h4>\n<pre><span class=\"n\">obs</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Space</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">limits</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># create the model</span>\n<span class=\"n\">mu</span>    <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s2\">\"mu\"</span>   <span class=\"p\">,</span> <span class=\"mf\">2.4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s2\">\"sigma\"</span><span class=\"p\">,</span> <span class=\"mf\">1.3</span><span class=\"p\">,</span>  <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">gauss</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"o\">.</span><span class=\"n\">Gauss</span><span class=\"p\">(</span><span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">mu</span><span class=\"o\">=</span><span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"n\">sigma</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># load the data</span>\n<span class=\"n\">data_np</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"o\">.</span><span class=\"n\">from_numpy</span><span class=\"p\">(</span><span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"o\">=</span><span class=\"n\">data_np</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># build the loss</span>\n<span class=\"n\">nll</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">UnbinnedNLL</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">gauss</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># minimize</span>\n<span class=\"n\">minimizer</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"o\">.</span><span class=\"n\">Minuit</span><span class=\"p\">()</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">minimizer</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">nll</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># calculate errors</span>\n<span class=\"n\">param_errors</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">()</span>\n</pre>\n<p>This follows the zfit workflow</p>\n<img alt=\"zfit workflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/072a734660b4c0d294d2d46357bbda686012f12f/646f63732f696d616765732f7a6669745f776f726b666c6f775f76312e706e67\">\n</div>\n<div id=\"full-explanation\">\n<h4>Full explanation</h4>\n<p>The default space (e.g. normalization range) of a PDF is defined by an <em>observable space</em>, which is created using the <tt>zfit.Space</tt> class:</p>\n<pre><span class=\"n\">obs</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Space</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">limits</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<p>To create a simple Gaussian PDF, we define its parameters and their limits using the <tt>zfit.Parameter</tt> class.</p>\n<pre><span class=\"c1\"># syntax: zfit.Parameter(\"any_name\", value, lower, upper)</span>\n  <span class=\"n\">mu</span>    <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s2\">\"mu\"</span>   <span class=\"p\">,</span> <span class=\"mf\">2.4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n  <span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s2\">\"sigma\"</span><span class=\"p\">,</span> <span class=\"mf\">1.3</span><span class=\"p\">,</span>  <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n  <span class=\"n\">gauss</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"o\">.</span><span class=\"n\">Gauss</span><span class=\"p\">(</span><span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">mu</span><span class=\"o\">=</span><span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"n\">sigma</span><span class=\"p\">)</span>\n</pre>\n<p>For simplicity, we create the dataset to be fitted starting from a numpy array, but zfit allows for the use of other sources such as ROOT files:</p>\n<pre><span class=\"n\">mu_true</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">sigma_true</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">data_np</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">mu_true</span><span class=\"p\">,</span> <span class=\"n\">sigma_true</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">Data</span><span class=\"o\">.</span><span class=\"n\">from_numpy</span><span class=\"p\">(</span><span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"o\">=</span><span class=\"n\">data_np</span><span class=\"p\">)</span>\n</pre>\n<p>Fits are performed in three steps:</p>\n<ol>\n<li>Creation of a loss function, in our case a negative log-likelihood.</li>\n<li>Instantiation of our minimiser of choice, in the example the <tt>Minuit</tt>.</li>\n<li>Minimisation of the loss function.</li>\n</ol>\n<pre><span class=\"c1\"># Stage 1: create an unbinned likelihood with the given PDF and dataset</span>\n<span class=\"n\">nll</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">UnbinnedNLL</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">gauss</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Stage 2: instantiate a minimiser (in this case a basic minuit)</span>\n<span class=\"n\">minimizer</span> <span class=\"o\">=</span> <span class=\"n\">zfit</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"o\">.</span><span class=\"n\">Minuit</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Stage 3: minimise the given negative log-likelihood</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">minimizer</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">nll</span><span class=\"p\">)</span>\n</pre>\n<p>Errors are calculated with a further function call to avoid running potentially expensive operations if not needed:</p>\n<pre><span class=\"n\">param_errors</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">()</span>\n</pre>\n<p>Once we\u2019ve performed the fit and obtained the corresponding uncertainties, we can examine the fit results:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Function minimum:\"</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">fmin</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Converged:\"</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">converged</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Full minimizer information:\"</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Information on all the parameters in the fit</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">params</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Printing information on specific parameters, e.g. mu</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"mu=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"n\">mu</span><span class=\"p\">][</span><span class=\"s1\">'value'</span><span class=\"p\">]))</span>\n</pre>\n<p>And that\u2019s it!\nFor more details and information of what you can do with zfit, checkout the <a href=\"https://zfit.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a>.</p>\n</div>\n</div>\n<div id=\"prerequisites\">\n<h3>Prerequisites</h3>\n<p><tt>zfit</tt> works with Python versions 3.6 and 3.7.\nThe following packages (amongst others) are required:</p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/\" rel=\"nofollow\">tensorflow</a> &gt;= 2.x</li>\n<li><a href=\"https://www.tensorflow.org/probability\" rel=\"nofollow\">tensorflow_probability</a></li>\n<li><a href=\"https://www.scipy.org/\" rel=\"nofollow\">scipy</a> &gt;=1.2</li>\n<li><a href=\"https://github.com/scikit-hep/uproot\" rel=\"nofollow\">uproot</a></li>\n<li><a href=\"https://github.com/scikit-hep/iminuit\" rel=\"nofollow\">iminuit</a></li>\n</ul>\n<p>\u2026 and some minor packages. For a full list, check the <a href=\"requirements.txt\" rel=\"nofollow\">requirements</a>.</p>\n</div>\n<div id=\"installing\">\n<h3>Installing</h3>\n<p>zfit is available on conda-forge and pip. If possible, use a conda or virtual environment and do:</p>\n<p>For conda:</p>\n<pre><span class=\"gp\">$</span> conda install zfit -c conda-forge\n</pre>\n<p>For pip (if you don\u2019t use conda):</p>\n<pre><span class=\"gp\">$</span> pip install zfit\n</pre>\n<p>For the newest development version, you can install the version from git with</p>\n<pre><span class=\"gp\">$</span> pip install git+https://github.com/zfit/zfit\n</pre>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Any idea of how to improve the library? Or interested to write some code?\nContributions are always welcome, please have a look at the <a href=\"CONTRIBUTING.rst\" rel=\"nofollow\">Contributing guide</a>.</p>\n</div>\n<div id=\"contact\">\n<h3>Contact</h3>\n<dl>\n<dt>You can contact us directly:</dt>\n<dd><ul>\n<li>via e-mail: <a href=\"mailto:zfit%40physik.uzh.ch\">zfit<span>@</span>physik<span>.</span>uzh<span>.</span>ch</a></li>\n<li>join our <a href=\"https://gitter.im/zfit/zfit\" rel=\"nofollow\">Gitter channel</a></li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"original-authors\">\n<h3>Original Authors</h3>\n<div>\n<div>Jonas Eschle &lt;<a href=\"mailto:jonas.eschle%40cern.ch\">jonas<span>.</span>eschle<span>@</span>cern<span>.</span>ch</a>&gt;</div>\n<div>Albert Puig &lt;<a href=\"mailto:albert.puig%40cern.ch\">albert<span>.</span>puig<span>@</span>cern<span>.</span>ch</a>&gt;</div>\n<div>Rafael Silva Coutinho &lt;<a href=\"mailto:rsilvaco%40cern.ch\">rsilvaco<span>@</span>cern<span>.</span>ch</a>&gt;</div>\n</div>\n<p>See here for <a href=\"AUTHORS.rst\" rel=\"nofollow\">all authors and contributors</a></p>\n</div>\n<div id=\"acknowledgements\">\n<h3>Acknowledgements</h3>\n<p>zfit has been developed with support from the University of Z\u00fcrich and the Swiss National Science Foundation (SNSF) under contracts 168169 and 174182.</p>\n<p>The idea of zfit is inspired by the <a href=\"https://gitlab.cern.ch/poluekt/TensorFlowAnalysis\" rel=\"nofollow\">TensorFlowAnalysis</a> framework developed by Anton Poluektov using the TensorFlow open source library.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"develop\">\n<h3>Develop</h3>\n<div id=\"major-features-and-improvements\">\n<h4>Major Features and Improvements</h4>\n</div>\n<div id=\"breaking-changes\">\n<h4>Breaking changes</h4>\n</div>\n<div id=\"depreceations\">\n<h4>Depreceations</h4>\n</div>\n<div id=\"bug-fixes-and-small-changes\">\n<h4>Bug fixes and small changes</h4>\n</div>\n<div id=\"experimental\">\n<h4>Experimental</h4>\n</div>\n<div id=\"requirement-changes\">\n<h4>Requirement changes</h4>\n</div>\n<div id=\"thanks\">\n<h4>Thanks</h4>\n</div>\n</div>\n<div id=\"id2\">\n<h3>0.5.1 (24.04.2020)</h3>\n<p>(0.5.0 was skipped)</p>\n<p>Complete refactoring of Spaces to allow arbitrary function.\nNew, more consistent behavior with extended PDFs.\nSumPDF refactoring, more explicit handling of fracs and yields.\nImproved graph building allowing for more fine-grained control of tracing.\nStabilized minimization including a push-back for NaNs.</p>\n<div id=\"id3\">\n<h4>Major Features and Improvements</h4>\n<ul>\n<li><p>Arbitrary limits as well as vectorization (experimental)\nare now fully supported. The new <cite>Space</cite> has an additional argument for a function that\ntests if a vector x is inside.</p>\n<p>To test if a value is inside a space, <cite>Space.inside</cite> can be used. To filter values, <cite>Space.filter</cite>.</p>\n<p>The limits returned are now by default numpy arrays with the shape (1, n_obs). This corresponds well\nto the old layout and can, using <cite>z.unstack_x(lower)</cite> be treated like <cite>Data</cite>. This has also some\nconsequences for the output format of <cite>rect_area</cite>: this is now a vector.</p>\n<p>Due to the ambiguity of the name <cite>limits</cite>, <cite>area</cite> etc (since they do only reflect the rectangular case)\nmethod with leading <cite>rect_*</cite> have been added (<cite>rect_limits</cite>, <cite>rect_area</cite> etc.) and are encouraged to be used.</p>\n</li>\n<li><p>Extending a PDF is more straightforward and removes any \u201cmagic\u201d. The philosophy is: a PDF can be extended\nor not. But it does not change the fundamental behavior of functions.</p>\n</li>\n<li><p>SumPDF has been refactored and behaves now as follows:\nGiving in pdfs (extended or not or mixed) <em>and</em> fracs (either length pdfs or one less) will create a\nnon-extended SumPDF using the fracs. The fact that the pdfs are maybe extended is ignored.\nThis will lead to highly consistent behavior.\nIf the number of fracs given equals the number of pdfs, it is up to the user (currently) to take care of\nthe normalization.\n<em>Only</em> if <em>all</em> pdfs are extended <strong>and</strong> no fracs are given, the sumpdf will be using the yields as\nnormalized fracs and be extended.</p>\n</li>\n<li><p>Improved graph building and <cite>z.function</cite></p>\n<ul>\n<li>the <cite>z.function</cite> can now, as with <cite>tf.function</cite>, be used either as a decorator without arguments or as a decorator with arguments. They are the same as in <cite>tf.function</cite>, except of a few additional ones.</li>\n<li><cite>zfit.run.set_mode</cite> allows to set the policy for whether everything is run in eager mode (<cite>graph=False</cite>),\neverything in graph, or most of it (<cite>graph=True</cite>) or an optimized variant, doing graph building only with\nlosses but not just models (e.g. <cite>pdf</cite> won\u2019t trigger a graph build, <cite>loss.value()</cite> will) with <cite>graph=\u2019auto\u2019</cite>.</li>\n<li>The graph cache can be cleaned manually using <cite>zfit.run.clear_graph_cache()</cite> in order to prevent slowness\nin repeated tasks.</li>\n</ul>\n</li>\n<li><p>Switch for numerical gradients has been added as well in <cite>zfit.run.set_mode(autograd=True/False)</cite>.</p>\n</li>\n<li><p>Resetting to the default can be done with <cite>zfit.run.set_mode_default()</cite></p>\n</li>\n<li><p>Improved stability of minimizer by adding penalty (currently in <cite>Minuit</cite>) as default. To have a\nbetter behavior with toys (e.g. never fail on NaNs but return an invalid <cite>FitResult</cite>), use the\n<cite>DefaultToyStrategy</cite> in <cite>zfit.mnimize</cite>.</p>\n</li>\n<li><p>Exceptions are now publicly available in <cite>zfit.exception</cite></p>\n</li>\n<li><p>Added nice printout for <cite>FitResult</cite> and <cite>FitResult.params</cite>.</p>\n</li>\n<li><p><cite>get_params</cite> is now more meaningful, returning by default all independent parameters of the pdf, including yields.\nArguments (<cite>floating</cite>, <cite>is_yield</cite>) allow for more fine-grained control.</p>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>Breaking changes</h4>\n<ul>\n<li><p>Multiple limits are now handled by a MultiSpace class. Each Space has only \u201cone limit\u201d\nand no complicated layout has to be remembered. If you want to have a space that is\ndefined in disconnected regions, use the <cite>+</cite> operator or functionally <cite>zfit.dimension.add_spaces</cite></p>\n<p>To extract limits from multiple limits, <cite>MultiSpace</cite> and <cite>Space</cite> are both iterables, returning\nthe containing spaces respectively itself (for the <cite>Space</cite> case).</p>\n</li>\n<li><p>SumPDF changed in the behavior. Read above in the Major Features and Improvement.</p>\n</li>\n<li><p>Integrals of extended PDFs are not extended anymore, but <cite>ext_integrate</cite> now returns the\nintegral multiplied by the yield.</p>\n</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h4>Depreceations</h4>\n<ul>\n<li><cite>ComposedParameter</cite> takes now <cite>params</cite> instead of <cite>dependents</cite> as argument, it acts now as\nthe arguments to the <cite>value_fn</cite>. To stay future compatible, create e.g. <cite>def value_fn(p1, pa2)</cite>\nand using <cite>params = [\u2018param1, param2]</cite>, <cite>value_fn</cite> will then be called as <cite>value_fn(param1, parma2)</cite>.\n<cite>value_fn</cite> without arguments will probably break in the future.</li>\n<li><cite>FitResult.error</cite> has been renamed to <cite>errors</cite> to better reflect that multiple errors, the lower and\nupper are returned.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>Bug fixes and small changes</h4>\n<ul>\n<li>fix a (nasty, rounding) bug in sampling with multiple limits</li>\n<li>fix bug in numerical calculation</li>\n<li>fix bug in SimplePDF</li>\n<li>fix wrong caching signature may lead to graph not being rebuild</li>\n<li>add <cite>zfit.param.set_values</cite> method that allows to set the values of multiple\nparameters with one command. Can, as the <cite>set_value</cite> method be used with a context manager.</li>\n<li>wrong size of weights when applying cuts in a dataset</li>\n<li><cite>with_coords</cite> did drop axes/obs</li>\n<li>Fix function not traced when an error was raised during first trace</li>\n<li>MultipleLimits support for analytic integrals</li>\n<li><cite>zfit.param.set_values(..)</cite> now also can use a <cite>FitResult</cite> as <cite>values</cite> argument to set the values\nfrom.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4>Experimental</h4>\n<ul>\n<li>added a new error method, \u2018zfit_error\u2019 that is equivalent to \u2018minuit_minos\u2019, but not fully\nstable. It can be used with other minimizers as well, not only Minuit.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h4>Requirement changes</h4>\n<ul>\n<li>remove the outdated typing module</li>\n<li>add tableformatter, colored, colorama for colored table printout</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h4>Thanks</h4>\n<ul>\n<li>Johannes Lade for code review and discussions.</li>\n<li>Hans Dembinski for useful inputs to the uncertainties.</li>\n</ul>\n</div>\n</div>\n<div id=\"id10\">\n<h3>0.4.3 (11.3.2020)</h3>\n<div id=\"id11\">\n<h4>Major Features and Improvements</h4>\n<ul>\n<li>refactor <cite>hesse_np</cite> with covariance matrix, make it available to all minimizers</li>\n</ul>\n</div>\n<div id=\"behavioral-changes\">\n<h4>Behavioral changes</h4>\n</div>\n<div id=\"id12\">\n<h4>Bug fixes and small changes</h4>\n<ul>\n<li>fix bug in <cite>hesse_np</cite></li>\n</ul>\n</div>\n<div id=\"id13\">\n<h4>Requirement changes</h4>\n</div>\n<div id=\"id14\">\n<h4>Thanks</h4>\n</div>\n</div>\n<div id=\"id15\">\n<h3>0.4.2 (27.2.2020)</h3>\n<div id=\"id16\">\n<h4>Major Features and Improvements</h4>\n<ul>\n<li>Refactoring of the Constraints, dividing into <cite>ProbabilityConstraint</cite> that can be\nsampled from and more general constraints (e.g. for parameter boundaries) that\ncan not be sampled from.</li>\n<li>Doc improvements in the constraints.</li>\n<li>Add <cite>hesse</cite> error method (\u2018hesse_np\u2019) available to all minimizers (not just Minuit).</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h4>Behavioral changes</h4>\n<ul>\n<li>Changed default step size to an adaptive scheme, a fraction (1e-4) of the range between the lower and upper limits.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h4>Bug fixes and small changes</h4>\n<ul>\n<li>Add <cite>use_minuit_grad</cite> option to Minuit optimizer to use the internal gradient, often for more stable fits</li>\n<li>added experimental flag <cite>zfit.experimental_loss_penalty_nan</cite>, which adds a penalty to the loss in case the value is\nnan. Can help with the optimisation. Feedback welcome!</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h4>Requirement changes</h4>\n</div>\n<div id=\"id20\">\n<h4>Thanks</h4>\n</div>\n</div>\n<div id=\"id21\">\n<h3>0.4.1 (12.1.20)</h3>\n<p>Release to keep up with TensorFlow 2.1</p>\n<div id=\"id22\">\n<h4>Major Features and Improvements</h4>\n<ul>\n<li>Fixed the comparison in caching the graph (implementation detail) that leads to an error.</li>\n</ul>\n</div>\n</div>\n<div id=\"id23\">\n<h3>0.4.0 (7.1.2020)</h3>\n<p>This release switched to TensorFlow 2.0 eager mode. In case this breaks things for you and you need <strong>urgently</strong>\na running version, install a version\n&lt; 0.4.1. It is highly recommended to upgrade and make the small changes required.</p>\n<p>Please read the <cite>upgrade guide &lt;docs/project/upgrade_guide.rst&gt;</cite> on a more detailed explanation how to upgrade.</p>\n<p>TensorFlow 2.0 is eager executing and uses functions to abstract the performance critical parts away.</p>\n<div id=\"id24\">\n<h4>Major Features and Improvements</h4>\n<ul>\n<li><p>Dependents (currently, and probably also in the future) need more manual tracking. This has mostly\nan effect on CompositeParameters and SimpleLoss, which now require to specify the dependents by giving\nthe objects it depends (indirectly) on. For example, it is sufficient to give a <cite>ComplexParameter</cite> (which\nitself is not independent but has dependents) to a <cite>SimpleLoss</cite> as dependents (assuming the loss\nfunction depends on it).</p>\n</li>\n<li><p><cite>ComposedParameter</cite> does no longer allow to give a Tensor but requires a function that, when evaluated,\nreturns the value. It depends on the <cite>dependents</cite> that are now required.</p>\n</li>\n<li><p>Added numerical differentiation, which allows now to wrap any function with <cite>z.py_function</cite> (<cite>zfit.z</cite>).\nThis can be switched on with <cite>zfit.settings.options[\u2018numerical_grad\u2019] = True</cite></p>\n</li>\n<li><p>Added gradient and hessian calculation options to the loss. Support numerical calculation as well.</p>\n</li>\n<li><p>Add caching system for graph to prevent recursive graph building</p>\n</li>\n<li><p>changed backend name to <cite>z</cite> and can be used as <cite>zfit.z</cite> or imported from it. Added:</p>\n<blockquote>\n<ul>\n<li><cite>function</cite> decorator that can be used to trace a function. Respects dependencies of inputs and automatically\ncaches/invalidates the graph and recreates.</li>\n<li><cite>py_function</cite>, same as <cite>tf.py_function</cite>, but checks and may extends in the future</li>\n<li><cite>math</cite> module that contains autodiff and numerical differentiation methods, both working with tensors.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h4>Behavioral changes</h4>\n<ul>\n<li>EDM goal of the minuit minimizer has been reduced by a factor of 10 to 10E-3 in agreement with\nthe goal in RooFits Minuit minimizer. This can be varied by specifying the tolerance.</li>\n<li>known issue: the <cite>projection_pdf</cite> has troubles with the newest TF version and may not work properly (runs out of\nmemory)</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h4>Bug fixes and small changes</h4>\n</div>\n<div id=\"id27\">\n<h4>Requirement changes</h4>\n<ul>\n<li>added numdifftools (for numerical differentiation)</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h4>Thanks</h4>\n</div>\n</div>\n<div id=\"id29\">\n<h3>0.3.7 (6.12.19)</h3>\n<p>This is a legacy release to add some fixes, next release is TF 2 eager mode only release.</p>\n<div id=\"id30\">\n<h4>Major Features and Improvements</h4>\n<blockquote>\n<ul>\n<li>mostly TF 2.0 compatibility in graph mode, tests against 1.x and 2.x</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id31\">\n<h4>Behavioral changes</h4>\n</div>\n<div id=\"id32\">\n<h4>Bug fixes and small changes</h4>\n<blockquote>\n<ul>\n<li><cite>get_depentents</cite> returns now an OrderedSet</li>\n<li>errordef is now a (hidden) attribute and can be changed</li>\n<li>fix bug in polynomials</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id33\">\n<h4>Requirement changes</h4>\n<blockquote>\n<ul>\n<li>added ordered-set</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"id34\">\n<h3>0.3.6 (12.10.19)</h3>\n<p><strong>Special release for conda deployment and version fix (TF 2.0 is out)</strong></p>\n<p><strong>This is the last release before breaking changes occur</strong></p>\n<div id=\"id35\">\n<h4>Major Features and Improvements</h4>\n<blockquote>\n<ul>\n<li>added ConstantParameter and <cite>zfit.param</cite> namespace</li>\n<li>Available on conda-forge</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id36\">\n<h4>Behavioral changes</h4>\n<blockquote>\n<ul>\n<li>an implicitly created parameter with a Python numerical (e.g. when instantiating a model)\nwill be converted to a ConstantParameter instead of a fixed Parameter and therefore\ncannot be set to floating later on.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id37\">\n<h4>Bug fixes and small changes</h4>\n<blockquote>\n<ul>\n<li>added native support TFP distributions for analytic sampling</li>\n<li>fix Gaussian (TFP Distribution) Constraint with mixed up order of parameters</li>\n<li><cite>from_numpy</cite> automatically converts to default float regardless the original numpy dtype,\n<cite>dtype</cite> has to be used as an explicit argument</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id38\">\n<h4>Requirement changes</h4>\n<blockquote>\n<ul>\n<li>TensorFlow &gt;= 1.14 is required</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id39\">\n<h4>Thanks</h4>\n<blockquote>\n<ul>\n<li>Chris Burr for the conda-forge deployment</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"id40\">\n<h3>0.3.4 (30-07-19)</h3>\n<p><strong>This is the last release before breaking changes occur</strong></p>\n<div id=\"id41\">\n<h4>Major Features and Improvements</h4>\n<ul>\n<li>create <cite>Constraint</cite> class which allows for more fine grained control and information on the applied constraints.</li>\n<li>Added Polynomial models</li>\n<li>Improved and fixed sampling (can still be slightly biased)</li>\n</ul>\n</div>\n<div id=\"id42\">\n<h4>Behavioral changes</h4>\n<p>None</p>\n</div>\n<div id=\"id43\">\n<h4>Bug fixes and small changes</h4>\n<ul>\n<li>fixed various small bugs</li>\n</ul>\n</div>\n<div id=\"id44\">\n<h4>Thanks</h4>\n<p>for the contribution of the Constraints to Matthieu Marinangeli &lt;<a href=\"mailto:matthieu.marinangeli%40cern.ch\">matthieu<span>.</span>marinangeli<span>@</span>cern<span>.</span>ch</a>&gt;</p>\n</div>\n</div>\n<div id=\"id45\">\n<h3>0.3.3 (15-05-19)</h3>\n<p>Fixed Partial numeric integration</p>\n<p>Bugfixes mostly, a few major fixes. Partial numeric integration works now.</p>\n<dl>\n<dt>Bugfixes</dt>\n<dd><ul>\n<li>data_range cuts are now applied correctly, also in several dimensions when a subset is selected\n(which happens internally of some Functors, e.g. ProductPDF). Before, only the selected obs was respected for cuts.</li>\n<li>parital integration had a wrong take on checking limits (now uses supports).</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"id46\">\n<h3>0.3.2 (01-05-19)</h3>\n<p>With 0.3.2, bugfixes and three changes in the API/behavior</p>\n<div id=\"id47\">\n<h4>Breaking changes</h4>\n<blockquote>\n<ul>\n<li>tfp distributions wrapping is now different with dist_kwargs allowing for non-Parameter arguments (like other dists)</li>\n<li>sampling allows now for importance sampling (sampler in Model specified differently)</li>\n<li><cite>model.sample</cite> now also returns a tensor, being consistent with <cite>pdf</cite> and <cite>integrate</cite></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"bugfixes\">\n<h4>Bugfixes</h4>\n<blockquote>\n<ul>\n<li>shape handling of tfp dists was \u201cwrong\u201d (though not producing wrong results!), fixed. TFP distributions now get a tensor with shape (nevents, nobs) instead of a list of tensors with (nevents,)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"improvements\">\n<h4>Improvements</h4>\n<blockquote>\n<ul>\n<li>refactor the sampling for more flexibility and performance (less graph constructed)</li>\n<li>allow to use more sophisticated importance sampling (e.g. phasespace)</li>\n<li>on-the-fly normalization (experimentally) implemented with correct gradient</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"id48\">\n<h3>0.3.1 (30-04-19)</h3>\n<p>Minor improvements and bugfixes including:</p>\n<ul>\n<li>improved importance sampling allowing to preinstantiate objects before it\u2019s called inside the while loop</li>\n<li>fixing a problem with <cite>ztf.sqrt</cite></li>\n</ul>\n</div>\n<div id=\"id49\">\n<h3>0.3.0 (2019-03-20)</h3>\n<p>Beta stage and first pip release</p>\n</div>\n<div id=\"id50\">\n<h3>0.0.1 (2018-03-22)</h3>\n<ul>\n<li>First creation of the package.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7110718, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "9934b7195f8836837e591f3c2f3b87fe", "sha256": "4abb14c5be14aee86fc959d7a8f179838c3395a9fe77c857a0933bbecd38b501"}, "downloads": -1, "filename": "zfit-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9934b7195f8836837e591f3c2f3b87fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 116223, "upload_time": "2019-04-01T08:43:40", "upload_time_iso_8601": "2019-04-01T08:43:40.010296Z", "url": "https://files.pythonhosted.org/packages/06/e0/e926d68ce03e515c695fb69db3cb64d64b8a363469808dde1cb30e296269/zfit-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d0086a3715e36d103d9afd2080eb0c5", "sha256": "7b0ff06746ba379b33e87b3bbcc78647bf901eed79058c7f3cb6ed24e7f5a235"}, "downloads": -1, "filename": "zfit-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4d0086a3715e36d103d9afd2080eb0c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 120663, "upload_time": "2019-04-01T08:43:41", "upload_time_iso_8601": "2019-04-01T08:43:41.687162Z", "url": "https://files.pythonhosted.org/packages/aa/26/38f5054bf2daffa77ef15a4416209a23873566a66462aea826917eff27c9/zfit-0.2.0.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b11b658a7903f2444f0abca239ab6abd", "sha256": "ea551e0f2734d3bb16eba9e32b9b40774ca9ff25ef26461381fdf9ddf983268c"}, "downloads": -1, "filename": "zfit-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b11b658a7903f2444f0abca239ab6abd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 116222, "upload_time": "2019-03-21T03:30:37", "upload_time_iso_8601": "2019-03-21T03:30:37.214432Z", "url": "https://files.pythonhosted.org/packages/af/99/8838fd29dfc624d0beb5496b45eda1abf0d6dc21d690f5bc2f5196ec4551/zfit-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73fb50ab58ac3bab48e38370616fa6bd", "sha256": "0575683b712ce74c729f9fceaa7836dcb8844713d29d582c8638742c6e923fb3"}, "downloads": -1, "filename": "zfit-0.2.3.tar.gz", "has_sig": false, "md5_digest": "73fb50ab58ac3bab48e38370616fa6bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 120670, "upload_time": "2019-03-21T03:30:38", "upload_time_iso_8601": "2019-03-21T03:30:38.828716Z", "url": "https://files.pythonhosted.org/packages/c1/34/60e18a8f5dbc46e6f3f70b3c956e7796f0249844778d1442256a6921f88d/zfit-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "46e0267c0ae277d8278be5cba1abf836", "sha256": "3a6021a29bf4ed7cc7c28e4e87e1590c024ab9f155d431c2a29fe45a9e8a6b6a"}, "downloads": -1, "filename": "zfit-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46e0267c0ae277d8278be5cba1abf836", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 118844, "upload_time": "2019-03-21T18:27:50", "upload_time_iso_8601": "2019-03-21T18:27:50.208239Z", "url": "https://files.pythonhosted.org/packages/fc/54/bebc0d749bbd3a11f1ea8c13c8e28eed5718a111a242defedab40ac0b118/zfit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52996c9313231262292471f3d68ebb8c", "sha256": "bbe6d7df1f59da205b5c22d6776044ec2781a643ca0f98e39c9a320b22c5fc45"}, "downloads": -1, "filename": "zfit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "52996c9313231262292471f3d68ebb8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 162415, "upload_time": "2019-03-21T18:27:51", "upload_time_iso_8601": "2019-03-21T18:27:51.661986Z", "url": "https://files.pythonhosted.org/packages/3e/09/e4caeea0b479cd8c51edd3e548145ad222b01e288267365ef1744f57dd8f/zfit-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0e52c0c35f893c5b59b1964a4061d9df", "sha256": "f6d047d751e18b557532a9d937f23dac23179f8295f2111d1985ddf2638dfd65"}, "downloads": -1, "filename": "zfit-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e52c0c35f893c5b59b1964a4061d9df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 120033, "upload_time": "2019-03-30T12:53:09", "upload_time_iso_8601": "2019-03-30T12:53:09.094417Z", "url": "https://files.pythonhosted.org/packages/59/94/8c763e509658a39d68c799bfc92df5ac5a0ea56bbf752c2533fc564b48a2/zfit-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "042dbe2d681f7ce2614fb921ded489b5", "sha256": "77e97b8554a71c164a95a402e11917eefadbd4dcc06bfea82999f2bd4ad10754"}, "downloads": -1, "filename": "zfit-0.3.1.tar.gz", "has_sig": false, "md5_digest": "042dbe2d681f7ce2614fb921ded489b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 162890, "upload_time": "2019-03-30T12:53:10", "upload_time_iso_8601": "2019-03-30T12:53:10.838431Z", "url": "https://files.pythonhosted.org/packages/1c/3b/f3b322d85093562bcd0d49c6a023e2b5b450a62f8a22c964f8090c5b37c8/zfit-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "aaf961fde10c5325a25a039d23649fb3", "sha256": "9a709295330c9e842aa6e56fea3f1559413d9833ac95b31a61486722631bb76d"}, "downloads": -1, "filename": "zfit-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aaf961fde10c5325a25a039d23649fb3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 127930, "upload_time": "2019-05-01T12:45:55", "upload_time_iso_8601": "2019-05-01T12:45:55.035220Z", "url": "https://files.pythonhosted.org/packages/20/67/de9330b80f5ace8f0d13f2c555e1544ba64cf2cf8971d394825b4a914da2/zfit-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "143af3586835373b873af84514e4e343", "sha256": "9de7523ae85e76b164a88eed4b3977f135c85eb42d3e0ff665934f085bfff642"}, "downloads": -1, "filename": "zfit-0.3.2.tar.gz", "has_sig": false, "md5_digest": "143af3586835373b873af84514e4e343", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 172568, "upload_time": "2019-05-01T12:45:56", "upload_time_iso_8601": "2019-05-01T12:45:56.580344Z", "url": "https://files.pythonhosted.org/packages/3b/a7/4f6a1449d4d529d0e271f3e0c0a91aacc45c65205ba65936e368e8f8478e/zfit-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "5bbdcbcde141f381200a0d4423af85fb", "sha256": "8dc374b5bbd971ddb4541b8e2cf95e5e54c876e5d8325cddfb25cc7f8b27ff65"}, "downloads": -1, "filename": "zfit-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5bbdcbcde141f381200a0d4423af85fb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 128545, "upload_time": "2019-05-15T09:07:21", "upload_time_iso_8601": "2019-05-15T09:07:21.108903Z", "url": "https://files.pythonhosted.org/packages/27/73/0a2dd4df5955a3070044d39f89d73ba81360faf66a43b842c398a11ed063/zfit-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54c61158e8f3ed9fa60af3558d30d59b", "sha256": "0f59608ec4ba0b4bcb52ba12bee133cd234de137d905d221422fcf1e9e9425ce"}, "downloads": -1, "filename": "zfit-0.3.3.tar.gz", "has_sig": false, "md5_digest": "54c61158e8f3ed9fa60af3558d30d59b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 173952, "upload_time": "2019-05-15T09:07:23", "upload_time_iso_8601": "2019-05-15T09:07:23.032254Z", "url": "https://files.pythonhosted.org/packages/be/e6/2c0de02655512f7fb893274c60c06a97658a31b63768240ee371bce27c44/zfit-0.3.3.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "7d0bd907c1b55fa9581446dbc8b7a053", "sha256": "1b2af724c95ede520c50bee225fd2e2bc42852cf97c1757490840925011ee377"}, "downloads": -1, "filename": "zfit-0.3.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d0bd907c1b55fa9581446dbc8b7a053", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 137364, "upload_time": "2019-07-31T13:19:07", "upload_time_iso_8601": "2019-07-31T13:19:07.111626Z", "url": "https://files.pythonhosted.org/packages/81/97/9d9727d6673f1dc12e287d80c370627b0f18c4b268f22c70e1148269b189/zfit-0.3.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee53d894721bdb44a76d642c0ee2ab41", "sha256": "2b86934ce096d45360dc637e375e28411ec086f6c63b1811ffe62b2672790f6f"}, "downloads": -1, "filename": "zfit-0.3.5.tar.gz", "has_sig": false, "md5_digest": "ee53d894721bdb44a76d642c0ee2ab41", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 228923, "upload_time": "2019-07-31T13:19:08", "upload_time_iso_8601": "2019-07-31T13:19:08.939327Z", "url": "https://files.pythonhosted.org/packages/93/7d/f330526efd303e0424e1d220c0f89afeb312430f56b11d1cdc9b7c02fff1/zfit-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "3620c166c5fa50b91e81c6093b8c28c6", "sha256": "ace00ff965574026034bce9c9b17d92a50efc1808a925daa476631a7c823e642"}, "downloads": -1, "filename": "zfit-0.3.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3620c166c5fa50b91e81c6093b8c28c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 139684, "upload_time": "2019-10-12T20:25:04", "upload_time_iso_8601": "2019-10-12T20:25:04.353160Z", "url": "https://files.pythonhosted.org/packages/f5/69/1501f47b35636c0ceca5f756c7cee429d36fe96739a77459e25861b67e3e/zfit-0.3.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "842c7026f4b881f0ba4c8a8a72eb623e", "sha256": "26e76eb100c95ed52241f3b552d7dd16f59091a83f5e01b263f6fa9f12b30cfe"}, "downloads": -1, "filename": "zfit-0.3.6.tar.gz", "has_sig": false, "md5_digest": "842c7026f4b881f0ba4c8a8a72eb623e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 241562, "upload_time": "2019-10-12T20:25:06", "upload_time_iso_8601": "2019-10-12T20:25:06.730800Z", "url": "https://files.pythonhosted.org/packages/f1/d1/1606cf1a526fefaf570b3cdaa52d336df60f27f4caced27ff43326cf8f35/zfit-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "8e46f1b0b9ce45ef9617168d633d73c4", "sha256": "762ef7e45416a54eda39fa5b2a398f8533b2a4df08beb881411b2b10e5d29b27"}, "downloads": -1, "filename": "zfit-0.3.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e46f1b0b9ce45ef9617168d633d73c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 140277, "upload_time": "2019-12-06T16:21:50", "upload_time_iso_8601": "2019-12-06T16:21:50.754805Z", "url": "https://files.pythonhosted.org/packages/1b/a4/434311d9ad74cd03e1f9f40a04c0385228018416e9cafb507eb8c4d5317f/zfit-0.3.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db488fe9e99858601d9f0be14e4319f4", "sha256": "41335512a3a751b23d950866dd503c03c883fca2577461239b049ea90a2e176b"}, "downloads": -1, "filename": "zfit-0.3.7.tar.gz", "has_sig": false, "md5_digest": "db488fe9e99858601d9f0be14e4319f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 242793, "upload_time": "2019-12-06T16:21:53", "upload_time_iso_8601": "2019-12-06T16:21:53.114798Z", "url": "https://files.pythonhosted.org/packages/72/83/8fe5091a1e446dffad9fcf4b068c2c944150b329c85ce85e385cb1356385/zfit-0.3.7.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "10192579524ea4c99e17934572f62ec3", "sha256": "46e325f73e544395084a828ff5807b084c5e387b40fba48355d38d3b17f98863"}, "downloads": -1, "filename": "zfit-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "10192579524ea4c99e17934572f62ec3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 147194, "upload_time": "2020-01-06T23:16:50", "upload_time_iso_8601": "2020-01-06T23:16:50.845299Z", "url": "https://files.pythonhosted.org/packages/6e/9e/eb03eddcad20b8d58309ef47251eaa45e5a3297ea887709df06e5161e1bd/zfit-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3f2175875e99da3e1bb11aa413b9f76", "sha256": "a9d7f226080ef00693b5307abd45d05458a64bff4d575f4bb0a524dcfd441c52"}, "downloads": -1, "filename": "zfit-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d3f2175875e99da3e1bb11aa413b9f76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 251924, "upload_time": "2020-01-06T23:16:52", "upload_time_iso_8601": "2020-01-06T23:16:52.593644Z", "url": "https://files.pythonhosted.org/packages/fd/8f/b784a8ca4ec47376b5f057470a3ce88c0ff6f6260bc3c2fc34aad46f8906/zfit-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "d481b27be39708c251874835334205ff", "sha256": "1180dc73d42b9629eed5ef21ebc0ace5a4425a857bbc3c46fc739d2a2c2bb483"}, "downloads": -1, "filename": "zfit-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d481b27be39708c251874835334205ff", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 147361, "upload_time": "2020-01-12T15:44:08", "upload_time_iso_8601": "2020-01-12T15:44:08.884998Z", "url": "https://files.pythonhosted.org/packages/dd/0c/04899f3a9f19e119c5789340e3244e89f9e0545ac705acf7901a9a793428/zfit-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ab9781eb2cdf992477fdce8a46948ad", "sha256": "2a2aa29d504579d1c9e821fb86de52c835b4ec241227d32f28d0e1073f6586e6"}, "downloads": -1, "filename": "zfit-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7ab9781eb2cdf992477fdce8a46948ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 252339, "upload_time": "2020-01-12T15:44:11", "upload_time_iso_8601": "2020-01-12T15:44:11.207149Z", "url": "https://files.pythonhosted.org/packages/c4/cd/f79a80086597f4fa335c67982e07161b062dc05388ecb816ca94f3a31d7e/zfit-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "cc0b81dac96e0ec1f6703b03b61b1b81", "sha256": "1ce555d8298b81029dc6063f1c7c8e0fd1a7482588c24f4cf115a99ca7088910"}, "downloads": -1, "filename": "zfit-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc0b81dac96e0ec1f6703b03b61b1b81", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 149647, "upload_time": "2020-02-27T21:58:22", "upload_time_iso_8601": "2020-02-27T21:58:22.507945Z", "url": "https://files.pythonhosted.org/packages/57/26/99291f0b01d66c8fc23c151ec0999c4f48e1d2a25b0c51ca129049f3bd36/zfit-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51b78bec9e4c8293d3aaeff9ba5244a2", "sha256": "17f79e7a5d378904308884c8a647096304fdc7b9a0cc1d3a26b77d4c1880828c"}, "downloads": -1, "filename": "zfit-0.4.2.tar.gz", "has_sig": false, "md5_digest": "51b78bec9e4c8293d3aaeff9ba5244a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 326458, "upload_time": "2020-02-27T21:58:24", "upload_time_iso_8601": "2020-02-27T21:58:24.515404Z", "url": "https://files.pythonhosted.org/packages/5e/f2/cd6b00e528e68fd36d18346731b41effb9dac73682461d88dbe47da3a264/zfit-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "d5e8bc47a5b2108f8faf0f98978b6577", "sha256": "9b9a8c43a49eb7a5df6c3e7a656a090fd68a56d8697e03a7ea826f206b9ee155"}, "downloads": -1, "filename": "zfit-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d5e8bc47a5b2108f8faf0f98978b6577", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6, <3.8", "size": 149340, "upload_time": "2020-03-11T17:09:46", "upload_time_iso_8601": "2020-03-11T17:09:46.823726Z", "url": "https://files.pythonhosted.org/packages/a9/af/23a7001779630f825da4cad41555699d51d5d4d045cd8538b3fdb532d3eb/zfit-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed27e013c47ba330257fb0dabc359b01", "sha256": "6febb6cde062a0842fd833429e7ed9c1573c4bc56793ac52572cb654571593db"}, "downloads": -1, "filename": "zfit-0.4.3.tar.gz", "has_sig": false, "md5_digest": "ed27e013c47ba330257fb0dabc359b01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 327034, "upload_time": "2020-03-11T17:09:48", "upload_time_iso_8601": "2020-03-11T17:09:48.578783Z", "url": "https://files.pythonhosted.org/packages/0c/52/7c1fdc64c9a25c70659f36b023e805a6da1e38a83e5767fd5a87f30fddd7/zfit-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "ec8f5f0b9ed3df055af44ec9a1dd0da0", "sha256": "591ccb108e1a42ba2bc1461b82eac523efed97ae12b11ea6de88b4d5b421fc65"}, "downloads": -1, "filename": "zfit-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec8f5f0b9ed3df055af44ec9a1dd0da0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6, <3.8", "size": 194827, "upload_time": "2020-04-24T00:22:59", "upload_time_iso_8601": "2020-04-24T00:22:59.325924Z", "url": "https://files.pythonhosted.org/packages/f2/5b/d7ebb95192c984fcb2e0639ee70151d04d4e6245bfc9800fc6a0fc7379cf/zfit-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72bfda648b9abc04098dd402e564188e", "sha256": "f57b2ba4081862192ad955074ae6af602434a07289ec7d5614865b4ead80e194"}, "downloads": -1, "filename": "zfit-0.5.0.tar.gz", "has_sig": false, "md5_digest": "72bfda648b9abc04098dd402e564188e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 384559, "upload_time": "2020-04-24T00:23:01", "upload_time_iso_8601": "2020-04-24T00:23:01.209091Z", "url": "https://files.pythonhosted.org/packages/83/92/38556a5ddcb48987cbe57fcdd892af50004f814f779328e59e048a32dc46/zfit-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6017f2c2fa146a8bfbfc58cb0fde855b", "sha256": "fccd3839341c600343fbb7fd852bf1d2ca5d766b294a5dfbfdf011b9ce73d47f"}, "downloads": -1, "filename": "zfit-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6017f2c2fa146a8bfbfc58cb0fde855b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6, <3.8", "size": 194763, "upload_time": "2020-04-27T10:55:11", "upload_time_iso_8601": "2020-04-27T10:55:11.926077Z", "url": "https://files.pythonhosted.org/packages/65/55/f4c04deb3408689a38df85d900133d6a965854fb8a0919a8a0cb81767549/zfit-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e16e39238949042a66cf26bfe0b5b8b2", "sha256": "9c4cc52c9b8fe254582eb5ae85fa2f1a2314153538ece3dcb1385a621f5ef517"}, "downloads": -1, "filename": "zfit-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e16e39238949042a66cf26bfe0b5b8b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 384859, "upload_time": "2020-04-27T10:55:13", "upload_time_iso_8601": "2020-04-27T10:55:13.574459Z", "url": "https://files.pythonhosted.org/packages/af/28/00ac872d3baac415de319eba5c597bac90e88cb9410e17ec733ca91491ae/zfit-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6017f2c2fa146a8bfbfc58cb0fde855b", "sha256": "fccd3839341c600343fbb7fd852bf1d2ca5d766b294a5dfbfdf011b9ce73d47f"}, "downloads": -1, "filename": "zfit-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6017f2c2fa146a8bfbfc58cb0fde855b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6, <3.8", "size": 194763, "upload_time": "2020-04-27T10:55:11", "upload_time_iso_8601": "2020-04-27T10:55:11.926077Z", "url": "https://files.pythonhosted.org/packages/65/55/f4c04deb3408689a38df85d900133d6a965854fb8a0919a8a0cb81767549/zfit-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e16e39238949042a66cf26bfe0b5b8b2", "sha256": "9c4cc52c9b8fe254582eb5ae85fa2f1a2314153538ece3dcb1385a621f5ef517"}, "downloads": -1, "filename": "zfit-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e16e39238949042a66cf26bfe0b5b8b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 384859, "upload_time": "2020-04-27T10:55:13", "upload_time_iso_8601": "2020-04-27T10:55:13.574459Z", "url": "https://files.pythonhosted.org/packages/af/28/00ac872d3baac415de319eba5c597bac90e88cb9410e17ec733ca91491ae/zfit-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:12 2020"}