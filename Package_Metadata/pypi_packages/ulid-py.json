{"info": {"author": "Andrew Hawker", "author_email": "andrew.r.hawker@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# ulid\n\n[![Build Status](https://travis-ci.org/ahawker/ulid.svg?branch=master)](https://travis-ci.org/ahawker/ulid)\n[![Build Status](https://ci.appveyor.com/api/projects/status/fy0hufnb8h6gwk4d/branch/master?svg=true)](https://ci.appveyor.com/project/ahawker/ulid/branch/master)\n[![codecov](https://codecov.io/gh/ahawker/ulid/branch/master/graph/badge.svg)](https://codecov.io/gh/ahawker/ulid)\n[![Code Climate](https://codeclimate.com/github/ahawker/ulid/badges/gpa.svg)](https://codeclimate.com/github/ahawker/ulid)\n[![Issue Count](https://codeclimate.com/github/ahawker/ulid/badges/issue_count.svg)](https://codeclimate.com/github/ahawker/ulid)\n\n[![PyPI Version](https://badge.fury.io/py/ulid-py.svg)](https://badge.fury.io/py/ulid-py)\n[![PyPI Versions](https://img.shields.io/pypi/pyversions/ulid-py.svg)](https://pypi.python.org/pypi/ulid-py)\n\n[![Updates](https://pyup.io/repos/github/ahawker/ulid/shield.svg)](https://pyup.io/repos/github/ahawker/ulid/)\n\n[![Documentation Status](https://readthedocs.org/projects/ulid/badge/?version=latest)](http://ulid.readthedocs.io/en/latest/?badge=latest)\n\n[Universally Unique Lexicographically Sortable Identifier](https://github.com/alizain/ulid) in [Python 3](https://www.python.org/).\n\n### Status\n\nThis project is actively maintained.\n\n### Installation\n\nTo install ulid from [pip](https://pypi.python.org/pypi/pip):\n```bash\n    $ pip install ulid-py\n```\n\nTo install ulid from source:\n```bash\n    $ git clone git@github.com:ahawker/ulid.git\n    $ cd ulid && python setup.py install\n```\n\n### Usage\n\nCreate a brand new ULID.\n\nThe timestamp value (48-bits) is from [time.time()](https://docs.python.org/3/library/time.html?highlight=time.time#time.time) with millisecond precision.\n\nThe randomness value (80-bits) is from [os.urandom()](https://docs.python.org/3/library/os.html?highlight=os.urandom#os.urandom).\n\n```python\n>>> import ulid\n>>> ulid.new()\n<ULID('01BJQE4QTHMFP0S5J153XCFSP9')>\n```\n\nCreate a new ULID from an existing 128-bit value, such as a [UUID](https://docs.python.org/3/library/uuid.html).\n\nSupports ULID values as `int`, `bytes`, `str`, and `UUID` types.\n\n```python\n>>> import ulid, uuid\n>>> value = uuid.uuid4()\n>>> value\nUUID('0983d0a2-ff15-4d83-8f37-7dd945b5aa39')\n>>> ulid.from_uuid(value)\n<ULID('09GF8A5ZRN9P1RYDVXV52VBAHS')>\n```\n\nCreate a new ULID from an existing timestamp value, such as a [datetime](https://docs.python.org/3/library/datetime.html#module-datetime) object.\n\nSupports timestamp values as `int`, `float`, `str`, `bytes`, `bytearray`, `memoryview`, `datetime`, `Timestamp`, and `ULID` types.\n\n```python\n>>> import datetime, ulid\n>>> ulid.from_timestamp(datetime.datetime(1999, 1, 1))\n<ULID('00TM9HX0008S220A3PWSFVNFEH')>\n```\n\nCreate a new ULID from an existing randomness value.\n\nSupports randomness values as `int`, `float`, `str`, `bytes`, `bytearray`, `memoryview`, `Randomness`, and `ULID` types.\n\n```python\n>>> import os, ulid\n>>> randomness = os.urandom(10)\n>>> ulid.from_randomness(randomness)\n>>> <ULID('01BJQHX2XEDK0VN0GMYWT9JN8S')>\n```\n\nFor cases when you don't necessarily control the data type (input from external system), you can use the `parse` method\nwhich will attempt to make the correct determination for you. Please note that this will be slightly slower than creating\nthe instance from the respective `from_*` method as it needs to make a number of type/conditional checks.\n\nSupports values as `int`, `float`, `str`, `bytes`, `bytearray`, `memoryview`, `uuid.UUID`, and `ULID` types.\n\n```python\n>>> import ulid\n>>> value = db.model.get_id()  ## Unsure about datatype -- Could be int, UUID, or string?\n>>> ulid.parse(value)\n>>> <ULID('0K0EDFETFM8SH912DBBD4ABXSZ')>\n```\n\nOnce you have a ULID object, there are a number of ways to interact with it.\n\nThe `timestamp` method will give you a snapshot view of the first 48-bits of the ULID while the `randomness` method\nwill give you a snapshot of the last 80-bits.\n\n```python\n>>> import ulid\n>>> u = ulid.new()\n>>> u\n<ULID('01BJQM7SC7D5VVTG3J68ABFQ3N')>\n>>> u.timestamp()\n<Timestamp('01BJQM7SC7')>\n>>> u.randomness()\n<Randomness('D5VVTG3J68ABFQ3N')>\n```\n\nThe `ULID`, `Timestamp`, and `Randomness` classes all derive from the same base class, a `MemoryView`.\n\nA `MemoryView` provides the `str`, `int`, and `bytes` methods for changing any values representation.\n\n```python\n>>> import ulid\n>>> u = ulid.new()\n>>> u\n<ULID('01BJQMF54D093DXEAWZ6JYRPAQ')>\n>>> u.timestamp()\n<Timestamp('01BJQMF54D')>\n>>> u.timestamp().int\n1497589322893\n>>> u.timestamp().bytes\nb'\\x01\\\\\\xafG\\x94\\x8d'\n>>> u.timestamp().datetime\ndatetime.datetime(2017, 6, 16, 5, 2, 2, 893000)\n>>> u.randomness().bytes\nb'\\x02F\\xde\\xb9\\\\\\xf9\\xa5\\xecYW'\n>>> u.bytes[6:] == u.randomness().bytes\nTrue\n>>> u.str\n'01BJQMF54D093DXEAWZ6JYRPAQ'\n>>> u.int\n1810474399624548315999517391436142935\n```\n\nA `MemoryView` also provides rich comparison functionality.\n\n```python\n>>> import datetime, time, ulid\n>>> u1 = ulid.new()\n>>> time.sleep(5)\n>>> u2 = ulid.new()\n>>> u1 < u2\nTrue\n>>> u3 = ulid.from_timestamp(datetime.datetime(2039, 1, 1))\n>>> u1 < u2 < u3\nTrue\n>>> [u.timestamp().datetime for u in sorted([u2, u3, u1])]\n[datetime.datetime(2017, 6, 16, 5, 7, 14, 847000), datetime.datetime(2017, 6, 16, 5, 7, 26, 775000), datetime.datetime(2039, 1, 1, 8, 0)]\n```\n\n### Future Items\n\n* Collection of benchmarks to track performance.\n* Backport to Python 2.7?\n* See [Github Issues](https://github.com/ahawker/ulid/issues) for more!\n\n### Goals\n\nA fast implementation in pure python of the spec with binary format support.\n\n### Contributing\n\nIf you would like to contribute, simply fork the repository, push your changes and send a pull request.\nPull requests will be brought into the `master` branch via a rebase and fast-forward merge with the goal of having a linear branch history with no merge commits.\n\n### License\n\n[Apache 2.0](LICENSE)\n\n## Why not UUID?\n\nUUID can be suboptimal for many uses-cases because:\n\n* It isn't the most character efficient way of encoding 128 bits of randomness\n* UUID v1/v2 is impractical in many environments, as it requires access to a unique, stable MAC address\n* UUID v3/v5 requires a unique seed and produces randomly distributed IDs, which can cause fragmentation in many data structures\n* UUID v4 provides no other information than randomness which can cause fragmentation in many data structures\n\nULID provides:\n\n* 128-bit compatibility with UUID\n* 1.21e+24 unique ULIDs per millisecond\n* Lexicographically sortable!\n* Canonically encoded as a 26 character string, as opposed to the 36 character UUID\n* Uses Crockford's base32 for better efficiency and readability (5 bits per character)\n* Case insensitive\n* No special characters (URL safe)\n\n## Specification\n\nBelow is the current specification of ULID as implemented in this repository.\n\nThe binary format is implemented.\n\n```\n 01AN4Z07BY      79KA1307SR9X4MV3\n\n|----------|    |----------------|\n Timestamp          Randomness\n  10chars            16chars\n   48bits             80bits\n```\n\n### Components\n\n**Timestamp**\n* 48 bit integer\n* UNIX-time in milliseconds\n* Won't run out of space till the year 10895 AD.\n\n**Randomness**\n* 80 bits\n* Cryptographically secure source of randomness, if possible\n\n### Sorting\n\nThe left-most character must be sorted first, and the right-most character sorted last (lexical order).\nThe default ASCII character set must be used. Within the same millisecond, sort order is not guaranteed\n\n### Encoding\n\nCrockford's Base32 is used as shown. This alphabet excludes the letters I, L, O, and U to avoid confusion and abuse.\n\n```\n0123456789ABCDEFGHJKMNPQRSTVWXYZ\n```\n\n### Binary Layout and Byte Order\n\nThe components are encoded as 16 octets. Each component is encoded with the Most Significant Byte first (network byte order).\n\n```\n0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      32_bit_uint_time_high                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     16_bit_uint_time_low      |       16_bit_uint_random      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       32_bit_uint_random                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       32_bit_uint_random                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n```\n\n### String Representation\n\n```\nttttttttttrrrrrrrrrrrrrrrr\n\nwhere\nt is Timestamp\nr is Randomness\n```\n\n### Links\n\n* [Original Implementation (Javascript)](https://github.com/alizain/ulid)\n* [ulid (python)](https://github.com/mdipierro/ulid)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ahawker/ulid", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "ulid-py", "package_url": "https://pypi.org/project/ulid-py/", "platform": "", "project_url": "https://pypi.org/project/ulid-py/", "project_urls": {"Homepage": "https://github.com/ahawker/ulid"}, "release_url": "https://pypi.org/project/ulid-py/0.0.14/", "requires_dist": null, "requires_python": "", "summary": "Universally Unique Lexicographically Sortable Identifier", "version": "0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ulid</h1>\n<p><a href=\"https://travis-ci.org/ahawker/ulid\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee11019aef42cb1032bd284c50f8c8712bd0a296/68747470733a2f2f7472617669732d63692e6f72672f616861776b65722f756c69642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/ahawker/ulid/branch/master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e046e7fee3bc9d6514a30f68642ada9824a9257/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6679306875666e6238683667776b34642f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://codecov.io/gh/ahawker/ulid\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8df4a4beb5e4a2f1b9cea5c7ef622c26491fcfae/68747470733a2f2f636f6465636f762e696f2f67682f616861776b65722f756c69642f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/ahawker/ulid\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c9fc6699117ded9c8b655770056592babc1e197/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f616861776b65722f756c69642f6261646765732f6770612e737667\"></a>\n<a href=\"https://codeclimate.com/github/ahawker/ulid\" rel=\"nofollow\"><img alt=\"Issue Count\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30a345f68873cc5b4d028f14a6a2553899e755b6/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f616861776b65722f756c69642f6261646765732f69737375655f636f756e742e737667\"></a></p>\n<p><a href=\"https://badge.fury.io/py/ulid-py\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03877aa280d3901e7f1f299f225688eaebac0713/68747470733a2f2f62616467652e667572792e696f2f70792f756c69642d70792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/ulid-py\" rel=\"nofollow\"><img alt=\"PyPI Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51945cdbc80a4956b428dab6ba535ae70af442e9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f756c69642d70792e737667\"></a></p>\n<p><a href=\"https://pyup.io/repos/github/ahawker/ulid/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a253db6a8b2dfc9a50cbc99642b79667455d17d0/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f616861776b65722f756c69642f736869656c642e737667\"></a></p>\n<p><a href=\"http://ulid.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc042c9007e21fe49f901356d801947e583696a5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f756c69642f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p><a href=\"https://github.com/alizain/ulid\" rel=\"nofollow\">Universally Unique Lexicographically Sortable Identifier</a> in <a href=\"https://www.python.org/\" rel=\"nofollow\">Python 3</a>.</p>\n<h3>Status</h3>\n<p>This project is actively maintained.</p>\n<h3>Installation</h3>\n<p>To install ulid from <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>:</p>\n<pre>    $ pip install ulid-py\n</pre>\n<p>To install ulid from source:</p>\n<pre>    $ git clone git@github.com:ahawker/ulid.git\n    $ <span class=\"nb\">cd</span> ulid <span class=\"o\">&amp;&amp;</span> python setup.py install\n</pre>\n<h3>Usage</h3>\n<p>Create a brand new ULID.</p>\n<p>The timestamp value (48-bits) is from <a href=\"https://docs.python.org/3/library/time.html?highlight=time.time#time.time\" rel=\"nofollow\">time.time()</a> with millisecond precision.</p>\n<p>The randomness value (80-bits) is from <a href=\"https://docs.python.org/3/library/os.html?highlight=os.urandom#os.urandom\" rel=\"nofollow\">os.urandom()</a>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'01BJQE4QTHMFP0S5J153XCFSP9'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Create a new ULID from an existing 128-bit value, such as a <a href=\"https://docs.python.org/3/library/uuid.html\" rel=\"nofollow\">UUID</a>.</p>\n<p>Supports ULID values as <code>int</code>, <code>bytes</code>, <code>str</code>, and <code>UUID</code> types.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ulid</span><span class=\"o\">,</span> <span class=\"nn\">uuid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span>\n<span class=\"n\">UUID</span><span class=\"p\">(</span><span class=\"s1\">'0983d0a2-ff15-4d83-8f37-7dd945b5aa39'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">from_uuid</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'09GF8A5ZRN9P1RYDVXV52VBAHS'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Create a new ULID from an existing timestamp value, such as a <a href=\"https://docs.python.org/3/library/datetime.html#module-datetime\" rel=\"nofollow\">datetime</a> object.</p>\n<p>Supports timestamp values as <code>int</code>, <code>float</code>, <code>str</code>, <code>bytes</code>, <code>bytearray</code>, <code>memoryview</code>, <code>datetime</code>, <code>Timestamp</code>, and <code>ULID</code> types.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datetime</span><span class=\"o\">,</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">from_timestamp</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1999</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'00TM9HX0008S220A3PWSFVNFEH'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Create a new ULID from an existing randomness value.</p>\n<p>Supports randomness values as <code>int</code>, <code>float</code>, <code>str</code>, <code>bytes</code>, <code>bytearray</code>, <code>memoryview</code>, <code>Randomness</code>, and <code>ULID</code> types.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">randomness</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">urandom</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">from_randomness</span><span class=\"p\">(</span><span class=\"n\">randomness</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'01BJQHX2XEDK0VN0GMYWT9JN8S'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>For cases when you don't necessarily control the data type (input from external system), you can use the <code>parse</code> method\nwhich will attempt to make the correct determination for you. Please note that this will be slightly slower than creating\nthe instance from the respective <code>from_*</code> method as it needs to make a number of type/conditional checks.</p>\n<p>Supports values as <code>int</code>, <code>float</code>, <code>str</code>, <code>bytes</code>, <code>bytearray</code>, <code>memoryview</code>, <code>uuid.UUID</code>, and <code>ULID</code> types.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">get_id</span><span class=\"p\">()</span>  <span class=\"c1\">## Unsure about datatype -- Could be int, UUID, or string?</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'0K0EDFETFM8SH912DBBD4ABXSZ'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Once you have a ULID object, there are a number of ways to interact with it.</p>\n<p>The <code>timestamp</code> method will give you a snapshot view of the first 48-bits of the ULID while the <code>randomness</code> method\nwill give you a snapshot of the last 80-bits.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'01BJQM7SC7D5VVTG3J68ABFQ3N'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">'01BJQM7SC7'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">randomness</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Randomness</span><span class=\"p\">(</span><span class=\"s1\">'D5VVTG3J68ABFQ3N'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>The <code>ULID</code>, <code>Timestamp</code>, and <code>Randomness</code> classes all derive from the same base class, a <code>MemoryView</code>.</p>\n<p>A <code>MemoryView</code> provides the <code>str</code>, <code>int</code>, and <code>bytes</code> methods for changing any values representation.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ULID</span><span class=\"p\">(</span><span class=\"s1\">'01BJQMF54D093DXEAWZ6JYRPAQ'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">'01BJQMF54D'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">int</span>\n<span class=\"mi\">1497589322893</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">bytes</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x01\\\\\\xaf</span><span class=\"s1\">G</span><span class=\"se\">\\x94\\x8d</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">datetime</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">893000</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">randomness</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">bytes</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x02</span><span class=\"s1\">F</span><span class=\"se\">\\xde\\xb9\\\\\\xf9\\xa5\\xec</span><span class=\"s1\">YW'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">randomness</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">bytes</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">str</span>\n<span class=\"s1\">'01BJQMF54D093DXEAWZ6JYRPAQ'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">int</span>\n<span class=\"mi\">1810474399624548315999517391436142935</span>\n</pre>\n<p>A <code>MemoryView</code> also provides rich comparison functionality.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datetime</span><span class=\"o\">,</span> <span class=\"nn\">time</span><span class=\"o\">,</span> <span class=\"nn\">ulid</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u1</span> <span class=\"o\">=</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u2</span> <span class=\"o\">=</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u1</span> <span class=\"o\">&lt;</span> <span class=\"n\">u2</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u3</span> <span class=\"o\">=</span> <span class=\"n\">ulid</span><span class=\"o\">.</span><span class=\"n\">from_timestamp</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2039</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u1</span> <span class=\"o\">&lt;</span> <span class=\"n\">u2</span> <span class=\"o\">&lt;</span> <span class=\"n\">u3</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"k\">for</span> <span class=\"n\">u</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">([</span><span class=\"n\">u2</span><span class=\"p\">,</span> <span class=\"n\">u3</span><span class=\"p\">,</span> <span class=\"n\">u1</span><span class=\"p\">])]</span>\n<span class=\"p\">[</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">847000</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">775000</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2039</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n</pre>\n<h3>Future Items</h3>\n<ul>\n<li>Collection of benchmarks to track performance.</li>\n<li>Backport to Python 2.7?</li>\n<li>See <a href=\"https://github.com/ahawker/ulid/issues\" rel=\"nofollow\">Github Issues</a> for more!</li>\n</ul>\n<h3>Goals</h3>\n<p>A fast implementation in pure python of the spec with binary format support.</p>\n<h3>Contributing</h3>\n<p>If you would like to contribute, simply fork the repository, push your changes and send a pull request.\nPull requests will be brought into the <code>master</code> branch via a rebase and fast-forward merge with the goal of having a linear branch history with no merge commits.</p>\n<h3>License</h3>\n<p><a href=\"LICENSE\" rel=\"nofollow\">Apache 2.0</a></p>\n<h2>Why not UUID?</h2>\n<p>UUID can be suboptimal for many uses-cases because:</p>\n<ul>\n<li>It isn't the most character efficient way of encoding 128 bits of randomness</li>\n<li>UUID v1/v2 is impractical in many environments, as it requires access to a unique, stable MAC address</li>\n<li>UUID v3/v5 requires a unique seed and produces randomly distributed IDs, which can cause fragmentation in many data structures</li>\n<li>UUID v4 provides no other information than randomness which can cause fragmentation in many data structures</li>\n</ul>\n<p>ULID provides:</p>\n<ul>\n<li>128-bit compatibility with UUID</li>\n<li>1.21e+24 unique ULIDs per millisecond</li>\n<li>Lexicographically sortable!</li>\n<li>Canonically encoded as a 26 character string, as opposed to the 36 character UUID</li>\n<li>Uses Crockford's base32 for better efficiency and readability (5 bits per character)</li>\n<li>Case insensitive</li>\n<li>No special characters (URL safe)</li>\n</ul>\n<h2>Specification</h2>\n<p>Below is the current specification of ULID as implemented in this repository.</p>\n<p>The binary format is implemented.</p>\n<pre><code> 01AN4Z07BY      79KA1307SR9X4MV3\n\n|----------|    |----------------|\n Timestamp          Randomness\n  10chars            16chars\n   48bits             80bits\n</code></pre>\n<h3>Components</h3>\n<p><strong>Timestamp</strong></p>\n<ul>\n<li>48 bit integer</li>\n<li>UNIX-time in milliseconds</li>\n<li>Won't run out of space till the year 10895 AD.</li>\n</ul>\n<p><strong>Randomness</strong></p>\n<ul>\n<li>80 bits</li>\n<li>Cryptographically secure source of randomness, if possible</li>\n</ul>\n<h3>Sorting</h3>\n<p>The left-most character must be sorted first, and the right-most character sorted last (lexical order).\nThe default ASCII character set must be used. Within the same millisecond, sort order is not guaranteed</p>\n<h3>Encoding</h3>\n<p>Crockford's Base32 is used as shown. This alphabet excludes the letters I, L, O, and U to avoid confusion and abuse.</p>\n<pre><code>0123456789ABCDEFGHJKMNPQRSTVWXYZ\n</code></pre>\n<h3>Binary Layout and Byte Order</h3>\n<p>The components are encoded as 16 octets. Each component is encoded with the Most Significant Byte first (network byte order).</p>\n<pre><code>0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      32_bit_uint_time_high                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     16_bit_uint_time_low      |       16_bit_uint_random      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       32_bit_uint_random                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       32_bit_uint_random                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n</code></pre>\n<h3>String Representation</h3>\n<pre><code>ttttttttttrrrrrrrrrrrrrrrr\n\nwhere\nt is Timestamp\nr is Randomness\n</code></pre>\n<h3>Links</h3>\n<ul>\n<li><a href=\"https://github.com/alizain/ulid\" rel=\"nofollow\">Original Implementation (Javascript)</a></li>\n<li><a href=\"https://github.com/mdipierro/ulid\" rel=\"nofollow\">ulid (python)</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7100068, "releases": {"0.0.1": [], "0.0.11": [{"comment_text": "", "digests": {"md5": "edeb4009fcc5ba49e5bdb41744c38c04", "sha256": "ab0d67b96fbd9177427d476e9dbd454afa687f37e665278625b01bf830690e60"}, "downloads": -1, "filename": "ulid_py-0.0.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "edeb4009fcc5ba49e5bdb41744c38c04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16002, "upload_time": "2019-11-20T18:50:59", "upload_time_iso_8601": "2019-11-20T18:50:59.309790Z", "url": "https://files.pythonhosted.org/packages/95/47/daefe0bf1db3c85153ef2035d8b5fbd7d60d5fae8843aaefe8317f96b72f/ulid_py-0.0.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32c06ed60fe8620089f6dd2218a3e953", "sha256": "552c0444215242b77d72b8786da2aa409bb9f18dc27b1da6df7506ea5b548e14"}, "downloads": -1, "filename": "ulid-py-0.0.11.tar.gz", "has_sig": false, "md5_digest": "32c06ed60fe8620089f6dd2218a3e953", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18458, "upload_time": "2019-11-20T18:51:01", "upload_time_iso_8601": "2019-11-20T18:51:01.631693Z", "url": "https://files.pythonhosted.org/packages/3e/4a/e2284d83bde1c851ecca3bca83669cd7b019ea89ff7b52b372964f7d837b/ulid-py-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "72c2158f98041a307d9958619cf6bacf", "sha256": "00be619c649bb61497996a7cfa8b389399d60777ecd2d6f218e2982eb0427cc1"}, "downloads": -1, "filename": "ulid_py-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72c2158f98041a307d9958619cf6bacf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16075, "upload_time": "2019-11-22T20:34:57", "upload_time_iso_8601": "2019-11-22T20:34:57.157488Z", "url": "https://files.pythonhosted.org/packages/ea/28/d81c57e6f39ac31e560c937968f9584ccc90fc9b32ab150475affc01486a/ulid_py-0.0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3faa51281de9cb760ca7070b1e4c13e", "sha256": "46810f0cac2990e2b70e37cfb5edf851e9e230843a556e71e577fe67e8dbde3d"}, "downloads": -1, "filename": "ulid-py-0.0.12.tar.gz", "has_sig": false, "md5_digest": "c3faa51281de9cb760ca7070b1e4c13e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18523, "upload_time": "2019-11-22T20:34:58", "upload_time_iso_8601": "2019-11-22T20:34:58.553030Z", "url": "https://files.pythonhosted.org/packages/30/2f/03db98337329d64a588662170c131715add8db1c2c038df2a3d7cee8569e/ulid-py-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "b8006e7ff2ad299133f541ca98361aa7", "sha256": "9fdc6a278e2d85f862599696a9d2d2f4a2f3d10a09ff3e2a6026629904ced0f5"}, "downloads": -1, "filename": "ulid_py-0.0.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b8006e7ff2ad299133f541ca98361aa7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16074, "upload_time": "2020-04-25T15:35:43", "upload_time_iso_8601": "2020-04-25T15:35:43.573687Z", "url": "https://files.pythonhosted.org/packages/45/fd/8fb595fa3ff61ecd21f5d1131dae10f5751ac09e5ec55a68c35ecca31b08/ulid_py-0.0.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43a052449b792cd0c03b5551f905bfac", "sha256": "97bec4bedba23fcbb639ea9e6a2bb7f1b0f19327437c3b27136f71c106ab6f9d"}, "downloads": -1, "filename": "ulid-py-0.0.13.tar.gz", "has_sig": false, "md5_digest": "43a052449b792cd0c03b5551f905bfac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18526, "upload_time": "2020-04-25T15:35:44", "upload_time_iso_8601": "2020-04-25T15:35:44.577806Z", "url": "https://files.pythonhosted.org/packages/f1/e8/ec35e526dd802b0bc1b962ac1c970e35e66bc0dae2dcd2c23333518f643e/ulid-py-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "f7bb18ede232afc6402fa239b998d758", "sha256": "e697b55be952f1baafa1c3f531d042bc389650639a472857161e6443e6cf76ba"}, "downloads": -1, "filename": "ulid_py-0.0.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f7bb18ede232afc6402fa239b998d758", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16337, "upload_time": "2020-04-25T15:34:10", "upload_time_iso_8601": "2020-04-25T15:34:10.283235Z", "url": "https://files.pythonhosted.org/packages/5e/3a/3da148caf75e985d7dc22d81c4aff11578d0123c6dca84714744d828d307/ulid_py-0.0.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "184f75c035dfcaea7290eab360620da2", "sha256": "8b060f8e575e50398272f390055c40aeb816b5ec668d193c015271289e1dee73"}, "downloads": -1, "filename": "ulid-py-0.0.14.tar.gz", "has_sig": false, "md5_digest": "184f75c035dfcaea7290eab360620da2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18622, "upload_time": "2020-04-25T15:34:11", "upload_time_iso_8601": "2020-04-25T15:34:11.806064Z", "url": "https://files.pythonhosted.org/packages/c9/94/58a912cb76af42cfe3f426555c7eaf265355094c8e9444f5c18f71013a75/ulid-py-0.0.14.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fb9ab3ae6fb34d892ee41b1d8273833c", "sha256": "4e598571d767a4b917a244c4fa0aa229b8b0bb886c1dc37198d4127bd68a54a9"}, "downloads": -1, "filename": "ulid_py-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb9ab3ae6fb34d892ee41b1d8273833c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13021, "upload_time": "2017-06-16T05:00:54", "upload_time_iso_8601": "2017-06-16T05:00:54.597139Z", "url": "https://files.pythonhosted.org/packages/ef/5a/0190abba545bebff084a25009dfb2bc447d6b2cf75ffba9affcaca9ba8a4/ulid_py-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe4819f8e9dfe8adf89fcfe9e3c239cd", "sha256": "2e8382c06f63b623bf2fbe1ffcb0c2e6705e82a709b23cd235c691c91bcdb894"}, "downloads": -1, "filename": "ulid-py-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fe4819f8e9dfe8adf89fcfe9e3c239cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6503, "upload_time": "2017-06-16T05:00:56", "upload_time_iso_8601": "2017-06-16T05:00:56.318295Z", "url": "https://files.pythonhosted.org/packages/27/b5/de27bf71ca9a976aff28ecc1cef00d4a974752ac8eec834f075b1d236919/ulid-py-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f96ddfeb084d32f5653965c7b80ee307", "sha256": "0b9c686536cb5c6e72ab6843e85193a6cd48722701d79174aca2a77ef3c2f628"}, "downloads": -1, "filename": "ulid_py-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f96ddfeb084d32f5653965c7b80ee307", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13148, "upload_time": "2017-06-25T19:36:29", "upload_time_iso_8601": "2017-06-25T19:36:29.111738Z", "url": "https://files.pythonhosted.org/packages/25/fb/c3a34d68fb313ce0029bc283b5e9bf1b83177ede1f0f0ffa41e1d7625335/ulid_py-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "389d816f011407cfcec1a2bb46465e62", "sha256": "ec3bfbf80bc46b7cee34dfaa5549ea3f6a9854d78ccc64ef67b96398099ffedc"}, "downloads": -1, "filename": "ulid-py-0.0.3.tar.gz", "has_sig": false, "md5_digest": "389d816f011407cfcec1a2bb46465e62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6650, "upload_time": "2017-06-25T19:36:30", "upload_time_iso_8601": "2017-06-25T19:36:30.932877Z", "url": "https://files.pythonhosted.org/packages/8a/49/8edb8f06b1cccc2607e84530175b1e2422190bc1963bfdddaecee5c41b9b/ulid-py-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "25bd5792e8813955d9515b2cde9c5309", "sha256": "389923435a1692fa6e979bdff5f12de7a03283776d136221a8382799f8217072"}, "downloads": -1, "filename": "ulid_py-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25bd5792e8813955d9515b2cde9c5309", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19338, "upload_time": "2017-09-22T05:34:05", "upload_time_iso_8601": "2017-09-22T05:34:05.160451Z", "url": "https://files.pythonhosted.org/packages/10/e0/4fe45aba24269f7fc15e0396f5466928ad38a03aa9394e6e4ef93b25c76b/ulid_py-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56e647e5814b2342de413b7aa805b4b3", "sha256": "8baf5f234c2aa154ea92108c28add089618d7aab93e2c44a1cc6539a13f939ca"}, "downloads": -1, "filename": "ulid-py-0.0.4.tar.gz", "has_sig": false, "md5_digest": "56e647e5814b2342de413b7aa805b4b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10617, "upload_time": "2017-09-22T05:34:06", "upload_time_iso_8601": "2017-09-22T05:34:06.360053Z", "url": "https://files.pythonhosted.org/packages/06/3a/0109550b724c7b0d3d08439318cb9597c0073ce23cfc264c70b399a57bfb/ulid-py-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "8b6413bc2859336af3a736c228b358ce", "sha256": "4121b984cac990cc5d11be56e74f833e66e27fe5b677e89311f501f87f82797b"}, "downloads": -1, "filename": "ulid_py-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b6413bc2859336af3a736c228b358ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19349, "upload_time": "2017-10-26T03:13:45", "upload_time_iso_8601": "2017-10-26T03:13:45.855892Z", "url": "https://files.pythonhosted.org/packages/16/49/8709ca07550a542965a3d64642e864935a19c479c937b9bd2bd0494e5166/ulid_py-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecab40f43e1be93ed83ac5142132c441", "sha256": "5c66fd57a9670414c5a0cd4066108ad476e6eb8bc19f3bed667afaad9e563818"}, "downloads": -1, "filename": "ulid-py-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ecab40f43e1be93ed83ac5142132c441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10639, "upload_time": "2017-10-26T03:13:47", "upload_time_iso_8601": "2017-10-26T03:13:47.163820Z", "url": "https://files.pythonhosted.org/packages/b7/1f/16ebb705d99469bdc346a097c07a77bb0ec2c0c11feaf4be5012b2f70e1b/ulid-py-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "52c0f389c9b4407c8e2107355863c3c3", "sha256": "275bb4a9e4d0f9cf0a28f2db8b126581a99567045175bea9be94b174cbc57ce0"}, "downloads": -1, "filename": "ulid_py-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52c0f389c9b4407c8e2107355863c3c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19576, "upload_time": "2017-10-28T23:22:19", "upload_time_iso_8601": "2017-10-28T23:22:19.438399Z", "url": "https://files.pythonhosted.org/packages/dc/a5/e03017d742aba520b2f5b92c87cf76b734497c028a0e9a9a79b6a8ae7dea/ulid_py-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "014763575fd33ca37110fc10ba2cb400", "sha256": "b804f97cb355e020a2bd3b9f97a0cbcae318cc9222c287ee18480cee42e5aa1a"}, "downloads": -1, "filename": "ulid-py-0.0.6.tar.gz", "has_sig": false, "md5_digest": "014763575fd33ca37110fc10ba2cb400", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10843, "upload_time": "2017-10-28T23:22:22", "upload_time_iso_8601": "2017-10-28T23:22:22.873447Z", "url": "https://files.pythonhosted.org/packages/b9/7c/c7af46ea8f0d9d12b2dbe82ae9dceacc1d292f0a223a6faa3160f349a5fc/ulid-py-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b5ac51569c7490ef7aac4ece4912c35c", "sha256": "08ed8bd85184157f1a206b66da7aff89024a883ebd949417504144acdb2bbdda"}, "downloads": -1, "filename": "ulid_py-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5ac51569c7490ef7aac4ece4912c35c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15545, "upload_time": "2018-10-09T14:26:35", "upload_time_iso_8601": "2018-10-09T14:26:35.865527Z", "url": "https://files.pythonhosted.org/packages/a6/31/7ced2beec4974c8d0e6945f5c5c87294b6277664105b4ec4c3ced5f90fe1/ulid_py-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aed95f13f8e541e15ae59f21b3b3173", "sha256": "d7a9de7c886a852b38c091dd6a8c9e390f9930c5f6ae7c342b22b35643e35088"}, "downloads": -1, "filename": "ulid-py-0.0.7.tar.gz", "has_sig": false, "md5_digest": "5aed95f13f8e541e15ae59f21b3b3173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10922, "upload_time": "2018-10-09T14:26:37", "upload_time_iso_8601": "2018-10-09T14:26:37.482825Z", "url": "https://files.pythonhosted.org/packages/58/ae/549467d29c691c9d6c42b768701c3711eddb7a641358b75f7435b6c362ea/ulid-py-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "117877fd0b5a025a0f93a229f8791141", "sha256": "0050eddd0f7d029cf3f1ee94eda89ecfddcb06d17891936a2880d39ec7f0ba6d"}, "downloads": -1, "filename": "ulid_py-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "117877fd0b5a025a0f93a229f8791141", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15911, "upload_time": "2019-01-14T05:39:50", "upload_time_iso_8601": "2019-01-14T05:39:50.203115Z", "url": "https://files.pythonhosted.org/packages/99/6c/6d0562f3847cdff8ac775eb6f900039e44860d4be82ce52ec0f476cfb31d/ulid_py-0.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "855d8a3d8a209e322ac1a4c1677ac508", "sha256": "a92d432ba07676a7759c10a463b52b7743e33fdb741ec9f3706ea64930d08378"}, "downloads": -1, "filename": "ulid-py-0.0.8.tar.gz", "has_sig": false, "md5_digest": "855d8a3d8a209e322ac1a4c1677ac508", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14634, "upload_time": "2019-01-14T05:39:51", "upload_time_iso_8601": "2019-01-14T05:39:51.844398Z", "url": "https://files.pythonhosted.org/packages/cb/4e/4e26eb0107ad88874276ce7b1c0634565d2f0ccea00dff46796de5c870f2/ulid-py-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "0cc1f42b4128d89a364419facb42e709", "sha256": "94d894e8174ab35d3b55e6dc9b8b29c774de0c28ea104e7b228efa05b7215600"}, "downloads": -1, "filename": "ulid_py-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0cc1f42b4128d89a364419facb42e709", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16189, "upload_time": "2019-01-14T23:34:02", "upload_time_iso_8601": "2019-01-14T23:34:02.958405Z", "url": "https://files.pythonhosted.org/packages/a5/dc/be79bff452a0f456d00134d03c34556180c6f0ce0a53685c78457b92ee55/ulid_py-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40071f74e46a4e638dcaa0296d728a6f", "sha256": "9cd95dca1b366d85e0d12d03bf54b1224af56c97380868bb4f3385fcc6a85620"}, "downloads": -1, "filename": "ulid-py-0.0.9.tar.gz", "has_sig": false, "md5_digest": "40071f74e46a4e638dcaa0296d728a6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15192, "upload_time": "2019-01-14T23:34:04", "upload_time_iso_8601": "2019-01-14T23:34:04.081218Z", "url": "https://files.pythonhosted.org/packages/0f/cc/2923ab4d5fa0203d7e5be54e9f434133b457984c49ced32aa80768c2e3d0/ulid-py-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7bb18ede232afc6402fa239b998d758", "sha256": "e697b55be952f1baafa1c3f531d042bc389650639a472857161e6443e6cf76ba"}, "downloads": -1, "filename": "ulid_py-0.0.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f7bb18ede232afc6402fa239b998d758", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16337, "upload_time": "2020-04-25T15:34:10", "upload_time_iso_8601": "2020-04-25T15:34:10.283235Z", "url": "https://files.pythonhosted.org/packages/5e/3a/3da148caf75e985d7dc22d81c4aff11578d0123c6dca84714744d828d307/ulid_py-0.0.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "184f75c035dfcaea7290eab360620da2", "sha256": "8b060f8e575e50398272f390055c40aeb816b5ec668d193c015271289e1dee73"}, "downloads": -1, "filename": "ulid-py-0.0.14.tar.gz", "has_sig": false, "md5_digest": "184f75c035dfcaea7290eab360620da2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18622, "upload_time": "2020-04-25T15:34:11", "upload_time_iso_8601": "2020-04-25T15:34:11.806064Z", "url": "https://files.pythonhosted.org/packages/c9/94/58a912cb76af42cfe3f426555c7eaf265355094c8e9444f5c18f71013a75/ulid-py-0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:13 2020"}