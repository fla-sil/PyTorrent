{"info": {"author": "Harald Sager Vohringer", "author_email": "harald.voeh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6"], "description": "################\nTensorSignatures\n################\n\n\n.. image:: https://img.shields.io/pypi/v/tensorsignatures.svg\n        :target: https://pypi.python.org/pypi/tensorsignatures\n\n.. image:: https://img.shields.io/travis/sagar87/tensorsignatures.svg\n        :target: https://travis-ci.org/sagar87/tensorsignatures\n\n.. image:: https://readthedocs.org/projects/tensorsignatures/badge/?version=latest\n        :target: https://tensorsignatures.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n*DISCLAIMER: TensorSignatures is currently being developed and not stable yet.\nAlthough, the current version is in principle fully functional, it is likely that\nyou may face problems using the software; if so, please don't hesitate to get\nin touch.*\n\nTensorSignatures is a tensor factorization framework for mutational signature\nanalysis, which in contrast to other methods, deciphers mutational processes\nnot only in terms of mutational spectra, but also assess their properties with\nrespect to various genomic variables.\n\n*************\nQuick install\n*************\n\nThere are several ways to install TensorSignatures.\n\nVia GitHub\n==========\n\nTo obtain the most recent version of TensorSignatures, we recommend to create\na virtual environment and download the repository directly from GitHub. To get\nstarted, clone the repository by executing the following commands in your\nterminal\n\n.. code-block:: console\n\n    $ git clone https://github.com/gerstung-lab/tensorsignatures.git && cd tensorsignatures\n\nThen, create a new virtual environment and install all dependencies.\n\n.. code-block:: console\n\n    $ python -m venv env\n    $ source env/bin/activate\n    $ pip install --upgrade pip setuptools wheel && pip install -r requirements.txt\n\nFinally, install TensorSignatures.\n\n.. code-block:: console\n\n    $ pip install -e .\n\nVia Pypi\n========\n\nTo install :code:`tensorsignatures` via Pypi simply type\n\n.. code-block:: console\n\n    $ pip install tensorsignatures\n\ninto your shell. To get started with tensorsignatures please refer to the\ndocumentation.\n\nVia docker (& jupyter)\n======================\n\nTo run TensorSignatures within a docker environment (and jupyter) clone the\nfirst the repository\n\n.. code-block:: console\n\n    $ git clone https://github.com/gerstung-lab/tensorsignatures.git\n    $ cd tensorsignatures\n\nand then spin up the container using :code:`docker-compose`\n\n.. code-block:: console\n\n    $ docker-compose up --build\n\n\n* Free software: MIT license\n* Documentation: https://tensorsignatures.readthedocs.io.\n\n***************\nGetting started\n***************\n\n\nStep 1: Data preparation\n========================\n\nTo apply TensorSignatures on your data single nucleotide variants (SNVs) need to\nbe split according to their genomic context and represented in a highdimensional\ncount tensor. Similarly, multinucleotide variants (MNVs), deletions and indels\n(indels) have to be classified and represented in count matrix (currently we\ndo not provide a automated way of generating a structural variant table yet).\nDespite the fact that TensorSignatures is written in Python, this part of the\npipeline runs in :code:`R` and and depends on the :code:`bioconductor` packages\n:code:`VariantAnnotation` and :code:`rhdf5`. Make sure you have :code:`R3.4.x`\ninstalled, and the packages :code:`VariantAnnotation` and :code:`rhdf5`. You can\ninstall them, if necessary, by executing\n\n.. code-block:: console\n\n    $ Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('VariantAnnotation')\"\n\nand\n\n.. code-block:: console\n\n    $ Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('rhdf5')\"\n\nfrom your command line.\n\nTo get started, download the following files and place them in the same directory:\n\n`Constants.RData <http://193.62.55.163/file/R/constants.RData>`_ (contains\n:code:`GRanges` objects that annotate transcription/replication orientation,\nnucleosomal and epigenetic states)\n\n`mutations.R <http://193.62.55.163/file/R/mutations.R>`_ (all required functions\nto partiton SNVs, MNVs and indels)\n\n`processVcf.R <http://193.62.55.163/file/R/processVcf.R>`_ (loads :code:`vcf`\nfiles and creates the SNV count tensor, MNV and indel count matrix; eventually\nneeds custom modification to make the script run on your vcfs.)\n\n`genome.zip <http://193.62.55.163/file/R/genome.zip>`_ (optionally).\n\nTo obtain the SNV count tensor and the matrices containing all other mutation\ntypes try to execute\n\n.. code-block:: console\n\n    $ Rscript processVcf.R yourVcfFile1.vcf.gz yourVcfFile2.vcf.gz ... yourVcfFileN.vcf.gz outputHdf5File.h5\n\nwhich ideally outputs an hdf5 file that can be used as an input for the TensorSignatures\nsoftware. In case of errors please check wether you have correctly specified paths\nin line 6-8. Also, take a look at the :code:`readVcfSave` function and adjust it\nin case of errors.\n\nBefore you can run TensorSignatures, a trinucleotide normalization constant needs to be\nadded to the hdf5 data file. You can do this by calling the :code:`prep` subroutine\nof the TensorSignatures commandline programme.\n\n.. code-block:: console\n\n    $ tensorsignatures prep outputHdf5File.ht tsData.h5\n\n\nStep 2: Run TensorSignatures\n============================\n\nOnce you have obtained the prepared input file, there are to ways to run\nTensorSignatures using either the :code:`refit` option, which fits the exposures of\na set of pre-defined signatures to a new dataset, or via the :code:`train` subroutine,\nthat performs a denovo extraction of TensorSignatures. Both options have advantages\nand disadvantages: Refitting tensor signatures is computationally fast but does not\nallow to discover new signatures, while fitting new signatures requires a large\nnumber of samples and is computationally intensive (GPU required). For most use cases,\nwith a small number of samples, we advice to use the :code:`refit` option:\n\n.. code-block:: console\n\n    $ tensorsignatures --verbose refit tsData.h5 refit.pkl -n\n\nHere, is an example call to run a denovo extraction of tensor signatures\n\n.. code-block:: console\n\n    $ tensorsignatures --verbose train tsData.h5 denovo.pkl <rank> -k <size> -n -ep <epochs>\n\nRunning Tensorsignatures will yield a :code:`pickle` dump which can subsequently\ninspected using the :code:`tensorsignatures` package (tutorials will follow soon).\n\n\n********\nFeatures\n********\n\n* Run :code:`tensorsignatures` on your dataset using the :code:`TensorSignature` class provided by the package or via the command line tool.\n* Compute percentile based bootstrap confidence intervals for inferred parameters.\n* Basic plotting tools to visualize tensor signatures and inferred parameters\n\n*******\nCredits\n*******\n\n* Harald V\u00f6hringer and Moritz Gerstung\n\n\n*******\nHistory\n*******\n\n0.4.0 (2019-11-25)\n==================\n\n* added subroutine prep which adds the normalization constant to a hdf5 input file of tensorsignatures\n* added subroutine refit which refits a set of predefined signatures to mew dataset\n* updated README.rst\n* fixed issue with package data\n\n0.3.0 (2019-10-03)\n==================\n\n* various fixes\n* design changes\n* fixed setup.py\n\n\n0.1.0 (2019-08-21)\n==================\n\n* First release on PyPI.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sagar87/tensorsignatures", "keywords": "tensorsignatures", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "tensorsignatures", "package_url": "https://pypi.org/project/tensorsignatures/", "platform": "", "project_url": "https://pypi.org/project/tensorsignatures/", "project_urls": {"Homepage": "https://github.com/sagar87/tensorsignatures"}, "release_url": "https://pypi.org/project/tensorsignatures/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Tensorframework for mutational signature analysis.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/tensorsignatures\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/tensorsignatures.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abc09bfd556ba0d62232bafc69428efb4c8dc8fc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74656e736f727369676e6174757265732e737667\"></a>\n<a href=\"https://travis-ci.org/sagar87/tensorsignatures\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/sagar87/tensorsignatures.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6351a5890155592032d7e757c186a70a2926df95/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f736167617238372f74656e736f727369676e6174757265732e737667\"></a>\n<a href=\"https://tensorsignatures.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83b21cd434adb69552f53b38ae553d4650550d5f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f74656e736f727369676e6174757265732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p><em>DISCLAIMER: TensorSignatures is currently being developed and not stable yet.\nAlthough, the current version is in principle fully functional, it is likely that\nyou may face problems using the software; if so, please don\u2019t hesitate to get\nin touch.</em></p>\n<p>TensorSignatures is a tensor factorization framework for mutational signature\nanalysis, which in contrast to other methods, deciphers mutational processes\nnot only in terms of mutational spectra, but also assess their properties with\nrespect to various genomic variables.</p>\n<div id=\"quick-install\">\n<h2>Quick install</h2>\n<p>There are several ways to install TensorSignatures.</p>\n<div id=\"via-github\">\n<h3>Via GitHub</h3>\n<p>To obtain the most recent version of TensorSignatures, we recommend to create\na virtual environment and download the repository directly from GitHub. To get\nstarted, clone the repository by executing the following commands in your\nterminal</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/gerstung-lab/tensorsignatures.git <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> tensorsignatures\n</pre>\n<p>Then, create a new virtual environment and install all dependencies.</p>\n<pre><span class=\"gp\">$</span> python -m venv env\n<span class=\"gp\">$</span> <span class=\"nb\">source</span> env/bin/activate\n<span class=\"gp\">$</span> pip install --upgrade pip setuptools wheel <span class=\"o\">&amp;&amp;</span> pip install -r requirements.txt\n</pre>\n<p>Finally, install TensorSignatures.</p>\n<pre><span class=\"gp\">$</span> pip install -e .\n</pre>\n</div>\n<div id=\"via-pypi\">\n<h3>Via Pypi</h3>\n<p>To install <code>tensorsignatures</code> via Pypi simply type</p>\n<pre><span class=\"gp\">$</span> pip install tensorsignatures\n</pre>\n<p>into your shell. To get started with tensorsignatures please refer to the\ndocumentation.</p>\n</div>\n<div id=\"via-docker-jupyter\">\n<h3>Via docker (&amp; jupyter)</h3>\n<p>To run TensorSignatures within a docker environment (and jupyter) clone the\nfirst the repository</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/gerstung-lab/tensorsignatures.git\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> tensorsignatures\n</pre>\n<p>and then spin up the container using <code>docker-compose</code></p>\n<pre><span class=\"gp\">$</span> docker-compose up --build\n</pre>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://tensorsignatures.readthedocs.io\" rel=\"nofollow\">https://tensorsignatures.readthedocs.io</a>.</li>\n</ul>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<div id=\"step-1-data-preparation\">\n<h3>Step 1: Data preparation</h3>\n<p>To apply TensorSignatures on your data single nucleotide variants (SNVs) need to\nbe split according to their genomic context and represented in a highdimensional\ncount tensor. Similarly, multinucleotide variants (MNVs), deletions and indels\n(indels) have to be classified and represented in count matrix (currently we\ndo not provide a automated way of generating a structural variant table yet).\nDespite the fact that TensorSignatures is written in Python, this part of the\npipeline runs in <code>R</code> and and depends on the <code>bioconductor</code> packages\n<code>VariantAnnotation</code> and <code>rhdf5</code>. Make sure you have <code>R3.4.x</code>\ninstalled, and the packages <code>VariantAnnotation</code> and <code>rhdf5</code>. You can\ninstall them, if necessary, by executing</p>\n<pre><span class=\"gp\">$</span> Rscript -e <span class=\"s2\">\"source('https://bioconductor.org/biocLite.R'); biocLite('VariantAnnotation')\"</span>\n</pre>\n<p>and</p>\n<pre><span class=\"gp\">$</span> Rscript -e <span class=\"s2\">\"source('https://bioconductor.org/biocLite.R'); biocLite('rhdf5')\"</span>\n</pre>\n<p>from your command line.</p>\n<p>To get started, download the following files and place them in the same directory:</p>\n<p><a href=\"http://193.62.55.163/file/R/constants.RData\" rel=\"nofollow\">Constants.RData</a> (contains\n<code>GRanges</code> objects that annotate transcription/replication orientation,\nnucleosomal and epigenetic states)</p>\n<p><a href=\"http://193.62.55.163/file/R/mutations.R\" rel=\"nofollow\">mutations.R</a> (all required functions\nto partiton SNVs, MNVs and indels)</p>\n<p><a href=\"http://193.62.55.163/file/R/processVcf.R\" rel=\"nofollow\">processVcf.R</a> (loads <code>vcf</code>\nfiles and creates the SNV count tensor, MNV and indel count matrix; eventually\nneeds custom modification to make the script run on your vcfs.)</p>\n<p><a href=\"http://193.62.55.163/file/R/genome.zip\" rel=\"nofollow\">genome.zip</a> (optionally).</p>\n<p>To obtain the SNV count tensor and the matrices containing all other mutation\ntypes try to execute</p>\n<pre><span class=\"gp\">$</span> Rscript processVcf.R yourVcfFile1.vcf.gz yourVcfFile2.vcf.gz ... yourVcfFileN.vcf.gz outputHdf5File.h5\n</pre>\n<p>which ideally outputs an hdf5 file that can be used as an input for the TensorSignatures\nsoftware. In case of errors please check wether you have correctly specified paths\nin line 6-8. Also, take a look at the <code>readVcfSave</code> function and adjust it\nin case of errors.</p>\n<p>Before you can run TensorSignatures, a trinucleotide normalization constant needs to be\nadded to the hdf5 data file. You can do this by calling the <code>prep</code> subroutine\nof the TensorSignatures commandline programme.</p>\n<pre><span class=\"gp\">$</span> tensorsignatures prep outputHdf5File.ht tsData.h5\n</pre>\n</div>\n<div id=\"step-2-run-tensorsignatures\">\n<h3>Step 2: Run TensorSignatures</h3>\n<p>Once you have obtained the prepared input file, there are to ways to run\nTensorSignatures using either the <code>refit</code> option, which fits the exposures of\na set of pre-defined signatures to a new dataset, or via the <code>train</code> subroutine,\nthat performs a denovo extraction of TensorSignatures. Both options have advantages\nand disadvantages: Refitting tensor signatures is computationally fast but does not\nallow to discover new signatures, while fitting new signatures requires a large\nnumber of samples and is computationally intensive (GPU required). For most use cases,\nwith a small number of samples, we advice to use the <code>refit</code> option:</p>\n<pre><span class=\"gp\">$</span> tensorsignatures --verbose refit tsData.h5 refit.pkl -n\n</pre>\n<p>Here, is an example call to run a denovo extraction of tensor signatures</p>\n<pre><span class=\"gp\">$</span> tensorsignatures --verbose train tsData.h5 denovo.pkl &lt;rank&gt; -k &lt;size&gt; -n -ep &lt;epochs&gt;\n</pre>\n<p>Running Tensorsignatures will yield a <code>pickle</code> dump which can subsequently\ninspected using the <code>tensorsignatures</code> package (tutorials will follow soon).</p>\n</div>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Run <code>tensorsignatures</code> on your dataset using the <code>TensorSignature</code> class provided by the package or via the command line tool.</li>\n<li>Compute percentile based bootstrap confidence intervals for inferred parameters.</li>\n<li>Basic plotting tools to visualize tensor signatures and inferred parameters</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Harald V\u00f6hringer and Moritz Gerstung</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.4.0 (2019-11-25)</h3>\n<ul>\n<li>added subroutine prep which adds the normalization constant to a hdf5 input file of tensorsignatures</li>\n<li>added subroutine refit which refits a set of predefined signatures to mew dataset</li>\n<li>updated README.rst</li>\n<li>fixed issue with package data</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.0 (2019-10-03)</h3>\n<ul>\n<li>various fixes</li>\n<li>design changes</li>\n<li>fixed setup.py</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2019-08-21)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6196266, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4423675c751a283813a01a24c558121c", "sha256": "fe20e863e3e79eac2a1cd7cf42b50957abf165dd20548bdb9246044e4145e11c"}, "downloads": -1, "filename": "tensorsignatures-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4423675c751a283813a01a24c558121c", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 38123, "upload_time": "2019-08-25T12:28:24", "upload_time_iso_8601": "2019-08-25T12:28:24.005119Z", "url": "https://files.pythonhosted.org/packages/ed/f4/b9cb9006bec8e8dbc2bf83418373b4c4c64cac7bb537be7c2110a7ed98e8/tensorsignatures-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64e0d7d1977b643a3d59f3ea90e95188", "sha256": "db558aa7d66489e492683fba312994888f66efa31ee2385b900aedfa1659b1de"}, "downloads": -1, "filename": "tensorsignatures-0.1.1.tar.gz", "has_sig": false, "md5_digest": "64e0d7d1977b643a3d59f3ea90e95188", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39644, "upload_time": "2019-08-25T12:27:52", "upload_time_iso_8601": "2019-08-25T12:27:52.256369Z", "url": "https://files.pythonhosted.org/packages/6d/f4/7b8ac424cbe196346791ca22a57bbfced07de0581c72a44fef53f5048fdf/tensorsignatures-0.1.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "683faf7419d27b5bf8012c87de536e44", "sha256": "a2e534d77c33fd1e7cbaa6932582843fd1876334627b832b8b716bb2fc9a6e37"}, "downloads": -1, "filename": "tensorsignatures-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "683faf7419d27b5bf8012c87de536e44", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 47147, "upload_time": "2019-10-03T08:49:35", "upload_time_iso_8601": "2019-10-03T08:49:35.479060Z", "url": "https://files.pythonhosted.org/packages/cf/a6/894874860ecf41fa50484d1da02c440dd93035eb45b703c103c79c7974b3/tensorsignatures-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3796fb15e80e6848775b7270ef4ac74", "sha256": "6d4ea2477970038206df068c07792825490816b2673f999e64c2fd42aef9299f"}, "downloads": -1, "filename": "tensorsignatures-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f3796fb15e80e6848775b7270ef4ac74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102084, "upload_time": "2019-10-03T08:48:46", "upload_time_iso_8601": "2019-10-03T08:48:46.644198Z", "url": "https://files.pythonhosted.org/packages/96/17/18d48730ffc9a4c0d5dcff7bd0d01528325c039a967faed13f386aa94642/tensorsignatures-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0298d66e2f6bdbe039b636a28d47110b", "sha256": "0d948b233aa56ed9eba5380d8ce38f639056ec4bf8678724d2a0c1d1d9d052f1"}, "downloads": -1, "filename": "tensorsignatures-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0298d66e2f6bdbe039b636a28d47110b", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 732007, "upload_time": "2019-11-25T19:05:55", "upload_time_iso_8601": "2019-11-25T19:05:55.708217Z", "url": "https://files.pythonhosted.org/packages/7e/5f/901d39e7c46f6087cb3e1e7c63c80a030aa1e02d92f7d4effcf6dafad1b2/tensorsignatures-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1911d33a807d67917cece733c7c18c7c", "sha256": "6e5f5f20fab0a1927b8ba57737200688531fe82249902cc3e77194447f858d82"}, "downloads": -1, "filename": "tensorsignatures-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1911d33a807d67917cece733c7c18c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108397, "upload_time": "2019-11-25T19:05:40", "upload_time_iso_8601": "2019-11-25T19:05:40.741716Z", "url": "https://files.pythonhosted.org/packages/3a/c5/a2fab9553029cad0fd298ee1cd546890307522393d5db3b297a93f8a7568/tensorsignatures-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0298d66e2f6bdbe039b636a28d47110b", "sha256": "0d948b233aa56ed9eba5380d8ce38f639056ec4bf8678724d2a0c1d1d9d052f1"}, "downloads": -1, "filename": "tensorsignatures-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0298d66e2f6bdbe039b636a28d47110b", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 732007, "upload_time": "2019-11-25T19:05:55", "upload_time_iso_8601": "2019-11-25T19:05:55.708217Z", "url": "https://files.pythonhosted.org/packages/7e/5f/901d39e7c46f6087cb3e1e7c63c80a030aa1e02d92f7d4effcf6dafad1b2/tensorsignatures-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1911d33a807d67917cece733c7c18c7c", "sha256": "6e5f5f20fab0a1927b8ba57737200688531fe82249902cc3e77194447f858d82"}, "downloads": -1, "filename": "tensorsignatures-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1911d33a807d67917cece733c7c18c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108397, "upload_time": "2019-11-25T19:05:40", "upload_time_iso_8601": "2019-11-25T19:05:40.741716Z", "url": "https://files.pythonhosted.org/packages/3a/c5/a2fab9553029cad0fd298ee1cd546890307522393d5db3b297a93f8a7568/tensorsignatures-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:03 2020"}