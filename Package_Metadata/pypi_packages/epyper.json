{"info": {"author": "Michal Nowotka", "author_email": "mmmnow@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Handhelds/PDA's", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Topic :: Multimedia :: Video :: Display"], "description": "epyper\n======\n\n![demo](https://raw.github.com/mnowotka/epyper/master/doc/demo.jpg)\n\nPython driver for Embedded Artists 2.7 inch E-paper Display Module:\n\nhttp://www.embeddedartists.com/products/displays/lcd_27_epaper.php. \n\nIt's based on original C code available here:\n\nhttp://www.embeddedartists.com/sites/default/files/support/displays/epaper/epaper_pi_130307.tar.gz\n\n[![Downloads](https://pypip.in/v/epyper/badge.png)](https://pypi.python.org/pypi/epyper)\n\nRationale\n--------\n\nSo you got your new shiny E-paper display from Embeded Artists. You plug it to your rPi to display some images. But how? Example C code is not very easy to adapt. All images included in C demo are written as byte tables in C header files. Function for displaying an image takes pointers to `int8_t`... In order to display new image you need to remember and old one. WTF!?!? You just wanted to display a png or jpg from your disk or web. And preferably do so in python. If that's your story then `epyper` is just for you.\n\n`Epyper` provides high level python interface for displaying images on e-paper. The most important class is `DisplayController`, which provides `displayImg` method accepting PIL `Image` to be displayed. The image needs to have proper size. It doesn't necessary needs to be black and white only - color images will be converted but the effect may be dissapointing so it's better to provide b&w or convert it before handing it to the `DisplayController`. \n\nInstallation\n--------\n\nThe best way to install epyper is to use `PIP`:\n\n    pip install epyper\n    \nThis command will install latest stable version with all dependencies.\nYou can of course clone development version from github but it's not guaranteed to be working.\n\nHow to use it?\n--------\n\n    #necessary imports first\n    from PIL import Image\n    from epyper.displayCOGProcess import Display\n    from epyper.displayController import DisplayController\n    \n    #create DisplayController instance specifying display type as an argument\n    display = DisplayController(Display.EPD_TYPE_270)\n    \n    #open some image\n    im = Image.open(\"some_image.png\")\n    \n    #display it!\n    display.displayImg(im)\n    \nDependencies\n--------\n * [WiringPi2-Python] (https://github.com/WiringPi/WiringPi2-Python)\n * [Pillow] (https://github.com/python-imaging/Pillow)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mnowotka/epyper", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "epyper", "package_url": "https://pypi.org/project/epyper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/epyper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mnowotka/epyper"}, "release_url": "https://pypi.org/project/epyper/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Python driver for Embedded Artists 2.7 inch E-paper Display Module", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            epyper<br>======<br><br>![demo](https://raw.github.com/mnowotka/epyper/master/doc/demo.jpg)<br><br>Python driver for Embedded Artists 2.7 inch E-paper Display Module:<br><br>http://www.embeddedartists.com/products/displays/lcd_27_epaper.php. <br><br>It's based on original C code available here:<br><br>http://www.embeddedartists.com/sites/default/files/support/displays/epaper/epaper_pi_130307.tar.gz<br><br>[![Downloads](https://pypip.in/v/epyper/badge.png)](https://pypi.python.org/pypi/epyper)<br><br>Rationale<br>--------<br><br>So you got your new shiny E-paper display from Embeded Artists. You plug it to your rPi to display some images. But how? Example C code is not very easy to adapt. All images included in C demo are written as byte tables in C header files. Function for displaying an image takes pointers to `int8_t`... In order to display new image you need to remember and old one. WTF!?!? You just wanted to display a png or jpg from your disk or web. And preferably do so in python. If that's your story then `epyper` is just for you.<br><br>`Epyper` provides high level python interface for displaying images on e-paper. The most important class is `DisplayController`, which provides `displayImg` method accepting PIL `Image` to be displayed. The image needs to have proper size. It doesn't necessary needs to be black and white only - color images will be converted but the effect may be dissapointing so it's better to provide b&amp;w or convert it before handing it to the `DisplayController`. <br><br>Installation<br>--------<br><br>The best way to install epyper is to use `PIP`:<br><br>    pip install epyper<br>    <br>This command will install latest stable version with all dependencies.<br>You can of course clone development version from github but it's not guaranteed to be working.<br><br>How to use it?<br>--------<br><br>    #necessary imports first<br>    from PIL import Image<br>    from epyper.displayCOGProcess import Display<br>    from epyper.displayController import DisplayController<br>    <br>    #create DisplayController instance specifying display type as an argument<br>    display = DisplayController(Display.EPD_TYPE_270)<br>    <br>    #open some image<br>    im = Image.open(\"some_image.png\")<br>    <br>    #display it!<br>    display.displayImg(im)<br>    <br>Dependencies<br>--------<br> * [WiringPi2-Python] (https://github.com/WiringPi/WiringPi2-Python)<br> * [Pillow] (https://github.com/python-imaging/Pillow)\n          </div>"}, "last_serial": 982114, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fc58051a09a601540958ab159a9c2c0d", "sha256": "f1d0745ba9d6a9cd6b81ec3fe478d334ee2ec7954684ef3fd7cdbf230f75400b"}, "downloads": -1, "filename": "epyper-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fc58051a09a601540958ab159a9c2c0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11710, "upload_time": "2014-01-26T22:44:48", "upload_time_iso_8601": "2014-01-26T22:44:48.323752Z", "url": "https://files.pythonhosted.org/packages/7c/38/114b6a30e5e8d00cbfd7a42f78732d71cde545c024c86e3d04f7fbf3537a/epyper-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc58051a09a601540958ab159a9c2c0d", "sha256": "f1d0745ba9d6a9cd6b81ec3fe478d334ee2ec7954684ef3fd7cdbf230f75400b"}, "downloads": -1, "filename": "epyper-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fc58051a09a601540958ab159a9c2c0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11710, "upload_time": "2014-01-26T22:44:48", "upload_time_iso_8601": "2014-01-26T22:44:48.323752Z", "url": "https://files.pythonhosted.org/packages/7c/38/114b6a30e5e8d00cbfd7a42f78732d71cde545c024c86e3d04f7fbf3537a/epyper-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:53 2020"}