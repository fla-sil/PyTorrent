{"info": {"author": "Salvador Aleguas", "author_email": "salvadoraleguas@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows :: Windows 10", "Programming Language :: Python :: 3"], "description": "# freshen\n\n[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://pypi.python.org/pypi/ansicolortags/)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/freshen-sorter)\n![PyPI - Implementation](https://img.shields.io/pypi/implementation/freshen-sorter)\n![PyPI - Wheel](https://img.shields.io/pypi/wheel/freshen-sorter)\n![PyPI](https://img.shields.io/pypi/v/freshen-sorter)\n\n## What is freshen?\n\nA program that sorts files based on various attributes from the windows context menu. Simply install the program and your context menu will have an added `Sort Files` entry.\n\nNothing complicated, it gets the job done.\n\n## What is the context menu?\n\nThe context menu is the option menu created from right clicking, such as:\n![](graphics/contextmenu.gif)\n\n# Installation\n\n## Install from PyPI\n\nFirst, install the pip package\n\n```python\npip install freshen-sorter\n```\n\nand run the following command to install to the context menu. This requires administrator permissions.\n\n```python\nfreshen -i\n```\n\nAnd you're done!\n\n## Installing from Source files\n\n1.  Download the [latest release](https://github.com/saleguas/freshen/releases) from the repository.\n\n2.  Unzip the folder to a location where it won't be moved.\n\n3.  Run the `reginstall.py` file\n\n# Usage\n\nMade to be simple! No complicated command lines needed.\n1\\. Install the required files.\n2\\. Right click on the background of any Directory\n3\\. Go to the `Sort Files` option and selected the desired organizer.\n\n# Organizers\n\nThere are **four** different options to organize files.\n\n## Sort by File Type\n\nProbably the most useful organizer. Sorts each file into a folder based on the `config/filegroups.yml` file. The file already comes with the most common file extensions for each type of file(pictures, videos, etc.)\n\n![](graphics/sortbyfiletype.gif)\n\n### filegroups.yml\n\nAs mentioned earlier, the `Sort by File Type` uses the `filegroups.yml` to determine organization. This file can be manually changed to change the desired output, and the organization is quite straightforward.\n\n```yaml\n# Audio Files\naudio:\n  - aif\n  - cda\n  - mid\n  - midi\n  - mp3\n  - mpa\n  - ogg\n  - wav\n  - wma\n  - wpl\n# Archive files\narchives:\n  - 7z\n  - arj\n  - deb\n  - pkg\n  - rar\n  - rpm\n  - tar.gz\n  - z\n  - zip\n# etc.\n```\n\nYou can either change the `filegroups.yml` file in the `src` directory and use the files built from the `src` folder, or if you already have the built files you can directly change the file in the `dist` directory. The context menu reads the file every time it is ran, so it will instantly update.\n\n## Sort by extension\n\n    Quite straightforward. Sorts each file into folders exclusively based on their extension.\n    ![](graphics/sortbyextension.gif)\n\n## Sort by Date\n\n    The only option that uses a cascading context menu(nested menus).\n    ![](graphics/cascadingmenu.png)\n\n    Sorts each file by the **DATE MODIFIED** attribute of the file. Has three options:\n\n### Day\n\nSorts up to the Day modified. Takes into account the year, month, and day.\n\n```js\nshortcuts\n\u251c\u2500\u2500 _2019-05-16\n\u251c\u2500\u2500 _2019-05-19\n\u251c\u2500\u2500 _2019-05-24\n\u2514\u2500\u2500 _2019-06-28\n```\n\n### Month\n\nSorts up to the Month modified. Takes into account the year and month.\n\n```js\nshortcuts\n\u251c\u2500\u2500 _2019-05\n\u2514\u2500\u2500 _2019-06\n```\n\n### Year\n\nSorts up to the Year modified. Takes into account only the year.\n'\n```js\nshortcuts\n\u2514\u2500\u2500 _2019\n```\n\n## Uproot Files\n\nThe only option that isn't actually a sort. **Recursively** moves every file of every subdirectory from the current location to the current location. Useful for getting rid of unnecessary folders and flattening out a directory. For example:\n\n```js\n  dummies\n  \u251c\u2500\u2500 Others\n  \u2502\u00a0\u00a0 \u2514\u2500\u2500 database.accdb\n  \u251c\u2500\u2500 audio\n  \u2502\u00a0\u00a0 \u251c\u2500\u2500 _2019-12-06\n  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 music.mp3\n  \u2502\u00a0\u00a0 \u2514\u2500\u2500 _2019-12-28\n  \u2502\u00a0\u00a0     \u2514\u2500\u2500 music_.mp3\n  \u251c\u2500\u2500 documents\n  \u2502\u00a0\u00a0 \u251c\u2500\u2500 _docx\n  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 document.docx\n  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 essay.docx\n  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 grades.docx\n  \u2502\u00a0\u00a0 \u2514\u2500\u2500 _txt\n  \u2502\u00a0\u00a0     \u2514\u2500\u2500 notes.txt\n  \u251c\u2500\u2500 executables\n  \u2502\u00a0\u00a0 \u2514\u2500\u2500 test.py\n  \u2514\u2500\u2500 videos\n      \u2514\u2500\u2500 video.mp4\n```\n\nWould be converted to:\n\n```js\ndummies\n\u251c\u2500\u2500 database.accdb\n\u251c\u2500\u2500 document.docx\n\u251c\u2500\u2500 essay.docx\n\u251c\u2500\u2500 grades.docx\n\u251c\u2500\u2500 music.mp3\n\u251c\u2500\u2500 music_.mp3\n\u251c\u2500\u2500 notes.txt\n\u251c\u2500\u2500 test.py\n\u2514\u2500\u2500 video.mp4\n```\n\n **BE VERY CAREFUL USING THIS!** It is easy to permanently ruin a directory or files, especially if something relies on a specific folder tree, for example the windows directory.\n\n# Extra Information\n\nIf you are working with the source files do NOT move the files after running `reginstall.py` as it might cause the code to be unstable. The registry points to the absolute path of the files when installed and does not update.\n\nFiles shouldn't be deleted or corrupted, as they haven't through all my testing so far. But keep in mind anything is possible, and if you data is THAT important you should probably back it up somewhere. Keep in mind I am NOT responsible for any damages that may arise from this program. Use it at your own risk.\n\nI also created some articles about this project! Check them out:\n\n-   [Creating Cascading Context Menus](https://medium.com/analytics-vidhya/creating-cascading-context-menus-with-the-windows-10-registry-f1cf3cd8398f)\n-   [Uploading functional projects to PIP](https://medium.com/analytics-vidhya/uploading-functional-python-projects-to-pip-pypi-af73af754da0)\n\n# Licensing\n\nThis project is licensed under the terms of the [MIT license](https://github.com/faheel/cleanup/blob/master/LICENSE).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/saleguas/freshen", "keywords": "file,file-organizer,context-menu,file-sorter,sorter", "license": "", "maintainer": "", "maintainer_email": "", "name": "freshen-sorter", "package_url": "https://pypi.org/project/freshen-sorter/", "platform": "", "project_url": "https://pypi.org/project/freshen-sorter/", "project_urls": {"Homepage": "https://github.com/saleguas/freshen"}, "release_url": "https://pypi.org/project/freshen-sorter/1.4.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A program that sorts files based on various attributes from the (currently only windows) context menu.", "version": "1.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>freshen</h1>\n<p><a href=\"https://pypi.python.org/pypi/ansicolortags/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb7554d3f165ac5e7bc396a6fbc22d51a890512a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f616e7369636f6c6f72746167732e737667\"></a>\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e862b84e1eed046217c71158e5f97f9e01c1ee4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6672657368656e2d736f72746572\">\n<img alt=\"PyPI - Implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ab6f9983be41ca234826565d9aa002927246d37/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f6672657368656e2d736f72746572\">\n<img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60cde337a0eeac48c0646f317f1655d61cbd5c90/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6672657368656e2d736f72746572\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/962cd94cdc99398b37ccf0be05465b3e0d1f55d9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6672657368656e2d736f72746572\"></p>\n<h2>What is freshen?</h2>\n<p>A program that sorts files based on various attributes from the windows context menu. Simply install the program and your context menu will have an added <code>Sort Files</code> entry.</p>\n<p>Nothing complicated, it gets the job done.</p>\n<h2>What is the context menu?</h2>\n<p>The context menu is the option menu created from right clicking, such as:\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c458c0cefcdaeda6bba27848931d2207373a5fdb/67726170686963732f636f6e746578746d656e752e676966\"></p>\n<h1>Installation</h1>\n<h2>Install from PyPI</h2>\n<p>First, install the pip package</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">freshen</span><span class=\"o\">-</span><span class=\"n\">sorter</span>\n</pre>\n<p>and run the following command to install to the context menu. This requires administrator permissions.</p>\n<pre><span class=\"n\">freshen</span> <span class=\"o\">-</span><span class=\"n\">i</span>\n</pre>\n<p>And you're done!</p>\n<h2>Installing from Source files</h2>\n<ol>\n<li>\n<p>Download the <a href=\"https://github.com/saleguas/freshen/releases\" rel=\"nofollow\">latest release</a> from the repository.</p>\n</li>\n<li>\n<p>Unzip the folder to a location where it won't be moved.</p>\n</li>\n<li>\n<p>Run the <code>reginstall.py</code> file</p>\n</li>\n</ol>\n<h1>Usage</h1>\n<p>Made to be simple! No complicated command lines needed.\n1. Install the required files.\n2. Right click on the background of any Directory\n3. Go to the <code>Sort Files</code> option and selected the desired organizer.</p>\n<h1>Organizers</h1>\n<p>There are <strong>four</strong> different options to organize files.</p>\n<h2>Sort by File Type</h2>\n<p>Probably the most useful organizer. Sorts each file into a folder based on the <code>config/filegroups.yml</code> file. The file already comes with the most common file extensions for each type of file(pictures, videos, etc.)</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ae4d1eeb8307a9d51a687e92a7954e70cced350/67726170686963732f736f7274627966696c65747970652e676966\"></p>\n<h3>filegroups.yml</h3>\n<p>As mentioned earlier, the <code>Sort by File Type</code> uses the <code>filegroups.yml</code> to determine organization. This file can be manually changed to change the desired output, and the organization is quite straightforward.</p>\n<pre><span class=\"c1\"># Audio Files</span>\n<span class=\"nt\">audio</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">aif</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cda</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">mid</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">midi</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">mp3</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">mpa</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">ogg</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">wav</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">wma</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">wpl</span>\n<span class=\"c1\"># Archive files</span>\n<span class=\"nt\">archives</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">7z</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arj</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">deb</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pkg</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rar</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rpm</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">tar.gz</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">z</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">zip</span>\n<span class=\"c1\"># etc.</span>\n</pre>\n<p>You can either change the <code>filegroups.yml</code> file in the <code>src</code> directory and use the files built from the <code>src</code> folder, or if you already have the built files you can directly change the file in the <code>dist</code> directory. The context menu reads the file every time it is ran, so it will instantly update.</p>\n<h2>Sort by extension</h2>\n<pre><code>Quite straightforward. Sorts each file into folders exclusively based on their extension.\n![](graphics/sortbyextension.gif)\n</code></pre>\n<h2>Sort by Date</h2>\n<pre><code>The only option that uses a cascading context menu(nested menus).\n![](graphics/cascadingmenu.png)\n\nSorts each file by the **DATE MODIFIED** attribute of the file. Has three options:\n</code></pre>\n<h3>Day</h3>\n<p>Sorts up to the Day modified. Takes into account the year, month, and day.</p>\n<pre><span class=\"nx\">shortcuts</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">16</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">19</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">24</span>\n<span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">06</span><span class=\"o\">-</span><span class=\"mi\">28</span>\n</pre>\n<h3>Month</h3>\n<p>Sorts up to the Month modified. Takes into account the year and month.</p>\n<pre><span class=\"nx\">shortcuts</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">05</span>\n<span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">06</span>\n</pre>\n<h3>Year</h3>\n<p>Sorts up to the Year modified. Takes into account only the year.\n'</p>\n<pre><span class=\"nx\">shortcuts</span>\n<span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">_2019</span>\n</pre>\n<h2>Uproot Files</h2>\n<p>The only option that isn't actually a sort. <strong>Recursively</strong> moves every file of every subdirectory from the current location to the current location. Useful for getting rid of unnecessary folders and flattening out a directory. For example:</p>\n<pre>  <span class=\"nx\">dummies</span>\n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">Others</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">accdb</span>\n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">audio</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">06</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">music</span><span class=\"p\">.</span><span class=\"nx\">mp3</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">_2019</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">28</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0     <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">music_</span><span class=\"p\">.</span><span class=\"nx\">mp3</span>\n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">documents</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">_docx</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">docx</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">essay</span><span class=\"p\">.</span><span class=\"nx\">docx</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">grades</span><span class=\"p\">.</span><span class=\"nx\">docx</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">_txt</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0     <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">notes</span><span class=\"p\">.</span><span class=\"nx\">txt</span>\n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">executables</span>\n  <span class=\"err\">\u2502</span>\u00a0\u00a0 <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">py</span>\n  <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">videos</span>\n      <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">video</span><span class=\"p\">.</span><span class=\"nx\">mp4</span>\n</pre>\n<p>Would be converted to:</p>\n<pre><span class=\"nx\">dummies</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">database</span><span class=\"p\">.</span><span class=\"nx\">accdb</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">docx</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">essay</span><span class=\"p\">.</span><span class=\"nx\">docx</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">grades</span><span class=\"p\">.</span><span class=\"nx\">docx</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">music</span><span class=\"p\">.</span><span class=\"nx\">mp3</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">music_</span><span class=\"p\">.</span><span class=\"nx\">mp3</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">notes</span><span class=\"p\">.</span><span class=\"nx\">txt</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">py</span>\n<span class=\"err\">\u2514\u2500\u2500</span> <span class=\"nx\">video</span><span class=\"p\">.</span><span class=\"nx\">mp4</span>\n</pre>\n<p><strong>BE VERY CAREFUL USING THIS!</strong> It is easy to permanently ruin a directory or files, especially if something relies on a specific folder tree, for example the windows directory.</p>\n<h1>Extra Information</h1>\n<p>If you are working with the source files do NOT move the files after running <code>reginstall.py</code> as it might cause the code to be unstable. The registry points to the absolute path of the files when installed and does not update.</p>\n<p>Files shouldn't be deleted or corrupted, as they haven't through all my testing so far. But keep in mind anything is possible, and if you data is THAT important you should probably back it up somewhere. Keep in mind I am NOT responsible for any damages that may arise from this program. Use it at your own risk.</p>\n<p>I also created some articles about this project! Check them out:</p>\n<ul>\n<li><a href=\"https://medium.com/analytics-vidhya/creating-cascading-context-menus-with-the-windows-10-registry-f1cf3cd8398f\" rel=\"nofollow\">Creating Cascading Context Menus</a></li>\n<li><a href=\"https://medium.com/analytics-vidhya/uploading-functional-python-projects-to-pip-pypi-af73af754da0\" rel=\"nofollow\">Uploading functional projects to PIP</a></li>\n</ul>\n<h1>Licensing</h1>\n<p>This project is licensed under the terms of the <a href=\"https://github.com/faheel/cleanup/blob/master/LICENSE\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 7006096, "releases": {"1.4.0": [{"comment_text": "", "digests": {"md5": "205667159e62313c808c34327352fcd1", "sha256": "29cad49d13d1309227a453b6a799a28e3e0cf22dd3cf4cca83b764c4f19b0a61"}, "downloads": -1, "filename": "freshen_sorter-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "205667159e62313c808c34327352fcd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9201, "upload_time": "2019-12-30T20:04:20", "upload_time_iso_8601": "2019-12-30T20:04:20.420592Z", "url": "https://files.pythonhosted.org/packages/ff/d7/2f37583a3943abf406a621f18a86be77def895bcca7b6fd78f056e9f55bc/freshen_sorter-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "827e30ad1b4874185935556ea9e996ac", "sha256": "3b7d80f641ed3614d01a283c38b57a10d82a955f2e9191a8bcf3a9e279f1efbf"}, "downloads": -1, "filename": "freshen-sorter-1.4.0.tar.gz", "has_sig": false, "md5_digest": "827e30ad1b4874185935556ea9e996ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7726, "upload_time": "2019-12-30T20:04:22", "upload_time_iso_8601": "2019-12-30T20:04:22.948263Z", "url": "https://files.pythonhosted.org/packages/65/8f/144f1f3e2c90e28025c77dcbd4c517008e11ade53e5cd2f2fd82664b345b/freshen-sorter-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "0dc782e736ee8f7705abfef1160bc9c4", "sha256": "9ec68f094fce12a5cbe8ed9cfee8a01d6a9c7ac96e1d56c3867dea0b587821bb"}, "downloads": -1, "filename": "freshen_sorter-1.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0dc782e736ee8f7705abfef1160bc9c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9129, "upload_time": "2019-12-30T20:06:31", "upload_time_iso_8601": "2019-12-30T20:06:31.299224Z", "url": "https://files.pythonhosted.org/packages/9a/86/d79e76d7ac99cde30a76b057af76fda5484ddd3ecca856910714d5d28822/freshen_sorter-1.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9394e2937f23e363fa82e5b8ad405fa2", "sha256": "a5e82b60dd4921b4537f2b5d1b88a9d32be1f28a0e5337e4a689cab9aaa22870"}, "downloads": -1, "filename": "freshen-sorter-1.4.1.tar.gz", "has_sig": false, "md5_digest": "9394e2937f23e363fa82e5b8ad405fa2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7708, "upload_time": "2019-12-30T20:06:32", "upload_time_iso_8601": "2019-12-30T20:06:32.446786Z", "url": "https://files.pythonhosted.org/packages/26/9f/36efbdb265bcb321e070fe1ad0a60a61980e28e057a88dec84189a01b574/freshen-sorter-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "56d3b0943e31df1a818afbc98ad81940", "sha256": "8655524ad6b7ca09a9b1bd457248759a4c474354a7d08f2790857df587145a65"}, "downloads": -1, "filename": "freshen_sorter-1.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "56d3b0943e31df1a818afbc98ad81940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9370, "upload_time": "2019-12-30T20:24:00", "upload_time_iso_8601": "2019-12-30T20:24:00.020291Z", "url": "https://files.pythonhosted.org/packages/26/98/1f02c9b03b86c2497ee1a41b88a06699215e3be5036cce116a5fbd20f29f/freshen_sorter-1.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e66f7eae04f0da979b675fb2f7884097", "sha256": "30c660d32b4d7479368074d63af709a92ae6d16e73a73672a1601a0ad0bd3825"}, "downloads": -1, "filename": "freshen-sorter-1.4.2.tar.gz", "has_sig": false, "md5_digest": "e66f7eae04f0da979b675fb2f7884097", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8114, "upload_time": "2019-12-30T20:24:01", "upload_time_iso_8601": "2019-12-30T20:24:01.215838Z", "url": "https://files.pythonhosted.org/packages/21/02/d7c8478c38cb7f680356b4b953500c174b0cae044fe7e748572892eab34f/freshen-sorter-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "d7bc997d8e89f45f91ea8f60d7c26460", "sha256": "d9933728a674a83b86d1b64f9de5329ee9dec9005006e1ff3c486752696a8890"}, "downloads": -1, "filename": "freshen_sorter-1.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d7bc997d8e89f45f91ea8f60d7c26460", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9188, "upload_time": "2020-04-12T20:27:10", "upload_time_iso_8601": "2020-04-12T20:27:10.365933Z", "url": "https://files.pythonhosted.org/packages/1b/f9/6bdc7f85d48cb92aa5dcb3c783490ca407e7ac607c428a968dbcc7f9b0b1/freshen_sorter-1.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c02046793a614d29c3ebd30c246790e", "sha256": "170787d962b3a691f3a1fa699ee4be7c8feda3331e70d5097ca1cff82ce458da"}, "downloads": -1, "filename": "freshen-sorter-1.4.3.tar.gz", "has_sig": false, "md5_digest": "0c02046793a614d29c3ebd30c246790e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7831, "upload_time": "2020-04-12T20:27:11", "upload_time_iso_8601": "2020-04-12T20:27:11.772000Z", "url": "https://files.pythonhosted.org/packages/22/5a/99fb99874ff09605ed9d63eacd56a30aa65af559c784ae787f8d0d97a67f/freshen-sorter-1.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7bc997d8e89f45f91ea8f60d7c26460", "sha256": "d9933728a674a83b86d1b64f9de5329ee9dec9005006e1ff3c486752696a8890"}, "downloads": -1, "filename": "freshen_sorter-1.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d7bc997d8e89f45f91ea8f60d7c26460", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9188, "upload_time": "2020-04-12T20:27:10", "upload_time_iso_8601": "2020-04-12T20:27:10.365933Z", "url": "https://files.pythonhosted.org/packages/1b/f9/6bdc7f85d48cb92aa5dcb3c783490ca407e7ac607c428a968dbcc7f9b0b1/freshen_sorter-1.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c02046793a614d29c3ebd30c246790e", "sha256": "170787d962b3a691f3a1fa699ee4be7c8feda3331e70d5097ca1cff82ce458da"}, "downloads": -1, "filename": "freshen-sorter-1.4.3.tar.gz", "has_sig": false, "md5_digest": "0c02046793a614d29c3ebd30c246790e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7831, "upload_time": "2020-04-12T20:27:11", "upload_time_iso_8601": "2020-04-12T20:27:11.772000Z", "url": "https://files.pythonhosted.org/packages/22/5a/99fb99874ff09605ed9d63eacd56a30aa65af559c784ae787f8d0d97a67f/freshen-sorter-1.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:24 2020"}