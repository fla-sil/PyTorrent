{"info": {"author": "Piotr Parkitny", "author_email": "pparkitn@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "polar\n============\n\npolar is a Python module that contains simple to use data science functions.\nIt is built on top of SciPy, scikit-learn, seaborn and pandas.\n\nInstallation\n------------\n\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install parkitny is using ``pip``:\n\n    pip install polar seaborn pandas scikit-learn scipy matplotlib numpy nltk -U\n\nDependencies\n------------\n\npolar requires:\n- Python (>= 3.5)\n- NumPy (>= 1.11.0)\n- SciPy (>= 0.17.0)\n- Seaborn (>= 0.9.0)\n- scikit-learn (>= 0.21.3)\n- nltk (>= 3.4.5)\n- python-pptx (>= 0.6.18)\n- cryptography (> 2.8)\n\nJupyter Notebook Examples\n------------\n\nHere is the link to the jupyter notebook with all the exmples that are described below\n[Polar-Examples](https://github.com/pparkitn/imagehost/blob/master/polar-examples.ipynb)\n\n\nACA (Automated Cohort Analysis) Example\n------------\n\nThe ACA creates three heatmaps for each feature in the data set.\n - Conversion heatmap - conversion per feature value \n - Distribution heatmap - distribution per feature value \n - Size heatmap - total samples per feature value\n\nData File:\n[ACA_date.csv](https://github.com/pparkitn/imagehost/blob/master/ACA_date.csv?raw=true)\n\nFinal Result Power Point:\n[ACA.pptx](https://github.com/pparkitn/imagehost/blob/master/ACA.pptx?raw=true)\n\n```python\nimport pandas as pd\nimport polar as pl\nfrom pptx import Presentation\n%matplotlib inline\n\nurl = \"https://raw.githubusercontent.com/pparkitn/imagehost/master/ACA_date.csv\"\ndata_df=pd.read_csv(url)\n\nprs = Presentation()    \npl.create_title(prs,'ACA')\nfor chart in pl.ACA_create_graphs(data_df,'date','label'):\n    pl.add_chart_slide(prs,chart[0],chart[1])\npl.save_presentation(prs,filename = 'ACA')\n```\n\nConversion:\n![Image](https://raw.githubusercontent.com/pparkitn/imagehost/master/var1conv_df.jpg)\n\nDistribution:\n![Image](https://raw.githubusercontent.com/pparkitn/imagehost/master/var1dist_df.jpg)\n\nSamples:\n![Image](https://raw.githubusercontent.com/pparkitn/imagehost/master/var1size_df.jpg)\n\nEDA Example\n------------\n\n```python\nimport pandas as pd\nimport openml\nimport polar as pl\n\ndataset = openml.datasets.get_dataset(31)\nX, y, categorical_indicator, attribute_names = \\\ndataset.get_data(target=dataset.default_target_attribute,dataset_format='dataframe')\n\nopenml_df = pd.DataFrame(X)\nopenml_df['target'] = y\n\ndata_df = pl.analyze_correlation(openml_df,'target')\npl.get_heatmap(data_df,'correlation_heat_map.png',1.1,14,'0.1f',0,100,5,5)\n```\n\n![Image](https://github.com/pparkitn/imagehost/blob/master/heat_map_1.jpg?raw=true)\n\n```python\ndata_df = pl.analyze_association(openml_df,'target',verbose=0)\npl.get_heatmap(data_df,'association_heat_map.png',1.1,12,'0.1f',0,100,10,10)\n\n```\n\n![Image](https://github.com/pparkitn/imagehost/blob/master/heat_map_2.jpg?raw=true)\n\n```python\nprint(pl.analyze_df(openml_df, 'target',10))\n```\n\n![Image](https://github.com/pparkitn/imagehost/blob/master/analyze_df.jpg?raw=true)\n\n```python\ndata_df = pl.get_important_features(openml_df,'target')\npl.get_bar(data_df,'bar.png','Importance','Feature_Name')\n```\n\n![Image](https://github.com/pparkitn/imagehost/blob/master/imp_features_bar.png?raw=true)\n\n\nNLP Example\n------------\n\n```python\nimport nltk\nnltk.download('wordnet')\nimport pandas as pd\nimport polar as pl\nfrom cryptography.fernet import Fernet\n\nurl = \"https://raw.githubusercontent.com/pparkitn/imagehost/master/test_real_or_not_from_kaggle.csv\"\ndata_df=pd.read_csv(url)\n\ndata_df.drop(columns=['id','keyword','location'], inplace=True)\ndata_df.head(3)\n```\n\n![Image](https://github.com/pparkitn/imagehost/blob/master/nlp_start_df.PNG?raw=true)\n\n```python\nkey = Fernet.generate_key()\ndata_df['text_encrypted'] =  data_df['text'].apply(pl.encrypt_df,args=(key,))\ndata_df['text_decrypted'] =  data_df['text_encrypted'].apply(pl.decrypt_df,args=(key,))\n\ndata_df['text_stem'] = data_df['text_decrypted'].apply(pl.nlp_text_process,args=('stem',))\ndata_df['text_stem_lem'] = data_df['text_stem'].apply(pl.nlp_text_process,args=('lem',))\n\ndata_df.head(3)\n```\n![Image](https://github.com/pparkitn/imagehost/blob/master/nlp_end_df.PNG?raw=true)\n\n\n```python\ncluster_df = pl.nlp_cluster(data_df, 'text_stem_lem',  10, 'text_cluster',1.0,1,100,1,'KMeans')\ncluster_df.groupby(['text_cluster']).count()\n```\n![Image](https://github.com/pparkitn/imagehost/blob/master/nlp_text_clusters.PNG?raw=true)\n```python\ncluster_df[cluster_df['text_cluster']==9]['text_stem_lem']\n```\n![Image](https://github.com/pparkitn/imagehost/blob/master/nlp_cluster9.PNG?raw=true)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/polar/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "polar", "package_url": "https://pypi.org/project/polar/", "platform": "", "project_url": "https://pypi.org/project/polar/", "project_urls": {"Homepage": "https://pypi.org/project/polar/"}, "release_url": "https://pypi.org/project/polar/0.0.103/", "requires_dist": ["pandas", "numpy", "scipy", "statsmodels", "sklearn", "seaborn", "scikit-learn", "cryptography", "nltk", "python-pptx"], "requires_python": ">=3.5", "summary": "Data Science Library", "version": "0.0.103", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>polar</h1>\n<p>polar is a Python module that contains simple to use data science functions.\nIt is built on top of SciPy, scikit-learn, seaborn and pandas.</p>\n<h2>Installation</h2>\n<p>If you already have a working installation of numpy and scipy,\nthe easiest way to install parkitny is using <code>pip</code>:</p>\n<pre><code>pip install polar seaborn pandas scikit-learn scipy matplotlib numpy nltk -U\n</code></pre>\n<h2>Dependencies</h2>\n<p>polar requires:</p>\n<ul>\n<li>Python (&gt;= 3.5)</li>\n<li>NumPy (&gt;= 1.11.0)</li>\n<li>SciPy (&gt;= 0.17.0)</li>\n<li>Seaborn (&gt;= 0.9.0)</li>\n<li>scikit-learn (&gt;= 0.21.3)</li>\n<li>nltk (&gt;= 3.4.5)</li>\n<li>python-pptx (&gt;= 0.6.18)</li>\n<li>cryptography (&gt; 2.8)</li>\n</ul>\n<h2>Jupyter Notebook Examples</h2>\n<p>Here is the link to the jupyter notebook with all the exmples that are described below\n<a href=\"https://github.com/pparkitn/imagehost/blob/master/polar-examples.ipynb\" rel=\"nofollow\">Polar-Examples</a></p>\n<h2>ACA (Automated Cohort Analysis) Example</h2>\n<p>The ACA creates three heatmaps for each feature in the data set.</p>\n<ul>\n<li>Conversion heatmap - conversion per feature value</li>\n<li>Distribution heatmap - distribution per feature value</li>\n<li>Size heatmap - total samples per feature value</li>\n</ul>\n<p>Data File:\n<a href=\"https://github.com/pparkitn/imagehost/blob/master/ACA_date.csv?raw=true\" rel=\"nofollow\">ACA_date.csv</a></p>\n<p>Final Result Power Point:\n<a href=\"https://github.com/pparkitn/imagehost/blob/master/ACA.pptx?raw=true\" rel=\"nofollow\">ACA.pptx</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">polar</span> <span class=\"k\">as</span> <span class=\"nn\">pl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pptx</span> <span class=\"kn\">import</span> <span class=\"n\">Presentation</span>\n<span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://raw.githubusercontent.com/pparkitn/imagehost/master/ACA_date.csv\"</span>\n<span class=\"n\">data_df</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"n\">prs</span> <span class=\"o\">=</span> <span class=\"n\">Presentation</span><span class=\"p\">()</span>    \n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">create_title</span><span class=\"p\">(</span><span class=\"n\">prs</span><span class=\"p\">,</span><span class=\"s1\">'ACA'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">chart</span> <span class=\"ow\">in</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">ACA_create_graphs</span><span class=\"p\">(</span><span class=\"n\">data_df</span><span class=\"p\">,</span><span class=\"s1\">'date'</span><span class=\"p\">,</span><span class=\"s1\">'label'</span><span class=\"p\">):</span>\n    <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">add_chart_slide</span><span class=\"p\">(</span><span class=\"n\">prs</span><span class=\"p\">,</span><span class=\"n\">chart</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">chart</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">save_presentation</span><span class=\"p\">(</span><span class=\"n\">prs</span><span class=\"p\">,</span><span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s1\">'ACA'</span><span class=\"p\">)</span>\n</pre>\n<p>Conversion:\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e593e2d77561856dcb2ec4cdb1a6420ac85711eb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f707061726b69746e2f696d616765686f73742f6d61737465722f76617231636f6e765f64662e6a7067\"></p>\n<p>Distribution:\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e048788ba50638bee4e90a6eb448c1f15ce0973b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f707061726b69746e2f696d616765686f73742f6d61737465722f76617231646973745f64662e6a7067\"></p>\n<p>Samples:\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4e5df4b7e3e017ce97d9f91472fb7102922ce14/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f707061726b69746e2f696d616765686f73742f6d61737465722f7661723173697a655f64662e6a7067\"></p>\n<h2>EDA Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">openml</span>\n<span class=\"kn\">import</span> <span class=\"nn\">polar</span> <span class=\"k\">as</span> <span class=\"nn\">pl</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">openml</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">get_dataset</span><span class=\"p\">(</span><span class=\"mi\">31</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">categorical_indicator</span><span class=\"p\">,</span> <span class=\"n\">attribute_names</span> <span class=\"o\">=</span> \\\n<span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">default_target_attribute</span><span class=\"p\">,</span><span class=\"n\">dataset_format</span><span class=\"o\">=</span><span class=\"s1\">'dataframe'</span><span class=\"p\">)</span>\n\n<span class=\"n\">openml_df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">openml_df</span><span class=\"p\">[</span><span class=\"s1\">'target'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">y</span>\n\n<span class=\"n\">data_df</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">analyze_correlation</span><span class=\"p\">(</span><span class=\"n\">openml_df</span><span class=\"p\">,</span><span class=\"s1\">'target'</span><span class=\"p\">)</span>\n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">get_heatmap</span><span class=\"p\">(</span><span class=\"n\">data_df</span><span class=\"p\">,</span><span class=\"s1\">'correlation_heat_map.png'</span><span class=\"p\">,</span><span class=\"mf\">1.1</span><span class=\"p\">,</span><span class=\"mi\">14</span><span class=\"p\">,</span><span class=\"s1\">'0.1f'</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4679e18cb7a54a013f682f44483449690f85f941/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f686561745f6d61705f312e6a70673f7261773d74727565\"></p>\n<pre><span class=\"n\">data_df</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">analyze_association</span><span class=\"p\">(</span><span class=\"n\">openml_df</span><span class=\"p\">,</span><span class=\"s1\">'target'</span><span class=\"p\">,</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">get_heatmap</span><span class=\"p\">(</span><span class=\"n\">data_df</span><span class=\"p\">,</span><span class=\"s1\">'association_heat_map.png'</span><span class=\"p\">,</span><span class=\"mf\">1.1</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"s1\">'0.1f'</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11e644b092ba07dfc5c85d298266cc9194010cce/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f686561745f6d61705f322e6a70673f7261773d74727565\"></p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">analyze_df</span><span class=\"p\">(</span><span class=\"n\">openml_df</span><span class=\"p\">,</span> <span class=\"s1\">'target'</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc581865f3d89ea1edb7e79b6a4296cc8b93ef5d/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f616e616c797a655f64662e6a70673f7261773d74727565\"></p>\n<pre><span class=\"n\">data_df</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">get_important_features</span><span class=\"p\">(</span><span class=\"n\">openml_df</span><span class=\"p\">,</span><span class=\"s1\">'target'</span><span class=\"p\">)</span>\n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">get_bar</span><span class=\"p\">(</span><span class=\"n\">data_df</span><span class=\"p\">,</span><span class=\"s1\">'bar.png'</span><span class=\"p\">,</span><span class=\"s1\">'Importance'</span><span class=\"p\">,</span><span class=\"s1\">'Feature_Name'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fda7d1db7537d3a95cee0ec140c0c46ab0d41cb4/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f696d705f66656174757265735f6261722e706e673f7261773d74727565\"></p>\n<h2>NLP Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">nltk</span>\n<span class=\"n\">nltk</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'wordnet'</span><span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">polar</span> <span class=\"k\">as</span> <span class=\"nn\">pl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cryptography.fernet</span> <span class=\"kn\">import</span> <span class=\"n\">Fernet</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://raw.githubusercontent.com/pparkitn/imagehost/master/test_real_or_not_from_kaggle.csv\"</span>\n<span class=\"n\">data_df</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"n\">data_df</span><span class=\"o\">.</span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">,</span><span class=\"s1\">'keyword'</span><span class=\"p\">,</span><span class=\"s1\">'location'</span><span class=\"p\">],</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">data_df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/386f4acef78f7145beab1968e73e3c52f233f6f0/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f6e6c705f73746172745f64662e504e473f7261773d74727565\"></p>\n<pre><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">Fernet</span><span class=\"o\">.</span><span class=\"n\">generate_key</span><span class=\"p\">()</span>\n<span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_encrypted'</span><span class=\"p\">]</span> <span class=\"o\">=</span>  <span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">encrypt_df</span><span class=\"p\">,</span><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,))</span>\n<span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_decrypted'</span><span class=\"p\">]</span> <span class=\"o\">=</span>  <span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_encrypted'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">decrypt_df</span><span class=\"p\">,</span><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,))</span>\n\n<span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_stem'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_decrypted'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">nlp_text_process</span><span class=\"p\">,</span><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'stem'</span><span class=\"p\">,))</span>\n<span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_stem_lem'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data_df</span><span class=\"p\">[</span><span class=\"s1\">'text_stem'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">nlp_text_process</span><span class=\"p\">,</span><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'lem'</span><span class=\"p\">,))</span>\n\n<span class=\"n\">data_df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d9e399c9ebcbf90b3aaa46bb4216aaf51c087ef/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f6e6c705f656e645f64662e504e473f7261773d74727565\"></p>\n<pre><span class=\"n\">cluster_df</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">nlp_cluster</span><span class=\"p\">(</span><span class=\"n\">data_df</span><span class=\"p\">,</span> <span class=\"s1\">'text_stem_lem'</span><span class=\"p\">,</span>  <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'text_cluster'</span><span class=\"p\">,</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"s1\">'KMeans'</span><span class=\"p\">)</span>\n<span class=\"n\">cluster_df</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">([</span><span class=\"s1\">'text_cluster'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abdc21fb96322517d3bac6019434c3dcba057060/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f6e6c705f746578745f636c7573746572732e504e473f7261773d74727565\"></p>\n<pre><span class=\"n\">cluster_df</span><span class=\"p\">[</span><span class=\"n\">cluster_df</span><span class=\"p\">[</span><span class=\"s1\">'text_cluster'</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"mi\">9</span><span class=\"p\">][</span><span class=\"s1\">'text_stem_lem'</span><span class=\"p\">]</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b4c4e138f0f6bab073e9f20281439ae953f707c/68747470733a2f2f6769746875622e636f6d2f707061726b69746e2f696d616765686f73742f626c6f622f6d61737465722f6e6c705f636c7573746572392e504e473f7261773d74727565\"></p>\n\n          </div>"}, "last_serial": 7180193, "releases": {"0.0.101": [{"comment_text": "", "digests": {"md5": "067399cde7154a8fb4f5c60a52aef4fc", "sha256": "a50e22a9d3df51d30303c483277faf11bd01b7bf139ce099eace3ee3f9ff71f0"}, "downloads": -1, "filename": "polar-0.0.101-py3-none-any.whl", "has_sig": false, "md5_digest": "067399cde7154a8fb4f5c60a52aef4fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10028, "upload_time": "2020-05-05T15:01:15", "upload_time_iso_8601": "2020-05-05T15:01:15.215143Z", "url": "https://files.pythonhosted.org/packages/1a/38/6409b71af801192afe9a3a18c2ae4d66d6145696f5d0a3c7757b76515778/polar-0.0.101-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0b42db88691ff1b39d5c01729672693", "sha256": "3e5cd63996a140567bb566f186353524e90f6633d55ee14a9b7575751ec9a7da"}, "downloads": -1, "filename": "polar-0.0.101.tar.gz", "has_sig": false, "md5_digest": "a0b42db88691ff1b39d5c01729672693", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11628, "upload_time": "2020-05-05T15:01:16", "upload_time_iso_8601": "2020-05-05T15:01:16.879574Z", "url": "https://files.pythonhosted.org/packages/d5/06/794f7594641ec9d9c5fca67246669170dcd824105d4efbf6c4c5a1c63716/polar-0.0.101.tar.gz", "yanked": false}], "0.0.103": [{"comment_text": "", "digests": {"md5": "c5e551a768b05005b39f861fe2ce5415", "sha256": "b9d3e537e460d922fca71e5cdfd4b787ddf8f66f9a46f2363a4744afe1b4e69f"}, "downloads": -1, "filename": "polar-0.0.103-py3-none-any.whl", "has_sig": false, "md5_digest": "c5e551a768b05005b39f861fe2ce5415", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10045, "upload_time": "2020-05-06T13:12:28", "upload_time_iso_8601": "2020-05-06T13:12:28.296892Z", "url": "https://files.pythonhosted.org/packages/5a/4e/16f0b8a87dcd259c24036d8c3edf1004b7b1c7e5e92ea4f5e68af902161c/polar-0.0.103-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5b8b57f8c4ceeeef83b0c0a8f3775a1", "sha256": "01972d14ce4985b94f587d9a5fbe350f2f64db89f0aff86e6c114c738ce978df"}, "downloads": -1, "filename": "polar-0.0.103.tar.gz", "has_sig": false, "md5_digest": "f5b8b57f8c4ceeeef83b0c0a8f3775a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11638, "upload_time": "2020-05-06T13:12:29", "upload_time_iso_8601": "2020-05-06T13:12:29.421176Z", "url": "https://files.pythonhosted.org/packages/4b/1d/ed1b2557c9271643ce40093bc2b6d042d780c5d38334bbe6289dd4787981/polar-0.0.103.tar.gz", "yanked": false}], "0.0.98": [{"comment_text": "", "digests": {"md5": "b6a96c62e9761bb7fe68f6702efee201", "sha256": "f0115310a216574b68df3f968660f065653d83821c5a6fb300a6be36db8a08f4"}, "downloads": -1, "filename": "polar-0.0.98-py3-none-any.whl", "has_sig": false, "md5_digest": "b6a96c62e9761bb7fe68f6702efee201", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10012, "upload_time": "2020-04-23T21:48:08", "upload_time_iso_8601": "2020-04-23T21:48:08.803071Z", "url": "https://files.pythonhosted.org/packages/f9/84/8d6713bd4c8f59b5a4933bdbc1de991c9c337df7d8c89ebba0ee62792126/polar-0.0.98-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "596a1a4aec7691cc454beb801b84faed", "sha256": "d0734f1bf45d22a4a3671ebc8d14605b826a4acd8b97e8d497a477cad4523506"}, "downloads": -1, "filename": "polar-0.0.98.tar.gz", "has_sig": false, "md5_digest": "596a1a4aec7691cc454beb801b84faed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11618, "upload_time": "2020-04-23T21:48:10", "upload_time_iso_8601": "2020-04-23T21:48:10.069093Z", "url": "https://files.pythonhosted.org/packages/d2/98/1d22de800775523dc39f222fa4a0ab6c8a56f97132a823f053e2a9708a65/polar-0.0.98.tar.gz", "yanked": false}], "0.0.99": [{"comment_text": "", "digests": {"md5": "4b9511783ac4736f4838988876945c0a", "sha256": "232674b6e9b0164a35f65be1c7138491fc52711a8d0ef943c6b8aef6d32c1ad2"}, "downloads": -1, "filename": "polar-0.0.99-py3-none-any.whl", "has_sig": false, "md5_digest": "4b9511783ac4736f4838988876945c0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10014, "upload_time": "2020-05-05T14:27:51", "upload_time_iso_8601": "2020-05-05T14:27:51.767225Z", "url": "https://files.pythonhosted.org/packages/d6/19/a453c1cef0c7a3282465cc28d519ab81486044eb63d646284eb0f2dad407/polar-0.0.99-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f49b1548a94fec53fea6f1e354f1964", "sha256": "c0c72daa84138e703ce03bad0c4a26a972344d76c0ea9f95cfb87e035c81b531"}, "downloads": -1, "filename": "polar-0.0.99.tar.gz", "has_sig": false, "md5_digest": "4f49b1548a94fec53fea6f1e354f1964", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11624, "upload_time": "2020-05-05T14:27:53", "upload_time_iso_8601": "2020-05-05T14:27:53.151463Z", "url": "https://files.pythonhosted.org/packages/55/21/5b2cc36d97d2a6ec775d373c30e44a8d18434fcc1775aaa48d93fa7a0963/polar-0.0.99.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c5e551a768b05005b39f861fe2ce5415", "sha256": "b9d3e537e460d922fca71e5cdfd4b787ddf8f66f9a46f2363a4744afe1b4e69f"}, "downloads": -1, "filename": "polar-0.0.103-py3-none-any.whl", "has_sig": false, "md5_digest": "c5e551a768b05005b39f861fe2ce5415", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10045, "upload_time": "2020-05-06T13:12:28", "upload_time_iso_8601": "2020-05-06T13:12:28.296892Z", "url": "https://files.pythonhosted.org/packages/5a/4e/16f0b8a87dcd259c24036d8c3edf1004b7b1c7e5e92ea4f5e68af902161c/polar-0.0.103-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5b8b57f8c4ceeeef83b0c0a8f3775a1", "sha256": "01972d14ce4985b94f587d9a5fbe350f2f64db89f0aff86e6c114c738ce978df"}, "downloads": -1, "filename": "polar-0.0.103.tar.gz", "has_sig": false, "md5_digest": "f5b8b57f8c4ceeeef83b0c0a8f3775a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11638, "upload_time": "2020-05-06T13:12:29", "upload_time_iso_8601": "2020-05-06T13:12:29.421176Z", "url": "https://files.pythonhosted.org/packages/4b/1d/ed1b2557c9271643ce40093bc2b6d042d780c5d38334bbe6289dd4787981/polar-0.0.103.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:57 2020"}