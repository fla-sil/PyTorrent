{"info": {"author": "Jon Robinson", "author_email": "jonrobinson1980@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Dash"], "description": "Import a Wavefront OBJ file into a plot.ly Dash 3dMesh graph:\n\n```\npip install git+https://github.com/aegis1980/dash-obj-in-3dmesh.git\n```\n\n\n### Some notes:\n\n#### File locations\nPut your wavefront obj & mtl file in 'data/obj' directory (this is the default). Alternatively pass a path to:\n```python\nimport_geometry(obj_names : List[str], path = _config.GEOMETRY_DIR)\n```\n#### Geometry\n* Only triangulated meshes supported (i.e 3 vertices per face). Sort this out in your modelling software (e.g. Rhino)\n* Textures, normals, groups are all ignored - only vertices, faces, materials and object names are parsed and passed to Dash graph as mesh data.\n#### Materials\nOnly basic materials supported in mtl file:\ne.g:\n```\nnewmtl diffuse_Green\nKa 0.0000 0.0000 0.0000\nKd 0.0000 1.0000 0.0000\nKs 1.0000 1.0000 1.0000\nTf 0.0000 0.0000 0.0000\nd 1.0000\nNs 0.0000\n```\nOnly the value for `Kd` is used - so set this as your colour (in modelling software)\n\n### Code example\n\n```python\nimport dash\nfrom dash_obj_in_3dmesh import geometry_tools, wav_obj\n\n\nmodel_name = \"test\" #.obj & .mtl files in data/obj\n\n\naxis_template = {\n    \"showbackground\": False,\n    \"visible\" : False\n}\n\nplot_layout = {\n    \"title\": \"\",\n    \"margin\": {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    \"font\": {\"size\": 12, \"color\": \"white\"},\n    \"showlegend\": False,\n    'uirevision':'same_all_the_time', #this keeps camera position etc the same when data changes.\n    \"scene\": {\n        \"xaxis\": axis_template,\n        \"yaxis\": axis_template,\n        \"zaxis\": axis_template,\n        \"aspectmode\" : \"data\",\n        \"camera\": {\"eye\": {\"x\": 1.25, \"y\": 1.25, \"z\": 1.25}},\n        \"annotations\": [],\n    },\n}\n\nlayout = return html.Div([dcc.Graph(\n                        id=\"graph\",\n                        figure={\n                            \"data\": geometry_tools.import_geometry([model_name]),\n                            \"layout\": plot_layout,\n                        },\n                        config={\"scrollZoom\": True}, # activates wheel thingy on mouse to zoom and wotnot\n                    )])\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "CC Attribution 4.0 International", "maintainer": "", "maintainer_email": "", "name": "dash-obj-in-3dmesh", "package_url": "https://pypi.org/project/dash-obj-in-3dmesh/", "platform": "", "project_url": "https://pypi.org/project/dash-obj-in-3dmesh/", "project_urls": null, "release_url": "https://pypi.org/project/dash-obj-in-3dmesh/0.3.1/", "requires_dist": ["numpy", "dash", "multimethod"], "requires_python": ">=3.5", "summary": "Some tools for getting Wavefront OBJ files into a Plotly Dash 3dmesh graph", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Import a Wavefront OBJ file into a plot.ly Dash 3dMesh graph:</p>\n<pre><code>pip install git+https://github.com/aegis1980/dash-obj-in-3dmesh.git\n</code></pre>\n<h3>Some notes:</h3>\n<h4>File locations</h4>\n<p>Put your wavefront obj &amp; mtl file in 'data/obj' directory (this is the default). Alternatively pass a path to:</p>\n<pre><span class=\"n\">import_geometry</span><span class=\"p\">(</span><span class=\"n\">obj_names</span> <span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">_config</span><span class=\"o\">.</span><span class=\"n\">GEOMETRY_DIR</span><span class=\"p\">)</span>\n</pre>\n<h4>Geometry</h4>\n<ul>\n<li>Only triangulated meshes supported (i.e 3 vertices per face). Sort this out in your modelling software (e.g. Rhino)</li>\n<li>Textures, normals, groups are all ignored - only vertices, faces, materials and object names are parsed and passed to Dash graph as mesh data.</li>\n</ul>\n<h4>Materials</h4>\n<p>Only basic materials supported in mtl file:\ne.g:</p>\n<pre><code>newmtl diffuse_Green\nKa 0.0000 0.0000 0.0000\nKd 0.0000 1.0000 0.0000\nKs 1.0000 1.0000 1.0000\nTf 0.0000 0.0000 0.0000\nd 1.0000\nNs 0.0000\n</code></pre>\n<p>Only the value for <code>Kd</code> is used - so set this as your colour (in modelling software)</p>\n<h3>Code example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dash</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dash_obj_in_3dmesh</span> <span class=\"kn\">import</span> <span class=\"n\">geometry_tools</span><span class=\"p\">,</span> <span class=\"n\">wav_obj</span>\n\n\n<span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"test\"</span> <span class=\"c1\">#.obj &amp; .mtl files in data/obj</span>\n\n\n<span class=\"n\">axis_template</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"showbackground\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"visible\"</span> <span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">plot_layout</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"margin\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"t\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"l\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"r\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">},</span>\n    <span class=\"s2\">\"font\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"size\"</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"s2\">\"color\"</span><span class=\"p\">:</span> <span class=\"s2\">\"white\"</span><span class=\"p\">},</span>\n    <span class=\"s2\">\"showlegend\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'uirevision'</span><span class=\"p\">:</span><span class=\"s1\">'same_all_the_time'</span><span class=\"p\">,</span> <span class=\"c1\">#this keeps camera position etc the same when data changes.</span>\n    <span class=\"s2\">\"scene\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"xaxis\"</span><span class=\"p\">:</span> <span class=\"n\">axis_template</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"yaxis\"</span><span class=\"p\">:</span> <span class=\"n\">axis_template</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"zaxis\"</span><span class=\"p\">:</span> <span class=\"n\">axis_template</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"aspectmode\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"data\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"camera\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"eye\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"mf\">1.25</span><span class=\"p\">,</span> <span class=\"s2\">\"y\"</span><span class=\"p\">:</span> <span class=\"mf\">1.25</span><span class=\"p\">,</span> <span class=\"s2\">\"z\"</span><span class=\"p\">:</span> <span class=\"mf\">1.25</span><span class=\"p\">}},</span>\n        <span class=\"s2\">\"annotations\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"k\">return</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">Div</span><span class=\"p\">([</span><span class=\"n\">dcc</span><span class=\"o\">.</span><span class=\"n\">Graph</span><span class=\"p\">(</span>\n                        <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"graph\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">figure</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                            <span class=\"s2\">\"data\"</span><span class=\"p\">:</span> <span class=\"n\">geometry_tools</span><span class=\"o\">.</span><span class=\"n\">import_geometry</span><span class=\"p\">([</span><span class=\"n\">model_name</span><span class=\"p\">]),</span>\n                            <span class=\"s2\">\"layout\"</span><span class=\"p\">:</span> <span class=\"n\">plot_layout</span><span class=\"p\">,</span>\n                        <span class=\"p\">},</span>\n                        <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"scrollZoom\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">},</span> <span class=\"c1\"># activates wheel thingy on mouse to zoom and wotnot</span>\n                    <span class=\"p\">)])</span>\n</pre>\n\n          </div>"}, "last_serial": 6205990, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "277c5ad03d50fdabb4bea63db8b3c6ca", "sha256": "457d93724c4d973a98339fc6e494ab50b9eeeafd96c480560ba87f6a818c66a4"}, "downloads": -1, "filename": "dash_obj_in_3dmesh-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "277c5ad03d50fdabb4bea63db8b3c6ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14398, "upload_time": "2019-11-26T02:20:09", "upload_time_iso_8601": "2019-11-26T02:20:09.897441Z", "url": "https://files.pythonhosted.org/packages/9a/2d/27a7e7e2127a3d981edcf422573fe0813f3d24bffecf8ce940ca4daafc65/dash_obj_in_3dmesh-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "942e8b64aeba6f9114adedfbeb7b07b7", "sha256": "647005b5b62cfec780a1966cbc2a4e507577b6d5ad73d6590a672600c1126cd8"}, "downloads": -1, "filename": "dash-obj-in-3dmesh-0.3.1.tar.gz", "has_sig": false, "md5_digest": "942e8b64aeba6f9114adedfbeb7b07b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13373, "upload_time": "2019-11-26T02:20:11", "upload_time_iso_8601": "2019-11-26T02:20:11.485878Z", "url": "https://files.pythonhosted.org/packages/a8/41/4bf97113192c62f85ebfb6cda4057424a4fc29896bc5f18a4be87b7a6370/dash-obj-in-3dmesh-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "277c5ad03d50fdabb4bea63db8b3c6ca", "sha256": "457d93724c4d973a98339fc6e494ab50b9eeeafd96c480560ba87f6a818c66a4"}, "downloads": -1, "filename": "dash_obj_in_3dmesh-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "277c5ad03d50fdabb4bea63db8b3c6ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14398, "upload_time": "2019-11-26T02:20:09", "upload_time_iso_8601": "2019-11-26T02:20:09.897441Z", "url": "https://files.pythonhosted.org/packages/9a/2d/27a7e7e2127a3d981edcf422573fe0813f3d24bffecf8ce940ca4daafc65/dash_obj_in_3dmesh-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "942e8b64aeba6f9114adedfbeb7b07b7", "sha256": "647005b5b62cfec780a1966cbc2a4e507577b6d5ad73d6590a672600c1126cd8"}, "downloads": -1, "filename": "dash-obj-in-3dmesh-0.3.1.tar.gz", "has_sig": false, "md5_digest": "942e8b64aeba6f9114adedfbeb7b07b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13373, "upload_time": "2019-11-26T02:20:11", "upload_time_iso_8601": "2019-11-26T02:20:11.485878Z", "url": "https://files.pythonhosted.org/packages/a8/41/4bf97113192c62f85ebfb6cda4057424a4fc29896bc5f18a4be87b7a6370/dash-obj-in-3dmesh-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:35 2020"}