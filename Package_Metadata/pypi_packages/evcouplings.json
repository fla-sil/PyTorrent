{"info": {"author": "Thomas Hopf, Benjamin Schubert", "author_email": "thomas_hopf@hms.harvard.edu, benjamin_schubert@hms.harvard.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "[![Build Status](https://travis-ci.org/debbiemarkslab/EVcouplings.svg?branch=master)](https://travis-ci.org/debbiemarkslab/EVcouplings)\n# EVcouplings\n\nPredict protein structure, function and mutations using evolutionary sequence covariation.\n\n## Installation and setup\n\n### Installing the Python package\n\nIf you are simply interested in using EVcouplings as a library, installing the Python package is all you need to do (unless you use functions that depend on external tools). If you want to run the *evcouplings* application (alignment generation, model parameter inference, structure prediction, etc.) you will also need to follow the sections on installing external tools and databases.\n\n#### Requirements\n\nEVcouplings requires a Python >= 3.5 installation. Since it depends on some packages that can be tricky to install using pip (numba, numpy, ...), we recommend using the [Anaconda Python distribution](https://www.continuum.io/downloads). In case you are creating a new conda environment or using miniconda, please make sure to run `conda install anaconda` before running pip, or otherwise the required packages will not be present.  \n\n#### Installation\n\nTo install the latest official release of EVcouplings from PyPI, run\n\n    pip install evcouplings\n\nTo obtain the latest version of EVcouplings from the github repository, run\n\n    pip install git+https://github.com/debbiemarkslab/EVcouplings.git\n\nand to update to the latest version after previously installing EVcouplings from the repository, run\n\n    pip install -U --no-deps git+https://github.com/debbiemarkslab/EVcouplings.git\n\n\n### External software tools\n\n*After installation and before running compute jobs, the paths to the respective binaries of the following external tools have to be set in your EVcouplings job configuration file(s).*\n\n#### plmc (required)\n\nTool for inferring undirected statistical models from sequence variation. Download and install plmc to a directory of your choice from the [plmc github repository](https://github.com/debbiemarkslab/plmc) according to the included documentation.\n\nFor compatibility with evcouplings, please compile using\n\n    make all-openmp32\n\n\n#### jackhmmer (required)\n\nDownload and install HMMER from the [HMMER webpage](http://hmmer.org/download.html) to a directory of your choice.\n\n#### HHsuite (optional)\n\nevcouplings uses the hhfilter tool to filter sequence alignments. Installation is only required if you need this functionality.\n\nDownload and install HHsuite from the [HHsuite github repository](https://github.com/soedinglab/hh-suite) to a directory of your choice.\n\n#### CNSsolve 1.21 (optional)\n\nevcouplings uses CNSsolve for computing 3D structure models from coupled residue pairs. Installation is only required if you want to run the *fold* stage of the computational pipeline.\n\nDownload and unpack a compiled version of [CNSsolve 1.21](http://cns-online.org/v1.21/) to a directory of your choice. No further setup is necessary, since evcouplings takes care of setting the right environment variables internally without relying on the included shell script cns_solve_env\n(you will have to put the path to the cns binary in your job config file however, e.g. cns_solve_1.21/intel-x86_64bit-linux/bin/cns).\n\n#### PSIPRED (optional)\n\nevcouplings uses PSIPRED for secondary structure prediction, to generate secondary structure distance and dihedral angle restraints for 3D structure computation.\nInstallation is only required if you want to run the *fold* stage of the computational pipeline, and do not supply your own secondary structure predictions.\n\nDownload and install [PSIPRED](http://bioinfadmin.cs.ucl.ac.uk/downloads/psipred/) according to the instructions in the included README file.\n\n#### maxcluster (optional)\n\nevcouplings uses maxcluster to compare predicted 3D structure models to experimental protein structures, if there are any for the target protein or one\nof its homologs. Installation is only required if you want to run the *fold* stage of the computational pipeline.\n \nDownload [maxcluster](http://www.sbg.bio.ic.ac.uk/~maxcluster/) and place it in a directory of your choice.\n\n### Databases\n\n*After download and before running compute jobs, the paths to the respective databases have to be set in your EVcouplings job configuration file(s).*\n\n#### Automatic database setup\nThe *evcouplings* application minimally needs a sequence database for alignment generation, and structure mapping information for comparison of evolutionary couplings to 3D structures.\n\nSequence and structure mapping databases for EVcouplings can be automatically downloaded using the included command line tool *evcouplings_dbupdate*.\n This tool will fetch the UniProt (SwissProt/TrEMBL), UniRef100 and UniRef90 databases, and generate SIFTS-based structure mapping tables.\n\nPlease see\n\n    evcouplings_dbupdate --help\n\nfor how to download the respective databases. Note that this may take a while, especially the generation of post-processed SIFTS mapping files. \n\n#### Sequence databases for EVcomplex\nRunning the EVcouplings pipeline for protein complexes (aka EVcomplex) requires two pre-computed databases. You can download these databases here:\n\nena_genome_location_table: https://marks.hms.harvard.edu/evcomplex_databases/cds_pro_2017_02.txt\nuniprot_to_embl_table: https://marks.hms.harvard.edu/evcomplex_databases/idmapping_uniprot_embl_2017_02.txt\n\nSave these databases in your local environment, and then add the paths to the local copies of these databases to your config file for the complex pipeline. \n\nIn future releases these databases will be generated automatically. \n\n#### Other sequence databases\n\nYou can however use any sequence database of your choice in FASTA format if you prefer to. The database for any particular job needs to be defined in the job configuration file (\"databases\" section) and set as the input database in the \"alignment\" section.\n\n#### Structure and mapping databases\n\nRelevant PDB structures for comparison of ECs and 3D structure predictions will be automatically fetched from the web in the new compressed MMTF format on a per-job basis. You can however also pre-download the entire PDB and place the structures in a directory if you want to (and set pdb_mmtf_dir in your job configuration).\n\nUniprot to PDB index mapping files will be automatically generated by EVcouplings based on the SIFTS database.\nYou can either generate the files by running *evcouplings_dbupdate* (see above, preferred), or by pointing the sifts_mapping_table and sifts_sequence_db configuration parameters to file paths inside an already existing directory. If these files do not yet exist, they will be created by fetching and integrating data from the web (this may take a while) when the pipeline is first run and saved under the given file paths. \n\n## Documentation and tutorials\n\nPlease refer to the Jupyter notebooks in the [notebooks subdirectory](https://github.com/debbiemarkslab/EVcouplings/tree/master/notebooks) on how to\n* edit configuration files\n* run jobs\n* use EVcouplings as a Python library\n\nDocumentation for the source code is available at [readthedocs](http://evcouplings.readthedocs.io/en/latest/).\n\n## License\n\nEVcouplings is available under the MIT license, with the exception of the included CNS input scripts (please see [LICENSE](https://github.com/debbiemarkslab/EVcouplings/tree/master/LICENSE) for details).\n\n## References\n\nIf you find EVcouplings useful for your research, please cite the following papers:\n\nMarks D. S., Colwell, L. J., Sheridan, R., Hopf, T.A., Pagnani, A., Zecchina, R., Sander, C. Protein 3D structure computed from evolutionary sequence variation. *PLOS ONE* **6**(12), e28766 (2011)\n\nHopf T. A., Colwell, L. J., Sheridan, R., Rost, B., Sander, C., Marks, D. S. Three-dimensional structures of membrane proteins from genomic sequencing. *Cell* **149**, 1607-1621 (2012)\n\nMarks, D. S., Hopf, T. A., Sander, C. Protein structure prediction from sequence variation. *Nature Biotechnology* **30**, 1072\u20131080 (2012)\n\nHopf, T. A., Sch\u00e4rfe, C. P. I., Rodrigues, J. P. G. L. M., Green, A. G., Kohlbacher, O., Sander, C., Bonvin, A. M. J. J., Marks, D. S. Sequence co-evolution gives 3D contacts and structures of protein complexes. *eLife* Sep 25;3 (2014)\n\nHopf, T. A., Ingraham, J. B., Poelwijk, F.J., Sch\u00e4rfe, C.P.I., Springer, M., Sander, C., & Marks, D. S. (2017). Mutation effects predicted from sequence co-variation. *Nature Biotechnology* **35**, 128\u2013135 doi:10.1038/nbt.3769\n\n## Contributors\n\nEVcouplings is developed in the labs of [Debora Marks](http://marks.hms.harvard.edu) and [Chris Sander](http://sanderlab.org/) at Harvard Medical School.\n\n* [Thomas Hopf](mailto:thomas.hopf@gmail.com) (development lead)\n* Benjamin Schubert\n* Anna Green\n* Sophia Mersmann\n* Charlotta Sch\u00e4rfe\n* Agnes Toth-Petroczy\n* John Ingraham\n* Rob Sheridan", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/debbiemarkslab/EVcouplings", "keywords": "evolutionary couplings analysis", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "evcouplings", "package_url": "https://pypi.org/project/evcouplings/", "platform": "", "project_url": "https://pypi.org/project/evcouplings/", "project_urls": {"Homepage": "https://github.com/debbiemarkslab/EVcouplings"}, "release_url": "https://pypi.org/project/evcouplings/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "A Framework for evolutionary couplings analysis", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/debbiemarkslab/EVcouplings.svg?branch=master)](https://travis-ci.org/debbiemarkslab/EVcouplings)<br># EVcouplings<br><br>Predict protein structure, function and mutations using evolutionary sequence covariation.<br><br>## Installation and setup<br><br>### Installing the Python package<br><br>If you are simply interested in using EVcouplings as a library, installing the Python package is all you need to do (unless you use functions that depend on external tools). If you want to run the *evcouplings* application (alignment generation, model parameter inference, structure prediction, etc.) you will also need to follow the sections on installing external tools and databases.<br><br>#### Requirements<br><br>EVcouplings requires a Python &gt;= 3.5 installation. Since it depends on some packages that can be tricky to install using pip (numba, numpy, ...), we recommend using the [Anaconda Python distribution](https://www.continuum.io/downloads). In case you are creating a new conda environment or using miniconda, please make sure to run `conda install anaconda` before running pip, or otherwise the required packages will not be present.  <br><br>#### Installation<br><br>To install the latest official release of EVcouplings from PyPI, run<br><br>    pip install evcouplings<br><br>To obtain the latest version of EVcouplings from the github repository, run<br><br>    pip install git+https://github.com/debbiemarkslab/EVcouplings.git<br><br>and to update to the latest version after previously installing EVcouplings from the repository, run<br><br>    pip install -U --no-deps git+https://github.com/debbiemarkslab/EVcouplings.git<br><br><br>### External software tools<br><br>*After installation and before running compute jobs, the paths to the respective binaries of the following external tools have to be set in your EVcouplings job configuration file(s).*<br><br>#### plmc (required)<br><br>Tool for inferring undirected statistical models from sequence variation. Download and install plmc to a directory of your choice from the [plmc github repository](https://github.com/debbiemarkslab/plmc) according to the included documentation.<br><br>For compatibility with evcouplings, please compile using<br><br>    make all-openmp32<br><br><br>#### jackhmmer (required)<br><br>Download and install HMMER from the [HMMER webpage](http://hmmer.org/download.html) to a directory of your choice.<br><br>#### HHsuite (optional)<br><br>evcouplings uses the hhfilter tool to filter sequence alignments. Installation is only required if you need this functionality.<br><br>Download and install HHsuite from the [HHsuite github repository](https://github.com/soedinglab/hh-suite) to a directory of your choice.<br><br>#### CNSsolve 1.21 (optional)<br><br>evcouplings uses CNSsolve for computing 3D structure models from coupled residue pairs. Installation is only required if you want to run the *fold* stage of the computational pipeline.<br><br>Download and unpack a compiled version of [CNSsolve 1.21](http://cns-online.org/v1.21/) to a directory of your choice. No further setup is necessary, since evcouplings takes care of setting the right environment variables internally without relying on the included shell script cns_solve_env<br>(you will have to put the path to the cns binary in your job config file however, e.g. cns_solve_1.21/intel-x86_64bit-linux/bin/cns).<br><br>#### PSIPRED (optional)<br><br>evcouplings uses PSIPRED for secondary structure prediction, to generate secondary structure distance and dihedral angle restraints for 3D structure computation.<br>Installation is only required if you want to run the *fold* stage of the computational pipeline, and do not supply your own secondary structure predictions.<br><br>Download and install [PSIPRED](http://bioinfadmin.cs.ucl.ac.uk/downloads/psipred/) according to the instructions in the included README file.<br><br>#### maxcluster (optional)<br><br>evcouplings uses maxcluster to compare predicted 3D structure models to experimental protein structures, if there are any for the target protein or one<br>of its homologs. Installation is only required if you want to run the *fold* stage of the computational pipeline.<br> <br>Download [maxcluster](http://www.sbg.bio.ic.ac.uk/~maxcluster/) and place it in a directory of your choice.<br><br>### Databases<br><br>*After download and before running compute jobs, the paths to the respective databases have to be set in your EVcouplings job configuration file(s).*<br><br>#### Automatic database setup<br>The *evcouplings* application minimally needs a sequence database for alignment generation, and structure mapping information for comparison of evolutionary couplings to 3D structures.<br><br>Sequence and structure mapping databases for EVcouplings can be automatically downloaded using the included command line tool *evcouplings_dbupdate*.<br> This tool will fetch the UniProt (SwissProt/TrEMBL), UniRef100 and UniRef90 databases, and generate SIFTS-based structure mapping tables.<br><br>Please see<br><br>    evcouplings_dbupdate --help<br><br>for how to download the respective databases. Note that this may take a while, especially the generation of post-processed SIFTS mapping files. <br><br>#### Sequence databases for EVcomplex<br>Running the EVcouplings pipeline for protein complexes (aka EVcomplex) requires two pre-computed databases. You can download these databases here:<br><br>ena_genome_location_table: https://marks.hms.harvard.edu/evcomplex_databases/cds_pro_2017_02.txt<br>uniprot_to_embl_table: https://marks.hms.harvard.edu/evcomplex_databases/idmapping_uniprot_embl_2017_02.txt<br><br>Save these databases in your local environment, and then add the paths to the local copies of these databases to your config file for the complex pipeline. <br><br>In future releases these databases will be generated automatically. <br><br>#### Other sequence databases<br><br>You can however use any sequence database of your choice in FASTA format if you prefer to. The database for any particular job needs to be defined in the job configuration file (\"databases\" section) and set as the input database in the \"alignment\" section.<br><br>#### Structure and mapping databases<br><br>Relevant PDB structures for comparison of ECs and 3D structure predictions will be automatically fetched from the web in the new compressed MMTF format on a per-job basis. You can however also pre-download the entire PDB and place the structures in a directory if you want to (and set pdb_mmtf_dir in your job configuration).<br><br>Uniprot to PDB index mapping files will be automatically generated by EVcouplings based on the SIFTS database.<br>You can either generate the files by running *evcouplings_dbupdate* (see above, preferred), or by pointing the sifts_mapping_table and sifts_sequence_db configuration parameters to file paths inside an already existing directory. If these files do not yet exist, they will be created by fetching and integrating data from the web (this may take a while) when the pipeline is first run and saved under the given file paths. <br><br>## Documentation and tutorials<br><br>Please refer to the Jupyter notebooks in the [notebooks subdirectory](https://github.com/debbiemarkslab/EVcouplings/tree/master/notebooks) on how to<br>* edit configuration files<br>* run jobs<br>* use EVcouplings as a Python library<br><br>Documentation for the source code is available at [readthedocs](http://evcouplings.readthedocs.io/en/latest/).<br><br>## License<br><br>EVcouplings is available under the MIT license, with the exception of the included CNS input scripts (please see [LICENSE](https://github.com/debbiemarkslab/EVcouplings/tree/master/LICENSE) for details).<br><br>## References<br><br>If you find EVcouplings useful for your research, please cite the following papers:<br><br>Marks D. S., Colwell, L. J., Sheridan, R., Hopf, T.A., Pagnani, A., Zecchina, R., Sander, C. Protein 3D structure computed from evolutionary sequence variation. *PLOS ONE* **6**(12), e28766 (2011)<br><br>Hopf T. A., Colwell, L. J., Sheridan, R., Rost, B., Sander, C., Marks, D. S. Three-dimensional structures of membrane proteins from genomic sequencing. *Cell* **149**, 1607-1621 (2012)<br><br>Marks, D. S., Hopf, T. A., Sander, C. Protein structure prediction from sequence variation. *Nature Biotechnology* **30**, 1072\u20131080 (2012)<br><br>Hopf, T. A., Sch\u00e4rfe, C. P. I., Rodrigues, J. P. G. L. M., Green, A. G., Kohlbacher, O., Sander, C., Bonvin, A. M. J. J., Marks, D. S. Sequence co-evolution gives 3D contacts and structures of protein complexes. *eLife* Sep 25;3 (2014)<br><br>Hopf, T. A., Ingraham, J. B., Poelwijk, F.J., Sch\u00e4rfe, C.P.I., Springer, M., Sander, C., &amp; Marks, D. S. (2017). Mutation effects predicted from sequence co-variation. *Nature Biotechnology* **35**, 128\u2013135 doi:10.1038/nbt.3769<br><br>## Contributors<br><br>EVcouplings is developed in the labs of [Debora Marks](http://marks.hms.harvard.edu) and [Chris Sander](http://sanderlab.org/) at Harvard Medical School.<br><br>* [Thomas Hopf](mailto:thomas.hopf@gmail.com) (development lead)<br>* Benjamin Schubert<br>* Anna Green<br>* Sophia Mersmann<br>* Charlotta Sch\u00e4rfe<br>* Agnes Toth-Petroczy<br>* John Ingraham<br>* Rob Sheridan\n          </div>"}, "last_serial": 4276704, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3c4598f546b93f47028456380433a7cc", "sha256": "c16eed4c0137be5a2c7406b9250fa1f292d2067fa79e24745c6052a599b9892a"}, "downloads": -1, "filename": "evcouplings-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3c4598f546b93f47028456380433a7cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 171439, "upload_time": "2017-09-03T13:23:31", "upload_time_iso_8601": "2017-09-03T13:23:31.661458Z", "url": "https://files.pythonhosted.org/packages/29/50/ab0f8f9b434c4c5ebbd53b0e95799a541eabba36c4e1e23a05a8de7d1bd4/evcouplings-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "80f4246d37f9f2524642c0bf062073da", "sha256": "c4a6d2c6e33a5e8b1d1b6b9987b8d673470ccf761295022e52a136bb97ff654a"}, "downloads": -1, "filename": "evcouplings-0.0.2.tar.gz", "has_sig": false, "md5_digest": "80f4246d37f9f2524642c0bf062073da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 197656, "upload_time": "2018-02-22T22:37:24", "upload_time_iso_8601": "2018-02-22T22:37:24.133664Z", "url": "https://files.pythonhosted.org/packages/b7/a8/8e1bd385975fdac3b302b882c00b904c3c398bc6c3be534734342dd36b5f/evcouplings-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7d1ccef13311cf6e2cd4f1152288fcab", "sha256": "92f9bd80a1b48900484782c8bee4d1e2969fc07f11907a14bcb54275714251be"}, "downloads": -1, "filename": "evcouplings-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7d1ccef13311cf6e2cd4f1152288fcab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207273, "upload_time": "2018-04-05T17:09:17", "upload_time_iso_8601": "2018-04-05T17:09:17.054917Z", "url": "https://files.pythonhosted.org/packages/2b/7f/cc62fcbbc4252d0b67b8e7f1e34467c257a90272dfc5a05de71b5ed33eba/evcouplings-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b3c15db5fa921061194c25b150c75f1f", "sha256": "3c4d69cca93fa42bbf975dbc4455d511601bd9748a87b98296fd13646bb86b70"}, "downloads": -1, "filename": "evcouplings-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b3c15db5fa921061194c25b150c75f1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212085, "upload_time": "2018-06-10T17:02:52", "upload_time_iso_8601": "2018-06-10T17:02:52.644315Z", "url": "https://files.pythonhosted.org/packages/71/1e/4061b9695cb19109a5d735cadbbaf9e7ef77c5652a6862fcb8c1ff9a4a98/evcouplings-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "09e74e33c116b6dd466a6848608a77ec", "sha256": "08a8d3712076688c1b848537cdd711489b04da08f77725d496e1696126f15026"}, "downloads": -1, "filename": "evcouplings-0.0.5.tar.gz", "has_sig": false, "md5_digest": "09e74e33c116b6dd466a6848608a77ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213747, "upload_time": "2018-09-16T14:47:12", "upload_time_iso_8601": "2018-09-16T14:47:12.318898Z", "url": "https://files.pythonhosted.org/packages/35/f5/183cb7c38fa17780b894ef1cb5fed9d25f829fee2b14bd90af5fd57f03bc/evcouplings-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "09e74e33c116b6dd466a6848608a77ec", "sha256": "08a8d3712076688c1b848537cdd711489b04da08f77725d496e1696126f15026"}, "downloads": -1, "filename": "evcouplings-0.0.5.tar.gz", "has_sig": false, "md5_digest": "09e74e33c116b6dd466a6848608a77ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213747, "upload_time": "2018-09-16T14:47:12", "upload_time_iso_8601": "2018-09-16T14:47:12.318898Z", "url": "https://files.pythonhosted.org/packages/35/f5/183cb7c38fa17780b894ef1cb5fed9d25f829fee2b14bd90af5fd57f03bc/evcouplings-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:16 2020"}