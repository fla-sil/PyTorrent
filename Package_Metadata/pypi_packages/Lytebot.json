{"info": {"author": "mvdw, soud, techwolf12", "author_email": "contact@techwolf12.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Communications :: Chat", "Topic :: Internet :: WWW/HTTP"], "description": "# Lytebot\r\nLytebot is a Telegram bot existing of some convenient and fun features like searching\r\nDuckDuckGo, random image from a subreddit and searching specific sites through\r\nDuckDuckGo's [!bangs](https://duckduckgo.com/bang).\r\n\r\n# Usage\r\nVisit https://telegram.me/Lytebot, or send a message to @Lytebot.\r\n\r\n## Commands\r\n- /r [sub]: Random image by subreddit\r\n- /ddg [query]: Search DuckDuckGo\r\n- /flip: (\u256f\u00b0\u25a1\u00b0)\u256f\ufe35 \u253b\u2501\u253b\r\n- /back: \u252c\u2500\u252c \u30ce( \u309c-\u309c\u30ce)\r\n- /shruggie: \u00af\\_(\u30c4)_/\u00af\r\n- /disabled: Show disabled commands\r\n- /![bang] [query]: Search DuckDuckGo by bang\r\n\r\n## Owner commands\r\n- /disable [command]: Disable a command\r\n- /enable [command]: Enable a command\r\n- /ignore [user]: Ignore a user (don't execute commands sent by user)\r\n- /unignore [user]: Unignore a user\r\n- /blacklist [sub]: Blacklist subreddit from /r command\r\n- /whitelist [sub]: Whitelist subreddit from /r command\r\n\r\n# Installation\r\n## Dependencies\r\n- Python 3.x\r\n- beautifulsoup4\r\n- imgurpython\r\n- PyYAML\r\n- python-telegram-bot\r\n\r\n## Running\r\nIf you have Docker, Lytebot can be started with a single command:\r\n```bash\r\n$ docker run -v ~/.config/lytebot:/root/.config/lytebot lytebot\r\n```\r\n\r\nAlternatively, you can run Lytebot without Docker. We recommend using something\r\nlike `supervisord`, but you can just run `lytebot &` to start Lytebot in the\r\nbackground.\r\n\r\n## Building\r\n```bash\r\n$ git clone https://github.com/muse/Lytebot\r\n$ cd Lytebot\r\n$ ./setup.py install\r\n```\r\n\r\nThis will put the executable `lytebot` in your path.\r\n\r\n## Configuring\r\nTo use the bot, you need to put the example configuration file in\r\n`~/.config/lytebot/config.yml` with your Telegram token.\r\n\r\nIf you wish to use owner commands, you need to set the owner(s) usernames in\r\n`~/.config/lytebot/config.yml`. The same goes for the Imgur commands, you'll\r\nneed to put your Imgur ID and secret in the config file.\r\n\r\nIf something breaks or goes wrong, you can see the log file found in\r\n`~/.config/lytebot`.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/muse/Lytebot/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/muse/Lytebot", "keywords": "telegram bot duckduckgo sub reddit", "license": "MIT", "maintainer": "Techwolf12", "maintainer_email": "contact@techwolf12.nl", "name": "Lytebot", "package_url": "https://pypi.org/project/Lytebot/", "platform": "GNU/Linux", "project_url": "https://pypi.org/project/Lytebot/", "project_urls": {"Download": "https://github.com/muse/Lytebot/archive/master.zip", "Homepage": "https://github.com/muse/Lytebot"}, "release_url": "https://pypi.org/project/Lytebot/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Lytebot is a telegram bot existing of some convenient and fun functionalities.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Lytebot\nLytebot is a Telegram bot existing of some convenient and fun features like searching\nDuckDuckGo, random image from a subreddit and searching specific sites through\nDuckDuckGo\u2019s [!bangs](<a href=\"https://duckduckgo.com/bang\" rel=\"nofollow\">https://duckduckgo.com/bang</a>).</p>\n<p># Usage\nVisit <a href=\"https://telegram.me/Lytebot\" rel=\"nofollow\">https://telegram.me/Lytebot</a>, or send a message to @Lytebot.</p>\n<p>## Commands\n- /r [sub]: Random image by subreddit\n- /ddg [query]: Search DuckDuckGo\n- /flip: (\u256f\u00b0\u25a1\u00b0)\u256f\ufe35 \u253b\u2501\u253b\n- /back: \u252c\u2500\u252c \u30ce( \u309c-\u309c\u30ce)\n- /shruggie: \u00af_(\u30c4)_/\u00af\n- /disabled: Show disabled commands\n- /![bang] [query]: Search DuckDuckGo by bang</p>\n<p>## Owner commands\n- /disable [command]: Disable a command\n- /enable [command]: Enable a command\n- /ignore [user]: Ignore a user (don\u2019t execute commands sent by user)\n- /unignore [user]: Unignore a user\n- /blacklist [sub]: Blacklist subreddit from /r command\n- /whitelist [sub]: Whitelist subreddit from /r command</p>\n<p># Installation\n## Dependencies\n- Python 3.x\n- beautifulsoup4\n- imgurpython\n- PyYAML\n- python-telegram-bot</p>\n<p>## Running\nIf you have Docker, Lytebot can be started with a single command:\n<tt>`bash\n$ docker run <span class=\"pre\">-v</span> <span class=\"pre\">~/.config/lytebot:/root/.config/lytebot</span> lytebot\n`</tt></p>\n<p>Alternatively, you can run Lytebot without Docker. We recommend using something\nlike <cite>supervisord</cite>, but you can just run <cite>lytebot &amp;</cite> to start Lytebot in the\nbackground.</p>\n<p>## Building\n<tt>`bash\n$ git clone <span class=\"pre\">https://github.com/muse/Lytebot</span>\n$ cd Lytebot\n$ ./setup.py install\n`</tt></p>\n<p>This will put the executable <cite>lytebot</cite> in your path.</p>\n<p>## Configuring\nTo use the bot, you need to put the example configuration file in\n<cite>~/.config/lytebot/config.yml</cite> with your Telegram token.</p>\n<p>If you wish to use owner commands, you need to set the owner(s) usernames in\n<cite>~/.config/lytebot/config.yml</cite>. The same goes for the Imgur commands, you\u2019ll\nneed to put your Imgur ID and secret in the config file.</p>\n<p>If something breaks or goes wrong, you can see the log file found in\n<cite>~/.config/lytebot</cite>.</p>\n\n          </div>"}, "last_serial": 1998829, "releases": {"1.0.0": []}, "urls": [], "timestamp": "Fri May  8 00:42:41 2020"}