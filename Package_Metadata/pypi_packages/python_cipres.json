{"info": {"author": "Terri Schwartz", "author_email": "terri@sdsc.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "==================\npython_cipres\n==================\n\nThe CIPRES REST API (CRA) provides a way to run parallel versions of phylogenetic alignment and tree \ninference software, such as RaXML, MrBayes, Garli, Beast, etc. on high performance supercomputers.  \nThe python_cipres package is a client library that makes it easy to use the CRA.  The package includes \nseveral scripts that can be run, as is, to submit jobs, check their status and download results.  Or, \nthe package can imported and used to develop custom software that uses the CRA.\n\npython_cipres has been tested on python 2.6, python 2.7 and python 3.4.3 on linux, mac OS and windows.\n\n\nInstallation\n------------\nTo install python_cipres, simply::\n\n    $ pip install python_cipres\n\nOr, if you've downloaded the source from svn, or from a source archive, go to the top\nlevel directory, which contains \"setup.py\", and run::\n    \n    $ python setup.py install\n\n\nRegister to use the CIPRES REST API\n-----------------------------------\nRegister at https://www.phylo.org/restusers, then log in, and from the \"Developer\" menu,\nchoose \"Application Management\" and create a new application.  Make note of the application ID that \nis assigned.\n\nGeneral documentation about using the CIPRES REST API is available at \nhttps://www.phylo.org/restusers/documentation.  However, the documentation doesn't specifically \naddress the python_cipres package.\n\n\nConfiguration File (~/pycipres.conf)\n-------------------------------------\nIn your home directory create a file named \"pycipres.conf\" with the following settings::\n\n    URL=https://cipresrest.sdsc.edu/cipresrest/v1\n    APPNAME=the_application_you_just_registered\n    APPID=application_ID\n    USERNAME=the_username_you_just_registered\n    PASSWORD=the_password\n    VERBOSE=\n\n\nTest\n----\nRun a quick test of the installation and configuration::\n\n    $ cipresjob.py -l\n\nThis should return the url of the CRA and a list of jobs that you've submitted.  Without any \nsubmitted jobs it looks like this::\n\n    URL=https://cipresrest.sdsc.edu/cipresrest/v1\n\nDocumentation\n-------------\nThere are two scripts, tooltest.py and cipresjob.py that can be run from the command line to submit jobs\nand monitor them.   The scripts are explained in examples/Readme.txt.   \n\n    *You will find the examples directory where you installed the python_cipres package (the path\n    will typically be similar to site-packages/python_cipres-XX-py2.7.egg/python_cipres/examples) OR you can\n    download a source archive from the pypi page.  Within the expanded source archive, the path is\n    python_cipres/examples.   Each subdirectory under examples is a \"job template\" that can be \n    submitted to the CRA using tooltest.py.*\n\nTo use the python_cipres library in your own code::\n\n    import python_cipres.client as CipresClient\n\nThe API provided by the python_cipres library is not documented yet, however it is quite small and \nsimple.  It is implemented entirely in client.py.  Commands.py uses the API to implement the \nfunctionality provided by tooltest.py and cipresjob.py, so looking at commands.py is a good way \nto see how to use the API.\n\n    client.py\n        provides the basic job management API\n\n    commands.py\n        uses the methods in client.py to implement what tooltest.py and cipresjob.py do\n\n    bin/tooltest.py and bin/cipresjob.py\n        are executable scripts that call the corresponding methods in commands.py.\n        Tooltest.py submits a job to CIPRES based on the specification in a job template directory.\n        Cipresjob.py lists jobs, checks a job's status and downloads results.\n\nPlease subscribe to the cipres-rest-users mailing list at https://groups.google.com/forum/#!forum/cipres-rest-users. \nSend a message to the list if you have any questions about how to use the API or how to configure a specific tool.  \n\n\nDistributing your code\n----------------------\nIf you create scripts or an application that uses the CIPRES REST API and you share your code with others, \nkeep in mind that the users of your code should use the same APPNAME and APPID that you registered, \nto identify your code, but must use their own USERNAME and PASSWORD to submit jobs.\n\nWeb Applications \n----------------------\nIf you are submitting jobs from a web application that has multiple users, then as a matter of policy, \nyou must register your application as an umbrella application, as explained in the \"Register\" section\nof the User Guide (https://www.phylo.org/restusers/docs/guide.html).  Web applications can't use\ntooltest.py and cipresjob.py, as is, because they don't support umbrella authentication; however\nyou can use the code that implements tooltest.py and cipresjob.py (see commands.py) as a template for\nyour own code. The only change you would need to make is that you must pass an additional dictionary \nargument, endUserHeaders, to the CipresClient.Client() ctor, as shown in a comment in commands.py.   \nThe endUserHeaders identifies the end user, of your application, for whom the cipres request \nis being made. \n\n\nRelease History\n---------------\n\n0.9 (2016-03-24)\n\n    *  Parse and return metadata if present in job status \n\n0.8 (2015-06-15)\n\n    *   Modified to work with python 3 as well as python 2.  \n\n0.7 (2015-06-05)\n\n    *   client.py can be used with DIRECT or UMBRELLA authentication now.  If using umbrella\n        authentication, add the endUserHeaders dictionary when instantiating CipresClient.Client.\n\n    *   Accepts job submission parameters with or without the \"input.\", \"vparam.\", and \"metadata.\"\n        prefixes that are documented in https://www.phylo.org/restusers/docs/guide.html#SubmitJobs\n        and https://www.phylo.org/restusers/docs/tools.  For example, both \"runtime_=0.25\" and \n        \"vparam.runtime_=0.25\" work with python_cipres.\n\n    *   The tool to run may be specified with either \"tool\" or \"toolId\".\n\n    *   VERBOSE property is no longer required in ~/pycipres.conf. \n\n0.5 (2015-06-02)\n\n    *   Added -r argument to cipresjob.py to cancel and remove jobs.\n\n0.4 (2015-06-01)\n\n    *   Initial version on pypi", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.phylo.org/restusers", "keywords": "cipres cra phylogenetics xsede", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "python_cipres", "package_url": "https://pypi.org/project/python_cipres/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python_cipres/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.phylo.org/restusers"}, "release_url": "https://pypi.org/project/python_cipres/0.9/", "requires_dist": null, "requires_python": null, "summary": "CIPRES REST API Client", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The CIPRES REST API (CRA) provides a way to run parallel versions of phylogenetic alignment and tree\ninference software, such as RaXML, MrBayes, Garli, Beast, etc. on high performance supercomputers.\nThe python_cipres package is a client library that makes it easy to use the CRA.  The package includes\nseveral scripts that can be run, as is, to submit jobs, check their status and download results.  Or,\nthe package can imported and used to develop custom software that uses the CRA.</p>\n<p>python_cipres has been tested on python 2.6, python 2.7 and python 3.4.3 on linux, mac OS and windows.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install python_cipres, simply:</p>\n<pre>$ pip install python_cipres\n</pre>\n<p>Or, if you\u2019ve downloaded the source from svn, or from a source archive, go to the top\nlevel directory, which contains \u201csetup.py\u201d, and run:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"register-to-use-the-cipres-rest-api\">\n<h2>Register to use the CIPRES REST API</h2>\n<p>Register at <a href=\"https://www.phylo.org/restusers\" rel=\"nofollow\">https://www.phylo.org/restusers</a>, then log in, and from the \u201cDeveloper\u201d menu,\nchoose \u201cApplication Management\u201d and create a new application.  Make note of the application ID that\nis assigned.</p>\n<p>General documentation about using the CIPRES REST API is available at\n<a href=\"https://www.phylo.org/restusers/documentation\" rel=\"nofollow\">https://www.phylo.org/restusers/documentation</a>.  However, the documentation doesn\u2019t specifically\naddress the python_cipres package.</p>\n</div>\n<div id=\"configuration-file-pycipres-conf\">\n<h2>Configuration File (~/pycipres.conf)</h2>\n<p>In your home directory create a file named \u201cpycipres.conf\u201d with the following settings:</p>\n<pre>URL=https://cipresrest.sdsc.edu/cipresrest/v1\nAPPNAME=the_application_you_just_registered\nAPPID=application_ID\nUSERNAME=the_username_you_just_registered\nPASSWORD=the_password\nVERBOSE=\n</pre>\n</div>\n<div id=\"test\">\n<h2>Test</h2>\n<p>Run a quick test of the installation and configuration:</p>\n<pre>$ cipresjob.py -l\n</pre>\n<p>This should return the url of the CRA and a list of jobs that you\u2019ve submitted.  Without any\nsubmitted jobs it looks like this:</p>\n<pre>URL=https://cipresrest.sdsc.edu/cipresrest/v1\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>There are two scripts, tooltest.py and cipresjob.py that can be run from the command line to submit jobs\nand monitor them.   The scripts are explained in examples/Readme.txt.</p>\n<blockquote>\n<em>You will find the examples directory where you installed the python_cipres package (the path\nwill typically be similar to site-packages/python_cipres-XX-py2.7.egg/python_cipres/examples) OR you can\ndownload a source archive from the pypi page.  Within the expanded source archive, the path is\npython_cipres/examples.   Each subdirectory under examples is a \u201cjob template\u201d that can be\nsubmitted to the CRA using tooltest.py.</em></blockquote>\n<p>To use the python_cipres library in your own code:</p>\n<pre>import python_cipres.client as CipresClient\n</pre>\n<p>The API provided by the python_cipres library is not documented yet, however it is quite small and\nsimple.  It is implemented entirely in client.py.  Commands.py uses the API to implement the\nfunctionality provided by tooltest.py and cipresjob.py, so looking at commands.py is a good way\nto see how to use the API.</p>\n<blockquote>\n<dl>\n<dt>client.py</dt>\n<dd>provides the basic job management API</dd>\n<dt>commands.py</dt>\n<dd>uses the methods in client.py to implement what tooltest.py and cipresjob.py do</dd>\n<dt>bin/tooltest.py and bin/cipresjob.py</dt>\n<dd>are executable scripts that call the corresponding methods in commands.py.\nTooltest.py submits a job to CIPRES based on the specification in a job template directory.\nCipresjob.py lists jobs, checks a job\u2019s status and downloads results.</dd>\n</dl>\n</blockquote>\n<p>Please subscribe to the cipres-rest-users mailing list at <a href=\"https://groups.google.com/forum/#!forum/cipres-rest-users\" rel=\"nofollow\">https://groups.google.com/forum/#!forum/cipres-rest-users</a>.\nSend a message to the list if you have any questions about how to use the API or how to configure a specific tool.</p>\n</div>\n<div id=\"distributing-your-code\">\n<h2>Distributing your code</h2>\n<p>If you create scripts or an application that uses the CIPRES REST API and you share your code with others,\nkeep in mind that the users of your code should use the same APPNAME and APPID that you registered,\nto identify your code, but must use their own USERNAME and PASSWORD to submit jobs.</p>\n</div>\n<div id=\"web-applications\">\n<h2>Web Applications</h2>\n<p>If you are submitting jobs from a web application that has multiple users, then as a matter of policy,\nyou must register your application as an umbrella application, as explained in the \u201cRegister\u201d section\nof the User Guide (<a href=\"https://www.phylo.org/restusers/docs/guide.html\" rel=\"nofollow\">https://www.phylo.org/restusers/docs/guide.html</a>).  Web applications can\u2019t use\ntooltest.py and cipresjob.py, as is, because they don\u2019t support umbrella authentication; however\nyou can use the code that implements tooltest.py and cipresjob.py (see commands.py) as a template for\nyour own code. The only change you would need to make is that you must pass an additional dictionary\nargument, endUserHeaders, to the CipresClient.Client() ctor, as shown in a comment in commands.py.\nThe endUserHeaders identifies the end user, of your application, for whom the cipres request\nis being made.</p>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<p>0.9 (2016-03-24)</p>\n<blockquote>\n<ul>\n<li>Parse and return metadata if present in job status</li>\n</ul>\n</blockquote>\n<p>0.8 (2015-06-15)</p>\n<blockquote>\n<ul>\n<li>Modified to work with python 3 as well as python 2.</li>\n</ul>\n</blockquote>\n<p>0.7 (2015-06-05)</p>\n<blockquote>\n<ul>\n<li>client.py can be used with DIRECT or UMBRELLA authentication now.  If using umbrella\nauthentication, add the endUserHeaders dictionary when instantiating CipresClient.Client.</li>\n<li>Accepts job submission parameters with or without the \u201cinput.\u201d, \u201cvparam.\u201d, and \u201cmetadata.\u201d\nprefixes that are documented in <a href=\"https://www.phylo.org/restusers/docs/guide.html#SubmitJobs\" rel=\"nofollow\">https://www.phylo.org/restusers/docs/guide.html#SubmitJobs</a>\nand <a href=\"https://www.phylo.org/restusers/docs/tools\" rel=\"nofollow\">https://www.phylo.org/restusers/docs/tools</a>.  For example, both \u201cruntime_=0.25\u201d and\n\u201cvparam.runtime_=0.25\u201d work with python_cipres.</li>\n<li>The tool to run may be specified with either \u201ctool\u201d or \u201ctoolId\u201d.</li>\n<li>VERBOSE property is no longer required in ~/pycipres.conf.</li>\n</ul>\n</blockquote>\n<p>0.5 (2015-06-02)</p>\n<blockquote>\n<ul>\n<li>Added -r argument to cipresjob.py to cancel and remove jobs.</li>\n</ul>\n</blockquote>\n<p>0.4 (2015-06-01)</p>\n<blockquote>\n<ul>\n<li>Initial version on pypi</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 2025645, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "afa7809b80a7740d5663f13d3fabd300", "sha256": "72e37ddd687945852c02e74eed214b4a77e9964caed69ba6d5c0d11de1676a08"}, "downloads": -1, "filename": "python_cipres-0.4.tar.gz", "has_sig": false, "md5_digest": "afa7809b80a7740d5663f13d3fabd300", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55147, "upload_time": "2015-06-02T19:43:42", "upload_time_iso_8601": "2015-06-02T19:43:42.065901Z", "url": "https://files.pythonhosted.org/packages/61/ad/798c8f5c437d02bf60efb29366e79fc2629bc73842741a98b72034f922b4/python_cipres-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "fa09e5332be7644ecff9f51891a128c9", "sha256": "059ef1f470ec4d50aba3924926dcb35bc6e4c44179fb27c20edebe4be71bb72c"}, "downloads": -1, "filename": "python_cipres-0.5.tar.gz", "has_sig": false, "md5_digest": "fa09e5332be7644ecff9f51891a128c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55475, "upload_time": "2015-06-02T23:07:33", "upload_time_iso_8601": "2015-06-02T23:07:33.006135Z", "url": "https://files.pythonhosted.org/packages/82/cd/85279f38d98bdc8f0b256ff6ed1a6a9dc7c751ae5821df6b6cda21b0d75d/python_cipres-0.5.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a69c0adcf6858f07b42da437bebce9b2", "sha256": "5c3604568eb2bdd307a845bffaff722dd76fd3f9bd97306d29d7c3826c195630"}, "downloads": -1, "filename": "python_cipres-0.7.tar.gz", "has_sig": false, "md5_digest": "a69c0adcf6858f07b42da437bebce9b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73165, "upload_time": "2015-06-05T20:28:30", "upload_time_iso_8601": "2015-06-05T20:28:30.183619Z", "url": "https://files.pythonhosted.org/packages/90/30/4b43df38e79f0f7b199028703f151bd92df834d0a848f61dfa15357be034/python_cipres-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "5ca612541870ddc2144cf72776c2d345", "sha256": "2c662b9c13dec4ecc94885b64daf936f05c3b86e7ebba68c6219268a710aca78"}, "downloads": -1, "filename": "python_cipres-0.8.tar.gz", "has_sig": false, "md5_digest": "5ca612541870ddc2144cf72776c2d345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73340, "upload_time": "2015-06-15T21:29:05", "upload_time_iso_8601": "2015-06-15T21:29:05.744448Z", "url": "https://files.pythonhosted.org/packages/38/bb/f9353ba39dd6e0d4dffac3d96e1c55f9b393d6f2f6d65e811d68919481f2/python_cipres-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "b274bf4a0b147b01f414a6579339a9ec", "sha256": "e19fe81fc55e582f40ae4ad685a0c6df65ee7b75fd7508a1e2360567749b5e0d"}, "downloads": -1, "filename": "python_cipres-0.9.tar.gz", "has_sig": false, "md5_digest": "b274bf4a0b147b01f414a6579339a9ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73670, "upload_time": "2016-03-24T19:14:44", "upload_time_iso_8601": "2016-03-24T19:14:44.320741Z", "url": "https://files.pythonhosted.org/packages/1c/3b/116f86c2360098a6885519da41b564e4f509410fcbaf26f9f0d29abb2d7c/python_cipres-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b274bf4a0b147b01f414a6579339a9ec", "sha256": "e19fe81fc55e582f40ae4ad685a0c6df65ee7b75fd7508a1e2360567749b5e0d"}, "downloads": -1, "filename": "python_cipres-0.9.tar.gz", "has_sig": false, "md5_digest": "b274bf4a0b147b01f414a6579339a9ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73670, "upload_time": "2016-03-24T19:14:44", "upload_time_iso_8601": "2016-03-24T19:14:44.320741Z", "url": "https://files.pythonhosted.org/packages/1c/3b/116f86c2360098a6885519da41b564e4f509410fcbaf26f9f0d29abb2d7c/python_cipres-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:25 2020"}