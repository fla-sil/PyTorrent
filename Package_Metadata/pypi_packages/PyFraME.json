{"info": {"author": "J\u00f3gvan Magnus Haugaard Olsen", "author_email": "foeroyingur@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "PyFraME: Python tools for Fragment-based Multiscale Embedding calculations\n==========================================================================\nCopyright (C) 2017-2018  J\u00f3gvan Magnus Haugaard Olsen\n\nPyFraME is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nPyFraME is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with PyFraME.  If not, see <https://www.gnu.org/licenses/>.\n\n[![PIPELINE](https://gitlab.com/FraME-projects/PyFraME/badges/master/build.svg)](https://gitlab.com/FraME-projects/PyFraME/commits/master)\n[![COVERAGE](https://gitlab.com/FraME-projects/PyFraME/badges/master/coverage.svg)](https://gitlab.com/FraME-projects/PyFraME/commits/master)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-red.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.775113.svg)](https://doi.org/10.5281/zenodo.775113)\n\n\n\nDescription\n-----------\n\nPyFraME is a Python package that provides tools for setting up \nfragment-based multiscale embedding calculations. The aim is to\nprovide tools that can automatize the workflow of such calculations\nin a flexible manner.\n\nThe typical workflow is as follows:\n\n1. a part of the total molecular system is chosen as the core region\n   which is typically treated a high level of theory\n2. the remainder is split into a number of regions each of which can be\n   treated at different levels of theory\n3. each region (except the core) is divided into fragments that consist\n   of either small molecules or parts of larger molecules that have been\n   fragmented into smaller computationally manageable fragments\n4. a calculation is run on each fragment to obtain fragment parameters\n   (if necessary)\n5. all fragment parameters of all regions are assembled and constitute\n   the embedding potential\n6. a final calculation is run on the core region using the embedding\n   potential to model the effect from the remainder of the molecular\n   system\n\nThe PyFraME package can be used to automatize steps 1-5.\n\nHow to cite\n-----------\n\nTo cite PyFraME please use a format similar to the following\n\n\"J. M. H. Olsen, *PyFraME: Python tools for Fragment-based Multiscale\nEmbedding (version 0.2.0)*, **2018**,\nhttps://doi.org/10.5281/zenodo.1443314\"\n\nwhere the version and DOI should correspond to the actual version that was used.\nNote that the DOI [10.5281/zenodo.775113](https://doi.org/10.5281/zenodo.775113)\nrepresents all versions, and will always resolve to the latest one.\nA possible BibTeX entry can be found in the [CITATION file](https://gitlab.com/FraME-projects/PyFraME/blob/master/CITATION).\n\nAlternatively, BibTeX and other formats can be generated by [Zenodo](https://doi.org/10.5281/zenodo.775113).\n\nRequirements\n------------\n\nTo use PyFraME you need:\n\n* [Python 3](http://www.python.org/)\n* [NumPy](http://www.numpy.org/)\n* [Numba](https://numba.pydata.org/)\n\nFor certain functionality you will need one or more of the following:\n\n* [Dalton](http://www.daltonprogram.org/)\n* [LoProp for Dalton](https://github.com/vahtras/loprop)\n* [Molcas 8](http://www.molcas.org/)\n\nTo run the test suite you need:\n\n* [pytest](http://pytest.org)\n\nInstallation\n------------\n\nThe source can be downloaded from\n[GitLab](https://gitlab.com/FraME-projects/PyFraME) or\n[Zenodo](https://doi.org/10.5281/zenodo.775113), or installed directly\nfrom [PyPI](https://pypi.org/project/PyFraME/), as follows\n\n    pip install pyframe\n\nTo clone the repository, run the following command\n\n    git clone https://gitlab.com/FraME-projects/PyFraME.git\n\nThe package can then be installed by typing\n\n    python setup.py install\n\nfrom the PyFraME root directory. You may wish to add ``--user`` in the\nlast line if you do not have root access / sudo rights. Note that this\nwill install NumPy and Numba if they are not installed already.\n\n\nTesting\n-------\n\nTo execute the full test suite (unit tests and integration tests) run\n\n    pytest\n\nfrom the PyFraME root directory, or, if you installed from PyPI, the\nunit tests can be executed by typing\n\n    pytest --pyargs pyframe\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/FraME-projects/PyFraME", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "PyFraME", "package_url": "https://pypi.org/project/PyFraME/", "platform": "", "project_url": "https://pypi.org/project/PyFraME/", "project_urls": {"Homepage": "https://gitlab.com/FraME-projects/PyFraME"}, "release_url": "https://pypi.org/project/PyFraME/0.2.0/", "requires_dist": ["numpy", "numba"], "requires_python": ">=3", "summary": "PyFraME: Python tools for Fragment-based Multiscale Embedding", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyFraME: Python tools for Fragment-based Multiscale Embedding calculations</h1>\n<p>Copyright (C) 2017-2018  J\u00f3gvan Magnus Haugaard Olsen</p>\n<p>PyFraME is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n<p>PyFraME is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License\nalong with PyFraME.  If not, see <a href=\"https://www.gnu.org/licenses/\" rel=\"nofollow\">https://www.gnu.org/licenses/</a>.</p>\n<p><a href=\"https://gitlab.com/FraME-projects/PyFraME/commits/master\" rel=\"nofollow\"><img alt=\"PIPELINE\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c76e40da1ec9c9fbe84f6111458765746a77937f/68747470733a2f2f6769746c61622e636f6d2f4672614d452d70726f6a656374732f50794672614d452f6261646765732f6d61737465722f6275696c642e737667\"></a>\n<a href=\"https://gitlab.com/FraME-projects/PyFraME/commits/master\" rel=\"nofollow\"><img alt=\"COVERAGE\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd2126d2de13e2e4df7b34e208afa7b4fb2449a9/68747470733a2f2f6769746c61622e636f6d2f4672614d452d70726f6a656374732f50794672614d452f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad56f6a45a12f916fec916a93ecf6fb9edba0620/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d7265642e737667\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.775113\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6bd5cc19252b4fcbb76544869ef4b3b0d1aa5261/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e3737353131332e737667\"></a></p>\n<h2>Description</h2>\n<p>PyFraME is a Python package that provides tools for setting up\nfragment-based multiscale embedding calculations. The aim is to\nprovide tools that can automatize the workflow of such calculations\nin a flexible manner.</p>\n<p>The typical workflow is as follows:</p>\n<ol>\n<li>a part of the total molecular system is chosen as the core region\nwhich is typically treated a high level of theory</li>\n<li>the remainder is split into a number of regions each of which can be\ntreated at different levels of theory</li>\n<li>each region (except the core) is divided into fragments that consist\nof either small molecules or parts of larger molecules that have been\nfragmented into smaller computationally manageable fragments</li>\n<li>a calculation is run on each fragment to obtain fragment parameters\n(if necessary)</li>\n<li>all fragment parameters of all regions are assembled and constitute\nthe embedding potential</li>\n<li>a final calculation is run on the core region using the embedding\npotential to model the effect from the remainder of the molecular\nsystem</li>\n</ol>\n<p>The PyFraME package can be used to automatize steps 1-5.</p>\n<h2>How to cite</h2>\n<p>To cite PyFraME please use a format similar to the following</p>\n<p>\"J. M. H. Olsen, <em>PyFraME: Python tools for Fragment-based Multiscale\nEmbedding (version 0.2.0)</em>, <strong>2018</strong>,\n<a href=\"https://doi.org/10.5281/zenodo.1443314\" rel=\"nofollow\">https://doi.org/10.5281/zenodo.1443314</a>\"</p>\n<p>where the version and DOI should correspond to the actual version that was used.\nNote that the DOI <a href=\"https://doi.org/10.5281/zenodo.775113\" rel=\"nofollow\">10.5281/zenodo.775113</a>\nrepresents all versions, and will always resolve to the latest one.\nA possible BibTeX entry can be found in the <a href=\"https://gitlab.com/FraME-projects/PyFraME/blob/master/CITATION\" rel=\"nofollow\">CITATION file</a>.</p>\n<p>Alternatively, BibTeX and other formats can be generated by <a href=\"https://doi.org/10.5281/zenodo.775113\" rel=\"nofollow\">Zenodo</a>.</p>\n<h2>Requirements</h2>\n<p>To use PyFraME you need:</p>\n<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">Python 3</a></li>\n<li><a href=\"http://www.numpy.org/\" rel=\"nofollow\">NumPy</a></li>\n<li><a href=\"https://numba.pydata.org/\" rel=\"nofollow\">Numba</a></li>\n</ul>\n<p>For certain functionality you will need one or more of the following:</p>\n<ul>\n<li><a href=\"http://www.daltonprogram.org/\" rel=\"nofollow\">Dalton</a></li>\n<li><a href=\"https://github.com/vahtras/loprop\" rel=\"nofollow\">LoProp for Dalton</a></li>\n<li><a href=\"http://www.molcas.org/\" rel=\"nofollow\">Molcas 8</a></li>\n</ul>\n<p>To run the test suite you need:</p>\n<ul>\n<li><a href=\"http://pytest.org\" rel=\"nofollow\">pytest</a></li>\n</ul>\n<h2>Installation</h2>\n<p>The source can be downloaded from\n<a href=\"https://gitlab.com/FraME-projects/PyFraME\" rel=\"nofollow\">GitLab</a> or\n<a href=\"https://doi.org/10.5281/zenodo.775113\" rel=\"nofollow\">Zenodo</a>, or installed directly\nfrom <a href=\"https://pypi.org/project/PyFraME/\" rel=\"nofollow\">PyPI</a>, as follows</p>\n<pre><code>pip install pyframe\n</code></pre>\n<p>To clone the repository, run the following command</p>\n<pre><code>git clone https://gitlab.com/FraME-projects/PyFraME.git\n</code></pre>\n<p>The package can then be installed by typing</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>from the PyFraME root directory. You may wish to add <code>--user</code> in the\nlast line if you do not have root access / sudo rights. Note that this\nwill install NumPy and Numba if they are not installed already.</p>\n<h2>Testing</h2>\n<p>To execute the full test suite (unit tests and integration tests) run</p>\n<pre><code>pytest\n</code></pre>\n<p>from the PyFraME root directory, or, if you installed from PyPI, the\nunit tests can be executed by typing</p>\n<pre><code>pytest --pyargs pyframe\n</code></pre>\n\n          </div>"}, "last_serial": 4336940, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c4125fedaf9e3e91c27d36ec2095e888", "sha256": "73546688d4350988b96fc33f6424409ef22dc91834afbdb83653adc2c983d806"}, "downloads": -1, "filename": "PyFraME-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c4125fedaf9e3e91c27d36ec2095e888", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 32811, "upload_time": "2018-02-07T14:35:41", "upload_time_iso_8601": "2018-02-07T14:35:41.779817Z", "url": "https://files.pythonhosted.org/packages/88/10/ccf4019e8be392f31e0797490b6a7e30bc0a2ba17bf3c327c3973642697d/PyFraME-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "09a4aed70d106cb4a719b36c75c29df7", "sha256": "2e5af63b6efb504adc5b1d49a1e93aeef8e72862722cd9d2e990d3a7807f5249"}, "downloads": -1, "filename": "PyFraME-0.1.1.tar.gz", "has_sig": false, "md5_digest": "09a4aed70d106cb4a719b36c75c29df7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 663936, "upload_time": "2018-02-08T09:47:23", "upload_time_iso_8601": "2018-02-08T09:47:23.923432Z", "url": "https://files.pythonhosted.org/packages/21/3e/96cc19c40df6b06121d0d8a3a555290df6f0bf1a06b9d578c988ae3514a9/PyFraME-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "eb2e888b11a45232bef74bd96d6c75fc", "sha256": "ad0588d76a325a7375d81ec57a60ce522f16262655a5d4d51dd37b3d427255f0"}, "downloads": -1, "filename": "PyFraME-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb2e888b11a45232bef74bd96d6c75fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 171552, "upload_time": "2018-10-03T15:30:42", "upload_time_iso_8601": "2018-10-03T15:30:42.783057Z", "url": "https://files.pythonhosted.org/packages/5c/87/85020a0e1a099cd6537e96b14044c98b98981e236246daea969d3401dc94/PyFraME-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fa3affcbf9c0e131cc9af6de97212e7", "sha256": "6c21c079a5cd111156011607732d3b89ebde247f8335bbf68cc6bf726d362ad6"}, "downloads": -1, "filename": "PyFraME-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3fa3affcbf9c0e131cc9af6de97212e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 151158, "upload_time": "2018-10-03T15:30:44", "upload_time_iso_8601": "2018-10-03T15:30:44.658999Z", "url": "https://files.pythonhosted.org/packages/67/fe/23aebe75903438c458ef1eff6100c5db40c90b45a57aec39a90a7b496d66/PyFraME-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb2e888b11a45232bef74bd96d6c75fc", "sha256": "ad0588d76a325a7375d81ec57a60ce522f16262655a5d4d51dd37b3d427255f0"}, "downloads": -1, "filename": "PyFraME-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb2e888b11a45232bef74bd96d6c75fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 171552, "upload_time": "2018-10-03T15:30:42", "upload_time_iso_8601": "2018-10-03T15:30:42.783057Z", "url": "https://files.pythonhosted.org/packages/5c/87/85020a0e1a099cd6537e96b14044c98b98981e236246daea969d3401dc94/PyFraME-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fa3affcbf9c0e131cc9af6de97212e7", "sha256": "6c21c079a5cd111156011607732d3b89ebde247f8335bbf68cc6bf726d362ad6"}, "downloads": -1, "filename": "PyFraME-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3fa3affcbf9c0e131cc9af6de97212e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 151158, "upload_time": "2018-10-03T15:30:44", "upload_time_iso_8601": "2018-10-03T15:30:44.658999Z", "url": "https://files.pythonhosted.org/packages/67/fe/23aebe75903438c458ef1eff6100c5db40c90b45a57aec39a90a7b496d66/PyFraME-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:33 2020"}