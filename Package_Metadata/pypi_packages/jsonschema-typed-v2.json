{"info": {"author": "Bendik Samseth", "author_email": "b.samseth@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# JSON Schema-powered type annotations\n\nThis package provides a way to automatically produce type annotations based\non [`jsonschema`-schemas](https://json-schema.org).\n\nNot all concepts covered by `jsonschema` are expressible within Python typing annotations. However, most things\nwill work like you'd expect. Most types are translated trivially\n(`integer`, `number`, `string`, `array`, `boolean` and `null`).\nThe interesting type is `object`, which is translated into a [``TypedDict``](https://www.python.org/dev/peps/pep-0589/).\n\n**Warning:** This is based on the [mypy plugin system](https://mypy.readthedocs.io/en/latest/extending_mypy.html), which\nis stated to have no backwards compatibility guarantee. New versions of mypy might not be supported immediately.\nhave been warned.\n\n**Note**: This is a maintained fork of [erickpeirson](https://github.com/erickpeirson/jsonschema-typed)'s original start\non this project. The original repo seems to be abandoned and its current state is not functional. *Make sure to install\nthe right package from PyPI, `jsonschema-typed-v2`*\n\n## Example\n\nA JSON schema:\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"$id\": \"http://foo.qwerty/some/schema#\",\n    \"title\": \"Foo Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\n            \"type\": \"string\"\n        },\n        \"awesome\": {\n            \"type\": \"number\"\n        }\n    },\n    \"required\": [\"title\"]\n}\n```\n\nA TypedDict:\n\n```python\n\nfrom typing import TYPE_CHECKING\nfrom jsonschema_typed import JSONSchema\n\ndata: JSONSchema[\"path/to/schema.json\"] = {\"title\": \"baz\"}\n\nif TYPE_CHECKING:\n    reveal_type(data)  # Revealed type is 'TypedDict('FooSchema', {'title': builtins.str,\n                       #                                           'awesome'?: Union[builtins.int, builtins.float]})'\ndata[\"description\"] = \"there is no description\"  # TypedDict \"FooSchema\" has no key 'description'\ndata[\"awesome\"] = 42\ndata[\"awesome\"] = None  # Argument 2 has incompatible type \"None\"; expected \"Union[int, float]\"\n```\n\nYou can also get types of parts of a schema, as well as types of elements in arrays. Take a look at the\n[test cases](tests/cases) for more examples of usage.\n\n## Installation\n\n```bash\npip install jsonschema-typed-v2\n```\n\n## Requirements\n\nThe above installations resolves the dependencies, which consist of `mypy` and `jsonschema` (naturally).\nTesting has been done with versions:\n\n- mypy==0.761\n- jsonschema==3.2.0\n\nProbably some older versions will also work. Report an [issue](https://github.com/inspera/jsonschema-typed/issues)\nif you need other versions.\n\n## Limitations\n\n- `additionalProperties` doesn't really have an equivalent in TypedDict.\n- The ``default`` keyword is not supported; but see: https://github.com/python/mypy/issues/6131.\n- Self-references (e.g. ``\"#\"``) can't really work properly until nested\n  forward-references are supported; see: https://github.com/python/mypy/issues/731.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bsamseth/jsonschema-typed", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jsonschema-typed-v2", "package_url": "https://pypi.org/project/jsonschema-typed-v2/", "platform": "", "project_url": "https://pypi.org/project/jsonschema-typed-v2/", "project_urls": {"Homepage": "https://github.com/bsamseth/jsonschema-typed"}, "release_url": "https://pypi.org/project/jsonschema-typed-v2/0.6.4/", "requires_dist": ["jsonschema (>=3.2.0)", "mypy (>=0.761)"], "requires_python": ">=3.7", "summary": "Automatic type annotations from JSON schemas", "version": "0.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>JSON Schema-powered type annotations</h1>\n<p>This package provides a way to automatically produce type annotations based\non <a href=\"https://json-schema.org\" rel=\"nofollow\"><code>jsonschema</code>-schemas</a>.</p>\n<p>Not all concepts covered by <code>jsonschema</code> are expressible within Python typing annotations. However, most things\nwill work like you'd expect. Most types are translated trivially\n(<code>integer</code>, <code>number</code>, <code>string</code>, <code>array</code>, <code>boolean</code> and <code>null</code>).\nThe interesting type is <code>object</code>, which is translated into a <a href=\"https://www.python.org/dev/peps/pep-0589/\" rel=\"nofollow\"><code>TypedDict</code></a>.</p>\n<p><strong>Warning:</strong> This is based on the <a href=\"https://mypy.readthedocs.io/en/latest/extending_mypy.html\" rel=\"nofollow\">mypy plugin system</a>, which\nis stated to have no backwards compatibility guarantee. New versions of mypy might not be supported immediately.\nhave been warned.</p>\n<p><strong>Note</strong>: This is a maintained fork of <a href=\"https://github.com/erickpeirson/jsonschema-typed\" rel=\"nofollow\">erickpeirson</a>'s original start\non this project. The original repo seems to be abandoned and its current state is not functional. <em>Make sure to install\nthe right package from PyPI, <code>jsonschema-typed-v2</code></em></p>\n<h2>Example</h2>\n<p>A JSON schema:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"$schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://json-schema.org/draft-07/schema#\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"$id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://foo.qwerty/some/schema#\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Foo Schema\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"awesome\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"required\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"title\"</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>A TypedDict:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_CHECKING</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jsonschema_typed</span> <span class=\"kn\">import</span> <span class=\"n\">JSONSchema</span>\n\n<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">JSONSchema</span><span class=\"p\">[</span><span class=\"s2\">\"path/to/schema.json\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"baz\"</span><span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">:</span>\n    <span class=\"n\">reveal_type</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>  <span class=\"c1\"># Revealed type is 'TypedDict('FooSchema', {'title': builtins.str,</span>\n                       <span class=\"c1\">#                                           'awesome'?: Union[builtins.int, builtins.float]})'</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"description\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"there is no description\"</span>  <span class=\"c1\"># TypedDict \"FooSchema\" has no key 'description'</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"awesome\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"awesome\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># Argument 2 has incompatible type \"None\"; expected \"Union[int, float]\"</span>\n</pre>\n<p>You can also get types of parts of a schema, as well as types of elements in arrays. Take a look at the\n<a href=\"tests/cases\" rel=\"nofollow\">test cases</a> for more examples of usage.</p>\n<h2>Installation</h2>\n<pre>pip install jsonschema-typed-v2\n</pre>\n<h2>Requirements</h2>\n<p>The above installations resolves the dependencies, which consist of <code>mypy</code> and <code>jsonschema</code> (naturally).\nTesting has been done with versions:</p>\n<ul>\n<li>mypy==0.761</li>\n<li>jsonschema==3.2.0</li>\n</ul>\n<p>Probably some older versions will also work. Report an <a href=\"https://github.com/inspera/jsonschema-typed/issues\" rel=\"nofollow\">issue</a>\nif you need other versions.</p>\n<h2>Limitations</h2>\n<ul>\n<li><code>additionalProperties</code> doesn't really have an equivalent in TypedDict.</li>\n<li>The <code>default</code> keyword is not supported; but see: <a href=\"https://github.com/python/mypy/issues/6131\" rel=\"nofollow\">https://github.com/python/mypy/issues/6131</a>.</li>\n<li>Self-references (e.g. <code>\"#\"</code>) can't really work properly until nested\nforward-references are supported; see: <a href=\"https://github.com/python/mypy/issues/731\" rel=\"nofollow\">https://github.com/python/mypy/issues/731</a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 6548062, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "ef62b3a2d6942520a8a15315153d62dc", "sha256": "8ec9658e14adcd09701327829368cc36b9ffb271c4c48db0b4d395a7757e2614"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ef62b3a2d6942520a8a15315153d62dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 9839, "upload_time": "2019-12-27T09:44:32", "upload_time_iso_8601": "2019-12-27T09:44:32.621840Z", "url": "https://files.pythonhosted.org/packages/43/76/cf4a48cf373b43e7815955348cbc72fe8206171e44c458c7468d16d98b82/jsonschema_typed_v2-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0422b703004136e4518d7e5459c9bf01", "sha256": "ffc4c642b485550eca11609741f82bcf347f393f4ed4f52cb89562933f2b0b18"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0422b703004136e4518d7e5459c9bf01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 10008, "upload_time": "2019-12-27T10:05:46", "upload_time_iso_8601": "2019-12-27T10:05:46.424760Z", "url": "https://files.pythonhosted.org/packages/d6/bc/8eeadc97235e0a7674c73079d2d964553e899f4bec70f8a8ba1864a60477/jsonschema_typed_v2-0.2.1-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b06fa372c05e8dfe70d34fc1580b5919", "sha256": "8b7a448784520191fa36e664f3204fb90075296cd21fd2b75f2a50b96f24ad82"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b06fa372c05e8dfe70d34fc1580b5919", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 9920, "upload_time": "2019-12-30T10:00:46", "upload_time_iso_8601": "2019-12-30T10:00:46.658637Z", "url": "https://files.pythonhosted.org/packages/a7/e7/b7d540fe9d37127ec180a0943b09374a9158878e6d52c6fe1dbaf9f935f8/jsonschema_typed_v2-0.3.0-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9754246252d742d3732bd52539b1493f", "sha256": "00097767942d3bd77d0b25a72cf18cab8e54ed18952025e607dce9f532e7df8a"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9754246252d742d3732bd52539b1493f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 9938, "upload_time": "2019-12-30T13:33:51", "upload_time_iso_8601": "2019-12-30T13:33:51.246215Z", "url": "https://files.pythonhosted.org/packages/ff/b2/021d7ef5d1e7cd33125105c7c7b31d432f3bcd7d0bf01c92be33bbe346e4/jsonschema_typed_v2-0.3.1-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f92390f269afd4164bb84fbbe3aaa4a3", "sha256": "a2b160c3c309981d7ec84d46535418dc15b72382c98698bca8a03453163ddaed"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f92390f269afd4164bb84fbbe3aaa4a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 9878, "upload_time": "2019-12-30T14:47:59", "upload_time_iso_8601": "2019-12-30T14:47:59.320571Z", "url": "https://files.pythonhosted.org/packages/d0/54/0a59b2d55c59ce325508d726ae97a713b2d6ba0014e27074f0bac3fc2b34/jsonschema_typed_v2-0.4.0-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "4dbb5647d4913d19f64110e88bda9185", "sha256": "1887930fbd99a9f2fd4346fa3f146555317196107077b15cc4e4e4715750be46"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4dbb5647d4913d19f64110e88bda9185", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 10705, "upload_time": "2020-01-02T10:57:27", "upload_time_iso_8601": "2020-01-02T10:57:27.972403Z", "url": "https://files.pythonhosted.org/packages/08/68/68d8a6c0a90d4b7c938f316faf87ffe4c8eb89c016e2f396c6bdf6bb423b/jsonschema_typed_v2-0.5.0-py3-none-any.whl", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "ddae4fde2f431f4194a3a473e76cd102", "sha256": "7e8d996dd226400b42060f4357e52b97803257f078054bc48539974189e5db4f"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ddae4fde2f431f4194a3a473e76cd102", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 10908, "upload_time": "2020-01-02T12:57:29", "upload_time_iso_8601": "2020-01-02T12:57:29.493099Z", "url": "https://files.pythonhosted.org/packages/87/52/c84a49f1e94442927b7ed5985dab64127f1adb5f953e999e58479c59023c/jsonschema_typed_v2-0.6.0-py3-none-any.whl", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "6366fb43e655d894f4d6646b621c24e8", "sha256": "07225db75bd58851c3527b50489d124bb01555f362b791bd2d6ff2ba77791ea1"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6366fb43e655d894f4d6646b621c24e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10908, "upload_time": "2020-01-02T16:29:48", "upload_time_iso_8601": "2020-01-02T16:29:48.010868Z", "url": "https://files.pythonhosted.org/packages/d2/bc/ce45baef70a31e701a5a65380933005e4e5e63bbca0f9bae21751fbe8f00/jsonschema_typed_v2-0.6.1-py3-none-any.whl", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "3e4630d8a9ea89b3163cc77f867f042a", "sha256": "d20c779622e3521913b035bf7b6b82291054a646e4de4472e7a6d38d78217771"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3e4630d8a9ea89b3163cc77f867f042a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10927, "upload_time": "2020-01-02T17:21:31", "upload_time_iso_8601": "2020-01-02T17:21:31.366231Z", "url": "https://files.pythonhosted.org/packages/ce/a7/51059f94c44258fc308638243dac952b21aef413dee25c94750c4fd08129/jsonschema_typed_v2-0.6.2-py3-none-any.whl", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "60e6cba532a3d685dbbb4ee01c27cf57", "sha256": "e3cc54743f6cd4a409bf146ceff033890a0cd35050da257a6bc2f5bc0ab6c799"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "60e6cba532a3d685dbbb4ee01c27cf57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10216, "upload_time": "2020-01-06T16:17:45", "upload_time_iso_8601": "2020-01-06T16:17:45.944366Z", "url": "https://files.pythonhosted.org/packages/95/09/99984d1a569253b585990e9b9c1a63e35037419e2cc663698dbc22597841/jsonschema_typed_v2-0.6.3-py3-none-any.whl", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "699a81246fc55c3123390154b29159e8", "sha256": "f95f2dbf6f915f6412315dca1697470fd31469693ce9b3d360a2e2fb81dc9aae"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "699a81246fc55c3123390154b29159e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10285, "upload_time": "2020-01-31T09:37:03", "upload_time_iso_8601": "2020-01-31T09:37:03.682917Z", "url": "https://files.pythonhosted.org/packages/01/ac/087c71850db9df6d3cd754d70673ec212d88c85d2ff388f68f73db7c0bac/jsonschema_typed_v2-0.6.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "699a81246fc55c3123390154b29159e8", "sha256": "f95f2dbf6f915f6412315dca1697470fd31469693ce9b3d360a2e2fb81dc9aae"}, "downloads": -1, "filename": "jsonschema_typed_v2-0.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "699a81246fc55c3123390154b29159e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10285, "upload_time": "2020-01-31T09:37:03", "upload_time_iso_8601": "2020-01-31T09:37:03.682917Z", "url": "https://files.pythonhosted.org/packages/01/ac/087c71850db9df6d3cd754d70673ec212d88c85d2ff388f68f73db7c0bac/jsonschema_typed_v2-0.6.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:51:37 2020"}