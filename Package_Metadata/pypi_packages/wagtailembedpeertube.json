{"info": {"author": "Cliss XXI", "author_email": "tech@cliss21.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Wagtail :: 2", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# wagtailembedpeertube\n\nEmbed peertube videos into wagtail.\n\n**Table of content**\n\n- [Introduction](#introduction)\n- [Installation](#installation)\n- [Settings](#settings)\n- [Usage](#usage)\n\n## Introduction\n\nWagtail has a great\n[support of Oembed](http://docs.wagtail.io/en/v2.1.1/advanced_topics/embeds.html),\nfor embedding content. Unfortunately the Oembed mecanism is based on services\ndomain names and URI; and this is prone to centralization since it limits to a\nshort list of selected providers.\n\nBy the way, currently there is for now more than 300 instances and it will\nprobably grow with years. See e.g. https://instances.joinpeertube.org\n\nThis app bring Oembed support for decentralized peertube instances.\n\nTo do this we only focus on a string URI filtering, allowing all services from\nany domain name.\n\n## Installation\n\n### Requirements\n\nYou will need `wagtail.embeds` which is part of Wagtail's core modules.\n\n### Pip installation\n\n    $ pip install wagtailembedpeertube\n\n## Settings\n\n### Add the app to your project\n\nYou have to add `wagtailembedpeertube` anywhere after `wagtail.embeds` in\nyour project settings.\n\n### Configure embeds finders\n\nYou have to declare the peertube finder in your project settings, so Wagtail\nwill make use of it.\n\n```python\nWAGTAILEMBEDS_FINDERS = [\n    {\n        'class': 'wagtail.embeds.finders.oembed',\n    },\n    {\n        'class': 'wagtailembedpeertube.finders',\n    },\n]\n```\nSince the first matching finder will be used, you should declare\n`wagtailembedpeertube` as last because others finders are matching domain names\nand may be more precise.\n\nSee [Configuring embed \u201cfinders\u201d](http://docs.wagtail.io/en/v2.1.1/advanced_topics/embeds.html#configuring-embed-finders)\nfor more informations.\n\n## Usage\n\nThat's it! You should now be able to embed any peertube content using the\n`EmbedBlock`:\n\n```python\nfrom wagtail.embeds.blocks import EmbedBlock\n\nclass MyStreamField(blocks.StreamBlock):\n    ...\n\n    embed = EmbedBlock()\n```\n\n## License\n\nwagtailembedpeertube is developed by Cliss XXI and licensed under the\n[AGPLv3+](LICENSE).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://forge.cliss21.org/cliss21/wagtailembedpeertube", "keywords": "", "license": "AGPLv3+", "maintainer": "", "maintainer_email": "", "name": "wagtailembedpeertube", "package_url": "https://pypi.org/project/wagtailembedpeertube/", "platform": "", "project_url": "https://pypi.org/project/wagtailembedpeertube/", "project_urls": {"Homepage": "https://forge.cliss21.org/cliss21/wagtailembedpeertube"}, "release_url": "https://pypi.org/project/wagtailembedpeertube/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Embed peertube videos into wagtail.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # wagtailembedpeertube<br><br>Embed peertube videos into wagtail.<br><br>**Table of content**<br><br>- [Introduction](#introduction)<br>- [Installation](#installation)<br>- [Settings](#settings)<br>- [Usage](#usage)<br><br>## Introduction<br><br>Wagtail has a great<br>[support of Oembed](http://docs.wagtail.io/en/v2.1.1/advanced_topics/embeds.html),<br>for embedding content. Unfortunately the Oembed mecanism is based on services<br>domain names and URI; and this is prone to centralization since it limits to a<br>short list of selected providers.<br><br>By the way, currently there is for now more than 300 instances and it will<br>probably grow with years. See e.g. https://instances.joinpeertube.org<br><br>This app bring Oembed support for decentralized peertube instances.<br><br>To do this we only focus on a string URI filtering, allowing all services from<br>any domain name.<br><br>## Installation<br><br>### Requirements<br><br>You will need `wagtail.embeds` which is part of Wagtail's core modules.<br><br>### Pip installation<br><br>    $ pip install wagtailembedpeertube<br><br>## Settings<br><br>### Add the app to your project<br><br>You have to add `wagtailembedpeertube` anywhere after `wagtail.embeds` in<br>your project settings.<br><br>### Configure embeds finders<br><br>You have to declare the peertube finder in your project settings, so Wagtail<br>will make use of it.<br><br>```python<br>WAGTAILEMBEDS_FINDERS = [<br>    {<br>        'class': 'wagtail.embeds.finders.oembed',<br>    },<br>    {<br>        'class': 'wagtailembedpeertube.finders',<br>    },<br>]<br>```<br>Since the first matching finder will be used, you should declare<br>`wagtailembedpeertube` as last because others finders are matching domain names<br>and may be more precise.<br><br>See [Configuring embed \u201cfinders\u201d](http://docs.wagtail.io/en/v2.1.1/advanced_topics/embeds.html#configuring-embed-finders)<br>for more informations.<br><br>## Usage<br><br>That's it! You should now be able to embed any peertube content using the<br>`EmbedBlock`:<br><br>```python<br>from wagtail.embeds.blocks import EmbedBlock<br><br>class MyStreamField(blocks.StreamBlock):<br>    ...<br><br>    embed = EmbedBlock()<br>```<br><br>## License<br><br>wagtailembedpeertube is developed by Cliss XXI and licensed under the<br>[AGPLv3+](LICENSE).\n          </div>"}, "last_serial": 4598761, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "606ebf6c9de3b5897dbb3621e3c310e2", "sha256": "56001e0e3411625e21af9ac7d936f3f7a982a0216933671eed1530a307bfc480"}, "downloads": -1, "filename": "wagtailembedpeertube-0.1.0.tar.gz", "has_sig": false, "md5_digest": "606ebf6c9de3b5897dbb3621e3c310e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15655, "upload_time": "2018-12-14T10:18:53", "upload_time_iso_8601": "2018-12-14T10:18:53.834153Z", "url": "https://files.pythonhosted.org/packages/74/e3/fbd1f85f97c45a03f0f04ead5b5814b9f2558a06cb78656ed7735581d3e4/wagtailembedpeertube-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "606ebf6c9de3b5897dbb3621e3c310e2", "sha256": "56001e0e3411625e21af9ac7d936f3f7a982a0216933671eed1530a307bfc480"}, "downloads": -1, "filename": "wagtailembedpeertube-0.1.0.tar.gz", "has_sig": false, "md5_digest": "606ebf6c9de3b5897dbb3621e3c310e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15655, "upload_time": "2018-12-14T10:18:53", "upload_time_iso_8601": "2018-12-14T10:18:53.834153Z", "url": "https://files.pythonhosted.org/packages/74/e3/fbd1f85f97c45a03f0f04ead5b5814b9f2558a06cb78656ed7735581d3e4/wagtailembedpeertube-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:06 2020"}