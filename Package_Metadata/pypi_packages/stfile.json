{"info": {"author": "Pablo Riutort", "author_email": "pablo.riutort@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "# stfile\n\nPython wrapper for RDFLib applied to a file system ontology.\n\n## Getting started\nstfile lets you use semantics to tag folders and files.\n\nTag your files:\n```\nstf tag path tags [tags ...]\n```\n\nList files by given tags:\n```\nstf list tags [tags ...]\n```\n\n\n### Installing\nUse pip to install stfile\n```\npip install stfile\n```\n\nYou can now run the `stf` command or import stfile itself to develop your own stuff.\n\n### Enhance Your Files\n\nUse stfile to develop your own services. Add a Python script on the config file \"config.yml\" and attach tags.\n```\nservices:\n  my-service:\n    - <my>:<super_useful_tag>\n```\nEvery time stfile finds a tag attached to a service executes the script with the same name inside the `services/` folder.\n\nA service must implement a `action(graph, namespaces, node_path_dictionary)` function.\n* __graph__: A RDFLib Graph instance, contains all current information about the semantic file system\n* __namespaces__: A dictionary containing all registered namespaces inside graph\n* __node_path_dictionary__: Contains information about the nodes in a `node: path` fashion.\n\nAll namespaces included in config.yml will be loaded into the graph to offer basic covering for the file system ontology, but more can be added in order to develop services.\n\n## Semantics\n\nIf you wish to have a better perspective about the graph\n```\nstf show [-h] [-f {n3,xml,pretty-xml,nt}]\n\nShows whole graph\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f {n3,xml,pretty-xml,nt}, --format {n3,xml,pretty-xml,nt}\n                        Format of serialization of graph\n```\n\n### SPARQL\nstfile lets you write SPARQL queries directly to your graph\n```\nstf query [-h] ([-s SELECT [SELECT ...] | -c CONSTRUCT [CONSTRUCT ...]\n                 | -d DESCRIBE [DESCRIBE ...] | -a ASK [ASK ...]]\n                 [-r RAW [RAW ...] | -i INPUT] [-w WHERE [WHERE ...]]\n                 [-o OUTPUT]\n\nExecute raw SPARQL query\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SELECT [SELECT ...], --select SELECT [SELECT ...]\n                        Select query\n  -c CONSTRUCT [CONSTRUCT ...], --construct CONSTRUCT [CONSTRUCT ...]\n                        Construct query\n  -d DESCRIBE [DESCRIBE ...], --describe DESCRIBE [DESCRIBE ...]\n                        Describe query\n  -a ASK [ASK ...], --ask ASK [ASK ...]\n                        Ask query\n  -r RAW [RAW ...], --raw RAW [RAW ...]\n                        Raw SPARQL query\n  -i INPUT, --input INPUT\n                        input file\n  -w WHERE [WHERE ...], --where WHERE [WHERE ...]\n                        Where statement\n  -o OUTPUT, --output OUTPUT\n                        output file\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pabloriutort/stfile", "keywords": "semantics file system RDF OWL", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "stfile", "package_url": "https://pypi.org/project/stfile/", "platform": "", "project_url": "https://pypi.org/project/stfile/", "project_urls": {"Homepage": "https://github.com/pabloriutort/stfile"}, "release_url": "https://pypi.org/project/stfile/0.1/", "requires_dist": null, "requires_python": "", "summary": "File System with semantics", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # stfile<br><br>Python wrapper for RDFLib applied to a file system ontology.<br><br>## Getting started<br>stfile lets you use semantics to tag folders and files.<br><br>Tag your files:<br>```<br>stf tag path tags [tags ...]<br>```<br><br>List files by given tags:<br>```<br>stf list tags [tags ...]<br>```<br><br><br>### Installing<br>Use pip to install stfile<br>```<br>pip install stfile<br>```<br><br>You can now run the `stf` command or import stfile itself to develop your own stuff.<br><br>### Enhance Your Files<br><br>Use stfile to develop your own services. Add a Python script on the config file \"config.yml\" and attach tags.<br>```<br>services:<br>  my-service:<br>    - &lt;my&gt;:&lt;super_useful_tag&gt;<br>```<br>Every time stfile finds a tag attached to a service executes the script with the same name inside the `services/` folder.<br><br>A service must implement a `action(graph, namespaces, node_path_dictionary)` function.<br>* __graph__: A RDFLib Graph instance, contains all current information about the semantic file system<br>* __namespaces__: A dictionary containing all registered namespaces inside graph<br>* __node_path_dictionary__: Contains information about the nodes in a `node: path` fashion.<br><br>All namespaces included in config.yml will be loaded into the graph to offer basic covering for the file system ontology, but more can be added in order to develop services.<br><br>## Semantics<br><br>If you wish to have a better perspective about the graph<br>```<br>stf show [-h] [-f {n3,xml,pretty-xml,nt}]<br><br>Shows whole graph<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -f {n3,xml,pretty-xml,nt}, --format {n3,xml,pretty-xml,nt}<br>                        Format of serialization of graph<br>```<br><br>### SPARQL<br>stfile lets you write SPARQL queries directly to your graph<br>```<br>stf query [-h] ([-s SELECT [SELECT ...] | -c CONSTRUCT [CONSTRUCT ...]<br>                 | -d DESCRIBE [DESCRIBE ...] | -a ASK [ASK ...]]<br>                 [-r RAW [RAW ...] | -i INPUT] [-w WHERE [WHERE ...]]<br>                 [-o OUTPUT]<br><br>Execute raw SPARQL query<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -s SELECT [SELECT ...], --select SELECT [SELECT ...]<br>                        Select query<br>  -c CONSTRUCT [CONSTRUCT ...], --construct CONSTRUCT [CONSTRUCT ...]<br>                        Construct query<br>  -d DESCRIBE [DESCRIBE ...], --describe DESCRIBE [DESCRIBE ...]<br>                        Describe query<br>  -a ASK [ASK ...], --ask ASK [ASK ...]<br>                        Ask query<br>  -r RAW [RAW ...], --raw RAW [RAW ...]<br>                        Raw SPARQL query<br>  -i INPUT, --input INPUT<br>                        input file<br>  -w WHERE [WHERE ...], --where WHERE [WHERE ...]<br>                        Where statement<br>  -o OUTPUT, --output OUTPUT<br>                        output file<br>```<br><br><br>\n          </div>"}, "last_serial": 4025776, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7fcb613ca0788c1304f8c90625c6cf49", "sha256": "d5ee0a756738463c8e09d5d313c0292e8e5c6e395dc33035dfb530620fe3d6e6"}, "downloads": -1, "filename": "stfile-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7fcb613ca0788c1304f8c90625c6cf49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11715, "upload_time": "2018-07-03T11:08:44", "upload_time_iso_8601": "2018-07-03T11:08:44.488572Z", "url": "https://files.pythonhosted.org/packages/dd/91/e3afa7921b39c20866fdbaed73bb4dff6a6268a39ee16e3996550978e42a/stfile-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec7c0a06e4d40ab9208362534de9742f", "sha256": "1ff567038cb674b448b12e4b3282a7a9221a917e83f26f4c833b7898b5c16053"}, "downloads": -1, "filename": "stfile-0.1.tar.gz", "has_sig": false, "md5_digest": "ec7c0a06e4d40ab9208362534de9742f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9683, "upload_time": "2018-07-03T11:08:45", "upload_time_iso_8601": "2018-07-03T11:08:45.866693Z", "url": "https://files.pythonhosted.org/packages/71/01/78115dffe226e189ec1e92027b12c4b17f2714ef54433508984c01ba71c1/stfile-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fcb613ca0788c1304f8c90625c6cf49", "sha256": "d5ee0a756738463c8e09d5d313c0292e8e5c6e395dc33035dfb530620fe3d6e6"}, "downloads": -1, "filename": "stfile-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7fcb613ca0788c1304f8c90625c6cf49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11715, "upload_time": "2018-07-03T11:08:44", "upload_time_iso_8601": "2018-07-03T11:08:44.488572Z", "url": "https://files.pythonhosted.org/packages/dd/91/e3afa7921b39c20866fdbaed73bb4dff6a6268a39ee16e3996550978e42a/stfile-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec7c0a06e4d40ab9208362534de9742f", "sha256": "1ff567038cb674b448b12e4b3282a7a9221a917e83f26f4c833b7898b5c16053"}, "downloads": -1, "filename": "stfile-0.1.tar.gz", "has_sig": false, "md5_digest": "ec7c0a06e4d40ab9208362534de9742f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9683, "upload_time": "2018-07-03T11:08:45", "upload_time_iso_8601": "2018-07-03T11:08:45.866693Z", "url": "https://files.pythonhosted.org/packages/71/01/78115dffe226e189ec1e92027b12c4b17f2714ef54433508984c01ba71c1/stfile-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:58 2020"}