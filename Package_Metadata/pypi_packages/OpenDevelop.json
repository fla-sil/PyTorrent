{"info": {"author": "Paris Kasidiaris", "author_email": "pariskasidiaris@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# OpenDevelop Python wrapper\n\n## Installation\nInstallation of the OpenDevelop Python wrapper can be done using pip.\n\n\tpip install opendevelop\n\n## Usage\n\n### Initiate client\nInitiates the OpenDevelop client. It gets 3 optional parameters;\n\n* `host = os.getenv('OPENDEVELOP_HOST')`\n* `client_id = os.getenv('OPENDEVELOP_CLIENT_ID')`\n* `client_secret = os.getenv('OPENDEVELOP_CLIENT_SECRET')`\n\n\tfrom opendevelop import OpenDevelop\t\n\tclient = OpenDevelop()\n\t\n### Get available images\nReturns a Python list with the available images for the current OpenDevelop installation\n\n\timages = client.images()\n\t\n#### Example response\n\t[u'base']\n\n### Create a sandbox\nCreates a sandbox and executes the given commands inside it. It returns the slug of the sandbox is Python string format.\n\n\tsandbox_slug = client.create_sandbox(image='base', cmd='ls -l ')\n\t\n#### Example response\n\t u'19cc2425738661a6'\n\t\n### Create a sandbox with some files inside\nCreates a sandbox, uploads the files, that correspond to the given **absolute** file paths, to it \nand executes the given commands inside it. It returns the slug of the sandbox is Python string format.\n\n\tsandbox_slug = client.create_sandbox(image='base', cmd='python hello.py', files=['/home/user/Desktop/hello.py'])\n\t\n#### Example response\n\tu'a4eb0e47e8e51724'\n\t\n### Get status and logs of a sandbox\nReturns information about the sandbox identified by the given slug. Returns the data in Python dict format.\n\n\tdata = client.sandbox(sandbox_log)\n\n#### Example response\n\t{u'cmd': u'[\"python hello.py\"]',\n\t u'image': u'base',\n\t u'logs': u'Hello OpenDevelop!\\n',\n\t u'return_code': 0,\n\t u'status': u'terminated'}\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://opendevelop.sourcelair.com", "keywords": null, "license": "The MIT License (MIT)\n\nCopyright (c) 2013 sourceLair Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "OpenDevelop", "package_url": "https://pypi.org/project/OpenDevelop/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/OpenDevelop/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://opendevelop.sourcelair.com"}, "release_url": "https://pypi.org/project/OpenDevelop/0.2/", "requires_dist": null, "requires_python": null, "summary": "Python wrapper for OpenDevelop", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># OpenDevelop Python wrapper</p>\n<p>## Installation\nInstallation of the OpenDevelop Python wrapper can be done using pip.</p>\n<blockquote>\npip install opendevelop</blockquote>\n<p>## Usage</p>\n<p>### Initiate client\nInitiates the OpenDevelop client. It gets 3 optional parameters;</p>\n<ul>\n<li><p><cite>host = os.getenv(\u2018OPENDEVELOP_HOST\u2019)</cite></p>\n</li>\n<li><p><cite>client_id = os.getenv(\u2018OPENDEVELOP_CLIENT_ID\u2019)</cite></p>\n</li>\n<li><p><cite>client_secret = os.getenv(\u2018OPENDEVELOP_CLIENT_SECRET\u2019)</cite></p>\n<blockquote>\n<p>from opendevelop import OpenDevelop\nclient = OpenDevelop()</p>\n</blockquote>\n</li>\n</ul>\n<p>### Get available images\nReturns a Python list with the available images for the current OpenDevelop installation</p>\n<blockquote>\nimages = client.images()</blockquote>\n<dl>\n<dt>#### Example response</dt>\n<dd>[u\u2019base\u2019]</dd>\n</dl>\n<p>### Create a sandbox\nCreates a sandbox and executes the given commands inside it. It returns the slug of the sandbox is Python string format.</p>\n<blockquote>\nsandbox_slug = client.create_sandbox(image=\u2019base\u2019, cmd=\u2019ls -l \u2018)</blockquote>\n<dl>\n<dt>#### Example response</dt>\n<dd>u\u201919cc2425738661a6\u2019</dd>\n</dl>\n<p>### Create a sandbox with some files inside\nCreates a sandbox, uploads the files, that correspond to the given <strong>absolute</strong> file paths, to it\nand executes the given commands inside it. It returns the slug of the sandbox is Python string format.</p>\n<blockquote>\nsandbox_slug = client.create_sandbox(image=\u2019base\u2019, cmd=\u2019python hello.py\u2019, files=[\u2018/home/user/Desktop/hello.py\u2019])</blockquote>\n<dl>\n<dt>#### Example response</dt>\n<dd>u\u2019a4eb0e47e8e51724\u2019</dd>\n</dl>\n<p>### Get status and logs of a sandbox\nReturns information about the sandbox identified by the given slug. Returns the data in Python dict format.</p>\n<blockquote>\ndata = client.sandbox(sandbox_log)</blockquote>\n<dl>\n<dt>#### Example response</dt>\n<dd><dl>\n<dt>{u\u2019cmd\u2019: u\u2019[\u201cpython hello.py\u201d]\u2019,</dt>\n<dd>u\u2019image\u2019: u\u2019base\u2019,\nu\u2019logs\u2019: u\u2019Hello OpenDevelop!n\u2019,\nu\u2019return_code\u2019: 0,\nu\u2019status\u2019: u\u2019terminated\u2019}</dd>\n</dl>\n</dd>\n</dl>\n\n          </div>"}, "last_serial": 994240, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "05edd4dfc57ebba8bc16649cca52cd6c", "sha256": "c92c37fbf60d83c1bbc685cf36fe06dabd0ae83270325f251ac058b4f9f08988"}, "downloads": -1, "filename": "OpenDevelop-0.1.tar.gz", "has_sig": false, "md5_digest": "05edd4dfc57ebba8bc16649cca52cd6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3372, "upload_time": "2013-12-23T13:12:09", "upload_time_iso_8601": "2013-12-23T13:12:09.438754Z", "url": "https://files.pythonhosted.org/packages/cb/74/5c99ffef6cf36657cdf2af7a414a85e8a60ae273f00d45a9ed464ca9d78f/OpenDevelop-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3a54788e425d8058df89fda1cea2b0c9", "sha256": "2bf174e0343b72a48efb3b22cba0a52a425053561f92784841c299ebd810da34"}, "downloads": -1, "filename": "OpenDevelop-0.2.tar.gz", "has_sig": false, "md5_digest": "3a54788e425d8058df89fda1cea2b0c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3399, "upload_time": "2014-02-08T09:24:59", "upload_time_iso_8601": "2014-02-08T09:24:59.687392Z", "url": "https://files.pythonhosted.org/packages/e1/9f/1c66340957ccd6e0f96e69efff947f7ecb28ffe55238a5584026d8238de8/OpenDevelop-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a54788e425d8058df89fda1cea2b0c9", "sha256": "2bf174e0343b72a48efb3b22cba0a52a425053561f92784841c299ebd810da34"}, "downloads": -1, "filename": "OpenDevelop-0.2.tar.gz", "has_sig": false, "md5_digest": "3a54788e425d8058df89fda1cea2b0c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3399, "upload_time": "2014-02-08T09:24:59", "upload_time_iso_8601": "2014-02-08T09:24:59.687392Z", "url": "https://files.pythonhosted.org/packages/e1/9f/1c66340957ccd6e0f96e69efff947f7ecb28ffe55238a5584026d8238de8/OpenDevelop-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:09 2020"}