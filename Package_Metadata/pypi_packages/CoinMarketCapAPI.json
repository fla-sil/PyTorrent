{"info": {"author": "Andreas Isnes Nilsen", "author_email": "andnil94@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![Coverage](https://img.shields.io/badge/coverage-87%25-yellowgreen.svg)\n![Python](https://img.shields.io/badge/Python-3.7-brightgreen.svg)\n![Version](https://img.shields.io/badge/Version-0.4-brightgreen.svg)\n![License](https://img.shields.io/badge/License-MIT-green.svg)\n\n# CoinMarketCap\nA Python implementation of CoinMarketCap's V1 API.\n\nYou need an API key from CoinMarketCap in order to utilize this module, you can get a key from [here](https://coinmarketcap.com/api/). Due the low request rate, I recommend you to test your application in a sandbox environment. You need a different API key when using their sandbox environment, which you can get from [here](https://sandbox.coinmarketcap.com/).\n\n## Installing\n```terminal\npython3 -m pip install CoinMarketCapAPI\n```\n\n## Authentication\nIf no keys are provided during init, the module will look for a JSON file in `$HOME/.coinmarketcap.json`, with the following syntax.\n```json\n{\n  \"sandbox\": \"API_KEY\",\n  \"production\": \"API_KEY\"\n}\n```\n\nAlternatively, you can set your keys as OS environment variables. With .bashrc, add the following two lines.\n```terminal\nexport COINMARKETCAP_SANDBOX=\"API_KEY\"\nexport COINMARKETCAP_PRODUCTION=\"API_KEY\"\n```\n\n## Examples\nInit client with an API Key.\n```python\nfrom coinmarketcap import Client\n\nkey = \"API_KEY\"\nclient = Client(apikey=key)\n```request limit\n\nThe following example shows how you can access and send a request to each of CoinMarketCap's endpoint (cryptocurrency, exchange, global_metrics, tools). Notice plural and singular method endings. Plurals allow a list of `id`, `symbol` or `slug`, singular allows only a single value.\n\n```python\nfrom coinmarketcap import Client\nfrom datetime import datetime\n\n# Init sandbox client.\nclient = Client(sandbox=True)\n\n# fetch cryptocurrency info\nclient.cryptocurrency.info.symbols([\"BTC\", \"ETH\"])\nclient.cryptocurrency.info.ids(1)\n\n# fetch exchange info\nclient.exchange.info.slugs(\"binance\")\nclient.exchange.info.ids([1, 4])\n\n# fetch global market data\ntime = datetime.strptime(\"2018-12-21\", \"%Y-%m-%d\")\nclient.global_metrics.quotes.latest()\nclient.global_metrics.quotes.historical(time_start=time)\n\namount_1 = 100.4\namount_2 = \"901.23\"\nid = 4\n# convert price historic price\nclient.tools.price.convert_id(amount_1, id, time=time)\nclient.tools.price.convert_symbol(amount_2, \"BTC\", convert=[\"USD\", \"ETH\"])\n```\n\nDue to CoinMarketCap's credit and rate limit system, implementing a proper request throttler is complex. Anyway, I tried to apply three different levels of throttling. \"minute\", \"daily\", \"monthly\". Each level make sure you don't exceed the request limit of the given plan. The different levels have no perception of CoinMarketCap's credit system...\n\n```python  \n\nfrom coinmarketcap import Client\n# By default throttling of requests are off.\n# Ignore the Client's keyword arguments \"throttle\", \"plan\", and \"block\" if\n# you don't want the client to throttle requests.  \n\n# client_1 will not exceed the number of request each minute with the basic plan.\nclient_1 = Client(throttle=\"minute\", plan=\"basic\")\n\n# client_2 will not exceed the daily request limit.\nclient_2 = Client(throttle=\"daily\", block=True, plan=\"hobbyist\")\n\n# client_3 will never exceeded CoinMarketCap monthly request rate.\nclient_3 = Client(throttle=\"monthly\", block=False, plan=\"professional\")\n\n```\n\nEach request is cached, the expiration time of data can be adjusted with the keyword argument `expire`. Set `expire=0` if don't want any cached data.\n```python\nfrom coinmarketcap import Client\n# cached request will be removed after 1 second\nclient = Client(expire=1)\n\n# cacherd request will be removed after 1 h\nclient = Client(expire=3600)\n\n# To remove all data from the cache, use the method clear_cache\nclient.clear_cache()\n\n```\n\n## TODO\n* Enable Proper throttling of requests.\n* Testing of different python versions.\n\nThis is my first python module. So, I appreciate any feedback :)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ani071/coinmarketcap", "keywords": "CoinMarketCap,API", "license": "", "maintainer": "", "maintainer_email": "", "name": "CoinMarketCapAPI", "package_url": "https://pypi.org/project/CoinMarketCapAPI/", "platform": "", "project_url": "https://pypi.org/project/CoinMarketCapAPI/", "project_urls": {"Homepage": "https://github.com/ani071/coinmarketcap"}, "release_url": "https://pypi.org/project/CoinMarketCapAPI/0.5/", "requires_dist": ["requests-cache", "requests", "ratelimit"], "requires_python": "", "summary": "Module for fethcing data from CoinMarketCap's v1 API", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b27e1ebd685e21d59416fc2e64d905e62d686df6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d38372532352d79656c6c6f77677265656e2e737667\">\n<img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fa50706233325b4f0408df1bf30e45e9b112b1d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e372d627269676874677265656e2e737667\">\n<img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fa4554ad1053d07a0598476786452b9280633d8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f56657273696f6e2d302e342d627269676874677265656e2e737667\">\n<img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aab1d039acf22567ba072834df6bce204ac48ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667\"></p>\n<h1>CoinMarketCap</h1>\n<p>A Python implementation of CoinMarketCap's V1 API.</p>\n<p>You need an API key from CoinMarketCap in order to utilize this module, you can get a key from <a href=\"https://coinmarketcap.com/api/\" rel=\"nofollow\">here</a>. Due the low request rate, I recommend you to test your application in a sandbox environment. You need a different API key when using their sandbox environment, which you can get from <a href=\"https://sandbox.coinmarketcap.com/\" rel=\"nofollow\">here</a>.</p>\n<h2>Installing</h2>\n<pre>python3 -m pip install CoinMarketCapAPI\n</pre>\n<h2>Authentication</h2>\n<p>If no keys are provided during init, the module will look for a JSON file in <code>$HOME/.coinmarketcap.json</code>, with the following syntax.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"sandbox\"</span><span class=\"p\">:</span> <span class=\"s2\">\"API_KEY\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"production\"</span><span class=\"p\">:</span> <span class=\"s2\">\"API_KEY\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Alternatively, you can set your keys as OS environment variables. With .bashrc, add the following two lines.</p>\n<pre>export COINMARKETCAP_SANDBOX=\"API_KEY\"\nexport COINMARKETCAP_PRODUCTION=\"API_KEY\"\n</pre>\n<h2>Examples</h2>\n<p>Init client with an API Key.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coinmarketcap</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"API_KEY\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n<span class=\"err\">```</span><span class=\"n\">request</span> <span class=\"n\">limit</span>\n\n<span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">example</span> <span class=\"n\">shows</span> <span class=\"n\">how</span> <span class=\"n\">you</span> <span class=\"n\">can</span> <span class=\"n\">access</span> <span class=\"ow\">and</span> <span class=\"n\">send</span> <span class=\"n\">a</span> <span class=\"n\">request</span> <span class=\"n\">to</span> <span class=\"n\">each</span> <span class=\"n\">of</span> <span class=\"n\">CoinMarketCap</span><span class=\"s1\">'s endpoint (cryptocurrency, exchange, global_metrics, tools). Notice plural and singular method endings. Plurals allow a list of `id`, `symbol` or `slug`, singular allows only a single value.</span>\n\n<span class=\"err\">```</span><span class=\"n\">python</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coinmarketcap</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"c1\"># Init sandbox client.</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">sandbox</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># fetch cryptocurrency info</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">cryptocurrency</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">symbols</span><span class=\"p\">([</span><span class=\"s2\">\"BTC\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ETH\"</span><span class=\"p\">])</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">cryptocurrency</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">ids</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># fetch exchange info</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">exchange</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">slugs</span><span class=\"p\">(</span><span class=\"s2\">\"binance\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">exchange</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">ids</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># fetch global market data</span>\n<span class=\"n\">time</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">strptime</span><span class=\"p\">(</span><span class=\"s2\">\"2018-12-21\"</span><span class=\"p\">,</span> <span class=\"s2\">\"%Y-%m-</span><span class=\"si\">%d</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">global_metrics</span><span class=\"o\">.</span><span class=\"n\">quotes</span><span class=\"o\">.</span><span class=\"n\">latest</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">global_metrics</span><span class=\"o\">.</span><span class=\"n\">quotes</span><span class=\"o\">.</span><span class=\"n\">historical</span><span class=\"p\">(</span><span class=\"n\">time_start</span><span class=\"o\">=</span><span class=\"n\">time</span><span class=\"p\">)</span>\n\n<span class=\"n\">amount_1</span> <span class=\"o\">=</span> <span class=\"mf\">100.4</span>\n<span class=\"n\">amount_2</span> <span class=\"o\">=</span> <span class=\"s2\">\"901.23\"</span>\n<span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"c1\"># convert price historic price</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">tools</span><span class=\"o\">.</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">convert_id</span><span class=\"p\">(</span><span class=\"n\">amount_1</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">time</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">tools</span><span class=\"o\">.</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">convert_symbol</span><span class=\"p\">(</span><span class=\"n\">amount_2</span><span class=\"p\">,</span> <span class=\"s2\">\"BTC\"</span><span class=\"p\">,</span> <span class=\"n\">convert</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"USD\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ETH\"</span><span class=\"p\">])</span>\n</pre>\n<p>Due to CoinMarketCap's credit and rate limit system, implementing a proper request throttler is complex. Anyway, I tried to apply three different levels of throttling. \"minute\", \"daily\", \"monthly\". Each level make sure you don't exceed the request limit of the given plan. The different levels have no perception of CoinMarketCap's credit system...</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coinmarketcap</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"c1\"># By default throttling of requests are off.</span>\n<span class=\"c1\"># Ignore the Client's keyword arguments \"throttle\", \"plan\", and \"block\" if</span>\n<span class=\"c1\"># you don't want the client to throttle requests.  </span>\n\n<span class=\"c1\"># client_1 will not exceed the number of request each minute with the basic plan.</span>\n<span class=\"n\">client_1</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">throttle</span><span class=\"o\">=</span><span class=\"s2\">\"minute\"</span><span class=\"p\">,</span> <span class=\"n\">plan</span><span class=\"o\">=</span><span class=\"s2\">\"basic\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># client_2 will not exceed the daily request limit.</span>\n<span class=\"n\">client_2</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">throttle</span><span class=\"o\">=</span><span class=\"s2\">\"daily\"</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">plan</span><span class=\"o\">=</span><span class=\"s2\">\"hobbyist\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># client_3 will never exceeded CoinMarketCap monthly request rate.</span>\n<span class=\"n\">client_3</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">throttle</span><span class=\"o\">=</span><span class=\"s2\">\"monthly\"</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">plan</span><span class=\"o\">=</span><span class=\"s2\">\"professional\"</span><span class=\"p\">)</span>\n</pre>\n<p>Each request is cached, the expiration time of data can be adjusted with the keyword argument <code>expire</code>. Set <code>expire=0</code> if don't want any cached data.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coinmarketcap</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"c1\"># cached request will be removed after 1 second</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">expire</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># cacherd request will be removed after 1 h</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">expire</span><span class=\"o\">=</span><span class=\"mi\">3600</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To remove all data from the cache, use the method clear_cache</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">clear_cache</span><span class=\"p\">()</span>\n</pre>\n<h2>TODO</h2>\n<ul>\n<li>Enable Proper throttling of requests.</li>\n<li>Testing of different python versions.</li>\n</ul>\n<p>This is my first python module. So, I appreciate any feedback :)</p>\n\n          </div>"}, "last_serial": 4904982, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "9d34bbe19fc3c512e84a62c8e1baa119", "sha256": "955ceb417ec25ce278bb11c9b3c9d61a4956e78092031f76d1add67545fa0445"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9d34bbe19fc3c512e84a62c8e1baa119", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17126, "upload_time": "2019-03-05T17:03:25", "upload_time_iso_8601": "2019-03-05T17:03:25.428524Z", "url": "https://files.pythonhosted.org/packages/62/41/3d02a10becbe119a28fe5d6c1201b45ea809c656cd6477bcedc3f752806a/CoinMarketCapAPI-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "265c00f1f61dff1f1f740548a5f72c6a", "sha256": "0365ec46553472fdbc95c26dbd6eaad514c4bb12399d42f1f285471734ea0b1b"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.3.tar.gz", "has_sig": false, "md5_digest": "265c00f1f61dff1f1f740548a5f72c6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11006, "upload_time": "2019-03-05T17:03:27", "upload_time_iso_8601": "2019-03-05T17:03:27.707654Z", "url": "https://files.pythonhosted.org/packages/5a/a0/462ce4cc94efe634603918984dd9e6df5d1c1f7b90e3b1177d19bb78e7c0/CoinMarketCapAPI-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c4ec6072becd0e142c4cd70070226a7c", "sha256": "864e63486fffde180d4b533d19e7d058e10fcbdf8857ad624b7d679ea866b53a"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c4ec6072becd0e142c4cd70070226a7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17126, "upload_time": "2019-03-05T17:05:02", "upload_time_iso_8601": "2019-03-05T17:05:02.683609Z", "url": "https://files.pythonhosted.org/packages/dd/1b/0fb2d49c16c86bb8ea1b171366f650678d2c17c786cc5922449ae5cc82d7/CoinMarketCapAPI-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a30f9322c26c6458bf1ce0caa5b8036", "sha256": "078466a33ede0dbf59ca848dd508fff37221469cfae0bf81f8740e679a5099b8"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.4.tar.gz", "has_sig": false, "md5_digest": "6a30f9322c26c6458bf1ce0caa5b8036", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11000, "upload_time": "2019-03-05T17:05:04", "upload_time_iso_8601": "2019-03-05T17:05:04.569961Z", "url": "https://files.pythonhosted.org/packages/5e/7f/68bde5e3ef6d7f3449f91e0cc88ae1db79b31c7e8d7167979c593ed038d8/CoinMarketCapAPI-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "694ee4e0d626e77a3fe11fc1381bea4f", "sha256": "754af0534dcccb665f45af1e0733d32ffd2c33640b82b2593b5eb0db7539c5f3"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "694ee4e0d626e77a3fe11fc1381bea4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17717, "upload_time": "2019-03-06T11:42:52", "upload_time_iso_8601": "2019-03-06T11:42:52.527402Z", "url": "https://files.pythonhosted.org/packages/06/7a/2e48939954ddbb23bcaa88965a99067c2cbb3c851d12a6ca14468cdaf418/CoinMarketCapAPI-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "778332ec67f1505f3a65987f6e38186b", "sha256": "dfb6db77683abda56e89fe8cc0126c5ca6c067f6f9cf5d4d99208b47463a0775"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.5.tar.gz", "has_sig": false, "md5_digest": "778332ec67f1505f3a65987f6e38186b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11378, "upload_time": "2019-03-06T11:42:54", "upload_time_iso_8601": "2019-03-06T11:42:54.160230Z", "url": "https://files.pythonhosted.org/packages/bb/a5/3d3fa508ebee7d3062705aa97405a929bc58b9a91067ffc099d34ca1974b/CoinMarketCapAPI-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "694ee4e0d626e77a3fe11fc1381bea4f", "sha256": "754af0534dcccb665f45af1e0733d32ffd2c33640b82b2593b5eb0db7539c5f3"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "694ee4e0d626e77a3fe11fc1381bea4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17717, "upload_time": "2019-03-06T11:42:52", "upload_time_iso_8601": "2019-03-06T11:42:52.527402Z", "url": "https://files.pythonhosted.org/packages/06/7a/2e48939954ddbb23bcaa88965a99067c2cbb3c851d12a6ca14468cdaf418/CoinMarketCapAPI-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "778332ec67f1505f3a65987f6e38186b", "sha256": "dfb6db77683abda56e89fe8cc0126c5ca6c067f6f9cf5d4d99208b47463a0775"}, "downloads": -1, "filename": "CoinMarketCapAPI-0.5.tar.gz", "has_sig": false, "md5_digest": "778332ec67f1505f3a65987f6e38186b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11378, "upload_time": "2019-03-06T11:42:54", "upload_time_iso_8601": "2019-03-06T11:42:54.160230Z", "url": "https://files.pythonhosted.org/packages/bb/a5/3d3fa508ebee7d3062705aa97405a929bc58b9a91067ffc099d34ca1974b/CoinMarketCapAPI-0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:07 2020"}