{"info": {"author": "Aaron Bach", "author_email": "bachya1208@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# \ud83c\udf24  aioambient: An async library for Ambient Weather Personal Weather Stations\n\n[![CI](https://github.com/bachya/aioambient/workflows/CI/badge.svg)](https://github.com/bachya/aioambient/actions)\n[![PyPi](https://img.shields.io/pypi/v/aioambient.svg)](https://pypi.python.org/pypi/aioambient)\n[![Version](https://img.shields.io/pypi/pyversions/aioambient.svg)](https://pypi.python.org/pypi/aioambient)\n[![License](https://img.shields.io/pypi/l/aioambient.svg)](https://github.com/bachya/aioambient/blob/master/LICENSE)\n[![Code Coverage](https://codecov.io/gh/bachya/aioambient/branch/dev/graph/badge.svg)](https://codecov.io/gh/bachya/aioambient)\n[![Maintainability](https://api.codeclimate.com/v1/badges/81a9f8274abf325b2fa4/maintainability)](https://codeclimate.com/github/bachya/aioambient/maintainability)\n[![Say Thanks](https://img.shields.io/badge/SayThanks-!-1EAEDB.svg)](https://saythanks.io/to/bachya)\n\n`aioambient` is a Python3, asyncio-driven library that interfaces with both the\nREST and Websocket APIs provided by\n[Ambient Weather](https://ambientweather.net).\n\n# Installation\n\n```python\npip install aioambient\n```\n\n# Python Versions\n\n`aioambient` is currently supported on:\n\n* Python 3.6\n* Python 3.7\n* Python 3.8\n\n# API and Application Keys\n\nUtilizing `aioambient` requires both an Application Key and an API Key from\nAmbient Weather. You can generate both from the Profile page in your\n[Ambient Weather Dashboard](https://dashboard.ambientweather.net).\n\n# Usage\n\n## Creating a Client\n\nAn `aioambient` client starts with an\n[aiohttp](https://aiohttp.readthedocs.io/en/stable/) `ClientSession`:\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom aioambient import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    async with ClientSession() as websession:\n        # YOUR CODE HERE\n\n\nasyncio.get_event_loop().run_until_complete(main())\n```\n\nCreate a client, initialize it, then get to it:\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom aioambient import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    async with ClientSession() as websession:\n        client = Client(\"<YOUR API KEY>\", \"<YOUR APPLICATION KEY>\", websession)\n\n        # Get all devices in an account:\n        await client.api.get_devices()\n\n        # Get all stored readings from a device:\n        await client.api.get_device_details(\"<DEVICE MAC ADDRESS>\")\n\n        # Get all stored readings from a device (starting at a datetime):\n        await client.api.get_device_details(\n            \"<DEVICE MAC ADDRESS>\", end_date=\"2019-01-16\"\n        )\n\n\nasyncio.get_event_loop().run_until_complete(main())\n```\n\n## REST API\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom aioambient import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    async with ClientSession() as websession:\n        client = Client(\"<YOUR API KEY>\", \"<YOUR APPLICATION KEY>\", websession)\n\n        # Get all devices in an account:\n        await client.api.get_devices()\n\n        # Get all stored readings from a device:\n        await client.api.get_device_details(\"<DEVICE MAC ADDRESS>\")\n\n        # Get all stored readings from a device (starting at a datetime):\n        await client.api.get_device_details(\n            \"<DEVICE MAC ADDRESS>\", end_date=\"2019-01-16\"\n        )\n\n\nasyncio.get_event_loop().run_until_complete(main())\n```\n\nPlease be aware of Ambient Weather's\n[rate limiting policies](https://ambientweather.docs.apiary.io/#introduction/rate-limiting).\n\n## Websocket API\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\n\nfrom aioambient import Client\n\n\nasync def main() -> None:\n    \"\"\"Create the aiohttp session and run the example.\"\"\"\n    async with ClientSession() as websession:\n        client = Client(\"<YOUR API KEY>\", \"<YOUR APPLICATION KEY>\", websession)\n\n        # Define a method that should be fired when the websocket client\n        # connects:\n        def connect_method():\n            \"\"\"Print a simple \"hello\" message.\"\"\"\n            print(\"Client has connected to the websocket\")\n\n        client.websocket.on_connect(connect_method)\n\n        # Alternatively, define a coroutine handler:\n        async def connect_coroutine():\n            \"\"\"Waits for 3 seconds, then print a simple \"hello\" message.\"\"\"\n            await asyncio.sleep(3)\n            print(\"Client has connected to the websocket\")\n\n        client.websocket.async_on_connect(connect_coroutine)\n\n        # Define a method that should be run upon subscribing to the Ambient\n        # Weather cloud:\n        def subscribed_method(data):\n            \"\"\"Print the data received upon subscribing.\"\"\"\n            print(f\"Subscription data received: {data}\")\n\n        client.websocket.on_subscribed(subscribed_method)\n\n        # Alternatively, define a coroutine handler:\n        async def subscribed_coroutine(data):\n            \"\"\"Waits for 3 seconds, then print the incoming data.\"\"\"\n            await asyncio.sleep(3)\n            print(f\"Subscription data received: {data}\")\n\n        client.websocket.async_on_subscribed(subscribed_coroutine)\n\n        # Define a method that should be run upon receiving data:\n        def data_method(data):\n            \"\"\"Print the data received.\"\"\"\n            print(f\"Data received: {data}\")\n\n        client.websocket.on_data(data_method)\n\n        # Alternatively, define a coroutine handler:\n        async def data_coroutine(data):\n            \"\"\"Wait for 3 seconds, then print the data received.\"\"\"\n            await asyncio.sleep(3)\n            print(f\"Data received: {data}\")\n\n        client.websocket.async_on_data(data_coroutine)\n\n        # Define a method that should be run when the websocket client\n        # disconnects:\n        def disconnect_method(data):\n            \"\"\"Print a simple \"goodbye\" message.\"\"\"\n            print(\"Client has disconnected from the websocket\")\n\n        client.websocket.on_disconnect(disconnect_method)\n\n        # Alternatively, define a coroutine handler:\n        async def disconnect_coroutine(data):\n            \"\"\"Wait for 3 seconds, then print a simple \"goodbye\" message.\"\"\"\n            await asyncio.sleep(3)\n            print(\"Client has disconnected from the websocket\")\n\n        client.websocket.async_on_disconnect(disconnect_coroutine)\n\n        # Connect to the websocket:\n        await client.websocket.connect()\n\n        # At any point, disconnect from the websocket:\n        await client.websocket.disconnect()\n\n\nasyncio.run(main())\n```\n\n# Contributing\n\n1. [Check for open features/bugs](https://github.com/bachya/aioambient/issues)\n  or [initiate a discussion on one](https://github.com/bachya/aioambient/issues/new).\n2. [Fork the repository](https://github.com/bachya/aioambient/fork).\n3. (_optional, but highly recommended_) Create a virtual environment: `python3 -m venv .venv`\n4. (_optional, but highly recommended_) Enter the virtual environment: `source ./venv/bin/activate`\n5. Install the dev environment: `script/setup`\n6. Code your new feature or bug fix.\n7. Write tests that cover your new functionality.\n8. Run tests and ensure 100% code coverage: `script/test`\n9. Update `README.md` with any new documentation.\n10. Add yourself to `AUTHORS.md`.\n11. Submit a pull request!\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bachya/aioambient", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aioambient", "package_url": "https://pypi.org/project/aioambient/", "platform": "", "project_url": "https://pypi.org/project/aioambient/", "project_urls": {"Homepage": "https://github.com/bachya/aioambient", "Repository": "https://github.com/bachya/aioambient"}, "release_url": "https://pypi.org/project/aioambient/1.1.1/", "requires_dist": ["aiohttp (>=3.6.2,<4.0.0)", "python-engineio (==3.12.1)", "python-socketio (==4.5.1)", "websockets (>=8.1,<9.0)"], "requires_python": ">=3.6.1,<4.0.0", "summary": "A clean, async-friendly library for the Ambient Weather API", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83c\udf24  aioambient: An async library for Ambient Weather Personal Weather Stations</h1>\n<p><a href=\"https://github.com/bachya/aioambient/actions\" rel=\"nofollow\"><img alt=\"CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0ecc212422c613639f341ee118a3d725492a57f/68747470733a2f2f6769746875622e636f6d2f6261636879612f61696f616d6269656e742f776f726b666c6f77732f43492f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aioambient\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d51b0c1f5312b5b290cd13345d13c7e3f0e410e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f616d6269656e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aioambient\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11d2bfcfd733af2c2aaef77e7109079bc83facc3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f616d6269656e742e737667\"></a>\n<a href=\"https://github.com/bachya/aioambient/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b9815a5babc5393a3fc46bb134bad15bad6f396/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61696f616d6269656e742e737667\"></a>\n<a href=\"https://codecov.io/gh/bachya/aioambient\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c72655892a3d28f3e2cff0a779c35d59cc4d56a/68747470733a2f2f636f6465636f762e696f2f67682f6261636879612f61696f616d6269656e742f6272616e63682f6465762f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/bachya/aioambient/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fdd28076105aa7efeabcd0d52204c72e9885c28/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f38316139663832373461626633323562326661342f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://saythanks.io/to/bachya\" rel=\"nofollow\"><img alt=\"Say Thanks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/836a72b26b72545aaf496536c5baba94f15fb592/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361795468616e6b732d212d3145414544422e737667\"></a></p>\n<p><code>aioambient</code> is a Python3, asyncio-driven library that interfaces with both the\nREST and Websocket APIs provided by\n<a href=\"https://ambientweather.net\" rel=\"nofollow\">Ambient Weather</a>.</p>\n<h1>Installation</h1>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">aioambient</span>\n</pre>\n<h1>Python Versions</h1>\n<p><code>aioambient</code> is currently supported on:</p>\n<ul>\n<li>Python 3.6</li>\n<li>Python 3.7</li>\n<li>Python 3.8</li>\n</ul>\n<h1>API and Application Keys</h1>\n<p>Utilizing <code>aioambient</code> requires both an Application Key and an API Key from\nAmbient Weather. You can generate both from the Profile page in your\n<a href=\"https://dashboard.ambientweather.net\" rel=\"nofollow\">Ambient Weather Dashboard</a>.</p>\n<h1>Usage</h1>\n<h2>Creating a Client</h2>\n<p>An <code>aioambient</code> client starts with an\n<a href=\"https://aiohttp.readthedocs.io/en/stable/\" rel=\"nofollow\">aiohttp</a> <code>ClientSession</code>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aioambient</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">websession</span><span class=\"p\">:</span>\n        <span class=\"c1\"># YOUR CODE HERE</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>Create a client, initialize it, then get to it:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aioambient</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">websession</span><span class=\"p\">:</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;YOUR API KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;YOUR APPLICATION KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">websession</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Get all devices in an account:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_devices</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Get all stored readings from a device:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_device_details</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;DEVICE MAC ADDRESS&gt;\"</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Get all stored readings from a device (starting at a datetime):</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_device_details</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"&lt;DEVICE MAC ADDRESS&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-01-16\"</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>REST API</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aioambient</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">websession</span><span class=\"p\">:</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;YOUR API KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;YOUR APPLICATION KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">websession</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Get all devices in an account:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_devices</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Get all stored readings from a device:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_device_details</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;DEVICE MAC ADDRESS&gt;\"</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Get all stored readings from a device (starting at a datetime):</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_device_details</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"&lt;DEVICE MAC ADDRESS&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-01-16\"</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>Please be aware of Ambient Weather's\n<a href=\"https://ambientweather.docs.apiary.io/#introduction/rate-limiting\" rel=\"nofollow\">rate limiting policies</a>.</p>\n<h2>Websocket API</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aioambient</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create the aiohttp session and run the example.\"\"\"</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">websession</span><span class=\"p\">:</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;YOUR API KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;YOUR APPLICATION KEY&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">websession</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Define a method that should be fired when the websocket client</span>\n        <span class=\"c1\"># connects:</span>\n        <span class=\"k\">def</span> <span class=\"nf\">connect_method</span><span class=\"p\">():</span>\n            <span class=\"sd\">\"\"\"Print a simple \"hello\" message.\"\"\"</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client has connected to the websocket\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">on_connect</span><span class=\"p\">(</span><span class=\"n\">connect_method</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Alternatively, define a coroutine handler:</span>\n        <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">connect_coroutine</span><span class=\"p\">():</span>\n            <span class=\"sd\">\"\"\"Waits for 3 seconds, then print a simple \"hello\" message.\"\"\"</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client has connected to the websocket\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">async_on_connect</span><span class=\"p\">(</span><span class=\"n\">connect_coroutine</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Define a method that should be run upon subscribing to the Ambient</span>\n        <span class=\"c1\"># Weather cloud:</span>\n        <span class=\"k\">def</span> <span class=\"nf\">subscribed_method</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"Print the data received upon subscribing.\"\"\"</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Subscription data received: </span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">on_subscribed</span><span class=\"p\">(</span><span class=\"n\">subscribed_method</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Alternatively, define a coroutine handler:</span>\n        <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">subscribed_coroutine</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"Waits for 3 seconds, then print the incoming data.\"\"\"</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Subscription data received: </span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">async_on_subscribed</span><span class=\"p\">(</span><span class=\"n\">subscribed_coroutine</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Define a method that should be run upon receiving data:</span>\n        <span class=\"k\">def</span> <span class=\"nf\">data_method</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"Print the data received.\"\"\"</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Data received: </span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">on_data</span><span class=\"p\">(</span><span class=\"n\">data_method</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Alternatively, define a coroutine handler:</span>\n        <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">data_coroutine</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"Wait for 3 seconds, then print the data received.\"\"\"</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Data received: </span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">async_on_data</span><span class=\"p\">(</span><span class=\"n\">data_coroutine</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Define a method that should be run when the websocket client</span>\n        <span class=\"c1\"># disconnects:</span>\n        <span class=\"k\">def</span> <span class=\"nf\">disconnect_method</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"Print a simple \"goodbye\" message.\"\"\"</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client has disconnected from the websocket\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">on_disconnect</span><span class=\"p\">(</span><span class=\"n\">disconnect_method</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Alternatively, define a coroutine handler:</span>\n        <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">disconnect_coroutine</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"Wait for 3 seconds, then print a simple \"goodbye\" message.\"\"\"</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client has disconnected from the websocket\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">async_on_disconnect</span><span class=\"p\">(</span><span class=\"n\">disconnect_coroutine</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Connect to the websocket:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># At any point, disconnect from the websocket:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">disconnect</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h1>Contributing</h1>\n<ol>\n<li><a href=\"https://github.com/bachya/aioambient/issues\" rel=\"nofollow\">Check for open features/bugs</a>\nor <a href=\"https://github.com/bachya/aioambient/issues/new\" rel=\"nofollow\">initiate a discussion on one</a>.</li>\n<li><a href=\"https://github.com/bachya/aioambient/fork\" rel=\"nofollow\">Fork the repository</a>.</li>\n<li>(<em>optional, but highly recommended</em>) Create a virtual environment: <code>python3 -m venv .venv</code></li>\n<li>(<em>optional, but highly recommended</em>) Enter the virtual environment: <code>source ./venv/bin/activate</code></li>\n<li>Install the dev environment: <code>script/setup</code></li>\n<li>Code your new feature or bug fix.</li>\n<li>Write tests that cover your new functionality.</li>\n<li>Run tests and ensure 100% code coverage: <code>script/test</code></li>\n<li>Update <code>README.md</code> with any new documentation.</li>\n<li>Add yourself to <code>AUTHORS.md</code>.</li>\n<li>Submit a pull request!</li>\n</ol>\n\n          </div>"}, "last_serial": 6964911, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0013c954f5b43f544136ab44cbbc4e95", "sha256": "04825c9ad848400e3d0daf2cf9425ecaceb9f1b59f4ae433f8c60be7f68020df"}, "downloads": -1, "filename": "aioambient-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0013c954f5b43f544136ab44cbbc4e95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8144, "upload_time": "2019-01-22T05:54:03", "upload_time_iso_8601": "2019-01-22T05:54:03.263606Z", "url": "https://files.pythonhosted.org/packages/af/63/37fe407fb2460017ccdd0c213178348ef41fdbbca4bf01bd9f141c92b1f9/aioambient-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd30812a481f2094a01e0dadcaa6fb50", "sha256": "8738a7ba71703f3a984b457c33a7ae382a7b7007b0514c329a4c9b7b4ad05de9"}, "downloads": -1, "filename": "aioambient-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cd30812a481f2094a01e0dadcaa6fb50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 6736, "upload_time": "2019-01-22T05:54:05", "upload_time_iso_8601": "2019-01-22T05:54:05.584219Z", "url": "https://files.pythonhosted.org/packages/22/cd/60cd2e0dbf50600f5225ea0bc20a8ae73775803b1ab45848e4aa5493d904/aioambient-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "293ccbc7477c829164a7b1b7be421c89", "sha256": "8085c013e367acda2df89a2cf6d03c73f6625490d2273edd2f5ce208f6747a3a"}, "downloads": -1, "filename": "aioambient-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "293ccbc7477c829164a7b1b7be421c89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8238, "upload_time": "2019-02-12T23:47:20", "upload_time_iso_8601": "2019-02-12T23:47:20.530645Z", "url": "https://files.pythonhosted.org/packages/92/17/37792c25968767d7341a78f640ea601f02a3ac60a030b7094b045d2328fe/aioambient-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60a454a7a2c08724f772891fca2ecf82", "sha256": "31b929670f39ae4c34c1a8bfb1bdaa67cab8fe71fe4d175b0e215ea5fec023a5"}, "downloads": -1, "filename": "aioambient-0.1.1.tar.gz", "has_sig": false, "md5_digest": "60a454a7a2c08724f772891fca2ecf82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 6837, "upload_time": "2019-02-12T23:47:22", "upload_time_iso_8601": "2019-02-12T23:47:22.256587Z", "url": "https://files.pythonhosted.org/packages/91/1d/b08c79ad9a8abce7f633d0a5b7dabb3618f856a8ae3419d7c4338f13c7d3/aioambient-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ced27918c63b54937fdbeea6f31412c6", "sha256": "d6ccd1e33a64ea83e0863eeeccdbaaadb94ffc4fb8344f42eda3af03d9932eec"}, "downloads": -1, "filename": "aioambient-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ced27918c63b54937fdbeea6f31412c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8238, "upload_time": "2019-02-15T18:04:27", "upload_time_iso_8601": "2019-02-15T18:04:27.137595Z", "url": "https://files.pythonhosted.org/packages/62/11/5bdf22ace9a2f0e32f7f0dc6bb65af5d41f8a67f3dce3472ead4e7e56525/aioambient-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "230b0de3d6363a95858e5d8fbd2ad982", "sha256": "ab490f34e7a872f3580b1280028df419d877c4cbdbf118f3dbe73cd5237cc26d"}, "downloads": -1, "filename": "aioambient-0.1.2.tar.gz", "has_sig": false, "md5_digest": "230b0de3d6363a95858e5d8fbd2ad982", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 6843, "upload_time": "2019-02-15T18:04:28", "upload_time_iso_8601": "2019-02-15T18:04:28.638071Z", "url": "https://files.pythonhosted.org/packages/a3/f6/7e12f639a53a94ac61f05f0276936c47dbdf8ab6617c0c7b788a8fdb7d85/aioambient-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "130831bb352382fa7e4d4021c12083a0", "sha256": "1bd6c8d4f99e14d439cbbef501f3324a7a4371cc114b68fa12f16246fdd76f95"}, "downloads": -1, "filename": "aioambient-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "130831bb352382fa7e4d4021c12083a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8235, "upload_time": "2019-02-28T00:07:55", "upload_time_iso_8601": "2019-02-28T00:07:55.447119Z", "url": "https://files.pythonhosted.org/packages/1f/36/1520d38fcaf2226d460f231d34884c04a06e837bf468b0f84309cc5e93db/aioambient-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8e97bb683314b860f37d428a0bf768b", "sha256": "277de03992f5e1ae5786e9646778546b8865fc02347b162d25d90a73561e52ef"}, "downloads": -1, "filename": "aioambient-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e8e97bb683314b860f37d428a0bf768b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 6836, "upload_time": "2019-02-28T00:07:56", "upload_time_iso_8601": "2019-02-28T00:07:56.979257Z", "url": "https://files.pythonhosted.org/packages/62/5f/7ec1d57b53ccca3d6bd46b38f02a794e61e1c16b5776f9fa6e63ceca0767/aioambient-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "365243b1c3201b35845288a70a4bab30", "sha256": "b28f8bcc2a97551bbd9c32f0c2e5158f1804263a2f0b70ded5a22d3a5ebd7785"}, "downloads": -1, "filename": "aioambient-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "365243b1c3201b35845288a70a4bab30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8238, "upload_time": "2019-04-04T18:19:39", "upload_time_iso_8601": "2019-04-04T18:19:39.773185Z", "url": "https://files.pythonhosted.org/packages/a2/e2/043df83a33f0db209544954b05a367de77e971cac61bfb57268d184ae6df/aioambient-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c3ab52f760082a6f78111f00e1d2ed6", "sha256": "6b0219bc2d15908316fba22bb67cd2316cb2d5573dc51b7de365c6b944299a07"}, "downloads": -1, "filename": "aioambient-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6c3ab52f760082a6f78111f00e1d2ed6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 6835, "upload_time": "2019-04-04T18:19:41", "upload_time_iso_8601": "2019-04-04T18:19:41.397356Z", "url": "https://files.pythonhosted.org/packages/a4/95/13f432398a8f9a499d3359d0910850c3930ac9c713433d7473df92538cda/aioambient-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "89e43095c8cfacee3931607279c0ca5c", "sha256": "2ed6a8aed2fdd97137eead6ab1e54a711b23c7b5c58f39843d2caaae1861969a"}, "downloads": -1, "filename": "aioambient-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "89e43095c8cfacee3931607279c0ca5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8466, "upload_time": "2019-04-07T16:46:09", "upload_time_iso_8601": "2019-04-07T16:46:09.834193Z", "url": "https://files.pythonhosted.org/packages/ec/48/873d22722d7eea020798892e02edd53896118e0ebc2195a9ad4a134e399f/aioambient-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaf53a56c5d6093ce655db22e95ce967", "sha256": "686e49c2f252019d2ecb48391f8d5d9ecd5e05639b663b0cd49377094633438f"}, "downloads": -1, "filename": "aioambient-0.3.0.tar.gz", "has_sig": false, "md5_digest": "eaf53a56c5d6093ce655db22e95ce967", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 7081, "upload_time": "2019-04-07T16:46:11", "upload_time_iso_8601": "2019-04-07T16:46:11.523395Z", "url": "https://files.pythonhosted.org/packages/44/3b/767c3fd24357f385aff46f730c90809c51d544f814c067f1c41739c0a89d/aioambient-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f935771ede04dbd08cee989786517547", "sha256": "2fbf4abc2eb2638aec0e114735a93fe5f2a548020ddaed8c2295d029a9f0b66e"}, "downloads": -1, "filename": "aioambient-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f935771ede04dbd08cee989786517547", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8454, "upload_time": "2019-06-15T02:36:53", "upload_time_iso_8601": "2019-06-15T02:36:53.914401Z", "url": "https://files.pythonhosted.org/packages/2d/13/cd52fedeb65898c5b88dc14976354a0a25086f89df218e9d586b159bc95c/aioambient-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a788ac59a868af607af7b7d6deb13c58", "sha256": "67dc10af38100cfa16707f34838fae82a05e68d80638f728d569f8bbcf5319dc"}, "downloads": -1, "filename": "aioambient-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a788ac59a868af607af7b7d6deb13c58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 7159, "upload_time": "2019-06-15T02:36:55", "upload_time_iso_8601": "2019-06-15T02:36:55.596146Z", "url": "https://files.pythonhosted.org/packages/36/17/7e7d8bd89d73541a24f02a1679e848acfb42ccb7051f7a6d63410b77389d/aioambient-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "64ed87f23822a610857eeb9e7eb68091", "sha256": "1c666aa0f2df9da05b9fb0c690b37171d2f5d51b6306cc3369e801424a895dae"}, "downloads": -1, "filename": "aioambient-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "64ed87f23822a610857eeb9e7eb68091", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8456, "upload_time": "2019-08-14T23:57:36", "upload_time_iso_8601": "2019-08-14T23:57:36.033265Z", "url": "https://files.pythonhosted.org/packages/00/ac/1d0a26072bacf324bcea75ffc7802c909d051c02327ce3fe3214c8d7346b/aioambient-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "666192ff4a3d0f256061c0ab85dc0e22", "sha256": "417768cb9f790e8adf5afb24258bd8694292049619af1140524c33607ae7c63e"}, "downloads": -1, "filename": "aioambient-0.3.2.tar.gz", "has_sig": false, "md5_digest": "666192ff4a3d0f256061c0ab85dc0e22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 7157, "upload_time": "2019-08-14T23:57:37", "upload_time_iso_8601": "2019-08-14T23:57:37.553686Z", "url": "https://files.pythonhosted.org/packages/ad/0e/26a97553d45e01a79be47a7378e524d114fbf1de0849f4d228dc9634dbb4/aioambient-0.3.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b7f05e358b97d704040b6ac1cfd007c3", "sha256": "e6f172d38b15aa679ccc774b57c739a79d28a0ee673a3e2d2d38ec967e7295c6"}, "downloads": -1, "filename": "aioambient-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b7f05e358b97d704040b6ac1cfd007c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 8428, "upload_time": "2019-09-05T21:25:33", "upload_time_iso_8601": "2019-09-05T21:25:33.022571Z", "url": "https://files.pythonhosted.org/packages/44/34/a98fa8da5e5f81c76fdc1e4c1c799fd306058ce66169dde9d182617ee824/aioambient-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b974f84f1194464723cf1fd3b57c3d03", "sha256": "3b49a3eeff61ea8f7a0180f612e443a5a4a32d09318b59b916423d735117c09a"}, "downloads": -1, "filename": "aioambient-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b974f84f1194464723cf1fd3b57c3d03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 7165, "upload_time": "2019-09-05T21:25:34", "upload_time_iso_8601": "2019-09-05T21:25:34.280551Z", "url": "https://files.pythonhosted.org/packages/3f/42/8efda0ce240bdc29636870353b8b7082e5bbd9a4fb84a8d01e94e5fdd260/aioambient-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "40b34750db55bc78655dcd49eae0fd4d", "sha256": "47c8a198c70e0783aeb2f0b65446177785807e46ce222d29db44362ed7fa6161"}, "downloads": -1, "filename": "aioambient-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "40b34750db55bc78655dcd49eae0fd4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 6815, "upload_time": "2019-11-18T04:01:13", "upload_time_iso_8601": "2019-11-18T04:01:13.862884Z", "url": "https://files.pythonhosted.org/packages/60/f8/a6e7b8abba7069aa7f0d67e523b1fe0a25cb206a150a7a0a4f1419bdbad9/aioambient-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80abb16491414ed70ac05b2959ce7d2c", "sha256": "c95505d873e34f3ca70aa4484c99b4fc60035d623a60f92e291fd45b55aa84cd"}, "downloads": -1, "filename": "aioambient-1.0.1.tar.gz", "has_sig": false, "md5_digest": "80abb16491414ed70ac05b2959ce7d2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 6858, "upload_time": "2019-11-18T04:01:15", "upload_time_iso_8601": "2019-11-18T04:01:15.364703Z", "url": "https://files.pythonhosted.org/packages/a6/68/8785bb5cde73e788e585e2f2d86041c89ce5abc690afd59de130e8683ff5/aioambient-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5e645b991f312346c6a02b60d0155430", "sha256": "ca0788bbc73dd2ddfac74e349414b0aa35580057b8f9eef820c76ee18053c2ba"}, "downloads": -1, "filename": "aioambient-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5e645b991f312346c6a02b60d0155430", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 6815, "upload_time": "2019-12-11T21:44:23", "upload_time_iso_8601": "2019-12-11T21:44:23.713597Z", "url": "https://files.pythonhosted.org/packages/0d/78/e38d7248013a0e35fb59a56fe51d8726250cadaf3d2953dd4ebe85f326f9/aioambient-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fbd38c5e9f2dff7985172fb597cfaa2", "sha256": "c51307d9e10f79fb9197dcfbbdca6b30a996d54f36f3e469d5de9acdb6fc9ace"}, "downloads": -1, "filename": "aioambient-1.0.2.tar.gz", "has_sig": false, "md5_digest": "2fbd38c5e9f2dff7985172fb597cfaa2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 6859, "upload_time": "2019-12-11T21:44:25", "upload_time_iso_8601": "2019-12-11T21:44:25.298053Z", "url": "https://files.pythonhosted.org/packages/67/5d/f7506ab46f275892250b84deb8e05a71c2153ddf94934887e86e95e421a2/aioambient-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "cd133f1a3313bfd6d0de7faa73d0aa1b", "sha256": "af818de3c28843a14f379ac8127a76139e50674231ff4e4a02a90ea5eaf35634"}, "downloads": -1, "filename": "aioambient-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cd133f1a3313bfd6d0de7faa73d0aa1b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 6800, "upload_time": "2020-02-10T21:42:15", "upload_time_iso_8601": "2020-02-10T21:42:15.485495Z", "url": "https://files.pythonhosted.org/packages/98/04/f386dab1fd2dbf30ce2f6e18730428966eb0e9cba9fe090857c2549076be/aioambient-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0a4bcf5e525eefacf8a948f5bc4ecc9", "sha256": "cd508a8891ce8b96526aa02d24a9372a05f508d4b3de8d345c15d0115337e707"}, "downloads": -1, "filename": "aioambient-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b0a4bcf5e525eefacf8a948f5bc4ecc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 7065, "upload_time": "2020-02-10T21:42:16", "upload_time_iso_8601": "2020-02-10T21:42:16.666529Z", "url": "https://files.pythonhosted.org/packages/5d/e5/6fcf0c123d321b71c57ff610d0556de1ff6f056c5a96e21ee5bec6de6f65/aioambient-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "5ab45021332baa48b4a6006d7ca9021d", "sha256": "f893bdc7f68f5d19e3fc524e6cf0ffb586f1495430a5bc619c9ada84e93ef6be"}, "downloads": -1, "filename": "aioambient-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5ab45021332baa48b4a6006d7ca9021d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 6840, "upload_time": "2020-02-11T19:44:48", "upload_time_iso_8601": "2020-02-11T19:44:48.036421Z", "url": "https://files.pythonhosted.org/packages/88/32/3a38147e5b61b734eed6b2edf10fdef5bbfcd5cf20518d87e13ad9d7175d/aioambient-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39ee3d08cd68c87ee58c2717cc8ea0f7", "sha256": "f7fd0df4c2c0c6c642b45806833b022bb4e943667b86144c883539023ba649c3"}, "downloads": -1, "filename": "aioambient-1.0.4.tar.gz", "has_sig": false, "md5_digest": "39ee3d08cd68c87ee58c2717cc8ea0f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 7013, "upload_time": "2020-02-11T19:44:49", "upload_time_iso_8601": "2020-02-11T19:44:49.267820Z", "url": "https://files.pythonhosted.org/packages/82/07/74ae928475f254157c0271854c78b1787ca1e740d0e94fd355bf196bf2e1/aioambient-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "815eca5bb92a1562cd2f3051ad75fc84", "sha256": "218bc0f83f23e4d1629b5c1ddb7927be1ec63649aaebf50854bf7d9909f426a7"}, "downloads": -1, "filename": "aioambient-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "815eca5bb92a1562cd2f3051ad75fc84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 7379, "upload_time": "2020-03-27T17:54:58", "upload_time_iso_8601": "2020-03-27T17:54:58.453615Z", "url": "https://files.pythonhosted.org/packages/ed/a2/66559e59acfe353742e4eafb3359944bed4325c3f74cb7c7b7552503b14f/aioambient-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09cb200ec2f8026b5a7d3e6115c6148d", "sha256": "b2e3da5a377f3261c3406da591bf12bfe1fb25358443afefb210b39b4d62210f"}, "downloads": -1, "filename": "aioambient-1.1.0.tar.gz", "has_sig": false, "md5_digest": "09cb200ec2f8026b5a7d3e6115c6148d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 7375, "upload_time": "2020-03-27T17:54:59", "upload_time_iso_8601": "2020-03-27T17:54:59.672473Z", "url": "https://files.pythonhosted.org/packages/1d/b4/1e7d98d6afc1db495ea188c1a372c54b4adb0d11156657d7b3e919cebb47/aioambient-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "e43c9f3d08fb9437aa95f61232a2dc0a", "sha256": "ef1742a901148cd0140e32365d1a10d0caff665c63ddd9c1997743d2cf45fefe"}, "downloads": -1, "filename": "aioambient-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e43c9f3d08fb9437aa95f61232a2dc0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 7357, "upload_time": "2020-04-06T21:20:18", "upload_time_iso_8601": "2020-04-06T21:20:18.458143Z", "url": "https://files.pythonhosted.org/packages/a3/39/9e553256d46b618a27a5b5c93fca1e1ca275a3a20ddc496739162e24c821/aioambient-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41ae6b43b8f8d554be2ab40931cc3a91", "sha256": "bfc3bff0196437bc58f45c57c50db771b87a9b26095593776d0ca4c802ded4a7"}, "downloads": -1, "filename": "aioambient-1.1.1.tar.gz", "has_sig": false, "md5_digest": "41ae6b43b8f8d554be2ab40931cc3a91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 7370, "upload_time": "2020-04-06T21:20:19", "upload_time_iso_8601": "2020-04-06T21:20:19.690440Z", "url": "https://files.pythonhosted.org/packages/ce/ce/6a1c4dc3d0f4a098352eee73e4300fcc1ad4ecf876629201310e7bd282fc/aioambient-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e43c9f3d08fb9437aa95f61232a2dc0a", "sha256": "ef1742a901148cd0140e32365d1a10d0caff665c63ddd9c1997743d2cf45fefe"}, "downloads": -1, "filename": "aioambient-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e43c9f3d08fb9437aa95f61232a2dc0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 7357, "upload_time": "2020-04-06T21:20:18", "upload_time_iso_8601": "2020-04-06T21:20:18.458143Z", "url": "https://files.pythonhosted.org/packages/a3/39/9e553256d46b618a27a5b5c93fca1e1ca275a3a20ddc496739162e24c821/aioambient-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41ae6b43b8f8d554be2ab40931cc3a91", "sha256": "bfc3bff0196437bc58f45c57c50db771b87a9b26095593776d0ca4c802ded4a7"}, "downloads": -1, "filename": "aioambient-1.1.1.tar.gz", "has_sig": false, "md5_digest": "41ae6b43b8f8d554be2ab40931cc3a91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 7370, "upload_time": "2020-04-06T21:20:19", "upload_time_iso_8601": "2020-04-06T21:20:19.690440Z", "url": "https://files.pythonhosted.org/packages/ce/ce/6a1c4dc3d0f4a098352eee73e4300fcc1ad4ecf876629201310e7bd282fc/aioambient-1.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:50 2020"}