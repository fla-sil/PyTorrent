{"info": {"author": "Abhinav Ajgaonkar", "author_email": "abhinav316@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "ezrpc\n=====\n\nEasy to use ZeroMQ based RPC library.\n\n.. image:: https://pypip.in/v/ezrpc/badge.png\n\t\t:target: https://pypi.python.org/pypi/ezrpc\n\n.. image:: https://pypip.in/d/ezrpc/badge.png\n\t\t:target: https://pypi.python.org/pypi/ezrpc\n\nInstall\n=======\n\n.. code-block:: text\n\n\tpip install ezrpc\n\n\nQuickstart\n==========\n\nStep 1\n------\nCreate a Server\n\n.. code-block:: python\n\n\t# server.py\n\tfrom ezrpc import Server\n\n\t# By default, the server binds to all available interfaces\n\ts = Server(server_port=5000, client_port=5001)\n\ts.start()\n\nRun this with:\n\n.. code-block:: python\n\n\tpython server.py\n\n\nStep 2\n------\nCreate a Worker\n\n.. code-block:: python\n\n\t# worker.py\n\tfrom ezrpc import Registry, ServerWorker\n\tregistry = Registry()\n\n\t@registry.method\n\tdef add(a, b):\n\t\treturn a + b\n\n\t@registry.method\n\tdef multiply(a, b):\n\t\treturn a * b\n\n\t# Point the worker to the Server's IP\n\tw = ServerWorker(sys.argv[1], registry, \"tcp://127.0.0.1:5000\")\n\tw.run()\n\nRun as many workers as your server can handle:\n\n.. code-block:: python\n\n\tpython worker.py worker1\n\tpython worker.py worker2\n\tpython worker.py worker3\n\nWorkers are elastic, i.e. you can start and stop them at will and clients will continue to be served.\n\nStep 3\n------\nCreate a Client\n\n.. code-block:: python\n\n\t# client.py\n\tfrom ezrpc import Client\n\n\t# Point the client to the Server's IP\n\t# timeout (millis) is optional, default is 5 seconds\n\tc = Client('tcp://127.0.0.1:5001', timeout=1000)\n\n\tfor i in range(1,11):\n\t\tres = c.ask('add', i, 1)\n\t\tprint 'Response: %s' % res\n\n\tc._disconnect()\n\nRun the client\n\n.. code-block:: python\n\n\tpython client.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/abh1nav/ezrpc/", "keywords": null, "license": "Apache 2.0 License", "maintainer": null, "maintainer_email": null, "name": "ezrpc", "package_url": "https://pypi.org/project/ezrpc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ezrpc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/abh1nav/ezrpc/"}, "release_url": "https://pypi.org/project/ezrpc/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Easy to use ZeroMQ based RPC library", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ezrpc\">\n<h2>ezrpc</h2>\n<p>Easy to use ZeroMQ based RPC library.</p>\n<a href=\"https://pypi.python.org/pypi/ezrpc\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/ezrpc/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16b16d5859a5875f7f45cfccd36b6d7ec4168e43/68747470733a2f2f70797069702e696e2f762f657a7270632f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/ezrpc\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/ezrpc/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/244a38d7f3060dfc3368783ebb5938edf005bd52/68747470733a2f2f70797069702e696e2f642f657a7270632f62616467652e706e67\"></a>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install ezrpc\n</pre>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<div id=\"step-1\">\n<h3>Step 1</h3>\n<p>Create a Server</p>\n<pre><span class=\"c1\"># server.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ezrpc</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span>\n\n<span class=\"c1\"># By default, the server binds to all available interfaces</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">,</span> <span class=\"n\">client_port</span><span class=\"o\">=</span><span class=\"mi\">5001</span><span class=\"p\">)</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<p>Run this with:</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre>\n</div>\n<div id=\"step-2\">\n<h3>Step 2</h3>\n<p>Create a Worker</p>\n<pre><span class=\"c1\"># worker.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ezrpc</span> <span class=\"kn\">import</span> <span class=\"n\">Registry</span><span class=\"p\">,</span> <span class=\"n\">ServerWorker</span>\n<span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"n\">Registry</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@registry</span><span class=\"o\">.</span><span class=\"n\">method</span>\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"nd\">@registry</span><span class=\"o\">.</span><span class=\"n\">method</span>\n<span class=\"k\">def</span> <span class=\"nf\">multiply</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n\n<span class=\"c1\"># Point the worker to the Server's IP</span>\n<span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">ServerWorker</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">registry</span><span class=\"p\">,</span> <span class=\"s2\">\"tcp://127.0.0.1:5000\"</span><span class=\"p\">)</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>Run as many workers as your server can handle:</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">worker1</span>\n<span class=\"n\">python</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">worker2</span>\n<span class=\"n\">python</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">worker3</span>\n</pre>\n<p>Workers are elastic, i.e. you can start and stop them at will and clients will continue to be served.</p>\n</div>\n<div id=\"step-3\">\n<h3>Step 3</h3>\n<p>Create a Client</p>\n<pre><span class=\"c1\"># client.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ezrpc</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Point the client to the Server's IP</span>\n<span class=\"c1\"># timeout (millis) is optional, default is 5 seconds</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'tcp://127.0.0.1:5001'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">):</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"s1\">'add'</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span> <span class=\"s1\">'Response: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span>\n\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">_disconnect</span><span class=\"p\">()</span>\n</pre>\n<p>Run the client</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 924295, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0c44859a00aab79b77f383e64edd63c0", "sha256": "4b05d7f974578f78c1ca12017a301d54849d1874d3f3570c0b81dccf54793c8d"}, "downloads": -1, "filename": "ezrpc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0c44859a00aab79b77f383e64edd63c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4011, "upload_time": "2013-11-20T05:17:13", "upload_time_iso_8601": "2013-11-20T05:17:13.032400Z", "url": "https://files.pythonhosted.org/packages/c9/b7/aa50dbf1a969670077eb7b87a54ecf778b0fb59a6277af231fd203eda8e7/ezrpc-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c44859a00aab79b77f383e64edd63c0", "sha256": "4b05d7f974578f78c1ca12017a301d54849d1874d3f3570c0b81dccf54793c8d"}, "downloads": -1, "filename": "ezrpc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0c44859a00aab79b77f383e64edd63c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4011, "upload_time": "2013-11-20T05:17:13", "upload_time_iso_8601": "2013-11-20T05:17:13.032400Z", "url": "https://files.pythonhosted.org/packages/c9/b7/aa50dbf1a969670077eb7b87a54ecf778b0fb59a6277af231fd203eda8e7/ezrpc-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:20 2020"}