{"info": {"author": "Christian Stigen Larsen", "author_email": "csl@csl.name", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "arv \u2014 a fast 23andMe parser for Python\n======================================\n|travis-status| |versions| |license| |pypi|\n\nArv (Norwegian; \"heritage\" or \"inheritance\") is a Python module for parsing raw\n23andMe genome files. It lets you lookup SNPs from RSIDs.\n\n.. code:: python\n\n  from arv import load, unphased_match as match\n\n  genome = load(\"genome.txt\")\n\n  print(\"You are a {gender} with {color} eyes and {complexion} skin.\".format(\n    gender     = \"man\" if genome.y_chromosome else \"woman\",\n    complexion = \"light\" if genome[\"rs1426654\"] == \"AA\" else \"dark\",\n    color      = match(genome[\"rs12913832\"], {\"AA\": \"brown\",\n                                              \"AG\": \"brown or green\",\n                                              \"GG\": \"blue\"})))\n\nFor my genome, this little program produces::\n\n    You are a man with blue eyes and light skin.\n\nThe parser is insanely fast, having been written in finely tuned C++, exposed\nvia Cython. A 2013 Xeon machine I've tested on parses a 24 Mb file into a hash\ntable in about 78 ms. The newer 23andMe files are smaller, and parses in a mere\n62 ms!\n\nWorks with Python 2.7+ and 3+. Installable with pip!\n\n.. code:: bash\n\n    $ pip install --upgrade arv\n\nSee below for software requirements.\n\nImportant disclaimer\n====================\n\nIt's very important to tell you that I, the author of arv, am merely a\n*hobbyist*! I *am* a professional software developer, but *not* a geneticist,\nbiologist, medical doctor or anything like that.\n\nBecause of that, this software may not only look weird to people in the field,\nit may also contain serious errors. If you find any problem whatsoever, please\nsubmit a GitHub issue.\n\nThis a slightly modified version of what I wrote for the original software\ncalled \"dna-traits\", and the same goes for this software:\n\nIn addition to the GPL v3 licensing terms, and given that this code deals with\nhealth-related issues, I want to stress that the provided code most likely\ncontains errors, or invalid genome reports. Results from this code must be\ninterpreted as HIGHLY SPECULATIVE and may even be downright INCORRECT. Always\nconsult an expert (medical doctor, geneticist, etc.) for guidance. I take NO\nRESPONSIBILITY whatsoever for any consequences of using this code, including\nbut not limited to loss of life, money, spouses, self-esteem and so on. Use at\nYOUR OWN RISK.\n\nThe indended use is for casual, educational purposes. If this code is used for\nresearch purposes, please cross-check key results with other software: The\nparser code may contain serious errors, for example.\n\nAn interesting story about the research part: I once released a pretty good\nMersenne Twister PRNG for C++ that ended up being used in research. Turned out\nthe engine had bugs, and by the time I had fixed them, a poor researcher had\nalready produced results with it (hopefully not published; I don't know). The\nguy had to go back and fix his stuff, and I felt terribly bad about it.\n\nSo beware!\n\nInstallation\n============\n\nThe recommended way is to install from PyPi.\n\n.. code:: bash\n\n    $ pip install arv\n\nThis will most likely build Arv from source. The package will automatically\ninstall Cython, but it doesn't check if you have a C++11 compiler. Furthermore,\nit passes some additional compilation flags that are specific to clang/gcc.\n\nIf you have problems running ``pip install arv``, please open an issue on\nGitHub with as much detail as possible (``g++/clang++ --version``, ``uname\n-a``, ``python --version`` and so on).\n\nIf you set the environment variable ``ARV_DEBUG``, it will build with full\nwarnings and debug symbols.\n\nYou can also install it locally through ``setup.py``. The following builds and\ntests, but does not install, arv:\n\n.. code:: bash\n\n    $ python setup.py test\n\nIf you set the environment variable ``ARV_BENCHMARK`` to a genome filename and\nrun the tests, it will perform a short benchmark, reporting the best parsing\ntime on it. You can also set ``ARV_BENCHMARK_COUNT=<number>`` to change how\nmany times it should parse the given file.\n\nUsage\n=====\n\nFirst you need to dump the raw genome file from 23andMe. You'll find it under\nthe raw genome browser, and download the file. You may have to unzip it first:\nThe parser works on the pure text files.\n\nThen you load the genome in Python with\n\n.. code:: python\n\n    >>> genome = arv.load(\"filename.txt\")\n    >>> genome\n    <Genome: SNPs=960613, name='filename.txt'>\n\nTo see if there are any Y-chromosomes present in the genome,\n\n.. code:: python\n\n    >>> genome.y_chromosome\n    True\n\nThe genome provides a ``dict``-like interface. To get a given SNP, just enter the RSID.\n\n.. code:: python\n\n    >>> genome[\"rs123\"]\n    >>> snp\n    <SNP: chromosome=7 position=24966446 genotype='AA'>\n    >>> snp.chromosome\n    7\n    >>> snp.position\n    24966446\n    >>> snp.genotype\n    <Genotype 'AA'>\n\nThe ``Genotype`` object can be converted to a string with ``str``, but it also\nallows rich comparisons with strings directly:\n\n.. code:: python\n\n    >>> snp.genotype == \"AA\"\n    True\n\nyou can get its complement with the ``~``-operator.\n\n.. code:: python\n\n    >>> type(snp.genotype)\n    <class '_arv.Genotype'>\n    >>> ~snp.genotype\n    <Genotype 'TT'>\n\nThe complement is important due to eah SNPs orientation. All of 23andMe SNPs\nare oriented towards the positive (\"plus\") strand, based on the `GRCh37\n<https://www.ncbi.nlm.nih.gov/grc/human>`_ reference human genome assembly\nbuild. But some SNPs on SNPedia are given with the `minus orientation\n<http://snpedia.com/index.php/Orientation>`_.\n\nFor example, to determine if the human in question is likely lactose tolerant\nor not, we can look at `rs4988235 <http://snpedia.com/index.php/Rs4988235>`_.\nSNPedia reports its *Stabilized* orientation to be minus, so we need to use the\ncomplement:\n\n.. code:: python\n\n    >>> genome[\"rs4988235\"].genotype\n    <Genotype 'AA'>\n    >>> ~genome[\"rs4988235\"].genotype\n    <Genotype 'TT'>\n\nBy reading a few `GWAS\n<https://en.wikipedia.org/wiki/Genome-wide_association_study>`_ research\npapers, we can build a rule to determine a human's likelihood for lactose\ntolerance:\n\n.. code:: python\n\n    >>> arv.unphased_match(~genome[\"rs4988235\"].genotype, {\n        \"TT\": \"Likely lactose tolerant\",\n        \"TC\": \"Likely lactose tolerant\",\n        \"CC\": \"Likely lactose intolerant\",\n        None: \"Unable to determine (genotype not present)\"})\n    'Likely lactose tolerant'\n\nNote that reading GWAS papers for hobbyists can be a bit tricky. If you are a\nhobbyist, be sure to spend some time reading the paper closely, checking up\nSNPs on places like `SNPedia <http://snpedia.com>`_, `dnSNP\n<https://www.ncbi.nlm.nih.gov/projects/SNP/>`_ and `OpenSNP\n<https://opensnp.org/genotypes>`_. Finally, have fun, but be extremely careful\nabout drawing conclusions from your results.\n\nCommand line interface\n======================\n\nYou can also invoke ``arv`` from the command line:\n\n.. code:: bash\n\n\t\t$ python -m arv --help\n\nFor example, you can drop into a Python REPL like so:\n\n.. code:: bash\n\n\t\t$ python -m arv --repl genome.txt\n\t\tgenome.txt ... 960614 SNPs, male\n\t\tType `genome` to see the parsed 23andMe raw genome file\n\t\t>>> genome\n\t\t<Genome: SNPs=960614, name='genome.txt'>\n\t\t>>> genome[\"rs123\"]\n\t\t<SNP: chromosome=7 position=24966446 genotype=<Genotype 'AA'>>\n\nIf you specify several files, you can access them through the variable\n``genomes``.\n\nThe example at the top of this document can be run with ``--example``:\n\n.. code:: bash\n\n\t\t$ python -m arv --example genome.txt\n\t\tgenome.txt ... 960614 SNPs, male\n\n\t\tgenome.txt ... A man with blue eyes and light\u00a0skin\n\nLicense\n=======\n\nCopyright 2017 Christian Stigen Larsen\n\nDistributed under the GNU GPL v3 or later. See the file COPYING for the full\nlicense text. This software makes use of open source software; see LICENSES for\ndetails.\n\n.. |travis-status| image:: https://travis-ci.org/cslarsen/arv.svg?branch=master\n    :alt: Travis build status\n    :scale: 100%\n    :target: https://travis-ci.org/cslarsen/arv\n\n.. |license| image:: https://img.shields.io/badge/license-GPL%20v3%2B-blue.svg\n    :target: http://www.gnu.org/licenses/old-licenses/gpl-3.en.html\n    :alt: Project License\n\n.. |versions| image:: https://img.shields.io/badge/python-2%2B%2C%203%2B-blue.svg\n    :target: https://pypi.python.org/pypi/arv/\n    :alt: Supported Python versions\n\n.. |pypi| image:: https://badge.fury.io/py/arv.svg\n    :target: https://badge.fury.io/py/arv", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cslarsen/arv", "keywords": "23andMe,bio,biology,biopython,disease,DNA,gene,genome,health,protein,RNA,RSID,SNP", "license": "https://www.gnu.org/licenses/gpl-3.0.html", "maintainer": "", "maintainer_email": "", "name": "arv", "package_url": "https://pypi.org/project/arv/", "platform": "unix,linux,osx", "project_url": "https://pypi.org/project/arv/", "project_urls": {"Homepage": "https://github.com/cslarsen/arv"}, "release_url": "https://pypi.org/project/arv/0.9.2/", "requires_dist": ["cython (>=0.25)"], "requires_python": "", "summary": "A fast 23andMe raw genome file parser", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"arv-a-fast-23andme-parser-for-python\">\n<h2>arv \u2014 a fast 23andMe parser for Python</h2>\n<p><a href=\"https://travis-ci.org/cslarsen/arv\" rel=\"nofollow\"><img alt=\"Travis build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3749f2242b0243faa0557ac89cf3c9e48de43fbc/68747470733a2f2f7472617669732d63692e6f72672f63736c617273656e2f6172762e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/arv/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a96ed0812b3fc43b962b3918c93b4890d3b3b17/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d32253242253243253230332532422d626c75652e737667\"></a> <a href=\"http://www.gnu.org/licenses/old-licenses/gpl-3.en.html\" rel=\"nofollow\"><img alt=\"Project License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/345611ee13ae36aae65f394570b2358c724c46a1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c25323076332532422d626c75652e737667\"></a> <a href=\"https://badge.fury.io/py/arv\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25dc18acaa800ecf9eba1398d768e31b4aa29298/68747470733a2f2f62616467652e667572792e696f2f70792f6172762e737667\"></a></p>\n<p>Arv (Norwegian; \u201cheritage\u201d or \u201cinheritance\u201d) is a Python module for parsing raw\n23andMe genome files. It lets you lookup SNPs from RSIDs.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">arv</span> <span class=\"kn\">import</span> <span class=\"n\">load</span><span class=\"p\">,</span> <span class=\"n\">unphased_match</span> <span class=\"k\">as</span> <span class=\"n\">match</span>\n\n<span class=\"n\">genome</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"genome.txt\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You are a </span><span class=\"si\">{gender}</span><span class=\"s2\"> with </span><span class=\"si\">{color}</span><span class=\"s2\"> eyes and </span><span class=\"si\">{complexion}</span><span class=\"s2\"> skin.\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n  <span class=\"n\">gender</span>     <span class=\"o\">=</span> <span class=\"s2\">\"man\"</span> <span class=\"k\">if</span> <span class=\"n\">genome</span><span class=\"o\">.</span><span class=\"n\">y_chromosome</span> <span class=\"k\">else</span> <span class=\"s2\">\"woman\"</span><span class=\"p\">,</span>\n  <span class=\"n\">complexion</span> <span class=\"o\">=</span> <span class=\"s2\">\"light\"</span> <span class=\"k\">if</span> <span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"rs1426654\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"AA\"</span> <span class=\"k\">else</span> <span class=\"s2\">\"dark\"</span><span class=\"p\">,</span>\n  <span class=\"n\">color</span>      <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"rs12913832\"</span><span class=\"p\">],</span> <span class=\"p\">{</span><span class=\"s2\">\"AA\"</span><span class=\"p\">:</span> <span class=\"s2\">\"brown\"</span><span class=\"p\">,</span>\n                                            <span class=\"s2\">\"AG\"</span><span class=\"p\">:</span> <span class=\"s2\">\"brown or green\"</span><span class=\"p\">,</span>\n                                            <span class=\"s2\">\"GG\"</span><span class=\"p\">:</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">})))</span>\n</pre>\n<p>For my genome, this little program produces:</p>\n<pre>You are a man with blue eyes and light skin.\n</pre>\n<p>The parser is insanely fast, having been written in finely tuned C++, exposed\nvia Cython. A 2013 Xeon machine I\u2019ve tested on parses a 24 Mb file into a hash\ntable in about 78 ms. The newer 23andMe files are smaller, and parses in a mere\n62 ms!</p>\n<p>Works with Python 2.7+ and 3+. Installable with pip!</p>\n<pre>$ pip install --upgrade arv\n</pre>\n<p>See below for software requirements.</p>\n</div>\n<div id=\"important-disclaimer\">\n<h2>Important disclaimer</h2>\n<p>It\u2019s very important to tell you that I, the author of arv, am merely a\n<em>hobbyist</em>! I <em>am</em> a professional software developer, but <em>not</em> a geneticist,\nbiologist, medical doctor or anything like that.</p>\n<p>Because of that, this software may not only look weird to people in the field,\nit may also contain serious errors. If you find any problem whatsoever, please\nsubmit a GitHub issue.</p>\n<p>This a slightly modified version of what I wrote for the original software\ncalled \u201cdna-traits\u201d, and the same goes for this software:</p>\n<p>In addition to the GPL v3 licensing terms, and given that this code deals with\nhealth-related issues, I want to stress that the provided code most likely\ncontains errors, or invalid genome reports. Results from this code must be\ninterpreted as HIGHLY SPECULATIVE and may even be downright INCORRECT. Always\nconsult an expert (medical doctor, geneticist, etc.) for guidance. I take NO\nRESPONSIBILITY whatsoever for any consequences of using this code, including\nbut not limited to loss of life, money, spouses, self-esteem and so on. Use at\nYOUR OWN RISK.</p>\n<p>The indended use is for casual, educational purposes. If this code is used for\nresearch purposes, please cross-check key results with other software: The\nparser code may contain serious errors, for example.</p>\n<p>An interesting story about the research part: I once released a pretty good\nMersenne Twister PRNG for C++ that ended up being used in research. Turned out\nthe engine had bugs, and by the time I had fixed them, a poor researcher had\nalready produced results with it (hopefully not published; I don\u2019t know). The\nguy had to go back and fix his stuff, and I felt terribly bad about it.</p>\n<p>So beware!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The recommended way is to install from PyPi.</p>\n<pre>$ pip install arv\n</pre>\n<p>This will most likely build Arv from source. The package will automatically\ninstall Cython, but it doesn\u2019t check if you have a C++11 compiler. Furthermore,\nit passes some additional compilation flags that are specific to clang/gcc.</p>\n<p>If you have problems running <tt>pip install arv</tt>, please open an issue on\nGitHub with as much detail as possible (<tt><span class=\"pre\">g++/clang++</span> <span class=\"pre\">--version</span></tt>, <tt>uname\n<span class=\"pre\">-a</span></tt>, <tt>python <span class=\"pre\">--version</span></tt> and so on).</p>\n<p>If you set the environment variable <tt>ARV_DEBUG</tt>, it will build with full\nwarnings and debug symbols.</p>\n<p>You can also install it locally through <tt>setup.py</tt>. The following builds and\ntests, but does not install, arv:</p>\n<pre>$ python setup.py <span class=\"nb\">test</span>\n</pre>\n<p>If you set the environment variable <tt>ARV_BENCHMARK</tt> to a genome filename and\nrun the tests, it will perform a short benchmark, reporting the best parsing\ntime on it. You can also set <tt><span class=\"pre\">ARV_BENCHMARK_COUNT=&lt;number&gt;</span></tt> to change how\nmany times it should parse the given file.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First you need to dump the raw genome file from 23andMe. You\u2019ll find it under\nthe raw genome browser, and download the file. You may have to unzip it first:\nThe parser works on the pure text files.</p>\n<p>Then you load the genome in Python with</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genome</span> <span class=\"o\">=</span> <span class=\"n\">arv</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"filename.txt\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genome</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Genome</span><span class=\"p\">:</span> <span class=\"n\">SNPs</span><span class=\"o\">=</span><span class=\"mi\">960613</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'filename.txt'</span><span class=\"o\">&gt;</span>\n</pre>\n<p>To see if there are any Y-chromosomes present in the genome,</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genome</span><span class=\"o\">.</span><span class=\"n\">y_chromosome</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>The genome provides a <tt>dict</tt>-like interface. To get a given SNP, just enter the RSID.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"rs123\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snp</span>\n<span class=\"o\">&lt;</span><span class=\"n\">SNP</span><span class=\"p\">:</span> <span class=\"n\">chromosome</span><span class=\"o\">=</span><span class=\"mi\">7</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"mi\">24966446</span> <span class=\"n\">genotype</span><span class=\"o\">=</span><span class=\"s1\">'AA'</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snp</span><span class=\"o\">.</span><span class=\"n\">chromosome</span>\n<span class=\"mi\">7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snp</span><span class=\"o\">.</span><span class=\"n\">position</span>\n<span class=\"mi\">24966446</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snp</span><span class=\"o\">.</span><span class=\"n\">genotype</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Genotype</span> <span class=\"s1\">'AA'</span><span class=\"o\">&gt;</span>\n</pre>\n<p>The <tt>Genotype</tt> object can be converted to a string with <tt>str</tt>, but it also\nallows rich comparisons with strings directly:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snp</span><span class=\"o\">.</span><span class=\"n\">genotype</span> <span class=\"o\">==</span> <span class=\"s2\">\"AA\"</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>you can get its complement with the <tt>~</tt>-operator.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">snp</span><span class=\"o\">.</span><span class=\"n\">genotype</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">_arv</span><span class=\"o\">.</span><span class=\"n\">Genotype</span><span class=\"s1\">'&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">~</span><span class=\"n\">snp</span><span class=\"o\">.</span><span class=\"n\">genotype</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Genotype</span> <span class=\"s1\">'TT'</span><span class=\"o\">&gt;</span>\n</pre>\n<p>The complement is important due to eah SNPs orientation. All of 23andMe SNPs\nare oriented towards the positive (\u201cplus\u201d) strand, based on the <a href=\"https://www.ncbi.nlm.nih.gov/grc/human\" rel=\"nofollow\">GRCh37</a> reference human genome assembly\nbuild. But some SNPs on SNPedia are given with the <a href=\"http://snpedia.com/index.php/Orientation\" rel=\"nofollow\">minus orientation</a>.</p>\n<p>For example, to determine if the human in question is likely lactose tolerant\nor not, we can look at <a href=\"http://snpedia.com/index.php/Rs4988235\" rel=\"nofollow\">rs4988235</a>.\nSNPedia reports its <em>Stabilized</em> orientation to be minus, so we need to use the\ncomplement:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"rs4988235\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">genotype</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Genotype</span> <span class=\"s1\">'AA'</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">~</span><span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"rs4988235\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">genotype</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Genotype</span> <span class=\"s1\">'TT'</span><span class=\"o\">&gt;</span>\n</pre>\n<p>By reading a few <a href=\"https://en.wikipedia.org/wiki/Genome-wide_association_study\" rel=\"nofollow\">GWAS</a> research\npapers, we can build a rule to determine a human\u2019s likelihood for lactose\ntolerance:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arv</span><span class=\"o\">.</span><span class=\"n\">unphased_match</span><span class=\"p\">(</span><span class=\"o\">~</span><span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"rs4988235\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">genotype</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"TT\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Likely lactose tolerant\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"TC\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Likely lactose tolerant\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"CC\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Likely lactose intolerant\"</span><span class=\"p\">,</span>\n    <span class=\"kc\">None</span><span class=\"p\">:</span> <span class=\"s2\">\"Unable to determine (genotype not present)\"</span><span class=\"p\">})</span>\n<span class=\"s1\">'Likely lactose tolerant'</span>\n</pre>\n<p>Note that reading GWAS papers for hobbyists can be a bit tricky. If you are a\nhobbyist, be sure to spend some time reading the paper closely, checking up\nSNPs on places like <a href=\"http://snpedia.com\" rel=\"nofollow\">SNPedia</a>, <a href=\"https://www.ncbi.nlm.nih.gov/projects/SNP/\" rel=\"nofollow\">dnSNP</a> and <a href=\"https://opensnp.org/genotypes\" rel=\"nofollow\">OpenSNP</a>. Finally, have fun, but be extremely careful\nabout drawing conclusions from your results.</p>\n</div>\n<div id=\"command-line-interface\">\n<h2>Command line interface</h2>\n<p>You can also invoke <tt>arv</tt> from the command line:</p>\n<pre>$ python -m arv --help\n</pre>\n<p>For example, you can drop into a Python REPL like so:</p>\n<pre>$ python -m arv --repl genome.txt\ngenome.txt ... <span class=\"m\">960614</span> SNPs, male\nType <span class=\"sb\">`</span>genome<span class=\"sb\">`</span> to see the parsed 23andMe raw genome file\n&gt;&gt;&gt; genome\n&lt;Genome: <span class=\"nv\">SNPs</span><span class=\"o\">=</span><span class=\"m\">960614</span>, <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s1\">'genome.txt'</span>&gt;\n&gt;&gt;&gt; genome<span class=\"o\">[</span><span class=\"s2\">\"rs123\"</span><span class=\"o\">]</span>\n&lt;SNP: <span class=\"nv\">chromosome</span><span class=\"o\">=</span><span class=\"m\">7</span> <span class=\"nv\">position</span><span class=\"o\">=</span><span class=\"m\">24966446</span> <span class=\"nv\">genotype</span><span class=\"o\">=</span>&lt;Genotype <span class=\"s1\">'AA'</span>&gt;&gt;\n</pre>\n<p>If you specify several files, you can access them through the variable\n<tt>genomes</tt>.</p>\n<p>The example at the top of this document can be run with <tt><span class=\"pre\">--example</span></tt>:</p>\n<pre>$ python -m arv --example genome.txt\ngenome.txt ... <span class=\"m\">960614</span> SNPs, male\n\ngenome.txt ... A man with blue eyes and light\u00a0skin\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2017 Christian Stigen Larsen</p>\n<p>Distributed under the GNU GPL v3 or later. See the file COPYING for the full\nlicense text. This software makes use of open source software; see LICENSES for\ndetails.</p>\n</div>\n\n          </div>"}, "last_serial": 2739230, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "97a492d99763e28a85342b9e3cbef8b6", "sha256": "52a3ce894f552d52dd990f3b75cb880de8cf20291a44547cc245c378e003d229"}, "downloads": -1, "filename": "arv-0.1-cp27-cp27m-macosx_10_12_x86_64.whl", "has_sig": true, "md5_digest": "97a492d99763e28a85342b9e3cbef8b6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 42854, "upload_time": "2017-03-18T22:38:16", "upload_time_iso_8601": "2017-03-18T22:38:16.047283Z", "url": "https://files.pythonhosted.org/packages/79/cb/d0a432e6bee84946f2a99c6e1c18757519d9a29a8a93e5cec5a4c6ec0b13/arv-0.1-cp27-cp27m-macosx_10_12_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55ca1f640a0d64a08241d57c8cd548ff", "sha256": "3c24d882dad79a0690f69f7bde6e09808616a88d688d0b167bddf2443b0392d7"}, "downloads": -1, "filename": "arv-0.1.tar.gz", "has_sig": false, "md5_digest": "55ca1f640a0d64a08241d57c8cd548ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 239840, "upload_time": "2017-03-18T19:25:13", "upload_time_iso_8601": "2017-03-18T19:25:13.991543Z", "url": "https://files.pythonhosted.org/packages/28/bf/8f39399e129e77e88084cd6553ed5b02132404fa5aa7953ec357cd53824c/arv-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "df1f91e712143e29d40b077b87695df7", "sha256": "43eaa8c3ffda637c2c45185e2be009dc547a4d86df7d62e786b02150015b2d36"}, "downloads": -1, "filename": "arv-0.2-cp27-cp27m-macosx_10_12_x86_64.whl", "has_sig": true, "md5_digest": "df1f91e712143e29d40b077b87695df7", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 42852, "upload_time": "2017-03-18T22:39:45", "upload_time_iso_8601": "2017-03-18T22:39:45.861555Z", "url": "https://files.pythonhosted.org/packages/d1/d1/be5f1eb8ad00dbf7128d7c698fe2c3d3aac06329d6d2564fa33fac4d81cb/arv-0.2-cp27-cp27m-macosx_10_12_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3cb3fe5b48e4f185b2e6f010861d8d5", "sha256": "0b849c4d1edf13695ca6bd6228f8c2710f66f04375f7c783b565184b34cd0b25"}, "downloads": -1, "filename": "arv-0.2.tar.gz", "has_sig": true, "md5_digest": "f3cb3fe5b48e4f185b2e6f010861d8d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 239321, "upload_time": "2017-03-18T22:39:48", "upload_time_iso_8601": "2017-03-18T22:39:48.525009Z", "url": "https://files.pythonhosted.org/packages/c1/48/5c084fc21937e4cde5752d10c4b4e123e6a24df37c4acf8cce4dabf00258/arv-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "419a81c2167b28529e199c9c9f6c360f", "sha256": "b3215b19f9cdccd629bfaa34b3c3d4909350155523596026909176466ffbeaef"}, "downloads": -1, "filename": "arv-0.3-cp27-cp27m-macosx_10_12_x86_64.whl", "has_sig": true, "md5_digest": "419a81c2167b28529e199c9c9f6c360f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 46962, "upload_time": "2017-03-19T13:59:15", "upload_time_iso_8601": "2017-03-19T13:59:15.163839Z", "url": "https://files.pythonhosted.org/packages/85/fc/ef4dda5805f022dd0766af26ebb943a8671283f3e5ce1119dff6d45200c0/arv-0.3-cp27-cp27m-macosx_10_12_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebd4333cd8bd36d3763dbac2951ca892", "sha256": "40af0f415df5ee85267f80a07b9750b427a32b31937e0b7f29b80532c98a14c5"}, "downloads": -1, "filename": "arv-0.3.tar.gz", "has_sig": true, "md5_digest": "ebd4333cd8bd36d3763dbac2951ca892", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 243584, "upload_time": "2017-03-19T13:59:17", "upload_time_iso_8601": "2017-03-19T13:59:17.622195Z", "url": "https://files.pythonhosted.org/packages/d2/f2/c62af9993167d6dcea891d55f368f70455ec0bb99137ee3cb1e144cd50e4/arv-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "7384d715a6e20654c8f5255b5ebe6d53", "sha256": "d95f4f72c815376124abf42d2bbdcc4b5d77c6a94c73d184cacfc613e5254b67"}, "downloads": -1, "filename": "arv-0.4-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "7384d715a6e20654c8f5255b5ebe6d53", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 87968, "upload_time": "2017-03-20T22:37:04", "upload_time_iso_8601": "2017-03-20T22:37:04.525753Z", "url": "https://files.pythonhosted.org/packages/82/41/a607266511cfc54d7c07527c81d2a0730b07af7eab1d93accb5ca993f08c/arv-0.4-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3271750ca109b01e689d3d9d2a5932d0", "sha256": "2d6cb7d7578b5af3bdcb1191d146a391901eff84a2a6d4457c12132735063fcc"}, "downloads": -1, "filename": "arv-0.4.tar.gz", "has_sig": true, "md5_digest": "3271750ca109b01e689d3d9d2a5932d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 250787, "upload_time": "2017-03-20T22:37:07", "upload_time_iso_8601": "2017-03-20T22:37:07.971706Z", "url": "https://files.pythonhosted.org/packages/e0/ed/4f466615e32e971598cf6cceefaf01c8b3b65c50c3e1fbc2481dde289ac8/arv-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "dadfdd0204254bcfaa2464c6bf79f02c", "sha256": "97286f75a938a7d67cb979633fd1ebdd38764f25cb7df469d168df377c9c2148"}, "downloads": -1, "filename": "arv-0.5-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "dadfdd0204254bcfaa2464c6bf79f02c", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 78744, "upload_time": "2017-03-22T21:03:01", "upload_time_iso_8601": "2017-03-22T21:03:01.536446Z", "url": "https://files.pythonhosted.org/packages/65/0e/997a9d6bc4eaa38b1bf96da00e4907d04fefc3ce74e8664ed6cbe90d3697/arv-0.5-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9977778c27b13d6a3108c524405b6670", "sha256": "6485db9fd4f8061f803e2210e11a70b2d41794d832cfe104850a7ab85b948475"}, "downloads": -1, "filename": "arv-0.5.tar.gz", "has_sig": true, "md5_digest": "9977778c27b13d6a3108c524405b6670", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 252912, "upload_time": "2017-03-22T21:03:05", "upload_time_iso_8601": "2017-03-22T21:03:05.061846Z", "url": "https://files.pythonhosted.org/packages/37/da/f94035a93931c4826d92cb348d6c8267186e2f5e1a12843a7ab25afe2c47/arv-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "3963c60aa42f04c9b3255fdcdcd34f93", "sha256": "8ecfd7a688494bbd008a10cb8d3f8002b871aab416ce9e15ec3f4f6b27206be0"}, "downloads": -1, "filename": "arv-0.6-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "3963c60aa42f04c9b3255fdcdcd34f93", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 90664, "upload_time": "2017-03-26T21:11:23", "upload_time_iso_8601": "2017-03-26T21:11:23.572827Z", "url": "https://files.pythonhosted.org/packages/8b/3c/411121f0b0b76e07dc693603a3c270b3608ee4d30813fefd1c3d7e809cf2/arv-0.6-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d7b5f382be8cdfa89ed8f88b3ae497f", "sha256": "cf238c0d49e096e583b030db9b657e881796b833d39db1ec852081f290e098b7"}, "downloads": -1, "filename": "arv-0.6.tar.gz", "has_sig": true, "md5_digest": "9d7b5f382be8cdfa89ed8f88b3ae497f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 263879, "upload_time": "2017-03-26T21:11:26", "upload_time_iso_8601": "2017-03-26T21:11:26.648504Z", "url": "https://files.pythonhosted.org/packages/b3/85/ab31b736c04773e7ce875239145aaabc24de00de512baf674c6f6b5a12e9/arv-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a7f5056e4c12892d5108f9a787e53ea6", "sha256": "dbe3652b04c29e1722c7bb498f115e3825dee697df587a4311f1f819f08aefcf"}, "downloads": -1, "filename": "arv-0.7-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "a7f5056e4c12892d5108f9a787e53ea6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 90669, "upload_time": "2017-03-26T21:16:47", "upload_time_iso_8601": "2017-03-26T21:16:47.133592Z", "url": "https://files.pythonhosted.org/packages/54/f8/f43e9bb124f4862e39d7510a1456a57e9cb8be843a99effd466a5ee9287c/arv-0.7-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c49a7492be70b395dddc3d440ad38d7", "sha256": "12c5c0b877bf42f2e672bd6f0b94ab6a948d71cb7b86f9204a334c11e788815c"}, "downloads": -1, "filename": "arv-0.7.tar.gz", "has_sig": true, "md5_digest": "8c49a7492be70b395dddc3d440ad38d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 263881, "upload_time": "2017-03-26T21:16:50", "upload_time_iso_8601": "2017-03-26T21:16:50.616575Z", "url": "https://files.pythonhosted.org/packages/cf/48/021558e12082f4fc32ab980a52b569719d440167866aa0ded82c3714bcc1/arv-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "9608c546a3bd7f0bc7155063566a44cd", "sha256": "377cc24d06aa83dcd98775ab04afcf8230b206badcca0169d33755e6b9e3cbd2"}, "downloads": -1, "filename": "arv-0.8-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "9608c546a3bd7f0bc7155063566a44cd", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 90672, "upload_time": "2017-03-26T21:23:13", "upload_time_iso_8601": "2017-03-26T21:23:13.144527Z", "url": "https://files.pythonhosted.org/packages/a9/5b/efef04f913f5de9c7d612f80e702b03982dba0c38c665fa237247aaf5e18/arv-0.8-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "399a0b78e34fc88311aa48b508977925", "sha256": "68b8ca757d93948d916d9da9079fa566b7d67febb7f97b7e350d95a4d16feab6"}, "downloads": -1, "filename": "arv-0.8.tar.gz", "has_sig": true, "md5_digest": "399a0b78e34fc88311aa48b508977925", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 263891, "upload_time": "2017-03-26T21:23:16", "upload_time_iso_8601": "2017-03-26T21:23:16.853521Z", "url": "https://files.pythonhosted.org/packages/89/13/53bc0c6ed04333128a2a85f910fed8a0e65505fb89d181ff41571161c452/arv-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "44e0524f68634aa1b4160931bbf5eac9", "sha256": "1fd9d719c886402b6addc302cf272cbac502ad75f63eb40fb9b1edf6fe22cfab"}, "downloads": -1, "filename": "arv-0.9-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "44e0524f68634aa1b4160931bbf5eac9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 90717, "upload_time": "2017-03-28T08:24:23", "upload_time_iso_8601": "2017-03-28T08:24:23.527718Z", "url": "https://files.pythonhosted.org/packages/d9/4a/0f9909c577bb6d493ad082a187bc37820385cf0f4b94ae745d54dc5f1604/arv-0.9-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "185fa078226d297d48d5e20ffbc46dc7", "sha256": "d400184df756e43f5bb9e76378d467da60332a5256aa8d963a7710ae38b6a075"}, "downloads": -1, "filename": "arv-0.9.tar.gz", "has_sig": true, "md5_digest": "185fa078226d297d48d5e20ffbc46dc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 263939, "upload_time": "2017-03-28T08:24:27", "upload_time_iso_8601": "2017-03-28T08:24:27.283023Z", "url": "https://files.pythonhosted.org/packages/ce/90/aa9cb9012bf7fc3671ccad13625521ddd73e53b355ab216c5e1ad40eaa9c/arv-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "ae03643bce85b984a3b9399d96c5ec42", "sha256": "d2217821ff98165e693352534037c5d233acc31c764bd7ee36a3c38e348ade15"}, "downloads": -1, "filename": "arv-0.9.1-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "ae03643bce85b984a3b9399d96c5ec42", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 92974, "upload_time": "2017-03-29T16:37:00", "upload_time_iso_8601": "2017-03-29T16:37:00.044902Z", "url": "https://files.pythonhosted.org/packages/98/5c/34d34db646d1caf1f55deadb4b8784dc1ed21e46f20870648eec5a0491de/arv-0.9.1-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "164ba87342457552fb8b7b4685782e9b", "sha256": "a2dc2f7668014286cb9a89de81291cefa26d40730a736852eb1d2ffe1a103ca1"}, "downloads": -1, "filename": "arv-0.9.1.tar.gz", "has_sig": true, "md5_digest": "164ba87342457552fb8b7b4685782e9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 264089, "upload_time": "2017-03-29T16:37:03", "upload_time_iso_8601": "2017-03-29T16:37:03.868928Z", "url": "https://files.pythonhosted.org/packages/d5/19/75a16aade4d435627c8bfa78193eb14bdfe7c8aec3529de79a762c8f48cf/arv-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "a2c98152aa06f6900c72f8f29c807668", "sha256": "c44aaef6d06584a378d353b6408c10adba17331c7eb26e9790c3c37bceb4f041"}, "downloads": -1, "filename": "arv-0.9.2-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "a2c98152aa06f6900c72f8f29c807668", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 92988, "upload_time": "2017-03-29T16:47:01", "upload_time_iso_8601": "2017-03-29T16:47:01.655629Z", "url": "https://files.pythonhosted.org/packages/bc/09/e5e0750e2c608003861780d4807726937bdfca6bc5ab1ea04532cbef8dd8/arv-0.9.2-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fc097509e53e4cf5928891cf159a611", "sha256": "7cda7fbc1175e0e8bd19b3d4be4208cbfb72f7c554c51ac41f46ce7b51ee40f9"}, "downloads": -1, "filename": "arv-0.9.2.tar.gz", "has_sig": true, "md5_digest": "4fc097509e53e4cf5928891cf159a611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 264111, "upload_time": "2017-03-29T16:47:04", "upload_time_iso_8601": "2017-03-29T16:47:04.808639Z", "url": "https://files.pythonhosted.org/packages/c2/6a/7198d7adcb9e5f90080c5f2e0bd9dced045f174dd809267b626278995b67/arv-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a2c98152aa06f6900c72f8f29c807668", "sha256": "c44aaef6d06584a378d353b6408c10adba17331c7eb26e9790c3c37bceb4f041"}, "downloads": -1, "filename": "arv-0.9.2-cp27-none-macosx_10_12_intel.whl", "has_sig": true, "md5_digest": "a2c98152aa06f6900c72f8f29c807668", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 92988, "upload_time": "2017-03-29T16:47:01", "upload_time_iso_8601": "2017-03-29T16:47:01.655629Z", "url": "https://files.pythonhosted.org/packages/bc/09/e5e0750e2c608003861780d4807726937bdfca6bc5ab1ea04532cbef8dd8/arv-0.9.2-cp27-none-macosx_10_12_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fc097509e53e4cf5928891cf159a611", "sha256": "7cda7fbc1175e0e8bd19b3d4be4208cbfb72f7c554c51ac41f46ce7b51ee40f9"}, "downloads": -1, "filename": "arv-0.9.2.tar.gz", "has_sig": true, "md5_digest": "4fc097509e53e4cf5928891cf159a611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 264111, "upload_time": "2017-03-29T16:47:04", "upload_time_iso_8601": "2017-03-29T16:47:04.808639Z", "url": "https://files.pythonhosted.org/packages/c2/6a/7198d7adcb9e5f90080c5f2e0bd9dced045f174dd809267b626278995b67/arv-0.9.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:06 2020"}