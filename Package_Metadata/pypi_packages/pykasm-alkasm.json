{"info": {"author": "Alexander Reynolds", "author_email": "ar@reynoldsalexander.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pykasm\n\nA collection of useful utilities and utility libraries for my projects.\n\n## Install\n\n```sh\npip install pykasm-alkasm\n```\n\n## Usage\n\n### `TimeoutIterable`\n\nA timeout will not help with indefinite blocking. Concurrent futures will\nattempt to cancel the pull on the generator, if possible.\n\n```python\nfrom pykasm import TimeoutIterable\nfrom time import sleep\n\ndef tired_generator(n):\n    for seconds in range(1, n+1):\n        sleep(seconds)\n        yield f\"slept for {seconds} second(s)\"\n\n# will timeout if more than 3 seconds elapse between iterations\nfor v in TimeoutIterable(tired_generator(5), timeout=3.14):\n    print(v)\n```\n\n> ```\n> sleeping for 1 second(s)\n> sleeping for 2 second(s)\n> sleeping for 3 second(s)\n> ```\n\n### `StreamBuffer`\n\nThe stream buffer is not particularly robust. \n* Indefinite blocking will cause the thread to also indefinitely block.\n* Generators that tax the CPU heavily may have a hard time shutting off. \n* Use with caution, and not in production.\n\n```python\nfrom pykasm import StreamBuffer\nfrom itertools import count\nfrom time import sleep\n\n# collect values from infinite generator `count()` over a period of time\nsleep_time = 0.0001\nwith StreamBuffer(count()) as buf:\n    time.sleep(sleep_time)\n    counts = list(buf.flush())\nprint(f\"collected {len(counts)} values in {sleep_time} seconds!\")\n```\n\n> ```\n> collected 13647 values in 0.0001 seconds!\n> ```\n\n### `@timed`\n\nYou'll need to set logging level to `DEBUG` to see the timer messages.\n\n```python\nfrom pykasm import timed\nfrom time import sleep\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n\n@timed\ndef takes_a_second():\n    time.sleep(1)\n\ntakes_a_second()\n```\n\n> ```\n> DEBUG:root:takes_a_second took 1004.352 ms\n> ```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alkasm/pykasm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pykasm-alkasm", "package_url": "https://pypi.org/project/pykasm-alkasm/", "platform": "", "project_url": "https://pypi.org/project/pykasm-alkasm/", "project_urls": {"Homepage": "https://github.com/alkasm/pykasm"}, "release_url": "https://pypi.org/project/pykasm-alkasm/0.1.2/", "requires_dist": ["sortedcontainers", "more-itertools", "tqdm", "timingdiagram-alkasm"], "requires_python": ">=3.6", "summary": "Python extensions by alkasm", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pykasm</h1>\n<p>A collection of useful utilities and utility libraries for my projects.</p>\n<h2>Install</h2>\n<pre>pip install pykasm-alkasm\n</pre>\n<h2>Usage</h2>\n<h3><code>TimeoutIterable</code></h3>\n<p>A timeout will not help with indefinite blocking. Concurrent futures will\nattempt to cancel the pull on the generator, if possible.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pykasm</span> <span class=\"kn\">import</span> <span class=\"n\">TimeoutIterable</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">tired_generator</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">seconds</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n        <span class=\"k\">yield</span> <span class=\"sa\">f</span><span class=\"s2\">\"slept for </span><span class=\"si\">{</span><span class=\"n\">seconds</span><span class=\"si\">}</span><span class=\"s2\"> second(s)\"</span>\n\n<span class=\"c1\"># will timeout if more than 3 seconds elapse between iterations</span>\n<span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">TimeoutIterable</span><span class=\"p\">(</span><span class=\"n\">tired_generator</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">3.14</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<pre><code>sleeping for 1 second(s)\nsleeping for 2 second(s)\nsleeping for 3 second(s)\n</code></pre>\n</blockquote>\n<h3><code>StreamBuffer</code></h3>\n<p>The stream buffer is not particularly robust.</p>\n<ul>\n<li>Indefinite blocking will cause the thread to also indefinitely block.</li>\n<li>Generators that tax the CPU heavily may have a hard time shutting off.</li>\n<li>Use with caution, and not in production.</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pykasm</span> <span class=\"kn\">import</span> <span class=\"n\">StreamBuffer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itertools</span> <span class=\"kn\">import</span> <span class=\"n\">count</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"c1\"># collect values from infinite generator `count()` over a period of time</span>\n<span class=\"n\">sleep_time</span> <span class=\"o\">=</span> <span class=\"mf\">0.0001</span>\n<span class=\"k\">with</span> <span class=\"n\">StreamBuffer</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">())</span> <span class=\"k\">as</span> <span class=\"n\">buf</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">sleep_time</span><span class=\"p\">)</span>\n    <span class=\"n\">counts</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"collected </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">counts</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> values in </span><span class=\"si\">{</span><span class=\"n\">sleep_time</span><span class=\"si\">}</span><span class=\"s2\"> seconds!\"</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<pre><code>collected 13647 values in 0.0001 seconds!\n</code></pre>\n</blockquote>\n<h3><code>@timed</code></h3>\n<p>You'll need to set logging level to <code>DEBUG</code> to see the timer messages.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pykasm</span> <span class=\"kn\">import</span> <span class=\"n\">timed</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@timed</span>\n<span class=\"k\">def</span> <span class=\"nf\">takes_a_second</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">takes_a_second</span><span class=\"p\">()</span>\n</pre>\n<blockquote>\n<pre><code>DEBUG:root:takes_a_second took 1004.352 ms\n</code></pre>\n</blockquote>\n\n          </div>"}, "last_serial": 6492094, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "426ff76248010961e6ebbcc07ea18d26", "sha256": "0f1c34902f9475c703faa5eeab61a062047c932bfc97d9fff4e5143863562877"}, "downloads": -1, "filename": "pykasm_alkasm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "426ff76248010961e6ebbcc07ea18d26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2998, "upload_time": "2020-01-17T10:25:12", "upload_time_iso_8601": "2020-01-17T10:25:12.645623Z", "url": "https://files.pythonhosted.org/packages/14/b4/931c73c0aee13f0c7751753619c452c6fb71a2d920ab36d83d7084cbf9df/pykasm_alkasm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9b896e97e414613d106637a1263f423", "sha256": "488aa5000ff2a9043a90da367f7dadce5218a1a1c28e85417989b8689407975d"}, "downloads": -1, "filename": "pykasm-alkasm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d9b896e97e414613d106637a1263f423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2802, "upload_time": "2020-01-17T10:25:15", "upload_time_iso_8601": "2020-01-17T10:25:15.771470Z", "url": "https://files.pythonhosted.org/packages/85/44/beb80d2bd1be3cef6badc11fab7723eb5c267bc9d4841e130e0cce8a2712/pykasm-alkasm-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9852e41180bcf26e4bbdc0f0c1a5650a", "sha256": "02a3b827e31ff65e495271901008baf1aadd46af620c00c6b2c588994be56548"}, "downloads": -1, "filename": "pykasm_alkasm-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9852e41180bcf26e4bbdc0f0c1a5650a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3005, "upload_time": "2020-01-17T10:36:40", "upload_time_iso_8601": "2020-01-17T10:36:40.590281Z", "url": "https://files.pythonhosted.org/packages/11/2d/a26f51e543473ce03069fc591f434d9bf3314c39964bd2fbaf3088b043bd/pykasm_alkasm-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "525bad2d96c8a118222d73208d5627d1", "sha256": "373744cc2f882c6720d78d86b866fc22e9bb37b0bca00aa4d21736532529e5ff"}, "downloads": -1, "filename": "pykasm-alkasm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "525bad2d96c8a118222d73208d5627d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2811, "upload_time": "2020-01-17T10:36:42", "upload_time_iso_8601": "2020-01-17T10:36:42.019770Z", "url": "https://files.pythonhosted.org/packages/e2/08/01ae6d93abfa140e2fd53e67f926692db018f48b09fac6a0bcbb3c4ceee3/pykasm-alkasm-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f0512b86025d5a38b2bd27ac81cc03ad", "sha256": "f2152c57de9590b5e3ce9440da7077af6b50aca552d83482406a0f40863a7eb8"}, "downloads": -1, "filename": "pykasm_alkasm-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f0512b86025d5a38b2bd27ac81cc03ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3009, "upload_time": "2020-01-21T04:22:43", "upload_time_iso_8601": "2020-01-21T04:22:43.710431Z", "url": "https://files.pythonhosted.org/packages/a6/9c/7d1ed064adbf3cdea29e5952cbcad770aae906f973ac6e836dbe1774196e/pykasm_alkasm-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f87b41225ed9cb81142ab050fc296fbd", "sha256": "b74b2105223dd62c463894ccb221dba693ee7b2f9daf03537399fcbef49b9f8b"}, "downloads": -1, "filename": "pykasm-alkasm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f87b41225ed9cb81142ab050fc296fbd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2819, "upload_time": "2020-01-21T04:22:45", "upload_time_iso_8601": "2020-01-21T04:22:45.905816Z", "url": "https://files.pythonhosted.org/packages/b2/31/51da8735d4015337bf95d54e4aa49adcc09ebf65bf15dedaa7ae678f2f3d/pykasm-alkasm-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0512b86025d5a38b2bd27ac81cc03ad", "sha256": "f2152c57de9590b5e3ce9440da7077af6b50aca552d83482406a0f40863a7eb8"}, "downloads": -1, "filename": "pykasm_alkasm-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f0512b86025d5a38b2bd27ac81cc03ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3009, "upload_time": "2020-01-21T04:22:43", "upload_time_iso_8601": "2020-01-21T04:22:43.710431Z", "url": "https://files.pythonhosted.org/packages/a6/9c/7d1ed064adbf3cdea29e5952cbcad770aae906f973ac6e836dbe1774196e/pykasm_alkasm-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f87b41225ed9cb81142ab050fc296fbd", "sha256": "b74b2105223dd62c463894ccb221dba693ee7b2f9daf03537399fcbef49b9f8b"}, "downloads": -1, "filename": "pykasm-alkasm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f87b41225ed9cb81142ab050fc296fbd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2819, "upload_time": "2020-01-21T04:22:45", "upload_time_iso_8601": "2020-01-21T04:22:45.905816Z", "url": "https://files.pythonhosted.org/packages/b2/31/51da8735d4015337bf95d54e4aa49adcc09ebf65bf15dedaa7ae678f2f3d/pykasm-alkasm-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:38 2020"}