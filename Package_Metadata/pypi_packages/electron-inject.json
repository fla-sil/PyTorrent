{"info": {"author": "tintinweb", "author_email": "tintinweb@oststrom.com", "bugtrack_url": null, "classifiers": [], "description": "# \ud83d\udc89 electron-inject\n\nYou find yourself locked out of closed source electron applications with no easy way to enable developer tools? \u21b7 *electron-inject* is here to help \ud83d\udc72\n\n\n*electron-inject* is an application wrapper that utilizes the remote debug console to inject javascript code into electron based applications. For example, this can be pretty handy to enable otherwise unavailable features like the built-in developer console.\n\n![slack](https://cloud.githubusercontent.com/assets/2865694/24376228/70b2c2b0-133b-11e7-893c-c7a0ad262343.gif)\n\n\n# install\n\n    $ pip install electron-inject\n\nor \n\n    $ python setup.py install\n\n# usage\n\n    $ python -m electron_inject --help\n    Usage:\n        usage:\n               electron_inject [options] - <electron application>\n\n        example:\n               electron_inject --enable-devtools-hotkeys - /path/to/electron/powered/application [--app-params app-args]\n\n\n    Options:\n      -h, --help            show this help message and exit\n      -d, --enable-devtools-hotkeys\n                            Enable Hotkeys F12 (Toggle Developer Tools) and F5\n                            (Refresh) [default: False]\n      -b, --browser         Launch Devtools in default browser. [default: False]\n      -t TIMEOUT, --timeout=TIMEOUT\n                            Try hard to inject for the time specified [default:\n                            none]\n\n# Showcase\n\nInject hotkeys *F12:toggle devconsole* and *F5:reload* into closed source apps with devconsole disabled.\n\n`--enable-devtools-hotkeys` .. enable developer hotkeys\n`--timeout=xx` .. patch all known remote webContent/windows in a timeframe of `xx` seconds. set this to an arbitrary high value to make sure we're patching all future windows.\n\n## whatsapp\n\n`$ python -m electron_inject -d -t 60 - \\\\PATH\\TO\\Local\\WhatsApp\\app-0.2.2244\\WhatsApp.exe`\n\n![whatsapp gif](https://cloud.githubusercontent.com/assets/2865694/24376256/81d44e88-133b-11e7-961f-060e7b8201ed.gif)\n\nIf this gives you an error try launching it with the alternative browser method:\n\n`$ python -m electron_inject --browser - \\PATH\\TO\\Local\\WhatsApp\\app-0.2.2244\\WhatsApp.exe`\n\n## slack\n\n`$ python -m electron_inject -d -t 60 - \\\\PATH\\TO\\Local\\slack\\app-2.5.2\\slack.exe`\n\n![slack](https://cloud.githubusercontent.com/assets/2865694/24376228/70b2c2b0-133b-11e7-893c-c7a0ad262343.gif)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/tintinweb/electron-inject/tarball/v0.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tintinweb/electron-inject/", "keywords": "electron,inject,devtools,developer tools", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "electron-inject", "package_url": "https://pypi.org/project/electron-inject/", "platform": "", "project_url": "https://pypi.org/project/electron-inject/", "project_urls": {"Download": "https://github.com/tintinweb/electron-inject/tarball/v0.5", "Homepage": "https://github.com/tintinweb/electron-inject/"}, "release_url": "https://pypi.org/project/electron-inject/0.5/", "requires_dist": ["websocket", "requests"], "requires_python": "", "summary": "An electron application wrapper that utilizes the remote debug console to inject code into electron applications to enable developer tools", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83d\udc89 electron-inject</h1>\n<p>You find yourself locked out of closed source electron applications with no easy way to enable developer tools? \u21b7 <em>electron-inject</em> is here to help \ud83d\udc72</p>\n<p><em>electron-inject</em> is an application wrapper that utilizes the remote debug console to inject javascript code into electron based applications. For example, this can be pretty handy to enable otherwise unavailable features like the built-in developer console.</p>\n<p><img alt=\"slack\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caa6563efc6f221a7fe9db2b071030308b297990/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f323836353639342f32343337363232382f37306232633262302d313333622d313165372d383933632d6337613061643236323334332e676966\"></p>\n<h1>install</h1>\n<pre><code>$ pip install electron-inject\n</code></pre>\n<p>or</p>\n<pre><code>$ python setup.py install\n</code></pre>\n<h1>usage</h1>\n<pre><code>$ python -m electron_inject --help\nUsage:\n    usage:\n           electron_inject [options] - &lt;electron application&gt;\n\n    example:\n           electron_inject --enable-devtools-hotkeys - /path/to/electron/powered/application [--app-params app-args]\n\n\nOptions:\n  -h, --help            show this help message and exit\n  -d, --enable-devtools-hotkeys\n                        Enable Hotkeys F12 (Toggle Developer Tools) and F5\n                        (Refresh) [default: False]\n  -b, --browser         Launch Devtools in default browser. [default: False]\n  -t TIMEOUT, --timeout=TIMEOUT\n                        Try hard to inject for the time specified [default:\n                        none]\n</code></pre>\n<h1>Showcase</h1>\n<p>Inject hotkeys <em>F12:toggle devconsole</em> and <em>F5:reload</em> into closed source apps with devconsole disabled.</p>\n<p><code>--enable-devtools-hotkeys</code> .. enable developer hotkeys\n<code>--timeout=xx</code> .. patch all known remote webContent/windows in a timeframe of <code>xx</code> seconds. set this to an arbitrary high value to make sure we're patching all future windows.</p>\n<h2>whatsapp</h2>\n<p><code>$ python -m electron_inject -d -t 60 - \\\\PATH\\TO\\Local\\WhatsApp\\app-0.2.2244\\WhatsApp.exe</code></p>\n<p><img alt=\"whatsapp gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b077b63ad27d9688c64e5f58d64ed0c47841cfa7/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f323836353639342f32343337363235362f38316434346538382d313333622d313165372d393631662d3036306537623832303165642e676966\"></p>\n<p>If this gives you an error try launching it with the alternative browser method:</p>\n<p><code>$ python -m electron_inject --browser - \\PATH\\TO\\Local\\WhatsApp\\app-0.2.2244\\WhatsApp.exe</code></p>\n<h2>slack</h2>\n<p><code>$ python -m electron_inject -d -t 60 - \\\\PATH\\TO\\Local\\slack\\app-2.5.2\\slack.exe</code></p>\n<p><img alt=\"slack\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caa6563efc6f221a7fe9db2b071030308b297990/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f323836353639342f32343337363232382f37306232633262302d313333622d313165372d383933632d6337613061643236323334332e676966\"></p>\n\n          </div>"}, "last_serial": 6029627, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fc1c3a67bca08b94663044b5259c4403", "sha256": "8462c7addc2bd7301902b8c4d80cb8c7d89b3a56c68d5838732f38c1af8423e5"}, "downloads": -1, "filename": "electron-inject-0.1.tar.gz", "has_sig": false, "md5_digest": "fc1c3a67bca08b94663044b5259c4403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3285, "upload_time": "2017-03-27T19:54:04", "upload_time_iso_8601": "2017-03-27T19:54:04.694669Z", "url": "https://files.pythonhosted.org/packages/be/13/c042eee437ec4a8dd64fbf963aaba3e924225db4e0ea0692bdee41fbea51/electron-inject-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2f51340549739cb39cecc83226f2024d", "sha256": "0e0819ee5e8c229a9f017d0c61b59084420351ca0c054a9f1e8282bb6da491c3"}, "downloads": -1, "filename": "electron-inject-0.2.tar.gz", "has_sig": false, "md5_digest": "2f51340549739cb39cecc83226f2024d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4072, "upload_time": "2017-03-27T20:35:43", "upload_time_iso_8601": "2017-03-27T20:35:43.716526Z", "url": "https://files.pythonhosted.org/packages/31/ee/e0577fcea75f9c3ed8afeb0b41c1aa72ef1e01c6a0cd58381180b46916db/electron-inject-0.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "55cd5ca134ff734bd2190a2b49f08f24", "sha256": "7844942f1961ef37abff2327e3c47b26fb49997ab6633883ac1bf076f83f885c"}, "downloads": -1, "filename": "electron_inject-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "55cd5ca134ff734bd2190a2b49f08f24", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5318, "upload_time": "2019-07-06T20:57:16", "upload_time_iso_8601": "2019-07-06T20:57:16.963505Z", "url": "https://files.pythonhosted.org/packages/bb/56/f796975913520f08987fdf839223871cd55fef962e10a7d74d68bf165077/electron_inject-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a1ec18471c08649d19898af8453f758", "sha256": "021ed90bd8f8301f98b40c6c6cad12be47e099aca40d1fdd4130f702654e84f1"}, "downloads": -1, "filename": "electron_inject-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8a1ec18471c08649d19898af8453f758", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5317, "upload_time": "2019-07-06T20:57:18", "upload_time_iso_8601": "2019-07-06T20:57:18.365775Z", "url": "https://files.pythonhosted.org/packages/b8/5b/8374b4824bbdc0d894759dffebd26d9e0f6ea772cdaf31b757b4c5123eba/electron_inject-0.4-py3-none-any.whl", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9156f31f0ab993422f30faa4c07f3354", "sha256": "dba9cb29440a641d268751a49a0c202573482d685c91e5f037f1f8c6a0271c12"}, "downloads": -1, "filename": "electron_inject-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "9156f31f0ab993422f30faa4c07f3354", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5344, "upload_time": "2019-10-25T13:34:38", "upload_time_iso_8601": "2019-10-25T13:34:38.078919Z", "url": "https://files.pythonhosted.org/packages/63/85/7a274f7ebf1a791e0631f2a605665a0f5c78d810ae5cce1f123b2ecaf354/electron_inject-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2399ffedbfa08c097886d7aaed4e2bf", "sha256": "731f8e6b4c023c71b6ceb7a943da570e6e4750abbb1953c67c0e687bb74e11f5"}, "downloads": -1, "filename": "electron-inject-0.5.tar.gz", "has_sig": false, "md5_digest": "e2399ffedbfa08c097886d7aaed4e2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4637, "upload_time": "2019-10-25T13:34:39", "upload_time_iso_8601": "2019-10-25T13:34:39.533629Z", "url": "https://files.pythonhosted.org/packages/49/cb/2747422d7ceaa0b10555e41e79d3e4c0e812129a5c3668cc71da1e8f2e19/electron-inject-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9156f31f0ab993422f30faa4c07f3354", "sha256": "dba9cb29440a641d268751a49a0c202573482d685c91e5f037f1f8c6a0271c12"}, "downloads": -1, "filename": "electron_inject-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "9156f31f0ab993422f30faa4c07f3354", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5344, "upload_time": "2019-10-25T13:34:38", "upload_time_iso_8601": "2019-10-25T13:34:38.078919Z", "url": "https://files.pythonhosted.org/packages/63/85/7a274f7ebf1a791e0631f2a605665a0f5c78d810ae5cce1f123b2ecaf354/electron_inject-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2399ffedbfa08c097886d7aaed4e2bf", "sha256": "731f8e6b4c023c71b6ceb7a943da570e6e4750abbb1953c67c0e687bb74e11f5"}, "downloads": -1, "filename": "electron-inject-0.5.tar.gz", "has_sig": false, "md5_digest": "e2399ffedbfa08c097886d7aaed4e2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4637, "upload_time": "2019-10-25T13:34:39", "upload_time_iso_8601": "2019-10-25T13:34:39.533629Z", "url": "https://files.pythonhosted.org/packages/49/cb/2747422d7ceaa0b10555e41e79d3e4c0e812129a5c3668cc71da1e8f2e19/electron-inject-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:54 2020"}