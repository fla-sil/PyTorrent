{"info": {"author": "hwipl", "author_email": "nuqql-slixmppd@hwipl.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# nuqql-slixmppd\n\nnuqql-slixmppd is a network daemon that implements the nuqql interface and uses\n[slixmpp](https://lab.louiz.org/poezio/slixmpp) to connect to XMPP chat\nnetworks. It can be used as a backend for\n[nuqql](https://github.com/hwipl/nuqql) or as a standalone chat client daemon.\n\nnuqql-slixmppd's dependencies are:\n* [nuqql-based](https://github.com/hwipl/nuqql-based)\n* [slixmpp](https://lab.louiz.org/poezio/slixmpp)\n* [daemon](https://pypi.org/project/python-daemon/) (optional)\n\n\n## Quick Start\n\nYou can install nuqql-slixmppd and its dependencies, for example, with pip for\nyour user only with the following command:\n\n```console\n$ pip install --user nuqql-slixmppd\n```\n\nAfter the installation, you can run nuqql-slixmppd by running the\n`nuqql-slixmppd` command:\n\n```console\n$ nuqql-slixmppd\n```\n\nBy default, it listens on TCP port 32000 on your local host. So, you can\nconnect with, e.g., telnet to it with the following command:\n\n```console\n$ telnet localhost 32000\n```\n\nIn the telnet session you can:\n* add XMPP accounts with: `account add xmpp <username> <password>`.\n* retrieve the list of accounts and their numbers/IDs with `account list`.\n* retrieve your buddy list with `account <id> buddies`\n* send a message to a user with `account <id> send <username> <message>`\n\n\n## Usage\n\nSee `nuqql-slixmppd --help` for a list of command line arguments:\n\n```\nusage: nuqql-slixmppd [-h] [--version] [--af {inet,unix}] [--address ADDRESS]\n[--port PORT] [--sockfile SOCKFILE] [--dir DIR] [-d] [--loglevel\n{debug,info,warn,error}] [--disable-history]\n\nRun nuqql backend.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --af {inet,unix}      socket address family: \"inet\" for AF_INET, \"unix\" for\n                        AF_UNIX\n  --address ADDRESS     AF_INET listen address\n  --port PORT           AF_INET listen port\n  --sockfile SOCKFILE   AF_UNIX socket file in DIR\n  --dir DIR             working directory\n  -d, --daemonize       daemonize process\n  --loglevel {debug,info,warn,error}\n                        Logging level\n  --disable-history     disable message history\n```\n\n\n## Changes\n\n* v0.5:\n  * Use nuqql-based as dependency and adapt to nuqql-based changes\n  * Add setup.py for installation and package distribution\n  * Add python type annotations\n  * Restructure code\n* v0.4:\n  * Add new commands:\n    * `bye`: disconnect from the backend.\n    * `quit`: quit the backend.\n    * `help`: show list of commands and their description.\n  * Add and use \"chat msg\" message format for group chat messages\n  * Store accounts in .ini file `accounts.ini` in the backend's working\n    directory. Note: existing accounts have to be re-added to the backend to\n    be usable with the .ini file.\n  * Add configuration file support: in addition to the command line arguments,\n    configuration parameters can now be set in the .ini file `config.ini` in\n    the backend's working directory.\n  * Add `loglevel` configuration parameter to command line arguments and\n    configuration file for setting the logging level to `debug`, `info`,\n    `warn`, or `error`. Default: `warn`.\n  * Make daemon python module optional\n  * Fixes and improvements\n* v0.3:\n  * Add group chat support and messages:\n    * list chats on account: `account <id> chat list`\n    * join a chat on account: `account <id> chat join <chat>`\n    * part a chat on account: `account <id> chat part <chat>`\n    * send a message to a chat on account:\n      `account <id> chat send <chat> <message>`\n    * list users of a chat on account: `account <id> chat users <chat>`\n  * Cleanups, fixes, and improvements\n* v0.2:\n  * Add account status message:\n    * Set current status with: `account <id> status set <status>`\n    * Get current status with: `account <id> status get`\n  * Use stricter permissions for account, log, and sock files\n* v0.1:\n  * First/initial release.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hwipl/nuqql-slixmppd", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nuqql-slixmppd", "package_url": "https://pypi.org/project/nuqql-slixmppd/", "platform": "", "project_url": "https://pypi.org/project/nuqql-slixmppd/", "project_urls": {"Homepage": "https://github.com/hwipl/nuqql-slixmppd"}, "release_url": "https://pypi.org/project/nuqql-slixmppd/0.5/", "requires_dist": ["nuqql-based", "slixmpp"], "requires_python": ">=3.6", "summary": "XMPP client network daemon using slixmpp", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nuqql-slixmppd</h1>\n<p>nuqql-slixmppd is a network daemon that implements the nuqql interface and uses\n<a href=\"https://lab.louiz.org/poezio/slixmpp\" rel=\"nofollow\">slixmpp</a> to connect to XMPP chat\nnetworks. It can be used as a backend for\n<a href=\"https://github.com/hwipl/nuqql\" rel=\"nofollow\">nuqql</a> or as a standalone chat client daemon.</p>\n<p>nuqql-slixmppd's dependencies are:</p>\n<ul>\n<li><a href=\"https://github.com/hwipl/nuqql-based\" rel=\"nofollow\">nuqql-based</a></li>\n<li><a href=\"https://lab.louiz.org/poezio/slixmpp\" rel=\"nofollow\">slixmpp</a></li>\n<li><a href=\"https://pypi.org/project/python-daemon/\" rel=\"nofollow\">daemon</a> (optional)</li>\n</ul>\n<h2>Quick Start</h2>\n<p>You can install nuqql-slixmppd and its dependencies, for example, with pip for\nyour user only with the following command:</p>\n<pre><span class=\"gp\">$</span> pip install --user nuqql-slixmppd\n</pre>\n<p>After the installation, you can run nuqql-slixmppd by running the\n<code>nuqql-slixmppd</code> command:</p>\n<pre><span class=\"gp\">$</span> nuqql-slixmppd\n</pre>\n<p>By default, it listens on TCP port 32000 on your local host. So, you can\nconnect with, e.g., telnet to it with the following command:</p>\n<pre><span class=\"gp\">$</span> telnet localhost <span class=\"m\">32000</span>\n</pre>\n<p>In the telnet session you can:</p>\n<ul>\n<li>add XMPP accounts with: <code>account add xmpp &lt;username&gt; &lt;password&gt;</code>.</li>\n<li>retrieve the list of accounts and their numbers/IDs with <code>account list</code>.</li>\n<li>retrieve your buddy list with <code>account &lt;id&gt; buddies</code></li>\n<li>send a message to a user with <code>account &lt;id&gt; send &lt;username&gt; &lt;message&gt;</code></li>\n</ul>\n<h2>Usage</h2>\n<p>See <code>nuqql-slixmppd --help</code> for a list of command line arguments:</p>\n<pre><code>usage: nuqql-slixmppd [-h] [--version] [--af {inet,unix}] [--address ADDRESS]\n[--port PORT] [--sockfile SOCKFILE] [--dir DIR] [-d] [--loglevel\n{debug,info,warn,error}] [--disable-history]\n\nRun nuqql backend.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --af {inet,unix}      socket address family: \"inet\" for AF_INET, \"unix\" for\n                        AF_UNIX\n  --address ADDRESS     AF_INET listen address\n  --port PORT           AF_INET listen port\n  --sockfile SOCKFILE   AF_UNIX socket file in DIR\n  --dir DIR             working directory\n  -d, --daemonize       daemonize process\n  --loglevel {debug,info,warn,error}\n                        Logging level\n  --disable-history     disable message history\n</code></pre>\n<h2>Changes</h2>\n<ul>\n<li>v0.5:\n<ul>\n<li>Use nuqql-based as dependency and adapt to nuqql-based changes</li>\n<li>Add setup.py for installation and package distribution</li>\n<li>Add python type annotations</li>\n<li>Restructure code</li>\n</ul>\n</li>\n<li>v0.4:\n<ul>\n<li>Add new commands:\n<ul>\n<li><code>bye</code>: disconnect from the backend.</li>\n<li><code>quit</code>: quit the backend.</li>\n<li><code>help</code>: show list of commands and their description.</li>\n</ul>\n</li>\n<li>Add and use \"chat msg\" message format for group chat messages</li>\n<li>Store accounts in .ini file <code>accounts.ini</code> in the backend's working\ndirectory. Note: existing accounts have to be re-added to the backend to\nbe usable with the .ini file.</li>\n<li>Add configuration file support: in addition to the command line arguments,\nconfiguration parameters can now be set in the .ini file <code>config.ini</code> in\nthe backend's working directory.</li>\n<li>Add <code>loglevel</code> configuration parameter to command line arguments and\nconfiguration file for setting the logging level to <code>debug</code>, <code>info</code>,\n<code>warn</code>, or <code>error</code>. Default: <code>warn</code>.</li>\n<li>Make daemon python module optional</li>\n<li>Fixes and improvements</li>\n</ul>\n</li>\n<li>v0.3:\n<ul>\n<li>Add group chat support and messages:\n<ul>\n<li>list chats on account: <code>account &lt;id&gt; chat list</code></li>\n<li>join a chat on account: <code>account &lt;id&gt; chat join &lt;chat&gt;</code></li>\n<li>part a chat on account: <code>account &lt;id&gt; chat part &lt;chat&gt;</code></li>\n<li>send a message to a chat on account:\n<code>account &lt;id&gt; chat send &lt;chat&gt; &lt;message&gt;</code></li>\n<li>list users of a chat on account: <code>account &lt;id&gt; chat users &lt;chat&gt;</code></li>\n</ul>\n</li>\n<li>Cleanups, fixes, and improvements</li>\n</ul>\n</li>\n<li>v0.2:\n<ul>\n<li>Add account status message:\n<ul>\n<li>Set current status with: <code>account &lt;id&gt; status set &lt;status&gt;</code></li>\n<li>Get current status with: <code>account &lt;id&gt; status get</code></li>\n</ul>\n</li>\n<li>Use stricter permissions for account, log, and sock files</li>\n</ul>\n</li>\n<li>v0.1:\n<ul>\n<li>First/initial release.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6345436, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "0452358977293ab9644399f057dc0c00", "sha256": "0391e8d7b1d4e47a65316f8d303ae39aa884c6c960ebe6df5abf2f8111335781"}, "downloads": -1, "filename": "nuqql_slixmppd-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0452358977293ab9644399f057dc0c00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10674, "upload_time": "2019-12-21T19:57:29", "upload_time_iso_8601": "2019-12-21T19:57:29.335769Z", "url": "https://files.pythonhosted.org/packages/a0/76/544ed5e96cda605cdcd48f72fa072a22b7ca119175a6c681c1d1d0779f98/nuqql_slixmppd-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0057f3f2a4c86e2ea202ed80b95fd3a0", "sha256": "dd5fabd4d71d612eb8b3392c1aa9ff21ea2e955b67e01e1c1a4d20cd09c1293f"}, "downloads": -1, "filename": "nuqql-slixmppd-0.5.tar.gz", "has_sig": false, "md5_digest": "0057f3f2a4c86e2ea202ed80b95fd3a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10884, "upload_time": "2019-12-21T19:57:31", "upload_time_iso_8601": "2019-12-21T19:57:31.813530Z", "url": "https://files.pythonhosted.org/packages/25/85/f3d78257af222e84455a047e6ea52e450491593cf14faab115097b7e53f1/nuqql-slixmppd-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0452358977293ab9644399f057dc0c00", "sha256": "0391e8d7b1d4e47a65316f8d303ae39aa884c6c960ebe6df5abf2f8111335781"}, "downloads": -1, "filename": "nuqql_slixmppd-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0452358977293ab9644399f057dc0c00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10674, "upload_time": "2019-12-21T19:57:29", "upload_time_iso_8601": "2019-12-21T19:57:29.335769Z", "url": "https://files.pythonhosted.org/packages/a0/76/544ed5e96cda605cdcd48f72fa072a22b7ca119175a6c681c1d1d0779f98/nuqql_slixmppd-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0057f3f2a4c86e2ea202ed80b95fd3a0", "sha256": "dd5fabd4d71d612eb8b3392c1aa9ff21ea2e955b67e01e1c1a4d20cd09c1293f"}, "downloads": -1, "filename": "nuqql-slixmppd-0.5.tar.gz", "has_sig": false, "md5_digest": "0057f3f2a4c86e2ea202ed80b95fd3a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10884, "upload_time": "2019-12-21T19:57:31", "upload_time_iso_8601": "2019-12-21T19:57:31.813530Z", "url": "https://files.pythonhosted.org/packages/25/85/f3d78257af222e84455a047e6ea52e450491593cf14faab115097b7e53f1/nuqql-slixmppd-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:07 2020"}