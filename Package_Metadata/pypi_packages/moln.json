{"info": {"author": "Johan Stenberg", "author_email": "johan.stenberg@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# moln {/mo:ln/}\nStupid simple access to [Microsoft Azure](https://azure.microsoft.com) services using Python. Built for the rest of us.\n\nThis is very much a work in progress. Feedback is welcome.\n\nTo install:\n```bash\npip install moln\n```\n\n```python\nimport pathlib\n\nimport moln.storage\n\n# Authentication is done using the azure-identity package.\n# By default, it will use the azure.identity.DefaultAzureCredential\naccount = moln.storage.attach(account_url='https://molntest.blob.core.windows.net')\n\n# Creating containers - just like you create directories!\ncontainer = account / 'jabbadabbadoo'\ncontainer.mkdir(exists_ok=True)\n\nlocal_file = pathlib.Path('./stuff.json')\nremote_file = container / 'stuff.json'\n\n# Upload blobs like you would upload files - with the option to\n# specify metadata like Content-Type headers for the uploaded blob.\nif not remote_file.exists():\n    with local_file.open(mode='rb') as lf:\n        with remote_file.open(mode='wb', content_settings=azure.storage.blob.ContentSettings(content_type='application/json')) as rb:\n            rb.write(lf.read())\n\n# Work with the blob as if you opened a local file\nwith remote_file.open(mode='r') as rb:\n    import json\n    data = json.load(rb)\n    print(data)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/johanste/moln", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "moln", "package_url": "https://pypi.org/project/moln/", "platform": "", "project_url": "https://pypi.org/project/moln/", "project_urls": {"Homepage": "https://github.com/johanste/moln"}, "release_url": "https://pypi.org/project/moln/0.0.1a1/", "requires_dist": ["azure-storage-blob (<13.0.0,>=12.0.0)", "azure-identity (<2.0.0,>=1.0.0)"], "requires_python": ">=3.6", "summary": "Stupid, simple Azure client library built for the rest of us", "version": "0.0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>moln {/mo:ln/}</h1>\n<p>Stupid simple access to <a href=\"https://azure.microsoft.com\" rel=\"nofollow\">Microsoft Azure</a> services using Python. Built for the rest of us.</p>\n<p>This is very much a work in progress. Feedback is welcome.</p>\n<p>To install:</p>\n<pre>pip install moln\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">moln.storage</span>\n\n<span class=\"c1\"># Authentication is done using the azure-identity package.</span>\n<span class=\"c1\"># By default, it will use the azure.identity.DefaultAzureCredential</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">moln</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">attach</span><span class=\"p\">(</span><span class=\"n\">account_url</span><span class=\"o\">=</span><span class=\"s1\">'https://molntest.blob.core.windows.net'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Creating containers - just like you create directories!</span>\n<span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">account</span> <span class=\"o\">/</span> <span class=\"s1\">'jabbadabbadoo'</span>\n<span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">exists_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">local_file</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'./stuff.json'</span><span class=\"p\">)</span>\n<span class=\"n\">remote_file</span> <span class=\"o\">=</span> <span class=\"n\">container</span> <span class=\"o\">/</span> <span class=\"s1\">'stuff.json'</span>\n\n<span class=\"c1\"># Upload blobs like you would upload files - with the option to</span>\n<span class=\"c1\"># specify metadata like Content-Type headers for the uploaded blob.</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">remote_file</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">local_file</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">lf</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">remote_file</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'wb'</span><span class=\"p\">,</span> <span class=\"n\">content_settings</span><span class=\"o\">=</span><span class=\"n\">azure</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">ContentSettings</span><span class=\"p\">(</span><span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"s1\">'application/json'</span><span class=\"p\">))</span> <span class=\"k\">as</span> <span class=\"n\">rb</span><span class=\"p\">:</span>\n            <span class=\"n\">rb</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">lf</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Work with the blob as if you opened a local file</span>\n<span class=\"k\">with</span> <span class=\"n\">remote_file</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">rb</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">json</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">rb</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6084739, "releases": {"0.0.1a1": [{"comment_text": "", "digests": {"md5": "ca82a8c66c7ee7926f8f61b2603f85c5", "sha256": "5d16e12f30f925078f43b352bf9285c0adf0c89d87eb56dd7b2c3e849027a208"}, "downloads": -1, "filename": "moln-0.0.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca82a8c66c7ee7926f8f61b2603f85c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3828, "upload_time": "2019-11-06T04:41:21", "upload_time_iso_8601": "2019-11-06T04:41:21.087784Z", "url": "https://files.pythonhosted.org/packages/57/b8/f6db371851f25577e4db35f5211f3ddf49590fe1377b24a8f7170c7ae3e0/moln-0.0.1a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23a8d231a6662a8aa6c2e6d7c071b2e", "sha256": "8d37e8e447f248357dc6b41c167d8392774ce69738346c70aba8e2d51c84b860"}, "downloads": -1, "filename": "moln-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "e23a8d231a6662a8aa6c2e6d7c071b2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3789, "upload_time": "2019-11-06T04:41:23", "upload_time_iso_8601": "2019-11-06T04:41:23.097121Z", "url": "https://files.pythonhosted.org/packages/12/fa/e9ad62104c6886a44c8b572f81e3fcc535557bb8a67b4271121ff08be7ff/moln-0.0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ca82a8c66c7ee7926f8f61b2603f85c5", "sha256": "5d16e12f30f925078f43b352bf9285c0adf0c89d87eb56dd7b2c3e849027a208"}, "downloads": -1, "filename": "moln-0.0.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca82a8c66c7ee7926f8f61b2603f85c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3828, "upload_time": "2019-11-06T04:41:21", "upload_time_iso_8601": "2019-11-06T04:41:21.087784Z", "url": "https://files.pythonhosted.org/packages/57/b8/f6db371851f25577e4db35f5211f3ddf49590fe1377b24a8f7170c7ae3e0/moln-0.0.1a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23a8d231a6662a8aa6c2e6d7c071b2e", "sha256": "8d37e8e447f248357dc6b41c167d8392774ce69738346c70aba8e2d51c84b860"}, "downloads": -1, "filename": "moln-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "e23a8d231a6662a8aa6c2e6d7c071b2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3789, "upload_time": "2019-11-06T04:41:23", "upload_time_iso_8601": "2019-11-06T04:41:23.097121Z", "url": "https://files.pythonhosted.org/packages/12/fa/e9ad62104c6886a44c8b572f81e3fcc535557bb8a67b4271121ff08be7ff/moln-0.0.1a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:34 2020"}