{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "This is a new version of the SciTools library adapted for Python 3.\nIt is reorganized and not everything from the old package is still there.\nOnce most useful modules from SciTools have been ported to Python 3,\ndevelopment on this site will probably cease, however I plan to then\ncontinue maintaining these modules in a new Python Library: sciren.\n\nFor more information about sciren, please visit the website (that doesn't yet exist):\nhttps://onnoeberhard.com/sciren\n\n2018-01-09\nOnno Eberhard\n\n-----------------------------------------------------------------------------------\n\nSciTools is a Python package containing lots of useful tools for\nscientific computing in Python. The package is built on top of other\nwidely used packages such as NumPy, SciPy, ScientificPython, Gnuplot,\nMatplotlib, VTK, and others. SciTools can be downloaded from\ncode.google.com/p/scitools.\n\nThe SciTools package contains a lot of modules:\n\n  - easyviz: package for unified Matlab-like plotting syntax\n  - basics: imports from numpy, scipy, scitools.numpyutils\n  - std: imports of basics and easyviz\n  - misc: many non-numerical convenience functions\n  - numpyutils: many numerical convenience functions\n  - StringFunction: turns string formulas into callable functions\n  - configdata: user-friendly access to Python config files\n  - filetable: read/write tabular data in files into/from arrays\n  - debug: useful functions for debugging\n  - pprint2: improvement of pprint for formatting control of floats\n  - multipleloop: makes a loop from all combinations of a set of parameters\n  - EfficiencyTable: nice table report from efficiency experiments\n  - globaldata: holds all global data in the scitools package\n  - sound: tools for easy sound generation and manipulation\n  - aplotter: curve plotting in pure ASCII\n  - Lumpy: visualization of the data structures in a Python program\n\nSome modules and classes are closely related to and explained in the\ntext in the book \"Python Scripting for Computational Science\", by\nH. P. Langtangen, 3rd edition, 2nd printing, Springer, 2009:\n\n  - NumPyDB: a simple database for holding NumPy arrays\n  - Regression: module for performing regression tests (also with floats)\n  - CanvasCoord: transformations between canvas and physical coordinates\n  - DrawFunction: enables users to draw a function (in Pmw.Blt plotting widget)\n  - FunctionSelector: Tk/Pmw-based widgets for selecting functions\n  - FuncDependenceViz: visualization of how functions vary with parameters\n  - ParameterInterface: a simplified GUI generator for simulation programs\n  - PrmDictBase: module for holding parameters in simulation programs\n\nSome preliminary modules include\n  - BoxGrid: a structured grid in 1D, 2D, or 2D\n  - BoxField: a scalar or vector field over a BoxGrid\n\nSee the different modules for more detailed information.\n\nThe most convenient SciTools import statement reads::\n\n  from scitools.std import *\n\nThis statement imports from numpy, scipy (if available),\nscitools.numpyutils (many numerical convenince functions), and all\nEasyviz plotting capabilities. (See the documentation of\nscitools.std for a precise list of imports implied by the\nabove statement.)\n\nMany programmers prefer to avoid the \"star import\" above, which\nhas the disadvantage of filling up the global namespace with\na large number of names. The key import statement is then::\n\n  import scitools.std as st\n\nAll functions and modules must then be prefixed by ``st``:\n``st.float_eq``, ``st.StringFunction``, ``st.plot``, etc.\n\nHome-page: https://github.com/onnoeberhard/scitools3\nAuthor: Johannes H. Ring, Hans Petter Langtangen, Onno Eberhard\nAuthor-email: onnoeberhard@gmail.com\nLicense: BSD\nDescription-Content-Type: UNKNOWN\nDescription: UNKNOWN\nPlatform: UNKNOWN\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "scitools3", "package_url": "https://pypi.org/project/scitools3/", "platform": "", "project_url": "https://pypi.org/project/scitools3/", "project_urls": null, "release_url": "https://pypi.org/project/scitools3/1.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a new version of the SciTools library adapted for Python 3.\nIt is reorganized and not everything from the old package is still there.\nOnce most useful modules from SciTools have been ported to Python 3,\ndevelopment on this site will probably cease, however I plan to then\ncontinue maintaining these modules in a new Python Library: sciren.</p>\n<p>For more information about sciren, please visit the website (that doesn\u2019t yet exist):\n<a href=\"https://onnoeberhard.com/sciren\" rel=\"nofollow\">https://onnoeberhard.com/sciren</a></p>\n<p>2018-01-09\nOnno Eberhard</p>\n<hr class=\"docutils\">\n<p>SciTools is a Python package containing lots of useful tools for\nscientific computing in Python. The package is built on top of other\nwidely used packages such as NumPy, SciPy, ScientificPython, Gnuplot,\nMatplotlib, VTK, and others. SciTools can be downloaded from\ncode.google.com/p/scitools.</p>\n<p>The SciTools package contains a lot of modules:</p>\n<blockquote>\n<ul>\n<li>easyviz: package for unified Matlab-like plotting syntax</li>\n<li>basics: imports from numpy, scipy, scitools.numpyutils</li>\n<li>std: imports of basics and easyviz</li>\n<li>misc: many non-numerical convenience functions</li>\n<li>numpyutils: many numerical convenience functions</li>\n<li>StringFunction: turns string formulas into callable functions</li>\n<li>configdata: user-friendly access to Python config files</li>\n<li>filetable: read/write tabular data in files into/from arrays</li>\n<li>debug: useful functions for debugging</li>\n<li>pprint2: improvement of pprint for formatting control of floats</li>\n<li>multipleloop: makes a loop from all combinations of a set of parameters</li>\n<li>EfficiencyTable: nice table report from efficiency experiments</li>\n<li>globaldata: holds all global data in the scitools package</li>\n<li>sound: tools for easy sound generation and manipulation</li>\n<li>aplotter: curve plotting in pure ASCII</li>\n<li>Lumpy: visualization of the data structures in a Python program</li>\n</ul>\n</blockquote>\n<p>Some modules and classes are closely related to and explained in the\ntext in the book \u201cPython Scripting for Computational Science\u201d, by\nH. P. Langtangen, 3rd edition, 2nd printing, Springer, 2009:</p>\n<blockquote>\n<ul>\n<li>NumPyDB: a simple database for holding NumPy arrays</li>\n<li>Regression: module for performing regression tests (also with floats)</li>\n<li>CanvasCoord: transformations between canvas and physical coordinates</li>\n<li>DrawFunction: enables users to draw a function (in Pmw.Blt plotting widget)</li>\n<li>FunctionSelector: Tk/Pmw-based widgets for selecting functions</li>\n<li>FuncDependenceViz: visualization of how functions vary with parameters</li>\n<li>ParameterInterface: a simplified GUI generator for simulation programs</li>\n<li>PrmDictBase: module for holding parameters in simulation programs</li>\n</ul>\n</blockquote>\n<dl>\n<dt>Some preliminary modules include</dt>\n<dd><ul>\n<li>BoxGrid: a structured grid in 1D, 2D, or 2D</li>\n<li>BoxField: a scalar or vector field over a BoxGrid</li>\n</ul>\n</dd>\n</dl>\n<p>See the different modules for more detailed information.</p>\n<p>The most convenient SciTools import statement reads:</p>\n<pre>from scitools.std import *\n</pre>\n<p>This statement imports from numpy, scipy (if available),\nscitools.numpyutils (many numerical convenince functions), and all\nEasyviz plotting capabilities. (See the documentation of\nscitools.std for a precise list of imports implied by the\nabove statement.)</p>\n<p>Many programmers prefer to avoid the \u201cstar import\u201d above, which\nhas the disadvantage of filling up the global namespace with\na large number of names. The key import statement is then:</p>\n<pre>import scitools.std as st\n</pre>\n<p>All functions and modules must then be prefixed by <tt>st</tt>:\n<tt>st.float_eq</tt>, <tt>st.StringFunction</tt>, <tt>st.plot</tt>, etc.</p>\n<p>Home-page: <a href=\"https://github.com/onnoeberhard/scitools3\" rel=\"nofollow\">https://github.com/onnoeberhard/scitools3</a>\nAuthor: Johannes H. Ring, Hans Petter Langtangen, Onno Eberhard\nAuthor-email: <a href=\"mailto:onnoeberhard%40gmail.com\">onnoeberhard<span>@</span>gmail<span>.</span>com</a>\nLicense: BSD\nDescription-Content-Type: UNKNOWN\nDescription: UNKNOWN\nPlatform: UNKNOWN</p>\n\n          </div>"}, "last_serial": 3780817, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "53f0ee0be44a8bbcd6bb53ded88c38b7", "sha256": "228c63638dcf60793e809275d9511ee4ba221ecc6f830ff62fb4afc14752e118"}, "downloads": -1, "filename": "scitools3-1.0.tar.gz", "has_sig": false, "md5_digest": "53f0ee0be44a8bbcd6bb53ded88c38b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31675, "upload_time": "2018-04-19T14:11:23", "upload_time_iso_8601": "2018-04-19T14:11:23.676285Z", "url": "https://files.pythonhosted.org/packages/1b/47/e5cdee5add701eb814af5eefdfba653476957c6960559e77614a1a4953c0/scitools3-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53f0ee0be44a8bbcd6bb53ded88c38b7", "sha256": "228c63638dcf60793e809275d9511ee4ba221ecc6f830ff62fb4afc14752e118"}, "downloads": -1, "filename": "scitools3-1.0.tar.gz", "has_sig": false, "md5_digest": "53f0ee0be44a8bbcd6bb53ded88c38b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31675, "upload_time": "2018-04-19T14:11:23", "upload_time_iso_8601": "2018-04-19T14:11:23.676285Z", "url": "https://files.pythonhosted.org/packages/1b/47/e5cdee5add701eb814af5eefdfba653476957c6960559e77614a1a4953c0/scitools3-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:12 2020"}