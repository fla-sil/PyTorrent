{"info": {"author": "Michael Schneeberger", "author_email": "michael.schneeb@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Dataclass ABC\n\nLibrary that lets you define abstract properties for dataclasses. \n\n## Installation\n\n```pip install dataclass-abc```\n\n## Usage\n\nThe `dataclass_abc` class decorator:\n\n* erases the default value of the fields (see comment below)\n* resolves the abstract properties overwritten by a field\n\n``` python\nfrom abc import ABC, abstractmethod\n\nfrom dataclass_abc import dataclass_abc\n\nclass A(ABC):\n    @property\n    @abstractmethod\n    def val(self) -> str:\n        ...\n\n@dataclass_abc(frozen=True)\nclass B(A):\n    val: str        # overwrites the abstract property 'val' in 'A'\n```\n\n### Erase default value\n\n`dataclass_abc` erases the default values of fields. This has the advantage that\nadditional fields that do not refer to an abstract property can be added\nwithout running into the \"*non-default argument follows default argument*\" \nexception.\n\nTherefore, do not define default values, work with *initialize functions* \ninstead (see Design Pattern below).\n\n``` python\nfrom abc import ABC, abstractmethod\n\nfrom dataclass_abc import dataclass_abc\n\nclass A(ABC):\n    @property\n    @abstractmethod\n    def val1(self) -> str:\n        ...\n\n@dataclass_abc(frozen=True)\nclass B(A):\n    val1: str\n    val2: str\n\n# work with initialize functions when dealing with default values\ndef init_b(\n    val1: str,\n    val2: str = 'default',\n):\n    return B(val1=val1, val2=val2)\n```\n\n## Example\n\nThe [example](https://github.com/MichaelSchneeberger/dataclass-abc/tree/master/example)\nimplements the code snippets taken from [RealPython](https://realpython.com/python-data-classes/)\n with abstract properties.\n\n## Design pattern\n\nThis library suggests the design pattern as implemented in the \n[example](https://github.com/MichaelSchneeberger/dataclass-abc/tree/master/example):\n\n- **mixins** - a *mixin* is an abstract class that implements data as abstract\nproperties and methods based on the abstract properties.\n- **classes** - an abstract class inherits from one or more mixins\n(see `City` or `CapitalCity` in the example). This class is used for pattern matching,\ne.g. using `isinstance` method.\n- **impl** - an *implementation class* implements the abstract properties. \n(see `CityImpl` or `CapitalCityImpl` in the example). This class is decorated with\n`dataclass_abc` and `resolve_abc_prop` and should always be called through an \n*initialize function*.\n- **init** - an *initialize function* (or *constructor function*) initializes an \n*implementation class*.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MichaelSchneeberger/dataclass-abc", "keywords": "dataclass_abc abstract abc property", "license": "", "maintainer": "", "maintainer_email": "", "name": "dataclass-abc", "package_url": "https://pypi.org/project/dataclass-abc/", "platform": "", "project_url": "https://pypi.org/project/dataclass-abc/", "project_urls": {"Homepage": "https://github.com/MichaelSchneeberger/dataclass-abc"}, "release_url": "https://pypi.org/project/dataclass-abc/0.0.4/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Library that lets you define abstract properties for dataclasses.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dataclass ABC</h1>\n<p>Library that lets you define abstract properties for dataclasses.</p>\n<h2>Installation</h2>\n<p><code>pip install dataclass-abc</code></p>\n<h2>Usage</h2>\n<p>The <code>dataclass_abc</code> class decorator:</p>\n<ul>\n<li>erases the default value of the fields (see comment below)</li>\n<li>resolves the abstract properties overwritten by a field</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span><span class=\"p\">,</span> <span class=\"n\">abstractmethod</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dataclass_abc</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass_abc</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">val</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n<span class=\"nd\">@dataclass_abc</span><span class=\"p\">(</span><span class=\"n\">frozen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">B</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">):</span>\n    <span class=\"n\">val</span><span class=\"p\">:</span> <span class=\"nb\">str</span>        <span class=\"c1\"># overwrites the abstract property 'val' in 'A'</span>\n</pre>\n<h3>Erase default value</h3>\n<p><code>dataclass_abc</code> erases the default values of fields. This has the advantage that\nadditional fields that do not refer to an abstract property can be added\nwithout running into the \"<em>non-default argument follows default argument</em>\"\nexception.</p>\n<p>Therefore, do not define default values, work with <em>initialize functions</em>\ninstead (see Design Pattern below).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span><span class=\"p\">,</span> <span class=\"n\">abstractmethod</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dataclass_abc</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass_abc</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">val1</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n<span class=\"nd\">@dataclass_abc</span><span class=\"p\">(</span><span class=\"n\">frozen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">B</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">):</span>\n    <span class=\"n\">val1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">val2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n<span class=\"c1\"># work with initialize functions when dealing with default values</span>\n<span class=\"k\">def</span> <span class=\"nf\">init_b</span><span class=\"p\">(</span>\n    <span class=\"n\">val1</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">val2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">'default'</span><span class=\"p\">,</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">B</span><span class=\"p\">(</span><span class=\"n\">val1</span><span class=\"o\">=</span><span class=\"n\">val1</span><span class=\"p\">,</span> <span class=\"n\">val2</span><span class=\"o\">=</span><span class=\"n\">val2</span><span class=\"p\">)</span>\n</pre>\n<h2>Example</h2>\n<p>The <a href=\"https://github.com/MichaelSchneeberger/dataclass-abc/tree/master/example\" rel=\"nofollow\">example</a>\nimplements the code snippets taken from <a href=\"https://realpython.com/python-data-classes/\" rel=\"nofollow\">RealPython</a>\nwith abstract properties.</p>\n<h2>Design pattern</h2>\n<p>This library suggests the design pattern as implemented in the\n<a href=\"https://github.com/MichaelSchneeberger/dataclass-abc/tree/master/example\" rel=\"nofollow\">example</a>:</p>\n<ul>\n<li><strong>mixins</strong> - a <em>mixin</em> is an abstract class that implements data as abstract\nproperties and methods based on the abstract properties.</li>\n<li><strong>classes</strong> - an abstract class inherits from one or more mixins\n(see <code>City</code> or <code>CapitalCity</code> in the example). This class is used for pattern matching,\ne.g. using <code>isinstance</code> method.</li>\n<li><strong>impl</strong> - an <em>implementation class</em> implements the abstract properties.\n(see <code>CityImpl</code> or <code>CapitalCityImpl</code> in the example). This class is decorated with\n<code>dataclass_abc</code> and <code>resolve_abc_prop</code> and should always be called through an\n<em>initialize function</em>.</li>\n<li><strong>init</strong> - an <em>initialize function</em> (or <em>constructor function</em>) initializes an\n<em>implementation class</em>.</li>\n</ul>\n\n          </div>"}, "last_serial": 6906788, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d61ba3f82df961f3b3bcf77e77a48900", "sha256": "8800bcd7ca4562bdd158acc086e1e46dd4f59484870de5c6c5b8a7982d079673"}, "downloads": -1, "filename": "dataclass_abc-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d61ba3f82df961f3b3bcf77e77a48900", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6388, "upload_time": "2020-03-22T17:20:33", "upload_time_iso_8601": "2020-03-22T17:20:33.185962Z", "url": "https://files.pythonhosted.org/packages/e7/07/81d51d32a66d5380c445b754346f432c2eb72f10aade7ae9f6eb9424411e/dataclass_abc-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d893e81cec650cf3eac698f2c6a822dc", "sha256": "5ad2f9c0b9bf08dc5254bfaa8b5245c20216126c4ed2f881ab6a4b32d530afe6"}, "downloads": -1, "filename": "dataclass-abc-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d893e81cec650cf3eac698f2c6a822dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2203, "upload_time": "2020-03-22T17:20:35", "upload_time_iso_8601": "2020-03-22T17:20:35.049757Z", "url": "https://files.pythonhosted.org/packages/c9/4c/97c3085b69eb7f4a0e7959f5f81ec166422a11a770c93a641624f6fe70b7/dataclass-abc-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d9ab230b593e0f58a54a2b9e5607aea2", "sha256": "c7b920dfcec2a8d6dc01c7ad1f1050ef01d32e8af58bf97df0c9a4b9c1200ff0"}, "downloads": -1, "filename": "dataclass_abc-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d9ab230b593e0f58a54a2b9e5607aea2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6380, "upload_time": "2020-03-25T16:58:36", "upload_time_iso_8601": "2020-03-25T16:58:36.896556Z", "url": "https://files.pythonhosted.org/packages/43/47/51ecae6bbd200ef90f0fc4dacb1ec77a132f186206ba1b750f8e7a6ae021/dataclass_abc-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "320eeb3f60f2b63e7b0c24de0924e712", "sha256": "a55b5fa8b77adb4950bca97ee7b4887ddb460c1430a5f3a60bc5d075ce2325e8"}, "downloads": -1, "filename": "dataclass-abc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "320eeb3f60f2b63e7b0c24de0924e712", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2391, "upload_time": "2020-03-25T16:58:38", "upload_time_iso_8601": "2020-03-25T16:58:38.010058Z", "url": "https://files.pythonhosted.org/packages/db/4a/e116981c974ef43ace1d839d3bd80ca59d302df51495d34db1791ccb93d1/dataclass-abc-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f0fe45ed8d29ab56ce4f933aada688b4", "sha256": "a6b9a67379755812d3f2990221b9d783be1d0a2dbfe2d700ddb7d07b4db54979"}, "downloads": -1, "filename": "dataclass_abc-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f0fe45ed8d29ab56ce4f933aada688b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7518, "upload_time": "2020-03-29T13:54:21", "upload_time_iso_8601": "2020-03-29T13:54:21.476222Z", "url": "https://files.pythonhosted.org/packages/e3/0e/f71ccea55c7d479316df583a6e03275a6f71d6eff728cd9b64f075dc7ea5/dataclass_abc-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1b84baeeffaf6761fea1539bf1f9f5f", "sha256": "59847950855b8b32cb378f7c06b02fb99487084fb6b173efdfac63dd07165aa0"}, "downloads": -1, "filename": "dataclass_abc-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d1b84baeeffaf6761fea1539bf1f9f5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3377, "upload_time": "2020-03-29T13:54:22", "upload_time_iso_8601": "2020-03-29T13:54:22.814994Z", "url": "https://files.pythonhosted.org/packages/73/5c/6ff5f0d69faa258d05f6c7d84dd84176e3a7f30278b40ac8a8a11d4833f2/dataclass_abc-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3967db1d8478533fa50f02ff88b12d8d", "sha256": "0525650a716ea5a5763f0e5ca6f80f4f64a662133ffbee456ee962d543a8422f"}, "downloads": -1, "filename": "dataclass_abc-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3967db1d8478533fa50f02ff88b12d8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7632, "upload_time": "2020-03-29T14:14:17", "upload_time_iso_8601": "2020-03-29T14:14:17.335886Z", "url": "https://files.pythonhosted.org/packages/9d/5a/cb0be0d82f7e5d2ec218ad9727e38d258c2609bbdba47e93c26da05f7254/dataclass_abc-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9bc5d3911d7a28f9b5f8d3c2107cd63", "sha256": "109efa956aaf892af039065b53b84ecb183b758c8839e876db297d45208b894e"}, "downloads": -1, "filename": "dataclass_abc-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d9bc5d3911d7a28f9b5f8d3c2107cd63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3688, "upload_time": "2020-03-29T14:14:18", "upload_time_iso_8601": "2020-03-29T14:14:18.232165Z", "url": "https://files.pythonhosted.org/packages/2a/2c/841b2973126fb5d53fac9e0482ac26a6db0292c070b7a21b003516313ead/dataclass_abc-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3967db1d8478533fa50f02ff88b12d8d", "sha256": "0525650a716ea5a5763f0e5ca6f80f4f64a662133ffbee456ee962d543a8422f"}, "downloads": -1, "filename": "dataclass_abc-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3967db1d8478533fa50f02ff88b12d8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7632, "upload_time": "2020-03-29T14:14:17", "upload_time_iso_8601": "2020-03-29T14:14:17.335886Z", "url": "https://files.pythonhosted.org/packages/9d/5a/cb0be0d82f7e5d2ec218ad9727e38d258c2609bbdba47e93c26da05f7254/dataclass_abc-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9bc5d3911d7a28f9b5f8d3c2107cd63", "sha256": "109efa956aaf892af039065b53b84ecb183b758c8839e876db297d45208b894e"}, "downloads": -1, "filename": "dataclass_abc-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d9bc5d3911d7a28f9b5f8d3c2107cd63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3688, "upload_time": "2020-03-29T14:14:18", "upload_time_iso_8601": "2020-03-29T14:14:18.232165Z", "url": "https://files.pythonhosted.org/packages/2a/2c/841b2973126fb5d53fac9e0482ac26a6db0292c070b7a21b003516313ead/dataclass_abc-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:28 2020"}