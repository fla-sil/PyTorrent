{"info": {"author": "Chris Warrick", "author_email": "chris@chriswarrick.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Multimedia :: Sound/Audio :: Players"], "description": "Terminal Think Music\n====================\n\nAre you executing a process that takes a long time?  Do you want to know that it\u2019s\nstill working while you are in another terminal/making coffee?  Do you have a\nfavorite game show tune to play while doing something?\n\nIf yes: ``think`` is just for you.\n\nInstallation\n------------\n\nYou can install ``think`` from PyPI (with ``pip install think``). Arch Linux\nusers can install the ``think`` package from the AUR.\n\nConfiguration\n-------------\n\nCreate a file named ``~/.config/think.conf`` (or wherever your ``XDG_CONFIG_HOME`` is) with the following four lines::\n\n    [Think]\n    command = play\n    file = /home/kwpolska/Dropbox/Media/Wielka Gra.mp3\n    behavior = wait\n\n* ``command`` is the command of the player that will be executed.  You can use\n  ``play`` (from ``sox``) or any other fast CLI music player.\n* ``file`` is the filename that will be given as the sole argument to the play command. No escaping is necessary. I\u2019m using the `Wielka Gra <https://www.youtube.com/watch?v=Nnu7I3b7ZbY>`__ theme, Americans might want `Jeopardy! Think Music <https://www.youtube.com/watch?v=vXGhvoekY44>`__ (also the namesake for this command), Brits might want the `Countdown theme <https://www.youtube.com/watch?v=M2dhD9zR6hk>`__.\n* ``behavior`` can be one of:\n\n  * ``return`` \u2014 return control to the terminal as soon as the program finishes, without stopping the music\n  * ``wait`` \u2014 wait until music stops before returning control\n  * ``stop`` \u2014 stop the music and return control immediately\n\nUsage\n-----\n\nPrepend ``think`` before the command that takes too long to execute::\n\n    think sleep 120", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kwpolska/think", "keywords": "think music,Jeopardy!,game show", "license": "3-clause BSD", "maintainer": null, "maintainer_email": null, "name": "think", "package_url": "https://pypi.org/project/think/", "platform": "POSIX", "project_url": "https://pypi.org/project/think/", "project_urls": {"Homepage": "https://github.com/Kwpolska/think"}, "release_url": "https://pypi.org/project/think/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Terminal Think Music", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Are you executing a process that takes a long time?  Do you want to know that it\u2019s\nstill working while you are in another terminal/making coffee?  Do you have a\nfavorite game show tune to play while doing something?</p>\n<p>If yes: <tt>think</tt> is just for you.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt>think</tt> from PyPI (with <tt>pip install think</tt>). Arch Linux\nusers can install the <tt>think</tt> package from the AUR.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Create a file named <tt><span class=\"pre\">~/.config/think.conf</span></tt> (or wherever your <tt>XDG_CONFIG_HOME</tt> is) with the following four lines:</p>\n<pre>[Think]\ncommand = play\nfile = /home/kwpolska/Dropbox/Media/Wielka Gra.mp3\nbehavior = wait\n</pre>\n<ul>\n<li><tt>command</tt> is the command of the player that will be executed.  You can use\n<tt>play</tt> (from <tt>sox</tt>) or any other fast CLI music player.</li>\n<li><tt>file</tt> is the filename that will be given as the sole argument to the play command. No escaping is necessary. I\u2019m using the <a href=\"https://www.youtube.com/watch?v=Nnu7I3b7ZbY\" rel=\"nofollow\">Wielka Gra</a> theme, Americans might want <a href=\"https://www.youtube.com/watch?v=vXGhvoekY44\" rel=\"nofollow\">Jeopardy! Think Music</a> (also the namesake for this command), Brits might want the <a href=\"https://www.youtube.com/watch?v=M2dhD9zR6hk\" rel=\"nofollow\">Countdown theme</a>.</li>\n<li><tt>behavior</tt> can be one of:<ul>\n<li><tt>return</tt> \u2014 return control to the terminal as soon as the program finishes, without stopping the music</li>\n<li><tt>wait</tt> \u2014 wait until music stops before returning control</li>\n<li><tt>stop</tt> \u2014 stop the music and return control immediately</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Prepend <tt>think</tt> before the command that takes too long to execute:</p>\n<pre>think sleep 120\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1585018, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "05665758194ee027331673daddfcafb6", "sha256": "a748c73a0e88da97c0b0d82950006758c44736b2440a3936e9f78c4ce9756abc"}, "downloads": -1, "filename": "think-0.1.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "05665758194ee027331673daddfcafb6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5576, "upload_time": "2015-05-29T19:11:57", "upload_time_iso_8601": "2015-05-29T19:11:57.428412Z", "url": "https://files.pythonhosted.org/packages/b2/28/4a96a790a376f14e3ba1e055d01dbe2e456edc3ccc1631bf89b1bfd527f5/think-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d5f931942326f6b3e2f520ddcdd0808", "sha256": "7184e9f679b0d6b0bcb306a81e2130e9ad93d420d010b3225a34c0d90a38f83f"}, "downloads": -1, "filename": "think-0.1.0.tar.gz", "has_sig": true, "md5_digest": "4d5f931942326f6b3e2f520ddcdd0808", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6249, "upload_time": "2015-05-29T19:12:01", "upload_time_iso_8601": "2015-05-29T19:12:01.129697Z", "url": "https://files.pythonhosted.org/packages/5e/3f/eebe076087640be7a4eea625668912416702c338840ed5d7f000e2940275/think-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "01431cedd3bc472bc22579e84c72e9d7", "sha256": "16f77b2dcf6d259a0303f825c6ec6721e967854d95bb477198591682d7ed0ec4"}, "downloads": -1, "filename": "think-0.1.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "01431cedd3bc472bc22579e84c72e9d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5756, "upload_time": "2015-05-31T16:45:48", "upload_time_iso_8601": "2015-05-31T16:45:48.573370Z", "url": "https://files.pythonhosted.org/packages/99/c1/906c9da5dd046a9e8e0dfd91dec23d381684cc7f93551ade96e271048ad4/think-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aa19f2add8f11e3d51a21075a8d2f38", "sha256": "4630c3da6292982c9e9a642f65584b9b956a3542b805bae58e23108768572e8d"}, "downloads": -1, "filename": "think-0.1.1.tar.gz", "has_sig": true, "md5_digest": "9aa19f2add8f11e3d51a21075a8d2f38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6408, "upload_time": "2015-05-31T16:45:53", "upload_time_iso_8601": "2015-05-31T16:45:53.019528Z", "url": "https://files.pythonhosted.org/packages/ad/34/6fe7cda675fafac053525590425c5a19694ee29063a3630943a0885142c6/think-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "588c22d6178d764b5154dfee9b138c1b", "sha256": "66303f86e56cba1e01b340cb65b9bcd20d7862fa587627d1d37376bfaaeeca10"}, "downloads": -1, "filename": "think-0.1.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "588c22d6178d764b5154dfee9b138c1b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5776, "upload_time": "2015-06-09T15:13:51", "upload_time_iso_8601": "2015-06-09T15:13:51.797314Z", "url": "https://files.pythonhosted.org/packages/05/d7/f78b60fec19e0aee2f823178a9d6b680adfd8e8985da2c08ca6ecd8b50b7/think-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "718724c66abb7be7ec5382651a0be8a9", "sha256": "979645af77469cfa3c0bd8093c9e969149ebfb9e3e3fc3f16ed03a708d4e1e81"}, "downloads": -1, "filename": "think-0.1.2.tar.gz", "has_sig": true, "md5_digest": "718724c66abb7be7ec5382651a0be8a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6695, "upload_time": "2015-06-09T15:13:55", "upload_time_iso_8601": "2015-06-09T15:13:55.691018Z", "url": "https://files.pythonhosted.org/packages/ba/83/b609c0dc8433a6fd7ef9578cc860ffc258a5443892ba263f0aa053fdd0d6/think-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "588c22d6178d764b5154dfee9b138c1b", "sha256": "66303f86e56cba1e01b340cb65b9bcd20d7862fa587627d1d37376bfaaeeca10"}, "downloads": -1, "filename": "think-0.1.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "588c22d6178d764b5154dfee9b138c1b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5776, "upload_time": "2015-06-09T15:13:51", "upload_time_iso_8601": "2015-06-09T15:13:51.797314Z", "url": "https://files.pythonhosted.org/packages/05/d7/f78b60fec19e0aee2f823178a9d6b680adfd8e8985da2c08ca6ecd8b50b7/think-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "718724c66abb7be7ec5382651a0be8a9", "sha256": "979645af77469cfa3c0bd8093c9e969149ebfb9e3e3fc3f16ed03a708d4e1e81"}, "downloads": -1, "filename": "think-0.1.2.tar.gz", "has_sig": true, "md5_digest": "718724c66abb7be7ec5382651a0be8a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6695, "upload_time": "2015-06-09T15:13:55", "upload_time_iso_8601": "2015-06-09T15:13:55.691018Z", "url": "https://files.pythonhosted.org/packages/ba/83/b609c0dc8433a6fd7ef9578cc860ffc258a5443892ba263f0aa053fdd0d6/think-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:56 2020"}