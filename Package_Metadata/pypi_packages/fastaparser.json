{"info": {"author": "Pedro HC David, https://github.com/Kronopt", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# FastaParser\n\n[![python versions](https://img.shields.io/pypi/pyversions/fastaparser \"supported python versions\")](https://pypi.org/project/fastaparser)\n[![build status](https://github.com/Kronopt/FastaParser/workflows/CI/badge.svg \"build status\")](https://github.com/Kronopt/FastaParser/actions?query=workflow%3ACI)\n[![coverage](https://codecov.io/gh/Kronopt/FastaParser/branch/master/graph/badge.svg \"code coverage\")](https://codecov.io/gh/Kronopt/FastaParser)\n[![docs status](https://readthedocs.org/projects/fastaparser/badge/?version=latest \"documentation build status\")](https://fastaparser.readthedocs.io/en/latest/)\n[![license](https://img.shields.io/pypi/l/fastaparser \"license\")](https://github.com/Kronopt/fastaparser/blob/master/LICENSE)\n\n[![pypi](https://img.shields.io/pypi/v/fastaparser \"pypi package\")](https://pypi.org/project/fastaparser)\n[![pypi downloads](https://img.shields.io/pypi/dm/fastaparser \"pypi downloads\")](https://pypi.org/project/fastaparser)\n\n[![anaconda](https://anaconda.org/kronopt/fastaparser/badges/version.svg \"conda package\")](https://anaconda.org/Kronopt/fastaparser)\n[![anaconda downloads](https://img.shields.io/conda/dn/Kronopt/fastaparser \"anaconda downloads\")](https://anaconda.org/Kronopt/fastaparser)\n\nA Python FASTA file Parser and Writer.\n\nThe FASTA file format is a standard text-based format for representing nucleotide and aminoacid sequences\n(usual file extensions include: .fasta, .fna, .ffn, .faa and .frn).\nFastaParser is able to parse such files and extract the biological sequences within into Python objects.\nIt can also handle and manipulate such sequences as well as write sequences to new or existing FASTA files.\n\n## Installation\n\nAt the command line,\n\nwith `pip`:\n```sh\n$ pip install fastaparser\n```\n\nor `conda`:\n```sh\n$ conda install -c kronopt fastaparser\n```\n\n## Usage\n\n### Read FASTA files\nGenerate python objects from FASTA files:\n\n```Python\n>>> import fastaparser\n>>> with open(\"fasta_file.fasta\") as fasta_file:\n        parser = fastaparser.Reader(fasta_file)\n        for seq in parser:\n            # seq is a FastaSequence object\n            print('ID:', seq.id)\n            print('Description:', seq.description)\n            print('Sequence:', seq.sequence_as_string())\n            print()\n```\noutput:\n```\nID: sp|P04439|HLAA_HUMAN\nDescription: HLA class I histocompatibility antigen, A alpha chain OS=Homo sapi...\nSequence: MAVMAPRTLLLLLSGALALTQTWAGSHSMRYFFTSVSRPGRGEPRFIAVGYVDDTQFVRFDSDAASQRM...\n\nID: sp|P15822|ZEP1_HUMAN\nDescription: Zinc finger protein 40 OS=Homo sapiens OX=9606 GN=HIVEP1 PE=1 SV=3...\nSequence: MPRTKQIHPRNLRDKIEEAQKELNGAEVSKKEILQAGVKGTSESLKGVKRKKIVAENHLKKIPKSPLRN...\n```\n\nor just parse FASTA headers and sequences, which is much faster but less feature rich:\n```Python\n>>> import fastaparser\n>>> with open(\"fasta_file.fasta\") as fasta_file:\n        parser = fastaparser.Reader(fasta_file, parse_method='quick')\n        for seq in parser:\n            # seq is a namedtuple('Fasta', ['header', 'sequence'])\n            print('Header:', seq.header)\n            print('Sequence:', seq.sequence)\n            print()\n```\noutput:\n```\nHeader: >sp|P04439|HLAA_HUMAN HLA class I histocompatibility antigen, A alpha c...\nSequence: MAVMAPRTLLLLLSGALALTQTWAGSHSMRYFFTSVSRPGRGEPRFIAVGYVDDTQFVRFDSDAASQRM...\n\nHeader: >sp|P15822|ZEP1_HUMAN Zinc finger protein 40 OS=Homo sapiens OX=9606 GN...\nSequence: MPRTKQIHPRNLRDKIEEAQKELNGAEVSKKEILQAGVKGTSESLKGVKRKKIVAENHLKKIPKSPLRN...\n```\n\n### Write FASTA files\nCreate FASTA files from FastaSequence objects:\n```Python\n>>> import fastaparser\n>>> with open(\"fasta_file.fasta\", 'w') as fasta_file:\n        writer = fastaparser.Writer(fasta_file)\n        fasta_sequence = fastaparser.FastaSequence(\n            sequence='ACTGCTGCTAGCTAGC',\n            id='id123',\n            description='test sequence'\n        )\n        writer.writefasta(fasta_sequence)\n```\nor single header and sequence strings:\n```Python\n>>> import fastaparser\n>>> with open(\"fasta_file.fasta\", 'w') as fasta_file:\n        writer = fastaparser.Writer(fasta_file)\n        writer.writefasta(('id123 test sequence', 'ACTGCTGCTAGCTAGC'))\n```\n\n## Documentation\nDocumentation for FastaParser is available here: [https://fastaparser.readthedocs.io/en/latest](https://fastaparser.readthedocs.io/en/latest/)\n\n## History\n\n### 1.1 (13-02-2020)\n* Added property setters for:\n    * FastaSequence.id\n    * FastaSequence.description\n* Added property deleters for:\n    * FastaSequence.id\n    * FastaSequence.description\n    * FastaSequence.sequence_type\n    * LetterCode.letter_type\n\n### 1.0 (27-01-2020)\n* First release on PyPI and Anaconda Cloud\n* Reader, Writer, FastaSequence and LetterCode classes\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kronopt/FastaParser", "keywords": "fasta parser fasta-parser fasta-writer", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "fastaparser", "package_url": "https://pypi.org/project/fastaparser/", "platform": "", "project_url": "https://pypi.org/project/fastaparser/", "project_urls": {"Documentation": "https://fastaparser.readthedocs.io/en/latest/", "Homepage": "https://github.com/Kronopt/FastaParser"}, "release_url": "https://pypi.org/project/fastaparser/1.1/", "requires_dist": null, "requires_python": "", "summary": "A Python FASTA file Parser and Writer.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FastaParser</h1>\n<p><a href=\"https://pypi.org/project/fastaparser\" rel=\"nofollow\"><img alt=\"python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13e5ece22b742a8971d076fabae7f68049997bad/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6661737461706172736572\"></a>\n<a href=\"https://github.com/Kronopt/FastaParser/actions?query=workflow%3ACI\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/719f5fd2f282fcc317a7d91277e784267a01c112/68747470733a2f2f6769746875622e636f6d2f4b726f6e6f70742f46617374615061727365722f776f726b666c6f77732f43492f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/Kronopt/FastaParser\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4bdbf5e88f1129f8e8b304d39779c689f98aac5d/68747470733a2f2f636f6465636f762e696f2f67682f4b726f6e6f70742f46617374615061727365722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://fastaparser.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"docs status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a772909d87c7dd4e89e3227fb336510ff554adb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66617374617061727365722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/Kronopt/fastaparser/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/434e4beebeb8c9f05b3a177b266b4d8b17d0d30b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6661737461706172736572\"></a></p>\n<p><a href=\"https://pypi.org/project/fastaparser\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf94ad3e8cbd3c56609a9533eefd537d5c714831/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6661737461706172736572\"></a>\n<a href=\"https://pypi.org/project/fastaparser\" rel=\"nofollow\"><img alt=\"pypi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2248cc7bfd082ab6867d5f450b188917aebdb8c4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6661737461706172736572\"></a></p>\n<p><a href=\"https://anaconda.org/Kronopt/fastaparser\" rel=\"nofollow\"><img alt=\"anaconda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff162e7dc10b194def19826b4b41dc8b757c7eec/68747470733a2f2f616e61636f6e64612e6f72672f6b726f6e6f70742f66617374617061727365722f6261646765732f76657273696f6e2e737667\"></a>\n<a href=\"https://anaconda.org/Kronopt/fastaparser\" rel=\"nofollow\"><img alt=\"anaconda downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5f693c160fd6898ee52c77fe12bae2f2043ac0b/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f646e2f4b726f6e6f70742f6661737461706172736572\"></a></p>\n<p>A Python FASTA file Parser and Writer.</p>\n<p>The FASTA file format is a standard text-based format for representing nucleotide and aminoacid sequences\n(usual file extensions include: .fasta, .fna, .ffn, .faa and .frn).\nFastaParser is able to parse such files and extract the biological sequences within into Python objects.\nIt can also handle and manipulate such sequences as well as write sequences to new or existing FASTA files.</p>\n<h2>Installation</h2>\n<p>At the command line,</p>\n<p>with <code>pip</code>:</p>\n<pre>$ pip install fastaparser\n</pre>\n<p>or <code>conda</code>:</p>\n<pre>$ conda install -c kronopt fastaparser\n</pre>\n<h2>Usage</h2>\n<h3>Read FASTA files</h3>\n<p>Generate python objects from FASTA files:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">fastaparser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"fasta_file.fasta\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fasta_file</span><span class=\"p\">:</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">fastaparser</span><span class=\"o\">.</span><span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"n\">fasta_file</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">seq</span> <span class=\"ow\">in</span> <span class=\"n\">parser</span><span class=\"p\">:</span>\n            <span class=\"c1\"># seq is a FastaSequence object</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ID:'</span><span class=\"p\">,</span> <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Description:'</span><span class=\"p\">,</span> <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Sequence:'</span><span class=\"p\">,</span> <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence_as_string</span><span class=\"p\">())</span>\n            <span class=\"nb\">print</span><span class=\"p\">()</span>\n</pre>\n<p>output:</p>\n<pre><code>ID: sp|P04439|HLAA_HUMAN\nDescription: HLA class I histocompatibility antigen, A alpha chain OS=Homo sapi...\nSequence: MAVMAPRTLLLLLSGALALTQTWAGSHSMRYFFTSVSRPGRGEPRFIAVGYVDDTQFVRFDSDAASQRM...\n\nID: sp|P15822|ZEP1_HUMAN\nDescription: Zinc finger protein 40 OS=Homo sapiens OX=9606 GN=HIVEP1 PE=1 SV=3...\nSequence: MPRTKQIHPRNLRDKIEEAQKELNGAEVSKKEILQAGVKGTSESLKGVKRKKIVAENHLKKIPKSPLRN...\n</code></pre>\n<p>or just parse FASTA headers and sequences, which is much faster but less feature rich:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">fastaparser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"fasta_file.fasta\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fasta_file</span><span class=\"p\">:</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">fastaparser</span><span class=\"o\">.</span><span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"n\">fasta_file</span><span class=\"p\">,</span> <span class=\"n\">parse_method</span><span class=\"o\">=</span><span class=\"s1\">'quick'</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">seq</span> <span class=\"ow\">in</span> <span class=\"n\">parser</span><span class=\"p\">:</span>\n            <span class=\"c1\"># seq is a namedtuple('Fasta', ['header', 'sequence'])</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Header:'</span><span class=\"p\">,</span> <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Sequence:'</span><span class=\"p\">,</span> <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">()</span>\n</pre>\n<p>output:</p>\n<pre><code>Header: &gt;sp|P04439|HLAA_HUMAN HLA class I histocompatibility antigen, A alpha c...\nSequence: MAVMAPRTLLLLLSGALALTQTWAGSHSMRYFFTSVSRPGRGEPRFIAVGYVDDTQFVRFDSDAASQRM...\n\nHeader: &gt;sp|P15822|ZEP1_HUMAN Zinc finger protein 40 OS=Homo sapiens OX=9606 GN...\nSequence: MPRTKQIHPRNLRDKIEEAQKELNGAEVSKKEILQAGVKGTSESLKGVKRKKIVAENHLKKIPKSPLRN...\n</code></pre>\n<h3>Write FASTA files</h3>\n<p>Create FASTA files from FastaSequence objects:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">fastaparser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"fasta_file.fasta\"</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fasta_file</span><span class=\"p\">:</span>\n        <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">fastaparser</span><span class=\"o\">.</span><span class=\"n\">Writer</span><span class=\"p\">(</span><span class=\"n\">fasta_file</span><span class=\"p\">)</span>\n        <span class=\"n\">fasta_sequence</span> <span class=\"o\">=</span> <span class=\"n\">fastaparser</span><span class=\"o\">.</span><span class=\"n\">FastaSequence</span><span class=\"p\">(</span>\n            <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"s1\">'ACTGCTGCTAGCTAGC'</span><span class=\"p\">,</span>\n            <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'id123'</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'test sequence'</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">writefasta</span><span class=\"p\">(</span><span class=\"n\">fasta_sequence</span><span class=\"p\">)</span>\n</pre>\n<p>or single header and sequence strings:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">fastaparser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"fasta_file.fasta\"</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fasta_file</span><span class=\"p\">:</span>\n        <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">fastaparser</span><span class=\"o\">.</span><span class=\"n\">Writer</span><span class=\"p\">(</span><span class=\"n\">fasta_file</span><span class=\"p\">)</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">writefasta</span><span class=\"p\">((</span><span class=\"s1\">'id123 test sequence'</span><span class=\"p\">,</span> <span class=\"s1\">'ACTGCTGCTAGCTAGC'</span><span class=\"p\">))</span>\n</pre>\n<h2>Documentation</h2>\n<p>Documentation for FastaParser is available here: <a href=\"https://fastaparser.readthedocs.io/en/latest/\" rel=\"nofollow\">https://fastaparser.readthedocs.io/en/latest</a></p>\n<h2>History</h2>\n<h3>1.1 (13-02-2020)</h3>\n<ul>\n<li>Added property setters for:\n<ul>\n<li>FastaSequence.id</li>\n<li>FastaSequence.description</li>\n</ul>\n</li>\n<li>Added property deleters for:\n<ul>\n<li>FastaSequence.id</li>\n<li>FastaSequence.description</li>\n<li>FastaSequence.sequence_type</li>\n<li>LetterCode.letter_type</li>\n</ul>\n</li>\n</ul>\n<h3>1.0 (27-01-2020)</h3>\n<ul>\n<li>First release on PyPI and Anaconda Cloud</li>\n<li>Reader, Writer, FastaSequence and LetterCode classes</li>\n</ul>\n\n          </div>"}, "last_serial": 6622567, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "705c41a5e3c78a0277a13f421b95186d", "sha256": "cf9c6c371c5807f5dbfb0fbf9a3ac4a4e978c756ea41f1efb792a780d36eaf48"}, "downloads": -1, "filename": "fastaparser-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "705c41a5e3c78a0277a13f421b95186d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28290, "upload_time": "2020-01-27T19:17:05", "upload_time_iso_8601": "2020-01-27T19:17:05.128543Z", "url": "https://files.pythonhosted.org/packages/94/42/728dd7b07da3dd8df8792bbdc42a96159504b0f3d132a44bafad903d7024/fastaparser-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b106e2a8b9711d85c5dfc4136790dde", "sha256": "35a40504351db7460681aea671a21d5005c2921cfe0c9c42cc259a0f08aee0a5"}, "downloads": -1, "filename": "fastaparser-1.0.tar.gz", "has_sig": false, "md5_digest": "7b106e2a8b9711d85c5dfc4136790dde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13331, "upload_time": "2020-01-27T19:17:07", "upload_time_iso_8601": "2020-01-27T19:17:07.534478Z", "url": "https://files.pythonhosted.org/packages/0a/a1/fc10622ce1a149e285f8249b128d659e44621db791035d0e9c590a752789/fastaparser-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "b660d6a895edcdbd524af7241087066f", "sha256": "f3c2abf142a605d5205ec8cc4cfa06152c152f8c8629c437ef72fbc03bef1aa1"}, "downloads": -1, "filename": "fastaparser-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b660d6a895edcdbd524af7241087066f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29753, "upload_time": "2020-02-13T10:51:55", "upload_time_iso_8601": "2020-02-13T10:51:55.090705Z", "url": "https://files.pythonhosted.org/packages/05/0a/fbab5288782d700d04375b8227800dd8cbc176e9f5327bea4e336da579fd/fastaparser-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3df58ff673a6e3d6e1ff94937378a92e", "sha256": "fe21809411ad571f6a18c5bb8226bdfb52da250f4e812c0c4f76a0f1bc8bf011"}, "downloads": -1, "filename": "fastaparser-1.1.tar.gz", "has_sig": false, "md5_digest": "3df58ff673a6e3d6e1ff94937378a92e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15500, "upload_time": "2020-02-13T10:51:56", "upload_time_iso_8601": "2020-02-13T10:51:56.763415Z", "url": "https://files.pythonhosted.org/packages/2f/52/5ea312a0b2f7adfaf0f30e33d55945acc269d0a4418a0904245709acdf24/fastaparser-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b660d6a895edcdbd524af7241087066f", "sha256": "f3c2abf142a605d5205ec8cc4cfa06152c152f8c8629c437ef72fbc03bef1aa1"}, "downloads": -1, "filename": "fastaparser-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b660d6a895edcdbd524af7241087066f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29753, "upload_time": "2020-02-13T10:51:55", "upload_time_iso_8601": "2020-02-13T10:51:55.090705Z", "url": "https://files.pythonhosted.org/packages/05/0a/fbab5288782d700d04375b8227800dd8cbc176e9f5327bea4e336da579fd/fastaparser-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3df58ff673a6e3d6e1ff94937378a92e", "sha256": "fe21809411ad571f6a18c5bb8226bdfb52da250f4e812c0c4f76a0f1bc8bf011"}, "downloads": -1, "filename": "fastaparser-1.1.tar.gz", "has_sig": false, "md5_digest": "3df58ff673a6e3d6e1ff94937378a92e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15500, "upload_time": "2020-02-13T10:51:56", "upload_time_iso_8601": "2020-02-13T10:51:56.763415Z", "url": "https://files.pythonhosted.org/packages/2f/52/5ea312a0b2f7adfaf0f30e33d55945acc269d0a4418a0904245709acdf24/fastaparser-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:40 2020"}