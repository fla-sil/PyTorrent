{"info": {"author": "Chad Gallemore", "author_email": "cgallemore@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "======\ndjvasa\n======\n\n.. image:: https://secure.travis-ci.org/cgallemore/djvasa.png\n\n(Dj)ango - (Va)grant - (Sa)ltStack\n\nIn an effort to learn about Vagrant and SaltStack I had the idea to create a tool to help me initialize Django\nprojects more efficiently, this is the result.  Djvasa is a command line tool to help you rapidly create a Django\nproject for use with Vagrant.  In addition, the Vagrant environment can be provisioned with certain tools typical\nto a Django project ready for use.  The provisioning is handled with SaltStack.\n\nThe following guide assumes you already have Vagrant and VirtualBox installed and that you have the salty-vagrant\nplugin installed.  If you have Vagrant and VirtualBox already, but need the plugin, you can install like so:\n\n::\n\n    >> vagrant plugin install vagrant-salt\n\nQuick Start\n-----------\n\n::\n\n    >> pip install djvasa\n    >> djvasa --postgres\n    What's the name of your project? foobar\n    What's your full name? Chad Gallemore\n    What's your email? cgallemore@gmail.com\n\n    >> cd foobar\n    >> vagrant up\n    >> vagrant ssh\n    >> . .virtualenvs/{{project_name}}/bin/activate && cd /vagrant\n    >> python manage.py syncdb\n    >> python manage.py runserver 0.0.0.0:8000\n    >> Go to http://localhost:8000\n    >> Prosper...\n\nThe above creates your basic Django project and provisions your virtual environment so you can start development.  Once\nyou shell into your vagrant environment the motd will provide you instructions on how to activate your virtualenv\nand run your server.\n\nOptions\n=======\nCurrently djvasa provides two database options, mysql or postgres, as well as an option to setup your project for deployment\nto Heroku.  By default the project is initialized for git usage and creates a .gitignore file, but if you wish to use\nmercurial there is a flag for enabling mercurial\n\n::\n\n    >> djvasa -h\n    usage: djvasa [-h] [--heroku] [--mysql] [--postgres] [--hg]\n\n    optional arguments:\n    -h, --help  show this help message and exit\n    --heroku    Initialize the project for deployment to Heroku.\n    --mysql     Initialize the project with MySQL.\n    --postgres  Initialize the project with Postgres.\n    --hg        Initialize project for mercurial.\n\n::\n\n    >> djvasa --mysql\n\n\nHeroku\n------\nDjvasa provides an option to set your project up for deployment to Heroku.  Since Heroku uses Postgres as the database,\npostgres will automatically be enabled for your project.  Your settings file will contain the necessary Heroku\nrequirements.  Below is an example:\n\n::\n\n    >> djvasa --heroku\n    What's the name of your project? foobar\n    What's your full name? Chad Gallemore\n    What's your email? cgallemore@gmail.com\n\n    >> cd foobar\n    >> git init\n    >> git add .\n    >> git ci -m\"my django app\"\n    >> heroku create\n    >> git push heroku master\n    >> heroku run python manage.py syncdb\n    >> heroku open", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cgallemore/djvasa", "keywords": "terminal django vagrant saltstack cli", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "djvasa", "package_url": "https://pypi.org/project/djvasa/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djvasa/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cgallemore/djvasa"}, "release_url": "https://pypi.org/project/djvasa/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Initialize a new Django project with Vagrant for easy start", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://secure.travis-ci.org/cgallemore/djvasa.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca321e940c7da3c8334dfac64eb3cef856e418bb/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6367616c6c656d6f72652f646a766173612e706e67\">\n<p>(Dj)ango - (Va)grant - (Sa)ltStack</p>\n<p>In an effort to learn about Vagrant and SaltStack I had the idea to create a tool to help me initialize Django\nprojects more efficiently, this is the result.  Djvasa is a command line tool to help you rapidly create a Django\nproject for use with Vagrant.  In addition, the Vagrant environment can be provisioned with certain tools typical\nto a Django project ready for use.  The provisioning is handled with SaltStack.</p>\n<p>The following guide assumes you already have Vagrant and VirtualBox installed and that you have the salty-vagrant\nplugin installed.  If you have Vagrant and VirtualBox already, but need the plugin, you can install like so:</p>\n<pre>&gt;&gt; vagrant plugin install vagrant-salt\n</pre>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<pre>&gt;&gt; pip install djvasa\n&gt;&gt; djvasa --postgres\nWhat's the name of your project? foobar\nWhat's your full name? Chad Gallemore\nWhat's your email? cgallemore@gmail.com\n\n&gt;&gt; cd foobar\n&gt;&gt; vagrant up\n&gt;&gt; vagrant ssh\n&gt;&gt; . .virtualenvs/{{project_name}}/bin/activate &amp;&amp; cd /vagrant\n&gt;&gt; python manage.py syncdb\n&gt;&gt; python manage.py runserver 0.0.0.0:8000\n&gt;&gt; Go to http://localhost:8000\n&gt;&gt; Prosper...\n</pre>\n<p>The above creates your basic Django project and provisions your virtual environment so you can start development.  Once\nyou shell into your vagrant environment the motd will provide you instructions on how to activate your virtualenv\nand run your server.</p>\n<div id=\"options\">\n<h3>Options</h3>\n<p>Currently djvasa provides two database options, mysql or postgres, as well as an option to setup your project for deployment\nto Heroku.  By default the project is initialized for git usage and creates a .gitignore file, but if you wish to use\nmercurial there is a flag for enabling mercurial</p>\n<pre>&gt;&gt; djvasa -h\nusage: djvasa [-h] [--heroku] [--mysql] [--postgres] [--hg]\n\noptional arguments:\n-h, --help  show this help message and exit\n--heroku    Initialize the project for deployment to Heroku.\n--mysql     Initialize the project with MySQL.\n--postgres  Initialize the project with Postgres.\n--hg        Initialize project for mercurial.\n</pre>\n<pre>&gt;&gt; djvasa --mysql\n</pre>\n</div>\n</div>\n<div id=\"heroku\">\n<h2>Heroku</h2>\n<p>Djvasa provides an option to set your project up for deployment to Heroku.  Since Heroku uses Postgres as the database,\npostgres will automatically be enabled for your project.  Your settings file will contain the necessary Heroku\nrequirements.  Below is an example:</p>\n<pre>&gt;&gt; djvasa --heroku\nWhat's the name of your project? foobar\nWhat's your full name? Chad Gallemore\nWhat's your email? cgallemore@gmail.com\n\n&gt;&gt; cd foobar\n&gt;&gt; git init\n&gt;&gt; git add .\n&gt;&gt; git ci -m\"my django app\"\n&gt;&gt; heroku create\n&gt;&gt; git push heroku master\n&gt;&gt; heroku run python manage.py syncdb\n&gt;&gt; heroku open\n</pre>\n</div>\n\n          </div>"}, "last_serial": 807655, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b63545424868b8062e538faa5c11e6df", "sha256": "b9325a37d60970041b231609675c29dd78e86153fd3c32d9dd0b6f927ce44b97"}, "downloads": -1, "filename": "djvasa-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b63545424868b8062e538faa5c11e6df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12702, "upload_time": "2013-06-20T02:21:24", "upload_time_iso_8601": "2013-06-20T02:21:24.879626Z", "url": "https://files.pythonhosted.org/packages/b4/e7/28d786f010dc16490349fba82dd363118559b1d7bb0c5e172d68755e9971/djvasa-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cfd795bd3f6832fcde574bffcfaebdf4", "sha256": "a2e4e55f4487339b7cd962223106a95cc97a1eb729772891e0173e04f1e69317"}, "downloads": -1, "filename": "djvasa-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cfd795bd3f6832fcde574bffcfaebdf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12765, "upload_time": "2013-07-04T00:50:20", "upload_time_iso_8601": "2013-07-04T00:50:20.625828Z", "url": "https://files.pythonhosted.org/packages/f2/76/9ff3343290aa8fa7be5588d40f796d6f21796aa08352bc0b2f8fa3141e43/djvasa-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfd795bd3f6832fcde574bffcfaebdf4", "sha256": "a2e4e55f4487339b7cd962223106a95cc97a1eb729772891e0173e04f1e69317"}, "downloads": -1, "filename": "djvasa-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cfd795bd3f6832fcde574bffcfaebdf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12765, "upload_time": "2013-07-04T00:50:20", "upload_time_iso_8601": "2013-07-04T00:50:20.625828Z", "url": "https://files.pythonhosted.org/packages/f2/76/9ff3343290aa8fa7be5588d40f796d6f21796aa08352bc0b2f8fa3141e43/djvasa-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:24 2020"}