{"info": {"author": "Petr Glotov", "author_email": "pglotov@yahoo.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "========================================\ndjango rest framework geojson serializer\n========================================\n\nDRF geojson serializer is a decorator which allows to format data as geojson http://geojson.org\n\n\nQuick start\n-------------\nGeojson serializer works with django rest framework as a decorator.\n\n1. Add django-geojson_serializer to your INSTALLED_APPS setting like this:\n   ::\n\n      INSTALLED_APPS = [\n      ....\n      'django-geojson_serializer'\n      ]\n\n2. In your code you can use :code:`geojson_serializer(<name-of-geo-field>)` decorator with a regualar serializer, e.g.:\n   ::\n\n     from geojson_serializer.serializers import geojson_serializer\n\n\n     class City(models.Model):\n         name = models.CharField(max_length=128)\n         location = models.PointField()\n\n\n     @geojson_serializer('location')\n     class CitySerializer(serializers.ModelSerializer):\n         class Meta:\n             model = City\n             fields =['name', 'location']\n\n\n     class CityViewSet(viewsets.ModelViewSet):\n         queryset = City.objects.all()\n         serializer_class = CitySerializer\n\n\nThen you can register CityViewSet with a router and the view will generate and accept geojsons in corresponding requests.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pglotov/django-geojson_serializer", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-geojson-serializer", "package_url": "https://pypi.org/project/django-geojson-serializer/", "platform": "", "project_url": "https://pypi.org/project/django-geojson-serializer/", "project_urls": {"Homepage": "https://github.com/pglotov/django-geojson_serializer"}, "release_url": "https://pypi.org/project/django-geojson-serializer/0.2/", "requires_dist": null, "requires_python": "", "summary": "Geojson serializer decorator for django rest framework", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>DRF geojson serializer is a decorator which allows to format data as geojson <a href=\"http://geojson.org\" rel=\"nofollow\">http://geojson.org</a></p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>Geojson serializer works with django rest framework as a decorator.</p>\n<ol>\n<li><p>Add django-geojson_serializer to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = [\n....\n'django-geojson_serializer'\n]\n</pre>\n</li>\n<li><p>In your code you can use <code>geojson_serializer(&lt;name-of-geo-field&gt;)</code> decorator with a regualar serializer, e.g.:</p>\n<pre>from geojson_serializer.serializers import geojson_serializer\n\n\nclass City(models.Model):\n    name = models.CharField(max_length=128)\n    location = models.PointField()\n\n\n@geojson_serializer('location')\nclass CitySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = City\n        fields =['name', 'location']\n\n\nclass CityViewSet(viewsets.ModelViewSet):\n    queryset = City.objects.all()\n    serializer_class = CitySerializer\n</pre>\n</li>\n</ol>\n<p>Then you can register CityViewSet with a router and the view will generate and accept geojsons in corresponding requests.</p>\n</div>\n\n          </div>"}, "last_serial": 2824597, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c1e08c4a8fab9cf9e842ae4458edb8f4", "sha256": "c93d1601db9cd21901c35a44c6d5f8e9d555550df2dd48badf04c51a2c29efc6"}, "downloads": -1, "filename": "django-geojson_serializer-0.1.tar.gz", "has_sig": false, "md5_digest": "c1e08c4a8fab9cf9e842ae4458edb8f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3439, "upload_time": "2017-04-23T00:21:37", "upload_time_iso_8601": "2017-04-23T00:21:37.003149Z", "url": "https://files.pythonhosted.org/packages/74/4b/a4ec84fdba8f3595e92ada7e6fd2fe5df50f91bd3e9028ee0c2a623ac52b/django-geojson_serializer-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d2b7519d4f97f197867b7f7d4d8abf4b", "sha256": "3b4f4411ae837da6a4972308b561baa7f1ccf611c7a3ac718c7f7940fac42d72"}, "downloads": -1, "filename": "django-geojson_serializer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d2b7519d4f97f197867b7f7d4d8abf4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3366, "upload_time": "2017-04-23T00:28:26", "upload_time_iso_8601": "2017-04-23T00:28:26.833372Z", "url": "https://files.pythonhosted.org/packages/c0/31/1cace669a575dc33556572d2110ffa4cea1aa4bdbaf42d95cda7d5773a05/django-geojson_serializer-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7303205b04056756dbe37c47376ae529", "sha256": "e749134125b953e928263d71fcd8564fdb35cbcce4c342d8099ef76c94117dcd"}, "downloads": -1, "filename": "django-geojson_serializer-0.2.tar.gz", "has_sig": false, "md5_digest": "7303205b04056756dbe37c47376ae529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3445, "upload_time": "2017-04-24T03:46:11", "upload_time_iso_8601": "2017-04-24T03:46:11.740199Z", "url": "https://files.pythonhosted.org/packages/7b/70/4add2a86d12ec5f4f5134719781e35a2d04a72a5e412776575ef6029fe83/django-geojson_serializer-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7303205b04056756dbe37c47376ae529", "sha256": "e749134125b953e928263d71fcd8564fdb35cbcce4c342d8099ef76c94117dcd"}, "downloads": -1, "filename": "django-geojson_serializer-0.2.tar.gz", "has_sig": false, "md5_digest": "7303205b04056756dbe37c47376ae529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3445, "upload_time": "2017-04-24T03:46:11", "upload_time_iso_8601": "2017-04-24T03:46:11.740199Z", "url": "https://files.pythonhosted.org/packages/7b/70/4add2a86d12ec5f4f5134719781e35a2d04a72a5e412776575ef6029fe83/django-geojson_serializer-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:53 2020"}