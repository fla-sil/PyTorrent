{"info": {"author": "Sector Labs", "author_email": "open-source@sectorlabs.ro", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "====================  ===================\n**Quality**           |QualityBadge|_\n**Test coverage**     |CoverageBadge|_\n**License**           |LicenseBadge|_\n**PyPi**              |PyPiBadge|_\n**Django versions**   >=1.11 (including 2.0)\n**Python versions**   >=3.5\n====================  ===================\n\n.. |QualityBadge| image:: https://scrutinizer-ci.com/g/SectorLabs/django-postgres-extra/badges/quality-score.png\n.. _QualityBadge: https://scrutinizer-ci.com/g/SectorLabs/django-postgres-extra/\n\n\n.. |CoverageBadge| image:: https://scrutinizer-ci.com/g/SectorLabs/django-postgres-extra/badges/coverage.png\n.. _CoverageBadge: https://scrutinizer-ci.com/g/SectorLabs/django-postgres-extra/\n\n\n.. |LicenseBadge| image:: https://img.shields.io/:license-mit-blue.svg\n.. _LicenseBadge: http://doge.mit-license.org\n\n\n.. |PyPiBadge| image:: https://badge.fury.io/py/django-postgres-extra.svg\n.. _PyPiBadge:  https://pypi.python.org/pypi/django-postgres-extra\n\n``django-postgres-extra`` aims to make all of PostgreSQL's awesome features available through the Django ORM. We do this by taking care of all the hassle. As opposed to the many small packages that are available to try to bring a single feature to Django with minimal effort. ``django-postgres-extra`` goes the extra mile, with well tested implementations, seamless migrations and much more.\n\nWith seamless we mean that any features we add will work truly seamlessly. You should not have to manually modify your migrations to work with fields and objects provided by this package.\n\nDocumentation\n-------------\n\n* **ReadTheDocs HTML**\n\n  http://django-postgres-extra.readthedocs.io\n\n* **Plain MarkDown**\n\n  https://github.com/SectorLabs/django-postgres-extra/tree/master/docs\n\nMajor features\n--------------\n\n1. **Native upserts**\n\n   * Single query\n   * Concurrency safe\n   * With bulk support (single query)\n\n2. **Extended support for HStoreField**\n\n   * Unique constraints\n   * Null constraints\n   * Select individual keys using ``.values()`` or ``.values_list()``\n\n3. **Extra signals**\n\n   * Updates\n\n4. **Extra expressions**\n\n   * ``MIN`` and ``MAX`` for multiple value fields such as hstore and array.\n\n5. **Indexes**\n\n   * Custom indexes with conditions.\n\nDesired/future features\n-----------------------\n\n* `Desired enhancements <https://github.com/SectorLabs/django-postgres-extra/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement>`_\n\n\nInstallation\n------------\n\n1. Install the package from PyPi:\n\n   .. code-block:: bash\n\n        \u03bb pip install django-postgres-extra\n\n2. Add ``postgres_extra`` and ``django.contrib.postgres`` to your ``INSTALLED_APPS``:\n\n   .. code-block:: python\n\n        INSTALLED_APPS = [\n            ....\n\n            'django.contrib.postgres',\n            'psqlextra'\n        ]\n\n3. Set the database engine to ``psqlextra.backend``:\n\n   .. code-block:: python\n\n        DATABASES = {\n            'default': {\n                ...\n                'ENGINE': 'psqlextra.backend'\n            }\n        }\n\n4. Make sure all models that inherit from ``psqlextra.models.PostgresModel`` or use the ``psqlextra.manager.PostgresManager``. Without this, most features **do not work**.\n\n\nFAQ - Frequently asked questions\n--------------------------------\n\n1. **Why do I need to change the database back-end/engine?**\n\n   We utilize PostgreSQL's `hstore` data type, which allows you to store key-value pairs in a column.  In order to create `UNIQUE` constraints on specific key, we need to create a special type of index. We could do this without a custom database back-end, but it would require everyone to manually write their migrations. By using a custom database back-end, we added support for this. When changing the `uniqueness` constraint on a `HStoreField`, our custom database back-end takes care of creating, updating and deleting these constraints/indexes in the database.\n\n2. **I am already using a custom database back-end, can I still use yours?**\n\n   Yes. You can set the ``POSTGRES_EXTRA_DB_BACKEND_BASE`` setting to your current back-end. This will instruct our custom database back-end to inherit from the database back-end you specified. **Warning**: this will only work if the base you specified indirectly inherits from the standard PostgreSQL database back-end.\n\n3. **Does this package work with Python 2?**\n\n   No. Only Python 3.5 or newer is supported. We're using type hints. These do not work well under older versions of Python.\n\n4. **Which Django versions does this package work with?**\n\n   Django 1.11 or newer (that includes Django 2.0).\n\n\nWorking with the code\n---------------------\n\n**Prerequisites**\n\n* PostgreSQL 9.6 or newer.\n* Django 1.11 or newer.\n* Python 3.5 or newer.\n\n**Getting started**\n\n1. Clone the repository:\n\n   .. code-block:: bash\n\n        \u03bb git clone https://github.com/SectorLabs/django-postgres-extra.git\n\n2. Create a virtual environment:\n\n   .. code-block:: bash\n\n       \u03bb cd django-postgres-extra\n       \u03bb virtualenv env\n       \u03bb source env/bin/activate\n\n3. Create a postgres user for use in tests (skip if your default user is a postgres superuser):\n\n   .. code-block:: bash\n\n       \u03bb createuser --superuser psqlextra --pwprompt\n       \u03bb export DATABASE_URL=postgres://psqlextra:<password>@localhost/psqlextra\n\n   Hint: if you're using virtualenvwrapper, you might find it beneficial to put\n   the ``export`` line in ``$VIRTUAL_ENV/bin/postactivate`` so that it's always\n   available when using this virtualenv.\n\n4. Install the development/test dependencies:\n\n   .. code-block:: bash\n\n       \u03bb pip install -r requirements/test.txt\n\n5. Run the tests:\n\n   .. code-block:: bash\n\n       \u03bb tox\n\n6. Run the benchmarks:\n\n   .. code-block:: bash\n\n       \u03bb py.test -c pytest-benchmark.ini", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zak10/django-postgres-extra", "keywords": "django,postgres,extra,hstore,ltree", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-postgres-extra-kauffman", "package_url": "https://pypi.org/project/django-postgres-extra-kauffman/", "platform": "", "project_url": "https://pypi.org/project/django-postgres-extra-kauffman/", "project_urls": {"Homepage": "https://github.com/zak10/django-postgres-extra"}, "release_url": "https://pypi.org/project/django-postgres-extra-kauffman/1.21a12/", "requires_dist": null, "requires_python": "", "summary": "Bringing all of PostgreSQL's awesomeness to Django.", "version": "1.21a12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><strong>Quality</strong></td>\n<td><a href=\"https://scrutinizer-ci.com/g/SectorLabs/django-postgres-extra/\" rel=\"nofollow\"><img alt=\"QualityBadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c6ea6231b3f383d3cd8d03cfe664e2656f2aab4/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f536563746f724c6162732f646a616e676f2d706f7374677265732d65787472612f6261646765732f7175616c6974792d73636f72652e706e67\"></a></td>\n</tr>\n<tr><td><strong>Test coverage</strong></td>\n<td><a href=\"https://scrutinizer-ci.com/g/SectorLabs/django-postgres-extra/\" rel=\"nofollow\"><img alt=\"CoverageBadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7296d028b2664d8164a83005e4b41e8ddfa4b4ce/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f536563746f724c6162732f646a616e676f2d706f7374677265732d65787472612f6261646765732f636f7665726167652e706e67\"></a></td>\n</tr>\n<tr><td><strong>License</strong></td>\n<td><a href=\"http://doge.mit-license.org\" rel=\"nofollow\"><img alt=\"LicenseBadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79b662d9661997db2063f8bc369ceb28643d92e2/68747470733a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d6d69742d626c75652e737667\"></a></td>\n</tr>\n<tr><td><strong>PyPi</strong></td>\n<td><a href=\"https://pypi.python.org/pypi/django-postgres-extra\" rel=\"nofollow\"><img alt=\"PyPiBadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3849049aebd6247dfafb71b7eb33072daba7a08e/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d706f7374677265732d65787472612e737667\"></a></td>\n</tr>\n<tr><td><strong>Django versions</strong></td>\n<td>&gt;=1.11 (including 2.0)</td>\n</tr>\n<tr><td><strong>Python versions</strong></td>\n<td>&gt;=3.5</td>\n</tr>\n</tbody>\n</table>\n<p><tt><span class=\"pre\">django-postgres-extra</span></tt> aims to make all of PostgreSQL\u2019s awesome features available through the Django ORM. We do this by taking care of all the hassle. As opposed to the many small packages that are available to try to bring a single feature to Django with minimal effort. <tt><span class=\"pre\">django-postgres-extra</span></tt> goes the extra mile, with well tested implementations, seamless migrations and much more.</p>\n<p>With seamless we mean that any features we add will work truly seamlessly. You should not have to manually modify your migrations to work with fields and objects provided by this package.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<ul>\n<li><p><strong>ReadTheDocs HTML</strong></p>\n<p><a href=\"http://django-postgres-extra.readthedocs.io\" rel=\"nofollow\">http://django-postgres-extra.readthedocs.io</a></p>\n</li>\n<li><p><strong>Plain MarkDown</strong></p>\n<p><a href=\"https://github.com/SectorLabs/django-postgres-extra/tree/master/docs\" rel=\"nofollow\">https://github.com/SectorLabs/django-postgres-extra/tree/master/docs</a></p>\n</li>\n</ul>\n</div>\n<div id=\"major-features\">\n<h2>Major features</h2>\n<ol>\n<li><strong>Native upserts</strong><ul>\n<li>Single query</li>\n<li>Concurrency safe</li>\n<li>With bulk support (single query)</li>\n</ul>\n</li>\n<li><strong>Extended support for HStoreField</strong><ul>\n<li>Unique constraints</li>\n<li>Null constraints</li>\n<li>Select individual keys using <tt>.values()</tt> or <tt>.values_list()</tt></li>\n</ul>\n</li>\n<li><strong>Extra signals</strong><ul>\n<li>Updates</li>\n</ul>\n</li>\n<li><strong>Extra expressions</strong><ul>\n<li><tt>MIN</tt> and <tt>MAX</tt> for multiple value fields such as hstore and array.</li>\n</ul>\n</li>\n<li><strong>Indexes</strong><ul>\n<li>Custom indexes with conditions.</li>\n</ul>\n</li>\n</ol>\n</div>\n<div id=\"desired-future-features\">\n<h2>Desired/future features</h2>\n<ul>\n<li><a href=\"https://github.com/SectorLabs/django-postgres-extra/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement\" rel=\"nofollow\">Desired enhancements</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install the package from PyPi:</p>\n<pre>\u03bb pip install django-postgres-extra\n</pre>\n</li>\n<li><p>Add <tt>postgres_extra</tt> and <tt>django.contrib.postgres</tt> to your <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">....</span>\n\n    <span class=\"s1\">'django.contrib.postgres'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'psqlextra'</span>\n<span class=\"p\">]</span>\n</pre>\n</li>\n<li><p>Set the database engine to <tt>psqlextra.backend</tt>:</p>\n<pre><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'psqlextra.backend'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</li>\n<li><p>Make sure all models that inherit from <tt>psqlextra.models.PostgresModel</tt> or use the <tt>psqlextra.manager.PostgresManager</tt>. Without this, most features <strong>do not work</strong>.</p>\n</li>\n</ol>\n</div>\n<div id=\"faq-frequently-asked-questions\">\n<h2>FAQ - Frequently asked questions</h2>\n<ol>\n<li><p><strong>Why do I need to change the database back-end/engine?</strong></p>\n<p>We utilize PostgreSQL\u2019s <cite>hstore</cite> data type, which allows you to store key-value pairs in a column.  In order to create <cite>UNIQUE</cite> constraints on specific key, we need to create a special type of index. We could do this without a custom database back-end, but it would require everyone to manually write their migrations. By using a custom database back-end, we added support for this. When changing the <cite>uniqueness</cite> constraint on a <cite>HStoreField</cite>, our custom database back-end takes care of creating, updating and deleting these constraints/indexes in the database.</p>\n</li>\n<li><p><strong>I am already using a custom database back-end, can I still use yours?</strong></p>\n<p>Yes. You can set the <tt>POSTGRES_EXTRA_DB_BACKEND_BASE</tt> setting to your current back-end. This will instruct our custom database back-end to inherit from the database back-end you specified. <strong>Warning</strong>: this will only work if the base you specified indirectly inherits from the standard PostgreSQL database back-end.</p>\n</li>\n<li><p><strong>Does this package work with Python 2?</strong></p>\n<p>No. Only Python 3.5 or newer is supported. We\u2019re using type hints. These do not work well under older versions of Python.</p>\n</li>\n<li><p><strong>Which Django versions does this package work with?</strong></p>\n<p>Django 1.11 or newer (that includes Django 2.0).</p>\n</li>\n</ol>\n</div>\n<div id=\"working-with-the-code\">\n<h2>Working with the code</h2>\n<p><strong>Prerequisites</strong></p>\n<ul>\n<li>PostgreSQL 9.6 or newer.</li>\n<li>Django 1.11 or newer.</li>\n<li>Python 3.5 or newer.</li>\n</ul>\n<p><strong>Getting started</strong></p>\n<ol>\n<li><p>Clone the repository:</p>\n<pre>\u03bb git clone https://github.com/SectorLabs/django-postgres-extra.git\n</pre>\n</li>\n<li><p>Create a virtual environment:</p>\n<pre>\u03bb <span class=\"nb\">cd</span> django-postgres-extra\n\u03bb virtualenv env\n\u03bb <span class=\"nb\">source</span> env/bin/activate\n</pre>\n</li>\n<li><p>Create a postgres user for use in tests (skip if your default user is a postgres superuser):</p>\n<pre>\u03bb createuser --superuser psqlextra --pwprompt\n\u03bb <span class=\"nb\">export</span> <span class=\"nv\">DATABASE_URL</span><span class=\"o\">=</span>postgres://psqlextra:&lt;password&gt;@localhost/psqlextra\n</pre>\n<p>Hint: if you\u2019re using virtualenvwrapper, you might find it beneficial to put\nthe <tt>export</tt> line in <tt>$VIRTUAL_ENV/bin/postactivate</tt> so that it\u2019s always\navailable when using this virtualenv.</p>\n</li>\n<li><p>Install the development/test dependencies:</p>\n<pre>\u03bb pip install -r requirements/test.txt\n</pre>\n</li>\n<li><p>Run the tests:</p>\n<pre>\u03bb tox\n</pre>\n</li>\n<li><p>Run the benchmarks:</p>\n<pre>\u03bb py.test -c pytest-benchmark.ini\n</pre>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 3977618, "releases": {"1.21a12": [{"comment_text": "", "digests": {"md5": "e37c0deefb344209758339c8f6594253", "sha256": "7c2f942e8bb09004f5209902267c054a65fd04df513efd02c593d442aef399e2"}, "downloads": -1, "filename": "django-postgres-extra-kauffman-1.21a12.tar.gz", "has_sig": false, "md5_digest": "e37c0deefb344209758339c8f6594253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34081, "upload_time": "2018-06-19T14:08:52", "upload_time_iso_8601": "2018-06-19T14:08:52.557938Z", "url": "https://files.pythonhosted.org/packages/e6/98/129cf88e6687462482ec419836a87f48832488f7c30543f1119deff46075/django-postgres-extra-kauffman-1.21a12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e37c0deefb344209758339c8f6594253", "sha256": "7c2f942e8bb09004f5209902267c054a65fd04df513efd02c593d442aef399e2"}, "downloads": -1, "filename": "django-postgres-extra-kauffman-1.21a12.tar.gz", "has_sig": false, "md5_digest": "e37c0deefb344209758339c8f6594253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34081, "upload_time": "2018-06-19T14:08:52", "upload_time_iso_8601": "2018-06-19T14:08:52.557938Z", "url": "https://files.pythonhosted.org/packages/e6/98/129cf88e6687462482ec419836a87f48832488f7c30543f1119deff46075/django-postgres-extra-kauffman-1.21a12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:51 2020"}