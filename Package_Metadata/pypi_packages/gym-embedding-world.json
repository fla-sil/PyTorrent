{"info": {"author": "Samir Moustafa", "author_email": "samir.moustafa.97@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "OpenAI gym Embedding world\n==========================\n\n<div align=\"center\">\n  <img width=\"40%\" src=\"https://raw.githubusercontent.com/SamirMoustafa/gym-embedding-world/master/assets/9-dimensional-hypercube.gif\"><br><br>\n  <h6>An eight-dimensional hypercube graph.</h6>\n</div>\n\n[![Build Status](https://travis-ci.org/SamirMoustafa/gym-embedding-world.svg?branch=master)](https://travis-ci.org/SamirMoustafa/gym-embedding-world)\n\nTwo word embedding mapping compatible with [OpenAI gym](https://github.com/openai/gym>).\n\nRequirements:\n- Python 3.5+\n- OpenAI Gym\n- NumPy\n- Gensim\n\nInstall environment on anaconda\n-------------------------------\n\n    $ conda env create -f gym-embedding-world/environment.yml\n    $ source embedding-world\n    $ pip install -e gym-embedding-world/.\n\nInstall environment on colab\n----------------------------\n\n    !git clone \"https://github.com/SamirMoustafa/gym-embedding-world.git\"\n    !pip install -e gym-embedding-world/.\n    !mv gym-embedding-world gym-embedding-world-org\n    !cp -r gym-embedding-world-org/embedding_world /content\n    !ls embedding_world\n    \nUsage\n-----\n\n    $ python >>> import gym\n    $ python >>> import embedding_world\n    $ python >>> env = gym.make('embedding_world-v0')\n    $ python >>> env.set_paths(embedding_from_file=\"... YOUR EMBEDDING PATH TO MAP FROM IT  ...\",\n                               embedding_to_file  =\"... YOUR EMBEDDING PATH TO MAP TO IT  .....\")\n    $ python >>> env.production_is_off()\n    $ python >>> env.set_sentences('... YOUR SENTENCE TO TRANSLATE FROM IT ...', \n                                   '... YOUR SENTENCE TO TRANSLATE TO IT .....')\n    $ python >>> state, reward, done, info = env.step('dim(0)+1')\n\n``embedding_world-v0``\n----------------------\n\nEmbedding world is a simple environment based on OpenAI gym, that loads two-word embedding e.g. [Stanfrod GloVe](https://nlp.stanford.edu/projects/glove/) or [facebook fastText models](https://github.com/facebookresearch/fastText/blob/master/pretrained-vectors.md)  with N-dimension and moves from one word(s) embedding-location to the other embedding using an agent actions such that actions that could be taken are `2N + 1` actions `{dimension(i)+1, dimension(i)-1}` \u222a ` {pickup}` \u2200 `i` in range from 1 to N\n\nwhich deterministically cause the corresponding state transitions\nbut actions that would take an agent of the grid leave a state unchanged.\nThe reward is negative for all transition until the goal is reached.\nThe terminal state(goal) is represented in a vector/s.\n\nThis environment has been built as part of a graduation project at [University of Alexandria, Department of Computer Science](http://sci.alexu.edu.eg/index.php/en/)\n\nPlease use this bibtex if you want to cite this repository in your publications:\n\n```\n@misc{embedding_world,\n    author = {Samir Moustafa},\n    title = {Embedding Environment for OpenAI Gym},\n    year = {2019},\n    publisher = {GitHub},\n    journal = {GitHub repository},\n    howpublished = {\\url{https://github.com/SamirMoustafa/gym-embedding-world}}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SamirMoustafa/gym-embedding-world/", "keywords": "embedding_world", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gym-embedding-world", "package_url": "https://pypi.org/project/gym-embedding-world/", "platform": "", "project_url": "https://pypi.org/project/gym-embedding-world/", "project_urls": {"Homepage": "https://github.com/SamirMoustafa/gym-embedding-world/"}, "release_url": "https://pypi.org/project/gym-embedding-world/0.0.4.0/", "requires_dist": null, "requires_python": ">=3.5,<3.7", "summary": "Two word embedding mapping compatible with OpenAI gym.", "version": "0.0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OpenAI gym Embedding world</h1>\n<div>\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2644a701d4bd97936cc8b2a8d6cad594ad5af8bd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f53616d69724d6f7573746166612f67796d2d656d62656464696e672d776f726c642f6d61737465722f6173736574732f392d64696d656e73696f6e616c2d6879706572637562652e676966\" width=\"40%\"><br><br>\n  <h6>An eight-dimensional hypercube graph.</h6>\n</div>\n<p><a href=\"https://travis-ci.org/SamirMoustafa/gym-embedding-world\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40b551d17375e4bdb7c345a5ddd8df7d4bb7415e/68747470733a2f2f7472617669732d63692e6f72672f53616d69724d6f7573746166612f67796d2d656d62656464696e672d776f726c642e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Two word embedding mapping compatible with <a href=\"https://github.com/openai/gym%3E\" rel=\"nofollow\">OpenAI gym</a>.</p>\n<p>Requirements:</p>\n<ul>\n<li>Python 3.5+</li>\n<li>OpenAI Gym</li>\n<li>NumPy</li>\n<li>Gensim</li>\n</ul>\n<h2>Install environment on anaconda</h2>\n<pre><code>$ conda env create -f gym-embedding-world/environment.yml\n$ source embedding-world\n$ pip install -e gym-embedding-world/.\n</code></pre>\n<h2>Install environment on colab</h2>\n<pre><code>!git clone \"https://github.com/SamirMoustafa/gym-embedding-world.git\"\n!pip install -e gym-embedding-world/.\n!mv gym-embedding-world gym-embedding-world-org\n!cp -r gym-embedding-world-org/embedding_world /content\n!ls embedding_world\n</code></pre>\n<h2>Usage</h2>\n<pre><code>$ python &gt;&gt;&gt; import gym\n$ python &gt;&gt;&gt; import embedding_world\n$ python &gt;&gt;&gt; env = gym.make('embedding_world-v0')\n$ python &gt;&gt;&gt; env.set_paths(embedding_from_file=\"... YOUR EMBEDDING PATH TO MAP FROM IT  ...\",\n                           embedding_to_file  =\"... YOUR EMBEDDING PATH TO MAP TO IT  .....\")\n$ python &gt;&gt;&gt; env.production_is_off()\n$ python &gt;&gt;&gt; env.set_sentences('... YOUR SENTENCE TO TRANSLATE FROM IT ...', \n                               '... YOUR SENTENCE TO TRANSLATE TO IT .....')\n$ python &gt;&gt;&gt; state, reward, done, info = env.step('dim(0)+1')\n</code></pre>\n<h2><code>embedding_world-v0</code></h2>\n<p>Embedding world is a simple environment based on OpenAI gym, that loads two-word embedding e.g. <a href=\"https://nlp.stanford.edu/projects/glove/\" rel=\"nofollow\">Stanfrod GloVe</a> or <a href=\"https://github.com/facebookresearch/fastText/blob/master/pretrained-vectors.md\" rel=\"nofollow\">facebook fastText models</a>  with N-dimension and moves from one word(s) embedding-location to the other embedding using an agent actions such that actions that could be taken are <code>2N + 1</code> actions <code>{dimension(i)+1, dimension(i)-1}</code> \u222a <code>{pickup}</code> \u2200 <code>i</code> in range from 1 to N</p>\n<p>which deterministically cause the corresponding state transitions\nbut actions that would take an agent of the grid leave a state unchanged.\nThe reward is negative for all transition until the goal is reached.\nThe terminal state(goal) is represented in a vector/s.</p>\n<p>This environment has been built as part of a graduation project at <a href=\"http://sci.alexu.edu.eg/index.php/en/\" rel=\"nofollow\">University of Alexandria, Department of Computer Science</a></p>\n<p>Please use this bibtex if you want to cite this repository in your publications:</p>\n<pre><code>@misc{embedding_world,\n    author = {Samir Moustafa},\n    title = {Embedding Environment for OpenAI Gym},\n    year = {2019},\n    publisher = {GitHub},\n    journal = {GitHub repository},\n    howpublished = {\\url{https://github.com/SamirMoustafa/gym-embedding-world}}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 4737471, "releases": {"0.0.3.2": [{"comment_text": "", "digests": {"md5": "549fac14d2974ed87549d8948962e7e5", "sha256": "81f32debde3318337322425b03dd22e08f20935810bdcc0f793b2c87b25e800d"}, "downloads": -1, "filename": "gym-embedding_world-0.0.3.2.tar.gz", "has_sig": false, "md5_digest": "549fac14d2974ed87549d8948962e7e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.7", "size": 7341, "upload_time": "2019-01-22T23:46:44", "upload_time_iso_8601": "2019-01-22T23:46:44.946203Z", "url": "https://files.pythonhosted.org/packages/5e/f2/6e0eb4cef8bb34364e1ede0e58797817e2a842bbb36b3a23d5c2ef783e6d/gym-embedding_world-0.0.3.2.tar.gz", "yanked": false}], "0.0.3.3": [{"comment_text": "", "digests": {"md5": "4c4e3cdbae6f7f4e351ac39b2c6b7986", "sha256": "d966551bd98385516cc76a78cb48ae44919c26343247c3f13bb51082558c2ca0"}, "downloads": -1, "filename": "gym-embedding_world-0.0.3.3.tar.gz", "has_sig": false, "md5_digest": "4c4e3cdbae6f7f4e351ac39b2c6b7986", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.7", "size": 8040, "upload_time": "2019-01-22T23:58:27", "upload_time_iso_8601": "2019-01-22T23:58:27.702427Z", "url": "https://files.pythonhosted.org/packages/7a/bd/c0206f1ac9efb2bd94ae51a3c47160b3580fa819388dd536756c9a92541f/gym-embedding_world-0.0.3.3.tar.gz", "yanked": false}], "0.0.3.4": [{"comment_text": "", "digests": {"md5": "49a72b5405fb552be63cc2cbbf28110d", "sha256": "22a88a8a9f7051a706fa208252bf3a7cac1f79a09166beccb1517180c71cdf66"}, "downloads": -1, "filename": "gym-embedding_world-0.0.3.4.tar.gz", "has_sig": false, "md5_digest": "49a72b5405fb552be63cc2cbbf28110d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.7", "size": 8147, "upload_time": "2019-01-23T00:18:05", "upload_time_iso_8601": "2019-01-23T00:18:05.864763Z", "url": "https://files.pythonhosted.org/packages/48/63/44f9291e66ea3b4677c605d6d63692981f001e960d73138e1b5fb66adebe/gym-embedding_world-0.0.3.4.tar.gz", "yanked": false}], "0.0.4.0": [{"comment_text": "", "digests": {"md5": "661f2ef926947d7bf2c98103999b4e90", "sha256": "34b0fd75c46482fce8175d8f02926456e7330aafb12b4e550f0b4f87bb4c695f"}, "downloads": -1, "filename": "gym-embedding_world-0.0.4.0.tar.gz", "has_sig": false, "md5_digest": "661f2ef926947d7bf2c98103999b4e90", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.7", "size": 7864, "upload_time": "2019-01-24T21:52:17", "upload_time_iso_8601": "2019-01-24T21:52:17.272628Z", "url": "https://files.pythonhosted.org/packages/46/98/ee2dcfcc88392b87f9a097c0203f411c5fef6a250e8a4f50f1b70ab98e55/gym-embedding_world-0.0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "661f2ef926947d7bf2c98103999b4e90", "sha256": "34b0fd75c46482fce8175d8f02926456e7330aafb12b4e550f0b4f87bb4c695f"}, "downloads": -1, "filename": "gym-embedding_world-0.0.4.0.tar.gz", "has_sig": false, "md5_digest": "661f2ef926947d7bf2c98103999b4e90", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.7", "size": 7864, "upload_time": "2019-01-24T21:52:17", "upload_time_iso_8601": "2019-01-24T21:52:17.272628Z", "url": "https://files.pythonhosted.org/packages/46/98/ee2dcfcc88392b87f9a097c0203f411c5fef6a250e8a4f50f1b70ab98e55/gym-embedding_world-0.0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:02 2020"}