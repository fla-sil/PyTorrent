{"info": {"author": "Metric Geometry and Gerrymandering Group", "author_email": "gerrymandr@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# `autographs`\nA collection of tools for making graph stuff easy. Used by the\n[MGGG](https://sites.tufts.edu/gerrymandr/), this package provides a wide array\nof facilities for interacting with graphs.\n\n## Inlcuded Tools\n(Check these off as they're completed)\n\n- [x] Finding faces of planar graphs\n- [ ] Making graphs\n- [ ] Grid graph stuff (?)\n- [ ] Tree-walk stuff\n\n## Docs\nForthcoming Overleaf documents with more information about the math we\nuse here.\n\n# Installation\nIf you run into trouble with installation, please take a look at the\n[help](#Help) section.\n\n## With Pip\nThe Python Package Index's package manager, Pip, comes installed with every\nversion of Python. For more info on how to use it, type `pip -h` in a terminal\nor look at [their documentation](https://pip.pypa.io/en/stable/).\n\nTo intall `autographs` with Pip, simply run\n\n```\n$ pip install autographs\n```\n\nand you're set!\nYou can test out your installation by opening an interactive Python shell and\nimporting `autographs`.\n\n## Manually\nYou can also install `autographs` manually. To do this, clone this repository,\nnavigate to the root directory, and run\n\n```\n$ python setup.py install\n```\n\nThis will install all necessary dependencies and make `autographs` globally\navailable (after a shell restart).\n\n# Contributing\nTo contribute to this project, make yourself a fork and submit pull requests.\nYou can also set up the development environment by running `make dev`.\nOtherwise, follow [this contributor's guide](http://bit.ly/2AlTKy7). Make runs\nthe Python install script in development mode; this means that there is a\nsymlink in the global packages folder that points to this directory, making\nall code (including live changes) available globally. Additionally, it unzips\nthe test data in the `test/data` directory.\n\n# Usage\nImport as you normally would: `import autographs`. As an example program, we can\nfind the faces of the dual graph induced by the counties of Iowa using a\nhalf-edge structure:\n\n```python\nfrom autographs.faces import HalfEdge\n\n# Create a new half-edge data structure.\nhe = HalfEdge(\"./test/data/2018_19_counties/county.shp\")\n\n# Simply iterate over the faces.\nfor face in he.faces:\n    print(face)\n```\n\n# Help\nRunning into errors? There are quite a few you can encounter, and hopefully this\ndocument covers a few.\n\n## `ModuleNotFoundError: No module named 'autographs'`\nThere are a number of reasons that this error can pop up.\n\n1. **When installing, the wrong `pip` was used.** For those that have multiple\ninterpreters (e.g. Homebrew users), using the right `pip` command is key. Run\n`which python` and `which pip` in a shell and make sure that the resulting paths\nare the same.\n2. **Your shell isn't new enough (when using interactive Python)**. Just close\nyour prompt and open a new one.\n3. **The Pip install location isn't in your `$PATH`**. Most OSes use environment\nvariables to help processes run. Depending on your interpreter, look up the\nfilepath for Pip's storage and make sure that filepath is in `$PATH`.\n[Follow these instructions](http://bit.ly/2AvmHI7) for adding things to `$PATH`.\n\n\n\n# `autographs` Contributor's Guide\nSo glad that you decided to contribute to this project! It's ongoing, and a lot of people need to use the things included here, so it's important that we leave behind a readable, well-kept codebase.\n\n## Setup\nBefore editing any code, make sure to run `make setup`. This will install the necessary packages as well as set up a global symlink to develop the package. For more info about this process, take a look at `makefile`.\n\n## Style\nThis project abides by the [PEP8](https://www.python.org/dev/peps/pep-0008/) and [PEP257](https://www.python.org/dev/peps/pep-0257/) style guides. Please read these before contributing, as it's integral to the maintainability of this project that these standards are upheld.\n\n## Pushing Code\nWe'll be using the same contribution model as [RunDMCMC](https://github.com/gerrymandr/RunDMCMC), wherein each contributing user has a fork of this repository and pushes changes to that fork. Then, when the user wants to make their code a part of the main repository, they open a [pull request](https://github.com/gerrymandr/autographs/pulls) and await approval of others (please request reviewers!). Otherwise, [follow this guide.](https://github.com/gerrymandr/RunDMCMC/blob/master/CONTRIBUTING.md)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gerrymandr/autographs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "autographs", "package_url": "https://pypi.org/project/autographs/", "platform": "", "project_url": "https://pypi.org/project/autographs/", "project_urls": {"Homepage": "https://github.com/gerrymandr/autographs"}, "release_url": "https://pypi.org/project/autographs/0.0.4/", "requires_dist": ["pysal", "matplotlib", "geopandas", "matplotlib-label-lines", "numpy"], "requires_python": "", "summary": "A collection of tools to make graph stuff easy.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # `autographs`<br>A collection of tools for making graph stuff easy. Used by the<br>[MGGG](https://sites.tufts.edu/gerrymandr/), this package provides a wide array<br>of facilities for interacting with graphs.<br><br>## Inlcuded Tools<br>(Check these off as they're completed)<br><br>- [x] Finding faces of planar graphs<br>- [ ] Making graphs<br>- [ ] Grid graph stuff (?)<br>- [ ] Tree-walk stuff<br><br>## Docs<br>Forthcoming Overleaf documents with more information about the math we<br>use here.<br><br># Installation<br>If you run into trouble with installation, please take a look at the<br>[help](#Help) section.<br><br>## With Pip<br>The Python Package Index's package manager, Pip, comes installed with every<br>version of Python. For more info on how to use it, type `pip -h` in a terminal<br>or look at [their documentation](https://pip.pypa.io/en/stable/).<br><br>To intall `autographs` with Pip, simply run<br><br>```<br>$ pip install autographs<br>```<br><br>and you're set!<br>You can test out your installation by opening an interactive Python shell and<br>importing `autographs`.<br><br>## Manually<br>You can also install `autographs` manually. To do this, clone this repository,<br>navigate to the root directory, and run<br><br>```<br>$ python setup.py install<br>```<br><br>This will install all necessary dependencies and make `autographs` globally<br>available (after a shell restart).<br><br># Contributing<br>To contribute to this project, make yourself a fork and submit pull requests.<br>You can also set up the development environment by running `make dev`.<br>Otherwise, follow [this contributor's guide](http://bit.ly/2AlTKy7). Make runs<br>the Python install script in development mode; this means that there is a<br>symlink in the global packages folder that points to this directory, making<br>all code (including live changes) available globally. Additionally, it unzips<br>the test data in the `test/data` directory.<br><br># Usage<br>Import as you normally would: `import autographs`. As an example program, we can<br>find the faces of the dual graph induced by the counties of Iowa using a<br>half-edge structure:<br><br>```python<br>from autographs.faces import HalfEdge<br><br># Create a new half-edge data structure.<br>he = HalfEdge(\"./test/data/2018_19_counties/county.shp\")<br><br># Simply iterate over the faces.<br>for face in he.faces:<br>    print(face)<br>```<br><br># Help<br>Running into errors? There are quite a few you can encounter, and hopefully this<br>document covers a few.<br><br>## `ModuleNotFoundError: No module named 'autographs'`<br>There are a number of reasons that this error can pop up.<br><br>1. **When installing, the wrong `pip` was used.** For those that have multiple<br>interpreters (e.g. Homebrew users), using the right `pip` command is key. Run<br>`which python` and `which pip` in a shell and make sure that the resulting paths<br>are the same.<br>2. **Your shell isn't new enough (when using interactive Python)**. Just close<br>your prompt and open a new one.<br>3. **The Pip install location isn't in your `$PATH`**. Most OSes use environment<br>variables to help processes run. Depending on your interpreter, look up the<br>filepath for Pip's storage and make sure that filepath is in `$PATH`.<br>[Follow these instructions](http://bit.ly/2AvmHI7) for adding things to `$PATH`.<br><br><br><br># `autographs` Contributor's Guide<br>So glad that you decided to contribute to this project! It's ongoing, and a lot of people need to use the things included here, so it's important that we leave behind a readable, well-kept codebase.<br><br>## Setup<br>Before editing any code, make sure to run `make setup`. This will install the necessary packages as well as set up a global symlink to develop the package. For more info about this process, take a look at `makefile`.<br><br>## Style<br>This project abides by the [PEP8](https://www.python.org/dev/peps/pep-0008/) and [PEP257](https://www.python.org/dev/peps/pep-0257/) style guides. Please read these before contributing, as it's integral to the maintainability of this project that these standards are upheld.<br><br>## Pushing Code<br>We'll be using the same contribution model as [RunDMCMC](https://github.com/gerrymandr/RunDMCMC), wherein each contributing user has a fork of this repository and pushes changes to that fork. Then, when the user wants to make their code a part of the main repository, they open a [pull request](https://github.com/gerrymandr/autographs/pulls) and await approval of others (please request reviewers!). Otherwise, [follow this guide.](https://github.com/gerrymandr/RunDMCMC/blob/master/CONTRIBUTING.md)<br><br><br>\n          </div>"}, "last_serial": 4177675, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c08274e5288f3265c24d29830f930f20", "sha256": "fd5a86b706eaecc384a7770c74b14aa847438ed84a9d373a34008a6928807b83"}, "downloads": -1, "filename": "autographs-0.0.1-py3.6.egg", "has_sig": false, "md5_digest": "c08274e5288f3265c24d29830f930f20", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 11085, "upload_time": "2018-08-15T14:57:38", "upload_time_iso_8601": "2018-08-15T14:57:38.779232Z", "url": "https://files.pythonhosted.org/packages/94/8a/2170aeca8de24b89e96a1d195e4823b9f4803eb5020fc612d54010dcf9a6/autographs-0.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd14549ed3bd6f343dc7185c943da136", "sha256": "7f517c780f4e01b1eccd179ca45f388a8420dce7e9ff5a7e07f0ee27cc14d79b"}, "downloads": -1, "filename": "autographs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bd14549ed3bd6f343dc7185c943da136", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6072, "upload_time": "2018-07-23T07:19:06", "upload_time_iso_8601": "2018-07-23T07:19:06.961423Z", "url": "https://files.pythonhosted.org/packages/8f/07/f95e5d51a9f48fa91e93a1749b5b33a039dca34bc9ae4a0dd6abc4710cb6/autographs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40058ead020337a8746ce4169becf5a9", "sha256": "79fe66d072571880e1887fc1ffbaf0e903a624628cd50c59ae3132514b94c2fa"}, "downloads": -1, "filename": "autographs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "40058ead020337a8746ce4169becf5a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5500, "upload_time": "2018-07-23T07:19:08", "upload_time_iso_8601": "2018-07-23T07:19:08.560916Z", "url": "https://files.pythonhosted.org/packages/10/16/edeff36ca529d29ae4d39b3a9729796738ed9bbc55ad0b6d0c12d8e72746/autographs-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7e6aa3eacc3ba8dafd7e8a415feb52e0", "sha256": "2e2be7a86a06231d6ff6d7593e4afe85860399f62922526809542d583fa3ff4c"}, "downloads": -1, "filename": "autographs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7e6aa3eacc3ba8dafd7e8a415feb52e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7119, "upload_time": "2018-08-15T14:58:29", "upload_time_iso_8601": "2018-08-15T14:58:29.161627Z", "url": "https://files.pythonhosted.org/packages/2b/10/6dafa7f9bae772fef0042911227311a5da4bc72cd3d4a699709a6faa072b/autographs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3d3d7d6d10347ff9cfb85fcfae6f398", "sha256": "8b38c824b309f4de2fe7e889921bb378baf89d72369bcca7bf3a198aa69f5de4"}, "downloads": -1, "filename": "autographs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a3d3d7d6d10347ff9cfb85fcfae6f398", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6755, "upload_time": "2018-08-15T14:58:47", "upload_time_iso_8601": "2018-08-15T14:58:47.213696Z", "url": "https://files.pythonhosted.org/packages/3e/a9/abcd92c26b3218aa431e13c8c858b9a5f9f4c365b57a5e9f403e26f2c7dd/autographs-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2f8d75c6e94970712d36a635981ca9f1", "sha256": "f1979974cb821d6c12491e3ebf8cb0d31a5d5f68f4e3b33820614e5376e9c5e1"}, "downloads": -1, "filename": "autographs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2f8d75c6e94970712d36a635981ca9f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7629, "upload_time": "2018-08-16T18:08:44", "upload_time_iso_8601": "2018-08-16T18:08:44.006147Z", "url": "https://files.pythonhosted.org/packages/f8/67/ee7446d787f78447906032239c8ab29aa3e92cacd9067eb1f7ab0e67b14a/autographs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77ecbc6a07bf41ad549eeae1b48acb9e", "sha256": "05a635c13996eebcd3c5d84626e9d7971bd22a45d52fb911264cc1cc223e54d8"}, "downloads": -1, "filename": "autographs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "77ecbc6a07bf41ad549eeae1b48acb9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7296, "upload_time": "2018-08-16T18:08:47", "upload_time_iso_8601": "2018-08-16T18:08:47.952768Z", "url": "https://files.pythonhosted.org/packages/0a/eb/6d890e3672de3a6265d89ae25e90641e05ee8ba005e12304c3351161cf6a/autographs-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "abbb46e51c72b708b63500c9cfbb451c", "sha256": "6526aa50620c57c7f443efa201681a4fb2b8bd178bad8bc9f091011414ab06d3"}, "downloads": -1, "filename": "autographs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "abbb46e51c72b708b63500c9cfbb451c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7624, "upload_time": "2018-08-16T19:05:26", "upload_time_iso_8601": "2018-08-16T19:05:26.717078Z", "url": "https://files.pythonhosted.org/packages/00/22/8471b34a19e18f8b6cbb14ca04c1d177e27bc8b5af3ba5dc626c1a0bfb4b/autographs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d61040c02a271196fe18c5e3704f6f8", "sha256": "5a86f71a25d7556827b2c29449f77b40675a05d28c8e4c2027c6c60b8e23bf57"}, "downloads": -1, "filename": "autographs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9d61040c02a271196fe18c5e3704f6f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7285, "upload_time": "2018-08-16T19:05:30", "upload_time_iso_8601": "2018-08-16T19:05:30.445709Z", "url": "https://files.pythonhosted.org/packages/c2/2b/68ae206c85b5c2ce7ea6d0df770d1b8d97c6eb4bee25e141001e1bcdf1a8/autographs-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abbb46e51c72b708b63500c9cfbb451c", "sha256": "6526aa50620c57c7f443efa201681a4fb2b8bd178bad8bc9f091011414ab06d3"}, "downloads": -1, "filename": "autographs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "abbb46e51c72b708b63500c9cfbb451c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7624, "upload_time": "2018-08-16T19:05:26", "upload_time_iso_8601": "2018-08-16T19:05:26.717078Z", "url": "https://files.pythonhosted.org/packages/00/22/8471b34a19e18f8b6cbb14ca04c1d177e27bc8b5af3ba5dc626c1a0bfb4b/autographs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d61040c02a271196fe18c5e3704f6f8", "sha256": "5a86f71a25d7556827b2c29449f77b40675a05d28c8e4c2027c6c60b8e23bf57"}, "downloads": -1, "filename": "autographs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9d61040c02a271196fe18c5e3704f6f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7285, "upload_time": "2018-08-16T19:05:30", "upload_time_iso_8601": "2018-08-16T19:05:30.445709Z", "url": "https://files.pythonhosted.org/packages/c2/2b/68ae206c85b5c2ce7ea6d0df770d1b8d97c6eb4bee25e141001e1bcdf1a8/autographs-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:17 2020"}