{"info": {"author": "Simons Observatory Collaboration Power Spectrum Task Force", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics"], "description": "======\npsplay\n======\n\n.. image:: https://img.shields.io/pypi/v/psplay.svg?style=flat\n   :target: https://pypi.python.org/pypi/psplay/\n.. image:: https://img.shields.io/npm/v/jupyter-leaflet-car\n   :target: https://www.npmjs.com/package/jupyter-leaflet-car\n.. image:: https://travis-ci.com/xgarrido/psplay.svg?branch=master\n   :target: https://travis-ci.com/xgarrido/psplay\n\nA tool to visualize and play with CMB maps. ``psplay`` is a ``jupyter`` extension to allow\ninteractive visualization of CMB maps through `Leaflet <leafletjs.com>`_ library. ``psplay`` also\nprovides a set of tools based on `pspy <https://github.com/simonsobs/pspy>`_ to compute and to show\nCMB power spectra.\n\nAll the specific javascript library developed for ``psplay`` is done by `Sigurd Naess\n<https://github.com/amaurea>`_. The build process and javascript architecture is highly inspired by\n`ipyleaflet <https://github.com/jupyter-widgets/ipyleaflet>`_ project.\n\n\nInstallation\n------------\n\nTo install, you will need to have or to install ``numpy``. Then, run\n\n.. code:: shell\n\n   $ pip install psplay [--user]\n\n``psplay`` runs within a Jupyter notebook. You need then to install Jupyter and we recommend to also\ninstall JupyterLab to fully enjoy ``psplay``\n\n.. code:: shell\n\n   $ pip install jupyterlab [--user]\n\n\nTo enable the extension within Jupyter, you will need to install several JupyterLab extensions\nespecially the Python ``plotly`` `library <https://plotly.com/python>`_. For JupyterLab > 2.0.0, you\ncan do\n\n.. code:: shell\n\n   $ jupyter labextension install @plotlywidget@4.6.0 jupyterlab-plotly@4.6.0\n\n\nFinally, you need to install the `jupyter-leaflet-car\n<https://www.npmjs.com/package/jupyter-leaflet-car>`_ and the support for widgets in Jupyter\n\n.. code:: shell\n\n   $ jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-leaflet-car\n\n\nInstallation from sources\n-------------------------\n\nFor a development installation (requires `npm <https://www.npmjs.com/get-npm>`_)\n\n.. code:: shell\n\n   $ git clone https://github.com/xgarrido/psplay.git\n   $ cd psplay\n   $ pip install -e .\n\nIf you are using the classic Jupyter Notebook you need to install the nbextension:\n\n.. code:: shell\n\n   $ jupyter nbextension install --py --symlink --sys-prefix psplay\n   $ jupyter nbextension enable --py --sys-prefix psplay\n\nIf you are using JupyterLab, you need to install the labextension:\n\n.. code:: shell\n\n   $ jupyter labextension install @jupyter-widgets/jupyterlab-manager js\n\nNote for developers:\n\n- the ``-e`` pip option allows one to modify the Python code in-place. Restart the kernel in order\n  to see the changes.\n- the ``--symlink`` argument on Linux or OS X allows one to modify the JavaScript code\n  in-place. This feature is not available with Windows.\n\nFor automatically building the JavaScript code every time there is a change, run the following\ncommand from the ``psplay/js/`` directory:\n\n.. code:: shell\n\n   $ npm run watch\n\n\nIf you are on JupyterLab you also need to run the following in a separate terminal:\n\n.. code:: shell\n\n   $ jupyter lab --watch\n\n\nEvery time a JavaScript build has terminated you need to refresh the Notebook page in order to load\nthe JavaScript code again.\n\nExamples\n--------\n\n* `From healpix map file to psplay <https://github.com/xgarrido/psplay/blob/master/examples/simulation_to_analysis.ipynb>`_", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonsobs/psplay", "keywords": "CMB,spectra,ipython,jupyter,widgets,graphics", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "psplay", "package_url": "https://pypi.org/project/psplay/", "platform": "", "project_url": "https://pypi.org/project/psplay/", "project_urls": {"Homepage": "https://github.com/simonsobs/psplay"}, "release_url": "https://pypi.org/project/psplay/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "A Jupyter widget for playing with CAR Leaflet maps", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/psplay/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/psplay.svg?style=flat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/387d510d847e3ee46bdc014965b2f213f3201b57/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7073706c61792e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://www.npmjs.com/package/jupyter-leaflet-car\" rel=\"nofollow\"><img alt=\"https://img.shields.io/npm/v/jupyter-leaflet-car\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/facf5a8bdddd52daf883047c560c1b91b10eb4fd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6a7570797465722d6c6561666c65742d636172\"></a>\n<a href=\"https://travis-ci.com/xgarrido/psplay\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/xgarrido/psplay.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b530e8d420d273cd9bdbcc1745df68c63050570/68747470733a2f2f7472617669732d63692e636f6d2f786761727269646f2f7073706c61792e7376673f6272616e63683d6d6173746572\"></a>\n<p>A tool to visualize and play with CMB maps. <tt>psplay</tt> is a <tt>jupyter</tt> extension to allow\ninteractive visualization of CMB maps through <a href=\"leafletjs.com\" rel=\"nofollow\">Leaflet</a> library. <tt>psplay</tt> also\nprovides a set of tools based on <a href=\"https://github.com/simonsobs/pspy\" rel=\"nofollow\">pspy</a> to compute and to show\nCMB power spectra.</p>\n<p>All the specific javascript library developed for <tt>psplay</tt> is done by <a href=\"https://github.com/amaurea\" rel=\"nofollow\">Sigurd Naess</a>. The build process and javascript architecture is highly inspired by\n<a href=\"https://github.com/jupyter-widgets/ipyleaflet\" rel=\"nofollow\">ipyleaflet</a> project.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install, you will need to have or to install <tt>numpy</tt>. Then, run</p>\n<pre>$ pip install psplay <span class=\"o\">[</span>--user<span class=\"o\">]</span>\n</pre>\n<p><tt>psplay</tt> runs within a Jupyter notebook. You need then to install Jupyter and we recommend to also\ninstall JupyterLab to fully enjoy <tt>psplay</tt></p>\n<pre>$ pip install jupyterlab <span class=\"o\">[</span>--user<span class=\"o\">]</span>\n</pre>\n<p>To enable the extension within Jupyter, you will need to install several JupyterLab extensions\nespecially the Python <tt>plotly</tt> <a href=\"https://plotly.com/python\" rel=\"nofollow\">library</a>. For JupyterLab &gt; 2.0.0, you\ncan do</p>\n<pre>$ jupyter labextension install @plotlywidget@4.6.0 jupyterlab-plotly@4.6.0\n</pre>\n<p>Finally, you need to install the <a href=\"https://www.npmjs.com/package/jupyter-leaflet-car\" rel=\"nofollow\">jupyter-leaflet-car</a> and the support for widgets in Jupyter</p>\n<pre>$ jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-leaflet-car\n</pre>\n</div>\n<div id=\"installation-from-sources\">\n<h2>Installation from sources</h2>\n<p>For a development installation (requires <a href=\"https://www.npmjs.com/get-npm\" rel=\"nofollow\">npm</a>)</p>\n<pre>$ git clone https://github.com/xgarrido/psplay.git\n$ <span class=\"nb\">cd</span> psplay\n$ pip install -e .\n</pre>\n<p>If you are using the classic Jupyter Notebook you need to install the nbextension:</p>\n<pre>$ jupyter nbextension install --py --symlink --sys-prefix psplay\n$ jupyter nbextension <span class=\"nb\">enable</span> --py --sys-prefix psplay\n</pre>\n<p>If you are using JupyterLab, you need to install the labextension:</p>\n<pre>$ jupyter labextension install @jupyter-widgets/jupyterlab-manager js\n</pre>\n<p>Note for developers:</p>\n<ul>\n<li>the <tt><span class=\"pre\">-e</span></tt> pip option allows one to modify the Python code in-place. Restart the kernel in order\nto see the changes.</li>\n<li>the <tt><span class=\"pre\">--symlink</span></tt> argument on Linux or OS X allows one to modify the JavaScript code\nin-place. This feature is not available with Windows.</li>\n</ul>\n<p>For automatically building the JavaScript code every time there is a change, run the following\ncommand from the <tt>psplay/js/</tt> directory:</p>\n<pre>$ npm run watch\n</pre>\n<p>If you are on JupyterLab you also need to run the following in a separate terminal:</p>\n<pre>$ jupyter lab --watch\n</pre>\n<p>Every time a JavaScript build has terminated you need to refresh the Notebook page in order to load\nthe JavaScript code again.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<ul>\n<li><a href=\"https://github.com/xgarrido/psplay/blob/master/examples/simulation_to_analysis.ipynb\" rel=\"nofollow\">From healpix map file to psplay</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7120627, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "518870650c2b7ce7991c88dba9fed541", "sha256": "17e34ecc5f8051003e938ca5cb0cac99f39a62c833fc85564a909cda7ec0ebf2"}, "downloads": -1, "filename": "psplay-0.0.0.tar.gz", "has_sig": false, "md5_digest": "518870650c2b7ce7991c88dba9fed541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 788527, "upload_time": "2020-04-27T18:11:57", "upload_time_iso_8601": "2020-04-27T18:11:57.662066Z", "url": "https://files.pythonhosted.org/packages/90/12/0bc37d1e52dce97ed0472d6e0db84fa4ac0a1eb50fb82b7a84ced11dcf8b/psplay-0.0.0.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4b018cff44ed73c2f91d4b93459a658f", "sha256": "def0a687a24602110a061814344c90b4fc40033332fb3bf9d6fe60c50d954bbd"}, "downloads": -1, "filename": "psplay-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4b018cff44ed73c2f91d4b93459a658f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 788803, "upload_time": "2020-04-27T20:08:03", "upload_time_iso_8601": "2020-04-27T20:08:03.530931Z", "url": "https://files.pythonhosted.org/packages/c5/9c/bb14e5c18dee58c6632864b132b4bc13f3d7a89f15c407240c1a2559956c/psplay-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1e01bbdb6703f2e4afc35bc6a6c5910c", "sha256": "26fd1c12233944a6574471cb717295365ffdf1fe5f59b79475cff1b8f073b54a"}, "downloads": -1, "filename": "psplay-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1e01bbdb6703f2e4afc35bc6a6c5910c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 797918, "upload_time": "2020-04-28T13:58:43", "upload_time_iso_8601": "2020-04-28T13:58:43.917940Z", "url": "https://files.pythonhosted.org/packages/40/9b/833868873e0059cc8983d891bf08a42cdff8a58bcc9efdfbb59e7cc102cb/psplay-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1e01bbdb6703f2e4afc35bc6a6c5910c", "sha256": "26fd1c12233944a6574471cb717295365ffdf1fe5f59b79475cff1b8f073b54a"}, "downloads": -1, "filename": "psplay-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1e01bbdb6703f2e4afc35bc6a6c5910c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 797918, "upload_time": "2020-04-28T13:58:43", "upload_time_iso_8601": "2020-04-28T13:58:43.917940Z", "url": "https://files.pythonhosted.org/packages/40/9b/833868873e0059cc8983d891bf08a42cdff8a58bcc9efdfbb59e7cc102cb/psplay-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:50 2020"}