{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# datasette-render-timestamps\n\n[![PyPI](https://img.shields.io/pypi/v/datasette-render-timestamps.svg)](https://pypi.org/project/datasette-render-timestamps/)\n[![CircleCI](https://circleci.com/gh/simonw/datasette-render-timestamps.svg?style=svg)](https://circleci.com/gh/simonw/datasette-render-timestamps)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/datasette-render-timestamps/blob/master/LICENSE)\n\nDatasette plugin for rendering timestamps.\n\n## Installation\n\nInstall this plugin in the same environment as Datasette to enable this new functionality:\n\n    pip install datasette-render-timestamps\n\nThe plugin will then look out for integer numbers that are likely to be timestamps - anything that would be a number of seconds from 5 years ago to 5 years in the future.\n\nThese will then be rendered in a more readable format.\n\n## Configuration\n\nYou can disable automatic column detection in favour of explicitly listing the columns that you would like to render using [plugin configuration](https://datasette.readthedocs.io/en/stable/plugins.html#plugin-configuration) in a `metadata.json` file.\n\nAdd a `\"datasette-render-timestamps\"` configuration block and use a `\"columns\"` key to list the columns you would like to treat as timestamp values:\n\n```json\n{\n    \"plugins\": {\n        \"datasette-render-timestamps\": {\n            \"columns\": [\"created\", \"updated\"]\n        }\n    }\n}\n```\nThis will cause any `created` or `updated` columns in any table to be treated as timestamps and rendered.\n\nSave this to `metadata.json` and run datasette with the `--metadata` flag to load this configuration:\n\n    datasette serve mydata.db --metadata metadata.json\n\nTo disable automatic timestamp detection entirely, you can use `\"columnns\": []`.\n\nThis configuration block can be used at the top level, or it can be applied just to specific databases or tables. Here's how to apply it to just the `entries` table in the `news.db` database:\n\n```json\n{\n    \"databases\": {\n        \"news\": {\n            \"tables\": {\n                \"entries\": {\n                    \"plugins\": {\n                        \"datasette-render-timestamps\": {\n                            \"columns\": [\"created\", \"updated\"]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n### Customizing the date format\n\nThe default format is `%B %d, %Y - %H:%M:%S UTC` which renders for example: `October 10, 2019 - 07:18:29 UTC`. If you want another format, the date format can be customized using plugin configuration. Any format string supported by [strftime](http://strftime.org/) may be used. For example:\n\n```json\n{\n    \"plugins\": {\n        \"datasette-render-timestamps\": {\n            \"format\": \"%Y-%m-%d-%H:%M:%S\"\n        }\n    }\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/datasette-render-timestamps", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "datasette-render-timestamps", "package_url": "https://pypi.org/project/datasette-render-timestamps/", "platform": "", "project_url": "https://pypi.org/project/datasette-render-timestamps/", "project_urls": {"Homepage": "https://github.com/simonw/datasette-render-timestamps"}, "release_url": "https://pypi.org/project/datasette-render-timestamps/1.0.1/", "requires_dist": ["datasette", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Datasette plugin for rendering timestamps", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datasette-render-timestamps</h1>\n<p><a href=\"https://pypi.org/project/datasette-render-timestamps/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c56d79597bfb52857bc05496057d9bdb6b14242e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6461746173657474652d72656e6465722d74696d657374616d70732e737667\"></a>\n<a href=\"https://circleci.com/gh/simonw/datasette-render-timestamps\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/093dc311dbc324083f5aec4a2c4a62564573c913/68747470733a2f2f636972636c6563692e636f6d2f67682f73696d6f6e772f6461746173657474652d72656e6465722d74696d657374616d70732e7376673f7374796c653d737667\"></a>\n<a href=\"https://github.com/simonw/datasette-render-timestamps/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Datasette plugin for rendering timestamps.</p>\n<h2>Installation</h2>\n<p>Install this plugin in the same environment as Datasette to enable this new functionality:</p>\n<pre><code>pip install datasette-render-timestamps\n</code></pre>\n<p>The plugin will then look out for integer numbers that are likely to be timestamps - anything that would be a number of seconds from 5 years ago to 5 years in the future.</p>\n<p>These will then be rendered in a more readable format.</p>\n<h2>Configuration</h2>\n<p>You can disable automatic column detection in favour of explicitly listing the columns that you would like to render using <a href=\"https://datasette.readthedocs.io/en/stable/plugins.html#plugin-configuration\" rel=\"nofollow\">plugin configuration</a> in a <code>metadata.json</code> file.</p>\n<p>Add a <code>\"datasette-render-timestamps\"</code> configuration block and use a <code>\"columns\"</code> key to list the columns you would like to treat as timestamp values:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-render-timestamps\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"columns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"created\"</span><span class=\"p\">,</span> <span class=\"s2\">\"updated\"</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This will cause any <code>created</code> or <code>updated</code> columns in any table to be treated as timestamps and rendered.</p>\n<p>Save this to <code>metadata.json</code> and run datasette with the <code>--metadata</code> flag to load this configuration:</p>\n<pre><code>datasette serve mydata.db --metadata metadata.json\n</code></pre>\n<p>To disable automatic timestamp detection entirely, you can use <code>\"columnns\": []</code>.</p>\n<p>This configuration block can be used at the top level, or it can be applied just to specific databases or tables. Here's how to apply it to just the <code>entries</code> table in the <code>news.db</code> database:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"databases\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"news\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"tables\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"entries\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"datasette-render-timestamps\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">\"columns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"created\"</span><span class=\"p\">,</span> <span class=\"s2\">\"updated\"</span><span class=\"p\">]</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Customizing the date format</h3>\n<p>The default format is <code>%B %d, %Y - %H:%M:%S UTC</code> which renders for example: <code>October 10, 2019 - 07:18:29 UTC</code>. If you want another format, the date format can be customized using plugin configuration. Any format string supported by <a href=\"http://strftime.org/\" rel=\"nofollow\">strftime</a> may be used. For example:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-render-timestamps\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"%Y-%m-%d-%H:%M:%S\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6857364, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5c1d45e0cd3f591b2e1048071ae8abe5", "sha256": "789f18bb6b4790fd8fe03cfd340a285473532670600f2c4c2c0ba82b07a85b45"}, "downloads": -1, "filename": "datasette_render_timestamps-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5c1d45e0cd3f591b2e1048071ae8abe5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6588, "upload_time": "2019-10-10T22:55:26", "upload_time_iso_8601": "2019-10-10T22:55:26.328583Z", "url": "https://files.pythonhosted.org/packages/f8/42/16c97765f9ee201aa03e38451cd373b31e32b174d00a632605f381af058b/datasette_render_timestamps-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "604e9b2348502514ddfec5488b597724", "sha256": "c31236451a56911a3e4e533178c966a56c80da7a727fc6aa081527d00840768e"}, "downloads": -1, "filename": "datasette_render_timestamps-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "604e9b2348502514ddfec5488b597724", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7044, "upload_time": "2019-10-14T14:53:30", "upload_time_iso_8601": "2019-10-14T14:53:30.192529Z", "url": "https://files.pythonhosted.org/packages/79/a6/c183428f7fb45834619061a8ee030e113cefbd98424f9aa29810e4219158/datasette_render_timestamps-0.2-py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "319fcdb561262163b3b04480325f3c9f", "sha256": "8a5c1d83ead2ee3a37512716cc806ba4f19d5e109ed942aafef342771208bab5"}, "downloads": -1, "filename": "datasette_render_timestamps-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "319fcdb561262163b3b04480325f3c9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7449, "upload_time": "2020-03-21T21:41:12", "upload_time_iso_8601": "2020-03-21T21:41:12.495511Z", "url": "https://files.pythonhosted.org/packages/b1/da/e1fac4e5cae09aa0a8f48b0a4a4f740b55185c86fa6df657e712abf85bb9/datasette_render_timestamps-1.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5ad3f5f7f97b2922b4e5ddeffae2599e", "sha256": "903e5680296f78fb4f71328c3113461026eb0d3ea947a9a3fff5beefd2eee859"}, "downloads": -1, "filename": "datasette_render_timestamps-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ad3f5f7f97b2922b4e5ddeffae2599e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7454, "upload_time": "2020-03-21T21:55:14", "upload_time_iso_8601": "2020-03-21T21:55:14.204577Z", "url": "https://files.pythonhosted.org/packages/b9/12/2ecccfd9e124b010a680e763d50d8eb1f8c452a7d1aea617e4be8d0e177c/datasette_render_timestamps-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ad3f5f7f97b2922b4e5ddeffae2599e", "sha256": "903e5680296f78fb4f71328c3113461026eb0d3ea947a9a3fff5beefd2eee859"}, "downloads": -1, "filename": "datasette_render_timestamps-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ad3f5f7f97b2922b4e5ddeffae2599e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7454, "upload_time": "2020-03-21T21:55:14", "upload_time_iso_8601": "2020-03-21T21:55:14.204577Z", "url": "https://files.pythonhosted.org/packages/b9/12/2ecccfd9e124b010a680e763d50d8eb1f8c452a7d1aea617e4be8d0e177c/datasette_render_timestamps-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:40:11 2020"}