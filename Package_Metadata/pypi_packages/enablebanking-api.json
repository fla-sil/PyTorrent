{"info": {"author": "", "author_email": "hello@enablebanking.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries"], "description": "# [Open Banking aggregation library](https://enablebanking.com/)\n\nThis Python library is designed for connecting to a number of Open Banking APIs\ndirectly from your code without intermediate aggregation services. The library\nprovides unified interface for interacting with ASPSPs (banks), harmonize data\nand implements cryptographic functionality needed for interaction with PSD2 APIs,\nsuch as mTLS connection using eIDAS QWAC and request signing using eIDAS QSeal\ncertificate.\n\nThe library offers 4 API classes:\n\n- `enablebanking.MetaApi` provides information about available connectors;\n- `enablebanking.AuthApi` provides PSU (bank user) authentication and token\n  creation functionality;\n- `enablebanking.AispApi` provides methods for accessing account information,\n  such as transactions and balances, on behalf of a PSU;\n- `enablebanking.PispApi` provides methods for initiating and conforming payment\n  requests.\n\nThe same calls and data structures are used for interacting with different banks,\nbut for each bank `enablebanking.ApiClient` shall be initialised with own\nsettings and connectors' meta information shall be used to assure appropriate\nuse of the methods.\n\n**Please note that the connector modules are not included into this package and\nshall be downloaded separately.** *For more information refer to the Installation\nsection.*\n\nThis Python package is generated by the enable:Banking SDK generator using\n[Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project.\n\nThe interfaces are based on [STET PSD2 specification](https://www.stet.eu/en/psd2/),\nbut have been modified and extended in order to support usage scenarious beyond\nthe original specification.\n\n## Requirements\n\nPython 3.4+\n\n[certifi](https://pypi.org/project/certifi/)\n\n[cryptography](https://pypi.org/project/cryptography/)\n\n[python-dateutil](https://pypi.org/project/python-dateutil/)\n\n## Installation\n\nIt's the easiest to install the package using the Python Package Installer:\n\n```sh\npip install enablebanking-api\n```\n\nIn order to download a connector module you have to submit the following request\nto enablebanking.com website.\n\n```sh\ncurl -X POST \\\n    -F 'connector=Nordea' \\\n    -F 'environment=sandbox' \\\n    -F 'language=python' \\\n    -F 'email=name@company.com' \\\n    https://enablebanking.com/connectors/\n```\n\nList of connectors is available\n[here](https://enablebanking.com/docs/sdk/latest/?python#connectors-types).\n*Do not use `ConnectorSetting` postfix in the connector field when submitting the\nrequest, i.e. use just `Nordea` instead of `NordeaConnectorSettings`.*\n\nDownload link will be sent to the email address you provide.\n\n## Usage\n\nThe following code shows how to initialize API client for Nordea, authenticate\nuser and retrieve list of user's accounts.\n\n```python\nimport enablebanking\nfrom enablebanking.connectors import NordeaConnector\n\n\n# Creating API client for Nordea\nclient = enablebanking.ApiClient(\n    NordeaConnector,\n    {\n        'sandbox': True,\n        'consentId': None,\n        'accessToken': None,\n        'refreshToken': None,\n        'redirectUri': 'https://your.domain/callback',\n        'country': 'FI',\n        'clientId': 'your-nordea-api-client-id',\n        'clientSecret': 'your-nordea-api-client-secret',\n        'signKeyPath': '/path/to/eidas-key.pem',\n    })\n\n# Creating authentication API accessor\nauth_api = enablebanking.AuthApi(client)\n\n# Getting authentication URL, which the user shall visit\nauth = auth_api.get_auth(\n    state='test', # state to pass to redirect URL\n)\n\nprint('User authentication URL:', auth.url)\n\n# Extracting authorization code from the redirect URL\ncode = auth_api.parse_redirect_url(\n    # Using hardcoded value here. In reality redirect URL shall be read\n    'https://your.domain/callback?query-params#hash-params')\n\n# Making user token\ntoken = auth_api.make_token(\n    'authorization_code',\n    code,\n    auth.env\n)\n\n# Creating account information API accessor. Using same client instance already\n# holding user token. In stateless web app client likely needs to be re-created\n# with a token from the previous step.\naisp_api = enablebanking.AispApi(client)\n\n# Retrieving list of user's accounts\nacc_data = aisp_api.get_accounts()\n\nfor acc in acc_data.accounts:\n    print('Account IBAN:', acc.account_id.iban)\n```\n\nThe complete code sample is available in [this Github\nrepository](https://github.com/enablebanking/OpenBankingPythonExamples).\n\nFeel free to send us your technical questions at\n[openbanking@enablebanking.com](mailto:openbanking@enablebanking.com) or ask them\non [Stack Overflow](https://stackoverflow.com/).\n\n## Documentation\n\nThe latest reference documentation for the Python library is available\n[here](https://enablebanking.com/docs/sdk/latest/?python).\n\n## Changelog\n\nChangelog is available [here](https://enablebanking.com/docs/sdk/latest/#changelog).\n\n## License\n\nIf you have a license agreement with Enable Banking Oy covering this software, it\nsupercedes any other license bundled with this package.\n\nIf you don't have such a license agreement, you may use this software only if the\nfollowing conditions are met:\n\n- You do not modify or alter any of the files included into this software package;\n- You do not distribute the software on its own, nor as part of other application;\n- You do not sell or receive any consideration for this software, nor for other\n  software where this software package is used;\n- You are solely responsible for determining the appropriateness of using the\n  software and assume any risks associated with your exercise of permissions to\n  use this software (i.e. the software is provided on an \"AS IS\" BASIS, WITHOUT\n  WARRANTIES OR CONDITIONS OF ANY KIND).\n\nEnable Banking Oy provides commercial licenses for purchase for various usage\nscenarios that are not covered by the above conditions. Please contact us at\n[hello@enablebanking.com](mailto:hello@enablebanking.com), we'll be happy to help\nyou.\n\n## Author\n\n[Enable Banking Oy](mailto:hello@enablebanking.com)\n\nFor more information, please visit [https://enablebanking.com](https://enablebanking.com)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "enable:Banking SDK,Open Banking,PSD2,API aggregation", "license": "", "maintainer": "", "maintainer_email": "", "name": "enablebanking-api", "package_url": "https://pypi.org/project/enablebanking-api/", "platform": "", "project_url": "https://pypi.org/project/enablebanking-api/", "project_urls": null, "release_url": "https://pypi.org/project/enablebanking-api/0.5.1/", "requires_dist": ["certifi", "python-dateutil", "cryptography (==2.6.1)"], "requires_python": ">=3.4", "summary": "Single Python interface for many Open Banking / PSD2 APIs", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><a href=\"https://enablebanking.com/\" rel=\"nofollow\">Open Banking aggregation library</a></h1>\n<p>This Python library is designed for connecting to a number of Open Banking APIs\ndirectly from your code without intermediate aggregation services. The library\nprovides unified interface for interacting with ASPSPs (banks), harmonize data\nand implements cryptographic functionality needed for interaction with PSD2 APIs,\nsuch as mTLS connection using eIDAS QWAC and request signing using eIDAS QSeal\ncertificate.</p>\n<p>The library offers 4 API classes:</p>\n<ul>\n<li><code>enablebanking.MetaApi</code> provides information about available connectors;</li>\n<li><code>enablebanking.AuthApi</code> provides PSU (bank user) authentication and token\ncreation functionality;</li>\n<li><code>enablebanking.AispApi</code> provides methods for accessing account information,\nsuch as transactions and balances, on behalf of a PSU;</li>\n<li><code>enablebanking.PispApi</code> provides methods for initiating and conforming payment\nrequests.</li>\n</ul>\n<p>The same calls and data structures are used for interacting with different banks,\nbut for each bank <code>enablebanking.ApiClient</code> shall be initialised with own\nsettings and connectors' meta information shall be used to assure appropriate\nuse of the methods.</p>\n<p><strong>Please note that the connector modules are not included into this package and\nshall be downloaded separately.</strong> <em>For more information refer to the Installation\nsection.</em></p>\n<p>This Python package is generated by the enable:Banking SDK generator using\n<a href=\"https://github.com/swagger-api/swagger-codegen\" rel=\"nofollow\">Swagger Codegen</a> project.</p>\n<p>The interfaces are based on <a href=\"https://www.stet.eu/en/psd2/\" rel=\"nofollow\">STET PSD2 specification</a>,\nbut have been modified and extended in order to support usage scenarious beyond\nthe original specification.</p>\n<h2>Requirements</h2>\n<p>Python 3.4+</p>\n<p><a href=\"https://pypi.org/project/certifi/\" rel=\"nofollow\">certifi</a></p>\n<p><a href=\"https://pypi.org/project/cryptography/\" rel=\"nofollow\">cryptography</a></p>\n<p><a href=\"https://pypi.org/project/python-dateutil/\" rel=\"nofollow\">python-dateutil</a></p>\n<h2>Installation</h2>\n<p>It's the easiest to install the package using the Python Package Installer:</p>\n<pre>pip install enablebanking-api\n</pre>\n<p>In order to download a connector module you have to submit the following request\nto enablebanking.com website.</p>\n<pre>curl -X POST <span class=\"se\">\\</span>\n    -F <span class=\"s1\">'connector=Nordea'</span> <span class=\"se\">\\</span>\n    -F <span class=\"s1\">'environment=sandbox'</span> <span class=\"se\">\\</span>\n    -F <span class=\"s1\">'language=python'</span> <span class=\"se\">\\</span>\n    -F <span class=\"s1\">'email=name@company.com'</span> <span class=\"se\">\\</span>\n    https://enablebanking.com/connectors/\n</pre>\n<p>List of connectors is available\n<a href=\"https://enablebanking.com/docs/sdk/latest/?python#connectors-types\" rel=\"nofollow\">here</a>.\n<em>Do not use <code>ConnectorSetting</code> postfix in the connector field when submitting the\nrequest, i.e. use just <code>Nordea</code> instead of <code>NordeaConnectorSettings</code>.</em></p>\n<p>Download link will be sent to the email address you provide.</p>\n<h2>Usage</h2>\n<p>The following code shows how to initialize API client for Nordea, authenticate\nuser and retrieve list of user's accounts.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">enablebanking</span>\n<span class=\"kn\">from</span> <span class=\"nn\">enablebanking.connectors</span> <span class=\"kn\">import</span> <span class=\"n\">NordeaConnector</span>\n\n\n<span class=\"c1\"># Creating API client for Nordea</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">enablebanking</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span>\n    <span class=\"n\">NordeaConnector</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'sandbox'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s1\">'consentId'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s1\">'accessToken'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s1\">'refreshToken'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s1\">'redirectUri'</span><span class=\"p\">:</span> <span class=\"s1\">'https://your.domain/callback'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'FI'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'clientId'</span><span class=\"p\">:</span> <span class=\"s1\">'your-nordea-api-client-id'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'clientSecret'</span><span class=\"p\">:</span> <span class=\"s1\">'your-nordea-api-client-secret'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'signKeyPath'</span><span class=\"p\">:</span> <span class=\"s1\">'/path/to/eidas-key.pem'</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n\n<span class=\"c1\"># Creating authentication API accessor</span>\n<span class=\"n\">auth_api</span> <span class=\"o\">=</span> <span class=\"n\">enablebanking</span><span class=\"o\">.</span><span class=\"n\">AuthApi</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Getting authentication URL, which the user shall visit</span>\n<span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"n\">auth_api</span><span class=\"o\">.</span><span class=\"n\">get_auth</span><span class=\"p\">(</span>\n    <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"c1\"># state to pass to redirect URL</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'User authentication URL:'</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Extracting authorization code from the redirect URL</span>\n<span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"n\">auth_api</span><span class=\"o\">.</span><span class=\"n\">parse_redirect_url</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Using hardcoded value here. In reality redirect URL shall be read</span>\n    <span class=\"s1\">'https://your.domain/callback?query-params#hash-params'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Making user token</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">auth_api</span><span class=\"o\">.</span><span class=\"n\">make_token</span><span class=\"p\">(</span>\n    <span class=\"s1\">'authorization_code'</span><span class=\"p\">,</span>\n    <span class=\"n\">code</span><span class=\"p\">,</span>\n    <span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">env</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Creating account information API accessor. Using same client instance already</span>\n<span class=\"c1\"># holding user token. In stateless web app client likely needs to be re-created</span>\n<span class=\"c1\"># with a token from the previous step.</span>\n<span class=\"n\">aisp_api</span> <span class=\"o\">=</span> <span class=\"n\">enablebanking</span><span class=\"o\">.</span><span class=\"n\">AispApi</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Retrieving list of user's accounts</span>\n<span class=\"n\">acc_data</span> <span class=\"o\">=</span> <span class=\"n\">aisp_api</span><span class=\"o\">.</span><span class=\"n\">get_accounts</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">acc</span> <span class=\"ow\">in</span> <span class=\"n\">acc_data</span><span class=\"o\">.</span><span class=\"n\">accounts</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Account IBAN:'</span><span class=\"p\">,</span> <span class=\"n\">acc</span><span class=\"o\">.</span><span class=\"n\">account_id</span><span class=\"o\">.</span><span class=\"n\">iban</span><span class=\"p\">)</span>\n</pre>\n<p>The complete code sample is available in <a href=\"https://github.com/enablebanking/OpenBankingPythonExamples\" rel=\"nofollow\">this Github\nrepository</a>.</p>\n<p>Feel free to send us your technical questions at\n<a href=\"mailto:openbanking@enablebanking.com\">openbanking@enablebanking.com</a> or ask them\non <a href=\"https://stackoverflow.com/\" rel=\"nofollow\">Stack Overflow</a>.</p>\n<h2>Documentation</h2>\n<p>The latest reference documentation for the Python library is available\n<a href=\"https://enablebanking.com/docs/sdk/latest/?python\" rel=\"nofollow\">here</a>.</p>\n<h2>Changelog</h2>\n<p>Changelog is available <a href=\"https://enablebanking.com/docs/sdk/latest/#changelog\" rel=\"nofollow\">here</a>.</p>\n<h2>License</h2>\n<p>If you have a license agreement with Enable Banking Oy covering this software, it\nsupercedes any other license bundled with this package.</p>\n<p>If you don't have such a license agreement, you may use this software only if the\nfollowing conditions are met:</p>\n<ul>\n<li>You do not modify or alter any of the files included into this software package;</li>\n<li>You do not distribute the software on its own, nor as part of other application;</li>\n<li>You do not sell or receive any consideration for this software, nor for other\nsoftware where this software package is used;</li>\n<li>You are solely responsible for determining the appropriateness of using the\nsoftware and assume any risks associated with your exercise of permissions to\nuse this software (i.e. the software is provided on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND).</li>\n</ul>\n<p>Enable Banking Oy provides commercial licenses for purchase for various usage\nscenarios that are not covered by the above conditions. Please contact us at\n<a href=\"mailto:hello@enablebanking.com\">hello@enablebanking.com</a>, we'll be happy to help\nyou.</p>\n<h2>Author</h2>\n<p><a href=\"mailto:hello@enablebanking.com\">Enable Banking Oy</a></p>\n<p>For more information, please visit <a href=\"https://enablebanking.com\" rel=\"nofollow\">https://enablebanking.com</a></p>\n\n          </div>"}, "last_serial": 7187355, "releases": {"0.4.3": [{"comment_text": "", "digests": {"md5": "5ec0d8f82d0a6918c8f700444135888e", "sha256": "e50ed02e45ef829206b3c438d337f3eb4a2d35af6f970c0644000c4acdf79df7"}, "downloads": -1, "filename": "enablebanking_api-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5ec0d8f82d0a6918c8f700444135888e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 243690, "upload_time": "2020-02-28T08:33:31", "upload_time_iso_8601": "2020-02-28T08:33:31.110026Z", "url": "https://files.pythonhosted.org/packages/8d/04/4c930eb9d1541bc1195e3580a4cc8d5872f24abdf8ad779ae1d52166f0d2/enablebanking_api-0.4.3-py3-none-any.whl", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "df60c7a9078d3835e2ab42937491883d", "sha256": "1bfe8cbf4b8bc2cbc802243fa23285ef1309649802c36b1d76296e14c2a329d6"}, "downloads": -1, "filename": "enablebanking_api-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "df60c7a9078d3835e2ab42937491883d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 251603, "upload_time": "2020-03-05T13:16:44", "upload_time_iso_8601": "2020-03-05T13:16:44.308605Z", "url": "https://files.pythonhosted.org/packages/a0/b5/2799a3447046f9256ba24a45ccfcd536d6650f9dd81202a2ac1b11f8cb14/enablebanking_api-0.4.4-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "f6b6fe9db61165b9954073389cb2e39d", "sha256": "05a733be66513751435e6c494bbcedc4b9c9d459fccffc00c29dbae36691ddd9"}, "downloads": -1, "filename": "enablebanking_api-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f6b6fe9db61165b9954073389cb2e39d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 258049, "upload_time": "2020-04-03T09:02:00", "upload_time_iso_8601": "2020-04-03T09:02:00.383180Z", "url": "https://files.pythonhosted.org/packages/8a/ab/a777831dd90b0923df622d9091c689689e7ded933aa5f2a168ebd9f4da2b/enablebanking_api-0.5.0-py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "be614e48f7b7ed3e358b79a6a423f904", "sha256": "e9ad93ffa49575622a945c181a24af0e62f7c793a96ad428778beb13aa250ecf"}, "downloads": -1, "filename": "enablebanking_api-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "be614e48f7b7ed3e358b79a6a423f904", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 295452, "upload_time": "2020-05-07T10:41:15", "upload_time_iso_8601": "2020-05-07T10:41:15.331398Z", "url": "https://files.pythonhosted.org/packages/3a/34/895bb16a4d06fc379e650360bfd9fc5105efe2ad86edbc582c6f660831c6/enablebanking_api-0.5.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be614e48f7b7ed3e358b79a6a423f904", "sha256": "e9ad93ffa49575622a945c181a24af0e62f7c793a96ad428778beb13aa250ecf"}, "downloads": -1, "filename": "enablebanking_api-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "be614e48f7b7ed3e358b79a6a423f904", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 295452, "upload_time": "2020-05-07T10:41:15", "upload_time_iso_8601": "2020-05-07T10:41:15.331398Z", "url": "https://files.pythonhosted.org/packages/3a/34/895bb16a4d06fc379e650360bfd9fc5105efe2ad86edbc582c6f660831c6/enablebanking_api-0.5.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:46:28 2020"}