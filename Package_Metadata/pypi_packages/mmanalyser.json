{"info": {"author": "xujc", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# mmanalysis\n\n`mmanalysis` \u662f\u591a\u5a92\u4f53\u7279\u5f81\u5206\u6790\u5de5\u5177\u7684\u5e93\n\n### \u5b89\u88c5\n```\n$ pip install mmanalyser\n```\n\n### mmanalyser examples\n\n#### AudioAnalyser\n\n\u97f3\u9891\u683c\u5f0f\u73b0\u5728\u53ea\u652f\u630116000HZ\uff0c\u5355\u58f0\u9053\n\n```python\nfrom mmanalyser.audio_analyser import AudioAnalyser\naa = AudioAnalyser()\n\n# \u8f6c\u5316\u97f3\u9891\u4e3a16000HZ\uff0c\u5355\u8eab\u9053\n# source_path \u53ef\u4ee5\u662f\u89c6\u9891\uff0cURL\uff0c\u97f3\u9891\n# desc_path \u662f\u751f\u6210\u6587\u4ef6\u7684\u8def\u5f84\naa.convert_to_wav(source_path='f0.mp4', desc_path='f0.wav'):\n\n# \u5224\u65ad\u97f3\u9891\u662f\u5426\u6709\u6548\n# \u8fd4\u56delabel(True\u4e3a\u6709\u6548) \u548c 0\u52301\u4e4b\u95f4\u7684\u6570\u503c\uff08\u8d8a\u9760\u8fd11\uff0c\u5373\u8d8a\u6709\u6548\uff09\u3002\naa.is_valid_audio('f0.wav') \n\n# \u5224\u65ad\u957f\u6bb5\u97f3\u9891\u662f\u5426\u4e3a\u4eba\u58f0\uff08\u5927\u4e8e5s\uff09\n# \u8fd4\u56de0\u52301\u4e4b\u95f4\u7684\u503c\uff0c\u8d8a\u9760\u8fd11\uff0c\u5373\u8d8a\u6709\u53ef\u80fd\u662f\u4eba\u58f0\naa.is_human_voice('f0.wav') \n\n# \u5224\u65ad\u97f3\u9891\u7247\u6bb5\u662f\u5426\u4e3a\u4eba\u58f0\uff083s-5s\uff09\n# \u540c\u4e0a\naa.is_human_voice_snippet('f0.wav') \n\n# \u53bb\u6389\u9759\u97f3\u7247\u6bb5\uff0c\u83b7\u53d6\u53bb\u6389\u9759\u97f3\u7247\u6bb5\u7684\u97f3\u9891\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u83b7\u5f97\u6709\u58f0\u7247\u6bb5\u7684\u65f6\u95f4\u533a\u95f4\u548c\u5bf9\u5e94\u7684\u97f3\u9891\uff0c\u6709\u58f0\u7247\u6bb5\u7684\u65f6\u95f4\u603b\u957f\n# \u8fd4\u56de \u6587\u4ef6\u5217\u8868  [\u53bb\u6389\u9759\u97f3\u7247\u6bb5\u7684\u97f3\u9891\u5730\u5740\uff0c\u5176\u4f59\u4e3a\u6709\u58f0\u7247\u6bb5\u7684\u65f6\u95f4\u533a\u95f4\u5bf9\u5e94\u7684\u97f3\u9891]\n#      \u6709\u58f0\u7247\u6bb5\u65f6\u95f4\u533a\u95f4\n#      \u6709\u58f0\u97f3\u9891\u957f\u5ea6\n#      \u97f3\u9891\u957f\u5ea6\naa.delete_silence_snippet('f0.wav')\n```\n\n### API\n\n#### ExpressionAnalyser\n\n```python\nclass ExpressionAnalyser:\n    '''\n    \u8868\u8fbe\u80fd\u529b\u5206\u6790\u5668\n\n    asr\u6570\u636e\u683c\u5f0f\uff1a{\"pause_detection\": [[3280, 3922], [7781, 8688]], \"text_corrected\":  [], \"text\":  [[[0, 1170], \"\u9886\u5bfc\u4f60\u597d\uff0c\"],[[8940, 12250], \"\u6211\u5728\u5609\u5174\uff0c\"], [[12250, 13490], \"\u6709\u4e24\u5bb6\u9020\u7eb8\u5382\uff0c\"]]}\n    '''\n\n    def get_expression_score(self, asr, audio_path=None):\n        '''\n        \u83b7\u53d6\u8868\u8fbe\u80fd\u529b\u5206\u6570\n\n        Args:\n            asr: asr\u7ed3\u679c\n            audio_path:  \u97f3\u9891\u5730\u5740\n\n        Returns:\n             dict: {\n            'talk_speed': float,        // \u8bed\u901f\n            'audio_clear': bool,        //\u58f0\u97f3\u662f\u5426\u6e05\u6670\n            'mandarin_score': float,    //\u666e\u901a\u8bdd\u6807\u51c6\u7a0b\u5ea6\n            'expression_score': float,  //\u8868\u8fbe\u80fd\u529b\u5206\u6570\n            }\n        '''\n\n\n    def get_talk_speed(self, asr):\n        '''\n        \u83b7\u53d6\u8bed\u901f\u6307\u6807\n\n        Args:\n            asr: asr \u7ed3\u679c\n        Returns:\n           float: \u8bed\u901f\n        '''\n\n\n    def get_mandarin_score(self, asr):\n        '''\n        \u83b7\u53d6\u666e\u901a\u8bdd\u6807\u51c6\u7a0b\u5ea6\n\n        Args:\n            asr: asr\u7ed3\u679c\n\n        Returns:\n            float: \u666e\u901a\u8bdd\u6807\u51c6\u7a0b\u5ea6\n        '''\n\n    def get_audio_clear(self, asr, audio_path):\n        '''\n        \u83b7\u53d6\u58f0\u97f3\u662f\u5426\u6e05\u6670\n\n        Args:\n            asr: asr\u7ed3\u679c\n            audio_path: \u97f3\u9891\u5730\u5740\n\n        Returns:\n            bool: \u6e05\u6670\u8fd4\u56detrue \u4e0d\u6e05\u6670\u8fd4\u56defalse\n        '''\n```\n\n#### EmotionAnalyser\n\n```python\nclass EmotionAnalyser:\n    '''\n    \u60c5\u7eea\u5206\u6790\u5668\n    '''\n\n    def get_emotion_global_distribution(self, emotion):\n        \"\"\"\n\n        \u83b7\u53d6\u60c5\u7eea\u7684\u5206\u5e03\n\n        Args:\n            emotion: [{\"anger\": 0.1, \"neutral\": 0.1, \"disgust\": 0.1, \"fear\": 0.005670338961718315, \"happiness\": 0.2 \"sadness\": 0.1, \"surprise\": 0.2}, ...]\n\n        Returns:\n            dict: distribution -> {'anger': 0.04678370220399322, 'neutral': 0.04147910314122111, 'disgust': 0.05076599764308418, 'fear': 0.012459961661656426, 'happiness': 0.3805726751609995, 'sadness': 0.001341534333740512, 'surprise': 0.46659702585530505}\n        \"\"\"\n\n\n    def get_fluctuation_from_emotion(self, emotion):\n        \"\"\"\n\n        \u83b7\u53d6\u60c5\u7eea\u7684\u6ce2\u52a8\n\n        Args:\n            emotion: [{\"anger\": 0.1, \"neutral\": 0.1, \"disgust\": 0.1, \"fear\": 0.005670338961718315, \"happiness\": 0.2 \"sadness\": 0.1, \"surprise\": 0.2}, ...]\n\n        Returns:\n            list: fluction -> [0.2625822317841726, 0.286318327656083, 0.19226654361134174, 0.26339393328225225, 0.3021995866171042, 0.2843571171657221, ...]\n        \"\"\"\n\n\n    def parse(self, emotion):\n        '''\n        \u60c5\u7eea\u6574\u4f53\u5206\u6790\uff0c\u8fd4\u56de\u60c5\u7eea\u6570\u636e\uff0c\u60c5\u7eea\u603b\u4f53\u5206\u5e03\uff0c\u60c5\u7eea\u6ce2\u52a8\n\n        Args:\n            emotion: [{\"anger\": 0.1, \"neutral\": 0.1, \"disgust\": 0.1, \"fear\": 0.005670338961718315, \"happiness\": 0.2 \"sadness\": 0.1, \"surprise\": 0.2}, ...]\n\n        Returns:\n            list: data ->[[2.639, 1.415, 45.941, 3.918, 34.431, 0.159, 11.497], [0.685, 18.661, ... ] ... ]  \u987a\u5e8f\u4e3a['anger', 'neutral', 'disgust', 'fear', 'happiness', 'sadness', 'surprise']\n            dict: distribution\n            list: fluction\n        '''\n```\n\n#### HeartRateAnalyser\n\n```python\nclass HeartRateAnalyser:\n    '''\n    \u5fc3\u7387\u5206\u6790\u5668\n    '''\n    def get_bpm_from_heart_rate(self, heart_rate):\n        '''\n\n        Args:\n            heart_rate: [[70, 1000.0], [75, 2000.0], ...]\n\n        Returns:\n            list: [70, 71, ...] \u5e73\u6ed1\u8fc7\u7684\u5fc3\u7387\u6ce2\u52a8\n        '''\n```\n\n#### FluctuationDetector\n\n```python\nclass FluctuationDetector:\n    '''\n    \u6ce2\u52a8\u68c0\u6d4b\u5668\n    '''\n    def get_abnormal_fluctuation_range_from_heart_rate(self, heart_rate_infos):\n        '''\n        \u4ece\u5fc3\u7387\u4fe1\u606f\u4e2d\u62bd\u53d6\u5f02\u5e38\u6ce2\u52a8\u65f6\u95f4\u8303\u56f4\n\n        Args:\n            heart_rate_infos: [[70, 1000.0], [75, 2000.0], ...]\n\n        Returns:\n            list: [start_time, end_time]\n        '''\n\n    def get_abnormal_fluctuation_range_from_emotion_fluction(self, emotion_fluctuation):\n        '''\n        \u4ece\u60c5\u7eea\u6ce2\u52a8\u4fe1\u606f\u4e2d\u62bd\u53d6\u5f02\u5e38\u6ce2\u52a8\u65f6\u95f4\u8303\u56f4\n\n        Args:\n            emotion_fluctuation: [0.2625822317841726, 0.286318327656083, 0.19226654361134174, 0.26339393328225225, 0.3021995866171042, 0.2843571171657221, ...]\n\n        Returns:\n            list: [start_time, end_time]\n\n        '''\n\n    def get_text_from_emotion_abnormal_fluction(self, text_with_timestamp, emotion_fluctuation):\n        '''\n        \u7ed3\u5408\u5e26\u65f6\u95f4\u6233\u7684\u6587\u672c\u62bd\u53d6\u5f53\u60c5\u7eea\u6ce2\u52a8\u5f02\u5e38\u65f6\u7684\u6587\u672c\n\n        Args:\n            text_with_timestamp: [[[[0, 1170], \"\u9886\u5bfc\u4f60\u597d\uff0c\"], [[1170, 2370], \"\u6211\u53eb\uff0c\"]], ...]\n            emotion_fluctuation: [0.2625822317841726, 0.286318327656083, 0.19226654361134174, 0.26339393328225225, 0.3021995866171042, 0.2843571171657221, ...]\n\n        Returns\n            str: \"abnormal_text\"\n        '''\n\n    def get_text_from_heart_rate_abnormal_fluction(self, text_with_timestamp, heart_rate):\n        '''\n        \u7ed3\u5408\u5e26\u65f6\u95f4\u6233\u7684\u6587\u672c\u62bd\u53d6\u5fc3\u7387\u6ce2\u52a8\u5f02\u5e38\u65f6\u7684\u6587\u672c\n\n        Args:\n            text_with_timestamp: [[[[0, 1170], \"\u9886\u5bfc\u4f60\u597d\uff0c\"], [[1170, 2370], \"\u6211\u53eb\uff0c\"]], ...]\n            heart_rate: [[70, 1000.0], [75, 2000.0], ...]\n\n        Returns:\n            str: \"abnormal_text\"\n        '''\n```\n\n# release\n\n```\npython3 setup.py sdist bdist_wheel\ntwine upload dist/*\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mmanalyser", "package_url": "https://pypi.org/project/mmanalyser/", "platform": "", "project_url": "https://pypi.org/project/mmanalyser/", "project_urls": null, "release_url": "https://pypi.org/project/mmanalyser/0.4.0/", "requires_dist": ["pydub (==0.23.1)", "pandas (==0.25.3)", "etools (==0.0.8)", "pyAudioAnalysis (==0.3.0)", "webrtcvad (==2.0.10)", "python-Levenshtein (==0.12.0)", "pypinyin (==0.37.0)"], "requires_python": ">=3.5", "summary": "a tool for multimedia", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mmanalysis</h1>\n<p><code>mmanalysis</code> \u662f\u591a\u5a92\u4f53\u7279\u5f81\u5206\u6790\u5de5\u5177\u7684\u5e93</p>\n<h3>\u5b89\u88c5</h3>\n<pre><code>$ pip install mmanalyser\n</code></pre>\n<h3>mmanalyser examples</h3>\n<h4>AudioAnalyser</h4>\n<p>\u97f3\u9891\u683c\u5f0f\u73b0\u5728\u53ea\u652f\u630116000HZ\uff0c\u5355\u58f0\u9053</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mmanalyser.audio_analyser</span> <span class=\"kn\">import</span> <span class=\"n\">AudioAnalyser</span>\n<span class=\"n\">aa</span> <span class=\"o\">=</span> <span class=\"n\">AudioAnalyser</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># \u8f6c\u5316\u97f3\u9891\u4e3a16000HZ\uff0c\u5355\u8eab\u9053</span>\n<span class=\"c1\"># source_path \u53ef\u4ee5\u662f\u89c6\u9891\uff0cURL\uff0c\u97f3\u9891</span>\n<span class=\"c1\"># desc_path \u662f\u751f\u6210\u6587\u4ef6\u7684\u8def\u5f84</span>\n<span class=\"n\">aa</span><span class=\"o\">.</span><span class=\"n\">convert_to_wav</span><span class=\"p\">(</span><span class=\"n\">source_path</span><span class=\"o\">=</span><span class=\"s1\">'f0.mp4'</span><span class=\"p\">,</span> <span class=\"n\">desc_path</span><span class=\"o\">=</span><span class=\"s1\">'f0.wav'</span><span class=\"p\">):</span>\n\n<span class=\"c1\"># \u5224\u65ad\u97f3\u9891\u662f\u5426\u6709\u6548</span>\n<span class=\"c1\"># \u8fd4\u56delabel(True\u4e3a\u6709\u6548) \u548c 0\u52301\u4e4b\u95f4\u7684\u6570\u503c\uff08\u8d8a\u9760\u8fd11\uff0c\u5373\u8d8a\u6709\u6548\uff09\u3002</span>\n<span class=\"n\">aa</span><span class=\"o\">.</span><span class=\"n\">is_valid_audio</span><span class=\"p\">(</span><span class=\"s1\">'f0.wav'</span><span class=\"p\">)</span> \n\n<span class=\"c1\"># \u5224\u65ad\u957f\u6bb5\u97f3\u9891\u662f\u5426\u4e3a\u4eba\u58f0\uff08\u5927\u4e8e5s\uff09</span>\n<span class=\"c1\"># \u8fd4\u56de0\u52301\u4e4b\u95f4\u7684\u503c\uff0c\u8d8a\u9760\u8fd11\uff0c\u5373\u8d8a\u6709\u53ef\u80fd\u662f\u4eba\u58f0</span>\n<span class=\"n\">aa</span><span class=\"o\">.</span><span class=\"n\">is_human_voice</span><span class=\"p\">(</span><span class=\"s1\">'f0.wav'</span><span class=\"p\">)</span> \n\n<span class=\"c1\"># \u5224\u65ad\u97f3\u9891\u7247\u6bb5\u662f\u5426\u4e3a\u4eba\u58f0\uff083s-5s\uff09</span>\n<span class=\"c1\"># \u540c\u4e0a</span>\n<span class=\"n\">aa</span><span class=\"o\">.</span><span class=\"n\">is_human_voice_snippet</span><span class=\"p\">(</span><span class=\"s1\">'f0.wav'</span><span class=\"p\">)</span> \n\n<span class=\"c1\"># \u53bb\u6389\u9759\u97f3\u7247\u6bb5\uff0c\u83b7\u53d6\u53bb\u6389\u9759\u97f3\u7247\u6bb5\u7684\u97f3\u9891\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u83b7\u5f97\u6709\u58f0\u7247\u6bb5\u7684\u65f6\u95f4\u533a\u95f4\u548c\u5bf9\u5e94\u7684\u97f3\u9891\uff0c\u6709\u58f0\u7247\u6bb5\u7684\u65f6\u95f4\u603b\u957f</span>\n<span class=\"c1\"># \u8fd4\u56de \u6587\u4ef6\u5217\u8868  [\u53bb\u6389\u9759\u97f3\u7247\u6bb5\u7684\u97f3\u9891\u5730\u5740\uff0c\u5176\u4f59\u4e3a\u6709\u58f0\u7247\u6bb5\u7684\u65f6\u95f4\u533a\u95f4\u5bf9\u5e94\u7684\u97f3\u9891]</span>\n<span class=\"c1\">#      \u6709\u58f0\u7247\u6bb5\u65f6\u95f4\u533a\u95f4</span>\n<span class=\"c1\">#      \u6709\u58f0\u97f3\u9891\u957f\u5ea6</span>\n<span class=\"c1\">#      \u97f3\u9891\u957f\u5ea6</span>\n<span class=\"n\">aa</span><span class=\"o\">.</span><span class=\"n\">delete_silence_snippet</span><span class=\"p\">(</span><span class=\"s1\">'f0.wav'</span><span class=\"p\">)</span>\n</pre>\n<h3>API</h3>\n<h4>ExpressionAnalyser</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ExpressionAnalyser</span><span class=\"p\">:</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    \u8868\u8fbe\u80fd\u529b\u5206\u6790\u5668</span>\n\n<span class=\"sd\">    asr\u6570\u636e\u683c\u5f0f\uff1a{\"pause_detection\": [[3280, 3922], [7781, 8688]], \"text_corrected\":  [], \"text\":  [[[0, 1170], \"\u9886\u5bfc\u4f60\u597d\uff0c\"],[[8940, 12250], \"\u6211\u5728\u5609\u5174\uff0c\"], [[12250, 13490], \"\u6709\u4e24\u5bb6\u9020\u7eb8\u5382\uff0c\"]]}</span>\n<span class=\"sd\">    '''</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_expression_score</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">asr</span><span class=\"p\">,</span> <span class=\"n\">audio_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u83b7\u53d6\u8868\u8fbe\u80fd\u529b\u5206\u6570</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            asr: asr\u7ed3\u679c</span>\n<span class=\"sd\">            audio_path:  \u97f3\u9891\u5730\u5740</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">             dict: {</span>\n<span class=\"sd\">            'talk_speed': float,        // \u8bed\u901f</span>\n<span class=\"sd\">            'audio_clear': bool,        //\u58f0\u97f3\u662f\u5426\u6e05\u6670</span>\n<span class=\"sd\">            'mandarin_score': float,    //\u666e\u901a\u8bdd\u6807\u51c6\u7a0b\u5ea6</span>\n<span class=\"sd\">            'expression_score': float,  //\u8868\u8fbe\u80fd\u529b\u5206\u6570</span>\n<span class=\"sd\">            }</span>\n<span class=\"sd\">        '''</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_talk_speed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">asr</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u83b7\u53d6\u8bed\u901f\u6307\u6807</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            asr: asr \u7ed3\u679c</span>\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">           float: \u8bed\u901f</span>\n<span class=\"sd\">        '''</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_mandarin_score</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">asr</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u83b7\u53d6\u666e\u901a\u8bdd\u6807\u51c6\u7a0b\u5ea6</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            asr: asr\u7ed3\u679c</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            float: \u666e\u901a\u8bdd\u6807\u51c6\u7a0b\u5ea6</span>\n<span class=\"sd\">        '''</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_audio_clear</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">asr</span><span class=\"p\">,</span> <span class=\"n\">audio_path</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u83b7\u53d6\u58f0\u97f3\u662f\u5426\u6e05\u6670</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            asr: asr\u7ed3\u679c</span>\n<span class=\"sd\">            audio_path: \u97f3\u9891\u5730\u5740</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            bool: \u6e05\u6670\u8fd4\u56detrue \u4e0d\u6e05\u6670\u8fd4\u56defalse</span>\n<span class=\"sd\">        '''</span>\n</pre>\n<h4>EmotionAnalyser</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">EmotionAnalyser</span><span class=\"p\">:</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    \u60c5\u7eea\u5206\u6790\u5668</span>\n<span class=\"sd\">    '''</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_emotion_global_distribution</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">emotion</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n\n<span class=\"sd\">        \u83b7\u53d6\u60c5\u7eea\u7684\u5206\u5e03</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            emotion: [{\"anger\": 0.1, \"neutral\": 0.1, \"disgust\": 0.1, \"fear\": 0.005670338961718315, \"happiness\": 0.2 \"sadness\": 0.1, \"surprise\": 0.2}, ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            dict: distribution -&gt; {'anger': 0.04678370220399322, 'neutral': 0.04147910314122111, 'disgust': 0.05076599764308418, 'fear': 0.012459961661656426, 'happiness': 0.3805726751609995, 'sadness': 0.001341534333740512, 'surprise': 0.46659702585530505}</span>\n<span class=\"sd\">        \"\"\"</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_fluctuation_from_emotion</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">emotion</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n\n<span class=\"sd\">        \u83b7\u53d6\u60c5\u7eea\u7684\u6ce2\u52a8</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            emotion: [{\"anger\": 0.1, \"neutral\": 0.1, \"disgust\": 0.1, \"fear\": 0.005670338961718315, \"happiness\": 0.2 \"sadness\": 0.1, \"surprise\": 0.2}, ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            list: fluction -&gt; [0.2625822317841726, 0.286318327656083, 0.19226654361134174, 0.26339393328225225, 0.3021995866171042, 0.2843571171657221, ...]</span>\n<span class=\"sd\">        \"\"\"</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">emotion</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u60c5\u7eea\u6574\u4f53\u5206\u6790\uff0c\u8fd4\u56de\u60c5\u7eea\u6570\u636e\uff0c\u60c5\u7eea\u603b\u4f53\u5206\u5e03\uff0c\u60c5\u7eea\u6ce2\u52a8</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            emotion: [{\"anger\": 0.1, \"neutral\": 0.1, \"disgust\": 0.1, \"fear\": 0.005670338961718315, \"happiness\": 0.2 \"sadness\": 0.1, \"surprise\": 0.2}, ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            list: data -&gt;[[2.639, 1.415, 45.941, 3.918, 34.431, 0.159, 11.497], [0.685, 18.661, ... ] ... ]  \u987a\u5e8f\u4e3a['anger', 'neutral', 'disgust', 'fear', 'happiness', 'sadness', 'surprise']</span>\n<span class=\"sd\">            dict: distribution</span>\n<span class=\"sd\">            list: fluction</span>\n<span class=\"sd\">        '''</span>\n</pre>\n<h4>HeartRateAnalyser</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">HeartRateAnalyser</span><span class=\"p\">:</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    \u5fc3\u7387\u5206\u6790\u5668</span>\n<span class=\"sd\">    '''</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_bpm_from_heart_rate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">heart_rate</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            heart_rate: [[70, 1000.0], [75, 2000.0], ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            list: [70, 71, ...] \u5e73\u6ed1\u8fc7\u7684\u5fc3\u7387\u6ce2\u52a8</span>\n<span class=\"sd\">        '''</span>\n</pre>\n<h4>FluctuationDetector</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">FluctuationDetector</span><span class=\"p\">:</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    \u6ce2\u52a8\u68c0\u6d4b\u5668</span>\n<span class=\"sd\">    '''</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_abnormal_fluctuation_range_from_heart_rate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">heart_rate_infos</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u4ece\u5fc3\u7387\u4fe1\u606f\u4e2d\u62bd\u53d6\u5f02\u5e38\u6ce2\u52a8\u65f6\u95f4\u8303\u56f4</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            heart_rate_infos: [[70, 1000.0], [75, 2000.0], ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            list: [start_time, end_time]</span>\n<span class=\"sd\">        '''</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_abnormal_fluctuation_range_from_emotion_fluction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">emotion_fluctuation</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u4ece\u60c5\u7eea\u6ce2\u52a8\u4fe1\u606f\u4e2d\u62bd\u53d6\u5f02\u5e38\u6ce2\u52a8\u65f6\u95f4\u8303\u56f4</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            emotion_fluctuation: [0.2625822317841726, 0.286318327656083, 0.19226654361134174, 0.26339393328225225, 0.3021995866171042, 0.2843571171657221, ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            list: [start_time, end_time]</span>\n\n<span class=\"sd\">        '''</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_text_from_emotion_abnormal_fluction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text_with_timestamp</span><span class=\"p\">,</span> <span class=\"n\">emotion_fluctuation</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u7ed3\u5408\u5e26\u65f6\u95f4\u6233\u7684\u6587\u672c\u62bd\u53d6\u5f53\u60c5\u7eea\u6ce2\u52a8\u5f02\u5e38\u65f6\u7684\u6587\u672c</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            text_with_timestamp: [[[[0, 1170], \"\u9886\u5bfc\u4f60\u597d\uff0c\"], [[1170, 2370], \"\u6211\u53eb\uff0c\"]], ...]</span>\n<span class=\"sd\">            emotion_fluctuation: [0.2625822317841726, 0.286318327656083, 0.19226654361134174, 0.26339393328225225, 0.3021995866171042, 0.2843571171657221, ...]</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">            str: \"abnormal_text\"</span>\n<span class=\"sd\">        '''</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_text_from_heart_rate_abnormal_fluction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text_with_timestamp</span><span class=\"p\">,</span> <span class=\"n\">heart_rate</span><span class=\"p\">):</span>\n        <span class=\"sd\">'''</span>\n<span class=\"sd\">        \u7ed3\u5408\u5e26\u65f6\u95f4\u6233\u7684\u6587\u672c\u62bd\u53d6\u5fc3\u7387\u6ce2\u52a8\u5f02\u5e38\u65f6\u7684\u6587\u672c</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            text_with_timestamp: [[[[0, 1170], \"\u9886\u5bfc\u4f60\u597d\uff0c\"], [[1170, 2370], \"\u6211\u53eb\uff0c\"]], ...]</span>\n<span class=\"sd\">            heart_rate: [[70, 1000.0], [75, 2000.0], ...]</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            str: \"abnormal_text\"</span>\n<span class=\"sd\">        '''</span>\n</pre>\n<h1>release</h1>\n<pre><code>python3 setup.py sdist bdist_wheel\ntwine upload dist/*\n</code></pre>\n\n          </div>"}, "last_serial": 7134497, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "25896ba9af61ea2dfe276a1dc317ef22", "sha256": "a2b93121312ca57a187a74d2b9307d614558920137defd80d71cc26e3b734af5"}, "downloads": -1, "filename": "mmanalyser-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "25896ba9af61ea2dfe276a1dc317ef22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13906, "upload_time": "2020-03-18T08:55:53", "upload_time_iso_8601": "2020-03-18T08:55:53.192702Z", "url": "https://files.pythonhosted.org/packages/8a/65/dcae90ae6da3e7e32be6f7376ebf5bfc9fee55cf4e9e3dc682956dfd9292/mmanalyser-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1d52e185962a4d1809a3c82c7b069c7", "sha256": "ebf7b9071ca859bf49308462f6ec918a1686a2ba8866cf15ba5855b13b9a1c78"}, "downloads": -1, "filename": "mmanalyser-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e1d52e185962a4d1809a3c82c7b069c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10311, "upload_time": "2020-03-18T08:55:56", "upload_time_iso_8601": "2020-03-18T08:55:56.089803Z", "url": "https://files.pythonhosted.org/packages/67/56/56564bfc4576dc4e2b48ba263a728ca6bc1c75594c6ba763a2f6575ff686/mmanalyser-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "773beb2e4f50db2da575f6674bd12947", "sha256": "a482adb391c44836ba38aaa6dcbbad18c20f1f61a6895b582953277ebbc2307f"}, "downloads": -1, "filename": "mmanalyser-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "773beb2e4f50db2da575f6674bd12947", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13988, "upload_time": "2020-03-27T10:40:28", "upload_time_iso_8601": "2020-03-27T10:40:28.708507Z", "url": "https://files.pythonhosted.org/packages/1f/d1/39c2836ed328fd2aab6db29b3a0430b47b77331a8c4aafe4c2ce9d28ed6e/mmanalyser-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a0ea8fda357b3ea73eccc1cfb1ae36b", "sha256": "98d79be500cae2195e9082a089317468f62552ee4803f3adb5bfc30255ee7a72"}, "downloads": -1, "filename": "mmanalyser-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9a0ea8fda357b3ea73eccc1cfb1ae36b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10362, "upload_time": "2020-03-27T10:40:31", "upload_time_iso_8601": "2020-03-27T10:40:31.337915Z", "url": "https://files.pythonhosted.org/packages/07/23/571d31bc883fb998220017a90583a07d18fe3761883ec32b2d6ea6fadbf2/mmanalyser-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c9b1bb3704e9596a7f17d533e589cd26", "sha256": "12af5a0ef65cb989bcb281d9568b07b3e3b89f6faef3e695cbaa8fa849875a51"}, "downloads": -1, "filename": "mmanalyser-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9b1bb3704e9596a7f17d533e589cd26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 240161, "upload_time": "2020-04-29T02:27:02", "upload_time_iso_8601": "2020-04-29T02:27:02.169064Z", "url": "https://files.pythonhosted.org/packages/6a/70/b4058dbd68b187aacafe3af71eeb6a8049d1c85490e48fa1c54fabe94bb0/mmanalyser-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fc8e187902065000523081421cef19a", "sha256": "b86421ebef414497260e7b1b2a043eb65eefb8eb3480b49d1972a7bec29d038c"}, "downloads": -1, "filename": "mmanalyser-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3fc8e187902065000523081421cef19a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 235523, "upload_time": "2020-04-29T02:27:04", "upload_time_iso_8601": "2020-04-29T02:27:04.284050Z", "url": "https://files.pythonhosted.org/packages/0e/6a/996819facfcc4177da911cfea934b9b9164c3e86b6b7ab763efa52d1ebf8/mmanalyser-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "094bfdb32636b11af9dc0265a37a506a", "sha256": "2413b31e229554ac51f4914d062be236da182be1efa4f0341d01d45e5c92baf8"}, "downloads": -1, "filename": "mmanalyser-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "094bfdb32636b11af9dc0265a37a506a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 240879, "upload_time": "2020-04-30T02:51:26", "upload_time_iso_8601": "2020-04-30T02:51:26.629883Z", "url": "https://files.pythonhosted.org/packages/b3/e1/32df1e6741d0136ff1aceddc875dd31757de2cddddfe4af64c1b558ade88/mmanalyser-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bc825a2422da467e947d7e93a9bc544", "sha256": "11ed755d5a5d298bea06bef6238f44a1bf3dd36c1fa377f29b311c67335d6e3d"}, "downloads": -1, "filename": "mmanalyser-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1bc825a2422da467e947d7e93a9bc544", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 237114, "upload_time": "2020-04-30T02:51:28", "upload_time_iso_8601": "2020-04-30T02:51:28.898131Z", "url": "https://files.pythonhosted.org/packages/da/f6/8ea13eb5264e0938ba8b5d3f0a304be273d7eb853f55828a840ff82035af/mmanalyser-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "094bfdb32636b11af9dc0265a37a506a", "sha256": "2413b31e229554ac51f4914d062be236da182be1efa4f0341d01d45e5c92baf8"}, "downloads": -1, "filename": "mmanalyser-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "094bfdb32636b11af9dc0265a37a506a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 240879, "upload_time": "2020-04-30T02:51:26", "upload_time_iso_8601": "2020-04-30T02:51:26.629883Z", "url": "https://files.pythonhosted.org/packages/b3/e1/32df1e6741d0136ff1aceddc875dd31757de2cddddfe4af64c1b558ade88/mmanalyser-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bc825a2422da467e947d7e93a9bc544", "sha256": "11ed755d5a5d298bea06bef6238f44a1bf3dd36c1fa377f29b311c67335d6e3d"}, "downloads": -1, "filename": "mmanalyser-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1bc825a2422da467e947d7e93a9bc544", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 237114, "upload_time": "2020-04-30T02:51:28", "upload_time_iso_8601": "2020-04-30T02:51:28.898131Z", "url": "https://files.pythonhosted.org/packages/da/f6/8ea13eb5264e0938ba8b5d3f0a304be273d7eb853f55828a840ff82035af/mmanalyser-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:17 2020"}