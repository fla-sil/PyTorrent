{"info": {"author": "Pinneaple6", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Proof of work\n## A simple Proof Of Work module made with python\n\n## **POW ALGORITHM**\nThe algorythm used in this module is very simple:\nThe inputs are an **initial SHA-256 hash** (that could be the last proof of work hash, like in bitcoin system) and a **difficult in number of zeroes**. That means the number of zeroes that the resulting hash must have at it's begining.\n\nStarting with those two arguments, the script now makes a new random hash. That's the proof of work.\nThis new hash has to meet a condition:\n1. The new hash is attached to the **initial hash**\n2. The script now converts those two joint hashes (initial + new) into another hash. (Resulting hash)\n3. If the resulting hash begins with the specified **number of zeroes**, the proof of work is valid.\n4. The information returned is: (proof_of_work_hash, resulting_hash, number_of_attempts)\n> Notice that the resulting hash may have more zeroes than the specified. The difficult is a **minimum**.\n\nFor curious people: [What is a proof of work?](https://en.wikipedia.org/wiki/Proof-of-work_system)\n\n## **Other methods**\nproof_of_work() is not the only method contained in this module. Here's an explanation of some others:\n* **random_hash()**: Returns a random SHA-256 hash.\n* **make_hash(string)**: Converts a string into a SHA-256 hash.\n\n## **How to use it**\n**From pip:** ```pip install powpy```\n**From github repository:** Download and run setup.py\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Pineapple6/powpy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "powpy", "package_url": "https://pypi.org/project/powpy/", "platform": "", "project_url": "https://pypi.org/project/powpy/", "project_urls": {"Homepage": "https://github.com/Pineapple6/powpy"}, "release_url": "https://pypi.org/project/powpy/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A simple proof of work using SHA-256 hashes", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Proof of work</h1>\n<h2>A simple Proof Of Work module made with python</h2>\n<h2><strong>POW ALGORITHM</strong></h2>\n<p>The algorythm used in this module is very simple:\nThe inputs are an <strong>initial SHA-256 hash</strong> (that could be the last proof of work hash, like in bitcoin system) and a <strong>difficult in number of zeroes</strong>. That means the number of zeroes that the resulting hash must have at it's begining.</p>\n<p>Starting with those two arguments, the script now makes a new random hash. That's the proof of work.\nThis new hash has to meet a condition:</p>\n<ol>\n<li>The new hash is attached to the <strong>initial hash</strong></li>\n<li>The script now converts those two joint hashes (initial + new) into another hash. (Resulting hash)</li>\n<li>If the resulting hash begins with the specified <strong>number of zeroes</strong>, the proof of work is valid.</li>\n<li>The information returned is: (proof_of_work_hash, resulting_hash, number_of_attempts)</li>\n</ol>\n<blockquote>\n<p>Notice that the resulting hash may have more zeroes than the specified. The difficult is a <strong>minimum</strong>.</p>\n</blockquote>\n<p>For curious people: <a href=\"https://en.wikipedia.org/wiki/Proof-of-work_system\" rel=\"nofollow\">What is a proof of work?</a></p>\n<h2><strong>Other methods</strong></h2>\n<p>proof_of_work() is not the only method contained in this module. Here's an explanation of some others:</p>\n<ul>\n<li><strong>random_hash()</strong>: Returns a random SHA-256 hash.</li>\n<li><strong>make_hash(string)</strong>: Converts a string into a SHA-256 hash.</li>\n</ul>\n<h2><strong>How to use it</strong></h2>\n<p><strong>From pip:</strong> <code>pip install powpy</code>\n<strong>From github repository:</strong> Download and run setup.py</p>\n\n          </div>"}, "last_serial": 4302154, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "18fcce34256fb886cb810e176fc7d3d4", "sha256": "8724241a4e60687032c2fd7af90644c040d06859182312729ad984a43b943fee"}, "downloads": -1, "filename": "powpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "18fcce34256fb886cb810e176fc7d3d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2620, "upload_time": "2018-06-15T12:02:23", "upload_time_iso_8601": "2018-06-15T12:02:23.955655Z", "url": "https://files.pythonhosted.org/packages/67/37/94c1a863f970b583254b0335b38079110ff1c6eab30c310a85528375e6fc/powpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d4b000e710e240e6778abb16dfdad0d", "sha256": "9ba01c039c1dc75b77f6bdfcd0f19e1eb98d3752b28898c41907c64702aee726"}, "downloads": -1, "filename": "powpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8d4b000e710e240e6778abb16dfdad0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2283, "upload_time": "2018-06-15T12:02:25", "upload_time_iso_8601": "2018-06-15T12:02:25.145019Z", "url": "https://files.pythonhosted.org/packages/a6/4b/1ff0790ac79e1077073ffb5d3d764d0ae39463f861314be54f5c0ee08eef/powpy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f06e81c1d71089648aa8b15835aa17fa", "sha256": "4a7dd54d9e1b1d88be7767b500c6efb567b0e6d4b385a079bac5d89afbebd78c"}, "downloads": -1, "filename": "powpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f06e81c1d71089648aa8b15835aa17fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2550, "upload_time": "2018-09-23T15:39:34", "upload_time_iso_8601": "2018-09-23T15:39:34.395472Z", "url": "https://files.pythonhosted.org/packages/13/62/6587e82bd3823fd4f9b752cafe04064ef003bd65cfc01588344b802768b4/powpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f14f25e2bd29906edb3ccf3c9f94fe21", "sha256": "f9f629aa26701ba78d654064cb360ad22892fad6c1eadcfc92cffad13945d538"}, "downloads": -1, "filename": "powpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f14f25e2bd29906edb3ccf3c9f94fe21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2227, "upload_time": "2018-09-23T15:39:35", "upload_time_iso_8601": "2018-09-23T15:39:35.631853Z", "url": "https://files.pythonhosted.org/packages/9d/c9/2f1655f5ac64f58232b7acfc4df3607ef8682871aa0573fcf533c386da73/powpy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f06e81c1d71089648aa8b15835aa17fa", "sha256": "4a7dd54d9e1b1d88be7767b500c6efb567b0e6d4b385a079bac5d89afbebd78c"}, "downloads": -1, "filename": "powpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f06e81c1d71089648aa8b15835aa17fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2550, "upload_time": "2018-09-23T15:39:34", "upload_time_iso_8601": "2018-09-23T15:39:34.395472Z", "url": "https://files.pythonhosted.org/packages/13/62/6587e82bd3823fd4f9b752cafe04064ef003bd65cfc01588344b802768b4/powpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f14f25e2bd29906edb3ccf3c9f94fe21", "sha256": "f9f629aa26701ba78d654064cb360ad22892fad6c1eadcfc92cffad13945d538"}, "downloads": -1, "filename": "powpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f14f25e2bd29906edb3ccf3c9f94fe21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2227, "upload_time": "2018-09-23T15:39:35", "upload_time_iso_8601": "2018-09-23T15:39:35.631853Z", "url": "https://files.pythonhosted.org/packages/9d/c9/2f1655f5ac64f58232b7acfc4df3607ef8682871aa0573fcf533c386da73/powpy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:36 2020"}