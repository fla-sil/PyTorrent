{"info": {"author": "Nikolay Novik", "author_email": "nickolainovik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "mldissect\n=========\n.. image:: https://travis-ci.com/ml-libs/mldissect.svg?branch=master\n    :target: https://travis-ci.com/ml-libs/mldissect\n.. image:: https://codecov.io/gh/ml-libs/mldissect/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/ml-libs/mldissect \n.. image:: https://api.codeclimate.com/v1/badges/bc29bc214f39b54ef30a/maintainability\n   :target: https://codeclimate.com/github/ml-libs/mldissect/maintainability\n   :alt: Maintainability\n\n\n**mldissect** is model agnostic predictions explainer, library can show\ncontribution of each feature of your prediction value.\n\nFeatures\n========\n* Supports predictions explanations for classification and regression\n* Easy to use API.\n* Works with ``pandas`` and ``numpy``\n\n\nInstallation\n------------\nInstallation process is simple, just::\n\n    $ pip install mldissect\n\nBasic Usage\n===========\n\n.. code:: python\n\n    # lets train a model\n    boston = load_boston()\n    columns = list(boston.feature_names)\n    X, y = boston['data'], boston['target']\n    X_train, X_test, y_train, y_test = train_test_split(\n        X, y, test_size=.2, random_state=seed\n    )\n\n    clf = LassoCV()\n    clf.fit(X_train, y_train)\n\n    # select first observation in test split\n    observation = X_test[0]\n    # RegressionExplainer uses training data or sample of training data\n    # for large dataset to figure out contributions of each feature\n    explainer = RegressionExplainer(clf, X_train, columns)\n    result = explainer.explain(observation)\n    # print/visualize explanation\n    explanation = Explanation(result)\n    explanation.print()\n\n\nresult::\n\n    +----------+---------+--------------------+\n    | Feature  | Value   | Contribution       |\n    +----------+---------+--------------------+\n    | baseline | -       | 22.611881188118804 |\n    | LSTAT    | 7.34    | 3.6872             |\n    | PTRATIO  | 16.9    | 1.3652             |\n    | CRIM     | 0.06724 | 0.2323             |\n    | B        | 375.21  | 0.1195             |\n    | RM       | 6.333   | 0.0411             |\n    | INDUS    | 3.24    | 0.0312             |\n    | CHAS     | 0.0     | 0.0                |\n    | NOX      | 0.46    | 0.0                |\n    | TAX      | 430.0   | -0.3794            |\n    | AGE      | 17.2    | -0.5127            |\n    | ZN       | 0.0     | -0.6143            |\n    | DIS      | 5.2146  | -1.0792            |\n    | RAD      | 4.0     | -1.0993            |\n    +----------+---------+--------------------+\n\n\nAlgorithm\n=========\nAlgorithm is based on ideas describe in paper *\"Explanations of model predictions\nwith live and breakDown packages\"* https://arxiv.org/abs/1804.01955\n\n\nDifference with pyBreakDown\n===========================\n``pyBreakDown`` is similar project, but there is key differences:\n\n* `mldissect` is maintained\n* Has tests and good code coverage.\n* Classification is working properly.\n* Multi class support.\n* Top down approach is not implemented.\n* Friendly license.\n\n\nRequirements\n------------\n\n* Python_ 3.6+\n* numpy_\n\n.. _Python: https://www.python.org\n.. _numpy: http://www.numpy.org/\n\nCHANGES\n=======", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/mldissect", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ml-libs/mldissect", "keywords": "mldissect", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "mldissect", "package_url": "https://pypi.org/project/mldissect/", "platform": "POSIX", "project_url": "https://pypi.org/project/mldissect/", "project_urls": {"Download": "https://pypi.python.org/pypi/mldissect", "Homepage": "https://github.com/ml-libs/mldissect"}, "release_url": "https://pypi.org/project/mldissect/0.0.1a2/", "requires_dist": null, "requires_python": "", "summary": "mldissect - model agnostic explanations", "version": "0.0.1a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mldissect\">\n<h2>mldissect</h2>\n<a href=\"https://travis-ci.com/ml-libs/mldissect\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/ml-libs/mldissect.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cfdeab8dbd1289a007c347fce30c26ff3cfee74/68747470733a2f2f7472617669732d63692e636f6d2f6d6c2d6c6962732f6d6c646973736563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/ml-libs/mldissect\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/ml-libs/mldissect/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3a0d1d99275b1a520d479f38db0a5104ae50359/68747470733a2f2f636f6465636f762e696f2f67682f6d6c2d6c6962732f6d6c646973736563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/ml-libs/mldissect/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b94c84dbefc7a70e910320a8edb4e80378ba3ce4/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f62633239626332313466333962353465663330612f6d61696e7461696e6162696c697479\"></a>\n<p><strong>mldissect</strong> is model agnostic predictions explainer, library can show\ncontribution of each feature of your prediction value.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Supports predictions explanations for classification and regression</li>\n<li>Easy to use API.</li>\n<li>Works with <tt>pandas</tt> and <tt>numpy</tt></li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Installation process is simple, just:</p>\n<pre>$ pip install mldissect\n</pre>\n</div>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<pre><span class=\"c1\"># lets train a model</span>\n<span class=\"n\">boston</span> <span class=\"o\">=</span> <span class=\"n\">load_boston</span><span class=\"p\">()</span>\n<span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">feature_names</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">boston</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">],</span> <span class=\"n\">boston</span><span class=\"p\">[</span><span class=\"s1\">'target'</span><span class=\"p\">]</span>\n<span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span>\n    <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=.</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"n\">seed</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">LassoCV</span><span class=\"p\">()</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># select first observation in test split</span>\n<span class=\"n\">observation</span> <span class=\"o\">=</span> <span class=\"n\">X_test</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"c1\"># RegressionExplainer uses training data or sample of training data</span>\n<span class=\"c1\"># for large dataset to figure out contributions of each feature</span>\n<span class=\"n\">explainer</span> <span class=\"o\">=</span> <span class=\"n\">RegressionExplainer</span><span class=\"p\">(</span><span class=\"n\">clf</span><span class=\"p\">,</span> <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">explainer</span><span class=\"o\">.</span><span class=\"n\">explain</span><span class=\"p\">(</span><span class=\"n\">observation</span><span class=\"p\">)</span>\n<span class=\"c1\"># print/visualize explanation</span>\n<span class=\"n\">explanation</span> <span class=\"o\">=</span> <span class=\"n\">Explanation</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"n\">explanation</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n</pre>\n<p>result:</p>\n<pre>+----------+---------+--------------------+\n| Feature  | Value   | Contribution       |\n+----------+---------+--------------------+\n| baseline | -       | 22.611881188118804 |\n| LSTAT    | 7.34    | 3.6872             |\n| PTRATIO  | 16.9    | 1.3652             |\n| CRIM     | 0.06724 | 0.2323             |\n| B        | 375.21  | 0.1195             |\n| RM       | 6.333   | 0.0411             |\n| INDUS    | 3.24    | 0.0312             |\n| CHAS     | 0.0     | 0.0                |\n| NOX      | 0.46    | 0.0                |\n| TAX      | 430.0   | -0.3794            |\n| AGE      | 17.2    | -0.5127            |\n| ZN       | 0.0     | -0.6143            |\n| DIS      | 5.2146  | -1.0792            |\n| RAD      | 4.0     | -1.0993            |\n+----------+---------+--------------------+\n</pre>\n</div>\n<div id=\"algorithm\">\n<h2>Algorithm</h2>\n<p>Algorithm is based on ideas describe in paper <em>\u201cExplanations of model predictions\nwith live and breakDown packages\u201d</em> <a href=\"https://arxiv.org/abs/1804.01955\" rel=\"nofollow\">https://arxiv.org/abs/1804.01955</a></p>\n</div>\n<div id=\"difference-with-pybreakdown\">\n<h2>Difference with pyBreakDown</h2>\n<p><tt>pyBreakDown</tt> is similar project, but there is key differences:</p>\n<ul>\n<li><cite>mldissect</cite> is maintained</li>\n<li>Has tests and good code coverage.</li>\n<li>Classification is working properly.</li>\n<li>Multi class support.</li>\n<li>Top down approach is not implemented.</li>\n<li>Friendly license.</li>\n</ul>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"https://www.python.org\" rel=\"nofollow\">Python</a> 3.6+</li>\n<li><a href=\"http://www.numpy.org/\" rel=\"nofollow\">numpy</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n</div>\n\n          </div>"}, "last_serial": 4450183, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "230a577ef07f89f5ec61e07863b92032", "sha256": "35a49690289cc57a510dd5ba3663953edb367410f163d01375e46d9aba8fdfb8"}, "downloads": -1, "filename": "mldissect-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "230a577ef07f89f5ec61e07863b92032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8632, "upload_time": "2018-09-26T21:23:28", "upload_time_iso_8601": "2018-09-26T21:23:28.520466Z", "url": "https://files.pythonhosted.org/packages/2c/cc/2ff03c7496399f714442e83d3a6af40c065c12864dd3f5661e7131b5d656/mldissect-0.0.1a0.tar.gz", "yanked": false}], "0.0.1a2": [{"comment_text": "", "digests": {"md5": "78192f0f66780678a99303b1de86a435", "sha256": "76076b4cbe86a09c9e038785b62ec6ca18682fee9f2fccbc39711a09a1da7d86"}, "downloads": -1, "filename": "mldissect-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "78192f0f66780678a99303b1de86a435", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8674, "upload_time": "2018-11-04T17:23:47", "upload_time_iso_8601": "2018-11-04T17:23:47.024846Z", "url": "https://files.pythonhosted.org/packages/f0/17/0a2c31d9a6d70c6347c3f254fa757fe5b60944dc19bb9af82b18d033ffd0/mldissect-0.0.1a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "78192f0f66780678a99303b1de86a435", "sha256": "76076b4cbe86a09c9e038785b62ec6ca18682fee9f2fccbc39711a09a1da7d86"}, "downloads": -1, "filename": "mldissect-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "78192f0f66780678a99303b1de86a435", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8674, "upload_time": "2018-11-04T17:23:47", "upload_time_iso_8601": "2018-11-04T17:23:47.024846Z", "url": "https://files.pythonhosted.org/packages/f0/17/0a2c31d9a6d70c6347c3f254fa757fe5b60944dc19bb9af82b18d033ffd0/mldissect-0.0.1a2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:33 2020"}