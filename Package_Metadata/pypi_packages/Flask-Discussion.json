{"info": {"author": "Rafael Medina Garc\u00eda", "author_email": "rafamedgar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": "# Flask-Discussion\n\n[![Documentation Status](https://readthedocs.org/projects/flask-discussion/badge/?version=latest)](https://flask-discussion.readthedocs.io/en/latest/?badge=latest)\n\n\nFlask-Discussion is an extension for\n[Flask](https://palletsprojects.com/p/flask/) that adds support for several\ndiscussion/comment systems to your application.\n\nSupported comment systems:\n\n- [Disqus](https://disqus.com)\n- [Isso](https://github.com/posativ/isso/)\n- [Remark42](https://github.com/umputun/remark42)\n\n\n## Quickstart\n\nFirst install the extension:\n\n```\npip install Flask-Discussion\n```\n\nAnd then initialize it in your application:\n\n```python\nfrom flask import Flask\nfrom flask_discussion import Discussion\n\ndiscussion = Discussion()\n\ndef init_app():\n    app = Flask(__name__)\n\n    # Set config values\n    # .....\n\n    discussion.init_app(app)\n```\n\nThis will register the extension templates (which contain the macros for each\ncomment system) with your application, making them available in your own\ntemplates.\n\nIf you want to be able to swap comment systems through the configuration of\nyour application, you may use the macro defined in\n`flask_discussion/helper.html`:\n\n```django\n{% import \"flask_discussion/helper.html\" as discussion %}\n\n<html>\n    <body>\n        {{ discussion.render_comments(title=\"Page title\", identifier=\"my-page\", url=\"http://mypage.com\") }}\n    </body>\n</html>\n```\n\nNote that the macro **receives any keyword argument and will relay the\nappropriate information to the corresponding system-specific macro** (i.e. each\ncomment system may use only specific information, therefore you should provide\nall possible values for all comment systems).\n\nHowever, if you only want to use a specific comment system, you may import its\nmacros directly. For instance, for Disqus:\n\n```django\n{% import \"flask_discussion/disqus.html\" as disqus %}\n\n<html>\n    <body>\n        {{ disqus.render_comments(identifier=\"my-page\", url=\"http://mypage.com\", title=\"Page title\") }}\n    </body>\n</html>\n```\n\n## Documentation\n\nDocumentation is available at <https://flask-discussion.readthedocs.io>.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rmed/flask-discussion", "keywords": "flask discussion comments commenting", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-Discussion", "package_url": "https://pypi.org/project/Flask-Discussion/", "platform": "", "project_url": "https://pypi.org/project/Flask-Discussion/", "project_urls": {"Homepage": "https://github.com/rmed/flask-discussion"}, "release_url": "https://pypi.org/project/Flask-Discussion/0.1.1/", "requires_dist": ["Flask (>=1.1.1)"], "requires_python": "", "summary": "Comment system integration for Flask applications", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask-Discussion</h1>\n<p><a href=\"https://flask-discussion.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1168e10a13a04051b265ae1c452434e08525016/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f666c61736b2d64697363757373696f6e2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Flask-Discussion is an extension for\n<a href=\"https://palletsprojects.com/p/flask/\" rel=\"nofollow\">Flask</a> that adds support for several\ndiscussion/comment systems to your application.</p>\n<p>Supported comment systems:</p>\n<ul>\n<li><a href=\"https://disqus.com\" rel=\"nofollow\">Disqus</a></li>\n<li><a href=\"https://github.com/posativ/isso/\" rel=\"nofollow\">Isso</a></li>\n<li><a href=\"https://github.com/umputun/remark42\" rel=\"nofollow\">Remark42</a></li>\n</ul>\n<h2>Quickstart</h2>\n<p>First install the extension:</p>\n<pre><code>pip install Flask-Discussion\n</code></pre>\n<p>And then initialize it in your application:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_discussion</span> <span class=\"kn\">import</span> <span class=\"n\">Discussion</span>\n\n<span class=\"n\">discussion</span> <span class=\"o\">=</span> <span class=\"n\">Discussion</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">init_app</span><span class=\"p\">():</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Set config values</span>\n    <span class=\"c1\"># .....</span>\n\n    <span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<p>This will register the extension templates (which contain the macros for each\ncomment system) with your application, making them available in your own\ntemplates.</p>\n<p>If you want to be able to swap comment systems through the configuration of\nyour application, you may use the macro defined in\n<code>flask_discussion/helper.html</code>:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">import</span> <span class=\"s2\">\"flask_discussion/helper.html\"</span> <span class=\"k\">as</span> <span class=\"nv\">discussion</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n\n<span class=\"x\">&lt;html&gt;</span>\n<span class=\"x\">    &lt;body&gt;</span>\n<span class=\"x\">        </span><span class=\"cp\">{{</span> <span class=\"nv\">discussion.render_comments</span><span class=\"o\">(</span><span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Page title\"</span><span class=\"o\">,</span> <span class=\"nv\">identifier</span><span class=\"o\">=</span><span class=\"s2\">\"my-page\"</span><span class=\"o\">,</span> <span class=\"nv\">url</span><span class=\"o\">=</span><span class=\"s2\">\"http://mypage.com\"</span><span class=\"o\">)</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/body&gt;</span>\n<span class=\"x\">&lt;/html&gt;</span>\n</pre>\n<p>Note that the macro <strong>receives any keyword argument and will relay the\nappropriate information to the corresponding system-specific macro</strong> (i.e. each\ncomment system may use only specific information, therefore you should provide\nall possible values for all comment systems).</p>\n<p>However, if you only want to use a specific comment system, you may import its\nmacros directly. For instance, for Disqus:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">import</span> <span class=\"s2\">\"flask_discussion/disqus.html\"</span> <span class=\"k\">as</span> <span class=\"nv\">disqus</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n\n<span class=\"x\">&lt;html&gt;</span>\n<span class=\"x\">    &lt;body&gt;</span>\n<span class=\"x\">        </span><span class=\"cp\">{{</span> <span class=\"nv\">disqus.render_comments</span><span class=\"o\">(</span><span class=\"nv\">identifier</span><span class=\"o\">=</span><span class=\"s2\">\"my-page\"</span><span class=\"o\">,</span> <span class=\"nv\">url</span><span class=\"o\">=</span><span class=\"s2\">\"http://mypage.com\"</span><span class=\"o\">,</span> <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Page title\"</span><span class=\"o\">)</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/body&gt;</span>\n<span class=\"x\">&lt;/html&gt;</span>\n</pre>\n<h2>Documentation</h2>\n<p>Documentation is available at <a href=\"https://flask-discussion.readthedocs.io\" rel=\"nofollow\">https://flask-discussion.readthedocs.io</a>.</p>\n\n          </div>"}, "last_serial": 6728222, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "628a5bd3d886fa41dd41bc0c7a395795", "sha256": "151b4577a952c651511f0dc92dc21bcd45bc6ad080a9ce8f3ebc3a6b922f1c77"}, "downloads": -1, "filename": "Flask_Discussion-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "628a5bd3d886fa41dd41bc0c7a395795", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8712, "upload_time": "2019-11-09T11:55:42", "upload_time_iso_8601": "2019-11-09T11:55:42.125057Z", "url": "https://files.pythonhosted.org/packages/ec/63/96b24dfba40a9be8f20824b2fe4fe8bc031df10a590675d19701a0f26123/Flask_Discussion-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41be241588fdb655ecf4024858b81ce8", "sha256": "7442533c47bfcae5e1935b244a1318df4f28c6d8364f2c911fcc7b7b8019668d"}, "downloads": -1, "filename": "Flask-Discussion-0.1.0.tar.gz", "has_sig": false, "md5_digest": "41be241588fdb655ecf4024858b81ce8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9756, "upload_time": "2019-11-09T11:55:44", "upload_time_iso_8601": "2019-11-09T11:55:44.874376Z", "url": "https://files.pythonhosted.org/packages/4b/8c/87a7961c8958f198aa4097259d0b0c87c50b908ff5e725a3b51635916f18/Flask-Discussion-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "41a8335875f6147f1422af08d1e1c752", "sha256": "8fc8873f0dfa81340d60655854eb9e6078bb9fa6e4db072fbd4aac7d5a88c99e"}, "downloads": -1, "filename": "Flask_Discussion-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41a8335875f6147f1422af08d1e1c752", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10351, "upload_time": "2020-03-01T12:28:50", "upload_time_iso_8601": "2020-03-01T12:28:50.821106Z", "url": "https://files.pythonhosted.org/packages/4c/6a/1619581d831b3bd3eb161f3a28cba867af5fdb9859b499881d34f90f2121/Flask_Discussion-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f25d3efd8498b92feae68cbda6d1147b", "sha256": "58fdeab7faf19598e458ac48dceea1e9eaa0fa64c63fc8ec1b543c5aed46bbeb"}, "downloads": -1, "filename": "Flask-Discussion-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f25d3efd8498b92feae68cbda6d1147b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10831, "upload_time": "2020-03-01T12:28:51", "upload_time_iso_8601": "2020-03-01T12:28:51.960017Z", "url": "https://files.pythonhosted.org/packages/ae/3c/d0dcffdd0f8b7f51dc5c47a73eace783be8f39b19a99b92f16ac46e9eadd/Flask-Discussion-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41a8335875f6147f1422af08d1e1c752", "sha256": "8fc8873f0dfa81340d60655854eb9e6078bb9fa6e4db072fbd4aac7d5a88c99e"}, "downloads": -1, "filename": "Flask_Discussion-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41a8335875f6147f1422af08d1e1c752", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10351, "upload_time": "2020-03-01T12:28:50", "upload_time_iso_8601": "2020-03-01T12:28:50.821106Z", "url": "https://files.pythonhosted.org/packages/4c/6a/1619581d831b3bd3eb161f3a28cba867af5fdb9859b499881d34f90f2121/Flask_Discussion-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f25d3efd8498b92feae68cbda6d1147b", "sha256": "58fdeab7faf19598e458ac48dceea1e9eaa0fa64c63fc8ec1b543c5aed46bbeb"}, "downloads": -1, "filename": "Flask-Discussion-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f25d3efd8498b92feae68cbda6d1147b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10831, "upload_time": "2020-03-01T12:28:51", "upload_time_iso_8601": "2020-03-01T12:28:51.960017Z", "url": "https://files.pythonhosted.org/packages/ae/3c/d0dcffdd0f8b7f51dc5c47a73eace783be8f39b19a99b92f16ac46e9eadd/Flask-Discussion-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:57 2020"}