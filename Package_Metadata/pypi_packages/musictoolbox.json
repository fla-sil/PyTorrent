{"info": {"author": "Manuel Amador (Rudd-O)", "author_email": "rudd-o@rudd-o.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Utilities"], "description": "Music toolbox\n=============\n\nThis is a small toolbox of utilities written in Python 2 that help users groom their music collection.\n\nWhat's in the box\n-----------------\n\n`syncplaylists` takes a number of file lists / playlists in the command line,\nand a destination directory, then synchronizes all the songs in the playlists\nto the destination directory, with optional modifications to the files and their\nnames as they are copied to the destination directory.  `syncplaylists` preserves\nyour music collection's directory structure.\n\n`syncplaylists` requires a simple INI file in your home directory (name it\n`.syncplaylists.ini`) which must say how you want things to be transcoded:\n::\n\n    # cat .syncplaylists.ini\n    [transcoding]\n    mp3=copy\n    m4a=copy\n    ogg=copy\n    flac=copy\n    *=mp3\n    opus=copy\n\nOnce you've created the INI file, here's the quickstart version of how you\nactually *use* the tool:\n\n```\n[user@laptop ~/Music]$ syncplaylists -vd Playlists/*.m3u /mnt/usbdrive/Music/\n```\n\nThat will copy all songs listed in all M3U playlists within your\n`~/Music/Playlists` folder directly into `/mnt/usbdrive/Music`, preserving\nthe directory structure you have.\n\nRun `syncplaylists --help` or see `get_parser()` in file `synccli.py` for more\ninformation.\n\n`genplaylist` generates playlists.  Run `genplaylist --help` or see\n`get_parser()` in file `genplaylist` for more information.\n\nRequirements\n------------\n\nThis is a non-exhaustive list of requirements for most of these utilities to work:\n\n  - python-setuptools\n  - ffmpeg\n  - python-mutagen\n  - mp3gain\n  - madplay\n  - mplayer\n  - mppenc\n  - vorbis-tools\n  - flac", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Rudd-O/musictoolbox", "keywords": "mp3", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "musictoolbox", "package_url": "https://pypi.org/project/musictoolbox/", "platform": "", "project_url": "https://pypi.org/project/musictoolbox/", "project_urls": {"Homepage": "http://github.com/Rudd-O/musictoolbox"}, "release_url": "https://pypi.org/project/musictoolbox/0.0.44/", "requires_dist": null, "requires_python": "", "summary": "A set of utilities to help you groom your music collection", "version": "0.0.44", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a small toolbox of utilities written in Python 2 that help users groom their music collection.</p>\n<div id=\"what-s-in-the-box\">\n<h2>What\u2019s in the box</h2>\n<p><cite>syncplaylists</cite> takes a number of file lists / playlists in the command line,\nand a destination directory, then synchronizes all the songs in the playlists\nto the destination directory, with optional modifications to the files and their\nnames as they are copied to the destination directory.  <cite>syncplaylists</cite> preserves\nyour music collection\u2019s directory structure.</p>\n<p><cite>syncplaylists</cite> requires a simple INI file in your home directory (name it\n<cite>.syncplaylists.ini</cite>) which must say how you want things to be transcoded:</p>\n<pre># cat .syncplaylists.ini\n[transcoding]\nmp3=copy\nm4a=copy\nogg=copy\nflac=copy\n*=mp3\nopus=copy\n</pre>\n<p>Once you\u2019ve created the INI file, here\u2019s the quickstart version of how you\nactually <em>use</em> the tool:</p>\n<p><tt>`\n[user@laptop ~/Music]$ syncplaylists <span class=\"pre\">-vd</span> <span class=\"pre\">Playlists/*.m3u</span> /mnt/usbdrive/Music/\n`</tt></p>\n<p>That will copy all songs listed in all M3U playlists within your\n<cite>~/Music/Playlists</cite> folder directly into <cite>/mnt/usbdrive/Music</cite>, preserving\nthe directory structure you have.</p>\n<p>Run <cite>syncplaylists \u2013help</cite> or see <cite>get_parser()</cite> in file <cite>synccli.py</cite> for more\ninformation.</p>\n<p><cite>genplaylist</cite> generates playlists.  Run <cite>genplaylist \u2013help</cite> or see\n<cite>get_parser()</cite> in file <cite>genplaylist</cite> for more information.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>This is a non-exhaustive list of requirements for most of these utilities to work:</p>\n<blockquote>\n<ul>\n<li>python-setuptools</li>\n<li>ffmpeg</li>\n<li>python-mutagen</li>\n<li>mp3gain</li>\n<li>madplay</li>\n<li>mplayer</li>\n<li>mppenc</li>\n<li>vorbis-tools</li>\n<li>flac</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 5699555, "releases": {"0.0.43": [{"comment_text": "", "digests": {"md5": "193e960bb17146135e77b0ee1de81131", "sha256": "83c540b9b8fda79b2e8542e453a2d4536df2d4fc7725f93fc2472af459fb97ff"}, "downloads": -1, "filename": "musictoolbox-0.0.43.tar.gz", "has_sig": false, "md5_digest": "193e960bb17146135e77b0ee1de81131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30732, "upload_time": "2019-08-19T17:24:14", "upload_time_iso_8601": "2019-08-19T17:24:14.231578Z", "url": "https://files.pythonhosted.org/packages/1b/29/abbb683575161cc528f1aca111923179caae798e129849b9515a080102d9/musictoolbox-0.0.43.tar.gz", "yanked": false}], "0.0.44": [{"comment_text": "", "digests": {"md5": "6178fc5eaa078bba21b17d1aa930242d", "sha256": "e4577cb96ab52b98fa0197c18e6b58d5ea3a033a967d91e0041dc0dc42ca67a4"}, "downloads": -1, "filename": "musictoolbox-0.0.44.tar.gz", "has_sig": false, "md5_digest": "6178fc5eaa078bba21b17d1aa930242d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30742, "upload_time": "2019-08-19T17:27:37", "upload_time_iso_8601": "2019-08-19T17:27:37.021992Z", "url": "https://files.pythonhosted.org/packages/60/54/2d184fd2a737798d7f965d1ab4bf9cc91452dcd42f6f8eb034fa588b76be/musictoolbox-0.0.44.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6178fc5eaa078bba21b17d1aa930242d", "sha256": "e4577cb96ab52b98fa0197c18e6b58d5ea3a033a967d91e0041dc0dc42ca67a4"}, "downloads": -1, "filename": "musictoolbox-0.0.44.tar.gz", "has_sig": false, "md5_digest": "6178fc5eaa078bba21b17d1aa930242d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30742, "upload_time": "2019-08-19T17:27:37", "upload_time_iso_8601": "2019-08-19T17:27:37.021992Z", "url": "https://files.pythonhosted.org/packages/60/54/2d184fd2a737798d7f965d1ab4bf9cc91452dcd42f6f8eb034fa588b76be/musictoolbox-0.0.44.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:07 2020"}