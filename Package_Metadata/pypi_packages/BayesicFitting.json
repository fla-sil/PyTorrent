{"info": {"author": "Do Kester", "author_email": "dokester@home.nl", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "# BayesicFitting Readme.\n\nA package for model fitting and bayesian evidence calculation.\n\n(In case you are wondering what that is about take a \nquick look at [this example.](./BayesicFitting/examples/sealevel.ipynb))\n\n\nCitation index:\nDOI: 10.5281/zenodo.2597200\n\n\n## What's new in versions 2.4.4\n   * Moved BayesicFitting/BayesicFitting/documentation to BayesicFitting/docs\n   * Added a references.md file which collects (external) references.\n   * Updated the docs files.\n   * Handling of weight in accordance with the definition in the Glossary.\n   * Add keyword tail= to formatter to display last items of an array.\n\n## Content\n\n1. [History](#history)\n2. [Setup](#setup)\n3. [Structure](#structure)\n4. [Status](#status)\n5. [Versions](#versions)\n\n<a name=\"history\"></a>\n## 1. History \n\nThe BayesicFitting package is a python version of the the fitter classes\nin Herschel Common Science System (HCSS). The HCSS version was written\nin JAVA mostly by me. I encoded features and classes that were requested\nby my Herschel colleagues or that I remembered having used myself during\nmy lifelong career as data analyst for earlier satellites as IRAS, ISO\nand AKARI. So most of the stuff in here was needed and used at a certain\nmoment in time. Even now the package is developing in directions that\nare needed by my work for JWST. \n\nThe HCSS system is in the public domain under GPL3. It was used by the 3\ninstrument groups of the Herschel satellite to write calibration and\nanalysis software. Since the end of the mission HCSS is not being\nmaintained\n\nI used a customized version of java2python (j2py on github) to translate\nthe JAVA classes to python. However, the actual code needed serious\npythonization. Every line has been inspected. Every construct has been \nrevised.\n\nThe documentation got most profit from the automated conversion. Also\nthe structure into classes, the inheritance, methods and dependencies\nare largely the same as in the original HCSS.\n\n<a name=\"setup\"> </a>\n## 2. Setup \n\nThe package is written in python3 although I am not aware of using any\nspecific python3 features. It uses numpy (>= 1.9) for its array\nstructure, scipy (>=1.0) for linear algebra and other stuff and astropy\n(>=2.0) for units. Matplotlib (>=2.0) is used for plotting.\n\nDownload and unpack the BayesicFitting zip file from github. Move into \nthe BayesicFitting-master directory and run:\n\n    python setup.py install\n\nwhere python is python3. Or install it as :\n\n    pip install BayesicFitting\n\n<a name=\"structure\"> </a>\n## 3. Structure \n\n### source\n\nThe BayesicFitting package consists of over 100 classes, each class in\nits own file. These classes can be divided into 3 broad categories:\nmodels, fitters and nested sampling. About 50 models, 10 fitters and the\nremainder is needed to run the nested sampling algorithm. All these\nclasses are in a directory BayesicFitting/source. A special type of\nfunctions are found in BayesicFitting/source/kernels. They can be used\nto construct a model.\n\n\n### examples\n\nIn [BayesicFitting/examples](./BayesicFitting/examples) a number of scripts can be\nfound to exercise the classes. They are in the form of jupyter\nnotebooks. Some are using real data; others have synthetic data\nspecially constructed to make some point. \n\nAll examples can be inspected by clicking on them. They will fold out in\nthe browser.\n\nTo actually exercise the examples and maybe adapt then, start a jupyter\nnotebook in your examples directory.\n\n    jupyter notebook\n\nThe program will open a list in your webbrowser where you can select a\nnotebook file (.ipynb), which can be run.\n\n\n### documentation\n\nIn the [documenation](./docs) directory a number of documents\ncan be found. \n\n\n+ [Manual](./docs/manual.md)<br>\nA first draft of a manual. It obviously needs more work.\n\n+ [Troubles](./docs/troubles.md)<br>\nA list of troublesome situations and what to do about it.\n\n+ [Glossary](./docs/glossary.md)<br>\nA list of the terms used throughout this package, with explanations.\n\n+ [Design](./docs/design.md)<br>\nAn architectural design document, displaying the relationships between \nthe classes. \n\n+ [Style](./docs/style.md)<br>\nA few notes on my style of code and documenation.\n\n+ [References](./docs/references.md)<br>\nA list of external references for BayesicFitting.\n\n### test\n\nAlmost all classes have a test harness. These are located in\nBayesicFitting/test. They can be execised as:\n\n    python -m unittest <file>\n\nwhere python refers to python3 and file refers to one of the files in\nBayesicFitting/test.\n\nAs most functionality is tested in a test harness, examples on how to\nuse the classes can be found there too.\n\n<a name=\"status\"> </a> \n## 4. Status \n\nA package like this is never finished. Always more classes and/or\nfunctionalities can be added. I present it now as it is in the hope it\nwill be usefull and it will generate feedback.\n\nMore work needs to be done in:\n\n  * Documentation, especially the manual.\n  * Examples, more of them and covering more classes.\n  * Introduction of more Problems: OrderProblem, ...\n\n<a name=\"versions\"></a>\n## 5. Versions\n\n +  4 Jan 2018 version 0.9.0.<br>\n   * Initial upload to github.\n + 26 Jan 2018 version <br>\n +  5 Mar 2018 version 1.0.1 <br>\n   * Package on pypi.com. \n   * Restructured all import statement to comply with PYPI package.\n + 14 Mar 2018 version 1.0.2 <br>\n   * Added Dynamic Models \n   * Added piping of models\n + 23 Mar 2018 version 1.0.3 <br>\n   * Some issues with ErrorDistributions and map fitting\n   * 2-d fitting examples added\n   * All examples revisited\n   * Links in README.md updated\n + 28 May 2018 version 1.0.4 <br>\n   * New classes: CircularUniformPrior, PseudoVoigtModel\n   * VoigtModel uses scipy.special.wozf() and has partials now,\n   * Refactoring Priors to the BaseModel\n   * Restructuring Dynamic\n   * Threading optional in NestedSampler.\n   * New classes: UniformErrorDistribution, FreeShapeModel and kernels/Tophat\n   * added to testharnesses and examples\n + 27 June 2018 version 1.0.5<br>\n   * New classes: RadialVelocityModel and MixedErrorDistribution\n   * testharnesses and examples\n   * documentation updates\n + 28 June 2018 version 1.0.6\n   * longdescription set to markdown (Still not OK on pypi.org)\n + 28 July 2018 version 1.0.7\n   * small compilation error in 1.0.6\n + 11 October 2018 version 1.0.8\n   * refactoring the setting of attributes in Models\n   * documentation (manual, design, etc.) updated.\n + 28 December 2018 version 2.0.0\n   * Introduction of Problem Classes: \n     - Problem. <br>\nBase class for problems to be handled by NestedSampler.\n     - ClassicProblem. <br>\nCommon class for everything that was possible in version 1.\nClassicProblem is transparant as all interfaces to NestedSampler have remained \nthe same as they were in version 1.0, even though behind the scenes a \nClassicProblem has been invoked.\n     - ErrorsInXandYProblem. <br>\nProblem that have errors in the xdata  and in the ydata.\n     - ... more to come.\n   * Introduction of Walker and WalkerList to represent the internal ensemble\nin NestedSampler. \n   * Adaptations in NestedSampler, ErrorDistributions, Engines, Sample, SampleList.\n   * Better separation of responsibilities of ErrorDistribution and Problem. <br>\nConsequently ErrorDistribution has a new initialisation, which is incompatible \nwith previous versions. In most cases this has no effect on the calling \nsequences of NestedSampler.\n   * Rename GenGaussErrorDistribution into ExponentialErrorDistribution.\n   * New testharnesses and examples.\n   * Adaptations of documentation: manual and design.\n\n + 16 Jan 2019 version 2.1.0\n   * MultipleOutputProblem.\nProblems with more dimensional outputs \n   * StellarOrbitModel. \nA 2 dim output model to calculate the orbit of a double star\n   * Keppler2ndLaw.\nTo calculate the radius and true anomaly according to Kepplers 2nd law. \n(and derivatives)\n   * RadialVelocityModel: adapted to Kepplers2ndLaw. A slight change in the \norder of the parameters.\n   * NestedSampler: some improvements in output layout.\n   * New tests, examples and updates for documentation.\n\n + 7 Feb 2019 version 2.2.0\n   * ChordEngine. Implementation of the POLYCHORD engine, developed \nby Handley etal. (2015) MNRAS \n   * OrthogonalBasis. Helper class fot ChordEngine.\n   * Tests and examples\n\n + 19 Feb 2019 version 2.2.1 \n   * AmoebaFitter still mentioned GenGaussErrorDistribution; replaced \nby ExponentialErrorDistribution\n   * Some documentation issues repaired.\n\n + 20 Jun 2019 version 2.3.0 \n   * Add LogisticModel and SampleMovie\n   * Periodic residuals in Problem\n   * Small issues repaired\n   * Rerun all examples\n   * Pictures moved to documentation/images\n   * Some documentation issues repaired.\n\n + 14 Nov 2019 version 2.4.0 to 2.4.2\n   * New Classes:\n      - DecisionTreeModel\n\tA DecisionTree Model (DTM) is mostly defined on multiple input dimensions (axes).\n    \tIt splits the data in 2 parts, according low and high values on a certain input axis.\n    \tThe splitting can continue along other axes.\n      - Modifiable\n\tInterface to define modifiable behaviour of some Models.\n      - StructureEngine\n\tEngine to modify Models that implement Modifiable\n   * Introduce Table from astrolib as (multidimensional) xdata\n   * Some restructering necessitated by the classes above.\n   * Testcases and examples for the classes above\n\n + 3 Feb 2020 version 2.4.3\n   * Clean up and unification of the python doc strings.\n   * Reran all examples and test harnasses in python 3.7.\n   * Add random seed to several examples to make them more stable.\n\n + 17 Mar 2020 version 2.4.4\n   * See above in Whats new.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dokester/BayesicFitting", "keywords": "Bayesian,modeling,evidence,statistics,analysis,optimization,nested sampling,fitting", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "BayesicFitting", "package_url": "https://pypi.org/project/BayesicFitting/", "platform": "", "project_url": "https://pypi.org/project/BayesicFitting/", "project_urls": {"Homepage": "https://github.com/dokester/BayesicFitting"}, "release_url": "https://pypi.org/project/BayesicFitting/2.4.4/", "requires_dist": ["numpy (>=1.9)", "matplotlib (>=2.0)", "scipy (>=1.0)", "astropy (>=2.0)", "future"], "requires_python": "", "summary": "A Python Toolbox for Bayesian fitting.", "version": "2.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BayesicFitting Readme.</h1>\n<p>A package for model fitting and bayesian evidence calculation.</p>\n<p>(In case you are wondering what that is about take a\nquick look at <a href=\"./BayesicFitting/examples/sealevel.ipynb\" rel=\"nofollow\">this example.</a>)</p>\n<p>Citation index:\nDOI: 10.5281/zenodo.2597200</p>\n<h2>What's new in versions 2.4.4</h2>\n<ul>\n<li>Moved BayesicFitting/BayesicFitting/documentation to BayesicFitting/docs</li>\n<li>Added a references.md file which collects (external) references.</li>\n<li>Updated the docs files.</li>\n<li>Handling of weight in accordance with the definition in the Glossary.</li>\n<li>Add keyword tail= to formatter to display last items of an array.</li>\n</ul>\n<h2>Content</h2>\n<ol>\n<li><a href=\"#history\" rel=\"nofollow\">History</a></li>\n<li><a href=\"#setup\" rel=\"nofollow\">Setup</a></li>\n<li><a href=\"#structure\" rel=\"nofollow\">Structure</a></li>\n<li><a href=\"#status\" rel=\"nofollow\">Status</a></li>\n<li><a href=\"#versions\" rel=\"nofollow\">Versions</a></li>\n</ol>\n<p><a></a></p>\n<h2>1. History</h2>\n<p>The BayesicFitting package is a python version of the the fitter classes\nin Herschel Common Science System (HCSS). The HCSS version was written\nin JAVA mostly by me. I encoded features and classes that were requested\nby my Herschel colleagues or that I remembered having used myself during\nmy lifelong career as data analyst for earlier satellites as IRAS, ISO\nand AKARI. So most of the stuff in here was needed and used at a certain\nmoment in time. Even now the package is developing in directions that\nare needed by my work for JWST.</p>\n<p>The HCSS system is in the public domain under GPL3. It was used by the 3\ninstrument groups of the Herschel satellite to write calibration and\nanalysis software. Since the end of the mission HCSS is not being\nmaintained</p>\n<p>I used a customized version of java2python (j2py on github) to translate\nthe JAVA classes to python. However, the actual code needed serious\npythonization. Every line has been inspected. Every construct has been\nrevised.</p>\n<p>The documentation got most profit from the automated conversion. Also\nthe structure into classes, the inheritance, methods and dependencies\nare largely the same as in the original HCSS.</p>\n<p><a> </a></p>\n<h2>2. Setup</h2>\n<p>The package is written in python3 although I am not aware of using any\nspecific python3 features. It uses numpy (&gt;= 1.9) for its array\nstructure, scipy (&gt;=1.0) for linear algebra and other stuff and astropy\n(&gt;=2.0) for units. Matplotlib (&gt;=2.0) is used for plotting.</p>\n<p>Download and unpack the BayesicFitting zip file from github. Move into\nthe BayesicFitting-master directory and run:</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>where python is python3. Or install it as :</p>\n<pre><code>pip install BayesicFitting\n</code></pre>\n<p><a> </a></p>\n<h2>3. Structure</h2>\n<h3>source</h3>\n<p>The BayesicFitting package consists of over 100 classes, each class in\nits own file. These classes can be divided into 3 broad categories:\nmodels, fitters and nested sampling. About 50 models, 10 fitters and the\nremainder is needed to run the nested sampling algorithm. All these\nclasses are in a directory BayesicFitting/source. A special type of\nfunctions are found in BayesicFitting/source/kernels. They can be used\nto construct a model.</p>\n<h3>examples</h3>\n<p>In <a href=\"./BayesicFitting/examples\" rel=\"nofollow\">BayesicFitting/examples</a> a number of scripts can be\nfound to exercise the classes. They are in the form of jupyter\nnotebooks. Some are using real data; others have synthetic data\nspecially constructed to make some point.</p>\n<p>All examples can be inspected by clicking on them. They will fold out in\nthe browser.</p>\n<p>To actually exercise the examples and maybe adapt then, start a jupyter\nnotebook in your examples directory.</p>\n<pre><code>jupyter notebook\n</code></pre>\n<p>The program will open a list in your webbrowser where you can select a\nnotebook file (.ipynb), which can be run.</p>\n<h3>documentation</h3>\n<p>In the <a href=\"./docs\" rel=\"nofollow\">documenation</a> directory a number of documents\ncan be found.</p>\n<ul>\n<li>\n<p><a href=\"./docs/manual.md\" rel=\"nofollow\">Manual</a><br>\nA first draft of a manual. It obviously needs more work.</p>\n</li>\n<li>\n<p><a href=\"./docs/troubles.md\" rel=\"nofollow\">Troubles</a><br>\nA list of troublesome situations and what to do about it.</p>\n</li>\n<li>\n<p><a href=\"./docs/glossary.md\" rel=\"nofollow\">Glossary</a><br>\nA list of the terms used throughout this package, with explanations.</p>\n</li>\n<li>\n<p><a href=\"./docs/design.md\" rel=\"nofollow\">Design</a><br>\nAn architectural design document, displaying the relationships between\nthe classes.</p>\n</li>\n<li>\n<p><a href=\"./docs/style.md\" rel=\"nofollow\">Style</a><br>\nA few notes on my style of code and documenation.</p>\n</li>\n<li>\n<p><a href=\"./docs/references.md\" rel=\"nofollow\">References</a><br>\nA list of external references for BayesicFitting.</p>\n</li>\n</ul>\n<h3>test</h3>\n<p>Almost all classes have a test harness. These are located in\nBayesicFitting/test. They can be execised as:</p>\n<pre><code>python -m unittest &lt;file&gt;\n</code></pre>\n<p>where python refers to python3 and file refers to one of the files in\nBayesicFitting/test.</p>\n<p>As most functionality is tested in a test harness, examples on how to\nuse the classes can be found there too.</p>\n<p><a> </a></p>\n<h2>4. Status</h2>\n<p>A package like this is never finished. Always more classes and/or\nfunctionalities can be added. I present it now as it is in the hope it\nwill be usefull and it will generate feedback.</p>\n<p>More work needs to be done in:</p>\n<ul>\n<li>Documentation, especially the manual.</li>\n<li>Examples, more of them and covering more classes.</li>\n<li>Introduction of more Problems: OrderProblem, ...</li>\n</ul>\n<p><a></a></p>\n<h2>5. Versions</h2>\n<ul>\n<li>4 Jan 2018 version 0.9.0.<br></li>\n</ul>\n<ul>\n<li>Initial upload to github.</li>\n</ul>\n<ul>\n<li>26 Jan 2018 version <br></li>\n<li>5 Mar 2018 version 1.0.1 <br></li>\n</ul>\n<ul>\n<li>Package on pypi.com.</li>\n<li>Restructured all import statement to comply with PYPI package.</li>\n</ul>\n<ul>\n<li>\n<p>14 Mar 2018 version 1.0.2 <br></p>\n<ul>\n<li>Added Dynamic Models</li>\n<li>Added piping of models</li>\n</ul>\n</li>\n<li>\n<p>23 Mar 2018 version 1.0.3 <br></p>\n<ul>\n<li>Some issues with ErrorDistributions and map fitting</li>\n<li>2-d fitting examples added</li>\n<li>All examples revisited</li>\n<li>Links in README.md updated</li>\n</ul>\n</li>\n<li>\n<p>28 May 2018 version 1.0.4 <br></p>\n<ul>\n<li>New classes: CircularUniformPrior, PseudoVoigtModel</li>\n<li>VoigtModel uses scipy.special.wozf() and has partials now,</li>\n<li>Refactoring Priors to the BaseModel</li>\n<li>Restructuring Dynamic</li>\n<li>Threading optional in NestedSampler.</li>\n<li>New classes: UniformErrorDistribution, FreeShapeModel and kernels/Tophat</li>\n<li>added to testharnesses and examples</li>\n</ul>\n</li>\n<li>\n<p>27 June 2018 version 1.0.5<br></p>\n<ul>\n<li>New classes: RadialVelocityModel and MixedErrorDistribution</li>\n<li>testharnesses and examples</li>\n<li>documentation updates</li>\n</ul>\n</li>\n<li>\n<p>28 June 2018 version 1.0.6</p>\n<ul>\n<li>longdescription set to markdown (Still not OK on pypi.org)</li>\n</ul>\n</li>\n<li>\n<p>28 July 2018 version 1.0.7</p>\n<ul>\n<li>small compilation error in 1.0.6</li>\n</ul>\n</li>\n<li>\n<p>11 October 2018 version 1.0.8</p>\n<ul>\n<li>refactoring the setting of attributes in Models</li>\n<li>documentation (manual, design, etc.) updated.</li>\n</ul>\n</li>\n<li>\n<p>28 December 2018 version 2.0.0</p>\n<ul>\n<li>Introduction of Problem Classes:\n<ul>\n<li>Problem. <br>\nBase class for problems to be handled by NestedSampler.</li>\n<li>ClassicProblem. <br>\nCommon class for everything that was possible in version 1.\nClassicProblem is transparant as all interfaces to NestedSampler have remained\nthe same as they were in version 1.0, even though behind the scenes a\nClassicProblem has been invoked.</li>\n<li>ErrorsInXandYProblem. <br>\nProblem that have errors in the xdata  and in the ydata.</li>\n<li>... more to come.</li>\n</ul>\n</li>\n<li>Introduction of Walker and WalkerList to represent the internal ensemble\nin NestedSampler.</li>\n<li>Adaptations in NestedSampler, ErrorDistributions, Engines, Sample, SampleList.</li>\n<li>Better separation of responsibilities of ErrorDistribution and Problem. <br>\nConsequently ErrorDistribution has a new initialisation, which is incompatible\nwith previous versions. In most cases this has no effect on the calling\nsequences of NestedSampler.</li>\n<li>Rename GenGaussErrorDistribution into ExponentialErrorDistribution.</li>\n<li>New testharnesses and examples.</li>\n<li>Adaptations of documentation: manual and design.</li>\n</ul>\n</li>\n<li>\n<p>16 Jan 2019 version 2.1.0</p>\n<ul>\n<li>MultipleOutputProblem.\nProblems with more dimensional outputs</li>\n<li>StellarOrbitModel.\nA 2 dim output model to calculate the orbit of a double star</li>\n<li>Keppler2ndLaw.\nTo calculate the radius and true anomaly according to Kepplers 2nd law.\n(and derivatives)</li>\n<li>RadialVelocityModel: adapted to Kepplers2ndLaw. A slight change in the\norder of the parameters.</li>\n<li>NestedSampler: some improvements in output layout.</li>\n<li>New tests, examples and updates for documentation.</li>\n</ul>\n</li>\n<li>\n<p>7 Feb 2019 version 2.2.0</p>\n<ul>\n<li>ChordEngine. Implementation of the POLYCHORD engine, developed\nby Handley etal. (2015) MNRAS</li>\n<li>OrthogonalBasis. Helper class fot ChordEngine.</li>\n<li>Tests and examples</li>\n</ul>\n</li>\n<li>\n<p>19 Feb 2019 version 2.2.1</p>\n<ul>\n<li>AmoebaFitter still mentioned GenGaussErrorDistribution; replaced\nby ExponentialErrorDistribution</li>\n<li>Some documentation issues repaired.</li>\n</ul>\n</li>\n<li>\n<p>20 Jun 2019 version 2.3.0</p>\n<ul>\n<li>Add LogisticModel and SampleMovie</li>\n<li>Periodic residuals in Problem</li>\n<li>Small issues repaired</li>\n<li>Rerun all examples</li>\n<li>Pictures moved to documentation/images</li>\n<li>Some documentation issues repaired.</li>\n</ul>\n</li>\n<li>\n<p>14 Nov 2019 version 2.4.0 to 2.4.2</p>\n<ul>\n<li>New Classes:\n<ul>\n<li>DecisionTreeModel\nA DecisionTree Model (DTM) is mostly defined on multiple input dimensions (axes).\nIt splits the data in 2 parts, according low and high values on a certain input axis.\nThe splitting can continue along other axes.</li>\n<li>Modifiable\nInterface to define modifiable behaviour of some Models.</li>\n<li>StructureEngine\nEngine to modify Models that implement Modifiable</li>\n</ul>\n</li>\n<li>Introduce Table from astrolib as (multidimensional) xdata</li>\n<li>Some restructering necessitated by the classes above.</li>\n<li>Testcases and examples for the classes above</li>\n</ul>\n</li>\n<li>\n<p>3 Feb 2020 version 2.4.3</p>\n<ul>\n<li>Clean up and unification of the python doc strings.</li>\n<li>Reran all examples and test harnasses in python 3.7.</li>\n<li>Add random seed to several examples to make them more stable.</li>\n</ul>\n</li>\n<li>\n<p>17 Mar 2020 version 2.4.4</p>\n<ul>\n<li>See above in Whats new.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6829000, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "49b1b8b02d962dc1788182611af4ad92", "sha256": "1490ad3d4bd1ec51bb43f57009b6f6b4cd8f84e4b42fcc07c9d198bf022ca7ec"}, "downloads": -1, "filename": "BayesicFitting-1.0.1.tar.gz", "has_sig": false, "md5_digest": "49b1b8b02d962dc1788182611af4ad92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1683541, "upload_time": "2018-03-05T08:44:07", "upload_time_iso_8601": "2018-03-05T08:44:07.857260Z", "url": "https://files.pythonhosted.org/packages/f7/f2/8fe5ac7a341dc02455cb5811ecb5a73ceb1341a1e2f8686b0d210411afcd/BayesicFitting-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f281e667f9ae473fd50225e0450f6c29", "sha256": "459aadab018b3c67af45173d90df9ba66dfb1bb78473a81871e287b4f9fe42fc"}, "downloads": -1, "filename": "BayesicFitting-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f281e667f9ae473fd50225e0450f6c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1683887, "upload_time": "2018-03-06T13:31:40", "upload_time_iso_8601": "2018-03-06T13:31:40.804693Z", "url": "https://files.pythonhosted.org/packages/23/3f/7a6e4354b319bb5b49f9cb6c7f032dcb172a6dc7cea93f23a766cd688600/BayesicFitting-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "43f4ae840d4e9fb3e708a896fbd8bb76", "sha256": "c18a6f0990e0b3774f6ca6167879048ac9e19cb65efa5b0c52e53518cd11a39c"}, "downloads": -1, "filename": "BayesicFitting-1.0.3.tar.gz", "has_sig": false, "md5_digest": "43f4ae840d4e9fb3e708a896fbd8bb76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1820288, "upload_time": "2018-03-23T16:34:52", "upload_time_iso_8601": "2018-03-23T16:34:52.328909Z", "url": "https://files.pythonhosted.org/packages/2d/6b/e496b77c25b2a461320b75b615893db204f1d8e5be45dca854a1e25d2c09/BayesicFitting-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c202889e4fb4e15e234d019e4df56a61", "sha256": "8a52c6fdaa37ae4f0033bd5e83157c39ad69a845ceceaa2c98cf855f8d46cd54"}, "downloads": -1, "filename": "BayesicFitting-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c202889e4fb4e15e234d019e4df56a61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1797770, "upload_time": "2018-05-28T18:18:31", "upload_time_iso_8601": "2018-05-28T18:18:31.135033Z", "url": "https://files.pythonhosted.org/packages/d7/f8/0441633d104ad25dc459f536ad0531720ef1a6b22fdeb4919ebcf25037b4/BayesicFitting-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "ca0d4307d581b26e7553682d60d131d7", "sha256": "ebcc9cf9ff0fe3192892a44d39fc83c35335158bdca0106e308b2ffd4430585c"}, "downloads": -1, "filename": "BayesicFitting-1.0.5.tar.gz", "has_sig": false, "md5_digest": "ca0d4307d581b26e7553682d60d131d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1909425, "upload_time": "2018-06-28T10:18:23", "upload_time_iso_8601": "2018-06-28T10:18:23.470047Z", "url": "https://files.pythonhosted.org/packages/49/94/d0cdb3029a081c67b6697fde88ce79163992efef901845d03a3fe09bf881/BayesicFitting-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "8e1913dc42028f3a2d84aa50fa90d227", "sha256": "74c64a1170a736411cdd7eaaa4d1f4f380f1675c2fa5724f305136c82de79726"}, "downloads": -1, "filename": "BayesicFitting-1.0.6.tar.gz", "has_sig": false, "md5_digest": "8e1913dc42028f3a2d84aa50fa90d227", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1909440, "upload_time": "2018-06-28T13:51:13", "upload_time_iso_8601": "2018-06-28T13:51:13.318508Z", "url": "https://files.pythonhosted.org/packages/0e/39/fc7db3eb231f9b9f45c40bb890d9e9c9efffdecd8bcb04d5ac5c2c4f754a/BayesicFitting-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "e730bc893577d03965b184553ffd0197", "sha256": "844adaf7b17563348c64ac2083bbb42203998cd76860d79b553d8ae6a6e54a4b"}, "downloads": -1, "filename": "BayesicFitting-1.0.7.tar.gz", "has_sig": false, "md5_digest": "e730bc893577d03965b184553ffd0197", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1909490, "upload_time": "2018-07-27T11:52:57", "upload_time_iso_8601": "2018-07-27T11:52:57.605033Z", "url": "https://files.pythonhosted.org/packages/81/af/6daa506d0067cbf56c3a66227ac4ff04d2f70b73dccf573d82e68c92323d/BayesicFitting-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "174c240996bc1a872688a65fc464af60", "sha256": "5fc950cf10ff3a58ec9f7813f03d79d2a1a415606578a7b6aec4412252e17811"}, "downloads": -1, "filename": "BayesicFitting-1.0.8.tar.gz", "has_sig": false, "md5_digest": "174c240996bc1a872688a65fc464af60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1280521, "upload_time": "2018-10-11T18:35:59", "upload_time_iso_8601": "2018-10-11T18:35:59.447477Z", "url": "https://files.pythonhosted.org/packages/12/52/ee98f90bbd08bafb428458d953e180cccfbc1197982e64e3836e1eb98e31/BayesicFitting-1.0.8.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "b4a67a191101d9e2fadf24bded413539", "sha256": "21398106829da9778d481f7b523190b4328fde2aad5662c7276c9106ecbe0fb3"}, "downloads": -1, "filename": "BayesicFitting-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b4a67a191101d9e2fadf24bded413539", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1347253, "upload_time": "2018-12-28T16:33:19", "upload_time_iso_8601": "2018-12-28T16:33:19.614224Z", "url": "https://files.pythonhosted.org/packages/61/2d/4b1240828bd7f74591063dbdd120a1d0f53b4ff6dd071abdd70726df40bf/BayesicFitting-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "0a70885612429b8784dcd937f7ac77eb", "sha256": "1dff0e8c53bcec7e6252ebec1a8f61a7872d201da937387b5b1317af9f85590a"}, "downloads": -1, "filename": "BayesicFitting-2.1.0.tar.gz", "has_sig": false, "md5_digest": "0a70885612429b8784dcd937f7ac77eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1354897, "upload_time": "2019-01-16T12:40:55", "upload_time_iso_8601": "2019-01-16T12:40:55.537342Z", "url": "https://files.pythonhosted.org/packages/8a/6f/63b640a9ec95c4885744e6862e965f69eb009389b31267902c014d105647/BayesicFitting-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "ec4dca76be5232d675b2f8902d23fa02", "sha256": "4874b619b3f71386d280cb5d5005edf5faaf6f065c4d77727bdf550296163447"}, "downloads": -1, "filename": "BayesicFitting-2.2.0.tar.gz", "has_sig": false, "md5_digest": "ec4dca76be5232d675b2f8902d23fa02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1379984, "upload_time": "2019-02-07T12:37:48", "upload_time_iso_8601": "2019-02-07T12:37:48.052586Z", "url": "https://files.pythonhosted.org/packages/a8/2c/79aa3b1e8ee58d1dcf99cfe0cd32100a9f71c0003efa1f017b2918dccc9c/BayesicFitting-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "816cbd18d62f2cf79f99c9eabd6ba5e5", "sha256": "dabce2e98667f9c6eafa58e75adc08645bda2812afe6057d6b8f2caaddf6330e"}, "downloads": -1, "filename": "BayesicFitting-2.2.1.tar.gz", "has_sig": false, "md5_digest": "816cbd18d62f2cf79f99c9eabd6ba5e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1380178, "upload_time": "2019-02-19T10:36:09", "upload_time_iso_8601": "2019-02-19T10:36:09.329448Z", "url": "https://files.pythonhosted.org/packages/16/3f/d6db767086eaffdf39a79ed16082ec0e5980c1f5255c3223b8c4be922018/BayesicFitting-2.2.1.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "b58faeb5a0a1f08112c1fc2c02a3d939", "sha256": "fb498d000d7eaeffe598b71fa921c70b8e57d831983e5e4a5309049a5f8a9474"}, "downloads": -1, "filename": "BayesicFitting-2.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b58faeb5a0a1f08112c1fc2c02a3d939", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2763999, "upload_time": "2019-06-20T13:01:10", "upload_time_iso_8601": "2019-06-20T13:01:10.495725Z", "url": "https://files.pythonhosted.org/packages/0b/3c/cf31094dc0c05b93df8b80bb64554c238a3f6971e39cb7a2a7eb059761c0/BayesicFitting-2.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5922151dacd484528eb25c60ed07f6d0", "sha256": "7f8392cac7e80ecc7238e157d3f4daad37d448e741a4b723359fceb4eb31c323"}, "downloads": -1, "filename": "BayesicFitting-2.3.0.tar.gz", "has_sig": false, "md5_digest": "5922151dacd484528eb25c60ed07f6d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2568466, "upload_time": "2019-06-20T13:01:17", "upload_time_iso_8601": "2019-06-20T13:01:17.657505Z", "url": "https://files.pythonhosted.org/packages/99/35/a47f952b0665bce281f8363d8e857581539a3a9b038f738b361cece0d1a1/BayesicFitting-2.3.0.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "ac0069615bdbcb2adbfc10f1e26bba72", "sha256": "1efe59552c3131944a4a045b89c6425cccaa51653946d4ea2aff8109081ee61f"}, "downloads": -1, "filename": "BayesicFitting-2.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ac0069615bdbcb2adbfc10f1e26bba72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2782368, "upload_time": "2019-11-14T12:29:38", "upload_time_iso_8601": "2019-11-14T12:29:38.143361Z", "url": "https://files.pythonhosted.org/packages/af/47/6c15431c00a45146c8ca0a7c05b33abba988a1c33b0cb010171469de05f2/BayesicFitting-2.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de83fe363957a258e4e730f26d886c21", "sha256": "1c3ab4e1986d9a9cd8f2bfe3405b2e385ed39bf878175407070e89390e56d88c"}, "downloads": -1, "filename": "BayesicFitting-2.4.0.tar.gz", "has_sig": false, "md5_digest": "de83fe363957a258e4e730f26d886c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2585017, "upload_time": "2019-11-14T12:29:42", "upload_time_iso_8601": "2019-11-14T12:29:42.632817Z", "url": "https://files.pythonhosted.org/packages/f2/69/815eec7366a7cb2e5842e35fc149e1bb527fdab3b73d8738e196c2666ab0/BayesicFitting-2.4.0.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "c5986828dc07c2e4b955234e1195477c", "sha256": "1e2ae97bde6368ad1d3c453c00284dbc3855a95934c75fecac230d74d97918ba"}, "downloads": -1, "filename": "BayesicFitting-2.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c5986828dc07c2e4b955234e1195477c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2782374, "upload_time": "2019-11-14T12:47:06", "upload_time_iso_8601": "2019-11-14T12:47:06.474023Z", "url": "https://files.pythonhosted.org/packages/39/51/416f65ec05ed3b7e1acacb7a3161da8da80be0daded016603c860da4d7a3/BayesicFitting-2.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7f681636b99df6066dc4a9a8fc15768", "sha256": "a4207d847a5a5c8baa9bfa65c78e6a1744ca39cee9f6a052fe3683920ef59c5a"}, "downloads": -1, "filename": "BayesicFitting-2.4.2.tar.gz", "has_sig": false, "md5_digest": "f7f681636b99df6066dc4a9a8fc15768", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2585012, "upload_time": "2019-11-14T12:47:13", "upload_time_iso_8601": "2019-11-14T12:47:13.468824Z", "url": "https://files.pythonhosted.org/packages/c8/23/47877a457bbe6000f9aaf67aff5126360f9f5b9b12bb774658ce90c8024e/BayesicFitting-2.4.2.tar.gz", "yanked": false}], "2.4.3": [{"comment_text": "", "digests": {"md5": "a06da804407a5d6a0c829f3b03e14a7e", "sha256": "740a02b52834c05804af86162aeaa9621eb093680c4945f252e55a06b465856c"}, "downloads": -1, "filename": "BayesicFitting-2.4.3.macosx-10.14-x86_64.tar.gz", "has_sig": false, "md5_digest": "a06da804407a5d6a0c829f3b03e14a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2954376, "upload_time": "2020-02-04T12:52:59", "upload_time_iso_8601": "2020-02-04T12:52:59.539097Z", "url": "https://files.pythonhosted.org/packages/ac/6b/05fe5642c69b9281261ec356a1637e542eb3128b54ee23be9962a998957a/BayesicFitting-2.4.3.macosx-10.14-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "9675f8cb422c3521f5c4b1ac3da95fe1", "sha256": "f96a79d323ec26660e557b530c278f7f540427ac6723c8592a192dab91fd3d55"}, "downloads": -1, "filename": "BayesicFitting-2.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9675f8cb422c3521f5c4b1ac3da95fe1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2783131, "upload_time": "2020-02-04T13:20:40", "upload_time_iso_8601": "2020-02-04T13:20:40.137827Z", "url": "https://files.pythonhosted.org/packages/bc/df/41b973384cd88c9f79d7f866b35711a2fd323a7666e7f1023a40d1c1c4b2/BayesicFitting-2.4.3-py3-none-any.whl", "yanked": false}], "2.4.4": [{"comment_text": "", "digests": {"md5": "f379ac3f00d17f31e51b5f71acbaf51f", "sha256": "78a5a41af418a8956af1a7dba60d6c58f1e670ca8133b7f09d2b619ccb782375"}, "downloads": -1, "filename": "BayesicFitting-2.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f379ac3f00d17f31e51b5f71acbaf51f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1610653, "upload_time": "2020-03-17T14:36:41", "upload_time_iso_8601": "2020-03-17T14:36:41.661202Z", "url": "https://files.pythonhosted.org/packages/5e/32/28d84acb94df04d22c50366282a5c1dc1396fbca8d9814e86d8d13601d15/BayesicFitting-2.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc13cd01ffb40bd365a7a54bf8b4c166", "sha256": "58d36602b80860c3d861f5dcce1006cbda446f94b83bac74a3780370b0470855"}, "downloads": -1, "filename": "BayesicFitting-2.4.4.tar.gz", "has_sig": false, "md5_digest": "dc13cd01ffb40bd365a7a54bf8b4c166", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2597392, "upload_time": "2020-03-17T14:36:45", "upload_time_iso_8601": "2020-03-17T14:36:45.287613Z", "url": "https://files.pythonhosted.org/packages/5b/c1/9bdaa2a314218f2c1df4c70ea0004ce88bde997b1a60290a7ae4eaa75429/BayesicFitting-2.4.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f379ac3f00d17f31e51b5f71acbaf51f", "sha256": "78a5a41af418a8956af1a7dba60d6c58f1e670ca8133b7f09d2b619ccb782375"}, "downloads": -1, "filename": "BayesicFitting-2.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f379ac3f00d17f31e51b5f71acbaf51f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1610653, "upload_time": "2020-03-17T14:36:41", "upload_time_iso_8601": "2020-03-17T14:36:41.661202Z", "url": "https://files.pythonhosted.org/packages/5e/32/28d84acb94df04d22c50366282a5c1dc1396fbca8d9814e86d8d13601d15/BayesicFitting-2.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc13cd01ffb40bd365a7a54bf8b4c166", "sha256": "58d36602b80860c3d861f5dcce1006cbda446f94b83bac74a3780370b0470855"}, "downloads": -1, "filename": "BayesicFitting-2.4.4.tar.gz", "has_sig": false, "md5_digest": "dc13cd01ffb40bd365a7a54bf8b4c166", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2597392, "upload_time": "2020-03-17T14:36:45", "upload_time_iso_8601": "2020-03-17T14:36:45.287613Z", "url": "https://files.pythonhosted.org/packages/5b/c1/9bdaa2a314218f2c1df4c70ea0004ce88bde997b1a60290a7ae4eaa75429/BayesicFitting-2.4.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:41 2020"}