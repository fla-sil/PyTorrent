{"info": {"author": "Zach \"theY4Kman\" Kanzler", "author_email": "they4kman@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# flango!\n\nDo you like the niceties of Flask, but have to use Django for some reason? Are you a lunatic?\n\nIf you answered yes twice, this library is for you! \n\nSupports Python 2.6 to 3.7, and Django 1.8+\n\n\n# Quickstart\n\nInstall package.\n\n```bash\npip install flango\n```\n\nCreate Flango app, add it to your urls.\n\n```python\n# urls.py\nfrom flango import Flango\n\napp = Flango(__name__)\n\n@app.route('/<int:pk>')\ndef index(pk):\n    from django.contrib.auth.models import User\n    return User.objects.get(pk=pk).first_name\n\nurlpatterns = app.urlpatterns\n```\n\n\n# Benefits\n\n- Access current request anywhere\n \n    ```python\n    from django import forms\n    from flango import request\n \n    class MyForm(forms.Form):\n       def save(self):\n           instance = super(MyForm, self).save(commit=False)\n           instance.user = request.user\n           instance.save()\n           return instance\n    ```\n\n\n- Declare your routes alongside your views\n \n    ```python\n    from flango import render_template\n    from myapp import app\n \n    @app.route('/about')\n    def about():\n       return render_template('about.html')\n    ```\n\n\n- Typed variable parts\n \n    ```python\n    from flango import render_template\n    from myapp import app\n \n    @app.route('/map/<float:lat>/<float:long>')\n    def map(lat, long):\n       assert isinstance(lat, float)\n       assert isinstance(long, float)\n       return render_template('map.html', lat=lat, long=long)\n    ```\n\n\n- Return response content, status code, and headers directly from views\n \n    ```python\n    from myapp import app\n \n    @app.route('/ok')\n    def ok():\n       return 'ok'\n \n    @app.route('/idk')\n    def idk():\n       return 'idk', 404\n \n    @app.route('/wat')\n    def wat():\n       return 'wat', 400, {'Content-Type': 'text/wat'}\n    ```\n\n\n- Save precious PEP-8 space when building URLs\n \n    ```python\n    from django.db import models\n    from flango import url_for\n    \n    class MyModel(models.Model):\n       def get_invitation_link(self, friend_name):\n           return url_for('my-model-invite', id=self.id, friend_name=friend_name)\n    ```\n\n\n# Using `flango.request` with regular Django views\n\nFlango wraps your view functions to provide the `request` object globally. When your form or other code which accesses `flango.request` is called from a regular Django view, it will fail.\n\nTo fix this, add Flango's `global_request_middleware` to your `settings.MIDDLEWARE`:\n```python\n# settings.py\nMIDDLEWARE = (\n    'flango.global_request_middleware',\n    # ...\n)\n```\n\nFor best results, place it at the top of the list. This allows you to use `flango.request` in other middlewares.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/theY4Kman/flango", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flango", "package_url": "https://pypi.org/project/flango/", "platform": "", "project_url": "https://pypi.org/project/flango/", "project_urls": {"Homepage": "https://github.com/theY4Kman/flango"}, "release_url": "https://pypi.org/project/flango/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Flask-like interface for Django", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flango!</h1>\n<p>Do you like the niceties of Flask, but have to use Django for some reason? Are you a lunatic?</p>\n<p>If you answered yes twice, this library is for you!</p>\n<p>Supports Python 2.6 to 3.7, and Django 1.8+</p>\n<h1>Quickstart</h1>\n<p>Install package.</p>\n<pre>pip install flango\n</pre>\n<p>Create Flango app, add it to your urls.</p>\n<pre><span class=\"c1\"># urls.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flango</span> <span class=\"kn\">import</span> <span class=\"n\">Flango</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flango</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;int:pk&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n    <span class=\"k\">return</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">pk</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">first_name</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">urlpatterns</span>\n</pre>\n<h1>Benefits</h1>\n<ul>\n<li>\n<p>Access current request anywhere</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flango</span> <span class=\"kn\">import</span> <span class=\"n\">request</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n   <span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n       <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyForm</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">commit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n       <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n       <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n       <span class=\"k\">return</span> <span class=\"n\">instance</span>\n</pre>\n</li>\n<li>\n<p>Declare your routes alongside your views</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flango</span> <span class=\"kn\">import</span> <span class=\"n\">render_template</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">app</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/about'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">about</span><span class=\"p\">():</span>\n   <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'about.html'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Typed variable parts</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flango</span> <span class=\"kn\">import</span> <span class=\"n\">render_template</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">app</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/map/&lt;float:lat&gt;/&lt;float:long&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">):</span>\n   <span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">)</span>\n   <span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">)</span>\n   <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'map.html'</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"o\">=</span><span class=\"n\">long</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Return response content, status code, and headers directly from views</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">app</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/ok'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ok</span><span class=\"p\">():</span>\n   <span class=\"k\">return</span> <span class=\"s1\">'ok'</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/idk'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">idk</span><span class=\"p\">():</span>\n   <span class=\"k\">return</span> <span class=\"s1\">'idk'</span><span class=\"p\">,</span> <span class=\"mi\">404</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/wat'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">wat</span><span class=\"p\">():</span>\n   <span class=\"k\">return</span> <span class=\"s1\">'wat'</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'text/wat'</span><span class=\"p\">}</span>\n</pre>\n</li>\n<li>\n<p>Save precious PEP-8 space when building URLs</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flango</span> <span class=\"kn\">import</span> <span class=\"n\">url_for</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n   <span class=\"k\">def</span> <span class=\"nf\">get_invitation_link</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">friend_name</span><span class=\"p\">):</span>\n       <span class=\"k\">return</span> <span class=\"n\">url_for</span><span class=\"p\">(</span><span class=\"s1\">'my-model-invite'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">friend_name</span><span class=\"o\">=</span><span class=\"n\">friend_name</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h1>Using <code>flango.request</code> with regular Django views</h1>\n<p>Flango wraps your view functions to provide the <code>request</code> object globally. When your form or other code which accesses <code>flango.request</code> is called from a regular Django view, it will fail.</p>\n<p>To fix this, add Flango's <code>global_request_middleware</code> to your <code>settings.MIDDLEWARE</code>:</p>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'flango.global_request_middleware'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For best results, place it at the top of the list. This allows you to use <code>flango.request</code> in other middlewares.</p>\n\n          </div>"}, "last_serial": 3810225, "releases": {"0.0.0": [], "0.0.1": [{"comment_text": "", "digests": {"md5": "4b47b4113ed6cc47d74f9ee7d5a8d1c2", "sha256": "9e3ef86d98311c784d0d325f19c06b4578d9b87582ee7375dffbf33294b79f5f"}, "downloads": -1, "filename": "flango-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "4b47b4113ed6cc47d74f9ee7d5a8d1c2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9852, "upload_time": "2017-02-11T18:34:59", "upload_time_iso_8601": "2017-02-11T18:34:59.828909Z", "url": "https://files.pythonhosted.org/packages/55/66/84f9c51865916888c57c16de0c4ad56961a6e142152c0d21f0d587c2ec0e/flango-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b88796ccd15e56cbd27849ce819bb658", "sha256": "d71d207be8d828864a9e7a8048b41a25d23ca054b2d8bb96cddcb4fd8a5165a5"}, "downloads": -1, "filename": "flango-0.0.1.zip", "has_sig": false, "md5_digest": "b88796ccd15e56cbd27849ce819bb658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6554, "upload_time": "2017-02-11T18:35:01", "upload_time_iso_8601": "2017-02-11T18:35:01.083612Z", "url": "https://files.pythonhosted.org/packages/f7/31/b83269246c50f98897017f42dd6f79a0d641dfefc26f1d5ad7a336207a4f/flango-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b734fc3029fa517ae42cf32c96861d9f", "sha256": "59b75bf2f611a3036d9cb0b83ae7ef2d8e8657a599d54b7e6ec88987c8b469c3"}, "downloads": -1, "filename": "flango-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b734fc3029fa517ae42cf32c96861d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5456, "upload_time": "2018-04-26T13:26:18", "upload_time_iso_8601": "2018-04-26T13:26:18.954192Z", "url": "https://files.pythonhosted.org/packages/15/92/285abcfd0d7926e54f5a126fc9b5554fd34e7d438519fd61b1276cfa4f02/flango-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b734fc3029fa517ae42cf32c96861d9f", "sha256": "59b75bf2f611a3036d9cb0b83ae7ef2d8e8657a599d54b7e6ec88987c8b469c3"}, "downloads": -1, "filename": "flango-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b734fc3029fa517ae42cf32c96861d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5456, "upload_time": "2018-04-26T13:26:18", "upload_time_iso_8601": "2018-04-26T13:26:18.954192Z", "url": "https://files.pythonhosted.org/packages/15/92/285abcfd0d7926e54f5a126fc9b5554fd34e7d438519fd61b1276cfa4f02/flango-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:16 2020"}