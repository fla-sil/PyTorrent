{"info": {"author": "Belavin Denis", "author_email": "belavin.d.andreevich@yandex.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "intimezone\n==========\n\n.. image:: https://img.shields.io/badge/python-2%20%7C%203-ffc30f.svg\n    :target: https://github.com/LuckyDenis/tzintime/\n\n.. image:: https://img.shields.io/badge/license-MIT-ffc30f.svg\n    :target: https://github.com/LuckyDenis/tzintime/blob/v1.0.0/LICENSE\n\n.. image:: https://img.shields.io/badge/platform-win32/64%20%7C%20linux32/64-ffc30f.svg\n    :target: https://github.com/LuckyDenis/tzintime/\n\n.. image:: https://img.shields.io/badge/pypi-v1.0.1-ffc30f.svg\n    :target: https://pypi.org/project/intimezone/\n\n.. image:: https://travis-ci.org/LuckyDenis/tzintime.svg?branch=master\n    :target: https://travis-ci.org/LuckyDenis/tzintime/\n\n-----\n\n**Introduction**\n\nThis package is based on the library ``pytz``. Provides an interface, converting naive and localized time to another time zone. You can choose how the new time zone will be added - it will be added directly on the date itself or displayed separately (examples will be discussed below). You can also specify a date output template. Templates need to be configured according to the `datetime <https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior>`_ library's templates table.\n\n-----\n\n**Installation**\n\n.. code-block:: python\n\n    python -m pip install intimezone\n\n-----\n\n**Example & Usage**\n\nThis library supports only two methods of conversion. The first is ``flag='convert'`` (``flag=None``) adds a timezone to the base date. The second ``flag='localize'`` adds the time zone separately.\n\n*Test dataset:*\n\n.. code-block:: python\n\n    >>> from intimezone import convert\n    >>> ntime = 1545695999 # naive time\n    >>> ltime = 1545695999.5219207 # localized time\n\n*Default settings:*\n\n.. code-block:: python\n\n    >>> convert(ntime) # naive time\n    'Mon, 24 Dec 2018 23:59:59'\n    >>> convert(ltime) # localized time\n    'Mon, 24 Dec 2018 23:59:59'\n\n*The values flag='convert':*\n\n.. code-block:: python\n\n    >>> convert(ntime, tz='Europe/Madrid', flag='convert') # naive time\n    'Tue, 25 Dec 2018 00:59:59'\n    >>> convert(ltime, tz='Europe/Madrid', flag='convert') # localized time\n    'Tue, 25 Dec 2018 00:59:59'\n\n*The values flag='localize':*\n\n.. code-block:: python\n\n    >>> convert(ntime, tz='Europe/Madrid', flag='localize') # naive time\n    'Mon, 24 Dec 2018 23:59:59 +0100(CET)'\n    >>> convert(ltime, tz='Europe/Madrid', flag='localize') # localized time\n    'Mon, 24 Dec 2018 23:59:59 +0100(CET)'\n\n*Custom template for date:*\n\n.. code-block:: python\n\n    >>> convert(ntime, tz='Europe/Madrid', f='%D - %H:%M:%S') # naive time\n    '12/25/18 - 00:59:59'\n    >>> convert(ltime, tz='Europe/Madrid', f='%D - %H:%M:%S') # localized time\n    '12/25/18 - 00:59:59'\n\n-----\n\n**Options**\n\n* The library provides a single interface. In order to select in which mode to get the date, the ``flag`` (``None``/``'convert'`` or ``'localize'``) option is used.\n\n* The parameter ``moment_time`` can take unix time in the format ``int`` or ``float``. Represents moment-time.\n\n* The time zone ``tz`` is specified in the format ``'Region/City'``, ``'Etc/GMT\u00b112'``.\n\n* ``f`` is responsible for generating a line at the output, through this parameter you can set a template in the style of templates of the standard library `datetime <https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior>`_.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LuckyDenis/tzintime", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "intimezone", "package_url": "https://pypi.org/project/intimezone/", "platform": "any", "project_url": "https://pypi.org/project/intimezone/", "project_urls": {"Homepage": "https://github.com/LuckyDenis/tzintime"}, "release_url": "https://pypi.org/project/intimezone/1.0.2/", "requires_dist": ["pytz (>=2018.5)"], "requires_python": "", "summary": "Converts the UTC time, the date and time of the region.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/LuckyDenis/tzintime/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-2%20%7C%203-ffc30f.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50aba4935b078efcdfaeec1954b64f24cb274e53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d32253230253743253230332d6666633330662e737667\"></a>\n<a href=\"https://github.com/LuckyDenis/tzintime/blob/v1.0.0/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-ffc30f.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb7e19e6ddb01fb4affe0b61d89730cc8bb36c34/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6666633330662e737667\"></a>\n<a href=\"https://github.com/LuckyDenis/tzintime/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/platform-win32/64%20%7C%20linux32/64-ffc30f.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50898390311ee9c5e76f80681b8daa234ce3812e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d77696e33322f36342532302537432532306c696e757833322f36342d6666633330662e737667\"></a>\n<a href=\"https://pypi.org/project/intimezone/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/pypi-v1.0.1-ffc30f.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5453d3d9971000e9836c77a4837eede68bbadbb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707970692d76312e302e312d6666633330662e737667\"></a>\n<a href=\"https://travis-ci.org/LuckyDenis/tzintime/\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/LuckyDenis/tzintime.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3d58cd63218870dc6ce96e74af713765a6e44a6/68747470733a2f2f7472617669732d63692e6f72672f4c75636b7944656e69732f747a696e74696d652e7376673f6272616e63683d6d6173746572\"></a>\n<hr class=\"docutils\">\n<p><strong>Introduction</strong></p>\n<p>This package is based on the library <tt>pytz</tt>. Provides an interface, converting naive and localized time to another time zone. You can choose how the new time zone will be added - it will be added directly on the date itself or displayed separately (examples will be discussed below). You can also specify a date output template. Templates need to be configured according to the <a href=\"https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior\" rel=\"nofollow\">datetime</a> library\u2019s templates table.</p>\n<hr class=\"docutils\">\n<p><strong>Installation</strong></p>\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">intimezone</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Example &amp; Usage</strong></p>\n<p>This library supports only two methods of conversion. The first is <tt><span class=\"pre\">flag='convert'</span></tt> (<tt>flag=None</tt>) adds a timezone to the base date. The second <tt><span class=\"pre\">flag='localize'</span></tt> adds the time zone separately.</p>\n<p><em>Test dataset:</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">intimezone</span> <span class=\"kn\">import</span> <span class=\"n\">convert</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ntime</span> <span class=\"o\">=</span> <span class=\"mi\">1545695999</span> <span class=\"c1\"># naive time</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ltime</span> <span class=\"o\">=</span> <span class=\"mf\">1545695999.5219207</span> <span class=\"c1\"># localized time</span>\n</pre>\n<p><em>Default settings:</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ntime</span><span class=\"p\">)</span> <span class=\"c1\"># naive time</span>\n<span class=\"s1\">'Mon, 24 Dec 2018 23:59:59'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ltime</span><span class=\"p\">)</span> <span class=\"c1\"># localized time</span>\n<span class=\"s1\">'Mon, 24 Dec 2018 23:59:59'</span>\n</pre>\n<p><em>The values flag=\u2019convert\u2019:</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ntime</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'Europe/Madrid'</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"s1\">'convert'</span><span class=\"p\">)</span> <span class=\"c1\"># naive time</span>\n<span class=\"s1\">'Tue, 25 Dec 2018 00:59:59'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ltime</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'Europe/Madrid'</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"s1\">'convert'</span><span class=\"p\">)</span> <span class=\"c1\"># localized time</span>\n<span class=\"s1\">'Tue, 25 Dec 2018 00:59:59'</span>\n</pre>\n<p><em>The values flag=\u2019localize\u2019:</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ntime</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'Europe/Madrid'</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"s1\">'localize'</span><span class=\"p\">)</span> <span class=\"c1\"># naive time</span>\n<span class=\"s1\">'Mon, 24 Dec 2018 23:59:59 +0100(CET)'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ltime</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'Europe/Madrid'</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"s1\">'localize'</span><span class=\"p\">)</span> <span class=\"c1\"># localized time</span>\n<span class=\"s1\">'Mon, 24 Dec 2018 23:59:59 +0100(CET)'</span>\n</pre>\n<p><em>Custom template for date:</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ntime</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'Europe/Madrid'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"o\">=</span><span class=\"s1\">'%D - %H:%M:%S'</span><span class=\"p\">)</span> <span class=\"c1\"># naive time</span>\n<span class=\"s1\">'12/25/18 - 00:59:59'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">ltime</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'Europe/Madrid'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"o\">=</span><span class=\"s1\">'%D - %H:%M:%S'</span><span class=\"p\">)</span> <span class=\"c1\"># localized time</span>\n<span class=\"s1\">'12/25/18 - 00:59:59'</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Options</strong></p>\n<ul>\n<li>The library provides a single interface. In order to select in which mode to get the date, the <tt>flag</tt> (<tt>None</tt>/<tt>'convert'</tt> or <tt>'localize'</tt>) option is used.</li>\n<li>The parameter <tt>moment_time</tt> can take unix time in the format <tt>int</tt> or <tt>float</tt>. Represents moment-time.</li>\n<li>The time zone <tt>tz</tt> is specified in the format <tt>'Region/City'</tt>, <tt>'Etc/GMT\u00b112'</tt>.</li>\n<li><tt>f</tt> is responsible for generating a line at the output, through this parameter you can set a template in the style of templates of the standard library <a href=\"https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior\" rel=\"nofollow\">datetime</a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 4256418, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0c59685fd809c86f54df85e744866254", "sha256": "70cac19935f18e10419100f1fc9340ee8e2ce79c0fb1f24e0a35d01a99dc440a"}, "downloads": -1, "filename": "intimezone-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c59685fd809c86f54df85e744866254", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5558, "upload_time": "2018-09-10T04:49:37", "upload_time_iso_8601": "2018-09-10T04:49:37.328857Z", "url": "https://files.pythonhosted.org/packages/bf/02/efd5493868ca9caf7837556e00eb3085e87baf22cfe68745801c094e00b0/intimezone-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ea61fd3379f29c4536c5b38d7c3ac1a4", "sha256": "58059716697416286871b93723e6b6742998b5464ce24beed9f4ab4be31deeb0"}, "downloads": -1, "filename": "intimezone-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea61fd3379f29c4536c5b38d7c3ac1a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5539, "upload_time": "2018-09-10T05:26:56", "upload_time_iso_8601": "2018-09-10T05:26:56.411782Z", "url": "https://files.pythonhosted.org/packages/9b/8c/e85580315b6dfdac377f92e63867c5dba40e7bbcc23fbf17ec4406cba00f/intimezone-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f800074493e1037d54b4261ca71f0ac1", "sha256": "9060d4efc6564e3b5e854e9ccfee7bbd57a5939b7702d4b67d32fdf9253fb271"}, "downloads": -1, "filename": "intimezone-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f800074493e1037d54b4261ca71f0ac1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5553, "upload_time": "2018-09-10T06:03:48", "upload_time_iso_8601": "2018-09-10T06:03:48.416390Z", "url": "https://files.pythonhosted.org/packages/90/3a/0700249d6552a385f6d93e99eb59baa53490ecf5223151e086b32fdc6b1d/intimezone-1.0.2-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f800074493e1037d54b4261ca71f0ac1", "sha256": "9060d4efc6564e3b5e854e9ccfee7bbd57a5939b7702d4b67d32fdf9253fb271"}, "downloads": -1, "filename": "intimezone-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f800074493e1037d54b4261ca71f0ac1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5553, "upload_time": "2018-09-10T06:03:48", "upload_time_iso_8601": "2018-09-10T06:03:48.416390Z", "url": "https://files.pythonhosted.org/packages/90/3a/0700249d6552a385f6d93e99eb59baa53490ecf5223151e086b32fdc6b1d/intimezone-1.0.2-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:23 2020"}