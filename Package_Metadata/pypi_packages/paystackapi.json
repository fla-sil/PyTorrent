{"info": {"author": "Samuel James and Issa Jubril", "author_email": "samuelvarejames@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# paystack-python\n[![Coverage Status](https://coveralls.io/repos/github/andela-sjames/paystack-python/badge.svg?branch=develop)](https://coveralls.io/github/andela-sjames/paystack-python?branch=master)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/andela-sjames/paystack-python/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/andela-sjames/paystack-python/?branch=master)\n[![Circle CI](https://img.shields.io/badge/license-MIT-blue.svg)](https://img.shields.io/badge/license-MIT-blue.svg) [![Build Status](https://travis-ci.org/andela-sjames/paystack-python.svg?branch=master)](https://travis-ci.org/andela-sjames/paystack-python)\n[![PyPI version](https://badge.fury.io/py/paystackapi.svg)](https://badge.fury.io/py/paystackapi)\n\nPython plugin for [Paystack](https://paystack.com/)\nView on [pypi.python.org](https://pypi.python.org/pypi/paystackapi)\n\n# Installation\n```\npip install paystackapi\n```\n# Instantiate Paystack\n\n```python\nfrom paystackapi.paystack import Paystack\npaystack_secret_key = \"5om3secretK3y\"\npaystack = Paystack(secret_key=paystack_secret_key)\n\n# to use transaction class\npaystack.transaction.list()\n\n# to use customer class\npaystack.customer.get(transaction_id)\n\n# to use plan class\npaystack.plan.get(plan_id)\n\n# to use subscription class\npaystack.subscription.list()\n```\n\n## DOC Reference: <https://developers.paystack.co/v2.0/reference>\n\n##### Other methods can be found below...\n\n# Static Use\n\nTo start using the Paystack Python API, you need to start by setting your secret key.\n\nYou can set your secret key in your environment by running:\n```bash\nexport PAYSTACK_SECRET_KEY = 'your_secret_key'\n```\n\n\n> Don't forget to get your API key from [Paystack](https://paystack.com/) and assign to the variable `PAYSTACK_SECRET_KEY`\n\n## Transactions\n\n##### `Transaction.initialize(reference, amount, email, plan)` - Initialize transaction.\n\n*Usage*\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.initialize(reference='reference',\n                                  amount='amount', email='email')\n```\n\n*Arguments*\n\n- `reference`: Unique transaction reference\n- `amount`: Amount\n- `email`: Email address\n- `plan`: Specified plan (optional)\n\n*Returns*\n\nJSON data from Paystack API.\n\n##### `Transaction.charge(reference, authorization_code, email, amount)` - Charge authorization.\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.charge(reference='reference',\n                              authorization_code='authorization_code',\n                              email='email',\n                              amount='amount')\n```\n\n*Arguments*\n\n- `reference`: Unique transaction reference\n- `authorization_code`: Authorization code for the transaction\n- `email`: Email Address of the user with the authorization code\n- `amount`: Amount in kobo\n\n*Returns*\n\nJSON data from Paystack API.\n\n##### `Transaction.charge_token(reference, token, email, amount)` - Charge Token.\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.charge_token(reference='reference',\n                                    token='token', email='email',\n                                    amount='amount')\n```\n\n*Arguments*\n\n- reference: unique transaction reference\n- token: paystack token\n- email: Email Address\n- amount: Amount in Kobo\n\n*Returns*\n\nJSON data from Paystack API.\n\n##### `Transaction.get(transaction_id)` - Get a single transaction.\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.get(transaction_id=23)\n```\n\n*Arguments*\n\n- `id`: Transaction id(integer).\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Transaction.list()` - List transactions.\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.list()\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Transaction.totals()` - Get totals.\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.totals()\n```\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Transaction.verify(reference)` - Verify transactions.\n\n```python\nfrom paystackapi.transaction import Transaction\nresponse = Transaction.verify(reference='reference')\n```\n\n*Arguments*\n\n- `reference`: a unique value needed for transaction.\n\n*Returns*\n\nJSON data from paystack API.\n\n\n## Plans\n\n##### `Plan.create(name, description, amount, interval, send_invoices, send_sms, hosted_page, hosted_page_url, hosted_page_summary, currency)` - Create a plan\n\n```python\nfrom paystackapi.plan import Plan\nresponse = Plan.create(name='value', description='value',\n                       amount=amount, interval='value',\n                       send_invoices='value',\n                       send_sms='value',\n                       hosted_page='value',\n                       hosted_page_url='value',\n                       hosted_page_summary='value',\n                       currency='value')\n```\n\n*Arguments*\n\n- `name`: plan's name.\n- `description`: description of the plan.\n- `amount`: amount for the plan in kobo\n- `interval`: plan's interval(daily...etc)\n- `send_invoices`: boolean\n- `send_sms`: (optional)\n- `hosted_page`: (optional)\n- `hosted_page_url`: url of hosted page (optional)\n- `hosted_page_summary`: summary of the hosted page\n- `currency`: plans currency (NGN)\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Plan.get(plan_id)` - Get a single plan.\n\n```python\nfrom paystackapi.plan import Plan\nresponse = Plan.get(plan_id=25)\n```\n\n*Arguments*\n\n- `id`: paystack plan id.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Plan.list()` - List paystack plan\n\n```python\nfrom paystackapi.plan import Plan\nresponse = Plan.list()\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Plan.update(plan_id=88, name=None, description=None, amount=None, interval=None, send_invoices=None, send_sms=None, hosted_page=None, hosted_page_url=None, hosted_page_summary=None, currency=None)` - Update paystack plan\n\n```python\nfrom paystackapi.plan import Plan\nresponse = Plan.update(plan_id=23, name=None, description=None,\n                       amount=None, interval=None,\n                       send_invoices=None, send_sms=None,\n                       hosted_page=None, hosted_page_url=None,\n                       hosted_page_summary=None, currency=None)\n```\n\n*Arguments*\n\n- `plan_id`: plan identity number.\n- `name`: name of plan\n- `description`: plan description(optional)\n- `amount`: plan amount in Kobo\n- `interval`: plan interval9(monthly, yearly, quarterly...etc)\n- `send_invoice`: (optional)\n- `send_sms`: (optional)\n- `hosted_page`: (optional)\n- `hosted_page_url`: (optional)\n- `hosted_page_summary`: (optional)\n- `currency`: Naira in kobo(NGN)\n\n*Returns*\n\nJSON data from paystack API.\n\n\n## Customers\n\n##### `Customer.create(first_name, last_name, email, phone)` - Create customer\n\n```python\nfrom paystackapi.customer import Customer\nresponse = Customer.create(first_name='first_name',\n                           last_name='last_name',\n                           email='email', phone='phone')\n```\n\n*Arguments*\n\n- `first_name`: customer's first name.\n- `last_name`: customer's last name.\n- `email`: customer's email address.\n- `phone`: customer's phone number.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Customer.get(customer_id)` - Get customers by id\n\n```python\nfrom paystackapi.customer import Customer\nresponse = Customer.get(customer_id=24)\n```\n\n*Arguments*\n\n- `id`: paystack customer id\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Customer.list()` - List paystack customers\n\n```python\nfrom paystackapi.customer import Customer\nresponse = Customer.list()\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Customer.update(customer_id, first_name=None, last_name=None, email=None, phone=None)` - Update paystack customer data by id.\n\n```python\nfrom paystackapi.customer import Customer\nresponse = Customer.update(customer_id=24, first_name=None,\n                           last_name=None, email=None,\n                           phone=None)\n```\n\n*Arguments*\n- `customer_id`: paystack customer id.\n- `first_name`: customer's first name(optional).\n- `last_name`: customer's last name(optional).\n- `email`: customer's email address(optional).\n- `phone`: customer's phone number(optional).\n\n*Returns*\n\nJSON data from paystack API.\n\n## Subscription\n\n##### `Subscription.create(customer, plan, authorization, start_date)` - Create subscription.\n\n```python\nfrom paystackapi.subscription import Subscription\nresponse = Subscription.create(customer='CUS_xnxdt6s1zg1f4nx',\n                               plan='Pln_2yudUnIds2p',\n                               authorization='34',\n                               start_date=None)\n```\n\n*Arguments*\n- `customer`: Customer's email address or customer code.\n- `plan`: Plan code.\n- `authorization`: customers authorization code.\n- `start_date`:  the date for the first debit. (ISO 8601 format)\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Subscription.fetch(subscription_id)` - Fetch subscription.\n\n```python\nfrom paystackapi.subscription import Subscription\nresponse = Subscription.fetch(subscription_id=4033)\n```\n\n*Arguments*\n- `subscription_id`: subscription id.\n\n*Returns*\n\nJSON data from paystack API.\n\n\n##### `Subscription.list()` - List subscriptions.\n\n```python\nfrom paystackapi.subscription import Subscription\nresponse = Subscription.list()\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Subscription.disable(code=\"SUB_vsyqdmlzble3uii\",token=\"d7gofp6yppn3qz7\")` - Disable subscriptions.\n\n```python\nfrom paystackapi.subscription import Subscription\nresponse = Subscription.disable(code=\"SUB_vsyqdmlzble3uii\",\n                                token=\"d7gofp6yppn3qz7\")\n```\n\n*Arguments*\n\n*Arguments*\n- `code`: Subscription code.\n- `token`: Email token.\n\n\n*Returns*\n\nJSON data from paystack API.\n\n##### `Subscription.enable(code=\"SUB_vsyqdmlzble3uii\",token=\"d7gofp6yppn3qz7\")` - Enable subscriptions.\n\n```python\nfrom paystackapi.subscription import Subscription\nresponse = Subscription.enable(code=\"SUB_vsyqdmlzble3uii\",\n                                token=\"d7gofp6yppn3qz7\")\n```\n\n*Arguments*\n- `code`: Subscription code.\n- `token`: Email token.\n\n\n*Returns*\n\nJSON data from paystack API.\n\n## Verification\n\n##### `Verification.verify_bvn(bvn)` - verify a customer's BVN\n\n```python\nfrom paystackapi.verification import Verification\nresponse = Verification.verify_bvn(bvn='1234567890')\n```\n\n*Arguments*\n\n- `bvn`: customer's bvn number\n\n*Returns*\n\nJSON data from paystack API.\n\n\n##### `Verification.verify_account(account_number)` - verify a customer's BVN\n\n```python\nfrom paystackapi.verification import Verification\nresponse = Verification.verify_account(account_number='1234567890')\n```\n\n*Arguments*\n\n- `account_number`: customer's account number\n\n*Returns*\n\nJSON data from paystack API.\n\n\n##### `Verification.verify_card_bin(card_bin)` - verify a customer's card bin\n\n```python\nfrom paystackapi.verification import Verification\nresponse = Verification.verify_card_bin(card_bin='001')\n```\n\n*Arguments*\n\n- `card_bin`: customer's card bin\n\n*Returns*\n\nJSON data from paystack API.\n\n\n##### `Verification.verify_phone(verification_type, phone, callback_url)` - verify a customer's phone number\n\n```python\nfrom paystackapi.verification import Verification\nresponse = Verification.verify_phone(\n    verification_type='truecaller',\n    phone='090123456890,\n    callback_url='https://google.com'\n)\n```\n\n*Arguments*\n\n- `verification_type`:  phone number verification type\n- `phone`:              phone number to be verified\n- `callback_url`:       callback url to send verification details to\n\n*Returns*\n\nJSON data from paystack API.\n\nRefunds\n-------\n#### `Refund.create(**kwargs)` - This creates a refund which is then processed by the Paystack team\n\n```python\nfrom paystackapi.refund import Refund\nresponse = Refund.create(**kwargs)\n\n```\n*Arguments*\n- `transaction`: Transaction reference or id\n- `amount`: How much in kobo to be refunded to the customer - Optional\n- `currency`: Three-letter ISO currency - Optional\n- `customer_note`: Customer reason - Optional\n- `merchant_note`: Merchant reason - Optional\n\n*Returns*\n\nJSON data from paystack API.\n\n\n#### `Refund.list(**kwargs)` - Get a list of refunds\n\n```python\nfrom paystackapi.refund import Refund\nresponse = Refund.list(**kwargs)\n\n```\n*Arguments*\n- `reference`: Identifier for transaction to be refunded - Optional\n- `currency`: Three-letter ISO currency - Optional\n\n*Returns*\n\nJSON data from paystack API.\n\n#### `Refund.fetch(refund_id)` - Get a refund by its id\n\n```python\nfrom paystackapi.refund import Refund\nresponse = Refund.fetch(refund_id=1234)\n\n```\n*Arguments*\n- `refund_id`: Refund ID\n\n*Returns*\n\nJSON data from paystack API.\n\n\nProduct\n-------\n#### `Product.create(**kwargs)` - Create a Product\n\n*Usage*\n\n```python\nfrom paystackapi.product import Product\nresponse = Product.create(name=\"Product pypaystack test\",\n\t\t\t\t\t\t  description=\"my test description\",\n                          price=500000, currency=\"NGN\", **kwargs)\n```\n\n*Arguments*\n\n- `name`: Name of the product\n- `description`: Description of product\n- `price`: Price of the product, in kobo(Integer)\n- `currency`: Currency in which amount should be charged\n- **kwargs\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Product.list()` - list created Products\n\n*Usage*\n\n```python\nfrom paystackapi.product import Product\nresponse = Product.list()\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Product.fetch(product_id)` - fetch created Products by id\n\n*Usage*\n\n```python\nfrom paystackapi.product import Product\nresponse = Product.fetch(product_id=5499)\n```\n\n*Arguments*\n\n- `product_id`: Product id(integer).\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Product.update(product_id, **kwargs)` - update a created Product by id\n\n*Usage*\n\n```python\nfrom paystackapi.product import Product\nresponse = Product.update(product_id=5499, **kwargs)\n```\n\n*Arguments*\n\n- `product_id`: Paystack product id.\n- `name`: Name of the product\n- `description`: Description of product\n- `price`: Price of the product, in kobo(Integer)\n- `currency`: Currency in which amount should be charged\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n\nSubAccount\n-------\n#### `SubAccount.create(**kwargs)` - Create a SubAccount\n\n*Usage*\n\n```python\nfrom paystackapi.subaccount import SubAccount\nresponse = SubAccount.create(\n            business_name=\"Test Biz 123\",\n            settlement_bank=\"Access Bank\",\n            account_number=\"xxxxxxxxx\",\n            percentage_charge=\"6.9\"\n        )\n```\n\n*Arguments*\n\n- `business_name`: Name of business for subaccount\n- `settlement_bank`: Name of Bank (accepted banks)\n- `account_number`: NUBAN Bank Account number\n- `percentage_charge`: Default percentage charged on subaccount?\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `SubAccount.list(perPage, page)` - List a SubAccount\n\n*Usage*\n\n```python\nfrom paystackapi.subaccount import SubAccount\nresponse = SubAccount.list(perPage=3, page=1)\n```\n\n*Arguments*\n\n- `perPage`: Records you want to retrieve per page (Integer)\n- `page`: What page you want to retrieve (Integer)\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `SubAccount.fetch(id_or_slug)` - Fetch a SubAccount\n\n*Usage*\n\n```python\nfrom paystackapi.subaccount import SubAccount\nresponse = SubAccount.fetch(id_or_slug=\"some_slug_like_subaccount_code_or_id)\n```\n\n*Arguments*\n\n- `id_or_slug`: ID or Subaccount_Code\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `SubAccount.update(id_or_slug, **kwargs)` - Update a SubAccount\n\n*Usage*\n\n```python\nfrom paystackapi.subaccount import SubAccount\nresponse = SubAccount.update(\n            id_or_slug=\"some_slug_like_subaccount_code_or_id),\n            **kwargs\n        )\n```\n\n*Arguments*\n\n- `id_or_slug`: ID or Subaccount_Code\n- `business_name`: Name of business for subaccount\n- `settlement_bank`: Name of Bank (accepted banks)\n- `account_number`: NUBAN Bank Account number\n- `percentage_charge`: Default percentage charged on subaccount?\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\nPayment Page\n-------\n#### `Page.create(name, **kwargs)` - Create a Page\n\n*Usage*\n\n```python\nfrom paystackapi.page import Page\nresponse = Page.create(\n            name=\"New test product One\"\n        )\n```\n\n*Arguments*\n- `name`: name of page\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Page.list(perPage, page)` - List a Page\n\n*Usage*\n\n```python\nfrom paystackapi.page import Page\nresponse = Page.list(perPage=3, page=1)\n```\n\n*Arguments*\n- `perPage`: records you want to retrieve per page (Integer)\n- `page`: what page you want to retrieve (Integer)\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Page.fetch(id_or_slug)` - Fetch a Page\n\n*Usage*\n\n```python\nfrom paystackapi.page import Page\nresponse = Page.fetch(id_or_slug=\"5nApBwZkvY\")\n```\n\n*Arguments*\n- `id_or_slug`: id or slug\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Page.update(id_or_slug)` - Update a Page by id_or_slug\n\n*Usage*\n\n```python\nfrom paystackapi.page import Page\nresponse = Page.update(id_or_slug=\"5nApBwZkvY\", **kwargs)\n```\n\n*Arguments*\n- `id_or_slug`: id or slug\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Page.is_slug_available(id_or_slug)` - Check Slug Availability\n\n*Usage*\n\n```python\nfrom paystackapi.page import Page\nresponse = Page.is_slug_available(slug=\"new_or_existing_slug\")\n```\n\n*Arguments*\n- `slug`: URL slug to be confirmed\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Page.add_products(id_or_slug)` - Add products to payment page\n\n*Usage*\n\n```python\nfrom paystackapi.page import Page\nresponse = Page.add_products(\n\t\t\t\tpayment_page_id=\"new_or_existing_slug\"\n            \tproduct=[123, 456, 457]\n            )\n```\n\n*Arguments*\n\n- `payment_page_id`: Id of the payment page (Integer)\n- `product`: Ids of all the products i.e. [473, 292]\n\n*Returns*\n\nJSON data from Paystack API.\n\nSettlements\n-------\n#### `Settlement.fetch(**kwargs)` - Fetch a Settlement\n\n*Usage*\n\n```python\nfrom paystackapi.settlement import Settlement\nresponse = Settlement.fetch(\n            from=\"2016-09-12T00:00:00.000Z\",\n            to=\"2016-09-12T00:00:00.000Z\",\n            subaccount=\"subaccount\"\n        )\n```\n\n*Arguments*\n\n- `start_date`: Lower bound of date range. Leave undefined to export settlement from day one.\n- `end_date`: Upper bound of date range.Leave undefined to export settlements till date.\n- `subaccount`: code to export only settlements for that subaccount. Set to none to export only transactions for the account.\n\n*Returns*\n\nJSON data from Paystack API.\n\n\nControl Panel\n-------------\n#### `ControlPanel.fetch_payment_session_timeout()` - Fetch payment session timeout\n\n*Usage*\n\n```python\nfrom paystackapi.cpanel import ControlPanel\nresponse = ControlPanel.fetch_payment_session_timeout()\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `ControlPanel.update_payment_session_timeout(timeout)` - Update payment session timeout\n\n*Usage*\n\n```python\nfrom paystackapi.cpanel import ControlPanel\nresponse = ControlPanel.update_payment_session_timeout(timeout=30)\n```\n\n*Arguments*\n\n- `timeout`: Time before stopping session (in seconds). Set to 0 to cancel session timeouts\n\n*Returns*\n\nJSON data from Paystack API.\n\n\nInvoices\n--------\n\n#### `Invoice.create(**kwargs)` - Create a new invoice.\n\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.create(\n            customer=\"CUS_je02lbimlqixzax\",\n            amount=42000,\n            due_date=\"2019-05-08T00:00:00.000Z\"\n        )\n```\n\n*Arguments*\n\n- `customer`: customer id or code\n- `amount`: payment request amount.(Integer) Only useful if line items and tax values are ignored. Endpoint will throw a friendly warning if neither is available.\n- `due_date`: ISO 8601 representation of request due date.\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Invoice.list(**kwargs)` - list created invoice(s).\n\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.list(\n            customer=\"CUS_je02lbimlqixzax\",\n            status=\"pending\",\n            currency=\"NGN\",\n            paid=\"false\",\n            include_archive=\"true\"\n        )\n```\n\n*Arguments*\n- `customer`: filter by customer ID\n- `status`: filter by invoice status\n- `currency`: filter by currency\n- `paid`: filter by paid invoice\n- `include_archive`: include_archive\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Invoice.view(invoice_id_or_code)` - view created invoice(s).\n\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.view(\n            invoice_id_or_code=\"PRQ_kp4lleqc7g8xckk\",\n        )\n```\n\n*Arguments*\n- `invoice_id_or_code`: invoice ID or Code (string)\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Invoice.verify(invoice_code)` - verify created/existing invoice.\n\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.verify(\n            invoice_code=\"PRQ_kp4lleqc7g8xckk\",\n        )\n```\n\n*Arguments*\n- `invoice_code`: invoice Code (string)\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Invoice.send_notification(id_or_code)` - Send invoice notification.\n\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.send_notification(\n            id_or_code=\"PRQ_kp4lleqc7g8xckk\",\n        )\n```\n\n*Arguments*\n- `id_or_code`: id or code (string)\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Invoice.dashboard_metrics()` - Get dashboard metrics\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.dashboard_metrics()\n```\n\n*Arguments*\n\tNo Arguments required\n\n*Returns*\n\tJSON data from Paystack API.\n\n\n#### `Invoice.finalize_draft(id_or_code, **kwargs)` - Finalize a draft\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.finalize_draft(\n            id_or_code=\"PRQ_kp4lleqc7g8xckk\",\n            send_notification=False\n        )\n```\n\n*Arguments*\n- `id_or_code`: ID or Code (string)\n- `send_notification`: Indicates whether Paystack sends an email notification to customer. Defaults to true. (Boolean)\n\n*Returns*\n\tJSON data from Paystack API.\n\n\n#### `Invoice.update(id_or_code, **kwargs)` - Update a draft\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.update(\n            id_or_code=\"PRQ_kp4lleqc7g8xckk\",\n            amount=450000\n        )\n```\n\n*Arguments*\n- `id_or_code`: ID or Code\n- `**kwargs`\n\n*Returns*\n\tJSON data from Paystack API.\n\n\n#### `Invoice.archive(id_or_code)` - Archive a draft\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.archive(\n            id_or_code=\"PRQ_kp4lleqc7g8xckk\",\n        )\n```\n\n*Arguments*\n- `id_or_code`: ID or Code\n\n*Returns*\n\tJSON data from Paystack API.\n\n#### `Invoice.update_transfer_recipient(recipient_code_or_id, **kwargs)` - Update transfer recipienta draft\n*Usage*\n\n```python\nfrom paystackapi.invoice import Invoice\nresponse = Invoice.update_transfer_recipient(\n            recipient_code_or_id=\"PRQ_kp4lleqc7g8xckk\",\n            name=\"new name\",\n            email=\"new@email.com\"\n        )\n```\n\n*Arguments*\n- `recipient_code_or_id`: recipient code or ID\n- `name`: a name for the recipient (string)\n- `email`: the email address of the recipient (string)\n\n*Returns*\n\tJSON data from Paystack API.\n\nTransfer Recipient\n---------------------\n#### `TransferRecipient.create(**kwargs)` - Create a new Transfer Recipient.\n\n*Usage*\n\n```python\nfrom paystackapi.trecipient import TransferRecipient\nresponse = TransferRecipient.create(\n            type=\"nuban\",\n            name=\"Zombie\",\n            description=\"Zombier\",\n            account_number=\"01000000010\",\n            bank_code=\"044\",\n        )\n```\n\n*Arguments*\n\n- `type`: Recipient Type (Only nuban at this time)\n- `name`: A name for the recipient\n- `account_number`: Required if type is nuban\n- `bank_code`: Required if type is nuban. You can get the list of Bank Codes by calling the List Banks endpoint.\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `TransferRecipient.list(**kwargs)` - list Transfer Recipient.\n\n*Usage*\n\n```python\nfrom paystackapi.trecipient import TransferRecipient\nresponse = TransferRecipient.list(perPage=3, page=1)\n```\n\n*Arguments*\n\n- `perPage`: records you want to retrieve per page (Integer)\n- `page`: what page you want to retrieve (Integer)\n\n\n*Returns*\n\nJSON data from Paystack API.\n\n\nTransfer\n--------\n#### `Transfer.initiate(**kwargs)` - Initiate a new Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.transfer import Transfer\nresponse = Transfer.initiate(\n            source=\"balance\",\n            reason=\"Calm down\",\n            amount=\"3794800\",\n            recipient=\"RCP_gx2wn530m0i3w3m\",\n        )\n```\n\n*Arguments*\n\n- `source`: Where should we transfer from? Only balance for now\n- `amount`: Amount to transfer in kobo\n- `currency`: Currency type to use\n- `recipient`: Code for transfer recipient\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Transfer.list(**kwargs)` - List a Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.transfer import Transfer\nresponse = Transfer.list(perPage=3,page=1)\n```\n\n*Arguments*\n\n- `perPage`: records you want to retrieve per page (Integer)\n- `page`: what page you want to retrieve (Integer)\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Transfer.fetch(id_or_code)` - Fetch a Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.transfer import Transfer\nresponse = Transfer.fetch(\n            id_or_code=\"TRF_2x5j67tnnw1t98k\",\n        )\n```\n\n*Arguments*\n\n- `id_or_code`: An ID or code for the transfer whose details you want to retrieve.\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Transfer.finalize(**kwargs)` - Finalize a Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.transfer import Transfer\nresponse = Transfer.finalize(\n            transfer_code=\"TRF_2x5j67tnnw1t98k\",\n            otp=\"928783\"\n        )\n```\n\n*Arguments*\n\n- `transfer_code`: Transfer code\n- `otp`: OTP sent to business phone to verify transfer\n\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Transfer.initiate_bulk_transfer(**kwargs)` - Initiate a bulk Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.transfer import Transfer\nresponse = Transfer.initiate_bulk_transfer(\n            currency=\"TRF_2x5j67tnnw1t98k\",\n            source=\"928783\",\n            transfers=[\n                {\n                    \"amount\": 50000,\n                    \"recipient\": \"RCP_db342dvqvz9qcrn\"\n                },\n                {\n                    \"amount\": 50000,\n                    \"recipient\": \"RCP_db342dvqvz9qcrn\"\n                }\n            ]\n        )\n```\n\n*Arguments*\n```Text\ncurrency: Currency type to use\nsource: Where should we transfer from? Only balance for now\ntransfers: Array of transfer objects [\n    {\n        amount: Amount to transfer in kobo\n        recipient: Code for transfer recipient\n    },\n    {\n        amount: Amount to transfer in kobo\n        recipient: Code for transfer recipient\n    }\n]\n```\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Transfer.verify(**kwargs)` - Finalize a Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.transfer import Transfer\nresponse = Transfer.verify(\n            reference=\"ref_demo\",\n        )\n```\n\n*Arguments*\n- `reference`: Transfer reference\n\n\n*Returns*\n\nJSON data from Paystack API.\n\nCharge\n--------------------\n#### `Charge.start_charge(**kwargs)` - Start a Chsrge\n\n*Usage*\n\n```python\nfrom paystackapi.charge import Charge\nresponse = Charge.start_charge(\n            email=\"CUS_je02lbimlqixzax\",\n            amount=42000,\n            metadata={\n                \"custom_fields\": [\n                    {\n                        \"value\":\"makurdi\",\n                        \"display_name\": \"Donation for\",\n                        \"variable_name\": \"donation_for\"\n                    },\n                ],\n            },\n            bank={\n                \"code\":\"057\",\n                \"account_number\":\"0000000000\"\n            },\n            birthday=\"1995-12-23\"\n        )\n\n```\n\n*Arguments*\n\n- `email`: Customer's email address\n- `amount`: Amount in kobo\n- `**kwargs`\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Charge.submit_pin(**kwargs)` - Submit PIN to continue a charge.\n\n*Usage*\n\n```python\nfrom paystackapi.charge import Charge\nresponse = Charge.submit_pin(\n            pin=\"0987\",\n            reference=\"5bwib5v6anhe9xa\",\n        )\n```\n\n*Arguments*\n\n- `pin`: PIN submitted by user\n- `reference`: reference for transaction that requested pin\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Charge.submit_otp(**kwargs)` - Submit OTP to complete a charge.\n\n*Usage*\n\n```python\nfrom paystackapi.charge import Charge\nresponse = Charge.submit_otp(\n            otp=\"0987\",\n            reference=\"5bwib5v6anhe9xa\",\n        )\n```\n\n*Arguments*\n\n- `otp`: OTP submitted by user\n- `reference`: reference for ongoing transaction\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `Charge.submit_phone(**kwargs)` - Submit Phone when requested.\n\n*Usage*\n\n```python\nfrom paystackapi.charge import Charge\nresponse = Charge.submit_phone(\n            phone=\"0XX4XX9X0XF\",\n            reference=\"5bwib5v6anhe9xa\",\n        )\n```\n\n*Arguments*\n\n- `phone`: Phone submitted by user\n- `reference` : reference for ongoing transaction\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Charge.submit_birthday(**kwargs)` - Submit Birthday when requested.\n\n*Usage*\n\n```python\nfrom paystackapi.charge import Charge\nresponse = Charge.submit_birthday(\n            birthday=\"1975-12-23\",\n            reference=\"5bwib5v6anhe9xa\",\n        )\n```\n\n*Arguments*\n\n- `birthday`: Birthday submitted by user\n- `reference`: reference for ongoing transaction\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `Charge.check_pending(reference)` - Check pending charge\n\n*Usage*\n\n```python\nfrom paystackapi.charge import Charge\nresponse = Charge.check_pending(\n            reference=\"5bwib5v6anhe9xa\",\n        )\n```\n\n*Arguments*\n\n- `reference`: The reference to check\n\n*Returns*\n\nJSON data from Paystack API.\n\nTransferControl\n--------------\n\n#### `TransferControl.check_balance(**kwargs)` - Check Balance.\n\n*Usage*\n\n```python\nfrom paystackapi.tcontrol import TransferControl\nresponse = TransferControl.check_balance()\n\n```\n\n*Arguments*\n\nNo argument required.\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `TransferControl.resend_otp(**kwargs)` - Resend OTP for Transfer.\n\n*Usage*\n\n```python\nfrom paystackapi.tcontrol import TransferControl\nresponse = TransferControl.resend_otp(\n            transfer_code=\"TRF_vsyqdmlzble3uii\",\n            reason=\"Just do it.\"\n        )\n```\n\n*Arguments*\n\n- `transfer_code`: Transfer code\n- `reason`: either resend_otp or transfer\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `TransferControl.disable_otp_finalize(**kwargs)` - Finalize Disabling of OTP requirement for Transfers\n\n*Usage*\n\n```python\nfrom paystackapi.tcontrol import TransferControl\nresponse = TransferControl.disable_otp_finalize(\n            otp=\"928783\",\n        )\n```\n\n*Arguments*\n\n- `otp`: OTP sent to business phone to verify disabling OTP requirement\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `TransferControl.disable_otp()` - Disable OTP requirement for Transfers\n\n*Usage*\n\n```python\nfrom paystackapi.tcontrol import TransferControl\nresponse = TransferControl.disable_otp()\n```\n\n*Arguments*\n\nNo arguments required\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `TransferControl.enable_otp(**kwargs)` - Enable OTP requirement for Transfers\n\n*Usage*\n\n```python\nfrom paystackapi.tcontrol import TransferControl\nresponse = TransferControl.enable_otp()\n```\n\n*Arguments*\n\nNo arguments required\n\n*Returns*\n\nJSON data from Paystack API.\n\n\nBulkCharge\n--------------\n\n#### `BulkCharge.initiate_bulk_charge(bulkcharge)` - Initiate Bulk Charge.\n\n*Usage*\n\n```python\nfrom paystackapi.bulkcharge import BulkCharge\nresponse = BulkCharge.initiate_bulk_charge(\n            bulkcharge=[\n                {\"authorization\": \"AUTH_n95vpedf\", \"amount\": 2500}, \n                {\"authorization\": \"AUTH_ljdt4e4j\", \"amount\": 1500}\n            ]\n        )\n```\n\n*Arguments*\n- `authorization`: Authorization token\n- `amount`: Amount in kobo\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `BulkCharge.list(**kwargs)` - List Bulk Charge Batches created by the integration.\n\n*Usage*\n\n```python\nfrom paystackapi.bulkcharge import BulkCharge\nresponse = BulkCharge.list()\n```\n\n*Arguments*\n\n- `perPage`: Number of transfer listed per page for pagination\n- `page`: number of pages listed by pagination.\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `BulkCharge.fetch_bulk_batch(id_or_code)` - This endpoint retrieves a specific batch code.\n\n*Usage*\n\n```python\nfrom paystackapi.bulkcharge import BulkCharge\nresponse = BulkCharge.fetch_bulk_batch(\n            id_or_code=\"BCH_orj0ttn8vtp80hx\"\n        )\n```\n\n*Arguments*\n- `id_or_code`: An ID or code for the transfer whose details you want to retrieve.\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `BulkCharge.fetch_charges_batch(id_or_code, **kwargs)` - Fetch the charges associated with a specified batch code.\n\n*Usage*\n\n```python\nfrom paystackapi.bulkcharge import BulkCharge\nresponse = BulkCharge.fetch_charges_batch(\n            id_or_code=\"BCH_orj0ttn8vtp80hx\"\n        )\n```\n\n*Arguments*\n\n- `id_or_code`: An ID or code for the batch whose charges you want to retrieve.\n- `status`: pending, success or failed\n- `perPage`: Number of transfers listed per page for pagination\n- `page`: number of pages listed by pagination.\n\n*Returns*\n\nJSON data from Paystack API.\n\n#### `BulkCharge.pause_bulk_batch(batch_code)` - Pause the proccessing of an ongoing bulk charge batch.\n\n*Usage*\n\n```python\nfrom paystackapi.bulkcharge import BulkCharge\nresponse = BulkCharge.pause_bulk_batch(\n            batch_code=\"BCH_orj0ttn8vtp80hx\"\n        )\n```\n\n*Arguments*\n- `batch_code`: code of the batch to be paused\n\n\n*Returns*\n\nJSON data from Paystack API.\n\n\n#### `BulkCharge.resume_bulk_charge(batch_code)` - Resume the proccessing of an already paused bulk charge batch.\n\n*Usage*\n\n```python\nfrom paystackapi.bulkcharge import BulkCharge\nresponse = BulkCharge.resume_bulk_charge(\n            batch_code=\"BCH_orj0ttn8vtp80hx\"\n        )\n```\n\n*Arguments*\n- `batch_code`: code of the batch to be resumed\n\n*Returns*\n\nJSON data from Paystack API.\n\n\nMiscellaneous\n-------------\n\n``Misc.list_banks()`` - List Banks\n\n```python\n   from paystackapi.misc import Misc\n   response = Misc.list_banks()\n```\n*Returns*\n\nJSON data from paystack API.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andela-sjames/paystack-python", "keywords": "paystack python library", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "paystackapi", "package_url": "https://pypi.org/project/paystackapi/", "platform": "", "project_url": "https://pypi.org/project/paystackapi/", "project_urls": {"Homepage": "https://github.com/andela-sjames/paystack-python"}, "release_url": "https://pypi.org/project/paystackapi/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "A python library to consume Paystack API", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>paystack-python</h1>\n<p><a href=\"https://coveralls.io/github/andela-sjames/paystack-python?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c026f59fffbfbfb410aa16cd05d66988e6af3c15/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f616e64656c612d736a616d65732f706179737461636b2d707974686f6e2f62616467652e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://scrutinizer-ci.com/g/andela-sjames/paystack-python/?branch=master\" rel=\"nofollow\"><img alt=\"Scrutinizer Code Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/046f7d90265b7e1c3d7984b75af724f7e8d33e80/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f616e64656c612d736a616d65732f706179737461636b2d707974686f6e2f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a>\n<a href=\"https://img.shields.io/badge/license-MIT-blue.svg\" rel=\"nofollow\"><img alt=\"Circle CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a> <a href=\"https://travis-ci.org/andela-sjames/paystack-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2da430e2e3b605732a13e1f3fd8b4aa9f98d3e0/68747470733a2f2f7472617669732d63692e6f72672f616e64656c612d736a616d65732f706179737461636b2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/paystackapi\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/00c265f5b03f04b2b56ec78fadaa423fc8546bab/68747470733a2f2f62616467652e667572792e696f2f70792f706179737461636b6170692e737667\"></a></p>\n<p>Python plugin for <a href=\"https://paystack.com/\" rel=\"nofollow\">Paystack</a>\nView on <a href=\"https://pypi.python.org/pypi/paystackapi\" rel=\"nofollow\">pypi.python.org</a></p>\n<h1>Installation</h1>\n<pre><code>pip install paystackapi\n</code></pre>\n<h1>Instantiate Paystack</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.paystack</span> <span class=\"kn\">import</span> <span class=\"n\">Paystack</span>\n<span class=\"n\">paystack_secret_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"5om3secretK3y\"</span>\n<span class=\"n\">paystack</span> <span class=\"o\">=</span> <span class=\"n\">Paystack</span><span class=\"p\">(</span><span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"n\">paystack_secret_key</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># to use transaction class</span>\n<span class=\"n\">paystack</span><span class=\"o\">.</span><span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># to use customer class</span>\n<span class=\"n\">paystack</span><span class=\"o\">.</span><span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">transaction_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># to use plan class</span>\n<span class=\"n\">paystack</span><span class=\"o\">.</span><span class=\"n\">plan</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">plan_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># to use subscription class</span>\n<span class=\"n\">paystack</span><span class=\"o\">.</span><span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<h2>DOC Reference: <a href=\"https://developers.paystack.co/v2.0/reference\" rel=\"nofollow\">https://developers.paystack.co/v2.0/reference</a></h2>\n<h5>Other methods can be found below...</h5>\n<h1>Static Use</h1>\n<p>To start using the Paystack Python API, you need to start by setting your secret key.</p>\n<p>You can set your secret key in your environment by running:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">PAYSTACK_SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'your_secret_key'</span>\n</pre>\n<blockquote>\n<p>Don't forget to get your API key from <a href=\"https://paystack.com/\" rel=\"nofollow\">Paystack</a> and assign to the variable <code>PAYSTACK_SECRET_KEY</code></p>\n</blockquote>\n<h2>Transactions</h2>\n<h5><code>Transaction.initialize(reference, amount, email, plan)</code> - Initialize transaction.</h5>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">(</span><span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s1\">'reference'</span><span class=\"p\">,</span>\n                                  <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'amount'</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'email'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>reference</code>: Unique transaction reference</li>\n<li><code>amount</code>: Amount</li>\n<li><code>email</code>: Email address</li>\n<li><code>plan</code>: Specified plan (optional)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h5><code>Transaction.charge(reference, authorization_code, email, amount)</code> - Charge authorization.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"p\">(</span><span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s1\">'reference'</span><span class=\"p\">,</span>\n                              <span class=\"n\">authorization_code</span><span class=\"o\">=</span><span class=\"s1\">'authorization_code'</span><span class=\"p\">,</span>\n                              <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'email'</span><span class=\"p\">,</span>\n                              <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'amount'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>reference</code>: Unique transaction reference</li>\n<li><code>authorization_code</code>: Authorization code for the transaction</li>\n<li><code>email</code>: Email Address of the user with the authorization code</li>\n<li><code>amount</code>: Amount in kobo</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h5><code>Transaction.charge_token(reference, token, email, amount)</code> - Charge Token.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">charge_token</span><span class=\"p\">(</span><span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s1\">'reference'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'email'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'amount'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li>reference: unique transaction reference</li>\n<li>token: paystack token</li>\n<li>email: Email Address</li>\n<li>amount: Amount in Kobo</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h5><code>Transaction.get(transaction_id)</code> - Get a single transaction.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">transaction_id</span><span class=\"o\">=</span><span class=\"mi\">23</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id</code>: Transaction id(integer).</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Transaction.list()</code> - List transactions.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Transaction.totals()</code> - Get totals.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">totals</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Transaction.verify(reference)</code> - Verify transactions.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s1\">'reference'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>reference</code>: a unique value needed for transaction.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h2>Plans</h2>\n<h5><code>Plan.create(name, description, amount, interval, send_invoices, send_sms, hosted_page, hosted_page_url, hosted_page_summary, currency)</code> - Create a plan</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.plan</span> <span class=\"kn\">import</span> <span class=\"n\">Plan</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Plan</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"n\">amount</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">send_invoices</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">send_sms</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">hosted_page</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">hosted_page_url</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">hosted_page_summary</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n                       <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>name</code>: plan's name.</li>\n<li><code>description</code>: description of the plan.</li>\n<li><code>amount</code>: amount for the plan in kobo</li>\n<li><code>interval</code>: plan's interval(daily...etc)</li>\n<li><code>send_invoices</code>: boolean</li>\n<li><code>send_sms</code>: (optional)</li>\n<li><code>hosted_page</code>: (optional)</li>\n<li><code>hosted_page_url</code>: url of hosted page (optional)</li>\n<li><code>hosted_page_summary</code>: summary of the hosted page</li>\n<li><code>currency</code>: plans currency (NGN)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Plan.get(plan_id)</code> - Get a single plan.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.plan</span> <span class=\"kn\">import</span> <span class=\"n\">Plan</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Plan</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">plan_id</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id</code>: paystack plan id.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Plan.list()</code> - List paystack plan</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.plan</span> <span class=\"kn\">import</span> <span class=\"n\">Plan</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Plan</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Plan.update(plan_id=88, name=None, description=None, amount=None, interval=None, send_invoices=None, send_sms=None, hosted_page=None, hosted_page_url=None, hosted_page_summary=None, currency=None)</code> - Update paystack plan</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.plan</span> <span class=\"kn\">import</span> <span class=\"n\">Plan</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Plan</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">plan_id</span><span class=\"o\">=</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                       <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                       <span class=\"n\">send_invoices</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">send_sms</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                       <span class=\"n\">hosted_page</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hosted_page_url</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                       <span class=\"n\">hosted_page_summary</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>plan_id</code>: plan identity number.</li>\n<li><code>name</code>: name of plan</li>\n<li><code>description</code>: plan description(optional)</li>\n<li><code>amount</code>: plan amount in Kobo</li>\n<li><code>interval</code>: plan interval9(monthly, yearly, quarterly...etc)</li>\n<li><code>send_invoice</code>: (optional)</li>\n<li><code>send_sms</code>: (optional)</li>\n<li><code>hosted_page</code>: (optional)</li>\n<li><code>hosted_page_url</code>: (optional)</li>\n<li><code>hosted_page_summary</code>: (optional)</li>\n<li><code>currency</code>: Naira in kobo(NGN)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h2>Customers</h2>\n<h5><code>Customer.create(first_name, last_name, email, phone)</code> - Create customer</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.customer</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s1\">'first_name'</span><span class=\"p\">,</span>\n                           <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s1\">'last_name'</span><span class=\"p\">,</span>\n                           <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'email'</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s1\">'phone'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>first_name</code>: customer's first name.</li>\n<li><code>last_name</code>: customer's last name.</li>\n<li><code>email</code>: customer's email address.</li>\n<li><code>phone</code>: customer's phone number.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Customer.get(customer_id)</code> - Get customers by id</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.customer</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">customer_id</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id</code>: paystack customer id</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Customer.list()</code> - List paystack customers</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.customer</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Customer.update(customer_id, first_name=None, last_name=None, email=None, phone=None)</code> - Update paystack customer data by id.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.customer</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">customer_id</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>customer_id</code>: paystack customer id.</li>\n<li><code>first_name</code>: customer's first name(optional).</li>\n<li><code>last_name</code>: customer's last name(optional).</li>\n<li><code>email</code>: customer's email address(optional).</li>\n<li><code>phone</code>: customer's phone number(optional).</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h2>Subscription</h2>\n<h5><code>Subscription.create(customer, plan, authorization, start_date)</code> - Create subscription.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subscription</span> <span class=\"kn\">import</span> <span class=\"n\">Subscription</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Subscription</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">customer</span><span class=\"o\">=</span><span class=\"s1\">'CUS_xnxdt6s1zg1f4nx'</span><span class=\"p\">,</span>\n                               <span class=\"n\">plan</span><span class=\"o\">=</span><span class=\"s1\">'Pln_2yudUnIds2p'</span><span class=\"p\">,</span>\n                               <span class=\"n\">authorization</span><span class=\"o\">=</span><span class=\"s1\">'34'</span><span class=\"p\">,</span>\n                               <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>customer</code>: Customer's email address or customer code.</li>\n<li><code>plan</code>: Plan code.</li>\n<li><code>authorization</code>: customers authorization code.</li>\n<li><code>start_date</code>:  the date for the first debit. (ISO 8601 format)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Subscription.fetch(subscription_id)</code> - Fetch subscription.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subscription</span> <span class=\"kn\">import</span> <span class=\"n\">Subscription</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Subscription</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">subscription_id</span><span class=\"o\">=</span><span class=\"mi\">4033</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>subscription_id</code>: subscription id.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Subscription.list()</code> - List subscriptions.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subscription</span> <span class=\"kn\">import</span> <span class=\"n\">Subscription</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Subscription</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Subscription.disable(code=\"SUB_vsyqdmlzble3uii\",token=\"d7gofp6yppn3qz7\")</code> - Disable subscriptions.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subscription</span> <span class=\"kn\">import</span> <span class=\"n\">Subscription</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Subscription</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">\"SUB_vsyqdmlzble3uii\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"d7gofp6yppn3qz7\"</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>code</code>: Subscription code.</li>\n<li><code>token</code>: Email token.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Subscription.enable(code=\"SUB_vsyqdmlzble3uii\",token=\"d7gofp6yppn3qz7\")</code> - Enable subscriptions.</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subscription</span> <span class=\"kn\">import</span> <span class=\"n\">Subscription</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Subscription</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">\"SUB_vsyqdmlzble3uii\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"d7gofp6yppn3qz7\"</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>code</code>: Subscription code.</li>\n<li><code>token</code>: Email token.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h2>Verification</h2>\n<h5><code>Verification.verify_bvn(bvn)</code> - verify a customer's BVN</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.verification</span> <span class=\"kn\">import</span> <span class=\"n\">Verification</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Verification</span><span class=\"o\">.</span><span class=\"n\">verify_bvn</span><span class=\"p\">(</span><span class=\"n\">bvn</span><span class=\"o\">=</span><span class=\"s1\">'1234567890'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>bvn</code>: customer's bvn number</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Verification.verify_account(account_number)</code> - verify a customer's BVN</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.verification</span> <span class=\"kn\">import</span> <span class=\"n\">Verification</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Verification</span><span class=\"o\">.</span><span class=\"n\">verify_account</span><span class=\"p\">(</span><span class=\"n\">account_number</span><span class=\"o\">=</span><span class=\"s1\">'1234567890'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>account_number</code>: customer's account number</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Verification.verify_card_bin(card_bin)</code> - verify a customer's card bin</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.verification</span> <span class=\"kn\">import</span> <span class=\"n\">Verification</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Verification</span><span class=\"o\">.</span><span class=\"n\">verify_card_bin</span><span class=\"p\">(</span><span class=\"n\">card_bin</span><span class=\"o\">=</span><span class=\"s1\">'001'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>card_bin</code>: customer's card bin</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h5><code>Verification.verify_phone(verification_type, phone, callback_url)</code> - verify a customer's phone number</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.verification</span> <span class=\"kn\">import</span> <span class=\"n\">Verification</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Verification</span><span class=\"o\">.</span><span class=\"n\">verify_phone</span><span class=\"p\">(</span>\n    <span class=\"n\">verification_type</span><span class=\"o\">=</span><span class=\"s1\">'truecaller'</span><span class=\"p\">,</span>\n    <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s1\">'090123456890,</span>\n    <span class=\"n\">callback_url</span><span class=\"o\">=</span><span class=\"s1\">'https://google.com'</span>\n<span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>verification_type</code>:  phone number verification type</li>\n<li><code>phone</code>:              phone number to be verified</li>\n<li><code>callback_url</code>:       callback url to send verification details to</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h2>Refunds</h2>\n<h4><code>Refund.create(**kwargs)</code> - This creates a refund which is then processed by the Paystack team</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.refund</span> <span class=\"kn\">import</span> <span class=\"n\">Refund</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Refund</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>transaction</code>: Transaction reference or id</li>\n<li><code>amount</code>: How much in kobo to be refunded to the customer - Optional</li>\n<li><code>currency</code>: Three-letter ISO currency - Optional</li>\n<li><code>customer_note</code>: Customer reason - Optional</li>\n<li><code>merchant_note</code>: Merchant reason - Optional</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h4><code>Refund.list(**kwargs)</code> - Get a list of refunds</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.refund</span> <span class=\"kn\">import</span> <span class=\"n\">Refund</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Refund</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>reference</code>: Identifier for transaction to be refunded - Optional</li>\n<li><code>currency</code>: Three-letter ISO currency - Optional</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h4><code>Refund.fetch(refund_id)</code> - Get a refund by its id</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.refund</span> <span class=\"kn\">import</span> <span class=\"n\">Refund</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Refund</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">refund_id</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>refund_id</code>: Refund ID</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n<h2>Product</h2>\n<h4><code>Product.create(**kwargs)</code> - Create a Product</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.product</span> <span class=\"kn\">import</span> <span class=\"n\">Product</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Product</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Product pypaystack test\"</span><span class=\"p\">,</span>\n\t\t\t\t\t\t  <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"my test description\"</span><span class=\"p\">,</span>\n                          <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"mi\">500000</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"NGN\"</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>name</code>: Name of the product</li>\n<li><code>description</code>: Description of product</li>\n<li><code>price</code>: Price of the product, in kobo(Integer)</li>\n<li><code>currency</code>: Currency in which amount should be charged</li>\n<li>**kwargs</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Product.list()</code> - list created Products</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.product</span> <span class=\"kn\">import</span> <span class=\"n\">Product</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Product</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Product.fetch(product_id)</code> - fetch created Products by id</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.product</span> <span class=\"kn\">import</span> <span class=\"n\">Product</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Product</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"mi\">5499</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>product_id</code>: Product id(integer).</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Product.update(product_id, **kwargs)</code> - update a created Product by id</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.product</span> <span class=\"kn\">import</span> <span class=\"n\">Product</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Product</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"mi\">5499</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>product_id</code>: Paystack product id.</li>\n<li><code>name</code>: Name of the product</li>\n<li><code>description</code>: Description of product</li>\n<li><code>price</code>: Price of the product, in kobo(Integer)</li>\n<li><code>currency</code>: Currency in which amount should be charged</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>SubAccount</h2>\n<h4><code>SubAccount.create(**kwargs)</code> - Create a SubAccount</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subaccount</span> <span class=\"kn\">import</span> <span class=\"n\">SubAccount</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">SubAccount</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"n\">business_name</span><span class=\"o\">=</span><span class=\"s2\">\"Test Biz 123\"</span><span class=\"p\">,</span>\n            <span class=\"n\">settlement_bank</span><span class=\"o\">=</span><span class=\"s2\">\"Access Bank\"</span><span class=\"p\">,</span>\n            <span class=\"n\">account_number</span><span class=\"o\">=</span><span class=\"s2\">\"xxxxxxxxx\"</span><span class=\"p\">,</span>\n            <span class=\"n\">percentage_charge</span><span class=\"o\">=</span><span class=\"s2\">\"6.9\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>business_name</code>: Name of business for subaccount</li>\n<li><code>settlement_bank</code>: Name of Bank (accepted banks)</li>\n<li><code>account_number</code>: NUBAN Bank Account number</li>\n<li><code>percentage_charge</code>: Default percentage charged on subaccount?</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>SubAccount.list(perPage, page)</code> - List a SubAccount</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subaccount</span> <span class=\"kn\">import</span> <span class=\"n\">SubAccount</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">SubAccount</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">perPage</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>perPage</code>: Records you want to retrieve per page (Integer)</li>\n<li><code>page</code>: What page you want to retrieve (Integer)</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>SubAccount.fetch(id_or_slug)</code> - Fetch a SubAccount</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subaccount</span> <span class=\"kn\">import</span> <span class=\"n\">SubAccount</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">SubAccount</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">id_or_slug</span><span class=\"o\">=</span><span class=\"s2\">\"some_slug_like_subaccount_code_or_id)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_slug</code>: ID or Subaccount_Code</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>SubAccount.update(id_or_slug, **kwargs)</code> - Update a SubAccount</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.subaccount</span> <span class=\"kn\">import</span> <span class=\"n\">SubAccount</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">SubAccount</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_slug</span><span class=\"o\">=</span><span class=\"s2\">\"some_slug_like_subaccount_code_or_id),</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_slug</code>: ID or Subaccount_Code</li>\n<li><code>business_name</code>: Name of business for subaccount</li>\n<li><code>settlement_bank</code>: Name of Bank (accepted banks)</li>\n<li><code>account_number</code>: NUBAN Bank Account number</li>\n<li><code>percentage_charge</code>: Default percentage charged on subaccount?</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Payment Page</h2>\n<h4><code>Page.create(name, **kwargs)</code> - Create a Page</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.page</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"New test product One\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>name</code>: name of page</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Page.list(perPage, page)</code> - List a Page</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.page</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">perPage</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>perPage</code>: records you want to retrieve per page (Integer)</li>\n<li><code>page</code>: what page you want to retrieve (Integer)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Page.fetch(id_or_slug)</code> - Fetch a Page</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.page</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">id_or_slug</span><span class=\"o\">=</span><span class=\"s2\">\"5nApBwZkvY\"</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_slug</code>: id or slug</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Page.update(id_or_slug)</code> - Update a Page by id_or_slug</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.page</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">id_or_slug</span><span class=\"o\">=</span><span class=\"s2\">\"5nApBwZkvY\"</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_slug</code>: id or slug</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Page.is_slug_available(id_or_slug)</code> - Check Slug Availability</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.page</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">is_slug_available</span><span class=\"p\">(</span><span class=\"n\">slug</span><span class=\"o\">=</span><span class=\"s2\">\"new_or_existing_slug\"</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>slug</code>: URL slug to be confirmed</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Page.add_products(id_or_slug)</code> - Add products to payment page</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.page</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">add_products</span><span class=\"p\">(</span>\n\t\t\t\t<span class=\"n\">payment_page_id</span><span class=\"o\">=</span><span class=\"s2\">\"new_or_existing_slug\"</span>\n            \t<span class=\"n\">product</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">123</span><span class=\"p\">,</span> <span class=\"mi\">456</span><span class=\"p\">,</span> <span class=\"mi\">457</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>payment_page_id</code>: Id of the payment page (Integer)</li>\n<li><code>product</code>: Ids of all the products i.e. [473, 292]</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Settlements</h2>\n<h4><code>Settlement.fetch(**kwargs)</code> - Fetch a Settlement</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.settlement</span> <span class=\"kn\">import</span> <span class=\"n\">Settlement</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Settlement</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span>\n            <span class=\"n\">from</span><span class=\"o\">=</span><span class=\"s2\">\"2016-09-12T00:00:00.000Z\"</span><span class=\"p\">,</span>\n            <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"s2\">\"2016-09-12T00:00:00.000Z\"</span><span class=\"p\">,</span>\n            <span class=\"n\">subaccount</span><span class=\"o\">=</span><span class=\"s2\">\"subaccount\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>start_date</code>: Lower bound of date range. Leave undefined to export settlement from day one.</li>\n<li><code>end_date</code>: Upper bound of date range.Leave undefined to export settlements till date.</li>\n<li><code>subaccount</code>: code to export only settlements for that subaccount. Set to none to export only transactions for the account.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Control Panel</h2>\n<h4><code>ControlPanel.fetch_payment_session_timeout()</code> - Fetch payment session timeout</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.cpanel</span> <span class=\"kn\">import</span> <span class=\"n\">ControlPanel</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ControlPanel</span><span class=\"o\">.</span><span class=\"n\">fetch_payment_session_timeout</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>ControlPanel.update_payment_session_timeout(timeout)</code> - Update payment session timeout</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.cpanel</span> <span class=\"kn\">import</span> <span class=\"n\">ControlPanel</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ControlPanel</span><span class=\"o\">.</span><span class=\"n\">update_payment_session_timeout</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>timeout</code>: Time before stopping session (in seconds). Set to 0 to cancel session timeouts</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Invoices</h2>\n<h4><code>Invoice.create(**kwargs)</code> - Create a new invoice.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"n\">customer</span><span class=\"o\">=</span><span class=\"s2\">\"CUS_je02lbimlqixzax\"</span><span class=\"p\">,</span>\n            <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">42000</span><span class=\"p\">,</span>\n            <span class=\"n\">due_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-05-08T00:00:00.000Z\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>customer</code>: customer id or code</li>\n<li><code>amount</code>: payment request amount.(Integer) Only useful if line items and tax values are ignored. Endpoint will throw a friendly warning if neither is available.</li>\n<li><code>due_date</code>: ISO 8601 representation of request due date.</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Invoice.list(**kwargs)</code> - list created invoice(s).</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span>\n            <span class=\"n\">customer</span><span class=\"o\">=</span><span class=\"s2\">\"CUS_je02lbimlqixzax\"</span><span class=\"p\">,</span>\n            <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"s2\">\"pending\"</span><span class=\"p\">,</span>\n            <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"NGN\"</span><span class=\"p\">,</span>\n            <span class=\"n\">paid</span><span class=\"o\">=</span><span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n            <span class=\"n\">include_archive</span><span class=\"o\">=</span><span class=\"s2\">\"true\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>customer</code>: filter by customer ID</li>\n<li><code>status</code>: filter by invoice status</li>\n<li><code>currency</code>: filter by currency</li>\n<li><code>paid</code>: filter by paid invoice</li>\n<li><code>include_archive</code>: include_archive</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Invoice.view(invoice_id_or_code)</code> - view created invoice(s).</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span>\n            <span class=\"n\">invoice_id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>invoice_id_or_code</code>: invoice ID or Code (string)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Invoice.verify(invoice_code)</code> - verify created/existing invoice.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span>\n            <span class=\"n\">invoice_code</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>invoice_code</code>: invoice Code (string)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Invoice.send_notification(id_or_code)</code> - Send invoice notification.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">send_notification</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: id or code (string)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Invoice.dashboard_metrics()</code> - Get dashboard metrics</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">dashboard_metrics</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em>\nNo Arguments required</p>\n<p><em>Returns</em>\nJSON data from Paystack API.</p>\n<h4><code>Invoice.finalize_draft(id_or_code, **kwargs)</code> - Finalize a draft</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">finalize_draft</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n            <span class=\"n\">send_notification</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: ID or Code (string)</li>\n<li><code>send_notification</code>: Indicates whether Paystack sends an email notification to customer. Defaults to true. (Boolean)</li>\n</ul>\n<p><em>Returns</em>\nJSON data from Paystack API.</p>\n<h4><code>Invoice.update(id_or_code, **kwargs)</code> - Update a draft</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n            <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">450000</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: ID or Code</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em>\nJSON data from Paystack API.</p>\n<h4><code>Invoice.archive(id_or_code)</code> - Archive a draft</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: ID or Code</li>\n</ul>\n<p><em>Returns</em>\nJSON data from Paystack API.</p>\n<h4><code>Invoice.update_transfer_recipient(recipient_code_or_id, **kwargs)</code> - Update transfer recipienta draft</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.invoice</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">update_transfer_recipient</span><span class=\"p\">(</span>\n            <span class=\"n\">recipient_code_or_id</span><span class=\"o\">=</span><span class=\"s2\">\"PRQ_kp4lleqc7g8xckk\"</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"new name\"</span><span class=\"p\">,</span>\n            <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"new@email.com\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>recipient_code_or_id</code>: recipient code or ID</li>\n<li><code>name</code>: a name for the recipient (string)</li>\n<li><code>email</code>: the email address of the recipient (string)</li>\n</ul>\n<p><em>Returns</em>\nJSON data from Paystack API.</p>\n<h2>Transfer Recipient</h2>\n<h4><code>TransferRecipient.create(**kwargs)</code> - Create a new Transfer Recipient.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.trecipient</span> <span class=\"kn\">import</span> <span class=\"n\">TransferRecipient</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferRecipient</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"nuban\"</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Zombie\"</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Zombier\"</span><span class=\"p\">,</span>\n            <span class=\"n\">account_number</span><span class=\"o\">=</span><span class=\"s2\">\"01000000010\"</span><span class=\"p\">,</span>\n            <span class=\"n\">bank_code</span><span class=\"o\">=</span><span class=\"s2\">\"044\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>type</code>: Recipient Type (Only nuban at this time)</li>\n<li><code>name</code>: A name for the recipient</li>\n<li><code>account_number</code>: Required if type is nuban</li>\n<li><code>bank_code</code>: Required if type is nuban. You can get the list of Bank Codes by calling the List Banks endpoint.</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>TransferRecipient.list(**kwargs)</code> - list Transfer Recipient.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.trecipient</span> <span class=\"kn\">import</span> <span class=\"n\">TransferRecipient</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferRecipient</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">perPage</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>perPage</code>: records you want to retrieve per page (Integer)</li>\n<li><code>page</code>: what page you want to retrieve (Integer)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Transfer</h2>\n<h4><code>Transfer.initiate(**kwargs)</code> - Initiate a new Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transfer</span> <span class=\"kn\">import</span> <span class=\"n\">Transfer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transfer</span><span class=\"o\">.</span><span class=\"n\">initiate</span><span class=\"p\">(</span>\n            <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s2\">\"balance\"</span><span class=\"p\">,</span>\n            <span class=\"n\">reason</span><span class=\"o\">=</span><span class=\"s2\">\"Calm down\"</span><span class=\"p\">,</span>\n            <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s2\">\"3794800\"</span><span class=\"p\">,</span>\n            <span class=\"n\">recipient</span><span class=\"o\">=</span><span class=\"s2\">\"RCP_gx2wn530m0i3w3m\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>source</code>: Where should we transfer from? Only balance for now</li>\n<li><code>amount</code>: Amount to transfer in kobo</li>\n<li><code>currency</code>: Currency type to use</li>\n<li><code>recipient</code>: Code for transfer recipient</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Transfer.list(**kwargs)</code> - List a Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transfer</span> <span class=\"kn\">import</span> <span class=\"n\">Transfer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transfer</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">perPage</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>perPage</code>: records you want to retrieve per page (Integer)</li>\n<li><code>page</code>: what page you want to retrieve (Integer)</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Transfer.fetch(id_or_code)</code> - Fetch a Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transfer</span> <span class=\"kn\">import</span> <span class=\"n\">Transfer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transfer</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"TRF_2x5j67tnnw1t98k\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: An ID or code for the transfer whose details you want to retrieve.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Transfer.finalize(**kwargs)</code> - Finalize a Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transfer</span> <span class=\"kn\">import</span> <span class=\"n\">Transfer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transfer</span><span class=\"o\">.</span><span class=\"n\">finalize</span><span class=\"p\">(</span>\n            <span class=\"n\">transfer_code</span><span class=\"o\">=</span><span class=\"s2\">\"TRF_2x5j67tnnw1t98k\"</span><span class=\"p\">,</span>\n            <span class=\"n\">otp</span><span class=\"o\">=</span><span class=\"s2\">\"928783\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>transfer_code</code>: Transfer code</li>\n<li><code>otp</code>: OTP sent to business phone to verify transfer</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Transfer.initiate_bulk_transfer(**kwargs)</code> - Initiate a bulk Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transfer</span> <span class=\"kn\">import</span> <span class=\"n\">Transfer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transfer</span><span class=\"o\">.</span><span class=\"n\">initiate_bulk_transfer</span><span class=\"p\">(</span>\n            <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"TRF_2x5j67tnnw1t98k\"</span><span class=\"p\">,</span>\n            <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s2\">\"928783\"</span><span class=\"p\">,</span>\n            <span class=\"n\">transfers</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"mi\">50000</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"recipient\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RCP_db342dvqvz9qcrn\"</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"mi\">50000</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"recipient\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RCP_db342dvqvz9qcrn\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<pre>currency: Currency type to use\nsource: Where should we transfer from? Only balance for now\ntransfers: Array of transfer objects [\n    {\n        amount: Amount to transfer in kobo\n        recipient: Code for transfer recipient\n    },\n    {\n        amount: Amount to transfer in kobo\n        recipient: Code for transfer recipient\n    }\n]\n</pre>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Transfer.verify(**kwargs)</code> - Finalize a Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.transfer</span> <span class=\"kn\">import</span> <span class=\"n\">Transfer</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Transfer</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span>\n            <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s2\">\"ref_demo\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>reference</code>: Transfer reference</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Charge</h2>\n<h4><code>Charge.start_charge(**kwargs)</code> - Start a Chsrge</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.charge</span> <span class=\"kn\">import</span> <span class=\"n\">Charge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Charge</span><span class=\"o\">.</span><span class=\"n\">start_charge</span><span class=\"p\">(</span>\n            <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"CUS_je02lbimlqixzax\"</span><span class=\"p\">,</span>\n            <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">42000</span><span class=\"p\">,</span>\n            <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">\"custom_fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"value\"</span><span class=\"p\">:</span><span class=\"s2\">\"makurdi\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Donation for\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"variable_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"donation_for\"</span>\n                    <span class=\"p\">},</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">bank</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">\"code\"</span><span class=\"p\">:</span><span class=\"s2\">\"057\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"account_number\"</span><span class=\"p\">:</span><span class=\"s2\">\"0000000000\"</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">birthday</span><span class=\"o\">=</span><span class=\"s2\">\"1995-12-23\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>email</code>: Customer's email address</li>\n<li><code>amount</code>: Amount in kobo</li>\n<li><code>**kwargs</code></li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Charge.submit_pin(**kwargs)</code> - Submit PIN to continue a charge.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.charge</span> <span class=\"kn\">import</span> <span class=\"n\">Charge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Charge</span><span class=\"o\">.</span><span class=\"n\">submit_pin</span><span class=\"p\">(</span>\n            <span class=\"n\">pin</span><span class=\"o\">=</span><span class=\"s2\">\"0987\"</span><span class=\"p\">,</span>\n            <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s2\">\"5bwib5v6anhe9xa\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>pin</code>: PIN submitted by user</li>\n<li><code>reference</code>: reference for transaction that requested pin</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Charge.submit_otp(**kwargs)</code> - Submit OTP to complete a charge.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.charge</span> <span class=\"kn\">import</span> <span class=\"n\">Charge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Charge</span><span class=\"o\">.</span><span class=\"n\">submit_otp</span><span class=\"p\">(</span>\n            <span class=\"n\">otp</span><span class=\"o\">=</span><span class=\"s2\">\"0987\"</span><span class=\"p\">,</span>\n            <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s2\">\"5bwib5v6anhe9xa\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>otp</code>: OTP submitted by user</li>\n<li><code>reference</code>: reference for ongoing transaction</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Charge.submit_phone(**kwargs)</code> - Submit Phone when requested.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.charge</span> <span class=\"kn\">import</span> <span class=\"n\">Charge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Charge</span><span class=\"o\">.</span><span class=\"n\">submit_phone</span><span class=\"p\">(</span>\n            <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s2\">\"0XX4XX9X0XF\"</span><span class=\"p\">,</span>\n            <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s2\">\"5bwib5v6anhe9xa\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>phone</code>: Phone submitted by user</li>\n<li><code>reference</code> : reference for ongoing transaction\n<em>Returns</em></li>\n</ul>\n<p>JSON data from Paystack API.</p>\n<h4><code>Charge.submit_birthday(**kwargs)</code> - Submit Birthday when requested.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.charge</span> <span class=\"kn\">import</span> <span class=\"n\">Charge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Charge</span><span class=\"o\">.</span><span class=\"n\">submit_birthday</span><span class=\"p\">(</span>\n            <span class=\"n\">birthday</span><span class=\"o\">=</span><span class=\"s2\">\"1975-12-23\"</span><span class=\"p\">,</span>\n            <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s2\">\"5bwib5v6anhe9xa\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>birthday</code>: Birthday submitted by user</li>\n<li><code>reference</code>: reference for ongoing transaction</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>Charge.check_pending(reference)</code> - Check pending charge</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.charge</span> <span class=\"kn\">import</span> <span class=\"n\">Charge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Charge</span><span class=\"o\">.</span><span class=\"n\">check_pending</span><span class=\"p\">(</span>\n            <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s2\">\"5bwib5v6anhe9xa\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>reference</code>: The reference to check</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>TransferControl</h2>\n<h4><code>TransferControl.check_balance(**kwargs)</code> - Check Balance.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.tcontrol</span> <span class=\"kn\">import</span> <span class=\"n\">TransferControl</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferControl</span><span class=\"o\">.</span><span class=\"n\">check_balance</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No argument required.</p>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>TransferControl.resend_otp(**kwargs)</code> - Resend OTP for Transfer.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.tcontrol</span> <span class=\"kn\">import</span> <span class=\"n\">TransferControl</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferControl</span><span class=\"o\">.</span><span class=\"n\">resend_otp</span><span class=\"p\">(</span>\n            <span class=\"n\">transfer_code</span><span class=\"o\">=</span><span class=\"s2\">\"TRF_vsyqdmlzble3uii\"</span><span class=\"p\">,</span>\n            <span class=\"n\">reason</span><span class=\"o\">=</span><span class=\"s2\">\"Just do it.\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>transfer_code</code>: Transfer code</li>\n<li><code>reason</code>: either resend_otp or transfer</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>TransferControl.disable_otp_finalize(**kwargs)</code> - Finalize Disabling of OTP requirement for Transfers</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.tcontrol</span> <span class=\"kn\">import</span> <span class=\"n\">TransferControl</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferControl</span><span class=\"o\">.</span><span class=\"n\">disable_otp_finalize</span><span class=\"p\">(</span>\n            <span class=\"n\">otp</span><span class=\"o\">=</span><span class=\"s2\">\"928783\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>otp</code>: OTP sent to business phone to verify disabling OTP requirement</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>TransferControl.disable_otp()</code> - Disable OTP requirement for Transfers</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.tcontrol</span> <span class=\"kn\">import</span> <span class=\"n\">TransferControl</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferControl</span><span class=\"o\">.</span><span class=\"n\">disable_otp</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No arguments required</p>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>TransferControl.enable_otp(**kwargs)</code> - Enable OTP requirement for Transfers</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.tcontrol</span> <span class=\"kn\">import</span> <span class=\"n\">TransferControl</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">TransferControl</span><span class=\"o\">.</span><span class=\"n\">enable_otp</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<p>No arguments required</p>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>BulkCharge</h2>\n<h4><code>BulkCharge.initiate_bulk_charge(bulkcharge)</code> - Initiate Bulk Charge.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.bulkcharge</span> <span class=\"kn\">import</span> <span class=\"n\">BulkCharge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">BulkCharge</span><span class=\"o\">.</span><span class=\"n\">initiate_bulk_charge</span><span class=\"p\">(</span>\n            <span class=\"n\">bulkcharge</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"authorization\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AUTH_n95vpedf\"</span><span class=\"p\">,</span> <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"mi\">2500</span><span class=\"p\">},</span> \n                <span class=\"p\">{</span><span class=\"s2\">\"authorization\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AUTH_ljdt4e4j\"</span><span class=\"p\">,</span> <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"mi\">1500</span><span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>authorization</code>: Authorization token</li>\n<li><code>amount</code>: Amount in kobo</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>BulkCharge.list(**kwargs)</code> - List Bulk Charge Batches created by the integration.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.bulkcharge</span> <span class=\"kn\">import</span> <span class=\"n\">BulkCharge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">BulkCharge</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>perPage</code>: Number of transfer listed per page for pagination</li>\n<li><code>page</code>: number of pages listed by pagination.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>BulkCharge.fetch_bulk_batch(id_or_code)</code> - This endpoint retrieves a specific batch code.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.bulkcharge</span> <span class=\"kn\">import</span> <span class=\"n\">BulkCharge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">BulkCharge</span><span class=\"o\">.</span><span class=\"n\">fetch_bulk_batch</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"BCH_orj0ttn8vtp80hx\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: An ID or code for the transfer whose details you want to retrieve.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>BulkCharge.fetch_charges_batch(id_or_code, **kwargs)</code> - Fetch the charges associated with a specified batch code.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.bulkcharge</span> <span class=\"kn\">import</span> <span class=\"n\">BulkCharge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">BulkCharge</span><span class=\"o\">.</span><span class=\"n\">fetch_charges_batch</span><span class=\"p\">(</span>\n            <span class=\"n\">id_or_code</span><span class=\"o\">=</span><span class=\"s2\">\"BCH_orj0ttn8vtp80hx\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>id_or_code</code>: An ID or code for the batch whose charges you want to retrieve.</li>\n<li><code>status</code>: pending, success or failed</li>\n<li><code>perPage</code>: Number of transfers listed per page for pagination</li>\n<li><code>page</code>: number of pages listed by pagination.</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>BulkCharge.pause_bulk_batch(batch_code)</code> - Pause the proccessing of an ongoing bulk charge batch.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.bulkcharge</span> <span class=\"kn\">import</span> <span class=\"n\">BulkCharge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">BulkCharge</span><span class=\"o\">.</span><span class=\"n\">pause_bulk_batch</span><span class=\"p\">(</span>\n            <span class=\"n\">batch_code</span><span class=\"o\">=</span><span class=\"s2\">\"BCH_orj0ttn8vtp80hx\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>batch_code</code>: code of the batch to be paused</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h4><code>BulkCharge.resume_bulk_charge(batch_code)</code> - Resume the proccessing of an already paused bulk charge batch.</h4>\n<p><em>Usage</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paystackapi.bulkcharge</span> <span class=\"kn\">import</span> <span class=\"n\">BulkCharge</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">BulkCharge</span><span class=\"o\">.</span><span class=\"n\">resume_bulk_charge</span><span class=\"p\">(</span>\n            <span class=\"n\">batch_code</span><span class=\"o\">=</span><span class=\"s2\">\"BCH_orj0ttn8vtp80hx\"</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><em>Arguments</em></p>\n<ul>\n<li><code>batch_code</code>: code of the batch to be resumed</li>\n</ul>\n<p><em>Returns</em></p>\n<p>JSON data from Paystack API.</p>\n<h2>Miscellaneous</h2>\n<p><code>Misc.list_banks()</code> - List Banks</p>\n<pre>   <span class=\"kn\">from</span> <span class=\"nn\">paystackapi.misc</span> <span class=\"kn\">import</span> <span class=\"n\">Misc</span>\n   <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Misc</span><span class=\"o\">.</span><span class=\"n\">list_banks</span><span class=\"p\">()</span>\n</pre>\n<p><em>Returns</em></p>\n<p>JSON data from paystack API.</p>\n\n          </div>"}, "last_serial": 5931815, "releases": {"1.2.1": [{"comment_text": "", "digests": {"md5": "58ebc239d731bd3e0ba7f7d241730be6", "sha256": "159f74eb68897615703cf95f59200e68167f5455a54f026ecf22568938978b1e"}, "downloads": -1, "filename": "paystackapi-1.2.1.tar.gz", "has_sig": false, "md5_digest": "58ebc239d731bd3e0ba7f7d241730be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5732, "upload_time": "2016-03-11T12:21:09", "upload_time_iso_8601": "2016-03-11T12:21:09.666806Z", "url": "https://files.pythonhosted.org/packages/f2/85/8a2ca8d6d5a45dfc21c991a8f393d800588b8bbdec0be00c51b77babcc3b/paystackapi-1.2.1.tar.gz", "yanked": false}], "1.2.2": [], "1.2.3": [{"comment_text": "", "digests": {"md5": "8603e9727256378597435dec09bfed53", "sha256": "e3b4a829f4451742ae96e3c1f80adeaa987bf58a85fab50d0f5159e91966fb1a"}, "downloads": -1, "filename": "paystackapi-1.2.3.tar.gz", "has_sig": false, "md5_digest": "8603e9727256378597435dec09bfed53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7511, "upload_time": "2016-04-03T19:16:56", "upload_time_iso_8601": "2016-04-03T19:16:56.440507Z", "url": "https://files.pythonhosted.org/packages/08/02/0a2a955b0f870d9eb6805adb81a743c60da96e029942c50d7446208f8b33/paystackapi-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "46f6445fd5340b3780a8c9946c55adb0", "sha256": "d0fd1e300d08ea36d598cbdd0a65826a5ad0bddb35f3290fe9b565db7ee46856"}, "downloads": -1, "filename": "paystackapi-1.2.4.tar.gz", "has_sig": false, "md5_digest": "46f6445fd5340b3780a8c9946c55adb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7523, "upload_time": "2016-04-09T07:34:55", "upload_time_iso_8601": "2016-04-09T07:34:55.035033Z", "url": "https://files.pythonhosted.org/packages/e1/d3/5e8313684032df339d4d0629544035141391d5d22818f53bdd8c0afa773e/paystackapi-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "d88885184814d5f666464e063615a0c4", "sha256": "1307b5875caa588db731310b21f0e2b58dd366fdbb0c51d26c876c676913023a"}, "downloads": -1, "filename": "paystackapi-1.2.5.tar.gz", "has_sig": false, "md5_digest": "d88885184814d5f666464e063615a0c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7118, "upload_time": "2017-04-25T19:50:59", "upload_time_iso_8601": "2017-04-25T19:50:59.629444Z", "url": "https://files.pythonhosted.org/packages/62/61/42ad1c5b069cc634beab3243be19a62fd431e4ffa5bb4297245c1daef60f/paystackapi-1.2.5.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "9d316427d955ea73a081ec4a5a0e52be", "sha256": "fe0633f2d653ab29cc26899d91b271b2e19c2c0e1d1ea65cc215cee0ea038e2f"}, "downloads": -1, "filename": "paystackapi-1.2.6.tar.gz", "has_sig": false, "md5_digest": "9d316427d955ea73a081ec4a5a0e52be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7117, "upload_time": "2017-04-28T10:32:52", "upload_time_iso_8601": "2017-04-28T10:32:52.269444Z", "url": "https://files.pythonhosted.org/packages/1b/3d/d75f73d1f4d7b7fb6cbfe225b7eab7041ac283a408cead79975a8a192d59/paystackapi-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "c462b6fa4e22e7a64ce189f1046d7656", "sha256": "2ded92c450e695f0589708068209ba67db43bdee0b37e248296dcb385fb388be"}, "downloads": -1, "filename": "paystackapi-1.2.7.tar.gz", "has_sig": false, "md5_digest": "c462b6fa4e22e7a64ce189f1046d7656", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8086, "upload_time": "2018-08-21T23:53:23", "upload_time_iso_8601": "2018-08-21T23:53:23.234291Z", "url": "https://files.pythonhosted.org/packages/95/1f/c6740588787916148574e55c78aa670315553548657e1ea3c6f92343ee84/paystackapi-1.2.7.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "d3671c2aec66ac3dd68752f9416870ed", "sha256": "1570c2990c618f68925d727823ba224f2059d6bc923e0a33bf92b53292cee6aa"}, "downloads": -1, "filename": "paystackapi-1.9.0.tar.gz", "has_sig": false, "md5_digest": "d3671c2aec66ac3dd68752f9416870ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33390, "upload_time": "2019-10-05T11:52:53", "upload_time_iso_8601": "2019-10-05T11:52:53.025583Z", "url": "https://files.pythonhosted.org/packages/59/42/3b8073889dc0ec049166684d820f263ea94bebe42c0f605f2b6ab2c10317/paystackapi-1.9.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "b5a26e54b0f815c72b4e2f6b23a2e81b", "sha256": "6d7483d54c8c6ae1e4e6028593f15801cc5b9df1bfcbfbf31b3dc2ac776d0e73"}, "downloads": -1, "filename": "paystackapi-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b5a26e54b0f815c72b4e2f6b23a2e81b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33392, "upload_time": "2019-10-05T12:00:08", "upload_time_iso_8601": "2019-10-05T12:00:08.705225Z", "url": "https://files.pythonhosted.org/packages/f1/08/3a5ff59274aa3ac17bf872aa98c1d9795efa3cafb6335ec691639f20f723/paystackapi-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5a26e54b0f815c72b4e2f6b23a2e81b", "sha256": "6d7483d54c8c6ae1e4e6028593f15801cc5b9df1bfcbfbf31b3dc2ac776d0e73"}, "downloads": -1, "filename": "paystackapi-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b5a26e54b0f815c72b4e2f6b23a2e81b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33392, "upload_time": "2019-10-05T12:00:08", "upload_time_iso_8601": "2019-10-05T12:00:08.705225Z", "url": "https://files.pythonhosted.org/packages/f1/08/3a5ff59274aa3ac17bf872aa98c1d9795efa3cafb6335ec691639f20f723/paystackapi-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:39 2020"}