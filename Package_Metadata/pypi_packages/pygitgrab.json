{"info": {"author": "k.r. goger", "author_email": "k.r.goger+pygitgrab@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "\n# pygitgrab \n\ngrab only certain information from remote git repo and store them local\n\n# general information\n\n`pygitgrab` is not intended to be a replacement for git and it's capabilities.\n`pygitgrab` will not do housekeeping, meaning maintaing the local directory content like syncing or such a like.\nin case remote files or folders are dropped it is required to clean local folders manually.\n\n# installation\n\nthe module is on [pypi](https://pypi.org/kr-g/pygitgrab) and can be installed with pip\n\n# run from cmd line\n\n    python3 -m pygitgrab -h\n\n    python3 -m pygitgrab -u user_name # user_name is optional, will prompt for password\n\ngithub offers downloading for unauthenticed users only within certain rate limits [https://developer.github.com/v3/rate_limit/](https://developer.github.com/v3/rate_limit/).\nin case downloading a bunch of serveral project files it is required to authenticate. (see also deprecation note of GitHub at the end of this document)\n\n\n# pygg.cfg structure\n\n`pygitgrab` loads a `pygg.cfg` config file from the current directory to perform the required steps.\nthe structure is as following:\n\n    [repo_alias]\n    # url to repo\n    url=https://github.com/_owner_name_/_repo_name_\n    # optional version to check out, defaults to 'master'\n    tag=master\n    # optional destination folder given, defaults to 'repo_alias' (name of this section in the config file)\n    # pull_alias is just a name for the pull task\n    pull_alias=\"*.py\", \"new_folder\"\n    # sample for pulling a license and store them at a different place\n    license=\"LICENSE.md\", \"LICENSE/a_license.MD\"\n\n\n`pygitgrab` will create the directory structure as found in the remote git repo when pattern matching is used.\n\n`pygitgrab` uses python [configparser](https://docs.python.org/3/library/configparser.html).\ngeneral information regarding the syntax can be found there.\n\n# other pygg files\n\nwhen calling with parameter `-f cfgfile` the configuration is read from there instead of `pygg.cfg` config file.\nif a file extension is missing an extension `.pygg` is added as default.\n\n\n# cmd line parameter\n\n    usage: python3 -m pygitgrab [options]\n\n    grab files from remote git repo.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         show version info and exit\n      -L, --license         show license info and exit\n      -s, --simulate        dry run, do not download files\n      -f FILE, --file FILE  name of pygg file to read, adds as '.pygg' extension\n                            if missing\n      -u [USER], --user [USER]\n                            authenticate with user, no user for prompt. create a\n                            personal access token in your github settings instead\n                            of using a password. unauthenticated users have a\n                            lower rate for downloading from github.\n                            https://developer.github.com/v3/rate_limit/\n      -c [CREDITS], --credits [CREDITS]\n                            read user and personal token from a file instead of\n                            prompting. make sure to put the file not in git\n                            controlled directory, (default: '~/pygg.credits.txt')\n\n    for more information refer to https://github.com/kr-g/pygitgrab\n\n\n# 3rd party licenses\n\nwhen you move 3rd party license information into the special folder 'LICENSE' the cmd `python3 -m pygitgrab -L` will produce a summary of all found licences together with a 'LICENSE' file found in the current directory. use as `python3 -m pygitgrab -L > LICENSES` to produce a summary plain text file.\n\n\n# limitations\n\nworks only with github as backend.\n\n\n# deprecation of user and password authentication \n\ngithub recently [announced](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api/) to discontinue user/password authentication soon.\n\nuse a [personal access token](https://developer.github.com/v3/auth/#basic-authentication) instead of a password.\n\ncreate your personal access token under [GitHub developer settings](https://github.com/settings/tokens) as described in the help for [creating a personal access token](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line)\n\nthe minimum required scope(s) of the token is `public_repo`\n\n\n# using a credits file instead of manual authentication\n\nwith the option `-c` or `--credits` pygitgrab reads the github user credits from a file.\n\nthis defaults to `~/pygg.credits.txt` in the home directory if not specified.\ndont put it under a git controlled directory to prevent exposing your sensitive data.\n\nthe file itself should have 2 lines the following structure:\n\n    user-name\n    user-token\n\nit can have blank lines at any place.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kr-g/pygitgrab", "keywords": "python utility shell,git", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pygitgrab", "package_url": "https://pypi.org/project/pygitgrab/", "platform": "", "project_url": "https://pypi.org/project/pygitgrab/", "project_urls": {"Homepage": "https://github.com/kr-g/pygitgrab"}, "release_url": "https://pypi.org/project/pygitgrab/0.0.16/", "requires_dist": ["requests"], "requires_python": ">=3.6", "summary": "grab only certain information from remote git repo and store them local", "version": "0.0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pygitgrab</h1>\n<p>grab only certain information from remote git repo and store them local</p>\n<h1>general information</h1>\n<p><code>pygitgrab</code> is not intended to be a replacement for git and it's capabilities.\n<code>pygitgrab</code> will not do housekeeping, meaning maintaing the local directory content like syncing or such a like.\nin case remote files or folders are dropped it is required to clean local folders manually.</p>\n<h1>installation</h1>\n<p>the module is on <a href=\"https://pypi.org/kr-g/pygitgrab\" rel=\"nofollow\">pypi</a> and can be installed with pip</p>\n<h1>run from cmd line</h1>\n<pre><code>python3 -m pygitgrab -h\n\npython3 -m pygitgrab -u user_name # user_name is optional, will prompt for password\n</code></pre>\n<p>github offers downloading for unauthenticed users only within certain rate limits <a href=\"https://developer.github.com/v3/rate_limit/\" rel=\"nofollow\">https://developer.github.com/v3/rate_limit/</a>.\nin case downloading a bunch of serveral project files it is required to authenticate. (see also deprecation note of GitHub at the end of this document)</p>\n<h1>pygg.cfg structure</h1>\n<p><code>pygitgrab</code> loads a <code>pygg.cfg</code> config file from the current directory to perform the required steps.\nthe structure is as following:</p>\n<pre><code>[repo_alias]\n# url to repo\nurl=https://github.com/_owner_name_/_repo_name_\n# optional version to check out, defaults to 'master'\ntag=master\n# optional destination folder given, defaults to 'repo_alias' (name of this section in the config file)\n# pull_alias is just a name for the pull task\npull_alias=\"*.py\", \"new_folder\"\n# sample for pulling a license and store them at a different place\nlicense=\"LICENSE.md\", \"LICENSE/a_license.MD\"\n</code></pre>\n<p><code>pygitgrab</code> will create the directory structure as found in the remote git repo when pattern matching is used.</p>\n<p><code>pygitgrab</code> uses python <a href=\"https://docs.python.org/3/library/configparser.html\" rel=\"nofollow\">configparser</a>.\ngeneral information regarding the syntax can be found there.</p>\n<h1>other pygg files</h1>\n<p>when calling with parameter <code>-f cfgfile</code> the configuration is read from there instead of <code>pygg.cfg</code> config file.\nif a file extension is missing an extension <code>.pygg</code> is added as default.</p>\n<h1>cmd line parameter</h1>\n<pre><code>usage: python3 -m pygitgrab [options]\n\ngrab files from remote git repo.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show version info and exit\n  -L, --license         show license info and exit\n  -s, --simulate        dry run, do not download files\n  -f FILE, --file FILE  name of pygg file to read, adds as '.pygg' extension\n                        if missing\n  -u [USER], --user [USER]\n                        authenticate with user, no user for prompt. create a\n                        personal access token in your github settings instead\n                        of using a password. unauthenticated users have a\n                        lower rate for downloading from github.\n                        https://developer.github.com/v3/rate_limit/\n  -c [CREDITS], --credits [CREDITS]\n                        read user and personal token from a file instead of\n                        prompting. make sure to put the file not in git\n                        controlled directory, (default: '~/pygg.credits.txt')\n\nfor more information refer to https://github.com/kr-g/pygitgrab\n</code></pre>\n<h1>3rd party licenses</h1>\n<p>when you move 3rd party license information into the special folder 'LICENSE' the cmd <code>python3 -m pygitgrab -L</code> will produce a summary of all found licences together with a 'LICENSE' file found in the current directory. use as <code>python3 -m pygitgrab -L &gt; LICENSES</code> to produce a summary plain text file.</p>\n<h1>limitations</h1>\n<p>works only with github as backend.</p>\n<h1>deprecation of user and password authentication</h1>\n<p>github recently <a href=\"https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api/\" rel=\"nofollow\">announced</a> to discontinue user/password authentication soon.</p>\n<p>use a <a href=\"https://developer.github.com/v3/auth/#basic-authentication\" rel=\"nofollow\">personal access token</a> instead of a password.</p>\n<p>create your personal access token under <a href=\"https://github.com/settings/tokens\" rel=\"nofollow\">GitHub developer settings</a> as described in the help for <a href=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line\" rel=\"nofollow\">creating a personal access token</a></p>\n<p>the minimum required scope(s) of the token is <code>public_repo</code></p>\n<h1>using a credits file instead of manual authentication</h1>\n<p>with the option <code>-c</code> or <code>--credits</code> pygitgrab reads the github user credits from a file.</p>\n<p>this defaults to <code>~/pygg.credits.txt</code> in the home directory if not specified.\ndont put it under a git controlled directory to prevent exposing your sensitive data.</p>\n<p>the file itself should have 2 lines the following structure:</p>\n<pre><code>user-name\nuser-token\n</code></pre>\n<p>it can have blank lines at any place.</p>\n\n          </div>"}, "last_serial": 6918839, "releases": {"0.0.11": [{"comment_text": "", "digests": {"md5": "a29b2dc06712fc81b2350c8e5d8b962e", "sha256": "b04aa92d368af47950cc9da3a64415f552db1c5336028ab86154daf1fb404281"}, "downloads": -1, "filename": "pygitgrab-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "a29b2dc06712fc81b2350c8e5d8b962e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7942, "upload_time": "2019-12-27T09:58:53", "upload_time_iso_8601": "2019-12-27T09:58:53.379220Z", "url": "https://files.pythonhosted.org/packages/cb/92/33fcd07afe0e08a481a56a3ecd3c3a82d22e8a688aa6c7b4218222c169fa/pygitgrab-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26a8a09b357c546ca74d32707489bfd0", "sha256": "3d905115a73f599e9c94854c7d50fb997c8a798348a39a709a40660dbb695664"}, "downloads": -1, "filename": "pygitgrab-0.0.11.tar.gz", "has_sig": false, "md5_digest": "26a8a09b357c546ca74d32707489bfd0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5852, "upload_time": "2019-12-27T09:58:54", "upload_time_iso_8601": "2019-12-27T09:58:54.979924Z", "url": "https://files.pythonhosted.org/packages/56/a4/090c56e226712a6ba191aef190ac40b2fb132c4918a479461fe21c6cfddd/pygitgrab-0.0.11.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "a30da69b3efbf32dbb86f51d6b1e957b", "sha256": "f2aeffd111344bf06bc11234cfae72cbbd0e6a41fc755970c87d325128e78443"}, "downloads": -1, "filename": "pygitgrab-0.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "a30da69b3efbf32dbb86f51d6b1e957b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8665, "upload_time": "2020-03-15T07:58:44", "upload_time_iso_8601": "2020-03-15T07:58:44.439383Z", "url": "https://files.pythonhosted.org/packages/e1/d2/05a0c21975221fd6f9b92790b1ce4c5d969f5215e44cf13a2bbfbf94b5dd/pygitgrab-0.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19d1288c2ed9eb1f94e4bb0cc037a504", "sha256": "1033549220260a6541d7bcc327de9e08613325dacf57728f0b163b253d578db5"}, "downloads": -1, "filename": "pygitgrab-0.0.15.tar.gz", "has_sig": false, "md5_digest": "19d1288c2ed9eb1f94e4bb0cc037a504", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6604, "upload_time": "2020-03-15T07:58:45", "upload_time_iso_8601": "2020-03-15T07:58:45.841854Z", "url": "https://files.pythonhosted.org/packages/70/bf/d38f1c255fbed49cbf41488672e377ff062434e30b1f4cd0d8ab3f9a042d/pygitgrab-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "3072b9b26cc933e10f69cd3fbcd0a4e5", "sha256": "1c27e3306cf645335800b66759d9ace0e7d9379673e4408a7e37c960a257571f"}, "downloads": -1, "filename": "pygitgrab-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "3072b9b26cc933e10f69cd3fbcd0a4e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8935, "upload_time": "2020-03-31T09:21:11", "upload_time_iso_8601": "2020-03-31T09:21:11.274164Z", "url": "https://files.pythonhosted.org/packages/1c/04/a82ea389ddf97c098f8c9e52a69b5b1c5979a105b20e81eeae83b639436e/pygitgrab-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be739f6183a7e1261a86d33bbc1bae48", "sha256": "e7315cc0c76ad90f5ef1d6c1ab9b193ce3d4cc9c3d6412337b780b2471f18e31"}, "downloads": -1, "filename": "pygitgrab-0.0.16.tar.gz", "has_sig": false, "md5_digest": "be739f6183a7e1261a86d33bbc1bae48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7079, "upload_time": "2020-03-31T09:21:12", "upload_time_iso_8601": "2020-03-31T09:21:12.766363Z", "url": "https://files.pythonhosted.org/packages/93/4d/c3a5ec152fbdb5a29f001db81c87ab96715d28cb34039cad99a4836df0be/pygitgrab-0.0.16.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "cd5d0e2c0b5692670b03d37cf996757b", "sha256": "4ff2e9935b3e4710c313dab727536cded1d669b7cf0045f615759731594a3fc9"}, "downloads": -1, "filename": "pygitgrab-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "cd5d0e2c0b5692670b03d37cf996757b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7403, "upload_time": "2019-12-04T10:37:26", "upload_time_iso_8601": "2019-12-04T10:37:26.222315Z", "url": "https://files.pythonhosted.org/packages/e2/19/6b92064db0a0d72d541db6b5c9388569b4087f03ab8c089f856298b85f55/pygitgrab-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05fdd9145e8d2fc0ac875ddefdc5eabb", "sha256": "969cdcf937076f335cb2b3d530cbe8a13f94e9b2c2271049f27ff43ac167ba92"}, "downloads": -1, "filename": "pygitgrab-0.0.6.tar.gz", "has_sig": false, "md5_digest": "05fdd9145e8d2fc0ac875ddefdc5eabb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5290, "upload_time": "2019-12-04T10:37:28", "upload_time_iso_8601": "2019-12-04T10:37:28.274318Z", "url": "https://files.pythonhosted.org/packages/12/92/73cbaa32ff1ee865d1a95332988526d3f2426f17a5379ffc289b45d2983e/pygitgrab-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "5385a4b87ea1e637b476b6f6b37802ea", "sha256": "a2fe01f9d52cd97c1b53965917fb8d68ac1d4826a9a15f5048c7b3a4a8a68661"}, "downloads": -1, "filename": "pygitgrab-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5385a4b87ea1e637b476b6f6b37802ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7531, "upload_time": "2019-12-04T11:04:32", "upload_time_iso_8601": "2019-12-04T11:04:32.461953Z", "url": "https://files.pythonhosted.org/packages/e0/84/28a65669978e704de4e7bf0d4b4cc371352a083b0a5ff4e4d25178786964/pygitgrab-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a83a215a84e6315189e91a765fbbc8a", "sha256": "6eec2dc4bd816ee71c53ca6b260ba14c506fc51fc49a98a17b025e9e6c1e75ff"}, "downloads": -1, "filename": "pygitgrab-0.0.7.tar.gz", "has_sig": false, "md5_digest": "0a83a215a84e6315189e91a765fbbc8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5450, "upload_time": "2019-12-04T11:04:34", "upload_time_iso_8601": "2019-12-04T11:04:34.351277Z", "url": "https://files.pythonhosted.org/packages/2c/5e/8df5d04399fd14f0e26359e45279210a4f017696d17832b2bc70e0ffba3f/pygitgrab-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3072b9b26cc933e10f69cd3fbcd0a4e5", "sha256": "1c27e3306cf645335800b66759d9ace0e7d9379673e4408a7e37c960a257571f"}, "downloads": -1, "filename": "pygitgrab-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "3072b9b26cc933e10f69cd3fbcd0a4e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8935, "upload_time": "2020-03-31T09:21:11", "upload_time_iso_8601": "2020-03-31T09:21:11.274164Z", "url": "https://files.pythonhosted.org/packages/1c/04/a82ea389ddf97c098f8c9e52a69b5b1c5979a105b20e81eeae83b639436e/pygitgrab-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be739f6183a7e1261a86d33bbc1bae48", "sha256": "e7315cc0c76ad90f5ef1d6c1ab9b193ce3d4cc9c3d6412337b780b2471f18e31"}, "downloads": -1, "filename": "pygitgrab-0.0.16.tar.gz", "has_sig": false, "md5_digest": "be739f6183a7e1261a86d33bbc1bae48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7079, "upload_time": "2020-03-31T09:21:12", "upload_time_iso_8601": "2020-03-31T09:21:12.766363Z", "url": "https://files.pythonhosted.org/packages/93/4d/c3a5ec152fbdb5a29f001db81c87ab96715d28cb34039cad99a4836df0be/pygitgrab-0.0.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:00 2020"}