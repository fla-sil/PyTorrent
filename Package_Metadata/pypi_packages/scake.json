{"info": {"author": "kyzas", "author_email": "kyznano@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# scake\nA flexible framework for Python\n\n<table>\n    <tr>\n        <td>License</td>\n        <td><img src='https://img.shields.io/pypi/l/scake.svg'></td>\n        <td>Travis CI</td>\n        <td>Master: <img src='https://api.travis-ci.org/kyzas/scake.svg?branch=master'><br/>\n        Dev: <img src='https://api.travis-ci.org/kyzas/scake.svg?branch=dev'></td>\n    </tr>\n    <tr>\n        <td>Version</td>\n        <td><img src='https://img.shields.io/pypi/v/scake.svg'></td>  \n        <td>Coverage</td>\n        <td>Master: <img src='https://codecov.io/gh/kyzas/scake/branch/master/graph/badge.svg'><br/>\n        Dev: <img src='https://codecov.io/gh/kyzas/scake/branch/dev/graph/badge.svg'></td>\n    </tr>\n    <tr>\n        <td>Wheel</td>\n        <td><img src='https://img.shields.io/pypi/wheel/scake.svg'></td>\n        <td>Implementation</td>\n        <td><img src='https://img.shields.io/pypi/implementation/scake.svg'></td>\n    </tr>\n    <tr>\n        <td>Status</td>\n        <td><img src='https://img.shields.io/pypi/status/scake.svg'></td>\n        <td>Downloads</td>\n        <td><img src='https://img.shields.io/pypi/dm/scake.svg'></td>\n    </tr>\n    <tr>\n        <td>Supported versions</td>\n        <td><img src='https://img.shields.io/pypi/pyversions/scake.svg'></td>\n    </tr>\n</table>\n\n# USAGE\n\n## Hello World with Scake\n\nFirst, let's define the settings in YAML format.\n\n**settings.yaml**\n\n``` yaml\nmy_settings:\n    hello_message: \"Hello World!\"\n\nprinter:\n    $MyPrinter:\n        message: =/my_settings/hello_message\n    result(): __call__\n```\n\nIn the above settings, we define the \"hello_message\" component holding our message: \"Hello World!\". The reference to it is \"=/my_settings/hello_message\" (very similar to file path system), first character \"=\" is annotation for component reference.\n\nAt the \"printer\" component, we initialize an instance of class \"MyPrinter\" (annotated by $MyPrinter) and pass the message content to its constructor. After initializing instance successfully, Scake will execute the \"__call__\" function and assign the result to component at \"/printer/result()\". Open and close parenthesis annotates a method component in Scake.\n\n**hello.py**\n\n``` python\n# -*- coding: utf-8 -*-\nimport sys\nimport yaml\nfrom scake import Scake\n\nclass MyPrinter:\n    def __init__(self, message):\n        self.message = message\n\n    def __call__(self):\n        print(self.message)\n\ndef main(yaml_path):\n    with open(yaml_path) as f:\n        config = yaml.safe_load(f)\n    s = Scake(config, class_mapping=globals())\n    s.run()\n    pass\n\nif __name__ == \"__main__\":\n    main(yaml_path=\"settings.yaml\")\n```\n\nRun the following command for your first \"Hello World!\":\n\n``` bash\n$ python3 hello.py\nHello World!\n```\n\n# FEATURES TO-DO\n\n- [ ] Design logo for Scake.\n- [ ] Write documentation & tutorials for Scake.\n- [ ] Support \"requirements.txt\" in settings. Installing Python packages on-the-fly.\n- [ ] Support loop in settings.\n- [ ] Support flow reference (connect multiple settings files together).\n- [ ] Support integration tests (try as friendly as possible).\n- [ ] Support generating class templates (> scake /path/to/settings.yaml).\n- [ ] Import custom packages automatically by defining in the settings file.\n- [ ] Setting element inherit / override.\n\nFar future plan:\n\n- [ ] Packaging scake with Cython.\n- [ ] Packaging scake to a library or executable binary.\n- [ ] Scake server for listening file changes and update code flow status (ok or error) in real-time.\n- [ ] Scake component on the cloud. Be able to reference a scake component by URL @ specific version.\n- [ ] Interactive IDE for designing a settings fully compatible to Scake.\n\n# RELEASED FEATURES\n\n## v0.2.1\n\n* Object attribute reference in YAML settings\n* Fix bug: similar keys in settings\n\n## v0.2.0\n\n* Big refactoring in how we do initializing instances and executing code flow\n* Remove generating class templates based on YAML\n\n## v0.1.0\n\n* Automatically initialize Class instances from YAML description.\n* Code flow is built and executed properly by checking attribute dependencies.\n* Generate class templates based on YAML description.\n\n# CONTRIBUTING\n\n* Step 1. Fork on **dev** branch.\n* Step 2. Install **pre-commit** on the local dev environment.\n\n```\npip install pre-commit\npre-commit install\n```\n\n* Step 3. Write test case(s) for the new feature or the bug.\n* Step 4. Write code to pass the tests.\n* Step 5. Make sure that the new code passes all the pre-commmit conditions.\n\n```\npre-commit run -a\n```\n\n* Step 6. Create pull request.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/kyzas/scake/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kyzas/scake", "keywords": "", "license": "MIT", "maintainer": "kyzas", "maintainer_email": "kyznano@gmail.com", "name": "scake", "package_url": "https://pypi.org/project/scake/", "platform": "", "project_url": "https://pypi.org/project/scake/", "project_urls": {"Download": "https://github.com/kyzas/scake/tarball/master", "Homepage": "https://github.com/kyzas/scake"}, "release_url": "https://pypi.org/project/scake/0.2.1/", "requires_dist": ["PyYAML"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "summary": "A flexible framework for Python", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>scake</h1>\n<p>A flexible framework for Python</p>\n<table>\n    <tr>\n        <td>License</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/910e4a39ef86e4167fe83340731fddaf25ebd541/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7363616b652e737667\"></td>\n        <td>Travis CI</td>\n        <td>Master: <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/775e18f50bb2e6b8d5231d16656f932685b2412d/68747470733a2f2f6170692e7472617669732d63692e6f72672f6b797a61732f7363616b652e7376673f6272616e63683d6d6173746572\"><br>\n        Dev: <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c41e168b3ed3e21da25eedf7292a8c2ad7d7277/68747470733a2f2f6170692e7472617669732d63692e6f72672f6b797a61732f7363616b652e7376673f6272616e63683d646576\"></td>\n    </tr>\n    <tr>\n        <td>Version</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f07d6ef612b97237adf2e1ed44d2802f7c2851e9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7363616b652e737667\"></td>  \n        <td>Coverage</td>\n        <td>Master: <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af54995a8b5cdf1d78501022ed5df95cfe8e0c39/68747470733a2f2f636f6465636f762e696f2f67682f6b797a61732f7363616b652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"><br>\n        Dev: <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/651f5e657f642ba5d1f39348a5a19a0d70608382/68747470733a2f2f636f6465636f762e696f2f67682f6b797a61732f7363616b652f6272616e63682f6465762f67726170682f62616467652e737667\"></td>\n    </tr>\n    <tr>\n        <td>Wheel</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d99038f02f8f21f25f54b1ce164e7b070f161fcf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f7363616b652e737667\"></td>\n        <td>Implementation</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af801bf6619ac130a82e204e1909d9193ca7cba7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f7363616b652e737667\"></td>\n    </tr>\n    <tr>\n        <td>Status</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d92af0f76dda324e723f96f1cd87a076f845b1e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7363616b652e737667\"></td>\n        <td>Downloads</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6602bb9700416909a56a47fdee860474acc607e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7363616b652e737667\"></td>\n    </tr>\n    <tr>\n        <td>Supported versions</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c578094386e8a057b6b4d2e4cf41607ee769113/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7363616b652e737667\"></td>\n    </tr>\n</table>\n<h1>USAGE</h1>\n<h2>Hello World with Scake</h2>\n<p>First, let's define the settings in YAML format.</p>\n<p><strong>settings.yaml</strong></p>\n<pre><span class=\"nt\">my_settings</span><span class=\"p\">:</span>\n    <span class=\"nt\">hello_message</span><span class=\"p\">:</span> <span class=\"s\">\"Hello</span><span class=\"nv\"> </span><span class=\"s\">World!\"</span>\n\n<span class=\"nt\">printer</span><span class=\"p\">:</span>\n    <span class=\"nt\">$MyPrinter</span><span class=\"p\">:</span>\n        <span class=\"nt\">message</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">=/my_settings/hello_message</span>\n    <span class=\"nt\">result()</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">__call__</span>\n</pre>\n<p>In the above settings, we define the \"hello_message\" component holding our message: \"Hello World!\". The reference to it is \"=/my_settings/hello_message\" (very similar to file path system), first character \"=\" is annotation for component reference.</p>\n<p>At the \"printer\" component, we initialize an instance of class \"MyPrinter\" (annotated by $MyPrinter) and pass the message content to its constructor. After initializing instance successfully, Scake will execute the \"<strong>call</strong>\" function and assign the result to component at \"/printer/result()\". Open and close parenthesis annotates a method component in Scake.</p>\n<p><strong>hello.py</strong></p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scake</span> <span class=\"kn\">import</span> <span class=\"n\">Scake</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyPrinter</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">yaml_path</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">yaml_path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">safe_load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Scake</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">class_mapping</span><span class=\"o\">=</span><span class=\"nb\">globals</span><span class=\"p\">())</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">yaml_path</span><span class=\"o\">=</span><span class=\"s2\">\"settings.yaml\"</span><span class=\"p\">)</span>\n</pre>\n<p>Run the following command for your first \"Hello World!\":</p>\n<pre>$ python3 hello.py\nHello World!\n</pre>\n<h1>FEATURES TO-DO</h1>\n<ul>\n<li>[ ] Design logo for Scake.</li>\n<li>[ ] Write documentation &amp; tutorials for Scake.</li>\n<li>[ ] Support \"requirements.txt\" in settings. Installing Python packages on-the-fly.</li>\n<li>[ ] Support loop in settings.</li>\n<li>[ ] Support flow reference (connect multiple settings files together).</li>\n<li>[ ] Support integration tests (try as friendly as possible).</li>\n<li>[ ] Support generating class templates (&gt; scake /path/to/settings.yaml).</li>\n<li>[ ] Import custom packages automatically by defining in the settings file.</li>\n<li>[ ] Setting element inherit / override.</li>\n</ul>\n<p>Far future plan:</p>\n<ul>\n<li>[ ] Packaging scake with Cython.</li>\n<li>[ ] Packaging scake to a library or executable binary.</li>\n<li>[ ] Scake server for listening file changes and update code flow status (ok or error) in real-time.</li>\n<li>[ ] Scake component on the cloud. Be able to reference a scake component by URL @ specific version.</li>\n<li>[ ] Interactive IDE for designing a settings fully compatible to Scake.</li>\n</ul>\n<h1>RELEASED FEATURES</h1>\n<h2>v0.2.1</h2>\n<ul>\n<li>Object attribute reference in YAML settings</li>\n<li>Fix bug: similar keys in settings</li>\n</ul>\n<h2>v0.2.0</h2>\n<ul>\n<li>Big refactoring in how we do initializing instances and executing code flow</li>\n<li>Remove generating class templates based on YAML</li>\n</ul>\n<h2>v0.1.0</h2>\n<ul>\n<li>Automatically initialize Class instances from YAML description.</li>\n<li>Code flow is built and executed properly by checking attribute dependencies.</li>\n<li>Generate class templates based on YAML description.</li>\n</ul>\n<h1>CONTRIBUTING</h1>\n<ul>\n<li>Step 1. Fork on <strong>dev</strong> branch.</li>\n<li>Step 2. Install <strong>pre-commit</strong> on the local dev environment.</li>\n</ul>\n<pre><code>pip install pre-commit\npre-commit install\n</code></pre>\n<ul>\n<li>Step 3. Write test case(s) for the new feature or the bug.</li>\n<li>Step 4. Write code to pass the tests.</li>\n<li>Step 5. Make sure that the new code passes all the pre-commmit conditions.</li>\n</ul>\n<pre><code>pre-commit run -a\n</code></pre>\n<ul>\n<li>Step 6. Create pull request.</li>\n</ul>\n\n          </div>"}, "last_serial": 5767076, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7aa4038e82fd19fff9c10591b3b65cf6", "sha256": "3f689e8d07b18f78294271bf02d80de48f2abfef64edd1c081f6939e115bd87c"}, "downloads": -1, "filename": "scake-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7aa4038e82fd19fff9c10591b3b65cf6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 7519, "upload_time": "2019-06-02T20:21:54", "upload_time_iso_8601": "2019-06-02T20:21:54.565423Z", "url": "https://files.pythonhosted.org/packages/12/72/13db27a253ab679a0a6376a05d8b39d92e92311b6039f355d8b0a5f20c3e/scake-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "469a2c7d5d0a4212f48e55b6f9826025", "sha256": "0b7aa01234f13e0dcef4e2f0abe78c765eb60acc608a5a0449ce9993edde22a8"}, "downloads": -1, "filename": "scake-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "469a2c7d5d0a4212f48e55b6f9826025", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 12501, "upload_time": "2019-06-02T20:21:56", "upload_time_iso_8601": "2019-06-02T20:21:56.907978Z", "url": "https://files.pythonhosted.org/packages/0e/e0/56ca70dae7161f6d02e44233400645b2955ce6a063e14534da9c8055cd82/scake-0.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "96c2f0145660771fbc314cfe91012aa4", "sha256": "633b506f137a10b195f3787c276aa62ba2929bec7966749353913bc11a1b76d8"}, "downloads": -1, "filename": "scake-0.1.0.tar.gz", "has_sig": false, "md5_digest": "96c2f0145660771fbc314cfe91012aa4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 5610, "upload_time": "2019-06-02T20:21:58", "upload_time_iso_8601": "2019-06-02T20:21:58.531430Z", "url": "https://files.pythonhosted.org/packages/b1/2f/20c6518d42b8ebd852e90c9038e202905a989dd4255e60ff0e66c1df00c4/scake-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0523c907496be56dc32d099d8ad3bf8e", "sha256": "587c58c6ecab34416d67387f01a1b09cc4217c982dfa0cad2d81894dfc8e1622"}, "downloads": -1, "filename": "scake-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0523c907496be56dc32d099d8ad3bf8e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 8211, "upload_time": "2019-07-29T09:24:23", "upload_time_iso_8601": "2019-07-29T09:24:23.962004Z", "url": "https://files.pythonhosted.org/packages/1e/7c/fa734b42c1d8680e802f1c98ea78f41ea4f71cbaab78728402feaa2eece7/scake-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "005d309cd250435eeb21d724d7e35290", "sha256": "d7bbd95bfb2cecfafec979cb3f614ca0d91965ebb632aa056fda2fa392c680a2"}, "downloads": -1, "filename": "scake-0.2.0.tar.gz", "has_sig": false, "md5_digest": "005d309cd250435eeb21d724d7e35290", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 6597, "upload_time": "2019-07-29T09:24:25", "upload_time_iso_8601": "2019-07-29T09:24:25.958789Z", "url": "https://files.pythonhosted.org/packages/2a/62/d32683e2f127123de055e7e1944fa7ae2dda936b8d8cc4033dd99877f501/scake-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "1cb7810b86dd20b8dab21f3d38054b16", "sha256": "ec55e23283926a24919a715f844c97753d99569fd690f2cb8eb328b859e256db"}, "downloads": -1, "filename": "scake-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1cb7810b86dd20b8dab21f3d38054b16", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 8682, "upload_time": "2019-09-01T14:10:59", "upload_time_iso_8601": "2019-09-01T14:10:59.730644Z", "url": "https://files.pythonhosted.org/packages/38/c8/7e066529d416047f427c08980aeb9f835db6bddaa3f4b2c3038c6e112adb/scake-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0133886770d0760d1db546e8dac4bce", "sha256": "441848d3d17918aac66417886760657a26ac5450e081eb37ea2a994f7c79e334"}, "downloads": -1, "filename": "scake-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a0133886770d0760d1db546e8dac4bce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 7887, "upload_time": "2019-09-01T14:11:01", "upload_time_iso_8601": "2019-09-01T14:11:01.696973Z", "url": "https://files.pythonhosted.org/packages/52/52/4e0f4f493da66acf46ffac3d73f89eca1e7af11e1751a7e41b2b6958278b/scake-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cb7810b86dd20b8dab21f3d38054b16", "sha256": "ec55e23283926a24919a715f844c97753d99569fd690f2cb8eb328b859e256db"}, "downloads": -1, "filename": "scake-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1cb7810b86dd20b8dab21f3d38054b16", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 8682, "upload_time": "2019-09-01T14:10:59", "upload_time_iso_8601": "2019-09-01T14:10:59.730644Z", "url": "https://files.pythonhosted.org/packages/38/c8/7e066529d416047f427c08980aeb9f835db6bddaa3f4b2c3038c6e112adb/scake-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0133886770d0760d1db546e8dac4bce", "sha256": "441848d3d17918aac66417886760657a26ac5450e081eb37ea2a994f7c79e334"}, "downloads": -1, "filename": "scake-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a0133886770d0760d1db546e8dac4bce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,", "size": 7887, "upload_time": "2019-09-01T14:11:01", "upload_time_iso_8601": "2019-09-01T14:11:01.696973Z", "url": "https://files.pythonhosted.org/packages/52/52/4e0f4f493da66acf46ffac3d73f89eca1e7af11e1751a7e41b2b6958278b/scake-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:12 2020"}