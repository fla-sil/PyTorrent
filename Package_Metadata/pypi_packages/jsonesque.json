{"info": {"author": "dana geier", "author_email": "dana@dana.is", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Pre-processors", "Topic :: Text Processing :: Filters", "Topic :: Utilities"], "description": "jsonesque\n=========\n\nOverview\n--------\n\n``jsonesque`` is a module for processing JSON-like strings into valid, minified\nJSON. It enables a Python application to support an 'enhanced' form of JSON that\ncontains comments and trailing commas.\n\nFor example, given the following JSON-like input:\n\n::\n\n    {\n        # This is a Python-style comment\n        \"a\": 1,\n        // This is a C-style comment\n        \"b\": 2,\n        /*\n          This is a multi-line C-style comment\n        */\n        \"c\": [\n            1,\n            2,\n            3, // This is a trailing comment pointing out a trailing comma\n        ],\n    }\n\n``jsonesque`` would produce the following valid JSON:\n\n::\n\n    {\"a\":1,\"b\":2,\"c\":[1,2,3]}\n\nThis could then be passed into ``json.loads()`` or similar.\n\nUsage\n-----\n\nCurrently, ``jsonesque`` exposes just a single function called ``process()``. It\ntakes one argument \u2014 a JSON-like string\u00a0\u2014\u00a0and returns a new string with the\naforementioned enhanced features removed. The string is additionally stripped of\nextra white-space (minified).\n\nTo use ``jsonesque``, simply ``import jsonesque`` and call ``process()`` on your\nstring:\n\n::\n\n    import json, jsonesque\n\n    invalid_json = '[1, 2, /* comment */ 3,]'\n    valid_json   = jsonesque.process(invalid_json) # Yields string: '[1,2,3]'\n    decoded      = json.loads(valid_json)          # Yields list:   [1, 2, 3]\n\nMore information\n----------------\n\nFor the most complete and up-to-date documentation, please refer to the\n``jsonesque`` GitHub repository: https://github.com/okdana/jsonesque/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/okdana/jsonesque/", "keywords": "json,json-like,comments,minify", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "jsonesque", "package_url": "https://pypi.org/project/jsonesque/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jsonesque/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/okdana/jsonesque/"}, "release_url": "https://pypi.org/project/jsonesque/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Normalise and minify JSON-like strings into valid JSON", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p><tt>jsonesque</tt> is a module for processing JSON-like strings into valid, minified\nJSON. It enables a Python application to support an \u2018enhanced\u2019 form of JSON that\ncontains comments and trailing commas.</p>\n<p>For example, given the following JSON-like input:</p>\n<pre>{\n    # This is a Python-style comment\n    \"a\": 1,\n    // This is a C-style comment\n    \"b\": 2,\n    /*\n      This is a multi-line C-style comment\n    */\n    \"c\": [\n        1,\n        2,\n        3, // This is a trailing comment pointing out a trailing comma\n    ],\n}\n</pre>\n<p><tt>jsonesque</tt> would produce the following valid JSON:</p>\n<pre>{\"a\":1,\"b\":2,\"c\":[1,2,3]}\n</pre>\n<p>This could then be passed into <tt>json.loads()</tt> or similar.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Currently, <tt>jsonesque</tt> exposes just a single function called <tt>process()</tt>. It\ntakes one argument \u2014 a JSON-like string\u00a0\u2014\u00a0and returns a new string with the\naforementioned enhanced features removed. The string is additionally stripped of\nextra white-space (minified).</p>\n<p>To use <tt>jsonesque</tt>, simply <tt>import jsonesque</tt> and call <tt>process()</tt> on your\nstring:</p>\n<pre>import json, jsonesque\n\ninvalid_json = '[1, 2, /* comment */ 3,]'\nvalid_json   = jsonesque.process(invalid_json) # Yields string: '[1,2,3]'\ndecoded      = json.loads(valid_json)          # Yields list:   [1, 2, 3]\n</pre>\n</div>\n<div id=\"more-information\">\n<h2>More information</h2>\n<p>For the most complete and up-to-date documentation, please refer to the\n<tt>jsonesque</tt> GitHub repository: <a href=\"https://github.com/okdana/jsonesque/\" rel=\"nofollow\">https://github.com/okdana/jsonesque/</a></p>\n</div>\n\n          </div>"}, "last_serial": 2187320, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "feda44b7f63501fa34c50b9705e4b27d", "sha256": "35fa30f19335b730b5d12525260af08693780e2cdf941d89928e19b9fd49c1ff"}, "downloads": -1, "filename": "jsonesque-0.1.0.tar.gz", "has_sig": false, "md5_digest": "feda44b7f63501fa34c50b9705e4b27d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4446, "upload_time": "2016-06-26T00:52:42", "upload_time_iso_8601": "2016-06-26T00:52:42.158174Z", "url": "https://files.pythonhosted.org/packages/a0/1a/99d39d0f6abd4acd936c7404ba0d105b4a6dd6f7871dfee9e3b820c9ce55/jsonesque-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "28bce24c2a86ca86050c8d1542679d2c", "sha256": "f683a7670c6b63d1cfa9c847be2d56df079cb8cf9fc520a25f52f553b869897d"}, "downloads": -1, "filename": "jsonesque-0.1.1.tar.gz", "has_sig": false, "md5_digest": "28bce24c2a86ca86050c8d1542679d2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5875, "upload_time": "2016-06-26T01:05:46", "upload_time_iso_8601": "2016-06-26T01:05:46.371885Z", "url": "https://files.pythonhosted.org/packages/32/ff/bac5ef493992e866b9a2ae04fa5380332aada245f20eaae4ca73bca6d3ad/jsonesque-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28bce24c2a86ca86050c8d1542679d2c", "sha256": "f683a7670c6b63d1cfa9c847be2d56df079cb8cf9fc520a25f52f553b869897d"}, "downloads": -1, "filename": "jsonesque-0.1.1.tar.gz", "has_sig": false, "md5_digest": "28bce24c2a86ca86050c8d1542679d2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5875, "upload_time": "2016-06-26T01:05:46", "upload_time_iso_8601": "2016-06-26T01:05:46.371885Z", "url": "https://files.pythonhosted.org/packages/32/ff/bac5ef493992e866b9a2ae04fa5380332aada245f20eaae4ca73bca6d3ad/jsonesque-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:48 2020"}