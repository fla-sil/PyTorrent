{"info": {"author": "Quest", "author_email": "quest@lysator.liu.se", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: Freely Distributable", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation", "Programming Language :: Python :: Implementation :: CPython"], "description": "# Chaos Toolkit extension for Docker Swarm\n\nThis is a Chaos Toolkit extension package with probes and actions for Docker Swarm. Its main motivation is that in a multinode Swarm cluster, Docker provides no method to act on **containers** on remote nodes, e.g. to kill it. Thus, in order to harass a random container in a service, you would have to log in to a Swarm node and perform the command there.\n\nThis extension solves this shortcoming by launching a global-mode helper service in your swarm which mounts the Docker socket on all nodes and thus allows you to perform specific commands on any node. For more information, see [chaostoolkit-docker-swarm-helper][].\n\n[chaostoolkit-docker-swarm-helper]: https://github.com/bittrance/chaostoolkit-docker-swarm-helper/\n\n## Install\n\nThis package requires Python 3.5+\n\nTo be used from your experiment, this package must be installed in the Python environment where [chaostoolkit][] already lives. A fresh setup may look like this:\n\n```bash\nvirtualenv chaosenv -p /usr/bin/python3\n. ./chaosenv/bin/activate\npip install chaostoolkit chaostoolkit-docker-swarm\n```\n\n[chaostoolkit]: https://github.com/chaostoolkit/chaostoolkit\n\n## Usage\n\n```yaml\nversion: 1.0.0\ntitle: Redis Docker service should survive container death\ndescription: Docker Swarm should recreate the Redis container\nsteady-state-hypothesis:\n  title: Redis service with running container exists\n  probes:\n    - name: Redis container must exist\n      type: probe\n      tolerance: 1\n      provider:\n        type: python\n        module: chaosswarm.probes\n        func: running_tasks\n        arguments:\n          service: redis\nmethod:\n  - name: Kill a Redis task\n    type: action\n    provider:\n      type: python\n      module: chaosswarm.actions\n      func: kill_task\n      arguments:\n        service: redis\n    pauses:\n      after: 7\n```\n\n```bash\ndocker service create --name redis redis:latest\nchaos run ./swarm-experiment.yaml\n```\n```\n[2020-01-27 20:34:51 INFO] Validating the experiment's syntax\n[2020-01-27 20:34:51 INFO] Experiment looks valid\n[2020-01-27 20:34:51 INFO] Running experiment: Redis Docker service should survive container death\n[2020-01-27 20:34:51 INFO] Steady state hypothesis: Redis service with running container exists\n[2020-01-27 20:34:51 INFO] Probe: Redis container must exist\n[2020-01-27 20:34:51 INFO] Steady state hypothesis is met!\n[2020-01-27 20:34:51 INFO] Action: Kill a Redis task\n[2020-01-27 20:34:51 INFO] Pausing after activity for 5s...\n[2020-01-27 20:34:56 INFO] Steady state hypothesis: Redis service with running container exists\n[2020-01-27 20:34:56 INFO] Probe: Redis container must exist\n[2020-01-27 20:34:56 INFO] Steady state hypothesis is met!\n[2020-01-27 20:34:56 INFO] Let's rollback...\n[2020-01-27 20:34:56 INFO] No declared rollbacks, let's move on.\n[2020-01-27 20:34:56 INFO] Experiment ended with status: completed\n```\n\n## Configuration\n\nThis extension assumes your environment is set up for Docker access, e.g. using Docker environment variables.\n\n## Test\n\nTo run the tests for the project execute the following:\n\n```bash\npython3 setup.py test\n```\n\nThere are integration tests which assume you have a Docker Swarm cluster available. You can promote your local dev Docker to a 1-node Swarm cluster with:\n```bash\ndocker swarm init\n```\n\n## Contribute\n\nIf you wish to contribute more functions to this package, you are more than welcome to do so. Please, fork this project, make your changes following the usual [PEP 8][pep8] code style, sprinkling with tests and submit a PR for review.\n\n[pep8]: https://pycodestyle.readthedocs.io/en/latest/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bittrance/chaostoolkit-docker-swarm/", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "chaostoolkit-docker-swarm", "package_url": "https://pypi.org/project/chaostoolkit-docker-swarm/", "platform": "", "project_url": "https://pypi.org/project/chaostoolkit-docker-swarm/", "project_urls": {"Homepage": "https://github.com/bittrance/chaostoolkit-docker-swarm/"}, "release_url": "https://pypi.org/project/chaostoolkit-docker-swarm/0.3.0/", "requires_dist": ["chaostoolkit-lib (>=0.8.2)", "docker", "pycodestyle"], "requires_python": ">=3.5.*", "summary": "Chaos Toolkit Extension for Docker Swarm", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Chaos Toolkit extension for Docker Swarm</h1>\n<p>This is a Chaos Toolkit extension package with probes and actions for Docker Swarm. Its main motivation is that in a multinode Swarm cluster, Docker provides no method to act on <strong>containers</strong> on remote nodes, e.g. to kill it. Thus, in order to harass a random container in a service, you would have to log in to a Swarm node and perform the command there.</p>\n<p>This extension solves this shortcoming by launching a global-mode helper service in your swarm which mounts the Docker socket on all nodes and thus allows you to perform specific commands on any node. For more information, see <a href=\"https://github.com/bittrance/chaostoolkit-docker-swarm-helper/\" rel=\"nofollow\">chaostoolkit-docker-swarm-helper</a>.</p>\n<h2>Install</h2>\n<p>This package requires Python 3.5+</p>\n<p>To be used from your experiment, this package must be installed in the Python environment where <a href=\"https://github.com/chaostoolkit/chaostoolkit\" rel=\"nofollow\">chaostoolkit</a> already lives. A fresh setup may look like this:</p>\n<pre>virtualenv chaosenv -p /usr/bin/python3\n. ./chaosenv/bin/activate\npip install chaostoolkit chaostoolkit-docker-swarm\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1.0.0</span>\n<span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Redis Docker service should survive container death</span>\n<span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Docker Swarm should recreate the Redis container</span>\n<span class=\"nt\">steady-state-hypothesis</span><span class=\"p\">:</span>\n  <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Redis service with running container exists</span>\n  <span class=\"nt\">probes</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Redis container must exist</span>\n      <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">probe</span>\n      <span class=\"nt\">tolerance</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n      <span class=\"nt\">provider</span><span class=\"p\">:</span>\n        <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">python</span>\n        <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">chaosswarm.probes</span>\n        <span class=\"nt\">func</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">running_tasks</span>\n        <span class=\"nt\">arguments</span><span class=\"p\">:</span>\n          <span class=\"nt\">service</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">redis</span>\n<span class=\"nt\">method</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Kill a Redis task</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">action</span>\n    <span class=\"nt\">provider</span><span class=\"p\">:</span>\n      <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">python</span>\n      <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">chaosswarm.actions</span>\n      <span class=\"nt\">func</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">kill_task</span>\n      <span class=\"nt\">arguments</span><span class=\"p\">:</span>\n        <span class=\"nt\">service</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">redis</span>\n    <span class=\"nt\">pauses</span><span class=\"p\">:</span>\n      <span class=\"nt\">after</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">7</span>\n</pre>\n<pre>docker service create --name redis redis:latest\nchaos run ./swarm-experiment.yaml\n</pre>\n<pre><code>[2020-01-27 20:34:51 INFO] Validating the experiment's syntax\n[2020-01-27 20:34:51 INFO] Experiment looks valid\n[2020-01-27 20:34:51 INFO] Running experiment: Redis Docker service should survive container death\n[2020-01-27 20:34:51 INFO] Steady state hypothesis: Redis service with running container exists\n[2020-01-27 20:34:51 INFO] Probe: Redis container must exist\n[2020-01-27 20:34:51 INFO] Steady state hypothesis is met!\n[2020-01-27 20:34:51 INFO] Action: Kill a Redis task\n[2020-01-27 20:34:51 INFO] Pausing after activity for 5s...\n[2020-01-27 20:34:56 INFO] Steady state hypothesis: Redis service with running container exists\n[2020-01-27 20:34:56 INFO] Probe: Redis container must exist\n[2020-01-27 20:34:56 INFO] Steady state hypothesis is met!\n[2020-01-27 20:34:56 INFO] Let's rollback...\n[2020-01-27 20:34:56 INFO] No declared rollbacks, let's move on.\n[2020-01-27 20:34:56 INFO] Experiment ended with status: completed\n</code></pre>\n<h2>Configuration</h2>\n<p>This extension assumes your environment is set up for Docker access, e.g. using Docker environment variables.</p>\n<h2>Test</h2>\n<p>To run the tests for the project execute the following:</p>\n<pre>python3 setup.py <span class=\"nb\">test</span>\n</pre>\n<p>There are integration tests which assume you have a Docker Swarm cluster available. You can promote your local dev Docker to a 1-node Swarm cluster with:</p>\n<pre>docker swarm init\n</pre>\n<h2>Contribute</h2>\n<p>If you wish to contribute more functions to this package, you are more than welcome to do so. Please, fork this project, make your changes following the usual <a href=\"https://pycodestyle.readthedocs.io/en/latest/\" rel=\"nofollow\">PEP 8</a> code style, sprinkling with tests and submit a PR for review.</p>\n\n          </div>"}, "last_serial": 6788708, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e0ed1a337d148346aacc395985a466d2", "sha256": "04a036c39e84d5a366e40ba63f47de566572c07c65b48a5a49ac4e5743ec9985"}, "downloads": -1, "filename": "chaostoolkit_docker_swarm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e0ed1a337d148346aacc395985a466d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 9234, "upload_time": "2020-01-28T04:59:11", "upload_time_iso_8601": "2020-01-28T04:59:11.859643Z", "url": "https://files.pythonhosted.org/packages/0a/64/bd97968557a023a6e95dad0a59207746cd24980b0779c820591b6099dcbe/chaostoolkit_docker_swarm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c88c17e073f6fef261e0d3b0984c3755", "sha256": "e85167e71af05a28f01a6130b1e156fce4e2800cc584e031b197f479c6ee1782"}, "downloads": -1, "filename": "chaostoolkit-docker-swarm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c88c17e073f6fef261e0d3b0984c3755", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 5074, "upload_time": "2020-01-28T04:59:14", "upload_time_iso_8601": "2020-01-28T04:59:14.867387Z", "url": "https://files.pythonhosted.org/packages/58/94/c947c500d5b6c97808ed13971346accc91a8cad9da3f9ebff245426763d1/chaostoolkit-docker-swarm-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4e74c8483d718e22c93394d35e9e7269", "sha256": "f08ba7fbaf988e75d35691ffeab8a955a951352531138a2c7160d047aa6ad84b"}, "downloads": -1, "filename": "chaostoolkit_docker_swarm-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4e74c8483d718e22c93394d35e9e7269", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 9283, "upload_time": "2020-03-02T22:29:19", "upload_time_iso_8601": "2020-03-02T22:29:19.632414Z", "url": "https://files.pythonhosted.org/packages/35/c6/921c689b429ef80eb88f17523055754f236ad212546ac771820a0a93c8d7/chaostoolkit_docker_swarm-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c97c9e3ccf3283f586c26b8a1511ade", "sha256": "2921af21986bbde41dc97d6f124cb4bc89dd6191eab499066c62f97a2a56aef2"}, "downloads": -1, "filename": "chaostoolkit-docker-swarm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5c97c9e3ccf3283f586c26b8a1511ade", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 5140, "upload_time": "2020-03-02T22:29:21", "upload_time_iso_8601": "2020-03-02T22:29:21.258979Z", "url": "https://files.pythonhosted.org/packages/1c/f7/d4711fca4676a0b4f3ecffb7ee9c3fa59c013f8fe619747ccad0de5cad44/chaostoolkit-docker-swarm-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "72a86d7f7b978ecc689c8adebfdf9425", "sha256": "b7002c458fbe0fc070a22dc86d895a76783dbfdfb6da194d0f0dfcb5d40a984e"}, "downloads": -1, "filename": "chaostoolkit_docker_swarm-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "72a86d7f7b978ecc689c8adebfdf9425", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 9305, "upload_time": "2020-03-10T23:36:08", "upload_time_iso_8601": "2020-03-10T23:36:08.134627Z", "url": "https://files.pythonhosted.org/packages/44/48/c461ae07a137b0606b3c875d4bc73f3ac9e361538a6ff9862deacf268f7e/chaostoolkit_docker_swarm-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21f584f10c5fd7036d6b87bd3a2baab3", "sha256": "4a81cf9b9a11d4fe8662e01a272b8042ab677198108008b41d43aebe2083ec99"}, "downloads": -1, "filename": "chaostoolkit-docker-swarm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "21f584f10c5fd7036d6b87bd3a2baab3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 5156, "upload_time": "2020-03-10T23:36:09", "upload_time_iso_8601": "2020-03-10T23:36:09.596545Z", "url": "https://files.pythonhosted.org/packages/d8/d4/1d9a947fa3f278ff215f8b4d3b1ef7831e1f0ce35de046b1e6f1a6ead725/chaostoolkit-docker-swarm-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "72a86d7f7b978ecc689c8adebfdf9425", "sha256": "b7002c458fbe0fc070a22dc86d895a76783dbfdfb6da194d0f0dfcb5d40a984e"}, "downloads": -1, "filename": "chaostoolkit_docker_swarm-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "72a86d7f7b978ecc689c8adebfdf9425", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 9305, "upload_time": "2020-03-10T23:36:08", "upload_time_iso_8601": "2020-03-10T23:36:08.134627Z", "url": "https://files.pythonhosted.org/packages/44/48/c461ae07a137b0606b3c875d4bc73f3ac9e361538a6ff9862deacf268f7e/chaostoolkit_docker_swarm-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21f584f10c5fd7036d6b87bd3a2baab3", "sha256": "4a81cf9b9a11d4fe8662e01a272b8042ab677198108008b41d43aebe2083ec99"}, "downloads": -1, "filename": "chaostoolkit-docker-swarm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "21f584f10c5fd7036d6b87bd3a2baab3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 5156, "upload_time": "2020-03-10T23:36:09", "upload_time_iso_8601": "2020-03-10T23:36:09.596545Z", "url": "https://files.pythonhosted.org/packages/d8/d4/1d9a947fa3f278ff215f8b4d3b1ef7831e1f0ce35de046b1e6f1a6ead725/chaostoolkit-docker-swarm-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:27 2020"}