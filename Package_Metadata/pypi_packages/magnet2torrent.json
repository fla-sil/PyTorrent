{"info": {"author": "Anders Jensen", "author_email": "johndoee@tridentstream.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP"], "description": "# Magnet2Torrent\n\nPure python project to turn a magnet link into a .torrent file.\nThe goal is to do it as fast as possible.\n\n## Getting Started\n\n### Installing\n\n```bash\npip install magnet2torrent\n```\n\n### Usage\n\nDownload an ubuntu iso torrent.\n\n```bash\nmagnet2torrent fetch \"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&dn=ubuntu-19.10-desktop-amd64.iso&tr=https%3A%2F%2Ftorrent.ubuntu.com%2Fannounce&tr=https%3A%2F%2Fipv6.torrent.ubuntu.com%2Fannounce\"\n```\n\nRun it as an HTTP server.\n\n\n```bash\nmagnet2torrent serve\n```\n\nRun it as an HTTP server with lots of features enabled.\n\n```bash\nmagnet2torrent --use-dht --dht-state-file dht.state --torrent-cache-folder torcache serve --apikey secretkey\n```\n\nUse from python\n\n```python\nimport asyncio\n\nfrom magnet2torrent import Magnet2Torrent, FailedToFetchException\n\nasync def fetch_that_torrent():\n    m2t = Magnet2Torrent(\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&dn=ubuntu-19.10-desktop-amd64.iso&tr=https%3A%2F%2Ftorrent.ubuntu.com%2Fannounce&tr=https%3A%2F%2Fipv6.torrent.ubuntu.com%2Fannounce\")\n    try:\n        filename, torrent_data = await m2t.retrieve_torrent()\n    except FailedToFetchException:\n        print(\"Failed\")\n\nasyncio.run(fetch_that_torrent())\n```\n\nIf you want to use DHT to retrieve, you will have to bootstrap and run it.\n\n```python\n\nimport asyncio\nimport os\n\nfrom magnet2torrent import Magnet2Torrent, FailedToFetchException, settings\n\n\nDHT_STATE_FILE = \"/tmp/dht.state\"\n\nasync def start_dht():\n    if os.path.exists(DHT_STATE_FILE):\n        dht_server = DHTServer.load_state(DHT_STATE_FILE)\n        await dht_server.listen(settings.DHT_PORT)\n    else:\n        dht_server = DHTServer()\n        await dht_server.listen(settings.DHT_PORT)\n        await dht_server.bootstrap(settings.DHT_BOOTSTRAP_NODES)\n    return dht_server\n\nasync def fetch_that_torrent(dht_server):\n    m2t = Magnet2Torrent(\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&dn=ubuntu-19.10-desktop-amd64.iso\", dht_server=dht_server)\n    try:\n        filename, torrent_data = await m2t.retrieve_torrent()\n    except FailedToFetchException:\n        print(\"Failed\")\n\ndht_server = asyncio.run(start_dht())\nasyncio.run(fetch_that_torrent(dht_server))\ndht_server.save_state(DHT_STATE_FILE)\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\nThe DHT part is forked from [bmueller/kademlia](https://github.com/bmuller/kademlia/) - its license can be\nfound in the dht folder or in the original project.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JohnDoee/magnet2torrent", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "magnet2torrent", "package_url": "https://pypi.org/project/magnet2torrent/", "platform": "", "project_url": "https://pypi.org/project/magnet2torrent/", "project_urls": {"Homepage": "https://github.com/JohnDoee/magnet2torrent"}, "release_url": "https://pypi.org/project/magnet2torrent/1.1.0/", "requires_dist": ["aiohttp (==3.6.*)", "six (>=1.13.0)", "expiringdict (>=1.2.0)"], "requires_python": "", "summary": "Turn a bittorrent magnet links into a .torrent file.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Magnet2Torrent</h1>\n<p>Pure python project to turn a magnet link into a .torrent file.\nThe goal is to do it as fast as possible.</p>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<pre>pip install magnet2torrent\n</pre>\n<h3>Usage</h3>\n<p>Download an ubuntu iso torrent.</p>\n<pre>magnet2torrent fetch <span class=\"s2\">\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&amp;dn=ubuntu-19.10-desktop-amd64.iso&amp;tr=https%3A%2F%2Ftorrent.ubuntu.com%2Fannounce&amp;tr=https%3A%2F%2Fipv6.torrent.ubuntu.com%2Fannounce\"</span>\n</pre>\n<p>Run it as an HTTP server.</p>\n<pre>magnet2torrent serve\n</pre>\n<p>Run it as an HTTP server with lots of features enabled.</p>\n<pre>magnet2torrent --use-dht --dht-state-file dht.state --torrent-cache-folder torcache serve --apikey secretkey\n</pre>\n<p>Use from python</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">magnet2torrent</span> <span class=\"kn\">import</span> <span class=\"n\">Magnet2Torrent</span><span class=\"p\">,</span> <span class=\"n\">FailedToFetchException</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">fetch_that_torrent</span><span class=\"p\">():</span>\n    <span class=\"n\">m2t</span> <span class=\"o\">=</span> <span class=\"n\">Magnet2Torrent</span><span class=\"p\">(</span><span class=\"s2\">\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&amp;dn=ubuntu-19.10-desktop-amd64.iso&amp;tr=https%3A</span><span class=\"si\">%2F%2F</span><span class=\"s2\">torrent.ubuntu.com</span><span class=\"si\">%2F</span><span class=\"s2\">announce&amp;tr=https%3A</span><span class=\"si\">%2F%2F</span><span class=\"s2\">ipv6.torrent.ubuntu.com</span><span class=\"si\">%2F</span><span class=\"s2\">announce\"</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">torrent_data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">m2t</span><span class=\"o\">.</span><span class=\"n\">retrieve_torrent</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">FailedToFetchException</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Failed\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">fetch_that_torrent</span><span class=\"p\">())</span>\n</pre>\n<p>If you want to use DHT to retrieve, you will have to bootstrap and run it.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">magnet2torrent</span> <span class=\"kn\">import</span> <span class=\"n\">Magnet2Torrent</span><span class=\"p\">,</span> <span class=\"n\">FailedToFetchException</span><span class=\"p\">,</span> <span class=\"n\">settings</span>\n\n\n<span class=\"n\">DHT_STATE_FILE</span> <span class=\"o\">=</span> <span class=\"s2\">\"/tmp/dht.state\"</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">start_dht</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">DHT_STATE_FILE</span><span class=\"p\">):</span>\n        <span class=\"n\">dht_server</span> <span class=\"o\">=</span> <span class=\"n\">DHTServer</span><span class=\"o\">.</span><span class=\"n\">load_state</span><span class=\"p\">(</span><span class=\"n\">DHT_STATE_FILE</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">dht_server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DHT_PORT</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">dht_server</span> <span class=\"o\">=</span> <span class=\"n\">DHTServer</span><span class=\"p\">()</span>\n        <span class=\"k\">await</span> <span class=\"n\">dht_server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DHT_PORT</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">dht_server</span><span class=\"o\">.</span><span class=\"n\">bootstrap</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DHT_BOOTSTRAP_NODES</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">dht_server</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">fetch_that_torrent</span><span class=\"p\">(</span><span class=\"n\">dht_server</span><span class=\"p\">):</span>\n    <span class=\"n\">m2t</span> <span class=\"o\">=</span> <span class=\"n\">Magnet2Torrent</span><span class=\"p\">(</span><span class=\"s2\">\"magnet:?xt=urn:btih:e2467cbf021192c241367b892230dc1e05c0580e&amp;dn=ubuntu-19.10-desktop-amd64.iso\"</span><span class=\"p\">,</span> <span class=\"n\">dht_server</span><span class=\"o\">=</span><span class=\"n\">dht_server</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">torrent_data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">m2t</span><span class=\"o\">.</span><span class=\"n\">retrieve_torrent</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">FailedToFetchException</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Failed\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">dht_server</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">start_dht</span><span class=\"p\">())</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">fetch_that_torrent</span><span class=\"p\">(</span><span class=\"n\">dht_server</span><span class=\"p\">))</span>\n<span class=\"n\">dht_server</span><span class=\"o\">.</span><span class=\"n\">save_state</span><span class=\"p\">(</span><span class=\"n\">DHT_STATE_FILE</span><span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n<p>The DHT part is forked from <a href=\"https://github.com/bmuller/kademlia/\" rel=\"nofollow\">bmueller/kademlia</a> - its license can be\nfound in the dht folder or in the original project.</p>\n\n          </div>"}, "last_serial": 7189683, "releases": {"1.0.0": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "4968df52724fe5fa7ebc93f9c601428a", "sha256": "76e66acbc76fa7435ac78cd1496e038ac7a9dd10341770789be695bcd0d43e30"}, "downloads": -1, "filename": "magnet2torrent-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4968df52724fe5fa7ebc93f9c601428a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12914, "upload_time": "2020-01-05T15:54:17", "upload_time_iso_8601": "2020-01-05T15:54:17.289423Z", "url": "https://files.pythonhosted.org/packages/9a/fc/9ebe40a00e4dbc27a7b0db093380a6b680b90c199cbfdba88666e3efd828/magnet2torrent-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "06e75e22021f9dc43bc447a4abba1dbf", "sha256": "1bce659799c0a7c4d9f8d075b5fd323659fb4509ad8bca12613321bee023d4d8"}, "downloads": -1, "filename": "magnet2torrent-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "06e75e22021f9dc43bc447a4abba1dbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12975, "upload_time": "2020-01-06T15:59:06", "upload_time_iso_8601": "2020-01-06T15:59:06.291477Z", "url": "https://files.pythonhosted.org/packages/75/94/125ba1b01ed86f732cac7a784183ff59199af4a14f861449fbb9515d62e6/magnet2torrent-1.0.2-py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2482579c9b0b304bd473fd1ab14663a8", "sha256": "9fce24682a75dfcdc7fe005a01981e89f585c820fc5f8aeff95fc99c62c69822"}, "downloads": -1, "filename": "magnet2torrent-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2482579c9b0b304bd473fd1ab14663a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13089, "upload_time": "2020-01-24T19:06:08", "upload_time_iso_8601": "2020-01-24T19:06:08.589592Z", "url": "https://files.pythonhosted.org/packages/11/1b/a6b09447e10f4e16af81d3a4cfed2e02e67fc4b35ed74aef1b94ebb5c38f/magnet2torrent-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a16656b5b4e154b32b5912ebe394ba1", "sha256": "09e9d63633829305647c8ce61d56e51b2646a90143a9d7b39737156434e8d26a"}, "downloads": -1, "filename": "magnet2torrent-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1a16656b5b4e154b32b5912ebe394ba1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9670, "upload_time": "2020-01-24T19:06:15", "upload_time_iso_8601": "2020-01-24T19:06:15.168299Z", "url": "https://files.pythonhosted.org/packages/e6/4c/86df82f248fe8c1214384f2fa0d5028f604ed4b5249d0259c173e11e8017/magnet2torrent-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "645649bfeadbb544b904365636d9c113", "sha256": "987e141ef871e2819b4cedeb9247f0b25a3e69aeede00076b0525d9e2ee66270"}, "downloads": -1, "filename": "magnet2torrent-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "645649bfeadbb544b904365636d9c113", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13082, "upload_time": "2020-02-19T15:40:54", "upload_time_iso_8601": "2020-02-19T15:40:54.763327Z", "url": "https://files.pythonhosted.org/packages/5a/e5/3c96c2e7c4bdda3b932faa6447372bc96a4ffc0168e3b57079c183e2970d/magnet2torrent-1.0.4-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "fe65a62e52e7dc5cd4916c033155a820", "sha256": "aeb98469740fb2ec50367b167221717b1617b33363e442a22297d15a93a89bfa"}, "downloads": -1, "filename": "magnet2torrent-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe65a62e52e7dc5cd4916c033155a820", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28081, "upload_time": "2020-05-07T15:52:16", "upload_time_iso_8601": "2020-05-07T15:52:16.510374Z", "url": "https://files.pythonhosted.org/packages/7c/41/5c487bdf33cef2bbd0e5ff407c6f0a6697c2cf0ed2c1324b20961a06ac0d/magnet2torrent-1.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe65a62e52e7dc5cd4916c033155a820", "sha256": "aeb98469740fb2ec50367b167221717b1617b33363e442a22297d15a93a89bfa"}, "downloads": -1, "filename": "magnet2torrent-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe65a62e52e7dc5cd4916c033155a820", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28081, "upload_time": "2020-05-07T15:52:16", "upload_time_iso_8601": "2020-05-07T15:52:16.510374Z", "url": "https://files.pythonhosted.org/packages/7c/41/5c487bdf33cef2bbd0e5ff407c6f0a6697c2cf0ed2c1324b20961a06ac0d/magnet2torrent-1.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:01 2020"}