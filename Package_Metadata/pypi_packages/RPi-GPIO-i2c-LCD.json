{"info": {"author": "Allan Gallop", "author_email": "allangallop@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "## RPi_GPIO_i2c_LCD\n> HD44780 / PCF8574 LCD Module\n\n\n### Sections\n* Description\n* Features\n* Install\n* Usage\n\n\n### Description\n>A simple module for working with the HD44780 LCD over I\u00b2C using the PCF8574 Backpack\n\n### Features\n* Non-Blocking update loop\n* Supports 2x16 and 4x20 Displays\n* Easy to use\n* Callback loop for updating display directly\n\n\n\n### Install\n#### Using PyPi: \n```\npip3 install RPi-GPIO-I2C-LCD\n```\n\n### Usage\n##### Simple\n\n```\nfrom RPi_GPIO_i2c_LCD import lcd\nfrom time import sleep\n\n## Address of backpack\ni2c_address = 0x27\n\n## Initalize display\nlcdDisplay = lcd.HD44780(i2c_address)\n\n## Set string value to buffer\nlcdDisplay.set(\"Hello\",1)\nlcdDisplay.set(\"World\",2)\n\nsleep(1)\n```\n\n#### Callback Loop\n```\nfrom RPi_GPIO_i2c_LCD import lcd\nfrom time import sleep, strftime\n\n## Callback function that will run on every display loop\ndef MyFunction(self):\n    ## Show current time on line 2\n    self.lcd.display_string(str(strftime(\"%d/%m %H:%M:%S\").center(20,' ')),2)\n\n## Initalize display with callback\nlcdDisplay = lcd.HD44780(0x27,MyFunction)\n\n## Set string value to buffer\nlcdDisplay.set(\"The time is:\",1)\nsleep(6)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/AllanGallop/RPi_GPIO_i2c_LCD/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AllanGallop/RPi_GPIO_i2c_LCD", "keywords": "LCD i2c HD44780 PCF8574 raspberry pi", "license": "", "maintainer": "", "maintainer_email": "", "name": "RPi-GPIO-i2c-LCD", "package_url": "https://pypi.org/project/RPi-GPIO-i2c-LCD/", "platform": "", "project_url": "https://pypi.org/project/RPi-GPIO-i2c-LCD/", "project_urls": {"Download": "https://github.com/AllanGallop/RPi_GPIO_i2c_LCD/archive/0.1.0.tar.gz", "Homepage": "https://github.com/AllanGallop/RPi_GPIO_i2c_LCD"}, "release_url": "https://pypi.org/project/RPi-GPIO-i2c-LCD/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Simple module for using a HD44780 LCD over I2C", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>RPi_GPIO_i2c_LCD</h2>\n<blockquote>\n<p>HD44780 / PCF8574 LCD Module</p>\n</blockquote>\n<h3>Sections</h3>\n<ul>\n<li>Description</li>\n<li>Features</li>\n<li>Install</li>\n<li>Usage</li>\n</ul>\n<h3>Description</h3>\n<blockquote>\n<p>A simple module for working with the HD44780 LCD over I\u00b2C using the PCF8574 Backpack</p>\n</blockquote>\n<h3>Features</h3>\n<ul>\n<li>Non-Blocking update loop</li>\n<li>Supports 2x16 and 4x20 Displays</li>\n<li>Easy to use</li>\n<li>Callback loop for updating display directly</li>\n</ul>\n<h3>Install</h3>\n<h4>Using PyPi:</h4>\n<pre><code>pip3 install RPi-GPIO-I2C-LCD\n</code></pre>\n<h3>Usage</h3>\n<h5>Simple</h5>\n<pre><code>from RPi_GPIO_i2c_LCD import lcd\nfrom time import sleep\n\n## Address of backpack\ni2c_address = 0x27\n\n## Initalize display\nlcdDisplay = lcd.HD44780(i2c_address)\n\n## Set string value to buffer\nlcdDisplay.set(\"Hello\",1)\nlcdDisplay.set(\"World\",2)\n\nsleep(1)\n</code></pre>\n<h4>Callback Loop</h4>\n<pre><code>from RPi_GPIO_i2c_LCD import lcd\nfrom time import sleep, strftime\n\n## Callback function that will run on every display loop\ndef MyFunction(self):\n    ## Show current time on line 2\n    self.lcd.display_string(str(strftime(\"%d/%m %H:%M:%S\").center(20,' ')),2)\n\n## Initalize display with callback\nlcdDisplay = lcd.HD44780(0x27,MyFunction)\n\n## Set string value to buffer\nlcdDisplay.set(\"The time is:\",1)\nsleep(6)\n</code></pre>\n\n          </div>"}, "last_serial": 5437072, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "51321e74fdda3b751cd586609d8e51f7", "sha256": "8d4e9933a19335516c1669ceecc70701651cbc521ef4156118d870db63092faa"}, "downloads": -1, "filename": "RPi_GPIO_i2c_LCD-0.1.0.tar.gz", "has_sig": false, "md5_digest": "51321e74fdda3b751cd586609d8e51f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2063, "upload_time": "2019-06-23T10:46:04", "upload_time_iso_8601": "2019-06-23T10:46:04.130947Z", "url": "https://files.pythonhosted.org/packages/a4/7c/d1dcf30de3a3ebe9d4e6f8ff65189f1b5317b994e9e0c7a671263490cdb3/RPi_GPIO_i2c_LCD-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c65b07a087fb04c41c397526ff9faa07", "sha256": "54006443af6d876ab80999822f4fab72cad852717cbc6821e6e9658cca260221"}, "downloads": -1, "filename": "RPi_GPIO_i2c_LCD-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c65b07a087fb04c41c397526ff9faa07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2965, "upload_time": "2019-06-23T11:27:02", "upload_time_iso_8601": "2019-06-23T11:27:02.035620Z", "url": "https://files.pythonhosted.org/packages/65/3f/32de9440024a92621d447b67a59befaca989d90b8a62e01b8b6c00b91198/RPi_GPIO_i2c_LCD-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c65b07a087fb04c41c397526ff9faa07", "sha256": "54006443af6d876ab80999822f4fab72cad852717cbc6821e6e9658cca260221"}, "downloads": -1, "filename": "RPi_GPIO_i2c_LCD-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c65b07a087fb04c41c397526ff9faa07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2965, "upload_time": "2019-06-23T11:27:02", "upload_time_iso_8601": "2019-06-23T11:27:02.035620Z", "url": "https://files.pythonhosted.org/packages/65/3f/32de9440024a92621d447b67a59befaca989d90b8a62e01b8b6c00b91198/RPi_GPIO_i2c_LCD-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:55 2020"}