{"info": {"author": "Addison Elliott", "author_email": "addison.elliott@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "\n[![pipeline status](https://gitlab.com/zkovari/pyqt5ac/badges/master/pipeline.svg)](https://gitlab.com/zkovari/pyqt5ac/-/commits/master)\n[![coverage report](https://gitlab.com/zkovari/pyqt5ac/badges/master/coverage.svg)](https://gitlab.com/zkovari/pyqt5ac/-/commits/master)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyqt5ac.svg)](https://pypi.org/project/pyqt5ac/)\n[![PyPI](https://img.shields.io/pypi/v/pyqt5ac.svg)](https://pypi.org/project/pyqt5ac/)\n[![PyPI - License](https://img.shields.io/pypi/l/pyqt5ac.svg)](https://github.com/addisonElliott/pyqt5ac/blob/master/LICENSE)\n\n* [PyQt5 Auto Compiler (pyqt5ac)](#pyqt5-auto-compiler-pyqt5ac)\n  * [Enter <strong>pyqt5ac</strong>!](#enter-pyqt5ac)\n* [Installing](#installing)\n* [Getting Started](#getting-started)\n  * [Running from Command Line](#running-from-command-line)\n  * [Running from Python Script](#running-from-python-script)\n* [Configuration Options](#configuration-options)\n* [Example](#example)\n  * [Option 1: YAML Config File (Recommended)](#option-1-yaml-config-file-recommended)\n  * [Option 2: JSON Config File (Deprecated)](#option-2-json-config-file-deprecated)\n  * [Option 3: Python Script](#option-3-python-script)\n  * [Option 4: Command Line](#option-4-command-line)\n  * [Resulting File Structure](#resulting-file-structure)\n* [Support](#support)\n* [License](#license)\n\nPyQt5 Auto Compiler (pyqt5ac)\n=============================\npyqt5ac is a Python package for automatically compiling Qt's UI and QRC files into Python files.\n\nIn PyQt5, [Qt Designer](https://www.qt.io/) is the application used to create a GUI using a drag-and-drop interface. This interface is stored in a *.ui* file and any resources such as images or icons are stored in a *.qrc* file.\n\nThese two filetypes must be compiled into Python files before they can be used in your Python program. There are a few ways to go about this currently:\n1. Manually compile the files using the command line and pyuic5 for *.ui* files and pyrcc5 for *.qrc* files.\n2. Compile the files each time the application is started up by calling pyuic5 and pyrcc5 within your Python script\n\nThe downside to the first method is that it can be a tedious endeavor to compile the files, especially when one is faced with a larger project with many of these files that need to be compiled. Although the second method eliminates the tediousness of compilation, these files are compiled **every** time you run your script, regardless of if anything has been changed. This can cause a hit in performance and take longer to startup your script.\n\n### Enter **pyqt5ac**!\npyqt5ac provides a command-line interface (CLI) that searches through your files and automatically compiles any *.ui* or *.qrc* files. In addition, pyqt5ac can be called from your Python script. In both instances, **ui and resource files are only compiled if they have been updated**.\n\nInstalling\n==========\npyqt5ac is currently available on [PyPi](https://pypi.python.org/pypi/pyqt5ac/). The simplest way to\ninstall alone is using ``pip`` at a command line\n\n    pip install pyqt5ac\n\nwhich installs the latest release.  To install the latest code from the repository (usually stable, but may have\nundocumented changes or bugs)\n\n    pip install git+https://github.com/addisonElliott/pyqt5ac.git\n\nFor developers, you can clone the pyqt5ac repository and run the ``setup.py`` file. Use the following commands to get\na copy from GitHub and install all dependencies\n\n    git clone https://github.com/addisonElliott/pyqt5ac.git\n    cd pyqt5ac\n    pip install .[dev]\n\nto install in 'develop' or 'editable' mode, where changes can be made to the local working code and Python will use\nthe updated code.\n\nGetting Started\n===============\n\nRunning from Command Line\n-------------------------\nIf pyqt5ac is installed via pip, the command line interface can be called like any Unix based program in the terminal\n\n    pyqt5ac [OPTIONS] [IOPATHS]...\n\nIn the interface, the options have slightly different names so reference the help file of the interface for more information. The largest difference is that the ioPaths argument is instead a list of space delineated paths where the even items are the source file expression and the odd items are the destination file expression.\n\nThe help file of the interface can be run as\n\n    pyqt5ac --help\n\nRunning from Python Script\n--------------------------\nThe following snippet of code below demonstrates how to call pyqt5ac from your Python script\n\n```python\nimport pyqt5ac\n\nif debug:\n    pyqt5ac.main(rccOptions='', uicOptions='--from-imports', force=False, config='',\n                 ioPaths=[['gui/*.ui', 'generated/%%FILENAME%%_ui.py'],\n                          ['resources/*.qrc', 'generated/%%FILENAME%%_rc.py']])\n```\n\nConfiguration Options\n=====================\nAll of the options that can be specified to pyqt5ac can also be placed in a configuration file (JSON or YAML). My recommendation is to use a configuration file to allow easy compilation of your software. For testing purposes, I would use the options in the command line interface to make get everything working and then transcribe that into a configuration file for repeated use.\n\nWhether running via the command line or from a script, the arguments and options that can be given are the same. The valid options are:\n* **rccOptions** - Additional options to pass to the resource compiler. See the man page of pyrcc5 for more information on options. An example of a valid option would be \"-compress 1\". Default is to pass no options.\n* **uicOptions** - Additional options to pass to the UI compiler. See the man page of pyuic5 for more information on options. An example of a valid option would be '--from-imports'. Default is to pass no options.\n* **force** - Specifies whether to force compile all of the files found. The default is false meaning only outdated files will be compiled.\n* **config** - JSON or YAML configuration file that contains information about these parameters.\n* **ioPaths** - This is a 2D list containing information about what source files to compile and where to place the source files. The first column is the source file global expression (meaning you can use wildcards, ** for recursive folder search, ? for options, etc to match filenames) and the second column is the destination file expression. The destination file expression recognizes 'special' variables that will be replaced with information from the source filename:\n    * %%FILENAME%% - Filename of the source file without the extension\n    * %%EXT%% - Extension excluding the period of the file (e.g. ui or qrc)\n    * %%DIRNAME%% - Directory of the source file\n* **variables** - custom variables that can be used in the definition of the paths in **ioPaths**. For example, to limit the search of files to a specific directory, one can define a variable `BASEDIR` and then use it as `%%BASEDIR%%/gui/*.ui*`\n\nExample\n=======\nTake the following file structure as an example project where any UI and QRC files need to be compiled. Assume that pyuic5 and pyrcc5 are located in /usr/bin and that '--from-imports' is desired for the UIC compiler.\n\n```\n|-- gui\n|   |-- mainWindow.ui\n|   |-- addDataDialog.ui\n|   `-- saveDataDialog.ui\n|-- resources\n|   |-- images\n|   |-- stylesheets\n|   |-- app.qrc\n|   `-- style.qrc\n|-- modules\n|   |-- welcome\n|   |   |-- module.ui\n|   |   `-- resources\n|   |       |-- images\n|   |       `-- module.qrc\n|   `-- dataProbe\n|       |-- module.ui\n|       `-- resources\n|           |-- images\n|           `-- module.qrc\n```\n\nThe sections below demonstrate how to setup pyqt5ac to compile the necssary files given the file structure above.\n\nOption 1: YAML Config File (Recommended)\n---------------------------------------\n```YAML\nioPaths:\n  -\n    - \"gui/*.ui\"\n    - \"generated/%%FILENAME%%_ui.py\"\n  -\n    - \"resources/*.qrc\"\n    - \"generated/%%FILENAME_%%%%EXT%%.py\"\n  -\n    - \"modules/*/*.ui\"\n    - \"%%DIRNAME%%/generated/%%FILENAME%%_ui.py\"\n  -\n    - \"modules/*/resources/*.qrc\"\n    - \"%%DIRNAME%%/generated/%%FILENAME%%_rc.py\"\n\nuic_options: --from-imports\nforce: False\n```\n\nNow run pyqt5ac from the command line or Python script using your config file:\n```bash\npyqt5ac --config config.yml\n```\n\nor\n```python\nimport pyqt5ac\n\npyqt5ac.main(config='config.yml')\n```\n\nOption 2: JSON Config File (Deprecated)\n---------------------------------------\n```JSON\n{\n  \"ioPaths\": [\n    [\"gui/*.ui\", \"generated/%%FILENAME%%_ui.py\"],\n    [\"resources/*.qrc\", \"generated/%%FILENAME%%_rc.py\"],\n    [\"modules/*/*.ui\", \"%%DIRNAME%%/generated/%%FILENAME%%_ui.py\"],\n    [\"modules/*/resources/*.qrc\", \"%%DIRNAME%%/generated/%%FILENAME%%_rc.py\"]\n  ],\n  \"rcc_options\": \"\",\n  \"uic_options\": \"--from-imports\",\n  \"force\": false\n}\n```\n\nNow run pyqt5ac from the command line or Python script using your config file:\n```bash\npyqt5ac --config config.yml\n```\n\nor\n```python\nimport pyqt5ac\n\npyqt5ac.main(config='config.yml')\n```\n\nOption 3: Python Script\n-----------------------\n```python\nimport pyqt5ac\n\npyqt5ac.main(uicOptions='--from-imports', force=False, ioPaths=[\n        ['gui/*.ui', 'generated/%%FILENAME%%_ui.py'],\n        ['resources/*.qrc', 'generated/%%FILENAME%%_rc.py'],\n        ['modules/*/*.ui', '%%DIRNAME%%/generated/%%FILENAME%%_ui.py'],\n        ['modules/*/resources/*.qrc', '%%DIRNAME%%/generated/%%FILENAME%%_rc.py']\n    ])\n```\n\nOption 4: Command Line\n----------------------\n```bash\npyqt5ac --uic_options \"--from-imports\" gui/*.ui generated/%%FILENAME%%_ui.py resources/*.qrc generated/%%FILENAME%%_rc.py modules/*/*.ui %%DIRNAME%%/generated/%%FILENAME%%_ui.py modules/*/resources/*.qrc %%DIRNAME%%/generated/%%FILENAME%%_rc.py\n```\n\nResulting File Structure\n------------------------\n```\n|-- gui\n|   |-- mainWindow.ui\n|   |-- addDataDialog.ui\n|   `-- saveDataDialog.ui\n|-- resources\n|   |-- images\n|   |-- stylesheets\n|   |-- app.qrc\n|   `-- style.qrc\n|-- generated\n|   |-- mainWindow_ui.py\n|   |-- addDataDialog_ui.py\n|   |-- saveDataDialog_ui.py\n|   |-- app_rc.py\n|   `-- style_rc.py\n|-- modules\n|   |-- welcome\n|       |-- module.ui\n|       |-- resources\n|           |-- images\n|           `-- module.qrc\n|       `-- generated\n|           |-- module_ui.py\n|           `-- module_rc.py\n|   `-- dataProbe\n|       |-- module.ui\n|       |-- resources\n|           |-- images\n|           `-- module.qrc\n|       `-- generated\n|           |-- module_ui.py\n|           `-- module_rc.py\n```\n\nSupport\n=======\nIssues and pull requests are encouraged! \n\nBugs can be submitted through the [issue tracker](https://github.com/addisonElliott/pyqt5ac/issues).\n\nPull requests are welcome too!\n\nLicense\n=================\npyqt5ac has an [MIT-based license](https://github.com/addisonElliott/pyqt5ac/blob/master/LICENSE).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/addisonElliott/pyqt5ac", "keywords": "pyqt pyqt5 qt qt5 qt auto compile generate ui rc pyuic5 pyrcc5 resource designer creator automatic", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pyqt5ac", "package_url": "https://pypi.org/project/pyqt5ac/", "platform": "", "project_url": "https://pypi.org/project/pyqt5ac/", "project_urls": {"Homepage": "https://github.com/addisonElliott/pyqt5ac", "Source": "https://github.com/addisonElliott/pyqt5ac", "Tracker": "https://github.com/addisonElliott/pyqt5ac/issues"}, "release_url": "https://pypi.org/project/pyqt5ac/1.1.0/", "requires_dist": ["PyQt5", "click", "pyyaml", "PyQt5 ; extra == 'all'", "click ; extra == 'all'", "pyyaml ; extra == 'all'", "pytest ; extra == 'all'", "pytest-cov ; extra == 'all'", "PyQt5 ; extra == 'core'", "click ; extra == 'core'", "pyyaml ; extra == 'core'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": ">=3", "summary": "Python module to automatically compile UI and RC files in PyQt5 to Python files", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitlab.com/zkovari/pyqt5ac/-/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7660010c6ed027698697ca6cc8957f2e2e968249/68747470733a2f2f6769746c61622e636f6d2f7a6b6f766172692f707971743561632f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.com/zkovari/pyqt5ac/-/commits/master\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aebaddf4019e3cd4236b1e7d9b6bf8c26bc6e548/68747470733a2f2f6769746c61622e636f6d2f7a6b6f766172692f707971743561632f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://pypi.org/project/pyqt5ac/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94f673318e3c8d29bf2d53f43be62242dab06c2d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707971743561632e737667\"></a>\n<a href=\"https://pypi.org/project/pyqt5ac/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/811e89bc341d6bc5daddf70febe72ad4f5fdc4b7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707971743561632e737667\"></a>\n<a href=\"https://github.com/addisonElliott/pyqt5ac/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f37ea504def83069502b7ebee5d2cb7101f4fd5b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f707971743561632e737667\"></a></p>\n<ul>\n<li><a href=\"#pyqt5-auto-compiler-pyqt5ac\" rel=\"nofollow\">PyQt5 Auto Compiler (pyqt5ac)</a>\n<ul>\n<li><a href=\"#enter-pyqt5ac\" rel=\"nofollow\">Enter <strong>pyqt5ac</strong>!</a></li>\n</ul>\n</li>\n<li><a href=\"#installing\" rel=\"nofollow\">Installing</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a>\n<ul>\n<li><a href=\"#running-from-command-line\" rel=\"nofollow\">Running from Command Line</a></li>\n<li><a href=\"#running-from-python-script\" rel=\"nofollow\">Running from Python Script</a></li>\n</ul>\n</li>\n<li><a href=\"#configuration-options\" rel=\"nofollow\">Configuration Options</a></li>\n<li><a href=\"#example\" rel=\"nofollow\">Example</a>\n<ul>\n<li><a href=\"#option-1-yaml-config-file-recommended\" rel=\"nofollow\">Option 1: YAML Config File (Recommended)</a></li>\n<li><a href=\"#option-2-json-config-file-deprecated\" rel=\"nofollow\">Option 2: JSON Config File (Deprecated)</a></li>\n<li><a href=\"#option-3-python-script\" rel=\"nofollow\">Option 3: Python Script</a></li>\n<li><a href=\"#option-4-command-line\" rel=\"nofollow\">Option 4: Command Line</a></li>\n<li><a href=\"#resulting-file-structure\" rel=\"nofollow\">Resulting File Structure</a></li>\n</ul>\n</li>\n<li><a href=\"#support\" rel=\"nofollow\">Support</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h1>PyQt5 Auto Compiler (pyqt5ac)</h1>\n<p>pyqt5ac is a Python package for automatically compiling Qt's UI and QRC files into Python files.</p>\n<p>In PyQt5, <a href=\"https://www.qt.io/\" rel=\"nofollow\">Qt Designer</a> is the application used to create a GUI using a drag-and-drop interface. This interface is stored in a <em>.ui</em> file and any resources such as images or icons are stored in a <em>.qrc</em> file.</p>\n<p>These two filetypes must be compiled into Python files before they can be used in your Python program. There are a few ways to go about this currently:</p>\n<ol>\n<li>Manually compile the files using the command line and pyuic5 for <em>.ui</em> files and pyrcc5 for <em>.qrc</em> files.</li>\n<li>Compile the files each time the application is started up by calling pyuic5 and pyrcc5 within your Python script</li>\n</ol>\n<p>The downside to the first method is that it can be a tedious endeavor to compile the files, especially when one is faced with a larger project with many of these files that need to be compiled. Although the second method eliminates the tediousness of compilation, these files are compiled <strong>every</strong> time you run your script, regardless of if anything has been changed. This can cause a hit in performance and take longer to startup your script.</p>\n<h3>Enter <strong>pyqt5ac</strong>!</h3>\n<p>pyqt5ac provides a command-line interface (CLI) that searches through your files and automatically compiles any <em>.ui</em> or <em>.qrc</em> files. In addition, pyqt5ac can be called from your Python script. In both instances, <strong>ui and resource files are only compiled if they have been updated</strong>.</p>\n<h1>Installing</h1>\n<p>pyqt5ac is currently available on <a href=\"https://pypi.python.org/pypi/pyqt5ac/\" rel=\"nofollow\">PyPi</a>. The simplest way to\ninstall alone is using <code>pip</code> at a command line</p>\n<pre><code>pip install pyqt5ac\n</code></pre>\n<p>which installs the latest release.  To install the latest code from the repository (usually stable, but may have\nundocumented changes or bugs)</p>\n<pre><code>pip install git+https://github.com/addisonElliott/pyqt5ac.git\n</code></pre>\n<p>For developers, you can clone the pyqt5ac repository and run the <code>setup.py</code> file. Use the following commands to get\na copy from GitHub and install all dependencies</p>\n<pre><code>git clone https://github.com/addisonElliott/pyqt5ac.git\ncd pyqt5ac\npip install .[dev]\n</code></pre>\n<p>to install in 'develop' or 'editable' mode, where changes can be made to the local working code and Python will use\nthe updated code.</p>\n<h1>Getting Started</h1>\n<h2>Running from Command Line</h2>\n<p>If pyqt5ac is installed via pip, the command line interface can be called like any Unix based program in the terminal</p>\n<pre><code>pyqt5ac [OPTIONS] [IOPATHS]...\n</code></pre>\n<p>In the interface, the options have slightly different names so reference the help file of the interface for more information. The largest difference is that the ioPaths argument is instead a list of space delineated paths where the even items are the source file expression and the odd items are the destination file expression.</p>\n<p>The help file of the interface can be run as</p>\n<pre><code>pyqt5ac --help\n</code></pre>\n<h2>Running from Python Script</h2>\n<p>The following snippet of code below demonstrates how to call pyqt5ac from your Python script</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyqt5ac</span>\n\n<span class=\"k\">if</span> <span class=\"n\">debug</span><span class=\"p\">:</span>\n    <span class=\"n\">pyqt5ac</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">rccOptions</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">uicOptions</span><span class=\"o\">=</span><span class=\"s1\">'--from-imports'</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                 <span class=\"n\">ioPaths</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"s1\">'gui/*.ui'</span><span class=\"p\">,</span> <span class=\"s1\">'generated/</span><span class=\"si\">%%</span><span class=\"s1\">FILENAME</span><span class=\"si\">%%</span><span class=\"s1\">_ui.py'</span><span class=\"p\">],</span>\n                          <span class=\"p\">[</span><span class=\"s1\">'resources/*.qrc'</span><span class=\"p\">,</span> <span class=\"s1\">'generated/</span><span class=\"si\">%%</span><span class=\"s1\">FILENAME</span><span class=\"si\">%%</span><span class=\"s1\">_rc.py'</span><span class=\"p\">]])</span>\n</pre>\n<h1>Configuration Options</h1>\n<p>All of the options that can be specified to pyqt5ac can also be placed in a configuration file (JSON or YAML). My recommendation is to use a configuration file to allow easy compilation of your software. For testing purposes, I would use the options in the command line interface to make get everything working and then transcribe that into a configuration file for repeated use.</p>\n<p>Whether running via the command line or from a script, the arguments and options that can be given are the same. The valid options are:</p>\n<ul>\n<li><strong>rccOptions</strong> - Additional options to pass to the resource compiler. See the man page of pyrcc5 for more information on options. An example of a valid option would be \"-compress 1\". Default is to pass no options.</li>\n<li><strong>uicOptions</strong> - Additional options to pass to the UI compiler. See the man page of pyuic5 for more information on options. An example of a valid option would be '--from-imports'. Default is to pass no options.</li>\n<li><strong>force</strong> - Specifies whether to force compile all of the files found. The default is false meaning only outdated files will be compiled.</li>\n<li><strong>config</strong> - JSON or YAML configuration file that contains information about these parameters.</li>\n<li><strong>ioPaths</strong> - This is a 2D list containing information about what source files to compile and where to place the source files. The first column is the source file global expression (meaning you can use wildcards, ** for recursive folder search, ? for options, etc to match filenames) and the second column is the destination file expression. The destination file expression recognizes 'special' variables that will be replaced with information from the source filename:\n<ul>\n<li>%%FILENAME%% - Filename of the source file without the extension</li>\n<li>%%EXT%% - Extension excluding the period of the file (e.g. ui or qrc)</li>\n<li>%%DIRNAME%% - Directory of the source file</li>\n</ul>\n</li>\n<li><strong>variables</strong> - custom variables that can be used in the definition of the paths in <strong>ioPaths</strong>. For example, to limit the search of files to a specific directory, one can define a variable <code>BASEDIR</code> and then use it as <code>%%BASEDIR%%/gui/*.ui*</code></li>\n</ul>\n<h1>Example</h1>\n<p>Take the following file structure as an example project where any UI and QRC files need to be compiled. Assume that pyuic5 and pyrcc5 are located in /usr/bin and that '--from-imports' is desired for the UIC compiler.</p>\n<pre><code>|-- gui\n|   |-- mainWindow.ui\n|   |-- addDataDialog.ui\n|   `-- saveDataDialog.ui\n|-- resources\n|   |-- images\n|   |-- stylesheets\n|   |-- app.qrc\n|   `-- style.qrc\n|-- modules\n|   |-- welcome\n|   |   |-- module.ui\n|   |   `-- resources\n|   |       |-- images\n|   |       `-- module.qrc\n|   `-- dataProbe\n|       |-- module.ui\n|       `-- resources\n|           |-- images\n|           `-- module.qrc\n</code></pre>\n<p>The sections below demonstrate how to setup pyqt5ac to compile the necssary files given the file structure above.</p>\n<h2>Option 1: YAML Config File (Recommended)</h2>\n<pre><span class=\"nt\">ioPaths</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"gui/*.ui\"</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"generated/%%FILENAME%%_ui.py\"</span>\n  <span class=\"p p-Indicator\">-</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"resources/*.qrc\"</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"generated/%%FILENAME_%%%%EXT%%.py\"</span>\n  <span class=\"p p-Indicator\">-</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"modules/*/*.ui\"</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"%%DIRNAME%%/generated/%%FILENAME%%_ui.py\"</span>\n  <span class=\"p p-Indicator\">-</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"modules/*/resources/*.qrc\"</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"%%DIRNAME%%/generated/%%FILENAME%%_rc.py\"</span>\n\n<span class=\"nt\">uic_options</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">--from-imports</span>\n<span class=\"nt\">force</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">False</span>\n</pre>\n<p>Now run pyqt5ac from the command line or Python script using your config file:</p>\n<pre>pyqt5ac --config config.yml\n</pre>\n<p>or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyqt5ac</span>\n\n<span class=\"n\">pyqt5ac</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"s1\">'config.yml'</span><span class=\"p\">)</span>\n</pre>\n<h2>Option 2: JSON Config File (Deprecated)</h2>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"ioPaths\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"gui/*.ui\"</span><span class=\"p\">,</span> <span class=\"s2\">\"generated/%%FILENAME%%_ui.py\"</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"resources/*.qrc\"</span><span class=\"p\">,</span> <span class=\"s2\">\"generated/%%FILENAME%%_rc.py\"</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"modules/*/*.ui\"</span><span class=\"p\">,</span> <span class=\"s2\">\"%%DIRNAME%%/generated/%%FILENAME%%_ui.py\"</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"modules/*/resources/*.qrc\"</span><span class=\"p\">,</span> <span class=\"s2\">\"%%DIRNAME%%/generated/%%FILENAME%%_rc.py\"</span><span class=\"p\">]</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"rcc_options\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"uic_options\"</span><span class=\"p\">:</span> <span class=\"s2\">\"--from-imports\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"force\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Now run pyqt5ac from the command line or Python script using your config file:</p>\n<pre>pyqt5ac --config config.yml\n</pre>\n<p>or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyqt5ac</span>\n\n<span class=\"n\">pyqt5ac</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"s1\">'config.yml'</span><span class=\"p\">)</span>\n</pre>\n<h2>Option 3: Python Script</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyqt5ac</span>\n\n<span class=\"n\">pyqt5ac</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">uicOptions</span><span class=\"o\">=</span><span class=\"s1\">'--from-imports'</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">ioPaths</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"p\">[</span><span class=\"s1\">'gui/*.ui'</span><span class=\"p\">,</span> <span class=\"s1\">'generated/</span><span class=\"si\">%%</span><span class=\"s1\">FILENAME</span><span class=\"si\">%%</span><span class=\"s1\">_ui.py'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'resources/*.qrc'</span><span class=\"p\">,</span> <span class=\"s1\">'generated/</span><span class=\"si\">%%</span><span class=\"s1\">FILENAME</span><span class=\"si\">%%</span><span class=\"s1\">_rc.py'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'modules/*/*.ui'</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%%</span><span class=\"s1\">DIRNAME</span><span class=\"si\">%%</span><span class=\"s1\">/generated/</span><span class=\"si\">%%</span><span class=\"s1\">FILENAME</span><span class=\"si\">%%</span><span class=\"s1\">_ui.py'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'modules/*/resources/*.qrc'</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%%</span><span class=\"s1\">DIRNAME</span><span class=\"si\">%%</span><span class=\"s1\">/generated/</span><span class=\"si\">%%</span><span class=\"s1\">FILENAME</span><span class=\"si\">%%</span><span class=\"s1\">_rc.py'</span><span class=\"p\">]</span>\n    <span class=\"p\">])</span>\n</pre>\n<h2>Option 4: Command Line</h2>\n<pre>pyqt5ac --uic_options <span class=\"s2\">\"--from-imports\"</span> gui/*.ui generated/%%FILENAME%%_ui.py resources/*.qrc generated/%%FILENAME%%_rc.py modules/*/*.ui %%DIRNAME%%/generated/%%FILENAME%%_ui.py modules/*/resources/*.qrc %%DIRNAME%%/generated/%%FILENAME%%_rc.py\n</pre>\n<h2>Resulting File Structure</h2>\n<pre><code>|-- gui\n|   |-- mainWindow.ui\n|   |-- addDataDialog.ui\n|   `-- saveDataDialog.ui\n|-- resources\n|   |-- images\n|   |-- stylesheets\n|   |-- app.qrc\n|   `-- style.qrc\n|-- generated\n|   |-- mainWindow_ui.py\n|   |-- addDataDialog_ui.py\n|   |-- saveDataDialog_ui.py\n|   |-- app_rc.py\n|   `-- style_rc.py\n|-- modules\n|   |-- welcome\n|       |-- module.ui\n|       |-- resources\n|           |-- images\n|           `-- module.qrc\n|       `-- generated\n|           |-- module_ui.py\n|           `-- module_rc.py\n|   `-- dataProbe\n|       |-- module.ui\n|       |-- resources\n|           |-- images\n|           `-- module.qrc\n|       `-- generated\n|           |-- module_ui.py\n|           `-- module_rc.py\n</code></pre>\n<h1>Support</h1>\n<p>Issues and pull requests are encouraged!</p>\n<p>Bugs can be submitted through the <a href=\"https://github.com/addisonElliott/pyqt5ac/issues\" rel=\"nofollow\">issue tracker</a>.</p>\n<p>Pull requests are welcome too!</p>\n<h1>License</h1>\n<p>pyqt5ac has an <a href=\"https://github.com/addisonElliott/pyqt5ac/blob/master/LICENSE\" rel=\"nofollow\">MIT-based license</a>.</p>\n\n          </div>"}, "last_serial": 6948786, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9cdeb5f6bbc06f60880ea5e4aba9be79", "sha256": "5195eb5096984089102c0c2b84beae2e5dd8282bd020991a3e805dea6c3eefc7"}, "downloads": -1, "filename": "pyqt5ac-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9cdeb5f6bbc06f60880ea5e4aba9be79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8601, "upload_time": "2018-10-31T18:21:37", "upload_time_iso_8601": "2018-10-31T18:21:37.578803Z", "url": "https://files.pythonhosted.org/packages/a0/76/d84b22ee4dd37843ed9a16b3b60d79ad5194eea18b864dbd98f21083c99e/pyqt5ac-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a4f9dce569fb828396bcfa3f2aaa3a7", "sha256": "d317008eed9d7ffb165eaebed9c6dc2b8c914324df44f0a8d342638281a48a91"}, "downloads": -1, "filename": "pyqt5ac-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4a4f9dce569fb828396bcfa3f2aaa3a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8965, "upload_time": "2018-10-31T18:21:38", "upload_time_iso_8601": "2018-10-31T18:21:38.760339Z", "url": "https://files.pythonhosted.org/packages/3b/fd/b0263458f06b2ef3e8fa0f2fe7d07b1701454e5e68c5da128a718f550556/pyqt5ac-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9b251e8ad57df4f912eb1cd42ae9f109", "sha256": "70420cc1e5ec5cf65658148c90f7acfd5e73102a77629858014f9873f914c1db"}, "downloads": -1, "filename": "pyqt5ac-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b251e8ad57df4f912eb1cd42ae9f109", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8622, "upload_time": "2018-10-31T18:38:51", "upload_time_iso_8601": "2018-10-31T18:38:51.485336Z", "url": "https://files.pythonhosted.org/packages/d6/39/74b7d4973b30bbcba5f4a3bfa04eae9095583a34299130af0184f9406337/pyqt5ac-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0011c7d104a387418d1bc66d699523a8", "sha256": "2b3f27306dd6f5041e2bc1e9b8fd86f1f72e1abe460762cc0b82275b5d0ffeda"}, "downloads": -1, "filename": "pyqt5ac-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0011c7d104a387418d1bc66d699523a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8938, "upload_time": "2018-10-31T18:38:52", "upload_time_iso_8601": "2018-10-31T18:38:52.993802Z", "url": "https://files.pythonhosted.org/packages/9a/db/57f033e814d67116a2ed374c93778cc2a59ab33a72b3fb2edb7a7a28b61c/pyqt5ac-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "cb85ed5db1dd513774fd4b5c7bcfc7e0", "sha256": "68b019833a2a19aed9946420cd9fc2c613cfabfa8752181c6ecd4fc07dd42ce3"}, "downloads": -1, "filename": "pyqt5ac-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cb85ed5db1dd513774fd4b5c7bcfc7e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8842, "upload_time": "2018-11-06T17:02:14", "upload_time_iso_8601": "2018-11-06T17:02:14.288881Z", "url": "https://files.pythonhosted.org/packages/40/1c/cfd644f7f2c6451d268964c39e21152a3ccbe4f3ab4205c925827d35a6b1/pyqt5ac-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3bc7add4e15d1a1a775efc13fb99cff", "sha256": "c3839ee40c024d6d23519653bc3cb74ea4c793c9d77afe5533769d5c150f15b5"}, "downloads": -1, "filename": "pyqt5ac-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b3bc7add4e15d1a1a775efc13fb99cff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9138, "upload_time": "2018-11-06T17:02:16", "upload_time_iso_8601": "2018-11-06T17:02:16.112714Z", "url": "https://files.pythonhosted.org/packages/9e/98/91992518847bb290739a2e82cb025e7c9f083b5f588027e26b21e862808d/pyqt5ac-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "32f4cfd8ce3db2dec2b1edf9a99d7e2f", "sha256": "dcbf8c40b7362d4d58188a79d13d6ce5cc8676a42b37603e8f88178d47e783a5"}, "downloads": -1, "filename": "pyqt5ac-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "32f4cfd8ce3db2dec2b1edf9a99d7e2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 7795, "upload_time": "2018-11-09T07:15:21", "upload_time_iso_8601": "2018-11-09T07:15:21.769446Z", "url": "https://files.pythonhosted.org/packages/6e/39/1ba41c3ed1cd83f49b5b540cd67dfa30cb83e97c3562ff1f339516a24505/pyqt5ac-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df97ee13acadd5f289e345b809ca9cf8", "sha256": "cec8237124c9face516a1ff5bf86446d0d0fe947da461ad0b33357cf0d15e284"}, "downloads": -1, "filename": "pyqt5ac-1.0.3.tar.gz", "has_sig": false, "md5_digest": "df97ee13acadd5f289e345b809ca9cf8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8788, "upload_time": "2018-11-09T07:15:23", "upload_time_iso_8601": "2018-11-09T07:15:23.244909Z", "url": "https://files.pythonhosted.org/packages/a1/2e/ede8dd206ea4b439c951bb8466d24af59302acab13616037b2d479b3755e/pyqt5ac-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "e54bc78ce76432285695f8ab94a846a9", "sha256": "e1d077066ffb5b2eb5ced42037d2579191fe8456c356549ad39011acb1fe4a04"}, "downloads": -1, "filename": "pyqt5ac-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e54bc78ce76432285695f8ab94a846a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8569, "upload_time": "2020-03-28T22:56:36", "upload_time_iso_8601": "2020-03-28T22:56:36.562319Z", "url": "https://files.pythonhosted.org/packages/20/99/55d44698bc343642092df601d1e69ab3c7a18128b5e07b05261604d085ea/pyqt5ac-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "230357303d465740d9330332b38fe657", "sha256": "681daab038c798b5a9789c68501d1c0497b5a1258f27cc2ddca8331e6cf4c1e2"}, "downloads": -1, "filename": "pyqt5ac-1.0.4.tar.gz", "has_sig": false, "md5_digest": "230357303d465740d9330332b38fe657", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9012, "upload_time": "2020-03-28T22:56:37", "upload_time_iso_8601": "2020-03-28T22:56:37.619269Z", "url": "https://files.pythonhosted.org/packages/f5/cb/9153f076b36f28273b41ed8353756521e90b58a260b38f08290dc8d08cbb/pyqt5ac-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7f16d0a2a43fa333f798b117213a51a0", "sha256": "6d5133319f6a9086832705c341ed9f540535d43a2df564efa04db06b7b404793"}, "downloads": -1, "filename": "pyqt5ac-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7f16d0a2a43fa333f798b117213a51a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 9493, "upload_time": "2020-04-04T09:15:10", "upload_time_iso_8601": "2020-04-04T09:15:10.797023Z", "url": "https://files.pythonhosted.org/packages/98/28/f28adc95428174719b4b6cf2dcc9d5da2aee4277ee7b05055a1cf8efa90e/pyqt5ac-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bac2fb10c5268d232a263d4f57196c3", "sha256": "b81b7e70c8424645a8d82bf60cf76bb699c5ebfd0b767ba713be8bb0503ecf99"}, "downloads": -1, "filename": "pyqt5ac-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3bac2fb10c5268d232a263d4f57196c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10262, "upload_time": "2020-04-04T09:15:12", "upload_time_iso_8601": "2020-04-04T09:15:12.160947Z", "url": "https://files.pythonhosted.org/packages/eb/c2/7baeb4b3af1d2895a1ad058068d966ff4fb1e5761505b85b19b4880d49f9/pyqt5ac-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f16d0a2a43fa333f798b117213a51a0", "sha256": "6d5133319f6a9086832705c341ed9f540535d43a2df564efa04db06b7b404793"}, "downloads": -1, "filename": "pyqt5ac-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7f16d0a2a43fa333f798b117213a51a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 9493, "upload_time": "2020-04-04T09:15:10", "upload_time_iso_8601": "2020-04-04T09:15:10.797023Z", "url": "https://files.pythonhosted.org/packages/98/28/f28adc95428174719b4b6cf2dcc9d5da2aee4277ee7b05055a1cf8efa90e/pyqt5ac-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bac2fb10c5268d232a263d4f57196c3", "sha256": "b81b7e70c8424645a8d82bf60cf76bb699c5ebfd0b767ba713be8bb0503ecf99"}, "downloads": -1, "filename": "pyqt5ac-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3bac2fb10c5268d232a263d4f57196c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10262, "upload_time": "2020-04-04T09:15:12", "upload_time_iso_8601": "2020-04-04T09:15:12.160947Z", "url": "https://files.pythonhosted.org/packages/eb/c2/7baeb4b3af1d2895a1ad058068d966ff4fb1e5761505b85b19b4880d49f9/pyqt5ac-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:46 2020"}