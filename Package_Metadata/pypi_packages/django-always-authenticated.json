{"info": {"author": "Daniel Hepper", "author_email": "daniel@hepper.net", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "===========================\nDjango Always Authenticated\n===========================\n\nA middleware that ensures that a request always has an authenticated user.\n\nIf the request doesn't have an authenticated user, it logs in a default\nuser. If the default user doesn't exist, it is created.\n\nCompatibility\n=============\nThis middleware has been tested with these versions of Django:\n\n* 1.7\n* 1.8\n* 1.9\n* 1.10\n* master (at the time of the release)\n\nSetup\n=====\n\nInstall from PyPI::\n\n    pip install django_always_authenticated\n\nAdd to ``MIDDLEWARE`` (``MIDDLEWARE_CLASSES`` for Django <1.10) in settings file::\n\n    MIDDLEWARE = (\n        ...\n        'always_authenticated.middleware.AlwaysAuthenticatedMiddleware',\n    )\n\nAs a security safeguard, the middleware will raise an\n``ImproperlyConfiguredException`` when running in production mode\n(``DEBUG=False``).\nTo run the middleware in production, set ``ALWAYS_AUTHENTICATED_DEBUG_ONLY`` to\n``False``.\n\nConfiguration\n=============\n\nThis middleware reads these settings:\n\nALWAYS_AUTHENTICATED_USERNAME\n-----------------------------\nA string with the name of the default user, defaults to ``'user'``.\n\nALWAYS_AUTHENTICATED_USER_DEFAULTS\n----------------------------------\nA dict with additional default values to set when creating the user.\n\nALWAYS_AUTHENTICATED_DEBUG_ONLY\n-------------------------------\nSet to `False` to allow running with DEBUG=False.\n\nExample project\n===============\nThere is a very single example project that demonstrates the middleware in the\ndirectory `example_project`.\n\nRunning Tests\n=============\nTo run the tests, install the requirements and run py.test::\n\n    pip install -r requirements.txt\n    py.test\n\nYou can also use tox to run the tests with all supported versions of\nPython and Django::\n\n    pip install tox\n    tox", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dhepper/django-always-authenticated", "keywords": null, "license": "Simplified BSD License", "maintainer": null, "maintainer_email": null, "name": "django-always-authenticated", "package_url": "https://pypi.org/project/django-always-authenticated/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-always-authenticated/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dhepper/django-always-authenticated"}, "release_url": "https://pypi.org/project/django-always-authenticated/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A Django middleware that ensures every request has anauthenticated user.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A middleware that ensures that a request always has an authenticated user.</p>\n<p>If the request doesn\u2019t have an authenticated user, it logs in a default\nuser. If the default user doesn\u2019t exist, it is created.</p>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>This middleware has been tested with these versions of Django:</p>\n<ul>\n<li>1.7</li>\n<li>1.8</li>\n<li>1.9</li>\n<li>1.10</li>\n<li>master (at the time of the release)</li>\n</ul>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Install from PyPI:</p>\n<pre>pip install django_always_authenticated\n</pre>\n<p>Add to <tt>MIDDLEWARE</tt> (<tt>MIDDLEWARE_CLASSES</tt> for Django &lt;1.10) in settings file:</p>\n<pre>MIDDLEWARE = (\n    ...\n    'always_authenticated.middleware.AlwaysAuthenticatedMiddleware',\n)\n</pre>\n<p>As a security safeguard, the middleware will raise an\n<tt>ImproperlyConfiguredException</tt> when running in production mode\n(<tt>DEBUG=False</tt>).\nTo run the middleware in production, set <tt>ALWAYS_AUTHENTICATED_DEBUG_ONLY</tt> to\n<tt>False</tt>.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>This middleware reads these settings:</p>\n<div id=\"always-authenticated-username\">\n<h3>ALWAYS_AUTHENTICATED_USERNAME</h3>\n<p>A string with the name of the default user, defaults to <tt>'user'</tt>.</p>\n</div>\n<div id=\"always-authenticated-user-defaults\">\n<h3>ALWAYS_AUTHENTICATED_USER_DEFAULTS</h3>\n<p>A dict with additional default values to set when creating the user.</p>\n</div>\n<div id=\"always-authenticated-debug-only\">\n<h3>ALWAYS_AUTHENTICATED_DEBUG_ONLY</h3>\n<p>Set to <cite>False</cite> to allow running with DEBUG=False.</p>\n</div>\n</div>\n<div id=\"example-project\">\n<h2>Example project</h2>\n<p>There is a very single example project that demonstrates the middleware in the\ndirectory <cite>example_project</cite>.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>To run the tests, install the requirements and run py.test:</p>\n<pre>pip install -r requirements.txt\npy.test\n</pre>\n<p>You can also use tox to run the tests with all supported versions of\nPython and Django:</p>\n<pre>pip install tox\ntox\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2542288, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "38b75e81d29d19528078078a846da4ee", "sha256": "8f111220d27cc1951f965afc63ffa42e716e1ca7f84ab5aa010bd73c0fde4e76"}, "downloads": -1, "filename": "django-always-authenticated-0.1.0.tar.gz", "has_sig": false, "md5_digest": "38b75e81d29d19528078078a846da4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2918, "upload_time": "2016-12-28T10:50:27", "upload_time_iso_8601": "2016-12-28T10:50:27.390151Z", "url": "https://files.pythonhosted.org/packages/9c/69/b083b81ab31692412388fbd3a799156891b6f7d27e95c192caba7ada5a31/django-always-authenticated-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38b75e81d29d19528078078a846da4ee", "sha256": "8f111220d27cc1951f965afc63ffa42e716e1ca7f84ab5aa010bd73c0fde4e76"}, "downloads": -1, "filename": "django-always-authenticated-0.1.0.tar.gz", "has_sig": false, "md5_digest": "38b75e81d29d19528078078a846da4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2918, "upload_time": "2016-12-28T10:50:27", "upload_time_iso_8601": "2016-12-28T10:50:27.390151Z", "url": "https://files.pythonhosted.org/packages/9c/69/b083b81ab31692412388fbd3a799156891b6f7d27e95c192caba7ada5a31/django-always-authenticated-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:42 2020"}