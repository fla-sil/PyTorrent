{"info": {"author": "Dwight Hubbard", "author_email": "d@d-h.us", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: POSIX :: BSD :: FreeBSD", "Operating System :: POSIX :: Linux", "Operating System :: POSIX :: SunOS/Solaris", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "django-easy-app\n***************\n\nThis is a django app that trys to simplify using django.  Currently\nit has features that do the following:\n\n* An *easy_app* script that allows for creating new django projects\n  that are set up with the djang0-easy-app functionality.\n* A django-easy-app django app has the following functionality\n  that simplify using django.\n* The ability to specify the url routing using a new \"route\" \n  attribute on django class based view classes.  This akes it\n  possible to write and use class based views without needing\n  to understand regular expressions and seperately update the \n  urls.py.\n* Adds a *starteasyapp* command to manage.py to allow for easily\n  creating additional django-easy-app enabled django apps.\n    \nQuickstart\n==========\n\nHere are some steps for getting things going\n\nInstall django-easy-app\n-----------------------\nOnce django-easy-app has been packaged it will be installable\nusing pip as follows::\n\n  pip install django-easy-app\n\nSet up a new django project\n---------------------------\nCreate a new python project using the django_easy command like this::\n\n    django_easy startproject project_name app_name\n\nExample::\n\n    $ django_easy startproject foo_project foo_app\n    Creating easyapp named: foo_app\n    $ tree foo_project\n    foo_project\n    \u251c\u2500\u2500 foo_app\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 admin.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 migrations\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 models.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 tests.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 urls.py\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 views.py\n    \u251c\u2500\u2500 foo_project\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.pyc\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.pyc\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 urls.py\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 wsgi.py\n    \u2514\u2500\u2500 manage.py\n\n    3 directories, 14 files\n\nCreate views\n------------\nIn the views.py file define a variable named \"easydjango\" and set the value\nto true.\n\nMake sure each view that should be accessible from the web has a `*route*`\nattribute that contains the part of the url that should be associated with the\nview.  This should not include any other part of the url.\n\nSo for example foo_app.view.ExampleView below has a route value of '' which\nwill cause it to be accessible at http://hostname:port/foo_app/\n\n.. code-block:: python\n\n    from django.http import HttpResponse\n    from django.views.generic import View\n\n    easydjango = True\n\n    class NameView(View):\n        route = ''\n        def get(self, request):\n            name = request.GET.get('name', 'World!')\n            return HttpResponse('Hello %s' % name)\n\n.. image:: docs/images/no_args.png\n   :scale: 50\n   :alt: View without arguments\n\n.. image:: docs/images/with_args.png\n   :scale: 50\n   :alt: View passing a name argument", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dwighthubbard/django-easy-app", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-easy-app", "package_url": "https://pypi.org/project/django-easy-app/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-easy-app/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dwighthubbard/django-easy-app"}, "release_url": "https://pypi.org/project/django-easy-app/0.0.27/", "requires_dist": null, "requires_python": null, "summary": "Extend django-admin to create apps that are easier to set", "version": "0.0.27", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a django app that trys to simplify using django.  Currently\nit has features that do the following:</p>\n<ul>\n<li>An <em>easy_app</em> script that allows for creating new django projects\nthat are set up with the djang0-easy-app functionality.</li>\n<li>A django-easy-app django app has the following functionality\nthat simplify using django.</li>\n<li>The ability to specify the url routing using a new \u201croute\u201d\nattribute on django class based view classes.  This akes it\npossible to write and use class based views without needing\nto understand regular expressions and seperately update the\nurls.py.</li>\n<li>Adds a <em>starteasyapp</em> command to manage.py to allow for easily\ncreating additional django-easy-app enabled django apps.</li>\n</ul>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Here are some steps for getting things going</p>\n<div id=\"install-django-easy-app\">\n<h3>Install django-easy-app</h3>\n<p>Once django-easy-app has been packaged it will be installable\nusing pip as follows:</p>\n<pre>pip install django-easy-app\n</pre>\n</div>\n<div id=\"set-up-a-new-django-project\">\n<h3>Set up a new django project</h3>\n<p>Create a new python project using the django_easy command like this:</p>\n<pre>django_easy startproject project_name app_name\n</pre>\n<p>Example:</p>\n<pre>$ django_easy startproject foo_project foo_app\nCreating easyapp named: foo_app\n$ tree foo_project\nfoo_project\n\u251c\u2500\u2500 foo_app\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 admin.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 migrations\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 models.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 tests.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 urls.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 views.py\n\u251c\u2500\u2500 foo_project\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.pyc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.pyc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 urls.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wsgi.py\n\u2514\u2500\u2500 manage.py\n\n3 directories, 14 files\n</pre>\n</div>\n<div id=\"create-views\">\n<h3>Create views</h3>\n<p>In the views.py file define a variable named \u201ceasydjango\u201d and set the value\nto true.</p>\n<p>Make sure each view that should be accessible from the web has a <cite>*route*</cite>\nattribute that contains the part of the url that should be associated with the\nview.  This should not include any other part of the url.</p>\n<p>So for example foo_app.view.ExampleView below has a route value of \u2018\u2019 which\nwill cause it to be accessible at <a href=\"http://hostname:port/foo_app/\" rel=\"nofollow\">http://hostname:port/foo_app/</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n\n<span class=\"n\">easydjango</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">NameView</span><span class=\"p\">(</span><span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"n\">route</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'World!'</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s1\">'Hello </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"View without arguments\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28b89876577e79f0c6f3688708183b9232054915/646f63732f696d616765732f6e6f5f617267732e706e67\">\n<img alt=\"View passing a name argument\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3da6cd1d30e2bad576908c15ab4ec0ed14f8196/646f63732f696d616765732f776974685f617267732e706e67\">\n</div>\n</div>\n\n          </div>"}, "last_serial": 1529640, "releases": {"0.0.27": [{"comment_text": "", "digests": {"md5": "ba0fb92eb7799262671fe3535c7ba747", "sha256": "8be089266b99d8283e8ac5f82741fa96aa3219f7411d17ab90d959099fc588af"}, "downloads": -1, "filename": "django-easy-app-0.0.27.tar.gz", "has_sig": false, "md5_digest": "ba0fb92eb7799262671fe3535c7ba747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6678, "upload_time": "2015-05-01T17:25:32", "upload_time_iso_8601": "2015-05-01T17:25:32.245995Z", "url": "https://files.pythonhosted.org/packages/50/1d/485c8e3487862c9e297c4f92729a403a00fa2041d85537866f94180f4d0d/django-easy-app-0.0.27.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba0fb92eb7799262671fe3535c7ba747", "sha256": "8be089266b99d8283e8ac5f82741fa96aa3219f7411d17ab90d959099fc588af"}, "downloads": -1, "filename": "django-easy-app-0.0.27.tar.gz", "has_sig": false, "md5_digest": "ba0fb92eb7799262671fe3535c7ba747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6678, "upload_time": "2015-05-01T17:25:32", "upload_time_iso_8601": "2015-05-01T17:25:32.245995Z", "url": "https://files.pythonhosted.org/packages/50/1d/485c8e3487862c9e297c4f92729a403a00fa2041d85537866f94180f4d0d/django-easy-app-0.0.27.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:28 2020"}