{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "ploomber\n========\n\n.. image:: https://travis-ci.org/ploomber/ploomber.svg?branch=master\n    :target: https://travis-ci.org/ploomber/ploomber.svg?branch=master\n\n.. image:: https://readthedocs.org/projects/ploomber/badge/?version=latest\n    :target: https://ploomber.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n`Click here for documentation <https://ploomber.readthedocs.io/>`_. `Code on Github <https://github.com/ploomber/ploomber>`_.\n\nploomber is an expressive workflow management library that provides incremental builds, testing and debugging tools to accelerate DS/ML pipeline development.\n\nCompatible with Python 3.5 and higher.\n\nAt a glance\n-----------\n\n* Airflow-like syntax to declare **pipelines as code**\n* Interactive. Once a pipeline is declared, you can **build it right away**, inspect it, check status or even generate HTML reports, use it in a Python session or a Jupyter notebook\n* Fast experimentation. Modify your source code and ploomber will figure out **which tasks to run** and which ones to skip **based on source code changes**\n* Test-driven. Use `on_finish` hooks to **check data assumptions** (e.g. verify that an output data frame has no NAs, an \"age\" column has only positive numbers, etc)\n* SQL-friendly. **SQL scripts can be parametrized** for simplicity and consistency using jinja2\n* Notebook-friendly. **Generate reports** in Jupyter notebook format (or HTML) by executing parametrized notebooks using papermill\n* Switch configurations. Automatically **switch pipeline configuration based on the current environment**, for example, make all pipeline output files go to `/data/project/{{user}}`, where `{{user}}` will be automatically replaced depending on the current user\n* Reduce boilerplate code by using the **Tasks library**, for example, dump SQL tables or upload a local file to a database\n\n\nInstall\n-------\n\nIf you want to try out everything ploomber has to offer:\n\n.. code-block:: shell\n\n    pip install \"ploomber[all]\"\n\nNote that installing everything will attemp to install pygraphviz, which\ndepends on graphviz, you have to install that first:\n\n.. code-block:: shell\n\n    # if you are using conda (recommended)\n    conda install graphviz\n    # if you are using homebew\n    brew install graphviz\n    # for other systems, see: https://www.graphviz.org/download/\n\nIf you want to start with the minimal amount of dependencies:\n\n.. code-block:: shell\n\n    pip install ploomber\n\n\nExample\n-------\n\n.. code-block:: python\n\n    from ploomber import DAG\n    from ploomber.products import File\n    from ploomber.tasks import PythonCallable, SQLDump\n    from ploomber.clients import SQLAlchemyClient\n\n    dag = DAG()\n\n    # the first task dumps data from the db to the local filesystem\n    task_dump = SQLDump('SELECT * FROM example',\n                        File(tmp_dir / 'example.csv'),\n                        dag,\n                        name='dump',\n                        client=SQLAlchemyClient(uri),\n                        chunksize=None)\n\n    def _add_one(upstream, product):\n        \"\"\"Add one to column a\n        \"\"\"\n        df = pd.read_csv(str(upstream['dump']))\n        df['a'] = df['a'] + 1\n        df.to_csv(str(product), index=False)\n\n    def on_finish(task):\n        df = pd.read_csv(str(task.product))\n        assert not df['a'].isna().sum()\n\n    # we convert the Python function to a Task\n    task_add_one = PythonCallable(_add_one,\n                                  File(tmp_dir / 'add_one.csv'),\n                                  dag,\n                                  name='add_one')\n    # verify there are no NAs in columns a\n    task_add_one.on_finish = on_finish\n\n    # declare how tasks relate to each other\n    task_dump >> task_add_one\n\n    # run the pipeline - incremental builds: ploomber will keep track of each\n    # task's source code and will only execute outdated tasks in the next run\n    dag.build()\n\n    # a DAG also serves as a tool to interact with your pipeline, for example,\n    # status will return a summary table\n    dag.status()\n\n    # start a debugging session (only works if task is a PythonCallable)\n    dag['add_one'].debug()\n\nCHANGELOG\n=========\n\n0.3.5 (2020-05-03)\n-------------------\n* Bug fixes #88, #89, #90, #84, #91\n* Modifies Env API: Env() is now Env.load(), Env.start() is now Env()\n* New advanced Env guide added to docs\n* Env can now be used with a context manager\n* Improved DAGConfigurator API\n* Deletes logger configuration in executors constructors, logging is available via DAGConfigurator\n\n\n0.3.4 (2020-04-25)\n-------------------\n* Dependencies cleanup\n* Removed (numpydoc) as dependency, now optional\n* A few bug fixes: #79, #71\n* All warnings are captured and shown at the end (Serial executor)\n* Moves differ parameter from DAG constructor to DAGConfigurator\n\n\n0.3.3 (2020-04-23)\n-------------------\n* Cleaned up some modules, deprecated some rarely used functionality\n* Improves documentation aimed to developers looking to extend ploomber\n* Introduces DAGConfigurator for advanced DAG configuration [Experimental API]\n* Adds task to upload files to S3 (ploomber.tasks.UploadToS3), requires boto3\n* Adds DAG-level on_finish and on_failure hooks\n* Support for enabling logging in entry points (via --logging)\n* Support for starting an interactive session using entry points (via python -i -m)\n* Improved support for database drivers that can only send one query at a time\n* Improved repr for SQLAlchemyClient, shows URI (but hiddes password)\n* PythonCallable now validates signature against params at render time\n* Bug fixes\n\n\n0.3.2 (2020-04-07)\n------------------\n\n* Faster Product status checking, now performed at rendering time\n* New products: GenericProduct and GenericSQLRelation for Products that do not have a specific implementation (e.g. you can use Hive with the DBAPI client + GenericSQLRelation)\n* Improved DAG build reports, subselect columns, transform to pandas.DataFrame and dict\n* Parallel executor now returns build reports, just like the Serial executor\n\n\n\n0.3.1 (2020-04-01)\n------------------\n\n* DAG parallel executor\n* Interact with pipelines from the command line (entry module)\n* Bug fixes\n* Refactored access to Product.metadata\n\n\n0.3 (2020-03-20)\n----------------\n* New Quickstart and User Guide section in documentation\n* DAG rendering and build now continue until no more tasks can render/build (instead of failing at the first exception)\n* New @with_env and @load_env decorators for managing environments\n* Env expansion ({{user}} expands to the current, also {{git}} and {{version}} available)\n* Task.name is now optional when Task is initialized with a source that has __name__ attribute (Python functions) or a name attribute (like Placeholders returned from SourceLoader)\n* New Task.on_render hook\n* Bug fixes\n* A lot of new tests\n* Now compatible with Python 3.5 and higher\n\n0.2.1 (2020-02-20)\n------------------\n\n* Adds integration with pdb via PythonCallable.debug\n* Env.start now accepts a filename to look for\n* Improvements to data_frame_validator\n\n0.2 (2020-02-13)\n----------------\n\n* Simplifies installation\n* Deletes BashCommand, use ShellScript\n* More examples added\n* Refactored env module\n* Renames SQLStore to SourceLoader\n* Improvements to SQLStore\n* Improved documentation\n* Renamed PostgresCopy to PostgresCopyFrom\n* SQLUpload and PostgresCopy have now the same API\n* A few fixes to PostgresCopy (#1, #2)\n\n0.1\n---\n\n* First release\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ploomber/ploomber", "keywords": "", "license": "A license", "maintainer": "", "maintainer_email": "", "name": "ploomber", "package_url": "https://pypi.org/project/ploomber/", "platform": "", "project_url": "https://pypi.org/project/ploomber/", "project_urls": {"Homepage": "https://github.com/ploomber/ploomber"}, "release_url": "https://pypi.org/project/ploomber/0.3.5/", "requires_dist": ["pyyaml", "networkx", "jinja2", "tabulate", "humanize", "tqdm", "sqlparse", "autopep8", "parso", "mistune", "pygments", "sqlalchemy", "importlib-resources ; python_version < \"3.7\"", "pandas ; extra == 'all'", "pyarrow ; extra == 'all'", "paramiko ; extra == 'all'", "boto3 ; extra == 'all'", "numpydoc ; extra == 'all'", "matplotlib ; extra == 'all'", "pygraphviz ; extra == 'all'", "papermill ; extra == 'all'", "jupytext ; extra == 'all'", "ipykernel (>=1.5.2) ; extra == 'all'", "jupyter-client (>=5.3.1) ; extra == 'all'", "nbconvert (>=5.6.0) ; extra == 'all'", "parso ; extra == 'all'", "pyflakes ; extra == 'all'", "papermill ; extra == 'nb'", "jupytext ; extra == 'nb'", "ipykernel (>=1.5.2) ; extra == 'nb'", "jupyter-client (>=5.3.1) ; extra == 'nb'", "nbconvert (>=5.6.0) ; extra == 'nb'", "parso ; extra == 'nb'", "pyflakes ; extra == 'nb'", "matplotlib ; extra == 'plot'", "pygraphviz ; extra == 'plot'"], "requires_python": "", "summary": "A Python library for developing great data pipelines", "version": "0.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ploomber\">\n<h2>ploomber</h2>\n<a href=\"https://travis-ci.org/ploomber/ploomber.svg?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/ploomber/ploomber.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/689be5596cf15385cfe7dc2b7e72d8501ab825d6/68747470733a2f2f7472617669732d63692e6f72672f706c6f6f6d6265722f706c6f6f6d6265722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ploomber.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a049ef55ceb1ffa81536a8c14161780991a496d0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706c6f6f6d6265722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p><a href=\"https://ploomber.readthedocs.io/\" rel=\"nofollow\">Click here for documentation</a>. <a href=\"https://github.com/ploomber/ploomber\" rel=\"nofollow\">Code on Github</a>.</p>\n<p>ploomber is an expressive workflow management library that provides incremental builds, testing and debugging tools to accelerate DS/ML pipeline development.</p>\n<p>Compatible with Python 3.5 and higher.</p>\n<div id=\"at-a-glance\">\n<h3>At a glance</h3>\n<ul>\n<li>Airflow-like syntax to declare <strong>pipelines as code</strong></li>\n<li>Interactive. Once a pipeline is declared, you can <strong>build it right away</strong>, inspect it, check status or even generate HTML reports, use it in a Python session or a Jupyter notebook</li>\n<li>Fast experimentation. Modify your source code and ploomber will figure out <strong>which tasks to run</strong> and which ones to skip <strong>based on source code changes</strong></li>\n<li>Test-driven. Use <cite>on_finish</cite> hooks to <strong>check data assumptions</strong> (e.g. verify that an output data frame has no NAs, an \u201cage\u201d column has only positive numbers, etc)</li>\n<li>SQL-friendly. <strong>SQL scripts can be parametrized</strong> for simplicity and consistency using jinja2</li>\n<li>Notebook-friendly. <strong>Generate reports</strong> in Jupyter notebook format (or HTML) by executing parametrized notebooks using papermill</li>\n<li>Switch configurations. Automatically <strong>switch pipeline configuration based on the current environment</strong>, for example, make all pipeline output files go to <cite>/data/project/{{user}}</cite>, where <cite>{{user}}</cite> will be automatically replaced depending on the current user</li>\n<li>Reduce boilerplate code by using the <strong>Tasks library</strong>, for example, dump SQL tables or upload a local file to a database</li>\n</ul>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<p>If you want to try out everything ploomber has to offer:</p>\n<pre>pip install <span class=\"s2\">\"ploomber[all]\"</span>\n</pre>\n<p>Note that installing everything will attemp to install pygraphviz, which\ndepends on graphviz, you have to install that first:</p>\n<pre><span class=\"c1\"># if you are using conda (recommended)\n</span>conda install graphviz\n<span class=\"c1\"># if you are using homebew\n</span>brew install graphviz\n<span class=\"c1\"># for other systems, see: https://www.graphviz.org/download/</span>\n</pre>\n<p>If you want to start with the minimal amount of dependencies:</p>\n<pre>pip install ploomber\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ploomber</span> <span class=\"kn\">import</span> <span class=\"n\">DAG</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ploomber.products</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ploomber.tasks</span> <span class=\"kn\">import</span> <span class=\"n\">PythonCallable</span><span class=\"p\">,</span> <span class=\"n\">SQLDump</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ploomber.clients</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemyClient</span>\n\n<span class=\"n\">dag</span> <span class=\"o\">=</span> <span class=\"n\">DAG</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># the first task dumps data from the db to the local filesystem</span>\n<span class=\"n\">task_dump</span> <span class=\"o\">=</span> <span class=\"n\">SQLDump</span><span class=\"p\">(</span><span class=\"s1\">'SELECT * FROM example'</span><span class=\"p\">,</span>\n                    <span class=\"n\">File</span><span class=\"p\">(</span><span class=\"n\">tmp_dir</span> <span class=\"o\">/</span> <span class=\"s1\">'example.csv'</span><span class=\"p\">),</span>\n                    <span class=\"n\">dag</span><span class=\"p\">,</span>\n                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dump'</span><span class=\"p\">,</span>\n                    <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">SQLAlchemyClient</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"p\">),</span>\n                    <span class=\"n\">chunksize</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">_add_one</span><span class=\"p\">(</span><span class=\"n\">upstream</span><span class=\"p\">,</span> <span class=\"n\">product</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Add one to column a\n    \"\"\"</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">upstream</span><span class=\"p\">[</span><span class=\"s1\">'dump'</span><span class=\"p\">]))</span>\n    <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">product</span><span class=\"p\">),</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">on_finish</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">):</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">product</span><span class=\"p\">))</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">isna</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># we convert the Python function to a Task</span>\n<span class=\"n\">task_add_one</span> <span class=\"o\">=</span> <span class=\"n\">PythonCallable</span><span class=\"p\">(</span><span class=\"n\">_add_one</span><span class=\"p\">,</span>\n                              <span class=\"n\">File</span><span class=\"p\">(</span><span class=\"n\">tmp_dir</span> <span class=\"o\">/</span> <span class=\"s1\">'add_one.csv'</span><span class=\"p\">),</span>\n                              <span class=\"n\">dag</span><span class=\"p\">,</span>\n                              <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'add_one'</span><span class=\"p\">)</span>\n<span class=\"c1\"># verify there are no NAs in columns a</span>\n<span class=\"n\">task_add_one</span><span class=\"o\">.</span><span class=\"n\">on_finish</span> <span class=\"o\">=</span> <span class=\"n\">on_finish</span>\n\n<span class=\"c1\"># declare how tasks relate to each other</span>\n<span class=\"n\">task_dump</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">task_add_one</span>\n\n<span class=\"c1\"># run the pipeline - incremental builds: ploomber will keep track of each</span>\n<span class=\"c1\"># task's source code and will only execute outdated tasks in the next run</span>\n<span class=\"n\">dag</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># a DAG also serves as a tool to interact with your pipeline, for example,</span>\n<span class=\"c1\"># status will return a summary table</span>\n<span class=\"n\">dag</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># start a debugging session (only works if task is a PythonCallable)</span>\n<span class=\"n\">dag</span><span class=\"p\">[</span><span class=\"s1\">'add_one'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<div id=\"id1\">\n<h3>0.3.5 (2020-05-03)</h3>\n<ul>\n<li>Bug fixes #88, #89, #90, #84, #91</li>\n<li>Modifies Env API: Env() is now Env.load(), Env.start() is now Env()</li>\n<li>New advanced Env guide added to docs</li>\n<li>Env can now be used with a context manager</li>\n<li>Improved DAGConfigurator API</li>\n<li>Deletes logger configuration in executors constructors, logging is available via DAGConfigurator</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.4 (2020-04-25)</h3>\n<ul>\n<li>Dependencies cleanup</li>\n<li>Removed (numpydoc) as dependency, now optional</li>\n<li>A few bug fixes: #79, #71</li>\n<li>All warnings are captured and shown at the end (Serial executor)</li>\n<li>Moves differ parameter from DAG constructor to DAGConfigurator</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.3 (2020-04-23)</h3>\n<ul>\n<li>Cleaned up some modules, deprecated some rarely used functionality</li>\n<li>Improves documentation aimed to developers looking to extend ploomber</li>\n<li>Introduces DAGConfigurator for advanced DAG configuration [Experimental API]</li>\n<li>Adds task to upload files to S3 (ploomber.tasks.UploadToS3), requires boto3</li>\n<li>Adds DAG-level on_finish and on_failure hooks</li>\n<li>Support for enabling logging in entry points (via \u2013logging)</li>\n<li>Support for starting an interactive session using entry points (via python -i -m)</li>\n<li>Improved support for database drivers that can only send one query at a time</li>\n<li>Improved repr for SQLAlchemyClient, shows URI (but hiddes password)</li>\n<li>PythonCallable now validates signature against params at render time</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.2 (2020-04-07)</h3>\n<ul>\n<li>Faster Product status checking, now performed at rendering time</li>\n<li>New products: GenericProduct and GenericSQLRelation for Products that do not have a specific implementation (e.g. you can use Hive with the DBAPI client + GenericSQLRelation)</li>\n<li>Improved DAG build reports, subselect columns, transform to pandas.DataFrame and dict</li>\n<li>Parallel executor now returns build reports, just like the Serial executor</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.3.1 (2020-04-01)</h3>\n<ul>\n<li>DAG parallel executor</li>\n<li>Interact with pipelines from the command line (entry module)</li>\n<li>Bug fixes</li>\n<li>Refactored access to Product.metadata</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3 (2020-03-20)</h3>\n<ul>\n<li>New Quickstart and User Guide section in documentation</li>\n<li>DAG rendering and build now continue until no more tasks can render/build (instead of failing at the first exception)</li>\n<li>New @with_env and @load_env decorators for managing environments</li>\n<li>Env expansion ({{user}} expands to the current, also {{git}} and {{version}} available)</li>\n<li>Task.name is now optional when Task is initialized with a source that has __name__ attribute (Python functions) or a name attribute (like Placeholders returned from SourceLoader)</li>\n<li>New Task.on_render hook</li>\n<li>Bug fixes</li>\n<li>A lot of new tests</li>\n<li>Now compatible with Python 3.5 and higher</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.2.1 (2020-02-20)</h3>\n<ul>\n<li>Adds integration with pdb via PythonCallable.debug</li>\n<li>Env.start now accepts a filename to look for</li>\n<li>Improvements to data_frame_validator</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.2 (2020-02-13)</h3>\n<ul>\n<li>Simplifies installation</li>\n<li>Deletes BashCommand, use ShellScript</li>\n<li>More examples added</li>\n<li>Refactored env module</li>\n<li>Renames SQLStore to SourceLoader</li>\n<li>Improvements to SQLStore</li>\n<li>Improved documentation</li>\n<li>Renamed PostgresCopy to PostgresCopyFrom</li>\n<li>SQLUpload and PostgresCopy have now the same API</li>\n<li>A few fixes to PostgresCopy (#1, #2)</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.1</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7159837, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "213076d0356c6b4532b93f5a4d7a50eb", "sha256": "c06969cf79c8d24bacb74637f440271ac17afd2ff503911c000385db5e6eed72"}, "downloads": -1, "filename": "ploomber-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "213076d0356c6b4532b93f5a4d7a50eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 74393, "upload_time": "2020-01-20T23:34:13", "upload_time_iso_8601": "2020-01-20T23:34:13.305806Z", "url": "https://files.pythonhosted.org/packages/a0/1c/1c778bd67ee59d5d508554a5ad0795195c443c057808e95151e6f1f20c2f/ploomber-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d70d74c0d32faf079c0bfc66a6258a89", "sha256": "54927b5d5ba756403349c03947d80cde40b1ae4d1c8f6026b64ecc2a56af71d1"}, "downloads": -1, "filename": "ploomber-0.1.tar.gz", "has_sig": false, "md5_digest": "d70d74c0d32faf079c0bfc66a6258a89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53761, "upload_time": "2020-01-20T23:34:15", "upload_time_iso_8601": "2020-01-20T23:34:15.774326Z", "url": "https://files.pythonhosted.org/packages/b0/d5/27c0ce1219ae261c837cde319f5cf40499f76e42241331cffd62316973bc/ploomber-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b2e6561be3d05ca82278b2121fff68bb", "sha256": "e29f475f793b844e8a49c686f29be87c82bf01c520dccfc4ca3abb00cbee3cee"}, "downloads": -1, "filename": "ploomber-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b2e6561be3d05ca82278b2121fff68bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81855, "upload_time": "2020-02-14T01:45:57", "upload_time_iso_8601": "2020-02-14T01:45:57.685802Z", "url": "https://files.pythonhosted.org/packages/21/50/2676450e46d9f79143a2045b2af6a4c1767a064c7248bccdf8429053b1df/ploomber-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38777190a5b0c21690c15f2b596a983d", "sha256": "7ccaae91922b64b4a90fc3cb9df152e0b390a93ba31fcb28ed5a0356dd814959"}, "downloads": -1, "filename": "ploomber-0.2.tar.gz", "has_sig": false, "md5_digest": "38777190a5b0c21690c15f2b596a983d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61138, "upload_time": "2020-02-14T01:45:59", "upload_time_iso_8601": "2020-02-14T01:45:59.415059Z", "url": "https://files.pythonhosted.org/packages/68/39/c0644ad519489c52b6a819908d865d07f2a1e802bf1f08d29a1b4ed31202/ploomber-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4c30d1e1a654a2cf26d1e323ebb240ae", "sha256": "b68ffdd2d3af8b8eea117b105fef8312717c805ee9c5317395abac2aed4924d3"}, "downloads": -1, "filename": "ploomber-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c30d1e1a654a2cf26d1e323ebb240ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 82560, "upload_time": "2020-02-21T04:26:06", "upload_time_iso_8601": "2020-02-21T04:26:06.407129Z", "url": "https://files.pythonhosted.org/packages/94/a6/a6f9975895e4caf833eccab8bec92afe962680b7f0be98212fb25cb5716d/ploomber-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9de9aaa1e9e39b058bf591daac1a430c", "sha256": "2e58be09b4ff2e85f2cad17ef6278a075a7e9c9afe187b6c297265bf919a4141"}, "downloads": -1, "filename": "ploomber-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9de9aaa1e9e39b058bf591daac1a430c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62097, "upload_time": "2020-02-21T04:26:08", "upload_time_iso_8601": "2020-02-21T04:26:08.416219Z", "url": "https://files.pythonhosted.org/packages/c8/c5/4db2a19e57432daccb172968e456150e173fcb68a1b93145696382c70c49/ploomber-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e74efd83cafc3547d660d992ba9148e8", "sha256": "69b079d8cab0c417fa61af76eb67497e6dba22172b8a62960f4fe6268db3e59a"}, "downloads": -1, "filename": "ploomber-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e74efd83cafc3547d660d992ba9148e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 98706, "upload_time": "2020-03-20T21:57:40", "upload_time_iso_8601": "2020-03-20T21:57:40.340147Z", "url": "https://files.pythonhosted.org/packages/ba/3d/d5d58c96e4c2d59e5eaac8ed9e833261c5ead69fbe7a0432a8350ba59e14/ploomber-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5e84b1c3752bdee62d592a8a3c24891", "sha256": "8255c328aef41868c2a44f8eb65126ec0b7ba8a4b2ad88dbf116ba0c3aeda7d2"}, "downloads": -1, "filename": "ploomber-0.3.tar.gz", "has_sig": false, "md5_digest": "b5e84b1c3752bdee62d592a8a3c24891", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74420, "upload_time": "2020-03-20T21:57:41", "upload_time_iso_8601": "2020-03-20T21:57:41.703833Z", "url": "https://files.pythonhosted.org/packages/04/84/7135a637027646d812a611457189face7247c4be83f3850bba0551766953/ploomber-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ad8bd811ca1ed836fc19e8d8c5f15a4e", "sha256": "7e283b56bcc69b5a12a18b50dc8dd8a7d8d93c96737413e3f8fa55c405901882"}, "downloads": -1, "filename": "ploomber-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8bd811ca1ed836fc19e8d8c5f15a4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 99884, "upload_time": "2020-04-03T22:22:01", "upload_time_iso_8601": "2020-04-03T22:22:01.956494Z", "url": "https://files.pythonhosted.org/packages/ae/e4/1ff3ed78cf2eebbcee8ae63864db05188b80dbe2e136700fc66301b58c74/ploomber-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "528b1b9584a5101a472972fe102249a6", "sha256": "1011d8a069db98089773e9e774465750913129cbcd19b5d57d5b3f1aa3f07741"}, "downloads": -1, "filename": "ploomber-0.3.1.tar.gz", "has_sig": false, "md5_digest": "528b1b9584a5101a472972fe102249a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75079, "upload_time": "2020-04-03T22:22:03", "upload_time_iso_8601": "2020-04-03T22:22:03.678557Z", "url": "https://files.pythonhosted.org/packages/a6/a3/65bbfe48886557ce1eaf36c6a43e21bdca3544d701843ebbc969a4756a11/ploomber-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0449a7cfbe60cef55c94026e3238dc32", "sha256": "ce4f0cba61e3778132d285cb17131e7d6e029bfeda6dca53cc852d18b90e8a75"}, "downloads": -1, "filename": "ploomber-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0449a7cfbe60cef55c94026e3238dc32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 102903, "upload_time": "2020-04-07T23:59:00", "upload_time_iso_8601": "2020-04-07T23:59:00.337017Z", "url": "https://files.pythonhosted.org/packages/b1/85/b64c5589eee235ef6c7c74b6f4d36accd872cebe550e2638da85cd6e32ef/ploomber-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99ff8d580c7485a715b4d77e1f8e0381", "sha256": "9129c2fe33f9364a80b2f8b63f0c98c181f6f4edeb7672a362f03b789173f683"}, "downloads": -1, "filename": "ploomber-0.3.2.tar.gz", "has_sig": false, "md5_digest": "99ff8d580c7485a715b4d77e1f8e0381", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77870, "upload_time": "2020-04-07T23:59:01", "upload_time_iso_8601": "2020-04-07T23:59:01.615734Z", "url": "https://files.pythonhosted.org/packages/f4/cd/e9b9ee35861dca982a4efdbe26692241b213c85b7d607e3c654949a505d1/ploomber-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "0caba4bb39aad64d458b36133298957f", "sha256": "ed4614600cc3d02e6748cf1bbcb3914717ed7db2e6a8f80212913e10876c90df"}, "downloads": -1, "filename": "ploomber-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0caba4bb39aad64d458b36133298957f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 118241, "upload_time": "2020-04-23T21:41:49", "upload_time_iso_8601": "2020-04-23T21:41:49.871111Z", "url": "https://files.pythonhosted.org/packages/ed/0f/0f7dd58c82e6e44f0e39df19a0f2bbca4a23c9b67a1874585e7f4d6940dd/ploomber-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cae8c7b70412b08faa99e6730102f9e", "sha256": "00d03dea69ca7a08e2ecc719e362d282e76836b119e00b4b7dfa15b79a5d76be"}, "downloads": -1, "filename": "ploomber-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4cae8c7b70412b08faa99e6730102f9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85135, "upload_time": "2020-04-23T21:41:51", "upload_time_iso_8601": "2020-04-23T21:41:51.017823Z", "url": "https://files.pythonhosted.org/packages/d1/28/b41a7b473144c3d9ef228670beef78a1f53f8cbb04b62db103c698398235/ploomber-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "16e3d57b93b60fbb3122d50e5f7802c8", "sha256": "36ce61f783304293f400f8ea1b0e91c5b3ddb2a885b26702554790c911ffe3f9"}, "downloads": -1, "filename": "ploomber-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "16e3d57b93b60fbb3122d50e5f7802c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 120043, "upload_time": "2020-04-28T15:35:36", "upload_time_iso_8601": "2020-04-28T15:35:36.888431Z", "url": "https://files.pythonhosted.org/packages/52/1a/c3bdf0e291a4e3f627191458a34d5cbbdc58ef9eda17a7de656bf20178ec/ploomber-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5213a890a26fe18ecc10e07fe6dab1af", "sha256": "524d2eb00bd4ee71d01e2d7f390fa359c2251be8e3c096402a03eedc303f0709"}, "downloads": -1, "filename": "ploomber-0.3.4.tar.gz", "has_sig": false, "md5_digest": "5213a890a26fe18ecc10e07fe6dab1af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86357, "upload_time": "2020-04-28T15:35:38", "upload_time_iso_8601": "2020-04-28T15:35:38.285925Z", "url": "https://files.pythonhosted.org/packages/bb/5c/c0ff3fe8e5a77b640846b577949548a15b36aabddf97b7540708a18b56cb/ploomber-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "a12b21942f62ca85c9e3386db96a7e5d", "sha256": "176bf54028ef653afd41d283545fb7c07209c02d69ada63da61585e777a5f42f"}, "downloads": -1, "filename": "ploomber-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a12b21942f62ca85c9e3386db96a7e5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 122474, "upload_time": "2020-05-03T21:28:42", "upload_time_iso_8601": "2020-05-03T21:28:42.674246Z", "url": "https://files.pythonhosted.org/packages/e3/7e/8c7402426f32cbde9e63abaedaa575428785f8da5faa2f3f9d3e1cef2a15/ploomber-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9225bcd6b8c4a80f2b88e0bf07be0493", "sha256": "be2d0af90537247c59acc950b7718ce62561b2f6a5069b693f6c556fc9e02040"}, "downloads": -1, "filename": "ploomber-0.3.5.tar.gz", "has_sig": false, "md5_digest": "9225bcd6b8c4a80f2b88e0bf07be0493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87238, "upload_time": "2020-05-03T21:28:44", "upload_time_iso_8601": "2020-05-03T21:28:44.096048Z", "url": "https://files.pythonhosted.org/packages/9d/a9/aba9a35a42c214ee36e4d7ea2cefa2d7c8353da6fcac283f575b4a109d7b/ploomber-0.3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a12b21942f62ca85c9e3386db96a7e5d", "sha256": "176bf54028ef653afd41d283545fb7c07209c02d69ada63da61585e777a5f42f"}, "downloads": -1, "filename": "ploomber-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a12b21942f62ca85c9e3386db96a7e5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 122474, "upload_time": "2020-05-03T21:28:42", "upload_time_iso_8601": "2020-05-03T21:28:42.674246Z", "url": "https://files.pythonhosted.org/packages/e3/7e/8c7402426f32cbde9e63abaedaa575428785f8da5faa2f3f9d3e1cef2a15/ploomber-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9225bcd6b8c4a80f2b88e0bf07be0493", "sha256": "be2d0af90537247c59acc950b7718ce62561b2f6a5069b693f6c556fc9e02040"}, "downloads": -1, "filename": "ploomber-0.3.5.tar.gz", "has_sig": false, "md5_digest": "9225bcd6b8c4a80f2b88e0bf07be0493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87238, "upload_time": "2020-05-03T21:28:44", "upload_time_iso_8601": "2020-05-03T21:28:44.096048Z", "url": "https://files.pythonhosted.org/packages/9d/a9/aba9a35a42c214ee36e4d7ea2cefa2d7c8353da6fcac283f575b4a109d7b/ploomber-0.3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:37 2020"}