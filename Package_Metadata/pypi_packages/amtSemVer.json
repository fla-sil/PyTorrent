{"info": {"author": "aimktech", "author_email": "code@aimechanics.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "amtSemVer\n=========\n\n|python| |pypi| |coverage| |license|\n\n----\n\n*amtSemVer* is a Python 3 package that provides a very simplistic support\nfor the `Semantic Versioning`_ 2.0.\n\n----\n\nBasic Usage\n-----------\n\nInstall with pip:\n\n.. code:: bash\n\n    pip install amtsemver\n\nImport the ``SemanticVersion`` class in your python code\n\n.. code:: python\n\n    from amtSemVer import SemanticVersion\n\nYou can create a new version from its constituents:\n\n.. code:: python\n\n    # create a version with all the parameters 1.2.3-alpha+2345\n    version_a = SemanticVersion(major=1, minor=2, patch=3, pre_release=\"alpha\", build=\"2345\")\n\n    # create a simple version 2.0.0\n    version_b = SemanticVersion(major=2, minor=0, patch=0)\n\nOr by parsing a string:\n\n.. code:: python\n\n    # create an object from the string\n    version_a = SemanticVersion.parse(\"1.2.3-alpha+2345\")\n\n    # this works too\n    version_b = SemanticVersion.parse(\"1.2.3\")\n    # or (1.2.0)\n    version_c = SemanticVersion.parse(\"1.2\")\n    # or (1.0.0)\n    version_d = SemanticVersion.parse(\"1\")\n    # or even (1.0.0-alpha)\n    version_e = SemanticVersion.parse(\"1+alpha\")\n\n``__str__`` representation of an object returns the following format\n``major.minor.patch[-pre_release][+build]``\n\n.. code:: python\n\n    >>> a = SemanticVersion.parse(\"1.2.3-alpha+2345\")\n    >>> str(a)\n    '1.2.3-alpha+2345'\n\n\n``__repr__`` returns a string that can be evaluated back as an object.\n\n.. code:: python\n\n    >>> a = SemanticVersion.parse(\"1.2.3-alpha+2345\")\n    >>> b = repr(a)\n    >>> b\n    'SemanticVersion(major=1, minor=2, patch=3, pre_release=\"alpha\", build=\"2345\")'\n    >>> c = eval(b)\n    >>> c == a\n    True\n\nObject supports the rich comparison operators:\n\n- Equal: a == b\n- Not Equal: a != b\n- Lesser:  a < b\n- Lesser or Equal: a <= b\n- Greater: a > b\n- Greater or Equal: a >= b\n\n.. code:: python\n\n    >>> a = SemanticVersion.parse(\"1.2.0\")\n    >>> b = SemanticVersion.parse(\"1.2.0-alpha\")\n    >>> a > b\n    True\n    >>> a != b\n    True\n    >>> a <= b\n    False\n\n\nTests\n-----\n\nRun tests:\n\n.. code:: bash\n\n    $ tox\n\nLicense\n-------\n\nThis package is released under the Apache License 2.0. See the bundled\n`LICENSE`_ file for details.\n\n\n\n.. _Semantic Versioning: https://semver.org/\n\n.. _LICENSE: https://github.com/aimktech/amtSemVer/blob/master/LICENSE.txt\n\n.. |python| image:: https://img.shields.io/static/v1?label=python&message=3%2e7%2b&color=blue&style=flat-square\n    :target: https://www.python.org\n    :alt: Python 3.7+\n\n.. |pypi| image:: https://img.shields.io/pypi/v/amtsemver?color=blue&style=flat-square\n    :target: https://pypi.org/project/amtsemver\n    :alt: Latest version released on PyPI\n\n.. |coverage| image:: https://img.shields.io/static/v1?label=coverage&message=100%25&color=blue&style=flat-square\n    :alt: Tests coverage\n\n.. |license| image:: https://img.shields.io/badge/license-Apache2.0-blue.svg?style=flat-square\n    :target: https://raw.githubusercontent.com/aimktech/amtstats/master/LICENSE.txt\n    :alt: Package license\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aimktech/amtSemVer", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "amtSemVer", "package_url": "https://pypi.org/project/amtSemVer/", "platform": "any", "project_url": "https://pypi.org/project/amtSemVer/", "project_urls": {"Homepage": "https://github.com/aimktech/amtSemVer"}, "release_url": "https://pypi.org/project/amtSemVer/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Simple semantic versioning module", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.python.org\" rel=\"nofollow\"><img alt=\"Python 3.7+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/591786d85c16efa6738f307f03ed566821d658f6/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d707974686f6e266d6573736167653d332532653725326226636f6c6f723d626c7565267374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.org/project/amtsemver\" rel=\"nofollow\"><img alt=\"Latest version released on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db26d17ded897d47479b8b2dfb10a9d641cde537/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616d7473656d7665723f636f6c6f723d626c7565267374796c653d666c61742d737175617265\"></a> <img alt=\"Tests coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64ee2eb2c3a82ca31d2d8cfca83d9acb48be4778/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f766572616765266d6573736167653d31303025323526636f6c6f723d626c7565267374796c653d666c61742d737175617265\"> <a href=\"https://raw.githubusercontent.com/aimktech/amtstats/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"Package license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12d5367fba675c9ad412a6e7885df4aec027d6d5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865322e302d626c75652e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<hr class=\"docutils\">\n<p><em>amtSemVer</em> is a Python 3 package that provides a very simplistic support\nfor the <a href=\"https://semver.org/\" rel=\"nofollow\">Semantic Versioning</a> 2.0.</p>\n<hr class=\"docutils\">\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>Install with pip:</p>\n<pre>pip install amtsemver\n</pre>\n<p>Import the <tt>SemanticVersion</tt> class in your python code</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">amtSemVer</span> <span class=\"kn\">import</span> <span class=\"n\">SemanticVersion</span>\n</pre>\n<p>You can create a new version from its constituents:</p>\n<pre><span class=\"c1\"># create a version with all the parameters 1.2.3-alpha+2345</span>\n<span class=\"n\">version_a</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"p\">(</span><span class=\"n\">major</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">minor</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">patch</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">pre_release</span><span class=\"o\">=</span><span class=\"s2\">\"alpha\"</span><span class=\"p\">,</span> <span class=\"n\">build</span><span class=\"o\">=</span><span class=\"s2\">\"2345\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a simple version 2.0.0</span>\n<span class=\"n\">version_b</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"p\">(</span><span class=\"n\">major</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">minor</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">patch</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>Or by parsing a string:</p>\n<pre><span class=\"c1\"># create an object from the string</span>\n<span class=\"n\">version_a</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3-alpha+2345\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># this works too</span>\n<span class=\"n\">version_b</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or (1.2.0)</span>\n<span class=\"n\">version_c</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or (1.0.0)</span>\n<span class=\"n\">version_d</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or even (1.0.0-alpha)</span>\n<span class=\"n\">version_e</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1+alpha\"</span><span class=\"p\">)</span>\n</pre>\n<p><tt>__str__</tt> representation of an object returns the following format\n<tt><span class=\"pre\">major.minor.patch[-pre_release][+build]</span></tt></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3-alpha+2345\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"s1\">'1.2.3-alpha+2345'</span>\n</pre>\n<p><tt>__repr__</tt> returns a string that can be evaluated back as an object.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3-alpha+2345\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span>\n<span class=\"s1\">'SemanticVersion(major=1, minor=2, patch=3, pre_release=\"alpha\", build=\"2345\")'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"n\">a</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Object supports the rich comparison operators:</p>\n<ul>\n<li>Equal: a == b</li>\n<li>Not Equal: a != b</li>\n<li>Lesser:  a &lt; b</li>\n<li>Lesser or Equal: a &lt;= b</li>\n<li>Greater: a &gt; b</li>\n<li>Greater or Equal: a &gt;= b</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.0\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">SemanticVersion</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.0-alpha\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">&gt;</span> <span class=\"n\">b</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">!=</span> <span class=\"n\">b</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">&lt;=</span> <span class=\"n\">b</span>\n<span class=\"kc\">False</span>\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Run tests:</p>\n<pre>$ tox\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This package is released under the Apache License 2.0. See the bundled\n<a href=\"https://github.com/aimktech/amtSemVer/blob/master/LICENSE.txt\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 6613863, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "292aa764b02fcaabe086cb3559d58afe", "sha256": "de97ac63aebfa425768ce33991cc311a9434fcb0f2588ec41655b814e115e0c0"}, "downloads": -1, "filename": "amtSemVer-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "292aa764b02fcaabe086cb3559d58afe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8625, "upload_time": "2020-02-12T03:01:04", "upload_time_iso_8601": "2020-02-12T03:01:04.831098Z", "url": "https://files.pythonhosted.org/packages/db/70/04a975e6fc909c45db5da2093f61be8af3e34bc85c639401f40e9cd63fab/amtSemVer-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b08ac743460a5071d4ee0108f7946160", "sha256": "6ea021e34d74205b7151854b61e042d6ff600eb4abdf9d4a6745e44fa874b125"}, "downloads": -1, "filename": "amtSemVer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b08ac743460a5071d4ee0108f7946160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4438, "upload_time": "2020-02-12T03:01:07", "upload_time_iso_8601": "2020-02-12T03:01:07.327121Z", "url": "https://files.pythonhosted.org/packages/0e/1c/d79ec7230f247d74ada445a28311a346f9f511826ca6fc9875298d1ecc9c/amtSemVer-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "292aa764b02fcaabe086cb3559d58afe", "sha256": "de97ac63aebfa425768ce33991cc311a9434fcb0f2588ec41655b814e115e0c0"}, "downloads": -1, "filename": "amtSemVer-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "292aa764b02fcaabe086cb3559d58afe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8625, "upload_time": "2020-02-12T03:01:04", "upload_time_iso_8601": "2020-02-12T03:01:04.831098Z", "url": "https://files.pythonhosted.org/packages/db/70/04a975e6fc909c45db5da2093f61be8af3e34bc85c639401f40e9cd63fab/amtSemVer-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b08ac743460a5071d4ee0108f7946160", "sha256": "6ea021e34d74205b7151854b61e042d6ff600eb4abdf9d4a6745e44fa874b125"}, "downloads": -1, "filename": "amtSemVer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b08ac743460a5071d4ee0108f7946160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4438, "upload_time": "2020-02-12T03:01:07", "upload_time_iso_8601": "2020-02-12T03:01:07.327121Z", "url": "https://files.pythonhosted.org/packages/0e/1c/d79ec7230f247d74ada445a28311a346f9f511826ca6fc9875298d1ecc9c/amtSemVer-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:18 2020"}