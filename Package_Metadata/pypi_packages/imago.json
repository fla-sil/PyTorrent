{"info": {"author": "Matteo Redaelli", "author_email": "solventdev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "[![forthebadge](https://forthebadge.com/images/badges/made-with-python.svg)](https://forthebadge.com) [![forthebadge](https://forthebadge.com/images/badges/built-with-love.svg)](https://forthebadge.com)\n\n[![Build Status](https://travis-ci.org/redaelli/imago-forensics.svg?branch=master)](https://travis-ci.org/redaelli/imago-forensics) [![Requirements Status](https://requires.io/github/redaelli/imago-forensics/requirements.svg?branch=master)](https://requires.io/github/redaelli/imago-forensics/requirements/?branch=master)\n[![GitHub license](https://img.shields.io/github/license/Day8/re-frame.svg?style=flat-square)](LICENSE)\n# imago-forensics \ud83d\udd75\ufe0f\nImago is a python tool that extract digital evidences from images recursively.\nThis  tool is useful throughout a digital forensic investigation. If you need to extract digital evidences and you have a lot of images, through this tool you will be able to compare them easily. Imago allows to extract the evidences into a CSV file or in a sqlite database. If in a JPEG exif are present GPS coordinates, Imago can extract the longitude and latitude and it can convert them to degrees and to retrieve relevant information like city, nation, zip code...\nImago offers also the possibility to calculate Error Level Analysis, and to detect nudity these functionalities are in BETA.\n\n# Setup\n\n## Setup via pip\n\n1. Install imago:\n\n```console\n$ pip install imago\n```\n2. Once installed, one new binary should be available: :\n\n```console\n$ imago \n```\nAnd then it should output the imago's banner\n\n\n## Requirements:\n```\npython 2.7\nexifread 2.1.2\npython-magic 0.4.15\nargparse 1.4.0\npillow 5.2.0\nnudepy 0.4\nimagehash 4.0\ngeopy 1.16.0\n\n```\n# Usage\n\n```\nusage: imago.py [-h] -i INPUT [-x] [-g] [-e] [-n] [-d {md5,sha256,sha512,all}]\n                [-p {ahash,phash,dhash,whash,all}] [-o OUTPUT] [-s]\n                [-t {jpeg,tiff}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input directory path\n  -x, --exif            Extract exif metadata\n  -g, --gps             Extract, parse and convert to coordinates, GPS exif\n                        metadata from images (if any)It works only with JPEG.\n  -e, --ela             Extract, Error Level Analysis image,It works only with\n                        JPEG. *BETA*\n  -n, --nude            Detect Nudity, It works only with JPEG, *BETA*\n  -d {md5,sha256,sha512,all}, --digest {md5,sha256,sha512,all}\n                        Calculate perceptual image hashing\n  -p {ahash,phash,dhash,whash,all}, --percentualhash {ahash,phash,dhash,whash,all}\n                        Calculate hash digest\n  -o OUTPUT, --output OUTPUT\n                        Output directory path\n  -s, --sqli            Keep SQLite file after the computation\n  -t {jpeg,tiff}, --type {jpeg,tiff}\n                        Select the image, this flag can be JPEG or TIFF, if\n                        this argument it is not provided, imago will process\n                        all the image types(i.e. JPEG, TIFF)\n\n\n\n```\nThe only required argument is -i which is the base directory from which imago will start to search for image file.\nYou should also provide at least one type of extraction (i.e. exif, data, gps, digest).\n\n# Example:\n\n```console\n$ imago -i /home/solvent/cases/c23/DCIM/ -o /home/solvent/cases/c23/ -x -s -t jpeg -d all\n```\n\nWhere:\n* -i path: is the base directory, where imago will search for file\n* -o path: the output directory where imago will save the CSV file, with the extracted metadata\n* -x : imago will extract EXIF metadata.\n* -s: the temporary SQLite database will not be deleted after the processing.\n* -t jpeg: imago will search only for jpeg images.\n* -d all: imago will calculate md5, sha256, sha512 for the jpeg images.\n\n# Features:\n\n| Task          | Status        |\n| ------------- |:-------------:|\n| Recursive directory navigation  | \u2714\ufe0f |\n| file mtime (UTC) | \u2714\ufe0f |\n| file ctime (UTC) | \u2714\ufe0f |\n| file atime (UTC) | \u2714\ufe0f |\n| file size (bytes)| \u2714\ufe0f |\n| MIME type | \u2714\ufe0f |\n| Exif support  | \u2714\ufe0f |\n| CSV export  | \u2714\ufe0f |\n| Sqlite export  | \u2714\ufe0f |\n| md5, sha256, sha512  | \u2714\ufe0f |\n| [Error Level Analysis](https://blackhat.com/presentations/bh-dc-08/Krawetz/Whitepaper/bh-dc-08-krawetz-WP.pdf) | \u2714\ufe0f BETA |\n| Full GPS support  | \u2714\ufe0f |\n| [Nudity detection](https://github.com/hhatto/nude.py) | \u2714\ufe0f BETA|\n| [Perceptual Image Hashing](https://github.com/JohannesBuchner/imagehash) | \u2714\ufe0f|\n| [aHash](http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html) | \u2714\ufe0f |\n| [pHash](http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html)| \u2714\ufe0f |\n| [dHash](http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html) | \u2714\ufe0f |\n| [wHash](https://fullstackml.com/2016/07/02/wavelet-image-hash-in-python/)| \u2714\ufe0f |\n\n\n\n# ToDo:\n\n\n\n| Task          | Status        |\n| ------------- |:-------------:|\n| **Test code** | \u274c |\n| Comments and Suggestions are welcome | \ud83d\udc4d |\n\n\n## \ud83d\udcd1 Copyright and Licenses\nCode copyright 2018 Redaelli.\nCode released under the [MIT license](LICENSE).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/redaelli/imago-forensics", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "imago", "package_url": "https://pypi.org/project/imago/", "platform": "", "project_url": "https://pypi.org/project/imago/", "project_urls": {"Homepage": "https://github.com/redaelli/imago-forensics"}, "release_url": "https://pypi.org/project/imago/1.0.5/", "requires_dist": ["exifread (==2.1.2)", "python-magic (==0.4.15)", "argparse (==1.4.0)", "pillow (==5.2.0)", "nudepy (==0.4)", "imagehash (==4.0)", "geopy (==1.16.0)"], "requires_python": ">=2.7.0", "summary": "Imago is a python tool that extract digital evidences from images.", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7cefdfa620eb623843291a3c32383f169b6a60e0/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6d6164652d776974682d707974686f6e2e737667\"></a> <a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac6b7ad4667b75b14e3f997600dcc279b9534c6b/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6275696c742d776974682d6c6f76652e737667\"></a></p>\n<p><a href=\"https://travis-ci.org/redaelli/imago-forensics\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98be0e77dde3fe7febc150ca58138fc14bfd0130/68747470733a2f2f7472617669732d63692e6f72672f72656461656c6c692f696d61676f2d666f72656e736963732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://requires.io/github/redaelli/imago-forensics/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc68fb3f1e4f9b33efc9350c85a675dad86cf8ba/68747470733a2f2f72657175697265732e696f2f6769746875622f72656461656c6c692f696d61676f2d666f72656e736963732f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bd783fab83f838bcfe17b3be3a2896e4fd913c7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f446179382f72652d6672616d652e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<h1>imago-forensics \ud83d\udd75\ufe0f</h1>\n<p>Imago is a python tool that extract digital evidences from images recursively.\nThis  tool is useful throughout a digital forensic investigation. If you need to extract digital evidences and you have a lot of images, through this tool you will be able to compare them easily. Imago allows to extract the evidences into a CSV file or in a sqlite database. If in a JPEG exif are present GPS coordinates, Imago can extract the longitude and latitude and it can convert them to degrees and to retrieve relevant information like city, nation, zip code...\nImago offers also the possibility to calculate Error Level Analysis, and to detect nudity these functionalities are in BETA.</p>\n<h1>Setup</h1>\n<h2>Setup via pip</h2>\n<ol>\n<li>Install imago:</li>\n</ol>\n<pre><span class=\"gp\">$</span> pip install imago\n</pre>\n<ol>\n<li>Once installed, one new binary should be available: :</li>\n</ol>\n<pre><span class=\"gp\">$</span> imago \n</pre>\n<p>And then it should output the imago's banner</p>\n<h2>Requirements:</h2>\n<pre><code>python 2.7\nexifread 2.1.2\npython-magic 0.4.15\nargparse 1.4.0\npillow 5.2.0\nnudepy 0.4\nimagehash 4.0\ngeopy 1.16.0\n\n</code></pre>\n<h1>Usage</h1>\n<pre><code>usage: imago.py [-h] -i INPUT [-x] [-g] [-e] [-n] [-d {md5,sha256,sha512,all}]\n                [-p {ahash,phash,dhash,whash,all}] [-o OUTPUT] [-s]\n                [-t {jpeg,tiff}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input directory path\n  -x, --exif            Extract exif metadata\n  -g, --gps             Extract, parse and convert to coordinates, GPS exif\n                        metadata from images (if any)It works only with JPEG.\n  -e, --ela             Extract, Error Level Analysis image,It works only with\n                        JPEG. *BETA*\n  -n, --nude            Detect Nudity, It works only with JPEG, *BETA*\n  -d {md5,sha256,sha512,all}, --digest {md5,sha256,sha512,all}\n                        Calculate perceptual image hashing\n  -p {ahash,phash,dhash,whash,all}, --percentualhash {ahash,phash,dhash,whash,all}\n                        Calculate hash digest\n  -o OUTPUT, --output OUTPUT\n                        Output directory path\n  -s, --sqli            Keep SQLite file after the computation\n  -t {jpeg,tiff}, --type {jpeg,tiff}\n                        Select the image, this flag can be JPEG or TIFF, if\n                        this argument it is not provided, imago will process\n                        all the image types(i.e. JPEG, TIFF)\n\n\n\n</code></pre>\n<p>The only required argument is -i which is the base directory from which imago will start to search for image file.\nYou should also provide at least one type of extraction (i.e. exif, data, gps, digest).</p>\n<h1>Example:</h1>\n<pre><span class=\"gp\">$</span> imago -i /home/solvent/cases/c23/DCIM/ -o /home/solvent/cases/c23/ -x -s -t jpeg -d all\n</pre>\n<p>Where:</p>\n<ul>\n<li>-i path: is the base directory, where imago will search for file</li>\n<li>-o path: the output directory where imago will save the CSV file, with the extracted metadata</li>\n<li>-x : imago will extract EXIF metadata.</li>\n<li>-s: the temporary SQLite database will not be deleted after the processing.</li>\n<li>-t jpeg: imago will search only for jpeg images.</li>\n<li>-d all: imago will calculate md5, sha256, sha512 for the jpeg images.</li>\n</ul>\n<h1>Features:</h1>\n<table>\n<thead>\n<tr>\n<th>Task</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Recursive directory navigation</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>file mtime (UTC)</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>file ctime (UTC)</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>file atime (UTC)</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>file size (bytes)</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>MIME type</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>Exif support</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>CSV export</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>Sqlite export</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>md5, sha256, sha512</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td><a href=\"https://blackhat.com/presentations/bh-dc-08/Krawetz/Whitepaper/bh-dc-08-krawetz-WP.pdf\" rel=\"nofollow\">Error Level Analysis</a></td>\n<td align=\"center\">\u2714\ufe0f BETA</td>\n</tr>\n<tr>\n<td>Full GPS support</td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/hhatto/nude.py\" rel=\"nofollow\">Nudity detection</a></td>\n<td align=\"center\">\u2714\ufe0f BETA</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JohannesBuchner/imagehash\" rel=\"nofollow\">Perceptual Image Hashing</a></td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td><a href=\"http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html\" rel=\"nofollow\">aHash</a></td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td><a href=\"http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html\" rel=\"nofollow\">pHash</a></td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td><a href=\"http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html\" rel=\"nofollow\">dHash</a></td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr>\n<tr>\n<td><a href=\"https://fullstackml.com/2016/07/02/wavelet-image-hash-in-python/\" rel=\"nofollow\">wHash</a></td>\n<td align=\"center\">\u2714\ufe0f</td>\n</tr></tbody></table>\n<h1>ToDo:</h1>\n<table>\n<thead>\n<tr>\n<th>Task</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Test code</strong></td>\n<td align=\"center\">\u274c</td>\n</tr>\n<tr>\n<td>Comments and Suggestions are welcome</td>\n<td align=\"center\">\ud83d\udc4d</td>\n</tr></tbody></table>\n<h2>\ud83d\udcd1 Copyright and Licenses</h2>\n<p>Code copyright 2018 Redaelli.\nCode released under the <a href=\"LICENSE\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 4201455, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "3fc79f30ed6be586ff551a10063791a1", "sha256": "8628d0f30fe891bdee46caed446295e2d33cf5e7dc47c29585fbef461e84e047"}, "downloads": -1, "filename": "imago-1.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "3fc79f30ed6be586ff551a10063791a1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7.0", "size": 8848, "upload_time": "2018-08-23T21:02:05", "upload_time_iso_8601": "2018-08-23T21:02:05.101956Z", "url": "https://files.pythonhosted.org/packages/f9/23/e74f8fab20ec18452e86bf85259d79dbd6ccf0c46dbf582de55fead6ed58/imago-1.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1426db1a77b3072c66b675b18282fd49", "sha256": "8ace7b4be5dd9b9aa656513d931b008e4eebaa72fd2954a0c10dae5db4c58806"}, "downloads": -1, "filename": "imago-1.0.5.tar.gz", "has_sig": false, "md5_digest": "1426db1a77b3072c66b675b18282fd49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0", "size": 10119, "upload_time": "2018-08-23T21:02:06", "upload_time_iso_8601": "2018-08-23T21:02:06.489023Z", "url": "https://files.pythonhosted.org/packages/46/47/8bae781c56a87e8e6b3b1a6c332a185128b67a5080f3333f136537e90935/imago-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3fc79f30ed6be586ff551a10063791a1", "sha256": "8628d0f30fe891bdee46caed446295e2d33cf5e7dc47c29585fbef461e84e047"}, "downloads": -1, "filename": "imago-1.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "3fc79f30ed6be586ff551a10063791a1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7.0", "size": 8848, "upload_time": "2018-08-23T21:02:05", "upload_time_iso_8601": "2018-08-23T21:02:05.101956Z", "url": "https://files.pythonhosted.org/packages/f9/23/e74f8fab20ec18452e86bf85259d79dbd6ccf0c46dbf582de55fead6ed58/imago-1.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1426db1a77b3072c66b675b18282fd49", "sha256": "8ace7b4be5dd9b9aa656513d931b008e4eebaa72fd2954a0c10dae5db4c58806"}, "downloads": -1, "filename": "imago-1.0.5.tar.gz", "has_sig": false, "md5_digest": "1426db1a77b3072c66b675b18282fd49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0", "size": 10119, "upload_time": "2018-08-23T21:02:06", "upload_time_iso_8601": "2018-08-23T21:02:06.489023Z", "url": "https://files.pythonhosted.org/packages/46/47/8bae781c56a87e8e6b3b1a6c332a185128b67a5080f3333f136537e90935/imago-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:48 2020"}