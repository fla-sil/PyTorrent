{"info": {"author": "Yann Beauxis", "author_email": "dev@yannbeauxis.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Sinagot\n\nSinagot is a Python library to manage data processing with **scripts** on a **dataset**. \nSinagot is able to batch scripts runs with a simple API. \nParallelization of data processing is made possible by [Dask.distributed](https://distributed.dask.org/en/latest/). \n\n## Installation\n\nSinagot is available on PyPi:\n\n```bash\npip install sinagot\n```\n\n## Full Documentation\n\n<https://sinagot.readthedocs.io/en/latest/>\n\n## Concept\n\n*Dataset* are structured around some core concept : **record**, **subset**, **task**, **modality** and **script**. \nA *record*, identified by its unique ID, corresponds to a recording session where experimental *tasks* are performed, \ngenerating data of various *modalities*. Raw data of a **record** are processed with **scripts** to generate more useful data.\n\n> The idea of Sinagot emerged for the data management of an EEG platform called SoNeTAA :\n> https://research.pasteur.fr/en/project/sonetaa/ .\n> \n> For documentation purpose SoNeTAA dataset structure will be used as example. \n\nOn SoNeTAA, a record with an ID with timestamp info in this format `REC-[YYMMDD]-[A-Z]`, \nfor example `\"REC-200331-A\"`. \n\nFor a record, 3 tasks are performed: `\"RS\"`, `\"MMN\"` and `\"HDC\"`,\n2 main modalities handle data for every tasks: `\"EEG\"` and `\"clinical\"`, and a third one `\"behavior\"` exists only for HDC.\n\n## Demo with SoNeTAA example \n\n### Create a Dataset instance\n\nImport Dataset class\n\n```python\n>>> from sinagot import Dataset\n```\n\nA `Dataset` instance needs 3 things: \n\n- A config file in toml format.\n- A folder containing the dataset\n- A folder containing all the scripts\n\nTo instantiate a dataset use the config file path as argument:\n\n```python\n>>> ds = Dataset('/path/to/conf')\n>>> ds\n<Dataset instance | task: None, modality: None>\n```\n\n> Be sure that dataset path and scripts path are correctly set in the config file\n\n### Explore records\n\nYou can list all records ids:\n\n```python\n>>> for id in ds.ids():\n...     print(id)\n...\nREC-200331-A\nREC-200331-B\n```\n\nCreate a `Record` instance. For a specific record:\n\n```python\n>>> rec = ds.get('REC-200331-A')\n>>> rec\n<Record instance | id: REC-200331-A, task: None, modality: None>\n```\n\nOr the first record found:\n\n```python\n>>> ds.first()\n<Record instance | id: REC-200331-B, task: None, modality: None>\n```\n\n> Records are not sort by their ids.\n\n### run scripts\n\nYou can run all scripts for each record of the dataset:\n\n```python\n>>> ds.run()\n2020-03-31 16:03:58,869 : Begin step run\n...\n2020-03-31 16:03:58,869 : Step run finished\n```\n\nOr for a single record:\n\n```python\n>>> rec.run()\n2020-03-31 16:06:57,313 : Begin step run\n...\n2020-03-31 16:06:57,314 : Step run finished\n```\n\n### Explore by task or modality\n\nEach dataset or record has **subscopes** corresponding to their tasks and modalities\nsimply accessible by self attributes with the scope name.\n\nFor example to select only the task RS of the dataset:\n\n```python\n>>> ds.RS\n<Subset instance | task: RS, modality: None>\n```\n\n> A dataset subscope is a **subset**.\n\nOr the EEG modality of a record:\n\n```python\n>>> rec.EEG\n<Record instance | id: REC-200331-A, task: None, modality: EEG>\n```\n\nYou can select a specific couple of task and modality (called **unit**):\n\n```python\n>>> ds.RS.EEG\n<Subset instance | task: RS, modality: EEG>\n>>> ds.EEG.RS\n<Subset instance | task: RS, modality: EEG>\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/YannBeauxis/sinagot", "keywords": "", "license": "BSD-3-Clause", "maintainer": "Yann Beauxis", "maintainer_email": "dev@yannbeauxis.net", "name": "sinagot", "package_url": "https://pypi.org/project/sinagot/", "platform": "", "project_url": "https://pypi.org/project/sinagot/", "project_urls": {"Documentation": "https://sinagot.readthedocs.io", "Homepage": "https://github.com/YannBeauxis/sinagot", "Repository": "https://github.com/YannBeauxis/sinagot"}, "release_url": "https://pypi.org/project/sinagot/0.1.3/", "requires_dist": ["pandas (>=1.0.2,<2.0.0)", "toml (>=0.10.0,<0.11.0)", "json-log-formatter (>=0.3.0,<0.4.0)"], "requires_python": ">=3.6.1,<4.0.0", "summary": "Python library to manage data processing on a dataset.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sinagot</h1>\n<p>Sinagot is a Python library to manage data processing with <strong>scripts</strong> on a <strong>dataset</strong>.\nSinagot is able to batch scripts runs with a simple API.\nParallelization of data processing is made possible by <a href=\"https://distributed.dask.org/en/latest/\" rel=\"nofollow\">Dask.distributed</a>.</p>\n<h2>Installation</h2>\n<p>Sinagot is available on PyPi:</p>\n<pre>pip install sinagot\n</pre>\n<h2>Full Documentation</h2>\n<p><a href=\"https://sinagot.readthedocs.io/en/latest/\" rel=\"nofollow\">https://sinagot.readthedocs.io/en/latest/</a></p>\n<h2>Concept</h2>\n<p><em>Dataset</em> are structured around some core concept : <strong>record</strong>, <strong>subset</strong>, <strong>task</strong>, <strong>modality</strong> and <strong>script</strong>.\nA <em>record</em>, identified by its unique ID, corresponds to a recording session where experimental <em>tasks</em> are performed,\ngenerating data of various <em>modalities</em>. Raw data of a <strong>record</strong> are processed with <strong>scripts</strong> to generate more useful data.</p>\n<blockquote>\n<p>The idea of Sinagot emerged for the data management of an EEG platform called SoNeTAA :\n<a href=\"https://research.pasteur.fr/en/project/sonetaa/\" rel=\"nofollow\">https://research.pasteur.fr/en/project/sonetaa/</a> .</p>\n<p>For documentation purpose SoNeTAA dataset structure will be used as example.</p>\n</blockquote>\n<p>On SoNeTAA, a record with an ID with timestamp info in this format <code>REC-[YYMMDD]-[A-Z]</code>,\nfor example <code>\"REC-200331-A\"</code>.</p>\n<p>For a record, 3 tasks are performed: <code>\"RS\"</code>, <code>\"MMN\"</code> and <code>\"HDC\"</code>,\n2 main modalities handle data for every tasks: <code>\"EEG\"</code> and <code>\"clinical\"</code>, and a third one <code>\"behavior\"</code> exists only for HDC.</p>\n<h2>Demo with SoNeTAA example</h2>\n<h3>Create a Dataset instance</h3>\n<p>Import Dataset class</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sinagot</span> <span class=\"kn\">import</span> <span class=\"n\">Dataset</span>\n</pre>\n<p>A <code>Dataset</code> instance needs 3 things:</p>\n<ul>\n<li>A config file in toml format.</li>\n<li>A folder containing the dataset</li>\n<li>A folder containing all the scripts</li>\n</ul>\n<p>To instantiate a dataset use the config file path as argument:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">Dataset</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/conf'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Dataset</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"o\">&gt;</span>\n</pre>\n<blockquote>\n<p>Be sure that dataset path and scripts path are correctly set in the config file</p>\n</blockquote>\n<h3>Explore records</h3>\n<p>You can list all records ids:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"nb\">id</span> <span class=\"ow\">in</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">ids</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">REC</span><span class=\"o\">-</span><span class=\"mi\">200331</span><span class=\"o\">-</span><span class=\"n\">A</span>\n<span class=\"n\">REC</span><span class=\"o\">-</span><span class=\"mi\">200331</span><span class=\"o\">-</span><span class=\"n\">B</span>\n</pre>\n<p>Create a <code>Record</code> instance. For a specific record:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rec</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'REC-200331-A'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rec</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Record</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">REC</span><span class=\"o\">-</span><span class=\"mi\">200331</span><span class=\"o\">-</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Or the first record found:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Record</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">REC</span><span class=\"o\">-</span><span class=\"mi\">200331</span><span class=\"o\">-</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"o\">&gt;</span>\n</pre>\n<blockquote>\n<p>Records are not sort by their ids.</p>\n</blockquote>\n<h3>run scripts</h3>\n<p>You can run all scripts for each record of the dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"mi\">2020</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">31</span> <span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">58</span><span class=\"p\">,</span><span class=\"mi\">869</span> <span class=\"p\">:</span> <span class=\"n\">Begin</span> <span class=\"n\">step</span> <span class=\"n\">run</span>\n<span class=\"o\">...</span>\n<span class=\"mi\">2020</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">31</span> <span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">58</span><span class=\"p\">,</span><span class=\"mi\">869</span> <span class=\"p\">:</span> <span class=\"n\">Step</span> <span class=\"n\">run</span> <span class=\"n\">finished</span>\n</pre>\n<p>Or for a single record:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"mi\">2020</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">31</span> <span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mi\">57</span><span class=\"p\">,</span><span class=\"mi\">313</span> <span class=\"p\">:</span> <span class=\"n\">Begin</span> <span class=\"n\">step</span> <span class=\"n\">run</span>\n<span class=\"o\">...</span>\n<span class=\"mi\">2020</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">31</span> <span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mi\">57</span><span class=\"p\">,</span><span class=\"mi\">314</span> <span class=\"p\">:</span> <span class=\"n\">Step</span> <span class=\"n\">run</span> <span class=\"n\">finished</span>\n</pre>\n<h3>Explore by task or modality</h3>\n<p>Each dataset or record has <strong>subscopes</strong> corresponding to their tasks and modalities\nsimply accessible by self attributes with the scope name.</p>\n<p>For example to select only the task RS of the dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">RS</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Subset</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">RS</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"o\">&gt;</span>\n</pre>\n<blockquote>\n<p>A dataset subscope is a <strong>subset</strong>.</p>\n</blockquote>\n<p>Or the EEG modality of a record:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">EEG</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Record</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">REC</span><span class=\"o\">-</span><span class=\"mi\">200331</span><span class=\"o\">-</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"n\">EEG</span><span class=\"o\">&gt;</span>\n</pre>\n<p>You can select a specific couple of task and modality (called <strong>unit</strong>):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">RS</span><span class=\"o\">.</span><span class=\"n\">EEG</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Subset</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">RS</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"n\">EEG</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">EEG</span><span class=\"o\">.</span><span class=\"n\">RS</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Subset</span> <span class=\"n\">instance</span> <span class=\"o\">|</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">RS</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"p\">:</span> <span class=\"n\">EEG</span><span class=\"o\">&gt;</span>\n</pre>\n\n          </div>"}, "last_serial": 7073036, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "14213f04aeeded91e383b4f57ffd32f8", "sha256": "73f86edb600a3589726a8980e013486172bd1115504412dade1e7011dd2b649b"}, "downloads": -1, "filename": "sinagot-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "14213f04aeeded91e383b4f57ffd32f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 17126, "upload_time": "2020-04-09T01:47:26", "upload_time_iso_8601": "2020-04-09T01:47:26.661222Z", "url": "https://files.pythonhosted.org/packages/6b/55/ac6a5afa41bce522503a03cb02b635d575876a7f277d5fcc316b50ee991c/sinagot-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4348d4f0c84d7a1b51419819cdedfe7e", "sha256": "b752ad9e158da26306d924e3ef412188d70c3ad3f74c8ae9324c2c334e433019"}, "downloads": -1, "filename": "sinagot-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4348d4f0c84d7a1b51419819cdedfe7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 14173, "upload_time": "2020-04-09T01:47:28", "upload_time_iso_8601": "2020-04-09T01:47:28.676824Z", "url": "https://files.pythonhosted.org/packages/9f/ed/8cb1f5cf3fe21486b67cb89ca72c02960b706d27939e2ffb8dd2cc180a8f/sinagot-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1ebe209c369dbe564983de782ac0e628", "sha256": "ab87312c9409679a932081be6134dfa56be1a128f6f3abec295b58870804cf5c"}, "downloads": -1, "filename": "sinagot-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1ebe209c369dbe564983de782ac0e628", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 17230, "upload_time": "2020-04-20T08:05:38", "upload_time_iso_8601": "2020-04-20T08:05:38.951338Z", "url": "https://files.pythonhosted.org/packages/87/40/e4c051e92cdc6e03dbfc9476172499232771e2ecf2dd5f75448db7c68d5c/sinagot-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94a1f561b0d24f4aa0492c227dc48fbf", "sha256": "0a30200890c0e8a046d2edd2a2dbfbee92edc777402253508999d5d2c74ec620"}, "downloads": -1, "filename": "sinagot-0.1.2.tar.gz", "has_sig": false, "md5_digest": "94a1f561b0d24f4aa0492c227dc48fbf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 14338, "upload_time": "2020-04-20T08:05:40", "upload_time_iso_8601": "2020-04-20T08:05:40.737241Z", "url": "https://files.pythonhosted.org/packages/79/ac/9920db6323903bbea2016711e51869b167148cc641a53d20ce83cf6e1c01/sinagot-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ec0cd6154031ea867f0316775065c9b0", "sha256": "d3769c9a29f532991909ed1dc32eb7c5f7fd8ac5c53a620ed1ec23ada8dd9ba5"}, "downloads": -1, "filename": "sinagot-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ec0cd6154031ea867f0316775065c9b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 17533, "upload_time": "2020-04-22T02:47:55", "upload_time_iso_8601": "2020-04-22T02:47:55.313950Z", "url": "https://files.pythonhosted.org/packages/e3/73/92aebf40f2f9fc54be93e41b63f9f2363ff79e137aaa2327b65bb8721264/sinagot-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "028d3a4aeb9a87c9e5eecb8d4f18a32c", "sha256": "1a669f9b05966316f1ca65ac800098fce160f43ea8e32fc4b36cca60535d3df1"}, "downloads": -1, "filename": "sinagot-0.1.3.tar.gz", "has_sig": false, "md5_digest": "028d3a4aeb9a87c9e5eecb8d4f18a32c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 14560, "upload_time": "2020-04-22T02:47:57", "upload_time_iso_8601": "2020-04-22T02:47:57.003519Z", "url": "https://files.pythonhosted.org/packages/75/e4/7d02a114d9b44118a29767ed4a1bb0a96501885fe82b1f00748ca5c91daa/sinagot-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec0cd6154031ea867f0316775065c9b0", "sha256": "d3769c9a29f532991909ed1dc32eb7c5f7fd8ac5c53a620ed1ec23ada8dd9ba5"}, "downloads": -1, "filename": "sinagot-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ec0cd6154031ea867f0316775065c9b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 17533, "upload_time": "2020-04-22T02:47:55", "upload_time_iso_8601": "2020-04-22T02:47:55.313950Z", "url": "https://files.pythonhosted.org/packages/e3/73/92aebf40f2f9fc54be93e41b63f9f2363ff79e137aaa2327b65bb8721264/sinagot-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "028d3a4aeb9a87c9e5eecb8d4f18a32c", "sha256": "1a669f9b05966316f1ca65ac800098fce160f43ea8e32fc4b36cca60535d3df1"}, "downloads": -1, "filename": "sinagot-0.1.3.tar.gz", "has_sig": false, "md5_digest": "028d3a4aeb9a87c9e5eecb8d4f18a32c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 14560, "upload_time": "2020-04-22T02:47:57", "upload_time_iso_8601": "2020-04-22T02:47:57.003519Z", "url": "https://files.pythonhosted.org/packages/75/e4/7d02a114d9b44118a29767ed4a1bb0a96501885fe82b1f00748ca5c91daa/sinagot-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:33 2020"}