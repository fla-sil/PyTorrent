{"info": {"author": "Kael Zhang", "author_email": "i+pypi@kael.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Utilities"], "description": "[![](https://travis-ci.org/kaelzhang/stock-pandas.svg?branch=master)](https://travis-ci.org/kaelzhang/stock-pandas)\n[![](https://codecov.io/gh/kaelzhang/stock-pandas/branch/master/graph/badge.svg)](https://codecov.io/gh/kaelzhang/stock-pandas)\n[![](https://img.shields.io/pypi/v/stock-pandas.svg)](https://pypi.org/project/stock-pandas/)\n[![](https://img.shields.io/pypi/l/stock-pandas.svg)](https://github.com/kaelzhang/stock-pandas)\n\n# [stock-pandas](https://github.com/kaelzhang/stock-pandas)\n\n**stock-pandas** inherits and extends `pandas.DataFrame` to support:\n- Stock Statistics\n- Stock Indicators, including:\n  - Trend-following momentum indicators, such as **MA**, **EMA**, **MACD**, **BBI**\n  - Dynamic support and resistance indicators, such as **BOLL**\n  - Over-bought / over-sold indicators, such as **KDJ**, **RSI**\n  - Other indicators, such as **LLV**, **HHV**\n  - For more indicators, welcome to [request a proposal](https://github.com/kaelzhang/stock-pandas/issues/new?assignees=&labels=feature&template=FEATURE_REQUEST.md&title=), or fork and send me a pull request, or extend stock-pandas yourself. You might read the [Advanced Sections](https://github.com/kaelzhang/stock-pandas#advanced-sections) below.\n\n`stock-pandas` makes automatical trading much easier. `stock-pandas` requires Python >= **3.6** and Pandas >= **1.0.0**(for now)\n\nWith the help of `stock-pandas` and mplfinance, we could easily draw something like:\n\n![](boll.png)\n\nThe code example is available at [here](https://github.com/kaelzhang/stock-pandas-examples/blob/master/example/bollinger_bands.ipynb).\n\n## Install\n\n```sh\npip install stock-pandas\n```\n\n## Usage\n\n```py\nfrom stock_pandas import StockDataFrame\n\n# or\nimport stock_pandas as spd\n```\n\nWe also have some examples with annotations in the [`example`](https://github.com/kaelzhang/stock-pandas/tree/master/example) directory, you could use [JupyterLab](https://jupyter.org/) or Jupyter notebook to play with them.\n\n### StockDataFrame\n\n`StockDataFrame` inherits from `pandas.DataFrame`, so if you are familiar with `pandas.DataFrame`, you are already ready to use `stock-pandas`\n\n```py\nimport pandas as pd\nstock = StockDataFrame(pd.read_csv('stock.csv'))\n```\n\nAs we know, we could use `[]`, which called **pandas indexing** (a.k.a. `__getitem__` in python) to select out lower-dimensional slices. In addition to indexing with `colname` (column name of the `DataFrame`), we could also do indexing by `directive`s.\n\n```py\nstock[directive] # Gets a pandas.Series\n\nstock[[directive0, directive1]] # Gets a StockDataFrame\n```\n\nWe have an example to show the most basic indexing using `[directive]`\n\n```py\nstock = StockDataFrame({\n    'open' : ...,\n    'high' : ...,\n    'low'  : ...,\n    'close': [5, 6, 7, 8, 9]\n})\n\nstock['ma:2']\n\n# 0    NaN\n# 1    5.5\n# 2    6.5\n# 3    7.5\n# 4    8.5\n# Name: ma:2,close, dtype: float64\n```\n\nWhich prints the 2-period simple moving average on column `\"close\"`.\n\n### stock.exec(directive: str, create_column: bool=False) -> np.ndarray\n\nExecutes the given directive and returns a numpy ndarray according to the directive.\n\n```py\nstock['ma:5'] # returns a Series\n\nstock.exec('ma:5', create_column=True) # returns a numpy ndarray\n```\n\n```py\n# This will only calculate without creating a new column in the dataframe\nstock.exec('ma:20')\n```\n\nThe difference between `stock[directive]` and `stock.exec(directive)` is that\n- the former will create a new column for the result of `directive` as a cache for later use, while `stock.exec(directive)` does not unless we pass the parameter `create_column` as `True`\n- the former one accepts other pandas indexing targets, while `stock.exec(directive)` only accepts a valid **stock-pandas** directive string\n- the former one returns a `pandas.Series` or `StockDataFrame` object while the latter one returns an [`np.ndarray`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html)\n\n### stock.alias(alias: str, name: str) -> None\n\nDefines column alias or directive alias\n\n- **alias** `str` the alias name\n- **name** `str` the name of an existing column or the directive string\n\n```py\n# Some plot library such as `mplfinance` requires a column named capitalized `Open`,\n# but it is ok, we could create an alias.\nstock.alias('Open', 'open')\n\nstock.alias('buy_point', 'kdj.j < 0')\n```\n\n### stock.append(other, *args, **kwargs) -> StockDataFrame\n\nAppends rows of `other` to the end of caller, returning a new object.\n\nThis method has nearly the same hehavior of [`pandas.DataFrame.append()`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.append.html), but instead it returns an instance of `StockDataFrame`\n\n## Syntax of `directive`\n\n```ebnf\ndirective := command | command operator expression\noperator := '/' | '\\' | '><' | '<' | '<=' | '==' | '>=' | '>'\nexpression := float | command\n\ncommand := command_name | command_name : arguments\ncommand_name := main_command_name | main_command_name.sub_command_name\nmain_command_name := alphabets\nsub_command_name := alphabets\n\narguments := argument | argument , arguments\nargument := empty_string | string | ( directive )\n```\n\n#### `directive` Example\n\nHere lists several use cases of column names\n\n```py\n# The middle band of bollinger bands\n#   which is actually a 20-period (default) moving average\nstock['boll']\n\n# kdj j less than 0\n# This returns a series of bool type\nstock['kdj.j < 0']\n\n# kdj %K cross up kdj %D\nstock['kdj.k / kdj.d']\n\n# 5-period simple moving average\nstock['ma:5']\n\n# 10-period simple moving average on open prices\nstock['ma:10,open']\n\n# Dataframe of 5-period, 10-period, 30-period ma\nstock[[\n    'ma:5',\n    'ma:10',\n    'ma:30'\n]]\n\n# Which means we use the default values of the first and the second parameters,\n# and specify the third parameter\nstock['macd:,,10']\n\n# We must wrap a parameter which is a nested command or directive\nstock['increase:(ma:20,close),3']\n\n# stock-pandas has a powerful directive parser,\n# so we could even write directives like this:\nstock['''\nrepeat\n    :\n        (\n            column:close > boll.upper\n        ),\n        5\n''']\n```\n\n## Built-in Commands of Indicators\n\nDocument syntax explanation:\n\n- **param0** `int` which means `param0` is a required parameter of type `int`.\n- **param1?** `str='close'` which means parameter `param1` is optional with default value `'close'`.\n\nActually, all parameters of a command are of string type, so the `int` here means an interger-like string.\n\n### `ma`, simple Moving Averages\n\n```\nma:<period>,<column>\n```\n\nGets the `period`-period simple moving average on column named `column`.\n\n`SMA` is often confused between simple moving average and smoothed moving average.\n\nSo `stock-pandas` will use `ma` for simple moving average and `smma` for smoothed moving average.\n\n- **period** `int` (required)\n- **column?** `enum<'open'|'high'|'low'|'close'>='close'` Which column should the calculation based on. Defaults to `'close'`\n\n```py\n# which is equivalent to `stock['ma:5,close']`\nstock['ma:5']\n\nstock['ma:10,open']\n```\n\n### `ema`, Exponential Moving Average\n\n```\nema:<period>,<column>\n```\n\nGets the Exponential Moving Average, also known as the Exponential Weighted Moving Average.\n\nThe arguments of this command is the same as `ma`.\n\n### `macd`, Moving Average Convergence Divergence\n\n```\nmacd:<fast_period>,<slow_period>\nmacd.signal:<fast_period>,<slow_period>,<signal_period>\nmacd.histogram:<fast_period>,<slow_period>,<signal_period>\n```\n\n- **fast_period?** `int=12` fast period (short period). Defaults to `12`.\n- **slow_period?** `int=26` slow period (long period). Defaults to `26`\n- **signal_period?** `int=9` signal period. Defaults to `9`\n\n```py\n# macd\nstock['macd']\nstock['macd.dif']\n\n# macd signal band, which is a shortcut for stock['macd.signal']\nstock['macd.s']\nstock['macd.signal']\nstock['macd.dea']\n\n# macd histogram band, which is equivalent to stock['macd.h']\nstock['macd.histogram']\nstock['macd.h']\nstock['macd.macd']\n```\n\n### `boll`, BOLLinger bands\n\n```\nboll:<period>,<column>\nboll.upper:<period>,<times>,<column>\nboll.lower:<period>,<times>,<column>\n```\n\n- **period?** `int=20`\n- **times?** `float=2.`\n- **column?** `str='close'`\n\n```py\n# boll\nstock['boll']\n\n# bollinger upper band, a shortcut for stock['boll.upper']\nstock['boll.u']\nstock['boll.upper]\n\n# bollinger lower band, which is equivalent to stock['boll.l']\nstock['boll.lower']\nstock['boll.l']\n```\n\n### `rsv`, Raw Stochastic Value\n\n```\nrsv:<period>\n```\n\nCalculates the raw stochastic value which is often used to calculate KDJ\n\n### `kdj`, stochastic oscillator\n\nThe variety of [Stochastic Oscillator](https://en.wikipedia.org/wiki/Stochastic_oscillator) indicator created by [Dr. George Lane](https://en.wikipedia.org/wiki/George_Lane_(technical_analyst)), which follows the formula:\n\n```\nRSV = rsv(period_rsv)\n%K = ema(RSV, period_k)\n%D = ema(%K, period_d)\n%J = 3 * %K - 2 * %D\n```\n\nAnd the `ema` here is the exponential weighted moving average with initial value as `init_value`.\n\nPAY ATTENTION that the calculation forumla is different from wikipedia, but it is much popular and more widely used by the industry.\n\n**Directive Arguments**:\n\n```\nkdj.k:<period_rsv>,<period_k>,<init_value>\nkdj.d:<period_rsv>,<period_k>,<period_d>,<init_value>\nkdj.j:<period_rsv>,<period_k>,<period_d>,<init_value>\n```\n\n- **period_rsv?** `int=9` The period for calculating RSV, which is used for K%\n- **period_k?** `int=3` The period for calculating the EMA of RSV, which is used for K%\n- **period_d?** `int=3` The period for calculating the EMA of K%, which is used for D%\n- **init_value?** `float=50.0` The initial value for calculating ema. Trading softwares of different companies usually use different initial values each of which is usually `0.0`, `50.0` or `100.0`.\n\n```py\n# The %D series of KDJ\nstock['kdj.d']\n# which is equivalent to\nstock['kdj.d:9,3,3,50.0']\n\n# The KDJ serieses of with parameters 9, 9, and 9\nstock[['kdj.k:9,9', 'kdj.d:9,9', 'kdj.j:9,9,9']]\n```\n\n### `rsi`, Relative Strength Index\n\n```\nrsi:<period>\n```\n\nCalculates the N-period RSI (Relative Strength Index)\n\n- **period** `int` The period to calculate RSI. `period` should be an int which is larger than `1`\n\n### `bbi`, Bull and Bear Index\n\n```\nbbi:<a>,<b>,<c>,<d>\n```\n\nCalculates indicator BBI (Bull and Bear Index) which is the average of `ma:3`, `ma:6`, `ma:12`, `ma:24` by default\n\n- **a?** `int=3`\n- **b?** `int=6`\n- **c?** `int=12`\n- **d?** `int=24`\n\n### `llv`, Lowest of Low Values\n\n```\nllv:<period>,<column>\n```\n\nGets the lowest of low prices in N periods\n\n- **period** `int`\n- **column?** `str='low'` Defaults to `'low'`. But you could also get the lowest value of close prices\n\n```py\n# The 10-period lowest prices\nstock['llv:10']\n\n# The 10-period lowest close prices\nstock['llv:10,close']\n```\n\n### `hhv`, Highest of High Values\n\n```\nhhv:<period>,<column>\n```\n\nGets the highest of high prices in N periods. The arguments of `hhv` is the same as `llv`\n\n## Built-in Commands for Statistics\n\n### `column`\n\n```\ncolumn:<name>\n```\n\nJust gets the series of a column. This command is designed to be used together with an operator to compare with another command or as a parameter of some statistics command.\n\n- **name** `str` the name of the column\n\n### `increase`\n\n```\nincrease:<on>,<repeat>,<step>\n```\n\nGets a `bool`-type series each item of which is `True` if the value of indicator `on_what` increases in the last `period`-period.\n\n- **on** `str` the command name of an indicator on what the calculation should be based\n- **repeat?** `int=1`\n- **direction?** `1 | -1` the direction of \"increase\". `-1` means decreasing\n\nFor example:\n\n```py\n# Which means whether the `ma:20,close` line\n# (a.k.a. 20-period simple moving average on column `'close'`)\n# has been increasing repeatedly for 3 times (maybe 3 days)\nstock['increase:(ma:20,close),3']\n\n# If the close price has been decreasing repeatedly for 5 times (maybe 5 days)\nstock['increase:close,5,-1']\n```\n\n### `style`\n\n```\nstyle:<style>\n```\n\nGets a `bool`-type series whether the candlestick of a period is of `style` style\n\n- **style** `'bullish' | 'bearish'`\n\n```py\nstock['style:bullish']\n```\n\n### `repeat`\n\n```\nrepeat:(<bool_directive>),<repeat>\n```\n\nThe `repeat` command first gets the result of directive `bool_directive`, and detect whether `True` is repeated for `repeat` times\n\n- **bool_directive** `str` the directive which should returns a series of `bool`s. PAY ATTENTION, that the directive should be wrapped with parantheses as a parameter.\n- **repeat?** `int=1` which should be larger than `0`\n\n```py\n# Whether the bullish candlestick repeats for 3 periods (maybe 3 days)\nstock['repeat:(style:bullish),3']\n```\n\n### `change`\n\n```\nchange:<on>,<period>\n```\n\nPercentage change between the current and a prior element on a certain series\n\nComputes the percentage change from the immediately previous element by default. This is useful in comparing the percentage of change in a time series of prices.\n\n- **on** `str` the directive which returns a series of numbers, and the calculation will based on the series.\n- **period?** `int=2` `2` means we computes with the start value and the end value of a 2-period window.\n\n```py\n# Percentage change of 20-period simple moving average\nstock['change:(ma:20)']\n```\n\n## Operators\n\n```\nleft operator right\n```\n\n### Operator: `/`\n\nwhether `left` crosses through `right` from the down side of `right` to the upper side which we call it as \"cross up\".\n\n### Operator: `\\`\n\nwhether `left` crosses down `right`.\n\n```py\n# Which we call them __dead crosses__\nstock['macd \\\\ macd.signal']\n```\n\n**PAY ATTENTION**, in the example above, we should escape the backslash, so we've got double backslashes `'\\\\'`\n\n### Operator: `><`\n\nwhether `left` crosses `right`, either up or down.\n\n### Operator: `<` | `<=` | `==` | `>=` | `>`\n\nFor a certain record of the same time, whether the value of `left` is less than / less than or equal to / equal to / larger than or equal to / larger than the value of `right`.\n\n## Errors\n\n```py\nfrom stock_pandas import (\n    DirectiveSyntaxError,\n    DirectiveValueError\n)\n```\n\n### `DirectiveSyntaxError`\n\nRaises if there is a syntax error in the given directive.\n\n```py\nstock['''\nrepeat\n    :\n        (\n            column:close >> boll.upper\n        ),\n        5\n''']\n```\n\n`DirectiveSyntaxError` might print some messages like this:\n\n```\nFile \"<string>\", line 5, column 26\n\n   repeat\n       :\n           (\n>              column:close >> boll.upper\n           ),\n           5\n\n                            ^\nDirectiveSyntaxError: \">>\" is an invalid operator\n```\n\n### `DirectiveValueError`\n\nRaises if\n- there is an unknown command name\n- something is wrong about the command arguments\n- etc.\n\n****\n\n## Advanced Sections\n\n> How to extend stock-pandas and support more indicators,\n\n> This section is only recommended for contributors, but not for normal users, for that the definition of `COMMANDS` might change in the future.\n\n```py\nfrom stock_pandas import COMMANDS, CommandPreset\n```\n\nTo add a new indicator to stock-pandas, you could update the `COMMANDS` dict.\n\n```py\n# The value of 'new-indicator' is a tuple\nCOMMANDS['new-indicator'] = (\n    # The first item of the tuple is a CommandPreset instance\n    CommandPreset(\n        formula,\n        args_setting\n    ),\n    sub_commands_dict,\n    aliases_of_sub_commands\n)\n```\n\nYou could check [here](https://github.com/kaelzhang/stock-pandas/blob/master/stock_pandas/commands/base.py#L54) to figure out the typings for `COMMANDS`.\n\nFor a simplest indicator, such as simple moving average, you could check the implementation [here](https://github.com/kaelzhang/stock-pandas/blob/master/stock_pandas/commands/trend_following.py#L60).\n\n### formula(df, s, *args) -> Tuple[np.ndarray, int]\n\n`formula` is a `Callable[[StockDataFrame, slice, ...], [ndarray, int]]`.\n\n- **df** `StockDataFrame` the first argument of `formula` is the stock dataframe itself\n- **s** `slice` sometimes, we don't need to calculate the whole dataframe but only part of it. This argument is passed into the formula by `stock_pandas` and should not be changed manually.\n- **args** `Tuple[Any]` the args of the indicator which is defined by `args_setting`\n\nThe Callable returns a tuple:\n- The first item of the tuple is the calculated result which is a numpy ndarray.\n- The second item of the tuple is the mininum periods to calculate the indicator.\n\n### args_setting: [(default, validate_and_coerce), ...]\n\n`args_setting` is a list of tuples.\n\n- The first item of each tuple is the default value of the parameter, and it could be `None` which implies it has no default value and is required.\n\n- The second item is a raisable callable which receives user input, validates it, coerces the type of the value and returns it. If the parameter has a default value and user don't specified a value, the function will be skipped.\n\n### sub_commands_dict: Dict[str, CommandPreset]\n\nA dict to declare sub commands, such as `boll.upper`.\n\n`sub_commands_dict` could be `None` which indicates the indicator has no sub commands\n\n### aliases_of_sub_commands: Dict[str, Optional[str]]\n\nWhich declares the shortcut or alias of the commands, such as `boll.u`\n\n```py\ndict(\n    u='upper'\n)\n```\n\nIf the value of an alias is `None`, which means it is an alias of the main command, such as `macd.dif`\n\n```py\ndict(\n    dif=None\n)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kaelzhang/stock-pandas", "keywords": "pandas pandas-dataframe stock stat indicators macd", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "stock-pandas", "package_url": "https://pypi.org/project/stock-pandas/", "platform": "", "project_url": "https://pypi.org/project/stock-pandas/", "project_urls": {"Homepage": "https://github.com/kaelzhang/stock-pandas"}, "release_url": "https://pypi.org/project/stock-pandas/0.23.1/", "requires_dist": ["numpy", "pandas (>=1.0.0)"], "requires_python": ">=3.6", "summary": "The wrapper of `pandas.DataFrame` with stock statistics and indicators support.", "version": "0.23.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/kaelzhang/stock-pandas\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b60117fa146dee03e8a165b40b2d7fa1fe841916/68747470733a2f2f7472617669732d63692e6f72672f6b61656c7a68616e672f73746f636b2d70616e6461732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/kaelzhang/stock-pandas\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78c62242f5ece15ad0a30553c0490185ef455f32/68747470733a2f2f636f6465636f762e696f2f67682f6b61656c7a68616e672f73746f636b2d70616e6461732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/stock-pandas/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b59d6ca7e46063c8d16bd644dfc4119b5a5632f3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73746f636b2d70616e6461732e737667\"></a>\n<a href=\"https://github.com/kaelzhang/stock-pandas\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c8edc05369ca8b9e1c1d681130b298326c33cd7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f73746f636b2d70616e6461732e737667\"></a></p>\n<h1><a href=\"https://github.com/kaelzhang/stock-pandas\" rel=\"nofollow\">stock-pandas</a></h1>\n<p><strong>stock-pandas</strong> inherits and extends <code>pandas.DataFrame</code> to support:</p>\n<ul>\n<li>Stock Statistics</li>\n<li>Stock Indicators, including:\n<ul>\n<li>Trend-following momentum indicators, such as <strong>MA</strong>, <strong>EMA</strong>, <strong>MACD</strong>, <strong>BBI</strong></li>\n<li>Dynamic support and resistance indicators, such as <strong>BOLL</strong></li>\n<li>Over-bought / over-sold indicators, such as <strong>KDJ</strong>, <strong>RSI</strong></li>\n<li>Other indicators, such as <strong>LLV</strong>, <strong>HHV</strong></li>\n<li>For more indicators, welcome to <a href=\"https://github.com/kaelzhang/stock-pandas/issues/new?assignees=&amp;labels=feature&amp;template=FEATURE_REQUEST.md&amp;title=\" rel=\"nofollow\">request a proposal</a>, or fork and send me a pull request, or extend stock-pandas yourself. You might read the <a href=\"https://github.com/kaelzhang/stock-pandas#advanced-sections\" rel=\"nofollow\">Advanced Sections</a> below.</li>\n</ul>\n</li>\n</ul>\n<p><code>stock-pandas</code> makes automatical trading much easier. <code>stock-pandas</code> requires Python &gt;= <strong>3.6</strong> and Pandas &gt;= <strong>1.0.0</strong>(for now)</p>\n<p>With the help of <code>stock-pandas</code> and mplfinance, we could easily draw something like:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75ac88f1006a75ece831a77b8a6a139d7009b334/626f6c6c2e706e67\"></p>\n<p>The code example is available at <a href=\"https://github.com/kaelzhang/stock-pandas-examples/blob/master/example/bollinger_bands.ipynb\" rel=\"nofollow\">here</a>.</p>\n<h2>Install</h2>\n<pre>pip install stock-pandas\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stock_pandas</span> <span class=\"kn\">import</span> <span class=\"n\">StockDataFrame</span>\n\n<span class=\"c1\"># or</span>\n<span class=\"kn\">import</span> <span class=\"nn\">stock_pandas</span> <span class=\"k\">as</span> <span class=\"nn\">spd</span>\n</pre>\n<p>We also have some examples with annotations in the <a href=\"https://github.com/kaelzhang/stock-pandas/tree/master/example\" rel=\"nofollow\"><code>example</code></a> directory, you could use <a href=\"https://jupyter.org/\" rel=\"nofollow\">JupyterLab</a> or Jupyter notebook to play with them.</p>\n<h3>StockDataFrame</h3>\n<p><code>StockDataFrame</code> inherits from <code>pandas.DataFrame</code>, so if you are familiar with <code>pandas.DataFrame</code>, you are already ready to use <code>stock-pandas</code></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"n\">stock</span> <span class=\"o\">=</span> <span class=\"n\">StockDataFrame</span><span class=\"p\">(</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">'stock.csv'</span><span class=\"p\">))</span>\n</pre>\n<p>As we know, we could use <code>[]</code>, which called <strong>pandas indexing</strong> (a.k.a. <code>__getitem__</code> in python) to select out lower-dimensional slices. In addition to indexing with <code>colname</code> (column name of the <code>DataFrame</code>), we could also do indexing by <code>directive</code>s.</p>\n<pre><span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"n\">directive</span><span class=\"p\">]</span> <span class=\"c1\"># Gets a pandas.Series</span>\n\n<span class=\"n\">stock</span><span class=\"p\">[[</span><span class=\"n\">directive0</span><span class=\"p\">,</span> <span class=\"n\">directive1</span><span class=\"p\">]]</span> <span class=\"c1\"># Gets a StockDataFrame</span>\n</pre>\n<p>We have an example to show the most basic indexing using <code>[directive]</code></p>\n<pre><span class=\"n\">stock</span> <span class=\"o\">=</span> <span class=\"n\">StockDataFrame</span><span class=\"p\">({</span>\n    <span class=\"s1\">'open'</span> <span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'high'</span> <span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'low'</span>  <span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'close'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'ma:2'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># 0    NaN</span>\n<span class=\"c1\"># 1    5.5</span>\n<span class=\"c1\"># 2    6.5</span>\n<span class=\"c1\"># 3    7.5</span>\n<span class=\"c1\"># 4    8.5</span>\n<span class=\"c1\"># Name: ma:2,close, dtype: float64</span>\n</pre>\n<p>Which prints the 2-period simple moving average on column <code>\"close\"</code>.</p>\n<h3>stock.exec(directive: str, create_column: bool=False) -&gt; np.ndarray</h3>\n<p>Executes the given directive and returns a numpy ndarray according to the directive.</p>\n<pre><span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'ma:5'</span><span class=\"p\">]</span> <span class=\"c1\"># returns a Series</span>\n\n<span class=\"n\">stock</span><span class=\"o\">.</span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"s1\">'ma:5'</span><span class=\"p\">,</span> <span class=\"n\">create_column</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># returns a numpy ndarray</span>\n</pre>\n<pre><span class=\"c1\"># This will only calculate without creating a new column in the dataframe</span>\n<span class=\"n\">stock</span><span class=\"o\">.</span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"s1\">'ma:20'</span><span class=\"p\">)</span>\n</pre>\n<p>The difference between <code>stock[directive]</code> and <code>stock.exec(directive)</code> is that</p>\n<ul>\n<li>the former will create a new column for the result of <code>directive</code> as a cache for later use, while <code>stock.exec(directive)</code> does not unless we pass the parameter <code>create_column</code> as <code>True</code></li>\n<li>the former one accepts other pandas indexing targets, while <code>stock.exec(directive)</code> only accepts a valid <strong>stock-pandas</strong> directive string</li>\n<li>the former one returns a <code>pandas.Series</code> or <code>StockDataFrame</code> object while the latter one returns an <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html\" rel=\"nofollow\"><code>np.ndarray</code></a></li>\n</ul>\n<h3>stock.alias(alias: str, name: str) -&gt; None</h3>\n<p>Defines column alias or directive alias</p>\n<ul>\n<li><strong>alias</strong> <code>str</code> the alias name</li>\n<li><strong>name</strong> <code>str</code> the name of an existing column or the directive string</li>\n</ul>\n<pre><span class=\"c1\"># Some plot library such as `mplfinance` requires a column named capitalized `Open`,</span>\n<span class=\"c1\"># but it is ok, we could create an alias.</span>\n<span class=\"n\">stock</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">'Open'</span><span class=\"p\">,</span> <span class=\"s1\">'open'</span><span class=\"p\">)</span>\n\n<span class=\"n\">stock</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">'buy_point'</span><span class=\"p\">,</span> <span class=\"s1\">'kdj.j &lt; 0'</span><span class=\"p\">)</span>\n</pre>\n<h3>stock.append(other, *args, **kwargs) -&gt; StockDataFrame</h3>\n<p>Appends rows of <code>other</code> to the end of caller, returning a new object.</p>\n<p>This method has nearly the same hehavior of <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.append.html\" rel=\"nofollow\"><code>pandas.DataFrame.append()</code></a>, but instead it returns an instance of <code>StockDataFrame</code></p>\n<h2>Syntax of <code>directive</code></h2>\n<pre><span class=\"k\">directive </span><span class=\"err\">:</span><span class=\"o\">=</span> <span class=\"k\">command </span><span class=\"p\">|</span> <span class=\"k\">command operator expression</span>\n<span class=\"k\">operator </span><span class=\"err\">:=</span> <span class=\"s1\">'/'</span> <span class=\"p\">|</span> <span class=\"s1\">'\\'</span> <span class=\"p\">|</span> <span class=\"s1\">'&gt;&lt;'</span> <span class=\"p\">|</span> <span class=\"s1\">'&lt;'</span> <span class=\"p\">|</span> <span class=\"s1\">'&lt;='</span> <span class=\"p\">|</span> <span class=\"s1\">'=='</span> <span class=\"p\">|</span> <span class=\"s1\">'&gt;='</span> <span class=\"p\">|</span> <span class=\"s1\">'&gt;'</span>\n<span class=\"k\">expression </span><span class=\"err\">:=</span> <span class=\"k\">float </span><span class=\"p\">|</span> <span class=\"k\">command</span>\n\n<span class=\"k\">command </span><span class=\"err\">:=</span> <span class=\"k\">command_name </span><span class=\"p\">|</span> <span class=\"k\">command_name </span><span class=\"err\">:</span> <span class=\"k\">arguments</span>\n<span class=\"k\">command_name </span><span class=\"err\">:=</span> <span class=\"k\">main_command_name </span><span class=\"p\">|</span> <span class=\"k\">main_command_name</span><span class=\"p\">.</span><span class=\"k\">sub_command_name</span>\n<span class=\"k\">main_command_name </span><span class=\"err\">:</span><span class=\"o\">=</span> <span class=\"k\">alphabets</span>\n<span class=\"k\">sub_command_name </span><span class=\"err\">:=</span> <span class=\"k\">alphabets</span>\n\n<span class=\"k\">arguments </span><span class=\"err\">:=</span> <span class=\"k\">argument </span><span class=\"p\">|</span> <span class=\"k\">argument </span><span class=\"p\">,</span> <span class=\"k\">arguments</span>\n<span class=\"k\">argument </span><span class=\"err\">:=</span> <span class=\"k\">empty_string </span><span class=\"p\">|</span> <span class=\"k\">string </span><span class=\"p\">|</span> <span class=\"p\">(</span> <span class=\"k\">directive </span><span class=\"p\">)</span>\n</pre>\n<h4><code>directive</code> Example</h4>\n<p>Here lists several use cases of column names</p>\n<pre><span class=\"c1\"># The middle band of bollinger bands</span>\n<span class=\"c1\">#   which is actually a 20-period (default) moving average</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'boll'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># kdj j less than 0</span>\n<span class=\"c1\"># This returns a series of bool type</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'kdj.j &lt; 0'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># kdj %K cross up kdj %D</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'kdj.k / kdj.d'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># 5-period simple moving average</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'ma:5'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># 10-period simple moving average on open prices</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'ma:10,open'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Dataframe of 5-period, 10-period, 30-period ma</span>\n<span class=\"n\">stock</span><span class=\"p\">[[</span>\n    <span class=\"s1\">'ma:5'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ma:10'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ma:30'</span>\n<span class=\"p\">]]</span>\n\n<span class=\"c1\"># Which means we use the default values of the first and the second parameters,</span>\n<span class=\"c1\"># and specify the third parameter</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd:,,10'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># We must wrap a parameter which is a nested command or directive</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'increase:(ma:20,close),3'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># stock-pandas has a powerful directive parser,</span>\n<span class=\"c1\"># so we could even write directives like this:</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'''</span>\n<span class=\"s1\">repeat</span>\n<span class=\"s1\">    :</span>\n<span class=\"s1\">        (</span>\n<span class=\"s1\">            column:close &gt; boll.upper</span>\n<span class=\"s1\">        ),</span>\n<span class=\"s1\">        5</span>\n<span class=\"s1\">'''</span><span class=\"p\">]</span>\n</pre>\n<h2>Built-in Commands of Indicators</h2>\n<p>Document syntax explanation:</p>\n<ul>\n<li><strong>param0</strong> <code>int</code> which means <code>param0</code> is a required parameter of type <code>int</code>.</li>\n<li><strong>param1?</strong> <code>str='close'</code> which means parameter <code>param1</code> is optional with default value <code>'close'</code>.</li>\n</ul>\n<p>Actually, all parameters of a command are of string type, so the <code>int</code> here means an interger-like string.</p>\n<h3><code>ma</code>, simple Moving Averages</h3>\n<pre><code>ma:&lt;period&gt;,&lt;column&gt;\n</code></pre>\n<p>Gets the <code>period</code>-period simple moving average on column named <code>column</code>.</p>\n<p><code>SMA</code> is often confused between simple moving average and smoothed moving average.</p>\n<p>So <code>stock-pandas</code> will use <code>ma</code> for simple moving average and <code>smma</code> for smoothed moving average.</p>\n<ul>\n<li><strong>period</strong> <code>int</code> (required)</li>\n<li><strong>column?</strong> <code>enum&lt;'open'|'high'|'low'|'close'&gt;='close'</code> Which column should the calculation based on. Defaults to <code>'close'</code></li>\n</ul>\n<pre><span class=\"c1\"># which is equivalent to `stock['ma:5,close']`</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'ma:5'</span><span class=\"p\">]</span>\n\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'ma:10,open'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>ema</code>, Exponential Moving Average</h3>\n<pre><code>ema:&lt;period&gt;,&lt;column&gt;\n</code></pre>\n<p>Gets the Exponential Moving Average, also known as the Exponential Weighted Moving Average.</p>\n<p>The arguments of this command is the same as <code>ma</code>.</p>\n<h3><code>macd</code>, Moving Average Convergence Divergence</h3>\n<pre><code>macd:&lt;fast_period&gt;,&lt;slow_period&gt;\nmacd.signal:&lt;fast_period&gt;,&lt;slow_period&gt;,&lt;signal_period&gt;\nmacd.histogram:&lt;fast_period&gt;,&lt;slow_period&gt;,&lt;signal_period&gt;\n</code></pre>\n<ul>\n<li><strong>fast_period?</strong> <code>int=12</code> fast period (short period). Defaults to <code>12</code>.</li>\n<li><strong>slow_period?</strong> <code>int=26</code> slow period (long period). Defaults to <code>26</code></li>\n<li><strong>signal_period?</strong> <code>int=9</code> signal period. Defaults to <code>9</code></li>\n</ul>\n<pre><span class=\"c1\"># macd</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.dif'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># macd signal band, which is a shortcut for stock['macd.signal']</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.s'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.signal'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.dea'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># macd histogram band, which is equivalent to stock['macd.h']</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.histogram'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.h'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd.macd'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>boll</code>, BOLLinger bands</h3>\n<pre><code>boll:&lt;period&gt;,&lt;column&gt;\nboll.upper:&lt;period&gt;,&lt;times&gt;,&lt;column&gt;\nboll.lower:&lt;period&gt;,&lt;times&gt;,&lt;column&gt;\n</code></pre>\n<ul>\n<li><strong>period?</strong> <code>int=20</code></li>\n<li><strong>times?</strong> <code>float=2.</code></li>\n<li><strong>column?</strong> <code>str='close'</code></li>\n</ul>\n<pre><span class=\"c1\"># boll</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'boll'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># bollinger upper band, a shortcut for stock['boll.upper']</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'boll.u'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'boll.upper]</span>\n\n<span class=\"c1\"># bollinger lower band, which is equivalent to stock['boll.l']</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'boll.lower'</span><span class=\"p\">]</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'boll.l'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>rsv</code>, Raw Stochastic Value</h3>\n<pre><code>rsv:&lt;period&gt;\n</code></pre>\n<p>Calculates the raw stochastic value which is often used to calculate KDJ</p>\n<h3><code>kdj</code>, stochastic oscillator</h3>\n<p>The variety of <a href=\"https://en.wikipedia.org/wiki/Stochastic_oscillator\" rel=\"nofollow\">Stochastic Oscillator</a> indicator created by <a href=\"https://en.wikipedia.org/wiki/George_Lane_(technical_analyst)\" rel=\"nofollow\">Dr. George Lane</a>, which follows the formula:</p>\n<pre><code>RSV = rsv(period_rsv)\n%K = ema(RSV, period_k)\n%D = ema(%K, period_d)\n%J = 3 * %K - 2 * %D\n</code></pre>\n<p>And the <code>ema</code> here is the exponential weighted moving average with initial value as <code>init_value</code>.</p>\n<p>PAY ATTENTION that the calculation forumla is different from wikipedia, but it is much popular and more widely used by the industry.</p>\n<p><strong>Directive Arguments</strong>:</p>\n<pre><code>kdj.k:&lt;period_rsv&gt;,&lt;period_k&gt;,&lt;init_value&gt;\nkdj.d:&lt;period_rsv&gt;,&lt;period_k&gt;,&lt;period_d&gt;,&lt;init_value&gt;\nkdj.j:&lt;period_rsv&gt;,&lt;period_k&gt;,&lt;period_d&gt;,&lt;init_value&gt;\n</code></pre>\n<ul>\n<li><strong>period_rsv?</strong> <code>int=9</code> The period for calculating RSV, which is used for K%</li>\n<li><strong>period_k?</strong> <code>int=3</code> The period for calculating the EMA of RSV, which is used for K%</li>\n<li><strong>period_d?</strong> <code>int=3</code> The period for calculating the EMA of K%, which is used for D%</li>\n<li><strong>init_value?</strong> <code>float=50.0</code> The initial value for calculating ema. Trading softwares of different companies usually use different initial values each of which is usually <code>0.0</code>, <code>50.0</code> or <code>100.0</code>.</li>\n</ul>\n<pre><span class=\"c1\"># The %D series of KDJ</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'kdj.d'</span><span class=\"p\">]</span>\n<span class=\"c1\"># which is equivalent to</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'kdj.d:9,3,3,50.0'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># The KDJ serieses of with parameters 9, 9, and 9</span>\n<span class=\"n\">stock</span><span class=\"p\">[[</span><span class=\"s1\">'kdj.k:9,9'</span><span class=\"p\">,</span> <span class=\"s1\">'kdj.d:9,9'</span><span class=\"p\">,</span> <span class=\"s1\">'kdj.j:9,9,9'</span><span class=\"p\">]]</span>\n</pre>\n<h3><code>rsi</code>, Relative Strength Index</h3>\n<pre><code>rsi:&lt;period&gt;\n</code></pre>\n<p>Calculates the N-period RSI (Relative Strength Index)</p>\n<ul>\n<li><strong>period</strong> <code>int</code> The period to calculate RSI. <code>period</code> should be an int which is larger than <code>1</code></li>\n</ul>\n<h3><code>bbi</code>, Bull and Bear Index</h3>\n<pre><code>bbi:&lt;a&gt;,&lt;b&gt;,&lt;c&gt;,&lt;d&gt;\n</code></pre>\n<p>Calculates indicator BBI (Bull and Bear Index) which is the average of <code>ma:3</code>, <code>ma:6</code>, <code>ma:12</code>, <code>ma:24</code> by default</p>\n<ul>\n<li><strong>a?</strong> <code>int=3</code></li>\n<li><strong>b?</strong> <code>int=6</code></li>\n<li><strong>c?</strong> <code>int=12</code></li>\n<li><strong>d?</strong> <code>int=24</code></li>\n</ul>\n<h3><code>llv</code>, Lowest of Low Values</h3>\n<pre><code>llv:&lt;period&gt;,&lt;column&gt;\n</code></pre>\n<p>Gets the lowest of low prices in N periods</p>\n<ul>\n<li><strong>period</strong> <code>int</code></li>\n<li><strong>column?</strong> <code>str='low'</code> Defaults to <code>'low'</code>. But you could also get the lowest value of close prices</li>\n</ul>\n<pre><span class=\"c1\"># The 10-period lowest prices</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'llv:10'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># The 10-period lowest close prices</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'llv:10,close'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>hhv</code>, Highest of High Values</h3>\n<pre><code>hhv:&lt;period&gt;,&lt;column&gt;\n</code></pre>\n<p>Gets the highest of high prices in N periods. The arguments of <code>hhv</code> is the same as <code>llv</code></p>\n<h2>Built-in Commands for Statistics</h2>\n<h3><code>column</code></h3>\n<pre><code>column:&lt;name&gt;\n</code></pre>\n<p>Just gets the series of a column. This command is designed to be used together with an operator to compare with another command or as a parameter of some statistics command.</p>\n<ul>\n<li><strong>name</strong> <code>str</code> the name of the column</li>\n</ul>\n<h3><code>increase</code></h3>\n<pre><code>increase:&lt;on&gt;,&lt;repeat&gt;,&lt;step&gt;\n</code></pre>\n<p>Gets a <code>bool</code>-type series each item of which is <code>True</code> if the value of indicator <code>on_what</code> increases in the last <code>period</code>-period.</p>\n<ul>\n<li><strong>on</strong> <code>str</code> the command name of an indicator on what the calculation should be based</li>\n<li><strong>repeat?</strong> <code>int=1</code></li>\n<li><strong>direction?</strong> <code>1 | -1</code> the direction of \"increase\". <code>-1</code> means decreasing</li>\n</ul>\n<p>For example:</p>\n<pre><span class=\"c1\"># Which means whether the `ma:20,close` line</span>\n<span class=\"c1\"># (a.k.a. 20-period simple moving average on column `'close'`)</span>\n<span class=\"c1\"># has been increasing repeatedly for 3 times (maybe 3 days)</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'increase:(ma:20,close),3'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># If the close price has been decreasing repeatedly for 5 times (maybe 5 days)</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'increase:close,5,-1'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>style</code></h3>\n<pre><code>style:&lt;style&gt;\n</code></pre>\n<p>Gets a <code>bool</code>-type series whether the candlestick of a period is of <code>style</code> style</p>\n<ul>\n<li><strong>style</strong> <code>'bullish' | 'bearish'</code></li>\n</ul>\n<pre><span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'style:bullish'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>repeat</code></h3>\n<pre><code>repeat:(&lt;bool_directive&gt;),&lt;repeat&gt;\n</code></pre>\n<p>The <code>repeat</code> command first gets the result of directive <code>bool_directive</code>, and detect whether <code>True</code> is repeated for <code>repeat</code> times</p>\n<ul>\n<li><strong>bool_directive</strong> <code>str</code> the directive which should returns a series of <code>bool</code>s. PAY ATTENTION, that the directive should be wrapped with parantheses as a parameter.</li>\n<li><strong>repeat?</strong> <code>int=1</code> which should be larger than <code>0</code></li>\n</ul>\n<pre><span class=\"c1\"># Whether the bullish candlestick repeats for 3 periods (maybe 3 days)</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'repeat:(style:bullish),3'</span><span class=\"p\">]</span>\n</pre>\n<h3><code>change</code></h3>\n<pre><code>change:&lt;on&gt;,&lt;period&gt;\n</code></pre>\n<p>Percentage change between the current and a prior element on a certain series</p>\n<p>Computes the percentage change from the immediately previous element by default. This is useful in comparing the percentage of change in a time series of prices.</p>\n<ul>\n<li><strong>on</strong> <code>str</code> the directive which returns a series of numbers, and the calculation will based on the series.</li>\n<li><strong>period?</strong> <code>int=2</code> <code>2</code> means we computes with the start value and the end value of a 2-period window.</li>\n</ul>\n<pre><span class=\"c1\"># Percentage change of 20-period simple moving average</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'change:(ma:20)'</span><span class=\"p\">]</span>\n</pre>\n<h2>Operators</h2>\n<pre><code>left operator right\n</code></pre>\n<h3>Operator: <code>/</code></h3>\n<p>whether <code>left</code> crosses through <code>right</code> from the down side of <code>right</code> to the upper side which we call it as \"cross up\".</p>\n<h3>Operator: <code>\\</code></h3>\n<p>whether <code>left</code> crosses down <code>right</code>.</p>\n<pre><span class=\"c1\"># Which we call them __dead crosses__</span>\n<span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'macd </span><span class=\"se\">\\\\</span><span class=\"s1\"> macd.signal'</span><span class=\"p\">]</span>\n</pre>\n<p><strong>PAY ATTENTION</strong>, in the example above, we should escape the backslash, so we've got double backslashes <code>'\\\\'</code></p>\n<h3>Operator: <code>&gt;&lt;</code></h3>\n<p>whether <code>left</code> crosses <code>right</code>, either up or down.</p>\n<h3>Operator: <code>&lt;</code> | <code>&lt;=</code> | <code>==</code> | <code>&gt;=</code> | <code>&gt;</code></h3>\n<p>For a certain record of the same time, whether the value of <code>left</code> is less than / less than or equal to / equal to / larger than or equal to / larger than the value of <code>right</code>.</p>\n<h2>Errors</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stock_pandas</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">DirectiveSyntaxError</span><span class=\"p\">,</span>\n    <span class=\"n\">DirectiveValueError</span>\n<span class=\"p\">)</span>\n</pre>\n<h3><code>DirectiveSyntaxError</code></h3>\n<p>Raises if there is a syntax error in the given directive.</p>\n<pre><span class=\"n\">stock</span><span class=\"p\">[</span><span class=\"s1\">'''</span>\n<span class=\"s1\">repeat</span>\n<span class=\"s1\">    :</span>\n<span class=\"s1\">        (</span>\n<span class=\"s1\">            column:close &gt;&gt; boll.upper</span>\n<span class=\"s1\">        ),</span>\n<span class=\"s1\">        5</span>\n<span class=\"s1\">'''</span><span class=\"p\">]</span>\n</pre>\n<p><code>DirectiveSyntaxError</code> might print some messages like this:</p>\n<pre><code>File \"&lt;string&gt;\", line 5, column 26\n\n   repeat\n       :\n           (\n&gt;              column:close &gt;&gt; boll.upper\n           ),\n           5\n\n                            ^\nDirectiveSyntaxError: \"&gt;&gt;\" is an invalid operator\n</code></pre>\n<h3><code>DirectiveValueError</code></h3>\n<p>Raises if</p>\n<ul>\n<li>there is an unknown command name</li>\n<li>something is wrong about the command arguments</li>\n<li>etc.</li>\n</ul>\n<hr>\n<h2>Advanced Sections</h2>\n<blockquote>\n<p>How to extend stock-pandas and support more indicators,</p>\n</blockquote>\n<blockquote>\n<p>This section is only recommended for contributors, but not for normal users, for that the definition of <code>COMMANDS</code> might change in the future.</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stock_pandas</span> <span class=\"kn\">import</span> <span class=\"n\">COMMANDS</span><span class=\"p\">,</span> <span class=\"n\">CommandPreset</span>\n</pre>\n<p>To add a new indicator to stock-pandas, you could update the <code>COMMANDS</code> dict.</p>\n<pre><span class=\"c1\"># The value of 'new-indicator' is a tuple</span>\n<span class=\"n\">COMMANDS</span><span class=\"p\">[</span><span class=\"s1\">'new-indicator'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># The first item of the tuple is a CommandPreset instance</span>\n    <span class=\"n\">CommandPreset</span><span class=\"p\">(</span>\n        <span class=\"n\">formula</span><span class=\"p\">,</span>\n        <span class=\"n\">args_setting</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">sub_commands_dict</span><span class=\"p\">,</span>\n    <span class=\"n\">aliases_of_sub_commands</span>\n<span class=\"p\">)</span>\n</pre>\n<p>You could check <a href=\"https://github.com/kaelzhang/stock-pandas/blob/master/stock_pandas/commands/base.py#L54\" rel=\"nofollow\">here</a> to figure out the typings for <code>COMMANDS</code>.</p>\n<p>For a simplest indicator, such as simple moving average, you could check the implementation <a href=\"https://github.com/kaelzhang/stock-pandas/blob/master/stock_pandas/commands/trend_following.py#L60\" rel=\"nofollow\">here</a>.</p>\n<h3>formula(df, s, *args) -&gt; Tuple[np.ndarray, int]</h3>\n<p><code>formula</code> is a <code>Callable[[StockDataFrame, slice, ...], [ndarray, int]]</code>.</p>\n<ul>\n<li><strong>df</strong> <code>StockDataFrame</code> the first argument of <code>formula</code> is the stock dataframe itself</li>\n<li><strong>s</strong> <code>slice</code> sometimes, we don't need to calculate the whole dataframe but only part of it. This argument is passed into the formula by <code>stock_pandas</code> and should not be changed manually.</li>\n<li><strong>args</strong> <code>Tuple[Any]</code> the args of the indicator which is defined by <code>args_setting</code></li>\n</ul>\n<p>The Callable returns a tuple:</p>\n<ul>\n<li>The first item of the tuple is the calculated result which is a numpy ndarray.</li>\n<li>The second item of the tuple is the mininum periods to calculate the indicator.</li>\n</ul>\n<h3>args_setting: [(default, validate_and_coerce), ...]</h3>\n<p><code>args_setting</code> is a list of tuples.</p>\n<ul>\n<li>\n<p>The first item of each tuple is the default value of the parameter, and it could be <code>None</code> which implies it has no default value and is required.</p>\n</li>\n<li>\n<p>The second item is a raisable callable which receives user input, validates it, coerces the type of the value and returns it. If the parameter has a default value and user don't specified a value, the function will be skipped.</p>\n</li>\n</ul>\n<h3>sub_commands_dict: Dict[str, CommandPreset]</h3>\n<p>A dict to declare sub commands, such as <code>boll.upper</code>.</p>\n<p><code>sub_commands_dict</code> could be <code>None</code> which indicates the indicator has no sub commands</p>\n<h3>aliases_of_sub_commands: Dict[str, Optional[str]]</h3>\n<p>Which declares the shortcut or alias of the commands, such as <code>boll.u</code></p>\n<pre><span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">u</span><span class=\"o\">=</span><span class=\"s1\">'upper'</span>\n<span class=\"p\">)</span>\n</pre>\n<p>If the value of an alias is <code>None</code>, which means it is an alias of the main command, such as <code>macd.dif</code></p>\n<pre><span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">dif</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n<span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7105152, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "deef25eb5051376e80e816833302dcff", "sha256": "1efc2859c42c7806646d28658647ff676b54d2cac26be94cabb22346fd55e4aa"}, "downloads": -1, "filename": "stock_pandas-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "deef25eb5051376e80e816833302dcff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 2653, "upload_time": "2020-03-06T12:22:39", "upload_time_iso_8601": "2020-03-06T12:22:39.964537Z", "url": "https://files.pythonhosted.org/packages/7d/86/bae131ab7c0bb1be1b94bf4afce1f0f5b59f62a128f675cf39b0caa559fa/stock_pandas-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edc8f81334ee7e6f938304a632ff0aba", "sha256": "251f71c0479508fd5ff426a41b5efe30daf6be7791e81be95c066b3b7028f3ec"}, "downloads": -1, "filename": "stock-pandas-0.1.0.tar.gz", "has_sig": false, "md5_digest": "edc8f81334ee7e6f938304a632ff0aba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6090, "upload_time": "2020-03-06T12:22:42", "upload_time_iso_8601": "2020-03-06T12:22:42.306970Z", "url": "https://files.pythonhosted.org/packages/2b/23/533eea01a87b4ba35a3fbe4e566234634b81fe0d011276b25cca616630b2/stock-pandas-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "8abb74bc5136aa4ec27477b3208b6255", "sha256": "52af21fff6a1a9caa35a59478b115935f86a0d59ed5d76f9011687d7ee9a1e71"}, "downloads": -1, "filename": "stock_pandas-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8abb74bc5136aa4ec27477b3208b6255", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25249, "upload_time": "2020-03-13T15:53:45", "upload_time_iso_8601": "2020-03-13T15:53:45.106267Z", "url": "https://files.pythonhosted.org/packages/cf/04/1edaca9bee99cf3a70db46ba4401f1450c85d8ae1dcc7b91964a0dfb0293/stock_pandas-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7dce179021c60f0b01d778d54685266d", "sha256": "5fcbb9dab7fe9bd51f43892b3cb57521d6690a8e8a95330ab48949ac6666ae2d"}, "downloads": -1, "filename": "stock-pandas-0.10.0.tar.gz", "has_sig": false, "md5_digest": "7dce179021c60f0b01d778d54685266d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22887, "upload_time": "2020-03-13T15:53:47", "upload_time_iso_8601": "2020-03-13T15:53:47.597040Z", "url": "https://files.pythonhosted.org/packages/93/be/04f248d6d0e9f366152995a49fd0a1d9eabad9d51bd5fa8d5b51b8444546/stock-pandas-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "814734e779bbf88b8f604334b76c0d1a", "sha256": "df371151029da2fb4eaf95fdec2d2eb196b5fc176b4a7478cf3b4968011358cf"}, "downloads": -1, "filename": "stock_pandas-0.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "814734e779bbf88b8f604334b76c0d1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 26103, "upload_time": "2020-03-15T06:25:50", "upload_time_iso_8601": "2020-03-15T06:25:50.057711Z", "url": "https://files.pythonhosted.org/packages/b2/0e/d20a95706a053af6af566f70faabe19b6dc254202dd2d4c184189f6fe9e5/stock_pandas-0.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67b425ca9c12541070be9c1df100316e", "sha256": "45386ac23093ebcee1e561297f1313102b7e60ebcb4e0c4d03bc0e24377ae826"}, "downloads": -1, "filename": "stock-pandas-0.11.0.tar.gz", "has_sig": false, "md5_digest": "67b425ca9c12541070be9c1df100316e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23517, "upload_time": "2020-03-15T06:25:52", "upload_time_iso_8601": "2020-03-15T06:25:52.411411Z", "url": "https://files.pythonhosted.org/packages/66/df/776d2a4a9f8e40485ebff1d3f00565e23fc25851d781d925bf5768186464/stock-pandas-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "8bb253269e45bbf27f12cf657d879086", "sha256": "e10d0fc5598b78de5e3171784b5e23a34e9c5f9ab61f0a6ab467fb159f79b8dc"}, "downloads": -1, "filename": "stock_pandas-0.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8bb253269e45bbf27f12cf657d879086", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27110, "upload_time": "2020-03-16T03:54:45", "upload_time_iso_8601": "2020-03-16T03:54:45.729003Z", "url": "https://files.pythonhosted.org/packages/be/e1/b16c3d7b7a4d5e93fd630eac1ed44cb1fb8b244eb7071cf86c632a12f60b/stock_pandas-0.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7deb31515876f1a1eb803a6b1498ebf", "sha256": "592a4acbfc0d53657326cd9a40304d1fda53b5d01bb2253b2437ad3944c0d05c"}, "downloads": -1, "filename": "stock-pandas-0.12.0.tar.gz", "has_sig": false, "md5_digest": "f7deb31515876f1a1eb803a6b1498ebf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24170, "upload_time": "2020-03-16T03:54:47", "upload_time_iso_8601": "2020-03-16T03:54:47.761714Z", "url": "https://files.pythonhosted.org/packages/09/fd/ab60bbbb18b90129b1553e0b05b0749b962623f7c484c8c080044c47e9b1/stock-pandas-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "f109fa1b6391ccb1d60548c929becdd8", "sha256": "d48a6e87fb46453b3b79ea66e7758b297afd71d4225a072bf346356d07111ecf"}, "downloads": -1, "filename": "stock_pandas-0.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f109fa1b6391ccb1d60548c929becdd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27361, "upload_time": "2020-03-16T07:20:14", "upload_time_iso_8601": "2020-03-16T07:20:14.485375Z", "url": "https://files.pythonhosted.org/packages/2e/e1/4c4d5c79c5459e448915dd67e219d72f3d69a61d60d0532170fb5a2d1853/stock_pandas-0.13.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f424df654601b0a2251054409468c792", "sha256": "b4fe6979569bb7f02f4090f60ec7d50173bad670ef5393b4779b86bf7518703d"}, "downloads": -1, "filename": "stock-pandas-0.13.0.tar.gz", "has_sig": false, "md5_digest": "f424df654601b0a2251054409468c792", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22174, "upload_time": "2020-03-16T07:20:16", "upload_time_iso_8601": "2020-03-16T07:20:16.997767Z", "url": "https://files.pythonhosted.org/packages/e5/c9/dfa0ca67ec13882eb1d87c2088d9cfd4a68a7ed545837710afc246343263/stock-pandas-0.13.0.tar.gz", "yanked": false}], "0.13.1": [{"comment_text": "", "digests": {"md5": "bea39148749c5c67cdf0f5cbf9e14e14", "sha256": "4708362b6f3cbb4a8359907d380aa11e69350ad9688627e3039b31c30ea20f63"}, "downloads": -1, "filename": "stock_pandas-0.13.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bea39148749c5c67cdf0f5cbf9e14e14", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27440, "upload_time": "2020-03-16T07:58:17", "upload_time_iso_8601": "2020-03-16T07:58:17.338599Z", "url": "https://files.pythonhosted.org/packages/cf/20/685153b31309028793f359ad300eb92d5d20d18ce9f76617358362521324/stock_pandas-0.13.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1169f8a0d703d90fad4e18ee4d005714", "sha256": "35516066dcda84687dac167e5bf892a826e0de93116887d29ec6144226952084"}, "downloads": -1, "filename": "stock-pandas-0.13.1.tar.gz", "has_sig": false, "md5_digest": "1169f8a0d703d90fad4e18ee4d005714", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22343, "upload_time": "2020-03-16T07:58:20", "upload_time_iso_8601": "2020-03-16T07:58:20.119621Z", "url": "https://files.pythonhosted.org/packages/72/ac/54fae401abaf23d38f5067b4320a83f25e800570a7c4014e3d0d3c0b407f/stock-pandas-0.13.1.tar.gz", "yanked": false}], "0.13.2": [{"comment_text": "", "digests": {"md5": "556de1d43d40eea183fac26a5bbae4fb", "sha256": "c26c02f491367c73ef098034f3f24b5c876909dfb8e50dc6b1bba1dc79a34e57"}, "downloads": -1, "filename": "stock_pandas-0.13.2-py3-none-any.whl", "has_sig": false, "md5_digest": "556de1d43d40eea183fac26a5bbae4fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32305, "upload_time": "2020-03-17T07:18:11", "upload_time_iso_8601": "2020-03-17T07:18:11.563353Z", "url": "https://files.pythonhosted.org/packages/57/22/5edac0e5d176fa7140462065cc220f6b060b9d3f006093e99311ae3a0213/stock_pandas-0.13.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e53cfab8ef0d2a7282ad8fd0133d122b", "sha256": "48ca414ce53e7566aaa546b8b45438885f7ad804318c3990e10b6e195a1bb859"}, "downloads": -1, "filename": "stock-pandas-0.13.2.tar.gz", "has_sig": false, "md5_digest": "e53cfab8ef0d2a7282ad8fd0133d122b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25401, "upload_time": "2020-03-17T07:18:14", "upload_time_iso_8601": "2020-03-17T07:18:14.151880Z", "url": "https://files.pythonhosted.org/packages/aa/a6/8385520b797aa096639bc457ef479f7f6a0fc0bc4aaefe91bc0dc1afcb64/stock-pandas-0.13.2.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "91664ebc16b90a1a85e3bf29f6ab366b", "sha256": "94c3993f052f8b4b24396f975f337196db31f706059db540c421b12f9e0489c4"}, "downloads": -1, "filename": "stock_pandas-0.14.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91664ebc16b90a1a85e3bf29f6ab366b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32309, "upload_time": "2020-03-21T16:13:18", "upload_time_iso_8601": "2020-03-21T16:13:18.818782Z", "url": "https://files.pythonhosted.org/packages/2d/bc/7258bc630b4b672c978ec2fe3b66f3d2a0a07250578959c7fd70d9777c8d/stock_pandas-0.14.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c133f3acf1725f39d70d1639ce4fc1a0", "sha256": "463a461b54d017e5b78e91e3c33a9171240b354bb92e5dc6bc94b891a93863fe"}, "downloads": -1, "filename": "stock-pandas-0.14.0.tar.gz", "has_sig": false, "md5_digest": "c133f3acf1725f39d70d1639ce4fc1a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25390, "upload_time": "2020-03-21T16:13:21", "upload_time_iso_8601": "2020-03-21T16:13:21.339048Z", "url": "https://files.pythonhosted.org/packages/c1/bf/785f496cb9874c0b6f9e1084980e87d8c6f859288d2890c734886b6e9fb6/stock-pandas-0.14.0.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "4a63020950d27bec95aee8b4aa3f187d", "sha256": "4f170aeb3115c151b9345881dc24cdc2fb7122f6e351b1049bf225e115a124bd"}, "downloads": -1, "filename": "stock_pandas-0.15.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4a63020950d27bec95aee8b4aa3f187d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32578, "upload_time": "2020-03-22T06:05:38", "upload_time_iso_8601": "2020-03-22T06:05:38.279456Z", "url": "https://files.pythonhosted.org/packages/4d/fb/e5b54743794d588c1ed32a55b2e8e2893fba78e447913d4c146343e82efd/stock_pandas-0.15.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a047bc14c73e5b0c9cae6ec83caad1b", "sha256": "372fc4c0647250f30c19305da0f447c4046db392bd33345ce9b3a92bc4de6df6"}, "downloads": -1, "filename": "stock-pandas-0.15.0.tar.gz", "has_sig": false, "md5_digest": "8a047bc14c73e5b0c9cae6ec83caad1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25706, "upload_time": "2020-03-22T06:05:40", "upload_time_iso_8601": "2020-03-22T06:05:40.523067Z", "url": "https://files.pythonhosted.org/packages/b1/ec/77a44d015d2ab8ab70ad6aa0d4b16aed02e47956994e0bb066ecd6ea61e6/stock-pandas-0.15.0.tar.gz", "yanked": false}], "0.15.1": [{"comment_text": "", "digests": {"md5": "4e2974683ed46f3279568990589d972a", "sha256": "58a2a0b32155b1abbcf2f263cd24076bbb5da1913de2a38b90445a520839c209"}, "downloads": -1, "filename": "stock_pandas-0.15.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4e2974683ed46f3279568990589d972a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32660, "upload_time": "2020-03-22T06:13:09", "upload_time_iso_8601": "2020-03-22T06:13:09.189534Z", "url": "https://files.pythonhosted.org/packages/e9/44/8b8e34edf7f6b009412145b867a78d72d91a47f40d524d4cd568da0cebda/stock_pandas-0.15.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47f83a7daa078778377d14dc5afbdef7", "sha256": "499585fdbe7294edab1f4d8338b2f386b6d5d3dc65990b9f6b72dd92636c7be2"}, "downloads": -1, "filename": "stock-pandas-0.15.1.tar.gz", "has_sig": false, "md5_digest": "47f83a7daa078778377d14dc5afbdef7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25891, "upload_time": "2020-03-22T06:13:12", "upload_time_iso_8601": "2020-03-22T06:13:12.032926Z", "url": "https://files.pythonhosted.org/packages/1e/12/be9f92cd0d136fd2c29c09b07438f4526b3a0cff6bb182530b90942eb88b/stock-pandas-0.15.1.tar.gz", "yanked": false}], "0.15.2": [{"comment_text": "", "digests": {"md5": "ea9b7908a20b04b4aeffc8472d66527e", "sha256": "16ee2404648a5840392af8ea26b604178532f0e06ccfb815dfa1aa92c0985cc0"}, "downloads": -1, "filename": "stock_pandas-0.15.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea9b7908a20b04b4aeffc8472d66527e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32663, "upload_time": "2020-03-22T07:21:59", "upload_time_iso_8601": "2020-03-22T07:21:59.227624Z", "url": "https://files.pythonhosted.org/packages/13/a2/135be6f2fb977f0fe1e4a65ffc0dbb0ddc00c319da323781026566ce4782/stock_pandas-0.15.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac3e440df7dc81c02a6ac8602f0e182f", "sha256": "29a17e37ce72365abd48d6e2b42634582a867b1c25a677f8b79de6376ecf702a"}, "downloads": -1, "filename": "stock-pandas-0.15.2.tar.gz", "has_sig": false, "md5_digest": "ac3e440df7dc81c02a6ac8602f0e182f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25895, "upload_time": "2020-03-22T07:22:01", "upload_time_iso_8601": "2020-03-22T07:22:01.933839Z", "url": "https://files.pythonhosted.org/packages/6d/64/94e1ce00bb3906e3ac174be1464e2155e2629ef6bdcc53f892c07da06826/stock-pandas-0.15.2.tar.gz", "yanked": false}], "0.15.3": [{"comment_text": "", "digests": {"md5": "41f58b29afd7d66f1144b6325eb4c1e6", "sha256": "a64cadd3b7854e6ce70e9d8a6d031213d5eda4f2574e96a7589cc234da32fcba"}, "downloads": -1, "filename": "stock_pandas-0.15.3-py3-none-any.whl", "has_sig": false, "md5_digest": "41f58b29afd7d66f1144b6325eb4c1e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32729, "upload_time": "2020-03-24T12:13:06", "upload_time_iso_8601": "2020-03-24T12:13:06.706614Z", "url": "https://files.pythonhosted.org/packages/c7/88/5a6c0d7a1860b17d3de0fc527695adcc54e73b6d69dde6161611ffc3fbc8/stock_pandas-0.15.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b2479cbe79a2a92011760d514c3350d", "sha256": "9e3efd9ed9edbe3f0ec1b840db40c8d6c130051cf45b6c70d854f580a845fb0b"}, "downloads": -1, "filename": "stock-pandas-0.15.3.tar.gz", "has_sig": false, "md5_digest": "8b2479cbe79a2a92011760d514c3350d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25994, "upload_time": "2020-03-24T12:13:08", "upload_time_iso_8601": "2020-03-24T12:13:08.989274Z", "url": "https://files.pythonhosted.org/packages/1c/3b/2301117861ee008a77026c667184ac930bd93cc14d256c52ded062b708d1/stock-pandas-0.15.3.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "7be860870e16b0eb0025b9d9b681206a", "sha256": "a125f44afbea7f69f68a8fbcaa118e315a2842dde81e2afb860a4cc45bd70459"}, "downloads": -1, "filename": "stock_pandas-0.16.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7be860870e16b0eb0025b9d9b681206a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33356, "upload_time": "2020-03-25T04:34:59", "upload_time_iso_8601": "2020-03-25T04:34:59.025389Z", "url": "https://files.pythonhosted.org/packages/82/b3/92feb27c75e288460fb6baeff2615471b106259bb443e6247b3a5edd28f7/stock_pandas-0.16.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7bc0ba00e854df65c4785a6ccb6c2f4", "sha256": "f66be4b432d9d43b0c5ba68f08350ed8d61ef92d06f24fa5f8c1929e3f7bbc70"}, "downloads": -1, "filename": "stock-pandas-0.16.0.tar.gz", "has_sig": false, "md5_digest": "c7bc0ba00e854df65c4785a6ccb6c2f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27019, "upload_time": "2020-03-25T04:35:01", "upload_time_iso_8601": "2020-03-25T04:35:01.210448Z", "url": "https://files.pythonhosted.org/packages/14/06/020aa7592c782dd4d2d2a08961394022789161e8ccb7af4e09dbf97d96ba/stock-pandas-0.16.0.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "9b7e8169ec5e4a3fd705ab206976de06", "sha256": "c7d6e8902d86c7fcf0f4a30de425c12726498a66359ff653097689216d023c9b"}, "downloads": -1, "filename": "stock_pandas-0.17.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9b7e8169ec5e4a3fd705ab206976de06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33281, "upload_time": "2020-03-25T14:23:56", "upload_time_iso_8601": "2020-03-25T14:23:56.728521Z", "url": "https://files.pythonhosted.org/packages/ec/98/975926dff336c057acf117ae0a6340ccda865d68414f3fdb2a26a7246918/stock_pandas-0.17.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5db8252a1d362ade294b12087468409e", "sha256": "e3f7236385c81d8db3ee3f969bb42fc67712e894385499e37f73c9cea78d0380"}, "downloads": -1, "filename": "stock-pandas-0.17.0.tar.gz", "has_sig": false, "md5_digest": "5db8252a1d362ade294b12087468409e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27078, "upload_time": "2020-03-25T14:23:59", "upload_time_iso_8601": "2020-03-25T14:23:59.407480Z", "url": "https://files.pythonhosted.org/packages/d6/b9/983183f15cf99f5c40bf17686b5a1f384444528492a2690076461504e4e2/stock-pandas-0.17.0.tar.gz", "yanked": false}], "0.17.1": [{"comment_text": "", "digests": {"md5": "db25fd309d94eed3bb86481fdb8c569f", "sha256": "d7bb0be00c4e60edc3f50c9c5d27b5f9e5d7b2311e1bd3e35c6f94e26866842a"}, "downloads": -1, "filename": "stock_pandas-0.17.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db25fd309d94eed3bb86481fdb8c569f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33466, "upload_time": "2020-03-26T12:38:14", "upload_time_iso_8601": "2020-03-26T12:38:14.533942Z", "url": "https://files.pythonhosted.org/packages/7f/f7/3355edd4da757744cbbf0336d1f350bf2ea8577327185f7b6277990950f1/stock_pandas-0.17.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5c8c23191eede2c8f674137239dd9ed", "sha256": "b1e24de3a0d2c0142808cd4961e4820d878e59b33d1d25e39ee1aee42fa029b3"}, "downloads": -1, "filename": "stock-pandas-0.17.1.tar.gz", "has_sig": false, "md5_digest": "e5c8c23191eede2c8f674137239dd9ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27527, "upload_time": "2020-03-26T12:38:17", "upload_time_iso_8601": "2020-03-26T12:38:17.095781Z", "url": "https://files.pythonhosted.org/packages/f9/4b/3c5eb1cc29bfbbce8023ec809d317d3478752e9c3ac05f1ca9785d0ec415/stock-pandas-0.17.1.tar.gz", "yanked": false}], "0.17.2": [{"comment_text": "", "digests": {"md5": "fe0e23bb5451c99eb3f499dfc1e95f44", "sha256": "c5c9acb6207d964b0179c6da8e238db17931a82c85fe35f0dbac68c58cefe672"}, "downloads": -1, "filename": "stock_pandas-0.17.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fe0e23bb5451c99eb3f499dfc1e95f44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33895, "upload_time": "2020-03-26T14:20:50", "upload_time_iso_8601": "2020-03-26T14:20:50.130412Z", "url": "https://files.pythonhosted.org/packages/ee/a7/652eb7c75713d0fcd62793587623f3eee175888241dbfc6e550d3e1b1a4c/stock_pandas-0.17.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09375fd70af3653e3c7a193f195aa9f3", "sha256": "63a63887a38cdd1529327654304ab3829b226c05994fff7ceb5ab1afedcf224c"}, "downloads": -1, "filename": "stock-pandas-0.17.2.tar.gz", "has_sig": false, "md5_digest": "09375fd70af3653e3c7a193f195aa9f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28178, "upload_time": "2020-03-26T14:20:53", "upload_time_iso_8601": "2020-03-26T14:20:53.002223Z", "url": "https://files.pythonhosted.org/packages/56/05/1fe7be88a6d4b633b1f7f39ef7720b9b0a232bc74a8e7907b752c3230e24/stock-pandas-0.17.2.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "201e7abdfa0073bd138cc2cd3eec7465", "sha256": "c0bd257e27c12d446efd329141496f7a0647c314d59c34be8ca9876344d4474f"}, "downloads": -1, "filename": "stock_pandas-0.18.0-py3-none-any.whl", "has_sig": false, "md5_digest": "201e7abdfa0073bd138cc2cd3eec7465", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34157, "upload_time": "2020-03-26T15:38:36", "upload_time_iso_8601": "2020-03-26T15:38:36.219998Z", "url": "https://files.pythonhosted.org/packages/e2/dd/c00f3eff05f13d760aba82ca0b8d5b49399596e54c2cf945e5f85a27850e/stock_pandas-0.18.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e4ea4bd76e8f02b7dd94ed55eb4435", "sha256": "2f45f25ee08b962f7fab65e8d163b91ad4d3f586525a8f7de49652053c0d6f43"}, "downloads": -1, "filename": "stock-pandas-0.18.0.tar.gz", "has_sig": false, "md5_digest": "03e4ea4bd76e8f02b7dd94ed55eb4435", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28538, "upload_time": "2020-03-26T15:38:38", "upload_time_iso_8601": "2020-03-26T15:38:38.537601Z", "url": "https://files.pythonhosted.org/packages/49/07/34f5f0da5eaa6c0292790ebfb42f51faff3532e69e2a25d7b3cbb7bb99c4/stock-pandas-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "c03e95e105b6d3daa2a8f7a2ee7d6e38", "sha256": "3a448888fb63e0647ab2713a21b958819776ec023085c308a223903902422d96"}, "downloads": -1, "filename": "stock_pandas-0.19.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c03e95e105b6d3daa2a8f7a2ee7d6e38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34305, "upload_time": "2020-03-27T13:21:54", "upload_time_iso_8601": "2020-03-27T13:21:54.294178Z", "url": "https://files.pythonhosted.org/packages/c0/b3/7c5cb0a1adddb0b2bacda4b88dbcf28df84d549ef6a9978673e5903ab7f0/stock_pandas-0.19.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cd76436402aaf2d1389c378a0103a9b", "sha256": "faac2f9e8f1a835f4a288e2a5d1ea3fa0e5fc785ccf6dc09c810bdd52868bc09"}, "downloads": -1, "filename": "stock-pandas-0.19.0.tar.gz", "has_sig": false, "md5_digest": "1cd76436402aaf2d1389c378a0103a9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28752, "upload_time": "2020-03-27T13:21:57", "upload_time_iso_8601": "2020-03-27T13:21:57.262150Z", "url": "https://files.pythonhosted.org/packages/65/e8/25850123bc3659389db08718fe309df41036612e5caefe199548da6c5e29/stock-pandas-0.19.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "745cf535fbbb448b1192a7ced6e0018a", "sha256": "64d07633bd0e7ad036bbb863e22b059e2fe00bbfdfe5ca71d76193640beb2244"}, "downloads": -1, "filename": "stock_pandas-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "745cf535fbbb448b1192a7ced6e0018a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9327, "upload_time": "2020-03-08T15:05:52", "upload_time_iso_8601": "2020-03-08T15:05:52.412207Z", "url": "https://files.pythonhosted.org/packages/f1/c7/8c9ab299b0fd8bb6f1a2d86665e193db373f6e27c83e54c505f3163e8c24/stock_pandas-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e2b1a4c5b4d645be9610f95bdc3adb0", "sha256": "0bc91748e61e186e47dc018ed5808cfb3fdf7d3e0900e4ac3471849e60b4978f"}, "downloads": -1, "filename": "stock-pandas-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1e2b1a4c5b4d645be9610f95bdc3adb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10475, "upload_time": "2020-03-08T15:05:54", "upload_time_iso_8601": "2020-03-08T15:05:54.062883Z", "url": "https://files.pythonhosted.org/packages/6a/2b/bde5dc5ec6261c0c7a160e6c5a23f4ebbc6e0b0042617b0543dbbc4e6ebf/stock-pandas-0.2.0.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "d5c40e67b0497d99ae4b93446dd2b3de", "sha256": "5dad39f048d814dfee29071ba3bc2346808fe2eea1cd9e1d7d8db724b90b58a6"}, "downloads": -1, "filename": "stock_pandas-0.20.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d5c40e67b0497d99ae4b93446dd2b3de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35379, "upload_time": "2020-03-28T10:59:55", "upload_time_iso_8601": "2020-03-28T10:59:55.025320Z", "url": "https://files.pythonhosted.org/packages/68/82/c47d9747d9dde775ff1ba0e1ff2d660ec64df47b9530c566f310bbeab6a1/stock_pandas-0.20.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcfe5c91c0d23250d50b89290123305c", "sha256": "50de087b7c74f5c6cefc2ee841a0ed5a7e1880cdcb2d03ab68aa64cfe8ddee00"}, "downloads": -1, "filename": "stock-pandas-0.20.0.tar.gz", "has_sig": false, "md5_digest": "bcfe5c91c0d23250d50b89290123305c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29487, "upload_time": "2020-03-28T10:59:57", "upload_time_iso_8601": "2020-03-28T10:59:57.075186Z", "url": "https://files.pythonhosted.org/packages/f1/64/9c36ad1658d9b3dc3a5e140bd8bf5e4f224729a254addbe16f822229ef8c/stock-pandas-0.20.0.tar.gz", "yanked": false}], "0.20.1": [{"comment_text": "", "digests": {"md5": "36eeaafa4fe6fb87f0ed85184e20ce35", "sha256": "15397c98e33bcc4e6bd2f81a88604142cfbc6d58654e11beb0c7686076059347"}, "downloads": -1, "filename": "stock_pandas-0.20.1-py3-none-any.whl", "has_sig": false, "md5_digest": "36eeaafa4fe6fb87f0ed85184e20ce35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35339, "upload_time": "2020-03-28T11:31:41", "upload_time_iso_8601": "2020-03-28T11:31:41.361249Z", "url": "https://files.pythonhosted.org/packages/3d/15/e22be5ced98ae2b458c3d3c5cf63611a03daf75b0a88da7f2ef0216dc2f7/stock_pandas-0.20.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6478e4595e02d539ba1b1a33dc36e96", "sha256": "022c039dc8286b84dd5843ac3ab06d0b7aa6cbf5c05294f6db273057c7497e2b"}, "downloads": -1, "filename": "stock-pandas-0.20.1.tar.gz", "has_sig": false, "md5_digest": "e6478e4595e02d539ba1b1a33dc36e96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29444, "upload_time": "2020-03-28T11:31:42", "upload_time_iso_8601": "2020-03-28T11:31:42.972809Z", "url": "https://files.pythonhosted.org/packages/d1/2b/f9b44d7a5aaca2c8ec50e526d18e1b5a5dcdfd262d5db79945aa5676730e/stock-pandas-0.20.1.tar.gz", "yanked": false}], "0.20.2": [{"comment_text": "", "digests": {"md5": "0f4165dc197a2ffe72fd08f1e5b0337e", "sha256": "e75edafa53bbab765352b6560db5c9a7f7f0436fa9c10e77cdb63e7bee65b3cb"}, "downloads": -1, "filename": "stock_pandas-0.20.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f4165dc197a2ffe72fd08f1e5b0337e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35349, "upload_time": "2020-03-29T00:42:19", "upload_time_iso_8601": "2020-03-29T00:42:19.162703Z", "url": "https://files.pythonhosted.org/packages/8a/11/c99d4dd6673f9abd88a141c861115c9e3211333dba1c1d6879145e22d15e/stock_pandas-0.20.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34d139dc2c8fe310048977b4343b17af", "sha256": "2ff3c744ba8f32b02468ee37a6b79893883021cf6ddb9dd92841130cb6b56834"}, "downloads": -1, "filename": "stock-pandas-0.20.2.tar.gz", "has_sig": false, "md5_digest": "34d139dc2c8fe310048977b4343b17af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29456, "upload_time": "2020-03-29T00:42:21", "upload_time_iso_8601": "2020-03-29T00:42:21.506599Z", "url": "https://files.pythonhosted.org/packages/cb/ba/b12983594c45c820a722b4d583f651d1cbdb75735cd92218f9e58154ea46/stock-pandas-0.20.2.tar.gz", "yanked": false}], "0.20.3": [{"comment_text": "", "digests": {"md5": "50f45d6cb5d72b3dd2f8ecc7d8106151", "sha256": "b3d67f526d28617b7492fef0b61e6ea74e351461fd69cb8e5069997674ec40fa"}, "downloads": -1, "filename": "stock_pandas-0.20.3-py3-none-any.whl", "has_sig": false, "md5_digest": "50f45d6cb5d72b3dd2f8ecc7d8106151", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36337, "upload_time": "2020-03-30T14:47:53", "upload_time_iso_8601": "2020-03-30T14:47:53.845772Z", "url": "https://files.pythonhosted.org/packages/e8/24/a7e58a01bc6d121cb774772c49081bb42dde028f16b48223a943fc048dea/stock_pandas-0.20.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e253b19bb54e9bbca9d92cdda4447fe2", "sha256": "49165aa202703a72c0c8bae2dd2226e994451422ff530b3e89be9a14bb1c6c27"}, "downloads": -1, "filename": "stock-pandas-0.20.3.tar.gz", "has_sig": false, "md5_digest": "e253b19bb54e9bbca9d92cdda4447fe2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31348, "upload_time": "2020-03-30T14:47:55", "upload_time_iso_8601": "2020-03-30T14:47:55.994650Z", "url": "https://files.pythonhosted.org/packages/84/56/35d9d8a519965a5bc4ee41861a6050b4989113553c7c7b21e835efc60e62/stock-pandas-0.20.3.tar.gz", "yanked": false}], "0.20.4": [{"comment_text": "", "digests": {"md5": "505a1faae90e7193282bee6aee792c86", "sha256": "0ad0c363e8b97a175e161cb9c4225b140f75829a57661c18bcdd7105ee01ffab"}, "downloads": -1, "filename": "stock_pandas-0.20.4-py3-none-any.whl", "has_sig": false, "md5_digest": "505a1faae90e7193282bee6aee792c86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36400, "upload_time": "2020-04-11T09:08:38", "upload_time_iso_8601": "2020-04-11T09:08:38.281413Z", "url": "https://files.pythonhosted.org/packages/a4/02/104ea8b6f65f3f719734dec7b0a27d57aa0dc33296c31b0381403fe4a124/stock_pandas-0.20.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d91fef942a9e3c758708000c1de8a50d", "sha256": "dde9bf0d58debac0668aae08b06b3c10aa794fc10c89e3ea743729872f1aa815"}, "downloads": -1, "filename": "stock-pandas-0.20.4.tar.gz", "has_sig": false, "md5_digest": "d91fef942a9e3c758708000c1de8a50d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31397, "upload_time": "2020-04-11T09:08:41", "upload_time_iso_8601": "2020-04-11T09:08:41.061507Z", "url": "https://files.pythonhosted.org/packages/8a/c9/5ea2497f42cfb4b737ac8347c432b1438c821e5f492fdcb5884b8d0478d8/stock-pandas-0.20.4.tar.gz", "yanked": false}], "0.21.0": [{"comment_text": "", "digests": {"md5": "1d4751159c46ad9b68901ea15554cd36", "sha256": "cfa30eacc20ef3b34f10d600eb8e7816dfcd56018533b7a98ecc90a3a7668bf8"}, "downloads": -1, "filename": "stock_pandas-0.21.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1d4751159c46ad9b68901ea15554cd36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36614, "upload_time": "2020-04-12T06:58:06", "upload_time_iso_8601": "2020-04-12T06:58:06.432046Z", "url": "https://files.pythonhosted.org/packages/90/57/97df3fd42da2c742a6cdf32972ad7be4c1447a21014a3f99e0787e522c62/stock_pandas-0.21.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5573fbefba01181cd46d151641744fb1", "sha256": "d9b3cb0655c5982c3b27c5fee1474cccb55be335dc2c12e0d03e971bc350915b"}, "downloads": -1, "filename": "stock-pandas-0.21.0.tar.gz", "has_sig": false, "md5_digest": "5573fbefba01181cd46d151641744fb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31734, "upload_time": "2020-04-12T06:58:08", "upload_time_iso_8601": "2020-04-12T06:58:08.808525Z", "url": "https://files.pythonhosted.org/packages/21/47/b94953fc98671ec9725a47154c29fdc12d8778b7c42c7a48c9c24105334a/stock-pandas-0.21.0.tar.gz", "yanked": false}], "0.21.1": [{"comment_text": "", "digests": {"md5": "79ed012cb354a30211772138ae12a31b", "sha256": "bbfc0ec697bf85211a628ed777343d54dbdfe05f5513457ecab61583b1a5a3e9"}, "downloads": -1, "filename": "stock_pandas-0.21.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79ed012cb354a30211772138ae12a31b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36737, "upload_time": "2020-04-12T07:08:23", "upload_time_iso_8601": "2020-04-12T07:08:23.321258Z", "url": "https://files.pythonhosted.org/packages/a6/e9/8667ec43f646aeb6b177cb2a99bc9712180b1995a7a4f473b2ea44f8b13b/stock_pandas-0.21.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdb8dd25c159abb24d625b2a59c91fba", "sha256": "3506ac0dc20cdb4e1e7a6f66abdeefa8bba030d7ad3abfea77e0ea39bf4b5cdd"}, "downloads": -1, "filename": "stock-pandas-0.21.1.tar.gz", "has_sig": false, "md5_digest": "fdb8dd25c159abb24d625b2a59c91fba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31971, "upload_time": "2020-04-12T07:08:25", "upload_time_iso_8601": "2020-04-12T07:08:25.068539Z", "url": "https://files.pythonhosted.org/packages/4f/80/2923eeee37b9162ce8a3798ff8175863a2208826e584155f9f937ff7f3dd/stock-pandas-0.21.1.tar.gz", "yanked": false}], "0.22.0": [{"comment_text": "", "digests": {"md5": "9fd37f86c4b44a81f82ba917d689d987", "sha256": "034a285f620d8c9bdb405a40e15a3144cbc6b5893b3160e57695afc06f39bca0"}, "downloads": -1, "filename": "stock_pandas-0.22.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9fd37f86c4b44a81f82ba917d689d987", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37041, "upload_time": "2020-04-13T02:31:11", "upload_time_iso_8601": "2020-04-13T02:31:11.788394Z", "url": "https://files.pythonhosted.org/packages/4b/2e/7daba2917f11817010dae3f1ecd37a81b63aa979f4cc1f8effc0d6e70f22/stock_pandas-0.22.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f838da7b48be70e8e8436a0fe8854b57", "sha256": "0c1df83f9a274bdf76ffdd65e35b44f74c75a33dde62d3e7b71990bb3ddbd77a"}, "downloads": -1, "filename": "stock-pandas-0.22.0.tar.gz", "has_sig": false, "md5_digest": "f838da7b48be70e8e8436a0fe8854b57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32526, "upload_time": "2020-04-13T02:31:13", "upload_time_iso_8601": "2020-04-13T02:31:13.817260Z", "url": "https://files.pythonhosted.org/packages/56/0f/22f47ebd22b55011fbe48d3010f9b151c613799f106a8649191343c95a75/stock-pandas-0.22.0.tar.gz", "yanked": false}], "0.23.0": [{"comment_text": "", "digests": {"md5": "902049d0f2818a4d42a0b9498096b4ca", "sha256": "3869bdadbef57883300c998312cbaf46621099bebda3e7305fdb2d3dd125ffbe"}, "downloads": -1, "filename": "stock_pandas-0.23.0-py3-none-any.whl", "has_sig": false, "md5_digest": "902049d0f2818a4d42a0b9498096b4ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37091, "upload_time": "2020-04-18T11:47:47", "upload_time_iso_8601": "2020-04-18T11:47:47.391691Z", "url": "https://files.pythonhosted.org/packages/22/ba/b529b9d763acdca447b208224373ee7bdf9aa04cf8bc3ad1959d962f4ed6/stock_pandas-0.23.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2942d669be7010be28ba6facc3cf09b", "sha256": "864bbd7a23f705ec0f01dab564561574116ce8d87315d293887376298c75c08e"}, "downloads": -1, "filename": "stock-pandas-0.23.0.tar.gz", "has_sig": false, "md5_digest": "c2942d669be7010be28ba6facc3cf09b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32596, "upload_time": "2020-04-18T11:47:49", "upload_time_iso_8601": "2020-04-18T11:47:49.566791Z", "url": "https://files.pythonhosted.org/packages/1e/0a/5ddfaa29adf5fecbfa44311bdcd97a9b362e604a7784f4194da8628992f6/stock-pandas-0.23.0.tar.gz", "yanked": false}], "0.23.1": [{"comment_text": "", "digests": {"md5": "0d12a1b3249d944579a20f86a29b4538", "sha256": "5b8582cc07ba4ea97f30856cffea5e483bf2f5ccfe9f7cd61cb0afbc0f01f514"}, "downloads": -1, "filename": "stock_pandas-0.23.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0d12a1b3249d944579a20f86a29b4538", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37160, "upload_time": "2020-04-26T14:03:48", "upload_time_iso_8601": "2020-04-26T14:03:48.780705Z", "url": "https://files.pythonhosted.org/packages/a2/56/2a3bc1bd270273eebb920a5f3a4a175613dfaa701399a447dbea7f585ec1/stock_pandas-0.23.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32b3c59ac59d2a9bb75f7af3e2117a5b", "sha256": "1dbd172d271dbeb077e3e0c2cbf36760a7f6208a7f36d62310d2ff496e078378"}, "downloads": -1, "filename": "stock-pandas-0.23.1.tar.gz", "has_sig": false, "md5_digest": "32b3c59ac59d2a9bb75f7af3e2117a5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32661, "upload_time": "2020-04-26T14:03:50", "upload_time_iso_8601": "2020-04-26T14:03:50.891123Z", "url": "https://files.pythonhosted.org/packages/05/c2/a3b3f4d84f5c39c5fdd006b10e4f16078073c6dee18924699cc4dfe29664/stock-pandas-0.23.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "34e90d3de605d5aebbfee677892af183", "sha256": "92ecd9059b869b472ae274200b58563440083e51dd1f9021685cca44d655e109"}, "downloads": -1, "filename": "stock_pandas-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "34e90d3de605d5aebbfee677892af183", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12811, "upload_time": "2020-03-09T14:27:15", "upload_time_iso_8601": "2020-03-09T14:27:15.321569Z", "url": "https://files.pythonhosted.org/packages/83/c3/3747429360514d735757986db5001499b829bdbffa6dc12220917630fb45/stock_pandas-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c90118aedc6560a9df833f9943bba4d4", "sha256": "a811f6b28d21be9ba13301345b995110f2fad970b63b2953626a6e455b011ee1"}, "downloads": -1, "filename": "stock-pandas-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c90118aedc6560a9df833f9943bba4d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13133, "upload_time": "2020-03-09T14:27:17", "upload_time_iso_8601": "2020-03-09T14:27:17.536400Z", "url": "https://files.pythonhosted.org/packages/1b/5e/4942d24a6dee9c2080c3ecef80ee47b8a680ae0545d181413fc4750b3b22/stock-pandas-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0795e2399c14bab5c7868380d714cbaa", "sha256": "5df91ce278a83cf829ac4953cc9fd9c9b372d23fabd7a4eac20ca33d20fc34d1"}, "downloads": -1, "filename": "stock_pandas-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0795e2399c14bab5c7868380d714cbaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14719, "upload_time": "2020-03-10T12:40:38", "upload_time_iso_8601": "2020-03-10T12:40:38.202971Z", "url": "https://files.pythonhosted.org/packages/b2/3d/400ae08f4b0aaea16fae886d9ead1454960eff94ed0a2230ec494919e121/stock_pandas-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ae4474954268e69f710f480eb084da3", "sha256": "4874806c7add1ee2248441e3cec9aec5252fd85587f5783c9e2de6dfc031fb54"}, "downloads": -1, "filename": "stock-pandas-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4ae4474954268e69f710f480eb084da3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16672, "upload_time": "2020-03-10T12:40:40", "upload_time_iso_8601": "2020-03-10T12:40:40.650332Z", "url": "https://files.pythonhosted.org/packages/f8/1f/207cdb61957bcc5faeecdda520b89d1d12e5e94a647f6f11eee3f3554fb5/stock-pandas-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "786960eca5e2f8ec248d2075e7477352", "sha256": "d96474c4840091ceccbacd8039070d0ec5170a8857a206b41daefb208e75d392"}, "downloads": -1, "filename": "stock_pandas-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "786960eca5e2f8ec248d2075e7477352", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15693, "upload_time": "2020-03-11T14:18:21", "upload_time_iso_8601": "2020-03-11T14:18:21.894353Z", "url": "https://files.pythonhosted.org/packages/be/89/dd75af5fef4cbabaa64144a16a9397833e4cb34aeaab1fb56c5d623b2c9b/stock_pandas-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31bcd23fa468e64b38c18f377f50474d", "sha256": "79dd4b8d8611bfa091f83f325cf2e5d83c6926264e4272656f00ef9c351e6de1"}, "downloads": -1, "filename": "stock-pandas-0.5.0.tar.gz", "has_sig": false, "md5_digest": "31bcd23fa468e64b38c18f377f50474d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18311, "upload_time": "2020-03-11T14:18:24", "upload_time_iso_8601": "2020-03-11T14:18:24.355337Z", "url": "https://files.pythonhosted.org/packages/17/72/6e55d3efe17373309e2593ac1cf35314ed505170806194bae42312e45c88/stock-pandas-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "f9cb0f59b8bb1744fa0262b3f7ebc74f", "sha256": "6aa5e2c4968e2cbf2daeec90ef00091bfd1a7690446b2628e06b84e40b0ee05a"}, "downloads": -1, "filename": "stock_pandas-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9cb0f59b8bb1744fa0262b3f7ebc74f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15856, "upload_time": "2020-03-11T14:49:33", "upload_time_iso_8601": "2020-03-11T14:49:33.341250Z", "url": "https://files.pythonhosted.org/packages/89/54/6e4668d6c85402b2b8b5fed179b2f38178cb706a9d19d4dcd68ce74c8a89/stock_pandas-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1c42c9fb3bf3b9ceb9bacc1d0ffb906", "sha256": "64604b2b1e7dd15b1a5244bca6f1f544d096418b958e038f8518260d6e2b53d3"}, "downloads": -1, "filename": "stock-pandas-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c1c42c9fb3bf3b9ceb9bacc1d0ffb906", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18691, "upload_time": "2020-03-11T14:49:36", "upload_time_iso_8601": "2020-03-11T14:49:36.974987Z", "url": "https://files.pythonhosted.org/packages/45/b4/d6edadfa713966ef2c57a4bef60cf77bcf26bf476605da935d32c4aded3b/stock-pandas-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "671b03add80c628b53bf0d8dc61cb4b9", "sha256": "a5b82d78eca3b49012f6c68db4625c20affae51dd78bf5e4dcb57f753e7bdbcc"}, "downloads": -1, "filename": "stock_pandas-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "671b03add80c628b53bf0d8dc61cb4b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15992, "upload_time": "2020-03-13T15:12:08", "upload_time_iso_8601": "2020-03-13T15:12:08.282875Z", "url": "https://files.pythonhosted.org/packages/75/bb/2102d14ea088dd2cf059998ebef16ba1343be42b95db0d5d6b924d43e52b/stock_pandas-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52e117438925cc6645c17946d03791b5", "sha256": "92b1e8716dedeb536d7f0341dc758c887e876976657a060e99a4f233cdb1b2ef"}, "downloads": -1, "filename": "stock-pandas-0.7.0.tar.gz", "has_sig": false, "md5_digest": "52e117438925cc6645c17946d03791b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15454, "upload_time": "2020-03-13T15:12:10", "upload_time_iso_8601": "2020-03-13T15:12:10.018790Z", "url": "https://files.pythonhosted.org/packages/bb/eb/5b07472f67bfd7777b832ed111df7b4cf33d8fa16b961a2ab57ecb77a9a0/stock-pandas-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "169a46e4816573f7f3c46819b54c9812", "sha256": "a136a18ce9ec4abe745c7ab88cb40057e8cd814326c718600e04e6b7f9524763"}, "downloads": -1, "filename": "stock_pandas-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "169a46e4816573f7f3c46819b54c9812", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24785, "upload_time": "2020-03-13T15:13:35", "upload_time_iso_8601": "2020-03-13T15:13:35.518907Z", "url": "https://files.pythonhosted.org/packages/38/71/fa6da8fc29182fb68d1820d7729953a95d915bdf64541cbee7b135ecd6a9/stock_pandas-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d39e6bb5054778c3b772dcb0b001622", "sha256": "750094ef352f135c95b80d6eb3cd57e838ba627027ca4986b56ab7e03e923d60"}, "downloads": -1, "filename": "stock-pandas-0.8.0.tar.gz", "has_sig": false, "md5_digest": "3d39e6bb5054778c3b772dcb0b001622", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22170, "upload_time": "2020-03-13T15:13:37", "upload_time_iso_8601": "2020-03-13T15:13:37.834269Z", "url": "https://files.pythonhosted.org/packages/d7/ec/85a5af69a39be199caa22e1f8ce3b34ad74b9b9ce8f1642b15057332cda8/stock-pandas-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "eb0ddeadb0a48cfac494d1ff8f92d2ce", "sha256": "1e5c2d49f7df36a2930595ce2c0d184d936ce828fb992dbdec56a7f80df49cb8"}, "downloads": -1, "filename": "stock_pandas-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb0ddeadb0a48cfac494d1ff8f92d2ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24954, "upload_time": "2020-03-13T15:45:04", "upload_time_iso_8601": "2020-03-13T15:45:04.789475Z", "url": "https://files.pythonhosted.org/packages/db/60/e27581fd7ec905c1124b65dc9aeeefbb15dfb98c4619cf405b5f734f7653/stock_pandas-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2377fae49b72330176953a27bfb849e", "sha256": "8de74e7e65d2ca194895f88b81a83e843520d850ff3e342da0ce9b63d1af8e9e"}, "downloads": -1, "filename": "stock-pandas-0.9.0.tar.gz", "has_sig": false, "md5_digest": "a2377fae49b72330176953a27bfb849e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22340, "upload_time": "2020-03-13T15:45:06", "upload_time_iso_8601": "2020-03-13T15:45:06.650085Z", "url": "https://files.pythonhosted.org/packages/ec/1c/6d8ba1fd31589d378e5d7d5d6f955829cc540f0cdc4aa7003df3221c605b/stock-pandas-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d12a1b3249d944579a20f86a29b4538", "sha256": "5b8582cc07ba4ea97f30856cffea5e483bf2f5ccfe9f7cd61cb0afbc0f01f514"}, "downloads": -1, "filename": "stock_pandas-0.23.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0d12a1b3249d944579a20f86a29b4538", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37160, "upload_time": "2020-04-26T14:03:48", "upload_time_iso_8601": "2020-04-26T14:03:48.780705Z", "url": "https://files.pythonhosted.org/packages/a2/56/2a3bc1bd270273eebb920a5f3a4a175613dfaa701399a447dbea7f585ec1/stock_pandas-0.23.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32b3c59ac59d2a9bb75f7af3e2117a5b", "sha256": "1dbd172d271dbeb077e3e0c2cbf36760a7f6208a7f36d62310d2ff496e078378"}, "downloads": -1, "filename": "stock-pandas-0.23.1.tar.gz", "has_sig": false, "md5_digest": "32b3c59ac59d2a9bb75f7af3e2117a5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32661, "upload_time": "2020-04-26T14:03:50", "upload_time_iso_8601": "2020-04-26T14:03:50.891123Z", "url": "https://files.pythonhosted.org/packages/05/c2/a3b3f4d84f5c39c5fdd006b10e4f16078073c6dee18924699cc4dfe29664/stock-pandas-0.23.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:45 2020"}