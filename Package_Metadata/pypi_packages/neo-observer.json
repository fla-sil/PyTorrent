{"info": {"author": "Pierre Thibault", "author_email": "pierre.thibault1@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2"], "description": "Neo-Observer is a Python module implementing the observer pattern using\na centralized registry. You send an event to the registry and it will\ndispatch the call the registered observers of the event. You can\nregister functions or subclasses of a defined observable interface.\nEvents have a name, a sender and optional info object. You can register\nan observable to receive an event based on its name, sender or both.\nRequire Python 2.5 and higher (excluding Python 3).\n\n2015-06-05: 1.0.1 Dib push the doc on Github. No more wiki and wiki\nproject. Updated REAME.\n\n2011-04-19: To remove any ambiguity, adding the same observer again\ncancel the previous registration.\n\n2011-04-19: *New improved version*\n\n-  Use weak references whenever it is possible. Objects no longer\n   referenced by your code will not receive events so you don\u2019t have to\n   remember to call \u2018remove\\_observer\u2019.\n\n-  Any callable can be used as an observer as long as the callable can\n   be called with the single event argument or without argument at all.\n\n-  When adding an observer, you can specify the method to be called on\n   the observer to receive the event.\n\n-  Implementation changes: Using a type hierarchy instead of a type flag\n   for the different types of observers.\n\nWhile I was having a centralized registry in mind when I was creating\nthis class, I realize that ObserverRegistry can work in a decentralized\nway too. Any class derived from ObserverRegistry is an ObserverRegistry\ntoo (just don\u2019t forget to call **init**).\n\nAuthor: Pierre Thibault (pierre.thibault1 -at- gmail.com)\n\nLicense: MIT\n\nProject site: https://github.com/Pierre-Thibault/neo-observer\n\nEpydoc documentation: https://pierre-thibault.github.io/neo-observer/\n\nJoin the user group: http://groups.google.com/group/neo-users\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Pierre-Thibault/neo-observer", "keywords": "messaging", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "neo-observer", "package_url": "https://pypi.org/project/neo-observer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/neo-observer/", "project_urls": {"Homepage": "https://github.com/Pierre-Thibault/neo-observer"}, "release_url": "https://pypi.org/project/neo-observer/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Python module implementing the observer pattern using a centralized registry", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Neo-Observer is a Python module implementing the observer pattern using\na centralized registry. You send an event to the registry and it will\ndispatch the call the registered observers of the event. You can\nregister functions or subclasses of a defined observable interface.\nEvents have a name, a sender and optional info object. You can register\nan observable to receive an event based on its name, sender or both.\nRequire Python 2.5 and higher (excluding Python 3).</p>\n<p>2015-06-05: 1.0.1 Dib push the doc on Github. No more wiki and wiki\nproject. Updated REAME.</p>\n<p>2011-04-19: To remove any ambiguity, adding the same observer again\ncancel the previous registration.</p>\n<p>2011-04-19: <em>New improved version</em></p>\n<ul>\n<li>Use weak references whenever it is possible. Objects no longer\nreferenced by your code will not receive events so you don\u2019t have to\nremember to call \u2018remove_observer\u2019.</li>\n<li>Any callable can be used as an observer as long as the callable can\nbe called with the single event argument or without argument at all.</li>\n<li>When adding an observer, you can specify the method to be called on\nthe observer to receive the event.</li>\n<li>Implementation changes: Using a type hierarchy instead of a type flag\nfor the different types of observers.</li>\n</ul>\n<p>While I was having a centralized registry in mind when I was creating\nthis class, I realize that ObserverRegistry can work in a decentralized\nway too. Any class derived from ObserverRegistry is an ObserverRegistry\ntoo (just don\u2019t forget to call <strong>init</strong>).</p>\n<p>Author: Pierre Thibault (pierre.thibault1 -at- gmail.com)</p>\n<p>License: MIT</p>\n<p>Project site: <a href=\"https://github.com/Pierre-Thibault/neo-observer\" rel=\"nofollow\">https://github.com/Pierre-Thibault/neo-observer</a></p>\n<p>Epydoc documentation: <a href=\"https://pierre-thibault.github.io/neo-observer/\" rel=\"nofollow\">https://pierre-thibault.github.io/neo-observer/</a></p>\n<p>Join the user group: <a href=\"http://groups.google.com/group/neo-users\" rel=\"nofollow\">http://groups.google.com/group/neo-users</a></p>\n\n          </div>"}, "last_serial": 1580677, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4c0a91a9cd74f4e54d5d8f8fe2bf2a7d", "sha256": "311fd2f7c3577529425c0307e2e149a59c64fcc6de83cdf2958c7ed8dc369c3c"}, "downloads": -1, "filename": "neo-observer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4c0a91a9cd74f4e54d5d8f8fe2bf2a7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6179, "upload_time": "2015-06-04T19:05:22", "upload_time_iso_8601": "2015-06-04T19:05:22.261828Z", "url": "https://files.pythonhosted.org/packages/8e/f6/7cd8ac2b74aff789d2944bd2e5abdc3a7b928e31b4974276c7241fb449e0/neo-observer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "939aeed2d989fe127ec8302a0ef8231d", "sha256": "81fa6f9d3d3282a7153557c569f9af640b112a1d9ca2d67887b77e89b070c6a6"}, "downloads": -1, "filename": "neo_observer-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "939aeed2d989fe127ec8302a0ef8231d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6800, "upload_time": "2015-06-06T03:49:53", "upload_time_iso_8601": "2015-06-06T03:49:53.275370Z", "url": "https://files.pythonhosted.org/packages/73/02/1b3db949b996aab87dbed52b106cc4ee2f5b3706334986d793535bf9cd02/neo_observer-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d8090ac28d8a06dc2e05c8c811a01a6", "sha256": "5effede46548f16d8c23d360ba89e86ed5611e2a89fceb57e43e75950d1dcbc9"}, "downloads": -1, "filename": "neo-observer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9d8090ac28d8a06dc2e05c8c811a01a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6176, "upload_time": "2015-06-06T03:49:56", "upload_time_iso_8601": "2015-06-06T03:49:56.602878Z", "url": "https://files.pythonhosted.org/packages/a2/52/304bf2b7cb8d7052a1c14e0f809ee0cf44202ed6a555b09adc4a0e5bf830/neo-observer-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "939aeed2d989fe127ec8302a0ef8231d", "sha256": "81fa6f9d3d3282a7153557c569f9af640b112a1d9ca2d67887b77e89b070c6a6"}, "downloads": -1, "filename": "neo_observer-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "939aeed2d989fe127ec8302a0ef8231d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6800, "upload_time": "2015-06-06T03:49:53", "upload_time_iso_8601": "2015-06-06T03:49:53.275370Z", "url": "https://files.pythonhosted.org/packages/73/02/1b3db949b996aab87dbed52b106cc4ee2f5b3706334986d793535bf9cd02/neo_observer-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d8090ac28d8a06dc2e05c8c811a01a6", "sha256": "5effede46548f16d8c23d360ba89e86ed5611e2a89fceb57e43e75950d1dcbc9"}, "downloads": -1, "filename": "neo-observer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9d8090ac28d8a06dc2e05c8c811a01a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6176, "upload_time": "2015-06-06T03:49:56", "upload_time_iso_8601": "2015-06-06T03:49:56.602878Z", "url": "https://files.pythonhosted.org/packages/a2/52/304bf2b7cb8d7052a1c14e0f809ee0cf44202ed6a555b09adc4a0e5bf830/neo-observer-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:28 2020"}