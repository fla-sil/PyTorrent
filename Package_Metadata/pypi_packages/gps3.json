{"info": {"author": "Moe", "author_email": "waddagit@wadda.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Console :: Curses", "Intended Audience :: Developers", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: GIS"], "description": "**Installation**\n\n``[sudo [-H]] pip[2|3] install gps3``\n\nFor example, ``sudo -H pip3 install gps3`` for your default P3 installation.\n``sudo pip2 install gps3`` for Python 2.7.\n\n**gps3.py** will install at ``/usr/local/lib/python[3.5]/dist-packages/gps3/gps3.py``\n\ngps3.py is a Python 2.7-3.5 GPSD interface (http://www.catb.org/gpsd) and\ndefaults to host='127.0.0.1', port=2947, gpsd_protocol='json' in two classes.\n\n1) **GPSDSocket** creates a GPSD socket connection & request/retrieve GPSD output.\n\n2) **DataStream** unpacks the streamed gpsd data into python dictionaries.\n\nThese dictionaries are literated from the JSON data packet sent from the GPSD.\n\n.. code-block::\n\n    from gps3 import gps3\n    gps_socket = gps3.GPSDSocket()\n    data_stream = gps3.DataStream()\n    gps_socket.connect()\n    gps_socket.watch()\n    for new_data in gps_socket:\n        if new_data:\n            data_stream.unpack(new_data)\n            print('Altitude = ', data_stream.TPV['alt'])\n            print('Latitude = ', data_stream.TPV['lat'])\n\nConsult Lines 147-ff for Attribute/Key possibilities.\nor http://www.catb.org/gpsd/gpsd_json.html\n\n**agps3.py** is installed at ``/usr/local/lib/python[3.5]/dist-packages/gps3/agps3.py``\n\nIt is functionally similar to gps.py, but literates object attributes rather than Python dictionaries.\n\nagps3.py is also a Python 2.7-3.5 GPSD interface (http://www.catb.org/gpsd) and\ndefaults to host='127.0.0.1', port=2947, gpsd_protocol='json' in two classes.\n\n1) **GPSDSocket** creates a GPSD socket connection & request/retrieve GPSD output.\n2) **DataStream** unpacks the streamed gpsd data into object attribute values.\n\n.. code-block::\n\n    from gps3 import agps3\n    gps_socket = agps3.GPSDSocket()\n    data_stream = agps3.DataStream()\n    gps_socket.connect()\n    gps_socket.watch()\n    for new_data in gps_socket:\n        if new_data:\n            data_stream.unpack(new_data)\n            print('Altitude = ', data_stream.alt)\n            print('Latitude = ', data_stream.lat)\n\nConsult Lines 140-ff for Attribute-value possibilities.\n\nFor a human experience, both versions have trivial showcase scripts, located at\n\n``/usr/local/share/gps3/examples/``\n\n**agpsthreaded.py** is agps3 *prethreaded* as a default daemon thread with all data exposed as attributes of the threaded data stream.\n\n.. code-block::\n\n    from gps3.agps3threaded import AGPS3mechanism\n    agps_thread = AGPS3mechanism()  # Instantiate AGPS3 Mechanisms\n    agps_thread.stream_data()  # From localhost (), or other hosts, by example, (host='gps.ddns.net')\n    agps_thread.run_thread()  # Throttle time to sleep after an empty lookup, default '()' 0.2 two tenths of a second\n\n    while True:  # All data is available via instantiated thread data stream attribute.\n        # line #140-ff of /usr/local/lib/python3.5/dist-packages/gps3/agps.py\n        print('---------------------')\n        print(                   agps_thread.data_stream.time)\n        print('Lat:{}   '.format(agps_thread.data_stream.lat))\n        print('Lon:{}   '.format(agps_thread.data_stream.lon))\n        print('Speed:{} '.format(agps_thread.data_stream.speed))\n        print('Course:{}'.format(agps_thread.data_stream.track))\n        print('---------------------')\n        sleep(60) # Sleep, or do other things for as long as you like.\n\n\n**human.py** showcases gps3.py, **ahuman.py** showcases agps3.py\n\n``python[X] /usr/local/share/gps3/examples/[a]human.py [-host] [-port]`` or ``--help``   for list of commandline options.\n\nToggle Lat/Lon form with '**0**', '**1**', '**2**', '**3**' for RAW, DDD, DMM, DMS\n\nToggle units with  '**0**', '**m**', '**i**', '**n**', for 'raw', Metric, Imperial, Nautical\n\nToggle between JSON and NMEA outputs with '**j**' and '**a**' respectively.\n\nRefresh the display of device information with '**d**' to see the return after issuing ``gps3.misc.hertz(5)`` to change capable gps devices to 5Hz\n\nQuit with '**q**' or '**^c**'\n\n\nLikewise, both versions have trivial applications [**a**] **gegps3.py** that creates a 'live' kml file(s) for Google Earth.\n\n``python[X] /usr/local/share/gps3/examples/[a]gegps3.py`` (defaults)\n\nScant documentation is in the respective file.\n\n**Un-installation**\n\n``[sudo -H] pip[2|3] uninstall gps3``\n\nFor example, ``sudo -H pip3 uninstall gps3`` for P3 installation.\nLikewise, for Python 2.7 ``sudo pip2 uninstall gps3``\n\n**Problems with installation**\n\nUn-install using the method above and ``y`` to delete the old files, then\n\n``sudo -H pip[2|3] install --ignore-installed gps3``\n\nThis will bypass the cached version and fetch the most recent *typo-free* version.\n\nComments are always appreciated.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/wadda/gps3/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wadda/gps3", "keywords": "gps,gpsd,developers", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "gps3", "package_url": "https://pypi.org/project/gps3/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gps3/", "project_urls": {"Download": "https://github.com/wadda/gps3/archive/master.zip", "Homepage": "https://github.com/wadda/gps3"}, "release_url": "https://pypi.org/project/gps3/0.33.3/", "requires_dist": null, "requires_python": null, "summary": "Python 2.7-3.5 clients for gpsd", "version": "0.33.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Installation</strong></p>\n<p><tt>[sudo <span class=\"pre\">[-H]]</span> pip[2|3] install gps3</tt></p>\n<p>For example, <tt>sudo <span class=\"pre\">-H</span> pip3 install gps3</tt> for your default P3 installation.\n<tt>sudo pip2 install gps3</tt> for Python 2.7.</p>\n<p><strong>gps3.py</strong> will install at <tt><span class=\"pre\">/usr/local/lib/python[3.5]/dist-packages/gps3/gps3.py</span></tt></p>\n<p>gps3.py is a Python 2.7-3.5 GPSD interface (<a href=\"http://www.catb.org/gpsd\" rel=\"nofollow\">http://www.catb.org/gpsd</a>) and\ndefaults to host=\u2019127.0.0.1\u2019, port=2947, gpsd_protocol=\u2019json\u2019 in two classes.</p>\n<ol>\n<li><strong>GPSDSocket</strong> creates a GPSD socket connection &amp; request/retrieve GPSD output.</li>\n<li><strong>DataStream</strong> unpacks the streamed gpsd data into python dictionaries.</li>\n</ol>\n<p>These dictionaries are literated from the JSON data packet sent from the GPSD.</p>\n<pre>from gps3 import gps3\ngps_socket = gps3.GPSDSocket()\ndata_stream = gps3.DataStream()\ngps_socket.connect()\ngps_socket.watch()\nfor new_data in gps_socket:\n    if new_data:\n        data_stream.unpack(new_data)\n        print('Altitude = ', data_stream.TPV['alt'])\n        print('Latitude = ', data_stream.TPV['lat'])\n</pre>\n<p>Consult Lines 147-ff for Attribute/Key possibilities.\nor <a href=\"http://www.catb.org/gpsd/gpsd_json.html\" rel=\"nofollow\">http://www.catb.org/gpsd/gpsd_json.html</a></p>\n<p><strong>agps3.py</strong> is installed at <tt><span class=\"pre\">/usr/local/lib/python[3.5]/dist-packages/gps3/agps3.py</span></tt></p>\n<p>It is functionally similar to gps.py, but literates object attributes rather than Python dictionaries.</p>\n<p>agps3.py is also a Python 2.7-3.5 GPSD interface (<a href=\"http://www.catb.org/gpsd\" rel=\"nofollow\">http://www.catb.org/gpsd</a>) and\ndefaults to host=\u2019127.0.0.1\u2019, port=2947, gpsd_protocol=\u2019json\u2019 in two classes.</p>\n<ol>\n<li><strong>GPSDSocket</strong> creates a GPSD socket connection &amp; request/retrieve GPSD output.</li>\n<li><strong>DataStream</strong> unpacks the streamed gpsd data into object attribute values.</li>\n</ol>\n<pre>from gps3 import agps3\ngps_socket = agps3.GPSDSocket()\ndata_stream = agps3.DataStream()\ngps_socket.connect()\ngps_socket.watch()\nfor new_data in gps_socket:\n    if new_data:\n        data_stream.unpack(new_data)\n        print('Altitude = ', data_stream.alt)\n        print('Latitude = ', data_stream.lat)\n</pre>\n<p>Consult Lines 140-ff for Attribute-value possibilities.</p>\n<p>For a human experience, both versions have trivial showcase scripts, located at</p>\n<p><tt>/usr/local/share/gps3/examples/</tt></p>\n<p><strong>agpsthreaded.py</strong> is agps3 <em>prethreaded</em> as a default daemon thread with all data exposed as attributes of the threaded data stream.</p>\n<pre>from gps3.agps3threaded import AGPS3mechanism\nagps_thread = AGPS3mechanism()  # Instantiate AGPS3 Mechanisms\nagps_thread.stream_data()  # From localhost (), or other hosts, by example, (host='gps.ddns.net')\nagps_thread.run_thread()  # Throttle time to sleep after an empty lookup, default '()' 0.2 two tenths of a second\n\nwhile True:  # All data is available via instantiated thread data stream attribute.\n    # line #140-ff of /usr/local/lib/python3.5/dist-packages/gps3/agps.py\n    print('---------------------')\n    print(                   agps_thread.data_stream.time)\n    print('Lat:{}   '.format(agps_thread.data_stream.lat))\n    print('Lon:{}   '.format(agps_thread.data_stream.lon))\n    print('Speed:{} '.format(agps_thread.data_stream.speed))\n    print('Course:{}'.format(agps_thread.data_stream.track))\n    print('---------------------')\n    sleep(60) # Sleep, or do other things for as long as you like.\n</pre>\n<p><strong>human.py</strong> showcases gps3.py, <strong>ahuman.py</strong> showcases agps3.py</p>\n<p><tt>python[X] <span class=\"pre\">/usr/local/share/gps3/examples/[a]human.py</span> <span class=\"pre\">[-host]</span> <span class=\"pre\">[-port]</span></tt> or <tt><span class=\"pre\">--help</span></tt>   for list of commandline options.</p>\n<p>Toggle Lat/Lon form with \u2018<strong>0</strong>\u2019, \u2018<strong>1</strong>\u2019, \u2018<strong>2</strong>\u2019, \u2018<strong>3</strong>\u2019 for RAW, DDD, DMM, DMS</p>\n<p>Toggle units with  \u2018<strong>0</strong>\u2019, \u2018<strong>m</strong>\u2019, \u2018<strong>i</strong>\u2019, \u2018<strong>n</strong>\u2019, for \u2018raw\u2019, Metric, Imperial, Nautical</p>\n<p>Toggle between JSON and NMEA outputs with \u2018<strong>j</strong>\u2019 and \u2018<strong>a</strong>\u2019 respectively.</p>\n<p>Refresh the display of device information with \u2018<strong>d</strong>\u2019 to see the return after issuing <tt>gps3.misc.hertz(5)</tt> to change capable gps devices to 5Hz</p>\n<p>Quit with \u2018<strong>q</strong>\u2019 or \u2018<strong>^c</strong>\u2019</p>\n<p>Likewise, both versions have trivial applications [<strong>a</strong>] <strong>gegps3.py</strong> that creates a \u2018live\u2019 kml file(s) for Google Earth.</p>\n<p><tt>python[X] <span class=\"pre\">/usr/local/share/gps3/examples/[a]gegps3.py</span></tt> (defaults)</p>\n<p>Scant documentation is in the respective file.</p>\n<p><strong>Un-installation</strong></p>\n<p><tt>[sudo <span class=\"pre\">-H]</span> pip[2|3] uninstall gps3</tt></p>\n<p>For example, <tt>sudo <span class=\"pre\">-H</span> pip3 uninstall gps3</tt> for P3 installation.\nLikewise, for Python 2.7 <tt>sudo pip2 uninstall gps3</tt></p>\n<p><strong>Problems with installation</strong></p>\n<p>Un-install using the method above and <tt>y</tt> to delete the old files, then</p>\n<p><tt>sudo <span class=\"pre\">-H</span> pip[2|3] install <span class=\"pre\">--ignore-installed</span> gps3</tt></p>\n<p>This will bypass the cached version and fetch the most recent <em>typo-free</em> version.</p>\n<p>Comments are always appreciated.</p>\n\n          </div>"}, "last_serial": 2323582, "releases": {"0.1a": [{"comment_text": "", "digests": {"md5": "570501a92c536c3627cdb04a93176015", "sha256": "7cd87ed9f147d58d51e4c64c0e7be4bb67631148b5d364ea47442d26a6e0effa"}, "downloads": -1, "filename": "gps3-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "570501a92c536c3627cdb04a93176015", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 23559, "upload_time": "2016-04-25T02:22:19", "upload_time_iso_8601": "2016-04-25T02:22:19.066967Z", "url": "https://files.pythonhosted.org/packages/b5/15/4df47cba8436d62d4d4abfc8859168f19e40b888ef81b3d56a47480ee715/gps3-0.1-py2.py3-none-any.whl", "yanked": false}], "0.30": [{"comment_text": "", "digests": {"md5": "d7e84e7ebd62cdbd1e4c23e9167df889", "sha256": "8d4015d9b44608267b781227bf114d002235b4ffb134704252f4a7f892284a11"}, "downloads": -1, "filename": "gps3-0.1a-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d7e84e7ebd62cdbd1e4c23e9167df889", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 23318, "upload_time": "2016-04-23T21:43:07", "upload_time_iso_8601": "2016-04-23T21:43:07.127444Z", "url": "https://files.pythonhosted.org/packages/c1/a0/3b819ffcea8efb9409701de4f40b80a8727dba44322f792ac37df088432c/gps3-0.1a-py2.py3-none-any.whl", "yanked": false}], "0.30.1": [], "0.30.2": [], "0.30.3": [{"comment_text": "", "digests": {"md5": "d68b7beb9d011a93f9077f6040273fdb", "sha256": "9552843f331bcc5de5562945268edbc99cbe9d52069d4bbdf31db2ac528aed5c"}, "downloads": -1, "filename": "gps3-0.30.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d68b7beb9d011a93f9077f6040273fdb", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 23331, "upload_time": "2016-04-24T02:55:17", "upload_time_iso_8601": "2016-04-24T02:55:17.451342Z", "url": "https://files.pythonhosted.org/packages/35/3d/437190df610a7e35facd954802989c67b092d0def52151abd5df67ae150e/gps3-0.30.3-py2.py3-none-any.whl", "yanked": false}], "0.30.4": [{"comment_text": "", "digests": {"md5": "aabd843ff0232804af2e90feaa5fcd57", "sha256": "8ffe54c211338fdc27f5fa82631e398a4d6e89a2fe4ddd6d2315498f083a425c"}, "downloads": -1, "filename": "gps3-0.30.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aabd843ff0232804af2e90feaa5fcd57", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 24218, "upload_time": "2016-05-12T03:57:43", "upload_time_iso_8601": "2016-05-12T03:57:43.950053Z", "url": "https://files.pythonhosted.org/packages/04/92/f72d9011ce80af9be99c880a72befde38ef2992ee672197b66fab6d5aad3/gps3-0.30.4-py2.py3-none-any.whl", "yanked": false}], "0.32.0": [{"comment_text": "", "digests": {"md5": "18c351f8a09dd801e1a60b84afc9bd62", "sha256": "03eb04117acc20153602d121a72272d221498e91980799d3cbe661011a760242"}, "downloads": -1, "filename": "gps3-0.32.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18c351f8a09dd801e1a60b84afc9bd62", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 28500, "upload_time": "2016-06-02T12:55:12", "upload_time_iso_8601": "2016-06-02T12:55:12.339350Z", "url": "https://files.pythonhosted.org/packages/36/4f/aae1ebfb6724943bd50f618aecc79221dd4decfffc521338983755fe0298/gps3-0.32.0-py2.py3-none-any.whl", "yanked": false}], "0.32.2": [{"comment_text": "", "digests": {"md5": "fc9df7b1bf4aea6308857019333008de", "sha256": "4b0123a81d2c697cd03b25db0a3f996540af881b872c9b736db8254f53bc9219"}, "downloads": -1, "filename": "gps3-0.32.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc9df7b1bf4aea6308857019333008de", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29685, "upload_time": "2016-06-20T01:54:01", "upload_time_iso_8601": "2016-06-20T01:54:01.056193Z", "url": "https://files.pythonhosted.org/packages/ac/bc/8013fbe306b1ce1fa64831307882647d587f87a6bd6ecc4a5d8a7d8ff2e3/gps3-0.32.2-py2.py3-none-any.whl", "yanked": false}], "0.33.0": [{"comment_text": "", "digests": {"md5": "d93bd9a6f98cca1f0b5d03ce076642b2", "sha256": "b61f56e4a5bf344ea02815fb74ed4597c3ed1cc1657069a94b15f1d136b3c0e5"}, "downloads": -1, "filename": "gps3-0.33.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d93bd9a6f98cca1f0b5d03ce076642b2", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29701, "upload_time": "2016-06-28T01:57:14", "upload_time_iso_8601": "2016-06-28T01:57:14.731258Z", "url": "https://files.pythonhosted.org/packages/cc/aa/7a81022427bafb392d6ad9baf949abaf3b9fee60653d749adbacb090ef08/gps3-0.33.0-py2.py3-none-any.whl", "yanked": false}], "0.33.1": [{"comment_text": "", "digests": {"md5": "e11594b5fe8cdfb3e108b9ddc15a6b95", "sha256": "adabf7f22ff0a3692aecf7f20a6ba12e26e1dc655a0d465e5cce94a00a90605a"}, "downloads": -1, "filename": "gps3-0.33.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e11594b5fe8cdfb3e108b9ddc15a6b95", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29692, "upload_time": "2016-06-29T08:01:25", "upload_time_iso_8601": "2016-06-29T08:01:25.368143Z", "url": "https://files.pythonhosted.org/packages/1f/4a/5bfc5e4e5fd17ff624ba619170ed1086654c37810849ee4bf5c88031b4a6/gps3-0.33.1-py2.py3-none-any.whl", "yanked": false}], "0.33.2": [{"comment_text": "", "digests": {"md5": "5ffefbd9c9691826f61fee3cebe03a82", "sha256": "1033ed66d508b77de9a3e8e0ebd9d07f327f2897e219fdacfc83ab3099451537"}, "downloads": -1, "filename": "gps3-0.33.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ffefbd9c9691826f61fee3cebe03a82", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29692, "upload_time": "2016-06-29T08:32:46", "upload_time_iso_8601": "2016-06-29T08:32:46.336150Z", "url": "https://files.pythonhosted.org/packages/48/b5/212129f2ef531a92abcc6fd863f22ccad4b4ef381d2fdf7ee91b7eaf16e5/gps3-0.33.2-py2.py3-none-any.whl", "yanked": false}], "0.33.3": [{"comment_text": "", "digests": {"md5": "048a58f4697a456ac8e0a413038ad385", "sha256": "9c7ef9fa334ae6d4157fa63abe6df334d4f0878dbb628d10cb4c5f304eb22978"}, "downloads": -1, "filename": "gps3-0.33.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "048a58f4697a456ac8e0a413038ad385", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29795, "upload_time": "2016-09-04T03:28:42", "upload_time_iso_8601": "2016-09-04T03:28:42.443975Z", "url": "https://files.pythonhosted.org/packages/20/c1/9548cb5388a85e31557d1f1f66e2ad0b269d8aeb982f34f72f83d9bdbaeb/gps3-0.33.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "048a58f4697a456ac8e0a413038ad385", "sha256": "9c7ef9fa334ae6d4157fa63abe6df334d4f0878dbb628d10cb4c5f304eb22978"}, "downloads": -1, "filename": "gps3-0.33.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "048a58f4697a456ac8e0a413038ad385", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29795, "upload_time": "2016-09-04T03:28:42", "upload_time_iso_8601": "2016-09-04T03:28:42.443975Z", "url": "https://files.pythonhosted.org/packages/20/c1/9548cb5388a85e31557d1f1f66e2ad0b269d8aeb982f34f72f83d9bdbaeb/gps3-0.33.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:12 2020"}