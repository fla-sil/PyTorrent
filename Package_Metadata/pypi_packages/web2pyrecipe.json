{"info": {"author": "Douglas Camata", "author_email": "d.camata@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Topic :: Software Development :: Build Tools"], "description": "A buildout to develop the web2pyrecipe.\n\nIt should download the lastest version of web2py, install an user defined app\nand create a script to run it.\n\n- Code repository: http://github.com/douglascamata/web2pyrecipe...\n- Questions and comments to d.camata@gmail.com\n- Report bugs at http://github.com/douglascamata/web2pyrecipe/issues..\n\n\nDetailed Documentation\n**********************\n\nSupported options\n=================\n\nappdir\n    The directory where the compressed web2py application should be ...\n\ndefault\n    The default app of the web2py server ...\n\npassword\n    The password for web2py adminsitrative app ...\n\nTesting now::\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = test1\n    ...\n    ... [test1]\n    ... recipe = web2pyrecipe\n    ... password = 123\n    ... pidfile = pid.txt\n    ... appdir = %(dir)s\n    ... default = web2py.app.chat\n    ... option2 = %(bar)s\n    ... \"\"\" % { 'dir' : 'web2pyapps', 'bar' : 'value2'})\n\n    >>> mkdir('web2pyapps')\n    ...\n\nDownloading example app::\n\n    >>> system('wget http://www.web2py.com/appliances/default/download/app.source.aa6d3615911c89b6.7765623270792e6170702e636861742e773270.w2p -O web2pyapps/web2py.app.chat.w2p -q')\n    ''\n\nRunning the buildout gives us::\n\n    >>> print 'start', system(buildout)\n    start...\n    Installing test1.\n    Unused options for test1: 'option2'.\n    <BLANKLINE>\n\nChecking the root directory structure::\n\n    >>> ls('.')\n     -  .installed.cfg\n     d  bin\n     -  buildout.cfg\n     d  develop-eggs\n     d  eggs\n     d  parts\n     d  web2py\n     d  web2pyapps\n\nChecking the test app for w2p::\n\n    >>> ls('web2pyapps')\n     - web2py.app.chat.w2p\n\nChecking if web2py is extracted correctly::\n\n    >>> ls('web2py')\n    -  ABOUT\n    -  LICENSE\n    -  Makefile\n    -  NEWINSTALL\n    -  README\n    -  VERSION\n    -  __init__.py\n    -  anyserver.py\n    -  app.example.yaml\n    -  appengine_config.py\n    d  applications\n    -  cgihandler.py\n    -  epydoc.conf\n    -  epydoc.css\n    -  fcgihandler.py\n    -  gaehandler.py\n    d  gluon\n    -  isapiwsgihandler.py\n    -  logging.example.conf\n    -  modpythonhandler.py\n    -  options_std.py\n    -  queue.example.yaml\n    -  router.example.py\n    -  routes.example.py\n    -  routes.py\n    -  scgihandler.py\n    d  scripts\n    -  setup.py\n    -  setup_app.py\n    -  setup_exe.py\n    -  setup_exe_2.6.py\n    d  site-packages\n    -  splashlogo.gif\n    -  web2py.py\n    -  wsgihandler.py\n\nChecking if the test app is correctly extracted at web2py's application directory::\n\n    >>> ls(join('web2py','applications'))\n    -  __init__.py\n    d  admin\n    d  examples\n    d  web2py_app_chat\n    d  welcome\n\n    >>> cat(join('web2py','routes.py'))\n    default_application = 'web2py_app_chat'\n    default_controller = 'default'\n    default_function = 'index'\n\nChecking if the script for running the web2py server is created on 'bin' directory::\n\n    >>> ls('bin')\n    - buildout\n    - web2py\n\nSo, let's check the content of 'web2py' script::\n\n    >>> cat(join('bin','web2py'))\n    #!/bin/bash\n    PYTHON=python\n    <BLANKLINE>\n    start() {\n        ${PYTHON} web2py/web2py.py -a 123 -d pid.txt &\n    }\n    <BLANKLINE>\n    stop() {\n        kill `cat web2py/pid.txt`\n    }\n    <BLANKLINE>\n    case \"$1\" in\n      start)\n        start;;\n      stop)\n        stop;;\n      restart)\n        start\n        stop;;\n      *)\n      echo \"Usage: web2py {start|stop|restart}\"\n      exit 1;;\n    esac\n    exit\n\n\nContributors\n************\n\n\"Douglas Camata\", Author\n\n\nChange history\n**************\n\n1.0.1 (2011-11-10)\n----------------\n\n- Lots of refactoring to a more pythonic and less\n  system-depedent code\n\n\n1.0.0 (2010-09-30)\n----------------\n\n- Initial release\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://http://github.com/douglascamata/web2pyrecipe", "keywords": "", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "web2pyrecipe", "package_url": "https://pypi.org/project/web2pyrecipe/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/web2pyrecipe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://http://github.com/douglascamata/web2pyrecipe"}, "release_url": "https://pypi.org/project/web2pyrecipe/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A web2py recipe for buildout.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            A buildout to develop the web2pyrecipe.<br><br>It should download the lastest version of web2py, install an user defined app<br>and create a script to run it.<br><br>- Code repository: http://github.com/douglascamata/web2pyrecipe...<br>- Questions and comments to d.camata@gmail.com<br>- Report bugs at http://github.com/douglascamata/web2pyrecipe/issues..<br><br><br>Detailed Documentation<br>**********************<br><br>Supported options<br>=================<br><br>appdir<br>    The directory where the compressed web2py application should be ...<br><br>default<br>    The default app of the web2py server ...<br><br>password<br>    The password for web2py adminsitrative app ...<br><br>Testing now::<br><br>    &gt;&gt;&gt; write('buildout.cfg',<br>    ... \"\"\"<br>    ... [buildout]<br>    ... parts = test1<br>    ...<br>    ... [test1]<br>    ... recipe = web2pyrecipe<br>    ... password = 123<br>    ... pidfile = pid.txt<br>    ... appdir = %(dir)s<br>    ... default = web2py.app.chat<br>    ... option2 = %(bar)s<br>    ... \"\"\" % { 'dir' : 'web2pyapps', 'bar' : 'value2'})<br><br>    &gt;&gt;&gt; mkdir('web2pyapps')<br>    ...<br><br>Downloading example app::<br><br>    &gt;&gt;&gt; system('wget http://www.web2py.com/appliances/default/download/app.source.aa6d3615911c89b6.7765623270792e6170702e636861742e773270.w2p -O web2pyapps/web2py.app.chat.w2p -q')<br>    ''<br><br>Running the buildout gives us::<br><br>    &gt;&gt;&gt; print 'start', system(buildout)<br>    start...<br>    Installing test1.<br>    Unused options for test1: 'option2'.<br>    &lt;BLANKLINE&gt;<br><br>Checking the root directory structure::<br><br>    &gt;&gt;&gt; ls('.')<br>     -  .installed.cfg<br>     d  bin<br>     -  buildout.cfg<br>     d  develop-eggs<br>     d  eggs<br>     d  parts<br>     d  web2py<br>     d  web2pyapps<br><br>Checking the test app for w2p::<br><br>    &gt;&gt;&gt; ls('web2pyapps')<br>     - web2py.app.chat.w2p<br><br>Checking if web2py is extracted correctly::<br><br>    &gt;&gt;&gt; ls('web2py')<br>    -  ABOUT<br>    -  LICENSE<br>    -  Makefile<br>    -  NEWINSTALL<br>    -  README<br>    -  VERSION<br>    -  __init__.py<br>    -  anyserver.py<br>    -  app.example.yaml<br>    -  appengine_config.py<br>    d  applications<br>    -  cgihandler.py<br>    -  epydoc.conf<br>    -  epydoc.css<br>    -  fcgihandler.py<br>    -  gaehandler.py<br>    d  gluon<br>    -  isapiwsgihandler.py<br>    -  logging.example.conf<br>    -  modpythonhandler.py<br>    -  options_std.py<br>    -  queue.example.yaml<br>    -  router.example.py<br>    -  routes.example.py<br>    -  routes.py<br>    -  scgihandler.py<br>    d  scripts<br>    -  setup.py<br>    -  setup_app.py<br>    -  setup_exe.py<br>    -  setup_exe_2.6.py<br>    d  site-packages<br>    -  splashlogo.gif<br>    -  web2py.py<br>    -  wsgihandler.py<br><br>Checking if the test app is correctly extracted at web2py's application directory::<br><br>    &gt;&gt;&gt; ls(join('web2py','applications'))<br>    -  __init__.py<br>    d  admin<br>    d  examples<br>    d  web2py_app_chat<br>    d  welcome<br><br>    &gt;&gt;&gt; cat(join('web2py','routes.py'))<br>    default_application = 'web2py_app_chat'<br>    default_controller = 'default'<br>    default_function = 'index'<br><br>Checking if the script for running the web2py server is created on 'bin' directory::<br><br>    &gt;&gt;&gt; ls('bin')<br>    - buildout<br>    - web2py<br><br>So, let's check the content of 'web2py' script::<br><br>    &gt;&gt;&gt; cat(join('bin','web2py'))<br>    #!/bin/bash<br>    PYTHON=python<br>    &lt;BLANKLINE&gt;<br>    start() {<br>        ${PYTHON} web2py/web2py.py -a 123 -d pid.txt &amp;<br>    }<br>    &lt;BLANKLINE&gt;<br>    stop() {<br>        kill `cat web2py/pid.txt`<br>    }<br>    &lt;BLANKLINE&gt;<br>    case \"$1\" in<br>      start)<br>        start;;<br>      stop)<br>        stop;;<br>      restart)<br>        start<br>        stop;;<br>      *)<br>      echo \"Usage: web2py {start|stop|restart}\"<br>      exit 1;;<br>    esac<br>    exit<br><br><br>Contributors<br>************<br><br>\"Douglas Camata\", Author<br><br><br>Change history<br>**************<br><br>1.0.1 (2011-11-10)<br>----------------<br><br>- Lots of refactoring to a more pythonic and less<br>  system-depedent code<br><br><br>1.0.0 (2010-09-30)<br>----------------<br><br>- Initial release<br><br>Download<br>********\n          </div>"}, "last_serial": 801576, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e67e4aee0e3f58e3e3dbec09289141ad", "sha256": "5fe35974e7e8f32cc6de15874666e815f1f31930c1f811d88ec3bd4c4f74315e"}, "downloads": -1, "filename": "web2pyrecipe-1.0.tar.gz", "has_sig": false, "md5_digest": "e67e4aee0e3f58e3e3dbec09289141ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121831, "upload_time": "2011-03-15T22:39:14", "upload_time_iso_8601": "2011-03-15T22:39:14.731372Z", "url": "https://files.pythonhosted.org/packages/75/67/609fec842629ed0d6f0655842cebd67c493ead49574e420e96839e2e4b8b/web2pyrecipe-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "fec7ac29c90dc613e1a761ce00a092cd", "sha256": "378d558d68cc9749afe6781a09e397e34ad08a15da5eeff629988240a3aa376c"}, "downloads": -1, "filename": "web2pyrecipe-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fec7ac29c90dc613e1a761ce00a092cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121008, "upload_time": "2011-11-10T04:18:56", "upload_time_iso_8601": "2011-11-10T04:18:56.403117Z", "url": "https://files.pythonhosted.org/packages/6e/47/61226238d123402ab4a986811f9e7932bb8c13146cdeddd8dbe35d8ba20a/web2pyrecipe-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fec7ac29c90dc613e1a761ce00a092cd", "sha256": "378d558d68cc9749afe6781a09e397e34ad08a15da5eeff629988240a3aa376c"}, "downloads": -1, "filename": "web2pyrecipe-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fec7ac29c90dc613e1a761ce00a092cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121008, "upload_time": "2011-11-10T04:18:56", "upload_time_iso_8601": "2011-11-10T04:18:56.403117Z", "url": "https://files.pythonhosted.org/packages/6e/47/61226238d123402ab4a986811f9e7932bb8c13146cdeddd8dbe35d8ba20a/web2pyrecipe-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:32 2020"}