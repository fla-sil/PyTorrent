{"info": {"author": "Jason McClellan<jason@jasonmcclellan.io>, Koert van der Veer<koert@ondergetekende.nl>", "author_email": "jason@jasonmccllelan.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.4", "Framework :: Django :: 1.5", "Framework :: Django :: 1.6", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![PyPi version](https://img.shields.io/pypi/v/django-bootstrap-pagination.svg)](https://pypi.python.org/pypi/django-bootstrap-pagination)\n[![PyPi downloads](https://img.shields.io/pypi/dm/django-bootstrap-pagination.svg)](https://pypi.python.org/pypi/django-bootstrap-pagination)\n[![Build Status](https://travis-ci.org/jmcclell/django-bootstrap-pagination.png?branch=master)](https://travis-ci.org/jmcclell/django-bootstrap-pagination)\n\n\n## Django Bootstrap Pagination\n\n*Bootstrap Compatibility*\n\n| Versions         | Bootstrap Versions  | Notes                                                  |\n| -----------------| ------------------- | -------------------------------------------------------|\n| < 1.1.0          | 2.x                 |                                                        |\n| > 1.1.0, < 1.7.0 | 3.x                 |                                                        |\n| >= 1.7.0         | 3.x, 4.x            | bootstrap_pager is only compatible with Bootstrap  3.x |\n\n\nThis application serves to make using Twitter's Bootstrap Pagination styles\nwork seamlessly with Django Page objects. By passing in a Page object and\none or more optional arguments, Bootstrap pagination bars and pagers can\nbe rendered with very little effort.\n\nCompatible with Django **1.2+**\n\n## Installation\n\n### PIP\n\nThis will install the latest stable release from PyPi.\n\n```\n    pip install django-bootstrap-pagination\n```\n\n### Download\n\nDownload the latest stable distribution from:\n\nhttp://pypi.python.org/pypi/django-bootstrap-pagination\n\nDownload the latest development version from:\n\ngithub @ http://www.github.com/jmcclell/django-bootstrap-pagination\n\n```\n    setup.py install\n```\n\n## Usage\n\n### Setup\n\nMake sure you include bootstrap_pagination in your installed_apps list in settings.py:\n\n```\n    INSTALLED_APPS = (\n        'bootstrap_pagination',\n    )\n```\n\nAdditionally, include the following snippet at the top of any template that makes use of\nthe pagination tags:\n\n```\n    {% load bootstrap_pagination %}\n```\n\nFinally, make sure that you have the request context processor enabled:\n\n```\n    # Django 1.8+\n    TEMPLATES = [\n        {\n            # ...\n            'OPTIONS': {\n                context_processors': [\n                    # ...\n                    'django.template.context_processors.request',\n                ]\n            }\n        }\n    ]\n\n    # Django < 1.8\n    TEMPLATE_CONTEXT_PROCESSORS = {\n        \"django.core.context_processors.request\",\n    )\n```\n\n# bootstrap_paginate\n\n**All Optional Arguments**\n\n- **range** - Defines the maximum number of page links to show\n- **show_prev_next** - Boolean. Defines whether or not to show the Previous and Next\n                       links. (Accepts `\"true\"` or `\"false\"`)\n- **previous_label** - The label to use for the Previous link\n- **next_label** - The label to use for the Next link\n- **show_first_last** - Boolean. Defines whether or not to show the First and Last links.\n                       (Accepts `\"true\"` or `\"false\"`)\n- **first_label** - The label to use for the First page link\n- **last_label** - The label to use for the Last page link\n- **show_index_range** - Boolean, defaults to \"false\". If \"true\" shows index range of items instead of page numbers in the paginator. For example, if paginator is configured for 50 items per page, show_index_range=\"true\" will display [1-50, 51-100, **101-150**, 151-200, 201-250, etc.] rather than [1, 2, **3**, 4, 5, etc.].\n- **url_view_name** - A named URL reference (such as one that might get passed into the URL\n                      template tag) to use as the URL template. Must be resolvable by the\n                      `reverse()` function. **If this option is not specified, the tag simply\n                      uses a relative url such as `?page=1` which is fine in most situations**\n- **url_param_name** - Determines the name of the `GET` parameter for the page number. The\n                       default is `\"page\"`. If no **url_view_name** is defined, this string\n                       is appended to the url as `?{{url_param_name}}=1`.\n- **url_extra_args** - **Only valid when url_view_name is set.** Additional arguments to\n                       pass into `reverse()` to resolve the URL.\n- **url_extra_kwargs** - **Only valid when `url_view_name` is set.** Additional named\n                         arguments to pass into `reverse()` to resolve the URL. Additionally,\n                         the template tag will add an extra parameter to this for the\n                         page, as it is assumed that if given a url_name, the page will\n                         be a named variable in the URL regular expression. In this case,\n                         the `url_param_name` continues to be the string used to represent\n                         the name. That is, by default, `url_param_name` is equal to `page`\n                         and thus it is expected that there is a named `page` argument in the\n                         URL referenced by `url_view_name`. This allows us to use pretty\n                         pagination URLs such as `/page/1`\n- **extra_pagination_classes** - A space separated list of CSS class names that\n                             will be added to the top level `<ul>` HTML element.\n                             In particular, this can be utilized in Bootstrap 4\n                             installations to add the appropriate alignment\n                             classes from Flexbox utilities: eg:\n                             `justify-content-center`\n\n\n**Basic Usage**\n\nThe following will show a pagination bar with a link to every page, a previous link, and a next link:\n\n```\n    {% bootstrap_paginate page_obj %}\n```\n\nThe following will show a pagination bar with at most 10 page links, a previous link, and a next link:\n\n```\n    {% bootstrap_paginate page_obj range=10 %}\n```\n\nThe following will show a pagination bar with at most 10 page links, a first page link, and a last page link:\n\n```\n    {% bootstrap_paginate page_obj range=10 show_prev_next=\"false\" show_first_last=\"true\" %}\n```\n\n**Advanced Usage**\n\nGiven a url configured such as:\n\n```python\n    archive_index_view = ArchiveIndexView.as_view(\n        date_field='date',\n        paginate_by=10,\n        allow_empty=True,\n        queryset=MyModel.all(),\n        template_name='example/archive.html'\n    )\n\n    urlpatterns = patterns(\n        'example.views',\n        url(r'^$', archive_index_view, name='archive_index'),\n        url(r'^page/(?P<page>\\d+)/$', archive_index_view,\n            name='archive_index_paginated'))\n```\n\nWe could simply use the basic usage (appending ?page=#) with the *archive_index* URL above,\nas the *archive_index_view* class based generic view from django doesn't care how it gets\nthe page parameter. However, if we want pretty URLs, such as those defined in the\n*archive_index_paginated* URL (ie: /page/1), we need to define the URL in our template tag:\n\n```\n    {% bootstrap_paginate page_obj url_view_name=\"archive_index_paginated\" %}\n```\n\nBecause we are using a default page parameter name of \"page\" and our URL requires no other\nparameters, everything works as expected. If our URL required additional parameters, we\nwould pass them in using the optional arguments **url_extra_args** and **url_extra_kwargs**.\nLikewise, if our page parameter had a different name, we would pass in a different\n**url_param_name** argument to the template tag.\n\n# bootstrap_pager\n\nA much simpler implementation of the Bootstrap Pagination functionality is the Pager, which\nsimply provides a Previous and Next link.\n\n**All Optional Arguments**\n\n- **previous_label** - Defines the label for the Previous link\n- **next_label** - Defines the label for the Next link\n- **previous_title** - Defines the link title for the previous link\n- **next_title** - Defines the link title for the next link\n- **centered** - Boolean. Defines whether or not the links are centered. Defaults to false.\n                 (Accepts \"true\" or \"false\")\n- **url_view_name** - A named URL reference (such as one that might get passed into the URL\n                      template tag) to use as the URL template. Must be resolvable by the\n                      `reverse()` function. **If this option is not specified, the tag simply\n                      uses a relative url such as `?page=1` which is fine in most situations**\n- **url_param_name** - Determines the name of the `GET` parameter for the page number. Th\n                       default is `\"page\"`. If no `url_view_name` is defined, this string\n                       is appended to the url as `?{{url_param_name}}=1`.\n- **url_extra_args** - **Only valid when `url_view_name` is set.** Additional arguments to\n                       pass into `reverse()` to resolve the URL.\n- **url_extra_kwargs** - **Only valid when `url_view_name` is set.** Additional named\n                         arguments to pass into `reverse()` to resolve the URL. Additionally,\n                         the template tag will add an extra parameter to this for the\n                         page, as it is assumed that if given a url_name, the page will\n                         be a named variable in the URL regular expression. In this case,\n                         the `url_param_name` continues to be the string used to represent\n                         the name. That is, by default, `url_param_name` is equal to `\"page\"`\n                         and thus it is expected that there is a named `page` argument in the\n                         URL referenced by `url_view_name`. This allows us to use pretty\n                         pagination URLs such as `/page/1`\n- **url_anchor** - The anchor to use in URLs. Defaults to `None`\n- **extra_pager_classes** - A space separated list of CSS class names that will be added\n                to the top level `<ul>` HTML element. This could be used to, as an\n                example, add a class  to prevent the pager from showing up when\n                printing.\n\n**Usage**\n\nUsage is basically the same as for bootstrap_paginate. The simplest usage is:\n\n```\n    {% bootstrap_pager page_obj %}\n```\n\nA somewhat more advanced usage might look like:\n\n```\n    {% bootstrap_pager page_obj previous_label=\"Newer Posts\" next_label=\"Older Posts\" url_view_name=\"post_archive_paginated\" %}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jmcclell/django-bootstrap-pagination", "keywords": "django bootstrap pagination templatetag", "license": "MIT licence, see LICENCE", "maintainer": "", "maintainer_email": "", "name": "django-bootstrap-pagination", "package_url": "https://pypi.org/project/django-bootstrap-pagination/", "platform": "", "project_url": "https://pypi.org/project/django-bootstrap-pagination/", "project_urls": {"Homepage": "https://github.com/jmcclell/django-bootstrap-pagination"}, "release_url": "https://pypi.org/project/django-bootstrap-pagination/1.7.1/", "requires_dist": null, "requires_python": "", "summary": "Render Django Page objects as Bootstrap 3.x/4.x Pagination compatible HTML", "version": "1.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/django-bootstrap-pagination\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a78f1c29a92442219fdf4907649c85167baf4d99/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d626f6f7473747261702d706167696e6174696f6e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-bootstrap-pagination\" rel=\"nofollow\"><img alt=\"PyPi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d18da24d5f3f643f191ff2117e3cb2690cfa7bb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d626f6f7473747261702d706167696e6174696f6e2e737667\"></a>\n<a href=\"https://travis-ci.org/jmcclell/django-bootstrap-pagination\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d78748be7cacbc34e604103085b3f19a4803e93/68747470733a2f2f7472617669732d63692e6f72672f6a6d63636c656c6c2f646a616e676f2d626f6f7473747261702d706167696e6174696f6e2e706e673f6272616e63683d6d6173746572\"></a></p>\n<h2>Django Bootstrap Pagination</h2>\n<p><em>Bootstrap Compatibility</em></p>\n<table>\n<thead>\n<tr>\n<th>Versions</th>\n<th>Bootstrap Versions</th>\n<th>Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt; 1.1.0</td>\n<td>2.x</td>\n<td></td>\n</tr>\n<tr>\n<td>&gt; 1.1.0, &lt; 1.7.0</td>\n<td>3.x</td>\n<td></td>\n</tr>\n<tr>\n<td>&gt;= 1.7.0</td>\n<td>3.x, 4.x</td>\n<td>bootstrap_pager is only compatible with Bootstrap  3.x</td>\n</tr></tbody></table>\n<p>This application serves to make using Twitter's Bootstrap Pagination styles\nwork seamlessly with Django Page objects. By passing in a Page object and\none or more optional arguments, Bootstrap pagination bars and pagers can\nbe rendered with very little effort.</p>\n<p>Compatible with Django <strong>1.2+</strong></p>\n<h2>Installation</h2>\n<h3>PIP</h3>\n<p>This will install the latest stable release from PyPi.</p>\n<pre><code>    pip install django-bootstrap-pagination\n</code></pre>\n<h3>Download</h3>\n<p>Download the latest stable distribution from:</p>\n<p><a href=\"http://pypi.python.org/pypi/django-bootstrap-pagination\" rel=\"nofollow\">http://pypi.python.org/pypi/django-bootstrap-pagination</a></p>\n<p>Download the latest development version from:</p>\n<p>github @ <a href=\"http://www.github.com/jmcclell/django-bootstrap-pagination\" rel=\"nofollow\">http://www.github.com/jmcclell/django-bootstrap-pagination</a></p>\n<pre><code>    setup.py install\n</code></pre>\n<h2>Usage</h2>\n<h3>Setup</h3>\n<p>Make sure you include bootstrap_pagination in your installed_apps list in settings.py:</p>\n<pre><code>    INSTALLED_APPS = (\n        'bootstrap_pagination',\n    )\n</code></pre>\n<p>Additionally, include the following snippet at the top of any template that makes use of\nthe pagination tags:</p>\n<pre><code>    {% load bootstrap_pagination %}\n</code></pre>\n<p>Finally, make sure that you have the request context processor enabled:</p>\n<pre><code>    # Django 1.8+\n    TEMPLATES = [\n        {\n            # ...\n            'OPTIONS': {\n                context_processors': [\n                    # ...\n                    'django.template.context_processors.request',\n                ]\n            }\n        }\n    ]\n\n    # Django &lt; 1.8\n    TEMPLATE_CONTEXT_PROCESSORS = {\n        \"django.core.context_processors.request\",\n    )\n</code></pre>\n<h1>bootstrap_paginate</h1>\n<p><strong>All Optional Arguments</strong></p>\n<ul>\n<li><strong>range</strong> - Defines the maximum number of page links to show</li>\n<li><strong>show_prev_next</strong> - Boolean. Defines whether or not to show the Previous and Next\nlinks. (Accepts <code>\"true\"</code> or <code>\"false\"</code>)</li>\n<li><strong>previous_label</strong> - The label to use for the Previous link</li>\n<li><strong>next_label</strong> - The label to use for the Next link</li>\n<li><strong>show_first_last</strong> - Boolean. Defines whether or not to show the First and Last links.\n(Accepts <code>\"true\"</code> or <code>\"false\"</code>)</li>\n<li><strong>first_label</strong> - The label to use for the First page link</li>\n<li><strong>last_label</strong> - The label to use for the Last page link</li>\n<li><strong>show_index_range</strong> - Boolean, defaults to \"false\". If \"true\" shows index range of items instead of page numbers in the paginator. For example, if paginator is configured for 50 items per page, show_index_range=\"true\" will display [1-50, 51-100, <strong>101-150</strong>, 151-200, 201-250, etc.] rather than [1, 2, <strong>3</strong>, 4, 5, etc.].</li>\n<li><strong>url_view_name</strong> - A named URL reference (such as one that might get passed into the URL\ntemplate tag) to use as the URL template. Must be resolvable by the\n<code>reverse()</code> function. <strong>If this option is not specified, the tag simply\nuses a relative url such as <code>?page=1</code> which is fine in most situations</strong></li>\n<li><strong>url_param_name</strong> - Determines the name of the <code>GET</code> parameter for the page number. The\ndefault is <code>\"page\"</code>. If no <strong>url_view_name</strong> is defined, this string\nis appended to the url as <code>?{{url_param_name}}=1</code>.</li>\n<li><strong>url_extra_args</strong> - <strong>Only valid when url_view_name is set.</strong> Additional arguments to\npass into <code>reverse()</code> to resolve the URL.</li>\n<li><strong>url_extra_kwargs</strong> - <strong>Only valid when <code>url_view_name</code> is set.</strong> Additional named\narguments to pass into <code>reverse()</code> to resolve the URL. Additionally,\nthe template tag will add an extra parameter to this for the\npage, as it is assumed that if given a url_name, the page will\nbe a named variable in the URL regular expression. In this case,\nthe <code>url_param_name</code> continues to be the string used to represent\nthe name. That is, by default, <code>url_param_name</code> is equal to <code>page</code>\nand thus it is expected that there is a named <code>page</code> argument in the\nURL referenced by <code>url_view_name</code>. This allows us to use pretty\npagination URLs such as <code>/page/1</code></li>\n<li><strong>extra_pagination_classes</strong> - A space separated list of CSS class names that\nwill be added to the top level <code>&lt;ul&gt;</code> HTML element.\nIn particular, this can be utilized in Bootstrap 4\ninstallations to add the appropriate alignment\nclasses from Flexbox utilities: eg:\n<code>justify-content-center</code></li>\n</ul>\n<p><strong>Basic Usage</strong></p>\n<p>The following will show a pagination bar with a link to every page, a previous link, and a next link:</p>\n<pre><code>    {% bootstrap_paginate page_obj %}\n</code></pre>\n<p>The following will show a pagination bar with at most 10 page links, a previous link, and a next link:</p>\n<pre><code>    {% bootstrap_paginate page_obj range=10 %}\n</code></pre>\n<p>The following will show a pagination bar with at most 10 page links, a first page link, and a last page link:</p>\n<pre><code>    {% bootstrap_paginate page_obj range=10 show_prev_next=\"false\" show_first_last=\"true\" %}\n</code></pre>\n<p><strong>Advanced Usage</strong></p>\n<p>Given a url configured such as:</p>\n<pre>    <span class=\"n\">archive_index_view</span> <span class=\"o\">=</span> <span class=\"n\">ArchiveIndexView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span>\n        <span class=\"n\">date_field</span><span class=\"o\">=</span><span class=\"s1\">'date'</span><span class=\"p\">,</span>\n        <span class=\"n\">paginate_by</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">allow_empty</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(),</span>\n        <span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"s1\">'example/archive.html'</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span>\n        <span class=\"s1\">'example.views'</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^$'</span><span class=\"p\">,</span> <span class=\"n\">archive_index_view</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'archive_index'</span><span class=\"p\">),</span>\n        <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^page/(?P&lt;page&gt;\\d+)/$'</span><span class=\"p\">,</span> <span class=\"n\">archive_index_view</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'archive_index_paginated'</span><span class=\"p\">))</span>\n</pre>\n<p>We could simply use the basic usage (appending ?page=#) with the <em>archive_index</em> URL above,\nas the <em>archive_index_view</em> class based generic view from django doesn't care how it gets\nthe page parameter. However, if we want pretty URLs, such as those defined in the\n<em>archive_index_paginated</em> URL (ie: /page/1), we need to define the URL in our template tag:</p>\n<pre><code>    {% bootstrap_paginate page_obj url_view_name=\"archive_index_paginated\" %}\n</code></pre>\n<p>Because we are using a default page parameter name of \"page\" and our URL requires no other\nparameters, everything works as expected. If our URL required additional parameters, we\nwould pass them in using the optional arguments <strong>url_extra_args</strong> and <strong>url_extra_kwargs</strong>.\nLikewise, if our page parameter had a different name, we would pass in a different\n<strong>url_param_name</strong> argument to the template tag.</p>\n<h1>bootstrap_pager</h1>\n<p>A much simpler implementation of the Bootstrap Pagination functionality is the Pager, which\nsimply provides a Previous and Next link.</p>\n<p><strong>All Optional Arguments</strong></p>\n<ul>\n<li><strong>previous_label</strong> - Defines the label for the Previous link</li>\n<li><strong>next_label</strong> - Defines the label for the Next link</li>\n<li><strong>previous_title</strong> - Defines the link title for the previous link</li>\n<li><strong>next_title</strong> - Defines the link title for the next link</li>\n<li><strong>centered</strong> - Boolean. Defines whether or not the links are centered. Defaults to false.\n(Accepts \"true\" or \"false\")</li>\n<li><strong>url_view_name</strong> - A named URL reference (such as one that might get passed into the URL\ntemplate tag) to use as the URL template. Must be resolvable by the\n<code>reverse()</code> function. <strong>If this option is not specified, the tag simply\nuses a relative url such as <code>?page=1</code> which is fine in most situations</strong></li>\n<li><strong>url_param_name</strong> - Determines the name of the <code>GET</code> parameter for the page number. Th\ndefault is <code>\"page\"</code>. If no <code>url_view_name</code> is defined, this string\nis appended to the url as <code>?{{url_param_name}}=1</code>.</li>\n<li><strong>url_extra_args</strong> - <strong>Only valid when <code>url_view_name</code> is set.</strong> Additional arguments to\npass into <code>reverse()</code> to resolve the URL.</li>\n<li><strong>url_extra_kwargs</strong> - <strong>Only valid when <code>url_view_name</code> is set.</strong> Additional named\narguments to pass into <code>reverse()</code> to resolve the URL. Additionally,\nthe template tag will add an extra parameter to this for the\npage, as it is assumed that if given a url_name, the page will\nbe a named variable in the URL regular expression. In this case,\nthe <code>url_param_name</code> continues to be the string used to represent\nthe name. That is, by default, <code>url_param_name</code> is equal to <code>\"page\"</code>\nand thus it is expected that there is a named <code>page</code> argument in the\nURL referenced by <code>url_view_name</code>. This allows us to use pretty\npagination URLs such as <code>/page/1</code></li>\n<li><strong>url_anchor</strong> - The anchor to use in URLs. Defaults to <code>None</code></li>\n<li><strong>extra_pager_classes</strong> - A space separated list of CSS class names that will be added\nto the top level <code>&lt;ul&gt;</code> HTML element. This could be used to, as an\nexample, add a class  to prevent the pager from showing up when\nprinting.</li>\n</ul>\n<p><strong>Usage</strong></p>\n<p>Usage is basically the same as for bootstrap_paginate. The simplest usage is:</p>\n<pre><code>    {% bootstrap_pager page_obj %}\n</code></pre>\n<p>A somewhat more advanced usage might look like:</p>\n<pre><code>    {% bootstrap_pager page_obj previous_label=\"Newer Posts\" next_label=\"Older Posts\" url_view_name=\"post_archive_paginated\" %}\n</code></pre>\n\n          </div>"}, "last_serial": 5397819, "releases": {"0.1.0": [], "0.1.1": [], "0.1.10": [{"comment_text": "", "digests": {"md5": "fdd774730371db73132694a4317c2e55", "sha256": "25c459e84d103113d61bd6b0ce93beb8382b99be3f905ccd805b77ae840dcaff"}, "downloads": -1, "filename": "django-bootstrap-pagination-0.1.10.zip", "has_sig": false, "md5_digest": "fdd774730371db73132694a4317c2e55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18122, "upload_time": "2012-04-09T07:24:16", "upload_time_iso_8601": "2012-04-09T07:24:16.820149Z", "url": "https://files.pythonhosted.org/packages/11/05/b411990ae391dd474fc5d40e29df725586b4f8ca85e77c29ff7d25bb838f/django-bootstrap-pagination-0.1.10.zip", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "f472db7959b4202ba279101312532efe", "sha256": "982f04b39a9da5144e50befa288feb77fea190ed4f249c60351080462a3579dc"}, "downloads": -1, "filename": "django-bootstrap-pagination-0.1.11.tar.gz", "has_sig": false, "md5_digest": "f472db7959b4202ba279101312532efe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8807, "upload_time": "2013-07-04T17:44:19", "upload_time_iso_8601": "2013-07-04T17:44:19.924039Z", "url": "https://files.pythonhosted.org/packages/26/56/9c665cc1ad3fa5a6f43669f6a601f2bc0d67d91291d9e90786b64d5a4382/django-bootstrap-pagination-0.1.11.tar.gz", "yanked": false}], "0.1.2": [], "0.1.3": [], "0.1.5": [{"comment_text": "", "digests": {"md5": "8b459be17fc34cf69ea01f3e6fb76789", "sha256": "973a428eeac22dd4b77c094c2552464987041259be35c98adc845b97d0232964"}, "downloads": -1, "filename": "django-bootstrap-pagination-0.1.5.zip", "has_sig": false, "md5_digest": "8b459be17fc34cf69ea01f3e6fb76789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15662, "upload_time": "2012-03-20T06:45:39", "upload_time_iso_8601": "2012-03-20T06:45:39.042655Z", "url": "https://files.pythonhosted.org/packages/73/4d/2ad433d635423adbbf567c2a34902307bb414ae8df407d0d7c0618525a62/django-bootstrap-pagination-0.1.5.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2072bc957e38757bb11ebbd588f148d8", "sha256": "0bcb45b96589988d5b6f07890bca6eaad595434f5825c6bc693d401797e105a5"}, "downloads": -1, "filename": "django-bootstrap-pagination-0.1.7.zip", "has_sig": false, "md5_digest": "2072bc957e38757bb11ebbd588f148d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17902, "upload_time": "2012-03-20T07:46:35", "upload_time_iso_8601": "2012-03-20T07:46:35.897666Z", "url": "https://files.pythonhosted.org/packages/08/c4/980a7cb5b389f0f6cd81a6ff306fa4d91cc262d85f325469bad56501c928/django-bootstrap-pagination-0.1.7.zip", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "220c7c733a0477524a6ccb9ebfac0735", "sha256": "c6c4e1be40f9c612d63e1a1cc01cef751b27cf97b0e0702c7dae20c55c02689e"}, "downloads": -1, "filename": "django-bootstrap-pagination-0.1.8.zip", "has_sig": false, "md5_digest": "220c7c733a0477524a6ccb9ebfac0735", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18120, "upload_time": "2012-03-20T19:22:17", "upload_time_iso_8601": "2012-03-20T19:22:17.739922Z", "url": "https://files.pythonhosted.org/packages/34/94/658592987a39fb89f6d50f0a58c19d1391840ff4303ad147d2a0c17f953c/django-bootstrap-pagination-0.1.8.zip", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "b11e2c7a6ebce21cb4dd40173e2e95b9", "sha256": "a0998ced29d1dd173012e690905ab6b52d259f17ffee402398bae31419b4646f"}, "downloads": -1, "filename": "django-bootstrap-pagination-0.1.9.zip", "has_sig": false, "md5_digest": "b11e2c7a6ebce21cb4dd40173e2e95b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18086, "upload_time": "2012-04-08T10:05:56", "upload_time_iso_8601": "2012-04-08T10:05:56.171540Z", "url": "https://files.pythonhosted.org/packages/2e/62/7f7a52000b5c8b13672e951906396766d74e1d38c0e94c5824396a168865/django-bootstrap-pagination-0.1.9.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "f1507e84e2efa96683aa595acb30803c", "sha256": "c226fcc5e2418f66e4a9ebd6aa8242a6e43f4295f73f657b769870acf2dd0fce"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.0.tar.gz", "has_sig": false, "md5_digest": "f1507e84e2efa96683aa595acb30803c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8856, "upload_time": "2013-12-19T12:38:04", "upload_time_iso_8601": "2013-12-19T12:38:04.381706Z", "url": "https://files.pythonhosted.org/packages/77/df/45219697799d2f5ee7f12dbedf7b9b0b47176cc25b83642f073cf0eefbfc/django-bootstrap-pagination-1.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "d340c4063acf87438b40b31e71b28124", "sha256": "fe288f04f66cf8a2e8be7f1a1dc888c840c3be415277827444d6951353c60654"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.5.0.tar.gz", "has_sig": false, "md5_digest": "d340c4063acf87438b40b31e71b28124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8695, "upload_time": "2013-12-19T12:43:15", "upload_time_iso_8601": "2013-12-19T12:43:15.242231Z", "url": "https://files.pythonhosted.org/packages/be/d1/a0df2306890462e982aff3406ec5d1c4b10f1c13e7e74fe552aaabd8afd2/django-bootstrap-pagination-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "6d3fb7d63085853aa118fe253bdf724f", "sha256": "e0fe310ecc290138105bee49fc23f131c2a58f315373b42806c691b8365f909c"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.5.1.tar.gz", "has_sig": false, "md5_digest": "6d3fb7d63085853aa118fe253bdf724f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8076, "upload_time": "2015-01-09T04:39:03", "upload_time_iso_8601": "2015-01-09T04:39:03.977505Z", "url": "https://files.pythonhosted.org/packages/b0/3d/80fc42fedf616075f543bc80983482e62c6b4073ab92c40454f8b6a44bb5/django-bootstrap-pagination-1.5.1.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "2eef4d28fc97b3172c6adb108282a2ea", "sha256": "271d79d25696c5e639192f6c3707f86d3ddc894246bf66f75b851dcea02fb60b"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.6.0.tar.gz", "has_sig": false, "md5_digest": "2eef4d28fc97b3172c6adb108282a2ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9919, "upload_time": "2016-02-17T08:30:59", "upload_time_iso_8601": "2016-02-17T08:30:59.088034Z", "url": "https://files.pythonhosted.org/packages/f5/10/cd0f779428c2cda8d383acedce3267e8a1fd1244e9b83e3cf91bae7d6649/django-bootstrap-pagination-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "cbb5a700865e63d2b66b19f53a832955", "sha256": "ebc6ac5028b218aaa20713dff72415bcd820c1bfb69aeae11193316a965de2b0"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.6.1.tar.gz", "has_sig": false, "md5_digest": "cbb5a700865e63d2b66b19f53a832955", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9932, "upload_time": "2016-03-01T19:38:58", "upload_time_iso_8601": "2016-03-01T19:38:58.490812Z", "url": "https://files.pythonhosted.org/packages/eb/06/a59606538f77234dda1eb2ba68ea1c2799630110e0d54b08a2182ed757f7/django-bootstrap-pagination-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "313e51b97adcd99ce0d12eb1916385a2", "sha256": "5dc2280cc8254bd87ec9534e5f2af0867bfa481b270b3e29ed86ddb22a74cfa7"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.6.2.tar.gz", "has_sig": false, "md5_digest": "313e51b97adcd99ce0d12eb1916385a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10148, "upload_time": "2016-08-12T01:01:17", "upload_time_iso_8601": "2016-08-12T01:01:17.016681Z", "url": "https://files.pythonhosted.org/packages/aa/ca/8dc4a9d15dfa5621b66e9dc267262f5b0d828f2ca76baf7bb140ec3eb912/django-bootstrap-pagination-1.6.2.tar.gz", "yanked": false}], "1.6.3": [{"comment_text": "", "digests": {"md5": "0898b2bb6defb835a74ad9781a11ddbc", "sha256": "f265b357d7523f60679a54efcf08986f67a3624308e3e653f402445e27fe4715"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.6.3.tar.gz", "has_sig": false, "md5_digest": "0898b2bb6defb835a74ad9781a11ddbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11013, "upload_time": "2017-10-05T14:29:44", "upload_time_iso_8601": "2017-10-05T14:29:44.667896Z", "url": "https://files.pythonhosted.org/packages/e4/24/341dd354b5b5efe2cdacd65df26a33c6888a626e392dead43f29c5a10112/django-bootstrap-pagination-1.6.3.tar.gz", "yanked": false}], "1.6.4": [{"comment_text": "", "digests": {"md5": "e95a3ed6a49b000723877270a848e782", "sha256": "f1abbd78bdc2376c4a2dd2756f082e85341bd5876289c8bb3aa845e9929c9a8b"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.6.4.tar.gz", "has_sig": false, "md5_digest": "e95a3ed6a49b000723877270a848e782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10981, "upload_time": "2018-02-04T09:34:16", "upload_time_iso_8601": "2018-02-04T09:34:16.342584Z", "url": "https://files.pythonhosted.org/packages/1f/6f/ed2d04a0d140c62b51438236a1d1e7382efbc9765fcdb96ba8be80a0cc10/django-bootstrap-pagination-1.6.4.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "29d6c2169b9fd41176b6787f55d0f942", "sha256": "03104bc9fdde00a8909967c0be0d320a6bea596ed7d6398045ab74fd6a34d441"}, "downloads": -1, "filename": "django_bootstrap_pagination-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "29d6c2169b9fd41176b6787f55d0f942", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13986, "upload_time": "2018-10-13T06:13:43", "upload_time_iso_8601": "2018-10-13T06:13:43.950157Z", "url": "https://files.pythonhosted.org/packages/85/95/731bcf10116b2dd2a647662fb359a9d497500f014fe5064aa669f0e96581/django_bootstrap_pagination-1.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f79a29573445669cae08aa247db00f21", "sha256": "af5633f80f5d3dba2faa4c8622fdfd46fff787d1a9581917c8e67e59b37fb4f0"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.7.0.tar.gz", "has_sig": false, "md5_digest": "f79a29573445669cae08aa247db00f21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14488, "upload_time": "2018-10-13T06:13:45", "upload_time_iso_8601": "2018-10-13T06:13:45.187280Z", "url": "https://files.pythonhosted.org/packages/79/a0/192546c57e78e1da59c7ee87722b9a00d14d1204aaf919233a1ee0df45d9/django-bootstrap-pagination-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "3e0c386a46ebf1135429df111e05b6f0", "sha256": "47e742679cf109e12f10ae09d5263433f94440818cf7b023e90a3f5252849639"}, "downloads": -1, "filename": "django_bootstrap_pagination-1.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3e0c386a46ebf1135429df111e05b6f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15815, "upload_time": "2019-06-13T21:31:37", "upload_time_iso_8601": "2019-06-13T21:31:37.146214Z", "url": "https://files.pythonhosted.org/packages/bc/47/eb84f1b4cf6e06a18d3e666a6123301de84dea4af19e2e13edcbeaa83f4a/django_bootstrap_pagination-1.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "700c89ca8f63ffe0e731f4249138580e", "sha256": "69d826d92217325611cb86e49944d8261e3c92eaa4deafea5a605d79fd363883"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.7.1.tar.gz", "has_sig": false, "md5_digest": "700c89ca8f63ffe0e731f4249138580e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15843, "upload_time": "2019-06-13T21:31:39", "upload_time_iso_8601": "2019-06-13T21:31:39.323693Z", "url": "https://files.pythonhosted.org/packages/4d/af/dbf3ad602a9ab111a7709e4a5a916a7ecac92b37ea28b33ca00104770a93/django-bootstrap-pagination-1.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3e0c386a46ebf1135429df111e05b6f0", "sha256": "47e742679cf109e12f10ae09d5263433f94440818cf7b023e90a3f5252849639"}, "downloads": -1, "filename": "django_bootstrap_pagination-1.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3e0c386a46ebf1135429df111e05b6f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15815, "upload_time": "2019-06-13T21:31:37", "upload_time_iso_8601": "2019-06-13T21:31:37.146214Z", "url": "https://files.pythonhosted.org/packages/bc/47/eb84f1b4cf6e06a18d3e666a6123301de84dea4af19e2e13edcbeaa83f4a/django_bootstrap_pagination-1.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "700c89ca8f63ffe0e731f4249138580e", "sha256": "69d826d92217325611cb86e49944d8261e3c92eaa4deafea5a605d79fd363883"}, "downloads": -1, "filename": "django-bootstrap-pagination-1.7.1.tar.gz", "has_sig": false, "md5_digest": "700c89ca8f63ffe0e731f4249138580e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15843, "upload_time": "2019-06-13T21:31:39", "upload_time_iso_8601": "2019-06-13T21:31:39.323693Z", "url": "https://files.pythonhosted.org/packages/4d/af/dbf3ad602a9ab111a7709e4a5a916a7ecac92b37ea28b33ca00104770a93/django-bootstrap-pagination-1.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:22 2020"}