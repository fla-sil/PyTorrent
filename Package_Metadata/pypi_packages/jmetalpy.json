{"info": {"author": "Antonio J. Nebro", "author_email": "antonio@lcc.uma.es", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "![jMetalPy](docs/source/jmetalpy.png)\n\n[![Build Status](https://img.shields.io/travis/jMetal/jMetalPy/master.svg?style=flat-square)](https://travis-ci.org/jMetal/jMetalPy)\n[![Documentation](https://img.shields.io/badge/docs-online-success?style=flat-square)](https://jmetal.github.io/jMetalPy/index.html)\n[![PyPI License](https://img.shields.io/pypi/l/jMetalPy.svg?style=flat-square)]()\n[![PyPI version](https://img.shields.io/pypi/v/jMetalPy.svg?style=flat-square)]()\n[![PyPI Python version](https://img.shields.io/pypi/pyversions/jMetalPy.svg?style=flat-square)]()\n\nA paper introducing jMetalPy is available at: https://doi.org/10.1016/j.swevo.2019.100598\n\n### Table of Contents\n- [Installation](#installation)\n- [Usage](#hello-world-)\n- [Features](#features)\n- [Changelog](#changelog)\n- [License](#license)\n\n## Installation\n\nYou can install the latest version of jMetalPy with `pip`, \n\n```console\npip install jmetalpy  # or \"jmetalpy[distributed]\"\n```\n\n<details><summary><b>Notes on installing with <tt>pip</tt></b></summary>\n<p>\n\njMetalPy includes features for parallel and distributed computing based on [pySpark](https://spark.apache.org/docs/latest/api/python/index.html) and [Dask](https://dask.org/).\n\nThese (extra) dependencies are *not* automatically installed when running `pip`, which only comprises the core functionality of the framework (enough for most users):\n\n```console\npip install jmetalpy\n```\n\nThis is the equivalent of running: \n\n```console\npip install \"jmetalpy[core]\"\n```\n\nOther supported commands are listed next:\n\n```console\npip install \"jmetalpy[docs]\"  # Install requirements for building docs\npip install \"jmetalpy[distributed]\"  # Install requirements for parallel/distributed computing\npip install \"jmetalpy[complete]\"  # Install all requirements\n```\n\n</p>\n</details>\n\n## Hello, world! \ud83d\udc4b\n\nExamples of configuring and running all the included algorithms are located [in the documentation](https://jmetal.github.io/jMetalPy/multiobjective.algorithms.html).\n\n```python\nfrom jmetal.algorithm.multiobjective import NSGAII\nfrom jmetal.operator import SBXCrossover, PolynomialMutation\nfrom jmetal.problem import ZDT1\nfrom jmetal.util.termination_criterion import StoppingByEvaluations\n\nproblem = ZDT1()\n\nalgorithm = NSGAII(\n    problem=problem,\n    population_size=100,\n    offspring_population_size=100,\n    mutation=PolynomialMutation(probability=1.0 / problem.number_of_variables, distribution_index=20),\n    crossover=SBXCrossover(probability=1.0, distribution_index=20),\n    termination_criterion=StoppingByEvaluations(max_evaluations=25000)\n)\n\nalgorithm.run()\n```\n\nWe can then proceed to explore the results:\n\n```python\nfrom jmetal.util.solution import get_non_dominated_solutions, print_function_values_to_file, \\ \n    print_variables_to_file\n\nfront = get_non_dominated_solutions(algorithm.get_result())\n\n# save to files\nprint_function_values_to_file(front, 'FUN.NSGAII.ZDT1')\nprint_variables_to_file(front, 'VAR.NSGAII.ZDT1')\n```\n\nOr visualize the Pareto front approximation produced by the algorithm:\n\n```python\nfrom jmetal.lab.visualization import Plot\n\nplot_front = Plot(title='Pareto front approximation', axis_labels=['x', 'y'])\nplot_front.plot(front, label='NSGAII-ZDT1', filename='NSGAII-ZDT1', format='png')\n```\n\n<img src=docs/source/_static/NSGAII-ZDT1.png width=450 alt=\"Pareto front approximation\">\n\n## Features\nThe current release of jMetalPy (v1.5.5) contains the following components:\n\n* Algorithms: local search, genetic algorithm, evolution strategy, simulated annealing, random search, NSGA-II, NSGA-III, SMPSO, OMOPSO, MOEA/D, MOEA/D-DRA, MOEA/D-IEpsilon, GDE3, SPEA2, HYPE, IBEA. Preference articulation-based algorithms (G-NSGA-II, G-GDE3, G-SPEA2, SMPSO/RP); Dynamic versions of NSGA-II, SMPSO, and GDE3.\n* Parallel computing based on Apache Spark and Dask.\n* Benchmark problems: ZDT1-6, DTLZ1-2, FDA, LZ09, LIR-CMOP, unconstrained (Kursawe, Fonseca, Schaffer, Viennet2), constrained (Srinivas, Tanaka).\n* Encodings: real, binary, permutations.\n* Operators: selection (binary tournament, ranking and crowding distance, random, nary random, best solution), crossover (single-point, SBX), mutation (bit-blip, polynomial, uniform, random).\n* Quality indicators: hypervolume, additive epsilon, GD, IGD.\n* Pareto front approximation plotting in real-time, static or interactive.\n* Experiment class for performing studies either alone or alongside [jMetal](https://github.com/jMetal/jMetal).\n* Pairwise and multiple hypothesis testing for statistical analysis, including several frequentist and Bayesian testing methods, critical distance plots and posterior diagrams.\n\n| ![Scatter plot 2D](docs/source/_static/2D.gif) | ![Scatter plot 3D](docs/source/_static/3D.gif) |\n|-------------- | ----------------  |\n| ![Parallel coordinates](docs/source/_static/p-c.gif) | ![Interactive chord plot](docs/source/_static/chordplot.gif) |\n\n## Changelog\n\n* [v1.5.5] Minor bug fixes.\n* [v1.5.4] Refactored quality indicators to accept numpy array as input parameter.\n* [v1.5.4] Added [CompositeSolution](https://github.com/jMetal/jMetalPy/blob/master/jmetal/core/solution.py#L111) class to support mixed combinatorial problems. [#69](https://github.com/jMetal/jMetalPy/issues/69)\n\n## License\nThis project is licensed under the terms of the MIT - see the [LICENSE](LICENSE) file for details.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jMetal/jMetalPy", "keywords": "", "license": "MIT", "maintainer": "Antonio J. Nebro, Antonio Benitez-Hidalgo", "maintainer_email": "antonio@lcc.uma.es, antonio.benitez@lcc.uma.es", "name": "jmetalpy", "package_url": "https://pypi.org/project/jmetalpy/", "platform": "", "project_url": "https://pypi.org/project/jmetalpy/", "project_urls": {"Homepage": "https://github.com/jMetal/jMetalPy"}, "release_url": "https://pypi.org/project/jmetalpy/1.5.5/", "requires_dist": null, "requires_python": "", "summary": "Python version of the jMetal framework", "version": "1.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"jMetalPy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2eb11f0c6555a458832ca3f8721e5c0918a784ac/646f63732f736f757263652f6a6d6574616c70792e706e67\"></p>\n<p><a href=\"https://travis-ci.org/jMetal/jMetalPy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88b633fe5b24bd0a28e9e0b5786d416561295818/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a4d6574616c2f6a4d6574616c50792f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://jmetal.github.io/jMetalPy/index.html\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35ecb68f0fb15e2fcd7490cbca5174ab0c9ba0c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6f6e6c696e652d737563636573733f7374796c653d666c61742d737175617265\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"PyPI License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d41fc88761eec636bac39194642502bd1dcdc747/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6a4d6574616c50792e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19dfa887cfb54faf8154974e1bd4aebfb45ef1d7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a4d6574616c50792e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"PyPI Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40d798c3d56bc5a1dd7808ecc4c0bcc833005678/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6a4d6574616c50792e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>A paper introducing jMetalPy is available at: <a href=\"https://doi.org/10.1016/j.swevo.2019.100598\" rel=\"nofollow\">https://doi.org/10.1016/j.swevo.2019.100598</a></p>\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#hello-world-\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#changelog\" rel=\"nofollow\">Changelog</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Installation</h2>\n<p>You can install the latest version of jMetalPy with <code>pip</code>,</p>\n<pre><span class=\"go\">pip install jmetalpy  # or \"jmetalpy[distributed]\"</span>\n</pre>\n<details><summary><b>Notes on installing with <tt>pip</tt></b></summary>\n<p>\n</p><p>jMetalPy includes features for parallel and distributed computing based on <a href=\"https://spark.apache.org/docs/latest/api/python/index.html\" rel=\"nofollow\">pySpark</a> and <a href=\"https://dask.org/\" rel=\"nofollow\">Dask</a>.</p>\n<p>These (extra) dependencies are <em>not</em> automatically installed when running <code>pip</code>, which only comprises the core functionality of the framework (enough for most users):</p>\n<pre><span class=\"go\">pip install jmetalpy</span>\n</pre>\n<p>This is the equivalent of running:</p>\n<pre><span class=\"go\">pip install \"jmetalpy[core]\"</span>\n</pre>\n<p>Other supported commands are listed next:</p>\n<pre><span class=\"go\">pip install \"jmetalpy[docs]\"  # Install requirements for building docs</span>\n<span class=\"go\">pip install \"jmetalpy[distributed]\"  # Install requirements for parallel/distributed computing</span>\n<span class=\"go\">pip install \"jmetalpy[complete]\"  # Install all requirements</span>\n</pre>\n<p></p>\n</details>\n<h2>Hello, world! \ud83d\udc4b</h2>\n<p>Examples of configuring and running all the included algorithms are located <a href=\"https://jmetal.github.io/jMetalPy/multiobjective.algorithms.html\" rel=\"nofollow\">in the documentation</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jmetal.algorithm.multiobjective</span> <span class=\"kn\">import</span> <span class=\"n\">NSGAII</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jmetal.operator</span> <span class=\"kn\">import</span> <span class=\"n\">SBXCrossover</span><span class=\"p\">,</span> <span class=\"n\">PolynomialMutation</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jmetal.problem</span> <span class=\"kn\">import</span> <span class=\"n\">ZDT1</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jmetal.util.termination_criterion</span> <span class=\"kn\">import</span> <span class=\"n\">StoppingByEvaluations</span>\n\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">ZDT1</span><span class=\"p\">()</span>\n\n<span class=\"n\">algorithm</span> <span class=\"o\">=</span> <span class=\"n\">NSGAII</span><span class=\"p\">(</span>\n    <span class=\"n\">problem</span><span class=\"o\">=</span><span class=\"n\">problem</span><span class=\"p\">,</span>\n    <span class=\"n\">population_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"n\">offspring_population_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"n\">mutation</span><span class=\"o\">=</span><span class=\"n\">PolynomialMutation</span><span class=\"p\">(</span><span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"mf\">1.0</span> <span class=\"o\">/</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">number_of_variables</span><span class=\"p\">,</span> <span class=\"n\">distribution_index</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">),</span>\n    <span class=\"n\">crossover</span><span class=\"o\">=</span><span class=\"n\">SBXCrossover</span><span class=\"p\">(</span><span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">distribution_index</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">),</span>\n    <span class=\"n\">termination_criterion</span><span class=\"o\">=</span><span class=\"n\">StoppingByEvaluations</span><span class=\"p\">(</span><span class=\"n\">max_evaluations</span><span class=\"o\">=</span><span class=\"mi\">25000</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">algorithm</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>We can then proceed to explore the results:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jmetal.util.solution</span> <span class=\"kn\">import</span> <span class=\"n\">get_non_dominated_solutions</span><span class=\"p\">,</span> <span class=\"n\">print_function_values_to_file</span><span class=\"p\">,</span> \\ \n    <span class=\"n\">print_variables_to_file</span>\n\n<span class=\"n\">front</span> <span class=\"o\">=</span> <span class=\"n\">get_non_dominated_solutions</span><span class=\"p\">(</span><span class=\"n\">algorithm</span><span class=\"o\">.</span><span class=\"n\">get_result</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># save to files</span>\n<span class=\"n\">print_function_values_to_file</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">,</span> <span class=\"s1\">'FUN.NSGAII.ZDT1'</span><span class=\"p\">)</span>\n<span class=\"n\">print_variables_to_file</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">,</span> <span class=\"s1\">'VAR.NSGAII.ZDT1'</span><span class=\"p\">)</span>\n</pre>\n<p>Or visualize the Pareto front approximation produced by the algorithm:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jmetal.lab.visualization</span> <span class=\"kn\">import</span> <span class=\"n\">Plot</span>\n\n<span class=\"n\">plot_front</span> <span class=\"o\">=</span> <span class=\"n\">Plot</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Pareto front approximation'</span><span class=\"p\">,</span> <span class=\"n\">axis_labels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">])</span>\n<span class=\"n\">plot_front</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'NSGAII-ZDT1'</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'NSGAII-ZDT1'</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'png'</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"Pareto front approximation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/915e713bc1897b620ce81f059cffb0057c6eb565/646f63732f736f757263652f5f7374617469632f4e53474149492d5a4454312e706e67\" width=\"450\">\n<h2>Features</h2>\n<p>The current release of jMetalPy (v1.5.5) contains the following components:</p>\n<ul>\n<li>Algorithms: local search, genetic algorithm, evolution strategy, simulated annealing, random search, NSGA-II, NSGA-III, SMPSO, OMOPSO, MOEA/D, MOEA/D-DRA, MOEA/D-IEpsilon, GDE3, SPEA2, HYPE, IBEA. Preference articulation-based algorithms (G-NSGA-II, G-GDE3, G-SPEA2, SMPSO/RP); Dynamic versions of NSGA-II, SMPSO, and GDE3.</li>\n<li>Parallel computing based on Apache Spark and Dask.</li>\n<li>Benchmark problems: ZDT1-6, DTLZ1-2, FDA, LZ09, LIR-CMOP, unconstrained (Kursawe, Fonseca, Schaffer, Viennet2), constrained (Srinivas, Tanaka).</li>\n<li>Encodings: real, binary, permutations.</li>\n<li>Operators: selection (binary tournament, ranking and crowding distance, random, nary random, best solution), crossover (single-point, SBX), mutation (bit-blip, polynomial, uniform, random).</li>\n<li>Quality indicators: hypervolume, additive epsilon, GD, IGD.</li>\n<li>Pareto front approximation plotting in real-time, static or interactive.</li>\n<li>Experiment class for performing studies either alone or alongside <a href=\"https://github.com/jMetal/jMetal\" rel=\"nofollow\">jMetal</a>.</li>\n<li>Pairwise and multiple hypothesis testing for statistical analysis, including several frequentist and Bayesian testing methods, critical distance plots and posterior diagrams.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><img alt=\"Scatter plot 2D\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d88d95dd1d5fb1db8b5980125d930be4b6e78bc6/646f63732f736f757263652f5f7374617469632f32442e676966\"></th>\n<th><img alt=\"Scatter plot 3D\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fbbc257f9c85f8291c10280b79efe7bb1633b1e/646f63732f736f757263652f5f7374617469632f33442e676966\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img alt=\"Parallel coordinates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59327696e484898fe7c141891a1a18ed4896396b/646f63732f736f757263652f5f7374617469632f702d632e676966\"></td>\n<td><img alt=\"Interactive chord plot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6a5737bad99ddc5e5b359b32676e16da72c8861/646f63732f736f757263652f5f7374617469632f63686f7264706c6f742e676966\"></td>\n</tr></tbody></table>\n<h2>Changelog</h2>\n<ul>\n<li>[v1.5.5] Minor bug fixes.</li>\n<li>[v1.5.4] Refactored quality indicators to accept numpy array as input parameter.</li>\n<li>[v1.5.4] Added <a href=\"https://github.com/jMetal/jMetalPy/blob/master/jmetal/core/solution.py#L111\" rel=\"nofollow\">CompositeSolution</a> class to support mixed combinatorial problems. <a href=\"https://github.com/jMetal/jMetalPy/issues/69\" rel=\"nofollow\">#69</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the terms of the MIT - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n\n          </div>"}, "last_serial": 6985968, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9806bf885a58f361b143d93607bba789", "sha256": "a52ef26f1ea255701ce96dda310b275b27bf1769c0131443535cedf6ea5e0fd4"}, "downloads": -1, "filename": "jmetalpy-0.1.tar.gz", "has_sig": false, "md5_digest": "9806bf885a58f361b143d93607bba789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23451, "upload_time": "2017-07-12T07:29:48", "upload_time_iso_8601": "2017-07-12T07:29:48.795731Z", "url": "https://files.pythonhosted.org/packages/3e/29/7893030977844b870ae5327211f41f301b8600ca10b3c7f39fa7ceb02aa3/jmetalpy-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ab6cb587794b334e3bec50a46dce4fd9", "sha256": "a0eb7a4e1afaf0409b69744653586772e935060397b2bdf309684daa6fd25904"}, "downloads": -1, "filename": "jmetalpy-0.2.tar.gz", "has_sig": false, "md5_digest": "ab6cb587794b334e3bec50a46dce4fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27019, "upload_time": "2017-07-21T09:36:19", "upload_time_iso_8601": "2017-07-21T09:36:19.765759Z", "url": "https://files.pythonhosted.org/packages/14/19/7b0550ad099ba2a59bc60a505a11a56ab8a01c67a7da3fad57992aa5a174/jmetalpy-0.2.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "efea6d1aa8482cd9c6661f8130233500", "sha256": "55af6807b7754812745e40484b5ff8ae0af5bde882c44e0dac40ebb65422d0b0"}, "downloads": -1, "filename": "jmetalpy-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "efea6d1aa8482cd9c6661f8130233500", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58426, "upload_time": "2018-09-04T09:16:05", "upload_time_iso_8601": "2018-09-04T09:16:05.643917Z", "url": "https://files.pythonhosted.org/packages/b1/e9/1592e3947fff7b30ede1285ca9481c089fa2daf27cd4e3fffb724e163a9b/jmetalpy-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d8ca200b5a5d8ba4e142eaad44d42be", "sha256": "2d43e8732cf9930b21d33edf01100279a8b6658c767e1a37db24f98ef69d5cca"}, "downloads": -1, "filename": "jmetalpy-0.5.1.tar.gz", "has_sig": false, "md5_digest": "8d8ca200b5a5d8ba4e142eaad44d42be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36500, "upload_time": "2018-09-04T09:16:07", "upload_time_iso_8601": "2018-09-04T09:16:07.064712Z", "url": "https://files.pythonhosted.org/packages/16/5a/3ca8ed4af1595e188892851c5ada41334a53d24a1eb61aa8af2cbd71a223/jmetalpy-0.5.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "096df16f822ed3ecf2187538d516d5a9", "sha256": "8d2579fc0522c8469280fd9f6b6bd790ec6ac97799d5beb1e0b4ce531fc7b258"}, "downloads": -1, "filename": "jmetalpy-0.9.0-py3.6.egg", "has_sig": false, "md5_digest": "096df16f822ed3ecf2187538d516d5a9", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 389920, "upload_time": "2019-02-14T15:59:36", "upload_time_iso_8601": "2019-02-14T15:59:36.006783Z", "url": "https://files.pythonhosted.org/packages/fd/5e/90bcfaecdb651f8ca6c7e79c84d18abbc0178e510a1d96a9e0587962e01e/jmetalpy-0.9.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "50a03009b2e09c113c1ae60739916fdd", "sha256": "bf704a9b6e4227da18f92efa590f10529e8c505b603ddc5dc399fe66dd93ae5a"}, "downloads": -1, "filename": "jmetalpy-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50a03009b2e09c113c1ae60739916fdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 151439, "upload_time": "2019-02-14T15:59:34", "upload_time_iso_8601": "2019-02-14T15:59:34.093814Z", "url": "https://files.pythonhosted.org/packages/30/c7/b9f6e50106a946714c7cf6ceed4c16a61938712041838a5cfc2239eca364/jmetalpy-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcfc63acbd0e5af4ef65ede69724eba4", "sha256": "58c89205c5898e94829c862160f7d61a5587d243d61ab6f9dced672f0b534eca"}, "downloads": -1, "filename": "jmetalpy-0.9.0.tar.gz", "has_sig": false, "md5_digest": "fcfc63acbd0e5af4ef65ede69724eba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85900, "upload_time": "2019-02-14T15:59:37", "upload_time_iso_8601": "2019-02-14T15:59:37.680744Z", "url": "https://files.pythonhosted.org/packages/51/d8/7e53c5f9f5a0ea1467a6ffdf31ee88152ca27a2b54c4e48b9d63ebfe8c1e/jmetalpy-0.9.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "80349c44def4d6ea4a614991cbb4759b", "sha256": "312a99a5a9b2ca13959315066958482285136737e5e5d6e248e772c8a8a9ffe8"}, "downloads": -1, "filename": "jmetalpy-1.5.0-py3.7.egg", "has_sig": false, "md5_digest": "80349c44def4d6ea4a614991cbb4759b", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 469823, "upload_time": "2019-08-12T17:47:27", "upload_time_iso_8601": "2019-08-12T17:47:27.255181Z", "url": "https://files.pythonhosted.org/packages/c0/19/86afe722836f68dd1b3ddac506b629a9c4b28b7042f78f5a1d88f9be2c90/jmetalpy-1.5.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3a7625275e5a4bbaaad5cbe6cdfe31c", "sha256": "ffa55cd7556782fa6ab679299809db0861ece44ae212442649e75a6c72eb40a2"}, "downloads": -1, "filename": "jmetalpy-1.5.0.tar.gz", "has_sig": false, "md5_digest": "e3a7625275e5a4bbaaad5cbe6cdfe31c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100671, "upload_time": "2019-08-12T17:47:29", "upload_time_iso_8601": "2019-08-12T17:47:29.358863Z", "url": "https://files.pythonhosted.org/packages/92/2c/d662080f3e627235050ccb19ceaca13dfbf2793f9265626028bb9c5f9b72/jmetalpy-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "9f6c45b74c4b913dc06ff8e5f9f5ece8", "sha256": "0888cbbde1bdac802612db124298ffa7fb3b233c84e65da2f9ed7512487bf080"}, "downloads": -1, "filename": "jmetalpy-1.5.1.tar.gz", "has_sig": false, "md5_digest": "9f6c45b74c4b913dc06ff8e5f9f5ece8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102061, "upload_time": "2019-09-11T08:06:56", "upload_time_iso_8601": "2019-09-11T08:06:56.662782Z", "url": "https://files.pythonhosted.org/packages/7d/25/2aec1cabade47f409cb586e5618053cc3c356a1ae82082f69c47fe8b20db/jmetalpy-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "ce839aa8048e7371db3a03fbf88a94fc", "sha256": "6f424f2d14801e5f2d4081ebbbfa502e6efd3ed2032482c568ee7b9a8b654dd2"}, "downloads": -1, "filename": "jmetalpy-1.5.2.tar.gz", "has_sig": false, "md5_digest": "ce839aa8048e7371db3a03fbf88a94fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102251, "upload_time": "2019-12-13T22:50:34", "upload_time_iso_8601": "2019-12-13T22:50:34.604822Z", "url": "https://files.pythonhosted.org/packages/12/f2/257c06210e2466f0b63da3af3f9d9dc9a0137b310a947d8497e10952b547/jmetalpy-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "e20138113d718e3646a3587b64d2fca9", "sha256": "940d08b5842a4174dd6bb3b83e824c8e7575b0f32a8bdd473e8d2f7dafcdce23"}, "downloads": -1, "filename": "jmetalpy-1.5.3-py3.7.egg", "has_sig": false, "md5_digest": "e20138113d718e3646a3587b64d2fca9", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 476853, "upload_time": "2020-01-08T16:42:55", "upload_time_iso_8601": "2020-01-08T16:42:55.354924Z", "url": "https://files.pythonhosted.org/packages/4c/08/22ecf4418d5f6dca0de4efdaa7a46113fae7e91ff3bb9b8d85b8bb8db7a7/jmetalpy-1.5.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c711399988a31b3bfcab1ab343f8b9ce", "sha256": "5f03c55d84bb92e7fc15beaa3b7399c817f5fdd3e48730ab9a74d5bfa83a6afc"}, "downloads": -1, "filename": "jmetalpy-1.5.3.tar.gz", "has_sig": false, "md5_digest": "c711399988a31b3bfcab1ab343f8b9ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103005, "upload_time": "2020-01-08T16:42:57", "upload_time_iso_8601": "2020-01-08T16:42:57.586493Z", "url": "https://files.pythonhosted.org/packages/5a/28/fa789e4f40219cf5c4321c3fb5c5af10fb3f12faab08ad9caa9fbc263538/jmetalpy-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "3d215fe7f47248ad318de0cf37e29cf4", "sha256": "b7157ede9952c632eb5aedb484df3712ced828f9c8c4fe518f006ab153aae6f3"}, "downloads": -1, "filename": "jmetalpy-1.5.4.tar.gz", "has_sig": false, "md5_digest": "3d215fe7f47248ad318de0cf37e29cf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109319, "upload_time": "2020-02-17T16:17:14", "upload_time_iso_8601": "2020-02-17T16:17:14.352162Z", "url": "https://files.pythonhosted.org/packages/47/fd/542b172cede46c73b98fad7aa818d18b886cd2d2a2cd7aedb1c12be5cebd/jmetalpy-1.5.4.tar.gz", "yanked": false}], "1.5.5": [{"comment_text": "", "digests": {"md5": "082a11346a4df8a45809b450d27f230e", "sha256": "03910934cb72c2bab46446851b57b4c7656d61a3e8dbde792eaf486461db4a13"}, "downloads": -1, "filename": "jmetalpy-1.5.5.tar.gz", "has_sig": false, "md5_digest": "082a11346a4df8a45809b450d27f230e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110047, "upload_time": "2020-04-09T12:57:22", "upload_time_iso_8601": "2020-04-09T12:57:22.920045Z", "url": "https://files.pythonhosted.org/packages/5e/92/731b647afa389619c0e6ae340f196e14d75f7307b3e867e7db7f91c85d18/jmetalpy-1.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "082a11346a4df8a45809b450d27f230e", "sha256": "03910934cb72c2bab46446851b57b4c7656d61a3e8dbde792eaf486461db4a13"}, "downloads": -1, "filename": "jmetalpy-1.5.5.tar.gz", "has_sig": false, "md5_digest": "082a11346a4df8a45809b450d27f230e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110047, "upload_time": "2020-04-09T12:57:22", "upload_time_iso_8601": "2020-04-09T12:57:22.920045Z", "url": "https://files.pythonhosted.org/packages/5e/92/731b647afa389619c0e6ae340f196e14d75f7307b3e867e7db7f91c85d18/jmetalpy-1.5.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:22 2020"}