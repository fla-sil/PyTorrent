{"info": {"author": "Allen Institute for Artificial Intelligence", "author_email": "ai2-info@allenai.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "<p align=\"center\"><img width=\"50%\" src=\"docs/scispacy-logo.png\" /></p>\n\n\nThis repository contains custom pipes and models related to using spaCy for scientific documents.\n\nIn particular, there is a custom tokenizer that adds tokenization rules on top of spaCy's\nrule-based tokenizer, a POS tagger and syntactic parser trained on biomedical data and\nan entity span detection model. Separately, there are also NER models for more specific tasks.\n\n\n## Installation\nInstalling scispacy requires two steps: installing the library and intalling the models. To install the library, run:\n```bash\npip install scispacy\n```\n\nto install a model (see our full selection of available models below), run a command like the following:\n\n```bash\npip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.0/en_core_sci_sm-0.2.0.tar.gz\n```\n\nNote: We strongly recommend that you use an isolated Python environment (such as virtualenv or conda) to install scispacy.\nTake a look below in the \"Setting up a virtual environment\" section if you need some help with this.\nAdditionally, scispacy uses modern features of Python and as such is only available for **Python 3.6 or greater**.\n\n\n\n#### Setting up a virtual environment\n\n[Conda](https://conda.io/) can be used set up a virtual environment with the\nversion of Python required for scispaCy.  If you already have a Python 3.6 or 3.7\nenvironment you want to use, you can skip to the 'installing via pip' section.\n\n1.  [Follow the installation instructions for Conda](https://conda.io/projects/conda/en/latest/user-guide/install/index.html?highlight=conda#regular-installation).\n\n2.  Create a Conda environment called \"scispacy\" with Python 3.6:\n\n    ```bash\n    conda create -n scispacy python=3.6\n    ```\n\n3.  Activate the Conda environment. You will need to activate the Conda environment in each terminal in which you want to use scispaCy.\n\n    ```bash\n    source activate scispacy\n    ```\n\nNow you can install `scispacy` and one of the models using the steps above.\n\n\nOnce you have completed the above steps and downloaded one of the models below, you can load a scispaCy model as you would any other spaCy model. For example:\n```python\nimport spacy\nnlp = spacy.load(\"en_core_sci_sm\")\ndoc = nlp(\"Alterations in the hypocretin receptor 2 and preprohypocretin genes produce narcolepsy in some animals.\")\n```\n\n#### Note on upgrading\nIf you are upgrading `scispacy`, you will need to download the models again, to get the model versions compatible with the version of `scispacy` that you have. The link to the model that you download should contain the version number of `scispacy` that you have.\n\n## Available Models\n\nTo install a model, click on the link below to download the model, and then run \n\n```python\npip install </path/to/download>\n```\n\nAlternatively, you can install directly from the URL by right-clicking on the link, selecting \"Copy Link Address\" and running \n```python\npip install CMD-V(to paste the copied URL)\n```\n\n| Model          | Description       | Install URL\n|:---------------|:------------------|:----------|\n| en_core_sci_sm | A full spaCy pipeline for biomedical data with a ~100k vocabulary. |[Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_core_sci_sm-0.2.3.tar.gz)|\n| en_core_sci_md |  A full spaCy pipeline for biomedical data with a ~360k vocabulary and 50k word vectors. |[Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_core_sci_md-0.2.3.tar.gz)|\n| en_core_sci_lg |  A full spaCy pipeline for biomedical data with a ~785k vocabulary and 600k word vectors. |[Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_core_sci_lg-0.2.3.tar.gz)|\n| en_ner_craft_md|  A spaCy NER model trained on the CRAFT corpus.|[Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_craft_md-0.2.3.tar.gz)|\n| en_ner_jnlpba_md | A spaCy NER model trained on the JNLPBA corpus.| [Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_jnlpba_md-0.2.3.tar.gz)|\n| en_ner_bc5cdr_md |  A spaCy NER model trained on the BC5CDR corpus. | [Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_bc5cdr_md-0.2.3.tar.gz)|\n| en_ner_bionlp13cg_md |  A spaCy NER model trained on the BIONLP13CG corpus. |[Download](https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_bionlp13cg_md-0.2.3.tar.gz)|\n\n\n## Additional Pipeline Components\n\n\n### AbbreviationDetector\nThe AbbreviationDetector is a Spacy component which implements the abbreviation detection algorithm in \"A simple algorithm\n    for identifying abbreviation definitions in biomedical text.\", (Schwartz & Hearst, 2003).\n\nYou can access the list of abbreviations via the `doc._.abbreviations` attribute and for a given abbreviation,\nyou can access it's long form (which is a `spacy.tokens.Span`) using `span._.long_form`, which will point to\nanother span in the document.\n\n\n#### Example Usage\n\n```python\nimport spacy\n\nfrom scispacy.abbreviation import AbbreviationDetector\n\nnlp = spacy.load(\"en_core_sci_sm\")\n\n# Add the abbreviation pipe to the spacy pipeline.\nabbreviation_pipe = AbbreviationDetector(nlp)\nnlp.add_pipe(abbreviation_pipe)\n\ndoc = nlp(\"Spinal and bulbar muscular atrophy (SBMA) is an \\\n           inherited motor neuron disease caused by the expansion \\\n           of a polyglutamine tract within the androgen receptor (AR). \\\n           SBMA can be caused by this easily.\")\n\nprint(\"Abbreviation\", \"\\t\", \"Definition\")\nfor abrv in doc._.abbreviations:\n\tprint(f\"{abrv} \\t ({abrv.start}, {abrv.end}) {abrv._.long_form}\")\n\n>>> Abbreviation\t Span\t    Definition\n>>> SBMA \t\t (33, 34)   Spinal and bulbar muscular atrophy\n>>> SBMA \t   \t (6, 7)     Spinal and bulbar muscular atrophy\n>>> AR   \t\t (29, 30)   androgen receptor\n```\n### UmlsEntityLinker (Alpha feature)\n\nThe `UmlsEntityLinker` is a SpaCy component which performs linking to the Unified Medical Language System.\nNote that this is currently an alpha feature. The linker simply performs a string overlap search on named entities,\ncomparing them with a knowledge base of 2.7 million concepts using an approximate nearest neighbours search.\n\n\nBecause this component is a little rough around the edges, you may want to play around with some of the parameters\nbelow to adapt to your use case (higher precision, higher recall etc).\n\n- `resolve_abbreviations : bool = True, optional (default = False)`\n    Whether to resolve abbreviations identified in the Doc before performing linking.\n    This parameter has no effect if there is no `AbbreviationDetector` in the spacy\n    pipeline.\n- `k : int, optional, (default = 30)`\n    The number of nearest neighbours to look up from the candidate generator per mention.\n- `threshold : float, optional, (default = 0.7)`\n    The threshold that a mention candidate must reach to be added to the mention in the Doc\n    as a mention candidate.\n-   `no_definition_threshold : float, optional, (default = 0.95)`\n        The threshold that a entity candidate must reach to be added to the mention in the Doc\n        as a mention candidate if the entity candidate does not have a definition.\n- `filter_for_definitions: bool, default = True`\n    Whether to filter entities that can be returned to only include those with definitions\n    in the knowledge base.\n- `max_entities_per_mention : int, optional, default = 5`\n    The maximum number of entities which will be returned for a given mention, regardless of\n    how many are nearest neighbours are found.\n\nThis class sets the `._.umls_ents` attribute on spacy Spans, which consists of a\nList[Tuple[str, float]] corresponding to the UMLS concept_id and the associated score\nfor a list of `max_entities_per_mention` number of entities.\n\nYou can look up more information for a given id using the umls attribute of this class:\n```\nprint(linker.umls.cui_to_entity[concept_id])\n```\n\n#### Example Usage\n```python\nimport spacy\nimport scispacy\n\nfrom scispacy.umls_linking import UmlsEntityLinker\n\nnlp = spacy.load(\"en_core_sci_sm\")\n\n# This line takes a while, because we have to download ~1GB of data\n# and load a large JSON file (the knowledge base). Be patient!\n# Thankfully it should be faster after the first time you use it, because\n# the downloads are cached.\n# NOTE: The resolve_abbreviations parameter is optional, and requires that\n# the AbbreviationDetector pipe has already been added to the pipeline. Adding\n# the AbbreviationDetector pipe and setting resolve_abbreviations to True means\n# that linking will only be performed on the long form of abbreviations.\nlinker = UmlsEntityLinker(resolve_abbreviations=True)\n\nnlp.add_pipe(linker)\n\ndoc = nlp(\"Spinal and bulbar muscular atrophy (SBMA) is an \\\n           inherited motor neuron disease caused by the expansion \\\n           of a polyglutamine tract within the androgen receptor (AR). \\\n           SBMA can be caused by this easily.\")\n\n# Let's look at a random entity!\nentity = doc.ents[1]\n\nprint(\"Name: \", entity)\n>>> Name: bulbar muscular atrophy\n\n# Each entity is linked to UMLS with a score\n# (currently just char-3gram matching).\nfor umls_ent in entity._.umls_ents:\n\tprint(linker.umls.cui_to_entity[umls_ent[0]])\n\t\n\n>>> CUI: C1839259, Name: Bulbo-Spinal Atrophy, X-Linked\n>>> Definition: An X-linked recessive form of spinal muscular atrophy. It is due to a mutation of the \n  \t\t\t\tgene encoding the ANDROGEN RECEPTOR.\n>>> TUI(s): T047\n>>> Aliases (abbreviated, total: 50):\n         Bulbo-Spinal Atrophy, X-Linked, Bulbo-Spinal Atrophy, X-Linked, ....\n    \n>>> CUI: C0541794, Name: Skeletal muscle atrophy\n>>> Definition: A process, occurring in skeletal muscle, that is characterized by a decrease in protein content,\n                fiber diameter, force production and fatigue resistance in response to ...\n>>> TUI(s): T046\n>>> Aliases: (total: 9):\n         Skeletal muscle atrophy, ATROPHY SKELETAL MUSCLE, skeletal muscle atrophy, ....\n\n>>> CUI: C1447749, Name: AR protein, human\n>>> Definition: Androgen receptor (919 aa, ~99 kDa) is encoded by the human AR gene.\n                This protein plays a role in the modulation of steroid-dependent gene transcription.\n>>> TUI(s): T116, T192\n>>> Aliases (abbreviated, total: 16):\n         AR protein, human, Androgen Receptor, Dihydrotestosterone Receptor, AR, DHTR, NR3C4, ...\n```\n\n\n\n## Citing\n\nIf you use ScispaCy in your research, please cite [ScispaCy: Fast and Robust Models for Biomedical Natural Language Processing](https://www.semanticscholar.org/paper/ScispaCy%3A-Fast-and-Robust-Models-for-Biomedical-Neumann-King/de28ec1d7bd38c8fc4e8ac59b6133800818b4e29). Additionally, please indicate which version and model of ScispaCy you used so that your research can be reproduced.\n```\n@inproceedings{Neumann2019ScispaCyFA,\n  title={ScispaCy: Fast and Robust Models for Biomedical Natural Language Processing},\n  author={Mark Neumann and Daniel King and Iz Beltagy and Waleed Ammar},\n  year={2019},\n  Eprint={arXiv:1902.07669}\n}\n```\n\nScispaCy is an open-source project developed by [the Allen Institute for Artificial Intelligence (AI2)](http://www.allenai.org).\nAI2 is a non-profit institute with the mission to contribute to humanity through high-impact AI research and engineering.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://allenai.github.io/SciSpaCy/", "keywords": "bioinformatics nlp spacy SpaCy biomedical", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "scispacy", "package_url": "https://pypi.org/project/scispacy/", "platform": "", "project_url": "https://pypi.org/project/scispacy/", "project_urls": {"Homepage": "https://allenai.github.io/SciSpaCy/"}, "release_url": "https://pypi.org/project/scispacy/0.2.4/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "A full SpaCy pipeline and models for scientific/biomedical documents.", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84a3cf0f5e9096f3ae24a14eae9fd89c2a5adbb1/646f63732f73636973706163792d6c6f676f2e706e67\" width=\"50%\"></p>\n<p>This repository contains custom pipes and models related to using spaCy for scientific documents.</p>\n<p>In particular, there is a custom tokenizer that adds tokenization rules on top of spaCy's\nrule-based tokenizer, a POS tagger and syntactic parser trained on biomedical data and\nan entity span detection model. Separately, there are also NER models for more specific tasks.</p>\n<h2>Installation</h2>\n<p>Installing scispacy requires two steps: installing the library and intalling the models. To install the library, run:</p>\n<pre>pip install scispacy\n</pre>\n<p>to install a model (see our full selection of available models below), run a command like the following:</p>\n<pre>pip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.0/en_core_sci_sm-0.2.0.tar.gz\n</pre>\n<p>Note: We strongly recommend that you use an isolated Python environment (such as virtualenv or conda) to install scispacy.\nTake a look below in the \"Setting up a virtual environment\" section if you need some help with this.\nAdditionally, scispacy uses modern features of Python and as such is only available for <strong>Python 3.6 or greater</strong>.</p>\n<h4>Setting up a virtual environment</h4>\n<p><a href=\"https://conda.io/\" rel=\"nofollow\">Conda</a> can be used set up a virtual environment with the\nversion of Python required for scispaCy.  If you already have a Python 3.6 or 3.7\nenvironment you want to use, you can skip to the 'installing via pip' section.</p>\n<ol>\n<li>\n<p><a href=\"https://conda.io/projects/conda/en/latest/user-guide/install/index.html?highlight=conda#regular-installation\" rel=\"nofollow\">Follow the installation instructions for Conda</a>.</p>\n</li>\n<li>\n<p>Create a Conda environment called \"scispacy\" with Python 3.6:</p>\n<pre>conda create -n scispacy <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.6\n</pre>\n</li>\n<li>\n<p>Activate the Conda environment. You will need to activate the Conda environment in each terminal in which you want to use scispaCy.</p>\n<pre><span class=\"nb\">source</span> activate scispacy\n</pre>\n</li>\n</ol>\n<p>Now you can install <code>scispacy</code> and one of the models using the steps above.</p>\n<p>Once you have completed the above steps and downloaded one of the models below, you can load a scispaCy model as you would any other spaCy model. For example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">spacy</span>\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">spacy</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"en_core_sci_sm\"</span><span class=\"p\">)</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"s2\">\"Alterations in the hypocretin receptor 2 and preprohypocretin genes produce narcolepsy in some animals.\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Note on upgrading</h4>\n<p>If you are upgrading <code>scispacy</code>, you will need to download the models again, to get the model versions compatible with the version of <code>scispacy</code> that you have. The link to the model that you download should contain the version number of <code>scispacy</code> that you have.</p>\n<h2>Available Models</h2>\n<p>To install a model, click on the link below to download the model, and then run</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">&lt;/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">download</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Alternatively, you can install directly from the URL by right-clicking on the link, selecting \"Copy Link Address\" and running</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">CMD</span><span class=\"o\">-</span><span class=\"n\">V</span><span class=\"p\">(</span><span class=\"n\">to</span> <span class=\"n\">paste</span> <span class=\"n\">the</span> <span class=\"n\">copied</span> <span class=\"n\">URL</span><span class=\"p\">)</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Model</th>\n<th align=\"left\">Description</th>\n<th align=\"left\">Install URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">en_core_sci_sm</td>\n<td align=\"left\">A full spaCy pipeline for biomedical data with a ~100k vocabulary.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_core_sci_sm-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr>\n<tr>\n<td align=\"left\">en_core_sci_md</td>\n<td align=\"left\">A full spaCy pipeline for biomedical data with a ~360k vocabulary and 50k word vectors.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_core_sci_md-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr>\n<tr>\n<td align=\"left\">en_core_sci_lg</td>\n<td align=\"left\">A full spaCy pipeline for biomedical data with a ~785k vocabulary and 600k word vectors.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_core_sci_lg-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr>\n<tr>\n<td align=\"left\">en_ner_craft_md</td>\n<td align=\"left\">A spaCy NER model trained on the CRAFT corpus.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_craft_md-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr>\n<tr>\n<td align=\"left\">en_ner_jnlpba_md</td>\n<td align=\"left\">A spaCy NER model trained on the JNLPBA corpus.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_jnlpba_md-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr>\n<tr>\n<td align=\"left\">en_ner_bc5cdr_md</td>\n<td align=\"left\">A spaCy NER model trained on the BC5CDR corpus.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_bc5cdr_md-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr>\n<tr>\n<td align=\"left\">en_ner_bionlp13cg_md</td>\n<td align=\"left\">A spaCy NER model trained on the BIONLP13CG corpus.</td>\n<td align=\"left\"><a href=\"https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.3/en_ner_bionlp13cg_md-0.2.3.tar.gz\" rel=\"nofollow\">Download</a></td>\n</tr></tbody></table>\n<h2>Additional Pipeline Components</h2>\n<h3>AbbreviationDetector</h3>\n<p>The AbbreviationDetector is a Spacy component which implements the abbreviation detection algorithm in \"A simple algorithm\nfor identifying abbreviation definitions in biomedical text.\", (Schwartz &amp; Hearst, 2003).</p>\n<p>You can access the list of abbreviations via the <code>doc._.abbreviations</code> attribute and for a given abbreviation,\nyou can access it's long form (which is a <code>spacy.tokens.Span</code>) using <code>span._.long_form</code>, which will point to\nanother span in the document.</p>\n<h4>Example Usage</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">spacy</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">scispacy.abbreviation</span> <span class=\"kn\">import</span> <span class=\"n\">AbbreviationDetector</span>\n\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">spacy</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"en_core_sci_sm\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add the abbreviation pipe to the spacy pipeline.</span>\n<span class=\"n\">abbreviation_pipe</span> <span class=\"o\">=</span> <span class=\"n\">AbbreviationDetector</span><span class=\"p\">(</span><span class=\"n\">nlp</span><span class=\"p\">)</span>\n<span class=\"n\">nlp</span><span class=\"o\">.</span><span class=\"n\">add_pipe</span><span class=\"p\">(</span><span class=\"n\">abbreviation_pipe</span><span class=\"p\">)</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"s2\">\"Spinal and bulbar muscular atrophy (SBMA) is an </span><span class=\"se\">\\</span>\n<span class=\"s2\">           inherited motor neuron disease caused by the expansion </span><span class=\"se\">\\</span>\n<span class=\"s2\">           of a polyglutamine tract within the androgen receptor (AR). </span><span class=\"se\">\\</span>\n<span class=\"s2\">           SBMA can be caused by this easily.\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Abbreviation\"</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Definition\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">abrv</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">abbreviations</span><span class=\"p\">:</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">abrv</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"se\">\\t</span><span class=\"s2\"> (</span><span class=\"si\">{</span><span class=\"n\">abrv</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">abrv</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"si\">}</span><span class=\"s2\">) </span><span class=\"si\">{</span><span class=\"n\">abrv</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">long_form</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Abbreviation</span>\t <span class=\"n\">Span</span>\t    <span class=\"n\">Definition</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SBMA</span> \t\t <span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">)</span>   <span class=\"n\">Spinal</span> <span class=\"ow\">and</span> <span class=\"n\">bulbar</span> <span class=\"n\">muscular</span> <span class=\"n\">atrophy</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SBMA</span> \t   \t <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>     <span class=\"n\">Spinal</span> <span class=\"ow\">and</span> <span class=\"n\">bulbar</span> <span class=\"n\">muscular</span> <span class=\"n\">atrophy</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">AR</span>   \t\t <span class=\"p\">(</span><span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>   <span class=\"n\">androgen</span> <span class=\"n\">receptor</span>\n</pre>\n<h3>UmlsEntityLinker (Alpha feature)</h3>\n<p>The <code>UmlsEntityLinker</code> is a SpaCy component which performs linking to the Unified Medical Language System.\nNote that this is currently an alpha feature. The linker simply performs a string overlap search on named entities,\ncomparing them with a knowledge base of 2.7 million concepts using an approximate nearest neighbours search.</p>\n<p>Because this component is a little rough around the edges, you may want to play around with some of the parameters\nbelow to adapt to your use case (higher precision, higher recall etc).</p>\n<ul>\n<li><code>resolve_abbreviations : bool = True, optional (default = False)</code>\nWhether to resolve abbreviations identified in the Doc before performing linking.\nThis parameter has no effect if there is no <code>AbbreviationDetector</code> in the spacy\npipeline.</li>\n<li><code>k : int, optional, (default = 30)</code>\nThe number of nearest neighbours to look up from the candidate generator per mention.</li>\n<li><code>threshold : float, optional, (default = 0.7)</code>\nThe threshold that a mention candidate must reach to be added to the mention in the Doc\nas a mention candidate.</li>\n<li><code>no_definition_threshold : float, optional, (default = 0.95)</code>\nThe threshold that a entity candidate must reach to be added to the mention in the Doc\nas a mention candidate if the entity candidate does not have a definition.</li>\n<li><code>filter_for_definitions: bool, default = True</code>\nWhether to filter entities that can be returned to only include those with definitions\nin the knowledge base.</li>\n<li><code>max_entities_per_mention : int, optional, default = 5</code>\nThe maximum number of entities which will be returned for a given mention, regardless of\nhow many are nearest neighbours are found.</li>\n</ul>\n<p>This class sets the <code>._.umls_ents</code> attribute on spacy Spans, which consists of a\nList[Tuple[str, float]] corresponding to the UMLS concept_id and the associated score\nfor a list of <code>max_entities_per_mention</code> number of entities.</p>\n<p>You can look up more information for a given id using the umls attribute of this class:</p>\n<pre><code>print(linker.umls.cui_to_entity[concept_id])\n</code></pre>\n<h4>Example Usage</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">spacy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">scispacy</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">scispacy.umls_linking</span> <span class=\"kn\">import</span> <span class=\"n\">UmlsEntityLinker</span>\n\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">spacy</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"en_core_sci_sm\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This line takes a while, because we have to download ~1GB of data</span>\n<span class=\"c1\"># and load a large JSON file (the knowledge base). Be patient!</span>\n<span class=\"c1\"># Thankfully it should be faster after the first time you use it, because</span>\n<span class=\"c1\"># the downloads are cached.</span>\n<span class=\"c1\"># NOTE: The resolve_abbreviations parameter is optional, and requires that</span>\n<span class=\"c1\"># the AbbreviationDetector pipe has already been added to the pipeline. Adding</span>\n<span class=\"c1\"># the AbbreviationDetector pipe and setting resolve_abbreviations to True means</span>\n<span class=\"c1\"># that linking will only be performed on the long form of abbreviations.</span>\n<span class=\"n\">linker</span> <span class=\"o\">=</span> <span class=\"n\">UmlsEntityLinker</span><span class=\"p\">(</span><span class=\"n\">resolve_abbreviations</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">nlp</span><span class=\"o\">.</span><span class=\"n\">add_pipe</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">)</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"s2\">\"Spinal and bulbar muscular atrophy (SBMA) is an </span><span class=\"se\">\\</span>\n<span class=\"s2\">           inherited motor neuron disease caused by the expansion </span><span class=\"se\">\\</span>\n<span class=\"s2\">           of a polyglutamine tract within the androgen receptor (AR). </span><span class=\"se\">\\</span>\n<span class=\"s2\">           SBMA can be caused by this easily.\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Let's look at a random entity!</span>\n<span class=\"n\">entity</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">ents</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Name: \"</span><span class=\"p\">,</span> <span class=\"n\">entity</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">bulbar</span> <span class=\"n\">muscular</span> <span class=\"n\">atrophy</span>\n\n<span class=\"c1\"># Each entity is linked to UMLS with a score</span>\n<span class=\"c1\"># (currently just char-3gram matching).</span>\n<span class=\"k\">for</span> <span class=\"n\">umls_ent</span> <span class=\"ow\">in</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">umls_ents</span><span class=\"p\">:</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"o\">.</span><span class=\"n\">umls</span><span class=\"o\">.</span><span class=\"n\">cui_to_entity</span><span class=\"p\">[</span><span class=\"n\">umls_ent</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n\t\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">CUI</span><span class=\"p\">:</span> <span class=\"n\">C1839259</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">Bulbo</span><span class=\"o\">-</span><span class=\"n\">Spinal</span> <span class=\"n\">Atrophy</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">Linked</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Definition</span><span class=\"p\">:</span> <span class=\"n\">An</span> <span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">linked</span> <span class=\"n\">recessive</span> <span class=\"n\">form</span> <span class=\"n\">of</span> <span class=\"n\">spinal</span> <span class=\"n\">muscular</span> <span class=\"n\">atrophy</span><span class=\"o\">.</span> <span class=\"n\">It</span> <span class=\"ow\">is</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">mutation</span> <span class=\"n\">of</span> <span class=\"n\">the</span> \n  \t\t\t\t<span class=\"n\">gene</span> <span class=\"n\">encoding</span> <span class=\"n\">the</span> <span class=\"n\">ANDROGEN</span> <span class=\"n\">RECEPTOR</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">TUI</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span> <span class=\"n\">T047</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Aliases</span> <span class=\"p\">(</span><span class=\"n\">abbreviated</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">):</span>\n         <span class=\"n\">Bulbo</span><span class=\"o\">-</span><span class=\"n\">Spinal</span> <span class=\"n\">Atrophy</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">Linked</span><span class=\"p\">,</span> <span class=\"n\">Bulbo</span><span class=\"o\">-</span><span class=\"n\">Spinal</span> <span class=\"n\">Atrophy</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">Linked</span><span class=\"p\">,</span> <span class=\"o\">....</span>\n    \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">CUI</span><span class=\"p\">:</span> <span class=\"n\">C0541794</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">Skeletal</span> <span class=\"n\">muscle</span> <span class=\"n\">atrophy</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Definition</span><span class=\"p\">:</span> <span class=\"n\">A</span> <span class=\"n\">process</span><span class=\"p\">,</span> <span class=\"n\">occurring</span> <span class=\"ow\">in</span> <span class=\"n\">skeletal</span> <span class=\"n\">muscle</span><span class=\"p\">,</span> <span class=\"n\">that</span> <span class=\"ow\">is</span> <span class=\"n\">characterized</span> <span class=\"n\">by</span> <span class=\"n\">a</span> <span class=\"n\">decrease</span> <span class=\"ow\">in</span> <span class=\"n\">protein</span> <span class=\"n\">content</span><span class=\"p\">,</span>\n                <span class=\"n\">fiber</span> <span class=\"n\">diameter</span><span class=\"p\">,</span> <span class=\"n\">force</span> <span class=\"n\">production</span> <span class=\"ow\">and</span> <span class=\"n\">fatigue</span> <span class=\"n\">resistance</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"n\">to</span> <span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">TUI</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span> <span class=\"n\">T046</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Aliases</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">):</span>\n         <span class=\"n\">Skeletal</span> <span class=\"n\">muscle</span> <span class=\"n\">atrophy</span><span class=\"p\">,</span> <span class=\"n\">ATROPHY</span> <span class=\"n\">SKELETAL</span> <span class=\"n\">MUSCLE</span><span class=\"p\">,</span> <span class=\"n\">skeletal</span> <span class=\"n\">muscle</span> <span class=\"n\">atrophy</span><span class=\"p\">,</span> <span class=\"o\">....</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">CUI</span><span class=\"p\">:</span> <span class=\"n\">C1447749</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">AR</span> <span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"n\">human</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Definition</span><span class=\"p\">:</span> <span class=\"n\">Androgen</span> <span class=\"n\">receptor</span> <span class=\"p\">(</span><span class=\"mi\">919</span> <span class=\"n\">aa</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"mi\">99</span> <span class=\"n\">kDa</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"n\">encoded</span> <span class=\"n\">by</span> <span class=\"n\">the</span> <span class=\"n\">human</span> <span class=\"n\">AR</span> <span class=\"n\">gene</span><span class=\"o\">.</span>\n                <span class=\"n\">This</span> <span class=\"n\">protein</span> <span class=\"n\">plays</span> <span class=\"n\">a</span> <span class=\"n\">role</span> <span class=\"ow\">in</span> <span class=\"n\">the</span> <span class=\"n\">modulation</span> <span class=\"n\">of</span> <span class=\"n\">steroid</span><span class=\"o\">-</span><span class=\"n\">dependent</span> <span class=\"n\">gene</span> <span class=\"n\">transcription</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">TUI</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span> <span class=\"n\">T116</span><span class=\"p\">,</span> <span class=\"n\">T192</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Aliases</span> <span class=\"p\">(</span><span class=\"n\">abbreviated</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"p\">:</span> <span class=\"mi\">16</span><span class=\"p\">):</span>\n         <span class=\"n\">AR</span> <span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"n\">human</span><span class=\"p\">,</span> <span class=\"n\">Androgen</span> <span class=\"n\">Receptor</span><span class=\"p\">,</span> <span class=\"n\">Dihydrotestosterone</span> <span class=\"n\">Receptor</span><span class=\"p\">,</span> <span class=\"n\">AR</span><span class=\"p\">,</span> <span class=\"n\">DHTR</span><span class=\"p\">,</span> <span class=\"n\">NR3C4</span><span class=\"p\">,</span> <span class=\"o\">...</span>\n</pre>\n<h2>Citing</h2>\n<p>If you use ScispaCy in your research, please cite <a href=\"https://www.semanticscholar.org/paper/ScispaCy%3A-Fast-and-Robust-Models-for-Biomedical-Neumann-King/de28ec1d7bd38c8fc4e8ac59b6133800818b4e29\" rel=\"nofollow\">ScispaCy: Fast and Robust Models for Biomedical Natural Language Processing</a>. Additionally, please indicate which version and model of ScispaCy you used so that your research can be reproduced.</p>\n<pre><code>@inproceedings{Neumann2019ScispaCyFA,\n  title={ScispaCy: Fast and Robust Models for Biomedical Natural Language Processing},\n  author={Mark Neumann and Daniel King and Iz Beltagy and Waleed Ammar},\n  year={2019},\n  Eprint={arXiv:1902.07669}\n}\n</code></pre>\n<p>ScispaCy is an open-source project developed by <a href=\"http://www.allenai.org\" rel=\"nofollow\">the Allen Institute for Artificial Intelligence (AI2)</a>.\nAI2 is a non-profit institute with the mission to contribute to humanity through high-impact AI research and engineering.</p>\n\n          </div>"}, "last_serial": 6014984, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "7ec58a0cd9397596fa4fe6fcadb9daa6", "sha256": "69d0d29dc30de8c4d84808c54e4f487e4e250fdfbd9ae78e940baecec8ab5cd0"}, "downloads": -1, "filename": "scispacy-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7ec58a0cd9397596fa4fe6fcadb9daa6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 32167, "upload_time": "2019-01-28T23:28:05", "upload_time_iso_8601": "2019-01-28T23:28:05.820100Z", "url": "https://files.pythonhosted.org/packages/a5/a2/1c6a8a1c13d033983e0ab07fde2becb17aea127a1db17f54ff9b9cefb001/scispacy-0.0.0.tar.gz", "yanked": false}], "0.0.0.post0": [{"comment_text": "", "digests": {"md5": "1ee0a795abce1a308be92e746dd580be", "sha256": "ff552e7ad09f4cb21c01cd411dc74d2d08f76d527707554994cc0934024bac67"}, "downloads": -1, "filename": "scispacy-0.0.0.post0.tar.gz", "has_sig": false, "md5_digest": "1ee0a795abce1a308be92e746dd580be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 33158, "upload_time": "2019-01-28T23:36:48", "upload_time_iso_8601": "2019-01-28T23:36:48.304779Z", "url": "https://files.pythonhosted.org/packages/10/a7/eb006140811df1dc93327239076296d2b904df66f875ed0a489a2dc1645b/scispacy-0.0.0.post0.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "eaf55f9fa15817da51258362dfcb92bb", "sha256": "62ea4c89184519a90f9ad644df9fe4a8cfed7a44e826abfad74ba63e5371180d"}, "downloads": -1, "filename": "scispacy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eaf55f9fa15817da51258362dfcb92bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 19706, "upload_time": "2019-02-20T00:10:49", "upload_time_iso_8601": "2019-02-20T00:10:49.594605Z", "url": "https://files.pythonhosted.org/packages/b2/68/33d18f448dfddda2392ffd9f4ef349c3627a9bf91806f55e1bf91ed64e75/scispacy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd883fa1a6bff91d354e07ad2c104946", "sha256": "69cf0ec7c35aa8ab9d29e1b1dd1c3d4b428b4eb01a827fe91d58093ffba3e344"}, "downloads": -1, "filename": "scispacy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fd883fa1a6bff91d354e07ad2c104946", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 20701, "upload_time": "2019-02-20T00:10:15", "upload_time_iso_8601": "2019-02-20T00:10:15.235205Z", "url": "https://files.pythonhosted.org/packages/ec/0b/dc2907f6aa866d1392acb519874b41870715c134a8ad426d3325368c32df/scispacy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c5dd24ab24f580499efb86a9bd608457", "sha256": "27e474bbbae8f708c9e38969b268b18924ff04d2e1be658cb7242de52e2410a9"}, "downloads": -1, "filename": "scispacy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c5dd24ab24f580499efb86a9bd608457", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 24132, "upload_time": "2019-04-03T22:18:41", "upload_time_iso_8601": "2019-04-03T22:18:41.916904Z", "url": "https://files.pythonhosted.org/packages/c1/6b/d283efee8bd39a154db75c802e44c933bf1c327dad0641a60e33a701849a/scispacy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "556bd5e69e2efcd6a7f645177817defc", "sha256": "99d9271485b5353b9ba30c54b0d91ac48d3282ba239eed3c24173bfd50df323c"}, "downloads": -1, "filename": "scispacy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "556bd5e69e2efcd6a7f645177817defc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 24186, "upload_time": "2019-04-03T22:23:10", "upload_time_iso_8601": "2019-04-03T22:23:10.051987Z", "url": "https://files.pythonhosted.org/packages/59/da/857d98f05053095ab53bd14a547e17e1380a3241d971e8ead6b83c16efeb/scispacy-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f51b81be116b164f3b98531c8a802c94", "sha256": "c704c09cf28898c516900f11f3df5813819c7a53eb2f9807d6d0a657422f8ca7"}, "downloads": -1, "filename": "scispacy-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f51b81be116b164f3b98531c8a802c94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 33143, "upload_time": "2019-06-03T23:20:47", "upload_time_iso_8601": "2019-06-03T23:20:47.984672Z", "url": "https://files.pythonhosted.org/packages/72/55/30b30a78abafaaf34d0d8368a090cf713964d6c97c5e912fb2016efadab0/scispacy-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e88977e1d7b2fc92fd40f2b49b319d73", "sha256": "be1826b4fe0f15cb5bf4afedd7d90a5304ec10a49fa003f0c5bc92a753d988bb"}, "downloads": -1, "filename": "scispacy-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e88977e1d7b2fc92fd40f2b49b319d73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 32768, "upload_time": "2019-06-03T23:20:49", "upload_time_iso_8601": "2019-06-03T23:20:49.304918Z", "url": "https://files.pythonhosted.org/packages/1c/67/035996f6bb71ec2c8ff9a1ff777e8ade7e84a2ff0af48b2f156f71fa2e2c/scispacy-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "fa6ab53a2390236efbbfdf086aca9fa1", "sha256": "4ca244c083d1edbcc3e436a32922b575086b9e128b96499d9839f09cbc280cda"}, "downloads": -1, "filename": "scispacy-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fa6ab53a2390236efbbfdf086aca9fa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 35672, "upload_time": "2019-08-22T21:55:44", "upload_time_iso_8601": "2019-08-22T21:55:44.011674Z", "url": "https://files.pythonhosted.org/packages/5e/83/1b0b2d639c6736acedb738e393ad4566302a88a39b44e792fd98a0137c61/scispacy-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cd931c2444dcac2bee8339b621d7887", "sha256": "0c4471beb124674670aa52433edffe0079b04477f75c3ee3329b6511aabff35f"}, "downloads": -1, "filename": "scispacy-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0cd931c2444dcac2bee8339b621d7887", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 47634, "upload_time": "2019-08-22T21:55:45", "upload_time_iso_8601": "2019-08-22T21:55:45.810598Z", "url": "https://files.pythonhosted.org/packages/12/60/2552e02b0ba18d93763f1adeeca856d8b9f48e435466b10e32ff86024e2f/scispacy-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "d94615f61e0b547cf4f45e98092b7676", "sha256": "35328589d733de90be2f41106e84c76d329c2b310b0fa09d8ac8f1d31fd646ca"}, "downloads": -1, "filename": "scispacy-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d94615f61e0b547cf4f45e98092b7676", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 38472, "upload_time": "2019-10-22T20:11:00", "upload_time_iso_8601": "2019-10-22T20:11:00.927074Z", "url": "https://files.pythonhosted.org/packages/eb/50/95cd574c3ccf4a268b334ea3c4c3cf9f95d1f24d6c0be82024d51c3e460b/scispacy-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d94615f61e0b547cf4f45e98092b7676", "sha256": "35328589d733de90be2f41106e84c76d329c2b310b0fa09d8ac8f1d31fd646ca"}, "downloads": -1, "filename": "scispacy-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d94615f61e0b547cf4f45e98092b7676", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 38472, "upload_time": "2019-10-22T20:11:00", "upload_time_iso_8601": "2019-10-22T20:11:00.927074Z", "url": "https://files.pythonhosted.org/packages/eb/50/95cd574c3ccf4a268b334ea3c4c3cf9f95d1f24d6c0be82024d51c3e460b/scispacy-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:13 2020"}