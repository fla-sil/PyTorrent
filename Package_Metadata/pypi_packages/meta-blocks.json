{"info": {"author": "Maruan Al-Shedivat", "author_email": "alshedivat@cs.cmu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<p align=\"center\"><img src=\"https://github.com/alshedivat/meta-blocks/blob/master/docs/figs/meta-blocks-2d.png?raw=true\" alt=\"logo\" width=\"400px\" /></p>\n\n<h3 align=\"center\">A Modular Toolbox for Accelerating Meta-Learning Research :rocket:</h3>\n\n----\n\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/meta-blocks)](https://pypi.org/project/meta-blocks/)\n[![PyPI Status Badge](https://badge.fury.io/py/meta-blocks.svg)](https://pypi.org/project/meta-blocks/)\n[![Build Status](https://travis-ci.org/alshedivat/meta-blocks.svg)](https://travis-ci.org/alshedivat/meta-blocks)\n[![Documentation Status](https://readthedocs.org/projects/meta-blocks/badge/?version=latest)](https://meta-blocks.readthedocs.io/en/latest/?badge=latest)\n[![Coverage Status](https://coveralls.io/repos/github/alshedivat/meta-blocks/badge.svg?branch=master)](https://coveralls.io/github/alshedivat/meta-blocks?branch=master)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n**Meta-Blocks** is a modular toolbox for research, experimentation, and reproducible benchmarking of learning-to-learn algorithms.\nThe toolbox provides flexible APIs for working with `MetaDatasets`, `TaskDistributions`, and `MetaLearners` (see the figure below).\nThe APIs make it easy to implement a variety of meta-learning algorithms, run them on well-established and emerging benchmarks, and add your own meta-learning problems to the suite and benchmark algorithms on them. \n\n ![System Illustration](docs/figs/system_illustration.png)\n\n**Meta-Blocks** package comes with:\n\n* **Flexible APIs, detailed documentation, and multiple examples.**\n* **Popular models and algorithms** such as MAML [1], Reptile [2], Protonets [3].\n* **Supervised and unsupervised meta-learning** setups compatible with all algorithms.\n* **Customizable modules and utility functions** for quick prototyping on new meta-learning algorithms.\n\n**Links and Resources**:\n\n* [View the latest code on Github]()\n* [Execute Interactive Jupyter Notebooks]()\n* [Documentation and APIs]()\n\n---\n\n### Installation\n\n\nIt is recommended to use **pip** for installation. Please make sure\n**the latest version** is installed, as **meta-blocks** is updated frequently:\n\n\n```shell\n$ pip install meta-blocks            # normal install\n$ pip install --upgrade meta-blocks  # or update if needed\n$ pip install --pre meta-blocks      # or include pre-release version for new features\n```\n\nAlternatively, you could clone and run setup.py file:\n\n```\n$ git clone https://github.com/alshedivat/meta-blocks.git\n$ cd meta-blocks\n$ pip install .\n```\n\n**Required Dependencies** :\n\n* albumentations\n* hydra-core\n* numpy\n* Pillow\n* scipy\n* scikit-learn\n* tensorflow>=2.1\n\n---\n\n### Examples\n\nTODO:\nWe should provide a minimal example so people could run immediately.\nIdeally, the running time should be within a few mins.\n\n----\n\n### Development\n\nFor development and contributions, please install pre-commit hooks to ensure proper code style and formatting:\n\n```shell\n$ pip install pre-commit      # install pre-commit\n$ pre-commit install          # install git hooks\n$ pre-commit run --all-files  # run pre-commit on all the files\n```\n\n#### Status\n\n**Meta-Blocks** is currently **under development** as of Apr, 2020.\n\n**Watch & Star** to get the latest update! Also feel free to contact for suggestions and ideas.\n\n----\n\n### Citing Meta-Blocks\n\nTODO: add citation information as soon as available.\n\n----\n\n\n### Reference\n\n[1] Finn, C., Abbeel, P. and Levine, S. Model-agnostic meta-learning for fast adaptation of deep networks. ICML 2017.\n\n[2] Nichol, A., Achiam, J. and Schulman, J. On first-order meta-learning algorithms. arXiv preprint arXiv:1803.02999.\n\n[3] Snell, J., Swersky, K. and Zemel, R. Prototypical networks for few-shot learning. NeurIPS 2017.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alshedivat/meta-blocks", "keywords": "learning-to-learn,machine learning,deep learning,meta-learning,benchmark,toolbox,tensorflow,keras,python", "license": "BSD-3", "maintainer": "Maruan Al-Shedivat, Yue Zhao", "maintainer_email": "alshedivat@cs.cmu.edu, zhaoy@cmu.edu", "name": "meta-blocks", "package_url": "https://pypi.org/project/meta-blocks/", "platform": "", "project_url": "https://pypi.org/project/meta-blocks/", "project_urls": {"Homepage": "https://github.com/alshedivat/meta-blocks"}, "release_url": "https://pypi.org/project/meta-blocks/0.1a1.post1/", "requires_dist": ["albumentations", "hydra-core (<1.0,>=0.11)", "hydra-colorlog", "numpy", "omegaconf (<2.0,>=1.4)", "Pillow", "scipy", "scikit-learn", "tensorflow (==2.2.0rc3)"], "requires_python": "", "summary": "A modular toolbox for accelerating meta-learning research :rocket:", "version": "0.1a1.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa796f1f4319210a75a1893204ef9fc0ab939742/68747470733a2f2f6769746875622e636f6d2f616c73686564697661742f6d6574612d626c6f636b732f626c6f622f6d61737465722f646f63732f666967732f6d6574612d626c6f636b732d32642e706e673f7261773d74727565\" width=\"400px\"></p>\n<h3>A Modular Toolbox for Accelerating Meta-Learning Research :rocket:</h3>\n<hr>\n<p><a href=\"https://pypi.org/project/meta-blocks/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c835ba373c8c66bdf629a74b34264ac40ad889bb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d6574612d626c6f636b73\"></a>\n<a href=\"https://pypi.org/project/meta-blocks/\" rel=\"nofollow\"><img alt=\"PyPI Status Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62e0ffa51134cd7aae06cb78862c933041eac1dc/68747470733a2f2f62616467652e667572792e696f2f70792f6d6574612d626c6f636b732e737667\"></a>\n<a href=\"https://travis-ci.org/alshedivat/meta-blocks\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c67ed43dee7d18bb607a447f282b90f2ab5b076/68747470733a2f2f7472617669732d63692e6f72672f616c73686564697661742f6d6574612d626c6f636b732e737667\"></a>\n<a href=\"https://meta-blocks.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a276a5a1ccba43ea9425b0f0ef80ed520eefcfeb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6574612d626c6f636b732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/alshedivat/meta-blocks?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ce827eb09f9da300abf6c8a9f9ed45b26eb3de0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f616c73686564697661742f6d6574612d626c6f636b732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><strong>Meta-Blocks</strong> is a modular toolbox for research, experimentation, and reproducible benchmarking of learning-to-learn algorithms.\nThe toolbox provides flexible APIs for working with <code>MetaDatasets</code>, <code>TaskDistributions</code>, and <code>MetaLearners</code> (see the figure below).\nThe APIs make it easy to implement a variety of meta-learning algorithms, run them on well-established and emerging benchmarks, and add your own meta-learning problems to the suite and benchmark algorithms on them.</p>\n<p><img alt=\"System Illustration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d124d5b4bb3002e755cb8638e6b45bc5e57b7d92/646f63732f666967732f73797374656d5f696c6c757374726174696f6e2e706e67\"></p>\n<p><strong>Meta-Blocks</strong> package comes with:</p>\n<ul>\n<li><strong>Flexible APIs, detailed documentation, and multiple examples.</strong></li>\n<li><strong>Popular models and algorithms</strong> such as MAML [1], Reptile [2], Protonets [3].</li>\n<li><strong>Supervised and unsupervised meta-learning</strong> setups compatible with all algorithms.</li>\n<li><strong>Customizable modules and utility functions</strong> for quick prototyping on new meta-learning algorithms.</li>\n</ul>\n<p><strong>Links and Resources</strong>:</p>\n<ul>\n<li><a href=\"\" rel=\"nofollow\">View the latest code on Github</a></li>\n<li><a href=\"\" rel=\"nofollow\">Execute Interactive Jupyter Notebooks</a></li>\n<li><a href=\"\" rel=\"nofollow\">Documentation and APIs</a></li>\n</ul>\n<hr>\n<h3>Installation</h3>\n<p>It is recommended to use <strong>pip</strong> for installation. Please make sure\n<strong>the latest version</strong> is installed, as <strong>meta-blocks</strong> is updated frequently:</p>\n<pre>$ pip install meta-blocks            <span class=\"c1\"># normal install</span>\n$ pip install --upgrade meta-blocks  <span class=\"c1\"># or update if needed</span>\n$ pip install --pre meta-blocks      <span class=\"c1\"># or include pre-release version for new features</span>\n</pre>\n<p>Alternatively, you could clone and run setup.py file:</p>\n<pre><code>$ git clone https://github.com/alshedivat/meta-blocks.git\n$ cd meta-blocks\n$ pip install .\n</code></pre>\n<p><strong>Required Dependencies</strong> :</p>\n<ul>\n<li>albumentations</li>\n<li>hydra-core</li>\n<li>numpy</li>\n<li>Pillow</li>\n<li>scipy</li>\n<li>scikit-learn</li>\n<li>tensorflow&gt;=2.1</li>\n</ul>\n<hr>\n<h3>Examples</h3>\n<p>TODO:\nWe should provide a minimal example so people could run immediately.\nIdeally, the running time should be within a few mins.</p>\n<hr>\n<h3>Development</h3>\n<p>For development and contributions, please install pre-commit hooks to ensure proper code style and formatting:</p>\n<pre>$ pip install pre-commit      <span class=\"c1\"># install pre-commit</span>\n$ pre-commit install          <span class=\"c1\"># install git hooks</span>\n$ pre-commit run --all-files  <span class=\"c1\"># run pre-commit on all the files</span>\n</pre>\n<h4>Status</h4>\n<p><strong>Meta-Blocks</strong> is currently <strong>under development</strong> as of Apr, 2020.</p>\n<p><strong>Watch &amp; Star</strong> to get the latest update! Also feel free to contact for suggestions and ideas.</p>\n<hr>\n<h3>Citing Meta-Blocks</h3>\n<p>TODO: add citation information as soon as available.</p>\n<hr>\n<h3>Reference</h3>\n<p>[1] Finn, C., Abbeel, P. and Levine, S. Model-agnostic meta-learning for fast adaptation of deep networks. ICML 2017.</p>\n<p>[2] Nichol, A., Achiam, J. and Schulman, J. On first-order meta-learning algorithms. arXiv preprint arXiv:1803.02999.</p>\n<p>[3] Snell, J., Swersky, K. and Zemel, R. Prototypical networks for few-shot learning. NeurIPS 2017.</p>\n\n          </div>"}, "last_serial": 7141524, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "9d2d7d616e472c542db5e1bbc8735ec0", "sha256": "d09f50266627ab3b68b70cf503cb495e65c0b2d4696a1e374a89b61c9dac33fd"}, "downloads": -1, "filename": "meta_blocks-0.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d2d7d616e472c542db5e1bbc8735ec0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23187, "upload_time": "2020-04-30T21:53:03", "upload_time_iso_8601": "2020-04-30T21:53:03.226732Z", "url": "https://files.pythonhosted.org/packages/97/fc/7d479d486800c3dc7eb69f3717e0e0a0cfbcba83413f2b9747b84c87ad35/meta_blocks-0.1a1-py3-none-any.whl", "yanked": true}, {"comment_text": "", "digests": {"md5": "0ab3f06c72f21918a5eacd9db26688a9", "sha256": "7e11783a5f7da9e2baf64188d0d540dfb308c95d01b17c77fa9276ab6ad3ba03"}, "downloads": -1, "filename": "meta_blocks-0.1a1.tar.gz", "has_sig": false, "md5_digest": "0ab3f06c72f21918a5eacd9db26688a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10112, "upload_time": "2020-04-30T21:53:05", "upload_time_iso_8601": "2020-04-30T21:53:05.674049Z", "url": "https://files.pythonhosted.org/packages/e2/6f/71c31dd693934cc75f8f596cbc21864af24bc6a357e16abcb344ca6028dc/meta_blocks-0.1a1.tar.gz", "yanked": true}], "0.1a1.post1": [{"comment_text": "", "digests": {"md5": "bc7b209eaad437d3977b8c60f3cba181", "sha256": "26900c82647643a5ec32629198d5943f65a543ce8e790b4ce13dfbb251c82279"}, "downloads": -1, "filename": "meta_blocks-0.1a1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "bc7b209eaad437d3977b8c60f3cba181", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 74864, "upload_time": "2020-04-30T23:24:24", "upload_time_iso_8601": "2020-04-30T23:24:24.819456Z", "url": "https://files.pythonhosted.org/packages/05/0b/1f006f605855d5a4594d195dd675a03567a7e7549fd510a19a41f179b9db/meta_blocks-0.1a1.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef2b3f0e33f707e4cff37d7a7d9776d3", "sha256": "8e09d272ce474e3b4128fb2528e881127c46451cf9455cf885021d7a2c9081f1"}, "downloads": -1, "filename": "meta_blocks-0.1a1.post1.tar.gz", "has_sig": false, "md5_digest": "ef2b3f0e33f707e4cff37d7a7d9776d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41186, "upload_time": "2020-04-30T23:24:26", "upload_time_iso_8601": "2020-04-30T23:24:26.127841Z", "url": "https://files.pythonhosted.org/packages/97/6c/cd535aceadf8a1abbf85fadf04642fd6c6e4e85a7bab20431d5ee959da3b/meta_blocks-0.1a1.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc7b209eaad437d3977b8c60f3cba181", "sha256": "26900c82647643a5ec32629198d5943f65a543ce8e790b4ce13dfbb251c82279"}, "downloads": -1, "filename": "meta_blocks-0.1a1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "bc7b209eaad437d3977b8c60f3cba181", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 74864, "upload_time": "2020-04-30T23:24:24", "upload_time_iso_8601": "2020-04-30T23:24:24.819456Z", "url": "https://files.pythonhosted.org/packages/05/0b/1f006f605855d5a4594d195dd675a03567a7e7549fd510a19a41f179b9db/meta_blocks-0.1a1.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef2b3f0e33f707e4cff37d7a7d9776d3", "sha256": "8e09d272ce474e3b4128fb2528e881127c46451cf9455cf885021d7a2c9081f1"}, "downloads": -1, "filename": "meta_blocks-0.1a1.post1.tar.gz", "has_sig": false, "md5_digest": "ef2b3f0e33f707e4cff37d7a7d9776d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41186, "upload_time": "2020-04-30T23:24:26", "upload_time_iso_8601": "2020-04-30T23:24:26.127841Z", "url": "https://files.pythonhosted.org/packages/97/6c/cd535aceadf8a1abbf85fadf04642fd6c6e4e85a7bab20431d5ee959da3b/meta_blocks-0.1a1.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:59 2020"}