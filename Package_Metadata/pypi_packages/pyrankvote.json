{"info": {"author": "Jon Tingvold", "author_email": "jon.tingvold@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n\nPyRankVote \u2014A Ranked Choice Voting System for Python\n==========\n[![PyPI version](https://badge.fury.io/py/pyrankvote.svg)](https://badge.fury.io/py/pyrankvote)  [![Coverage Status](https://coveralls.io/repos/github/jontingvold/pyrankvote/badge.svg?branch=master)](https://coveralls.io/github/jontingvold/pyrankvote?branch=master)  [![CircleCI](https://circleci.com/gh/jontingvold/pyrankvote/tree/master.svg?style=svg)](https://circleci.com/gh/jontingvold/pyrankvote/tree/master)\n\nPyRankVote is a python library for different ranked-choice voting systems (sometimes called preferential voting systems) created by Jon Tingvold in June 2019.\n\nThe following ranking methods are implemented for electing one person/alternative (e.g. electing the chairman to a board):\n\n- Instant-runoff voting (IRV)\u2014often known as the alternative vote\n\nThe following ranking methods are implemented for electing multiple people/alternatives (e.g. electing board members):\n\n- Single transferable vote (STV)\u2014generally preferred\n- Preferential block voting (PBV)\n\n## Different ranking methods\n\n**Instant runoff voting (IRV)** is a single candidate election method that elects the candidate that can obtain majority support (more than 50%).\n\nVoters rank candidates and are granted one vote. The candidate with fewest votes is removed and this candidate's votes are transferred according to the voters 2nd preference (or 3rd etc).\n\n**Preferential block voting (PBV)** is a multiple candidate election method that elects candidates that\ncan obtain majority support (more than 50%). PBV tends to elect uncontroversial candidates that agree with each other. Minority group often lose their representation.\n\nVoters rank candidates and are granted as many votes as there are people that should be elected. The candidate with\nfewest votes are removed and this candidate's votes are transferred according to the voters 2nd preference (or 3rd etc).\n\n**Single transferable vote (STV)** is a multiple candidate election method that elects candidates based on proportional representation. Minority (and extreme) groups get representation if they have enough votes to elect a candidate. STV is therefore the preferred ranked-choice voting method for parliament elections and most multiple seat elections, but it's more complex than  PBV, so it explained last.\n\nVoters rank candidates and are granted as one vote each. If a candidate gets more votes than the threshold for being\nelected, the candidate is proclaimed as winner. This function uses the Droop quota, where\n\n```python\ndroop_quota = votes/(seats+1) + 1\n```\n\nIf one candidate gets more votes than the threshold the excess votes are transferred to voters that voted for this\ncandidate's 2nd (or 3rd, 4th, etc) alternative. If no candidate gets over the threshold, the candidate with fewest votes\nis removed. Votes for this candidate is then transferred to voters 2nd (or 3rd, 4th, etc) alternative.\n\nPreferential block voting and Single transferable vote are the same as Instant-runoff voting when only one candidate is elected.\n\nInstant-runoff voting and Preferential block voting are basically the same as **exhaustive ballot**, the preferred method in Rober's rules of order. The only difference is that in exhaustive ballot voters can adjust their preferences between each round (elimination or election of one candidate).\n\nFor more info:\n\n- [pyrankvote/single_seat_ranking_methods.py](pyrankvote/single_seat_ranking_methods.py) and  [pyrankvote/multiple_seat_ranking_methods.py](pyrankvote/multiple_seat_ranking_methods.py)\n- Wikipedia: [IRV](https://en.wikipedia.org/wiki/Instant-runoff_voting), [STV](https://en.wikipedia.org/wiki/Single_transferable_vote), [PBV](https://en.wikipedia.org/wiki/Preferential_block_voting), [exhaustive ballot](https://en.wikipedia.org/wiki/Exhaustive_ballot)\n- CGP Gray's YouTube videos: [IRV](https://www.youtube.com/watch?v=3Y3jE3B8HsE), [STV1](https://www.youtube.com/watch?v=l8XOZJkozfI&t=2s), [STV2](https://www.youtube.com/watch?v=Ac9070OIMUg), [STV3](https://www.youtube.com/watch?v=wRc630BSTIg)\n\n## Installation\n\nWith pip package manager:\n\n```bash\npip install pyrankvote\n```\n\n## Usage\n\n```python\nimport pyrankvote\nfrom pyrankvote import Candidate, Ballot\n\nbush = Candidate(\"George W. Bush (Republican)\")\ngore = Candidate(\"Al Gore (Democratic)\")\nnader = Candidate(\"Ralph Nader (Green)\")\n\ncandidates = [bush, gore, nader]\n\n# Bush have most first choice votes, but because Ralph Nader-voters want\n# Al Gore if Nader is not elected, the elected candidate is Al Gore\nballots = [\n    Ballot(ranked_candidates=[bush, nader, gore]),\n    Ballot(ranked_candidates=[bush, nader, gore]),\n    Ballot(ranked_candidates=[bush, nader]),\n    Ballot(ranked_candidates=[bush, nader]),\n    Ballot(ranked_candidates=[nader, gore, bush]),\n    Ballot(ranked_candidates=[nader, gore]),\n    Ballot(ranked_candidates=[gore, nader, bush]),\n    Ballot(ranked_candidates=[gore, nader]),\n    Ballot(ranked_candidates=[gore, nader])\n]\n\n# You can use your own Candidate and Ballot objects as long as they implement the same properties and methods\nelection_result = pyrankvote.instant_runoff_voting(candidates, ballots)\n\nwinners = election_result.get_winners()\n# Returns: [<Candidate('Al Gore (Democratic)')>]\n\nprint(election_result)\n# Prints:\n\"\"\"\nROUND 1\nCandidate                      Votes  Status\n---------------------------  -------  --------\nGeorge W. Bush (Republican)        4  Hopeful\nAl Gore (Democratic)               3  Hopeful\nRalph Nader (Green)                2  Rejected\n\nFINAL RESULT\nCandidate                      Votes  Status\n---------------------------  -------  --------\nAl Gore (Democratic)               5  Elected\nGeorge W. Bush (Republican)        4  Rejected\nRalph Nader (Green)                0  Rejected\n\"\"\"\n```\n\nMore examples in [examples.py](./examples.py)\n\n## Versions\n\n- v2.0 (2020-04-08): **Compact round results and standard STV-procedure** \n    - Non-backward compatible change: If ballot exhausted, the ballot is now thrown away instead of picking a candidate at random. This is more in line with most RCV-systems. The old practice can be reenabled with `pyrankvote.single_transferable_vote(candidates, ballots, pick_random_if_blank=True)`\n- v1.0 (2019-09-15): **Stable release.** First release I assume is stable enough to encourage use. \n- v0.0 (2019-08-09): **Pre-release**\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\nQuestions?\n----------\n\nFeel free to [send me an email](http://www.jontingvold.no/) if you have questions about the project.\n\n## License\n[MIT](LICENSE.txt)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jontingvold/pyrankvote", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyrankvote", "package_url": "https://pypi.org/project/pyrankvote/", "platform": "", "project_url": "https://pypi.org/project/pyrankvote/", "project_urls": {"Homepage": "https://github.com/jontingvold/pyrankvote"}, "release_url": "https://pypi.org/project/pyrankvote/2.0.1/", "requires_dist": ["tabulate"], "requires_python": "", "summary": "PyRankVote is a python library for different ranked voting methods, like instant-runoff voting, single transferable vote and preferential block voting, created by Jon Tingvold.", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyRankVote \u2014A Ranked Choice Voting System for Python</h1>\n<p><a href=\"https://badge.fury.io/py/pyrankvote\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3ae2e647ac43fcf45e677566b0e7a9cc0b85605/68747470733a2f2f62616467652e667572792e696f2f70792f707972616e6b766f74652e737667\"></a>  <a href=\"https://coveralls.io/github/jontingvold/pyrankvote?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48857652a050a4c2863f8513b4cc67b3d74bbead/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6f6e74696e67766f6c642f707972616e6b766f74652f62616467652e7376673f6272616e63683d6d6173746572\"></a>  <a href=\"https://circleci.com/gh/jontingvold/pyrankvote/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4013be2c3d77cc260666e8a2cc9cc3e93e793477/68747470733a2f2f636972636c6563692e636f6d2f67682f6a6f6e74696e67766f6c642f707972616e6b766f74652f747265652f6d61737465722e7376673f7374796c653d737667\"></a></p>\n<p>PyRankVote is a python library for different ranked-choice voting systems (sometimes called preferential voting systems) created by Jon Tingvold in June 2019.</p>\n<p>The following ranking methods are implemented for electing one person/alternative (e.g. electing the chairman to a board):</p>\n<ul>\n<li>Instant-runoff voting (IRV)\u2014often known as the alternative vote</li>\n</ul>\n<p>The following ranking methods are implemented for electing multiple people/alternatives (e.g. electing board members):</p>\n<ul>\n<li>Single transferable vote (STV)\u2014generally preferred</li>\n<li>Preferential block voting (PBV)</li>\n</ul>\n<h2>Different ranking methods</h2>\n<p><strong>Instant runoff voting (IRV)</strong> is a single candidate election method that elects the candidate that can obtain majority support (more than 50%).</p>\n<p>Voters rank candidates and are granted one vote. The candidate with fewest votes is removed and this candidate's votes are transferred according to the voters 2nd preference (or 3rd etc).</p>\n<p><strong>Preferential block voting (PBV)</strong> is a multiple candidate election method that elects candidates that\ncan obtain majority support (more than 50%). PBV tends to elect uncontroversial candidates that agree with each other. Minority group often lose their representation.</p>\n<p>Voters rank candidates and are granted as many votes as there are people that should be elected. The candidate with\nfewest votes are removed and this candidate's votes are transferred according to the voters 2nd preference (or 3rd etc).</p>\n<p><strong>Single transferable vote (STV)</strong> is a multiple candidate election method that elects candidates based on proportional representation. Minority (and extreme) groups get representation if they have enough votes to elect a candidate. STV is therefore the preferred ranked-choice voting method for parliament elections and most multiple seat elections, but it's more complex than  PBV, so it explained last.</p>\n<p>Voters rank candidates and are granted as one vote each. If a candidate gets more votes than the threshold for being\nelected, the candidate is proclaimed as winner. This function uses the Droop quota, where</p>\n<pre><span class=\"n\">droop_quota</span> <span class=\"o\">=</span> <span class=\"n\">votes</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">seats</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre>\n<p>If one candidate gets more votes than the threshold the excess votes are transferred to voters that voted for this\ncandidate's 2nd (or 3rd, 4th, etc) alternative. If no candidate gets over the threshold, the candidate with fewest votes\nis removed. Votes for this candidate is then transferred to voters 2nd (or 3rd, 4th, etc) alternative.</p>\n<p>Preferential block voting and Single transferable vote are the same as Instant-runoff voting when only one candidate is elected.</p>\n<p>Instant-runoff voting and Preferential block voting are basically the same as <strong>exhaustive ballot</strong>, the preferred method in Rober's rules of order. The only difference is that in exhaustive ballot voters can adjust their preferences between each round (elimination or election of one candidate).</p>\n<p>For more info:</p>\n<ul>\n<li><a href=\"pyrankvote/single_seat_ranking_methods.py\" rel=\"nofollow\">pyrankvote/single_seat_ranking_methods.py</a> and  <a href=\"pyrankvote/multiple_seat_ranking_methods.py\" rel=\"nofollow\">pyrankvote/multiple_seat_ranking_methods.py</a></li>\n<li>Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Instant-runoff_voting\" rel=\"nofollow\">IRV</a>, <a href=\"https://en.wikipedia.org/wiki/Single_transferable_vote\" rel=\"nofollow\">STV</a>, <a href=\"https://en.wikipedia.org/wiki/Preferential_block_voting\" rel=\"nofollow\">PBV</a>, <a href=\"https://en.wikipedia.org/wiki/Exhaustive_ballot\" rel=\"nofollow\">exhaustive ballot</a></li>\n<li>CGP Gray's YouTube videos: <a href=\"https://www.youtube.com/watch?v=3Y3jE3B8HsE\" rel=\"nofollow\">IRV</a>, <a href=\"https://www.youtube.com/watch?v=l8XOZJkozfI&amp;t=2s\" rel=\"nofollow\">STV1</a>, <a href=\"https://www.youtube.com/watch?v=Ac9070OIMUg\" rel=\"nofollow\">STV2</a>, <a href=\"https://www.youtube.com/watch?v=wRc630BSTIg\" rel=\"nofollow\">STV3</a></li>\n</ul>\n<h2>Installation</h2>\n<p>With pip package manager:</p>\n<pre>pip install pyrankvote\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyrankvote</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyrankvote</span> <span class=\"kn\">import</span> <span class=\"n\">Candidate</span><span class=\"p\">,</span> <span class=\"n\">Ballot</span>\n\n<span class=\"n\">bush</span> <span class=\"o\">=</span> <span class=\"n\">Candidate</span><span class=\"p\">(</span><span class=\"s2\">\"George W. Bush (Republican)\"</span><span class=\"p\">)</span>\n<span class=\"n\">gore</span> <span class=\"o\">=</span> <span class=\"n\">Candidate</span><span class=\"p\">(</span><span class=\"s2\">\"Al Gore (Democratic)\"</span><span class=\"p\">)</span>\n<span class=\"n\">nader</span> <span class=\"o\">=</span> <span class=\"n\">Candidate</span><span class=\"p\">(</span><span class=\"s2\">\"Ralph Nader (Green)\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">candidates</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">bush</span><span class=\"p\">,</span> <span class=\"n\">gore</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Bush have most first choice votes, but because Ralph Nader-voters want</span>\n<span class=\"c1\"># Al Gore if Nader is not elected, the elected candidate is Al Gore</span>\n<span class=\"n\">ballots</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">bush</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">,</span> <span class=\"n\">gore</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">bush</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">,</span> <span class=\"n\">gore</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">bush</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">bush</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">nader</span><span class=\"p\">,</span> <span class=\"n\">gore</span><span class=\"p\">,</span> <span class=\"n\">bush</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">nader</span><span class=\"p\">,</span> <span class=\"n\">gore</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">gore</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">,</span> <span class=\"n\">bush</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">gore</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">]),</span>\n    <span class=\"n\">Ballot</span><span class=\"p\">(</span><span class=\"n\">ranked_candidates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">gore</span><span class=\"p\">,</span> <span class=\"n\">nader</span><span class=\"p\">])</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># You can use your own Candidate and Ballot objects as long as they implement the same properties and methods</span>\n<span class=\"n\">election_result</span> <span class=\"o\">=</span> <span class=\"n\">pyrankvote</span><span class=\"o\">.</span><span class=\"n\">instant_runoff_voting</span><span class=\"p\">(</span><span class=\"n\">candidates</span><span class=\"p\">,</span> <span class=\"n\">ballots</span><span class=\"p\">)</span>\n\n<span class=\"n\">winners</span> <span class=\"o\">=</span> <span class=\"n\">election_result</span><span class=\"o\">.</span><span class=\"n\">get_winners</span><span class=\"p\">()</span>\n<span class=\"c1\"># Returns: [&lt;Candidate('Al Gore (Democratic)')&gt;]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">election_result</span><span class=\"p\">)</span>\n<span class=\"c1\"># Prints:</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">ROUND 1</span>\n<span class=\"sd\">Candidate                      Votes  Status</span>\n<span class=\"sd\">---------------------------  -------  --------</span>\n<span class=\"sd\">George W. Bush (Republican)        4  Hopeful</span>\n<span class=\"sd\">Al Gore (Democratic)               3  Hopeful</span>\n<span class=\"sd\">Ralph Nader (Green)                2  Rejected</span>\n\n<span class=\"sd\">FINAL RESULT</span>\n<span class=\"sd\">Candidate                      Votes  Status</span>\n<span class=\"sd\">---------------------------  -------  --------</span>\n<span class=\"sd\">Al Gore (Democratic)               5  Elected</span>\n<span class=\"sd\">George W. Bush (Republican)        4  Rejected</span>\n<span class=\"sd\">Ralph Nader (Green)                0  Rejected</span>\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<p>More examples in <a href=\"./examples.py\" rel=\"nofollow\">examples.py</a></p>\n<h2>Versions</h2>\n<ul>\n<li>v2.0 (2020-04-08): <strong>Compact round results and standard STV-procedure</strong>\n<ul>\n<li>Non-backward compatible change: If ballot exhausted, the ballot is now thrown away instead of picking a candidate at random. This is more in line with most RCV-systems. The old practice can be reenabled with <code>pyrankvote.single_transferable_vote(candidates, ballots, pick_random_if_blank=True)</code></li>\n</ul>\n</li>\n<li>v1.0 (2019-09-15): <strong>Stable release.</strong> First release I assume is stable enough to encourage use.</li>\n<li>v0.0 (2019-08-09): <strong>Pre-release</strong></li>\n</ul>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>Questions?</h2>\n<p>Feel free to <a href=\"http://www.jontingvold.no/\" rel=\"nofollow\">send me an email</a> if you have questions about the project.</p>\n<h2>License</h2>\n<p><a href=\"LICENSE.txt\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6981238, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "ee1a07a2e2ae5980d88d0d7cd475d905", "sha256": "4046111c842bc5b67a37919311826c9cb5e963ffeb3218dc33bd99617e251699"}, "downloads": -1, "filename": "PyRankVote-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ee1a07a2e2ae5980d88d0d7cd475d905", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8957, "upload_time": "2019-09-13T22:10:10", "upload_time_iso_8601": "2019-09-13T22:10:10.718864Z", "url": "https://files.pythonhosted.org/packages/aa/25/b14cdf460b34be4f41c6ba2c204488d1f352b00650e44f8c71243e8c4b8f/PyRankVote-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7e47629ac7cbf541db7fc546466d585", "sha256": "3c310d4d6cd16714cf0586da0c5d3920413273db96db52287f6e0b109cd3737f"}, "downloads": -1, "filename": "PyRankVote-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e7e47629ac7cbf541db7fc546466d585", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8486, "upload_time": "2019-09-13T22:10:13", "upload_time_iso_8601": "2019-09-13T22:10:13.872546Z", "url": "https://files.pythonhosted.org/packages/c7/b4/4af23b27fd910d67017af5c14fbf04305f9c84a248e4aa3a2395747112ee/PyRankVote-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "eef2fb26e7c6a2be16923530e0e7e3ad", "sha256": "3a73fa06d2d0a9b05e25f528f629ed2ab145267c9e53d1b9758771f3d8e5c1a9"}, "downloads": -1, "filename": "pyrankvote-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eef2fb26e7c6a2be16923530e0e7e3ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8967, "upload_time": "2019-09-13T22:13:53", "upload_time_iso_8601": "2019-09-13T22:13:53.722374Z", "url": "https://files.pythonhosted.org/packages/06/0e/832e807007f4df424e166e39802b20b37d97062791fdb562b261cd841946/pyrankvote-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb9a0788cbe1249ac7e06691ea98988", "sha256": "38133297b6d5a1bc6e9a8b060503e29f48d615f5960a52cd20958fe73b41a534"}, "downloads": -1, "filename": "pyrankvote-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2bb9a0788cbe1249ac7e06691ea98988", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8482, "upload_time": "2019-09-13T22:13:56", "upload_time_iso_8601": "2019-09-13T22:13:56.849587Z", "url": "https://files.pythonhosted.org/packages/be/0c/f39bbd6115d6fccc1493c1fd7972c2820d6510117e297aa461a777c9e83d/pyrankvote-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "dee3cbbad466475abc8c570dad2d5ced", "sha256": "b06357b4268cc4680d666c407e1225d0c0c97c46eb2a7e286f42065c505948a0"}, "downloads": -1, "filename": "pyrankvote-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "dee3cbbad466475abc8c570dad2d5ced", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8956, "upload_time": "2019-09-13T22:25:51", "upload_time_iso_8601": "2019-09-13T22:25:51.052928Z", "url": "https://files.pythonhosted.org/packages/34/87/e46fdb402278a73cf3237c2761a3332f8520a6ce676b2171ca6e70c58433/pyrankvote-0.1.4-py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "0b9c4aa7c0254abe52c0b37f6c5c494b", "sha256": "782b63ca0ac65ff2ec624feebbd61b3dfb7c3fd25eb8c86e6254eedc6fe987e6"}, "downloads": -1, "filename": "pyrankvote-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b9c4aa7c0254abe52c0b37f6c5c494b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8956, "upload_time": "2019-09-13T22:47:22", "upload_time_iso_8601": "2019-09-13T22:47:22.423553Z", "url": "https://files.pythonhosted.org/packages/c1/fb/130f389faa6c798e1263931eb0f0639d830133042f1c060b79e833e4174f/pyrankvote-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "213c323cb787a0513a47b0eb1999a2ea", "sha256": "77ee7560f0f7f3190df1aa07278e6d50746ace2cc7663457b6e195bc2bfd850e"}, "downloads": -1, "filename": "pyrankvote-1.0.0.tar.gz", "has_sig": false, "md5_digest": "213c323cb787a0513a47b0eb1999a2ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9877, "upload_time": "2019-09-13T22:47:24", "upload_time_iso_8601": "2019-09-13T22:47:24.042542Z", "url": "https://files.pythonhosted.org/packages/90/7b/77eb1716da51aba8fcf6f3e0c0799661076bf26d68f47ef0696b1ef0c845/pyrankvote-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d78e68aafe30476dae2c98a3a97edf25", "sha256": "dbf9860bf01d1d93406c304b256e9a18b6a04a806f67f19c85f1ef4a22c6e397"}, "downloads": -1, "filename": "pyrankvote-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d78e68aafe30476dae2c98a3a97edf25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9027, "upload_time": "2019-09-13T23:27:36", "upload_time_iso_8601": "2019-09-13T23:27:36.614118Z", "url": "https://files.pythonhosted.org/packages/8b/4c/62beb4b18296730effaf7726c36c1c55b7d50be062f73c8a8a705dad03a2/pyrankvote-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b9d22167d775bf760d3cdb216f771d2", "sha256": "ae49b23f260f10823e2eeaae9bd193ef0ec72bebf29c1c41a96fb9799a7e29ab"}, "downloads": -1, "filename": "pyrankvote-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1b9d22167d775bf760d3cdb216f771d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10058, "upload_time": "2019-09-13T23:27:39", "upload_time_iso_8601": "2019-09-13T23:27:39.382856Z", "url": "https://files.pythonhosted.org/packages/06/aa/9cd7bf2ffe0b67cc1858ce0141795251fed11e646b36ca86eb1e32c29ca6/pyrankvote-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "15d996a43a585a3258210ce458c50fb6", "sha256": "6420eb0c8924d3c10124407c96a2223e3933cde517ab6a30e32dba941dca29f6"}, "downloads": -1, "filename": "pyrankvote-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "15d996a43a585a3258210ce458c50fb6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9030, "upload_time": "2019-09-13T23:34:43", "upload_time_iso_8601": "2019-09-13T23:34:43.142436Z", "url": "https://files.pythonhosted.org/packages/63/d4/a37b975be3b4bbfc0a0d81484469b884994dbbc548d5f8fa4315a89695fa/pyrankvote-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c70867a73368830df005b12ff110ddc", "sha256": "9289c82f4241d9b2e37a004b6dff66d9307b03c3021f7378eb4b66cad1ff2bfb"}, "downloads": -1, "filename": "pyrankvote-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0c70867a73368830df005b12ff110ddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9400, "upload_time": "2019-09-13T23:34:47", "upload_time_iso_8601": "2019-09-13T23:34:47.420109Z", "url": "https://files.pythonhosted.org/packages/c0/78/6435bed66de838e5ac14b59a099c2566465803201d0e33b999beadfd668a/pyrankvote-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "02b0c0405f865556464298f72a8e9d91", "sha256": "1816978b38b10f12c41cc1a11148e1360623de1d375478a91ffc49676b65ccde"}, "downloads": -1, "filename": "pyrankvote-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "02b0c0405f865556464298f72a8e9d91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9039, "upload_time": "2019-09-13T23:43:47", "upload_time_iso_8601": "2019-09-13T23:43:47.492889Z", "url": "https://files.pythonhosted.org/packages/a8/4f/63999f8eb963a171f9475cf0896b8d8ddf602c9a8e6aa62c0b81440f4124/pyrankvote-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e11d86165ad0271469c9899c0459938a", "sha256": "e2c36e07a44afc90bd0bd31c8dbde17908f641549d07df957cdace56cff27f4f"}, "downloads": -1, "filename": "pyrankvote-1.0.3.tar.gz", "has_sig": false, "md5_digest": "e11d86165ad0271469c9899c0459938a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10045, "upload_time": "2019-09-13T23:43:52", "upload_time_iso_8601": "2019-09-13T23:43:52.196892Z", "url": "https://files.pythonhosted.org/packages/a3/33/9384d21f97e043e7318b67765719436381b6f071cbe8c841af11418184ee/pyrankvote-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "f16a48cd71b07d4c2d7de420551375da", "sha256": "09c790591f771ad8bd54e77f01e4b4fe6e4afccc5f14a29bcf7fa944436bc0e9"}, "downloads": -1, "filename": "pyrankvote-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f16a48cd71b07d4c2d7de420551375da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9134, "upload_time": "2019-09-14T12:06:12", "upload_time_iso_8601": "2019-09-14T12:06:12.622134Z", "url": "https://files.pythonhosted.org/packages/45/94/1a4d2f1f0d6bf4b6370d2811a505191c9709c71e776e88b480f03bcf3336/pyrankvote-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df5436c8c56a902e8afd2c7f528d5589", "sha256": "5919b253e318fd2d097a4dbe3cd328ddaa7390f166fca47540956ee88e921e9b"}, "downloads": -1, "filename": "pyrankvote-1.0.4.tar.gz", "has_sig": false, "md5_digest": "df5436c8c56a902e8afd2c7f528d5589", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12754, "upload_time": "2019-09-14T12:06:14", "upload_time_iso_8601": "2019-09-14T12:06:14.626745Z", "url": "https://files.pythonhosted.org/packages/d8/22/7e884b888ba0510dc1c92e672687462877e0d2a5e08f287de6b8f2e219d9/pyrankvote-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "5c9bb2bac0dee8d6504a72e948b6b1dc", "sha256": "8e928af0c9749af09c2863c170e8e682543f8c2ce5d690c51760b6d6d46c8df9"}, "downloads": -1, "filename": "pyrankvote-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5c9bb2bac0dee8d6504a72e948b6b1dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9178, "upload_time": "2019-09-14T12:30:52", "upload_time_iso_8601": "2019-09-14T12:30:52.494883Z", "url": "https://files.pythonhosted.org/packages/98/e5/386cad502f91e4cf7ebced7ec335d337e2d8f035027aaf3c25ee8cd18f08/pyrankvote-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65ea890444f700b9ce70c1826686259b", "sha256": "18dab10e50f5be8923272746eb887f21602b252ed4d9d8d0cb97cdc3b7899101"}, "downloads": -1, "filename": "pyrankvote-1.0.5.tar.gz", "has_sig": false, "md5_digest": "65ea890444f700b9ce70c1826686259b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10659, "upload_time": "2019-09-14T12:30:54", "upload_time_iso_8601": "2019-09-14T12:30:54.254790Z", "url": "https://files.pythonhosted.org/packages/c6/37/61f1e90dbe7135b8af25810e3512e0d29a480101cffad720c6e9a9c7811e/pyrankvote-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "f5fb7fe0bc3a8916ac504c933b2855dd", "sha256": "3aa278a04e0e3f47920b3f1c2d6407b6b2076303e4a12a525f44440100c23bc0"}, "downloads": -1, "filename": "pyrankvote-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f5fb7fe0bc3a8916ac504c933b2855dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9235, "upload_time": "2019-09-14T15:46:02", "upload_time_iso_8601": "2019-09-14T15:46:02.739147Z", "url": "https://files.pythonhosted.org/packages/e0/5b/adc8aa77b582712b7b51d2640c26ebe1449d93212ef50088fcf88fd3687a/pyrankvote-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e8215280801b5f51e2e2ca6d5bcccd6", "sha256": "7fd960a55a637c209db0770df5b10bfa7446ce888aaf25bbd6ab3bc5d0811653"}, "downloads": -1, "filename": "pyrankvote-1.0.6.tar.gz", "has_sig": false, "md5_digest": "8e8215280801b5f51e2e2ca6d5bcccd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10662, "upload_time": "2019-09-14T15:46:07", "upload_time_iso_8601": "2019-09-14T15:46:07.959104Z", "url": "https://files.pythonhosted.org/packages/4a/6b/0ed989bcc1f83f45c299113811e3e037b24a325943df67b6ff49bc6f8b42/pyrankvote-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "1e9369c0df501a84747696103e80b566", "sha256": "a9b8dce039c5a34573a6b0d4bb3405c4ffbe97d22aa2a944fc50a863db26610f"}, "downloads": -1, "filename": "pyrankvote-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "1e9369c0df501a84747696103e80b566", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9386, "upload_time": "2019-09-14T15:46:04", "upload_time_iso_8601": "2019-09-14T15:46:04.739413Z", "url": "https://files.pythonhosted.org/packages/7f/95/aa327c08ae7afb87b50dc8f621e0c07683742ef59d2447acdb97b9b91e7a/pyrankvote-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43ff2fe54c102d726b7571844946361a", "sha256": "8758b705080cc2889cb0144f40f18ee53927ba673b8ddb5e38535d6661b916f9"}, "downloads": -1, "filename": "pyrankvote-1.0.7.tar.gz", "has_sig": false, "md5_digest": "43ff2fe54c102d726b7571844946361a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13526, "upload_time": "2019-09-14T15:46:10", "upload_time_iso_8601": "2019-09-14T15:46:10.076327Z", "url": "https://files.pythonhosted.org/packages/b4/1f/573fe2eeb22f91f9cd5b71ab46793846a0f9ca6f3982bf4007d34240bec2/pyrankvote-1.0.7.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "02e1f765fc7ee5b4f7ca50180634cfc7", "sha256": "a77ee9d0cb666024c4b06e29a68348e59cb31b463f7cd4125c14b6b37d881e61"}, "downloads": -1, "filename": "pyrankvote-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "02e1f765fc7ee5b4f7ca50180634cfc7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11094, "upload_time": "2019-09-18T20:47:34", "upload_time_iso_8601": "2019-09-18T20:47:34.164279Z", "url": "https://files.pythonhosted.org/packages/4f/02/a0a710a97420508e5e2dcc7bce16751f2e911822a23316c1ed1517330ad1/pyrankvote-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ea9fca259e68eacb077536d18e0f030", "sha256": "b854fa5467ccaacc30ec547fdf28f0209f48699fb814bd0933099add428bbada"}, "downloads": -1, "filename": "pyrankvote-1.0.9.tar.gz", "has_sig": false, "md5_digest": "4ea9fca259e68eacb077536d18e0f030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16740, "upload_time": "2019-09-18T20:47:40", "upload_time_iso_8601": "2019-09-18T20:47:40.377578Z", "url": "https://files.pythonhosted.org/packages/08/33/33cabd4e72d97bc5a0b9616452ca2037cbd836ca2ef99b79b0f48b338cf0/pyrankvote-1.0.9.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "be665ac637eab9069c01ae2b7023928b", "sha256": "66be499f75de12f48d95eb44535df2214ee4883cf54000fbb3c6d31c7ac6d618"}, "downloads": -1, "filename": "pyrankvote-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "be665ac637eab9069c01ae2b7023928b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13293, "upload_time": "2020-04-08T00:25:24", "upload_time_iso_8601": "2020-04-08T00:25:24.008602Z", "url": "https://files.pythonhosted.org/packages/43/35/7400810efbeb4b7b7ea8e6e87b76f0eb1a4b5e4828f4b1b0001ec278b5cb/pyrankvote-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45e78f51bbdd643659e32a706e4d0786", "sha256": "3d2b5226ccc2141c9bcb75a792819e324a1831182cd0c10b1b59d63e924ce9f6"}, "downloads": -1, "filename": "pyrankvote-2.0.0.tar.gz", "has_sig": false, "md5_digest": "45e78f51bbdd643659e32a706e4d0786", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5094600, "upload_time": "2020-04-08T00:25:28", "upload_time_iso_8601": "2020-04-08T00:25:28.575007Z", "url": "https://files.pythonhosted.org/packages/cf/9c/e04e05249fd5ea85fbb2ab1ea042325aa0691d0f59d7cd418f307c0eab8f/pyrankvote-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "f3c7f061f28555dd1744bbeac733dd98", "sha256": "35d51dceac680f9ec88d6905b4b0231587e94906783076f730ce2e1216da580a"}, "downloads": -1, "filename": "pyrankvote-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f3c7f061f28555dd1744bbeac733dd98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13263, "upload_time": "2020-04-08T21:20:29", "upload_time_iso_8601": "2020-04-08T21:20:29.793497Z", "url": "https://files.pythonhosted.org/packages/a4/f5/834b6c81681bf0037092cf37bb43adfa5e966d98a498fb0b3309c1f0e13f/pyrankvote-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3179572f002dee922207f95465160d40", "sha256": "3d0e655ce501fb9b57afcd9e8538f33ca28ce7f6919b3a147cb4b3024abb28d1"}, "downloads": -1, "filename": "pyrankvote-2.0.1.tar.gz", "has_sig": false, "md5_digest": "3179572f002dee922207f95465160d40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5094535, "upload_time": "2020-04-08T21:20:35", "upload_time_iso_8601": "2020-04-08T21:20:35.330398Z", "url": "https://files.pythonhosted.org/packages/39/0b/28c3cc1e3e29e9ed9d6313cba56f5bc7a38c5d730cf2d71aa22348b43d93/pyrankvote-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3c7f061f28555dd1744bbeac733dd98", "sha256": "35d51dceac680f9ec88d6905b4b0231587e94906783076f730ce2e1216da580a"}, "downloads": -1, "filename": "pyrankvote-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f3c7f061f28555dd1744bbeac733dd98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13263, "upload_time": "2020-04-08T21:20:29", "upload_time_iso_8601": "2020-04-08T21:20:29.793497Z", "url": "https://files.pythonhosted.org/packages/a4/f5/834b6c81681bf0037092cf37bb43adfa5e966d98a498fb0b3309c1f0e13f/pyrankvote-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3179572f002dee922207f95465160d40", "sha256": "3d0e655ce501fb9b57afcd9e8538f33ca28ce7f6919b3a147cb4b3024abb28d1"}, "downloads": -1, "filename": "pyrankvote-2.0.1.tar.gz", "has_sig": false, "md5_digest": "3179572f002dee922207f95465160d40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5094535, "upload_time": "2020-04-08T21:20:35", "upload_time_iso_8601": "2020-04-08T21:20:35.330398Z", "url": "https://files.pythonhosted.org/packages/39/0b/28c3cc1e3e29e9ed9d6313cba56f5bc7a38c5d730cf2d71aa22348b43d93/pyrankvote-2.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:07 2020"}