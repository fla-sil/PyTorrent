{"info": {"author": "Mingyi Zhang", "author_email": "mingyi.z@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "<img src=\"./logo.png\" width=64 height=64/> **Enterprise package manager for C/C++ development base on [conan](conan.io) and [docker](https://docker.com).**\n\n------\n\ncheck website for details [epmall.github.io/epm](https://epmall.github.io/epm).\n\n\n\n## Introduction\n\nEPM is an enterprise package manager base on [Conan](https://conan.io/) and [Docker](https://docker.com/), intended for C/C++ development team, and it extends many utilities to manage build, test, document and continuous integration to improve team development efficiency and quality.\n\nEPM , is inspired by [npm](npmjs.org) ([Node.JS](nodejs.org) package manager),  uses meta-information manifest ( package.yml) to manipulate development activities of the package.\n\n\n\nEPM can be use to :\n\n- create project skeleton.\n- all conan features (building, cache, publish package ...)\n- run built program in sandbox no need to set dependent dynamic libraries paths\n- a command to generate CI configure file to avoid complicated configure.\n- collaborate with Gitlab (via .gitlab-ci.yml) to easy continuous integration\n- manage versioning document of Markdown by underlying [MKdocs](https://www.mkdocs.org/) .\n\n\n\n## Setup\n\nplease read [installation guide.](./docs/installation.md)\n\n## Your first EPM project\n\nIf  EPM installed successfully, type following command to verify your installation\n\n```bash\n$ epm --version\nEPM 0.1.0\n```\n\nNow let's make your epm project step by step.\n\n### Create package project\n\nLet create an application program with name HelloWorld.\n\n```shell\nC:\\>mkdir Hello\n\nC:\\>cd Hello\n\nC:\\Hello>epm init --name HelloWorld\napp package <HelloWorld> project created successfully.\nTo build project, run command:  epm -c vs2019 build\n```\n\nAfter creation, you can find some folders and files under this directory. Open `source/main.c` you will see\n\n```C\n#include <stdio.h>\n\nint main( int argc, char** argv )\n{\n    printf(\"HelloWorld 0.0.1\\n\");\n    return 0;\n}\n```\n\n\n\n### Build package\n\n```shell\n\nC:\\Hello>epm -c vs2019 build\n[configure ......]\nConfiguration:\n[settings]\narch=x86_64\narch_build=x86_64\nbuild_type=Release\ncompiler=Visual Studio\ncompiler.runtime=MD\ncompiler.version=16\nos=Windows\nos_build=Windows\n[build ......]\nUsing lockfile: 'C:\\Hello\\.epm\\vs2019\\build/conan.lock'\nUsing cached profile from lockfile\nconanfile.py (HelloWorld/0.0.1@epm-public/dev): Running build()\n-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.18362.\n-- The C compiler identification is MSVC 19.23.28106.4\n  main.c\n  HelloWorld.vcxproj -> C:\\Hello\\.epm\\vs2019\\build\\bin\\HelloWorld.exe\n  Building Custom Rule C:/Hello/CMakeLists.txt\n  CMake does not need to re-run because \n[install ......]\n  -- Install configuration: \"Release\"\n  -- Installing: C:/Hello/.epm/vs2019/package/bin/HelloWorld.exe\n\n[package testing  ......]\nUsing layout file: C:\\Hello\\.epm\\vs2019\\conan.layout\n\nHelloWorld/0.0.1@epm-public/dev (test package): Installing package\nRequirements\n    HelloWorld/0.0.1@epm-public/dev from user folder - Editable\nPackages\n    HelloWorld/0.0.1@epm-public/dev:3fb49604f9c2f729b85ba3115852006824e72cab - Editable\n\nHelloWorld/0.0.1@epm-public/dev (test package): Running build()\nHelloWorld/0.0.1@epm-public/dev (test package): Running test()\n\n```\n\n### Run the built package\n\n```bash\nC:\\Hello>epm -c vs2019 sandbox HelloWorld\nHelloWorld 0.0.1\n```\n\n\n\n\n\n\n\n## Contribution\n\n\n\n## License\n\nproject base on conan, license also adhere to it.\n\n[MIT License](./LICENSE.md)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://epmall.github.io/epm", "keywords": "C/C++,package,libraries,developer,manager,dependency,tool,c,c++,cpp", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "epm", "package_url": "https://pypi.org/project/epm/", "platform": "", "project_url": "https://pypi.org/project/epm/", "project_urls": {"Homepage": "https://epmall.github.io/epm"}, "release_url": "https://pypi.org/project/epm/0.0.57/", "requires_dist": null, "requires_python": "", "summary": "Enterprise package management for C/C++ development base on conan", "version": "0.0.57", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img height=\"64/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7500adeaacfe7f6dd1c6e243771b765acd05fa3d/2e2f6c6f676f2e706e67\" width=\"64\"> <strong>Enterprise package manager for C/C++ development base on <a href=\"conan.io\" rel=\"nofollow\">conan</a> and <a href=\"https://docker.com\" rel=\"nofollow\">docker</a>.</strong></p>\n<hr>\n<p>check website for details <a href=\"https://epmall.github.io/epm\" rel=\"nofollow\">epmall.github.io/epm</a>.</p>\n<h2>Introduction</h2>\n<p>EPM is an enterprise package manager base on <a href=\"https://conan.io/\" rel=\"nofollow\">Conan</a> and <a href=\"https://docker.com/\" rel=\"nofollow\">Docker</a>, intended for C/C++ development team, and it extends many utilities to manage build, test, document and continuous integration to improve team development efficiency and quality.</p>\n<p>EPM , is inspired by <a href=\"npmjs.org\" rel=\"nofollow\">npm</a> (<a href=\"nodejs.org\" rel=\"nofollow\">Node.JS</a> package manager),  uses meta-information manifest ( package.yml) to manipulate development activities of the package.</p>\n<p>EPM can be use to :</p>\n<ul>\n<li>create project skeleton.</li>\n<li>all conan features (building, cache, publish package ...)</li>\n<li>run built program in sandbox no need to set dependent dynamic libraries paths</li>\n<li>a command to generate CI configure file to avoid complicated configure.</li>\n<li>collaborate with Gitlab (via .gitlab-ci.yml) to easy continuous integration</li>\n<li>manage versioning document of Markdown by underlying <a href=\"https://www.mkdocs.org/\" rel=\"nofollow\">MKdocs</a> .</li>\n</ul>\n<h2>Setup</h2>\n<p>please read <a href=\"./docs/installation.md\" rel=\"nofollow\">installation guide.</a></p>\n<h2>Your first EPM project</h2>\n<p>If  EPM installed successfully, type following command to verify your installation</p>\n<pre>$ epm --version\nEPM <span class=\"m\">0</span>.1.0\n</pre>\n<p>Now let's make your epm project step by step.</p>\n<h3>Create package project</h3>\n<p>Let create an application program with name HelloWorld.</p>\n<pre>C:<span class=\"se\">\\&gt;</span>mkdir Hello\n\nC:<span class=\"se\">\\&gt;</span><span class=\"nb\">cd</span> Hello\n\nC:<span class=\"se\">\\H</span>ello&gt;epm init --name HelloWorld\napp package &lt;HelloWorld&gt; project created successfully.\nTo build project, run command:  epm -c vs2019 build\n</pre>\n<p>After creation, you can find some folders and files under this directory. Open <code>source/main.c</code> you will see</p>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span> <span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span><span class=\"o\">**</span> <span class=\"n\">argv</span> <span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"HelloWorld 0.0.1</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Build package</h3>\n<pre>C:<span class=\"se\">\\H</span>ello&gt;epm -c vs2019 build\n<span class=\"o\">[</span>configure ......<span class=\"o\">]</span>\nConfiguration:\n<span class=\"o\">[</span>settings<span class=\"o\">]</span>\n<span class=\"nv\">arch</span><span class=\"o\">=</span>x86_64\n<span class=\"nv\">arch_build</span><span class=\"o\">=</span>x86_64\n<span class=\"nv\">build_type</span><span class=\"o\">=</span>Release\n<span class=\"nv\">compiler</span><span class=\"o\">=</span>Visual Studio\ncompiler.runtime<span class=\"o\">=</span>MD\ncompiler.version<span class=\"o\">=</span><span class=\"m\">16</span>\n<span class=\"nv\">os</span><span class=\"o\">=</span>Windows\n<span class=\"nv\">os_build</span><span class=\"o\">=</span>Windows\n<span class=\"o\">[</span>build ......<span class=\"o\">]</span>\nUsing lockfile: <span class=\"s1\">'C:\\Hello\\.epm\\vs2019\\build/conan.lock'</span>\nUsing cached profile from lockfile\nconanfile.py <span class=\"o\">(</span>HelloWorld/0.0.1@epm-public/dev<span class=\"o\">)</span>: Running build<span class=\"o\">()</span>\n-- Selecting Windows SDK version <span class=\"m\">10</span>.0.17763.0 to target Windows <span class=\"m\">10</span>.0.18362.\n-- The C compiler identification is MSVC <span class=\"m\">19</span>.23.28106.4\n  main.c\n  HelloWorld.vcxproj -&gt; C:<span class=\"se\">\\H</span>ello<span class=\"se\">\\.</span>epm<span class=\"se\">\\v</span>s2019<span class=\"se\">\\b</span>uild<span class=\"se\">\\b</span>in<span class=\"se\">\\H</span>elloWorld.exe\n  Building Custom Rule C:/Hello/CMakeLists.txt\n  CMake does not need to re-run because \n<span class=\"o\">[</span>install ......<span class=\"o\">]</span>\n  -- Install configuration: <span class=\"s2\">\"Release\"</span>\n  -- Installing: C:/Hello/.epm/vs2019/package/bin/HelloWorld.exe\n\n<span class=\"o\">[</span>package testing  ......<span class=\"o\">]</span>\nUsing layout file: C:<span class=\"se\">\\H</span>ello<span class=\"se\">\\.</span>epm<span class=\"se\">\\v</span>s2019<span class=\"se\">\\c</span>onan.layout\n\nHelloWorld/0.0.1@epm-public/dev <span class=\"o\">(</span><span class=\"nb\">test</span> package<span class=\"o\">)</span>: Installing package\nRequirements\n    HelloWorld/0.0.1@epm-public/dev from user folder - Editable\nPackages\n    HelloWorld/0.0.1@epm-public/dev:3fb49604f9c2f729b85ba3115852006824e72cab - Editable\n\nHelloWorld/0.0.1@epm-public/dev <span class=\"o\">(</span><span class=\"nb\">test</span> package<span class=\"o\">)</span>: Running build<span class=\"o\">()</span>\nHelloWorld/0.0.1@epm-public/dev <span class=\"o\">(</span><span class=\"nb\">test</span> package<span class=\"o\">)</span>: Running test<span class=\"o\">()</span>\n</pre>\n<h3>Run the built package</h3>\n<pre>C:<span class=\"se\">\\H</span>ello&gt;epm -c vs2019 sandbox HelloWorld\nHelloWorld <span class=\"m\">0</span>.0.1\n</pre>\n<h2>Contribution</h2>\n<h2>License</h2>\n<p>project base on conan, license also adhere to it.</p>\n<p><a href=\"./LICENSE.md\" rel=\"nofollow\">MIT License</a></p>\n\n          </div>"}, "last_serial": 6309606, "releases": {"0.0.57": [{"comment_text": "", "digests": {"md5": "14a9210a93e36055f519db8b3ae45eea", "sha256": "6846e1ea755b652c15ab6f93ab32346849d7f1271b6372f8397115f37a1f6460"}, "downloads": -1, "filename": "epm-0.0.57.tar.gz", "has_sig": false, "md5_digest": "14a9210a93e36055f519db8b3ae45eea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69443, "upload_time": "2019-12-16T09:18:23", "upload_time_iso_8601": "2019-12-16T09:18:23.403226Z", "url": "https://files.pythonhosted.org/packages/ea/fd/79af28eb3a23e928a4faa8dbc284956e1f44024c1188278e5fd5625145be/epm-0.0.57.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14a9210a93e36055f519db8b3ae45eea", "sha256": "6846e1ea755b652c15ab6f93ab32346849d7f1271b6372f8397115f37a1f6460"}, "downloads": -1, "filename": "epm-0.0.57.tar.gz", "has_sig": false, "md5_digest": "14a9210a93e36055f519db8b3ae45eea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69443, "upload_time": "2019-12-16T09:18:23", "upload_time_iso_8601": "2019-12-16T09:18:23.403226Z", "url": "https://files.pythonhosted.org/packages/ea/fd/79af28eb3a23e928a4faa8dbc284956e1f44024c1188278e5fd5625145be/epm-0.0.57.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:56 2020"}