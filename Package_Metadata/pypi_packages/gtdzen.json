{"info": {"author": "Alexander Artemenko", "author_email": "svetlyak.40wt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Information Technology", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Office/Business :: Scheduling", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "GTDzen\n======\n\nThis is a simple but flexible library and application to realize [Getting Things Done][gtd] method by David Allen.\n\nGTDzen is based on a simplicity, so you'll not find any projects, contexts or areas of responsibility. I'm sure,\nthat all you need is smart tagging and correct priorities, I call it - \"Tagged GTD Workflow\".\n\nInstallation\n------------\n\nFirst of all, you need to install all requirements. Next, you can install gtdzen.\n\nIf you install from the source, run `python setup.py install`.\n\nIf you wish to install from the PyPi, use `easy_install gtdzen` or `pip install gtdzen`.\n\nTutorial\n--------\n\nThere is only command line interface right now. But I'll be happy if somebody helps me to build a GUI for Mac OS X.\n\nI use such aliases in the ZSH/BASH:\n\n    alias gtshow='gtd show'\n    alias gtwork='gtd show today,work'\n    alias gthome='gtd show today,home'\n    alias gtlate='gtd show -today'\n    alias gta='gtd add'\n    alias gtdone='gtd close'\n    alias gtu='gtd update'\n\n(This package includes 'aliases' file. You can \"source\" it in your shell's config.)\n\nUsing these aliases, you can quickly update and process your task list. For example:\n\nLets fill our task list:\n\n    # gta \"To write setup.py script\" 10 today,project,python\n    # gta \"Add a new field to the model and update database schema.\" 8 today,project,python\n    # gta \"Find how to use sqlachemy-migration and sqlite\" 5 project,python\n\nNow you can list tasks for today:\n\n    # gtshow today\n    1 \"To write setup.py script\" / 10.0 (project, python, today)\n    2 \"Add a new field to the model and update database schema.\" / 8.0 (project, python, today)\n\nHere, you can see two opened tasks for today, sorted by priority. Lets close first task:\n\n    # gtdone 1\n    Task 1 was closed\n    # gtshow today\n    2 \"Add a new field to the model and update database schema.\" / 8.0 (project, python, today)\n\nIf you need more tasks, than you can look at tasks not planned for today, and update tags accordingly\nto your workflow:\n\n    # gtshow -today\n    3 \"Find how to use sqlachemy-migration and sqlite\" / 5.0 (project, python)\n    # gtu 3 - - -project,read,today,internet\n    Task \"Find how to use sqlachemy-migration and sqlite\" / 5.0 (internet, python, read, today) was updated\n\nThe command 'gtd update' accepts almost the same parameters as 'gtd add' command, with few exceptions:\n\n1 At first place, you must pass task or tasks numbers. If you update many task, than it must be a comma separated\n  list, like this one: 1,5,3\n2 If you don't want to change title, priority or tags, just pass minus symbol instead of them.\n3 With 'update' command for add or remove tags. To add a new tag, just pass it's name as usual. To remove,\n  add a prefix -.\n\nOk, it's all. Have a fun and build your own tagged GTD workflow.\n\nConfiguration\n-------------\n\nYou can specify some configuration options through 'config' file.\n\nBy default, 'gtd' searches options in ~/.gtdrc file, but for can specify\nanother location, using command line argument --config.\n\nHere is default config with some comments:\n\n    [gtd]\n    # Path to database\n    database = ~/.gtd/todo.sqlite\n    \n    # Enable or disable daily backups\n    backup = false\n    \n    # Where to place backup\n    backup_dir = ~/.gtd/backups\n\nTODO\n----\n\n* automatic database migrations.\n* bash/zsh autocomplete.\n* task annotations.\n* import/export to/from some XML format.\n\nLicense\n-------\n\nThis code is licensed under the New BSD License. See more details in the LICENSE file.\n\nContacts\n--------\n\nMy name is Alexander Artemenko. Feel free to contact me by email or jabber: svetlyak.40wt@gmail.com.\n\nAlso, you can clone [this project at GitHub][at-github] and send me patches.\n\n\n[gtd]: http://en.wikipedia.org/wiki/GTD\n[at-github]: http://github.com/svetlyak40wt/gtdzen/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/svetlyak40wt/gtdzen/", "keywords": "GTD,TODO,time management", "license": "New BSD License", "maintainer": null, "maintainer_email": null, "name": "gtdzen", "package_url": "https://pypi.org/project/gtdzen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gtdzen/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/svetlyak40wt/gtdzen/"}, "release_url": "https://pypi.org/project/gtdzen/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Simple but flexible Getting Things Done task manager with tag-oriented workflow.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            GTDzen<br>======<br><br>This is a simple but flexible library and application to realize [Getting Things Done][gtd] method by David Allen.<br><br>GTDzen is based on a simplicity, so you'll not find any projects, contexts or areas of responsibility. I'm sure,<br>that all you need is smart tagging and correct priorities, I call it - \"Tagged GTD Workflow\".<br><br>Installation<br>------------<br><br>First of all, you need to install all requirements. Next, you can install gtdzen.<br><br>If you install from the source, run `python setup.py install`.<br><br>If you wish to install from the PyPi, use `easy_install gtdzen` or `pip install gtdzen`.<br><br>Tutorial<br>--------<br><br>There is only command line interface right now. But I'll be happy if somebody helps me to build a GUI for Mac OS X.<br><br>I use such aliases in the ZSH/BASH:<br><br>    alias gtshow='gtd show'<br>    alias gtwork='gtd show today,work'<br>    alias gthome='gtd show today,home'<br>    alias gtlate='gtd show -today'<br>    alias gta='gtd add'<br>    alias gtdone='gtd close'<br>    alias gtu='gtd update'<br><br>(This package includes 'aliases' file. You can \"source\" it in your shell's config.)<br><br>Using these aliases, you can quickly update and process your task list. For example:<br><br>Lets fill our task list:<br><br>    # gta \"To write setup.py script\" 10 today,project,python<br>    # gta \"Add a new field to the model and update database schema.\" 8 today,project,python<br>    # gta \"Find how to use sqlachemy-migration and sqlite\" 5 project,python<br><br>Now you can list tasks for today:<br><br>    # gtshow today<br>    1 \"To write setup.py script\" / 10.0 (project, python, today)<br>    2 \"Add a new field to the model and update database schema.\" / 8.0 (project, python, today)<br><br>Here, you can see two opened tasks for today, sorted by priority. Lets close first task:<br><br>    # gtdone 1<br>    Task 1 was closed<br>    # gtshow today<br>    2 \"Add a new field to the model and update database schema.\" / 8.0 (project, python, today)<br><br>If you need more tasks, than you can look at tasks not planned for today, and update tags accordingly<br>to your workflow:<br><br>    # gtshow -today<br>    3 \"Find how to use sqlachemy-migration and sqlite\" / 5.0 (project, python)<br>    # gtu 3 - - -project,read,today,internet<br>    Task \"Find how to use sqlachemy-migration and sqlite\" / 5.0 (internet, python, read, today) was updated<br><br>The command 'gtd update' accepts almost the same parameters as 'gtd add' command, with few exceptions:<br><br>1 At first place, you must pass task or tasks numbers. If you update many task, than it must be a comma separated<br>  list, like this one: 1,5,3<br>2 If you don't want to change title, priority or tags, just pass minus symbol instead of them.<br>3 With 'update' command for add or remove tags. To add a new tag, just pass it's name as usual. To remove,<br>  add a prefix -.<br><br>Ok, it's all. Have a fun and build your own tagged GTD workflow.<br><br>Configuration<br>-------------<br><br>You can specify some configuration options through 'config' file.<br><br>By default, 'gtd' searches options in ~/.gtdrc file, but for can specify<br>another location, using command line argument --config.<br><br>Here is default config with some comments:<br><br>    [gtd]<br>    # Path to database<br>    database = ~/.gtd/todo.sqlite<br>    <br>    # Enable or disable daily backups<br>    backup = false<br>    <br>    # Where to place backup<br>    backup_dir = ~/.gtd/backups<br><br>TODO<br>----<br><br>* automatic database migrations.<br>* bash/zsh autocomplete.<br>* task annotations.<br>* import/export to/from some XML format.<br><br>License<br>-------<br><br>This code is licensed under the New BSD License. See more details in the LICENSE file.<br><br>Contacts<br>--------<br><br>My name is Alexander Artemenko. Feel free to contact me by email or jabber: svetlyak.40wt@gmail.com.<br><br>Also, you can clone [this project at GitHub][at-github] and send me patches.<br><br><br>[gtd]: http://en.wikipedia.org/wiki/GTD<br>[at-github]: http://github.com/svetlyak40wt/gtdzen/\n          </div>"}, "last_serial": 749153, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d7f7b2b37da6e700af20339ed3fa4256", "sha256": "07fd7c7eef38e04761ab690ec482d8e9af1eaf344f8ec6e384284794badfacac"}, "downloads": -1, "filename": "gtdzen-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d7f7b2b37da6e700af20339ed3fa4256", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4432, "upload_time": "2009-02-13T07:57:55", "upload_time_iso_8601": "2009-02-13T07:57:55.144106Z", "url": "https://files.pythonhosted.org/packages/89/be/a9c6fb271509ee795948a8ed73416d2cb92c0b42a78945990743f39563e4/gtdzen-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "838c16abbee287ce2e50efd5c55a7daa", "sha256": "c9f7d4743ecc46a51233a4b9218dd32311d224a5c3f5e56ca7ba9b80225a6db0"}, "downloads": -1, "filename": "gtdzen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "838c16abbee287ce2e50efd5c55a7daa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4829, "upload_time": "2009-02-14T19:05:57", "upload_time_iso_8601": "2009-02-14T19:05:57.282334Z", "url": "https://files.pythonhosted.org/packages/f4/61/4be88c1a4b391acafee5aa15c1b8afb4c81340383ef41b2c2e0b67f32c69/gtdzen-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3620e71005751bedc46a67b8fc86af6a", "sha256": "f1c1a1f148c7156f239af3ab32c3427239a9e19f95a46d8fde73936711afa068"}, "downloads": -1, "filename": "gtdzen-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3620e71005751bedc46a67b8fc86af6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9267, "upload_time": "2009-06-24T13:25:48", "upload_time_iso_8601": "2009-06-24T13:25:48.975229Z", "url": "https://files.pythonhosted.org/packages/99/12/8270581ab1e76830b4ac9561c3691667a670ac056de43f8421aaa7611c59/gtdzen-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "55a08e430fb1918c873b80a7f57a6611", "sha256": "855683ed9b69ed7d8d50841273968ff0b070c2e752a7c56322b05caf8b45a50f"}, "downloads": -1, "filename": "gtdzen-0.1.3.tar.gz", "has_sig": false, "md5_digest": "55a08e430fb1918c873b80a7f57a6611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9536, "upload_time": "2009-06-24T14:14:20", "upload_time_iso_8601": "2009-06-24T14:14:20.245278Z", "url": "https://files.pythonhosted.org/packages/b0/e1/e6010a59f09b33345d6a5ccc1b07600501eeb8e65e9599e4e9fe9a822f3d/gtdzen-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "55a08e430fb1918c873b80a7f57a6611", "sha256": "855683ed9b69ed7d8d50841273968ff0b070c2e752a7c56322b05caf8b45a50f"}, "downloads": -1, "filename": "gtdzen-0.1.3.tar.gz", "has_sig": false, "md5_digest": "55a08e430fb1918c873b80a7f57a6611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9536, "upload_time": "2009-06-24T14:14:20", "upload_time_iso_8601": "2009-06-24T14:14:20.245278Z", "url": "https://files.pythonhosted.org/packages/b0/e1/e6010a59f09b33345d6a5ccc1b07600501eeb8e65e9599e4e9fe9a822f3d/gtdzen-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:33 2020"}