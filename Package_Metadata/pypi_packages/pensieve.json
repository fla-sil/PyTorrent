{"info": {"author": "Idin", "author_email": "py@idin.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# *Pensieve*\n*Pensieve* is a Python library for organizing objects and dependencies in a graph structure.\n\n\"*One simply siphons the excess thoughts from one's mind, pours them into the basin, and examines them at one's leisure. It becomes easier to spot patterns and links, you understand, when they are in this form.*\"</br>\n&mdash;**Albus Dumbledore** (Harry Potter and the Goblet of Fire by J. K. Rowling)  \n<p align=\"center\">\n  <img src=\"http://idin.ca/storage/python/pensieve/images/pensieve_600.jpg\"/>\n</p>\n\n## Pensieve for Data\n\nIn [J. K. Rowling](https://en.wikipedia.org/wiki/J._K._Rowling)'s [words](https://en.wikipedia.org/wiki/Magical_objects_in_Harry_Potter#Pensieve): \n\"*a witch or wizard can **extract** their own or another's memories, **store** them in the [Pensieve](https://en.wikipedia.org/wiki/Magical_objects_in_Harry_Potter#Pensieve), \nand **review** them later. It also **relieves the mind** when it becomes cluttered with information. \nAnyone can **examine** the memories in the Pensieve, which also allows viewers to fully immerse \nthemselves in the memories*\". \n\nDealing with data during data wrangling and model generation in data science is like dealing with memories \nexcept that there is a lot more of back and forth and iteration when dealing with data. \nYou constantly update parameters of your models, improve your data wrangling, \nand make changes to the ways you visualize or store data. \nAs with most processes in data science, each step along the way may take a long time to finish\nwhich forces you to avoid rerunning everything from scratch; this approach is very error-prone as some \nof the processes depend on others. To solve this problem I came up with the idea of a *Computation Graph* \nwhere the nodes represent data objects and the direction of edges indicate the dependency between them. \n\nAfter using Pensieve for some time myself, I have found it to be beneficial in several ways:\n* error reduction, especially for data wrangling and model creation\n* data object organization\n* easy transfer of data\n* coherent data processing and data pipelines\n* data and model reproducibility\n* parallel processing\n* performance and cost analysis in terms of computation time and memory usage\n* graphical visualization of data and processes\n* most important of all: **relieving the mind**\n\nUsing pensieve is similar to using a dictionary:\n\n```python\nfrom pensieve import Pensieve\nfrom math import pi\n\n# initiate a pensieve\npensieve = Pensieve()\n\n# store a \"memory\" (with 1 as its content) \npensieve['radius'] = 5\n\n# create a new memory made up of a precursor memory\n# it is as easy as passing a defined function or a lambda to pensieve\npensieve['circumference'] = lambda radius: 2 * pi * radius\nprint(pensieve['circumference'])\n```\noutputs:\n\n`31.41592653589793`\n\nChanging the radius, in this example, will affect the circumference \nbut it is only calculated when needed:\n```python\npensieve['radius'] = 6\nprint(pensieve['circumference'])\n```\noutputs \n\n`37.69911184307752`\n\n\n## Installation\n```bash\npip install pensieve\n```\n\n## Usage\nPensieve stores *memories* and *functions* that define the relationship between memories.\n\n\n\n## Concepts\n\n### Memory\nA `Pensieve` is a *computation graph* where the nodes hold values and edges \nshow dependency between nodes. Each node is called a `Memory`.\n\nEvery *memory* has two important attributes:\n- `key`: the name of the memory which should be identical\n- `content`: the object the memory holds\n\nSome memories have two other attributes:\n- `precursors`: other memories a memory depends on\n- `function`: a function that defines the relationship between a memory\nand its precursors\n\nThere are two types of memories:\n- *independent* memories (without precursors)\n- *dependent* memories (with precursors)\n\n### Storing a Memory\nAs explained above, you can work with pensieve similar to how you use a\ndictionary. Adding a new item, *i.e.*, a memory and its content, to pensieve is\ncalled *storing*. In fact the `Pensieve` class has a `store` method which \ncan be used for storing new memories. However, we only use it for advanced\nfunctionality. We do not use it as frequently because a new simpler notation \nintroduced since version 2 makes working pensieve much more coherent. \nWe will explain the `store` method and its notation in the *Advanced Usage* section.\n\n### Retrieving a Memory\nRetrieving the content of a memory is like getting an item from a dictionary.\n\n```python\nprint(pensieve['circumference'])\n```\n\n### Independent Memories\nAn independent memory is like a root node in pensieve. It holds an object and\nit does not depend on any other memory.\n\n```python\nfrom pensieve import Pensieve\n\npensieve = Pensieve()\n\npensieve['text'] = 'Hello World!'\npensieve['number'] = 1\npensieve['list_of_numbers'] = [1, 3, 2]\n```\nIn the above example, *text*, *number*, and *list* are the names of three \nindependent memories and their contents are \nthe string `'Hello World'`, \nthe integer `1`, \nand a list consisting of three integers.\n\n### Dependent Memories and Precursors\nA dependent memory is created from running a *function* on other dependent or\nindependent memories as the function's arguments. We call those memories, *precursors*;\n*i.e.*, if a memory depends on another memory, the former is a *dependent* memory \nand the latter is its *precursor*.\n\nThe easiest way to define a dependent memory is by passing a function to pensieve\nwhose arguments match the names of precursors.\n\n```python\ndef print_and_return_first_word(text):\n    words = text.split()\n    print(words[0])\n    return words[0]\n\npensieve['first_word'] = print_and_return_first_word\n```\nIn the above example, the `print_and_return_first_word` function accepts one argument:\n`text` which is the name of the precursor.\n\nYou can also use a lambda, when possible, to define a dependent memory.\n\n```python\npensieve['sorted_list'] = lambda list_of_numbers: sorted(list_of_numbers)\n```\n\n### Successors\nMemories that depend on a memory are its *successors*. If a precursor is like a \nparent, a successor is like a child. \n\nIn the above example, `sorted_list` is a successor of `list_of_numbers`.\n\n### Staleness\nIf one or more precursors of a memory change, the memory and all its successors becomes *stale*. \nA stale memory is only refreshed when needed and if after calculation, it is found out\nthat the content has not changed, the successors go back to being up-to-date, but if \nthe content has in fact changed, the stay stale and will be updated when needed.\n\n**Note**: if a memory is stale, retrieving its content will update it.\n\n## Visualization\n\n```python\nfrom pensieve import Pensieve\nfrom pandas import DataFrame, concat\nfrom numpy.random import randint, seed\n\n# set seed for the randint function\nseed(17)\n\n# set up a pensieve with a top-bottom (tb) representation\n# the top-bottom graph_direction is purely aesthetic\n# you can also use lr for left to right or rl for right to left or bottom-top\npensieve = Pensieve(graph_direction='tb')\n\n# choose the number of columns for two dataframes\npensieve['number_of_columns'] = 9\n\n# create generic names for the columns, in this case x_1, x_2, ...\npensieve['column_names'] = lambda number_of_columns: [\n    f'x_{i + 1}' for i in range(number_of_columns)\n]\n\n# choose the range of random values, and store them as a dictionary \npensieve['value_range'] = {'low': 1, 'high': 5}\n\n# define a function that creates a dataframe with the above parameters\ndef create_dataframe(column_names, value_range, number_of_rows):\n    return DataFrame({\n        column: randint(\n            low=value_range['low'], \n            high=value_range['high'], \n            size=number_of_rows\n        )\n        for column in column_names\n    })\n\n# create the first dataframe\npensieve['data_1'] = lambda column_names, value_range: create_dataframe(\n    column_names=column_names, value_range=value_range, number_of_rows=5\n)\n\n# create the second dataframe\npensieve['data_2'] = lambda column_names, value_range: create_dataframe(\n    column_names=column_names, value_range=value_range, number_of_rows=3\n)\n\n# concatenate the two dataframes\npensieve['data_1_and_2'] = lambda data_1, data_2: concat(\n    objs=[data_1, data_2], \n    sort=False\n)\n\n# choose a coefficient for a future multiplication\npensieve['coefficient'] = 5\n\n# define a function that sums all the values in each row and \n# multiplies the result by the coefficient\ndef sum_and_multiply(data_1_and_2, coefficient):\n    data = data_1_and_2.copy()\n    data['summation'] = data.apply(sum, axis=1)\n    data['coefficient'] = coefficient\n    data['y'] = data['summation'] * data['coefficient']\n    return data\n\n# get the result of the sum_and_multiply function\npensieve['result'] = sum_and_multiply\n\n# display the pensieve\ndisplay(pensieve) \n# or simply pensieve at the end of a jupyter notebook cell\n```\n\n<p align=\"center\">\n  <img \n    src=\"http://idin.ca/storage/python/pensieve/images/pensieve_visualization.png\"\n    width=60%\n  />\n</p>\n\n\n\n## Advanced Usage\n\n### Parallel Processing\n```python\nfrom pensieve import Pensieve\nfrom time import sleep\nfrom datetime import datetime\n\n# as in other libraries, num_threads=-1 means \n# using as many threads as available\n\nstart_time = datetime.now()\npensieve = Pensieve(num_threads=-1, evaluate=False)\n\npensieve['x'] = 1\npensieve['y'] = 10\npensieve['z'] = 2\npensieve['w'] = 20\n\ndef add_with_delay(x, y):\n    print(f'adding {x} and {y}, slowly, at {datetime.now()}')\n    sleep(1)\n    return x + y\n\npensieve['x_plus_y'] = add_with_delay\npensieve['z_plus_w'] = lambda z, w: add_with_delay(x=z, y=w)\n# we had to use a lambda for this one because the arguments\n# of the add_with_delay function are different\n\npensieve['all_the_four'] = lambda x_plus_y, z_plus_w: add_with_delay(x=x_plus_y, y=z_plus_w)\nelapsed = datetime.now() - start_time\nprint('Nothing has been calculated yet. Elapsed time:', elapsed)\n\nprint('Getting all_the_four forces the calculation of everything')\n\nstart_time = datetime.now()\nprint('Result of adding the four numbers:', pensieve['all_the_four'])\nelapsed = datetime.now() - start_time\nprint('Elapsed time:', elapsed)\n```\nThe above code produces the following output:\n```\nNothing has been calculated yet. Elapsed time: 0:00:00.000716\nGetting all_the_four forces the calculation of everything\nadding 2 and 20, slowly, at 2019-12-15 21:33:55.063888\nadding 1 and 10, slowly, at 2019-12-15 21:33:55.064526\nadding 11 and 22, slowly, at 2019-12-15 21:33:56.188258\nResult of adding the four numbers: 33\nElapsed time: 0:00:02.341677\n```\nTwo of the calculations were executed in parallel: `x + y` and `z + w`. \nWith an overhead of `0.34` seconds, the three calculations took `2.34` seconds.\n\nLet's see what happens if we do it the ordinary way:\n```python\nstart_time = datetime.now()\nx = 1\ny = 10\nz = 2\nw = 20\nx_plus_y = add_with_delay(x, y)\nz_plus_w = add_with_delay(z, w)\nall_the_four = add_with_delay(x_plus_y, z_plus_w)\nprint('Result of adding the four numbers:', all_the_four)\nelapsed = datetime.now() - start_time\nprint('Elapsed time:', elapsed)\n```\nThis time the following output is produced:\n```\nadding 1 and 10, slowly, at 2019-12-15 21:38:11.618910\nadding 2 and 20, slowly, at 2019-12-15 21:38:12.620105\nadding 11 and 22, slowly, at 2019-12-15 21:38:13.625195\nResult of adding the four numbers: 33\nElapsed time: 0:00:03.011291\n```\nWith an overhead of `0.01` seconds, the three calculations \nran one after the other and took `3.01` seconds.\n\n### The `store` Method\n***TBD***\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idin/pensieve", "keywords": "graph computation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pensieve", "package_url": "https://pypi.org/project/pensieve/", "platform": "", "project_url": "https://pypi.org/project/pensieve/", "project_urls": {"Homepage": "https://github.com/idin/pensieve"}, "release_url": "https://pypi.org/project/pensieve/2020.4.28.3/", "requires_dist": ["dill", "toposort", "disk", "slytherin", "chronometry", "abstract", "joblib", "pandas"], "requires_python": "~=3.6", "summary": "Python library for organizing objects and dependencies in a graph structure", "version": "2020.4.28.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><em>Pensieve</em></h1>\n<p><em>Pensieve</em> is a Python library for organizing objects and dependencies in a graph structure.</p>\n<p>\"<em>One simply siphons the excess thoughts from one's mind, pours them into the basin, and examines them at one's leisure. It becomes easier to spot patterns and links, you understand, when they are in this form.</em>\"<br>\n\u2014<strong>Albus Dumbledore</strong> (Harry Potter and the Goblet of Fire by J. K. Rowling)</p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/401a3e0c44f6083540742cf5ac39984ce36f2671/687474703a2f2f6964696e2e63612f73746f726167652f707974686f6e2f70656e73696576652f696d616765732f70656e73696576655f3630302e6a7067\">\n</p>\n<h2>Pensieve for Data</h2>\n<p>In <a href=\"https://en.wikipedia.org/wiki/J._K._Rowling\" rel=\"nofollow\">J. K. Rowling</a>'s <a href=\"https://en.wikipedia.org/wiki/Magical_objects_in_Harry_Potter#Pensieve\" rel=\"nofollow\">words</a>:\n\"<em>a witch or wizard can <strong>extract</strong> their own or another's memories, <strong>store</strong> them in the <a href=\"https://en.wikipedia.org/wiki/Magical_objects_in_Harry_Potter#Pensieve\" rel=\"nofollow\">Pensieve</a>,\nand <strong>review</strong> them later. It also <strong>relieves the mind</strong> when it becomes cluttered with information.\nAnyone can <strong>examine</strong> the memories in the Pensieve, which also allows viewers to fully immerse\nthemselves in the memories</em>\".</p>\n<p>Dealing with data during data wrangling and model generation in data science is like dealing with memories\nexcept that there is a lot more of back and forth and iteration when dealing with data.\nYou constantly update parameters of your models, improve your data wrangling,\nand make changes to the ways you visualize or store data.\nAs with most processes in data science, each step along the way may take a long time to finish\nwhich forces you to avoid rerunning everything from scratch; this approach is very error-prone as some\nof the processes depend on others. To solve this problem I came up with the idea of a <em>Computation Graph</em>\nwhere the nodes represent data objects and the direction of edges indicate the dependency between them.</p>\n<p>After using Pensieve for some time myself, I have found it to be beneficial in several ways:</p>\n<ul>\n<li>error reduction, especially for data wrangling and model creation</li>\n<li>data object organization</li>\n<li>easy transfer of data</li>\n<li>coherent data processing and data pipelines</li>\n<li>data and model reproducibility</li>\n<li>parallel processing</li>\n<li>performance and cost analysis in terms of computation time and memory usage</li>\n<li>graphical visualization of data and processes</li>\n<li>most important of all: <strong>relieving the mind</strong></li>\n</ul>\n<p>Using pensieve is similar to using a dictionary:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pensieve</span> <span class=\"kn\">import</span> <span class=\"n\">Pensieve</span>\n<span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">pi</span>\n\n<span class=\"c1\"># initiate a pensieve</span>\n<span class=\"n\">pensieve</span> <span class=\"o\">=</span> <span class=\"n\">Pensieve</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># store a \"memory\" (with 1 as its content) </span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'radius'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n\n<span class=\"c1\"># create a new memory made up of a precursor memory</span>\n<span class=\"c1\"># it is as easy as passing a defined function or a lambda to pensieve</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'circumference'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">radius</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'circumference'</span><span class=\"p\">])</span>\n</pre>\n<p>outputs:</p>\n<p><code>31.41592653589793</code></p>\n<p>Changing the radius, in this example, will affect the circumference\nbut it is only calculated when needed:</p>\n<pre><span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'radius'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'circumference'</span><span class=\"p\">])</span>\n</pre>\n<p>outputs</p>\n<p><code>37.69911184307752</code></p>\n<h2>Installation</h2>\n<pre>pip install pensieve\n</pre>\n<h2>Usage</h2>\n<p>Pensieve stores <em>memories</em> and <em>functions</em> that define the relationship between memories.</p>\n<h2>Concepts</h2>\n<h3>Memory</h3>\n<p>A <code>Pensieve</code> is a <em>computation graph</em> where the nodes hold values and edges\nshow dependency between nodes. Each node is called a <code>Memory</code>.</p>\n<p>Every <em>memory</em> has two important attributes:</p>\n<ul>\n<li><code>key</code>: the name of the memory which should be identical</li>\n<li><code>content</code>: the object the memory holds</li>\n</ul>\n<p>Some memories have two other attributes:</p>\n<ul>\n<li><code>precursors</code>: other memories a memory depends on</li>\n<li><code>function</code>: a function that defines the relationship between a memory\nand its precursors</li>\n</ul>\n<p>There are two types of memories:</p>\n<ul>\n<li><em>independent</em> memories (without precursors)</li>\n<li><em>dependent</em> memories (with precursors)</li>\n</ul>\n<h3>Storing a Memory</h3>\n<p>As explained above, you can work with pensieve similar to how you use a\ndictionary. Adding a new item, <em>i.e.</em>, a memory and its content, to pensieve is\ncalled <em>storing</em>. In fact the <code>Pensieve</code> class has a <code>store</code> method which\ncan be used for storing new memories. However, we only use it for advanced\nfunctionality. We do not use it as frequently because a new simpler notation\nintroduced since version 2 makes working pensieve much more coherent.\nWe will explain the <code>store</code> method and its notation in the <em>Advanced Usage</em> section.</p>\n<h3>Retrieving a Memory</h3>\n<p>Retrieving the content of a memory is like getting an item from a dictionary.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'circumference'</span><span class=\"p\">])</span>\n</pre>\n<h3>Independent Memories</h3>\n<p>An independent memory is like a root node in pensieve. It holds an object and\nit does not depend on any other memory.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pensieve</span> <span class=\"kn\">import</span> <span class=\"n\">Pensieve</span>\n\n<span class=\"n\">pensieve</span> <span class=\"o\">=</span> <span class=\"n\">Pensieve</span><span class=\"p\">()</span>\n\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'text'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Hello World!'</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'number'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'list_of_numbers'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n</pre>\n<p>In the above example, <em>text</em>, <em>number</em>, and <em>list</em> are the names of three\nindependent memories and their contents are\nthe string <code>'Hello World'</code>,\nthe integer <code>1</code>,\nand a list consisting of three integers.</p>\n<h3>Dependent Memories and Precursors</h3>\n<p>A dependent memory is created from running a <em>function</em> on other dependent or\nindependent memories as the function's arguments. We call those memories, <em>precursors</em>;\n<em>i.e.</em>, if a memory depends on another memory, the former is a <em>dependent</em> memory\nand the latter is its <em>precursor</em>.</p>\n<p>The easiest way to define a dependent memory is by passing a function to pensieve\nwhose arguments match the names of precursors.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">print_and_return_first_word</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n    <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">words</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'first_word'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">print_and_return_first_word</span>\n</pre>\n<p>In the above example, the <code>print_and_return_first_word</code> function accepts one argument:\n<code>text</code> which is the name of the precursor.</p>\n<p>You can also use a lambda, when possible, to define a dependent memory.</p>\n<pre><span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'sorted_list'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">list_of_numbers</span><span class=\"p\">:</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">list_of_numbers</span><span class=\"p\">)</span>\n</pre>\n<h3>Successors</h3>\n<p>Memories that depend on a memory are its <em>successors</em>. If a precursor is like a\nparent, a successor is like a child.</p>\n<p>In the above example, <code>sorted_list</code> is a successor of <code>list_of_numbers</code>.</p>\n<h3>Staleness</h3>\n<p>If one or more precursors of a memory change, the memory and all its successors becomes <em>stale</em>.\nA stale memory is only refreshed when needed and if after calculation, it is found out\nthat the content has not changed, the successors go back to being up-to-date, but if\nthe content has in fact changed, the stay stale and will be updated when needed.</p>\n<p><strong>Note</strong>: if a memory is stale, retrieving its content will update it.</p>\n<h2>Visualization</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pensieve</span> <span class=\"kn\">import</span> <span class=\"n\">Pensieve</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">concat</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numpy.random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span><span class=\"p\">,</span> <span class=\"n\">seed</span>\n\n<span class=\"c1\"># set seed for the randint function</span>\n<span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">17</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up a pensieve with a top-bottom (tb) representation</span>\n<span class=\"c1\"># the top-bottom graph_direction is purely aesthetic</span>\n<span class=\"c1\"># you can also use lr for left to right or rl for right to left or bottom-top</span>\n<span class=\"n\">pensieve</span> <span class=\"o\">=</span> <span class=\"n\">Pensieve</span><span class=\"p\">(</span><span class=\"n\">graph_direction</span><span class=\"o\">=</span><span class=\"s1\">'tb'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># choose the number of columns for two dataframes</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'number_of_columns'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">9</span>\n\n<span class=\"c1\"># create generic names for the columns, in this case x_1, x_2, ...</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'column_names'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">number_of_columns</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">number_of_columns</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># choose the range of random values, and store them as a dictionary </span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'value_range'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'low'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'high'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># define a function that creates a dataframe with the above parameters</span>\n<span class=\"k\">def</span> <span class=\"nf\">create_dataframe</span><span class=\"p\">(</span><span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"n\">value_range</span><span class=\"p\">,</span> <span class=\"n\">number_of_rows</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n        <span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"n\">randint</span><span class=\"p\">(</span>\n            <span class=\"n\">low</span><span class=\"o\">=</span><span class=\"n\">value_range</span><span class=\"p\">[</span><span class=\"s1\">'low'</span><span class=\"p\">],</span> \n            <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"n\">value_range</span><span class=\"p\">[</span><span class=\"s1\">'high'</span><span class=\"p\">],</span> \n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">number_of_rows</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">column</span> <span class=\"ow\">in</span> <span class=\"n\">column_names</span>\n    <span class=\"p\">})</span>\n\n<span class=\"c1\"># create the first dataframe</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'data_1'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"n\">value_range</span><span class=\"p\">:</span> <span class=\"n\">create_dataframe</span><span class=\"p\">(</span>\n    <span class=\"n\">column_names</span><span class=\"o\">=</span><span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"n\">value_range</span><span class=\"o\">=</span><span class=\"n\">value_range</span><span class=\"p\">,</span> <span class=\"n\">number_of_rows</span><span class=\"o\">=</span><span class=\"mi\">5</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># create the second dataframe</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'data_2'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"n\">value_range</span><span class=\"p\">:</span> <span class=\"n\">create_dataframe</span><span class=\"p\">(</span>\n    <span class=\"n\">column_names</span><span class=\"o\">=</span><span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"n\">value_range</span><span class=\"o\">=</span><span class=\"n\">value_range</span><span class=\"p\">,</span> <span class=\"n\">number_of_rows</span><span class=\"o\">=</span><span class=\"mi\">3</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># concatenate the two dataframes</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'data_1_and_2'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">data_1</span><span class=\"p\">,</span> <span class=\"n\">data_2</span><span class=\"p\">:</span> <span class=\"n\">concat</span><span class=\"p\">(</span>\n    <span class=\"n\">objs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">data_1</span><span class=\"p\">,</span> <span class=\"n\">data_2</span><span class=\"p\">],</span> \n    <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># choose a coefficient for a future multiplication</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'coefficient'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n\n<span class=\"c1\"># define a function that sums all the values in each row and </span>\n<span class=\"c1\"># multiplies the result by the coefficient</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum_and_multiply</span><span class=\"p\">(</span><span class=\"n\">data_1_and_2</span><span class=\"p\">,</span> <span class=\"n\">coefficient</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data_1_and_2</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'summation'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'coefficient'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">coefficient</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'summation'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'coefficient'</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n<span class=\"c1\"># get the result of the sum_and_multiply function</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'result'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sum_and_multiply</span>\n\n<span class=\"c1\"># display the pensieve</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">pensieve</span><span class=\"p\">)</span> \n<span class=\"c1\"># or simply pensieve at the end of a jupyter notebook cell</span>\n</pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fb3edf6dbf109f7c7ccb8199b2e29733e97fc42/687474703a2f2f6964696e2e63612f73746f726167652f707974686f6e2f70656e73696576652f696d616765732f70656e73696576655f76697375616c697a6174696f6e2e706e67\" width=\"60%\">\n</p>\n<h2>Advanced Usage</h2>\n<h3>Parallel Processing</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pensieve</span> <span class=\"kn\">import</span> <span class=\"n\">Pensieve</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"c1\"># as in other libraries, num_threads=-1 means </span>\n<span class=\"c1\"># using as many threads as available</span>\n\n<span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">pensieve</span> <span class=\"o\">=</span> <span class=\"n\">Pensieve</span><span class=\"p\">(</span><span class=\"n\">num_threads</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">evaluate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'x'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'z'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'w'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">add_with_delay</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'adding </span><span class=\"si\">{</span><span class=\"n\">x</span><span class=\"si\">}</span><span class=\"s1\"> and </span><span class=\"si\">{</span><span class=\"n\">y</span><span class=\"si\">}</span><span class=\"s1\">, slowly, at </span><span class=\"si\">{</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'x_plus_y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">add_with_delay</span>\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'z_plus_w'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">add_with_delay</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">w</span><span class=\"p\">)</span>\n<span class=\"c1\"># we had to use a lambda for this one because the arguments</span>\n<span class=\"c1\"># of the add_with_delay function are different</span>\n\n<span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'all_the_four'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x_plus_y</span><span class=\"p\">,</span> <span class=\"n\">z_plus_w</span><span class=\"p\">:</span> <span class=\"n\">add_with_delay</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x_plus_y</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">z_plus_w</span><span class=\"p\">)</span>\n<span class=\"n\">elapsed</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start_time</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Nothing has been calculated yet. Elapsed time:'</span><span class=\"p\">,</span> <span class=\"n\">elapsed</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Getting all_the_four forces the calculation of everything'</span><span class=\"p\">)</span>\n\n<span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Result of adding the four numbers:'</span><span class=\"p\">,</span> <span class=\"n\">pensieve</span><span class=\"p\">[</span><span class=\"s1\">'all_the_four'</span><span class=\"p\">])</span>\n<span class=\"n\">elapsed</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start_time</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Elapsed time:'</span><span class=\"p\">,</span> <span class=\"n\">elapsed</span><span class=\"p\">)</span>\n</pre>\n<p>The above code produces the following output:</p>\n<pre><code>Nothing has been calculated yet. Elapsed time: 0:00:00.000716\nGetting all_the_four forces the calculation of everything\nadding 2 and 20, slowly, at 2019-12-15 21:33:55.063888\nadding 1 and 10, slowly, at 2019-12-15 21:33:55.064526\nadding 11 and 22, slowly, at 2019-12-15 21:33:56.188258\nResult of adding the four numbers: 33\nElapsed time: 0:00:02.341677\n</code></pre>\n<p>Two of the calculations were executed in parallel: <code>x + y</code> and <code>z + w</code>.\nWith an overhead of <code>0.34</code> seconds, the three calculations took <code>2.34</code> seconds.</p>\n<p>Let's see what happens if we do it the ordinary way:</p>\n<pre><span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n<span class=\"n\">x_plus_y</span> <span class=\"o\">=</span> <span class=\"n\">add_with_delay</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">z_plus_w</span> <span class=\"o\">=</span> <span class=\"n\">add_with_delay</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span>\n<span class=\"n\">all_the_four</span> <span class=\"o\">=</span> <span class=\"n\">add_with_delay</span><span class=\"p\">(</span><span class=\"n\">x_plus_y</span><span class=\"p\">,</span> <span class=\"n\">z_plus_w</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Result of adding the four numbers:'</span><span class=\"p\">,</span> <span class=\"n\">all_the_four</span><span class=\"p\">)</span>\n<span class=\"n\">elapsed</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start_time</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Elapsed time:'</span><span class=\"p\">,</span> <span class=\"n\">elapsed</span><span class=\"p\">)</span>\n</pre>\n<p>This time the following output is produced:</p>\n<pre><code>adding 1 and 10, slowly, at 2019-12-15 21:38:11.618910\nadding 2 and 20, slowly, at 2019-12-15 21:38:12.620105\nadding 11 and 22, slowly, at 2019-12-15 21:38:13.625195\nResult of adding the four numbers: 33\nElapsed time: 0:00:03.011291\n</code></pre>\n<p>With an overhead of <code>0.01</code> seconds, the three calculations\nran one after the other and took <code>3.01</code> seconds.</p>\n<h3>The <code>store</code> Method</h3>\n<p><em><strong>TBD</strong></em></p>\n\n          </div>"}, "last_serial": 7124041, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "14c1db619cdafd9e43c21218989d0124", "sha256": "ac25748c589787a56d36dac033517983789000651dae92ba736e2a0ba25f34e4"}, "downloads": -1, "filename": "pensieve-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "14c1db619cdafd9e43c21218989d0124", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 11853, "upload_time": "2019-02-28T01:04:37", "upload_time_iso_8601": "2019-02-28T01:04:37.614479Z", "url": "https://files.pythonhosted.org/packages/e8/44/0626389936d11d2fcecc792dc642be52bfb181e4a20765d37b2aa6d9b4ee/pensieve-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9874507c672893c37f24af8f7110846f", "sha256": "c3e98130c1fc1f554b07139f71f9f2d853d300b0b01a40724d909bd578eebb86"}, "downloads": -1, "filename": "pensieve-2.0.0.tar.gz", "has_sig": false, "md5_digest": "9874507c672893c37f24af8f7110846f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 7927, "upload_time": "2019-02-28T01:04:39", "upload_time_iso_8601": "2019-02-28T01:04:39.684307Z", "url": "https://files.pythonhosted.org/packages/fa/57/946444b508fbe67b3a2c3e39f6ef13e2f9b144a6ea5cb44a640072272a2f/pensieve-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "fb40d4f95cbdc2c346f1724957dbaf1e", "sha256": "99047419b61eb24b112e116cac2e890ec7eb46fac83cbdacd2d33527eb3879fa"}, "downloads": -1, "filename": "pensieve-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb40d4f95cbdc2c346f1724957dbaf1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 11831, "upload_time": "2019-03-01T19:21:06", "upload_time_iso_8601": "2019-03-01T19:21:06.912665Z", "url": "https://files.pythonhosted.org/packages/4d/cc/4bb9fb19856ca2927ae937151a254116faee792ce9972c4ee8d5d8ab0027/pensieve-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5dd2800ec0cc221e87f513b014995329", "sha256": "e1e41a1e6d8951141de1e0e671829d239e1632e42584a82957f72ba11516c5d6"}, "downloads": -1, "filename": "pensieve-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5dd2800ec0cc221e87f513b014995329", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 7923, "upload_time": "2019-03-01T19:21:08", "upload_time_iso_8601": "2019-03-01T19:21:08.504019Z", "url": "https://files.pythonhosted.org/packages/ed/15/14d1494595cd8925f8afa8afea7abc1be559da68866dba5a228e817da0f1/pensieve-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "3bfebdd999842e84e7cd6251798a15ea", "sha256": "ab15bf97c62347aedb0f7da72e8ee007574459d3f5c5def5df5df8bc3bb91953"}, "downloads": -1, "filename": "pensieve-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3bfebdd999842e84e7cd6251798a15ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 10624, "upload_time": "2019-03-22T00:17:14", "upload_time_iso_8601": "2019-03-22T00:17:14.768372Z", "url": "https://files.pythonhosted.org/packages/77/30/866c86841b9f165c56f251935eeb824764a3cd2528be3654fa8bda586d42/pensieve-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcea4bf2b4197ace5fe41314558c8a29", "sha256": "ae7a6bba6e6b86b6b95550d680a8cdb477033d7432de140096dd3109680c7208"}, "downloads": -1, "filename": "pensieve-2.0.2.tar.gz", "has_sig": false, "md5_digest": "dcea4bf2b4197ace5fe41314558c8a29", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 8840, "upload_time": "2019-03-22T00:17:15", "upload_time_iso_8601": "2019-03-22T00:17:15.981602Z", "url": "https://files.pythonhosted.org/packages/1d/50/837f35b68a6b6d9430480fce7cf22f6ea0f194d39a74d956501f5d485d83/pensieve-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "d686b055e45ac0a68536636a8dc71c68", "sha256": "4153c0e6cb8c6a28195b100bef3f8b076c9523d8c408e883b58dd8965ab147ed"}, "downloads": -1, "filename": "pensieve-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d686b055e45ac0a68536636a8dc71c68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 10615, "upload_time": "2019-03-22T00:18:17", "upload_time_iso_8601": "2019-03-22T00:18:17.959855Z", "url": "https://files.pythonhosted.org/packages/56/71/17d2fca10afe66a743c30206b57cdb98fa22b35cfecd764603b929d01e1c/pensieve-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6d7524bd6575bf295e3f59cc8619119", "sha256": "9fd4af006dfcef08c495fe748e76e64ee4bb77a610f91ee60dd002d8402ced2f"}, "downloads": -1, "filename": "pensieve-2.0.3.tar.gz", "has_sig": false, "md5_digest": "b6d7524bd6575bf295e3f59cc8619119", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 8822, "upload_time": "2019-03-22T00:18:19", "upload_time_iso_8601": "2019-03-22T00:18:19.424726Z", "url": "https://files.pythonhosted.org/packages/57/74/fcca109d2c2b33c8918e379e25705a3cb690e23bcf95a76d651ff5fcebaf/pensieve-2.0.3.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "2883c5370907c24c4bc4a45df756de7e", "sha256": "e82caee2fa3fba9c9811912389352dbf76b95742b15901b9f1ed24801f4aabad"}, "downloads": -1, "filename": "pensieve-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2883c5370907c24c4bc4a45df756de7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 10617, "upload_time": "2019-03-22T00:54:21", "upload_time_iso_8601": "2019-03-22T00:54:21.572260Z", "url": "https://files.pythonhosted.org/packages/5f/93/eac112ec195d7dc062240a30afd334bfeab4a7a68e1880d3ee7e67cc8950/pensieve-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0df61f0854e5c8b6d77368fe951986ab", "sha256": "3bfacf858f498d01c2bdfbec88a5a010043ba5c4a1bacfb3044a5d55a7796d3f"}, "downloads": -1, "filename": "pensieve-2.0.5.tar.gz", "has_sig": false, "md5_digest": "0df61f0854e5c8b6d77368fe951986ab", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 8837, "upload_time": "2019-03-22T00:54:22", "upload_time_iso_8601": "2019-03-22T00:54:22.903911Z", "url": "https://files.pythonhosted.org/packages/dc/e6/d29798cfa65bf8fe1b93722a85bbd6dd6781e90dd6cd33d3b7a454f3cf45/pensieve-2.0.5.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "4d2bdc4c20436bdd1f11389fef79a030", "sha256": "e01ed1f0fa53c317fa520c666dd14af60ff865fbe5ddc5fed7551bb02c92712d"}, "downloads": -1, "filename": "pensieve-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d2bdc4c20436bdd1f11389fef79a030", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 11784, "upload_time": "2019-04-22T06:12:20", "upload_time_iso_8601": "2019-04-22T06:12:20.250786Z", "url": "https://files.pythonhosted.org/packages/a0/35/3263786d0755bc1fa5b95c9f3022fcd813492f016184c92f58b2ad56a487/pensieve-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d41d8995dc2ae068b41b1e9428f33a7e", "sha256": "41354d263ff48b237c2e8afedac1986194d5437deeba7e31f036004293ee0a8d"}, "downloads": -1, "filename": "pensieve-2.1.1.tar.gz", "has_sig": false, "md5_digest": "d41d8995dc2ae068b41b1e9428f33a7e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 12435, "upload_time": "2019-04-22T06:12:21", "upload_time_iso_8601": "2019-04-22T06:12:21.489940Z", "url": "https://files.pythonhosted.org/packages/b5/1c/6014a85cb8171fb25337356d3001710d52e5e1a5eb80dde2f091dbd01d62/pensieve-2.1.1.tar.gz", "yanked": false}], "2019.12.28": [{"comment_text": "", "digests": {"md5": "09d5daa77904ce778437aec2e7479c96", "sha256": "b03713d5fd4520840ca077031323b727765482859da5865b0d508f6d875846ae"}, "downloads": -1, "filename": "pensieve-2019.12.28-py3-none-any.whl", "has_sig": false, "md5_digest": "09d5daa77904ce778437aec2e7479c96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23529, "upload_time": "2019-12-29T05:33:01", "upload_time_iso_8601": "2019-12-29T05:33:01.477190Z", "url": "https://files.pythonhosted.org/packages/af/c7/378d71b41f3f2f828161559c3a7df30aecee8d83d703ccc5ec9d76c56c52/pensieve-2019.12.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe7c617a21f9b65c639dca8dd2b1126b", "sha256": "51dafbb33aaa59b55d264744955a60e5caeebd313615f7d448dec83e45a4d35f"}, "downloads": -1, "filename": "pensieve-2019.12.28.tar.gz", "has_sig": false, "md5_digest": "fe7c617a21f9b65c639dca8dd2b1126b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24608, "upload_time": "2019-12-29T05:33:03", "upload_time_iso_8601": "2019-12-29T05:33:03.067247Z", "url": "https://files.pythonhosted.org/packages/13/21/a95fecd96284019b118300af8bda2ce52bfc670471b192cb6d32348c82e6/pensieve-2019.12.28.tar.gz", "yanked": false}], "2019.12.29": [{"comment_text": "", "digests": {"md5": "3eb3b17af5a6bb008623b5a1e475919e", "sha256": "5c6c5ef8544efb53b7f42d3e8bbf5b980cff6e4f9d5009778ffc50e4a7677d60"}, "downloads": -1, "filename": "pensieve-2019.12.29-py3-none-any.whl", "has_sig": false, "md5_digest": "3eb3b17af5a6bb008623b5a1e475919e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23529, "upload_time": "2019-12-30T03:05:11", "upload_time_iso_8601": "2019-12-30T03:05:11.865971Z", "url": "https://files.pythonhosted.org/packages/a5/17/22e0780a081c703398669edee85566125f4b7eaefe8c66191b2cb4c7c070/pensieve-2019.12.29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "018dbc2e5520cbc0c90a59fe21c18915", "sha256": "8b7c862a78e492c18e1e471bcf0e35fc473be4e496cb1835ce23168cbe4eb1f4"}, "downloads": -1, "filename": "pensieve-2019.12.29.tar.gz", "has_sig": false, "md5_digest": "018dbc2e5520cbc0c90a59fe21c18915", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24609, "upload_time": "2019-12-30T03:05:13", "upload_time_iso_8601": "2019-12-30T03:05:13.497712Z", "url": "https://files.pythonhosted.org/packages/f5/1a/4a1fcf05712de29f40a80e15e145133685ba080bf288811dbd42801f72d4/pensieve-2019.12.29.tar.gz", "yanked": false}], "2019.12.29.1": [{"comment_text": "", "digests": {"md5": "c026f71dacb7607cd4b7d8ce04d984d7", "sha256": "762c3be435365de6db8261fb5a9b7908e896f93232a4034b747eebbe3eb4fb24"}, "downloads": -1, "filename": "pensieve-2019.12.29.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c026f71dacb7607cd4b7d8ce04d984d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23556, "upload_time": "2019-12-30T03:06:25", "upload_time_iso_8601": "2019-12-30T03:06:25.845717Z", "url": "https://files.pythonhosted.org/packages/98/8b/31b840687e6ced1538758f0a51794d6b1c97c5580dc7196ac23ab0a1f773/pensieve-2019.12.29.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19555096bd9e9b2d83d7a399721fec0f", "sha256": "3354759914add1f5aa5bf2ddb996aabcf56c6d753fc4060dfc1ceb408651d058"}, "downloads": -1, "filename": "pensieve-2019.12.29.1.tar.gz", "has_sig": false, "md5_digest": "19555096bd9e9b2d83d7a399721fec0f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24614, "upload_time": "2019-12-30T03:06:27", "upload_time_iso_8601": "2019-12-30T03:06:27.377084Z", "url": "https://files.pythonhosted.org/packages/8c/fe/cdb54cb2308c4ba9b09d326c6a45129b556edab6cece363b401429e2d334/pensieve-2019.12.29.1.tar.gz", "yanked": false}], "2019.12.29.2": [{"comment_text": "", "digests": {"md5": "9a3b44f2175e75742114093e248d8a5f", "sha256": "75d3dea4fa0e42d526296ceb94c68a07c8e073ece4c8d7aec7eee959a82505f1"}, "downloads": -1, "filename": "pensieve-2019.12.29.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9a3b44f2175e75742114093e248d8a5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23558, "upload_time": "2019-12-30T03:13:48", "upload_time_iso_8601": "2019-12-30T03:13:48.529665Z", "url": "https://files.pythonhosted.org/packages/1c/21/0535041b04b7b153eea997c6e8fd5f1e8f8bd1c061208f1187d908272cbb/pensieve-2019.12.29.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d868aa7a717c3934fd3bb50331396123", "sha256": "d6856a85c6118e9e3c0a194f2b051890c1c3eaf3c8fcd85cb74b0a9657f10b7e"}, "downloads": -1, "filename": "pensieve-2019.12.29.2.tar.gz", "has_sig": false, "md5_digest": "d868aa7a717c3934fd3bb50331396123", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24619, "upload_time": "2019-12-30T03:13:49", "upload_time_iso_8601": "2019-12-30T03:13:49.921467Z", "url": "https://files.pythonhosted.org/packages/0c/ca/497ff9e5c0115015d38fa35155380875ec18940464ad1763c4b88e2d7f32/pensieve-2019.12.29.2.tar.gz", "yanked": false}], "2019.12.29.3": [{"comment_text": "", "digests": {"md5": "8efcc943cb22f6a16b9e8a12d6687106", "sha256": "12724b26614228e260f13a2fee52dacae3189af33ec18f5bd5c49ac43fe552a4"}, "downloads": -1, "filename": "pensieve-2019.12.29.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8efcc943cb22f6a16b9e8a12d6687106", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23556, "upload_time": "2019-12-30T03:15:06", "upload_time_iso_8601": "2019-12-30T03:15:06.719052Z", "url": "https://files.pythonhosted.org/packages/e8/0e/d674184cee18fb091caa4691b4c57caa357fecbc18d7394d2ac5c040b57e/pensieve-2019.12.29.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12849e613d27cfa780754bc2a0c25bee", "sha256": "2c963349f51c92eeaafbcb5ce58a6de0791264534326b106cf3607e0506f89dc"}, "downloads": -1, "filename": "pensieve-2019.12.29.3.tar.gz", "has_sig": false, "md5_digest": "12849e613d27cfa780754bc2a0c25bee", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24612, "upload_time": "2019-12-30T03:15:08", "upload_time_iso_8601": "2019-12-30T03:15:08.298619Z", "url": "https://files.pythonhosted.org/packages/b1/a9/573cff0ba74fad27c6a172edf5e69a1f28a9dd3f9b606539aa78d91e468c/pensieve-2019.12.29.3.tar.gz", "yanked": false}], "2019.12.29.4": [{"comment_text": "", "digests": {"md5": "261418cca17b2d36a071b23c7fd5a121", "sha256": "16e6639454359787f32130fb63d6fc846c653c4c158f1234bff1bbe1108649c2"}, "downloads": -1, "filename": "pensieve-2019.12.29.4-py3-none-any.whl", "has_sig": false, "md5_digest": "261418cca17b2d36a071b23c7fd5a121", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23557, "upload_time": "2019-12-30T03:34:46", "upload_time_iso_8601": "2019-12-30T03:34:46.416570Z", "url": "https://files.pythonhosted.org/packages/84/47/bda6e0902cfbf1c79c4d179a4fee93dd04fe2d7228ee43793d4811a1743d/pensieve-2019.12.29.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "832eacb273ea1f78dec9aadf439ac418", "sha256": "ce9124c2263cfafb470fa0ba608de48d2f5492d7ddc332f411abf4035fa67899"}, "downloads": -1, "filename": "pensieve-2019.12.29.4.tar.gz", "has_sig": false, "md5_digest": "832eacb273ea1f78dec9aadf439ac418", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24613, "upload_time": "2019-12-30T03:34:48", "upload_time_iso_8601": "2019-12-30T03:34:48.115981Z", "url": "https://files.pythonhosted.org/packages/a7/b1/2a6f7331897707ed0001c13b1136a49af9e5c4532fb467dde2b2044bb478/pensieve-2019.12.29.4.tar.gz", "yanked": false}], "2020.1.5": [{"comment_text": "", "digests": {"md5": "c86518f3476bb306b7daeba964b6c66a", "sha256": "a1f375bc2f50d7fd2d50b7b2ff8ccd989a97dbea4e87964e1e4a21a4e308777f"}, "downloads": -1, "filename": "pensieve-2020.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c86518f3476bb306b7daeba964b6c66a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23497, "upload_time": "2020-01-05T22:38:46", "upload_time_iso_8601": "2020-01-05T22:38:46.458981Z", "url": "https://files.pythonhosted.org/packages/df/de/f89dce3c9c22d0853c6ed4af59c0018cef91bc2b34efd5e818103d3d411a/pensieve-2020.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07bc134ad89659ceb38a73ae6ce59675", "sha256": "2ab1199feefd810ecf57a069aea5acbc943bfb7ebd46a8db39cf7e056b702e18"}, "downloads": -1, "filename": "pensieve-2020.1.5.tar.gz", "has_sig": false, "md5_digest": "07bc134ad89659ceb38a73ae6ce59675", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24592, "upload_time": "2020-01-05T22:38:47", "upload_time_iso_8601": "2020-01-05T22:38:47.833087Z", "url": "https://files.pythonhosted.org/packages/d9/46/3be6639d66cd5ea5cf0df7e16287b91b7ea67cae440d98648923247f264b/pensieve-2020.1.5.tar.gz", "yanked": false}], "2020.1.6": [{"comment_text": "", "digests": {"md5": "86f85869b372d5509d16e61556744c3b", "sha256": "718d29895b1e59d25a3e1a495e49990421e765fee4e54efbd894db9cb3072b69"}, "downloads": -1, "filename": "pensieve-2020.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "86f85869b372d5509d16e61556744c3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23499, "upload_time": "2020-01-06T08:36:13", "upload_time_iso_8601": "2020-01-06T08:36:13.163820Z", "url": "https://files.pythonhosted.org/packages/4b/64/5770443b52c72fae0c53b0db9cd2fa022b8712851e7389e4e80670f77c8b/pensieve-2020.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d2468f33026a44f6de0678c624d02bf", "sha256": "ecd59a635bd242b4e3e86c62d182404f63dfe2a9b9771c1b7bcdb0a862fde5f5"}, "downloads": -1, "filename": "pensieve-2020.1.6.tar.gz", "has_sig": false, "md5_digest": "9d2468f33026a44f6de0678c624d02bf", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24591, "upload_time": "2020-01-06T08:36:14", "upload_time_iso_8601": "2020-01-06T08:36:14.666595Z", "url": "https://files.pythonhosted.org/packages/6d/4d/e5b801a79cb03368ca8df6b28bc53c3177eb4071850bce75191290e9a502/pensieve-2020.1.6.tar.gz", "yanked": false}], "2020.3.23": [{"comment_text": "", "digests": {"md5": "5dc1ec687b23be1d7971a13c61de7f12", "sha256": "f711a05dd87f7396300e80673678e3557e4a013ee37547e150e1934571d7b8d5"}, "downloads": -1, "filename": "pensieve-2020.3.23-py3-none-any.whl", "has_sig": false, "md5_digest": "5dc1ec687b23be1d7971a13c61de7f12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23062, "upload_time": "2020-03-24T00:47:30", "upload_time_iso_8601": "2020-03-24T00:47:30.154426Z", "url": "https://files.pythonhosted.org/packages/44/ad/c0dd96f325831c509fe26016045a83fccd40de6e64b2d0118198d4ab156e/pensieve-2020.3.23-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "432c4b208fbde2a25674dc6d975bd93c", "sha256": "aa4c530f815a9f40e4ff21257ed18c27666914835d99e373ec28418c0d91978e"}, "downloads": -1, "filename": "pensieve-2020.3.23.tar.gz", "has_sig": false, "md5_digest": "432c4b208fbde2a25674dc6d975bd93c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24860, "upload_time": "2020-03-24T00:47:31", "upload_time_iso_8601": "2020-03-24T00:47:31.412723Z", "url": "https://files.pythonhosted.org/packages/04/cf/e6e173fa7b9cc8762b2b8e65339cbddb31db52c0f84ed9e1afd846edcada/pensieve-2020.3.23.tar.gz", "yanked": false}], "2020.3.23.1": [{"comment_text": "", "digests": {"md5": "7d8694eb51bff5b7d071bb8a25cd1d19", "sha256": "28c188b93f356af133f7a97677244a27c2d04f8481aa31f416d4600b282906bb"}, "downloads": -1, "filename": "pensieve-2020.3.23.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7d8694eb51bff5b7d071bb8a25cd1d19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23085, "upload_time": "2020-03-24T05:47:51", "upload_time_iso_8601": "2020-03-24T05:47:51.781165Z", "url": "https://files.pythonhosted.org/packages/75/66/2e7c192666d89410d1d5f352ae595b4dc740b6cc3f3a827cea8b0f93ed24/pensieve-2020.3.23.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8a53931aea5bd979fcca11d1d479b72", "sha256": "d761178aef49a794c257b4ef4aba6870d23483bab0c45c5ce2749878d66c7c0e"}, "downloads": -1, "filename": "pensieve-2020.3.23.1.tar.gz", "has_sig": false, "md5_digest": "f8a53931aea5bd979fcca11d1d479b72", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24871, "upload_time": "2020-03-24T05:47:54", "upload_time_iso_8601": "2020-03-24T05:47:54.736927Z", "url": "https://files.pythonhosted.org/packages/53/f2/43372234b730abb81c433708293a308c2d856207982a3b91d5977dcaa16a/pensieve-2020.3.23.1.tar.gz", "yanked": false}], "2020.3.23.2": [{"comment_text": "", "digests": {"md5": "4e84d179b05a30bbd30bf3a6c83c3d8d", "sha256": "427ee41560d3e434a67b1bb6a5ef0e54ce3670ed5eae4761a4c844a5dc05d335"}, "downloads": -1, "filename": "pensieve-2020.3.23.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4e84d179b05a30bbd30bf3a6c83c3d8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23103, "upload_time": "2020-03-24T05:54:39", "upload_time_iso_8601": "2020-03-24T05:54:39.843481Z", "url": "https://files.pythonhosted.org/packages/5d/31/ba1dd0d730f1f8c96c3725274cf74f37e66ac7a475040fb360fd3b61d516/pensieve-2020.3.23.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7b93fd5366ee9cdaae957d4579cddf8", "sha256": "775b79abc43720ab94784cec68b79b85aef5ba4c656b9b99db8895c691914958"}, "downloads": -1, "filename": "pensieve-2020.3.23.2.tar.gz", "has_sig": false, "md5_digest": "c7b93fd5366ee9cdaae957d4579cddf8", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24877, "upload_time": "2020-03-24T05:54:41", "upload_time_iso_8601": "2020-03-24T05:54:41.249193Z", "url": "https://files.pythonhosted.org/packages/bb/9e/6205882ac02c68673e82409b4a665f7a63fe10b2b6ea3390f310dd791bba/pensieve-2020.3.23.2.tar.gz", "yanked": false}], "2020.3.23.3": [{"comment_text": "", "digests": {"md5": "b06e34b9b63b00c93db72bb64c6e618f", "sha256": "dfde399d98e2f2f09cea1611f18004e7d48aa8f6c73d65da60c3738e27e5edda"}, "downloads": -1, "filename": "pensieve-2020.3.23.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b06e34b9b63b00c93db72bb64c6e618f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23124, "upload_time": "2020-03-24T05:58:03", "upload_time_iso_8601": "2020-03-24T05:58:03.706457Z", "url": "https://files.pythonhosted.org/packages/59/67/9052387c7fe270bec06af8604e860292fff4b38b3ce2da2af82d2ca6f052/pensieve-2020.3.23.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "739775d99e4431ec144a5e7efa5e7d05", "sha256": "365df616267a81b276d971fc32c1d4e53e7397ec23b53a702ff4cec2440fda5e"}, "downloads": -1, "filename": "pensieve-2020.3.23.3.tar.gz", "has_sig": false, "md5_digest": "739775d99e4431ec144a5e7efa5e7d05", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24896, "upload_time": "2020-03-24T05:58:05", "upload_time_iso_8601": "2020-03-24T05:58:05.480887Z", "url": "https://files.pythonhosted.org/packages/d1/bf/9f49909c8a0a45bbd4787a12de931f17bc19e39fb6e70a2a53245d714aac/pensieve-2020.3.23.3.tar.gz", "yanked": false}], "2020.3.9": [{"comment_text": "", "digests": {"md5": "b31ea1ed9e8855c95fe7ffbb1cd51999", "sha256": "dd20337df36d68df5cda82b694d431492259dba9401752b0f4c57ba6acffd092"}, "downloads": -1, "filename": "pensieve-2020.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "b31ea1ed9e8855c95fe7ffbb1cd51999", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23008, "upload_time": "2020-03-09T22:10:05", "upload_time_iso_8601": "2020-03-09T22:10:05.675835Z", "url": "https://files.pythonhosted.org/packages/04/58/582f549f111dab7ba49a7be114e2ab898880e1ad58d6e6a7f6f40b32be84/pensieve-2020.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88f8d8f4c61ac1bd30faba1da03a0e88", "sha256": "8efc11f9d11550040e461775b32a9e6d3630a0e4d1c9f4f6e58cfd390887664b"}, "downloads": -1, "filename": "pensieve-2020.3.9.tar.gz", "has_sig": false, "md5_digest": "88f8d8f4c61ac1bd30faba1da03a0e88", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24815, "upload_time": "2020-03-09T22:10:07", "upload_time_iso_8601": "2020-03-09T22:10:07.054765Z", "url": "https://files.pythonhosted.org/packages/78/d3/d5c13649d3438a1924a4baf88221127d4cec1924fa6cccee06a50234504a/pensieve-2020.3.9.tar.gz", "yanked": false}], "2020.4.1": [{"comment_text": "", "digests": {"md5": "b7d096f10a452edfbee5fcfcb3303503", "sha256": "013f3c9fef9b673370018027d2affb35c0b3703e88df1846c09f083f37f0fd72"}, "downloads": -1, "filename": "pensieve-2020.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b7d096f10a452edfbee5fcfcb3303503", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23769, "upload_time": "2020-04-01T19:03:36", "upload_time_iso_8601": "2020-04-01T19:03:36.436886Z", "url": "https://files.pythonhosted.org/packages/91/a1/0f3c6d91031588d5bdb7f2082ee0ab268cd62de2ab8bfefd3252f1b309e8/pensieve-2020.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbbbb39115b3f3c2390849bcf05c6de8", "sha256": "1b053ebfab6e9177abe55d3f1bbed154ff7775c7f5e6e0e0dca371e777da752d"}, "downloads": -1, "filename": "pensieve-2020.4.1.tar.gz", "has_sig": false, "md5_digest": "fbbbb39115b3f3c2390849bcf05c6de8", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25197, "upload_time": "2020-04-01T19:03:37", "upload_time_iso_8601": "2020-04-01T19:03:37.800980Z", "url": "https://files.pythonhosted.org/packages/df/79/5fa09d6c610e71a0ce1d163e214a3d4de04ff7d4c3ae1d90c85df0ce29fa/pensieve-2020.4.1.tar.gz", "yanked": false}], "2020.4.17": [{"comment_text": "", "digests": {"md5": "82665e48dc3da7a92017eb38a9bb8a71", "sha256": "5ffd83bc8c6e94738cdd5ac66341d35d3df3797e37c7dcc7ef82feec0bc21fd0"}, "downloads": -1, "filename": "pensieve-2020.4.17-py3-none-any.whl", "has_sig": false, "md5_digest": "82665e48dc3da7a92017eb38a9bb8a71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 24186, "upload_time": "2020-04-17T21:29:53", "upload_time_iso_8601": "2020-04-17T21:29:53.471925Z", "url": "https://files.pythonhosted.org/packages/17/53/777b442ed39141206129b1ac36da3ea554d58d31300de54756047a371bd4/pensieve-2020.4.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8db1bad8e609bb964c7b6b465cba9732", "sha256": "d5552afc7dc50aeb91549c3a04d9612b9decbf7ab743328a3b23d4f8bcadd31f"}, "downloads": -1, "filename": "pensieve-2020.4.17.tar.gz", "has_sig": false, "md5_digest": "8db1bad8e609bb964c7b6b465cba9732", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25595, "upload_time": "2020-04-17T21:29:55", "upload_time_iso_8601": "2020-04-17T21:29:55.156610Z", "url": "https://files.pythonhosted.org/packages/c8/9f/f4a3d69f6d20846107708f072a88c107affd6235b21a222b58670fd2d092/pensieve-2020.4.17.tar.gz", "yanked": false}], "2020.4.28": [{"comment_text": "", "digests": {"md5": "e90f1862cf8bcddafd21807716bceef3", "sha256": "d1436d66c047c2e303b547412db1a3122908a79c48d16dddec781c3ba2ef267f"}, "downloads": -1, "filename": "pensieve-2020.4.28-py3-none-any.whl", "has_sig": false, "md5_digest": "e90f1862cf8bcddafd21807716bceef3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 24200, "upload_time": "2020-04-28T18:02:27", "upload_time_iso_8601": "2020-04-28T18:02:27.077152Z", "url": "https://files.pythonhosted.org/packages/5e/cb/5de255488d22a5d45ccbb779b2ad3cb4c88b9fbda01376b24d0b68fa6537/pensieve-2020.4.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1edc12f307cdad9bd3f60564db69da55", "sha256": "e9f362edc658892d243dbe0b0f1114647d5a2216eb5a2e0e4b2dc76fdf9365a0"}, "downloads": -1, "filename": "pensieve-2020.4.28.tar.gz", "has_sig": false, "md5_digest": "1edc12f307cdad9bd3f60564db69da55", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25606, "upload_time": "2020-04-28T18:02:29", "upload_time_iso_8601": "2020-04-28T18:02:29.278944Z", "url": "https://files.pythonhosted.org/packages/bf/86/33209f025962360b1ce479df17e897f2a8c3fc09304c5e9cebf6c9d0551d/pensieve-2020.4.28.tar.gz", "yanked": false}], "2020.4.28.1": [{"comment_text": "", "digests": {"md5": "3214462e45e5889f15e56cea44099169", "sha256": "238217a0c73ee94f803111a2b211b47c210baad1506b5256d6d97f41a987202a"}, "downloads": -1, "filename": "pensieve-2020.4.28.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3214462e45e5889f15e56cea44099169", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 24226, "upload_time": "2020-04-28T18:04:07", "upload_time_iso_8601": "2020-04-28T18:04:07.209814Z", "url": "https://files.pythonhosted.org/packages/01/55/18cb05785e0a256c0133eebaa2f6908506167c715d605d526ff2cef9234d/pensieve-2020.4.28.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8dbfa8f2d8f69e2036807ca3826c4115", "sha256": "103f12b294bcb1c2c6b9b4a4fde5383fa6f125c865bf452f2da551f66711e62d"}, "downloads": -1, "filename": "pensieve-2020.4.28.1.tar.gz", "has_sig": false, "md5_digest": "8dbfa8f2d8f69e2036807ca3826c4115", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25605, "upload_time": "2020-04-28T18:04:08", "upload_time_iso_8601": "2020-04-28T18:04:08.478164Z", "url": "https://files.pythonhosted.org/packages/be/b7/2c0949d3dfcde1c296dd27019a85f49c8023f1a56c5244441979b3cfa70f/pensieve-2020.4.28.1.tar.gz", "yanked": false}], "2020.4.28.2": [{"comment_text": "", "digests": {"md5": "554df5e06ec93ff2fe267c45f4b55c2b", "sha256": "7434eb10ebf0a49bd4cb5d02cc16a8a3078b86434d98872413b184938c235751"}, "downloads": -1, "filename": "pensieve-2020.4.28.2-py3-none-any.whl", "has_sig": false, "md5_digest": "554df5e06ec93ff2fe267c45f4b55c2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 24228, "upload_time": "2020-04-28T21:33:16", "upload_time_iso_8601": "2020-04-28T21:33:16.931006Z", "url": "https://files.pythonhosted.org/packages/41/db/0caeeb2c15b24015abe4d5c325929fccd4197f46222fc71445e8e50a1397/pensieve-2020.4.28.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d147d989c1594b91c886d45eb910433", "sha256": "16afa521673ed3d09525a0336fc2c58d1cd793e37e84efaa5c409ddd25841527"}, "downloads": -1, "filename": "pensieve-2020.4.28.2.tar.gz", "has_sig": false, "md5_digest": "5d147d989c1594b91c886d45eb910433", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25606, "upload_time": "2020-04-28T21:33:18", "upload_time_iso_8601": "2020-04-28T21:33:18.092306Z", "url": "https://files.pythonhosted.org/packages/39/7a/0d9dd6a014fb54e00b6cbed405d9170a4056344511982763df7c22d9851c/pensieve-2020.4.28.2.tar.gz", "yanked": false}], "2020.4.28.3": [{"comment_text": "", "digests": {"md5": "a1171b663e96b15a5b71583a3b9b95bb", "sha256": "f0269f8e4d0033274905bb259f624591875b078476fdba01ab5302967d51c50b"}, "downloads": -1, "filename": "pensieve-2020.4.28.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a1171b663e96b15a5b71583a3b9b95bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 24228, "upload_time": "2020-04-28T22:47:34", "upload_time_iso_8601": "2020-04-28T22:47:34.146614Z", "url": "https://files.pythonhosted.org/packages/8a/bc/419c89a8faef6773baff95df95ad2046b6830439be3ad852567373437f32/pensieve-2020.4.28.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2678bcf1a827c7df32d62057a76b394", "sha256": "12bf51b3ba5fefc2e9117e2fdbe354e5bfe99ffc5df7617f7571071b53bbf2bf"}, "downloads": -1, "filename": "pensieve-2020.4.28.3.tar.gz", "has_sig": false, "md5_digest": "f2678bcf1a827c7df32d62057a76b394", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25601, "upload_time": "2020-04-28T22:47:35", "upload_time_iso_8601": "2020-04-28T22:47:35.425707Z", "url": "https://files.pythonhosted.org/packages/2c/96/b88222d97e1be8e9bccf001364d67015264b8cde129b9d5231c87e26ebe1/pensieve-2020.4.28.3.tar.gz", "yanked": false}], "2020.4.6": [{"comment_text": "", "digests": {"md5": "7c8e8b43d63ff0ef5ea7986e90b9438a", "sha256": "5f76202c92705d03d9c0c920971d5bb6ad18ee0e5e159730928bb06325fba668"}, "downloads": -1, "filename": "pensieve-2020.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "7c8e8b43d63ff0ef5ea7986e90b9438a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23770, "upload_time": "2020-04-07T04:21:53", "upload_time_iso_8601": "2020-04-07T04:21:53.624126Z", "url": "https://files.pythonhosted.org/packages/e9/10/7a2fbb28ab85249e108a671f19c629f4dc0fbd886114cc55fbe85f176df1/pensieve-2020.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86083dc0c60ea9fe24edda8f9d396967", "sha256": "dfda855ff54aaec4a235708d9950be9252c27c4c308d2bab8c674e96276c7aa3"}, "downloads": -1, "filename": "pensieve-2020.4.6.tar.gz", "has_sig": false, "md5_digest": "86083dc0c60ea9fe24edda8f9d396967", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25198, "upload_time": "2020-04-07T04:21:54", "upload_time_iso_8601": "2020-04-07T04:21:54.782622Z", "url": "https://files.pythonhosted.org/packages/76/b5/9fd709de3d5a8d0c73a3075126512e40a6294c651296ac26ea83633f9e45/pensieve-2020.4.6.tar.gz", "yanked": false}], "2020.4.7": [{"comment_text": "", "digests": {"md5": "6413fb41070373fefebff1ce3722003d", "sha256": "57b7ca4f5a959b892c51cdf6a98dcc2daa8cb8312e3975d1ade793a76070fc6c"}, "downloads": -1, "filename": "pensieve-2020.4.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6413fb41070373fefebff1ce3722003d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23770, "upload_time": "2020-04-07T20:43:24", "upload_time_iso_8601": "2020-04-07T20:43:24.521782Z", "url": "https://files.pythonhosted.org/packages/74/db/2ba63d18be2e0d66ddb7e2284d023d6fd968c5f5683b836aeafb2b2b270b/pensieve-2020.4.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51edef6bb01808df40e086933200ee1e", "sha256": "631e1e48d6b96fae32e84a8cf69c1183cf001511827e4de7d506f2bd1eb2d2df"}, "downloads": -1, "filename": "pensieve-2020.4.7.tar.gz", "has_sig": false, "md5_digest": "51edef6bb01808df40e086933200ee1e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25199, "upload_time": "2020-04-07T20:43:26", "upload_time_iso_8601": "2020-04-07T20:43:26.721272Z", "url": "https://files.pythonhosted.org/packages/ed/c2/e2bbf3fbff893c4b797289004ceb44c8f5633b135f07a81ceba325f9e8ca/pensieve-2020.4.7.tar.gz", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "bfa157bbaadbf3a36cdd017d461d2c92", "sha256": "b5eb3043eaebcae9ad7ee016fc3fa3b9ac84218a3f4a3b14443b209223d07041"}, "downloads": -1, "filename": "pensieve-3.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bfa157bbaadbf3a36cdd017d461d2c92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23202, "upload_time": "2019-12-16T07:17:06", "upload_time_iso_8601": "2019-12-16T07:17:06.602876Z", "url": "https://files.pythonhosted.org/packages/68/26/332bb3734bfc27e9e2c98bf3388f2ea513ab8f9719935d5640e3f8f4750b/pensieve-3.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1dcaabe2f34ac2bf20315edc6ac3d0c3", "sha256": "d6d9c4948b40c2de3c1e97f15e6a9e9113bbb291518beeb2c20ad3e393740dde"}, "downloads": -1, "filename": "pensieve-3.2.2.tar.gz", "has_sig": false, "md5_digest": "1dcaabe2f34ac2bf20315edc6ac3d0c3", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24370, "upload_time": "2019-12-16T07:17:08", "upload_time_iso_8601": "2019-12-16T07:17:08.928294Z", "url": "https://files.pythonhosted.org/packages/07/51/bec1750ad6ac822921d21dbbb4950d3d208f518349ade6fb9f11f20f0ee0/pensieve-3.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1171b663e96b15a5b71583a3b9b95bb", "sha256": "f0269f8e4d0033274905bb259f624591875b078476fdba01ab5302967d51c50b"}, "downloads": -1, "filename": "pensieve-2020.4.28.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a1171b663e96b15a5b71583a3b9b95bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 24228, "upload_time": "2020-04-28T22:47:34", "upload_time_iso_8601": "2020-04-28T22:47:34.146614Z", "url": "https://files.pythonhosted.org/packages/8a/bc/419c89a8faef6773baff95df95ad2046b6830439be3ad852567373437f32/pensieve-2020.4.28.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2678bcf1a827c7df32d62057a76b394", "sha256": "12bf51b3ba5fefc2e9117e2fdbe354e5bfe99ffc5df7617f7571071b53bbf2bf"}, "downloads": -1, "filename": "pensieve-2020.4.28.3.tar.gz", "has_sig": false, "md5_digest": "f2678bcf1a827c7df32d62057a76b394", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25601, "upload_time": "2020-04-28T22:47:35", "upload_time_iso_8601": "2020-04-28T22:47:35.425707Z", "url": "https://files.pythonhosted.org/packages/2c/96/b88222d97e1be8e9bccf001364d67015264b8cde129b9d5231c87e26ebe1/pensieve-2020.4.28.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:29 2020"}