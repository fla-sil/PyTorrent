{"info": {"author": "Chid Gilovitz", "author_email": "chid@chidgilovitz.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "========\nTriodia\n========\n\nTriodia is a Django app for parsing taxonomic names and checking them against the databases of public biodiversity data services. Triodia currently relies on the Global Biodiversity Invormation Facility (GBIF) for its primary API calls and can be considered a partial and incomplete Django/Python wrapper for that API.\n\nUsers enter a species name into a form; Triodia queries the GBIF API, parses the results, and returns a list of potential matches, ranked by confidence.\n\n\nQuick start\n-----------\n\n1. Add \"triodia\" to your INSTALLED_APPS setting like this::\n\n      INSTALLED_APPS = (\n          ...\n          'triodia',\n      )\n\n2. Include the triodia URLconf in your project urls.py like this::\n\n      url(r'^triodia/', include('triodia.urls')),\n\n3. Run `python manage.py syncdb` to create the triodia models.\n\n4. Visit http://127.0.0.1:8000/triodia/ to check a species name.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.example.com/", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-triodia", "package_url": "https://pypi.org/project/django-triodia/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-triodia/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.example.com/"}, "release_url": "https://pypi.org/project/django-triodia/0.1/", "requires_dist": null, "requires_python": null, "summary": "A Django app to check taxonomic species names against web based data services such as GBIF.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Triodia is a Django app for parsing taxonomic names and checking them against the databases of public biodiversity data services. Triodia currently relies on the Global Biodiversity Invormation Facility (GBIF) for its primary API calls and can be considered a partial and incomplete Django/Python wrapper for that API.</p>\n<p>Users enter a species name into a form; Triodia queries the GBIF API, parses the results, and returns a list of potential matches, ranked by confidence.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add \u201ctriodia\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'triodia',\n)\n</pre>\n</li>\n<li><p>Include the triodia URLconf in your project urls.py like this:</p>\n<pre>url(r'^triodia/', include('triodia.urls')),\n</pre>\n</li>\n<li><p>Run <cite>python manage.py syncdb</cite> to create the triodia models.</p>\n</li>\n<li><p>Visit <a href=\"http://127.0.0.1:8000/triodia/\" rel=\"nofollow\">http://127.0.0.1:8000/triodia/</a> to check a species name.</p>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1135554, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3ecd84389efea5780b79fa2374dd20a4", "sha256": "1aa36bc7ffad7bfe801a6607cbeef1ea4ae5a5b681b0ad8390290881274c8805"}, "downloads": -1, "filename": "django-triodia-0.1.tar.gz", "has_sig": false, "md5_digest": "3ecd84389efea5780b79fa2374dd20a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7681, "upload_time": "2014-06-24T04:40:59", "upload_time_iso_8601": "2014-06-24T04:40:59.327575Z", "url": "https://files.pythonhosted.org/packages/b4/fe/ee13f73fe3de7b0cf118cf19b01acf2cc1d5a8b7bbcb7b67de11b27fd560/django-triodia-0.1.tar.gz", "yanked": false}], "0.1a": [{"comment_text": "", "digests": {"md5": "a85251bb81880ed7c4e7ad993c1b6057", "sha256": "b5621d0b4e624a74f4401ef1677417378d703fc369c18e4631e128faed78a2ca"}, "downloads": -1, "filename": "django-triodia-0.1a.tar.gz", "has_sig": false, "md5_digest": "a85251bb81880ed7c4e7ad993c1b6057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7672, "upload_time": "2014-06-24T04:43:01", "upload_time_iso_8601": "2014-06-24T04:43:01.123483Z", "url": "https://files.pythonhosted.org/packages/a2/0c/b919730e80a1d8b2784352d1fac692e76c5c42df54f08bbfcad4b99b4e53/django-triodia-0.1a.tar.gz", "yanked": false}], "0.1b": [{"comment_text": "", "digests": {"md5": "b3ebdd74284fa132793336a13871a314", "sha256": "6f1a41c5f823e081dbd750a8646f2293299e8063767a0067bfac2f4d34e76461"}, "downloads": -1, "filename": "django-triodia-0.1b.tar.gz", "has_sig": false, "md5_digest": "b3ebdd74284fa132793336a13871a314", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7814, "upload_time": "2014-06-24T09:07:48", "upload_time_iso_8601": "2014-06-24T09:07:48.286987Z", "url": "https://files.pythonhosted.org/packages/07/bf/4078a97d72567cae421543c4552e8fc51a025a1844d22ec19e31046bc1c3/django-triodia-0.1b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ecd84389efea5780b79fa2374dd20a4", "sha256": "1aa36bc7ffad7bfe801a6607cbeef1ea4ae5a5b681b0ad8390290881274c8805"}, "downloads": -1, "filename": "django-triodia-0.1.tar.gz", "has_sig": false, "md5_digest": "3ecd84389efea5780b79fa2374dd20a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7681, "upload_time": "2014-06-24T04:40:59", "upload_time_iso_8601": "2014-06-24T04:40:59.327575Z", "url": "https://files.pythonhosted.org/packages/b4/fe/ee13f73fe3de7b0cf118cf19b01acf2cc1d5a8b7bbcb7b67de11b27fd560/django-triodia-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:18 2020"}