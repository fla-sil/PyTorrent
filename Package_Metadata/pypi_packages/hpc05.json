{"info": {"author": "Bas Nijholt", "author_email": "basnijholt@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# hpc05\n[![Conda](https://anaconda.org/conda-forge/hpc05/badges/installer/conda.svg)](https://anaconda.org/conda-forge/hpc05)\n[![Downloads](https://anaconda.org/conda-forge/hpc05/badges/downloads.svg)](https://anaconda.org/conda-forge/hpc05)\n[![docs](https://img.shields.io/readthedocs/hpc05)](https://hpc05.readthedocs.io)\n[![version](https://img.shields.io/pypi/v/hpc05)](https://pypi.org/project/hpc05/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/hpc05)](https://pypi.org/project/hpc05/)\n\n\n\ud83d\udda5 `ipyparallel.Client` package for a PBS or SLURM cluster with a headnode.\n\nScript that connects to PBS or SLURM cluster with headnode over ssh. Since `ipyparallel` doesn't cull enginges when inactive and people are lazy (because they forget to `qdel` their jobs), it automatically kills the `ipengines` after the set timeout (default=15 min). Note that this package doesn't only work for the `hpc05` cluster on the TU Delft but also other clusters.\n\n# Installation\nFirst install this package on **both** your machine and the cluster.\n\n```bash\nconda config --add channels conda-forge\nconda install hpc05\n```\nor using `pip`\n```\npip install hpc05\n```\n\nMake sure you can connect over `ssh` passwordless by copying your ssh key:\n\n```bash\nssh-copy-id hpc05\n```\n\n# Setup profile\nYou need a parallel profile on your cluster, which can be created by the following command on your local machine:\n```python\nimport hpc05\n# for PBS use\nhpc05.create_remote_pbs_profile(profile='pbs', hostname='hpc05')  # on the remote machine\n# or\nhpc05.create_local_pbs_profile(profile='pbs')  # on the cluster\n\n# for SLURM use\nhpc05.create_remote_slurm_profile(profile='slurm', hostname='hpc05')  # on the remote machine\n# or\nhpc05.create_local_slurm_profile(profile='slurm')  # on the cluster\n```\n\n# Start `ipcluster` and connect (via `ssh`)\nTo start **and** connect to an `ipcluster` just do (and read the error messages if any, for instructions):\n```python\nclient, dview, lview = hpc05.start_remote_and_connect(\n\tn=100, profile='pbs', hostname='hpc05', folder='~/your_folder_on_the_cluster/')\n```\n\nThis is equivent to the following three commmands:\n```python\n# 0. Killing and removing files of an old ipcluster (this is optional with\n#    the `start_remote_and_connect` function, use the `kill_old_ipcluster` argument)\nhpc05.kill_remote_ipcluster(hostname='hpc05')\n\n# 1. starting an `ipcluster`, similar to running\n#    `ipcluster start --n=100 --profile=pbs` on the cluster headnode.\nhpc05.start_remote_ipcluster(n=100, profile='pbs', hostname='hpc05')\n\n# 2. Connecting to the started ipcluster and adding a folder to the cluster's `PATH`\nclient, dview, lview = hpc05.connect_ipcluster(\n\tn=200, profile='pbs', hostname='hpc05', folder='~/your_folder_on_the_cluster/')\n\n```\n\n\n# Start `ipcluster` and connect (on cluster headnode)\nTo start **and** connect to an `ipcluster` just do (and read the error messages if any, for instructions):\n```python\nclient, dview, lview = hpc05.start_and_connect(\n\tn=100, profile='pbs',  folder='~/your_folder_on_the_cluster/')\n```\n\nThis is equivent to the following three commmands:\n```python\n# 0. Killing and removing files of an old ipcluster (this is optional with\n#    the `start_remote_and_connect` function, use the `kill_old_ipcluster` argument)\nhpc05.kill_ipcluster()\n\n# 1. starting an `ipcluster`, similar to `ipcluster start --n=200 --profile=pbs`\nhpc05.start_ipcluster(n=200, profile='pbs')\n\n# 2. Connecting to the started ipcluster and adding a folder to the cluster's `PATH`\nclient, dview, lview = hpc05.connect_ipcluster(\n\tn=200, profile='pbs', folder='~/your_folder_on_the_cluster/')\n\n```\n\n# Monitor resources\nThis package will monitor your resources if you start it with `hpc05_monitor.start(client)`, see the following example use:\n```python\nimport time\nimport hpc05_monitor\nhpc05_monitor.start(client, interval=5)  # update hpc05_monitor.MAX_USAGE every 'interval' seconds.\n\nwhile not hpc05_monitor.LATEST_DATA:\n    time.sleep(1)\n\nhpc05_monitor.print_usage()  # uses hpc05_monitor.LATEST_DATA by default\n\nhpc05_monitor.print_max_usage()  # uses hpc05_monitor.MAX_USAGE\n```\n\nWith output:\n```\n id hostname             date                             CPU% MEM%\n 15 node29.q1cluster     2018-09-10T14:25:05.350499       190%   3%\n 19 node29.q1cluster     2018-09-10T14:25:04.860693       200%   3%\n 26 node29.q1cluster     2018-09-10T14:25:05.324466       200%   3%\n 28 node29.q1cluster     2018-09-10T14:25:05.148623       190%   2%\n 29 node29.q1cluster     2018-09-10T14:25:04.737664       190%   3%\n ...\n```\n\n\n## Development\n\nWe use [pre-commit](https://pre-commit.com) for linting of the code, so `pip install pre_commit` and run\n```\npre-commit install\n```\nin the repository.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/basnijholt/hpc05", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hpc05", "package_url": "https://pypi.org/project/hpc05/", "platform": "", "project_url": "https://pypi.org/project/hpc05/", "project_urls": {"Homepage": "https://github.com/basnijholt/hpc05"}, "release_url": "https://pypi.org/project/hpc05/2.0.5/", "requires_dist": ["ipyparallel", "pexpect", "pyzmq", "paramiko", "tornado", "psutil", "pre-commit ; extra == 'dev'", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "m2r ; extra == 'docs'", "sphinxcontrib.apidoc ; extra == 'docs'"], "requires_python": ">=3.6", "summary": "Client package for PBS and SLURM clusters with a headnode.", "version": "2.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hpc05</h1>\n<p><a href=\"https://anaconda.org/conda-forge/hpc05\" rel=\"nofollow\"><img alt=\"Conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/22f3df7efd8dd9b09333265b416a5a69b8d715d3/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f68706330352f6261646765732f696e7374616c6c65722f636f6e64612e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/hpc05\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/425bf8f2671bfc2b2deb14550ae99a8fd5ef216b/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f68706330352f6261646765732f646f776e6c6f6164732e737667\"></a>\n<a href=\"https://hpc05.readthedocs.io\" rel=\"nofollow\"><img alt=\"docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/317aadc4898c5b1d75fa90f941ebba87b80acec4/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f6870633035\"></a>\n<a href=\"https://pypi.org/project/hpc05/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/766eaa7486b14c2bd3a2c6bc81c5eebcf601a6cc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6870633035\"></a>\n<a href=\"https://pypi.org/project/hpc05/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/375e5cdb9081556f2764aa532ef1f22bdf7f018d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6870633035\"></a></p>\n<p>\ud83d\udda5 <code>ipyparallel.Client</code> package for a PBS or SLURM cluster with a headnode.</p>\n<p>Script that connects to PBS or SLURM cluster with headnode over ssh. Since <code>ipyparallel</code> doesn't cull enginges when inactive and people are lazy (because they forget to <code>qdel</code> their jobs), it automatically kills the <code>ipengines</code> after the set timeout (default=15 min). Note that this package doesn't only work for the <code>hpc05</code> cluster on the TU Delft but also other clusters.</p>\n<h1>Installation</h1>\n<p>First install this package on <strong>both</strong> your machine and the cluster.</p>\n<pre>conda config --add channels conda-forge\nconda install hpc05\n</pre>\n<p>or using <code>pip</code></p>\n<pre><code>pip install hpc05\n</code></pre>\n<p>Make sure you can connect over <code>ssh</code> passwordless by copying your ssh key:</p>\n<pre>ssh-copy-id hpc05\n</pre>\n<h1>Setup profile</h1>\n<p>You need a parallel profile on your cluster, which can be created by the following command on your local machine:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hpc05</span>\n<span class=\"c1\"># for PBS use</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">create_remote_pbs_profile</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">,</span> <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'hpc05'</span><span class=\"p\">)</span>  <span class=\"c1\"># on the remote machine</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">create_local_pbs_profile</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">)</span>  <span class=\"c1\"># on the cluster</span>\n\n<span class=\"c1\"># for SLURM use</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">create_remote_slurm_profile</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'slurm'</span><span class=\"p\">,</span> <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'hpc05'</span><span class=\"p\">)</span>  <span class=\"c1\"># on the remote machine</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">create_local_slurm_profile</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'slurm'</span><span class=\"p\">)</span>  <span class=\"c1\"># on the cluster</span>\n</pre>\n<h1>Start <code>ipcluster</code> and connect (via <code>ssh</code>)</h1>\n<p>To start <strong>and</strong> connect to an <code>ipcluster</code> just do (and read the error messages if any, for instructions):</p>\n<pre><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">dview</span><span class=\"p\">,</span> <span class=\"n\">lview</span> <span class=\"o\">=</span> <span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">start_remote_and_connect</span><span class=\"p\">(</span>\n\t<span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">,</span> <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'hpc05'</span><span class=\"p\">,</span> <span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"s1\">'~/your_folder_on_the_cluster/'</span><span class=\"p\">)</span>\n</pre>\n<p>This is equivent to the following three commmands:</p>\n<pre><span class=\"c1\"># 0. Killing and removing files of an old ipcluster (this is optional with</span>\n<span class=\"c1\">#    the `start_remote_and_connect` function, use the `kill_old_ipcluster` argument)</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">kill_remote_ipcluster</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'hpc05'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 1. starting an `ipcluster`, similar to running</span>\n<span class=\"c1\">#    `ipcluster start --n=100 --profile=pbs` on the cluster headnode.</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">start_remote_ipcluster</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">,</span> <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'hpc05'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 2. Connecting to the started ipcluster and adding a folder to the cluster's `PATH`</span>\n<span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">dview</span><span class=\"p\">,</span> <span class=\"n\">lview</span> <span class=\"o\">=</span> <span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">connect_ipcluster</span><span class=\"p\">(</span>\n\t<span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">,</span> <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'hpc05'</span><span class=\"p\">,</span> <span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"s1\">'~/your_folder_on_the_cluster/'</span><span class=\"p\">)</span>\n</pre>\n<h1>Start <code>ipcluster</code> and connect (on cluster headnode)</h1>\n<p>To start <strong>and</strong> connect to an <code>ipcluster</code> just do (and read the error messages if any, for instructions):</p>\n<pre><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">dview</span><span class=\"p\">,</span> <span class=\"n\">lview</span> <span class=\"o\">=</span> <span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">start_and_connect</span><span class=\"p\">(</span>\n\t<span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">,</span>  <span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"s1\">'~/your_folder_on_the_cluster/'</span><span class=\"p\">)</span>\n</pre>\n<p>This is equivent to the following three commmands:</p>\n<pre><span class=\"c1\"># 0. Killing and removing files of an old ipcluster (this is optional with</span>\n<span class=\"c1\">#    the `start_remote_and_connect` function, use the `kill_old_ipcluster` argument)</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">kill_ipcluster</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 1. starting an `ipcluster`, similar to `ipcluster start --n=200 --profile=pbs`</span>\n<span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">start_ipcluster</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 2. Connecting to the started ipcluster and adding a folder to the cluster's `PATH`</span>\n<span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">dview</span><span class=\"p\">,</span> <span class=\"n\">lview</span> <span class=\"o\">=</span> <span class=\"n\">hpc05</span><span class=\"o\">.</span><span class=\"n\">connect_ipcluster</span><span class=\"p\">(</span>\n\t<span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'pbs'</span><span class=\"p\">,</span> <span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"s1\">'~/your_folder_on_the_cluster/'</span><span class=\"p\">)</span>\n</pre>\n<h1>Monitor resources</h1>\n<p>This package will monitor your resources if you start it with <code>hpc05_monitor.start(client)</code>, see the following example use:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hpc05_monitor</span>\n<span class=\"n\">hpc05_monitor</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># update hpc05_monitor.MAX_USAGE every 'interval' seconds.</span>\n\n<span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">hpc05_monitor</span><span class=\"o\">.</span><span class=\"n\">LATEST_DATA</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">hpc05_monitor</span><span class=\"o\">.</span><span class=\"n\">print_usage</span><span class=\"p\">()</span>  <span class=\"c1\"># uses hpc05_monitor.LATEST_DATA by default</span>\n\n<span class=\"n\">hpc05_monitor</span><span class=\"o\">.</span><span class=\"n\">print_max_usage</span><span class=\"p\">()</span>  <span class=\"c1\"># uses hpc05_monitor.MAX_USAGE</span>\n</pre>\n<p>With output:</p>\n<pre><code> id hostname             date                             CPU% MEM%\n 15 node29.q1cluster     2018-09-10T14:25:05.350499       190%   3%\n 19 node29.q1cluster     2018-09-10T14:25:04.860693       200%   3%\n 26 node29.q1cluster     2018-09-10T14:25:05.324466       200%   3%\n 28 node29.q1cluster     2018-09-10T14:25:05.148623       190%   2%\n 29 node29.q1cluster     2018-09-10T14:25:04.737664       190%   3%\n ...\n</code></pre>\n<h2>Development</h2>\n<p>We use <a href=\"https://pre-commit.com\" rel=\"nofollow\">pre-commit</a> for linting of the code, so <code>pip install pre_commit</code> and run</p>\n<pre><code>pre-commit install\n</code></pre>\n<p>in the repository.</p>\n\n          </div>"}, "last_serial": 6200802, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "1532ecc788776e39b79ff50d1b095d04", "sha256": "b0790014b05a7961312c48621ba6d3667280a4cd37e8ae1a6798dc595a3c4422"}, "downloads": -1, "filename": "hpc05-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1532ecc788776e39b79ff50d1b095d04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18728, "upload_time": "2019-06-06T18:37:21", "upload_time_iso_8601": "2019-06-06T18:37:21.103440Z", "url": "https://files.pythonhosted.org/packages/c3/c6/b5a2bd7228202252bed2bffa9ba72019d716e39df67a87fcf43aad798759/hpc05-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f2f6658227c8df9bc73899abbd85825", "sha256": "df176cea93b69eba0ff95f216ef7ea7f6d7309a70cd09e5fc78048961041d88a"}, "downloads": -1, "filename": "hpc05-2.0.0.tar.gz", "has_sig": false, "md5_digest": "8f2f6658227c8df9bc73899abbd85825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16349, "upload_time": "2019-06-06T18:37:23", "upload_time_iso_8601": "2019-06-06T18:37:23.045247Z", "url": "https://files.pythonhosted.org/packages/4c/c2/3b0de5422e71b7bfe6ac627e241b46c6a3aa136f780fc71322b5af026f15/hpc05-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "55e5d8983ca7531eb59ec9889d601fbe", "sha256": "196b51f80134a1d551cdd6900e8be0b0d8a0ff2951a0be4ff575dcdaf558f5a2"}, "downloads": -1, "filename": "hpc05-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "55e5d8983ca7531eb59ec9889d601fbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18955, "upload_time": "2019-06-06T18:45:17", "upload_time_iso_8601": "2019-06-06T18:45:17.316613Z", "url": "https://files.pythonhosted.org/packages/1e/6b/ccd560b6c0f25195e39a3066dddf262541ac54c7363753014e0350083d67/hpc05-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21abc88ad496749bbf5f7f30eec7cd4d", "sha256": "0938cd0f90a370c1f54a84dee45a4c0a1fef6e40e0015544e7f9ba2bc6a1f3f8"}, "downloads": -1, "filename": "hpc05-2.0.1.tar.gz", "has_sig": false, "md5_digest": "21abc88ad496749bbf5f7f30eec7cd4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16695, "upload_time": "2019-06-06T18:45:18", "upload_time_iso_8601": "2019-06-06T18:45:18.760802Z", "url": "https://files.pythonhosted.org/packages/1c/c4/3050fdaf03952a6dbfccb5d0df9c6cbbe781398e5f8582d2ca22f80f6887/hpc05-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "9b7a3fdce2896f126b6420518f8bfdd6", "sha256": "116de6edc9321cb64442b5d9e43300c9ba637c90f95a343c65cd11eff5c0509f"}, "downloads": -1, "filename": "hpc05-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9b7a3fdce2896f126b6420518f8bfdd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19066, "upload_time": "2019-06-11T17:54:42", "upload_time_iso_8601": "2019-06-11T17:54:42.427911Z", "url": "https://files.pythonhosted.org/packages/3b/39/cd591541f9e8b31cec278ca2e6af1244c345964f9254b8b06a632f2fc6d0/hpc05-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0c3fbc41559a1061adb14480b584b76", "sha256": "3913706dace496031e25643cb701b99b7f548371e5e7254478aa0c13bc8e67c3"}, "downloads": -1, "filename": "hpc05-2.0.2.tar.gz", "has_sig": false, "md5_digest": "a0c3fbc41559a1061adb14480b584b76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16957, "upload_time": "2019-06-11T17:54:44", "upload_time_iso_8601": "2019-06-11T17:54:44.032037Z", "url": "https://files.pythonhosted.org/packages/6d/e6/dd2878e7b5fb434ac41ce926ba3377112d6f63fcb59acf2a0cfff9a6140a/hpc05-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "6fc72f58eaf1452a3ef5776a539bd8cc", "sha256": "235907cb66dab3f5737807a02c8a2f02924b8f8c8310f0c0a728dcb4dafeab4a"}, "downloads": -1, "filename": "hpc05-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6fc72f58eaf1452a3ef5776a539bd8cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20215, "upload_time": "2019-06-11T23:43:55", "upload_time_iso_8601": "2019-06-11T23:43:55.163815Z", "url": "https://files.pythonhosted.org/packages/a1/04/edce06d2a9e9d657ba9849094141cacc411294da19dbffec330e70837342/hpc05-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3f88e43ab6337e87136ab8e65d52010", "sha256": "fda92fbba386dd26f69332153db7eb8e2e0212f5ebdc6d7d62965e4eb3bac924"}, "downloads": -1, "filename": "hpc05-2.0.3.tar.gz", "has_sig": false, "md5_digest": "b3f88e43ab6337e87136ab8e65d52010", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18234, "upload_time": "2019-06-11T23:43:57", "upload_time_iso_8601": "2019-06-11T23:43:57.179186Z", "url": "https://files.pythonhosted.org/packages/6a/32/af575ce089a771f43cfc426de3ba9c27ee4e18c2c48c06143a60af277aba/hpc05-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "c22f7628801fdc1339ad9a49096e785b", "sha256": "e7c7bab2ac2a0771de6207b17c0d4875b441d6c8e021b6a6457024177839acba"}, "downloads": -1, "filename": "hpc05-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c22f7628801fdc1339ad9a49096e785b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20249, "upload_time": "2019-07-11T16:34:07", "upload_time_iso_8601": "2019-07-11T16:34:07.067096Z", "url": "https://files.pythonhosted.org/packages/c5/2f/87b56f4cdd323c60905fce4e4abeb9ed675826cf78cc8bc0702f25db9f8c/hpc05-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "024dfc752a485fbe5f14feff904d1fbb", "sha256": "6751a3c21123db8801d55fa822efc1afa32a2ecc70190289fed266c9de61ee69"}, "downloads": -1, "filename": "hpc05-2.0.4.tar.gz", "has_sig": false, "md5_digest": "024dfc752a485fbe5f14feff904d1fbb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18205, "upload_time": "2019-07-11T16:34:08", "upload_time_iso_8601": "2019-07-11T16:34:08.369680Z", "url": "https://files.pythonhosted.org/packages/1c/97/ce9ef74fb6bcee449d5aae4187520ddcdba90f5850065f71c17dbc690b9c/hpc05-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "79eaafbf6ec84f8585ccac731a6001e3", "sha256": "79711f368de04bceb43c38eabd9035c1a6ee0513ac8c7e9429a9ca1ac381a564"}, "downloads": -1, "filename": "hpc05-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "79eaafbf6ec84f8585ccac731a6001e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20489, "upload_time": "2019-11-26T12:10:20", "upload_time_iso_8601": "2019-11-26T12:10:20.670448Z", "url": "https://files.pythonhosted.org/packages/ad/d6/3c7f8ad6ae58c604d77db45ef53ccc40515d021b489f777e549de84ce6dc/hpc05-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e94a6bef1f29799e7755cb20e55b636a", "sha256": "551163b2d903ee7f692388472ef3bc7de2f338092b5998350aae6fa0e89742b5"}, "downloads": -1, "filename": "hpc05-2.0.5.tar.gz", "has_sig": false, "md5_digest": "e94a6bef1f29799e7755cb20e55b636a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18708, "upload_time": "2019-11-26T12:10:23", "upload_time_iso_8601": "2019-11-26T12:10:23.640741Z", "url": "https://files.pythonhosted.org/packages/2d/3c/4713f766057a6c20d87cc265e236fd5bfe3c5dc8f71dba66142b824b46d0/hpc05-2.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79eaafbf6ec84f8585ccac731a6001e3", "sha256": "79711f368de04bceb43c38eabd9035c1a6ee0513ac8c7e9429a9ca1ac381a564"}, "downloads": -1, "filename": "hpc05-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "79eaafbf6ec84f8585ccac731a6001e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20489, "upload_time": "2019-11-26T12:10:20", "upload_time_iso_8601": "2019-11-26T12:10:20.670448Z", "url": "https://files.pythonhosted.org/packages/ad/d6/3c7f8ad6ae58c604d77db45ef53ccc40515d021b489f777e549de84ce6dc/hpc05-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e94a6bef1f29799e7755cb20e55b636a", "sha256": "551163b2d903ee7f692388472ef3bc7de2f338092b5998350aae6fa0e89742b5"}, "downloads": -1, "filename": "hpc05-2.0.5.tar.gz", "has_sig": false, "md5_digest": "e94a6bef1f29799e7755cb20e55b636a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18708, "upload_time": "2019-11-26T12:10:23", "upload_time_iso_8601": "2019-11-26T12:10:23.640741Z", "url": "https://files.pythonhosted.org/packages/2d/3c/4713f766057a6c20d87cc265e236fd5bfe3c5dc8f71dba66142b824b46d0/hpc05-2.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:28 2020"}