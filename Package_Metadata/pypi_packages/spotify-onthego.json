{"info": {"author": "R\u00e9gis Behmo", "author_email": "nospam@behmo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Multimedia :: Sound/Audio :: Capture/Recording"], "description": "-----------------\nSpotify On The Go\n-----------------\n\nDownload songs and playlist from Spotify. The tracks are downloaded from\nYouTube videos and converted as mp3 files.\n\nInstall\n=======\n\n::\n\n    pip install spotify-onthego\n\nNote that you will need valid Spotify app credentials. If you don't have a\nvalid client ID/secret pair of keys, you can create a Spotify app `here\n<https://developer.spotify.com/my-applications/#!/applications/create>`_.\n\nOnce you have created a Spotify app, you will also have to add a redirect URI\nfor this app (\"Add URI\").\n\nAfter the first run of the CLI tool, the authentication token and credentials\nwill be stored in a local configuration file.\n\nRequirements\n------------\n\nIf you wish to convert the downloaded files to mp3 format, you will need to\ninstall ffmpeg or avconv.\n\nOn Debian/Ubuntu::\n\n    sudo apt-get install ffmpeg\n\nOn Mac OS, just follow the instructions from the `official ffmpeg website <https://www.ffmpeg.org/download.html>`__.\n\nUsage\n=====\n\n::\n    \n    $ spotify-playlist -h\n    usage: spotify-playlist [-h] [-i] [-S] [-a {webm,ogg,m4a}] [-C] playlist dst\n\n    Download the tracks of a Spotify playlist from YouTube\n\n    positional arguments:\n      playlist              Name of playlist. E.g: 'Road music'\n      dst                   Destination directory\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -i, --interactive     Interactively select the song to download from\n                            Youtube.\n      -S, --no-skip         Don't skip files that were already downloaded.\n      -a {webm,ogg,m4a}, --audio {webm,ogg,m4a}\n                            Preferred audio format to download. By default, the\n                            best quality audio format will be downloaded. On some\n                            platforms (e.g: Debian Wheezy), the default ffmpeg\n                            utility does not support audio conversion from webm,\n                            so you should specify a different value here. Note\n                            that this audio file will eventually be converted to\n                            mp3 (unless you specify --no-convert)\n      -C, --no-convert      Don't convert audio files to mp3 format.\n\n::\n\n    $ spotify-mymusic -h\n    usage: spotify-mymusic [-h] [-l LIMIT] [-i] [-S] [-a {webm,ogg,m4a}] [-C] dst\n\n    Download the songs from 'Your Music'\n\n    positional arguments:\n      dst                   Destination directory\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -l LIMIT, --limit LIMIT\n                            Limit to top N songs\n      -i, --interactive     Interactively select the song to download from\n                            Youtube.\n      -S, --no-skip         Don't skip files that were already downloaded.\n      -a {webm,ogg,m4a}, --audio {webm,ogg,m4a}\n                            Preferred audio format to download. By default, the\n                            best quality audio format will be downloaded. On some\n                            platforms (e.g: Debian Wheezy), the default ffmpeg\n                            utility does not support audio conversion from webm,\n                            so you should specify a different value here. Note\n                            that this audio file will eventually be converted to\n                            mp3 (unless you specify --no-convert)\n      -C, --no-convert      Don't convert audio files to mp3 format.\n\nDownload playlist\n-----------------\n\nDownload all songs from 'My Playlist' and save them as mp3::\n\n    spotify-playlist \"My Playlist\" ./music/myspotifyplaylist/\n\nCreate a cronjob to download your Discover Weekly playlist every monday at 7am::\n\n    0 7 * * 1 /home/username/venv/bin/spotify-playlist \"Discover Weekly\" /home/username/music/discoverweekly\n\nWildcards are supported, too::\n\n    spotify-playlist \"Mixtape*\" ./music/\n\nDownload favorite songs\n------------------------\n\nDownload your 30 most recent tracks from \"My Music\"::\n\n    spotify-mymusic -l 30 ./music/mytracks/\n\nInteractive mode\n----------------\n\nBy default, ``spotify-onthego`` downloads the first match found on Youtube for\nthe search ``\"<song title> <artist name>\"`` (song and artist separated by an\nempty space). If you want to manually select the Youtube result to download,\nrun in interactive mode with the ``-i`` option::\n\n    $ spotify-mymusic -i mymusic/\n    ++ Processing Porcupine Tree - Deadwing\n    [1] Porcupine Tree - DeadWing https://www.youtube.com/watch?v=GMEwM3YHiME\n    [2] Porcupine Tree - Deadwing https://www.youtube.com/watch?v=-Rwp-yvmcRM\n    [3] Porcupine Tree - Deadwing [Lyrics on Video] https://www.youtube.com/watch?v=dDepB1mwPhc\n    [4] Making of Deadwing https://www.youtube.com/watch?v=ZuYjGfaixDM\n    [5] Porcupine Tree- Mellotron Scratch https://www.youtube.com/watch?v=Ag2zXiiuF5Q\n    [6] Porcupine Tree - Shesmovedon (Deadwing ver.) https://www.youtube.com/watch?v=OtfJcTBklh8\n    [7] Porcupine Tree - Shallow (lyrics) https://www.youtube.com/watch?v=7_8UmXv5Xac\n    [8] Porcupine Tree - Arriving Somewhere But Not Here (lyrics on screen) https://www.youtube.com/watch?v=f2ROFnA4HRA\n    [9] Porcupine Tree - Deadwing (Lyrics) https://www.youtube.com/watch?v=tMMlEZCaQTY\n    [10] Deadwing- Porcupine Tree(Drum Cover) https://www.youtube.com/watch?v=Zb5KTnXGiNU\n    Select song to download (default: 1, next=n):\n\nOf course, interactive mode should not be used in automated cron jobs.\n\nTroubleshooting\n===============\n\nIn case of 401 error, this may be caused by a previous authorization token that\ndid not have the right scope. Just remove the\n:code:`~/.local/share/spotify-onthego/spotify.token` file and start the command\nagain.\n\nIf mp3 generation fails with an error message related to eyed3, check that your\ninstalled version of eyed3 is at least 0.8::\n\n    $ pip freeze | grep eyeD3\n    eyeD3==0.8\n\n\nDevelopment\n===========\n\nSee something that's not working for you, or something that you would like to\nbe included? Just open a `pull request\n<https://github.com/regisb/spotify-onthego/pulls>`_ with your code, or a\n`Github issue <https://github.com/regisb/spotify-onthego/issues>`_ where you\ndescribe the feature you would like to have. \n\nTo setup a development environment, install the ``dev`` requirements::\n    \n    pip install -r requirements/dev.txt\n\nCode should be `black-formatted <https://black.readthedocs.io/en/stable/>`__. To automatically format your code, run::\n    \n    make format\n\nPeriodically run code lint and formatting tests with:\n\n    make test\n\nLicense\n=======\n\nThis project is licensed under the `GNU General Public License\nv3.0 <https://opensource.org/licenses/gpl-3.0.html>`_.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/regisb/spotify-onthego", "keywords": "spotify youtube download playlist music songs", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "spotify-onthego", "package_url": "https://pypi.org/project/spotify-onthego/", "platform": "", "project_url": "https://pypi.org/project/spotify-onthego/", "project_urls": {"Homepage": "https://github.com/regisb/spotify-onthego"}, "release_url": "https://pypi.org/project/spotify-onthego/1.0.8/", "requires_dist": null, "requires_python": "", "summary": "Download Spotify songs and playlists (with YouTube)", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Download songs and playlist from Spotify. The tracks are downloaded from\nYouTube videos and converted as mp3 files.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install spotify-onthego\n</pre>\n<p>Note that you will need valid Spotify app credentials. If you don\u2019t have a\nvalid client ID/secret pair of keys, you can create a Spotify app <a href=\"https://developer.spotify.com/my-applications/#!/applications/create\" rel=\"nofollow\">here</a>.</p>\n<p>Once you have created a Spotify app, you will also have to add a redirect URI\nfor this app (\u201cAdd URI\u201d).</p>\n<p>After the first run of the CLI tool, the authentication token and credentials\nwill be stored in a local configuration file.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>If you wish to convert the downloaded files to mp3 format, you will need to\ninstall ffmpeg or avconv.</p>\n<p>On Debian/Ubuntu:</p>\n<pre>sudo apt-get install ffmpeg\n</pre>\n<p>On Mac OS, just follow the instructions from the <a href=\"https://www.ffmpeg.org/download.html\" rel=\"nofollow\">official ffmpeg website</a>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ spotify-playlist -h\nusage: spotify-playlist [-h] [-i] [-S] [-a {webm,ogg,m4a}] [-C] playlist dst\n\nDownload the tracks of a Spotify playlist from YouTube\n\npositional arguments:\n  playlist              Name of playlist. E.g: 'Road music'\n  dst                   Destination directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --interactive     Interactively select the song to download from\n                        Youtube.\n  -S, --no-skip         Don't skip files that were already downloaded.\n  -a {webm,ogg,m4a}, --audio {webm,ogg,m4a}\n                        Preferred audio format to download. By default, the\n                        best quality audio format will be downloaded. On some\n                        platforms (e.g: Debian Wheezy), the default ffmpeg\n                        utility does not support audio conversion from webm,\n                        so you should specify a different value here. Note\n                        that this audio file will eventually be converted to\n                        mp3 (unless you specify --no-convert)\n  -C, --no-convert      Don't convert audio files to mp3 format.\n</pre>\n<pre>$ spotify-mymusic -h\nusage: spotify-mymusic [-h] [-l LIMIT] [-i] [-S] [-a {webm,ogg,m4a}] [-C] dst\n\nDownload the songs from 'Your Music'\n\npositional arguments:\n  dst                   Destination directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LIMIT, --limit LIMIT\n                        Limit to top N songs\n  -i, --interactive     Interactively select the song to download from\n                        Youtube.\n  -S, --no-skip         Don't skip files that were already downloaded.\n  -a {webm,ogg,m4a}, --audio {webm,ogg,m4a}\n                        Preferred audio format to download. By default, the\n                        best quality audio format will be downloaded. On some\n                        platforms (e.g: Debian Wheezy), the default ffmpeg\n                        utility does not support audio conversion from webm,\n                        so you should specify a different value here. Note\n                        that this audio file will eventually be converted to\n                        mp3 (unless you specify --no-convert)\n  -C, --no-convert      Don't convert audio files to mp3 format.\n</pre>\n<div id=\"download-playlist\">\n<h3>Download playlist</h3>\n<p>Download all songs from \u2018My Playlist\u2019 and save them as mp3:</p>\n<pre>spotify-playlist \"My Playlist\" ./music/myspotifyplaylist/\n</pre>\n<p>Create a cronjob to download your Discover Weekly playlist every monday at 7am:</p>\n<pre>0 7 * * 1 /home/username/venv/bin/spotify-playlist \"Discover Weekly\" /home/username/music/discoverweekly\n</pre>\n<p>Wildcards are supported, too:</p>\n<pre>spotify-playlist \"Mixtape*\" ./music/\n</pre>\n</div>\n<div id=\"download-favorite-songs\">\n<h3>Download favorite songs</h3>\n<p>Download your 30 most recent tracks from \u201cMy Music\u201d:</p>\n<pre>spotify-mymusic -l 30 ./music/mytracks/\n</pre>\n</div>\n<div id=\"interactive-mode\">\n<h3>Interactive mode</h3>\n<p>By default, <tt><span class=\"pre\">spotify-onthego</span></tt> downloads the first match found on Youtube for\nthe search <tt>\"&lt;song title&gt; &lt;artist name&gt;\"</tt> (song and artist separated by an\nempty space). If you want to manually select the Youtube result to download,\nrun in interactive mode with the <tt><span class=\"pre\">-i</span></tt> option:</p>\n<pre>$ spotify-mymusic -i mymusic/\n++ Processing Porcupine Tree - Deadwing\n[1] Porcupine Tree - DeadWing https://www.youtube.com/watch?v=GMEwM3YHiME\n[2] Porcupine Tree - Deadwing https://www.youtube.com/watch?v=-Rwp-yvmcRM\n[3] Porcupine Tree - Deadwing [Lyrics on Video] https://www.youtube.com/watch?v=dDepB1mwPhc\n[4] Making of Deadwing https://www.youtube.com/watch?v=ZuYjGfaixDM\n[5] Porcupine Tree- Mellotron Scratch https://www.youtube.com/watch?v=Ag2zXiiuF5Q\n[6] Porcupine Tree - Shesmovedon (Deadwing ver.) https://www.youtube.com/watch?v=OtfJcTBklh8\n[7] Porcupine Tree - Shallow (lyrics) https://www.youtube.com/watch?v=7_8UmXv5Xac\n[8] Porcupine Tree - Arriving Somewhere But Not Here (lyrics on screen) https://www.youtube.com/watch?v=f2ROFnA4HRA\n[9] Porcupine Tree - Deadwing (Lyrics) https://www.youtube.com/watch?v=tMMlEZCaQTY\n[10] Deadwing- Porcupine Tree(Drum Cover) https://www.youtube.com/watch?v=Zb5KTnXGiNU\nSelect song to download (default: 1, next=n):\n</pre>\n<p>Of course, interactive mode should not be used in automated cron jobs.</p>\n</div>\n</div>\n<div id=\"troubleshooting\">\n<h2>Troubleshooting</h2>\n<p>In case of 401 error, this may be caused by a previous authorization token that\ndid not have the right scope. Just remove the\n<code>~/.local/share/spotify-onthego/spotify.token</code> file and start the command\nagain.</p>\n<p>If mp3 generation fails with an error message related to eyed3, check that your\ninstalled version of eyed3 is at least 0.8:</p>\n<pre>$ pip freeze | grep eyeD3\neyeD3==0.8\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>See something that\u2019s not working for you, or something that you would like to\nbe included? Just open a <a href=\"https://github.com/regisb/spotify-onthego/pulls\" rel=\"nofollow\">pull request</a> with your code, or a\n<a href=\"https://github.com/regisb/spotify-onthego/issues\" rel=\"nofollow\">Github issue</a> where you\ndescribe the feature you would like to have.</p>\n<p>To setup a development environment, install the <tt>dev</tt> requirements:</p>\n<pre>pip install -r requirements/dev.txt\n</pre>\n<p>Code should be <a href=\"https://black.readthedocs.io/en/stable/\" rel=\"nofollow\">black-formatted</a>. To automatically format your code, run:</p>\n<pre>make format\n</pre>\n<p>Periodically run code lint and formatting tests with:</p>\n<blockquote>\nmake test</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the <a href=\"https://opensource.org/licenses/gpl-3.0.html\" rel=\"nofollow\">GNU General Public License\nv3.0</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6804464, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f5ef1ffdd8a69962b69016a4787f36af", "sha256": "23400d20274b60b5f67cf4c36c390b802510bf68d9090363456fdad8e95a63e1"}, "downloads": -1, "filename": "spotify-onthego-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f5ef1ffdd8a69962b69016a4787f36af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8624, "upload_time": "2017-07-06T13:16:58", "upload_time_iso_8601": "2017-07-06T13:16:58.651594Z", "url": "https://files.pythonhosted.org/packages/6b/c5/8627e964cc623dbfbe7ee79d46b3d8990a720afe63fb6da33789781ab989/spotify-onthego-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3e65eb0a9acdda4326c699b5271f4f64", "sha256": "be8c35828dc652aaf5bd75412994fe41a32e429c09001dedc37cd1574704ab60"}, "downloads": -1, "filename": "spotify-onthego-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3e65eb0a9acdda4326c699b5271f4f64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8637, "upload_time": "2017-07-06T13:27:01", "upload_time_iso_8601": "2017-07-06T13:27:01.869564Z", "url": "https://files.pythonhosted.org/packages/50/33/9ce414c1c3936ac9f2336e5d7e04446e4639187157f62fdf02251b85baa6/spotify-onthego-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "11ce793225bc39f6fa006f2695d23781", "sha256": "2b6e9ed2ebf62499b8c094403afa76c814e0d7a4984dfb2f95b84c4791bb924f"}, "downloads": -1, "filename": "spotify-onthego-1.0.2.tar.gz", "has_sig": false, "md5_digest": "11ce793225bc39f6fa006f2695d23781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8582, "upload_time": "2017-07-06T13:31:21", "upload_time_iso_8601": "2017-07-06T13:31:21.931884Z", "url": "https://files.pythonhosted.org/packages/34/5c/1250ffa1ffe678c942b48ff30d9912f8e87f21759d560b3a8d85bdd8f1bf/spotify-onthego-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "865da3a6963a6ccdff37bc35e2b7cdb6", "sha256": "347a8bd2a0ac3eaea87e00692ff051b0a8fd858a8c3f5d5b452a72d868ce53f4"}, "downloads": -1, "filename": "spotify-onthego-1.0.3.tar.gz", "has_sig": false, "md5_digest": "865da3a6963a6ccdff37bc35e2b7cdb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9300, "upload_time": "2017-07-13T12:11:24", "upload_time_iso_8601": "2017-07-13T12:11:24.190088Z", "url": "https://files.pythonhosted.org/packages/1d/5d/0ebfa0fc2e08018b23b01c08becdfa42667303979842f4479fad1c0045a1/spotify-onthego-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "cd093c058a4dcca70d8f50b0a97bebf1", "sha256": "394954e28bc0b6dd1067104ebe6375333b5ce8459aa41fa511fe00900c89beeb"}, "downloads": -1, "filename": "spotify-onthego-1.0.4.tar.gz", "has_sig": false, "md5_digest": "cd093c058a4dcca70d8f50b0a97bebf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11744, "upload_time": "2017-08-31T16:58:35", "upload_time_iso_8601": "2017-08-31T16:58:35.147679Z", "url": "https://files.pythonhosted.org/packages/ab/a4/c10107ca5eaa46b03b125898ce457e338d63b1df0a94d06a6bf6329b01a6/spotify-onthego-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "38991589e194fd79521ec98d379d3b94", "sha256": "cec69a6f4dee886ff42688f6f1376b3f2bd3403f8951f74ffcae7398cb7d1513"}, "downloads": -1, "filename": "spotify-onthego-1.0.5.tar.gz", "has_sig": false, "md5_digest": "38991589e194fd79521ec98d379d3b94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11746, "upload_time": "2018-03-12T15:57:57", "upload_time_iso_8601": "2018-03-12T15:57:57.385383Z", "url": "https://files.pythonhosted.org/packages/3e/d2/c32e73b5d3e62eb6ef3fc3dcf4c61ae573e04d31b3ce1b87217f094560eb/spotify-onthego-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a0d0822ae5ebf2e63c5706d7ed1c84c8", "sha256": "2556804e4b1a6befcefac6b5571959af6fb005f1eba33ff44f403de4c6f2726c"}, "downloads": -1, "filename": "spotify-onthego-1.0.6.tar.gz", "has_sig": false, "md5_digest": "a0d0822ae5ebf2e63c5706d7ed1c84c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11576, "upload_time": "2018-04-15T13:30:47", "upload_time_iso_8601": "2018-04-15T13:30:47.196778Z", "url": "https://files.pythonhosted.org/packages/b9/35/9cddc2636fb63cdfe6c8fd088673749b45e10174c40d28cb3233a5bbeae8/spotify-onthego-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "e626371bbddebb49a7a80683897cc4fb", "sha256": "ff85aa1493f75602607b5da0d162d63d0b0809f7acb2c6ffab38ea0886dd2689"}, "downloads": -1, "filename": "spotify-onthego-1.0.7.tar.gz", "has_sig": false, "md5_digest": "e626371bbddebb49a7a80683897cc4fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11746, "upload_time": "2018-04-18T05:36:32", "upload_time_iso_8601": "2018-04-18T05:36:32.458610Z", "url": "https://files.pythonhosted.org/packages/57/c8/89cef8b55b813fbed92363f92b04ddbbeb91a338a3ac61ab7f4bbbf8f949/spotify-onthego-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "2a8720b9fa926a665163e99403ba7825", "sha256": "a0641892a56ad8a8de17b3312c0b40fe37044ccefc863b7bd433f3e39b16307c"}, "downloads": -1, "filename": "spotify-onthego-1.0.8.tar.gz", "has_sig": false, "md5_digest": "2a8720b9fa926a665163e99403ba7825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11201, "upload_time": "2020-03-13T08:35:11", "upload_time_iso_8601": "2020-03-13T08:35:11.015317Z", "url": "https://files.pythonhosted.org/packages/70/8e/fbb79c0146c2dde986a22e532449366b7fe3a83d391eabadd7c4f93df034/spotify-onthego-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a8720b9fa926a665163e99403ba7825", "sha256": "a0641892a56ad8a8de17b3312c0b40fe37044ccefc863b7bd433f3e39b16307c"}, "downloads": -1, "filename": "spotify-onthego-1.0.8.tar.gz", "has_sig": false, "md5_digest": "2a8720b9fa926a665163e99403ba7825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11201, "upload_time": "2020-03-13T08:35:11", "upload_time_iso_8601": "2020-03-13T08:35:11.015317Z", "url": "https://files.pythonhosted.org/packages/70/8e/fbb79c0146c2dde986a22e532449366b7fe3a83d391eabadd7c4f93df034/spotify-onthego-1.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:31 2020"}