{"info": {"author": "Yelp, Inc.", "author_email": "opensource+py-zipkin@yelp.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Build Status](https://travis-ci.org/Yelp/py_zipkin.svg?branch=master)](https://travis-ci.org/Yelp/py_zipkin)\n[![Coverage Status](https://img.shields.io/coveralls/Yelp/py_zipkin.svg)](https://coveralls.io/r/Yelp/py_zipkin)\n[![PyPi version](https://img.shields.io/pypi/v/py_zipkin.svg)](https://pypi.python.org/pypi/py_zipkin/)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/py_zipkin.svg)](https://pypi.python.org/pypi/py_zipkin/)\n\npy_zipkin\n---------\n\npy_zipkin provides a context manager/decorator along with some utilities to\nfacilitate the usage of Zipkin in Python applications.\n\nInstall\n-------\n\n```\npip install py_zipkin\n```\n\nUsage\n-----\n\npy_zipkin requires a `transport_handler` object that handles logging zipkin\nmessages to a central logging service such as kafka or scribe.\n\n`py_zipkin.zipkin.zipkin_span` is the main tool for starting zipkin traces or\nlogging spans inside an ongoing trace. zipkin_span can be used as a context\nmanager or a decorator.\n\n#### Usage #1: Start a trace with a given sampling rate\n\n```python\nfrom py_zipkin.zipkin import zipkin_span\n\ndef some_function(a, b):\n    with zipkin_span(\n        service_name='my_service',\n        span_name='my_span_name',\n        transport_handler=some_handler,\n        port=42,\n        sample_rate=0.05, # Value between 0.0 and 100.0\n    ):\n        do_stuff(a, b)\n```\n\n#### Usage #2: Trace a service call\n\nThe difference between this and Usage #1 is that the zipkin_attrs are calculated\nseparately and passed in, thus negating the need of the sample_rate param.\n\n```python\n# Define a pyramid tween\ndef tween(request):\n    zipkin_attrs = some_zipkin_attr_creator(request)\n    with zipkin_span(\n        service_name='my_service',\n        span_name='my_span_name',\n        zipkin_attrs=zipkin_attrs,\n        transport_handler=some_handler,\n        port=22,\n    ) as zipkin_context:\n        response = handler(request)\n        zipkin_context.update_binary_annotations(\n            some_binary_annotations)\n        return response\n```\n\n#### Usage #3: Log a span inside an ongoing trace\n\nThis can be also be used inside itself to produce continuously nested spans.\n\n```python\n@zipkin_span(service_name='my_service', span_name='some_function')\ndef some_function(a, b):\n    return do_stuff(a, b)\n```\n\n#### Other utilities\n\n`zipkin_span.update_binary_annotations()` can be used inside a zipkin trace\nto add to the existing set of binary annotations.\n\n```python\ndef some_function(a, b):\n    with zipkin_span(\n        service_name='my_service',\n        span_name='some_function',\n        transport_handler=some_handler,\n        port=42,\n        sample_rate=0.05,\n    ) as zipkin_context:\n        result = do_stuff(a, b)\n        zipkin_context.update_binary_annotations({'result': result})\n```\n\n`zipkin_span.add_sa_binary_annotation()` can be used to add a binary annotation\nto the current span with the key 'sa'. This function allows the user to specify the\ndestination address of the service being called (useful if the destination doesn't\nsupport zipkin). See http://zipkin.io/pages/data_model.html for more information on the\n'sa' binary annotation.\n\n> NOTE: the V2 span format only support 1 \"sa\" endpoint (represented by remoteEndpoint)\n> so `add_sa_binary_annotation` now raises `ValueError` if you try to set multiple \"sa\"\n> annotations for the same span.\n\n```python\ndef some_function():\n    with zipkin_span(\n        service_name='my_service',\n        span_name='some_function',\n        transport_handler=some_handler,\n        port=42,\n        sample_rate=0.05,\n    ) as zipkin_context:\n        make_call_to_non_instrumented_service()\n        zipkin_context.add_sa_binary_annotation(\n            port=123,\n            service_name='non_instrumented_service',\n            host='12.34.56.78',\n        )\n```\n\n`create_http_headers_for_new_span()` creates a set of HTTP headers that can be forwarded\nin a request to another service.\n\n```python\nheaders = {}\nheaders.update(create_http_headers_for_new_span())\nhttp_client.get(\n    path='some_url',\n    headers=headers,\n)\n```\n\nTransport\n---------\n\npy_zipkin (for the moment) thrift-encodes spans. The actual transport layer is\npluggable, though.\n\nThe recommended way to implement a new transport handler is to subclass\n`py_zipkin.transport.BaseTransportHandler` and implement the `send` and\n`get_max_payload_bytes` methods.\n\n`send` receives an already encoded thrift list as argument.\n`get_max_payload_bytes` should return the maximum payload size supported by your\ntransport, or `None` if you can send arbitrarily big messages.\n\nThe simplest way to get spans to the collector is via HTTP POST. Here's an\nexample of a simple HTTP transport using the `requests` library. This assumes\nyour Zipkin collector is running at localhost:9411.\n\n> NOTE: older versions of py_zipkin suggested implementing the transport handler\n> as a function with a single argument. That's still supported and should work\n> with the current py_zipkin version, but it's deprecated.\n\n```python\nimport requests\n\nfrom py_zipkin.transport import BaseTransportHandler\n\n\nclass HttpTransport(BaseTransportHandler):\n\n    def get_max_payload_bytes(self):\n        return None\n\n    def send(self, encoded_span):\n        # The collector expects a thrift-encoded list of spans.\n        requests.post(\n            'http://localhost:9411/api/v1/spans',\n            data=encoded_span,\n            headers={'Content-Type': 'application/x-thrift'},\n        )\n```\n\nIf you have the ability to send spans over Kafka (more like what you might do\nin production), you'd do something like the following, using the\n[kafka-python](https://pypi.python.org/pypi/kafka-python) package:\n\n```python\nfrom kafka import SimpleProducer, KafkaClient\n\nfrom py_zipkin.transport import BaseTransportHandler\n\n\nclass KafkaTransport(BaseTransportHandler):\n\n    def get_max_payload_bytes(self):\n        # By default Kafka rejects messages bigger than 1000012 bytes.\n        return 1000012\n\n    def send(self, message):\n        kafka_client = KafkaClient('{}:{}'.format('localhost', 9092))\n        producer = SimpleProducer(kafka_client)\n        producer.send_messages('kafka_topic_name', message)\n```\n\nUsing in multithreading evironments\n-----------------------------------\n\nIf you want to use py_zipkin in a cooperative multithreading environment,\ne.g. asyncio, you need to explicitly pass an instance of `py_zipkin.storage.Stack`\nas parameter `context_stack` for `zipkin_span` and `create_http_headers_for_new_span`.\nBy default, py_zipkin uses a thread local storage for the attributes, which is\ndefined in `py_zipkin.storage.ThreadLocalStack`.\n\nAdditionally, you'll also need to explicitly pass an instance of\n`py_zipkin.storage.SpanStorage` as parameter `span_storage` to `zipkin_span`.\n\n```python\nfrom py_zipkin.zipkin import zipkin_span\nfrom py_zipkin.storage import Stack\nfrom py_zipkin.storage import SpanStorage\n\n\ndef my_function():\n    context_stack = Stack()\n    span_storage = SpanStorage()\n    await my_function(context_stack, span_storage)\n\nasync def my_function(context_stack, span_storage):\n    with zipkin_span(\n        service_name='my_service',\n        span_name='some_function',\n        transport_handler=some_handler,\n        port=42,\n        sample_rate=0.05,\n        context_stack=context_stack,\n        span_storage=span_storage,\n    ):\n        result = do_stuff(a, b)\n```\n\n\nFirehose mode [EXPERIMENTAL]\n----------------------------\n\n\"Firehose mode\" records 100% of the spans, regardless of\nsampling rate. This is useful if you want to treat these spans\ndifferently, e.g. send them to a different backend that has limited\nretention. It works in tandem with normal operation, however there may\nbe additional overhead. In order to use this, you add a\n`firehose_handler` just like you add a `transport_handler`.\n\nThis feature should be considered experimental and may be removed at\nany time without warning. If you do use this, be sure to send\nasynchronously to avoid excess overhead for every request.\n\n\nLicense\n-------\n\nCopyright (c) 2018, Yelp, Inc. All Rights reserved. Apache v2\n\n0.20.0 (2020-03-09)\n-------------------\n- Add create_http_headers helper\n\n0.19.0 (2020-02-28)\n-------------------\n- Add zipkin_span.add_annotation() method\n- Add autoinstrumentation for python Threads\n- Allow creating a copy of Tracer\n- Add extract_zipkin_attrs_from_headers() helper\n\n0.18.7 (2020-01-15)\n-------------------\n- Expose encoding.create_endpoint helper\n\n0.18.6 (2019-09-23)\n-------------------\n- Ensure tags are strings when using V2_JSON encoding\n\n0.18.5 (2019-08-08)\n-------------------\n- Add testing.MockTransportHandler module\n\n0.18.4 (2019-08-02)\n-------------------\n- Fix thriftpy2 import to allow cython module\n\n0.18.3 (2019-05-15)\n-------------------\n- Fix unicode bug when decoding thrift tag strings\n\n0.18.2 (2019-03-26)\n-------------------\n- Handled exception while emitting trace and log the error\n- Ensure tracer is cleared regardless span of emit outcome\n\n0.18.1 (2019-02-22)\n-------------------\n- Fix ThreadLocalStack() bug introduced in 0.18.0\n\n0.18.0 (2019-02-13)\n-------------------\n- Fix multithreading issues\n- Added Tracer module\n\n0.17.1 (2019-02-05)\n-------------------\n- Ignore transport_handler overrides in an inner span since that causes\n  spans to be dropped.\n\n0.17.0 (2019-01-25)\n-------------------\n- Support python 3.7\n- py-zipkin now depends on thriftpy2 rather than thriftpy. They\n  can coexist in the same codebase, so it should be safe to upgrade.\n\n0.16.1 (2018-11-16)\n-------------------\n- Handle null timestamps when decoding thrift traces\n\n0.16.0 (2018-11-13)\n-------------------\n- py_zipkin is now able to convert V1 thrift spans to V2 JSON\n\n0.15.1 (2018-10-31)\n-------------------\n- Changed DeprecationWarnings to logging.warning\n\n0.15.0 (2018-10-22)\n-------------------\n- Added support for V2 JSON encoding.\n- Fixed TransportHandler bug that was affecting also V1 JSON.\n\n0.14.1 (2018-10-09)\n-------------------\n- Fixed memory leak introduced in 0.13.0.\n\n0.14.0 (2018-10-01)\n-------------------\n- Support JSON encoding for V1 spans.\n- Allow overriding the span_name after creation.\n\n0.13.0 (2018-06-25)\n-------------------\n- Removed deprecated `zipkin_logger.debug()` interface.\n- `py_zipkin.stack` was renamed as `py_zipkin.storage`. If you were\n  importing this module, you'll need to update your code.\n\n0.12.0 (2018-05-29)\n-------------------\n- Support max payload size for transport handlers.\n- Transport handlers should now be implemented as classes\n  extending py_zipkin.transport.BaseTransportHandler.\n\n0.11.2 (2018-05-23)\n-------------------\n- Don't overwrite passed in annotations\n\n0.11.1 (2018-05-23)\n-------------------\n- Add binary annotations to the span even if the request is not being\n  sampled. This fixes binary annotations for firehose spans.\n\n0.11.0 (2018-02-08)\n-------------------\n- Add support for \"firehose mode\", which logs 100% of the spans\n  regardless of sample rate.\n\n0.10.1 (2018-02-05)\n-------------------\n- context_stack will now default to `ThreadLocalStack()` if passed as\n  `None`\n\n0.10.0 (2018-02-05)\n-------------------\n- Add support for using explicit in-process context storage instead of\n  using thread_local. This allows you to use py_zipkin in cooperative\n  multitasking environments e.g. asyncio\n- `py_zipkin.thread_local` is now deprecated. Instead use\n  `py_zipkin.stack.ThreadLocalStack()`\n- TraceId and SpanId generation performance improvements.\n- 128-bit TraceIds now start with an epoch timestamp to support easy\n  interop with AWS X-Ray\n\n0.9.0 (2017-07-31)\n------------------\n- Add batch span sending. Note that spans are now sent in lists.\n\n0.8.3 (2017-07-10)\n------------------\n- Be defensive about having logging handlers configured to avoid throwing\n  NullHandler attribute errors\n\n0.8.2 (2017-06-30)\n------------------\n- Don't log ss and sr annotations when in a client span context\n- Add error binary annotation if an exception occurs\n\n0.8.1 (2017-06-16)\n------------------\n- Fixed server send timing to more accurately reflect when server send\n  actually occurs.\n- Replaced logging_start annotation with logging_end\n\n0.8.0 (2017-06-01)\n------------------\n- Added 128-bit trace id support\n- Added ability to explicitly specify host for a span\n- Added exception handling if host can't be determined automatically\n- SERVER_ADDR ('sa') binary annotations can be added to spans\n- py36 support\n\n0.7.1 (2017-05-01)\n------------------\n- Fixed a bug where `update_binary_annotations` would fail for a child\n  span in a trace that is not being sampled\n\n0.7.0 (2017-03-06)\n------------------\n- Simplify `update_binary_annotations` for both root and non-root spans\n\n0.6.0 (2017-02-03)\n------------------\n- Added support for forcing `zipkin_span` to report timestamp/duration.\n  Changes API of `zipkin_span`, but defaults back to existing behavior.\n\n0.5.0 (2017-02-01)\n------------------\n- Properly set timestamp/duration on server and local spans\n- Updated thrift spec to include these new fields\n- The `zipkin_span` entrypoint should be backwards compatible\n\n0.4.4 (2016-11-29)\n------------------\n- Add optional annotation for when Zipkin logging starts\n\n0.4.3 (2016-11-04)\n------------------\n- Fix bug in zipkin_span decorator\n\n0.4.2 (2016-11-01)\n------------------\n- Be defensive about transport_handler when logging spans.\n\n0.4.1 (2016-10-24)\n------------------\n- Add ability to override span_id when creating new ZipkinAttrs.\n\n0.4.0 (2016-10-20)\n------------------\n- Added `start` and `stop` functions as friendlier versions of the\n  __enter__ and __exit__ functions.\n\n0.3.1 (2016-09-30)\n------------------\n- Adds new param to thrift.create_endpoint allowing creation of\n  thrift Endpoint objects on a proxy machine representing another\n  host.\n\n0.2.1 (2016-09-30)\n------------------\n- Officially \"release\" v0.2.0. Accidentally pushed a v0.2.0 without\n  the proper version bump, so v0.2.1 is the new real version. Please\n  use this instead of v0.2.0.\n\n0.2.0 (2016-09-30)\n------------------\n- Fix problem where if zipkin_attrs and sample_rate were passed, but\n  zipkin_attrs.is_sampled=True, new zipkin_attrs were being generated.\n\n0.1.2 (2016-09-29)\n------------------\n- Fix sampling algorithm that always sampled for rates > 50%\n\n0.1.1 (2016-07-05)\n------------------\n- First py_zipkin version with context manager/decorator functionality.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Yelp/py_zipkin", "keywords": "", "license": "Copyright Yelp 2019", "maintainer": "", "maintainer_email": "", "name": "py-zipkin", "package_url": "https://pypi.org/project/py-zipkin/", "platform": "", "project_url": "https://pypi.org/project/py-zipkin/", "project_urls": {"Homepage": "https://github.com/Yelp/py_zipkin"}, "release_url": "https://pypi.org/project/py-zipkin/0.20.0/", "requires_dist": ["six", "thriftpy2 (>=0.4.0)", "enum34 ; python_version==\"2.7\"", "protobuf ; extra == 'protobuf'"], "requires_python": "", "summary": "Library for using Zipkin in Python.", "version": "0.20.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/Yelp/py_zipkin\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/799b149a304c2426d009851608b267c9513034c8/68747470733a2f2f7472617669732d63692e6f72672f59656c702f70795f7a69706b696e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/Yelp/py_zipkin\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/034f176dc4e4a24c581d990641c5509325a50b00/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f59656c702f70795f7a69706b696e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/py_zipkin/\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d9cbff28e29faad5f53092565d1f608ec92d111/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70795f7a69706b696e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/py_zipkin/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bab3c6bc77cea5ec3c8bcaca986998cb16b6697e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70795f7a69706b696e2e737667\"></a></p>\n<h2>py_zipkin</h2>\n<p>py_zipkin provides a context manager/decorator along with some utilities to\nfacilitate the usage of Zipkin in Python applications.</p>\n<h2>Install</h2>\n<pre><code>pip install py_zipkin\n</code></pre>\n<h2>Usage</h2>\n<p>py_zipkin requires a <code>transport_handler</code> object that handles logging zipkin\nmessages to a central logging service such as kafka or scribe.</p>\n<p><code>py_zipkin.zipkin.zipkin_span</code> is the main tool for starting zipkin traces or\nlogging spans inside an ongoing trace. zipkin_span can be used as a context\nmanager or a decorator.</p>\n<h4>Usage #1: Start a trace with a given sampling rate</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">py_zipkin.zipkin</span> <span class=\"kn\">import</span> <span class=\"n\">zipkin_span</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">zipkin_span</span><span class=\"p\">(</span>\n        <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'my_service'</span><span class=\"p\">,</span>\n        <span class=\"n\">span_name</span><span class=\"o\">=</span><span class=\"s1\">'my_span_name'</span><span class=\"p\">,</span>\n        <span class=\"n\">transport_handler</span><span class=\"o\">=</span><span class=\"n\">some_handler</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span>\n        <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"c1\"># Value between 0.0 and 100.0</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">do_stuff</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n<h4>Usage #2: Trace a service call</h4>\n<p>The difference between this and Usage #1 is that the zipkin_attrs are calculated\nseparately and passed in, thus negating the need of the sample_rate param.</p>\n<pre><span class=\"c1\"># Define a pyramid tween</span>\n<span class=\"k\">def</span> <span class=\"nf\">tween</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">zipkin_attrs</span> <span class=\"o\">=</span> <span class=\"n\">some_zipkin_attr_creator</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">zipkin_span</span><span class=\"p\">(</span>\n        <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'my_service'</span><span class=\"p\">,</span>\n        <span class=\"n\">span_name</span><span class=\"o\">=</span><span class=\"s1\">'my_span_name'</span><span class=\"p\">,</span>\n        <span class=\"n\">zipkin_attrs</span><span class=\"o\">=</span><span class=\"n\">zipkin_attrs</span><span class=\"p\">,</span>\n        <span class=\"n\">transport_handler</span><span class=\"o\">=</span><span class=\"n\">some_handler</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">22</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zipkin_context</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"n\">zipkin_context</span><span class=\"o\">.</span><span class=\"n\">update_binary_annotations</span><span class=\"p\">(</span>\n            <span class=\"n\">some_binary_annotations</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre>\n<h4>Usage #3: Log a span inside an ongoing trace</h4>\n<p>This can be also be used inside itself to produce continuously nested spans.</p>\n<pre><span class=\"nd\">@zipkin_span</span><span class=\"p\">(</span><span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'my_service'</span><span class=\"p\">,</span> <span class=\"n\">span_name</span><span class=\"o\">=</span><span class=\"s1\">'some_function'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">do_stuff</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n<h4>Other utilities</h4>\n<p><code>zipkin_span.update_binary_annotations()</code> can be used inside a zipkin trace\nto add to the existing set of binary annotations.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">zipkin_span</span><span class=\"p\">(</span>\n        <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'my_service'</span><span class=\"p\">,</span>\n        <span class=\"n\">span_name</span><span class=\"o\">=</span><span class=\"s1\">'some_function'</span><span class=\"p\">,</span>\n        <span class=\"n\">transport_handler</span><span class=\"o\">=</span><span class=\"n\">some_handler</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span>\n        <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zipkin_context</span><span class=\"p\">:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">do_stuff</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n        <span class=\"n\">zipkin_context</span><span class=\"o\">.</span><span class=\"n\">update_binary_annotations</span><span class=\"p\">({</span><span class=\"s1\">'result'</span><span class=\"p\">:</span> <span class=\"n\">result</span><span class=\"p\">})</span>\n</pre>\n<p><code>zipkin_span.add_sa_binary_annotation()</code> can be used to add a binary annotation\nto the current span with the key 'sa'. This function allows the user to specify the\ndestination address of the service being called (useful if the destination doesn't\nsupport zipkin). See <a href=\"http://zipkin.io/pages/data_model.html\" rel=\"nofollow\">http://zipkin.io/pages/data_model.html</a> for more information on the\n'sa' binary annotation.</p>\n<blockquote>\n<p>NOTE: the V2 span format only support 1 \"sa\" endpoint (represented by remoteEndpoint)\nso <code>add_sa_binary_annotation</code> now raises <code>ValueError</code> if you try to set multiple \"sa\"\nannotations for the same span.</p>\n</blockquote>\n<pre><span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">zipkin_span</span><span class=\"p\">(</span>\n        <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'my_service'</span><span class=\"p\">,</span>\n        <span class=\"n\">span_name</span><span class=\"o\">=</span><span class=\"s1\">'some_function'</span><span class=\"p\">,</span>\n        <span class=\"n\">transport_handler</span><span class=\"o\">=</span><span class=\"n\">some_handler</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span>\n        <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zipkin_context</span><span class=\"p\">:</span>\n        <span class=\"n\">make_call_to_non_instrumented_service</span><span class=\"p\">()</span>\n        <span class=\"n\">zipkin_context</span><span class=\"o\">.</span><span class=\"n\">add_sa_binary_annotation</span><span class=\"p\">(</span>\n            <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">,</span>\n            <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'non_instrumented_service'</span><span class=\"p\">,</span>\n            <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'12.34.56.78'</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p><code>create_http_headers_for_new_span()</code> creates a set of HTTP headers that can be forwarded\nin a request to another service.</p>\n<pre><span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">create_http_headers_for_new_span</span><span class=\"p\">())</span>\n<span class=\"n\">http_client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'some_url'</span><span class=\"p\">,</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Transport</h2>\n<p>py_zipkin (for the moment) thrift-encodes spans. The actual transport layer is\npluggable, though.</p>\n<p>The recommended way to implement a new transport handler is to subclass\n<code>py_zipkin.transport.BaseTransportHandler</code> and implement the <code>send</code> and\n<code>get_max_payload_bytes</code> methods.</p>\n<p><code>send</code> receives an already encoded thrift list as argument.\n<code>get_max_payload_bytes</code> should return the maximum payload size supported by your\ntransport, or <code>None</code> if you can send arbitrarily big messages.</p>\n<p>The simplest way to get spans to the collector is via HTTP POST. Here's an\nexample of a simple HTTP transport using the <code>requests</code> library. This assumes\nyour Zipkin collector is running at localhost:9411.</p>\n<blockquote>\n<p>NOTE: older versions of py_zipkin suggested implementing the transport handler\nas a function with a single argument. That's still supported and should work\nwith the current py_zipkin version, but it's deprecated.</p>\n</blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">py_zipkin.transport</span> <span class=\"kn\">import</span> <span class=\"n\">BaseTransportHandler</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HttpTransport</span><span class=\"p\">(</span><span class=\"n\">BaseTransportHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_max_payload_bytes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">encoded_span</span><span class=\"p\">):</span>\n        <span class=\"c1\"># The collector expects a thrift-encoded list of spans.</span>\n        <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s1\">'http://localhost:9411/api/v1/spans'</span><span class=\"p\">,</span>\n            <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">encoded_span</span><span class=\"p\">,</span>\n            <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/x-thrift'</span><span class=\"p\">},</span>\n        <span class=\"p\">)</span>\n</pre>\n<p>If you have the ability to send spans over Kafka (more like what you might do\nin production), you'd do something like the following, using the\n<a href=\"https://pypi.python.org/pypi/kafka-python\" rel=\"nofollow\">kafka-python</a> package:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kafka</span> <span class=\"kn\">import</span> <span class=\"n\">SimpleProducer</span><span class=\"p\">,</span> <span class=\"n\">KafkaClient</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">py_zipkin.transport</span> <span class=\"kn\">import</span> <span class=\"n\">BaseTransportHandler</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KafkaTransport</span><span class=\"p\">(</span><span class=\"n\">BaseTransportHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_max_payload_bytes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># By default Kafka rejects messages bigger than 1000012 bytes.</span>\n        <span class=\"k\">return</span> <span class=\"mi\">1000012</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"n\">kafka_client</span> <span class=\"o\">=</span> <span class=\"n\">KafkaClient</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">:</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">9092</span><span class=\"p\">))</span>\n        <span class=\"n\">producer</span> <span class=\"o\">=</span> <span class=\"n\">SimpleProducer</span><span class=\"p\">(</span><span class=\"n\">kafka_client</span><span class=\"p\">)</span>\n        <span class=\"n\">producer</span><span class=\"o\">.</span><span class=\"n\">send_messages</span><span class=\"p\">(</span><span class=\"s1\">'kafka_topic_name'</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n</pre>\n<h2>Using in multithreading evironments</h2>\n<p>If you want to use py_zipkin in a cooperative multithreading environment,\ne.g. asyncio, you need to explicitly pass an instance of <code>py_zipkin.storage.Stack</code>\nas parameter <code>context_stack</code> for <code>zipkin_span</code> and <code>create_http_headers_for_new_span</code>.\nBy default, py_zipkin uses a thread local storage for the attributes, which is\ndefined in <code>py_zipkin.storage.ThreadLocalStack</code>.</p>\n<p>Additionally, you'll also need to explicitly pass an instance of\n<code>py_zipkin.storage.SpanStorage</code> as parameter <code>span_storage</code> to <code>zipkin_span</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">py_zipkin.zipkin</span> <span class=\"kn\">import</span> <span class=\"n\">zipkin_span</span>\n<span class=\"kn\">from</span> <span class=\"nn\">py_zipkin.storage</span> <span class=\"kn\">import</span> <span class=\"n\">Stack</span>\n<span class=\"kn\">from</span> <span class=\"nn\">py_zipkin.storage</span> <span class=\"kn\">import</span> <span class=\"n\">SpanStorage</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_function</span><span class=\"p\">():</span>\n    <span class=\"n\">context_stack</span> <span class=\"o\">=</span> <span class=\"n\">Stack</span><span class=\"p\">()</span>\n    <span class=\"n\">span_storage</span> <span class=\"o\">=</span> <span class=\"n\">SpanStorage</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">my_function</span><span class=\"p\">(</span><span class=\"n\">context_stack</span><span class=\"p\">,</span> <span class=\"n\">span_storage</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">my_function</span><span class=\"p\">(</span><span class=\"n\">context_stack</span><span class=\"p\">,</span> <span class=\"n\">span_storage</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">zipkin_span</span><span class=\"p\">(</span>\n        <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s1\">'my_service'</span><span class=\"p\">,</span>\n        <span class=\"n\">span_name</span><span class=\"o\">=</span><span class=\"s1\">'some_function'</span><span class=\"p\">,</span>\n        <span class=\"n\">transport_handler</span><span class=\"o\">=</span><span class=\"n\">some_handler</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span>\n        <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span>\n        <span class=\"n\">context_stack</span><span class=\"o\">=</span><span class=\"n\">context_stack</span><span class=\"p\">,</span>\n        <span class=\"n\">span_storage</span><span class=\"o\">=</span><span class=\"n\">span_storage</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">do_stuff</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n<h2>Firehose mode [EXPERIMENTAL]</h2>\n<p>\"Firehose mode\" records 100% of the spans, regardless of\nsampling rate. This is useful if you want to treat these spans\ndifferently, e.g. send them to a different backend that has limited\nretention. It works in tandem with normal operation, however there may\nbe additional overhead. In order to use this, you add a\n<code>firehose_handler</code> just like you add a <code>transport_handler</code>.</p>\n<p>This feature should be considered experimental and may be removed at\nany time without warning. If you do use this, be sure to send\nasynchronously to avoid excess overhead for every request.</p>\n<h2>License</h2>\n<p>Copyright (c) 2018, Yelp, Inc. All Rights reserved. Apache v2</p>\n<h2>0.20.0 (2020-03-09)</h2>\n<ul>\n<li>Add create_http_headers helper</li>\n</ul>\n<h2>0.19.0 (2020-02-28)</h2>\n<ul>\n<li>Add zipkin_span.add_annotation() method</li>\n<li>Add autoinstrumentation for python Threads</li>\n<li>Allow creating a copy of Tracer</li>\n<li>Add extract_zipkin_attrs_from_headers() helper</li>\n</ul>\n<h2>0.18.7 (2020-01-15)</h2>\n<ul>\n<li>Expose encoding.create_endpoint helper</li>\n</ul>\n<h2>0.18.6 (2019-09-23)</h2>\n<ul>\n<li>Ensure tags are strings when using V2_JSON encoding</li>\n</ul>\n<h2>0.18.5 (2019-08-08)</h2>\n<ul>\n<li>Add testing.MockTransportHandler module</li>\n</ul>\n<h2>0.18.4 (2019-08-02)</h2>\n<ul>\n<li>Fix thriftpy2 import to allow cython module</li>\n</ul>\n<h2>0.18.3 (2019-05-15)</h2>\n<ul>\n<li>Fix unicode bug when decoding thrift tag strings</li>\n</ul>\n<h2>0.18.2 (2019-03-26)</h2>\n<ul>\n<li>Handled exception while emitting trace and log the error</li>\n<li>Ensure tracer is cleared regardless span of emit outcome</li>\n</ul>\n<h2>0.18.1 (2019-02-22)</h2>\n<ul>\n<li>Fix ThreadLocalStack() bug introduced in 0.18.0</li>\n</ul>\n<h2>0.18.0 (2019-02-13)</h2>\n<ul>\n<li>Fix multithreading issues</li>\n<li>Added Tracer module</li>\n</ul>\n<h2>0.17.1 (2019-02-05)</h2>\n<ul>\n<li>Ignore transport_handler overrides in an inner span since that causes\nspans to be dropped.</li>\n</ul>\n<h2>0.17.0 (2019-01-25)</h2>\n<ul>\n<li>Support python 3.7</li>\n<li>py-zipkin now depends on thriftpy2 rather than thriftpy. They\ncan coexist in the same codebase, so it should be safe to upgrade.</li>\n</ul>\n<h2>0.16.1 (2018-11-16)</h2>\n<ul>\n<li>Handle null timestamps when decoding thrift traces</li>\n</ul>\n<h2>0.16.0 (2018-11-13)</h2>\n<ul>\n<li>py_zipkin is now able to convert V1 thrift spans to V2 JSON</li>\n</ul>\n<h2>0.15.1 (2018-10-31)</h2>\n<ul>\n<li>Changed DeprecationWarnings to logging.warning</li>\n</ul>\n<h2>0.15.0 (2018-10-22)</h2>\n<ul>\n<li>Added support for V2 JSON encoding.</li>\n<li>Fixed TransportHandler bug that was affecting also V1 JSON.</li>\n</ul>\n<h2>0.14.1 (2018-10-09)</h2>\n<ul>\n<li>Fixed memory leak introduced in 0.13.0.</li>\n</ul>\n<h2>0.14.0 (2018-10-01)</h2>\n<ul>\n<li>Support JSON encoding for V1 spans.</li>\n<li>Allow overriding the span_name after creation.</li>\n</ul>\n<h2>0.13.0 (2018-06-25)</h2>\n<ul>\n<li>Removed deprecated <code>zipkin_logger.debug()</code> interface.</li>\n<li><code>py_zipkin.stack</code> was renamed as <code>py_zipkin.storage</code>. If you were\nimporting this module, you'll need to update your code.</li>\n</ul>\n<h2>0.12.0 (2018-05-29)</h2>\n<ul>\n<li>Support max payload size for transport handlers.</li>\n<li>Transport handlers should now be implemented as classes\nextending py_zipkin.transport.BaseTransportHandler.</li>\n</ul>\n<h2>0.11.2 (2018-05-23)</h2>\n<ul>\n<li>Don't overwrite passed in annotations</li>\n</ul>\n<h2>0.11.1 (2018-05-23)</h2>\n<ul>\n<li>Add binary annotations to the span even if the request is not being\nsampled. This fixes binary annotations for firehose spans.</li>\n</ul>\n<h2>0.11.0 (2018-02-08)</h2>\n<ul>\n<li>Add support for \"firehose mode\", which logs 100% of the spans\nregardless of sample rate.</li>\n</ul>\n<h2>0.10.1 (2018-02-05)</h2>\n<ul>\n<li>context_stack will now default to <code>ThreadLocalStack()</code> if passed as\n<code>None</code></li>\n</ul>\n<h2>0.10.0 (2018-02-05)</h2>\n<ul>\n<li>Add support for using explicit in-process context storage instead of\nusing thread_local. This allows you to use py_zipkin in cooperative\nmultitasking environments e.g. asyncio</li>\n<li><code>py_zipkin.thread_local</code> is now deprecated. Instead use\n<code>py_zipkin.stack.ThreadLocalStack()</code></li>\n<li>TraceId and SpanId generation performance improvements.</li>\n<li>128-bit TraceIds now start with an epoch timestamp to support easy\ninterop with AWS X-Ray</li>\n</ul>\n<h2>0.9.0 (2017-07-31)</h2>\n<ul>\n<li>Add batch span sending. Note that spans are now sent in lists.</li>\n</ul>\n<h2>0.8.3 (2017-07-10)</h2>\n<ul>\n<li>Be defensive about having logging handlers configured to avoid throwing\nNullHandler attribute errors</li>\n</ul>\n<h2>0.8.2 (2017-06-30)</h2>\n<ul>\n<li>Don't log ss and sr annotations when in a client span context</li>\n<li>Add error binary annotation if an exception occurs</li>\n</ul>\n<h2>0.8.1 (2017-06-16)</h2>\n<ul>\n<li>Fixed server send timing to more accurately reflect when server send\nactually occurs.</li>\n<li>Replaced logging_start annotation with logging_end</li>\n</ul>\n<h2>0.8.0 (2017-06-01)</h2>\n<ul>\n<li>Added 128-bit trace id support</li>\n<li>Added ability to explicitly specify host for a span</li>\n<li>Added exception handling if host can't be determined automatically</li>\n<li>SERVER_ADDR ('sa') binary annotations can be added to spans</li>\n<li>py36 support</li>\n</ul>\n<h2>0.7.1 (2017-05-01)</h2>\n<ul>\n<li>Fixed a bug where <code>update_binary_annotations</code> would fail for a child\nspan in a trace that is not being sampled</li>\n</ul>\n<h2>0.7.0 (2017-03-06)</h2>\n<ul>\n<li>Simplify <code>update_binary_annotations</code> for both root and non-root spans</li>\n</ul>\n<h2>0.6.0 (2017-02-03)</h2>\n<ul>\n<li>Added support for forcing <code>zipkin_span</code> to report timestamp/duration.\nChanges API of <code>zipkin_span</code>, but defaults back to existing behavior.</li>\n</ul>\n<h2>0.5.0 (2017-02-01)</h2>\n<ul>\n<li>Properly set timestamp/duration on server and local spans</li>\n<li>Updated thrift spec to include these new fields</li>\n<li>The <code>zipkin_span</code> entrypoint should be backwards compatible</li>\n</ul>\n<h2>0.4.4 (2016-11-29)</h2>\n<ul>\n<li>Add optional annotation for when Zipkin logging starts</li>\n</ul>\n<h2>0.4.3 (2016-11-04)</h2>\n<ul>\n<li>Fix bug in zipkin_span decorator</li>\n</ul>\n<h2>0.4.2 (2016-11-01)</h2>\n<ul>\n<li>Be defensive about transport_handler when logging spans.</li>\n</ul>\n<h2>0.4.1 (2016-10-24)</h2>\n<ul>\n<li>Add ability to override span_id when creating new ZipkinAttrs.</li>\n</ul>\n<h2>0.4.0 (2016-10-20)</h2>\n<ul>\n<li>Added <code>start</code> and <code>stop</code> functions as friendlier versions of the\n<strong>enter</strong> and <strong>exit</strong> functions.</li>\n</ul>\n<h2>0.3.1 (2016-09-30)</h2>\n<ul>\n<li>Adds new param to thrift.create_endpoint allowing creation of\nthrift Endpoint objects on a proxy machine representing another\nhost.</li>\n</ul>\n<h2>0.2.1 (2016-09-30)</h2>\n<ul>\n<li>Officially \"release\" v0.2.0. Accidentally pushed a v0.2.0 without\nthe proper version bump, so v0.2.1 is the new real version. Please\nuse this instead of v0.2.0.</li>\n</ul>\n<h2>0.2.0 (2016-09-30)</h2>\n<ul>\n<li>Fix problem where if zipkin_attrs and sample_rate were passed, but\nzipkin_attrs.is_sampled=True, new zipkin_attrs were being generated.</li>\n</ul>\n<h2>0.1.2 (2016-09-29)</h2>\n<ul>\n<li>Fix sampling algorithm that always sampled for rates &gt; 50%</li>\n</ul>\n<h2>0.1.1 (2016-07-05)</h2>\n<ul>\n<li>First py_zipkin version with context manager/decorator functionality.</li>\n</ul>\n\n          </div>"}, "last_serial": 6778111, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "a33ce0555be109a13d8286722e0154d9", "sha256": "e052655c0ea2f400b328540d76d80c3dd54bf05d7c185b4ca84bf742cc5a9b2d"}, "downloads": -1, "filename": "py_zipkin-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a33ce0555be109a13d8286722e0154d9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16996, "upload_time": "2016-09-16T18:46:57", "upload_time_iso_8601": "2016-09-16T18:46:57.818476Z", "url": "https://files.pythonhosted.org/packages/1e/59/fd0167dce5a3079f26fe6aab5d36970d40fbc73ad9a3faccea3b17177c35/py_zipkin-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d9dd90308150fb79c3f888d319c84d7", "sha256": "81548025cc8ac808207cfdfab8cb053afa37ab32b7a8d5e0cf4f4a7837618225"}, "downloads": -1, "filename": "py_zipkin-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9d9dd90308150fb79c3f888d319c84d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13771, "upload_time": "2016-09-16T18:47:00", "upload_time_iso_8601": "2016-09-16T18:47:00.071920Z", "url": "https://files.pythonhosted.org/packages/da/b5/e057ac1c76b90ef8c04deeef6aa8504bde4a596b6c6c392212de6af73bda/py_zipkin-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "902e1df443e20da785a6af32025102f8", "sha256": "5e6c842ecbeed062a65a025e46bae87fae1509ba6d182e8269dc763f52775438"}, "downloads": -1, "filename": "py_zipkin-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "902e1df443e20da785a6af32025102f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16970, "upload_time": "2016-09-29T20:03:35", "upload_time_iso_8601": "2016-09-29T20:03:35.883515Z", "url": "https://files.pythonhosted.org/packages/66/3d/a63e95c20e057d72414d6eb6a6bb7d7829c496b7a620b2dd3d065f6601c6/py_zipkin-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "871cc4b21a2bd6358be460a99f677f17", "sha256": "6ae6e12612210cf0d789b2f35c9158d8c4a5461bbf296819638499004b68bc16"}, "downloads": -1, "filename": "py_zipkin-0.1.2.tar.gz", "has_sig": false, "md5_digest": "871cc4b21a2bd6358be460a99f677f17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13415, "upload_time": "2016-09-29T20:03:38", "upload_time_iso_8601": "2016-09-29T20:03:38.505644Z", "url": "https://files.pythonhosted.org/packages/e6/f7/267ffeab683639c5d2e4eee89120f8710644b1db11a32e16023cd5d49103/py_zipkin-0.1.2.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "59dcc3b6bb71762747b754e65288779a", "sha256": "83d9adf3977757bb8df75ce62b054b5a7a6633b395dd3857816c37585bcfb0a0"}, "downloads": -1, "filename": "py_zipkin-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59dcc3b6bb71762747b754e65288779a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22445, "upload_time": "2018-02-06T04:16:32", "upload_time_iso_8601": "2018-02-06T04:16:32.766549Z", "url": "https://files.pythonhosted.org/packages/4f/ce/69fdffbd8f00a4c5cc65f8d627b1c1e43c6e56238273462330ecace8adcb/py_zipkin-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9fcd683f37622e21b5f3235c40898b4", "sha256": "dcc75403ae3ae8f24a46353741644b7b76e4f3262c8d8b40df31709e2c961dcf"}, "downloads": -1, "filename": "py_zipkin-0.10.0.tar.gz", "has_sig": false, "md5_digest": "c9fcd683f37622e21b5f3235c40898b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18800, "upload_time": "2018-02-06T04:16:01", "upload_time_iso_8601": "2018-02-06T04:16:01.617288Z", "url": "https://files.pythonhosted.org/packages/ed/b5/fb28874584e3ed6d03189679e0f8a70337552a551039caca717ea30cb7e3/py_zipkin-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "ab82e80a2b2d9293f794ef71fa40e123", "sha256": "9dbf6091f50a3afe6876c0cd4072670bc0c9b43e83fa876dea4965e0b03291ca"}, "downloads": -1, "filename": "py_zipkin-0.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab82e80a2b2d9293f794ef71fa40e123", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22468, "upload_time": "2018-02-07T19:53:16", "upload_time_iso_8601": "2018-02-07T19:53:16.970224Z", "url": "https://files.pythonhosted.org/packages/71/84/4a974cb251e3bb6e610bc711fd091ec519880d48f3bdb5244a8930b4f21f/py_zipkin-0.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b6de8a8d5bb29938b285994cb52f516", "sha256": "2789d2d925fd6d27003eeed9582d500570c375fc59d89175688f45e9e96f4a9a"}, "downloads": -1, "filename": "py_zipkin-0.10.1.tar.gz", "has_sig": false, "md5_digest": "6b6de8a8d5bb29938b285994cb52f516", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18817, "upload_time": "2018-02-07T19:54:18", "upload_time_iso_8601": "2018-02-07T19:54:18.868521Z", "url": "https://files.pythonhosted.org/packages/ce/6e/370bdfb15da5a9117e4d070ee8bf1bde20bea55e1fc9eb22a9f08420f217/py_zipkin-0.10.1.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "29643e8ca886aa1e2dac4b58dbc68ab5", "sha256": "bd1caeb58ea584802a0f8bfe767e641499bf2b16db03bed856cd2586563800e1"}, "downloads": -1, "filename": "py_zipkin-0.11.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "29643e8ca886aa1e2dac4b58dbc68ab5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22783, "upload_time": "2018-02-08T22:17:14", "upload_time_iso_8601": "2018-02-08T22:17:14.894549Z", "url": "https://files.pythonhosted.org/packages/ef/87/e8fc3f124d491e635023a71f256769691037fc1451e5f5fb73846d6322d8/py_zipkin-0.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e75a82d4a0d3e5504ae875fb60aab25", "sha256": "eb2367674c352c98104fcdd64c61adeca3ec68f5944dabbb512f2a0624e8c797"}, "downloads": -1, "filename": "py_zipkin-0.11.0.tar.gz", "has_sig": true, "md5_digest": "0e75a82d4a0d3e5504ae875fb60aab25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19108, "upload_time": "2018-02-08T22:17:16", "upload_time_iso_8601": "2018-02-08T22:17:16.105681Z", "url": "https://files.pythonhosted.org/packages/2c/5b/462179a881a9ff9b33d097ffcc9d681b26010a982850ac30faa012b617a2/py_zipkin-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "2033b15d36b3517adb776009b91bba18", "sha256": "c1f7919fd365530da3cf57b5b073087176b863d8c82a387efef71d42cbc96758"}, "downloads": -1, "filename": "py_zipkin-0.12.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "2033b15d36b3517adb776009b91bba18", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25231, "upload_time": "2018-06-18T16:29:00", "upload_time_iso_8601": "2018-06-18T16:29:00.917556Z", "url": "https://files.pythonhosted.org/packages/dd/9c/a24b246dd9b341404763d0e48a10aab4fec2c3cbc342035fe21584cbc152/py_zipkin-0.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab37f81493663cde71a8c92eafedd167", "sha256": "a032192e8438fc4de22bad246e9044e951e669a429417c1b4b31b8352afeec68"}, "downloads": -1, "filename": "py_zipkin-0.12.0.tar.gz", "has_sig": true, "md5_digest": "ab37f81493663cde71a8c92eafedd167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20988, "upload_time": "2018-06-18T16:29:05", "upload_time_iso_8601": "2018-06-18T16:29:05.936343Z", "url": "https://files.pythonhosted.org/packages/b6/9a/1cf9aa8a961f62a5568d6b44505a9a505f3d164854cf773ddde6f72bd5dc/py_zipkin-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "ec35cebee0ed79a3ba8742c0095d84e1", "sha256": "1cbf48c8b7e5a30c36e8eb97560b81813c38af0bdb6ad901b23bdbced15a9b79"}, "downloads": -1, "filename": "py_zipkin-0.13.0.tar.gz", "has_sig": false, "md5_digest": "ec35cebee0ed79a3ba8742c0095d84e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25413, "upload_time": "2018-07-03T01:06:27", "upload_time_iso_8601": "2018-07-03T01:06:27.585703Z", "url": "https://files.pythonhosted.org/packages/85/b7/c4b46b7437f8a7dfc255169a1df46e4a1c3456926be04c26a476c93e8893/py_zipkin-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "b5a69099f31ee0575601619f5d734436", "sha256": "bce249cc1ea35be389419a45ad8cd43d0694a5226c0e8839fe253ef79c49269a"}, "downloads": -1, "filename": "py_zipkin-0.14.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5a69099f31ee0575601619f5d734436", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34720, "upload_time": "2018-10-01T22:22:55", "upload_time_iso_8601": "2018-10-01T22:22:55.981355Z", "url": "https://files.pythonhosted.org/packages/a2/e6/b85f26d858fc36579f558e4eca01a5e9f22a1fa5f839777060020fa92a3b/py_zipkin-0.14.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6789b3df9a19b338bec7fd9b4c2bbf80", "sha256": "d415776c99d4c3fe90ff4f15af46d9435917c6f0d9c797f3d2a6989cc2aaeaf9"}, "downloads": -1, "filename": "py_zipkin-0.14.0.tar.gz", "has_sig": false, "md5_digest": "6789b3df9a19b338bec7fd9b4c2bbf80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28510, "upload_time": "2018-10-01T22:22:57", "upload_time_iso_8601": "2018-10-01T22:22:57.848383Z", "url": "https://files.pythonhosted.org/packages/f2/e7/b5a5b719af386c10af188d0d6bd8b1f4dd928ee4cbf75c3d8b881a600376/py_zipkin-0.14.0.tar.gz", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "b498e4b0136e8c1c35aa8b3ac451a20b", "sha256": "aaadd0a77c8d76ffe417e9d6c55fda99e1868cb0fdfb27b08a1c9ddccadbce55"}, "downloads": -1, "filename": "py_zipkin-0.14.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b498e4b0136e8c1c35aa8b3ac451a20b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 35490, "upload_time": "2018-10-09T16:21:56", "upload_time_iso_8601": "2018-10-09T16:21:56.404767Z", "url": "https://files.pythonhosted.org/packages/bb/2e/c18afd7f12550e9758d0cc0dd5ab39d01a3bc55c30509ef415c7910f2964/py_zipkin-0.14.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41acab2becb29d92346c2ffd9408f6fc", "sha256": "1eac00816f4265e687afc8fa63faf525cf88e60379789b6ef1c07cf435ee2e13"}, "downloads": -1, "filename": "py_zipkin-0.14.1.tar.gz", "has_sig": false, "md5_digest": "41acab2becb29d92346c2ffd9408f6fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29224, "upload_time": "2018-10-09T16:21:57", "upload_time_iso_8601": "2018-10-09T16:21:57.574925Z", "url": "https://files.pythonhosted.org/packages/dc/6e/6523cfb6d61a804160c1cc3405409261e003c974fdcd0cd805de1a216d9d/py_zipkin-0.14.1.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "df61e8c284f9ee374efe6e4ca662db11", "sha256": "f030dc64911d6d9c0e338e449461ccddfaa8c4a12cf55784c2aa5e6dd51c28f8"}, "downloads": -1, "filename": "py_zipkin-0.15.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "df61e8c284f9ee374efe6e4ca662db11", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37016, "upload_time": "2018-10-22T23:37:09", "upload_time_iso_8601": "2018-10-22T23:37:09.808568Z", "url": "https://files.pythonhosted.org/packages/b9/ce/423cc3d587a4ef707170e17ecd3bc487f8c122985bf4d6eca79564d9368c/py_zipkin-0.15.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6f4e9df8d9a90fdb7532500afd6f57c", "sha256": "420e18df010cab4ab4630bf08c536ab9a90b87e4cd6aeb936f9d43c9c7eb9f5b"}, "downloads": -1, "filename": "py_zipkin-0.15.0.tar.gz", "has_sig": false, "md5_digest": "d6f4e9df8d9a90fdb7532500afd6f57c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30014, "upload_time": "2018-10-22T23:37:11", "upload_time_iso_8601": "2018-10-22T23:37:11.225048Z", "url": "https://files.pythonhosted.org/packages/b6/c8/681db899a9483d612fd580f1e6f989d55811f9b2eb5535359bcf9d6e2b27/py_zipkin-0.15.0.tar.gz", "yanked": false}], "0.15.1": [{"comment_text": "", "digests": {"md5": "1daaf942e3088cde91b1492e6c4800a1", "sha256": "423c2e8590f0f8d04207b401308fb3ed65c31408ab0f4cfc29e70e286c6fd71e"}, "downloads": -1, "filename": "py_zipkin-0.15.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1daaf942e3088cde91b1492e6c4800a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36906, "upload_time": "2018-10-31T21:43:20", "upload_time_iso_8601": "2018-10-31T21:43:20.713899Z", "url": "https://files.pythonhosted.org/packages/7c/a2/01a321ff7486e9202c75f1a395b434859ffa772fddd21ea8ebf424e1079c/py_zipkin-0.15.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f01bd6b02d698330a261425c39976419", "sha256": "eade0da83571e31c185530a0258dcf6ca87c24198e48a3c7c99f8ddb35802ac5"}, "downloads": -1, "filename": "py_zipkin-0.15.1.tar.gz", "has_sig": false, "md5_digest": "f01bd6b02d698330a261425c39976419", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29986, "upload_time": "2018-10-31T21:43:22", "upload_time_iso_8601": "2018-10-31T21:43:22.077704Z", "url": "https://files.pythonhosted.org/packages/9b/a7/92617fc7a8e16b86007d4528ee0caf72587916aee0627fa2c40dbd2887f3/py_zipkin-0.15.1.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "d7b76afc81d2ad2e56a3da3a61d26814", "sha256": "c61103ff2656dab26dce194384fa37c3c33c0674e20a06a387362f8821e688f7"}, "downloads": -1, "filename": "py_zipkin-0.16.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d7b76afc81d2ad2e56a3da3a61d26814", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40836, "upload_time": "2018-11-13T19:04:32", "upload_time_iso_8601": "2018-11-13T19:04:32.641694Z", "url": "https://files.pythonhosted.org/packages/5e/fa/49083e067b62235c6da8274a3733871580d01e5dedb32ca7730ca3622e2a/py_zipkin-0.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9945f7c27768a1e4f1999557c3f0c592", "sha256": "39eec7fff716c84ab0fcfef5fde87efbbecd9a46334c46f71940e34277079162"}, "downloads": -1, "filename": "py_zipkin-0.16.0.tar.gz", "has_sig": false, "md5_digest": "9945f7c27768a1e4f1999557c3f0c592", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32744, "upload_time": "2018-11-13T19:04:33", "upload_time_iso_8601": "2018-11-13T19:04:33.922096Z", "url": "https://files.pythonhosted.org/packages/ff/f3/52ce0e28f4f3645ab07246a947818653403731c30b05920ca672ef73e44f/py_zipkin-0.16.0.tar.gz", "yanked": false}], "0.16.1": [{"comment_text": "", "digests": {"md5": "c8cd4e7fa8cadaf143d905a45b1556b8", "sha256": "3bc920050ff29926afefa26d3f243a403f317592cd82874bb690b6741d54144b"}, "downloads": -1, "filename": "py_zipkin-0.16.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8cd4e7fa8cadaf143d905a45b1556b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40880, "upload_time": "2018-11-16T20:07:59", "upload_time_iso_8601": "2018-11-16T20:07:59.022453Z", "url": "https://files.pythonhosted.org/packages/e5/df/b17a8aaf493119ff42d7b8cc87084a67af019a95241b95657db125ddf5b6/py_zipkin-0.16.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed60e14c4dc3fa66cba1ee088b1237f9", "sha256": "37e03a07ebdf0d33c9b3975bf3b3498a58f24d24b5d227c6ff10f8f112004f52"}, "downloads": -1, "filename": "py_zipkin-0.16.1.tar.gz", "has_sig": false, "md5_digest": "ed60e14c4dc3fa66cba1ee088b1237f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32808, "upload_time": "2018-11-16T20:08:01", "upload_time_iso_8601": "2018-11-16T20:08:01.061566Z", "url": "https://files.pythonhosted.org/packages/12/27/a3b4d291692b7953354d2b53c747b0dacb1b6e2c98f31fcba455fa3fe21c/py_zipkin-0.16.1.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "28f6b77281974dd3d99e130a66aecb68", "sha256": "ad3e98fec925a22bc643ef71b05bd9d3e132a19fb9989a19fd64b19244ebf600"}, "downloads": -1, "filename": "py_zipkin-0.17.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28f6b77281974dd3d99e130a66aecb68", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40982, "upload_time": "2019-01-25T20:03:22", "upload_time_iso_8601": "2019-01-25T20:03:22.648755Z", "url": "https://files.pythonhosted.org/packages/e4/a3/8cc20939ef770946168d5acee0fcb29cd1d259f750bc634a7f31908073ce/py_zipkin-0.17.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ef519b193dd61badd6276db5c44bd23", "sha256": "182c7d9e65fb6b3080f8bfbf4d1cb004032c2322f1921e818a1719b9809c8e26"}, "downloads": -1, "filename": "py_zipkin-0.17.0.tar.gz", "has_sig": false, "md5_digest": "1ef519b193dd61badd6276db5c44bd23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36307, "upload_time": "2019-01-25T20:03:24", "upload_time_iso_8601": "2019-01-25T20:03:24.012087Z", "url": "https://files.pythonhosted.org/packages/ad/de/91691bad62aecf6df6c267118133ae963256a97c2428dea94e25898304e7/py_zipkin-0.17.0.tar.gz", "yanked": false}], "0.17.1": [{"comment_text": "", "digests": {"md5": "c2452c83c563514aabc76ffd19e703f0", "sha256": "d5f444d3fd0afd2b8483e7db4d47964fc2569d0a048a600c43e19d019ace9273"}, "downloads": -1, "filename": "py_zipkin-0.17.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c2452c83c563514aabc76ffd19e703f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41127, "upload_time": "2019-02-05T19:46:25", "upload_time_iso_8601": "2019-02-05T19:46:25.929801Z", "url": "https://files.pythonhosted.org/packages/aa/68/bf142370c09cb1ae513fc230d893b836b7e9d1b11c4545498b7c7c18987c/py_zipkin-0.17.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dba3d237b931e459ae965547e7a876fd", "sha256": "110a057ecedf0380ae285caf94d053513cba4e8bba35912d41c6ec9c4905b3c8"}, "downloads": -1, "filename": "py_zipkin-0.17.1.tar.gz", "has_sig": false, "md5_digest": "dba3d237b931e459ae965547e7a876fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36498, "upload_time": "2019-02-05T19:46:27", "upload_time_iso_8601": "2019-02-05T19:46:27.438616Z", "url": "https://files.pythonhosted.org/packages/86/18/0abd4dd8d70b796d0b660b8e3927f4ad1968a778aba8a57fcf5ce431793d/py_zipkin-0.17.1.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "f826e2ef3da5fd8da6cc00ca9b47e5fa", "sha256": "143c12b6d2514c2a20fdec94d5f482a56d6805389bb421cd7ebf1455f7b7d72e"}, "downloads": -1, "filename": "py_zipkin-0.18.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f826e2ef3da5fd8da6cc00ca9b47e5fa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 42499, "upload_time": "2019-02-14T01:53:19", "upload_time_iso_8601": "2019-02-14T01:53:19.048795Z", "url": "https://files.pythonhosted.org/packages/c0/21/e114cbb70b321aaebe3e25ecdc1e7bb2396adc21d37671455cd66fe64e17/py_zipkin-0.18.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecccc26f1ebc1d12c36bf32398894da0", "sha256": "a969601a1bd1a04dc0edd3b75a0acc4837b6c22a197b670d7a520713daa12f7c"}, "downloads": -1, "filename": "py_zipkin-0.18.0.tar.gz", "has_sig": false, "md5_digest": "ecccc26f1ebc1d12c36bf32398894da0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37646, "upload_time": "2019-02-14T01:53:20", "upload_time_iso_8601": "2019-02-14T01:53:20.764592Z", "url": "https://files.pythonhosted.org/packages/7e/8a/c5ddb74d73dccad630b4d08d6cfe126796e0996b69146ce4782c0255cc5d/py_zipkin-0.18.0.tar.gz", "yanked": false}], "0.18.1": [{"comment_text": "", "digests": {"md5": "e125cd46ded789d8b83c4ada551474db", "sha256": "10f3cfb68e32099227506cd24114ba1b72ce9aa9977ae5cb571e8b7e7848a5db"}, "downloads": -1, "filename": "py_zipkin-0.18.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e125cd46ded789d8b83c4ada551474db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 42465, "upload_time": "2019-02-22T23:53:15", "upload_time_iso_8601": "2019-02-22T23:53:15.218600Z", "url": "https://files.pythonhosted.org/packages/44/7b/5c40cff6bd85b9a78ee8bedd5b69ad7750257286cc6a9e37a1fef46fded2/py_zipkin-0.18.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb33589f90de0a7f435a0422e6a69c01", "sha256": "5c8705e881d50ffa3c5219a59ff02214f9859b71d9f16b6bedad7213ac06039f"}, "downloads": -1, "filename": "py_zipkin-0.18.1.tar.gz", "has_sig": false, "md5_digest": "fb33589f90de0a7f435a0422e6a69c01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37642, "upload_time": "2019-02-22T23:53:17", "upload_time_iso_8601": "2019-02-22T23:53:17.179971Z", "url": "https://files.pythonhosted.org/packages/52/69/afa9244da7a764413d2297a766800a9310053210acc0545e2f9eaf5a9c9c/py_zipkin-0.18.1.tar.gz", "yanked": false}], "0.18.2": [{"comment_text": "", "digests": {"md5": "705359712f4199e953edd2ba710d21ba", "sha256": "7bd961c7101be0e9eca6fb2ee11ab6329d8b078862f547e13501cac3771292df"}, "downloads": -1, "filename": "py_zipkin-0.18.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "705359712f4199e953edd2ba710d21ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 47000, "upload_time": "2019-04-01T22:21:27", "upload_time_iso_8601": "2019-04-01T22:21:27.004529Z", "url": "https://files.pythonhosted.org/packages/f3/a4/0dcb744a4975f342b0cdeb8b883e5f2cdbc76227d8d09a8402bd173aaa72/py_zipkin-0.18.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc640d2b92661f6bec72d447ba6f70e5", "sha256": "17763f7fe6ba1a4728b9428a412513e5cc59429e70fe9ba9940e54f32f3bd398"}, "downloads": -1, "filename": "py_zipkin-0.18.2.tar.gz", "has_sig": false, "md5_digest": "fc640d2b92661f6bec72d447ba6f70e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41716, "upload_time": "2019-04-01T22:21:28", "upload_time_iso_8601": "2019-04-01T22:21:28.709427Z", "url": "https://files.pythonhosted.org/packages/93/cd/3043a4627bff27b8daf412a2976ba4c24f2aea1a61afa73c665c0a7c873c/py_zipkin-0.18.2.tar.gz", "yanked": false}], "0.18.3": [{"comment_text": "", "digests": {"md5": "914ce7d71cee36c35b833a9eb98f191a", "sha256": "5fc8af95a200f20128c583d40d185ed7b4c289966f620c756cd6e0dfa4f2e7ad"}, "downloads": -1, "filename": "py_zipkin-0.18.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "914ce7d71cee36c35b833a9eb98f191a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 47021, "upload_time": "2019-05-15T17:45:31", "upload_time_iso_8601": "2019-05-15T17:45:31.744554Z", "url": "https://files.pythonhosted.org/packages/c2/f2/66835d523cbab3c672009f9b3c9572c47a4495ff2d3955d5547c1d34eeff/py_zipkin-0.18.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9bb38b6815bfa440a56cfc936b4be61", "sha256": "8970f723e6eb18ecf26e6e29f3434edf7b156f8da48d32c8c8ea638aee6d5022"}, "downloads": -1, "filename": "py_zipkin-0.18.3.tar.gz", "has_sig": false, "md5_digest": "d9bb38b6815bfa440a56cfc936b4be61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41754, "upload_time": "2019-05-15T17:45:33", "upload_time_iso_8601": "2019-05-15T17:45:33.721564Z", "url": "https://files.pythonhosted.org/packages/7f/15/4c14cd1866e8f67fb0949ffa78601796cfa2e746bf188204bbc3cf9eb931/py_zipkin-0.18.3.tar.gz", "yanked": false}], "0.18.4": [{"comment_text": "", "digests": {"md5": "b66d3a4c53c7af67cbfdcc2b02876e38", "sha256": "c089be805c2da31d6d6a6f02bc27364c92db5a24217a1480ce318b196ebdbf15"}, "downloads": -1, "filename": "py_zipkin-0.18.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b66d3a4c53c7af67cbfdcc2b02876e38", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 47044, "upload_time": "2019-08-03T00:12:32", "upload_time_iso_8601": "2019-08-03T00:12:32.113452Z", "url": "https://files.pythonhosted.org/packages/e9/c0/8b53e05afaa817c2ccd7e4f65684b04b14b99f41b514761ef459862a8532/py_zipkin-0.18.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa9810e61343af5f83af1a9cc7a63e32", "sha256": "89e8a22b29e5e91f658e2b50ed53d0a696344158edba224930b95e79c66636f9"}, "downloads": -1, "filename": "py_zipkin-0.18.4.tar.gz", "has_sig": false, "md5_digest": "aa9810e61343af5f83af1a9cc7a63e32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41799, "upload_time": "2019-08-03T00:12:33", "upload_time_iso_8601": "2019-08-03T00:12:33.684837Z", "url": "https://files.pythonhosted.org/packages/53/bc/60ced49867b4b51de74692afd9b4c950724be0291c7e3e6263a7bb4bc036/py_zipkin-0.18.4.tar.gz", "yanked": false}], "0.18.5": [{"comment_text": "", "digests": {"md5": "e081c55c4bb5a9085ada56f142820db2", "sha256": "fe903f3bf1d46ce2e985a759b5b18c1c514d4f2e85591359403019fa80007a62"}, "downloads": -1, "filename": "py_zipkin-0.18.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e081c55c4bb5a9085ada56f142820db2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 48263, "upload_time": "2019-08-09T18:17:28", "upload_time_iso_8601": "2019-08-09T18:17:28.933508Z", "url": "https://files.pythonhosted.org/packages/3a/0a/a7efd5bda5ead9c9594cf99cafee562f9a941a93c88cb573a0b01fe085b8/py_zipkin-0.18.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac77ee6a23589d9d628f36329fdc5c69", "sha256": "7544280f6b0930cbc7f24901de70b2baea046fb0035da1711cade68990c54d37"}, "downloads": -1, "filename": "py_zipkin-0.18.5.tar.gz", "has_sig": false, "md5_digest": "ac77ee6a23589d9d628f36329fdc5c69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42606, "upload_time": "2019-08-09T18:17:30", "upload_time_iso_8601": "2019-08-09T18:17:30.810904Z", "url": "https://files.pythonhosted.org/packages/2b/a8/ac43492c13322066526dda1b298dbaa50b7b850574fed88dd31e1b44268b/py_zipkin-0.18.5.tar.gz", "yanked": false}], "0.18.6": [{"comment_text": "", "digests": {"md5": "69bfbc9d84d6e0a9a58f2786baac61b7", "sha256": "1ea437ecfa5198605ef5b34816f9da8e0ff45ab25244a77d72220905f00bd822"}, "downloads": -1, "filename": "py_zipkin-0.18.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69bfbc9d84d6e0a9a58f2786baac61b7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 48345, "upload_time": "2019-09-23T17:08:34", "upload_time_iso_8601": "2019-09-23T17:08:34.674782Z", "url": "https://files.pythonhosted.org/packages/95/71/f527c4cc13a026ab56d7fbf8fbeea33f782d9e42a194368313d1c0e255ed/py_zipkin-0.18.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f37147f7a037a37a8d8ea4ad0d0909c2", "sha256": "c442befc0764b045a5b0f94c21fa1705eb0cf03bb68bb6a7b90efce9dcb9c9d8"}, "downloads": -1, "filename": "py_zipkin-0.18.6.tar.gz", "has_sig": false, "md5_digest": "f37147f7a037a37a8d8ea4ad0d0909c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42735, "upload_time": "2019-09-23T17:08:36", "upload_time_iso_8601": "2019-09-23T17:08:36.840376Z", "url": "https://files.pythonhosted.org/packages/ae/61/67911c2240c295b03b3e66920907d6fa40d07586f8d1988f6cd69791f156/py_zipkin-0.18.6.tar.gz", "yanked": false}], "0.18.7": [{"comment_text": "", "digests": {"md5": "4f3e4dc82b89998b79b8c2c18e3b6ebf", "sha256": "940d03e84eff953be8c7c90664abf04115530b47de3d05cf05183a1e4e72ac79"}, "downloads": -1, "filename": "py_zipkin-0.18.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f3e4dc82b89998b79b8c2c18e3b6ebf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 49135, "upload_time": "2020-01-16T01:18:39", "upload_time_iso_8601": "2020-01-16T01:18:39.486745Z", "url": "https://files.pythonhosted.org/packages/60/a9/1863b382b64b4bd5176cbbbbdbc224fb0742d74871195651a62619f2e122/py_zipkin-0.18.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f578101fffb9dba549d1d9a77002a33", "sha256": "90fe43c8c2c30ba16d63b0337796149e4a10e83844dbbea870f3c01f72671c28"}, "downloads": -1, "filename": "py_zipkin-0.18.7.tar.gz", "has_sig": false, "md5_digest": "5f578101fffb9dba549d1d9a77002a33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43417, "upload_time": "2020-01-16T01:18:41", "upload_time_iso_8601": "2020-01-16T01:18:41.603637Z", "url": "https://files.pythonhosted.org/packages/7b/73/3877802d0c86e2d53e8d5f0761af41ee9463fd14bd0e127ab272ef097ca3/py_zipkin-0.18.7.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "e8d5da2f02d1963a2c88c6ce5d091568", "sha256": "94a224d7e0de51836cf93cace156431002d62238bf1cef094ada9c2c821c37ba"}, "downloads": -1, "filename": "py_zipkin-0.19.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8d5da2f02d1963a2c88c6ce5d091568", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 52324, "upload_time": "2020-02-29T01:10:06", "upload_time_iso_8601": "2020-02-29T01:10:06.211141Z", "url": "https://files.pythonhosted.org/packages/ed/69/a9d7a89f562794790bd0d49c984a5509fc4288a251c170bc6542fbd5f2e2/py_zipkin-0.19.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83d42d0a807c172caa93f6ea363ee9e5", "sha256": "7c7e71a0e74251b4329aecc927cbc209cf5097c19dfe0e0ba991631b3ad9dbcc"}, "downloads": -1, "filename": "py_zipkin-0.19.0.tar.gz", "has_sig": false, "md5_digest": "83d42d0a807c172caa93f6ea363ee9e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46150, "upload_time": "2020-02-29T01:10:08", "upload_time_iso_8601": "2020-02-29T01:10:08.188581Z", "url": "https://files.pythonhosted.org/packages/e3/01/33f718dbe19cb59555c5fccc8de8c2f25c39722b15be255c29cf4336af2d/py_zipkin-0.19.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8436e0cf1b78824474f8224c525463e0", "sha256": "49b559fde2a1531f4d375299029733fd4dd976c7106aac7985b50d029b3e106e"}, "downloads": -1, "filename": "py_zipkin-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8436e0cf1b78824474f8224c525463e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17201, "upload_time": "2016-09-30T18:37:22", "upload_time_iso_8601": "2016-09-30T18:37:22.294618Z", "url": "https://files.pythonhosted.org/packages/e0/65/448171ca595732632d749d70169bb5242ef31d1bb0bf86c2c87b3bb0446f/py_zipkin-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "defa36d700c4a1dbb3f78f17bea35cb7", "sha256": "64fca1d0e1aeca4f7489740478fb96d43757ea45d5c7dd9409311190e4f5c612"}, "downloads": -1, "filename": "py_zipkin-0.2.0.tar.gz", "has_sig": false, "md5_digest": "defa36d700c4a1dbb3f78f17bea35cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13643, "upload_time": "2016-09-30T18:37:24", "upload_time_iso_8601": "2016-09-30T18:37:24.615706Z", "url": "https://files.pythonhosted.org/packages/5e/3f/d4b7b1a535e02e960c73a73d1559dba8e90bf6d95b1a851ac5a30ea93395/py_zipkin-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "db9bfe11a9399f92db6bebbf631008ab", "sha256": "b541769b8486c94c8a069cf58e8daab132ce3b5b980e8978b3b2d85eac3f7aa4"}, "downloads": -1, "filename": "py_zipkin-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "db9bfe11a9399f92db6bebbf631008ab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17205, "upload_time": "2016-10-01T00:00:38", "upload_time_iso_8601": "2016-10-01T00:00:38.879785Z", "url": "https://files.pythonhosted.org/packages/c9/f1/e366b623b25e901a5e0aae60aa04b0b1585ebb8d04704caab6240533efe1/py_zipkin-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e884321a1633b493d5d9ae05d6a15625", "sha256": "4de77d24072afa94a8ac5160798082cc2656df29b9ce44a5e4bbc6d51c1383d4"}, "downloads": -1, "filename": "py_zipkin-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e884321a1633b493d5d9ae05d6a15625", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13639, "upload_time": "2016-10-01T00:00:41", "upload_time_iso_8601": "2016-10-01T00:00:41.488091Z", "url": "https://files.pythonhosted.org/packages/3c/7d/1df350579e4f59be2d44428c5c39a0b9f0f67c7fb1a6efe7a56c1d18cd13/py_zipkin-0.2.1.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "e2c6a22f2ed7e664cc695a5a963f80c1", "sha256": "6f787b040755f45fcc7abbf5eae1a42e96d71ea90a3e7f36062ddbd60adf16dc"}, "downloads": -1, "filename": "py_zipkin-0.20.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e2c6a22f2ed7e664cc695a5a963f80c1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 52721, "upload_time": "2020-03-09T16:07:45", "upload_time_iso_8601": "2020-03-09T16:07:45.608221Z", "url": "https://files.pythonhosted.org/packages/08/fe/02e113bb7720d4ec04f03a9e0902e2fa221c703d00b66cc453b242fcf383/py_zipkin-0.20.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77d909f9cc5f18f6152ada5b0eb8e656", "sha256": "aecea570f5cb368a9e6dc1430cb0911c40d7b72eb3d97eceebf132e73f4aee02"}, "downloads": -1, "filename": "py_zipkin-0.20.0.tar.gz", "has_sig": false, "md5_digest": "77d909f9cc5f18f6152ada5b0eb8e656", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46356, "upload_time": "2020-03-09T16:07:47", "upload_time_iso_8601": "2020-03-09T16:07:47.375995Z", "url": "https://files.pythonhosted.org/packages/b4/a1/6b007b67c56e32dc161d3c8f26841bfb4decbba0b5701bd2c18bceb7d94d/py_zipkin-0.20.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "fe95092af3c2690896208f8fd4029f04", "sha256": "7f1a02e07fc7dcfb8557eb8d6e2b512441e3d1472b2fa7f4318fe2c9ddd6cc11"}, "downloads": -1, "filename": "py_zipkin-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fe95092af3c2690896208f8fd4029f04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17866, "upload_time": "2016-10-20T21:50:34", "upload_time_iso_8601": "2016-10-20T21:50:34.543823Z", "url": "https://files.pythonhosted.org/packages/8b/55/16ae53d0613621dd4b032ee32e34cff3d5b8a0e8f7b09b4a20629e254af1/py_zipkin-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e143c9c270698bcdd11f9004ae300f9", "sha256": "599425c534ca7b80d28bd202ee3c9383946038a8e92dcb7b3e2e6862c0383a2b"}, "downloads": -1, "filename": "py_zipkin-0.4.0.tar.gz", "has_sig": false, "md5_digest": "0e143c9c270698bcdd11f9004ae300f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14246, "upload_time": "2016-10-20T21:50:36", "upload_time_iso_8601": "2016-10-20T21:50:36.410906Z", "url": "https://files.pythonhosted.org/packages/c3/60/bb4cf04d8e3d3f455bf0626ce4bf734a768507158d2e3bafebbde944b4da/py_zipkin-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6c1b1f96b0781072d1dadb4836610ad6", "sha256": "f7d8e4ff8060a175159ae73e1a2c9ee297d98f66cd8cb3a328ecfa4c476fa672"}, "downloads": -1, "filename": "py_zipkin-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c1b1f96b0781072d1dadb4836610ad6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17900, "upload_time": "2016-10-24T19:07:47", "upload_time_iso_8601": "2016-10-24T19:07:47.951503Z", "url": "https://files.pythonhosted.org/packages/8b/f9/9d08d08812b7ab16dc6a1a0baa08f2edecb154e4f77a975fbe5b824e07b2/py_zipkin-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc39a0b1ca77384148290910aca37e0a", "sha256": "2e6956a21b0cd6996d4d93bbd26b3c210ef6938e42f6656cb44b755c0f1196ec"}, "downloads": -1, "filename": "py_zipkin-0.4.1.tar.gz", "has_sig": false, "md5_digest": "fc39a0b1ca77384148290910aca37e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14627, "upload_time": "2016-10-24T19:07:50", "upload_time_iso_8601": "2016-10-24T19:07:50.669192Z", "url": "https://files.pythonhosted.org/packages/a1/c6/05663d72c85275a98d3fee9586bc32a6b49e11d0108d605ff189e2841d47/py_zipkin-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "411ed5c21d82d3e5da96496b7259ed20", "sha256": "ca633e1d2a378810e1994f271256b26401424d1d38299ac096165ba5e3dc4855"}, "downloads": -1, "filename": "py_zipkin-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "411ed5c21d82d3e5da96496b7259ed20", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17939, "upload_time": "2016-11-01T23:47:21", "upload_time_iso_8601": "2016-11-01T23:47:21.197589Z", "url": "https://files.pythonhosted.org/packages/7a/4b/82d6400f14b5edc247b45b64e11614dd0e8b0f51c5ee36c584087b8efc42/py_zipkin-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d94494f07788744ccb064d668a409e12", "sha256": "3d1eb9d460c75bf8b6a92ba2d52984d95a5d9ed7cfd84239d9b1caa15b2c4a14"}, "downloads": -1, "filename": "py_zipkin-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d94494f07788744ccb064d668a409e12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14651, "upload_time": "2016-11-01T23:47:23", "upload_time_iso_8601": "2016-11-01T23:47:23.477008Z", "url": "https://files.pythonhosted.org/packages/22/b4/732d9f212e1b46725261ef0e9aaf22fbc29a87a4ca22c9ddc6fde05a1cab/py_zipkin-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "a5490f9ca20082308c22b1b2b72eaeaa", "sha256": "693876f1cbb8d931c139a10e117f4e1ee465e4adb82cb0f71eba3eeb6d408cb0"}, "downloads": -1, "filename": "py_zipkin-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a5490f9ca20082308c22b1b2b72eaeaa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17996, "upload_time": "2016-11-04T19:08:56", "upload_time_iso_8601": "2016-11-04T19:08:56.192830Z", "url": "https://files.pythonhosted.org/packages/f8/7a/3227620395ea0bce7246d8a5cf08ddd4a245ce9853bb04739f584f8cac04/py_zipkin-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6dbc2f010f7ebc016e168c92467aee0", "sha256": "704d6c583830dbffbc612066fc1d6f76ee75b567a0da675b258aad60fb997420"}, "downloads": -1, "filename": "py_zipkin-0.4.3.tar.gz", "has_sig": false, "md5_digest": "b6dbc2f010f7ebc016e168c92467aee0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14652, "upload_time": "2016-11-04T19:08:58", "upload_time_iso_8601": "2016-11-04T19:08:58.723313Z", "url": "https://files.pythonhosted.org/packages/eb/db/b90c8517bfece6576d18d0a8f78a70766e2f606357a25596acf0ae7745af/py_zipkin-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "8ab3a6887dd28186a08bf04fe0c96a1d", "sha256": "ef28f44d2592acaa6e8ac35591acd92ee7c68b9653855860b424f55b6e02ecae"}, "downloads": -1, "filename": "py_zipkin-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ab3a6887dd28186a08bf04fe0c96a1d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18124, "upload_time": "2016-11-29T19:50:37", "upload_time_iso_8601": "2016-11-29T19:50:37.556359Z", "url": "https://files.pythonhosted.org/packages/fd/8c/225389552d99bbec0dde73ffc2db2741a4af86912cd60ff15229fb8a3f33/py_zipkin-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9927248b3e03d9870026bf596dad9572", "sha256": "64623452f1717f9b515422a31dca207f379737d2fa8b065891ca0ccad3bd6814"}, "downloads": -1, "filename": "py_zipkin-0.4.4.tar.gz", "has_sig": false, "md5_digest": "9927248b3e03d9870026bf596dad9572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14444, "upload_time": "2016-11-29T19:50:39", "upload_time_iso_8601": "2016-11-29T19:50:39.900576Z", "url": "https://files.pythonhosted.org/packages/7e/55/2ba7b190037941320d54d706fb46417c4b75104fdbbbc3798bc4aba9cb10/py_zipkin-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d2bc0e6c25f8ee6d8922c31573cb7164", "sha256": "bce386823578aecfdea5e3545904160d73e13b440d97132c37bd1c67de3efcdf"}, "downloads": -1, "filename": "py_zipkin-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2bc0e6c25f8ee6d8922c31573cb7164", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19906, "upload_time": "2017-02-03T17:00:16", "upload_time_iso_8601": "2017-02-03T17:00:16.381820Z", "url": "https://files.pythonhosted.org/packages/46/90/efebbb0d2abc2f5cb7880d683b1c4cd4ef0352b245a45d50695e34ca17d9/py_zipkin-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a3726a61d5b0d2d0f3d2f909e8811b7", "sha256": "e004d35d450098e679d445256d0da48c381d275bdd2eba8b948f88b584561e7f"}, "downloads": -1, "filename": "py_zipkin-0.5.0.tar.gz", "has_sig": false, "md5_digest": "7a3726a61d5b0d2d0f3d2f909e8811b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16198, "upload_time": "2017-02-03T17:00:18", "upload_time_iso_8601": "2017-02-03T17:00:18.218929Z", "url": "https://files.pythonhosted.org/packages/80/63/487595164394c30f1e7cc94993f8b5733702a55b623dfd70756ec1520290/py_zipkin-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "a18b06b2afc2d1ea87b55ba94a427939", "sha256": "369abcde543ae357baf93acfc361b5556e9d4805158a5a06b32eb3e594977a36"}, "downloads": -1, "filename": "py_zipkin-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a18b06b2afc2d1ea87b55ba94a427939", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20083, "upload_time": "2017-02-04T02:59:07", "upload_time_iso_8601": "2017-02-04T02:59:07.016579Z", "url": "https://files.pythonhosted.org/packages/83/61/43bc23656d87336cd13a18c7b14fbb5c81803183d7d90112dad3cd7b7207/py_zipkin-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1524bdc90eda189fa21972bfdc6e3429", "sha256": "f34810acf5251e729531b7489002b39a7f0cfc6d627b806204328dd3d1a99a97"}, "downloads": -1, "filename": "py_zipkin-0.6.0.tar.gz", "has_sig": false, "md5_digest": "1524bdc90eda189fa21972bfdc6e3429", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16372, "upload_time": "2017-02-04T02:59:09", "upload_time_iso_8601": "2017-02-04T02:59:09.284001Z", "url": "https://files.pythonhosted.org/packages/fb/a5/60197c2a7918477254f389ecbd2b33903f4838fc93262e5e4e67268c8b8c/py_zipkin-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "cb4f01f8ae9e0475d35baca2f2bc26b6", "sha256": "e82b2a4d35cb79cbd046f525385bf0bb977c26af415090df710a343be7f2d6f0"}, "downloads": -1, "filename": "py_zipkin-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb4f01f8ae9e0475d35baca2f2bc26b6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20146, "upload_time": "2017-03-06T23:45:42", "upload_time_iso_8601": "2017-03-06T23:45:42.499320Z", "url": "https://files.pythonhosted.org/packages/5e/70/1bdf7e6791fbcc705d301df09b6338b13ac35f9b7c2703b87537e8fb938e/py_zipkin-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3da8c1351720439d47e760a9acbfa42b", "sha256": "4dd0067dcded2c03dba25849c207965075a09fb2863f6a1ddbb308c861bdae1b"}, "downloads": -1, "filename": "py_zipkin-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3da8c1351720439d47e760a9acbfa42b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16820, "upload_time": "2017-03-06T23:45:44", "upload_time_iso_8601": "2017-03-06T23:45:44.544128Z", "url": "https://files.pythonhosted.org/packages/bd/16/ace2ba2ec0b4c89aee8964a77a8500fa144fb71b9cae810d41e75e6ac8d1/py_zipkin-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "6cd261654dfaa9477e1d5f85b068408a", "sha256": "e7f7d5029f0dd4f111ec70012e21542bd1a7bd030e1ffcc1423e74cf609c52d9"}, "downloads": -1, "filename": "py_zipkin-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6cd261654dfaa9477e1d5f85b068408a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20153, "upload_time": "2017-05-01T16:38:55", "upload_time_iso_8601": "2017-05-01T16:38:55.545736Z", "url": "https://files.pythonhosted.org/packages/eb/31/03e0a56868de7688eb5973662888127795bc50bc8a3c17952e2d10fdecf4/py_zipkin-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cafe47c434d6d586ef5fffa698a67fa", "sha256": "432afcb357bc077f9d8adaf0ea2b7c27d2c76ca2adc78e8714ca5049b986becb"}, "downloads": -1, "filename": "py_zipkin-0.7.1.tar.gz", "has_sig": false, "md5_digest": "5cafe47c434d6d586ef5fffa698a67fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16836, "upload_time": "2017-05-01T16:38:58", "upload_time_iso_8601": "2017-05-01T16:38:58.734616Z", "url": "https://files.pythonhosted.org/packages/57/04/6a5fd313ef89e463ac07769666da42289b761f768b4e8364a5d16ac14715/py_zipkin-0.7.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "bdd7f6f41b6ee9a09478ce916319d0ad", "sha256": "f09bc622730275725cafa06b72e2f1ebc60ecb778b0d2c0cc898fab01b964deb"}, "downloads": -1, "filename": "py_zipkin-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdd7f6f41b6ee9a09478ce916319d0ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21061, "upload_time": "2017-06-01T18:15:17", "upload_time_iso_8601": "2017-06-01T18:15:17.752050Z", "url": "https://files.pythonhosted.org/packages/ed/44/7fbd4fa8e1a6afefa89a36c1226212590f37ed850b8884fee815389651e5/py_zipkin-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "094939bdefd7f520f5564fec7c7bdefb", "sha256": "e819fb30fb28fd66b8455d34885abf2eec07dec359272597cd80bc14db282e0d"}, "downloads": -1, "filename": "py_zipkin-0.8.0.tar.gz", "has_sig": false, "md5_digest": "094939bdefd7f520f5564fec7c7bdefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17622, "upload_time": "2017-06-01T18:15:19", "upload_time_iso_8601": "2017-06-01T18:15:19.557733Z", "url": "https://files.pythonhosted.org/packages/0b/63/035194ae7278c0e26f6621253ae3feb2ff225432feec1c00a0b6929b7614/py_zipkin-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "5ba71baf06a514209be598903268a001", "sha256": "7fea2a17e27890f04dd215f6833ae395cba8fbfbea331b6ac6fbcb46db3f982c"}, "downloads": -1, "filename": "py_zipkin-0.8.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ba71baf06a514209be598903268a001", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21066, "upload_time": "2017-06-16T17:28:11", "upload_time_iso_8601": "2017-06-16T17:28:11.752633Z", "url": "https://files.pythonhosted.org/packages/62/8b/5c9e30d83fe7f157f645044d8147b13812b728051f193b3761f36f8ede45/py_zipkin-0.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33f48b806018ee99b43ae7784ad0d8de", "sha256": "15d1b2426fb97cae0a0e562b1f46d180384a58ee6761ab9b14faed7c6f385635"}, "downloads": -1, "filename": "py_zipkin-0.8.1.tar.gz", "has_sig": false, "md5_digest": "33f48b806018ee99b43ae7784ad0d8de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17564, "upload_time": "2017-06-16T17:28:12", "upload_time_iso_8601": "2017-06-16T17:28:12.980504Z", "url": "https://files.pythonhosted.org/packages/60/41/0041c80ce6951f6c07785c0f2930cede5876f2b0e2c7c7035939035607f9/py_zipkin-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "5a535ec8db332c1afba592e5b3b0aca9", "sha256": "421c6027c584948b133121d6d19bf23f31389ac422fac4f26d35f85d339eb34e"}, "downloads": -1, "filename": "py_zipkin-0.8.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a535ec8db332c1afba592e5b3b0aca9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21198, "upload_time": "2017-06-30T23:14:21", "upload_time_iso_8601": "2017-06-30T23:14:21.710478Z", "url": "https://files.pythonhosted.org/packages/f0/c9/a37ead87da3a3fb58850c500f5ca13d04311d741fcf97a730c16666126f0/py_zipkin-0.8.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fa605f6d0c47db33313acd7a5f41505", "sha256": "27f038dd3d36eda7725c446572b95c75657648d993ba21ca4ae68b911eb528dd"}, "downloads": -1, "filename": "py_zipkin-0.8.2.tar.gz", "has_sig": false, "md5_digest": "6fa605f6d0c47db33313acd7a5f41505", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17684, "upload_time": "2017-06-30T23:14:23", "upload_time_iso_8601": "2017-06-30T23:14:23.342842Z", "url": "https://files.pythonhosted.org/packages/f2/d0/705f6627b3ff1eef1bbe8dc57f501e16e24806784ae233ca547c02f0cde6/py_zipkin-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "c3769f000bf3c1cdaf8835c27131a2b0", "sha256": "59ed2f27ffe2453b162863f04af76573e50f3fbc7461bcbf1305de1885d6421a"}, "downloads": -1, "filename": "py_zipkin-0.8.3.tar.gz", "has_sig": false, "md5_digest": "c3769f000bf3c1cdaf8835c27131a2b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17764, "upload_time": "2017-07-10T22:18:39", "upload_time_iso_8601": "2017-07-10T22:18:39.718604Z", "url": "https://files.pythonhosted.org/packages/7f/36/a1b3c1171edd71b03ac96efb3b924e1c6d1eacf2f1f01af8a86f9fb4fcef/py_zipkin-0.8.3.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "9ab5a1ba324d7ee5a8308e3905bc1961", "sha256": "b9561a82d0d0694da69603d91ca62c98ecf9f8babc8474aca375de56a6b051a3"}, "downloads": -1, "filename": "py_zipkin-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9ab5a1ba324d7ee5a8308e3905bc1961", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21592, "upload_time": "2017-08-02T18:43:50", "upload_time_iso_8601": "2017-08-02T18:43:50.150764Z", "url": "https://files.pythonhosted.org/packages/85/e8/0255c5a1fd3139f4a4321a3cde3e3fb06066a6e0c0853bc49ea1dd0b9b08/py_zipkin-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c27b697c1f6aba5801c8de0228091102", "sha256": "57f8a9acb7130bc184b985400b798f409302f81ee508df577136d16325c6546e"}, "downloads": -1, "filename": "py_zipkin-0.9.0.tar.gz", "has_sig": false, "md5_digest": "c27b697c1f6aba5801c8de0228091102", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18194, "upload_time": "2017-08-02T18:43:51", "upload_time_iso_8601": "2017-08-02T18:43:51.611718Z", "url": "https://files.pythonhosted.org/packages/93/35/d5440598c1dac22ecc237877d3a785870626ecb142e81dd6d6ffc815c581/py_zipkin-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e2c6a22f2ed7e664cc695a5a963f80c1", "sha256": "6f787b040755f45fcc7abbf5eae1a42e96d71ea90a3e7f36062ddbd60adf16dc"}, "downloads": -1, "filename": "py_zipkin-0.20.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e2c6a22f2ed7e664cc695a5a963f80c1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 52721, "upload_time": "2020-03-09T16:07:45", "upload_time_iso_8601": "2020-03-09T16:07:45.608221Z", "url": "https://files.pythonhosted.org/packages/08/fe/02e113bb7720d4ec04f03a9e0902e2fa221c703d00b66cc453b242fcf383/py_zipkin-0.20.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77d909f9cc5f18f6152ada5b0eb8e656", "sha256": "aecea570f5cb368a9e6dc1430cb0911c40d7b72eb3d97eceebf132e73f4aee02"}, "downloads": -1, "filename": "py_zipkin-0.20.0.tar.gz", "has_sig": false, "md5_digest": "77d909f9cc5f18f6152ada5b0eb8e656", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46356, "upload_time": "2020-03-09T16:07:47", "upload_time_iso_8601": "2020-03-09T16:07:47.375995Z", "url": "https://files.pythonhosted.org/packages/b4/a1/6b007b67c56e32dc161d3c8f26841bfb4decbba0b5701bd2c18bceb7d94d/py_zipkin-0.20.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:35 2020"}