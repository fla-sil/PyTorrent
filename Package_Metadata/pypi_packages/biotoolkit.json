{"info": {"author": "meh", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "biotoolkit contains:\n\n\tGCfromDNA.py\n\t\n\t\nGCfromDNA is a python module/command line utility for determining the GC content of DNA \nsequences, as read from standard fasta (.fa) files. \nThis module formats each sequence name (replacing spaces with underscores), calculates the \npercentage GC-content for each sequence, and saves this data as a csv file with a modified\nversion of the original filename (e.g., fasta_file_1.fa --> fasta_file_1_GC.csv). \n\nGCfromDNA utilizes parts of the biopython package for analysis. The package \ncan be installed with the following command: \n\n\t$ pip install biopython\n\nTo install biotoolkit:\n\t\n\t$ pip install biotoolkit\n\nUpon successful installation, the module can be imported into new python scripts with:\n\t\n\tfrom biotoolkit import GCfromDNA\n\nFor instance, the following is a complete python script that will invoke the module's functionality:\n\n\t#!/usr/bin/env python\n\tfrom biotoolkit import GCfromDNA\n\tGCfromDNA.compute()\n\nIt is possible to pass fasta filenames as parameters directly to the compute function. \nFilenames must be passed to the compute function as a list: \n\n\tGCfromDNA.compute( [file1,file2,file3] )\t#if file1 == 'file1.fa', for instance\n\nGCfromDNA can be utilized interactively. From the command line, enter:\n\t\n\t$ python\n\t>>> from biotoolkit import GCfromDNA\n\t>>> GCfromDNA.compute()\n\nThe script can be invoked directly from the directory where it resides. \nOptional filename arguments must be separated by spaces:\n\t\n\t$ python GCfromDNA.py file1.fa file2.fa file3.fa\n\t\n\t\tor alternatively:\n\t\n\t$ python GCfromDNA.py *.fa\n\nIf no filename is provided, the program prompts the user to select from fasta files (located \nin the current directory) for processing. \n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "biotoolkit", "package_url": "https://pypi.org/project/biotoolkit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/biotoolkit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/biotoolkit/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "biotoolkit contains GCfromDNA: Analyze GC-content of DNA sequences from fasta files", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            biotoolkit contains:<br><br>\tGCfromDNA.py<br>\t<br>\t<br>GCfromDNA is a python module/command line utility for determining the GC content of DNA <br>sequences, as read from standard fasta (.fa) files. <br>This module formats each sequence name (replacing spaces with underscores), calculates the <br>percentage GC-content for each sequence, and saves this data as a csv file with a modified<br>version of the original filename (e.g., fasta_file_1.fa --&gt; fasta_file_1_GC.csv). <br><br>GCfromDNA utilizes parts of the biopython package for analysis. The package <br>can be installed with the following command: <br><br>\t$ pip install biopython<br><br>To install biotoolkit:<br>\t<br>\t$ pip install biotoolkit<br><br>Upon successful installation, the module can be imported into new python scripts with:<br>\t<br>\tfrom biotoolkit import GCfromDNA<br><br>For instance, the following is a complete python script that will invoke the module's functionality:<br><br>\t#!/usr/bin/env python<br>\tfrom biotoolkit import GCfromDNA<br>\tGCfromDNA.compute()<br><br>It is possible to pass fasta filenames as parameters directly to the compute function. <br>Filenames must be passed to the compute function as a list: <br><br>\tGCfromDNA.compute( [file1,file2,file3] )\t#if file1 == 'file1.fa', for instance<br><br>GCfromDNA can be utilized interactively. From the command line, enter:<br>\t<br>\t$ python<br>\t&gt;&gt;&gt; from biotoolkit import GCfromDNA<br>\t&gt;&gt;&gt; GCfromDNA.compute()<br><br>The script can be invoked directly from the directory where it resides. <br>Optional filename arguments must be separated by spaces:<br>\t<br>\t$ python GCfromDNA.py file1.fa file2.fa file3.fa<br>\t<br>\t\tor alternatively:<br>\t<br>\t$ python GCfromDNA.py *.fa<br><br>If no filename is provided, the program prompts the user to select from fasta files (located <br>in the current directory) for processing. <br><br>\n          </div>"}, "last_serial": 2185757, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c9230c9bd133473e41237324864c9a95", "sha256": "467c6d631f3d73a45f19916e27e74484a3115afd7ba9a2d2a51dae407be355ea"}, "downloads": -1, "filename": "biotoolkit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c9230c9bd133473e41237324864c9a95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2792, "upload_time": "2016-06-24T09:30:41", "upload_time_iso_8601": "2016-06-24T09:30:41.902595Z", "url": "https://files.pythonhosted.org/packages/a2/2d/9cdf0aad4e89cd1d7f4655b44229e195f0faa010599f5d5b9dac311f5190/biotoolkit-0.0.1.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "3df56bff132470b36aa1b10844a4dd70", "sha256": "d8c5e6f55a8cee510b5cdf409623b111beeecff96dacd6a3f9b16ba718cb8236"}, "downloads": -1, "filename": "biotoolkit-0.1.tar.gz", "has_sig": false, "md5_digest": "3df56bff132470b36aa1b10844a4dd70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2836, "upload_time": "2016-06-24T10:09:08", "upload_time_iso_8601": "2016-06-24T10:09:08.537123Z", "url": "https://files.pythonhosted.org/packages/1e/d2/3df2de016f4447e1818b4c03766e7042adf719fe17f71b2664a72d269913/biotoolkit-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b583562c356d2f3c187a1304e1a99178", "sha256": "be04f06f5fca9a68d293b790fd016e363ef753e99bb4d6733738cf8084303c40"}, "downloads": -1, "filename": "biotoolkit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b583562c356d2f3c187a1304e1a99178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2855, "upload_time": "2016-06-24T17:22:10", "upload_time_iso_8601": "2016-06-24T17:22:10.294663Z", "url": "https://files.pythonhosted.org/packages/a3/6c/dfcb37705c596cb679c82d0c6ab9761da6f76cbbe412e427494bb45bdbd6/biotoolkit-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b583562c356d2f3c187a1304e1a99178", "sha256": "be04f06f5fca9a68d293b790fd016e363ef753e99bb4d6733738cf8084303c40"}, "downloads": -1, "filename": "biotoolkit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b583562c356d2f3c187a1304e1a99178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2855, "upload_time": "2016-06-24T17:22:10", "upload_time_iso_8601": "2016-06-24T17:22:10.294663Z", "url": "https://files.pythonhosted.org/packages/a3/6c/dfcb37705c596cb679c82d0c6ab9761da6f76cbbe412e427494bb45bdbd6/biotoolkit-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:23 2020"}