{"info": {"author": "Aliaksei Halachkin", "author_email": "aliaksei.h(you know what)gmail.com", "bugtrack_url": null, "classifiers": [], "description": "##Dynamic Time Warping Project\r\n\r\n[Examples](http://nbviewer.ipython.org/github/honeyext/cdtw/blob/master/examples.ipynb)\r\n\r\nThis module implements:\r\n\r\nDistance functions:\r\n * manhattan \r\n * euclidean \r\n * squared euclidean\r\n\r\nLocal constraints(step patterns, step functions):\r\n * [well known step patterns dp1, dp2, dp3][1]\r\n * [local constraints classified by Sakoe-Chiba][2]\r\nimpo\r\nGlobal constraints(windows):\r\n * Itakura parallelogram\r\n * [Sakoe-chiba band, Palival adjustment window][3]\r\n \r\n```python\r\nimport numpy as np\r\nfrom cdtw import pydtw\r\nr = np.array([1,2,3,4])\r\nq = np.array([2,3,4,5])\r\nd = pydtw.dtw(r,q,pydtw.Settings(step = 'p0sym',     #Sakoe-Chiba symmetric step with slope constraint p = 0\r\n                                window = 'palival', #type of the window\r\n                                param = 2.0,        #window parameter\r\n                                norm = False,       #normalization\r\n                                compute_path = True))\r\n\r\nd.get_dist()\r\n#2.0\r\nd.get_cost()\r\n#array([[  1.,   3.,   6.,  inf],\r\n#       [  1.,   2.,   4.,   7.],\r\n#       [  2.,   1.,   2.,   4.],\r\n#       [ inf,   2.,   1.,   2.]])\r\nd.get_path()\r\n#[(0, 0), (1, 0), (2, 1), (3, 2), (3, 3)]\r\n\r\n  \r\n\r\n\r\n```\r\n\r\n[1]: http://cyber.felk.cvut.cz/gerstner/teaching/zbd/dtw.pdf\r\n[2]: http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=1163055&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D1163055\r\n[3]: https://maxwell.ict.griffith.edu.au/spl/publications/papers/sigpro82_kkp_dtw.pdf", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/honeyext/cdtw", "keywords": "dtw,dynamic time warping", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "cdtw", "package_url": "https://pypi.org/project/cdtw/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cdtw/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/honeyext/cdtw"}, "release_url": "https://pypi.org/project/cdtw/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "DTW computation", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ##Dynamic Time Warping Project\n<br>\n<br>[Examples](http://nbviewer.ipython.org/github/honeyext/cdtw/blob/master/examples.ipynb)\n<br>\n<br>This module implements:\n<br>\n<br>Distance functions:\n<br> * manhattan \n<br> * euclidean \n<br> * squared euclidean\n<br>\n<br>Local constraints(step patterns, step functions):\n<br> * [well known step patterns dp1, dp2, dp3][1]\n<br> * [local constraints classified by Sakoe-Chiba][2]\n<br>impo\n<br>Global constraints(windows):\n<br> * Itakura parallelogram\n<br> * [Sakoe-chiba band, Palival adjustment window][3]\n<br> \n<br>```python\n<br>import numpy as np\n<br>from cdtw import pydtw\n<br>r = np.array([1,2,3,4])\n<br>q = np.array([2,3,4,5])\n<br>d = pydtw.dtw(r,q,pydtw.Settings(step = 'p0sym',     #Sakoe-Chiba symmetric step with slope constraint p = 0\n<br>                                window = 'palival', #type of the window\n<br>                                param = 2.0,        #window parameter\n<br>                                norm = False,       #normalization\n<br>                                compute_path = True))\n<br>\n<br>d.get_dist()\n<br>#2.0\n<br>d.get_cost()\n<br>#array([[  1.,   3.,   6.,  inf],\n<br>#       [  1.,   2.,   4.,   7.],\n<br>#       [  2.,   1.,   2.,   4.],\n<br>#       [ inf,   2.,   1.,   2.]])\n<br>d.get_path()\n<br>#[(0, 0), (1, 0), (2, 1), (3, 2), (3, 3)]\n<br>\n<br>  \n<br>\n<br>\n<br>```\n<br>\n<br>[1]: http://cyber.felk.cvut.cz/gerstner/teaching/zbd/dtw.pdf\n<br>[2]: http://ieeexplore.ieee.org/xpl/login.jsp?tp=&amp;arnumber=1163055&amp;url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D1163055\n<br>[3]: https://maxwell.ict.griffith.edu.au/spl/publications/papers/sigpro82_kkp_dtw.pdf\n          </div>"}, "last_serial": 1874183, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ef9f070ed7dc769631a86f858a8cdfb4", "sha256": "833afc2d68d880e793ce7e3fb6f9f6ccc87f940237b23eec733ece1afdca48da"}, "downloads": -1, "filename": "cdtw-0.0.1.zip", "has_sig": false, "md5_digest": "ef9f070ed7dc769631a86f858a8cdfb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181714, "upload_time": "2015-12-22T18:50:59", "upload_time_iso_8601": "2015-12-22T18:50:59.375511Z", "url": "https://files.pythonhosted.org/packages/60/e3/905eb8dfcd35aa454f0805d49a2304f5628696d202afa61340ce8947da63/cdtw-0.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef9f070ed7dc769631a86f858a8cdfb4", "sha256": "833afc2d68d880e793ce7e3fb6f9f6ccc87f940237b23eec733ece1afdca48da"}, "downloads": -1, "filename": "cdtw-0.0.1.zip", "has_sig": false, "md5_digest": "ef9f070ed7dc769631a86f858a8cdfb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181714, "upload_time": "2015-12-22T18:50:59", "upload_time_iso_8601": "2015-12-22T18:50:59.375511Z", "url": "https://files.pythonhosted.org/packages/60/e3/905eb8dfcd35aa454f0805d49a2304f5628696d202afa61340ce8947da63/cdtw-0.0.1.zip", "yanked": false}], "timestamp": "Thu May  7 22:34:54 2020"}