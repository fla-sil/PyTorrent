{"info": {"author": "Moritz Pfeiffer", "author_email": "moritz.pfeiffer@alp-phone.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Django Admin RQ\n\nDjango admin rq is a django package that creates a 4 step (form, preview, main, complete) asynchronous workflow from a ModelAdmin's changelist or changeform.\nBy using the JobAdminMixin class in your ModelAdmin subclass you can define and run jobs by overriding appropriate inherited methods.\nIt builds upon [django-rq][django-rq].\n\n[django-rq]: https://github.com/ui/django-rq\n\n# Installation\n\n-   Setup django-rq according to documentation\n-   ``pip install django-admin-rq``\n-   Add ``django_admin_rq`` to your ``INSTALLED_APPS``\n-   Add django-admin-rq.urls to your url config\n\n::\n\n    url(r'^django-admin-rq/', include('django_admin_rq.urls')),\n\n\n-   Add custom execption handler to queues: ```settings.py```\n\n::\n\n    RQ_QUEUES = {\n        'default': {\n            'HOST': 'localhost',\n            'PORT': 6379,\n            'DB': 0,\n            'DEFAULT_TIMEOUT': 360,\n        }\n    }\n    RQ = {\n        'EXCEPTION_HANDLERS': ['django_admin_rq.exceptions.exception_handler']\n    }\n\n\n-   Decorate your async tasks with the @job decorator.  \n-   They take the three arguments all of which need to be pickleable:\n    -   An instance of django_admin_rq.models.JobStatus\n    -   The form data from step 1\n    -   An extra context object you provide if necessary\n\n::\n\n    from rq import get_current_job\n    from django_rq import job\n    \n    @job\n    def async_task(job_status, form_data, extra_context):\n        job = get_current_job()\n        job_status.set_job_id(job.get_id())\n        job_status.start()\n        \n        ... do your job\n        \n        job_status.finish()\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Proper-Job/django-admin-rq", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-admin-rq", "package_url": "https://pypi.org/project/django-admin-rq/", "platform": "", "project_url": "https://pypi.org/project/django-admin-rq/", "project_urls": {"Homepage": "https://github.com/Proper-Job/django-admin-rq"}, "release_url": "https://pypi.org/project/django-admin-rq/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Django admin rq is a django package that creates a 4 step (form, preview, main, complete) asynchronous workflow from a ModelAdmin's changelist or changeform.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Django Admin RQ</p>\n<p>Django admin rq is a django package that creates a 4 step (form, preview, main, complete) asynchronous workflow from a ModelAdmin\u2019s changelist or changeform.\nBy using the JobAdminMixin class in your ModelAdmin subclass you can define and run jobs by overriding appropriate inherited methods.\nIt builds upon [django-rq][django-rq].</p>\n<p>[django-rq]: <a href=\"https://github.com/ui/django-rq\" rel=\"nofollow\">https://github.com/ui/django-rq</a></p>\n<p># Installation</p>\n<ul>\n<li>Setup django-rq according to documentation</li>\n<li><tt>pip install <span class=\"pre\">django-admin-rq</span></tt></li>\n<li>Add <tt>django_admin_rq</tt> to your <tt>INSTALLED_APPS</tt></li>\n<li>Add django-admin-rq.urls to your url config</li>\n</ul>\n<pre>url(r'^django-admin-rq/', include('django_admin_rq.urls')),\n</pre>\n<ul>\n<li>Add custom execption handler to queues: <tt>`settings.py`</tt></li>\n</ul>\n<pre>RQ_QUEUES = {\n    'default': {\n        'HOST': 'localhost',\n        'PORT': 6379,\n        'DB': 0,\n        'DEFAULT_TIMEOUT': 360,\n    }\n}\nRQ = {\n    'EXCEPTION_HANDLERS': ['django_admin_rq.exceptions.exception_handler']\n}\n</pre>\n<ul>\n<li>Decorate your async tasks with the @job decorator.</li>\n<li>They take the three arguments all of which need to be pickleable:\n-   An instance of django_admin_rq.models.JobStatus\n-   The form data from step 1\n-   An extra context object you provide if necessary</li>\n</ul>\n<pre>from rq import get_current_job\nfrom django_rq import job\n\n@job\ndef async_task(job_status, form_data, extra_context):\n    job = get_current_job()\n    job_status.set_job_id(job.get_id())\n    job_status.start()\n\n    ... do your job\n\n    job_status.finish()\n</pre>\n\n          </div>"}, "last_serial": 3300192, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6bd866d79b1773f0cc9b14e0dc4d3083", "sha256": "831cccef03c5e27954521f7fd267fecc8abcc440becc77931810faa060a4a110"}, "downloads": -1, "filename": "django-admin-rq-0.1.tar.gz", "has_sig": false, "md5_digest": "6bd866d79b1773f0cc9b14e0dc4d3083", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12075, "upload_time": "2016-04-20T10:05:28", "upload_time_iso_8601": "2016-04-20T10:05:28.954733Z", "url": "https://files.pythonhosted.org/packages/9c/b3/8e2d4c04e7aadadc3648edf5dfd003b933b9eb83e831d1aaf47b32128a09/django-admin-rq-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ddf8f577370cf93b290600b8336eb82c", "sha256": "36303be9afae81f420c4b792047c22fcc60e133d5befa5e05b5020991afd6e33"}, "downloads": -1, "filename": "django-admin-rq-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ddf8f577370cf93b290600b8336eb82c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12273, "upload_time": "2016-04-26T08:56:19", "upload_time_iso_8601": "2016-04-26T08:56:19.235479Z", "url": "https://files.pythonhosted.org/packages/b6/d5/34b430f0455570d6cb10c641c2849bc8b1b2aebabd0110325af57c8eb27b/django-admin-rq-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6c72043f8ea20e77ff7f108db7f83a85", "sha256": "ededdb4d517058b74dc15f0ee5c32504f45061fadc4861b99324f6f2943556f3"}, "downloads": -1, "filename": "django-admin-rq-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6c72043f8ea20e77ff7f108db7f83a85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12408, "upload_time": "2016-12-20T08:40:28", "upload_time_iso_8601": "2016-12-20T08:40:28.713417Z", "url": "https://files.pythonhosted.org/packages/2d/0f/c69696ab7a7071c906d0c017177d575cd9a54ffd97153c13c237bfed8090/django-admin-rq-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4eedd6afdc22d367410353eb8d2ab17d", "sha256": "9269533e880835fb8467c6c1f7872fbaef1975f4d33949eb9f8cd6d8a0dd24c8"}, "downloads": -1, "filename": "django-admin-rq-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4eedd6afdc22d367410353eb8d2ab17d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12483, "upload_time": "2016-12-20T09:23:47", "upload_time_iso_8601": "2016-12-20T09:23:47.383802Z", "url": "https://files.pythonhosted.org/packages/81/16/7fd32b3aa37f2bec19758e42d76f0fe2fb81be409493043431b1c18d0023/django-admin-rq-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5b2f96253c7ba3cd62b2704be019250e", "sha256": "d00cde0227b263dccab4c2c57cd56b1b1f2934c0072dca48074b3ebbeef328d7"}, "downloads": -1, "filename": "django-admin-rq-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5b2f96253c7ba3cd62b2704be019250e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12589, "upload_time": "2017-03-16T13:57:36", "upload_time_iso_8601": "2017-03-16T13:57:36.865340Z", "url": "https://files.pythonhosted.org/packages/8a/df/166ec4d7020b3964542b80f6428a7708962270115ad78950d1093d3defd7/django-admin-rq-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "034e97e22fc28f6880525ea9e7dcf636", "sha256": "9d60686c38ad199d3ba6d3aa61569c1033ef764d6600f92d39b2780f68283b0f"}, "downloads": -1, "filename": "django-admin-rq-0.1.5.tar.gz", "has_sig": false, "md5_digest": "034e97e22fc28f6880525ea9e7dcf636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12637, "upload_time": "2017-03-28T08:13:21", "upload_time_iso_8601": "2017-03-28T08:13:21.783661Z", "url": "https://files.pythonhosted.org/packages/82/48/109236aea89511046071b3b3c1b16b8cea774c94ee78a2e209ec01f97f68/django-admin-rq-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9a112948a47a8d12d1bd4cc42d06770b", "sha256": "30007df34c939834022c93961b2b9b80a7dff26da05aba02d97b70d68a119088"}, "downloads": -1, "filename": "django-admin-rq-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9a112948a47a8d12d1bd4cc42d06770b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12963, "upload_time": "2017-11-02T13:16:46", "upload_time_iso_8601": "2017-11-02T13:16:46.530780Z", "url": "https://files.pythonhosted.org/packages/c7/d7/c0c96b859b64c4076b7b24dec0f43cd65876297ea68c76228ace015a1728/django-admin-rq-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a112948a47a8d12d1bd4cc42d06770b", "sha256": "30007df34c939834022c93961b2b9b80a7dff26da05aba02d97b70d68a119088"}, "downloads": -1, "filename": "django-admin-rq-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9a112948a47a8d12d1bd4cc42d06770b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12963, "upload_time": "2017-11-02T13:16:46", "upload_time_iso_8601": "2017-11-02T13:16:46.530780Z", "url": "https://files.pythonhosted.org/packages/c7/d7/c0c96b859b64c4076b7b24dec0f43cd65876297ea68c76228ace015a1728/django-admin-rq-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:47 2020"}