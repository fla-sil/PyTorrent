{"info": {"author": "Ivan Rincon", "author_email": "ivan.rincon76@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Security"], "description": "MRZ Generator & MRZ Checker\n===========================\n\nDescription:\n------------\n\nMachine Readable Zone generator and checker for official travel\ndocuments sizes 1, 2, 3, MRVA and MRVB (Passports, Visas, national id\ncards and other travel documents)\n\nMRZ Generator and MRZ Checker are built according to International Civil\nAviation Organization specifications (ICAO 9303):\n\n-  `Specifications Common to all Machine Readable Travel Documents\n   (MRTDs) <https://www.icao.int/publications/Documents/9303_p3_cons_en.pdf>`__\n-  `Specifications for Machine Readable Passports\n   (MRPs) <https://www.icao.int/publications/Documents/9303_p4_cons_en.pdf>`__\n-  `Specifications for TD1 Size Machine Readable Official Travel\n   Documents\n   (MROTDs) <https://www.icao.int/publications/Documents/9303_p5_cons_en.pdf>`__\n-  `Specifications for TD2 Size Machine Readable Official Travel\n   Documents\n   (MROTDs) <https://www.icao.int/publications/Documents/9303_p6_cons_en.pdf>`__\n-  `Specifications for Machine Readable Visas\n   (MRV) <https://www.icao.int/publications/Documents/9303_p7_cons_en.pdf>`__\n\nSee all 9303 ICAO docs (`Arab <https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Arab/Files_ar.rst>`__, `Chinese <https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Chinese/Files_zh.rst>`__, `English <https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/English/Files_en.rst>`__, `French <https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/French/Files_fr.rst>`__, `Russian <https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Russian/Files_ru.rst>`__ and `Spanish <https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Spanish/Files_es.rst>`__)\n\n\nFields Distribution of Official Travel Documents:\n-------------------------------------------------\n\n.. figure:: https://raw.githubusercontent.com/Arg0s1080/mrz/master/docs/Fields_Distribution.png\n   :alt: image\n\n   image\n\nUsage Generator:\n----------------\n\nTD1's (id cards):\n^^^^^^^^^^^^^^^^^\n\n::\n\n    Params:                      Case insensitive\n\n        document_type    (str):  The first letter shall be 'I', 'A' or 'C'\n        country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n        document_number  (str):  Document number\n        birth_date       (str):  YYMMDD\n        sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"<\" or \"\"\n        expiry_date      (str):  YYMMDD\n        nationality      (str):  3 letters code (ISO 3166-1) or country name (in English)\n        surname          (str):  Holder primary identifier(s). This field will be transliterated\n        given_names      (str):  Holder secondary identifier(s). This field will be transliterated\n        optional_data1   (str):  Optional personal data at the discretion of the issuing State.\n                                 Non-mandatory field. Empty string by default\n        optional_data2   (str):  Optional personal data at the discretion of the issuing State.\n                                 Non-mandatory field. Empty string by default\n        transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n        force           (bool):  Disables checks for country, nationality and document_type fields.\n                                 Allows to use 3-letter-codes not included in the countries dictionary\n                                 and to use document_type codes without restrictions.\n\n\nTD2\n^^^\n\n::\n\n    Params:                      Case insensitive\n\n        document_type    (str):  The first letter shall be 'I', 'A' or 'C'\n        country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n        surname          (str):  Holder primary identifier(s). This field will be transliterated.\n        given_names      (str):  Holder secondary identifier(s). This field will be transliterated.\n        document_number  (str):  Document number.\n        nationality      (str):  3 letters code (ISO 3166-1) or country name\n        birth_date       (str):  YYMMDD\n        sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"<\" or \"\"\n        expiry_date      (str):  YYMMDD\n        optional_data    (str):  Optional personal data at the discretion of the issuing State.\n                                 Non-mandatory field. Empty string by default\n        transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n        force           (bool):  Disables checks for country, nationality and document_type fields.\n                                 Allows to use 3-letter-codes not included in the countries dictionary\n                                 and to use document_type codes without restrictions.\n\n\nTD3 (Passports)\n^^^^^^^^^^^^^^^\n\n::\n\n    Params:                      Case insensitive\n\n        document_type    (str):  Normally 'P' for passport\n        country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n        surname          (str):  Primary identifier(s)\n        given_names      (str):  Secondary identifier(s)\n        document_number  (str):  Document number\n        nationality      (str):  3 letters code (ISO 3166-1) or country name\n        birth_date       (str):  YYMMDD\n        sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"<\" or \"\"\n        expiry_date      (str):  YYMMDD\n        optional data    (str):  Personal number. In some countries non-mandatory field. Empty string by default\n        transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n        force           (bool):  Disables checks for country, nationality and document_type fields.\n                                 Allows to use 3-letter-codes not included in the countries dictionary\n                                 and to use document_type codes without restrictions.\n\n\nMRVA (Visas type A)\n^^^^^^^^^^^^^^^^^^^\n\n::\n\n    Params:                      Case insensitive\n\n        document_type    (str):  The First letter must be 'V'\n        country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n        surname          (str):  Primary identifier(s)\n        given_names      (str):  Secondary identifier(s)\n        document_number  (str):  Document number\n        nationality      (str):  3 letters code (ISO 3166-1) or country name\n        birth_date       (str):  YYMMDD\n        sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"<\" or \"\"\n        expiry_date      (str):  YYMMDD\n        optional_data    (str):  Optional personal data at the discretion of the issuing State.\n                                 Non-mandatory field. Empty string by default.\n        transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n        force           (bool):  Disables checks for country, nationality and document_type fields.\n                                 Allows to use 3-letter-codes not included in the countries dictionary\n                                 and to use document_type codes without restrictions.\n\n\nMRVB (Visas type B)\n^^^^^^^^^^^^^^^^^^^\n\n::\n\n    Params:                      Case insensitive\n\n        document_type    (str):  The First letter must be 'V'\n        country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n        surname          (str):  Primary identifier(s)\n        given_names      (str):  Secondary identifier(s)\n        document_number  (str):  Document number\n        nationality      (str):  3 letters code (ISO 3166-1) or country name\n        birth_date       (str):  YYMMDD\n        sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"<\" or \"\"\n        expiry_date      (str):  YYMMDD\n        optional_data    (str):  Optional personal data at the discretion of the issuing State.\n                                 Non-mandatory field. Empty string by default.\n        transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n        force           (bool):  Disables checks for country, nationality and document_type fields.\n                                 Allows to use 3-letter-codes not included in the countries dictionary\n                                 and to use document_type codes without restrictions.\n\n\nPassport generator example (ICAO9303 Specimen):\n'''''''''''''''''''''''''''''''''''''''''''''''\n\n.. figure:: https://raw.githubusercontent.com/Arg0s1080/mrz/master/docs/images/passports/ICAO_Example.png\n   :alt: image\n\n   image\n\nTD3CodeGenerator -> str:\n''''''''''''''''''''''''\n\n.. code:: python\n\n    from mrz.generator.td3 import TD3CodeGenerator\n\n    code = TD3CodeGenerator(\"P\", \"UTO\", \"Eriksson\", \"Anna Mar\u00eda\", \"L898902C3\", \"UTO\", \"740812\", \"F\", \"120415\",\"ZE184226B\")\n\n    print(code)\n\nOutput:\n'''''''\n\n::\n\n    P<UTOERIKSSON<<ANNA<MARIA<<<<<<<<<<<<<<<<<<<\n    L898902C36UTO7408122F1204159ZE184226B<<<<<10\n\nNote: See other uses in `mrz.generator examples folder <https://github.com/Arg0s1080/mrz/tree/master/examples/mrz_generator_samples>`__\n\n\nUsage Checker:\n--------------\n\nTD1's (id cards):\n^^^^^^^^^^^^^^^^^\n\n::\n\n    Params:\n\n        mrz_string        (str):  MRZ string of TD1. Must be 90 uppercase characters long (3 lines)\n        check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                                  document is not expired and that expiry_date is not greater than 10 years\n        compute_warnings (bool):  If it's set True, warnings compute as False\n\nTD2:\n^^^^\n\n::\n\n    Params:\n\n        mrz_string        (str):  MRZ string of TD2. Must be 72 characters long (uppercase) (2 lines)\n        check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                                  document is not expired and that expiry_date is not greater than 10 years\n        compute_warnings (bool):  If it's set True, warnings compute as False\n\n\nTD3 (Passports):\n^^^^^^^^^^^^^^^^\n\n::\n\n    Params:\n\n        mrz_string        (str):  MRZ string of TD3. Must be 88 characters long (uppercase) (2 lines)\n        check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                                  document is not expired and that expiry_date is not greater than 10 years\n        compute_warnings (bool):  If it's set True, warnings compute as False\n\n\nMRVA:\n^^^^^\n\n::\n\n    Params:\n\n        mrz_string        (str):  MRZ string of Visas type A. Must be 88 characters long (uppercase) (2 lines)\n        check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                                  document is not expired and that expiry_date is not greater than 10 years\n        compute_warnings (bool):  If it's set True, warnings compute as False\n\n\nMRVB:\n^^^^^\n\n::\n\n    Params:\n\n        mrz_string        (str):  MRZ string of Visas type B. Must be 72 characters long (uppercase) (2 lines)\n        check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                                  document is not expired and that expiry_date is not greater than 10 years\n        compute_warnings (bool):  If it's set True, warnings compute as False\n\n\nId Card Checker example\n'''''''''''''''''''''''\n\n.. figure:: https://raw.githubusercontent.com/Arg0s1080/mrz/master/docs/images/id_cards/Sweden.png\n   :alt: image\n\n   image\n\nTD1CodeChecker -> bool\n''''''''''''''''''''''\n\n.. code:: python\n\n    from mrz.checker.td1 import TD1CodeChecker\n\n    check = TD1CodeChecker(\"I<SWE59000002<8198703142391<<<\\n\"\n                           \"8703145M1701027SWE<<<<<<<<<<<8\\n\"\n                           \"SPECIMEN<<SVEN<<<<<<<<<<<<<<<<\")\n    result = bool(check)\n    print(result)\n\nOutput\n''''''\n\n::\n\n    True\n\nNote: See other uses in `mrz.checker examples folder <https://github.com/Arg0s1080/mrz/tree/master/examples/mrz_checker_samples>`__\n\n\nFields extraction example (valid for td1, td2, td3 and visas)\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    from mrz.checker.td1 import TD1CodeChecker, get_country\n\n    td1_check = TD1CodeChecker(\"IDLIEID98754015<<<<<<<<<<<<<<<\\n\"\n                               \"8205122M1906224LIE<<<<<<<<<<<6\\n\"\n                               \"OSPELT<BECK<<MARISA<<<<<<<<<<<\")\n\n    fields = td1_check.fields()\n\n    print(fields.name, fields.surname)\n    print(get_country(fields.country))\n\nOutput\n''''''\n\n::\n\n    MARISA OSPELT BECK\n    Liechtenstein\n\nNote: See other uses in `mrz.checker examples folder <https://github.com/Arg0s1080/mrz/tree/master/examples/mrz_checker_samples>`__ and `this issue <https://github.com/Arg0s1080/mrz/issues/6>`__\n\n\nInstallation:\n-------------\n\nFrom `Pypi repo <https://pypi.org/project/mrz/>`__ (It may not be the latest version):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    pip install mrz \n\nCloning this repo (It may not work fine):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    git clone https://github.com/Arg0s1080/mrz.git\n    cd mrz\n    sudo python3 setup.py install\n\nFeatures:\n---------\n\n-  [x] Transliteration of special Latin characters (acutes, tildes,\n   diaeresis, graves, circumflex, etc)\n-  [x] Arabic chars transliteration\n-  [x] Several variations of Cyrillic added: Serbian, Macedonian,\n   Belarusian, Ukrainian and Bulgarian\n-  [x] Transliteration of modern Greek (experimental)\n-  [x] Transliteration of modern Hebrew (without vowels) (experimental)\n-  [x] Generation of the country code from its name in English (Ex.:\n   \"Netherlands\" -> \"NLD\")\n-  [x] Name truncation detection\n-  [x] Error report, warnings report and full report in Checker.\n-  [x] Possibility that warnings compute as errors using\n   compute\\_warnings keyword in Checker.\n-  [x] Possibility of disabling checks for country code, nationality and\n   type of document, allowing to use 3-letter-codes not included in the\n   countries dictionary and to use document\\_type codes without\n   restrictions in Generator.\n-  [x] Added new checks for periods of time in Checker.\n-  [x] Visas support\n-  [x] Fields extraction in checker (name, surname, country, sex, etc)\n   (version 0.5.0)\n\nTODO:\n\n\n-  [ ] Automatic name truncation in Generator\n-  [ ] Possibility of disabling checks for country code, nationality,\n   type of document and the others fields in Checker.\n-  [ ] Add logging\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Arg0s1080/mrz", "keywords": "mrz passports visas id cards td1 td2 td3 mrva mrvb icao", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "mrz", "package_url": "https://pypi.org/project/mrz/", "platform": "", "project_url": "https://pypi.org/project/mrz/", "project_urls": {"Homepage": "https://github.com/Arg0s1080/mrz"}, "release_url": "https://pypi.org/project/mrz/0.5.8/", "requires_dist": null, "requires_python": "", "summary": "Machine readable zone generator and checker for passports, visas, id cards and other travel documents", "version": "0.5.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description:</h2>\n<p>Machine Readable Zone generator and checker for official travel\ndocuments sizes 1, 2, 3, MRVA and MRVB (Passports, Visas, national id\ncards and other travel documents)</p>\n<p>MRZ Generator and MRZ Checker are built according to International Civil\nAviation Organization specifications (ICAO 9303):</p>\n<ul>\n<li><a href=\"https://www.icao.int/publications/Documents/9303_p3_cons_en.pdf\" rel=\"nofollow\">Specifications Common to all Machine Readable Travel Documents\n(MRTDs)</a></li>\n<li><a href=\"https://www.icao.int/publications/Documents/9303_p4_cons_en.pdf\" rel=\"nofollow\">Specifications for Machine Readable Passports\n(MRPs)</a></li>\n<li><a href=\"https://www.icao.int/publications/Documents/9303_p5_cons_en.pdf\" rel=\"nofollow\">Specifications for TD1 Size Machine Readable Official Travel\nDocuments\n(MROTDs)</a></li>\n<li><a href=\"https://www.icao.int/publications/Documents/9303_p6_cons_en.pdf\" rel=\"nofollow\">Specifications for TD2 Size Machine Readable Official Travel\nDocuments\n(MROTDs)</a></li>\n<li><a href=\"https://www.icao.int/publications/Documents/9303_p7_cons_en.pdf\" rel=\"nofollow\">Specifications for Machine Readable Visas\n(MRV)</a></li>\n</ul>\n<p>See all 9303 ICAO docs (<a href=\"https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Arab/Files_ar.rst\" rel=\"nofollow\">Arab</a>, <a href=\"https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Chinese/Files_zh.rst\" rel=\"nofollow\">Chinese</a>, <a href=\"https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/English/Files_en.rst\" rel=\"nofollow\">English</a>, <a href=\"https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/French/Files_fr.rst\" rel=\"nofollow\">French</a>, <a href=\"https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Russian/Files_ru.rst\" rel=\"nofollow\">Russian</a> and <a href=\"https://github.com/Arg0s1080/mrz/tree/master/docs/ICAO9303/Spanish/Files_es.rst\" rel=\"nofollow\">Spanish</a>)</p>\n</div>\n<div id=\"fields-distribution-of-official-travel-documents\">\n<h2>Fields Distribution of Official Travel Documents:</h2>\n<div>\n<img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42d3823b41d409827dc4cd2df09211c9ac468820/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4172673073313038302f6d727a2f6d61737465722f646f63732f4669656c64735f446973747269627574696f6e2e706e67\">\n<p>image</p>\n</div>\n</div>\n<div id=\"usage-generator\">\n<h2>Usage Generator:</h2>\n<div id=\"td1-s-id-cards\">\n<h3>TD1\u2019s (id cards):</h3>\n<pre>Params:                      Case insensitive\n\n    document_type    (str):  The first letter shall be 'I', 'A' or 'C'\n    country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n    document_number  (str):  Document number\n    birth_date       (str):  YYMMDD\n    sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"&lt;\" or \"\"\n    expiry_date      (str):  YYMMDD\n    nationality      (str):  3 letters code (ISO 3166-1) or country name (in English)\n    surname          (str):  Holder primary identifier(s). This field will be transliterated\n    given_names      (str):  Holder secondary identifier(s). This field will be transliterated\n    optional_data1   (str):  Optional personal data at the discretion of the issuing State.\n                             Non-mandatory field. Empty string by default\n    optional_data2   (str):  Optional personal data at the discretion of the issuing State.\n                             Non-mandatory field. Empty string by default\n    transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n    force           (bool):  Disables checks for country, nationality and document_type fields.\n                             Allows to use 3-letter-codes not included in the countries dictionary\n                             and to use document_type codes without restrictions.\n</pre>\n</div>\n<div id=\"td2\">\n<h3>TD2</h3>\n<pre>Params:                      Case insensitive\n\n    document_type    (str):  The first letter shall be 'I', 'A' or 'C'\n    country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n    surname          (str):  Holder primary identifier(s). This field will be transliterated.\n    given_names      (str):  Holder secondary identifier(s). This field will be transliterated.\n    document_number  (str):  Document number.\n    nationality      (str):  3 letters code (ISO 3166-1) or country name\n    birth_date       (str):  YYMMDD\n    sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"&lt;\" or \"\"\n    expiry_date      (str):  YYMMDD\n    optional_data    (str):  Optional personal data at the discretion of the issuing State.\n                             Non-mandatory field. Empty string by default\n    transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n    force           (bool):  Disables checks for country, nationality and document_type fields.\n                             Allows to use 3-letter-codes not included in the countries dictionary\n                             and to use document_type codes without restrictions.\n</pre>\n</div>\n<div id=\"td3-passports\">\n<h3>TD3 (Passports)</h3>\n<pre>Params:                      Case insensitive\n\n    document_type    (str):  Normally 'P' for passport\n    country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n    surname          (str):  Primary identifier(s)\n    given_names      (str):  Secondary identifier(s)\n    document_number  (str):  Document number\n    nationality      (str):  3 letters code (ISO 3166-1) or country name\n    birth_date       (str):  YYMMDD\n    sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"&lt;\" or \"\"\n    expiry_date      (str):  YYMMDD\n    optional data    (str):  Personal number. In some countries non-mandatory field. Empty string by default\n    transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n    force           (bool):  Disables checks for country, nationality and document_type fields.\n                             Allows to use 3-letter-codes not included in the countries dictionary\n                             and to use document_type codes without restrictions.\n</pre>\n</div>\n<div id=\"mrva-visas-type-a\">\n<h3>MRVA (Visas type A)</h3>\n<pre>Params:                      Case insensitive\n\n    document_type    (str):  The First letter must be 'V'\n    country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n    surname          (str):  Primary identifier(s)\n    given_names      (str):  Secondary identifier(s)\n    document_number  (str):  Document number\n    nationality      (str):  3 letters code (ISO 3166-1) or country name\n    birth_date       (str):  YYMMDD\n    sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"&lt;\" or \"\"\n    expiry_date      (str):  YYMMDD\n    optional_data    (str):  Optional personal data at the discretion of the issuing State.\n                             Non-mandatory field. Empty string by default.\n    transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n    force           (bool):  Disables checks for country, nationality and document_type fields.\n                             Allows to use 3-letter-codes not included in the countries dictionary\n                             and to use document_type codes without restrictions.\n</pre>\n</div>\n<div id=\"mrvb-visas-type-b\">\n<h3>MRVB (Visas type B)</h3>\n<pre>Params:                      Case insensitive\n\n    document_type    (str):  The First letter must be 'V'\n    country_code     (str):  3 letters code (ISO 3166-1) or country name (in English)\n    surname          (str):  Primary identifier(s)\n    given_names      (str):  Secondary identifier(s)\n    document_number  (str):  Document number\n    nationality      (str):  3 letters code (ISO 3166-1) or country name\n    birth_date       (str):  YYMMDD\n    sex              (str):  Genre. Male: 'M', Female: 'F' or Undefined: 'X', \"&lt;\" or \"\"\n    expiry_date      (str):  YYMMDD\n    optional_data    (str):  Optional personal data at the discretion of the issuing State.\n                             Non-mandatory field. Empty string by default.\n    transliteration (dict):  Transliteration dictionary for non-ascii chars. Latin based by default\n    force           (bool):  Disables checks for country, nationality and document_type fields.\n                             Allows to use 3-letter-codes not included in the countries dictionary\n                             and to use document_type codes without restrictions.\n</pre>\n<div id=\"passport-generator-example-icao9303-specimen\">\n<h4>Passport generator example (ICAO9303 Specimen):</h4>\n<div>\n<img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cb3368168a13ab61d26c85c214e939f06bcb7ef/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4172673073313038302f6d727a2f6d61737465722f646f63732f696d616765732f70617373706f7274732f4943414f5f4578616d706c652e706e67\">\n<p>image</p>\n</div>\n</div>\n<div id=\"td3codegenerator-str\">\n<h4>TD3CodeGenerator -&gt; str:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mrz.generator.td3</span> <span class=\"kn\">import</span> <span class=\"n\">TD3CodeGenerator</span>\n\n<span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"n\">TD3CodeGenerator</span><span class=\"p\">(</span><span class=\"s2\">\"P\"</span><span class=\"p\">,</span> <span class=\"s2\">\"UTO\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Eriksson\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Anna Mar\u00eda\"</span><span class=\"p\">,</span> <span class=\"s2\">\"L898902C3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"UTO\"</span><span class=\"p\">,</span> <span class=\"s2\">\"740812\"</span><span class=\"p\">,</span> <span class=\"s2\">\"F\"</span><span class=\"p\">,</span> <span class=\"s2\">\"120415\"</span><span class=\"p\">,</span><span class=\"s2\">\"ZE184226B\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"output\">\n<h4>Output:</h4>\n<pre>P&lt;UTOERIKSSON&lt;&lt;ANNA&lt;MARIA&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\nL898902C36UTO7408122F1204159ZE184226B&lt;&lt;&lt;&lt;&lt;10\n</pre>\n<p>Note: See other uses in <a href=\"https://github.com/Arg0s1080/mrz/tree/master/examples/mrz_generator_samples\" rel=\"nofollow\">mrz.generator examples folder</a></p>\n</div>\n</div>\n</div>\n<div id=\"usage-checker\">\n<h2>Usage Checker:</h2>\n<div id=\"id1\">\n<h3>TD1\u2019s (id cards):</h3>\n<pre>Params:\n\n    mrz_string        (str):  MRZ string of TD1. Must be 90 uppercase characters long (3 lines)\n    check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                              document is not expired and that expiry_date is not greater than 10 years\n    compute_warnings (bool):  If it's set True, warnings compute as False\n</pre>\n</div>\n<div id=\"id2\">\n<h3>TD2:</h3>\n<pre>Params:\n\n    mrz_string        (str):  MRZ string of TD2. Must be 72 characters long (uppercase) (2 lines)\n    check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                              document is not expired and that expiry_date is not greater than 10 years\n    compute_warnings (bool):  If it's set True, warnings compute as False\n</pre>\n</div>\n<div id=\"id3\">\n<h3>TD3 (Passports):</h3>\n<pre>Params:\n\n    mrz_string        (str):  MRZ string of TD3. Must be 88 characters long (uppercase) (2 lines)\n    check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                              document is not expired and that expiry_date is not greater than 10 years\n    compute_warnings (bool):  If it's set True, warnings compute as False\n</pre>\n</div>\n<div id=\"mrva\">\n<h3>MRVA:</h3>\n<pre>Params:\n\n    mrz_string        (str):  MRZ string of Visas type A. Must be 88 characters long (uppercase) (2 lines)\n    check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                              document is not expired and that expiry_date is not greater than 10 years\n    compute_warnings (bool):  If it's set True, warnings compute as False\n</pre>\n</div>\n<div id=\"mrvb\">\n<h3>MRVB:</h3>\n<pre>Params:\n\n    mrz_string        (str):  MRZ string of Visas type B. Must be 72 characters long (uppercase) (2 lines)\n    check_expiry     (bool):  If it's set to True, it is verified and reported as warning that the\n                              document is not expired and that expiry_date is not greater than 10 years\n    compute_warnings (bool):  If it's set True, warnings compute as False\n</pre>\n<div id=\"id-card-checker-example\">\n<h4>Id Card Checker example</h4>\n<div>\n<img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a82739db88e3440f702658597ba6e00dd62e9a33/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4172673073313038302f6d727a2f6d61737465722f646f63732f696d616765732f69645f63617264732f53776564656e2e706e67\">\n<p>image</p>\n</div>\n</div>\n<div id=\"td1codechecker-bool\">\n<h4>TD1CodeChecker -&gt; bool</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mrz.checker.td1</span> <span class=\"kn\">import</span> <span class=\"n\">TD1CodeChecker</span>\n\n<span class=\"n\">check</span> <span class=\"o\">=</span> <span class=\"n\">TD1CodeChecker</span><span class=\"p\">(</span><span class=\"s2\">\"I&lt;SWE59000002&lt;8198703142391&lt;&lt;&lt;</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n                       <span class=\"s2\">\"8703145M1701027SWE&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;8</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n                       <span class=\"s2\">\"SPECIMEN&lt;&lt;SVEN&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"id4\">\n<h4>Output</h4>\n<pre>True\n</pre>\n<p>Note: See other uses in <a href=\"https://github.com/Arg0s1080/mrz/tree/master/examples/mrz_checker_samples\" rel=\"nofollow\">mrz.checker examples folder</a></p>\n</div>\n<div id=\"fields-extraction-example-valid-for-td1-td2-td3-and-visas\">\n<h4>Fields extraction example (valid for td1, td2, td3 and visas)</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mrz.checker.td1</span> <span class=\"kn\">import</span> <span class=\"n\">TD1CodeChecker</span><span class=\"p\">,</span> <span class=\"n\">get_country</span>\n\n<span class=\"n\">td1_check</span> <span class=\"o\">=</span> <span class=\"n\">TD1CodeChecker</span><span class=\"p\">(</span><span class=\"s2\">\"IDLIEID98754015&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n                           <span class=\"s2\">\"8205122M1906224LIE&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;6</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n                           <span class=\"s2\">\"OSPELT&lt;BECK&lt;&lt;MARISA&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">td1_check</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">surname</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">get_country</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">country</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"id5\">\n<h4>Output</h4>\n<pre>MARISA OSPELT BECK\nLiechtenstein\n</pre>\n<p>Note: See other uses in <a href=\"https://github.com/Arg0s1080/mrz/tree/master/examples/mrz_checker_samples\" rel=\"nofollow\">mrz.checker examples folder</a> and <a href=\"https://github.com/Arg0s1080/mrz/issues/6\" rel=\"nofollow\">this issue</a></p>\n</div>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<div id=\"from-pypi-repo-it-may-not-be-the-latest-version\">\n<h3>From <a href=\"https://pypi.org/project/mrz/\" rel=\"nofollow\">Pypi repo</a> (It may not be the latest version):</h3>\n<pre>pip install mrz\n</pre>\n</div>\n<div id=\"cloning-this-repo-it-may-not-work-fine\">\n<h3>Cloning this repo (It may not work fine):</h3>\n<pre>git clone https://github.com/Arg0s1080/mrz.git\ncd mrz\nsudo python3 setup.py install\n</pre>\n</div>\n</div>\n<div id=\"features\">\n<h2>Features:</h2>\n<ul>\n<li>[x] Transliteration of special Latin characters (acutes, tildes,\ndiaeresis, graves, circumflex, etc)</li>\n<li>[x] Arabic chars transliteration</li>\n<li>[x] Several variations of Cyrillic added: Serbian, Macedonian,\nBelarusian, Ukrainian and Bulgarian</li>\n<li>[x] Transliteration of modern Greek (experimental)</li>\n<li>[x] Transliteration of modern Hebrew (without vowels) (experimental)</li>\n<li>[x] Generation of the country code from its name in English (Ex.:\n\u201cNetherlands\u201d -&gt; \u201cNLD\u201d)</li>\n<li>[x] Name truncation detection</li>\n<li>[x] Error report, warnings report and full report in Checker.</li>\n<li>[x] Possibility that warnings compute as errors using\ncompute_warnings keyword in Checker.</li>\n<li>[x] Possibility of disabling checks for country code, nationality and\ntype of document, allowing to use 3-letter-codes not included in the\ncountries dictionary and to use document_type codes without\nrestrictions in Generator.</li>\n<li>[x] Added new checks for periods of time in Checker.</li>\n<li>[x] Visas support</li>\n<li>[x] Fields extraction in checker (name, surname, country, sex, etc)\n(version 0.5.0)</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>[ ] Automatic name truncation in Generator</li>\n<li>[ ] Possibility of disabling checks for country code, nationality,\ntype of document and the others fields in Checker.</li>\n<li>[ ] Add logging</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6398401, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "50ab0142d105a0b8e26b045e8cd66c33", "sha256": "d688c7939b3432c068f1d98ae6c8b8e4425ad87378eb2ca44175e1373a688eaa"}, "downloads": -1, "filename": "mrz-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "50ab0142d105a0b8e26b045e8cd66c33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48585, "upload_time": "2018-03-28T17:54:35", "upload_time_iso_8601": "2018-03-28T17:54:35.970538Z", "url": "https://files.pythonhosted.org/packages/b8/3d/57e516a307fedb9f822cf95e5b6f7596448954bfee89bd4602e3892f5c02/mrz-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44004f4c9c54c0fee703760cf4ff5b81", "sha256": "1a9613f33a4b33e830d6a6aa70124d1603f654f654f7565146a110730ef38e64"}, "downloads": -1, "filename": "mrz-0.2.2.tar.gz", "has_sig": false, "md5_digest": "44004f4c9c54c0fee703760cf4ff5b81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23059, "upload_time": "2018-03-28T17:54:38", "upload_time_iso_8601": "2018-03-28T17:54:38.347922Z", "url": "https://files.pythonhosted.org/packages/a1/3e/f5cc03c40ffdaa7d73fc632b3b4087307c13eea73c7fd1e0207cd8f26c95/mrz-0.2.2.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "42b72f2a35d0d727f201b96f70ffd051", "sha256": "6a63a656a733accb8b15c8d12aaa15071ad462262875d9e4ceccc11cc3eb0fa3"}, "downloads": -1, "filename": "mrz-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "42b72f2a35d0d727f201b96f70ffd051", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51885, "upload_time": "2018-08-22T16:10:38", "upload_time_iso_8601": "2018-08-22T16:10:38.612750Z", "url": "https://files.pythonhosted.org/packages/eb/85/fa4de30180152aa1ffb02a4f22f4e3c30f8f377538fed6f283cb7e4a2268/mrz-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e518ab569d0b51c3f7342fe3568bd575", "sha256": "d5bedaedeb16c0077661d2c9633f51eed49788e3c63d79e23edd03259a1ddc51"}, "downloads": -1, "filename": "mrz-0.3.5.tar.gz", "has_sig": false, "md5_digest": "e518ab569d0b51c3f7342fe3568bd575", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23955, "upload_time": "2018-08-22T16:10:40", "upload_time_iso_8601": "2018-08-22T16:10:40.323285Z", "url": "https://files.pythonhosted.org/packages/99/d8/65123efa80b752536b4228ea8940a383f113f4fc3d9a43adea7e36754de6/mrz-0.3.5.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e4b558ac0c53a679d9f2a1e188ab3f45", "sha256": "7b84045e9370dc4c411f4829fb2fc374e1660209114901c4d2cdb76443977cb6"}, "downloads": -1, "filename": "mrz-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e4b558ac0c53a679d9f2a1e188ab3f45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64368, "upload_time": "2019-03-09T17:02:03", "upload_time_iso_8601": "2019-03-09T17:02:03.950784Z", "url": "https://files.pythonhosted.org/packages/fc/04/20e7c7047c91f9b526e422dc75f46588651edfc11ae4d2740b71bf1123b2/mrz-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95e8622c8fec104a9e529321fb04e692", "sha256": "396dbb53bd94a6346e422ae1e14e9dd11a3e8d69f4fde17e4cb07bdcb2953dae"}, "downloads": -1, "filename": "mrz-0.4.0.tar.gz", "has_sig": false, "md5_digest": "95e8622c8fec104a9e529321fb04e692", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24339, "upload_time": "2019-03-09T17:02:06", "upload_time_iso_8601": "2019-03-09T17:02:06.267241Z", "url": "https://files.pythonhosted.org/packages/03/81/31c17b3e7a346f4ce81a752b60669e7f890e97cbdfe56d75190a0721452e/mrz-0.4.0.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "aed09472eb9445c4d40a0134ce14907b", "sha256": "d055b3f36a31ce28ded2c8c641b8dc66d03a54f06bd05515117265f9b477d813"}, "downloads": -1, "filename": "mrz-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "aed09472eb9445c4d40a0134ce14907b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 66972, "upload_time": "2019-04-16T18:12:45", "upload_time_iso_8601": "2019-04-16T18:12:45.550468Z", "url": "https://files.pythonhosted.org/packages/bb/cc/182ef4116d00ab7b671e37a5ccc411940989830f6754ca88cb84b08bbee4/mrz-0.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dc9f461e7cae531a7caa806d89ae641", "sha256": "d3226922c7dab260da379a24b1657299c352e66469edcf5d03a935c994b61efd"}, "downloads": -1, "filename": "mrz-0.5.5.tar.gz", "has_sig": false, "md5_digest": "2dc9f461e7cae531a7caa806d89ae641", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25445, "upload_time": "2019-04-16T18:12:49", "upload_time_iso_8601": "2019-04-16T18:12:49.000419Z", "url": "https://files.pythonhosted.org/packages/50/93/32dbe69e3b479519b7766fef51bd63818de0605b156de91e5ebc48d97df5/mrz-0.5.5.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "ad0d71e44249749bdddf47dac18cc255", "sha256": "be6eed6014f082db33a0dedee12f5c434209918bc5730acf118536998052760b"}, "downloads": -1, "filename": "mrz-0.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "ad0d71e44249749bdddf47dac18cc255", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59396, "upload_time": "2020-01-05T15:05:19", "upload_time_iso_8601": "2020-01-05T15:05:19.612867Z", "url": "https://files.pythonhosted.org/packages/15/83/395623aed451a8509ef22f920459cf49bbc8575bf8fd8692707aca7d1f62/mrz-0.5.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9645a5fc38203f479b3b9e079bf8f81b", "sha256": "a312526c119b3d6c280e8b669adc1bbb41837f379ac3622bbb7dfa7a94f6c9a3"}, "downloads": -1, "filename": "mrz-0.5.8.tar.gz", "has_sig": false, "md5_digest": "9645a5fc38203f479b3b9e079bf8f81b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29259, "upload_time": "2020-01-05T15:05:21", "upload_time_iso_8601": "2020-01-05T15:05:21.871937Z", "url": "https://files.pythonhosted.org/packages/1f/9e/978952331f8be533a96b511c204960f032e62d997845a7b54d7e2c918ded/mrz-0.5.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad0d71e44249749bdddf47dac18cc255", "sha256": "be6eed6014f082db33a0dedee12f5c434209918bc5730acf118536998052760b"}, "downloads": -1, "filename": "mrz-0.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "ad0d71e44249749bdddf47dac18cc255", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59396, "upload_time": "2020-01-05T15:05:19", "upload_time_iso_8601": "2020-01-05T15:05:19.612867Z", "url": "https://files.pythonhosted.org/packages/15/83/395623aed451a8509ef22f920459cf49bbc8575bf8fd8692707aca7d1f62/mrz-0.5.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9645a5fc38203f479b3b9e079bf8f81b", "sha256": "a312526c119b3d6c280e8b669adc1bbb41837f379ac3622bbb7dfa7a94f6c9a3"}, "downloads": -1, "filename": "mrz-0.5.8.tar.gz", "has_sig": false, "md5_digest": "9645a5fc38203f479b3b9e079bf8f81b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29259, "upload_time": "2020-01-05T15:05:21", "upload_time_iso_8601": "2020-01-05T15:05:21.871937Z", "url": "https://files.pythonhosted.org/packages/1f/9e/978952331f8be533a96b511c204960f032e62d997845a7b54d7e2c918ded/mrz-0.5.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:57 2020"}