{"info": {"author": "Uli Fouquet", "author_email": "uli@gnufix.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Framework :: Sphinx", "Framework :: Sphinx :: Extension", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Documentation", "Topic :: Documentation :: Sphinx", "Topic :: Utilities"], "description": "waeup.sphinx.autodoc\n********************\n\n|bdg-build|  | `sources <https://github.com/WAeUP/waeup.sphinx.autodoc>`_ | `issues <https://github.com/WAeUP/waeup.sphinx.autodoc/issues>`_\n\n.. |bdg-build| image:: https://travis-ci.org/WAeUP/waeup.sphinx.autodoc.svg?branch=master\n    :target: https://travis-ci.org/WAeUP/waeup.sphinx.autodoc\n    :alt: Build Status\n\n`waeup.sphinx.autodoc` is a Sphinx_ extension for autodocumenting\ncomponents/classes specific to Zope3_ and Grok_.\n\nThis project is in early state. Use with care.\n\nFeatures available yet:\n\n- When autodocumenting, ignore components with a dot in their\n  name. This can greatly reduce the number of `AttributeErrors` you\n  get (and you cannot tackle otherwise) when using Sphinx_ with\n  Grok_ projects.\n\n- New ``grokindexes`` autodocumenter documents `grok.Indexes` declarations.\n\n\n.. contents::\n\n\nInstall\n=======\n\nThis Python package can be installed via pip_::\n\n  $ pip install waeup.sphinx.autodoc\n\nNormally you will install `waeup.sphinx.autodoc` with your Zope3_ or\nGrok_ project. It must be installed in a way, so that Sphinx_ can find\nthe package. The way depends on your project. For most projects it\nwill be sufficient to add `waeup.sphinx.autodoc` in the\n`install_requires` dict of your ``setup.py``.\n\nUsage\n=====\n\nOnce installed, you can activate the package in the ``conf.py`` of\nyour local Sphinx_ sources::\n\n  # conf.py\n  #\n  # ...\n  #\n  # Add any Sphinx extension module names here, as strings. They can be\n  # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n  # ones.\n  extensions = [\n      'sphinx.ext.autodoc',\n      'waeup.sphinx.autodoc',\n      # ...\n  ]\n  #\n  # ...\n  #\n\nPlease note, that you also have to activate `sphinx.ext.autodoc`,\nwhich comes with Sphinx_ automatically.\n\n`waeup.sphinx.autodoc` provides a new config var and new directives.\n\n``ignore_dot_named_members``\n----------------------------\n\nThis config value can be set in the `conf.py` of your project::\n\n  # conf.py\n  # ...\n  ignore_dot_named_members = True\n  # ...\n\nSet to True by default. Avoids sphinx choking on member names with\ndots in.\n\nIf set to `True`, we skip all member that have a dot in name,\ni.e. members like `grokcore.component.directive`. Member names like\nthese are extensively used for instance by `grok`.\n\nFor `Sphinx` this is a problem, as it assumes that dots in names\ndenote member objects of a parent object. Lots of `AttributeErrors`\nare the result.\n\n\n``grokindexes``\n---------------\n\nThis directive renders a `grok.Indexes` instance. As `grok.Indexes` is\nnormally an instance of some class and not a class, also any\n`grok.Indexes` 'class' will not be recognized as class by stock\nSphinx_.\n\nWith `waeup.sphinx.autodoc` you can describe a `grok.Indexes` instance\nin your code with the new `grokindexes` directive::\n\n   .. grokindexes:: mymod.MyCatalog\n\n        Description of MyCatalog\n\nAutoscanning `grok.Indexes` instances is also possible. For that you\ncan use the `autogrokindexes`::\n\n   .. autogrokindexes:: mymod.MyCatalog\n\nOf course, in this case `mymod.MyCatalog` must be importable during\nSphinx_ run.\n\n\nDeveloper Install\n=================\n\nFor people that want to hack the `waeup.sphinx.autodoc` package\nitself.\n\nDevelopers can fork a clone from github::\n\n  $ git clone https://github.com/WAeUP/waeup.sphinx.autodoc.git\n\nWe recommend to create and activate a virtualenv_ first::\n\n  $ cd waeup.sphinx.autodoc\n  $ virtualenv -p /usr/bin/python2.7 py27\n  $ source py27/bin/activate\n  (py27) $\n\nWe support Python versions 2.6, 2.7.\n\nNow you can create the devel environment::\n\n  (py27) $ python setup.py dev\n\nThis will fetch test packages (py.test_) and other packages needed to\nrun tests. As we need `grok` and other packages depending of lots of\nother packages, unfortunately a *lot* of packages will be downloaded\nand installed.\n\nIf download aborts, please keep calm and carry on by retrying.\n\nRunning Tests\n-------------\n\nAfter finishing this, you should be able to run tests::\n\n  (py27) $ py.test\n\nIf you have different Python versions installed, you can use tox_ for\nrunning tests against these::\n\n  (py27) $ pip install tox  # only once\n  (py27) $ tox\n\nShould run tests in all officially supported Python versions.\n\n::\n\n  (py27) $ tox -e py26\n\nwill run tests with a special Python version (here: Python 2.6).\n\n\nLicense\n=======\n\nThis Python package is licensed under the GPL v3+.\n\nCopyright (C) 2015 Uli Fouquet and WAeUP Germany.\n\n\n.. _pip: https://pip.pypa.io/\n.. _`Sphinx`: http://sphinx-doc.org/\n.. _`Zope3`: http://www.zope.org/\n.. _`Grok`: http://grok.zope.org/\n.. _virtualenv: https://virtualenv.pypa.io/\n.. _py.test: https://pytest.org/\n.. _tox: https://tox.testrun.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/waeup.sphinx.autodoc", "keywords": "sphinx autodoc grok zope waeup documenter", "license": "GPL 3.0", "maintainer": null, "maintainer_email": null, "name": "waeup.sphinx.autodoc", "package_url": "https://pypi.org/project/waeup.sphinx.autodoc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/waeup.sphinx.autodoc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/waeup.sphinx.autodoc"}, "release_url": "https://pypi.org/project/waeup.sphinx.autodoc/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "More Zope compatible autodocumenters for Sphinx.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/WAeUP/waeup.sphinx.autodoc\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7427e3eceeb8d50dd8dc5a6560df740465937ff/68747470733a2f2f7472617669732d63692e6f72672f57416555502f77616575702e737068696e782e6175746f646f632e7376673f6272616e63683d6d6173746572\"></a>  | <a href=\"https://github.com/WAeUP/waeup.sphinx.autodoc\" rel=\"nofollow\">sources</a> | <a href=\"https://github.com/WAeUP/waeup.sphinx.autodoc/issues\" rel=\"nofollow\">issues</a></p>\n<p><cite>waeup.sphinx.autodoc</cite> is a <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> extension for autodocumenting\ncomponents/classes specific to <a href=\"http://www.zope.org/\" rel=\"nofollow\">Zope3</a> and <a href=\"http://grok.zope.org/\" rel=\"nofollow\">Grok</a>.</p>\n<p>This project is in early state. Use with care.</p>\n<p>Features available yet:</p>\n<ul>\n<li>When autodocumenting, ignore components with a dot in their\nname. This can greatly reduce the number of <cite>AttributeErrors</cite> you\nget (and you cannot tackle otherwise) when using <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> with\n<a href=\"http://grok.zope.org/\" rel=\"nofollow\">Grok</a> projects.</li>\n<li>New <tt>grokindexes</tt> autodocumenter documents <cite>grok.Indexes</cite> declarations.</li>\n</ul>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#install\" id=\"id1\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" id=\"id2\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#ignore-dot-named-members\" id=\"id3\" rel=\"nofollow\"><tt>ignore_dot_named_members</tt></a></li>\n<li><a href=\"#grokindexes\" id=\"id4\" rel=\"nofollow\"><tt>grokindexes</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#developer-install\" id=\"id5\" rel=\"nofollow\">Developer Install</a><ul>\n<li><a href=\"#running-tests\" id=\"id6\" rel=\"nofollow\">Running Tests</a></li>\n</ul>\n</li>\n<li><a href=\"#license\" id=\"id7\" rel=\"nofollow\">License</a></li>\n</ul>\n</div>\n<div id=\"install\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Install</a></h2>\n<p>This Python package can be installed via <a href=\"https://pip.pypa.io/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install waeup.sphinx.autodoc\n</pre>\n<p>Normally you will install <cite>waeup.sphinx.autodoc</cite> with your <a href=\"http://www.zope.org/\" rel=\"nofollow\">Zope3</a> or\n<a href=\"http://grok.zope.org/\" rel=\"nofollow\">Grok</a> project. It must be installed in a way, so that <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> can find\nthe package. The way depends on your project. For most projects it\nwill be sufficient to add <cite>waeup.sphinx.autodoc</cite> in the\n<cite>install_requires</cite> dict of your <tt>setup.py</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Usage</a></h2>\n<p>Once installed, you can activate the package in the <tt>conf.py</tt> of\nyour local <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> sources:</p>\n<pre># conf.py\n#\n# ...\n#\n# Add any Sphinx extension module names here, as strings. They can be\n# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n# ones.\nextensions = [\n    'sphinx.ext.autodoc',\n    'waeup.sphinx.autodoc',\n    # ...\n]\n#\n# ...\n#\n</pre>\n<p>Please note, that you also have to activate <cite>sphinx.ext.autodoc</cite>,\nwhich comes with <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> automatically.</p>\n<p><cite>waeup.sphinx.autodoc</cite> provides a new config var and new directives.</p>\n<div id=\"ignore-dot-named-members\">\n<h3><a href=\"#id3\" rel=\"nofollow\"><tt>ignore_dot_named_members</tt></a></h3>\n<p>This config value can be set in the <cite>conf.py</cite> of your project:</p>\n<pre># conf.py\n# ...\nignore_dot_named_members = True\n# ...\n</pre>\n<p>Set to True by default. Avoids sphinx choking on member names with\ndots in.</p>\n<p>If set to <cite>True</cite>, we skip all member that have a dot in name,\ni.e. members like <cite>grokcore.component.directive</cite>. Member names like\nthese are extensively used for instance by <cite>grok</cite>.</p>\n<p>For <cite>Sphinx</cite> this is a problem, as it assumes that dots in names\ndenote member objects of a parent object. Lots of <cite>AttributeErrors</cite>\nare the result.</p>\n</div>\n<div id=\"grokindexes\">\n<h3><a href=\"#id4\" rel=\"nofollow\"><tt>grokindexes</tt></a></h3>\n<p>This directive renders a <cite>grok.Indexes</cite> instance. As <cite>grok.Indexes</cite> is\nnormally an instance of some class and not a class, also any\n<cite>grok.Indexes</cite> \u2018class\u2019 will not be recognized as class by stock\n<a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a>.</p>\n<p>With <cite>waeup.sphinx.autodoc</cite> you can describe a <cite>grok.Indexes</cite> instance\nin your code with the new <cite>grokindexes</cite> directive:</p>\n<pre>.. grokindexes:: mymod.MyCatalog\n\n     Description of MyCatalog\n</pre>\n<p>Autoscanning <cite>grok.Indexes</cite> instances is also possible. For that you\ncan use the <cite>autogrokindexes</cite>:</p>\n<pre>.. autogrokindexes:: mymod.MyCatalog\n</pre>\n<p>Of course, in this case <cite>mymod.MyCatalog</cite> must be importable during\n<a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> run.</p>\n</div>\n</div>\n<div id=\"developer-install\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Developer Install</a></h2>\n<p>For people that want to hack the <cite>waeup.sphinx.autodoc</cite> package\nitself.</p>\n<p>Developers can fork a clone from github:</p>\n<pre>$ git clone https://github.com/WAeUP/waeup.sphinx.autodoc.git\n</pre>\n<p>We recommend to create and activate a <a href=\"https://virtualenv.pypa.io/\" rel=\"nofollow\">virtualenv</a> first:</p>\n<pre>$ cd waeup.sphinx.autodoc\n$ virtualenv -p /usr/bin/python2.7 py27\n$ source py27/bin/activate\n(py27) $\n</pre>\n<p>We support Python versions 2.6, 2.7.</p>\n<p>Now you can create the devel environment:</p>\n<pre>(py27) $ python setup.py dev\n</pre>\n<p>This will fetch test packages (<a href=\"https://pytest.org/\" rel=\"nofollow\">py.test</a>) and other packages needed to\nrun tests. As we need <cite>grok</cite> and other packages depending of lots of\nother packages, unfortunately a <em>lot</em> of packages will be downloaded\nand installed.</p>\n<p>If download aborts, please keep calm and carry on by retrying.</p>\n<div id=\"running-tests\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Running Tests</a></h3>\n<p>After finishing this, you should be able to run tests:</p>\n<pre>(py27) $ py.test\n</pre>\n<p>If you have different Python versions installed, you can use <a href=\"https://tox.testrun.org/\" rel=\"nofollow\">tox</a> for\nrunning tests against these:</p>\n<pre>(py27) $ pip install tox  # only once\n(py27) $ tox\n</pre>\n<p>Should run tests in all officially supported Python versions.</p>\n<pre>(py27) $ tox -e py26\n</pre>\n<p>will run tests with a special Python version (here: Python 2.6).</p>\n</div>\n</div>\n<div id=\"license\">\n<h2><a href=\"#id7\" rel=\"nofollow\">License</a></h2>\n<p>This Python package is licensed under the GPL v3+.</p>\n<p>Copyright (C) 2015 Uli Fouquet and WAeUP Germany.</p>\n</div>\n\n          </div>"}, "last_serial": 1832603, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c09774601b5b23abe1c36b9e9a4c0392", "sha256": "38705895e8c2d949ce1510d2bc4f78ce1772ba14309c8d178d572ca9c132016c"}, "downloads": -1, "filename": "waeup.sphinx.autodoc-0.1.tar.gz", "has_sig": false, "md5_digest": "c09774601b5b23abe1c36b9e9a4c0392", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27117, "upload_time": "2015-11-24T07:29:31", "upload_time_iso_8601": "2015-11-24T07:29:31.409847Z", "url": "https://files.pythonhosted.org/packages/c8/78/d3a137feed7f41ed770842be7d3d47b1f0372d70845642feaebd76a1a362/waeup.sphinx.autodoc-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1a70274adaea11203c5674419cbac36b", "sha256": "ac31886957a3e87450f0c89cec3e6d69e7e4d4352786c9eab2d69b0f6384cad7"}, "downloads": -1, "filename": "waeup.sphinx.autodoc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a70274adaea11203c5674419cbac36b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27143, "upload_time": "2015-11-25T07:59:49", "upload_time_iso_8601": "2015-11-25T07:59:49.126835Z", "url": "https://files.pythonhosted.org/packages/4c/63/4de198d78114436ce70dd36771419bef2446348d9d8a2ce7149bc41a9e20/waeup.sphinx.autodoc-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a70274adaea11203c5674419cbac36b", "sha256": "ac31886957a3e87450f0c89cec3e6d69e7e4d4352786c9eab2d69b0f6384cad7"}, "downloads": -1, "filename": "waeup.sphinx.autodoc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a70274adaea11203c5674419cbac36b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27143, "upload_time": "2015-11-25T07:59:49", "upload_time_iso_8601": "2015-11-25T07:59:49.126835Z", "url": "https://files.pythonhosted.org/packages/4c/63/4de198d78114436ce70dd36771419bef2446348d9d8a2ce7149bc41a9e20/waeup.sphinx.autodoc-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:18 2020"}