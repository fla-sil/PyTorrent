{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![pipeline status](https://gitlab.com/delijati/py-presi/badges/master/pipeline.svg)](https://gitlab.com/delijati/py-presi/commits/master)\n[![coverage report](https://gitlab.com/delijati/py-presi/badges/master/coverage.svg)](https://gitlab.com/delijati/py-presi/commits/master)\n\n# Python best practice\n\n- [Pypacking](https://packaging.python.org)\n- [PEP8](https://www.python.org/dev/peps/pep-0008/)\n- [GitlabCI/CD](https://docs.gitlab.com/ee/ci/)\n\n---\n\n# Import this\n\n    !python\n    >>> import this\n    The Zen of Python, by Tim Peters\n\n    Beautiful is better than ugly.\n    Explicit is better than implicit.\n    Simple is better than complex.\n    Complex is better than complicated.\n    Flat is better than nested.\n    Sparse is better than dense.\n    Readability counts.\n    Special cases aren't special enough to break the rules.\n    Although practicality beats purity.\n    Errors should never pass silently.\n    Unless explicitly silenced.\n    In the face of ambiguity, refuse the temptation to guess.\n    There should be one-- and preferably only one --obvious way to do it.\n    Although that way may not be obvious at first unless you're Dutch.\n    Now is better than never.\n    Although never is often better than *right* now.\n    If the implementation is hard to explain, it's a bad idea.\n    If the implementation is easy to explain, it may be a good idea.\n    Namespaces are one honking great idea -- let's do more of those!\n\n---\n\n# setup.py\n\nWhy should you use a setup.py?\n\n    !python\n    from setuptools import find_packages, setup\n\n    version = \"0.0.1\"\n\n    setup(\n        name=\"py_presi\",\n        version=version,\n        packages=find_packages(),\n        include_package_data=True,\n        zip_safe=True,\n        install_requires=[\"pytest\", \"click\", \"darkslide\"],\n        entry_points={\"console_scripts\": [\n            \"pp-build = py_presi.__main__:build\"\n        ]},\n    )\n\nUsage:\n\n    !python\n    import py_presi.build\n    py_presi.build.build()\n\n---\n\n# Structure\n\nHow is a package structured?\n\n    !bash\n    % tree\n    .\n    \u251c\u2500\u2500 CHANGES.md\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 py_presi\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 build.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 requirements.in\n    \u251c\u2500\u2500 requirements.txt\n    \u251c\u2500\u2500 setup.py\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 test_me.py\n\n---\n\n# Building && uploading\n\nWhat is virtualenv, pip, pipenv, setuptools, pypi?\n\n    !bash\n    $ virtualenv env\n    $ source env/bin/activate\n\n    $ python setup.py install\n    $ python setup.py develop\n    $ pip install .\n    $ pip install -e .\n\n    # console_script\n    $ pp-build\n\n    # create egg sdist wheel and upload\n    $ python setup.py sdist bdist_wheel bdist_egg\n    $ twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n\n---\n\n# Versioning\n\nHow should package be versioned?\n\n[Semantic Versioning](https://semver.org/)\n\n    !bash\n    $ bumpversion [major|minor|patch]\n    $ cat .bumpversion.cfg \n    [bumpversion]\n    current_version = 0.0.1\n    commit = True\n    tag = True\n\n    [bumpversion:file:setup.py]\n\nExample:\n\n    !bash\n    # add --dry-run to test\n    $ bump2version --verbose patch --tag-name \"{new_version}\"\n    $ git push && git push --tags\n\n---\n\n# CHANGES\n\nHow to track changes?\n\n    !bash\n    % cat CHANGES.md \n    **unreleased**\n\n    - Update docs reflect new structure\n    - Add a CHANGES.md\n\n    **0.0.2**\n\n    - Added Dockerfile [jod]\n    - Added pip-tools\n    - Added gitlab registry\n\n---\n\n# Libraries\n\nWhy use libraries and not put all code into the repo?\n\n- [Do one thing and do it well](https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well)\n- DRY. Don't repeat yourself!\n- Scope is much smaller and tailored to usecase\n- Self sustained tests\n\ne.g. [marshmallow](https://github.com/marshmallow-code/marshmallow)\n\n---\n\n# PEP8\n\nWhy should all code look the same?\n\nOne of Guido's key insights is that code is **read much more often** than it is\nwritten. The guidelines provided here are intended to improve the readability\nof code and make it consistent across the wide spectrum of Python code. As PEP\n20 says, \"Readability counts\".\n\n[PEP8](https://www.python.org/dev/peps/pep-0008/)\n\n---\n\n# Autoformatter\n\n- Autopep8\n- Black (we decided to use that one)\n- Yapf\n\nExample:\n\n    !bash\n    % black py-presi \n    reformatted /py-presi/py-presi/test/test_me.py\n    reformatted /py-presi/py-presi/setup.py\n    reformatted /py-presi/py-presi/py_presi/__main__.py\n    All done! \u2728 \ud83c\udf70 \u2728\n    3 files reformatted, 1 file left unchanged.\n\n---\n\n# Flake8\n\nTool For Style Guide Enforcement\n\n    !bash\n    $ pip install flake8\n    $ flake8 check.py\n    $ cat .flake8\n    [flake8]\n    ignore = E501 W503 W504\n    max-line-length = 88\n\nAdd ignore to code\n\n    !python\n    import superlonguglything # noqa\n\nAdd add git pre-commit-hook\n\n    !bash\n    $ flake8 --install-hook git\n    $ git config --bool flake8.strict true\n\n---\n\n# Test && Coverage\n\nRun test and create coverage report as html\n\n    !bash\n    $ pip install pytest pytest-cov\n    $ pytest test --cov py_presi --cov-report html --cov-report term\n    $ firefox htmlcov/index.html\n\n[Coverage](https://delijati.gitlab.io/py-presi/htmlcov)\n\n---\n\n# GitlabCI/CD\n\nGitlab hooks `.gitlab-ci.yml` to test and deploy code\n\n    !yaml\n    test:\n      script:\n        - pytest test --cov py_presi --cov-report term --cov-report html\n        - flake8 test py_presi\n      coverage: '/^TOTAL\\s+\\d+\\s+\\d+\\s+(\\d+\\%)$/'\n\n    deploy-pypi:\n      script:\n        - pip install twine\n        - twine upload --repository-url https://NOT_EXISTING_YET dist/*\n      when: manual\n\n    deploy-docker:\n      only:\n        - tags\n\n---\n\n# README\n\n- Add real description of the service\n- Add gitlab badges\n- Add install, deployment instruction\n- If a library add sphinx documentation\n\nSphinx e.g.\n\n- [requests/sphinx/source](https://github.com/psf/requests/tree/master/docs)\n- [request/sphinx](https://requests.readthedocs.io/en/master/)\n- [sphinx/documentation](http://www.sphinx-doc.org/en/master/)\n\n---\n\n# Dependencies\n\nPin all dependencies also inherited one\n\n    !bash\n    $ pip install pip-tools\n    $ # manage here your direct dependencies\n    $ vim requirements.in\n    $ # run pip-compile to generate requirements.txt or add remove dependencies\n    $ pip-compile\n    $ # upgrade all dependencies\n    $ pip-compile --upgrade\n\nExcerpt from `requirements.txt`\n\n    # This file is autogenerated by pip-compile\n    attrs==19.3.0             # via pytest\n    click==7.1.1              # via -r requirements.in\n    coverage==5.0.3           # via pytest-cov\n    darkslide==5.1.0          # via -r requirements.in\n\n---\n\n# Docker health check\n\nHow to run docker health checks?\n\n    !docker\n    HEALTHCHECK --interval=5s --timeout=3s \\\n      CMD curl -f http://0.0.0.0:8080/ || exit 1\n\nCheck health:\n\n    !bash\n    $ docker inspect --format \"{{json .State.Health }}\" <CID> | jq\n    {\n      \"Status\": \"unhealthy\",\n      \"FailingStreak\": 65,\n      \"Log\": [\n    ...\n\n---\n\n# Build presentation\n\nInstall && build:\n\n    !bash\n    $ pip install -e .\n    $ pp-build\n    $ firefox index.html\n\nOr in docker:\n\n    !bash\n    $ docker build -t app .\n    $ docker run -ti --rm -p 8080:8080 app\n    $ firefox http://0.0.0.0:8080\n\n---\n\n# Thanks\n\nJosip Deli\u0107\n\n[repository](https://gitlab.com/delijati/py-presi)\n[presentation](https://delijati.gitlab.io/py-presi)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-presi", "package_url": "https://pypi.org/project/py-presi/", "platform": "", "project_url": "https://pypi.org/project/py-presi/", "project_urls": null, "release_url": "https://pypi.org/project/py-presi/1.1.6/", "requires_dist": ["attrs (==19.3.0)", "click (==7.1.1)", "coverage (==5.0.3)", "darkslide (==5.1.0)", "docutils (==0.16)", "entrypoints (==0.3)", "flake8 (==3.7.9)", "importlib-metadata (==1.5.0)", "jinja2 (==2.11.1)", "markdown (==3.2.1)", "markupsafe (==1.1.1)", "mccabe (==0.6.1)", "more-itertools (==8.2.0)", "packaging (==20.3)", "pluggy (==0.13.1)", "py (==1.8.1)", "pycodestyle (==2.5.0)", "pyflakes (==2.1.1)", "pygments (==2.6.1)", "pyparsing (==2.4.6)", "pytest-cov (==2.8.1)", "pytest (==5.3.5)", "qrcode (==6.1)", "six (==1.14.0)", "wcwidth (==0.1.8)", "zipp (==3.1.0)"], "requires_python": "", "summary": "", "version": "1.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitlab.com/delijati/py-presi/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1f75c3e0d38347af27f8f5ae2c9dfc8031e31c4/68747470733a2f2f6769746c61622e636f6d2f64656c696a6174692f70792d70726573692f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.com/delijati/py-presi/commits/master\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a553f60950794dd13e1fe7dd467df865b195c89e/68747470733a2f2f6769746c61622e636f6d2f64656c696a6174692f70792d70726573692f6261646765732f6d61737465722f636f7665726167652e737667\"></a></p>\n<h1>Python best practice</h1>\n<ul>\n<li><a href=\"https://packaging.python.org\" rel=\"nofollow\">Pypacking</a></li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a></li>\n<li><a href=\"https://docs.gitlab.com/ee/ci/\" rel=\"nofollow\">GitlabCI/CD</a></li>\n</ul>\n<hr>\n<h1>Import this</h1>\n<pre><code>!python\n&gt;&gt;&gt; import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n</code></pre>\n<hr>\n<h1>setup.py</h1>\n<p>Why should you use a setup.py?</p>\n<pre><code>!python\nfrom setuptools import find_packages, setup\n\nversion = \"0.0.1\"\n\nsetup(\n    name=\"py_presi\",\n    version=version,\n    packages=find_packages(),\n    include_package_data=True,\n    zip_safe=True,\n    install_requires=[\"pytest\", \"click\", \"darkslide\"],\n    entry_points={\"console_scripts\": [\n        \"pp-build = py_presi.__main__:build\"\n    ]},\n)\n</code></pre>\n<p>Usage:</p>\n<pre><code>!python\nimport py_presi.build\npy_presi.build.build()\n</code></pre>\n<hr>\n<h1>Structure</h1>\n<p>How is a package structured?</p>\n<pre><code>!bash\n% tree\n.\n\u251c\u2500\u2500 CHANGES.md\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 py_presi\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 __main__.py\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements.in\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 test\n    \u2514\u2500\u2500 test_me.py\n</code></pre>\n<hr>\n<h1>Building &amp;&amp; uploading</h1>\n<p>What is virtualenv, pip, pipenv, setuptools, pypi?</p>\n<pre><code>!bash\n$ virtualenv env\n$ source env/bin/activate\n\n$ python setup.py install\n$ python setup.py develop\n$ pip install .\n$ pip install -e .\n\n# console_script\n$ pp-build\n\n# create egg sdist wheel and upload\n$ python setup.py sdist bdist_wheel bdist_egg\n$ twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n</code></pre>\n<hr>\n<h1>Versioning</h1>\n<p>How should package be versioned?</p>\n<p><a href=\"https://semver.org/\" rel=\"nofollow\">Semantic Versioning</a></p>\n<pre><code>!bash\n$ bumpversion [major|minor|patch]\n$ cat .bumpversion.cfg \n[bumpversion]\ncurrent_version = 0.0.1\ncommit = True\ntag = True\n\n[bumpversion:file:setup.py]\n</code></pre>\n<p>Example:</p>\n<pre><code>!bash\n# add --dry-run to test\n$ bump2version --verbose patch --tag-name \"{new_version}\"\n$ git push &amp;&amp; git push --tags\n</code></pre>\n<hr>\n<h1>CHANGES</h1>\n<p>How to track changes?</p>\n<pre><code>!bash\n% cat CHANGES.md \n**unreleased**\n\n- Update docs reflect new structure\n- Add a CHANGES.md\n\n**0.0.2**\n\n- Added Dockerfile [jod]\n- Added pip-tools\n- Added gitlab registry\n</code></pre>\n<hr>\n<h1>Libraries</h1>\n<p>Why use libraries and not put all code into the repo?</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well\" rel=\"nofollow\">Do one thing and do it well</a></li>\n<li>DRY. Don't repeat yourself!</li>\n<li>Scope is much smaller and tailored to usecase</li>\n<li>Self sustained tests</li>\n</ul>\n<p>e.g. <a href=\"https://github.com/marshmallow-code/marshmallow\" rel=\"nofollow\">marshmallow</a></p>\n<hr>\n<h1>PEP8</h1>\n<p>Why should all code look the same?</p>\n<p>One of Guido's key insights is that code is <strong>read much more often</strong> than it is\nwritten. The guidelines provided here are intended to improve the readability\nof code and make it consistent across the wide spectrum of Python code. As PEP\n20 says, \"Readability counts\".</p>\n<p><a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a></p>\n<hr>\n<h1>Autoformatter</h1>\n<ul>\n<li>Autopep8</li>\n<li>Black (we decided to use that one)</li>\n<li>Yapf</li>\n</ul>\n<p>Example:</p>\n<pre><code>!bash\n% black py-presi \nreformatted /py-presi/py-presi/test/test_me.py\nreformatted /py-presi/py-presi/setup.py\nreformatted /py-presi/py-presi/py_presi/__main__.py\nAll done! \u2728 \ud83c\udf70 \u2728\n3 files reformatted, 1 file left unchanged.\n</code></pre>\n<hr>\n<h1>Flake8</h1>\n<p>Tool For Style Guide Enforcement</p>\n<pre><code>!bash\n$ pip install flake8\n$ flake8 check.py\n$ cat .flake8\n[flake8]\nignore = E501 W503 W504\nmax-line-length = 88\n</code></pre>\n<p>Add ignore to code</p>\n<pre><code>!python\nimport superlonguglything # noqa\n</code></pre>\n<p>Add add git pre-commit-hook</p>\n<pre><code>!bash\n$ flake8 --install-hook git\n$ git config --bool flake8.strict true\n</code></pre>\n<hr>\n<h1>Test &amp;&amp; Coverage</h1>\n<p>Run test and create coverage report as html</p>\n<pre><code>!bash\n$ pip install pytest pytest-cov\n$ pytest test --cov py_presi --cov-report html --cov-report term\n$ firefox htmlcov/index.html\n</code></pre>\n<p><a href=\"https://delijati.gitlab.io/py-presi/htmlcov\" rel=\"nofollow\">Coverage</a></p>\n<hr>\n<h1>GitlabCI/CD</h1>\n<p>Gitlab hooks <code>.gitlab-ci.yml</code> to test and deploy code</p>\n<pre><code>!yaml\ntest:\n  script:\n    - pytest test --cov py_presi --cov-report term --cov-report html\n    - flake8 test py_presi\n  coverage: '/^TOTAL\\s+\\d+\\s+\\d+\\s+(\\d+\\%)$/'\n\ndeploy-pypi:\n  script:\n    - pip install twine\n    - twine upload --repository-url https://NOT_EXISTING_YET dist/*\n  when: manual\n\ndeploy-docker:\n  only:\n    - tags\n</code></pre>\n<hr>\n<h1>README</h1>\n<ul>\n<li>Add real description of the service</li>\n<li>Add gitlab badges</li>\n<li>Add install, deployment instruction</li>\n<li>If a library add sphinx documentation</li>\n</ul>\n<p>Sphinx e.g.</p>\n<ul>\n<li><a href=\"https://github.com/psf/requests/tree/master/docs\" rel=\"nofollow\">requests/sphinx/source</a></li>\n<li><a href=\"https://requests.readthedocs.io/en/master/\" rel=\"nofollow\">request/sphinx</a></li>\n<li><a href=\"http://www.sphinx-doc.org/en/master/\" rel=\"nofollow\">sphinx/documentation</a></li>\n</ul>\n<hr>\n<h1>Dependencies</h1>\n<p>Pin all dependencies also inherited one</p>\n<pre><code>!bash\n$ pip install pip-tools\n$ # manage here your direct dependencies\n$ vim requirements.in\n$ # run pip-compile to generate requirements.txt or add remove dependencies\n$ pip-compile\n$ # upgrade all dependencies\n$ pip-compile --upgrade\n</code></pre>\n<p>Excerpt from <code>requirements.txt</code></p>\n<pre><code># This file is autogenerated by pip-compile\nattrs==19.3.0             # via pytest\nclick==7.1.1              # via -r requirements.in\ncoverage==5.0.3           # via pytest-cov\ndarkslide==5.1.0          # via -r requirements.in\n</code></pre>\n<hr>\n<h1>Docker health check</h1>\n<p>How to run docker health checks?</p>\n<pre><code>!docker\nHEALTHCHECK --interval=5s --timeout=3s \\\n  CMD curl -f http://0.0.0.0:8080/ || exit 1\n</code></pre>\n<p>Check health:</p>\n<pre><code>!bash\n$ docker inspect --format \"{{json .State.Health }}\" &lt;CID&gt; | jq\n{\n  \"Status\": \"unhealthy\",\n  \"FailingStreak\": 65,\n  \"Log\": [\n...\n</code></pre>\n<hr>\n<h1>Build presentation</h1>\n<p>Install &amp;&amp; build:</p>\n<pre><code>!bash\n$ pip install -e .\n$ pp-build\n$ firefox index.html\n</code></pre>\n<p>Or in docker:</p>\n<pre><code>!bash\n$ docker build -t app .\n$ docker run -ti --rm -p 8080:8080 app\n$ firefox http://0.0.0.0:8080\n</code></pre>\n<hr>\n<h1>Thanks</h1>\n<p>Josip Deli\u0107</p>\n<p><a href=\"https://gitlab.com/delijati/py-presi\" rel=\"nofollow\">repository</a>\n<a href=\"https://delijati.gitlab.io/py-presi\" rel=\"nofollow\">presentation</a></p>\n\n          </div>"}, "last_serial": 6919498, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "41af2c5c70cd8e5a3676986125fed6dc", "sha256": "40ad5c7db7319f0cce6675c0670163c11a71c1eb10993858d4163d484d53c189"}, "downloads": -1, "filename": "py_presi-1.1.1-py3.6.egg", "has_sig": false, "md5_digest": "41af2c5c70cd8e5a3676986125fed6dc", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 6904, "upload_time": "2020-03-31T09:15:07", "upload_time_iso_8601": "2020-03-31T09:15:07.193263Z", "url": "https://files.pythonhosted.org/packages/03/8a/65d253f599afa4bdc1fadbc96b7f8184b6e7e6f36c08edd196105708ba83/py_presi-1.1.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8546cd4cd2cc575c29becd214b746f87", "sha256": "c84f549f28e64bdbdb4a03d9b703dbdd463ec8e59f137692231fb8d414fe8fed"}, "downloads": -1, "filename": "py_presi-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8546cd4cd2cc575c29becd214b746f87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17897, "upload_time": "2020-03-31T09:15:04", "upload_time_iso_8601": "2020-03-31T09:15:04.576985Z", "url": "https://files.pythonhosted.org/packages/ab/ca/b5d73fa72309973e7e1a290deaa824de724e829904c9026a3587a8ab82f0/py_presi-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b130b67ca3192d5f94dcefad80e3f3ee", "sha256": "178955693da0713acbe687642bb12facd3b70567971ec987a0ca4f670c7d4898"}, "downloads": -1, "filename": "py_presi-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b130b67ca3192d5f94dcefad80e3f3ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21051, "upload_time": "2020-03-31T09:15:08", "upload_time_iso_8601": "2020-03-31T09:15:08.405269Z", "url": "https://files.pythonhosted.org/packages/4c/a6/97354ce65914159f087d972faaaafe5e7f8dee86e372bb530d2835556722/py_presi-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "a6715e71efcf8634d0eeb42339d627d0", "sha256": "474592147f3c3955bd7b93d64e84667f2d361c1afe4b8b2a6e4a44f5e8118a38"}, "downloads": -1, "filename": "py_presi-1.1.2-py3.6.egg", "has_sig": false, "md5_digest": "a6715e71efcf8634d0eeb42339d627d0", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5349, "upload_time": "2020-03-31T09:28:08", "upload_time_iso_8601": "2020-03-31T09:28:08.834762Z", "url": "https://files.pythonhosted.org/packages/58/6b/f791ec3b48c245360870dd4bb5671ea4ecc6d157543fcd97d15071e9ec73/py_presi-1.1.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3024b25cfaf40d677d6cbc5535da2f96", "sha256": "ac45398d2f8eeebd63cb99e7906aaa2a1f86704e49a6e70a448045e648e7622a"}, "downloads": -1, "filename": "py_presi-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3024b25cfaf40d677d6cbc5535da2f96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17899, "upload_time": "2020-03-31T09:28:07", "upload_time_iso_8601": "2020-03-31T09:28:07.921801Z", "url": "https://files.pythonhosted.org/packages/7a/6f/34242fea00760edc9bb35815a6826a3b011a72ab51d8bdc5b538b76edfb3/py_presi-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6be5d0536a216d79e7b973085a2ea7f", "sha256": "4fa21a09afeafc26c082218ef0bf42b9939405c78d3daacd457c48c4206e3861"}, "downloads": -1, "filename": "py_presi-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e6be5d0536a216d79e7b973085a2ea7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5804, "upload_time": "2020-03-31T09:28:09", "upload_time_iso_8601": "2020-03-31T09:28:09.585133Z", "url": "https://files.pythonhosted.org/packages/8c/2c/8391514f8c31f1a4c06f94b16fadfcb712412f6480912231bd03afc16a13/py_presi-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "be68583f2a7cabfce44d0b650d835a11", "sha256": "a2c94d4ec42467d1020343f2b8057462986a116e98d70af006e3b05a6c5f502d"}, "downloads": -1, "filename": "py_presi-1.1.3-py3.6.egg", "has_sig": false, "md5_digest": "be68583f2a7cabfce44d0b650d835a11", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5349, "upload_time": "2020-03-31T09:36:17", "upload_time_iso_8601": "2020-03-31T09:36:17.440267Z", "url": "https://files.pythonhosted.org/packages/bf/72/ce8bf9b0119d2fc6e0a3d5ed8841d99102916d50753c941071e3be365fec/py_presi-1.1.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "32f5c2daba37790808510e372e4db9b6", "sha256": "18feef811cb170ef78068489421b759e81ca5b0e01377f0a92fbce56768fb0fe"}, "downloads": -1, "filename": "py_presi-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "32f5c2daba37790808510e372e4db9b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17900, "upload_time": "2020-03-31T09:36:16", "upload_time_iso_8601": "2020-03-31T09:36:16.503851Z", "url": "https://files.pythonhosted.org/packages/cd/98/335d62e6ad6088a7876986c3ef7dff5e99584f052b810038f5324e09a38f/py_presi-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebd87314b683fc9815b87f66740f240a", "sha256": "a04c990ed45312df7732a223c5964ba49383a02f6eda3fc124e1aa013b8dbe25"}, "downloads": -1, "filename": "py_presi-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ebd87314b683fc9815b87f66740f240a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5804, "upload_time": "2020-03-31T09:36:18", "upload_time_iso_8601": "2020-03-31T09:36:18.520381Z", "url": "https://files.pythonhosted.org/packages/6d/67/7514980f3416d312fdda04cc98ab82d1e01409bbbf6b96b059519c2fc2b6/py_presi-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "2aa9d6232ddeb2ef24ccf5c806c6031a", "sha256": "ed3b24fa4002fb95efee73a65afa04d6f6a9bbf5fa5f6f442d4122f07b5924af"}, "downloads": -1, "filename": "py_presi-1.1.4-py3.6.egg", "has_sig": false, "md5_digest": "2aa9d6232ddeb2ef24ccf5c806c6031a", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5349, "upload_time": "2020-03-31T10:08:29", "upload_time_iso_8601": "2020-03-31T10:08:29.142623Z", "url": "https://files.pythonhosted.org/packages/16/c1/3ceee9a2a82d4ea0027fa7e5cb0531b2804bb16dd2efd87f393a61885ee3/py_presi-1.1.4-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e2f467b5b5b021e86f0aa5c9ce7db2d", "sha256": "428cc5f413cfb8444063b0aa282bf5b2d0c6ef03f124c67bae22b8bfb93253f1"}, "downloads": -1, "filename": "py_presi-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0e2f467b5b5b021e86f0aa5c9ce7db2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17899, "upload_time": "2020-03-31T10:08:28", "upload_time_iso_8601": "2020-03-31T10:08:28.178042Z", "url": "https://files.pythonhosted.org/packages/e2/34/f4780805e0104db3ea890a6cf802d9444c0052f9d18c725865ec317ddbfd/py_presi-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7138c8cc788e4251226be4de44bb5463", "sha256": "7f1f0a9adb56f86d47d246f03a634529ac04a248a410e455e3e0e4d40081e62c"}, "downloads": -1, "filename": "py_presi-1.1.4.tar.gz", "has_sig": false, "md5_digest": "7138c8cc788e4251226be4de44bb5463", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5804, "upload_time": "2020-03-31T10:08:29", "upload_time_iso_8601": "2020-03-31T10:08:29.961765Z", "url": "https://files.pythonhosted.org/packages/38/bd/731fb9326537aa3e59c747dab656c4266c5f3de4869f194ca918fe9967fd/py_presi-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "94f49454a03228483b56b0708cea5039", "sha256": "c70b8736c709675f51c6d9b065ab17f457daa745299a57a39a31053dcedf0432"}, "downloads": -1, "filename": "py_presi-1.1.5-py3.6.egg", "has_sig": false, "md5_digest": "94f49454a03228483b56b0708cea5039", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5349, "upload_time": "2020-03-31T10:23:41", "upload_time_iso_8601": "2020-03-31T10:23:41.882345Z", "url": "https://files.pythonhosted.org/packages/91/da/c6c4c31c7722e2989389a73f6f1862062372fbea3f45290b420ef9b8cd73/py_presi-1.1.5-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "04cd5eb56e828bd58d75c681ed94c53e", "sha256": "d00039c31916d05fbf7fd03eda00298c5cb6babaeb66fbe57772ebbf1f3ebc70"}, "downloads": -1, "filename": "py_presi-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "04cd5eb56e828bd58d75c681ed94c53e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17899, "upload_time": "2020-03-31T10:23:40", "upload_time_iso_8601": "2020-03-31T10:23:40.895322Z", "url": "https://files.pythonhosted.org/packages/6a/49/36d57b1617fb598f8e42275512fa6c40c17b37712d6e6e891483d2415df7/py_presi-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19e3c700c15ef1d13eadc3b9ced7312c", "sha256": "39c82583e9957fbe2661e6d898811062ffb605ced90ccd33942b91811d676b66"}, "downloads": -1, "filename": "py_presi-1.1.5.tar.gz", "has_sig": false, "md5_digest": "19e3c700c15ef1d13eadc3b9ced7312c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5809, "upload_time": "2020-03-31T10:23:43", "upload_time_iso_8601": "2020-03-31T10:23:43.093517Z", "url": "https://files.pythonhosted.org/packages/b8/c9/dfc8c93edf1fb78e2d45d060719a00b97c1830a5a012f5863d3a3f55d08c/py_presi-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "26faae78e2921dfb13ba0ac499ecfdfa", "sha256": "ee8e395c4d1114d1e13e2ea14eba62571ae8f11b78b6668eedcc77071e508291"}, "downloads": -1, "filename": "py_presi-1.1.6-py3.6.egg", "has_sig": false, "md5_digest": "26faae78e2921dfb13ba0ac499ecfdfa", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5349, "upload_time": "2020-03-31T11:24:30", "upload_time_iso_8601": "2020-03-31T11:24:30.446826Z", "url": "https://files.pythonhosted.org/packages/bf/d3/dfc9caa0c796c4f6472bad57fb0e26d4949bc4c94e0d94088cc307fd447e/py_presi-1.1.6-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7e1038a3b4cee1ef9530792da1b0c94", "sha256": "b06d0ba5d35d5a5b3328462a36a711d9f68e8c4536ed65de3b0fd2d7e6ad290d"}, "downloads": -1, "filename": "py_presi-1.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b7e1038a3b4cee1ef9530792da1b0c94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17899, "upload_time": "2020-03-31T11:24:29", "upload_time_iso_8601": "2020-03-31T11:24:29.109972Z", "url": "https://files.pythonhosted.org/packages/15/0e/3de6ed4848b086add8075e2c37c4bcf91c2c32748c2582e878e9c0912c12/py_presi-1.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f75db33fd3151db88592f86e6ffc6d8", "sha256": "042635884ce95dbf3485433603650fd5bf3dc2993f86d407107366829e5aa711"}, "downloads": -1, "filename": "py_presi-1.1.6.tar.gz", "has_sig": false, "md5_digest": "1f75db33fd3151db88592f86e6ffc6d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5803, "upload_time": "2020-03-31T11:24:31", "upload_time_iso_8601": "2020-03-31T11:24:31.639440Z", "url": "https://files.pythonhosted.org/packages/a8/5e/3f4182396eeeda7971921063743ba7790a645aceb714354572636f075c10/py_presi-1.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26faae78e2921dfb13ba0ac499ecfdfa", "sha256": "ee8e395c4d1114d1e13e2ea14eba62571ae8f11b78b6668eedcc77071e508291"}, "downloads": -1, "filename": "py_presi-1.1.6-py3.6.egg", "has_sig": false, "md5_digest": "26faae78e2921dfb13ba0ac499ecfdfa", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5349, "upload_time": "2020-03-31T11:24:30", "upload_time_iso_8601": "2020-03-31T11:24:30.446826Z", "url": "https://files.pythonhosted.org/packages/bf/d3/dfc9caa0c796c4f6472bad57fb0e26d4949bc4c94e0d94088cc307fd447e/py_presi-1.1.6-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7e1038a3b4cee1ef9530792da1b0c94", "sha256": "b06d0ba5d35d5a5b3328462a36a711d9f68e8c4536ed65de3b0fd2d7e6ad290d"}, "downloads": -1, "filename": "py_presi-1.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b7e1038a3b4cee1ef9530792da1b0c94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17899, "upload_time": "2020-03-31T11:24:29", "upload_time_iso_8601": "2020-03-31T11:24:29.109972Z", "url": "https://files.pythonhosted.org/packages/15/0e/3de6ed4848b086add8075e2c37c4bcf91c2c32748c2582e878e9c0912c12/py_presi-1.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f75db33fd3151db88592f86e6ffc6d8", "sha256": "042635884ce95dbf3485433603650fd5bf3dc2993f86d407107366829e5aa711"}, "downloads": -1, "filename": "py_presi-1.1.6.tar.gz", "has_sig": false, "md5_digest": "1f75db33fd3151db88592f86e6ffc6d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5803, "upload_time": "2020-03-31T11:24:31", "upload_time_iso_8601": "2020-03-31T11:24:31.639440Z", "url": "https://files.pythonhosted.org/packages/a8/5e/3f4182396eeeda7971921063743ba7790a645aceb714354572636f075c10/py_presi-1.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:10 2020"}