{"info": {"author": "Fluendo", "author_email": "web-dev@fluendo.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "===========================\nWelcome to Django-Atlassian\n===========================\n\n.. image:: https://img.shields.io/pypi/djversions/djangorestframework.svg\n\n.. image:: https://img.shields.io/github/license/fluendo/django-atlassian.svg\n\n\nDjango-atlassian allows you to build a Atlassian Connect apps using Django, it includes:\n - JWT support\n - Jira's django db backend\n - Confluence's django db backend\n\nInstallation\n------------\n\nDownload and install using ``pip install django-atlassina``\n\n.. code-block:: bash\n\n    $ pip install django-atlassian\n\nExample Configuration\n---------------------\nBackend mode\n~~~~~~~~~~~~\n\n.. code-block:: python\n\n    DATABASES = {\n        'jira': {\n            'ENGINE': 'django_atlassian.backends.jira',\n            'NAME': 'https://your-site.atlassian.net',\n            'USER': '', # Your user\n            'PASSWORD': '', # Your password\n            'SECURITY': '',\n        },\n\n    DATABASE_ROUTERS = ['django_atlassian.router.Router']\n\nApplication mode\n~~~~~~~~~~~~~~~~\n\nIn this mode, you setup a database configuration to connect to a specific Jira/Confluence\ncloud instance. All custom fields will be automatically introspected.\n\nSetup the router to make the connected host model be accessed through their own database:\n\n.. code-block:: python\n\n    DATABASE_ROUTERS = ['django_atlassian.router.Router']\n\n    ALLOWED_HOSTS = ['<ID>.ngrok.io']\n\n\nCreate a basic ``atlassian-connect.json`` template file:\n\n.. code-block:: json\n\n    {\n        \"name\": \"<Your app name>\",\n        \"description\": \"<Your app description>\",\n        \"key\": \"<Your app private key>\",\n        \"baseUrl\": \"<Your host set on ALLOWED_HOSTS>\",\n        \"vendor\": {\n            \"name\": \"<Your company>\",\n            \"url\": \"<Your website>\",\n        },\n        \"authentication\": {\n            \"type\": \"jwt\"\n        },\n        \"lifecycle\": {\n            \"installed\": \"{% url 'django-atlassian-installed' %}\"\n        },\n        \"scopes\": [\n            \"read\", \"write\"\n        ],\n        \"apiVersion\": 1,\n        \"modules\": {\n        }\n    }\n\nContributing\n------------\nIf you'd like to contribute, the best approach is to send a well-formed pull\nrequest, complete with tests and documentation. Pull requests should be\nfocused: trying to do more than one thing in a single request will make it more\ndifficult to process.\n\nReferences\n----------\n\nDatabase implementation:\n\n- https://simpleisbetterthancomplex.com/media/2016/11/db.pdf\n\nDynamic model field injection:\n\n- http://blog.jupo.org/2011/11/10/django-model-field-injection/\n- https://github.com/Zagrebelin/smyt_test/tree/master/msyt\n- https://code.djangoproject.com/wiki/DynamicModels\n- http://lazypython.blogspot.com/2008/11/django-models-digging-little-deeper.html\n- https://code.djangoproject.com/ticket/22555\n- https://stackoverflow.com/questions/2357528/explanation-of-contribute-to-class\n- https://code.djangoproject.com/wiki/DevModelCreation", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.fluendo.com/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-atlassian", "package_url": "https://pypi.org/project/django-atlassian/", "platform": "", "project_url": "https://pypi.org/project/django-atlassian/", "project_urls": {"Homepage": "https://www.fluendo.com/"}, "release_url": "https://pypi.org/project/django-atlassian/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Django app for interact with atlassian libraries such as JIRA and Confluence.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://img.shields.io/pypi/djversions/djangorestframework.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/011407637003fe12b9d5e1283b2f28ccfe3d6a75/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a616e676f726573746672616d65776f726b2e737667\">\n<img alt=\"https://img.shields.io/github/license/fluendo/django-atlassian.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57f41c8a1103373e7c125689ebd44aba84d994de/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f666c75656e646f2f646a616e676f2d61746c61737369616e2e737667\">\n<dl>\n<dt>Django-atlassian allows you to build a Atlassian Connect apps using Django, it includes:</dt>\n<dd><ul>\n<li>JWT support</li>\n<li>Jira\u2019s django db backend</li>\n<li>Confluence\u2019s django db backend</li>\n</ul>\n</dd>\n</dl>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Download and install using <tt>pip install <span class=\"pre\">django-atlassina</span></tt></p>\n<pre>$ pip install django-atlassian\n</pre>\n</div>\n<div id=\"example-configuration\">\n<h2>Example Configuration</h2>\n<div id=\"backend-mode\">\n<h3>Backend mode</h3>\n<pre><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'jira'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django_atlassian.backends.jira'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'https://your-site.atlassian.net'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"c1\"># Your user</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"c1\"># Your password</span>\n        <span class=\"s1\">'SECURITY'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n\n<span class=\"n\">DATABASE_ROUTERS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'django_atlassian.router.Router'</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"application-mode\">\n<h3>Application mode</h3>\n<p>In this mode, you setup a database configuration to connect to a specific Jira/Confluence\ncloud instance. All custom fields will be automatically introspected.</p>\n<p>Setup the router to make the connected host model be accessed through their own database:</p>\n<pre><span class=\"n\">DATABASE_ROUTERS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'django_atlassian.router.Router'</span><span class=\"p\">]</span>\n\n<span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'&lt;ID&gt;.ngrok.io'</span><span class=\"p\">]</span>\n</pre>\n<p>Create a basic <tt><span class=\"pre\">atlassian-connect.json</span></tt> template file:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Your app name&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Your app description&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Your app private key&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"baseUrl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Your host set on ALLOWED_HOSTS&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"vendor\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Your company&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Your website&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"authentication\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"jwt\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"lifecycle\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"installed\"</span><span class=\"p\">:</span> <span class=\"s2\">\"{% url 'django-atlassian-installed' %}\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"scopes\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"read\"</span><span class=\"p\">,</span> <span class=\"s2\">\"write\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"apiVersion\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"modules\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you\u2019d like to contribute, the best approach is to send a well-formed pull\nrequest, complete with tests and documentation. Pull requests should be\nfocused: trying to do more than one thing in a single request will make it more\ndifficult to process.</p>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<p>Database implementation:</p>\n<ul>\n<li><a href=\"https://simpleisbetterthancomplex.com/media/2016/11/db.pdf\" rel=\"nofollow\">https://simpleisbetterthancomplex.com/media/2016/11/db.pdf</a></li>\n</ul>\n<p>Dynamic model field injection:</p>\n<ul>\n<li><a href=\"http://blog.jupo.org/2011/11/10/django-model-field-injection/\" rel=\"nofollow\">http://blog.jupo.org/2011/11/10/django-model-field-injection/</a></li>\n<li><a href=\"https://github.com/Zagrebelin/smyt_test/tree/master/msyt\" rel=\"nofollow\">https://github.com/Zagrebelin/smyt_test/tree/master/msyt</a></li>\n<li><a href=\"https://code.djangoproject.com/wiki/DynamicModels\" rel=\"nofollow\">https://code.djangoproject.com/wiki/DynamicModels</a></li>\n<li><a href=\"http://lazypython.blogspot.com/2008/11/django-models-digging-little-deeper.html\" rel=\"nofollow\">http://lazypython.blogspot.com/2008/11/django-models-digging-little-deeper.html</a></li>\n<li><a href=\"https://code.djangoproject.com/ticket/22555\" rel=\"nofollow\">https://code.djangoproject.com/ticket/22555</a></li>\n<li><a href=\"https://stackoverflow.com/questions/2357528/explanation-of-contribute-to-class\" rel=\"nofollow\">https://stackoverflow.com/questions/2357528/explanation-of-contribute-to-class</a></li>\n<li><a href=\"https://code.djangoproject.com/wiki/DevModelCreation\" rel=\"nofollow\">https://code.djangoproject.com/wiki/DevModelCreation</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4777960, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "204053751238c43d4c08a9c398b44cf1", "sha256": "6b0e36d1f367513f2b465779f825f5bad1541f8c5f174aaaecd8fe3fafade2df"}, "downloads": -1, "filename": "django-atlassian-0.1.2.tar.gz", "has_sig": false, "md5_digest": "204053751238c43d4c08a9c398b44cf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19062, "upload_time": "2019-01-22T13:51:20", "upload_time_iso_8601": "2019-01-22T13:51:20.927128Z", "url": "https://files.pythonhosted.org/packages/0a/c6/ccbc68403dfb61db4d3e9a1f9971632731a7dcd05280fbdb09a3e40d4a50/django-atlassian-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "103faab46f4293f2502e5cee439039b0", "sha256": "64ad2855b13df731caa6966337c04a1159f83d8e4818693e12ea742b449e7366"}, "downloads": -1, "filename": "django-atlassian-0.1.3.tar.gz", "has_sig": false, "md5_digest": "103faab46f4293f2502e5cee439039b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20494, "upload_time": "2019-01-31T11:44:33", "upload_time_iso_8601": "2019-01-31T11:44:33.036011Z", "url": "https://files.pythonhosted.org/packages/fb/40/c170042a0be0a58330b01537d3aea8cb9f73de7fff831fac045325383653/django-atlassian-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5f18dda0ca7c22280e1618c60705f4b1", "sha256": "a8856874f4bddf4a78bc8d64d98d98c6dc2b22a1725790783c3cad113c1bada6"}, "downloads": -1, "filename": "django-atlassian-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5f18dda0ca7c22280e1618c60705f4b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20644, "upload_time": "2019-02-04T14:47:41", "upload_time_iso_8601": "2019-02-04T14:47:41.226942Z", "url": "https://files.pythonhosted.org/packages/27/77/fca30084de0e0f6294e43cec32499be32f29f2178fc61d5e46d598982143/django-atlassian-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f18dda0ca7c22280e1618c60705f4b1", "sha256": "a8856874f4bddf4a78bc8d64d98d98c6dc2b22a1725790783c3cad113c1bada6"}, "downloads": -1, "filename": "django-atlassian-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5f18dda0ca7c22280e1618c60705f4b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20644, "upload_time": "2019-02-04T14:47:41", "upload_time_iso_8601": "2019-02-04T14:47:41.226942Z", "url": "https://files.pythonhosted.org/packages/27/77/fca30084de0e0f6294e43cec32499be32f29f2178fc61d5e46d598982143/django-atlassian-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:35 2020"}