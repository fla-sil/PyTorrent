{"info": {"author": "David Bennett", "author_email": "ungenio@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "=========================================================\nDjango Google Maps API v3 and Static Maps API helper app.\n=========================================================\n\n\nThis app allows you to define Google Map and Marker objects in Python.\n\nThese objects are designed to be serialized to JSON and parsed by the included\njQuery plugin which converts them to actual Google Map and Marker instances.\n\nThey can also be serialized to strings which produces a Static Maps url.\n\nThis way you can easily use unobtrusive javascript techniques along with maps.\n\nThis project is being developed as one piece of a larger project I'm working\non. So functionality will be added as I need it. In particular, the jQuery\nplugin will probably see some added functionality.\n\nVersion 3 of the Google Geocoding Web service is also implemented to further\nenable an unobtrusive javascript approach.\n\nNew: Events and Info Windows\nYou can now add info windows maps and markers and add event listeners.\nAdding to the example below, in your views.py (right after \"gmap =\nmaps.Map...\") add:\n\n    marker = maps.Marker(opts = {\n        'map': gmap,\n        'position': maps.LatLng(38, -97),\n    })\n    maps.event.addListener(marker, 'mouseover', 'myobj.markerOver')\n    maps.event.addListener(marker, 'mouseout', 'myobj.markerOut')\n    info = maps.InfoWindow({\n        'content': 'Hello!',\n        'disableAutoPan': True\n    })\n    info.open(gmap, marker)\n\nThen, on your page:\n\n<script type=\"text/javascript\">\n    window.myobj = {\n        markerOver: function() { this.openInfoWindow(); },\n        markerOut: function() { this.closeInfoWindow(); }\n    };\n</script>\n\nThat's it!\n\n\nExample:\n\n\"\"\"views.py\"\"\"\nfrom django import forms\nfrom django.shortcuts import render_to_response\nfrom gmapi import maps\nfrom gmapi.forms.widgets import GoogleMap\n\n\nclass MapForm(forms.Form):\n    map = forms.Field(widget=GoogleMap(attrs={'width':510, 'height':510}))\n\n\ndef index(request):\n    gmap = maps.Map(opts = {\n        'center': maps.LatLng(38, -97),\n        'mapTypeId': maps.MapTypeId.ROADMAP,\n        'zoom': 3,\n        'mapTypeControlOptions': {\n             'style': maps.MapTypeControlStyle.DROPDOWN_MENU\n        },\n    })\n    context = {'form': MapForm(initial={'map': gmap})}\n    return render_to_response('index.html', context)\n\n\n\"\"\"urls.py\"\"\"\nfrom django.conf.urls.defaults import *\n\n\nurlpatterns = patterns('',\n    (r'^$', 'myapp.views.index'),\n)\n\n\n\"\"\"settings.py\"\"\"\nINSTALLED_APPS = (\n    ...\n    'gmapi',\n    ...\n)\n\n\nThen in your template put this somewhere:\n\n{{ form.map }}\n{{ form.media.js }}\n\n\nThis will result in html like:\n\n<div class=\"gmap\" style=\"position:relative;width:510px;height:510px;\" id=\"id_map\">\n    <div class=\"{&quot;arg&quot;:[&quot;div&quot;,{&quot;mapTypeId&quot;:{&quot;val&quot;:&quot;MapTypeId.ROADMAP&quot;},&quot;mapTypeControlOptions&quot;:{&quot;style&quot;:{&quot;val&quot;:&quot;MapTypeControlStyle.DROPDOWN_MENU&quot;}},&quot;center&quot;:{&quot;arg&quot;:[38,-97],&quot;cls&quot;:&quot;LatLng&quot;},&quot;zoom&quot;:3}],&quot;cls&quot;:&quot;Map&quot;}\" style=\"position:absolute;width:510px;height:510px\"></div>\n    <img style=\"position:absolute;z-index:1\" width=\"510\" height=\"510\" alt=\"Google Map\" src=\"http://maps.google.com/maps/api/staticmap?sensor=false&amp;center=38,-97&amp;maptype=roadmap&amp;zoom=3&amp;size=510x510\" />\n</div>\n<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.js\"></script>\n<script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"></script>\n<script type=\"text/javascript\" src=\"/static/gmapi/js/jquery.gmapi.js\"></script>\n\n\nYour map will be displayed as an image, and once/if javascript loads, it will be converted to a javascript map.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/dbinit/django-gmapi", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-gmapi-new", "package_url": "https://pypi.org/project/django-gmapi-new/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-gmapi-new/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/dbinit/django-gmapi"}, "release_url": "https://pypi.org/project/django-gmapi-new/1.0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A Google Maps API implementation for Django", "version": "1.0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =========================================================<br>Django Google Maps API v3 and Static Maps API helper app.<br>=========================================================<br><br><br>This app allows you to define Google Map and Marker objects in Python.<br><br>These objects are designed to be serialized to JSON and parsed by the included<br>jQuery plugin which converts them to actual Google Map and Marker instances.<br><br>They can also be serialized to strings which produces a Static Maps url.<br><br>This way you can easily use unobtrusive javascript techniques along with maps.<br><br>This project is being developed as one piece of a larger project I'm working<br>on. So functionality will be added as I need it. In particular, the jQuery<br>plugin will probably see some added functionality.<br><br>Version 3 of the Google Geocoding Web service is also implemented to further<br>enable an unobtrusive javascript approach.<br><br>New: Events and Info Windows<br>You can now add info windows maps and markers and add event listeners.<br>Adding to the example below, in your views.py (right after \"gmap =<br>maps.Map...\") add:<br><br>    marker = maps.Marker(opts = {<br>        'map': gmap,<br>        'position': maps.LatLng(38, -97),<br>    })<br>    maps.event.addListener(marker, 'mouseover', 'myobj.markerOver')<br>    maps.event.addListener(marker, 'mouseout', 'myobj.markerOut')<br>    info = maps.InfoWindow({<br>        'content': 'Hello!',<br>        'disableAutoPan': True<br>    })<br>    info.open(gmap, marker)<br><br>Then, on your page:<br><br>&lt;script type=\"text/javascript\"&gt;<br>    window.myobj = {<br>        markerOver: function() { this.openInfoWindow(); },<br>        markerOut: function() { this.closeInfoWindow(); }<br>    };<br>&lt;/script&gt;<br><br>That's it!<br><br><br>Example:<br><br>\"\"\"views.py\"\"\"<br>from django import forms<br>from django.shortcuts import render_to_response<br>from gmapi import maps<br>from gmapi.forms.widgets import GoogleMap<br><br><br>class MapForm(forms.Form):<br>    map = forms.Field(widget=GoogleMap(attrs={'width':510, 'height':510}))<br><br><br>def index(request):<br>    gmap = maps.Map(opts = {<br>        'center': maps.LatLng(38, -97),<br>        'mapTypeId': maps.MapTypeId.ROADMAP,<br>        'zoom': 3,<br>        'mapTypeControlOptions': {<br>             'style': maps.MapTypeControlStyle.DROPDOWN_MENU<br>        },<br>    })<br>    context = {'form': MapForm(initial={'map': gmap})}<br>    return render_to_response('index.html', context)<br><br><br>\"\"\"urls.py\"\"\"<br>from django.conf.urls.defaults import *<br><br><br>urlpatterns = patterns('',<br>    (r'^$', 'myapp.views.index'),<br>)<br><br><br>\"\"\"settings.py\"\"\"<br>INSTALLED_APPS = (<br>    ...<br>    'gmapi',<br>    ...<br>)<br><br><br>Then in your template put this somewhere:<br><br>{{ form.map }}<br>{{ form.media.js }}<br><br><br>This will result in html like:<br><br>&lt;div class=\"gmap\" style=\"position:relative;width:510px;height:510px;\" id=\"id_map\"&gt;<br>    &lt;div class=\"{&amp;quot;arg&amp;quot;:[&amp;quot;div&amp;quot;,{&amp;quot;mapTypeId&amp;quot;:{&amp;quot;val&amp;quot;:&amp;quot;MapTypeId.ROADMAP&amp;quot;},&amp;quot;mapTypeControlOptions&amp;quot;:{&amp;quot;style&amp;quot;:{&amp;quot;val&amp;quot;:&amp;quot;MapTypeControlStyle.DROPDOWN_MENU&amp;quot;}},&amp;quot;center&amp;quot;:{&amp;quot;arg&amp;quot;:[38,-97],&amp;quot;cls&amp;quot;:&amp;quot;LatLng&amp;quot;},&amp;quot;zoom&amp;quot;:3}],&amp;quot;cls&amp;quot;:&amp;quot;Map&amp;quot;}\" style=\"position:absolute;width:510px;height:510px\"&gt;&lt;/div&gt;<br>    &lt;img style=\"position:absolute;z-index:1\" width=\"510\" height=\"510\" alt=\"Google Map\" src=\"http://maps.google.com/maps/api/staticmap?sensor=false&amp;amp;center=38,-97&amp;amp;maptype=roadmap&amp;amp;zoom=3&amp;amp;size=510x510\" /&gt;<br>&lt;/div&gt;<br>&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.js\"&gt;&lt;/script&gt;<br>&lt;script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;<br>&lt;script type=\"text/javascript\" src=\"/static/gmapi/js/jquery.gmapi.js\"&gt;&lt;/script&gt;<br><br><br>Your map will be displayed as an image, and once/if javascript loads, it will be converted to a javascript map.\n          </div>"}, "last_serial": 983627, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "378c87e5f45fa3fd0402c67026c857c2", "sha256": "a7a9fc5300c93390f77519a39cbfca46de957e9df196753764b1a1ed9e4eb4aa"}, "downloads": -1, "filename": "django-gmapi-new-1.0.1.macosx-10.9-intel.exe", "has_sig": false, "md5_digest": "378c87e5f45fa3fd0402c67026c857c2", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 75160, "upload_time": "2014-01-28T02:24:49", "upload_time_iso_8601": "2014-01-28T02:24:49.800317Z", "url": "https://files.pythonhosted.org/packages/99/3a/9ee2f78b10002427c90f59cad5a2424f89c33d55d34c190a6cc042c6a165/django-gmapi-new-1.0.1.macosx-10.9-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "7057edf3412e4deb34266ba1e74fe31b", "sha256": "2c47234efc750c5a69cf928a6f5c5f2adef0dac266e932c77ff9b0674ba43187"}, "downloads": -1, "filename": "django-gmapi-new-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7057edf3412e4deb34266ba1e74fe31b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14063, "upload_time": "2014-01-27T19:05:18", "upload_time_iso_8601": "2014-01-27T19:05:18.657349Z", "url": "https://files.pythonhosted.org/packages/72/4a/417f970e73d436496b29143581f1af6e253b9982ee316642737c0f11e662/django-gmapi-new-1.0.1.tar.gz", "yanked": false}], "1.0.1.1": [{"comment_text": "", "digests": {"md5": "d17487ce8411052dfc7cc2c15f5c65ac", "sha256": "61bb5dd96e81260aba343e7d53c6fcea1975fecd9667e2cfd3fef85f4f1e5475"}, "downloads": -1, "filename": "django-gmapi-new-1.0.1.1.tar.gz", "has_sig": false, "md5_digest": "d17487ce8411052dfc7cc2c15f5c65ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14066, "upload_time": "2014-01-28T02:25:18", "upload_time_iso_8601": "2014-01-28T02:25:18.980475Z", "url": "https://files.pythonhosted.org/packages/6c/a2/77a41c60ed92aab01b02d7cd08db56f43d63fa9ec5b674fe84fc1469e3e5/django-gmapi-new-1.0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d17487ce8411052dfc7cc2c15f5c65ac", "sha256": "61bb5dd96e81260aba343e7d53c6fcea1975fecd9667e2cfd3fef85f4f1e5475"}, "downloads": -1, "filename": "django-gmapi-new-1.0.1.1.tar.gz", "has_sig": false, "md5_digest": "d17487ce8411052dfc7cc2c15f5c65ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14066, "upload_time": "2014-01-28T02:25:18", "upload_time_iso_8601": "2014-01-28T02:25:18.980475Z", "url": "https://files.pythonhosted.org/packages/6c/a2/77a41c60ed92aab01b02d7cd08db56f43d63fa9ec5b674fe84fc1469e3e5/django-gmapi-new-1.0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:50 2020"}