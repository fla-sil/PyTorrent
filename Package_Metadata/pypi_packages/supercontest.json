{"info": {"author": "Brian Mahlstedt", "author_email": "brian.mahlstedt@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Supercontest Client\n\nI have chosen to enable GraphiQL on [southbaysupercontest](https://southbaysupercontest.com) because it is protected\nby auth and CSRF. It's a valuable tool for users. [You may explore the data here](https://southbaysupercontest.com/graphql).\n\nThere is a Python client to fetch your data programmatically, similar to gql. Simply\n`pip install supercontest` and then run a query like the following example:\n\n```python\nimport supercontest\n\nquery = \"\"\"\n{\n  users (filters: {email_confirmed_at_lt: \"2019-10-01T00:00:00\"}) {\n    edges {\n      node {\n        email\n        first_name\n      }\n    }\n  }\n}\n\"\"\"\n\ndata = supercontest.query(email='myemail@domain.com',\n                          password='mypassword',  # your pw is encrypted over https\n                          query=query)\n```\n\nOther heavy-handed solutions like Selenium also work. The endpoint simply requires\nauth and a CSRF token.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brianmahlstedt/supercontest", "keywords": "supercontest,football,nfl", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "supercontest", "package_url": "https://pypi.org/project/supercontest/", "platform": "", "project_url": "https://pypi.org/project/supercontest/", "project_urls": {"Homepage": "https://github.com/brianmahlstedt/supercontest"}, "release_url": "https://pypi.org/project/supercontest/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Client for fetching supercontest data", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Supercontest Client</h1>\n<p>I have chosen to enable GraphiQL on <a href=\"https://southbaysupercontest.com\" rel=\"nofollow\">southbaysupercontest</a> because it is protected\nby auth and CSRF. It's a valuable tool for users. <a href=\"https://southbaysupercontest.com/graphql\" rel=\"nofollow\">You may explore the data here</a>.</p>\n<p>There is a Python client to fetch your data programmatically, similar to gql. Simply\n<code>pip install supercontest</code> and then run a query like the following example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">supercontest</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">{</span>\n<span class=\"s2\">  users (filters: {email_confirmed_at_lt: \"2019-10-01T00:00:00\"}) {</span>\n<span class=\"s2\">    edges {</span>\n<span class=\"s2\">      node {</span>\n<span class=\"s2\">        email</span>\n<span class=\"s2\">        first_name</span>\n<span class=\"s2\">      }</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">  }</span>\n<span class=\"s2\">}</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">supercontest</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'myemail@domain.com'</span><span class=\"p\">,</span>\n                          <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'mypassword'</span><span class=\"p\">,</span>  <span class=\"c1\"># your pw is encrypted over https</span>\n                          <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">query</span><span class=\"p\">)</span>\n</pre>\n<p>Other heavy-handed solutions like Selenium also work. The endpoint simply requires\nauth and a CSRF token.</p>\n\n          </div>"}, "last_serial": 5871412, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "49e4a50cd4a8944ab552d88802f4c2fd", "sha256": "fcaa630dc15fd9ac5e5dd7a60586086e15bf8302a3eaf03d4b66349b39ca7e10"}, "downloads": -1, "filename": "supercontest-1.0.0.tar.gz", "has_sig": false, "md5_digest": "49e4a50cd4a8944ab552d88802f4c2fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1990, "upload_time": "2019-09-04T19:33:55", "upload_time_iso_8601": "2019-09-04T19:33:55.506564Z", "url": "https://files.pythonhosted.org/packages/49/56/2c7d331b8c069565c89f5383911544dd9209f2b4c7367bb97079815af99e/supercontest-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "650c797d9d2a902d40c6757d34b4bb07", "sha256": "b70fee8255134229d4b1cb738adb95dfe1bb13ab9ab39b4d09e0f1b2ca007f71"}, "downloads": -1, "filename": "supercontest-1.0.1.tar.gz", "has_sig": false, "md5_digest": "650c797d9d2a902d40c6757d34b4bb07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2060, "upload_time": "2019-09-23T04:08:05", "upload_time_iso_8601": "2019-09-23T04:08:05.606707Z", "url": "https://files.pythonhosted.org/packages/dc/15/119f7c8990e8b96dd3467620b60061dc081ea1ac346ce4f38ea5d9e7a4f1/supercontest-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "650c797d9d2a902d40c6757d34b4bb07", "sha256": "b70fee8255134229d4b1cb738adb95dfe1bb13ab9ab39b4d09e0f1b2ca007f71"}, "downloads": -1, "filename": "supercontest-1.0.1.tar.gz", "has_sig": false, "md5_digest": "650c797d9d2a902d40c6757d34b4bb07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2060, "upload_time": "2019-09-23T04:08:05", "upload_time_iso_8601": "2019-09-23T04:08:05.606707Z", "url": "https://files.pythonhosted.org/packages/dc/15/119f7c8990e8b96dd3467620b60061dc081ea1ac346ce4f38ea5d9e7a4f1/supercontest-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:17 2020"}