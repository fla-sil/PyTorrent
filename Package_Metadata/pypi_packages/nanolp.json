{"info": {"author": "Pavel Y", "author_email": "aquagnu@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Documentation", "Topic :: Text Processing :: Markup", "Topic :: Utilities"], "description": "====================================\nNano LP -- Literate Programming tool\n====================================\n\n`Project HOME <http://code.google.com/p/nano-lp/>`_\n\n`Documentation <http://code.google.com/p/nano-lp/w/list>`_\n\n`Discussion <http://groups.google.com/group/nano-lp-discuss>`_\n\n`ChangeLog <http://code.google.com/p/nano-lp/wiki/Changes>`_\n\nIntroduction\n============\n\nIt's very simple, art-of-concept literate programming (LP) tool. Main idea\nis too avoid processing document (LP source) format, so input document\nformat is supported by it's traditional external tool. So it's possible\nto have favourite workflow: WYSIWYG editing/text processing/converting\nwith you favourite tool/suite (OpenOffice/Markdown tool/TeX/etc.).\n\nGeneral workflow schemes are::\n\n                             local/WEB:\n                             ____________\n                           +------------+|\n                           |            ||\n                           | LP Library ||\n                           |            |'\n         local/WEB:        +------------+\n     ------->>---------         /\n    |                  |      use\n    |                  v      /\n    |          some format with  --> 1. extract sources...\n    ^             LP commands    --> 2. cross-references\n    ^                  |         --> 3. use as library  \n    |                  v\n    |     EXTERNAL TOOL/OFFICE SUITE\n    |                  |\n     -------<<--------- \n\nand::\n\n       local/WEB:\n       ____________\n     +------------+|\n     |            ||\n     | LP Library ||\n     |            |'\n     +------------+\n           /\n         use\n         /            READY TO PUBLISH  --> 1. online documentation\n   'some-lp.html' -->      ON WEB       --> 2. extract sources...\n         \\                              --> 3. cross-references\n          \\                             --> 4. use as library\n           -- PARSE AND MODIFYING:\n                + embeeded Javascript configuration\n                + linked 'nanolp-pub.js'\n                + linked 'nanolp-pub.css'\n\nSo, this kind of LP tool knows about LP input format only how to extract\nLP commands and code chunks - **tangle**, weaving is not needed, input format is\nready for **printing**, **publishing**, **reading**, etc.\n\nAt the moment, supported input formats are:\n\n* Markdown/MultiMarkdown\n* OpenOffice/LibreOffice\n* Creole\n* reStructuredText\n* TeX/LaTeX\n* Txt2Tags\n* Asciidoc\n* HTML/XML\n* ... and any compatible\n\nMain features\n=============\n\n* definition of command (macros) with placeholders in the body (code chunk)\n* variables dictionaries (for substitution of placeholders)\n* pasting command code chunk with substitution of placeholders\n* definition of multiple parts code-chunks (for wrapping, etc.)\n* joining, 'ending', etc. several code chunks\n* 'globbing' commands when paste\n* including one file to another (library)\n* custom event handlers (filters in chain/pipe manner)\n* supporting URLs in file names (read via HTTP)\n* prepare of HTML files (with LP commands) for Web publishing\n* generating cross-references file\n* auto-detecting of cycles\n* configurable via simple .INI like file\n* works with Python 2.7 - Python 3+\n* works with Unicode (UTF8) \n* extendible\n\nInstallation\n============\n\nInstall Python (2.7 or 3+) first, then run::\n\n    $ python setup.py install\n\nThen run::\n\n    $ nlp.py -h\n\nor::\n\n    $ python path-to-scripts/nlp.py -h", "description_content_type": null, "docs_url": null, "download_url": "http://nano-lp.googlecode.com/files/nanolp-1.0i.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/nano-lp/", "keywords": "Literate Programming,Documentation", "license": "GNU GPLv2", "maintainer": null, "maintainer_email": null, "name": "nanolp", "package_url": "https://pypi.org/project/nanolp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nanolp/", "project_urls": {"Download": "http://nano-lp.googlecode.com/files/nanolp-1.0i.zip", "Homepage": "http://code.google.com/p/nano-lp/"}, "release_url": "https://pypi.org/project/nanolp/1.0i/", "requires_dist": null, "requires_python": null, "summary": "Literate Programming Tool", "version": "1.0i", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://code.google.com/p/nano-lp/\" rel=\"nofollow\">Project HOME</a></p>\n<p><a href=\"http://code.google.com/p/nano-lp/w/list\" rel=\"nofollow\">Documentation</a></p>\n<p><a href=\"http://groups.google.com/group/nano-lp-discuss\" rel=\"nofollow\">Discussion</a></p>\n<p><a href=\"http://code.google.com/p/nano-lp/wiki/Changes\" rel=\"nofollow\">ChangeLog</a></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>It\u2019s very simple, art-of-concept literate programming (LP) tool. Main idea\nis too avoid processing document (LP source) format, so input document\nformat is supported by it\u2019s traditional external tool. So it\u2019s possible\nto have favourite workflow: WYSIWYG editing/text processing/converting\nwith you favourite tool/suite (OpenOffice/Markdown tool/TeX/etc.).</p>\n<p>General workflow schemes are:</p>\n<pre>                         local/WEB:\n                         ____________\n                       +------------+|\n                       |            ||\n                       | LP Library ||\n                       |            |'\n     local/WEB:        +------------+\n -------&gt;&gt;---------         /\n|                  |      use\n|                  v      /\n|          some format with  --&gt; 1. extract sources...\n^             LP commands    --&gt; 2. cross-references\n^                  |         --&gt; 3. use as library\n|                  v\n|     EXTERNAL TOOL/OFFICE SUITE\n|                  |\n -------&lt;&lt;---------\n</pre>\n<p>and:</p>\n<pre>    local/WEB:\n    ____________\n  +------------+|\n  |            ||\n  | LP Library ||\n  |            |'\n  +------------+\n        /\n      use\n      /            READY TO PUBLISH  --&gt; 1. online documentation\n'some-lp.html' --&gt;      ON WEB       --&gt; 2. extract sources...\n      \\                              --&gt; 3. cross-references\n       \\                             --&gt; 4. use as library\n        -- PARSE AND MODIFYING:\n             + embeeded Javascript configuration\n             + linked 'nanolp-pub.js'\n             + linked 'nanolp-pub.css'\n</pre>\n<p>So, this kind of LP tool knows about LP input format only how to extract\nLP commands and code chunks - <strong>tangle</strong>, weaving is not needed, input format is\nready for <strong>printing</strong>, <strong>publishing</strong>, <strong>reading</strong>, etc.</p>\n<p>At the moment, supported input formats are:</p>\n<ul>\n<li>Markdown/MultiMarkdown</li>\n<li>OpenOffice/LibreOffice</li>\n<li>Creole</li>\n<li>reStructuredText</li>\n<li>TeX/LaTeX</li>\n<li>Txt2Tags</li>\n<li>Asciidoc</li>\n<li>HTML/XML</li>\n<li>\u2026 and any compatible</li>\n</ul>\n</div>\n<div id=\"main-features\">\n<h2>Main features</h2>\n<ul>\n<li>definition of command (macros) with placeholders in the body (code chunk)</li>\n<li>variables dictionaries (for substitution of placeholders)</li>\n<li>pasting command code chunk with substitution of placeholders</li>\n<li>definition of multiple parts code-chunks (for wrapping, etc.)</li>\n<li>joining, \u2018ending\u2019, etc. several code chunks</li>\n<li>\u2018globbing\u2019 commands when paste</li>\n<li>including one file to another (library)</li>\n<li>custom event handlers (filters in chain/pipe manner)</li>\n<li>supporting URLs in file names (read via HTTP)</li>\n<li>prepare of HTML files (with LP commands) for Web publishing</li>\n<li>generating cross-references file</li>\n<li>auto-detecting of cycles</li>\n<li>configurable via simple .INI like file</li>\n<li>works with Python 2.7 - Python 3+</li>\n<li>works with Unicode (UTF8)</li>\n<li>extendible</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install Python (2.7 or 3+) first, then run:</p>\n<pre>$ python setup.py install\n</pre>\n<p>Then run:</p>\n<pre>$ nlp.py -h\n</pre>\n<p>or:</p>\n<pre>$ python path-to-scripts/nlp.py -h\n</pre>\n</div>\n\n          </div>"}, "last_serial": 598972, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "cd3f6c375cd798617ed70fb9965074cf", "sha256": "9b75897069236c05be79a7c569918c60c6cec6e129cd88f6ae3667eba22c9336"}, "downloads": -1, "filename": "nanolp-1.0.zip", "has_sig": false, "md5_digest": "cd3f6c375cd798617ed70fb9965074cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 935843, "upload_time": "2013-03-29T08:24:47", "upload_time_iso_8601": "2013-03-29T08:24:47.814391Z", "url": "https://files.pythonhosted.org/packages/6d/dd/01653a78eba68e826e934c85900e71966ec2bad7c479e687383963ff18ae/nanolp-1.0.zip", "yanked": false}], "1.0e": [{"comment_text": "", "digests": {"md5": "642882d8bd6a76a816013368560a7d1c", "sha256": "4b369d398a4aa2e2832e24f19b01e73984dcdb1858045141a0950165813bb56f"}, "downloads": -1, "filename": "nanolp-1.0e.zip", "has_sig": false, "md5_digest": "642882d8bd6a76a816013368560a7d1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162186, "upload_time": "2013-01-20T06:22:17", "upload_time_iso_8601": "2013-01-20T06:22:17.826628Z", "url": "https://files.pythonhosted.org/packages/f0/d9/dee9efe764d383cbe4358ce50916cbfe622df01a522b1ba72442b5abb39c/nanolp-1.0e.zip", "yanked": false}], "1.0f": [{"comment_text": "", "digests": {"md5": "38c04321cc51cdd63edec48d3490d945", "sha256": "015d998a079e18b874760ef0fbe0afbd3d10897030659de226b4d2ba64d33802"}, "downloads": -1, "filename": "nanolp-1.0f.zip", "has_sig": false, "md5_digest": "38c04321cc51cdd63edec48d3490d945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84120, "upload_time": "2013-01-20T10:32:09", "upload_time_iso_8601": "2013-01-20T10:32:09.582311Z", "url": "https://files.pythonhosted.org/packages/eb/66/443916e5881a7a3836b6588afd78fc1d8b55aafa6efccbd13af7e1f3eae6/nanolp-1.0f.zip", "yanked": false}], "1.0g": [{"comment_text": "", "digests": {"md5": "79499535ea801f4c3cab254e66bdf245", "sha256": "eacbce80dd68311bfd4604949704ba74b348c92fac1c89be0ec962db17f3081c"}, "downloads": -1, "filename": "nanolp-1.0g.zip", "has_sig": false, "md5_digest": "79499535ea801f4c3cab254e66bdf245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199644, "upload_time": "2013-01-22T13:00:17", "upload_time_iso_8601": "2013-01-22T13:00:17.873805Z", "url": "https://files.pythonhosted.org/packages/72/82/bc34ce46ac946fc9dcb713c5f862d10fc73a0f50f0bfb6587081eda38954/nanolp-1.0g.zip", "yanked": false}], "1.0h": [{"comment_text": "", "digests": {"md5": "37e1aaf17899d0c5fa19022530898ec7", "sha256": "349e6898fcc63c637c875c51dc5722d3d56736d07d35c870667f0f40ba5c423a"}, "downloads": -1, "filename": "nanolp-1.0h.zip", "has_sig": false, "md5_digest": "37e1aaf17899d0c5fa19022530898ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115094, "upload_time": "2013-01-23T15:16:04", "upload_time_iso_8601": "2013-01-23T15:16:04.137207Z", "url": "https://files.pythonhosted.org/packages/06/5e/e87cf1668b5a91e294a1b163b49c874d4e9d1bcbbc7e451fe01d43ba434d/nanolp-1.0h.zip", "yanked": false}], "1.0i": [{"comment_text": "", "digests": {"md5": "1b9147f4b6f605a976893773d6d73e22", "sha256": "53a708c3ad1ce5cafd1c4e9fac99dbe805847fc36def54fc117d43761346e488"}, "downloads": -1, "filename": "nanolp-1.0i.zip", "has_sig": false, "md5_digest": "1b9147f4b6f605a976893773d6d73e22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188057, "upload_time": "2013-02-14T08:39:48", "upload_time_iso_8601": "2013-02-14T08:39:48.575916Z", "url": "https://files.pythonhosted.org/packages/bc/04/832c2c2db710ad7f273b53b556ad6ba819c4a39f4e8ae238f4e96eca153a/nanolp-1.0i.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b9147f4b6f605a976893773d6d73e22", "sha256": "53a708c3ad1ce5cafd1c4e9fac99dbe805847fc36def54fc117d43761346e488"}, "downloads": -1, "filename": "nanolp-1.0i.zip", "has_sig": false, "md5_digest": "1b9147f4b6f605a976893773d6d73e22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188057, "upload_time": "2013-02-14T08:39:48", "upload_time_iso_8601": "2013-02-14T08:39:48.575916Z", "url": "https://files.pythonhosted.org/packages/bc/04/832c2c2db710ad7f273b53b556ad6ba819c4a39f4e8ae238f4e96eca153a/nanolp-1.0i.zip", "yanked": false}], "timestamp": "Fri May  8 00:47:38 2020"}