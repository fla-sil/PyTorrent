{"info": {"author": "Leo Scholl", "author_email": "leo.scholl@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "## Synopsis\n\nA simple, extensible web server for fetching and logging weather information and displaying nicely on a screen.\n\n![example image](https://github.com/leoscholl/wallberry/blob/master/scrot.png)\n\n## Dependencies\n\n* forecastio\n* python-flask\n* matplotlib\n* w1thermsensor (optional)\n\n## Hardware\n\n* Raspberry pi\n* DS18B20 1-wire temperature sensor (optional)\n\n## Setup\n\nInstall with pip and virtualenv:\n```\npython3 -m virtualenv ~/wallberry\nsource ~/wallberry/bin/activate\npip install wallberry-uberpotato\n```\n\nRequires a DarkSky API key (free from https://darksky.net/dev). \nChange the example config file to include your key and your location. Save config file as `config.py`\n\n## Usage\n\nStart the server on your local network by running `sh wallberry/server.sh &`\nOpen a web browser and navigate to `localhost:5000`\n\nFor a wall-clock, use crontab and screen to automatically start on boot\n\n```\nsudo apt-get install screen\ncrontab -e\n```\nadd the following:\n```\n@reboot /usr/bin/screen -dmS Server /bin/sh ~/wallberry/server.sh\n@reboot /bin/sh ~/wallberry/start.sh\n0 7 * * * /bin/sh ~/wallberry/start.sh\n0 23 * * * /bin/sh ~/wallberry/stop.sh\n```\nThis will start a full-screen kiosk browser, and turn off the screen automatically from 11pm to 7am.\n\nIncluded also is an example python script for a PIR motion sensor for automatically turning on and off the screen\n\n## Adding sensors\n\nSend temperature, humidity, and pressure data to the server with a POST requst to `/log` with the format\n```\n{\n  name: <My Sensor Name>,\n  temperature: <Temp>, (optional)\n  humidity: <Humidity>, (optional)\n  pressure: <Pressure> (optional)\n}\n```\n\nAn example script `weatherPOST.py` is included for reference using a DS18B20 sensor. To set up this sensor on a rpi:\n\n#### Normal mode:\nConnect Vdd to 3.3v, data to gpio-4, ground to ground, pullup resistor between Vdd and data\n\nto `/boot/config.txt` add:\n```\ndtoverlay=w1-gpio,gpiopin=4\n``` \n4 is the default w1 gpio pin\n\nto `/etc/modules` add:\n```\nw1-gpio\nw1-therm\n```\n\n#### Parasitic mode:\nConnect Vdd shorted with ground, data to gpio-4, pullup resistor between Vdd and data\n\nto `/boot/config.txt` add:\n```\ndtoverlay=w1-gpio,gpiopin=4,pullup=1\n``` \n\nto `/etc/modules` add:\n```\nw1-gpio\nw1-therm strong_pullup=2\n```\n\nCall `w1thermsensor ls` to list the hardware addresses of all connected sensors\n\n## Viewing log history\n\n![example log output](https://github.com/leoscholl/wallberry/blob/master/graph.png)\n\nA GET request to `/log` yields a date range selection and simple graph\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leoscholl/wallberry", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wallberry-uberpotato", "package_url": "https://pypi.org/project/wallberry-uberpotato/", "platform": "", "project_url": "https://pypi.org/project/wallberry-uberpotato/", "project_urls": {"Homepage": "https://github.com/leoscholl/wallberry"}, "release_url": "https://pypi.org/project/wallberry-uberpotato/1.2.3/", "requires_dist": ["flask", "python-forecastio", "matplotlib"], "requires_python": "", "summary": "Wall clock / weather forecast http server suitable for raspberry pi", "version": "1.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Synopsis</h2>\n<p>A simple, extensible web server for fetching and logging weather information and displaying nicely on a screen.</p>\n<p><img alt=\"example image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2860bc5c6558b4459a65beed9b13fc3557ed5ce4/68747470733a2f2f6769746875622e636f6d2f6c656f7363686f6c6c2f77616c6c62657272792f626c6f622f6d61737465722f7363726f742e706e67\"></p>\n<h2>Dependencies</h2>\n<ul>\n<li>forecastio</li>\n<li>python-flask</li>\n<li>matplotlib</li>\n<li>w1thermsensor (optional)</li>\n</ul>\n<h2>Hardware</h2>\n<ul>\n<li>Raspberry pi</li>\n<li>DS18B20 1-wire temperature sensor (optional)</li>\n</ul>\n<h2>Setup</h2>\n<p>Install with pip and virtualenv:</p>\n<pre><code>python3 -m virtualenv ~/wallberry\nsource ~/wallberry/bin/activate\npip install wallberry-uberpotato\n</code></pre>\n<p>Requires a DarkSky API key (free from <a href=\"https://darksky.net/dev\" rel=\"nofollow\">https://darksky.net/dev</a>).\nChange the example config file to include your key and your location. Save config file as <code>config.py</code></p>\n<h2>Usage</h2>\n<p>Start the server on your local network by running <code>sh wallberry/server.sh &amp;</code>\nOpen a web browser and navigate to <code>localhost:5000</code></p>\n<p>For a wall-clock, use crontab and screen to automatically start on boot</p>\n<pre><code>sudo apt-get install screen\ncrontab -e\n</code></pre>\n<p>add the following:</p>\n<pre><code>@reboot /usr/bin/screen -dmS Server /bin/sh ~/wallberry/server.sh\n@reboot /bin/sh ~/wallberry/start.sh\n0 7 * * * /bin/sh ~/wallberry/start.sh\n0 23 * * * /bin/sh ~/wallberry/stop.sh\n</code></pre>\n<p>This will start a full-screen kiosk browser, and turn off the screen automatically from 11pm to 7am.</p>\n<p>Included also is an example python script for a PIR motion sensor for automatically turning on and off the screen</p>\n<h2>Adding sensors</h2>\n<p>Send temperature, humidity, and pressure data to the server with a POST requst to <code>/log</code> with the format</p>\n<pre><code>{\n  name: &lt;My Sensor Name&gt;,\n  temperature: &lt;Temp&gt;, (optional)\n  humidity: &lt;Humidity&gt;, (optional)\n  pressure: &lt;Pressure&gt; (optional)\n}\n</code></pre>\n<p>An example script <code>weatherPOST.py</code> is included for reference using a DS18B20 sensor. To set up this sensor on a rpi:</p>\n<h4>Normal mode:</h4>\n<p>Connect Vdd to 3.3v, data to gpio-4, ground to ground, pullup resistor between Vdd and data</p>\n<p>to <code>/boot/config.txt</code> add:</p>\n<pre><code>dtoverlay=w1-gpio,gpiopin=4\n</code></pre>\n<p>4 is the default w1 gpio pin</p>\n<p>to <code>/etc/modules</code> add:</p>\n<pre><code>w1-gpio\nw1-therm\n</code></pre>\n<h4>Parasitic mode:</h4>\n<p>Connect Vdd shorted with ground, data to gpio-4, pullup resistor between Vdd and data</p>\n<p>to <code>/boot/config.txt</code> add:</p>\n<pre><code>dtoverlay=w1-gpio,gpiopin=4,pullup=1\n</code></pre>\n<p>to <code>/etc/modules</code> add:</p>\n<pre><code>w1-gpio\nw1-therm strong_pullup=2\n</code></pre>\n<p>Call <code>w1thermsensor ls</code> to list the hardware addresses of all connected sensors</p>\n<h2>Viewing log history</h2>\n<p><img alt=\"example log output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/432191e7f1309bf2081ba7d3cef3c6b69f785f2c/68747470733a2f2f6769746875622e636f6d2f6c656f7363686f6c6c2f77616c6c62657272792f626c6f622f6d61737465722f67726170682e706e67\"></p>\n<p>A GET request to <code>/log</code> yields a date range selection and simple graph</p>\n\n          </div>"}, "last_serial": 5275704, "releases": {"1.2.0": [{"comment_text": "", "digests": {"md5": "e62117706c99f04ce18f7e44cded04ae", "sha256": "5c50ad94517402f898639b39ed73c8be95e164113fe577904611280d85b2f09f"}, "downloads": -1, "filename": "wallberry_uberpotato-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e62117706c99f04ce18f7e44cded04ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 344888, "upload_time": "2019-04-07T21:57:11", "upload_time_iso_8601": "2019-04-07T21:57:11.904808Z", "url": "https://files.pythonhosted.org/packages/10/e5/fd810df22937d7e27d257f91fe4fd8eb785d0c7185697202b8a6c75d1f0d/wallberry_uberpotato-1.2.0-py3-none-any.whl", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "203a69a882d0a8dae6ebb5e1f90dbf99", "sha256": "c14816f249d08e1e82f8195743ee1d1bf32ee0d7e795061b974ede4fc67a2fdd"}, "downloads": -1, "filename": "wallberry_uberpotato-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "203a69a882d0a8dae6ebb5e1f90dbf99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 345892, "upload_time": "2019-05-13T06:48:44", "upload_time_iso_8601": "2019-05-13T06:48:44.833626Z", "url": "https://files.pythonhosted.org/packages/79/82/edd776bf047ca6504333b3d8936ba23bbf4201b84b1001935f86017e0e27/wallberry_uberpotato-1.2.1-py3-none-any.whl", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "6a7928e2c40d05bcd1068eabebe7ed15", "sha256": "6d032b491cf40ac02d0377aa5a9842d7bf5f1cf8cc85bbb33b99b7987b640bed"}, "downloads": -1, "filename": "wallberry_uberpotato-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6a7928e2c40d05bcd1068eabebe7ed15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 345910, "upload_time": "2019-05-16T05:43:05", "upload_time_iso_8601": "2019-05-16T05:43:05.940727Z", "url": "https://files.pythonhosted.org/packages/0e/85/5adc189f84a1c19a424001407a2c9dea0b3e1a24cfa01eb71e57bb7cebc1/wallberry_uberpotato-1.2.2-py3-none-any.whl", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "4124bf2643d3b701b58850f9b22408ff", "sha256": "3264a267a3256d20d48a7dd659d29d5f53d463a97e4efbbd7bc37c3314da9cb9"}, "downloads": -1, "filename": "wallberry_uberpotato-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4124bf2643d3b701b58850f9b22408ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 345921, "upload_time": "2019-05-16T06:18:23", "upload_time_iso_8601": "2019-05-16T06:18:23.890444Z", "url": "https://files.pythonhosted.org/packages/0b/62/ca6b983e6482cabb676cfa27e3a0923d604e42662c697b033eda945fd211/wallberry_uberpotato-1.2.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4124bf2643d3b701b58850f9b22408ff", "sha256": "3264a267a3256d20d48a7dd659d29d5f53d463a97e4efbbd7bc37c3314da9cb9"}, "downloads": -1, "filename": "wallberry_uberpotato-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4124bf2643d3b701b58850f9b22408ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 345921, "upload_time": "2019-05-16T06:18:23", "upload_time_iso_8601": "2019-05-16T06:18:23.890444Z", "url": "https://files.pythonhosted.org/packages/0b/62/ca6b983e6482cabb676cfa27e3a0923d604e42662c697b033eda945fd211/wallberry_uberpotato-1.2.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:32:38 2020"}