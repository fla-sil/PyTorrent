{"info": {"author": "Martin Brochhaus", "author_email": "mbrochh@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Django Online Documentation\n===========================\n\nA Django application for showing user documentation on every page of your\nproject.\n\nMost big customers request a user documentation in Microsoft Word format. We\nthought that this is insane because we develop web applications in an agile way\nwhich means that such a documentation would be outdated almost immediately.\nThere would also be the issue to send the latest documentation to all users so\nwe thought why not just include the documentation on the page itself. And why\nnot make the documentation smart enough to only show the docs about the page\nthat is currently displayed.\n\nThis app resolves the current URL and tries to load a Markdown file for the\ncurrently displayed view in a jQuery modal. The files simply need to be stored\nin your app's ``/templates/online_docs/`` folders.\n\nPlease be aware that this is a first prototype and proof of concept for this\nidea. It is very simplistic and probably violates DRY and does not support\ni18n. This is on the roadmap, though.\n\nThis is how it looks like when you are on the ``/docs/`` page and click at the\n``Docs`` navigation link:\n\n.. image:: https://github.com/bitmazk/django-online-docs/raw/master/screenshot.png\n\nInstallation\n------------\n\nYou need to install the following prerequisites in order to use this app::\n\n    pip install Django\n    pip install markdown\n\nIf you want to install the latest stable release from PyPi::\n\n    $ pip install django-online-docs\n\nIf you feel adventurous and want to install the latest commit from GitHub::\n\n    $ pip install -e git://github.com/bitmazk/django-online-docs.git#egg=online_docs\n\nAdd ``online_docs`` and ``django.contrib.markdown`` to your\n``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...,\n        'django.contrib.markdown',\n        'online_docs',\n    )\n\nHook this app into your ``urls.py``::\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^docs/$',\n            include('online_docs.urls')),\n    )\n\nDownload jQuery and jQuery-ui and place it in your ``/static/`` folder. Then\nadd both libraries and ``online_docs.js`` to your ``base.html``.  Furthermore\n``online_docs/css/styles.css`` will give you some simple styles for the output\nthat Markdown generates. You can leave out this stylesheet and just add the\nstyles to your own main stylesheet if you want::\n\n    <head>\n        ...\n        <!-- import the jquery-ui stylesheet here -->\n        <link rel=\"stylesheet\" href=\"{{ STATIC_URL }}online_docs/css/styles.css\">\n        ...\n    </head>\n    <body>\n        ...\n        <!-- Load these scripts before the closing <body> tag -->\n        <!-- Import jQuery here -->\n        <!-- Import jQuery-ui here -->\n        <script src=\"{{ STATIC_URL }}online_docs/js/online_docs.js\"></script>\n    </body>\n\nAdd the link to open the docs to your base.html::\n\n    {% load online_docs_tags %}\n    ...\n    <ul id=\"navigation\">\n        ...\n        <li>{% render_docs_link request %}</li>\n    </ul>\n\nIf you don't like the appearance of the docs link, you can override the\ntemplate ``online_docs/online_docs_link.html``.\n\nYou can test if everything worked fine by running your site and going to the\nURL where you have hooked up this app (i.e. ``/docs/?path=/docs/``).\n\nUsage\n-----\n\nJust create a ``/templates/online_docs/`` folder in your app that you want to\ndocument. Then place ``.md`` files in that folder. The names of the files should\nbe of the format ``[namespace_]view_name`` (namespace is optional).\n\nIf you want to document views of third party apps, just create a\n``/templates/online_docs`` folder in your project's main static folder and\nplace the files in there.\n\nIf you are unsure about the filename, just run your app, go to the view and\nclick at the docs link. If you have ``DEBUG=True`` the error message will tell\nyou the expected filename.\n\nIf you want to reference to another document in your documentation, you can use\nthe template tag ``url_cross_reference``::\n\n    {% load online_docs_tags %}\n    {% url_cross_reference \"filename.md\" \"Link text\" %}\n\nIf you want to use that generated link inside a ``blocktrans`` tag, please do\nthe following::\n\n    {% load online_docs_tags %}\n    {% url_cross_reference \"filename.md\" \"Link text\" as cross_link %}\n    {% blocktrans with cross_link=cross_link|safe %}\n    Foo bar {{ cross_link }}\n    {% endblocktrans %}\n\nSettings\n--------\n\nONLINE_DOCS_DEBUG\n+++++++++++++++++\n\n__Default:__ `False`\n\nSet this to `True` to see what the documentation filename for the current view\nshould be. The filename will be appended to the rendered documentation output\nof the current view. So if you want to find out what the filename should be,\njust click at the docs link and scroll to the bottom of the output.\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps::\n\n    # Fork this repository\n    # Clone your fork\n    $ mkvirtualenv -p python2.7 django-online-docs\n    $ pip install -r requirements.txt\n    $ ./online_docs/tests/runtests.sh\n    # You should get no failing tests\n\n    $ git co -b feature_branch master\n    # Implement your feature and tests\n    # Describe your change in the CHANGELOG.txt\n    $ git add . && git commit\n    $ git push origin feature_branch\n    # Send us a pull request for your feature branch\n\nWhenever you run the tests a coverage output will be generated in\n``tests/coverage/index.html``. When adding new features, please make sure that\nyou keep the coverage at 100%.\n\nOh and... if you submit patches that make our tests fail, you will be publicly\nhumiliated on http://travis-ci.org/#!/bitmazk/django-online-docs ;)\n\nIf you are making changes that need to be tested in a browser (i.e. to the\nCSS or JS files), you might want to setup a Django project, follow the\ninstallation insttructions above, then run ``python setup.py develop``. This\nwill just place an egg-link to your cloned fork in your project's virtualenv.\n\nRoadmap\n-------\n\nCheck the issue tracker on github for milestones and features to come.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitmazk/django-online-docs", "keywords": "django,docs,documentation,interactive,ajax", "license": "The MIT License", "maintainer": null, "maintainer_email": null, "name": "django-online-docs", "package_url": "https://pypi.org/project/django-online-docs/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-online-docs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bitmazk/django-online-docs"}, "release_url": "https://pypi.org/project/django-online-docs/0.8/", "requires_dist": null, "requires_python": null, "summary": "A reusable Django app that shows documentation for the view that is currently\ndisplayed. The documentation is written in Markdown and gets displayed in\njQuery modals.", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Django application for showing user documentation on every page of your\nproject.</p>\n<p>Most big customers request a user documentation in Microsoft Word format. We\nthought that this is insane because we develop web applications in an agile way\nwhich means that such a documentation would be outdated almost immediately.\nThere would also be the issue to send the latest documentation to all users so\nwe thought why not just include the documentation on the page itself. And why\nnot make the documentation smart enough to only show the docs about the page\nthat is currently displayed.</p>\n<p>This app resolves the current URL and tries to load a Markdown file for the\ncurrently displayed view in a jQuery modal. The files simply need to be stored\nin your app\u2019s <tt>/templates/online_docs/</tt> folders.</p>\n<p>Please be aware that this is a first prototype and proof of concept for this\nidea. It is very simplistic and probably violates DRY and does not support\ni18n. This is on the roadmap, though.</p>\n<p>This is how it looks like when you are on the <tt>/docs/</tt> page and click at the\n<tt>Docs</tt> navigation link:</p>\n<img alt=\"https://github.com/bitmazk/django-online-docs/raw/master/screenshot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a8d86f2f71db95a44a9eb839f1b3294218228c6/68747470733a2f2f6769746875622e636f6d2f6269746d617a6b2f646a616e676f2d6f6e6c696e652d646f63732f7261772f6d61737465722f73637265656e73686f742e706e67\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You need to install the following prerequisites in order to use this app:</p>\n<pre>pip install Django\npip install markdown\n</pre>\n<p>If you want to install the latest stable release from PyPi:</p>\n<pre>$ pip install django-online-docs\n</pre>\n<p>If you feel adventurous and want to install the latest commit from GitHub:</p>\n<pre>$ pip install -e git://github.com/bitmazk/django-online-docs.git#egg=online_docs\n</pre>\n<p>Add <tt>online_docs</tt> and <tt>django.contrib.markdown</tt> to your\n<tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n    ...,\n    'django.contrib.markdown',\n    'online_docs',\n)\n</pre>\n<p>Hook this app into your <tt>urls.py</tt>:</p>\n<pre>urlpatterns = patterns('',\n    ...\n    url(r'^docs/$',\n        include('online_docs.urls')),\n)\n</pre>\n<p>Download jQuery and jQuery-ui and place it in your <tt>/static/</tt> folder. Then\nadd both libraries and <tt>online_docs.js</tt> to your <tt>base.html</tt>.  Furthermore\n<tt>online_docs/css/styles.css</tt> will give you some simple styles for the output\nthat Markdown generates. You can leave out this stylesheet and just add the\nstyles to your own main stylesheet if you want:</p>\n<pre>&lt;head&gt;\n    ...\n    &lt;!-- import the jquery-ui stylesheet here --&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ STATIC_URL }}online_docs/css/styles.css\"&gt;\n    ...\n&lt;/head&gt;\n&lt;body&gt;\n    ...\n    &lt;!-- Load these scripts before the closing &lt;body&gt; tag --&gt;\n    &lt;!-- Import jQuery here --&gt;\n    &lt;!-- Import jQuery-ui here --&gt;\n    &lt;script src=\"{{ STATIC_URL }}online_docs/js/online_docs.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</pre>\n<p>Add the link to open the docs to your base.html:</p>\n<pre>{% load online_docs_tags %}\n...\n&lt;ul id=\"navigation\"&gt;\n    ...\n    &lt;li&gt;{% render_docs_link request %}&lt;/li&gt;\n&lt;/ul&gt;\n</pre>\n<p>If you don\u2019t like the appearance of the docs link, you can override the\ntemplate <tt>online_docs/online_docs_link.html</tt>.</p>\n<p>You can test if everything worked fine by running your site and going to the\nURL where you have hooked up this app (i.e. <tt><span class=\"pre\">/docs/?path=/docs/</span></tt>).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Just create a <tt>/templates/online_docs/</tt> folder in your app that you want to\ndocument. Then place <tt>.md</tt> files in that folder. The names of the files should\nbe of the format <tt>[namespace_]view_name</tt> (namespace is optional).</p>\n<p>If you want to document views of third party apps, just create a\n<tt>/templates/online_docs</tt> folder in your project\u2019s main static folder and\nplace the files in there.</p>\n<p>If you are unsure about the filename, just run your app, go to the view and\nclick at the docs link. If you have <tt>DEBUG=True</tt> the error message will tell\nyou the expected filename.</p>\n<p>If you want to reference to another document in your documentation, you can use\nthe template tag <tt>url_cross_reference</tt>:</p>\n<pre>{% load online_docs_tags %}\n{% url_cross_reference \"filename.md\" \"Link text\" %}\n</pre>\n<p>If you want to use that generated link inside a <tt>blocktrans</tt> tag, please do\nthe following:</p>\n<pre>{% load online_docs_tags %}\n{% url_cross_reference \"filename.md\" \"Link text\" as cross_link %}\n{% blocktrans with cross_link=cross_link|safe %}\nFoo bar {{ cross_link }}\n{% endblocktrans %}\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<h2 id=\"online-docs-debug\"><span class=\"section-subtitle\">ONLINE_DOCS_DEBUG</span></h2>\n<p>__Default:__ <cite>False</cite></p>\n<p>Set this to <cite>True</cite> to see what the documentation filename for the current view\nshould be. The filename will be appended to the rendered documentation output\nof the current view. So if you want to find out what the filename should be,\njust click at the docs link and scroll to the bottom of the output.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>If you want to contribute to this project, please perform the following steps:</p>\n<pre># Fork this repository\n# Clone your fork\n$ mkvirtualenv -p python2.7 django-online-docs\n$ pip install -r requirements.txt\n$ ./online_docs/tests/runtests.sh\n# You should get no failing tests\n\n$ git co -b feature_branch master\n# Implement your feature and tests\n# Describe your change in the CHANGELOG.txt\n$ git add . &amp;&amp; git commit\n$ git push origin feature_branch\n# Send us a pull request for your feature branch\n</pre>\n<p>Whenever you run the tests a coverage output will be generated in\n<tt>tests/coverage/index.html</tt>. When adding new features, please make sure that\nyou keep the coverage at 100%.</p>\n<p>Oh and\u2026 if you submit patches that make our tests fail, you will be publicly\nhumiliated on <a href=\"http://travis-ci.org/#!/bitmazk/django-online-docs\" rel=\"nofollow\">http://travis-ci.org/#!/bitmazk/django-online-docs</a> ;)</p>\n<p>If you are making changes that need to be tested in a browser (i.e. to the\nCSS or JS files), you might want to setup a Django project, follow the\ninstallation insttructions above, then run <tt>python setup.py develop</tt>. This\nwill just place an egg-link to your cloned fork in your project\u2019s virtualenv.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<p>Check the issue tracker on github for milestones and features to come.</p>\n</div>\n\n          </div>"}, "last_serial": 790208, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ec41a7486ff4a200d5f2a42591e48c02", "sha256": "625ed68d6ea1258060922e14c25341f846f8c3baafe81cc15859db980877028b"}, "downloads": -1, "filename": "django-online-docs-0.1.tar.gz", "has_sig": false, "md5_digest": "ec41a7486ff4a200d5f2a42591e48c02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6404, "upload_time": "2012-06-22T16:36:32", "upload_time_iso_8601": "2012-06-22T16:36:32.304833Z", "url": "https://files.pythonhosted.org/packages/4e/04/985a4cf65a835af0da2edc27422514b96581f67ff2f770840dda3f249ab8/django-online-docs-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "69238ebf21bc3ee913aac058b3186250", "sha256": "a371b35e279197e160b01c15c4886a542ab1b83ac1d1a0ef07cb787e79a4c945"}, "downloads": -1, "filename": "django-online-docs-0.2.tar.gz", "has_sig": false, "md5_digest": "69238ebf21bc3ee913aac058b3186250", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18854, "upload_time": "2012-06-23T09:06:59", "upload_time_iso_8601": "2012-06-23T09:06:59.552587Z", "url": "https://files.pythonhosted.org/packages/00/17/61b7f65dff731e1d094bef77d7c9d84c919f9f03f808031fadbc3a9248dd/django-online-docs-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "fb1526a057231e9b2285a1d15de78ecb", "sha256": "5106d7f737688563e3af5a29f4d082c8c936291a3e79e7e321d6e6298d9925c7"}, "downloads": -1, "filename": "django-online-docs-0.3.tar.gz", "has_sig": false, "md5_digest": "fb1526a057231e9b2285a1d15de78ecb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110710, "upload_time": "2012-07-10T08:50:57", "upload_time_iso_8601": "2012-07-10T08:50:57.080160Z", "url": "https://files.pythonhosted.org/packages/c6/a3/efe556ff63846b21a988c8653ce2ba462c4ff128fc6af0217d914267c914/django-online-docs-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4ec2a2322545041d79a0bc8383d14781", "sha256": "64b1248952cba32046188c43d50ca0c9dddc3d93a2066d86e6c56c4d8d4d1c7e"}, "downloads": -1, "filename": "django-online-docs-0.4.tar.gz", "has_sig": false, "md5_digest": "4ec2a2322545041d79a0bc8383d14781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105812, "upload_time": "2012-07-16T12:56:47", "upload_time_iso_8601": "2012-07-16T12:56:47.173004Z", "url": "https://files.pythonhosted.org/packages/1e/b5/b8a1f5bdb22a871fed73350c15f9eb72f8254a36b6300585b6458cd52c9f/django-online-docs-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "3d05d665b0033801efeaf7549ca68548", "sha256": "9bde91e8f107d41aa61144b679fb4a60d8c45187203070cfd330a5eff07c528d"}, "downloads": -1, "filename": "django-online-docs-0.5.tar.gz", "has_sig": false, "md5_digest": "3d05d665b0033801efeaf7549ca68548", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98512, "upload_time": "2012-07-18T13:42:13", "upload_time_iso_8601": "2012-07-18T13:42:13.333075Z", "url": "https://files.pythonhosted.org/packages/a3/49/12ecada6ebc49f85c0c9dfef95eadb6290f18fd354fad40b2896d65f6c63/django-online-docs-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "7736b293367fc969c15f9b2b4dc1fb79", "sha256": "113af1b5ce9c69be574823f13260ff936028d342755b13bc416ad8fb8cda0869"}, "downloads": -1, "filename": "django-online-docs-0.6.tar.gz", "has_sig": false, "md5_digest": "7736b293367fc969c15f9b2b4dc1fb79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101565, "upload_time": "2012-07-18T17:48:48", "upload_time_iso_8601": "2012-07-18T17:48:48.117411Z", "url": "https://files.pythonhosted.org/packages/64/90/a4a6eac691e0abdaa8785830627c9aae1acb10484ace58aec11ae6f01108/django-online-docs-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "f080f6134e85f24f39e5b02f444baddd", "sha256": "63147d39fe57975e96daa36f1fbc6e129c2000854746d896313804ca630f1bf7"}, "downloads": -1, "filename": "django-online-docs-0.7.tar.gz", "has_sig": false, "md5_digest": "f080f6134e85f24f39e5b02f444baddd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100731, "upload_time": "2012-10-18T14:11:27", "upload_time_iso_8601": "2012-10-18T14:11:27.709967Z", "url": "https://files.pythonhosted.org/packages/b3/9d/1e21ac5cbc708dc76fbbb03a1062d30c20980b4d596bbc37343d9c4010f7/django-online-docs-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "336cdd8b0ce7af4933ddbbee1327c7c3", "sha256": "734a5be9f872dc69dbdbef054ff5ac5e21b2442bb203d09ffd48a08e4c4ed3d8"}, "downloads": -1, "filename": "django-online-docs-0.8.tar.gz", "has_sig": false, "md5_digest": "336cdd8b0ce7af4933ddbbee1327c7c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100865, "upload_time": "2013-02-19T04:13:46", "upload_time_iso_8601": "2013-02-19T04:13:46.950837Z", "url": "https://files.pythonhosted.org/packages/f4/37/5f61760bc813a12b16f52f77d3afba8e5d6157f84ee44296c9b3951e9af9/django-online-docs-0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "336cdd8b0ce7af4933ddbbee1327c7c3", "sha256": "734a5be9f872dc69dbdbef054ff5ac5e21b2442bb203d09ffd48a08e4c4ed3d8"}, "downloads": -1, "filename": "django-online-docs-0.8.tar.gz", "has_sig": false, "md5_digest": "336cdd8b0ce7af4933ddbbee1327c7c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100865, "upload_time": "2013-02-19T04:13:46", "upload_time_iso_8601": "2013-02-19T04:13:46.950837Z", "url": "https://files.pythonhosted.org/packages/f4/37/5f61760bc813a12b16f52f77d3afba8e5d6157f84ee44296c9b3951e9af9/django-online-docs-0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:31 2020"}