{"info": {"author": "Lukas Prokop", "author_email": "admin@lukas-prokop.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Testing", "Topic :: System :: Logging", "Topic :: System :: Systems Administration"], "description": "Documentation\n=============\n\n:name:          taptaptap\n:author:        Lukas Prokop\n:date:          Feb-Apr 2014, Jul 2018\n:license:       BSD 3-clause\n:version:       1.2.1\n:issues:        http://github.com/meisterluk/taptaptap/issues\n\nTest Anything Protocol handling for cats \\*rawwr*\n\n.. contents:: Table of contents\n\n``taptaptap`` provides parsers, writers and APIs to handle the Test Anything Protocol (TAP). The implementation focuses on the most-current TAP version 13. TAP originates from the Perl community, but is a general format to document runs of testsuites. The reference to cats is just a pun for the noise of cats sneaking on floors.\n\nCompatibility\n-------------\n\n``taptaptap`` is only supposed to be working with python 2.7 (due to with statements and argparse).\nIt fully supports unicode.\nIt has been tested with Xubuntu 18.04 (Linux 4.15 x86_64) on 2.7.15rc1. A version for python 3.x is available as package ``taptaptap3``.\n\nChangelog\n---------\n:1.2.1: declare encoding in setup.py, README updates\n:1.2.0: Bugfix: do not drop memo in TapBailout,\n        shebangs: \"python\" \u2192 \"python2\",\n        Bugfix: initialize next_number with 1,\n        Bugfix: issue #1\n:1.1.3: tapmerge: support merging more than 2 TAP files,\n        support \"-\" to denote stdin\n:1.1.2: TapWriter: do not reuse TapWriter instance in TapCreator\n:1.1.1: TapWriter: support data handling in TapBailout\n:1.1.0: procedural API writes to stderr not stdout,\n        bugfix TapCreator: Fix number of testcase determination\n:1.0.5: bugfix procedural API: write version even if default version\n:1.0.4: more tests, fix output/source bug in testsuite\n:1.0.3: install_requires in setup.py\n:1.0.2: introduce requirements.txt\n:1.0.1: Unicode improvements\n:1.0.0: First stable release, packaging improvements, full testsuite\n:0.8.0: Unstable release, minimal testsuite\n\nThe File Format\n---------------\n\nA basic introduction is given by Wikipedia. The format was specified by the Perl community.\n\n* `The Wikipedia article <https://en.wikipedia.org/wiki/Test_Anything_Protocol>`_\n* `Original specification <http://web.archive.org/web/20120730055134/http://testanything.org/wiki/index.php/TAP_specification>`_\n* `Test::Harness <https://metacpan.org/pod/release/PETDANCE/Test-Harness-2.64/lib/Test/Harness/TAP.pod#THE-TAP-FORMAT>`_\n\nTestsuite & Examples\n--------------------\n\n``taptaptap`` comes with a testsuite, which covers many special cases of the TAP format and tests the provided APIs. Please don't hesitate to report any issues_.\n\nYou can run the ``taptaptap`` testcases yourself using::\n\n    ./run.sh\n\nin the tests directory. The testsuite also shows some API usage examples, but I want to provide some here. The procedural API is well-suited if you are in the python REPL::\n\n    from taptaptap.proc import plan, ok, not_ok, out\n    plan(tests=10)\n    ok('Starting the robot')\n    not_ok('Starting the engine')\n    not_ok('Find the object', skip='Setup required')\n    not_ok('Terminate', skip='Setup required')\n\n    out()\n\nThe output looks like this::\n\n    1..10\n    ok - Starting the robot\n    not ok - Starting the engine\n    not ok - Find the object  # SKIP Setup required\n    not ok - Terminate  # SKIP Setup required\n\nBe aware that the state is stored within the module. This is not what you want if you are outside the REPL. The ``TapWriter`` class is more convenient in this case::\n\n    import taptaptap\n\n    writer = taptaptap.TapWriter()\n    writer.plan(1, 3)\n    writer.ok('This testcase went fine')\n    writer.ok('And another one')\n    writer.ok('And also the last one')\n\nIf you like python's generators, you want to use ``SimpleTapCreator``::\n\n    @taptaptap.SimpleTapCreator\n    def runTests():\n        yield True\n        yield True\n        yield False\n\n    print runTests()\n\nGiving us::\n\n    1..3\n    ok\n    ok\n    not ok\n\nOr take a look at the more sophisticated ``TapCreator``. If you are a real expert, you can use ``TapDocument`` directly, which covers all possibilities of TAP.\n\nCommand line tools\n------------------\n\nYou can also invoke ``taptaptap`` directly from the command line::\n\n    python -m taptaptap.__main__ some_tap_file_to_validate.tap\n\nThis command will parse the file and write the file in a way how it was understood by the module. The exit code indicates its validity:\n\n0\n  Everything fine.\n1\n  The TAP file is missing some testcases or contains failed testcases.\n2\n  A bailout was raised. So the testing environment crashed during the run.\n\nPickling\n--------\n\nAll objects are pickable.\n\nWhen to use ``taptaptap``\n-------------------------\n\nDoes ``taptaptap`` suite your needs?\nIt does, if you are looking for a parser and validator for your TAP documents and you don't want to care about details and just need a gentle API.\n\nbest regards,\nmeisterluk\n\n.. _issues: https://github.com/meisterluk/taptaptap\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://lukas-prokop.at/proj/taptaptap/", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "taptaptap", "package_url": "https://pypi.org/project/taptaptap/", "platform": "any", "project_url": "https://pypi.org/project/taptaptap/", "project_urls": {"Homepage": "http://lukas-prokop.at/proj/taptaptap/"}, "release_url": "https://pypi.org/project/taptaptap/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "Test Anything Protocol handling for cats", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>name:</th><td>taptaptap</td>\n</tr>\n<tr><th>Author:</th>\n<td>Lukas Prokop</td></tr>\n<tr><th>Date:</th>\n<td>Feb-Apr 2014, Jul 2018</td></tr>\n<tr><th>license:</th><td>BSD 3-clause</td>\n</tr>\n<tr><th>Version:</th>\n<td>1.2.1</td></tr>\n<tr><th>issues:</th><td><a href=\"http://github.com/meisterluk/taptaptap/issues\" rel=\"nofollow\">http://github.com/meisterluk/taptaptap/issues</a></td>\n</tr>\n</tbody>\n</table>\n<p>Test Anything Protocol handling for cats *rawwr*</p>\n<div id=\"table-of-contents\">\n<p>Table of contents</p>\n<ul>\n<li><a href=\"#compatibility\" id=\"id1\" rel=\"nofollow\">Compatibility</a></li>\n<li><a href=\"#changelog\" id=\"id2\" rel=\"nofollow\">Changelog</a></li>\n<li><a href=\"#the-file-format\" id=\"id3\" rel=\"nofollow\">The File Format</a></li>\n<li><a href=\"#testsuite-examples\" id=\"id4\" rel=\"nofollow\">Testsuite &amp; Examples</a></li>\n<li><a href=\"#command-line-tools\" id=\"id5\" rel=\"nofollow\">Command line tools</a></li>\n<li><a href=\"#pickling\" id=\"id6\" rel=\"nofollow\">Pickling</a></li>\n<li><a href=\"#when-to-use-taptaptap\" id=\"id7\" rel=\"nofollow\">When to use <tt>taptaptap</tt></a></li>\n</ul>\n</div>\n<p><tt>taptaptap</tt> provides parsers, writers and APIs to handle the Test Anything Protocol (TAP). The implementation focuses on the most-current TAP version 13. TAP originates from the Perl community, but is a general format to document runs of testsuites. The reference to cats is just a pun for the noise of cats sneaking on floors.</p>\n<div id=\"compatibility\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Compatibility</a></h2>\n<p><tt>taptaptap</tt> is only supposed to be working with python 2.7 (due to with statements and argparse).\nIt fully supports unicode.\nIt has been tested with Xubuntu 18.04 (Linux 4.15 x86_64) on 2.7.15rc1. A version for python 3.x is available as package <tt>taptaptap3</tt>.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Changelog</a></h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>1.2.1:</th><td>declare encoding in setup.py, README updates</td>\n</tr>\n<tr><th>1.2.0:</th><td>Bugfix: do not drop memo in TapBailout,\nshebangs: \u201cpython\u201d \u2192 \u201cpython2\u201d,\nBugfix: initialize next_number with 1,\nBugfix: issue #1</td>\n</tr>\n<tr><th>1.1.3:</th><td>tapmerge: support merging more than 2 TAP files,\nsupport \u201c-\u201d to denote stdin</td>\n</tr>\n<tr><th>1.1.2:</th><td>TapWriter: do not reuse TapWriter instance in TapCreator</td>\n</tr>\n<tr><th>1.1.1:</th><td>TapWriter: support data handling in TapBailout</td>\n</tr>\n<tr><th>1.1.0:</th><td>procedural API writes to stderr not stdout,\nbugfix TapCreator: Fix number of testcase determination</td>\n</tr>\n<tr><th>1.0.5:</th><td>bugfix procedural API: write version even if default version</td>\n</tr>\n<tr><th>1.0.4:</th><td>more tests, fix output/source bug in testsuite</td>\n</tr>\n<tr><th>1.0.3:</th><td>install_requires in setup.py</td>\n</tr>\n<tr><th>1.0.2:</th><td>introduce requirements.txt</td>\n</tr>\n<tr><th>1.0.1:</th><td>Unicode improvements</td>\n</tr>\n<tr><th>1.0.0:</th><td>First stable release, packaging improvements, full testsuite</td>\n</tr>\n<tr><th>0.8.0:</th><td>Unstable release, minimal testsuite</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"the-file-format\">\n<h2><a href=\"#id3\" rel=\"nofollow\">The File Format</a></h2>\n<p>A basic introduction is given by Wikipedia. The format was specified by the Perl community.</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Test_Anything_Protocol\" rel=\"nofollow\">The Wikipedia article</a></li>\n<li><a href=\"http://web.archive.org/web/20120730055134/http://testanything.org/wiki/index.php/TAP_specification\" rel=\"nofollow\">Original specification</a></li>\n<li><a href=\"https://metacpan.org/pod/release/PETDANCE/Test-Harness-2.64/lib/Test/Harness/TAP.pod#THE-TAP-FORMAT\" rel=\"nofollow\">Test::Harness</a></li>\n</ul>\n</div>\n<div id=\"testsuite-examples\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Testsuite &amp; Examples</a></h2>\n<p><tt>taptaptap</tt> comes with a testsuite, which covers many special cases of the TAP format and tests the provided APIs. Please don\u2019t hesitate to report any <a href=\"https://github.com/meisterluk/taptaptap\" rel=\"nofollow\">issues</a>.</p>\n<p>You can run the <tt>taptaptap</tt> testcases yourself using:</p>\n<pre>./run.sh\n</pre>\n<p>in the tests directory. The testsuite also shows some API usage examples, but I want to provide some here. The procedural API is well-suited if you are in the python REPL:</p>\n<pre>from taptaptap.proc import plan, ok, not_ok, out\nplan(tests=10)\nok('Starting the robot')\nnot_ok('Starting the engine')\nnot_ok('Find the object', skip='Setup required')\nnot_ok('Terminate', skip='Setup required')\n\nout()\n</pre>\n<p>The output looks like this:</p>\n<pre>1..10\nok - Starting the robot\nnot ok - Starting the engine\nnot ok - Find the object  # SKIP Setup required\nnot ok - Terminate  # SKIP Setup required\n</pre>\n<p>Be aware that the state is stored within the module. This is not what you want if you are outside the REPL. The <tt>TapWriter</tt> class is more convenient in this case:</p>\n<pre>import taptaptap\n\nwriter = taptaptap.TapWriter()\nwriter.plan(1, 3)\nwriter.ok('This testcase went fine')\nwriter.ok('And another one')\nwriter.ok('And also the last one')\n</pre>\n<p>If you like python\u2019s generators, you want to use <tt>SimpleTapCreator</tt>:</p>\n<pre>@taptaptap.SimpleTapCreator\ndef runTests():\n    yield True\n    yield True\n    yield False\n\nprint runTests()\n</pre>\n<p>Giving us:</p>\n<pre>1..3\nok\nok\nnot ok\n</pre>\n<p>Or take a look at the more sophisticated <tt>TapCreator</tt>. If you are a real expert, you can use <tt>TapDocument</tt> directly, which covers all possibilities of TAP.</p>\n</div>\n<div id=\"command-line-tools\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Command line tools</a></h2>\n<p>You can also invoke <tt>taptaptap</tt> directly from the command line:</p>\n<pre>python -m taptaptap.__main__ some_tap_file_to_validate.tap\n</pre>\n<p>This command will parse the file and write the file in a way how it was understood by the module. The exit code indicates its validity:</p>\n<dl>\n<dt>0</dt>\n<dd>Everything fine.</dd>\n<dt>1</dt>\n<dd>The TAP file is missing some testcases or contains failed testcases.</dd>\n<dt>2</dt>\n<dd>A bailout was raised. So the testing environment crashed during the run.</dd>\n</dl>\n</div>\n<div id=\"pickling\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Pickling</a></h2>\n<p>All objects are pickable.</p>\n</div>\n<div id=\"when-to-use-taptaptap\">\n<h2><a href=\"#id7\" rel=\"nofollow\">When to use <tt>taptaptap</tt></a></h2>\n<p>Does <tt>taptaptap</tt> suite your needs?\nIt does, if you are looking for a parser and validator for your TAP documents and you don\u2019t want to care about details and just need a gentle API.</p>\n<p>best regards,\nmeisterluk</p>\n</div>\n\n          </div>"}, "last_serial": 4025896, "releases": {"1.0.0-stable": [{"comment_text": "built for Linux-3.8.0-35-generic-x86_64-with-glibc2.7", "digests": {"md5": "4d2e6622d005f4fd6e65551b2e456e14", "sha256": "ceeb40e1fd62ce9b3c4b6a702938ea13962117047dd744323bd9ed07800e4658"}, "downloads": -1, "filename": "taptaptap-1.0.0-stable.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "4d2e6622d005f4fd6e65551b2e456e14", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 42115, "upload_time": "2014-05-12T14:06:46", "upload_time_iso_8601": "2014-05-12T14:06:46.037532Z", "url": "https://files.pythonhosted.org/packages/bd/62/81fbcb7eb1400f95362db1621dfe2b5800484c9f9b4655f35f2c54e8510f/taptaptap-1.0.0-stable.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c5e58bf76707ccda8d63c6ba015a8f7", "sha256": "ab6bc0d771ac3896c589fe5e51ac819fc5671893939b7650ef4426a835413b41"}, "downloads": -1, "filename": "taptaptap-1.0.0-stable.tar.gz", "has_sig": false, "md5_digest": "2c5e58bf76707ccda8d63c6ba015a8f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18835, "upload_time": "2014-05-12T14:06:43", "upload_time_iso_8601": "2014-05-12T14:06:43.046157Z", "url": "https://files.pythonhosted.org/packages/15/ad/0ac3d7a3d24a5486c28fede599adf1852b9aa5be4e6b6a4977283011de54/taptaptap-1.0.0-stable.tar.gz", "yanked": false}], "1.0.1-stable": [{"comment_text": "", "digests": {"md5": "c45153ad1d89d121db933b754ee54d20", "sha256": "3837334e0779e6d350719ab008875f1e0e9c9556d4975f17377dea962e96eb3e"}, "downloads": -1, "filename": "taptaptap-1.0.1-stable.tar.gz", "has_sig": false, "md5_digest": "c45153ad1d89d121db933b754ee54d20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18846, "upload_time": "2014-05-12T14:53:53", "upload_time_iso_8601": "2014-05-12T14:53:53.870863Z", "url": "https://files.pythonhosted.org/packages/4a/2e/65afb40d76f1f42cde2037814cc259c63ed2dae903e7d0101b51107403a2/taptaptap-1.0.1-stable.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b18506c48645b416f3f3dc6526ca213b", "sha256": "cb2b89f6801729118ec1caf641efa23bbf53c726c1901827e5b4400d860f9873"}, "downloads": -1, "filename": "taptaptap-1.0.2.tar.gz", "has_sig": true, "md5_digest": "b18506c48645b416f3f3dc6526ca213b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18831, "upload_time": "2014-06-02T11:09:02", "upload_time_iso_8601": "2014-06-02T11:09:02.440845Z", "url": "https://files.pythonhosted.org/packages/d4/9f/d253e6919828b6f0e33f4209861f8010e9722663e95a8359e8defae76bc7/taptaptap-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "37f0b747f781664f2c502d52b388d4e7", "sha256": "9435f00e7ed17e47acfce5a9ff0e203d55e874539e524254a81d85fb3932fc24"}, "downloads": -1, "filename": "taptaptap-1.0.3.tar.gz", "has_sig": true, "md5_digest": "37f0b747f781664f2c502d52b388d4e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18785, "upload_time": "2014-06-04T08:41:28", "upload_time_iso_8601": "2014-06-04T08:41:28.435434Z", "url": "https://files.pythonhosted.org/packages/32/fc/17cc95018d60bf2bc7e1001fab070f6fc5d26fac1c54775e28336e00d9b2/taptaptap-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c910a533cc5d3a5dedb45a00e4e41dbd", "sha256": "a340f4d23cf37525cc6b823f131af021564d273e2f0d90d24d4e90d1c8661cb6"}, "downloads": -1, "filename": "taptaptap-1.1.0.tar.gz", "has_sig": true, "md5_digest": "c910a533cc5d3a5dedb45a00e4e41dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19028, "upload_time": "2014-06-07T23:01:13", "upload_time_iso_8601": "2014-06-07T23:01:13.174286Z", "url": "https://files.pythonhosted.org/packages/8f/27/484264f9c02aa08a200f513599624b27f9c1675dd9e4e55b2b98bd240fa1/taptaptap-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "5dcfcd1baf4c2506d389fed2331b3438", "sha256": "3913f62537c11d2484bf07c2011a492c2b029aad1e6c89e0389b68c8e5cfad8e"}, "downloads": -1, "filename": "taptaptap-1.1.1.tar.gz", "has_sig": true, "md5_digest": "5dcfcd1baf4c2506d389fed2331b3438", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19046, "upload_time": "2014-06-08T00:23:12", "upload_time_iso_8601": "2014-06-08T00:23:12.370151Z", "url": "https://files.pythonhosted.org/packages/68/7c/878485fc7c019df2e72c18a6e35d577305f4fc15ff53915962142eab0149/taptaptap-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "45df1ab2d24e7c5ddd1bafb38215d8d9", "sha256": "354e75c9677d7703f146da2bbeb362c8250b8c53bf466bb50b2d3838b7321783"}, "downloads": -1, "filename": "taptaptap-1.1.2.tar.gz", "has_sig": true, "md5_digest": "45df1ab2d24e7c5ddd1bafb38215d8d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19096, "upload_time": "2014-06-08T01:07:20", "upload_time_iso_8601": "2014-06-08T01:07:20.975770Z", "url": "https://files.pythonhosted.org/packages/e3/c7/ec2a1bbd4b64c0903a750b4d89903f7b6cc2b27068b95149ee5c984cdd30/taptaptap-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "286d8461d61e648ddb707f349a2c4ce5", "sha256": "7f4d3af552a4f4ea48578459bc813de3b78ce69ac568dbfc5b4d8ccaeeea3b5f"}, "downloads": -1, "filename": "taptaptap-1.1.3.tar.gz", "has_sig": false, "md5_digest": "286d8461d61e648ddb707f349a2c4ce5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19266, "upload_time": "2014-08-11T22:06:02", "upload_time_iso_8601": "2014-08-11T22:06:02.367117Z", "url": "https://files.pythonhosted.org/packages/27/a8/b00ab6830d5bb1b65d07eada6b6868b8b366c21e0698463018e5e9d1177a/taptaptap-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "82951a4431fe0ebccfcdeeda8a9bc83f", "sha256": "4086b3fb23aeb7bd4785904a9724121666abe2cb5d9f3f38f59e7c2637a79d22"}, "downloads": -1, "filename": "taptaptap-1.2.0.tar.gz", "has_sig": true, "md5_digest": "82951a4431fe0ebccfcdeeda8a9bc83f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19896, "upload_time": "2018-07-03T11:41:16", "upload_time_iso_8601": "2018-07-03T11:41:16.896897Z", "url": "https://files.pythonhosted.org/packages/ac/64/d651a044eb1fc78532fa3a8f03bf025d2fe47d972c98664b6cc90eac8590/taptaptap-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "6b7bf87200d2e682e20a0abe478cdc50", "sha256": "42e5a8cd6af10fd00ad49009c62828187e9db28558ebc4c03f3855eab22b4ec2"}, "downloads": -1, "filename": "taptaptap-1.2.1.tar.gz", "has_sig": true, "md5_digest": "6b7bf87200d2e682e20a0abe478cdc50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19941, "upload_time": "2018-07-03T11:44:45", "upload_time_iso_8601": "2018-07-03T11:44:45.810074Z", "url": "https://files.pythonhosted.org/packages/12/46/dfe5aa44b92bb92f5ff714fa752eaa9d84d237cac26c84de3cc183c1149d/taptaptap-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b7bf87200d2e682e20a0abe478cdc50", "sha256": "42e5a8cd6af10fd00ad49009c62828187e9db28558ebc4c03f3855eab22b4ec2"}, "downloads": -1, "filename": "taptaptap-1.2.1.tar.gz", "has_sig": true, "md5_digest": "6b7bf87200d2e682e20a0abe478cdc50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19941, "upload_time": "2018-07-03T11:44:45", "upload_time_iso_8601": "2018-07-03T11:44:45.810074Z", "url": "https://files.pythonhosted.org/packages/12/46/dfe5aa44b92bb92f5ff714fa752eaa9d84d237cac26c84de3cc183c1149d/taptaptap-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:59 2020"}