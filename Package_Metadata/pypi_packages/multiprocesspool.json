{"info": {"author": "Astyan", "author_email": "aurelien.vezin@etu.unistra.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "MultiProcessPool\n=======================\n\nMultiProcessPool have for purpose to use all core of a processor.\nThe usual Pool is restrict by Python's Global Interpreter Lock (GIL).\n\nThis example of use:\n\n\ndef double(value):\n\n    return value * 2\n    \ndef queueop(value, vallistres):\n\n    vallistres.append(value)\n    \n    return vallistres\n    \nif __name__ == \"__main__\":\n    \n    pp = MultiProcessPool(double, [ i for i in range(0,100) ], queueop, [])\n    \n    print sorted(pp.run(4))\n    \n\nWill give a list of double value of the list in parameter.\n\nTo import it do:\n\nfrom multiprocesspool.multiprocesspool import MultiProcessPool", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/Astyan/processpool", "keywords": "multi,process,pool", "license": "CeCILL-B", "maintainer": null, "maintainer_email": null, "name": "multiprocesspool", "package_url": "https://pypi.org/project/multiprocesspool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/multiprocesspool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/Astyan/processpool"}, "release_url": "https://pypi.org/project/multiprocesspool/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Use multiples process to do operations on a list", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>MultiProcessPool have for purpose to use all core of a processor.\nThe usual Pool is restrict by Python\u2019s Global Interpreter Lock (GIL).</p>\n<p>This example of use:</p>\n<p>def double(value):</p>\n<blockquote>\nreturn value * 2</blockquote>\n<p>def queueop(value, vallistres):</p>\n<blockquote>\n<p>vallistres.append(value)</p>\n<p>return vallistres</p>\n</blockquote>\n<p>if __name__ == \u201c__main__\u201d:</p>\n<blockquote>\n<p>pp = MultiProcessPool(double, [ i for i in range(0,100) ], queueop, [])</p>\n<p>print sorted(pp.run(4))</p>\n</blockquote>\n<p>Will give a list of double value of the list in parameter.</p>\n<p>To import it do:</p>\n<p>from multiprocesspool.multiprocesspool import MultiProcessPool</p>\n\n          </div>"}, "last_serial": 1929285, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "af9a5e7a64c94d8954a9a74b8e042b02", "sha256": "db181f970bb6bcf4081afb4bc4b77c4f0ced58eb984d87014f3fa0292f7d503e"}, "downloads": -1, "filename": "multiprocesspool-0.0.1.tar.gz", "has_sig": false, "md5_digest": "af9a5e7a64c94d8954a9a74b8e042b02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3767, "upload_time": "2016-01-29T13:12:25", "upload_time_iso_8601": "2016-01-29T13:12:25.285166Z", "url": "https://files.pythonhosted.org/packages/f0/47/6be3ec3af3a862dd334722aa58f0ed6ecea0d287858ad98c65ccb4985bd3/multiprocesspool-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af9a5e7a64c94d8954a9a74b8e042b02", "sha256": "db181f970bb6bcf4081afb4bc4b77c4f0ced58eb984d87014f3fa0292f7d503e"}, "downloads": -1, "filename": "multiprocesspool-0.0.1.tar.gz", "has_sig": false, "md5_digest": "af9a5e7a64c94d8954a9a74b8e042b02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3767, "upload_time": "2016-01-29T13:12:25", "upload_time_iso_8601": "2016-01-29T13:12:25.285166Z", "url": "https://files.pythonhosted.org/packages/f0/47/6be3ec3af3a862dd334722aa58f0ed6ecea0d287858ad98c65ccb4985bd3/multiprocesspool-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:21 2020"}