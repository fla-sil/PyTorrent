{"info": {"author": "Riccardo Di Maio", "author_email": "riccardodimaio11@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Text Processing", "Topic :: Utilities"], "description": "<div align=\"center\">\n&nbsp;&nbsp;\n  <a href=\"https://github.com/rdimaio/parsa\">\n    <img src=\"parsa/img/logo.png?raw=true\" alt=\"Logo\"/>\n  </a>\n\n  <strong>A text parser that doesn't care about your file extensions</strong>\n\n  <!-- Build Status -->\n  <a href=\"https://travis-ci.com/rdimaio/parsa\">\n    <img src=\"https://travis-ci.com/rdimaio/parsa.svg?branch=master\"\n      alt=\"Build Status\" />\n  </a>\n  <!-- Code Coverage -->\n  <a href=\"https://codecov.io/gh/rdimaio/parsa\">\n    <img src=\"https://codecov.io/gh/rdimaio/parsa/branch/master/graph/badge.svg\"\n      alt=\"Code Coverage\" />\n  </a>\n  <!-- SemVer Version -->\n  <a href=\"https://github.com/rdimaio/parsa\">\n    <img src=\"https://img.shields.io/badge/Version-1.1.5-blue.svg\"\n      alt=\"SemVer Version\" />\n  </a>\n\n  <a href=\"#key-features\">Key Features</a> \u2022\n  <a href=\"#supported-formats\">Supported Formats</a> \u2022\n  <a href=\"#installation\">Installation</a> \u2022\n  <a href=\"#usage\">Usage</a> \u2022\n  <a href=\"#related-projects\">Related projects</a> \u2022\n  <a href=\"#contributing\">Contributing</a> \u2022\n  <a href=\"#license\">MIT License</a>\n</div>\n\n![Demo GIF](parsa/img/demo.gif?raw=true \"Demo GIF\")\n\n<p style=\"text-align: center;\">\n  <strong>\n    Parsa is a <a href=\"https://github.com/deanmalmgren/textract\">textract</a>-based CLI text parser that supports multiple file extensions.\n    It takes any number of inputs, and outputs them to .txt files in a directory of choice, preserving the structure of the original text.\n  </strong>\n</p>\n\n# Key features\n- Extends [textract](https://github.com/deanmalmgren/textract)'s functionalities to work with multiple inputs and to automatically save the output\n- Takes an arbitrary number of inputs of different filetypes, and processess them all equally when supported\n- Outputs the parsed text from the input files individually to corresponding .txt files, with the option of selecting a custom output path\n- Includes a naming system that always avoids overwriting existing files, instead naming new files in a simple manner\n- Supports over 20 of the most common formats (see [Supported formats](#supported-formats) for more)\n- Preserves the structure of document file formats (.docx, .pdf, ...)\n- Supports audio formats (.wav, .mp3, ...) via the speech recognition tools [sox](https://github.com/chirlu/sox), [SpeechRecognition](https://github.com/Uberi/speech_recognition) and [pocketsphinx](https://github.com/cmusphinx/pocketsphinx/)\n- Supports image formats (.jpg, .png, ...), via the optical character recognition (OCR) tool [tesseract-ocr](https://github.com/tesseract-ocr/tesseract)\n- Prompts the user for an input file's extension if it's not explicitly present; this feature can be turned off via `--noprompt`\n\n# Supported formats\nSee [this page](https://textract.readthedocs.io/en/stable/#currently-supporting) from textract's documentation for a full list of the supported formats and their linked dependencies.\n\n# Installation\n## System requirements\n- Linux\n- Python 2.7/3.x (any Python 3 version)\n## Linux\nVia `pip`:\n```bash\n$ pip install parsa\n```\n\nOr, if you prefer, you can install it from source:\n```bash\n# Clone the repository\n$ git clone https://github.com/rdimaio/parsa\n\n# Go into the parsa folder\n$ cd parsa\n\n# Install parsa\n$ python setup.py install\n```\n\n### Tests\n```bash\n$ python -m unittest discover tests\n```\n\n# Usage\n## Single input\n```bash\n# Basic usage\n$ parsa path/to/input_file\n# The output will be saved inside the input file's parent folder.\n```\n\n## Multi input\n```bash\n# Basic usage\n$ parsa path/to/input_folder\n# The output will be saved inside a folder named `parsaoutput` in the input folder.\n```\n\n### Optional: custom output folder\n```bash\n# Basic usage\n$ parsa path/to/input -o path/to/output_folder\n# Works with both single and multi input.\n```\n\n### Optional: ignore files without an explicit extension\n```bash\n# Basic usage\n$ parsa --noprompt path/to/input\n# Useful for situations where your input includes log/system files without an extension.\n```\n\n## Full help message\n```\n$ parsa --help\nusage: parsa [-h] [--noprompt] [--output [OUTPUT]] input\n\nTextract-based text parser that supports most text file extensions. Parsa can\nparse multiple formats at once, writing them to .txt files in the directory of\nchoice.\n\npositional arguments:\n  input                 input file or folder; if a folder is passed as input,\n                        parsa will scan every file inside it recursively\n                        (scanning subfolders as well)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --noprompt, -n        ignore files without an extension and don't prompt the\n                        user to input their extension\n  --output [OUTPUT], -o [OUTPUT]\n                        folder where the output files will be stored. The default folder is:\n                        (a) the input file's parent folder, if the input is a file, or\n                        (b) a folder named 'parsaoutput' located in the input folder, if the input is a folder.\n```\n\n# Related projects\n- [parsa-gui](https://github.com/rdimaio/parsa-gui) - Graphical version of parsa (WIP)\n- [xparsa](https://github.com/rdimaio/xparsa) - Extended parsa, enhanced with statistics about the parsed files (WIP)\n- [xparsa-gui](https://github.com/rdimaio/xparsa-gui) - GUI for xparsa (WIP)\n\n# Contributing\nPull requests are welcome! If you would like to include/remove/change a major feature, please open an issue first.\n\n# License\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rdimaio/parsa", "keywords": "parsa", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "parsa", "package_url": "https://pypi.org/project/parsa/", "platform": "", "project_url": "https://pypi.org/project/parsa/", "project_urls": {"Homepage": "http://github.com/rdimaio/parsa"}, "release_url": "https://pypi.org/project/parsa/1.1.5/", "requires_dist": null, "requires_python": "", "summary": "A multiformat text parser", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n\u00a0\u00a0\n  <a href=\"https://github.com/rdimaio/parsa\" rel=\"nofollow\">\n    <img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9060b82100145802d1bb6b869b96542ff3ae1c63/70617273612f696d672f6c6f676f2e706e673f7261773d74727565\">\n  </a>\n<p><strong>A text parser that doesn't care about your file extensions</strong></p>\n  \n  <a href=\"https://travis-ci.com/rdimaio/parsa\" rel=\"nofollow\">\n    <img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f471a59885b2367830f577707b785197c51e8a6/68747470733a2f2f7472617669732d63692e636f6d2f7264696d61696f2f70617273612e7376673f6272616e63683d6d6173746572\">\n  </a>\n  \n  <a href=\"https://codecov.io/gh/rdimaio/parsa\" rel=\"nofollow\">\n    <img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/223fdf04f14b7d977934cae37fc0412a8bc319df/68747470733a2f2f636f6465636f762e696f2f67682f7264696d61696f2f70617273612f6272616e63682f6d61737465722f67726170682f62616467652e737667\">\n  </a>\n  \n  <a href=\"https://github.com/rdimaio/parsa\" rel=\"nofollow\">\n    <img alt=\"SemVer Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df90dd82f7d30ad38be1eacaa5abdf3c9fafef60/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f56657273696f6e2d312e312e352d626c75652e737667\">\n  </a>\n<p><a href=\"#key-features\" rel=\"nofollow\">Key Features</a> \u2022\n<a href=\"#supported-formats\" rel=\"nofollow\">Supported Formats</a> \u2022\n<a href=\"#installation\" rel=\"nofollow\">Installation</a> \u2022\n<a href=\"#usage\" rel=\"nofollow\">Usage</a> \u2022\n<a href=\"#related-projects\" rel=\"nofollow\">Related projects</a> \u2022\n<a href=\"#contributing\" rel=\"nofollow\">Contributing</a> \u2022\n<a href=\"#license\" rel=\"nofollow\">MIT License</a></p>\n</div>\n<p><img alt=\"Demo GIF\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efcebbd815af615a4ab8b88d3bda729eae03c7c6/70617273612f696d672f64656d6f2e6769663f7261773d74727565\"></p>\n<p>\n  <strong>\n    Parsa is a <a href=\"https://github.com/deanmalmgren/textract\" rel=\"nofollow\">textract</a>-based CLI text parser that supports multiple file extensions.\n    It takes any number of inputs, and outputs them to .txt files in a directory of choice, preserving the structure of the original text.\n  </strong>\n</p>\n<h1>Key features</h1>\n<ul>\n<li>Extends <a href=\"https://github.com/deanmalmgren/textract\" rel=\"nofollow\">textract</a>'s functionalities to work with multiple inputs and to automatically save the output</li>\n<li>Takes an arbitrary number of inputs of different filetypes, and processess them all equally when supported</li>\n<li>Outputs the parsed text from the input files individually to corresponding .txt files, with the option of selecting a custom output path</li>\n<li>Includes a naming system that always avoids overwriting existing files, instead naming new files in a simple manner</li>\n<li>Supports over 20 of the most common formats (see <a href=\"#supported-formats\" rel=\"nofollow\">Supported formats</a> for more)</li>\n<li>Preserves the structure of document file formats (.docx, .pdf, ...)</li>\n<li>Supports audio formats (.wav, .mp3, ...) via the speech recognition tools <a href=\"https://github.com/chirlu/sox\" rel=\"nofollow\">sox</a>, <a href=\"https://github.com/Uberi/speech_recognition\" rel=\"nofollow\">SpeechRecognition</a> and <a href=\"https://github.com/cmusphinx/pocketsphinx/\" rel=\"nofollow\">pocketsphinx</a></li>\n<li>Supports image formats (.jpg, .png, ...), via the optical character recognition (OCR) tool <a href=\"https://github.com/tesseract-ocr/tesseract\" rel=\"nofollow\">tesseract-ocr</a></li>\n<li>Prompts the user for an input file's extension if it's not explicitly present; this feature can be turned off via <code>--noprompt</code></li>\n</ul>\n<h1>Supported formats</h1>\n<p>See <a href=\"https://textract.readthedocs.io/en/stable/#currently-supporting\" rel=\"nofollow\">this page</a> from textract's documentation for a full list of the supported formats and their linked dependencies.</p>\n<h1>Installation</h1>\n<h2>System requirements</h2>\n<ul>\n<li>Linux</li>\n<li>Python 2.7/3.x (any Python 3 version)</li>\n</ul>\n<h2>Linux</h2>\n<p>Via <code>pip</code>:</p>\n<pre>$ pip install parsa\n</pre>\n<p>Or, if you prefer, you can install it from source:</p>\n<pre><span class=\"c1\"># Clone the repository</span>\n$ git clone https://github.com/rdimaio/parsa\n\n<span class=\"c1\"># Go into the parsa folder</span>\n$ <span class=\"nb\">cd</span> parsa\n\n<span class=\"c1\"># Install parsa</span>\n$ python setup.py install\n</pre>\n<h3>Tests</h3>\n<pre>$ python -m unittest discover tests\n</pre>\n<h1>Usage</h1>\n<h2>Single input</h2>\n<pre><span class=\"c1\"># Basic usage</span>\n$ parsa path/to/input_file\n<span class=\"c1\"># The output will be saved inside the input file's parent folder.</span>\n</pre>\n<h2>Multi input</h2>\n<pre><span class=\"c1\"># Basic usage</span>\n$ parsa path/to/input_folder\n<span class=\"c1\"># The output will be saved inside a folder named `parsaoutput` in the input folder.</span>\n</pre>\n<h3>Optional: custom output folder</h3>\n<pre><span class=\"c1\"># Basic usage</span>\n$ parsa path/to/input -o path/to/output_folder\n<span class=\"c1\"># Works with both single and multi input.</span>\n</pre>\n<h3>Optional: ignore files without an explicit extension</h3>\n<pre><span class=\"c1\"># Basic usage</span>\n$ parsa --noprompt path/to/input\n<span class=\"c1\"># Useful for situations where your input includes log/system files without an extension.</span>\n</pre>\n<h2>Full help message</h2>\n<pre><code>$ parsa --help\nusage: parsa [-h] [--noprompt] [--output [OUTPUT]] input\n\nTextract-based text parser that supports most text file extensions. Parsa can\nparse multiple formats at once, writing them to .txt files in the directory of\nchoice.\n\npositional arguments:\n  input                 input file or folder; if a folder is passed as input,\n                        parsa will scan every file inside it recursively\n                        (scanning subfolders as well)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --noprompt, -n        ignore files without an extension and don't prompt the\n                        user to input their extension\n  --output [OUTPUT], -o [OUTPUT]\n                        folder where the output files will be stored. The default folder is:\n                        (a) the input file's parent folder, if the input is a file, or\n                        (b) a folder named 'parsaoutput' located in the input folder, if the input is a folder.\n</code></pre>\n<h1>Related projects</h1>\n<ul>\n<li><a href=\"https://github.com/rdimaio/parsa-gui\" rel=\"nofollow\">parsa-gui</a> - Graphical version of parsa (WIP)</li>\n<li><a href=\"https://github.com/rdimaio/xparsa\" rel=\"nofollow\">xparsa</a> - Extended parsa, enhanced with statistics about the parsed files (WIP)</li>\n<li><a href=\"https://github.com/rdimaio/xparsa-gui\" rel=\"nofollow\">xparsa-gui</a> - GUI for xparsa (WIP)</li>\n</ul>\n<h1>Contributing</h1>\n<p>Pull requests are welcome! If you would like to include/remove/change a major feature, please open an issue first.</p>\n<h1>License</h1>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n\n          </div>"}, "last_serial": 4613030, "releases": {"1.1.5": [{"comment_text": "", "digests": {"md5": "26065fb2f539792912bb6beadf2c84f9", "sha256": "443f77b3ca810d4faadad70d03a2d68b3b1928076fdcb27547e7458a2620ae07"}, "downloads": -1, "filename": "parsa-1.1.5.tar.gz", "has_sig": false, "md5_digest": "26065fb2f539792912bb6beadf2c84f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7211, "upload_time": "2018-12-18T17:06:29", "upload_time_iso_8601": "2018-12-18T17:06:29.232065Z", "url": "https://files.pythonhosted.org/packages/c8/ec/2ef5d03b49665f10109934bbf095178ec6728c3a77700d4ab3f89f2a85b8/parsa-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26065fb2f539792912bb6beadf2c84f9", "sha256": "443f77b3ca810d4faadad70d03a2d68b3b1928076fdcb27547e7458a2620ae07"}, "downloads": -1, "filename": "parsa-1.1.5.tar.gz", "has_sig": false, "md5_digest": "26065fb2f539792912bb6beadf2c84f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7211, "upload_time": "2018-12-18T17:06:29", "upload_time_iso_8601": "2018-12-18T17:06:29.232065Z", "url": "https://files.pythonhosted.org/packages/c8/ec/2ef5d03b49665f10109934bbf095178ec6728c3a77700d4ab3f89f2a85b8/parsa-1.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:23 2020"}