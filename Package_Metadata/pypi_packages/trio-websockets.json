{"info": {"author": "Michael Elsdorfer", "author_email": "michael@elsdorfer.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "trio-websockets\n===============\n\n|rtd| |pypi-v| |pypi-pyversions| |pypi-l| |pypi-wheel|\n\n.. |rtd| image:: https://readthedocs.org/projects/trio-websockets/badge/?version=latest\n   :target: https://trio-websockets.readthedocs.io/\n\n.. |pypi-v| image:: https://img.shields.io/pypi/v/trio-websockets.svg\n    :target: https://pypi.python.org/pypi/trio-websockets\n\n.. |pypi-pyversions| image:: https://img.shields.io/pypi/pyversions/trio-websockets.svg\n    :target: https://pypi.python.org/pypi/trio-websockets\n\n.. |pypi-l| image:: https://img.shields.io/pypi/l/websockets.svg\n    :target: https://pypi.python.org/pypi/trio-websockets\n\n.. |pypi-wheel| image:: https://img.shields.io/pypi/wheel/trio-websockets.svg\n    :target: https://pypi.python.org/pypi/trio-websockets\n\n\nWhat is ``trio-websockets``?\n----------------------------\n\n``trio-websockets`` is a library for building WebSocket servers_ and clients_ in\nPython, based on ``trio``, an asynchronous I/O framework.\n\n.. _servers: https://github.com/miracle2k/trio-websockets/blob/master/example/server.py\n.. _clients: https://github.com/miracle2k/trio-websockets/blob/master/example/client.py\n\n\n**Currently a work in progress**. The status is:\n\n- The client-side works.\n- The server-side does not.\n\n\nHistory of the library\n----------------------\n\nThe code is originally forked from aaugustin's websockets_ library for asyncio,\nwith the following changes:\n\n- Rip out all asyncio things, replace with trio.\n- Rip out the websocket protocol code, replace with wsproto.\n\n.. _websockets: https://github.com/aaugustin/websockets\n\nWhat remains of the original websockets library itself?\n\n- Most of the remaining code seems to be additional error checking around connection\n  state. Rather than a \"trio.BrokenStreamError\", you will receive a ConnectionClosed\n  exception when trying to write on a closed connection.\n\n- The same/very similar interface to websockets, which might be slightly more\n  user-friendly than a raw wsproto connection (say, exposing attributes like .subprotocol,\n  which wsproto passes along during the ConnectionEstablished event).\n\n\nTODO\n----\n\n- Port the server-side.\n- Make the examples run.\n- Make the tests run.\n- Support for curio.\n- Cleanup documentation and readme.\n- Experiment with a different architecture, using reader/writer tasks.\n\n\nHow to use it\n-------------\n\nHere's a client that says \"Hello world!\":\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import trio\n    import trio_websockets\n\n    async def hello(uri):\n        async with trio_websockets.connect(uri) as websocket:\n            await websocket.send(\"Hello world!\")\n\n    trio.run(hello, 'ws://localhost:8765')\n\nAnd here's an echo server (for Python \u2265 3.6):\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import trio\n    import trio_websockets\n\n    async def echo(websocket, path):\n        async for message in websocket:\n            await websocket.send(message)\n\n    trio.run(trio_websockets.serve, echo, 'localhost', 8765)\n\nDoes that look good? `Start here`_.\n\n.. _Start here: https://trio-websockets.readthedocs.io/en/stable/intro.html\n\n\nWhat else?\n----------\n\nBug reports, patches and suggestions welcome! Just open an issue_ or send a\n`pull request`_.\n\n.. _issue: https://github.com/miracle2k/trio-websockets/issues/new\n.. _pull request: https://github.com/miracle2k/trio-websockets/compare/\n\n``trio-websockets`` is released under the `BSD license`_.\n\n.. _BSD license: https://trio-websockets.readthedocs.io/en/stable/license.html\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miracle2k/trio-websockets", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "trio-websockets", "package_url": "https://pypi.org/project/trio-websockets/", "platform": "", "project_url": "https://pypi.org/project/trio-websockets/", "project_urls": {"Homepage": "https://github.com/miracle2k/trio-websockets"}, "release_url": "https://pypi.org/project/trio-websockets/0.2/", "requires_dist": null, "requires_python": "", "summary": "An implementation of the WebSocket Protocol (RFC 6455 & 7692)", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://trio-websockets.readthedocs.io/\" rel=\"nofollow\"><img alt=\"rtd\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bb1b8e26eb487f58e0e04604ae41f9964fadeae/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7472696f2d776562736f636b6574732f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pypi.python.org/pypi/trio-websockets\" rel=\"nofollow\"><img alt=\"pypi-v\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f518e9e6f624b8f1a6e8e7b4bb9ac53351749f94/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7472696f2d776562736f636b6574732e737667\"></a> <a href=\"https://pypi.python.org/pypi/trio-websockets\" rel=\"nofollow\"><img alt=\"pypi-pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14e7da9e2f4b1ab6ba64746d1485c88220cf1619/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7472696f2d776562736f636b6574732e737667\"></a> <a href=\"https://pypi.python.org/pypi/trio-websockets\" rel=\"nofollow\"><img alt=\"pypi-l\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9db9746438a8abea2e0ea4076ac89d20c467ee89/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f776562736f636b6574732e737667\"></a> <a href=\"https://pypi.python.org/pypi/trio-websockets\" rel=\"nofollow\"><img alt=\"pypi-wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b59c82c258613091d9159293580aed0c0cf04610/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f7472696f2d776562736f636b6574732e737667\"></a></p>\n<div id=\"what-is-trio-websockets\">\n<h2>What is <tt><span class=\"pre\">trio-websockets</span></tt>?</h2>\n<p><tt><span class=\"pre\">trio-websockets</span></tt> is a library for building WebSocket <a href=\"https://github.com/miracle2k/trio-websockets/blob/master/example/server.py\" rel=\"nofollow\">servers</a> and <a href=\"https://github.com/miracle2k/trio-websockets/blob/master/example/client.py\" rel=\"nofollow\">clients</a> in\nPython, based on <tt>trio</tt>, an asynchronous I/O framework.</p>\n<p><strong>Currently a work in progress</strong>. The status is:</p>\n<ul>\n<li>The client-side works.</li>\n<li>The server-side does not.</li>\n</ul>\n</div>\n<div id=\"history-of-the-library\">\n<h2>History of the library</h2>\n<p>The code is originally forked from aaugustin\u2019s <a href=\"https://github.com/aaugustin/websockets\" rel=\"nofollow\">websockets</a> library for asyncio,\nwith the following changes:</p>\n<ul>\n<li>Rip out all asyncio things, replace with trio.</li>\n<li>Rip out the websocket protocol code, replace with wsproto.</li>\n</ul>\n<p>What remains of the original websockets library itself?</p>\n<ul>\n<li>Most of the remaining code seems to be additional error checking around connection\nstate. Rather than a \u201ctrio.BrokenStreamError\u201d, you will receive a ConnectionClosed\nexception when trying to write on a closed connection.</li>\n<li>The same/very similar interface to websockets, which might be slightly more\nuser-friendly than a raw wsproto connection (say, exposing attributes like .subprotocol,\nwhich wsproto passes along during the ConnectionEstablished event).</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Port the server-side.</li>\n<li>Make the examples run.</li>\n<li>Make the tests run.</li>\n<li>Support for curio.</li>\n<li>Cleanup documentation and readme.</li>\n<li>Experiment with a different architecture, using reader/writer tasks.</li>\n</ul>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<p>Here\u2019s a client that says \u201cHello world!\u201d:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">trio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">trio_websockets</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">trio_websockets</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">websocket</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"Hello world!\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">trio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">hello</span><span class=\"p\">,</span> <span class=\"s1\">'ws://localhost:8765'</span><span class=\"p\">)</span>\n</pre>\n<p>And here\u2019s an echo server (for Python \u2265 3.6):</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">trio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">trio_websockets</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">echo</span><span class=\"p\">(</span><span class=\"n\">websocket</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">websocket</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"n\">trio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">trio_websockets</span><span class=\"o\">.</span><span class=\"n\">serve</span><span class=\"p\">,</span> <span class=\"n\">echo</span><span class=\"p\">,</span> <span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8765</span><span class=\"p\">)</span>\n</pre>\n<p>Does that look good? <a href=\"https://trio-websockets.readthedocs.io/en/stable/intro.html\" rel=\"nofollow\">Start here</a>.</p>\n</div>\n<div id=\"what-else\">\n<h2>What else?</h2>\n<p>Bug reports, patches and suggestions welcome! Just open an <a href=\"https://github.com/miracle2k/trio-websockets/issues/new\" rel=\"nofollow\">issue</a> or send a\n<a href=\"https://github.com/miracle2k/trio-websockets/compare/\" rel=\"nofollow\">pull request</a>.</p>\n<p><tt><span class=\"pre\">trio-websockets</span></tt> is released under the <a href=\"https://trio-websockets.readthedocs.io/en/stable/license.html\" rel=\"nofollow\">BSD license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4222159, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "443f8d9a37a289fc7ffae063375e4d03", "sha256": "7f90c5caa7667abe7a4917c20225b2be5dd4411a2b8a572b2281fb986fcd6e02"}, "downloads": -1, "filename": "trio-websockets-0.1.tar.gz", "has_sig": false, "md5_digest": "443f8d9a37a289fc7ffae063375e4d03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34724, "upload_time": "2018-08-22T11:32:30", "upload_time_iso_8601": "2018-08-22T11:32:30.280203Z", "url": "https://files.pythonhosted.org/packages/f2/86/2d2abb960ca0e6ad84378b595de30c9dc54cfc63cdaebb50fe36c8ec2231/trio-websockets-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3d9f25cc6614c7449efc0c44a7bb8d91", "sha256": "8107e7dc42581c4c01c189a3f58b789f208dbce647e44d6f6caff343e2bd5081"}, "downloads": -1, "filename": "trio-websockets-0.2.tar.gz", "has_sig": false, "md5_digest": "3d9f25cc6614c7449efc0c44a7bb8d91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34691, "upload_time": "2018-08-30T11:01:25", "upload_time_iso_8601": "2018-08-30T11:01:25.752229Z", "url": "https://files.pythonhosted.org/packages/a0/88/31c24c23c9be0c4a4a17c55a8369e8ee37390b8608bf0e0262131d38e792/trio-websockets-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d9f25cc6614c7449efc0c44a7bb8d91", "sha256": "8107e7dc42581c4c01c189a3f58b789f208dbce647e44d6f6caff343e2bd5081"}, "downloads": -1, "filename": "trio-websockets-0.2.tar.gz", "has_sig": false, "md5_digest": "3d9f25cc6614c7449efc0c44a7bb8d91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34691, "upload_time": "2018-08-30T11:01:25", "upload_time_iso_8601": "2018-08-30T11:01:25.752229Z", "url": "https://files.pythonhosted.org/packages/a0/88/31c24c23c9be0c4a4a17c55a8369e8ee37390b8608bf0e0262131d38e792/trio-websockets-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:03 2020"}