{"info": {"author": "Roy Hyunjin Han, Halil Ozercan", "author_email": "halilozercan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": ".. image:: https://travis-ci.org/invisibleroads/socketIO-client.svg?branch=master\n    :target: https://travis-ci.org/invisibleroads/socketIO-client\n\n\nsocketIO-client\n===============\nHere is a `socket.io <http://socket.io>`_ client library for Python.  You can use it to write test code for your socket.io server.\n\nPlease note that this version implements `socket.io protocol 1.x <https://github.com/automattic/socket.io-protocol>`_, which is not backwards compatible.  If you want to communicate using `socket.io protocol 0.9 <https://github.com/learnboost/socket.io-spec>`_ (which is compatible with `gevent-socketio <https://github.com/abourget/gevent-socketio>`_), please use `socketIO-client 0.5.7.2 <https://pypi.python.org/pypi/socketIO-client/0.5.7.2>`_.\n\n\nInstallation\n------------\nInstall the package in an isolated environment. ::\n\n    VIRTUAL_ENV=$HOME/.virtualenv\n\n    # Prepare isolated environment\n    virtualenv $VIRTUAL_ENV\n\n    # Activate isolated environment\n    source $VIRTUAL_ENV/bin/activate\n\n    # Install package\n    pip install -U socketIO-client\n\n\nUsage\n-----\nActivate isolated environment. ::\n\n    VIRTUAL_ENV=$HOME/.virtualenv\n    source $VIRTUAL_ENV/bin/activate\n\nLaunch your socket.io server. ::\n\n    cd $(python -c \"import os, socketIO_client;\\\n        print(os.path.dirname(socketIO_client.__file__))\")\n\n    DEBUG=* node tests/serve.js  # Start socket.io server in terminal one\n    DEBUG=* node tests/proxy.js  # Start proxy server in terminal two\n    nosetests                    # Run tests in terminal three\n\nFor debugging information, run these commands first. ::\n\n    import logging\n    logging.getLogger('socketIO-client').setLevel(logging.DEBUG)\n    logging.basicConfig()\n\nEmit. ::\n\n    from socketIO_client import SocketIO, LoggingNamespace\n\n    with SocketIO('127.0.0.1', 8000, LoggingNamespace) as socketIO:\n        socketIO.emit('aaa')\n        socketIO.wait(seconds=1)\n\nEmit with callback. ::\n\n    from socketIO_client import SocketIO, LoggingNamespace\n\n    def on_bbb_response(*args):\n        print('on_bbb_response', args)\n\n    with SocketIO('127.0.0.1', 8000, LoggingNamespace) as socketIO:\n        socketIO.emit('bbb', {'xxx': 'yyy'}, on_bbb_response)\n        socketIO.wait_for_callbacks(seconds=1)\n\nDefine events. ::\n\n    from socketIO_client import SocketIO, LoggingNamespace\n\n    def on_connect():\n        print('connect')\n\n    def on_disconnect():\n        print('disconnect')\n\n    def on_reconnect():\n        print('reconnect')\n\n    def on_aaa_response(*args):\n        print('on_aaa_response', args)\n\n    socketIO = SocketIO('127.0.0.1', 8000, LoggingNamespace)\n    socketIO.on('connect', on_connect)\n    socketIO.on('disconnect', on_disconnect)\n    socketIO.on('reconnect', on_reconnect)\n\n    # Listen\n    socketIO.on('aaa_response', on_aaa_response)\n    socketIO.emit('aaa')\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n\n    # Stop listening\n    socketIO.off('aaa_response')\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n\n    # Listen only once\n    socketIO.once('aaa_response', on_aaa_response)\n    socketIO.emit('aaa')  # Activate aaa_response\n    socketIO.emit('aaa')  # Ignore\n    socketIO.wait(seconds=1)\n\nDefine events in a namespace. ::\n\n    from socketIO_client import SocketIO, BaseNamespace\n\n    class Namespace(BaseNamespace):\n\n        def on_aaa_response(self, *args):\n            print('on_aaa_response', args)\n            self.emit('bbb')\n\n    socketIO = SocketIO('127.0.0.1', 8000, Namespace)\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n\nDefine standard events. ::\n\n    from socketIO_client import SocketIO, BaseNamespace\n\n    class Namespace(BaseNamespace):\n\n        def on_connect(self):\n            print('[Connected]')\n\n        def on_reconnect(self):\n            print('[Reconnected]')\n\n        def on_disconnect(self):\n            print('[Disconnected]')\n\n    socketIO = SocketIO('127.0.0.1', 8000, Namespace)\n    socketIO.wait(seconds=1)\n\nDefine different namespaces on a single socket. ::\n\n    from socketIO_client import SocketIO, BaseNamespace\n\n    class ChatNamespace(BaseNamespace):\n\n        def on_aaa_response(self, *args):\n            print('on_aaa_response', args)\n\n    class NewsNamespace(BaseNamespace):\n\n        def on_aaa_response(self, *args):\n            print('on_aaa_response', args)\n\n    socketIO = SocketIO('127.0.0.1', 8000)\n    chat_namespace = socketIO.define(ChatNamespace, '/chat')\n    news_namespace = socketIO.define(NewsNamespace, '/news')\n\n    chat_namespace.emit('aaa')\n    news_namespace.emit('aaa')\n    socketIO.wait(seconds=1)\n\nConnect via SSL (https://github.com/invisibleroads/socketIO-client/issues/54). ::\n\n    from socketIO_client import SocketIO\n\n    # Skip server certificate verification\n    SocketIO('https://127.0.0.1', verify=False)\n    # Verify the server certificate\n    SocketIO('https://127.0.0.1', verify='server.crt')\n    # Verify the server certificate and encrypt using client certificate\n    socketIO = SocketIO('https://127.0.0.1', verify='server.crt', cert=(\n        'client.crt', 'client.key'))\n\nSpecify params, headers, cookies, proxies thanks to the `requests <http://python-requests.org>`_ library. ::\n\n    from socketIO_client import SocketIO\n    from base64 import b64encode\n\n    SocketIO(\n        '127.0.0.1', 8000,\n        params={'q': 'qqq'},\n        headers={'Authorization': 'Basic ' + b64encode('username:password')},\n        cookies={'a': 'aaa'},\n        proxies={'https': 'https://proxy.example.com:8080'})\n\nWait forever. ::\n\n    from socketIO_client import SocketIO\n\n    socketIO = SocketIO('127.0.0.1', 8000)\n    socketIO.wait()\n\nDon't wait forever. ::\n\n    from requests.exceptions import ConnectionError\n    from socketIO_client import SocketIO\n\n    try:\n        socket = SocketIO('127.0.0.1', 8000, wait_for_connection=False)\n        socket.wait()\n    except ConnectionError:\n        print('The server is down. Try again later.')\n\n\nLicense\n-------\nThis software is available under the MIT License.\n\n\nCredits\n-------\n- `Guillermo Rauch <https://github.com/rauchg>`_ wrote the `socket.io specification <https://github.com/automattic/socket.io-protocol>`_.\n- `Hiroki Ohtani <https://github.com/liris>`_ wrote `websocket-client <https://github.com/liris/websocket-client>`_.\n- `Roderick Hodgson <https://github.com/roderickhodgson>`_ wrote a `prototype for a Python client to a socket.io server <http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client>`_.\n- `Alexandre Bourget <https://github.com/abourget>`_ wrote `gevent-socketio <https://github.com/abourget/gevent-socketio>`_, which is a socket.io server written in Python.\n- `Paul Kienzle <https://github.com/pkienzle>`_, `Zac Lee <https://github.com/zratic>`_, `Josh VanderLinden <https://github.com/codekoala>`_, `Ian Fitzpatrick <https://github.com/ifitzpatrick>`_, `Lucas Klein <https://github.com/lukasklein>`_, `Rui Chicoria <https://github.com/rchicoria>`_, `Travis Odom <https://github.com/burstaholic>`_, `Patrick Huber <https://github.com/stackmagic>`_, `Brad Campbell <https://github.com/bradjc>`_, `Daniel <https://github.com/dabidan>`_, `Sean Arietta <https://github.com/sarietta>`_, `Sacha Stafyniak <https://github.com/stafyniaksacha>`_ submitted code to expand support of the socket.io protocol.\n- `Bernard Pratz <https://github.com/guyzmo>`_, `Francis Bull <https://github.com/franbull>`_ wrote prototypes to support xhr-polling and jsonp-polling.\n- `Joe Palmer <https://github.com/softforge>`_ sponsored development.\n- `Eric Chen <https://github.com/taiyangc>`_, `Denis Zinevich <https://github.com/dzinevich>`_, `Thiago Hersan <https://github.com/thiagohersan>`_, `Nayef Copty <https://github.com/nayefc>`_, `J\u00f6rgen Karlsson <https://github.com/jorgen-k>`_, `Branden Ghena <https://github.com/brghena>`_, `Tim Landscheidt <https://github.com/scfc>`_, `Matt Porritt <https://github.com/mattporritt>`_, `Matt Dainty <https://github.com/bodgit>`_, `Thomaz de Oliveira dos Reis <https://github.com/thor27>`_, `Felix K\u00f6nig <https://github.com/Felk>`_, `George Wilson <https://github.com/wilsonge>`_, `Andreas Strikos <https://github.com/astrikos>`_, `Alessio Sergi <https://github.com/asergi>`_ `Claudio Yacarini <https://github.com/cyacarinic>`_, `Khairi Hafsham <https://github.com/khairihafsham>`_, `Robbie Clarken <https://github.com/RobbieClarken>`_ suggested ways to make the connection more robust.\n- `Merlijn van Deen <https://github.com/valhallasw>`_, `Frederic Sureau <https://github.com/fredericsureau>`_, `Marcus Cobden <https://github.com/leth>`_, `Drew Hutchison <https://github.com/drewhutchison>`_, `wuurrd <https://github.com/wuurrd>`_, `Adam Kecer <https://github.com/amfg>`_, `Alex Monk <https://github.com/Krenair>`_, `Vishal P R <https://github.com/vishalwy>`_, `John Vandenberg <https://github.com/jayvdb>`_, `Thomas Grainger <https://github.com/graingert>`_, `Daniel Quinn <https://github.com/danielquinn>`_, `Adric Worley <https://github.com/AdricEpic>`_, `Adam Roses Wight <https://github.com/adamwight>`_, `Jan V\u010del\u00e1k <https://github.com/fcelda>`_ proposed changes that make the library more friendly and practical for you!\n\n\n0.7\n---\n- Fixed thread cleanup\n- Fixed disconnect detection if defined directly thanks to Andreas Strikos\n- Fixed support for unicode payloads\n\n0.6\n---\n- Upgraded to socket.io protocol 1.x thanks to Sean Arietta and Joe Palmer\n- Fixed support for Python 3\n- Fixed SSL support\n- Added locks to fix concurrency issues with polling transport\n- Added SocketIO.off() and SocketIO.once()\n\n0.5\n---\n- Added support for Python 3\n- Added support for jsonp-polling thanks to Bernard Pratz\n- Added support for xhr-polling thanks to Francis Bull\n- Added support for query params and cookies\n- Fixed sending acknowledgments in custom namespaces thanks to Travis Odom\n- Rewrote library to use coroutines instead of threads to save memory\n\n0.4\n---\n- Added support for custom headers and proxies thanks to Rui and Sajal\n- Added support for server-side callbacks thanks to Zac Lee\n- Merged Channel functionality into BaseNamespace thanks to Alexandre Bourget\n\n0.3\n---\n- Added support for secure connections\n- Added SocketIO.wait()\n- Improved exception handling in _RhythmicThread and _ListenerThread\n\n0.2\n---\n- Added support for callbacks and channels thanks to Paul Kienzle\n- Incorporated suggestions from Josh VanderLinden and Ian Fitzpatrick\n\n0.1\n---\n- Wrapped `code from StackOverflow <http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client>`_\n- Added exception handling to destructor in case of connection failure\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/halilozercan/py-socketio-client", "keywords": "socket.io node.js", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-socketio-client", "package_url": "https://pypi.org/project/py-socketio-client/", "platform": "", "project_url": "https://pypi.org/project/py-socketio-client/", "project_urls": {"Homepage": "https://github.com/halilozercan/py-socketio-client"}, "release_url": "https://pypi.org/project/py-socketio-client/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A socket.io client library", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/invisibleroads/socketIO-client\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/invisibleroads/socketIO-client.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fe8dc6abc0fbdd2ef8ca9d7475d9f0e3b28848e/68747470733a2f2f7472617669732d63692e6f72672f696e76697369626c65726f6164732f736f636b6574494f2d636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"socketio-client\">\n<h2>socketIO-client</h2>\n<p>Here is a <a href=\"http://socket.io\" rel=\"nofollow\">socket.io</a> client library for Python.  You can use it to write test code for your socket.io server.</p>\n<p>Please note that this version implements <a href=\"https://github.com/automattic/socket.io-protocol\" rel=\"nofollow\">socket.io protocol 1.x</a>, which is not backwards compatible.  If you want to communicate using <a href=\"https://github.com/learnboost/socket.io-spec\" rel=\"nofollow\">socket.io protocol 0.9</a> (which is compatible with <a href=\"https://github.com/abourget/gevent-socketio\" rel=\"nofollow\">gevent-socketio</a>), please use <a href=\"https://pypi.python.org/pypi/socketIO-client/0.5.7.2\" rel=\"nofollow\">socketIO-client 0.5.7.2</a>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install the package in an isolated environment.</p>\n<pre>VIRTUAL_ENV=$HOME/.virtualenv\n\n# Prepare isolated environment\nvirtualenv $VIRTUAL_ENV\n\n# Activate isolated environment\nsource $VIRTUAL_ENV/bin/activate\n\n# Install package\npip install -U socketIO-client\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Activate isolated environment.</p>\n<pre>VIRTUAL_ENV=$HOME/.virtualenv\nsource $VIRTUAL_ENV/bin/activate\n</pre>\n<p>Launch your socket.io server.</p>\n<pre>cd $(python -c \"import os, socketIO_client;\\\n    print(os.path.dirname(socketIO_client.__file__))\")\n\nDEBUG=* node tests/serve.js  # Start socket.io server in terminal one\nDEBUG=* node tests/proxy.js  # Start proxy server in terminal two\nnosetests                    # Run tests in terminal three\n</pre>\n<p>For debugging information, run these commands first.</p>\n<pre>import logging\nlogging.getLogger('socketIO-client').setLevel(logging.DEBUG)\nlogging.basicConfig()\n</pre>\n<p>Emit.</p>\n<pre>from socketIO_client import SocketIO, LoggingNamespace\n\nwith SocketIO('127.0.0.1', 8000, LoggingNamespace) as socketIO:\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n</pre>\n<p>Emit with callback.</p>\n<pre>from socketIO_client import SocketIO, LoggingNamespace\n\ndef on_bbb_response(*args):\n    print('on_bbb_response', args)\n\nwith SocketIO('127.0.0.1', 8000, LoggingNamespace) as socketIO:\n    socketIO.emit('bbb', {'xxx': 'yyy'}, on_bbb_response)\n    socketIO.wait_for_callbacks(seconds=1)\n</pre>\n<p>Define events.</p>\n<pre>from socketIO_client import SocketIO, LoggingNamespace\n\ndef on_connect():\n    print('connect')\n\ndef on_disconnect():\n    print('disconnect')\n\ndef on_reconnect():\n    print('reconnect')\n\ndef on_aaa_response(*args):\n    print('on_aaa_response', args)\n\nsocketIO = SocketIO('127.0.0.1', 8000, LoggingNamespace)\nsocketIO.on('connect', on_connect)\nsocketIO.on('disconnect', on_disconnect)\nsocketIO.on('reconnect', on_reconnect)\n\n# Listen\nsocketIO.on('aaa_response', on_aaa_response)\nsocketIO.emit('aaa')\nsocketIO.emit('aaa')\nsocketIO.wait(seconds=1)\n\n# Stop listening\nsocketIO.off('aaa_response')\nsocketIO.emit('aaa')\nsocketIO.wait(seconds=1)\n\n# Listen only once\nsocketIO.once('aaa_response', on_aaa_response)\nsocketIO.emit('aaa')  # Activate aaa_response\nsocketIO.emit('aaa')  # Ignore\nsocketIO.wait(seconds=1)\n</pre>\n<p>Define events in a namespace.</p>\n<pre>from socketIO_client import SocketIO, BaseNamespace\n\nclass Namespace(BaseNamespace):\n\n    def on_aaa_response(self, *args):\n        print('on_aaa_response', args)\n        self.emit('bbb')\n\nsocketIO = SocketIO('127.0.0.1', 8000, Namespace)\nsocketIO.emit('aaa')\nsocketIO.wait(seconds=1)\n</pre>\n<p>Define standard events.</p>\n<pre>from socketIO_client import SocketIO, BaseNamespace\n\nclass Namespace(BaseNamespace):\n\n    def on_connect(self):\n        print('[Connected]')\n\n    def on_reconnect(self):\n        print('[Reconnected]')\n\n    def on_disconnect(self):\n        print('[Disconnected]')\n\nsocketIO = SocketIO('127.0.0.1', 8000, Namespace)\nsocketIO.wait(seconds=1)\n</pre>\n<p>Define different namespaces on a single socket.</p>\n<pre>from socketIO_client import SocketIO, BaseNamespace\n\nclass ChatNamespace(BaseNamespace):\n\n    def on_aaa_response(self, *args):\n        print('on_aaa_response', args)\n\nclass NewsNamespace(BaseNamespace):\n\n    def on_aaa_response(self, *args):\n        print('on_aaa_response', args)\n\nsocketIO = SocketIO('127.0.0.1', 8000)\nchat_namespace = socketIO.define(ChatNamespace, '/chat')\nnews_namespace = socketIO.define(NewsNamespace, '/news')\n\nchat_namespace.emit('aaa')\nnews_namespace.emit('aaa')\nsocketIO.wait(seconds=1)\n</pre>\n<p>Connect via SSL (<a href=\"https://github.com/invisibleroads/socketIO-client/issues/54\" rel=\"nofollow\">https://github.com/invisibleroads/socketIO-client/issues/54</a>).</p>\n<pre>from socketIO_client import SocketIO\n\n# Skip server certificate verification\nSocketIO('https://127.0.0.1', verify=False)\n# Verify the server certificate\nSocketIO('https://127.0.0.1', verify='server.crt')\n# Verify the server certificate and encrypt using client certificate\nsocketIO = SocketIO('https://127.0.0.1', verify='server.crt', cert=(\n    'client.crt', 'client.key'))\n</pre>\n<p>Specify params, headers, cookies, proxies thanks to the <a href=\"http://python-requests.org\" rel=\"nofollow\">requests</a> library.</p>\n<pre>from socketIO_client import SocketIO\nfrom base64 import b64encode\n\nSocketIO(\n    '127.0.0.1', 8000,\n    params={'q': 'qqq'},\n    headers={'Authorization': 'Basic ' + b64encode('username:password')},\n    cookies={'a': 'aaa'},\n    proxies={'https': 'https://proxy.example.com:8080'})\n</pre>\n<p>Wait forever.</p>\n<pre>from socketIO_client import SocketIO\n\nsocketIO = SocketIO('127.0.0.1', 8000)\nsocketIO.wait()\n</pre>\n<p>Don\u2019t wait forever.</p>\n<pre>from requests.exceptions import ConnectionError\nfrom socketIO_client import SocketIO\n\ntry:\n    socket = SocketIO('127.0.0.1', 8000, wait_for_connection=False)\n    socket.wait()\nexcept ConnectionError:\n    print('The server is down. Try again later.')\n</pre>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>This software is available under the MIT License.</p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<ul>\n<li><a href=\"https://github.com/rauchg\" rel=\"nofollow\">Guillermo Rauch</a> wrote the <a href=\"https://github.com/automattic/socket.io-protocol\" rel=\"nofollow\">socket.io specification</a>.</li>\n<li><a href=\"https://github.com/liris\" rel=\"nofollow\">Hiroki Ohtani</a> wrote <a href=\"https://github.com/liris/websocket-client\" rel=\"nofollow\">websocket-client</a>.</li>\n<li><a href=\"https://github.com/roderickhodgson\" rel=\"nofollow\">Roderick Hodgson</a> wrote a <a href=\"http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client\" rel=\"nofollow\">prototype for a Python client to a socket.io server</a>.</li>\n<li><a href=\"https://github.com/abourget\" rel=\"nofollow\">Alexandre Bourget</a> wrote <a href=\"https://github.com/abourget/gevent-socketio\" rel=\"nofollow\">gevent-socketio</a>, which is a socket.io server written in Python.</li>\n<li><a href=\"https://github.com/pkienzle\" rel=\"nofollow\">Paul Kienzle</a>, <a href=\"https://github.com/zratic\" rel=\"nofollow\">Zac Lee</a>, <a href=\"https://github.com/codekoala\" rel=\"nofollow\">Josh VanderLinden</a>, <a href=\"https://github.com/ifitzpatrick\" rel=\"nofollow\">Ian Fitzpatrick</a>, <a href=\"https://github.com/lukasklein\" rel=\"nofollow\">Lucas Klein</a>, <a href=\"https://github.com/rchicoria\" rel=\"nofollow\">Rui Chicoria</a>, <a href=\"https://github.com/burstaholic\" rel=\"nofollow\">Travis Odom</a>, <a href=\"https://github.com/stackmagic\" rel=\"nofollow\">Patrick Huber</a>, <a href=\"https://github.com/bradjc\" rel=\"nofollow\">Brad Campbell</a>, <a href=\"https://github.com/dabidan\" rel=\"nofollow\">Daniel</a>, <a href=\"https://github.com/sarietta\" rel=\"nofollow\">Sean Arietta</a>, <a href=\"https://github.com/stafyniaksacha\" rel=\"nofollow\">Sacha Stafyniak</a> submitted code to expand support of the socket.io protocol.</li>\n<li><a href=\"https://github.com/guyzmo\" rel=\"nofollow\">Bernard Pratz</a>, <a href=\"https://github.com/franbull\" rel=\"nofollow\">Francis Bull</a> wrote prototypes to support xhr-polling and jsonp-polling.</li>\n<li><a href=\"https://github.com/softforge\" rel=\"nofollow\">Joe Palmer</a> sponsored development.</li>\n<li><a href=\"https://github.com/taiyangc\" rel=\"nofollow\">Eric Chen</a>, <a href=\"https://github.com/dzinevich\" rel=\"nofollow\">Denis Zinevich</a>, <a href=\"https://github.com/thiagohersan\" rel=\"nofollow\">Thiago Hersan</a>, <a href=\"https://github.com/nayefc\" rel=\"nofollow\">Nayef Copty</a>, <a href=\"https://github.com/jorgen-k\" rel=\"nofollow\">J\u00f6rgen Karlsson</a>, <a href=\"https://github.com/brghena\" rel=\"nofollow\">Branden Ghena</a>, <a href=\"https://github.com/scfc\" rel=\"nofollow\">Tim Landscheidt</a>, <a href=\"https://github.com/mattporritt\" rel=\"nofollow\">Matt Porritt</a>, <a href=\"https://github.com/bodgit\" rel=\"nofollow\">Matt Dainty</a>, <a href=\"https://github.com/thor27\" rel=\"nofollow\">Thomaz de Oliveira dos Reis</a>, <a href=\"https://github.com/Felk\" rel=\"nofollow\">Felix K\u00f6nig</a>, <a href=\"https://github.com/wilsonge\" rel=\"nofollow\">George Wilson</a>, <a href=\"https://github.com/astrikos\" rel=\"nofollow\">Andreas Strikos</a>, <a href=\"https://github.com/asergi\" rel=\"nofollow\">Alessio Sergi</a> <a href=\"https://github.com/cyacarinic\" rel=\"nofollow\">Claudio Yacarini</a>, <a href=\"https://github.com/khairihafsham\" rel=\"nofollow\">Khairi Hafsham</a>, <a href=\"https://github.com/RobbieClarken\" rel=\"nofollow\">Robbie Clarken</a> suggested ways to make the connection more robust.</li>\n<li><a href=\"https://github.com/valhallasw\" rel=\"nofollow\">Merlijn van Deen</a>, <a href=\"https://github.com/fredericsureau\" rel=\"nofollow\">Frederic Sureau</a>, <a href=\"https://github.com/leth\" rel=\"nofollow\">Marcus Cobden</a>, <a href=\"https://github.com/drewhutchison\" rel=\"nofollow\">Drew Hutchison</a>, <a href=\"https://github.com/wuurrd\" rel=\"nofollow\">wuurrd</a>, <a href=\"https://github.com/amfg\" rel=\"nofollow\">Adam Kecer</a>, <a href=\"https://github.com/Krenair\" rel=\"nofollow\">Alex Monk</a>, <a href=\"https://github.com/vishalwy\" rel=\"nofollow\">Vishal P R</a>, <a href=\"https://github.com/jayvdb\" rel=\"nofollow\">John Vandenberg</a>, <a href=\"https://github.com/graingert\" rel=\"nofollow\">Thomas Grainger</a>, <a href=\"https://github.com/danielquinn\" rel=\"nofollow\">Daniel Quinn</a>, <a href=\"https://github.com/AdricEpic\" rel=\"nofollow\">Adric Worley</a>, <a href=\"https://github.com/adamwight\" rel=\"nofollow\">Adam Roses Wight</a>, <a href=\"https://github.com/fcelda\" rel=\"nofollow\">Jan V\u010del\u00e1k</a> proposed changes that make the library more friendly and practical for you!</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.7</h3>\n<ul>\n<li>Fixed thread cleanup</li>\n<li>Fixed disconnect detection if defined directly thanks to Andreas Strikos</li>\n<li>Fixed support for unicode payloads</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.6</h3>\n<ul>\n<li>Upgraded to socket.io protocol 1.x thanks to Sean Arietta and Joe Palmer</li>\n<li>Fixed support for Python 3</li>\n<li>Fixed SSL support</li>\n<li>Added locks to fix concurrency issues with polling transport</li>\n<li>Added SocketIO.off() and SocketIO.once()</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.5</h3>\n<ul>\n<li>Added support for Python 3</li>\n<li>Added support for jsonp-polling thanks to Bernard Pratz</li>\n<li>Added support for xhr-polling thanks to Francis Bull</li>\n<li>Added support for query params and cookies</li>\n<li>Fixed sending acknowledgments in custom namespaces thanks to Travis Odom</li>\n<li>Rewrote library to use coroutines instead of threads to save memory</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.4</h3>\n<ul>\n<li>Added support for custom headers and proxies thanks to Rui and Sajal</li>\n<li>Added support for server-side callbacks thanks to Zac Lee</li>\n<li>Merged Channel functionality into BaseNamespace thanks to Alexandre Bourget</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3</h3>\n<ul>\n<li>Added support for secure connections</li>\n<li>Added SocketIO.wait()</li>\n<li>Improved exception handling in _RhythmicThread and _ListenerThread</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.2</h3>\n<ul>\n<li>Added support for callbacks and channels thanks to Paul Kienzle</li>\n<li>Incorporated suggestions from Josh VanderLinden and Ian Fitzpatrick</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1</h3>\n<ul>\n<li>Wrapped <a href=\"http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client\" rel=\"nofollow\">code from StackOverflow</a></li>\n<li>Added exception handling to destructor in case of connection failure</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3895018, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2875fe9257cfa555e2dccb1c10471abd", "sha256": "6f0b6b848d38aafbca1c225caa9f0ba58336b4000ae083975d9b261a9ca336bb"}, "downloads": -1, "filename": "py-socketio-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2875fe9257cfa555e2dccb1c10471abd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17272, "upload_time": "2018-05-24T12:22:36", "upload_time_iso_8601": "2018-05-24T12:22:36.976292Z", "url": "https://files.pythonhosted.org/packages/6b/51/fdab2888148b6570dcb17ee937aff7cb856fe90fc1d063bcdf9fe57852b4/py-socketio-client-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2875fe9257cfa555e2dccb1c10471abd", "sha256": "6f0b6b848d38aafbca1c225caa9f0ba58336b4000ae083975d9b261a9ca336bb"}, "downloads": -1, "filename": "py-socketio-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2875fe9257cfa555e2dccb1c10471abd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17272, "upload_time": "2018-05-24T12:22:36", "upload_time_iso_8601": "2018-05-24T12:22:36.976292Z", "url": "https://files.pythonhosted.org/packages/6b/51/fdab2888148b6570dcb17ee937aff7cb856fe90fc1d063bcdf9fe57852b4/py-socketio-client-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:26 2020"}