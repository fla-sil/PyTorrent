{"info": {"author": "Juan Antonio Osorio Robles", "author_email": "jaosorior@redhat.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX :: Linux"], "description": "tripleo-ipsec\n=============\n\nAnsible role to configure IPSEC tunnels for TripleO\n\n* This sets up packages and firewall settings.\n\n* Sets the configuration for the IPSEC tunnels in the overcloud nodes.\n\n* Parses the given configuration file and starts the IPSEC tunnels.\n\nIn a final step, when pacemaker is enabled, it enables resource agents for each\nVirtual IP which puts up/tears down IPSEC tunnels depending on the VIP\nlocation.\n\nNote that as of the latest code, this now relies on the usage of TripleO's\ndynamic inventory. This means that it expects the inventory to tell the role\nwhich networks are being set and which IPs do the hosts have. If the relevant\nvariables don't come from the inventory, the role will attempt to use the legacy\nsetup which autodiscovers these. However, this setup is not very reliable if\nyou're using custom networks.\n\nRole Variables\n--------------\n\n* `ipsec_psk`: the Pre-Shared Key to be used for the IPSEC tunnels.\n  Note that is is sensible information and it's recommended that it's stored\n  securely on the host where the playbook runs from, e.g. using Ansible Vault.\n  One can generate this variable with the following command:\n  `openssl rand -base64 48`\n* `ipsec_algorithm`: Defines the encryption algorithm to use in the phase2alg\n  configuration option for the tunnels. Defaults to: `aes_gcm128-null`.\n  The possible values should be checked in libreswan's documentation.\n* `ipsec_configure_vips`: Determines whether or not the role should configure\n  the tunnels for the VIPs. Defaults to: `true`.\n* `ipsec_skip_firewall_rules`: Determines whether the role should skip\n  or not the firewall rules. Defaults to: `false`.\n* `ipsec_uninstall_tunnels`: Determines whether the role should remove the IPSEC\n  tunnels that were previously set. Defaults to: `false`.\n* `ipsec_upgrade_tunnels`: Determines whether the role should upgrade the IPSEC\n  tunnels that were previously set. This means it'll remove all the tunnels\n  created in a previous run and replace them. Defaults to: `false`.\n* `ipsec_setup_resource_agents`: Determines whether the role should create the\n  pacemaker resource agents or not. Defaults to: `true`.\n* `ipsec_skip_networks`: Determines which networks should be skipped. defaults to `[]`.\n* `ipsec_force_install_legacy`: Forces the legacy installation. Defaults to: `false`.\n* `overcloud_controller_identifier`: This identifies which nodes are\n  controllers in the cluster and which aren't, and should be part of the\n  hostname of the controller. Defaults to: 'controller'. It's highly\n  recommended that there's a way to explicitly identify the nodes this way.\n  Note that this is only used in the legacy setup.\n\nExample Playbook\n----------------\n\nSample::\n\n   - hosts: servers\n     roles:\n        - tripleo-ipsec\n\nEnabling ipsec tunnels in TripleO\n=================================\n\nThe main playbook to be ran on the overcloud nodes is::\n\n   tests/deploy-ipsec-tripleo.yml\n\nWhich will deploy IPSEC on the overcloud nodes for the internal API network.\n\nWe'll use a PSK and an AES128 cipher.\n\nAdd the PSK to an ansible var file::\n\n   cat <<EOF > ipsec-psk.yml\n   ipsec_psk: $(openssl rand -base64 48)\n   EOF\n\nEncrypt the file with ansible-vault (note that it'll prompt for a password):\n\n   ansible-vault encrypt ipsec-psk.yml\n\nHaving done this, now you can run the playbook::\n\n   ansible-playbook -i /usr/bin/tripleo-ansible-inventory --ask-vault-pass \\\n           -e @ipsec-psk.yml tests/deploy-ipsec-tripleo.yml\n\nGenerating an inventory\n-----------------------\n\nThe script */usr/bin/tripleo-ansible-inventory* generates a dynamic inventory\nwith the nodes in the overcloud. And However it comes with some inconveniences:\n\n* In deployments older than Pike, it might be a bit slow to run. To address\n  this, in Ocata and Pike it's possible to generate a static inventory out of\n  the output of this command::\n\n     /usr/bin/tripleo-ansible-inventory  --static-inventory nodes.txt\n\n  This will create a called nodes.txt with the static inventory, which we could\n  now use and save some time.\n\n* Newton unfortunately only takes into account computes and controllers with\n  this command. So for this deployment we need to generate an inventory of our\n  own. we can do so with the following command::\n\n     cat <<EOF > nodes.txt\n     [undercloud]\n     localhost\n\n     [undercloud:vars]\n     ansible_connection = local\n\n     [overcloud:vars]\n     ansible_ssh_user = heat-admin\n\n     [overcloud]\n     $( openstack server list -c Networks -f value | sed 's/ctlplane=//')\n     EOF\n\n  This assumes that you're deploying this playbook from the undercloud itself.\n  Hence the undercloud group containing localhost.\n\nSkipping networks\n=================\n\nThe `ipsec_skip_networks` variable allows the user to skip the tunnel setup\nfor certain networks. This works by using the network name, which can vary\ndepending on your type of setup.\n\nUsing the dynamic inventory (Queens and beyond)\n-----------------------------------------------\n\nWhen using the dynamic inventory, the network names will be based on the names\nthat are set in your `network_data.yaml` file, from tripleo-heat-templates.\nAs mentioned in tripleo-heat-templates, this file will determine which networks\nyou're setting up in your overall TripleO deployment, and will even specify\nwhich of those networks have VIPs attached to them.\n\nThe network names to use in the `ipsec_skip_networks` variable will be under\nthe `name_lower` section of each network definition.\n\nFor instance, if you want to skip the storage management network, you'll see\nthat the entry looks as follows::\n\n  - name: StorageMgmt\n    name_lower: storage_mgmt\n    vip: true\n    vlan: 40\n    ip_subnet: '172.16.3.0/24'\n    allocation_pools: [{'start': '172.16.3.4', 'end': '172.16.3.250'}]\n    ipv6_subnet: 'fd00:fd00:fd00:4000::/64'\n    ipv6_allocation_pools: [{'start': 'fd00:fd00:fd00:4000::10', 'end': 'fd00:fd00:fd00:4000:ffff:ffff:ffff:fffe'}]\n\nSo, in this case, the variable you'll put in your ansible variables file will\nhave the following entry::\n\n  ipsec_skip_networks:\n  - storage_mgmt\n\nYou can add more networks by adding more items to that list.\n\nLegacy setups\n-------------\n\nIf you're using a legacy setup (which would work in Newton), you'll need to\nnote that the network names are hardcoded; so you'll have the following\noptions available:\n\n* internalapi\n* storage\n* storagemgmt\n* ctlplane\n\nYou can also explicitly skip creating the Redis VIP by adding the `redis` word\nto the list.\n\nIf you would want to skip the Storage and Storage Management networks, the\nvariable you'll put in your ansible variables file will have the\nfollowing entry::\n\n  ipsec_skip_networks:\n  - storage\n  - storagemgmt\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://opendev.org/openstack/tripleo-ipsec", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tripleo-ipsec", "package_url": "https://pypi.org/project/tripleo-ipsec/", "platform": "", "project_url": "https://pypi.org/project/tripleo-ipsec/", "project_urls": {"Homepage": "https://opendev.org/openstack/tripleo-ipsec"}, "release_url": "https://pypi.org/project/tripleo-ipsec/9.2.0/", "requires_dist": null, "requires_python": "", "summary": "Ansible role for managing TripleO's IPSEC tunnels", "version": "9.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tripleo-ipsec\">\n<h2>tripleo-ipsec</h2>\n<p>Ansible role to configure IPSEC tunnels for TripleO</p>\n<ul>\n<li>This sets up packages and firewall settings.</li>\n<li>Sets the configuration for the IPSEC tunnels in the overcloud nodes.</li>\n<li>Parses the given configuration file and starts the IPSEC tunnels.</li>\n</ul>\n<p>In a final step, when pacemaker is enabled, it enables resource agents for each\nVirtual IP which puts up/tears down IPSEC tunnels depending on the VIP\nlocation.</p>\n<p>Note that as of the latest code, this now relies on the usage of TripleO\u2019s\ndynamic inventory. This means that it expects the inventory to tell the role\nwhich networks are being set and which IPs do the hosts have. If the relevant\nvariables don\u2019t come from the inventory, the role will attempt to use the legacy\nsetup which autodiscovers these. However, this setup is not very reliable if\nyou\u2019re using custom networks.</p>\n<div id=\"role-variables\">\n<h3>Role Variables</h3>\n<ul>\n<li><cite>ipsec_psk</cite>: the Pre-Shared Key to be used for the IPSEC tunnels.\nNote that is is sensible information and it\u2019s recommended that it\u2019s stored\nsecurely on the host where the playbook runs from, e.g. using Ansible Vault.\nOne can generate this variable with the following command:\n<cite>openssl rand -base64 48</cite></li>\n<li><cite>ipsec_algorithm</cite>: Defines the encryption algorithm to use in the phase2alg\nconfiguration option for the tunnels. Defaults to: <cite>aes_gcm128-null</cite>.\nThe possible values should be checked in libreswan\u2019s documentation.</li>\n<li><cite>ipsec_configure_vips</cite>: Determines whether or not the role should configure\nthe tunnels for the VIPs. Defaults to: <cite>true</cite>.</li>\n<li><cite>ipsec_skip_firewall_rules</cite>: Determines whether the role should skip\nor not the firewall rules. Defaults to: <cite>false</cite>.</li>\n<li><cite>ipsec_uninstall_tunnels</cite>: Determines whether the role should remove the IPSEC\ntunnels that were previously set. Defaults to: <cite>false</cite>.</li>\n<li><cite>ipsec_upgrade_tunnels</cite>: Determines whether the role should upgrade the IPSEC\ntunnels that were previously set. This means it\u2019ll remove all the tunnels\ncreated in a previous run and replace them. Defaults to: <cite>false</cite>.</li>\n<li><cite>ipsec_setup_resource_agents</cite>: Determines whether the role should create the\npacemaker resource agents or not. Defaults to: <cite>true</cite>.</li>\n<li><cite>ipsec_skip_networks</cite>: Determines which networks should be skipped. defaults to <cite>[]</cite>.</li>\n<li><cite>ipsec_force_install_legacy</cite>: Forces the legacy installation. Defaults to: <cite>false</cite>.</li>\n<li><cite>overcloud_controller_identifier</cite>: This identifies which nodes are\ncontrollers in the cluster and which aren\u2019t, and should be part of the\nhostname of the controller. Defaults to: \u2018controller\u2019. It\u2019s highly\nrecommended that there\u2019s a way to explicitly identify the nodes this way.\nNote that this is only used in the legacy setup.</li>\n</ul>\n</div>\n<div id=\"example-playbook\">\n<h3>Example Playbook</h3>\n<p>Sample:</p>\n<pre>- hosts: servers\n  roles:\n     - tripleo-ipsec\n</pre>\n</div>\n</div>\n<div id=\"enabling-ipsec-tunnels-in-tripleo\">\n<h2>Enabling ipsec tunnels in TripleO</h2>\n<p>The main playbook to be ran on the overcloud nodes is:</p>\n<pre>tests/deploy-ipsec-tripleo.yml\n</pre>\n<p>Which will deploy IPSEC on the overcloud nodes for the internal API network.</p>\n<p>We\u2019ll use a PSK and an AES128 cipher.</p>\n<p>Add the PSK to an ansible var file:</p>\n<pre>cat &lt;&lt;EOF &gt; ipsec-psk.yml\nipsec_psk: $(openssl rand -base64 48)\nEOF\n</pre>\n<p>Encrypt the file with ansible-vault (note that it\u2019ll prompt for a password):</p>\n<blockquote>\nansible-vault encrypt ipsec-psk.yml</blockquote>\n<p>Having done this, now you can run the playbook:</p>\n<pre>ansible-playbook -i /usr/bin/tripleo-ansible-inventory --ask-vault-pass \\\n        -e @ipsec-psk.yml tests/deploy-ipsec-tripleo.yml\n</pre>\n<div id=\"generating-an-inventory\">\n<h3>Generating an inventory</h3>\n<p>The script <em>/usr/bin/tripleo-ansible-inventory</em> generates a dynamic inventory\nwith the nodes in the overcloud. And However it comes with some inconveniences:</p>\n<ul>\n<li><p>In deployments older than Pike, it might be a bit slow to run. To address\nthis, in Ocata and Pike it\u2019s possible to generate a static inventory out of\nthe output of this command:</p>\n<pre>/usr/bin/tripleo-ansible-inventory  --static-inventory nodes.txt\n</pre>\n<p>This will create a called nodes.txt with the static inventory, which we could\nnow use and save some time.</p>\n</li>\n<li><p>Newton unfortunately only takes into account computes and controllers with\nthis command. So for this deployment we need to generate an inventory of our\nown. we can do so with the following command:</p>\n<pre>cat &lt;&lt;EOF &gt; nodes.txt\n[undercloud]\nlocalhost\n\n[undercloud:vars]\nansible_connection = local\n\n[overcloud:vars]\nansible_ssh_user = heat-admin\n\n[overcloud]\n$( openstack server list -c Networks -f value | sed 's/ctlplane=//')\nEOF\n</pre>\n<p>This assumes that you\u2019re deploying this playbook from the undercloud itself.\nHence the undercloud group containing localhost.</p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"skipping-networks\">\n<h2>Skipping networks</h2>\n<p>The <cite>ipsec_skip_networks</cite> variable allows the user to skip the tunnel setup\nfor certain networks. This works by using the network name, which can vary\ndepending on your type of setup.</p>\n<div id=\"using-the-dynamic-inventory-queens-and-beyond\">\n<h3>Using the dynamic inventory (Queens and beyond)</h3>\n<p>When using the dynamic inventory, the network names will be based on the names\nthat are set in your <cite>network_data.yaml</cite> file, from tripleo-heat-templates.\nAs mentioned in tripleo-heat-templates, this file will determine which networks\nyou\u2019re setting up in your overall TripleO deployment, and will even specify\nwhich of those networks have VIPs attached to them.</p>\n<p>The network names to use in the <cite>ipsec_skip_networks</cite> variable will be under\nthe <cite>name_lower</cite> section of each network definition.</p>\n<p>For instance, if you want to skip the storage management network, you\u2019ll see\nthat the entry looks as follows:</p>\n<pre>- name: StorageMgmt\n  name_lower: storage_mgmt\n  vip: true\n  vlan: 40\n  ip_subnet: '172.16.3.0/24'\n  allocation_pools: [{'start': '172.16.3.4', 'end': '172.16.3.250'}]\n  ipv6_subnet: 'fd00:fd00:fd00:4000::/64'\n  ipv6_allocation_pools: [{'start': 'fd00:fd00:fd00:4000::10', 'end': 'fd00:fd00:fd00:4000:ffff:ffff:ffff:fffe'}]\n</pre>\n<p>So, in this case, the variable you\u2019ll put in your ansible variables file will\nhave the following entry:</p>\n<pre>ipsec_skip_networks:\n- storage_mgmt\n</pre>\n<p>You can add more networks by adding more items to that list.</p>\n</div>\n<div id=\"legacy-setups\">\n<h3>Legacy setups</h3>\n<p>If you\u2019re using a legacy setup (which would work in Newton), you\u2019ll need to\nnote that the network names are hardcoded; so you\u2019ll have the following\noptions available:</p>\n<ul>\n<li>internalapi</li>\n<li>storage</li>\n<li>storagemgmt</li>\n<li>ctlplane</li>\n</ul>\n<p>You can also explicitly skip creating the Redis VIP by adding the <cite>redis</cite> word\nto the list.</p>\n<p>If you would want to skip the Storage and Storage Management networks, the\nvariable you\u2019ll put in your ansible variables file will have the\nfollowing entry:</p>\n<pre>ipsec_skip_networks:\n- storage\n- storagemgmt\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5590182, "releases": {"0.0.1.dev95": [{"comment_text": "", "digests": {"md5": "e3763238c522cf3100b2b225b20c44ff", "sha256": "5d568751e4f785ddc8e97339a45e0564fd903cbba3723b470fcd63b1323a13c0"}, "downloads": -1, "filename": "tripleo_ipsec-0.0.1.dev95-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e3763238c522cf3100b2b225b20c44ff", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5469, "upload_time": "2017-11-27T13:26:15", "upload_time_iso_8601": "2017-11-27T13:26:15.988794Z", "url": "https://files.pythonhosted.org/packages/cb/d1/5c4fa012aa45ce6b26de8e81f8c675a8a397ac1822c210b7cf4f0378ed2c/tripleo_ipsec-0.0.1.dev95-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5498be8b1a814818ed3dedb9892b3f1d", "sha256": "76dfa593d963188b0810230c996bcf3352c4ed8b9f96ec1ab13817b47becf256"}, "downloads": -1, "filename": "tripleo-ipsec-0.0.1.dev95.tar.gz", "has_sig": false, "md5_digest": "5498be8b1a814818ed3dedb9892b3f1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27917, "upload_time": "2017-11-27T13:26:17", "upload_time_iso_8601": "2017-11-27T13:26:17.542984Z", "url": "https://files.pythonhosted.org/packages/b8/65/c3cd0b8835615607a022138fc4c584a5edebc3c2b99de0c6cd6175087b11/tripleo-ipsec-0.0.1.dev95.tar.gz", "yanked": false}], "8.0.1": [{"comment_text": "", "digests": {"md5": "15daa6ab2e6dcb435b015283dd255ed3", "sha256": "740c6ce1424a6d5723a22580258ea6ec0254e76249510e3256cf7e0299b66030"}, "downloads": -1, "filename": "tripleo_ipsec-8.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15daa6ab2e6dcb435b015283dd255ed3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25183, "upload_time": "2018-01-30T23:12:30", "upload_time_iso_8601": "2018-01-30T23:12:30.927957Z", "url": "https://files.pythonhosted.org/packages/d4/76/5d73ee1ae8b827b3cd253ea79993886f0b086787719fb4fda86aa92fef93/tripleo_ipsec-8.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32ac59f3bf9af58f2ce5670f8fc6a02e", "sha256": "740c38db0e29a90ec1247be56189bbc3dd482e56f3606104c7507eab42877ed4"}, "downloads": -1, "filename": "tripleo-ipsec-8.0.1.tar.gz", "has_sig": false, "md5_digest": "32ac59f3bf9af58f2ce5670f8fc6a02e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29403, "upload_time": "2018-01-30T23:12:33", "upload_time_iso_8601": "2018-01-30T23:12:33.925432Z", "url": "https://files.pythonhosted.org/packages/2f/4c/6698dead031e02dea4749cac1fc6a5ed92871d432544c58d1db544672ec2/tripleo-ipsec-8.0.1.tar.gz", "yanked": false}], "8.0.2": [{"comment_text": "", "digests": {"md5": "2658cf3f41079387b54532ec8883e46e", "sha256": "e8282f8bd8c395143106c36a0f219466e46797826ce364f7d1f88172f8b77f01"}, "downloads": -1, "filename": "tripleo_ipsec-8.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2658cf3f41079387b54532ec8883e46e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25281, "upload_time": "2018-02-22T15:25:48", "upload_time_iso_8601": "2018-02-22T15:25:48.955014Z", "url": "https://files.pythonhosted.org/packages/47/3d/ec63436553605c11604461e66538336b1527649abe62b3430f01450fcd6a/tripleo_ipsec-8.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bdbb2fa3ac922f7b62f0dd29e54d58a5", "sha256": "c8fec58fb1db3c9059632e89273dd930eb68e68896c29dffa90e9fae7e1ea834"}, "downloads": -1, "filename": "tripleo-ipsec-8.0.2.tar.gz", "has_sig": false, "md5_digest": "bdbb2fa3ac922f7b62f0dd29e54d58a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27713, "upload_time": "2018-02-22T15:25:52", "upload_time_iso_8601": "2018-02-22T15:25:52.640733Z", "url": "https://files.pythonhosted.org/packages/cf/7a/33ed42fbff200e6481cd76365c6621867ac98e9e7aabaad1608476993e0b/tripleo-ipsec-8.0.2.tar.gz", "yanked": false}], "8.1.0": [{"comment_text": "", "digests": {"md5": "11cad92949594efdec21856a83c2641c", "sha256": "7224868a9ecb891601245a856455f7f7a7932173a8bcbb4140b7984bb89e276a"}, "downloads": -1, "filename": "tripleo_ipsec-8.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11cad92949594efdec21856a83c2641c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25581, "upload_time": "2018-03-03T11:54:54", "upload_time_iso_8601": "2018-03-03T11:54:54.325643Z", "url": "https://files.pythonhosted.org/packages/cd/aa/5a5522ea86ade0d0a6ed692457cecbf9e0c75fca1a4be8291cd992228c93/tripleo_ipsec-8.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34daa0824bfb3bdd984662e43d3306a7", "sha256": "fa6c9944e18126c99933021006fe7cdcb20f6ca292c192121cf842763a5ef820"}, "downloads": -1, "filename": "tripleo-ipsec-8.1.0.tar.gz", "has_sig": false, "md5_digest": "34daa0824bfb3bdd984662e43d3306a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28163, "upload_time": "2018-03-03T11:54:57", "upload_time_iso_8601": "2018-03-03T11:54:57.898774Z", "url": "https://files.pythonhosted.org/packages/31/9d/16de912d7ca2c24eb1cd27768f50a2cf5bab271a4667d34a557949ad95e0/tripleo-ipsec-8.1.0.tar.gz", "yanked": false}], "9.0.0": [{"comment_text": "", "digests": {"md5": "801977b644a0c54016bf0095b073bffd", "sha256": "ed6befa7283dd6ad286c8d6098e116165722f46cb1dba14365ebb0c737a12577"}, "downloads": -1, "filename": "tripleo_ipsec-9.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "801977b644a0c54016bf0095b073bffd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24176, "upload_time": "2018-04-19T13:42:42", "upload_time_iso_8601": "2018-04-19T13:42:42.795792Z", "url": "https://files.pythonhosted.org/packages/46/23/6f04a400a1247014728666b9b4f75ad9f714a7bd9f576b7b483df4a8b4ea/tripleo_ipsec-9.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6c70d2b7f4c8384bfec1a23f019d18a", "sha256": "dfebe2b86199a70bcaa2ef7baa3c3ba3983de71ffc4704baaff2982b619ab3fa"}, "downloads": -1, "filename": "tripleo-ipsec-9.0.0.tar.gz", "has_sig": false, "md5_digest": "b6c70d2b7f4c8384bfec1a23f019d18a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31998, "upload_time": "2018-04-19T13:42:46", "upload_time_iso_8601": "2018-04-19T13:42:46.258725Z", "url": "https://files.pythonhosted.org/packages/9b/72/f8cb0ff96c9b40249f624db1f48e20d43286cc6f9d85713915960a88587c/tripleo-ipsec-9.0.0.tar.gz", "yanked": false}], "9.1.0": [{"comment_text": "", "digests": {"md5": "3c6509ca35c3024925df8705f9578a4e", "sha256": "92f619ad452e7182146e43e361ef11876eb4bd4eb6843180646531838d819350"}, "downloads": -1, "filename": "tripleo_ipsec-9.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c6509ca35c3024925df8705f9578a4e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36853, "upload_time": "2019-02-22T14:00:46", "upload_time_iso_8601": "2019-02-22T14:00:46.809517Z", "url": "https://files.pythonhosted.org/packages/0a/51/7b4da67bc24185f493236c2b97af0e3ea8bab059a3315b665943de33bee3/tripleo_ipsec-9.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a379164f7d546b213cd13c1ac9b04a8", "sha256": "8c1f07a7046a17d61794e0150c24355d84cd35a22dcfde15505cccb75cdb53d5"}, "downloads": -1, "filename": "tripleo-ipsec-9.1.0.tar.gz", "has_sig": false, "md5_digest": "5a379164f7d546b213cd13c1ac9b04a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31035, "upload_time": "2019-02-22T14:00:50", "upload_time_iso_8601": "2019-02-22T14:00:50.197804Z", "url": "https://files.pythonhosted.org/packages/5f/70/396bbe8c4e863808f6dcffa9ac364d401e9927e9214a1973ea29a88c4e1c/tripleo-ipsec-9.1.0.tar.gz", "yanked": false}], "9.2.0": [{"comment_text": "", "digests": {"md5": "3d6d08b8fb825acf228fb3286b75fe97", "sha256": "c55bea5c1befb93a1dcafe0ed1a15c22dfa9a74a6af043d7df6c2c74b1972ee0"}, "downloads": -1, "filename": "tripleo_ipsec-9.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3d6d08b8fb825acf228fb3286b75fe97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36924, "upload_time": "2019-07-26T18:20:31", "upload_time_iso_8601": "2019-07-26T18:20:31.955518Z", "url": "https://files.pythonhosted.org/packages/e5/d1/b8a2b7f726fc2eff009269e3022a93db66017df1d36473e5cf3a392b7479/tripleo_ipsec-9.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c3159d058a293f26e65655573940ef0", "sha256": "6144d32883b670f0f39993fe1719a98622328ce8a1686f57b25671b6f580b09a"}, "downloads": -1, "filename": "tripleo-ipsec-9.2.0.tar.gz", "has_sig": false, "md5_digest": "9c3159d058a293f26e65655573940ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32091, "upload_time": "2019-07-26T18:20:35", "upload_time_iso_8601": "2019-07-26T18:20:35.097474Z", "url": "https://files.pythonhosted.org/packages/30/78/203b11f82f2e7111e33d9ba5722a1ec02adadba44e3ea9bd82bcac0d9a2d/tripleo-ipsec-9.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d6d08b8fb825acf228fb3286b75fe97", "sha256": "c55bea5c1befb93a1dcafe0ed1a15c22dfa9a74a6af043d7df6c2c74b1972ee0"}, "downloads": -1, "filename": "tripleo_ipsec-9.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3d6d08b8fb825acf228fb3286b75fe97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36924, "upload_time": "2019-07-26T18:20:31", "upload_time_iso_8601": "2019-07-26T18:20:31.955518Z", "url": "https://files.pythonhosted.org/packages/e5/d1/b8a2b7f726fc2eff009269e3022a93db66017df1d36473e5cf3a392b7479/tripleo_ipsec-9.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c3159d058a293f26e65655573940ef0", "sha256": "6144d32883b670f0f39993fe1719a98622328ce8a1686f57b25671b6f580b09a"}, "downloads": -1, "filename": "tripleo-ipsec-9.2.0.tar.gz", "has_sig": false, "md5_digest": "9c3159d058a293f26e65655573940ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32091, "upload_time": "2019-07-26T18:20:35", "upload_time_iso_8601": "2019-07-26T18:20:35.097474Z", "url": "https://files.pythonhosted.org/packages/30/78/203b11f82f2e7111e33d9ba5722a1ec02adadba44e3ea9bd82bcac0d9a2d/tripleo-ipsec-9.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:59 2020"}