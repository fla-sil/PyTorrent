{"info": {"author": "Frank Wiles", "author_email": "ramwin@qq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "forked from https://github.com/revsys/django-friendship\n\n# django-friendship\n\n<a href=\"http://travis-ci.org/revsys/django-friendship\"><img src=\"https://secure.travis-ci.org/revsys/django-friendship.svg\" /></a>\n\nThis application enables you to create and manage follows, blocks and bi-directional friendships between users. It features:\n\n- Friendship request objects that can be accepted, rejected, canceled, or marked as viewed.\n- Hooks to easily list all friend requests sent or received by a given user, filtered by the status of the request.\n- A blocklist for each user of users they've blocked.\n- Tags to include information about friendships, blocks and follows in your templates.\n- Integration with `AUTH_USER_MODEL`.\n- Validation to prevent common mistakes.\n- Faster server response time through caching\n\n## Requirements\n\n**Django 1.11+** since v1.7.0 (latest release supporting **Django 1.10** is v1.6.0)\n\n## Installation\n\n1. `pip install django2-friendship`\n2. add `\"friendship\"` to `INSTALLED_APPS` and run `python manage.py migrate`.\n3. Use the friendship manager in your own views, or wire up the URLconf to include the builtin views:\n\n```python\nurlpatterns = [\n    ...\n    url(r'^friendship/', include('friendship.urls'))\n    ...\n]\n```\n\nNote: If you are migrating from django-friendship `v1.6.x`, you'll need to rollback your migrations and fake\nmigration `0002`\n\n```shell\n$ ./manage.py migrate friendship 0001\n$ ./manage.py migrate friendship 0002 --fake\n```\n\nIf you're migrating from `v1.7.x`, you'll likely have to fake `0003` as well:\n\n```shell\n$ ./manage.py migrate friendship 0003 --fake\n```\n\n## Usage\n\n`django-friendship` provides a free API that gives you several ways to create and manage friendship requests or follows in your views. Add the following at the top of your `views.py`:\n\n```python\nfrom django.contrib.auth.models import User\nfrom friendship.models import Friend, Follow, Block\n```\n\n### Getting Data about Friendships\n\n- List all of a user's friends: `Friend.objects.friends(request.user)`\n- List all unread friendship requests: `Friend.objects.unread_requests(user=request.user)`\n- List all unrejected friendship requests: `Friend.objects.unrejected_requests(user=request.user)`\n- Count of all unrejected friendship requests: `Friend.objects.unrejected_request_count(user=request.user)`\n- List all rejected friendship requests: `Friend.objects.rejected_requests(user=request.user)`\n- Count of all rejected friendship requests: `Friend.objects.rejected_request_count(user=request.user)`\n- List of all sent friendship requests: `Friend.objects.sent_requests(user=request.user)`\n- Test if two users are friends: `Friend.objects.are_friends(request.user, other_user) == True`\n\n### Getting Data about Follows\n\n- List of a user's followers: `Follow.objects.followers(request.user)`\n- List of who a user is following: `Follow.objects.following(request.user)`\n\n### Getting Data about Blocks\n\n- List of a user's blockers: `Block.objects.blockers(request.user)`\n- List of who a user is blocking: `Block.objects.blocking(request.user)`\n- Test if a user is blocked: `Block.objects.is_blocked(request.user, other_user) == True`\n\n### Managing Friendships and Follows\n\n#### Create a friendship request:\n\n```python\nother_user = User.objects.get(pk=1)\nFriend.objects.add_friend(\n    request.user,                               # The sender\n    other_user,                                 # The recipient\n    message='Hi! I would like to add you')      # This message is optional\n```\n\n#### Let the user who received the request respond:\n\n```python\nfrom friendship.models import FriendshipRequest\n\nfriend_request = FriendshipRequest.objects.get(to_user=1)\nfriend_request.accept()\n# or friend_request.reject()\n```\n\n#### To remove the friendship relationship between `request.user` and `other_user`, do the following:\n\n```python\nFriend.objects.remove_friend(request.user, other_user)\n```\n\n#### Make request.user a follower of other_user:\n\n```python\nFollow.objects.add_follower(request.user, other_user)\n```\n\n\n#### Make request.user block other_user:\n\n```python\nBlock.objects.add_block(request.user, other_user)\n```\n\n#### Make request.user unblock other_user:\n\n```python\nBlock.objects.remove_block(request.user, other_user)\n```\n\n### Templates\n\nYou can use `django-friendship` tags in your templates. First enter:\n\n```django\n{% load friendshiptags %}\n```\n\nThen use any of the following:\n\n```django\n{% friends request.user %}\n{% followers request.user %}\n{% following request.user %}\n{% friend_requests request.user %}\n{% blockers request.user %}\n{% blocking request.user %}\n```\n\n### Signals\n\n`django-friendship` emits the following signals:\n\n- friendship_request_created\n- friendship_request_rejected\n- friendship_request_canceled\n- friendship_request_accepted\n- friendship_removed\n- follower_created\n- following_created\n- follower_removed\n- following_removed\n- block_created\n- block_removed\n\n\n### Contributing\n\nDevelopment [takes place on GitHub](https://github.com/revsys/django-friendship). Bug reports, patches, and fixes are always welcome!\n\n# Need help?\n\n[REVSYS](http://www.revsys.com?utm_medium=github&utm_source=django-test-plus) can help with your Python, Django, and infrastructure projects. If you have a question about this project, please open a GitHub issue. If you love us and want to keep track of our goings-on, here's where you can find us online:\n\n<a href=\"https://revsys.com?utm_medium=github&utm_source=django-friendship\"><img src=\"https://pbs.twimg.com/profile_images/915928618840285185/sUdRGIn1_400x400.jpg\" height=\"50\" /></a>\n<a href=\"https://twitter.com/revsys\"><img src=\"https://cdn1.iconfinder.com/data/icons/new_twitter_icon/256/bird_twitter_new_simple.png\" height=\"43\" /></a>\n<a href=\"https://www.facebook.com/revsysllc/\"><img src=\"https://cdn3.iconfinder.com/data/icons/picons-social/57/06-facebook-512.png\" height=\"50\" /></a>\n<a href=\"https://github.com/revsys/\"><img src=\"https://assets-cdn.github.com/images/modules/logos_page/GitHub-Mark.png\" height=\"53\" /></a>\n<a href=\"https://gitlab.com/revsys\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/GitLab_Logo.svg/2000px-GitLab_Logo.svg.png\" height=\"44\" /></a>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ramwin/django-friendship/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django2-friendship", "package_url": "https://pypi.org/project/django2-friendship/", "platform": "", "project_url": "https://pypi.org/project/django2-friendship/", "project_urls": {"Homepage": "https://github.com/ramwin/django-friendship/"}, "release_url": "https://pypi.org/project/django2-friendship/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "django-friendship provides an easy extensible interface for following and friendship", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>forked from <a href=\"https://github.com/revsys/django-friendship\" rel=\"nofollow\">https://github.com/revsys/django-friendship</a></p>\n<h1>django-friendship</h1>\n<p><a href=\"http://travis-ci.org/revsys/django-friendship\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a7277ebdd4063c956785447f480fbbe0c2c51d5/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f7265767379732f646a616e676f2d667269656e64736869702e737667\"></a></p>\n<p>This application enables you to create and manage follows, blocks and bi-directional friendships between users. It features:</p>\n<ul>\n<li>Friendship request objects that can be accepted, rejected, canceled, or marked as viewed.</li>\n<li>Hooks to easily list all friend requests sent or received by a given user, filtered by the status of the request.</li>\n<li>A blocklist for each user of users they've blocked.</li>\n<li>Tags to include information about friendships, blocks and follows in your templates.</li>\n<li>Integration with <code>AUTH_USER_MODEL</code>.</li>\n<li>Validation to prevent common mistakes.</li>\n<li>Faster server response time through caching</li>\n</ul>\n<h2>Requirements</h2>\n<p><strong>Django 1.11+</strong> since v1.7.0 (latest release supporting <strong>Django 1.10</strong> is v1.6.0)</p>\n<h2>Installation</h2>\n<ol>\n<li><code>pip install django2-friendship</code></li>\n<li>add <code>\"friendship\"</code> to <code>INSTALLED_APPS</code> and run <code>python manage.py migrate</code>.</li>\n<li>Use the friendship manager in your own views, or wire up the URLconf to include the builtin views:</li>\n</ol>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^friendship/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'friendship.urls'</span><span class=\"p\">))</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Note: If you are migrating from django-friendship <code>v1.6.x</code>, you'll need to rollback your migrations and fake\nmigration <code>0002</code></p>\n<pre>$ ./manage.py migrate friendship <span class=\"m\">0001</span>\n$ ./manage.py migrate friendship <span class=\"m\">0002</span> --fake\n</pre>\n<p>If you're migrating from <code>v1.7.x</code>, you'll likely have to fake <code>0003</code> as well:</p>\n<pre>$ ./manage.py migrate friendship <span class=\"m\">0003</span> --fake\n</pre>\n<h2>Usage</h2>\n<p><code>django-friendship</code> provides a free API that gives you several ways to create and manage friendship requests or follows in your views. Add the following at the top of your <code>views.py</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"kn\">from</span> <span class=\"nn\">friendship.models</span> <span class=\"kn\">import</span> <span class=\"n\">Friend</span><span class=\"p\">,</span> <span class=\"n\">Follow</span><span class=\"p\">,</span> <span class=\"n\">Block</span>\n</pre>\n<h3>Getting Data about Friendships</h3>\n<ul>\n<li>List all of a user's friends: <code>Friend.objects.friends(request.user)</code></li>\n<li>List all unread friendship requests: <code>Friend.objects.unread_requests(user=request.user)</code></li>\n<li>List all unrejected friendship requests: <code>Friend.objects.unrejected_requests(user=request.user)</code></li>\n<li>Count of all unrejected friendship requests: <code>Friend.objects.unrejected_request_count(user=request.user)</code></li>\n<li>List all rejected friendship requests: <code>Friend.objects.rejected_requests(user=request.user)</code></li>\n<li>Count of all rejected friendship requests: <code>Friend.objects.rejected_request_count(user=request.user)</code></li>\n<li>List of all sent friendship requests: <code>Friend.objects.sent_requests(user=request.user)</code></li>\n<li>Test if two users are friends: <code>Friend.objects.are_friends(request.user, other_user) == True</code></li>\n</ul>\n<h3>Getting Data about Follows</h3>\n<ul>\n<li>List of a user's followers: <code>Follow.objects.followers(request.user)</code></li>\n<li>List of who a user is following: <code>Follow.objects.following(request.user)</code></li>\n</ul>\n<h3>Getting Data about Blocks</h3>\n<ul>\n<li>List of a user's blockers: <code>Block.objects.blockers(request.user)</code></li>\n<li>List of who a user is blocking: <code>Block.objects.blocking(request.user)</code></li>\n<li>Test if a user is blocked: <code>Block.objects.is_blocked(request.user, other_user) == True</code></li>\n</ul>\n<h3>Managing Friendships and Follows</h3>\n<h4>Create a friendship request:</h4>\n<pre><span class=\"n\">other_user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">Friend</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">add_friend</span><span class=\"p\">(</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span>                               <span class=\"c1\"># The sender</span>\n    <span class=\"n\">other_user</span><span class=\"p\">,</span>                                 <span class=\"c1\"># The recipient</span>\n    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'Hi! I would like to add you'</span><span class=\"p\">)</span>      <span class=\"c1\"># This message is optional</span>\n</pre>\n<h4>Let the user who received the request respond:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">friendship.models</span> <span class=\"kn\">import</span> <span class=\"n\">FriendshipRequest</span>\n\n<span class=\"n\">friend_request</span> <span class=\"o\">=</span> <span class=\"n\">FriendshipRequest</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">to_user</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">friend_request</span><span class=\"o\">.</span><span class=\"n\">accept</span><span class=\"p\">()</span>\n<span class=\"c1\"># or friend_request.reject()</span>\n</pre>\n<h4>To remove the friendship relationship between <code>request.user</code> and <code>other_user</code>, do the following:</h4>\n<pre><span class=\"n\">Friend</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">remove_friend</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">other_user</span><span class=\"p\">)</span>\n</pre>\n<h4>Make request.user a follower of other_user:</h4>\n<pre><span class=\"n\">Follow</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">add_follower</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">other_user</span><span class=\"p\">)</span>\n</pre>\n<h4>Make request.user block other_user:</h4>\n<pre><span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">add_block</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">other_user</span><span class=\"p\">)</span>\n</pre>\n<h4>Make request.user unblock other_user:</h4>\n<pre><span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">remove_block</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">other_user</span><span class=\"p\">)</span>\n</pre>\n<h3>Templates</h3>\n<p>You can use <code>django-friendship</code> tags in your templates. First enter:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">friendshiptags</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n</pre>\n<p>Then use any of the following:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">friends</span> <span class=\"nv\">request.user</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"cp\">{%</span> <span class=\"k\">followers</span> <span class=\"nv\">request.user</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"cp\">{%</span> <span class=\"k\">following</span> <span class=\"nv\">request.user</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"cp\">{%</span> <span class=\"k\">friend_requests</span> <span class=\"nv\">request.user</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"cp\">{%</span> <span class=\"k\">blockers</span> <span class=\"nv\">request.user</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"cp\">{%</span> <span class=\"k\">blocking</span> <span class=\"nv\">request.user</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n</pre>\n<h3>Signals</h3>\n<p><code>django-friendship</code> emits the following signals:</p>\n<ul>\n<li>friendship_request_created</li>\n<li>friendship_request_rejected</li>\n<li>friendship_request_canceled</li>\n<li>friendship_request_accepted</li>\n<li>friendship_removed</li>\n<li>follower_created</li>\n<li>following_created</li>\n<li>follower_removed</li>\n<li>following_removed</li>\n<li>block_created</li>\n<li>block_removed</li>\n</ul>\n<h3>Contributing</h3>\n<p>Development <a href=\"https://github.com/revsys/django-friendship\" rel=\"nofollow\">takes place on GitHub</a>. Bug reports, patches, and fixes are always welcome!</p>\n<h1>Need help?</h1>\n<p><a href=\"http://www.revsys.com?utm_medium=github&amp;utm_source=django-test-plus\" rel=\"nofollow\">REVSYS</a> can help with your Python, Django, and infrastructure projects. If you have a question about this project, please open a GitHub issue. If you love us and want to keep track of our goings-on, here's where you can find us online:</p>\n<p><a href=\"https://revsys.com?utm_medium=github&amp;utm_source=django-friendship\" rel=\"nofollow\"><img height=\"50\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/129762ba43c587eca016d78cd2f9cdff976f90fb/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f3931353932383631383834303238353138352f7355645247496e315f343030783430302e6a7067\"></a>\n<a href=\"https://twitter.com/revsys\" rel=\"nofollow\"><img height=\"43\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bff90e41df435a494e1b36f995e39d4643261185/68747470733a2f2f63646e312e69636f6e66696e6465722e636f6d2f646174612f69636f6e732f6e65775f747769747465725f69636f6e2f3235362f626972645f747769747465725f6e65775f73696d706c652e706e67\"></a>\n<a href=\"https://www.facebook.com/revsysllc/\" rel=\"nofollow\"><img height=\"50\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/505359895cf17fdb9f0d61144d0569ed0cc974dd/68747470733a2f2f63646e332e69636f6e66696e6465722e636f6d2f646174612f69636f6e732f7069636f6e732d736f6369616c2f35372f30362d66616365626f6f6b2d3531322e706e67\"></a>\n<a href=\"https://github.com/revsys/\" rel=\"nofollow\"><img height=\"53\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c971eeefadb20f8fd300633a1c0ca88fb895bd67/68747470733a2f2f6173736574732d63646e2e6769746875622e636f6d2f696d616765732f6d6f64756c65732f6c6f676f735f706167652f4769744875622d4d61726b2e706e67\"></a>\n<a href=\"https://gitlab.com/revsys\" rel=\"nofollow\"><img height=\"44\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c7a661724ce1d970fd190a4eeb5099f51ef3cad/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f312f31382f4769744c61625f4c6f676f2e7376672f3230303070782d4769744c61625f4c6f676f2e7376672e706e67\"></a></p>\n\n          </div>"}, "last_serial": 7045492, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "69552ab593f8028b523fa48d87b6e524", "sha256": "cbb99e966054de331bae381bc5e97280cdddd727ad3e929ba7d3c47cece914aa"}, "downloads": -1, "filename": "django2_friendship-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "69552ab593f8028b523fa48d87b6e524", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36283, "upload_time": "2020-04-18T02:42:38", "upload_time_iso_8601": "2020-04-18T02:42:38.529680Z", "url": "https://files.pythonhosted.org/packages/12/80/6ab3273392058223e9a9027a60b8467c204c689cb9c14b6edecbf93298ad/django2_friendship-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01d33ae7a0afea25bc7de6ae15cafe82", "sha256": "b32a9204fc6dec60c301e0ac3f851f99a627d9b5bb43f22851c5b3e0e50988dc"}, "downloads": -1, "filename": "django2-friendship-2.0.0.tar.gz", "has_sig": false, "md5_digest": "01d33ae7a0afea25bc7de6ae15cafe82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21448, "upload_time": "2020-04-18T02:42:42", "upload_time_iso_8601": "2020-04-18T02:42:42.709220Z", "url": "https://files.pythonhosted.org/packages/39/bb/2d6b486ca4d3160c4c823b4f157138bfcc5cd3dafd67af2f11e100db0327/django2-friendship-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69552ab593f8028b523fa48d87b6e524", "sha256": "cbb99e966054de331bae381bc5e97280cdddd727ad3e929ba7d3c47cece914aa"}, "downloads": -1, "filename": "django2_friendship-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "69552ab593f8028b523fa48d87b6e524", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36283, "upload_time": "2020-04-18T02:42:38", "upload_time_iso_8601": "2020-04-18T02:42:38.529680Z", "url": "https://files.pythonhosted.org/packages/12/80/6ab3273392058223e9a9027a60b8467c204c689cb9c14b6edecbf93298ad/django2_friendship-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01d33ae7a0afea25bc7de6ae15cafe82", "sha256": "b32a9204fc6dec60c301e0ac3f851f99a627d9b5bb43f22851c5b3e0e50988dc"}, "downloads": -1, "filename": "django2-friendship-2.0.0.tar.gz", "has_sig": false, "md5_digest": "01d33ae7a0afea25bc7de6ae15cafe82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21448, "upload_time": "2020-04-18T02:42:42", "upload_time_iso_8601": "2020-04-18T02:42:42.709220Z", "url": "https://files.pythonhosted.org/packages/39/bb/2d6b486ca4d3160c4c823b4f157138bfcc5cd3dafd67af2f11e100db0327/django2-friendship-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:55 2020"}