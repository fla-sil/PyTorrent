{"info": {"author": "Eric Schles", "author_email": "ericschles@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Performance Tuner\n\nThe goal of this library is to provide a set of tools for tuning your model performance.\n\n## Implemented Notions\n\n* Bootstrapping Your Data - this library provides a powerful yet flexible bootstrap algorithm that resamples your data such that the resampled data conforms to the descriptive statistics as well as shape of the original distribution.  It is important that you sample only from the training data and not from the raw data otherwise it will be very hard to tell if there are examples from the training set in the test set.\n\n* precision - recall tuning - this library provides a formal set of functions to tune your algorithm towards precision or recall based on the decision boundary from predict probability.  Sometimes it's more important to be confident in a few of your returned results, rather than to provide a balanced algorithm.  This module provides the ability to bias your algorithm towards precision or recall based on the business need\n\n* hyper parameter tuning - this library provides a bunch of different strategies for tuning your algorithm's hyper parameters to maximize performance\n\n* simulating data - this library provides utilities to draw simulated data from an inferred distribution matching the original data's distribution.  \n\n* simulating labels - this library provides a number of auto labeling strategies for simulated data.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EricSchles/performance_tuner", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "performance-tuner", "package_url": "https://pypi.org/project/performance-tuner/", "platform": "", "project_url": "https://pypi.org/project/performance-tuner/", "project_urls": {"Homepage": "https://github.com/EricSchles/performance_tuner"}, "release_url": "https://pypi.org/project/performance-tuner/0.1/", "requires_dist": null, "requires_python": "", "summary": "A set of tools to performance tune your models", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Performance Tuner</h1>\n<p>The goal of this library is to provide a set of tools for tuning your model performance.</p>\n<h2>Implemented Notions</h2>\n<ul>\n<li>\n<p>Bootstrapping Your Data - this library provides a powerful yet flexible bootstrap algorithm that resamples your data such that the resampled data conforms to the descriptive statistics as well as shape of the original distribution.  It is important that you sample only from the training data and not from the raw data otherwise it will be very hard to tell if there are examples from the training set in the test set.</p>\n</li>\n<li>\n<p>precision - recall tuning - this library provides a formal set of functions to tune your algorithm towards precision or recall based on the decision boundary from predict probability.  Sometimes it's more important to be confident in a few of your returned results, rather than to provide a balanced algorithm.  This module provides the ability to bias your algorithm towards precision or recall based on the business need</p>\n</li>\n<li>\n<p>hyper parameter tuning - this library provides a bunch of different strategies for tuning your algorithm's hyper parameters to maximize performance</p>\n</li>\n<li>\n<p>simulating data - this library provides utilities to draw simulated data from an inferred distribution matching the original data's distribution.</p>\n</li>\n<li>\n<p>simulating labels - this library provides a number of auto labeling strategies for simulated data.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5133380, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e4b8a0c857ba63e06ba794ea17589c21", "sha256": "0dcc72d81e1d25de65ef619b8f092ebd06bd349c3c61d592c6772ffae146ad90"}, "downloads": -1, "filename": "performance_tuner-0.1-py3.6.egg", "has_sig": false, "md5_digest": "e4b8a0c857ba63e06ba794ea17589c21", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 4521, "upload_time": "2019-04-12T10:28:24", "upload_time_iso_8601": "2019-04-12T10:28:24.462476Z", "url": "https://files.pythonhosted.org/packages/f3/3a/481ef8a7fed5750524f9cb207a8b68f23831339ea0f3596f90a54b6e2cbb/performance_tuner-0.1-py3.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4b8a0c857ba63e06ba794ea17589c21", "sha256": "0dcc72d81e1d25de65ef619b8f092ebd06bd349c3c61d592c6772ffae146ad90"}, "downloads": -1, "filename": "performance_tuner-0.1-py3.6.egg", "has_sig": false, "md5_digest": "e4b8a0c857ba63e06ba794ea17589c21", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 4521, "upload_time": "2019-04-12T10:28:24", "upload_time_iso_8601": "2019-04-12T10:28:24.462476Z", "url": "https://files.pythonhosted.org/packages/f3/3a/481ef8a7fed5750524f9cb207a8b68f23831339ea0f3596f90a54b6e2cbb/performance_tuner-0.1-py3.6.egg", "yanked": false}], "timestamp": "Fri May  8 02:56:19 2020"}