{"info": {"author": "Sascha Steinbiss", "author_email": "sascha@steinbiss.name", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "ballsy\n======\n\nBallsy is a GitHub release tarball signing tool. It tries to promote\nsigning of the automatically generated release tarballs on GitHub with\ndeveloper's OpenPGP keys. Usually that would involve:\n\n-  pushing a tag\n-  navigating to the GitHub web page and creating a release\n-  downloading their tarball\n-  signing the tarball\n-  uploading the detached ASCII signature to the release page as an\n   asset\n\n(And then redo this for the ZIP file...) The Debian wiki has a good set\nof `instructions for\nthis <https://wiki.debian.org/Creating%20signed%20GitHub%20releases>`__.\n\nMost of us probably wouldn't bother doing this. This software automates\nthis job by taking care of the necessary steps as outlined above.\n\nAdditional features:\n\n-  Automatic conversion from tags to releases\n-  Selective signing of ZIPs/tarballs\n-  Automatic target repo selection based on current directory\n\nInstallation\n============\n\n::\n\n    $ pip install ballsy\n\nUsage\n=====\n\nYou'll need to log in to GitHub once:\n\n::\n\n    $ ballsy login\n\nwhich will ask for your user credentials, and then obtain a token for\nfuture logins (stored in ``~/.ballsyrc``). 2FA by phone is supported.\n\nAfter logging in, signing is as easy as:\n\n::\n\n    $ ballsy sign v2.0\n\nto sign the release v2.0 in the GitHub repo pointed to by the ``origin``\nremote in the current directory (which is the default). Other targets\ncan easily be specified:\n\n::\n\n    $ ballsy sign --remote home v2.0\n    $ ballsy sign --repo foobar/otherrepo v2.0\n\nBy default, the key specified in Git's ``user.signingkey`` property is\nused, but this can be overridden using the ``--keyid`` option.\n\nIf you don't usually use releases on GitHub, just tags, it is possible\nto automatically prepare a release given a tag (``--include-tags``).\nThis also works when specifying multiple tags:\n\n::\n\n    $ ballsy sign --include-tags v1.0 v1.2 v2.0\n\nPlease see ``ballsy --help`` and ``ballsy sign --help`` for more\noptions.\n\nTODO\n====\n\nAt the moment you have to trust GitHub not to alter the contents of the\ntarballs when preparing a release. Future versions of ballsy will verify\nthe contents of the downloaded tarballs against the local content\ncorresponding to given tags.\n\nLICENSE\n=======\n\n2-clause BSD, see ``LICENSE.txt``", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/satta/ballsy", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "ballsy", "package_url": "https://pypi.org/project/ballsy/", "platform": "any", "project_url": "https://pypi.org/project/ballsy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/satta/ballsy"}, "release_url": "https://pypi.org/project/ballsy/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "GitHub release signing tool", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ballsy\">\n<h2>ballsy</h2>\n<p>Ballsy is a GitHub release tarball signing tool. It tries to promote\nsigning of the automatically generated release tarballs on GitHub with\ndeveloper\u2019s OpenPGP keys. Usually that would involve:</p>\n<ul>\n<li>pushing a tag</li>\n<li>navigating to the GitHub web page and creating a release</li>\n<li>downloading their tarball</li>\n<li>signing the tarball</li>\n<li>uploading the detached ASCII signature to the release page as an\nasset</li>\n</ul>\n<p>(And then redo this for the ZIP file\u2026) The Debian wiki has a good set\nof <a href=\"https://wiki.debian.org/Creating%20signed%20GitHub%20releases\" rel=\"nofollow\">instructions for\nthis</a>.</p>\n<p>Most of us probably wouldn\u2019t bother doing this. This software automates\nthis job by taking care of the necessary steps as outlined above.</p>\n<p>Additional features:</p>\n<ul>\n<li>Automatic conversion from tags to releases</li>\n<li>Selective signing of ZIPs/tarballs</li>\n<li>Automatic target repo selection based on current directory</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install ballsy\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You\u2019ll need to log in to GitHub once:</p>\n<pre>$ ballsy login\n</pre>\n<p>which will ask for your user credentials, and then obtain a token for\nfuture logins (stored in <tt><span class=\"pre\">~/.ballsyrc</span></tt>). 2FA by phone is supported.</p>\n<p>After logging in, signing is as easy as:</p>\n<pre>$ ballsy sign v2.0\n</pre>\n<p>to sign the release v2.0 in the GitHub repo pointed to by the <tt>origin</tt>\nremote in the current directory (which is the default). Other targets\ncan easily be specified:</p>\n<pre>$ ballsy sign --remote home v2.0\n$ ballsy sign --repo foobar/otherrepo v2.0\n</pre>\n<p>By default, the key specified in Git\u2019s <tt>user.signingkey</tt> property is\nused, but this can be overridden using the <tt><span class=\"pre\">--keyid</span></tt> option.</p>\n<p>If you don\u2019t usually use releases on GitHub, just tags, it is possible\nto automatically prepare a release given a tag (<tt><span class=\"pre\">--include-tags</span></tt>).\nThis also works when specifying multiple tags:</p>\n<pre>$ ballsy sign --include-tags v1.0 v1.2 v2.0\n</pre>\n<p>Please see <tt>ballsy <span class=\"pre\">--help</span></tt> and <tt>ballsy sign <span class=\"pre\">--help</span></tt> for more\noptions.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>At the moment you have to trust GitHub not to alter the contents of the\ntarballs when preparing a release. Future versions of ballsy will verify\nthe contents of the downloaded tarballs against the local content\ncorresponding to given tags.</p>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>2-clause BSD, see <tt>LICENSE.txt</tt></p>\n</div>\n\n          </div>"}, "last_serial": 2228105, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "91e957fef5b12c360dfba9df8af42fde", "sha256": "0b0a02115895249ef6f6d451214ef849b0bd257c1ef22c86c24bb12733dd227c"}, "downloads": -1, "filename": "ballsy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "91e957fef5b12c360dfba9df8af42fde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5735, "upload_time": "2016-07-18T11:57:52", "upload_time_iso_8601": "2016-07-18T11:57:52.583919Z", "url": "https://files.pythonhosted.org/packages/9f/fb/914b17e103720bffdf835d1a3a913e860a6e69f360857d2c9ec21a9ed52a/ballsy-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91e957fef5b12c360dfba9df8af42fde", "sha256": "0b0a02115895249ef6f6d451214ef849b0bd257c1ef22c86c24bb12733dd227c"}, "downloads": -1, "filename": "ballsy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "91e957fef5b12c360dfba9df8af42fde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5735, "upload_time": "2016-07-18T11:57:52", "upload_time_iso_8601": "2016-07-18T11:57:52.583919Z", "url": "https://files.pythonhosted.org/packages/9f/fb/914b17e103720bffdf835d1a3a913e860a6e69f360857d2c9ec21a9ed52a/ballsy-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:59 2020"}