{"info": {"author": "Patrick Hensley", "author_email": "spaceboy@indirect.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "gstatsd - A statsd service implementation in Python + gevent.\n\nIf you are unfamiliar with statsd, you can read\n`why statsd exists <http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/>`_,\nor look at the\n`NodeJS statsd implementation <https://github.com/etsy/statsd>`_.\n\nLicense:\n`Apache 2.0 <http://www.apache.org/licenses/LICENSE-2.0>`_\n\nRequirements\n------------\n\n\n-  `Python <http://www.python.org/>`_ - I'm testing on 2.6/2.7 at\n   the moment.\n-  `gevent <http://www.gevent.org/>`_ - A libevent wrapper.\n-  `distribute <http://pypi.python.org/pypi/distribute>`_ - (or\n   setuptools) for builds.\n\nUsing gstatsd\n-------------\n\nShow gstatsd help:\n\n::\n\n    % gstatsd -h\n\nOptions:\n\n::\n\n    Usage: gstatsd [options]\n    \n     A statsd service in Python + gevent.\n    \n    Options:\n      --version             show program's version number and exit\n      -b BIND_ADDR, --bind=BIND_ADDR\n                            bind [host]:port (host defaults to '')\n      -s SINK, --sink=SINK  a graphite service to which stats are sent\n                            ([host]:port).\n      -v                    increase verbosity (currently used for debugging)\n      -f INTERVAL, --flush=INTERVAL\n                            flush interval, in seconds (default 10)\n      -p PERCENT, --percent=PERCENT\n                            percent threshold (default 90)\n      -D, --daemonize       daemonize the service\n      -h, --help\n\nStart gstatsd listening on the default port 8125, and send stats to\ngraphite server on port 2003 every 5 seconds:\n\n::\n\n    % gstatsd -s 2003 -f 5\n\nBind listener to host 'foo' port 8126, and send stats to the\nGraphite server on host 'bar' port 2003 every 20 seconds:\n\n::\n\n    % gstatsd -b foo:8126 -s bar:2003 -f 20\n\nTo send the stats to multiple graphite servers, specify '-s'\nmultiple times:\n\n::\n\n    % gstatsd -b :8125 -s stats1:2003 -s stats2:2004\n\nUsing the client\n----------------\n\nThe code example below demonstrates using the low-level client\ninterface:\n\n::\n\n    from gstatsd import client\n    \n    # location of the statsd server\n    hostport = ('', 8125)\n    \n    raw = client.StatsClient(hostport)\n    \n    # add 1 to the 'foo' bucket\n    raw.increment('foo')\n    \n    # timer 'bar' took 25ms to complete\n    raw.timer('bar', 25)\n\nYou may prefer to use the stateful client:\n\n::\n\n    # wraps the raw client\n    cli = client.Stats(raw)\n    \n    timer = cli.get_timer('foo')\n    timer.start()\n    \n    ... do some work ..\n    \n    # when .stop() is called, the stat is sent to the server\n    timer.stop()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/phensley/gstatsd", "keywords": "stats,graphite,statsd,gevent", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "gstatsd", "package_url": "https://pypi.org/project/gstatsd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gstatsd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/phensley/gstatsd"}, "release_url": "https://pypi.org/project/gstatsd/0.6/", "requires_dist": null, "requires_python": null, "summary": "A statsd service and client in Python + gevent", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>gstatsd - A statsd service implementation in Python + gevent.</p>\n<p>If you are unfamiliar with statsd, you can read\n<a href=\"http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/\" rel=\"nofollow\">why statsd exists</a>,\nor look at the\n<a href=\"https://github.com/etsy/statsd\" rel=\"nofollow\">NodeJS statsd implementation</a>.</p>\n<p>License:\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache 2.0</a></p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> - I\u2019m testing on 2.6/2.7 at\nthe moment.</li>\n<li><a href=\"http://www.gevent.org/\" rel=\"nofollow\">gevent</a> - A libevent wrapper.</li>\n<li><a href=\"http://pypi.python.org/pypi/distribute\" rel=\"nofollow\">distribute</a> - (or\nsetuptools) for builds.</li>\n</ul>\n</div>\n<div id=\"using-gstatsd\">\n<h2>Using gstatsd</h2>\n<p>Show gstatsd help:</p>\n<pre>% gstatsd -h\n</pre>\n<p>Options:</p>\n<pre>Usage: gstatsd [options]\n\n A statsd service in Python + gevent.\n\nOptions:\n  --version             show program's version number and exit\n  -b BIND_ADDR, --bind=BIND_ADDR\n                        bind [host]:port (host defaults to '')\n  -s SINK, --sink=SINK  a graphite service to which stats are sent\n                        ([host]:port).\n  -v                    increase verbosity (currently used for debugging)\n  -f INTERVAL, --flush=INTERVAL\n                        flush interval, in seconds (default 10)\n  -p PERCENT, --percent=PERCENT\n                        percent threshold (default 90)\n  -D, --daemonize       daemonize the service\n  -h, --help\n</pre>\n<p>Start gstatsd listening on the default port 8125, and send stats to\ngraphite server on port 2003 every 5 seconds:</p>\n<pre>% gstatsd -s 2003 -f 5\n</pre>\n<p>Bind listener to host \u2018foo\u2019 port 8126, and send stats to the\nGraphite server on host \u2018bar\u2019 port 2003 every 20 seconds:</p>\n<pre>% gstatsd -b foo:8126 -s bar:2003 -f 20\n</pre>\n<p>To send the stats to multiple graphite servers, specify \u2018-s\u2019\nmultiple times:</p>\n<pre>% gstatsd -b :8125 -s stats1:2003 -s stats2:2004\n</pre>\n</div>\n<div id=\"using-the-client\">\n<h2>Using the client</h2>\n<p>The code example below demonstrates using the low-level client\ninterface:</p>\n<pre>from gstatsd import client\n\n# location of the statsd server\nhostport = ('', 8125)\n\nraw = client.StatsClient(hostport)\n\n# add 1 to the 'foo' bucket\nraw.increment('foo')\n\n# timer 'bar' took 25ms to complete\nraw.timer('bar', 25)\n</pre>\n<p>You may prefer to use the stateful client:</p>\n<pre># wraps the raw client\ncli = client.Stats(raw)\n\ntimer = cli.get_timer('foo')\ntimer.start()\n\n... do some work ..\n\n# when .stop() is called, the stat is sent to the server\ntimer.stop()\n</pre>\n</div>\n\n          </div>"}, "last_serial": 935210, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "bb1d6d754e54277337e065d7c8abfe4d", "sha256": "be9e41887e032ddc8286ef23c8749d4240b044bfb765d53058e0ce041a162164"}, "downloads": -1, "filename": "gstatsd-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bb1d6d754e54277337e065d7c8abfe4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6886, "upload_time": "2011-06-29T18:13:52", "upload_time_iso_8601": "2011-06-29T18:13:52.107004Z", "url": "https://files.pythonhosted.org/packages/ff/d5/bb0d7150cbf54c7bbd92b6cd343eb7b0c52c541dc4c7ce2189d0b3d26428/gstatsd-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0e6d873ddd98e98ca2724091556fe1dc", "sha256": "e5b9be11a2a1bb58e95736cd4d0284d7890428294321f833fb44b7e0f2aafb7e"}, "downloads": -1, "filename": "gstatsd-0.4.tar.gz", "has_sig": false, "md5_digest": "0e6d873ddd98e98ca2724091556fe1dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7407, "upload_time": "2011-06-30T23:23:58", "upload_time_iso_8601": "2011-06-30T23:23:58.255221Z", "url": "https://files.pythonhosted.org/packages/5a/fa/e66e7f09bb949cf0d0a528bb5f709ad55eb07f5c34b4d01246491d42362c/gstatsd-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "4fa0d23a4e3106b3106239cdfefe4c44", "sha256": "920271b6fafa822cf5d859935895e4e62f5b4636df8135f753872f3239e2ac70"}, "downloads": -1, "filename": "gstatsd-0.5.tar.gz", "has_sig": false, "md5_digest": "4fa0d23a4e3106b3106239cdfefe4c44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7846, "upload_time": "2013-05-29T16:53:55", "upload_time_iso_8601": "2013-05-29T16:53:55.782479Z", "url": "https://files.pythonhosted.org/packages/b6/02/0b1bea690778b11962f5a002bb2748dd1811644f147a2ad0769f18c4d7c5/gstatsd-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "0bd33c4ba059fefa73ba5a5475382e24", "sha256": "52cf2a558a54793a3e888889b973fc998553a58c98c9259ab7f9c60f4fd2bf80"}, "downloads": -1, "filename": "gstatsd-0.6.tar.gz", "has_sig": false, "md5_digest": "0bd33c4ba059fefa73ba5a5475382e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7639, "upload_time": "2013-12-03T23:00:15", "upload_time_iso_8601": "2013-12-03T23:00:15.081490Z", "url": "https://files.pythonhosted.org/packages/3a/17/cf429e3dcd5e04b3922365ee14f03832bf924782de7cda2b28fc64ad607b/gstatsd-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bd33c4ba059fefa73ba5a5475382e24", "sha256": "52cf2a558a54793a3e888889b973fc998553a58c98c9259ab7f9c60f4fd2bf80"}, "downloads": -1, "filename": "gstatsd-0.6.tar.gz", "has_sig": false, "md5_digest": "0bd33c4ba059fefa73ba5a5475382e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7639, "upload_time": "2013-12-03T23:00:15", "upload_time_iso_8601": "2013-12-03T23:00:15.081490Z", "url": "https://files.pythonhosted.org/packages/3a/17/cf429e3dcd5e04b3922365ee14f03832bf924782de7cda2b28fc64ad607b/gstatsd-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:37 2020"}