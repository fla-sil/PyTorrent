{"info": {"author": "myDevices", "author_email": "support@mydevices.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Communications", "Topic :: Home Automation", "Topic :: Internet", "Topic :: Software Development", "Topic :: System :: Monitoring"], "description": "Cayenne MQTT Python Library\n***************************\nThe Cayenne MQTT Python Library provides functions to easily connect to the `Cayenne IoT project builder <https://mydevices.com>`_. With it you can send data to and receive data from Cayenne.\n\nRequirements\n============\n* `Python 2.7.9+ or 3.4+ <https://www.python.org/downloads/>`_.\n* `This library <https://github.com/myDevicesIoT/Cayenne-MQTT-Python/archive/master.zip>`_.\n* `Eclipse Paho MQTT Python client library <https://github.com/eclipse/paho.mqtt.python>`_. This is installed as part of the Cayenne library installation.\n\nGetting Started\n===============\nInstallation\n------------\nThis library can be installed using pip:\n::\n\n  pip install cayenne-mqtt\n\nIt can also be installed from the repository:\n::\n\n  git clone https://github.com/myDevicesIoT/Cayenne-MQTT-Python\n  cd Cayenne-MQTT-Python\n  python setup.py install\n  \nCayenne Setup\n-------------\n1. Create your Cayenne account at https://mydevices.com.\n2. Add a new device using the Bring Your Own Thing API selection.\n\nExamples\n--------\nSimple examples are available in the repository here: https://github.com/myDevicesIoT/Cayenne-MQTT-Python/tree/master/examples.\n\nBelow is an example of a simple client that publishes some sample data and receives data from Cayenne in a message callback. The Cayenne authentication variables must be modified with the authentication info you received when adding a new device in Cayenne:\n::\n\n  import cayenne.client\n  import time\n\n  # Cayenne authentication info. This should be obtained from the Cayenne Dashboard.\n  MQTT_USERNAME  = \"MQTT_USERNAME\"\n  MQTT_PASSWORD  = \"MQTT_PASSWORD\"\n  MQTT_CLIENT_ID = \"MQTT_CLIENT_ID\"\n\n  # The callback for when a message is received from Cayenne.\n  def on_message(message):\n    print(\"message received: \" + str(message))\n    # If there is an error processing the message return an error string, otherwise return nothing.\n    \n  client = cayenne.client.CayenneMQTTClient()\n  client.on_message = on_message\n  client.begin(MQTT_USERNAME, MQTT_PASSWORD, MQTT_CLIENT_ID)\n  # For a secure connection use port 8883 when calling client.begin:\n  # client.begin(MQTT_USERNAME, MQTT_PASSWORD, MQTT_CLIENT_ID, port=8883)\n\n  i=0\n  timestamp = 0\n\n  while True:\n    client.loop()\n    \n    if (time.time() > timestamp + 10):\n      client.celsiusWrite(1, i)\n      client.luxWrite(2, i*10)\n      client.hectoPascalWrite(3, i+800)\n      timestamp = time.time()\n      i = i+1\n\nDocumentation\n-------------\nFor more detailed info about the Cayenne client API you can use **pydoc**.\n::\n\n  pydoc cayenne.client\n  \n\nAdditional Cayenne MQTT Libraries\n=================================\nAdditional libraries are available for connecting to Cayenne with other languages. These can be found at https://github.com/myDevicesIoT.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/myDevicesIoT/Cayenne-MQTT-Python", "keywords": "myDevices Cayenne MQTT", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cayenne-mqtt", "package_url": "https://pypi.org/project/cayenne-mqtt/", "platform": "", "project_url": "https://pypi.org/project/cayenne-mqtt/", "project_urls": {"Homepage": "https://github.com/myDevicesIoT/Cayenne-MQTT-Python"}, "release_url": "https://pypi.org/project/cayenne-mqtt/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Cayenne MQTT Python Library", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The Cayenne MQTT Python Library provides functions to easily connect to the <a href=\"https://mydevices.com\" rel=\"nofollow\">Cayenne IoT project builder</a>. With it you can send data to and receive data from Cayenne.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python 2.7.9+ or 3.4+</a>.</li>\n<li><a href=\"https://github.com/myDevicesIoT/Cayenne-MQTT-Python/archive/master.zip\" rel=\"nofollow\">This library</a>.</li>\n<li><a href=\"https://github.com/eclipse/paho.mqtt.python\" rel=\"nofollow\">Eclipse Paho MQTT Python client library</a>. This is installed as part of the Cayenne library installation.</li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>This library can be installed using pip:</p>\n<pre>pip install cayenne-mqtt\n</pre>\n<p>It can also be installed from the repository:</p>\n<pre>git clone https://github.com/myDevicesIoT/Cayenne-MQTT-Python\ncd Cayenne-MQTT-Python\npython setup.py install\n</pre>\n</div>\n<div id=\"cayenne-setup\">\n<h3>Cayenne Setup</h3>\n<ol>\n<li>Create your Cayenne account at <a href=\"https://mydevices.com\" rel=\"nofollow\">https://mydevices.com</a>.</li>\n<li>Add a new device using the Bring Your Own Thing API selection.</li>\n</ol>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Simple examples are available in the repository here: <a href=\"https://github.com/myDevicesIoT/Cayenne-MQTT-Python/tree/master/examples\" rel=\"nofollow\">https://github.com/myDevicesIoT/Cayenne-MQTT-Python/tree/master/examples</a>.</p>\n<p>Below is an example of a simple client that publishes some sample data and receives data from Cayenne in a message callback. The Cayenne authentication variables must be modified with the authentication info you received when adding a new device in Cayenne:</p>\n<pre>import cayenne.client\nimport time\n\n# Cayenne authentication info. This should be obtained from the Cayenne Dashboard.\nMQTT_USERNAME  = \"MQTT_USERNAME\"\nMQTT_PASSWORD  = \"MQTT_PASSWORD\"\nMQTT_CLIENT_ID = \"MQTT_CLIENT_ID\"\n\n# The callback for when a message is received from Cayenne.\ndef on_message(message):\n  print(\"message received: \" + str(message))\n  # If there is an error processing the message return an error string, otherwise return nothing.\n\nclient = cayenne.client.CayenneMQTTClient()\nclient.on_message = on_message\nclient.begin(MQTT_USERNAME, MQTT_PASSWORD, MQTT_CLIENT_ID)\n# For a secure connection use port 8883 when calling client.begin:\n# client.begin(MQTT_USERNAME, MQTT_PASSWORD, MQTT_CLIENT_ID, port=8883)\n\ni=0\ntimestamp = 0\n\nwhile True:\n  client.loop()\n\n  if (time.time() &gt; timestamp + 10):\n    client.celsiusWrite(1, i)\n    client.luxWrite(2, i*10)\n    client.hectoPascalWrite(3, i+800)\n    timestamp = time.time()\n    i = i+1\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>For more detailed info about the Cayenne client API you can use <strong>pydoc</strong>.</p>\n<pre>pydoc cayenne.client\n</pre>\n</div>\n</div>\n<div id=\"additional-cayenne-mqtt-libraries\">\n<h2>Additional Cayenne MQTT Libraries</h2>\n<p>Additional libraries are available for connecting to Cayenne with other languages. These can be found at <a href=\"https://github.com/myDevicesIoT\" rel=\"nofollow\">https://github.com/myDevicesIoT</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 3589601, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d27a50fb6e83fa94263fb1973aa55cac", "sha256": "40579be647ffd617c9649b896f54308e7a8c75b8c200a5fb39a736dc3394c8bf"}, "downloads": -1, "filename": "cayenne-mqtt-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d27a50fb6e83fa94263fb1973aa55cac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5391, "upload_time": "2016-12-12T23:49:26", "upload_time_iso_8601": "2016-12-12T23:49:26.570777Z", "url": "https://files.pythonhosted.org/packages/7c/77/a530d2a10f2b5fee40930f232f2d4f1799b7b96bd15b1a5f2ed5b61526f0/cayenne-mqtt-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "229522e7b4966ce048863eae552533d9", "sha256": "e5f50ac821d3886d7f09eb65f5d6dbd20419acaa48611fe1ac037b388dfdb60c"}, "downloads": -1, "filename": "cayenne-mqtt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "229522e7b4966ce048863eae552533d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5405, "upload_time": "2017-07-05T18:18:06", "upload_time_iso_8601": "2017-07-05T18:18:06.393844Z", "url": "https://files.pythonhosted.org/packages/6d/a5/adeb798f5ca02713234a15f9691322057b7fc07e1da2170eb974f69220e6/cayenne-mqtt-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "fbc317cd6e3da9a096c83ab116870a9b", "sha256": "4a271557809eaa841a5c57c3c879d4ecf7bb868202fad355e51d4810106123e3"}, "downloads": -1, "filename": "cayenne-mqtt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "fbc317cd6e3da9a096c83ab116870a9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5513, "upload_time": "2018-02-17T02:02:35", "upload_time_iso_8601": "2018-02-17T02:02:35.759220Z", "url": "https://files.pythonhosted.org/packages/28/51/e1656ed79c1ddc527873c0ae964ebae92dc4392307f4e06671b7e6df3833/cayenne-mqtt-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbc317cd6e3da9a096c83ab116870a9b", "sha256": "4a271557809eaa841a5c57c3c879d4ecf7bb868202fad355e51d4810106123e3"}, "downloads": -1, "filename": "cayenne-mqtt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "fbc317cd6e3da9a096c83ab116870a9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5513, "upload_time": "2018-02-17T02:02:35", "upload_time_iso_8601": "2018-02-17T02:02:35.759220Z", "url": "https://files.pythonhosted.org/packages/28/51/e1656ed79c1ddc527873c0ae964ebae92dc4392307f4e06671b7e6df3833/cayenne-mqtt-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:10 2020"}