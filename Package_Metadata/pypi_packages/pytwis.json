{"info": {"author": "Wei Ren", "author_email": "renwei2004@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Topic :: Database :: Database Engines/Servers"], "description": "pytwis\n======\n\n|Build Status|\n\nThis package contains two modules ``pytwis`` and ``pytwis_clt`` where\n\n-  ``pytwis`` is a Twitter-toy-clone backend using Redis;\n-  ``pytwis_clt`` is a command-line tool which uses ``pytwis`` to\n   interact with the Redis database of the Twitter-toy clone.\n\nTo install this package,\n\n.. code:: bash\n\n    $ pip install pytwis\n\nNote that\n\n-  **This package requires Python 3.6 and later** since it depends on\n   Python 3.6 built-in module\n   `secrets <https://docs.python.org/3/library/secrets.html>`__.\n-  There is a breaking change introduced in v0.4.0: the salted password\n   hashes are stored in the Redis database instead of the plain-text\n   passwords, so the Redis database created by the version before v0.4.0\n   won\u2019t work with the version v0.4.0 and after unless a manual database\n   migration is done.\n\nTable of Contents\n=================\n\n-  `1. pytwis <#1-pytwis>`__\n\n   -  `1.1 Introduction <#11-introduction>`__\n   -  `1.2 Sample usage <#12-sample-usage>`__\n\n-  `2. pytwis_clt <#2-pytwis_clt>`__\n\n   -  `2.1. Connect to Redis <#21-connect-to-redis>`__\n\n      -  `2.1.1. Connect to the local Redis server at the default port\n         6379 with no\n         password. <#211-connect-to-the-local-redis-server-at-the-default-port-6379-with-no-password>`__\n      -  `2.1.2. Connect to the local Redis server via the socket file\n         /tmp/redis.sock with password\n         zzzzzz. <#212-connect-to-the-local-redis-server-via-the-socket-file-tmpredissock-with-password-zzzzzz>`__\n      -  `2.1.3 Connect to a remote Redis server with IP =\n         xxx.xxx.xxx.xxx at port yyyy with password\n         zzzzzz. <#213-connect-to-a-remote-redis-server-with-ip--xxxxxxxxxxxx-at-port-yyyy-with-password-zzzzzz>`__\n\n   -  `2.2. Available commands <#22-available-commands>`__\n\n      -  `2.2.1. register <#221-register>`__\n      -  `2.2.2. login <#222-login>`__\n      -  `2.2.3. logout <#223-logout>`__\n      -  `2.2.4. changepwd <#224-changepwd>`__\n      -  `2.2.5. userprofile <#225-userprofile>`__\n      -  `2.2.6. follow <#226-follow>`__\n      -  `2.2.7. unfollow <#227-unfollow>`__\n      -  `2.2.8. followers <#228-followers>`__\n      -  `2.2.9. followings <#229-followings>`__\n      -  `2.2.10. post <#2210-post>`__\n      -  `2.2.11. timeline <#2211-timeline>`__\n      -  `2.2.12. tweetsby <#2212-tweetsby>`__\n      -  `2.2.13. exit or quit <#2213-exit-or-quit>`__\n\n-  `3. PEP8 <#3-pep8>`__\n-  `4. Unit test <#4-unit-test>`__\n-  `5. Documentation <#5-documentation>`__\n\n   -  `5.1. Sphinx <#51-sphinx>`__\n   -  `5.2. README.rst <#52-readmerst>`__\n\n.. _pytwis-1:\n\n1. ``pytwis``\n=============\n\n1.1 Introduction\n----------------\n\nThis module implements the backend for a simplified Twitter clone based\non Redis. We follow the Redis tutorial\n(https://redis.io/topics/twitter-clone) to design the data layout of the\nRedis database.\n\nIt supports the following features:\n\n-  Register new users\n-  Log in/out\n-  Change user password\n-  Get user profile\n-  Post tweets\n-  Follower/Following\n-  General timeline for anonymous user\n-  User timeline\n-  Get tweets posted by one user\n\nTODOs:\n\n-  Search users\n-  Delete a user\n-  Recover user password\n-  #hashtags\n-  @mentions\n-  Retweets\n-  Replies\n-  Conversations\n-  Edit/Delete tweets\n-  And more\n\n1.2 Sample usage\n----------------\n\nBelow is a sample usage of this module. You can find a more detailed\nexample in the module ``pytwis_clt``.\n\n.. code:: python\n\n    import pytwis\n\n    # Connect to the Redis server by creating a Pytwis instance. \n    twis = pytwis.Pytwis()\n\n    # You may specify the hostname, the port, the database index, and the password of the Redis server as keyword arguments.\n    twis = pytwis.Pytwis(hostname='127.0.0.1', port=6379, db=0, password='password')\n\n    # For all the following operations, if succeeded is False, check result['error'] for the error string.\n\n    # Register a new user.\n    succeeded, result = twis.register('username', 'password')\n\n    # Log into the user. If succeeded is True, result['auth'] will contain the authentication secret.\n    succeeded, result = twis.login('username', 'password')\n    if succeeded:\n        auth_secret = result['auth']\n\n    # Post a tweet. \n    succeeded, result = twis.post_tweet(auth_secret, 'A tweet')\n\n    # Get the general timeline. Note that we are passing an empty authentication secret and '-1' as the second \n    # input parameter to get all the tweets in the general timeline. \n    # If succeeded is True, result['tweets'] will contain a list of tweets.\n    succeeded, result = twis.get_timeline('', -1)\n\n    # Get the user timeline. Note that the second input parameter 100 specifies the maximum number of tweets \n    # that will be included in the general timeline.\n    succeeded, result = twis.get_timeline(auth_secret, 100)\n\n    # Get the tweets posted by a user. Note that this user may be different from the currently logged-in user.\n    # If succeeded is True, result['tweets'] will contain a list of tweets.\n    succeeded, result = twis.get_user_tweets(auth_secret, 'username', -1)\n\n    # Follow a user.\n    succeeded, result = twis.follow(auth_secret, 'followee_username')\n\n    # Unfollow a user.\n    succeeded, result = twis.unfollow(auth_secret, 'followee_username')\n\n    # Get the follower list. If succeeded is True, result['follower_list'] will contain the follower list.\n    succeeded, result = twis.get_followers(auth_secret)\n\n    # Get the following list. If succeeded is True, result['following_list'] will contain the following list.\n    succeeded, result = twis.get_followings(auth_secret)\n\n    # Change the user password. If succeeded is True, result['auth'] will contain the new authentication secret.\n    succeeded, result = twis.change_password(auth_secret, 'password', 'new_password')\n\n    # Get the user profile. If succeeded is True, result['username'] will contain the username, result['password'] \n    # will contain the password, and result['auth'] will contain the authentication secret.\n    succeeded, result = twis.get_user_profile(auth_secret)\n\n    # Log out of the user.\n    succeeded, result = twis.logout(auth_secret)\n\n2. ``pytwis_clt``\n=================\n\nAfter you install the package, you will be able to launch ``pytwis_clt``\nas a console command. To get the help information,\n\n.. code:: bash\n\n    $ pytwis_clt -h\n    $ pytwis_clt --help\n\n2.1. Connect to Redis\n---------------------\n\n2.1.1. Connect to the local Redis server at the default port 6379 with no password.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ ./pytwis_clt.py \n\n2.1.2. Connect to the local Redis server via the socket file ``/tmp/redis.sock`` with password zzzzzz.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMake sure that the unixsocket parameter is defined in your redis.conf\nfile. It\u2019s commented out by default.\n\n.. code:: bash\n\n    $ ./pytwis_clt.py -s /tmp/redis.sock -a zzzzzz\n\n2.1.3 Connect to a remote Redis server with IP = xxx.xxx.xxx.xxx at port yyyy with password zzzzzz.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ ./pytwis_clt.py -h xxx.xxx.xxx.xxx -p yyyy -a zzzzzz\n\n2.2. Available commands\n-----------------------\n\nAfter successfully connecting to the twitter clone, you can try the\nfollowing commands in ``pytwis_clt``.\n\n2.2.1. ``register``\n~~~~~~~~~~~~~~~~~~~\n\nRegister a new user ``xxxxxx`` with password ``yyyyyy``.\n\n.. code:: bash\n\n    127.0.0.1:6379> register xxxxxx yyyyyy\n\n2.2.2. ``login``\n~~~~~~~~~~~~~~~~\n\nLog into a user ``xxxxxxx`` with password ``yyyyyy``.\n\n.. code:: bash\n\n    127.0.0.1:6379> login xxxxxx yyyyyy\n\n2.2.3. ``logout``\n~~~~~~~~~~~~~~~~~\n\nLog out of the current user.\n\n.. code:: bash\n\n    127.0.0.1:6379> logout\n\n2.2.4. ``changepwd``\n~~~~~~~~~~~~~~~~~~~~\n\nChange the password. Assume that the old password is ``yyyyyy`` and the\nnew password is ``zzzzzz``.\n\n.. code:: bash\n\n    127.0.0.1:6379> changepwd yyyyyy zzzzzz zzzzzz\n\n2.2.5. ``userprofile``\n~~~~~~~~~~~~~~~~~~~~~~\n\nGet the profile of the currently logged-in user.\n\n.. code:: bash\n\n    127.0.0.1:6379> userprofile\n\n2.2.6. ``follow``\n~~~~~~~~~~~~~~~~~\n\nFollow a user ``xxxxxx``.\n\n.. code:: bash\n\n    127.0.0.1:6379> follow xxxxxx\n\n2.2.7. ``unfollow``\n~~~~~~~~~~~~~~~~~~~\n\nUnfollow a user ``xxxxxx``.\n\n.. code:: bash\n\n    127.0.0.1:6379> unfollow xxxxxx\n\n2.2.8. ``followers``\n~~~~~~~~~~~~~~~~~~~~\n\nGet the follower list of the current user.\n\n.. code:: bash\n\n    127.0.0.1:6379> followers\n\n2.2.9. ``followings``\n~~~~~~~~~~~~~~~~~~~~~\n\nGet the following list of the current user.\n\n.. code:: bash\n\n    127.0.0.1:6379> followings\n\n2.2.10. ``post``\n~~~~~~~~~~~~~~~~\n\nPost a tweet.\n\n.. code:: bash\n\n    127.0.0.1:6379> post <tweet>\n\n2.2.11. ``timeline``\n~~~~~~~~~~~~~~~~~~~~\n\nGet the general/user timeline. It will return the user timeline if a\nuser is logged in and will return the general timeline otherwise. Also,\nit will return all the tweets in the timeline if max-tweet-count is not\nspecified.\n\n.. code:: bash\n\n    127.0.0.1:6379> timeline [max-tweet-count]\n\n2.2.12. ``tweetsby``\n~~~~~~~~~~~~~~~~~~~~\n\nGet the tweets posted by a user. It will return the tweets posted by the\ncurrent logged-in user if no username is specified. Also, it will return\nall the tweets posted by the user if max-tweet-count is not specified.\n\n.. code:: bash\n\n    127.0.0.1:6379> tweetsby [username] [max-tweet-count]\n\n2.2.13. ``exit`` or ``quit``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nExit the console program.\n\n.. code:: bash\n\n    127.0.0.1:6379> exit\n    127.0.0.1:6379> quit\n\nNote that some of the above commands have to be executed after a\nsuccessful log-in.\n\n-  logout\n-  changepassword\n-  userprofile\n-  follow\n-  unfollow\n-  followers\n-  followings\n-  post\n-  tweetsby\n\n3. PEP8\n=======\n\nWe use ``pylint`` to enforce the Python Style Guide PEP8.\n\n.. code:: bash\n\n    $ pylint pytwis\n    $ pylint tests\n\nWe have fixed all the convention violations, warnings, and errors in the\npackages ``pytwis`` and ``tests``. We will address the refactor\nrecommendations made by ``pylint`` later (see issue #8).\n\n4. Unit test\n============\n\nSince this unit test requires a running local Redis server, it is in\nfact a small integration test. To run the test,\n\n.. code:: bash\n\n    $ make test\n\n5. Documentation\n================\n\n5.1. ``Sphinx``\n---------------\n\nTo generate the ``Sphinx`` HTML documentation,\n\n.. code:: bash\n\n    $ make docs\n\n5.2. README.rst\n---------------\n\nREADME.rst is generated from README.md via ``pandoc``.\n\n.. code:: bash\n\n    $ pandoc --from=markdown --to=rst --output=README.rst README.md\n\n.. |Build Status| image:: https://travis-ci.org/renweizhukov/pytwis.svg?branch=master\n   :target: https://travis-ci.org/renweizhukov/pytwis\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://renweizhukov.github.io/pytwis", "keywords": "redis twitter python3.6", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytwis", "package_url": "https://pypi.org/project/pytwis/", "platform": "", "project_url": "https://pypi.org/project/pytwis/", "project_urls": {"Bug Reports": "https://github.com/renweizhukov/pytwis/issues", "Documentation": "https://renweizhukov.github.io/pytwis", "Homepage": "https://renweizhukov.github.io/pytwis", "Source": "https://github.com/renweizhukov/pytwis"}, "release_url": "https://pypi.org/project/pytwis/0.5.1/", "requires_dist": ["parse", "redis", "setuptools", "Werkzeug", "coverage; extra == 'test'"], "requires_python": ">=3.6", "summary": "A twitter-toy-clone backend using Python and Redis", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pytwis\">\n<h2>pytwis</h2>\n<p><a href=\"https://travis-ci.org/renweizhukov/pytwis\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a2c70b23d5f2411c7fd7eadc841ef00bce1142a/68747470733a2f2f7472617669732d63692e6f72672f72656e7765697a68756b6f762f7079747769732e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This package contains two modules <tt>pytwis</tt> and <tt>pytwis_clt</tt> where</p>\n<ul>\n<li><tt>pytwis</tt> is a Twitter-toy-clone backend using Redis;</li>\n<li><tt>pytwis_clt</tt> is a command-line tool which uses <tt>pytwis</tt> to\ninteract with the Redis database of the Twitter-toy clone.</li>\n</ul>\n<p>To install this package,</p>\n<pre>$ pip install pytwis\n</pre>\n<p>Note that</p>\n<ul>\n<li><strong>This package requires Python 3.6 and later</strong> since it depends on\nPython 3.6 built-in module\n<a href=\"https://docs.python.org/3/library/secrets.html\" rel=\"nofollow\">secrets</a>.</li>\n<li>There is a breaking change introduced in v0.4.0: the salted password\nhashes are stored in the Redis database instead of the plain-text\npasswords, so the Redis database created by the version before v0.4.0\nwon\u2019t work with the version v0.4.0 and after unless a manual database\nmigration is done.</li>\n</ul>\n</div>\n<div id=\"table-of-contents\">\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#1-pytwis\" rel=\"nofollow\">1. pytwis</a><ul>\n<li><a href=\"#11-introduction\" rel=\"nofollow\">1.1 Introduction</a></li>\n<li><a href=\"#12-sample-usage\" rel=\"nofollow\">1.2 Sample usage</a></li>\n</ul>\n</li>\n<li><a href=\"#2-pytwis_clt\" rel=\"nofollow\">2. pytwis_clt</a><ul>\n<li><a href=\"#21-connect-to-redis\" rel=\"nofollow\">2.1. Connect to Redis</a><ul>\n<li><a href=\"#211-connect-to-the-local-redis-server-at-the-default-port-6379-with-no-password\" rel=\"nofollow\">2.1.1. Connect to the local Redis server at the default port\n6379 with no\npassword.</a></li>\n<li><a href=\"#212-connect-to-the-local-redis-server-via-the-socket-file-tmpredissock-with-password-zzzzzz\" rel=\"nofollow\">2.1.2. Connect to the local Redis server via the socket file\n/tmp/redis.sock with password\nzzzzzz.</a></li>\n<li><a href=\"#213-connect-to-a-remote-redis-server-with-ip--xxxxxxxxxxxx-at-port-yyyy-with-password-zzzzzz\" rel=\"nofollow\">2.1.3 Connect to a remote Redis server with IP =\nxxx.xxx.xxx.xxx at port yyyy with password\nzzzzzz.</a></li>\n</ul>\n</li>\n<li><a href=\"#22-available-commands\" rel=\"nofollow\">2.2. Available commands</a><ul>\n<li><a href=\"#221-register\" rel=\"nofollow\">2.2.1. register</a></li>\n<li><a href=\"#222-login\" rel=\"nofollow\">2.2.2. login</a></li>\n<li><a href=\"#223-logout\" rel=\"nofollow\">2.2.3. logout</a></li>\n<li><a href=\"#224-changepwd\" rel=\"nofollow\">2.2.4. changepwd</a></li>\n<li><a href=\"#225-userprofile\" rel=\"nofollow\">2.2.5. userprofile</a></li>\n<li><a href=\"#226-follow\" rel=\"nofollow\">2.2.6. follow</a></li>\n<li><a href=\"#227-unfollow\" rel=\"nofollow\">2.2.7. unfollow</a></li>\n<li><a href=\"#228-followers\" rel=\"nofollow\">2.2.8. followers</a></li>\n<li><a href=\"#229-followings\" rel=\"nofollow\">2.2.9. followings</a></li>\n<li><a href=\"#2210-post\" rel=\"nofollow\">2.2.10. post</a></li>\n<li><a href=\"#2211-timeline\" rel=\"nofollow\">2.2.11. timeline</a></li>\n<li><a href=\"#2212-tweetsby\" rel=\"nofollow\">2.2.12. tweetsby</a></li>\n<li><a href=\"#2213-exit-or-quit\" rel=\"nofollow\">2.2.13. exit or quit</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#3-pep8\" rel=\"nofollow\">3. PEP8</a></li>\n<li><a href=\"#4-unit-test\" rel=\"nofollow\">4. Unit test</a></li>\n<li><a href=\"#5-documentation\" rel=\"nofollow\">5. Documentation</a><ul>\n<li><a href=\"#51-sphinx\" rel=\"nofollow\">5.1. Sphinx</a></li>\n<li><a href=\"#52-readmerst\" rel=\"nofollow\">5.2. README.rst</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id1\">\n<span id=\"pytwis-1\"></span><h2>1. <tt>pytwis</tt></h2>\n<div id=\"introduction\">\n<h3>1.1 Introduction</h3>\n<p>This module implements the backend for a simplified Twitter clone based\non Redis. We follow the Redis tutorial\n(<a href=\"https://redis.io/topics/twitter-clone\" rel=\"nofollow\">https://redis.io/topics/twitter-clone</a>) to design the data layout of the\nRedis database.</p>\n<p>It supports the following features:</p>\n<ul>\n<li>Register new users</li>\n<li>Log in/out</li>\n<li>Change user password</li>\n<li>Get user profile</li>\n<li>Post tweets</li>\n<li>Follower/Following</li>\n<li>General timeline for anonymous user</li>\n<li>User timeline</li>\n<li>Get tweets posted by one user</li>\n</ul>\n<p>TODOs:</p>\n<ul>\n<li>Search users</li>\n<li>Delete a user</li>\n<li>Recover user password</li>\n<li>#hashtags</li>\n<li>@mentions</li>\n<li>Retweets</li>\n<li>Replies</li>\n<li>Conversations</li>\n<li>Edit/Delete tweets</li>\n<li>And more</li>\n</ul>\n</div>\n<div id=\"sample-usage\">\n<h3>1.2 Sample usage</h3>\n<p>Below is a sample usage of this module. You can find a more detailed\nexample in the module <tt>pytwis_clt</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytwis</span>\n\n<span class=\"c1\"># Connect to the Redis server by creating a Pytwis instance.</span>\n<span class=\"n\">twis</span> <span class=\"o\">=</span> <span class=\"n\">pytwis</span><span class=\"o\">.</span><span class=\"n\">Pytwis</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># You may specify the hostname, the port, the database index, and the password of the Redis server as keyword arguments.</span>\n<span class=\"n\">twis</span> <span class=\"o\">=</span> <span class=\"n\">pytwis</span><span class=\"o\">.</span><span class=\"n\">Pytwis</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'password'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># For all the following operations, if succeeded is False, check result['error'] for the error string.</span>\n\n<span class=\"c1\"># Register a new user.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Log into the user. If succeeded is True, result['auth'] will contain the authentication secret.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">succeeded</span><span class=\"p\">:</span>\n    <span class=\"n\">auth_secret</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'auth'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Post a tweet.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">post_tweet</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">,</span> <span class=\"s1\">'A tweet'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the general timeline. Note that we are passing an empty authentication secret and '-1' as the second</span>\n<span class=\"c1\"># input parameter to get all the tweets in the general timeline.</span>\n<span class=\"c1\"># If succeeded is True, result['tweets'] will contain a list of tweets.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">get_timeline</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the user timeline. Note that the second input parameter 100 specifies the maximum number of tweets</span>\n<span class=\"c1\"># that will be included in the general timeline.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">get_timeline</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the tweets posted by a user. Note that this user may be different from the currently logged-in user.</span>\n<span class=\"c1\"># If succeeded is True, result['tweets'] will contain a list of tweets.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">get_user_tweets</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Follow a user.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">follow</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">,</span> <span class=\"s1\">'followee_username'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Unfollow a user.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">unfollow</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">,</span> <span class=\"s1\">'followee_username'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the follower list. If succeeded is True, result['follower_list'] will contain the follower list.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">get_followers</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the following list. If succeeded is True, result['following_list'] will contain the following list.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">get_followings</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Change the user password. If succeeded is True, result['auth'] will contain the new authentication secret.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">change_password</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">,</span> <span class=\"s1\">'new_password'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the user profile. If succeeded is True, result['username'] will contain the username, result['password']</span>\n<span class=\"c1\"># will contain the password, and result['auth'] will contain the authentication secret.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">get_user_profile</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Log out of the user.</span>\n<span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">twis</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">auth_secret</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"pytwis-clt\">\n<h2>2. <tt>pytwis_clt</tt></h2>\n<p>After you install the package, you will be able to launch <tt>pytwis_clt</tt>\nas a console command. To get the help information,</p>\n<pre>$ pytwis_clt -h\n$ pytwis_clt --help\n</pre>\n<div id=\"connect-to-redis\">\n<h3>2.1. Connect to Redis</h3>\n<div id=\"connect-to-the-local-redis-server-at-the-default-port-6379-with-no-password\">\n<h4>2.1.1. Connect to the local Redis server at the default port 6379 with no password.</h4>\n<pre>$ ./pytwis_clt.py\n</pre>\n</div>\n<div id=\"connect-to-the-local-redis-server-via-the-socket-file-tmp-redis-sock-with-password-zzzzzz\">\n<h4>2.1.2. Connect to the local Redis server via the socket file <tt>/tmp/redis.sock</tt> with password zzzzzz.</h4>\n<p>Make sure that the unixsocket parameter is defined in your redis.conf\nfile. It\u2019s commented out by default.</p>\n<pre>$ ./pytwis_clt.py -s /tmp/redis.sock -a zzzzzz\n</pre>\n</div>\n<div id=\"connect-to-a-remote-redis-server-with-ip-xxx-xxx-xxx-xxx-at-port-yyyy-with-password-zzzzzz\">\n<h4>2.1.3 Connect to a remote Redis server with IP = xxx.xxx.xxx.xxx at port yyyy with password zzzzzz.</h4>\n<pre>$ ./pytwis_clt.py -h xxx.xxx.xxx.xxx -p yyyy -a zzzzzz\n</pre>\n</div>\n</div>\n<div id=\"available-commands\">\n<h3>2.2. Available commands</h3>\n<p>After successfully connecting to the twitter clone, you can try the\nfollowing commands in <tt>pytwis_clt</tt>.</p>\n<div id=\"register\">\n<h4>2.2.1. <tt>register</tt></h4>\n<p>Register a new user <tt>xxxxxx</tt> with password <tt>yyyyyy</tt>.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; register xxxxxx yyyyyy\n</pre>\n</div>\n<div id=\"login\">\n<h4>2.2.2. <tt>login</tt></h4>\n<p>Log into a user <tt>xxxxxxx</tt> with password <tt>yyyyyy</tt>.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; login xxxxxx yyyyyy\n</pre>\n</div>\n<div id=\"logout\">\n<h4>2.2.3. <tt>logout</tt></h4>\n<p>Log out of the current user.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; <span class=\"nb\">logout</span>\n</pre>\n</div>\n<div id=\"changepwd\">\n<h4>2.2.4. <tt>changepwd</tt></h4>\n<p>Change the password. Assume that the old password is <tt>yyyyyy</tt> and the\nnew password is <tt>zzzzzz</tt>.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; changepwd yyyyyy zzzzzz zzzzzz\n</pre>\n</div>\n<div id=\"userprofile\">\n<h4>2.2.5. <tt>userprofile</tt></h4>\n<p>Get the profile of the currently logged-in user.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; userprofile\n</pre>\n</div>\n<div id=\"follow\">\n<h4>2.2.6. <tt>follow</tt></h4>\n<p>Follow a user <tt>xxxxxx</tt>.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; follow xxxxxx\n</pre>\n</div>\n<div id=\"unfollow\">\n<h4>2.2.7. <tt>unfollow</tt></h4>\n<p>Unfollow a user <tt>xxxxxx</tt>.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; unfollow xxxxxx\n</pre>\n</div>\n<div id=\"followers\">\n<h4>2.2.8. <tt>followers</tt></h4>\n<p>Get the follower list of the current user.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; followers\n</pre>\n</div>\n<div id=\"followings\">\n<h4>2.2.9. <tt>followings</tt></h4>\n<p>Get the following list of the current user.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; followings\n</pre>\n</div>\n<div id=\"post\">\n<h4>2.2.10. <tt>post</tt></h4>\n<p>Post a tweet.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; post &lt;tweet&gt;\n</pre>\n</div>\n<div id=\"timeline\">\n<h4>2.2.11. <tt>timeline</tt></h4>\n<p>Get the general/user timeline. It will return the user timeline if a\nuser is logged in and will return the general timeline otherwise. Also,\nit will return all the tweets in the timeline if max-tweet-count is not\nspecified.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; timeline <span class=\"o\">[</span>max-tweet-count<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"tweetsby\">\n<h4>2.2.12. <tt>tweetsby</tt></h4>\n<p>Get the tweets posted by a user. It will return the tweets posted by the\ncurrent logged-in user if no username is specified. Also, it will return\nall the tweets posted by the user if max-tweet-count is not specified.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; tweetsby <span class=\"o\">[</span>username<span class=\"o\">]</span> <span class=\"o\">[</span>max-tweet-count<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"exit-or-quit\">\n<h4>2.2.13. <tt>exit</tt> or <tt>quit</tt></h4>\n<p>Exit the console program.</p>\n<pre><span class=\"m\">127</span>.0.0.1:6379&gt; <span class=\"nb\">exit</span>\n<span class=\"m\">127</span>.0.0.1:6379&gt; quit\n</pre>\n<p>Note that some of the above commands have to be executed after a\nsuccessful log-in.</p>\n<ul>\n<li>logout</li>\n<li>changepassword</li>\n<li>userprofile</li>\n<li>follow</li>\n<li>unfollow</li>\n<li>followers</li>\n<li>followings</li>\n<li>post</li>\n<li>tweetsby</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"pep8\">\n<h2>3. PEP8</h2>\n<p>We use <tt>pylint</tt> to enforce the Python Style Guide PEP8.</p>\n<pre>$ pylint pytwis\n$ pylint tests\n</pre>\n<p>We have fixed all the convention violations, warnings, and errors in the\npackages <tt>pytwis</tt> and <tt>tests</tt>. We will address the refactor\nrecommendations made by <tt>pylint</tt> later (see issue #8).</p>\n</div>\n<div id=\"unit-test\">\n<h2>4. Unit test</h2>\n<p>Since this unit test requires a running local Redis server, it is in\nfact a small integration test. To run the test,</p>\n<pre>$ make <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>5. Documentation</h2>\n<div id=\"sphinx\">\n<h3>5.1. <tt>Sphinx</tt></h3>\n<p>To generate the <tt>Sphinx</tt> HTML documentation,</p>\n<pre>$ make docs\n</pre>\n</div>\n<div id=\"readme-rst\">\n<h3>5.2. README.rst</h3>\n<p>README.rst is generated from README.md via <tt>pandoc</tt>.</p>\n<pre>$ pandoc --from<span class=\"o\">=</span>markdown --to<span class=\"o\">=</span>rst --output<span class=\"o\">=</span>README.rst README.md\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3946719, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "04ee0b2ed577dcc3a32ec716bbe1dea0", "sha256": "d6484ebc904e7f72cbc3715f15e4d3d6d8459556b58d6eb19d8c058b2dd59dfd"}, "downloads": -1, "filename": "pytwis-0.1.0-py3.6.egg", "has_sig": false, "md5_digest": "04ee0b2ed577dcc3a32ec716bbe1dea0", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 28145, "upload_time": "2018-03-14T23:50:52", "upload_time_iso_8601": "2018-03-14T23:50:52.174014Z", "url": "https://files.pythonhosted.org/packages/e4/34/7cb4f18ec238fcbf5924ce1bed836bab7bd2a75017a36b52cf3a67d508e3/pytwis-0.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd3d29be302867bb04c3788e8661bbbf", "sha256": "67cf09337ec7ebadd14992789fcf82f49362f2df3a7b260fb0f536c989701816"}, "downloads": -1, "filename": "pytwis-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd3d29be302867bb04c3788e8661bbbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14936, "upload_time": "2018-03-14T23:50:50", "upload_time_iso_8601": "2018-03-14T23:50:50.923914Z", "url": "https://files.pythonhosted.org/packages/00/07/68619160992dc2ff20973a7847906745d4eaeb8b6ff637caf6cebabf12e5/pytwis-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc27d8bcc5fd68ed7983d5d892257d10", "sha256": "5b51139afa4970f0284ca397195c9f5c4c301cb89d0de615689546000ce4eec6"}, "downloads": -1, "filename": "pytwis-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bc27d8bcc5fd68ed7983d5d892257d10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15984, "upload_time": "2018-03-14T23:50:53", "upload_time_iso_8601": "2018-03-14T23:50:53.630978Z", "url": "https://files.pythonhosted.org/packages/56/35/58eaa5536e7deea342b67b11818d9f78aa43dfb20f2ca01d8a563c033ac7/pytwis-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fd1a99d98d830eab25e60d260d5eecf3", "sha256": "a7c7cf099ef272d53a782ebf7272270a0bf8ea21bb21ada64f9d111e7a5c5e2a"}, "downloads": -1, "filename": "pytwis-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fd1a99d98d830eab25e60d260d5eecf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15122, "upload_time": "2018-03-15T01:16:58", "upload_time_iso_8601": "2018-03-15T01:16:58.603088Z", "url": "https://files.pythonhosted.org/packages/70/e3/35e584910ee5723f7bbbcb3801da12e35b7434162314f61cf9e11624d14a/pytwis-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80097ed6680eda512e02ec903afd147f", "sha256": "4ad7c1f57793ac084e0d34a97fc1d0f28cc4f8af01a3733b48f5ed27f00ad736"}, "downloads": -1, "filename": "pytwis-0.1.1.tar.gz", "has_sig": false, "md5_digest": "80097ed6680eda512e02ec903afd147f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16094, "upload_time": "2018-03-15T01:16:59", "upload_time_iso_8601": "2018-03-15T01:16:59.882676Z", "url": "https://files.pythonhosted.org/packages/72/36/8e5272472c0d9e45c33fe45a069a59088a381352899dd9996bcbe768da49/pytwis-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fe8fda972eb4f109c336bd3ba1223149", "sha256": "0bf3298e4a8f4fdb3b89e76f27a06c977d025ea5d82d45c6ac7c06aa37378083"}, "downloads": -1, "filename": "pytwis-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fe8fda972eb4f109c336bd3ba1223149", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15157, "upload_time": "2018-03-15T01:27:08", "upload_time_iso_8601": "2018-03-15T01:27:08.428549Z", "url": "https://files.pythonhosted.org/packages/e6/0c/4919f1ab01ce697ac5ab67e7c11a17501eb9ef4d0800a675ec91a5a75c83/pytwis-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf60f503da77bbbb0633653f2856ad8c", "sha256": "aebf093b19fc94fffd465e7c846ed1812dad1c7ea9e4a5d3bdf8e2d73b6c00ac"}, "downloads": -1, "filename": "pytwis-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cf60f503da77bbbb0633653f2856ad8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16099, "upload_time": "2018-03-15T01:27:09", "upload_time_iso_8601": "2018-03-15T01:27:09.976369Z", "url": "https://files.pythonhosted.org/packages/15/e1/fa9dc18258dd9972cfdcfb5e41d9c7b6faa2bd7af69ac20e36b644307329/pytwis-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c7d8df8491c8e5591ebfecedd1239bf1", "sha256": "56aebb725da351a9e1e5fefa12b398f4b78806ae1b7938dc31224e594c858048"}, "downloads": -1, "filename": "pytwis-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c7d8df8491c8e5591ebfecedd1239bf1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14993, "upload_time": "2018-03-16T07:28:02", "upload_time_iso_8601": "2018-03-16T07:28:02.495760Z", "url": "https://files.pythonhosted.org/packages/c5/e8/c7f94b6292881084cd47603c258642fcd30fad1b28fae2e30574a4e93b7b/pytwis-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9604ce5acddff4362354c3bd8bf3b1d4", "sha256": "d4dbc284f963aafd76484d38ceadd9410d7ea1436521f531c7938c52373c9b1b"}, "downloads": -1, "filename": "pytwis-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9604ce5acddff4362354c3bd8bf3b1d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16485, "upload_time": "2018-03-16T07:28:04", "upload_time_iso_8601": "2018-03-16T07:28:04.632741Z", "url": "https://files.pythonhosted.org/packages/91/2d/e70c3cf398dc8a94eed5916f68ed69f4ec9fb07a933ea7958614015a3919/pytwis-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "19bc04317d4d5f227758ebf3aa20973e", "sha256": "1932712c6796cdf7f9237284a886a3de4b82994f6cbce91aae50d3bd6eb2590c"}, "downloads": -1, "filename": "pytwis-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "19bc04317d4d5f227758ebf3aa20973e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15327, "upload_time": "2018-03-21T09:05:48", "upload_time_iso_8601": "2018-03-21T09:05:48.988925Z", "url": "https://files.pythonhosted.org/packages/f5/79/a51070f7ad4efac8e161395730c6ee4b7e17b21231b0761b38f57f0e364d/pytwis-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89707fe6ad00f7f3c33f94384a143d2c", "sha256": "c4a026419bb48eabab1b7c152b2f79ad99a2e414f6eabf1d7f6ad307980f04a0"}, "downloads": -1, "filename": "pytwis-0.3.0.tar.gz", "has_sig": false, "md5_digest": "89707fe6ad00f7f3c33f94384a143d2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16780, "upload_time": "2018-03-21T09:05:50", "upload_time_iso_8601": "2018-03-21T09:05:50.535488Z", "url": "https://files.pythonhosted.org/packages/1f/6d/c46a538eeab9ea6944cbb4a040ddbe001fb488927410192a61bd35206312/pytwis-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f9877959683c9bf78510eb220e100662", "sha256": "12014b1adefc107022c6c90fec4d2634258ba7af4dbae841b6a47d78bedb42c6"}, "downloads": -1, "filename": "pytwis-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9877959683c9bf78510eb220e100662", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16231, "upload_time": "2018-03-22T07:49:14", "upload_time_iso_8601": "2018-03-22T07:49:14.002234Z", "url": "https://files.pythonhosted.org/packages/06/01/f99fe7a60cce5706926b32385e605b33ca71a72a98009a6ff793d8d9dee8/pytwis-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "739a68106f36a9e8edeac09677c76391", "sha256": "8b1bcac5fa2efb73216248b4198d1c35b76264db46886083bc7286c9b6badef9"}, "downloads": -1, "filename": "pytwis-0.3.1.tar.gz", "has_sig": false, "md5_digest": "739a68106f36a9e8edeac09677c76391", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17645, "upload_time": "2018-03-22T07:49:15", "upload_time_iso_8601": "2018-03-22T07:49:15.443335Z", "url": "https://files.pythonhosted.org/packages/fc/8b/f34298828d0fb133236470ba91110e488792c78f86c5416a86c2bd9a70b7/pytwis-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "e447ef1c12dffdde97e279833b1d7d0f", "sha256": "acfa09ff4b4b9d40693683b3c46f7c8a29d8f8d9ef53819f38a1a830d33569fc"}, "downloads": -1, "filename": "pytwis-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e447ef1c12dffdde97e279833b1d7d0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17415, "upload_time": "2018-03-30T07:46:18", "upload_time_iso_8601": "2018-03-30T07:46:18.317725Z", "url": "https://files.pythonhosted.org/packages/ee/e4/f5a9bd9342ac2626655b13f4a540516ceee3f8ff484194498fb4b9470d69/pytwis-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d31ffbe7d6b26c261c4c5187d2b5bb3", "sha256": "2a929dcfc8716d8e830eb41ba1ba617260ec16bcbca4cc1c68be63ae5223039b"}, "downloads": -1, "filename": "pytwis-0.3.2.tar.gz", "has_sig": false, "md5_digest": "7d31ffbe7d6b26c261c4c5187d2b5bb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19116, "upload_time": "2018-03-30T07:46:19", "upload_time_iso_8601": "2018-03-30T07:46:19.213193Z", "url": "https://files.pythonhosted.org/packages/69/47/57823be112abd4c897a3af6054ab87d4882559d1bbb0679a79095a1d613c/pytwis-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "009a0dec1f851c5c7311350d717b7bbc", "sha256": "36944628d47831efd0d881294a6a2a6f0d8ec6299df09958af26864fac06369b"}, "downloads": -1, "filename": "pytwis-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "009a0dec1f851c5c7311350d717b7bbc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17416, "upload_time": "2018-03-30T08:00:11", "upload_time_iso_8601": "2018-03-30T08:00:11.684864Z", "url": "https://files.pythonhosted.org/packages/1d/7e/d403060f773c73852c6768dc779ecebb38a8d27193a4de93f7db343f524f/pytwis-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a826575e0ebe0b252c4741b36f4208b", "sha256": "92d90085f2732655a35900816318fd3798fb5e2a018dbda6a63d0fb4c297788e"}, "downloads": -1, "filename": "pytwis-0.3.3.tar.gz", "has_sig": false, "md5_digest": "3a826575e0ebe0b252c4741b36f4208b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19111, "upload_time": "2018-03-30T08:00:12", "upload_time_iso_8601": "2018-03-30T08:00:12.546805Z", "url": "https://files.pythonhosted.org/packages/43/0a/cd48eeb19aac1ede55a59998ef54ba7a34b277e60e46d0e52fdd6028030f/pytwis-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "cce03728a4fd4c82d18c20503fff4d0e", "sha256": "a7c3127f5cda15c26ec9bfaa79ec819fb7daf53775fc2c162e48fe03ea20878a"}, "downloads": -1, "filename": "pytwis-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cce03728a4fd4c82d18c20503fff4d0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15162, "upload_time": "2018-04-06T19:06:29", "upload_time_iso_8601": "2018-04-06T19:06:29.630680Z", "url": "https://files.pythonhosted.org/packages/60/42/2e8ff156bc91b76ceceb33b2714cfeb47b6893a62b96152bb5169d6e8e54/pytwis-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b430b4e8a82d4c311d76aa448396c566", "sha256": "cfb5014f565cd2986118a2c1198291e4fa2a748661c4b04dc141d46c5bc07acf"}, "downloads": -1, "filename": "pytwis-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b430b4e8a82d4c311d76aa448396c566", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20360, "upload_time": "2018-04-06T19:06:30", "upload_time_iso_8601": "2018-04-06T19:06:30.517558Z", "url": "https://files.pythonhosted.org/packages/60/a2/aa233b2fde29c089051f5565c5fba19ef3b65fd13fb49f2fca594c8e0a0e/pytwis-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "d9dabbc59ecff17e67c3d0ebf0ba9780", "sha256": "771a57caa4acb29af93318c07368d762d89129e26f498cd32a0468d88da5cbaf"}, "downloads": -1, "filename": "pytwis-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d9dabbc59ecff17e67c3d0ebf0ba9780", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15233, "upload_time": "2018-04-11T20:43:19", "upload_time_iso_8601": "2018-04-11T20:43:19.809512Z", "url": "https://files.pythonhosted.org/packages/16/e2/0b75161b75a0573dd1ab6527f9217b1dfcbb9e1eb3534e63e5050bc61160/pytwis-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb9149e1103880c2bf252150057d2b64", "sha256": "64d9c0707027b24abf574cfc95a32b2fcd00465402736eec71b5ed550e3dcc16"}, "downloads": -1, "filename": "pytwis-0.4.1.tar.gz", "has_sig": false, "md5_digest": "fb9149e1103880c2bf252150057d2b64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20429, "upload_time": "2018-04-11T20:43:20", "upload_time_iso_8601": "2018-04-11T20:43:20.792316Z", "url": "https://files.pythonhosted.org/packages/fc/fe/954daae65da29a91fd08f505da21e1603c19b737459662a3a82e502ecd6f/pytwis-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "d074eb528ea11bf8aed8e5df1f765262", "sha256": "fbe22f699e8b0cb37a7f30c2a44bfb5ee8b3ff4177caee79648171f8b5635f51"}, "downloads": -1, "filename": "pytwis-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d074eb528ea11bf8aed8e5df1f765262", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15233, "upload_time": "2018-04-11T21:18:52", "upload_time_iso_8601": "2018-04-11T21:18:52.979660Z", "url": "https://files.pythonhosted.org/packages/e1/46/07d5e0d5a784599932a0ce84a60f5ce86d4585266432f7ef1c26f96dba27/pytwis-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d006f397a955208a736bc928244cb46c", "sha256": "14697877201191862f6d8f26208e3638fcea3fdf87fa19ecc35d1a8846c60c11"}, "downloads": -1, "filename": "pytwis-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d006f397a955208a736bc928244cb46c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20427, "upload_time": "2018-04-11T21:18:53", "upload_time_iso_8601": "2018-04-11T21:18:53.902414Z", "url": "https://files.pythonhosted.org/packages/53/6c/9bc991426dc5820a74692143285187ac103576cda94bf8124b1e54e97c39/pytwis-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "18a2bab5b5f8d55aedd3bbd86ab46b9c", "sha256": "2d9edc4634361b9f26653b1bbe5c8b806207f304134f67c9b3b8eaaf090167ab"}, "downloads": -1, "filename": "pytwis-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "18a2bab5b5f8d55aedd3bbd86ab46b9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16555, "upload_time": "2018-06-07T21:52:40", "upload_time_iso_8601": "2018-06-07T21:52:40.808886Z", "url": "https://files.pythonhosted.org/packages/4b/52/953599659f711d8bf65bbb1a1f147da552fdc47e0c995d5bee358e8c051d/pytwis-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de31b724da1f4894f7a163810b75dbec", "sha256": "2e5688a8f43cd792dbb51c90861305e9f9888381b6197988c09b88329013b7f3"}, "downloads": -1, "filename": "pytwis-0.5.0.tar.gz", "has_sig": false, "md5_digest": "de31b724da1f4894f7a163810b75dbec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21156, "upload_time": "2018-06-07T21:52:42", "upload_time_iso_8601": "2018-06-07T21:52:42.375330Z", "url": "https://files.pythonhosted.org/packages/8f/5e/d921a800abbdea7193fc3b1bbc08317534ed730b99c9f3c2ad419f6eaf6d/pytwis-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "273f10860188c4bd4d5a8aad0760036f", "sha256": "9de570ffc4f9de65dc4e573d6981a8bc7b94a9162a27d0c25f17eb3db97848a7"}, "downloads": -1, "filename": "pytwis-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "273f10860188c4bd4d5a8aad0760036f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17113, "upload_time": "2018-06-10T07:37:34", "upload_time_iso_8601": "2018-06-10T07:37:34.319481Z", "url": "https://files.pythonhosted.org/packages/d7/9a/ee18ab993d5a3ad48c808b9408e77ac0b279bf5a4abf851732ce3bd2e544/pytwis-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6948c504ea277a6b82f36edd35e44af5", "sha256": "2461994d190c66e4ceab30db59a63e8b14a7bd8fc3104969a4b4e52817e398ba"}, "downloads": -1, "filename": "pytwis-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6948c504ea277a6b82f36edd35e44af5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25219, "upload_time": "2018-06-10T07:37:35", "upload_time_iso_8601": "2018-06-10T07:37:35.568316Z", "url": "https://files.pythonhosted.org/packages/4e/d5/f90cad82e0fe80d3ec21fd50de149eedb4496cb91184671258169a75e5ce/pytwis-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "273f10860188c4bd4d5a8aad0760036f", "sha256": "9de570ffc4f9de65dc4e573d6981a8bc7b94a9162a27d0c25f17eb3db97848a7"}, "downloads": -1, "filename": "pytwis-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "273f10860188c4bd4d5a8aad0760036f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17113, "upload_time": "2018-06-10T07:37:34", "upload_time_iso_8601": "2018-06-10T07:37:34.319481Z", "url": "https://files.pythonhosted.org/packages/d7/9a/ee18ab993d5a3ad48c808b9408e77ac0b279bf5a4abf851732ce3bd2e544/pytwis-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6948c504ea277a6b82f36edd35e44af5", "sha256": "2461994d190c66e4ceab30db59a63e8b14a7bd8fc3104969a4b4e52817e398ba"}, "downloads": -1, "filename": "pytwis-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6948c504ea277a6b82f36edd35e44af5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25219, "upload_time": "2018-06-10T07:37:35", "upload_time_iso_8601": "2018-06-10T07:37:35.568316Z", "url": "https://files.pythonhosted.org/packages/4e/d5/f90cad82e0fe80d3ec21fd50de149eedb4496cb91184671258169a75e5ce/pytwis-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:51 2020"}