{"info": {"author": "Ang Houfu", "author_email": "houfu@outlook.sg", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable"], "description": "# pdpc-decisions\n\n[![GitHub last commit](https://img.shields.io/github/last-commit/houfu/pdpc-decisions)](https://github.com/houfu/pdpc-decisions)\n[![Build Status](https://travis-ci.com/houfu/pdpc-decisions.svg?branch=master)](https://travis-ci.com/houfu/pdpc-decisions)\n[![Docker Cloud Automated build](https://img.shields.io/docker/cloud/automated/houfu/pdpc-decisions)](https://hub.docker.com/r/houfu/pdpc-decisions)\n[![PyPI version](https://badge.fury.io/py/pdpc-decisions.svg)](https://badge.fury.io/py/pdpc-decisions)\n\nThis package contains utilities which allow you to create a corpus of decisions from the \nPersonal Data Protection Commission of Singapore's \n[Data Protection Enforcement Cases](https://www.pdpc.gov.sg/Commissions-Decisions).\n\nThe primary use of such a corpus is for studying, possibly using data science tools such as \nnatural language processing.\n\nIt currently has the following features:\n\n* Visit the Personal Data Protection Commission of Singapore's \n[Data Protection Enforcement Cases](https://www.pdpc.gov.sg/Commissions-Decisions)\nand compile a table of decisions with information from the summaries provided by the PDPC for each case.\n* Save this table of decisions as CSV\n* Download all the PDF files of the decisions from the PDPC's website. \nIf the decision is not a PDF, collects the information provided on the decision web page and saves it as a text file.\n* Convert the PDF files into text files\n\n## Features provided by scraper\n\n* Published date\n* Respondent\n* Title\n* Summary\n* URL of PDF of decision\n\nThe features are discovered by passing `--extras` to the command.\n* **[Extras]** Citation\n* **[Extras]** Basic enforcement information (Financial penalty, warning, directions)\n* **[Extras]** References (referred by, referring to)\n\n## What pdpc-decisions uses\n* Python 3\n* PDF Miner\n* Selenium\n* Chrome\n* spaCy\n\n## Installation\n\n### Docker Image\n\nI dockerised the application for my personal ease of use.\nIt is probably the easiest and most straight-forward way \nto use the application and I recommend it too.\nThe dockerised application also contains all pre-requisites\nso there is no need for any manual installs.\n\nYou need to have docker installed. \nPull the image from [docker hub](https://hub.docker.com/r/houfu/pdpc-decisions).\n```shell script\ndocker pull houfu/pdpc-decisions\n```\n\nAfter that you can run the image and pass commands and arguments to it.\nFor example, if you would like the application to do all actions.\n\n```shell script\ndocker run houfu/pdpc-decisions all\n```\n\nThis isn't clever because downloads will be stored in the docker image \nand not easily accessed. Bind a volume in your filesystem and \nuse the `--root` option to direct the application\nto save the files there. For example:\n\n```shell script\ndocker run \\ \n  --mount type=bind,source=\"$(pwd)\"/target,target=/code/download \\ # Target directory must exist!\n  houfu/pdpc-decisions \\\n  all \\\n  --root /code/download/\n```\n\n### Local install\n* Install via PIP\n\n```shell script\npip install pdpc-decisions\n```\n\n* Once the package is installed, used the command line tool `pdpc-decisions` to use the script.\n\n* If necessary, install [Chrome](https://www.google.com/chrome/) \nand [ChromeDriver](https://sites.google.com/a/chromium.org/chromedriver/) for Selenium to work.\n\nThe main entry point for the script is `pdpcdecision.py`\n\n\n## Usage\n\nThe script accepts the following actions and options:\n\nAccepts the following actions.\n\n  \"`all`\"       Does all the actions (scraping the website, saving a csv,\n  downloading all files and creating a corpus).\n\n  \"`corpus`\"    After downloading all the decisions from the website, converts\n  them into text files.\n\n  \"`csv`\"      Save the items gathered by the scraper as a csv file.\n\n  \"`files`\"     Downloads all the decisions from the PDPC website into a\n  folder.\n\nOptions:\n  \n  `--csv FILE`            Filename for saving the items gathered by scraper as a\n                        csv file.  [default: scrape_results.csv]\n  \n  `--download DIRECTORY`  Destination folder for downloads of all PDF/web pages\n                        of PDPC decisions  [default: download/]\n  \n  `--corpus DIRECTORY`    Destination folder for PDPC decisions converted to\n                        text files  [default: corpus/]\n  `-r, --root DIRECTORY`  Root directory for downloads and files  [default:\n                        Your current working directory]\n  \n  `--extras/--no-extras`         Add extra features to the data collected. This increases processing time. This feature is ignored if action is `files` or `downloads`. \n                                (Experimental and requires reading of actual decisions)\n                                [default: *False*, '--no-extras']\n  \n  `--verbose`               Verbose output\n  \n  `--help`                Show this message and exit.\n\n## Contact\n\nFeel free to let me have your suggestions, comments or issues using the issue tracker or by \n[emailing me](mailto:houfu@outlook.sg).\n\nIt would also be nice to hear how you have used this corpus by using the above contacts.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/houfu/pdpc-decisions/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pdpc-decisions", "package_url": "https://pypi.org/project/pdpc-decisions/", "platform": "", "project_url": "https://pypi.org/project/pdpc-decisions/", "project_urls": {"Homepage": "https://github.com/houfu/pdpc-decisions/"}, "release_url": "https://pypi.org/project/pdpc-decisions/1.2.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Tools to extract and compile enforcement decisions from the Singapore Personal Data Protection Commission", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pdpc-decisions</h1>\n<p><a href=\"https://github.com/houfu/pdpc-decisions\" rel=\"nofollow\"><img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4b4b0195ac67bd82e7b9a95f462694e7e58ec61/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f686f7566752f706470632d6465636973696f6e73\"></a>\n<a href=\"https://travis-ci.com/houfu/pdpc-decisions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6bc4e95a5cb11ba4be0a749efa35e0e8047f4249/68747470733a2f2f7472617669732d63692e636f6d2f686f7566752f706470632d6465636973696f6e732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://hub.docker.com/r/houfu/pdpc-decisions\" rel=\"nofollow\"><img alt=\"Docker Cloud Automated build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/204b0abea35bb4f55e39ad7d6b35f5302ff04655/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6175746f6d617465642f686f7566752f706470632d6465636973696f6e73\"></a>\n<a href=\"https://badge.fury.io/py/pdpc-decisions\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5817e16633310c1ce04614459ad60c853f539aa/68747470733a2f2f62616467652e667572792e696f2f70792f706470632d6465636973696f6e732e737667\"></a></p>\n<p>This package contains utilities which allow you to create a corpus of decisions from the\nPersonal Data Protection Commission of Singapore's\n<a href=\"https://www.pdpc.gov.sg/Commissions-Decisions\" rel=\"nofollow\">Data Protection Enforcement Cases</a>.</p>\n<p>The primary use of such a corpus is for studying, possibly using data science tools such as\nnatural language processing.</p>\n<p>It currently has the following features:</p>\n<ul>\n<li>Visit the Personal Data Protection Commission of Singapore's\n<a href=\"https://www.pdpc.gov.sg/Commissions-Decisions\" rel=\"nofollow\">Data Protection Enforcement Cases</a>\nand compile a table of decisions with information from the summaries provided by the PDPC for each case.</li>\n<li>Save this table of decisions as CSV</li>\n<li>Download all the PDF files of the decisions from the PDPC's website.\nIf the decision is not a PDF, collects the information provided on the decision web page and saves it as a text file.</li>\n<li>Convert the PDF files into text files</li>\n</ul>\n<h2>Features provided by scraper</h2>\n<ul>\n<li>Published date</li>\n<li>Respondent</li>\n<li>Title</li>\n<li>Summary</li>\n<li>URL of PDF of decision</li>\n</ul>\n<p>The features are discovered by passing <code>--extras</code> to the command.</p>\n<ul>\n<li><strong>[Extras]</strong> Citation</li>\n<li><strong>[Extras]</strong> Basic enforcement information (Financial penalty, warning, directions)</li>\n<li><strong>[Extras]</strong> References (referred by, referring to)</li>\n</ul>\n<h2>What pdpc-decisions uses</h2>\n<ul>\n<li>Python 3</li>\n<li>PDF Miner</li>\n<li>Selenium</li>\n<li>Chrome</li>\n<li>spaCy</li>\n</ul>\n<h2>Installation</h2>\n<h3>Docker Image</h3>\n<p>I dockerised the application for my personal ease of use.\nIt is probably the easiest and most straight-forward way\nto use the application and I recommend it too.\nThe dockerised application also contains all pre-requisites\nso there is no need for any manual installs.</p>\n<p>You need to have docker installed.\nPull the image from <a href=\"https://hub.docker.com/r/houfu/pdpc-decisions\" rel=\"nofollow\">docker hub</a>.</p>\n<pre>docker pull houfu/pdpc-decisions\n</pre>\n<p>After that you can run the image and pass commands and arguments to it.\nFor example, if you would like the application to do all actions.</p>\n<pre>docker run houfu/pdpc-decisions all\n</pre>\n<p>This isn't clever because downloads will be stored in the docker image\nand not easily accessed. Bind a volume in your filesystem and\nuse the <code>--root</code> option to direct the application\nto save the files there. For example:</p>\n<pre>docker run <span class=\"se\">\\ </span>\n  --mount <span class=\"nv\">type</span><span class=\"o\">=</span>bind,source<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span><span class=\"s2\">\"</span>/target,target<span class=\"o\">=</span>/code/download <span class=\"se\">\\ </span><span class=\"c1\"># Target directory must exist!</span>\n  houfu/pdpc-decisions <span class=\"se\">\\</span>\n  all <span class=\"se\">\\</span>\n  --root /code/download/\n</pre>\n<h3>Local install</h3>\n<ul>\n<li>Install via PIP</li>\n</ul>\n<pre>pip install pdpc-decisions\n</pre>\n<ul>\n<li>\n<p>Once the package is installed, used the command line tool <code>pdpc-decisions</code> to use the script.</p>\n</li>\n<li>\n<p>If necessary, install <a href=\"https://www.google.com/chrome/\" rel=\"nofollow\">Chrome</a>\nand <a href=\"https://sites.google.com/a/chromium.org/chromedriver/\" rel=\"nofollow\">ChromeDriver</a> for Selenium to work.</p>\n</li>\n</ul>\n<p>The main entry point for the script is <code>pdpcdecision.py</code></p>\n<h2>Usage</h2>\n<p>The script accepts the following actions and options:</p>\n<p>Accepts the following actions.</p>\n<p>\"<code>all</code>\"       Does all the actions (scraping the website, saving a csv,\ndownloading all files and creating a corpus).</p>\n<p>\"<code>corpus</code>\"    After downloading all the decisions from the website, converts\nthem into text files.</p>\n<p>\"<code>csv</code>\"      Save the items gathered by the scraper as a csv file.</p>\n<p>\"<code>files</code>\"     Downloads all the decisions from the PDPC website into a\nfolder.</p>\n<p>Options:</p>\n<p><code>--csv FILE</code>            Filename for saving the items gathered by scraper as a\ncsv file.  [default: scrape_results.csv]</p>\n<p><code>--download DIRECTORY</code>  Destination folder for downloads of all PDF/web pages\nof PDPC decisions  [default: download/]</p>\n<p><code>--corpus DIRECTORY</code>    Destination folder for PDPC decisions converted to\ntext files  [default: corpus/]\n<code>-r, --root DIRECTORY</code>  Root directory for downloads and files  [default:\nYour current working directory]</p>\n<p><code>--extras/--no-extras</code>         Add extra features to the data collected. This increases processing time. This feature is ignored if action is <code>files</code> or <code>downloads</code>.\n(Experimental and requires reading of actual decisions)\n[default: <em>False</em>, '--no-extras']</p>\n<p><code>--verbose</code>               Verbose output</p>\n<p><code>--help</code>                Show this message and exit.</p>\n<h2>Contact</h2>\n<p>Feel free to let me have your suggestions, comments or issues using the issue tracker or by\n<a href=\"mailto:houfu@outlook.sg\">emailing me</a>.</p>\n<p>It would also be nice to hear how you have used this corpus by using the above contacts.</p>\n\n          </div>"}, "last_serial": 7109609, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "92d774b3c6f0c57ea45925b17521d1b8", "sha256": "50d30e3a8c0479a1e10ea28d02793cd254df676c950e85660e9e019e47833b6c"}, "downloads": -1, "filename": "pdpc_decisions-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "92d774b3c6f0c57ea45925b17521d1b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7153, "upload_time": "2020-02-14T14:40:30", "upload_time_iso_8601": "2020-02-14T14:40:30.387986Z", "url": "https://files.pythonhosted.org/packages/b2/d8/11adb2d14904e21af9fd160fb5802709e05883504ded12b7ce94d0a5984a/pdpc_decisions-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "038e6f9f107d9054e593fbc230ee5ee5", "sha256": "7b26217120a757e84afd20b6be912179362157588b673f03e8c32d11384f25a1"}, "downloads": -1, "filename": "pdpc-decisions-1.0.1.tar.gz", "has_sig": false, "md5_digest": "038e6f9f107d9054e593fbc230ee5ee5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5940, "upload_time": "2020-02-14T14:40:32", "upload_time_iso_8601": "2020-02-14T14:40:32.968034Z", "url": "https://files.pythonhosted.org/packages/c5/34/fec023ca68b667853abcf7a7e02902e8e163be869b33e1033b073ea12f71/pdpc-decisions-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "aa3af00cd5b979122a2af5f3fee0d10f", "sha256": "c435e85669df0a605a87a567b2eda548b700f020556cea312df49020c8ffadf3"}, "downloads": -1, "filename": "pdpc-decisions-1.0.2.tar.gz", "has_sig": false, "md5_digest": "aa3af00cd5b979122a2af5f3fee0d10f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6614, "upload_time": "2020-02-21T16:09:33", "upload_time_iso_8601": "2020-02-21T16:09:33.260420Z", "url": "https://files.pythonhosted.org/packages/e5/46/cfcfdfbcdd6186620bad52c8710f176a99f2a16ea7a24d3aa07ae093af9c/pdpc-decisions-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a4f60d3cff828f1ec98ba44bb3602717", "sha256": "76866a70fa2c49873f3227b45731d513e31e6052f90faa5bbdc35f8bdddf6a7e"}, "downloads": -1, "filename": "pdpc_decisions-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a4f60d3cff828f1ec98ba44bb3602717", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10637, "upload_time": "2020-03-19T14:43:37", "upload_time_iso_8601": "2020-03-19T14:43:37.555664Z", "url": "https://files.pythonhosted.org/packages/2c/56/0ac557f3155ffe8a57e727f9968fbae1084332cedaa6576d98cfa3a8d3f8/pdpc_decisions-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eadf9117f9d633fa33ea7e57103036ce", "sha256": "24c0e659f0df05430f99540e92f05a5b83207e9f3bcc1550679b4384d8ba1805"}, "downloads": -1, "filename": "pdpc-decisions-1.1.0.tar.gz", "has_sig": false, "md5_digest": "eadf9117f9d633fa33ea7e57103036ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8260, "upload_time": "2020-03-19T14:43:39", "upload_time_iso_8601": "2020-03-19T14:43:39.401074Z", "url": "https://files.pythonhosted.org/packages/31/b6/2d794f49d63cdda4f335960ed36991e62e57d087a19e4d0d66d24ded2a2d/pdpc-decisions-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "f87b70b28a50b4d589fca1b27df7eee5", "sha256": "20aa33a8045a91f970f66dc9a48c19be9296b350d913dda57c0643f05b370983"}, "downloads": -1, "filename": "pdpc-decisions-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f87b70b28a50b4d589fca1b27df7eee5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8278, "upload_time": "2020-03-20T16:14:02", "upload_time_iso_8601": "2020-03-20T16:14:02.010784Z", "url": "https://files.pythonhosted.org/packages/94/ec/757f9050d33806d7293a7d918b77b6e5d0bd5a62494bf7215aa84dbdf072/pdpc-decisions-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "a506c1d8a13b26234b7e45cd85d99d13", "sha256": "d689ab6a053b1007208ec5cdee39e9e7e22f2a04ea77a442a76e6ffadfee895c"}, "downloads": -1, "filename": "pdpc-decisions-1.1.2.tar.gz", "has_sig": false, "md5_digest": "a506c1d8a13b26234b7e45cd85d99d13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8643, "upload_time": "2020-03-27T01:06:44", "upload_time_iso_8601": "2020-03-27T01:06:44.846141Z", "url": "https://files.pythonhosted.org/packages/28/71/b962d96daf7709618c0183b3ba3a48aa1157095cf831e7bb14cae75cbcce/pdpc-decisions-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "ce5edb6bfc707b4085be17f95501cf8f", "sha256": "2ad619757d0c07f5dfda7c1375056e83b7aebe9811b4fa80e7f60a1bb8aff01f"}, "downloads": -1, "filename": "pdpc-decisions-1.2.0.tar.gz", "has_sig": false, "md5_digest": "ce5edb6bfc707b4085be17f95501cf8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9225, "upload_time": "2020-04-08T13:35:35", "upload_time_iso_8601": "2020-04-08T13:35:35.203467Z", "url": "https://files.pythonhosted.org/packages/03/9d/e335c1ec8594f3aee868c7988a581a79ac0ac3c4eccc39a7a2e859890c9c/pdpc-decisions-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "39428d3ca7696e1af6696bfad9cd1201", "sha256": "4e170460e4a50777b7f854a4d0ed298adaafc8d439e1a454713d1335120fc817"}, "downloads": -1, "filename": "pdpc-decisions-1.2.1.tar.gz", "has_sig": false, "md5_digest": "39428d3ca7696e1af6696bfad9cd1201", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9307, "upload_time": "2020-04-27T08:17:51", "upload_time_iso_8601": "2020-04-27T08:17:51.892696Z", "url": "https://files.pythonhosted.org/packages/7e/61/44e31d1f7b5b55ae82d3aba02f71778f14e6f543c2a90438901c591ae9a8/pdpc-decisions-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "39428d3ca7696e1af6696bfad9cd1201", "sha256": "4e170460e4a50777b7f854a4d0ed298adaafc8d439e1a454713d1335120fc817"}, "downloads": -1, "filename": "pdpc-decisions-1.2.1.tar.gz", "has_sig": false, "md5_digest": "39428d3ca7696e1af6696bfad9cd1201", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9307, "upload_time": "2020-04-27T08:17:51", "upload_time_iso_8601": "2020-04-27T08:17:51.892696Z", "url": "https://files.pythonhosted.org/packages/7e/61/44e31d1f7b5b55ae82d3aba02f71778f14e6f543c2a90438901c591ae9a8/pdpc-decisions-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:04 2020"}