{"info": {"author": "Woolfson Group, University of Bristol", "author_email": "chris.wood@bristol.ac.uk", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# AMPAL\nA simple, intuitive and Pythonic framework for representing biomolecular structure.\n\n[![CircleCI](https://circleci.com/gh/isambard-uob/ampal/tree/master.svg?style=shield)](https://circleci.com/gh/isambard-uob/ampal/tree/master)\n[![Python Version](https://img.shields.io/badge/python-3.6-lightgrey.svg)]()\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/isambard-uob/ampal/blob/master/LICENSE)\n\n## Installation\n\nYou can install AMPAL from pip:\n\n`pip install ampal`\n\nOr from source by downloading/cloning this repository, navigating to the folder\nand typing:\n\n`pip install .`\n\nAMPAL uses Cython, so if you're installing from source make sure you have it\ninstalled.\n\n## Super Quick Start\n\nLoad a PDB file into AMPAL:\n\n```Python\nmy_structure = ampal.load_pdb('3qy1.pdb')\nprint(my_structure)\n# OUT: <Assembly (3qy1) containing 2 Polypeptides, 449 Ligands>\n```\n\nSelect regions of the structure in an intuitive manner:\n\n```Python\nmy_atom = my_structure['A']['56']['CA']\nprint(my_structure['A']['56']['CA'])\n# OUT: <Carbon Atom (CA). Coordinates: (6.102, -4.287, -29.607)>\n```\n\nThen climb all the way back up the hierachy:\n\n```Python\nprint(my_atom.parent)\n# OUT: <Residue containing 9 Atoms. Residue code: GLU>\nprint(my_atom.parent.parent)\n# OUT: <Polypeptide containing 215 Residues. Sequence: DIDTLISNNALW...>\nprint(my_atom.parent.parent.parent)\n# OUT: <Assembly (3qy1) containing 2 Polypeptides, 449 Ligands>\n```\n\nThis is just a quick introduction, AMPAL contain tonnes of tools for making\ncomplex selections and performing analysis. Take a look at the\n[docs](https://isambard-uob.github.io/ampal/) to find out more.\n\n## Release Notes\n\n## v1.4.0\n\n* **Adds `get_ss_regions` to `ampal.dssp`.** This function can be used to\n  extract all regions of a protein in a particular secondary structure.\n* **Fixes bug with DSSP `ss_region` tagging.** End residues used to be missed.\n\n## v1.3.0\n\n* **Adds an interface for NACCESS.** Functions for using NACCESS to calculate\n  solvent accessibility.\n\n### v1.2.0\n\n* **Adds an interface for DSSP.** If you have DSSP on your computer and have the\n  `mkdssp` command available on your path, you can use the `ampal.tag_dssp_data`\n  function to add secondary structure information to the tags dictionary of the\n  residues in your structure.\n* **Adds the `ampal.align` module.** Contains a simple class for aligning two\n  `Polypeptides` using MMC. The simplest interface is the `align_backbones`\n  function.\n  * This is currently super inefficient and will be reimplemented.\n\n### v1.1.0\n\n* **Adds the centroid property to residues.**", "description_content_type": "text/markdown; charset=UTF-8; variant=GFM", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isambard-uob/ampal", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "AMPAL", "package_url": "https://pypi.org/project/AMPAL/", "platform": "", "project_url": "https://pypi.org/project/AMPAL/", "project_urls": {"Homepage": "https://github.com/isambard-uob/ampal"}, "release_url": "https://pypi.org/project/AMPAL/1.4.0/", "requires_dist": null, "requires_python": "", "summary": "A simple framework for representing biomolecular structure.", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AMPAL</h1>\n<p>A simple, intuitive and Pythonic framework for representing biomolecular structure.</p>\n<p><a href=\"https://circleci.com/gh/isambard-uob/ampal/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aac67391af292b34b7c084a0c67ffe1fba966830/68747470733a2f2f636972636c6563692e636f6d2f67682f6973616d626172642d756f622f616d70616c2f747265652f6d61737465722e7376673f7374796c653d736869656c64\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eef04eee445c980de855652807494a05c54a954d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d6c69676874677265792e737667\"></a>\n<a href=\"https://github.com/isambard-uob/ampal/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"MIT licensed\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<h2>Installation</h2>\n<p>You can install AMPAL from pip:</p>\n<p><code>pip install ampal</code></p>\n<p>Or from source by downloading/cloning this repository, navigating to the folder\nand typing:</p>\n<p><code>pip install .</code></p>\n<p>AMPAL uses Cython, so if you're installing from source make sure you have it\ninstalled.</p>\n<h2>Super Quick Start</h2>\n<p>Load a PDB file into AMPAL:</p>\n<pre><span class=\"n\">my_structure</span> <span class=\"o\">=</span> <span class=\"n\">ampal</span><span class=\"o\">.</span><span class=\"n\">load_pdb</span><span class=\"p\">(</span><span class=\"s1\">'3qy1.pdb'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_structure</span><span class=\"p\">)</span>\n<span class=\"c1\"># OUT: &lt;Assembly (3qy1) containing 2 Polypeptides, 449 Ligands&gt;</span>\n</pre>\n<p>Select regions of the structure in an intuitive manner:</p>\n<pre><span class=\"n\">my_atom</span> <span class=\"o\">=</span> <span class=\"n\">my_structure</span><span class=\"p\">[</span><span class=\"s1\">'A'</span><span class=\"p\">][</span><span class=\"s1\">'56'</span><span class=\"p\">][</span><span class=\"s1\">'CA'</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_structure</span><span class=\"p\">[</span><span class=\"s1\">'A'</span><span class=\"p\">][</span><span class=\"s1\">'56'</span><span class=\"p\">][</span><span class=\"s1\">'CA'</span><span class=\"p\">])</span>\n<span class=\"c1\"># OUT: &lt;Carbon Atom (CA). Coordinates: (6.102, -4.287, -29.607)&gt;</span>\n</pre>\n<p>Then climb all the way back up the hierachy:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_atom</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n<span class=\"c1\"># OUT: &lt;Residue containing 9 Atoms. Residue code: GLU&gt;</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_atom</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n<span class=\"c1\"># OUT: &lt;Polypeptide containing 215 Residues. Sequence: DIDTLISNNALW...&gt;</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_atom</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n<span class=\"c1\"># OUT: &lt;Assembly (3qy1) containing 2 Polypeptides, 449 Ligands&gt;</span>\n</pre>\n<p>This is just a quick introduction, AMPAL contain tonnes of tools for making\ncomplex selections and performing analysis. Take a look at the\n<a href=\"https://isambard-uob.github.io/ampal/\" rel=\"nofollow\">docs</a> to find out more.</p>\n<h2>Release Notes</h2>\n<h2>v1.4.0</h2>\n<ul>\n<li><strong>Adds <code>get_ss_regions</code> to <code>ampal.dssp</code>.</strong> This function can be used to\nextract all regions of a protein in a particular secondary structure.</li>\n<li><strong>Fixes bug with DSSP <code>ss_region</code> tagging.</strong> End residues used to be missed.</li>\n</ul>\n<h2>v1.3.0</h2>\n<ul>\n<li><strong>Adds an interface for NACCESS.</strong> Functions for using NACCESS to calculate\nsolvent accessibility.</li>\n</ul>\n<h3>v1.2.0</h3>\n<ul>\n<li><strong>Adds an interface for DSSP.</strong> If you have DSSP on your computer and have the\n<code>mkdssp</code> command available on your path, you can use the <code>ampal.tag_dssp_data</code>\nfunction to add secondary structure information to the tags dictionary of the\nresidues in your structure.</li>\n<li><strong>Adds the <code>ampal.align</code> module.</strong> Contains a simple class for aligning two\n<code>Polypeptides</code> using MMC. The simplest interface is the <code>align_backbones</code>\nfunction.\n<ul>\n<li>This is currently super inefficient and will be reimplemented.</li>\n</ul>\n</li>\n</ul>\n<h3>v1.1.0</h3>\n<ul>\n<li><strong>Adds the centroid property to residues.</strong></li>\n</ul>\n\n          </div>"}, "last_serial": 4316120, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "bcf76e92e4a93a1174cc5360ac7bb77e", "sha256": "3d8e8df30a9534d75b9771dfd45bd48706cc2409f8e7573da7a0951be85bf29d"}, "downloads": -1, "filename": "AMPAL-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bcf76e92e4a93a1174cc5360ac7bb77e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1169720, "upload_time": "2018-04-17T09:38:00", "upload_time_iso_8601": "2018-04-17T09:38:00.793585Z", "url": "https://files.pythonhosted.org/packages/3f/e5/03da3a77bba138c165451d3f8efb7fd32818aea4a6212b420c558e9088d8/AMPAL-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2320b933d5169bd709f2cd5928202ed6", "sha256": "58e351534d49ef3a7b5267dd32462c20852a63213a36acfbf670e447009cac21"}, "downloads": -1, "filename": "AMPAL-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2320b933d5169bd709f2cd5928202ed6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348592, "upload_time": "2018-04-18T16:19:37", "upload_time_iso_8601": "2018-04-18T16:19:37.005661Z", "url": "https://files.pythonhosted.org/packages/c2/90/2aecb8bdeab8de4f896f38fc792b434292f0f96a86cd3b860c849f4cfd55/AMPAL-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c78ab38604d93a4cfd0813a1607a5833", "sha256": "ab6beac3f730bc12a65d821a8b3d7ca68643e29179f08fef0607d45078bf1022"}, "downloads": -1, "filename": "AMPAL-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c78ab38604d93a4cfd0813a1607a5833", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1167847, "upload_time": "2018-05-21T09:23:38", "upload_time_iso_8601": "2018-05-21T09:23:38.229808Z", "url": "https://files.pythonhosted.org/packages/29/39/ac32680ba515731a81942c3a1bb8d0731fc0da02185885794ccf51dd604b/AMPAL-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "31735c25f7efd6a44d30e2739a46d88a", "sha256": "9a62def0cbdd4b000c0d1e7a76441e7ba873f0da9ef018af1871638bb13214a7"}, "downloads": -1, "filename": "AMPAL-1.2.0.tar.gz", "has_sig": false, "md5_digest": "31735c25f7efd6a44d30e2739a46d88a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1178742, "upload_time": "2018-06-11T09:50:30", "upload_time_iso_8601": "2018-06-11T09:50:30.339762Z", "url": "https://files.pythonhosted.org/packages/f4/11/85ef80392ed433f9024abc0bacc2173dd88ce0e7c42f23b804cc3650b1e5/AMPAL-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "bb6d2b711867b9f40aea6dd5e3cf456d", "sha256": "8f5a806e642f8978a8ef6ba678e3187e9fc4a6947c92e6fd35c2ccf03fa89276"}, "downloads": -1, "filename": "AMPAL-1.3.0.tar.gz", "has_sig": false, "md5_digest": "bb6d2b711867b9f40aea6dd5e3cf456d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1179638, "upload_time": "2018-08-06T08:33:13", "upload_time_iso_8601": "2018-08-06T08:33:13.771425Z", "url": "https://files.pythonhosted.org/packages/a4/9a/940d9cd5af9177e35487a99bf8bf0ae4c80b28eeca70c266ebc2f341cd4d/AMPAL-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "91bbf12683dc30e3958e41943084b4bf", "sha256": "ab0f6ee5284e923dac5f599c1e9c93dc2925ed3e63f156a8dd7cc58d69a0c5cc"}, "downloads": -1, "filename": "AMPAL-1.4.0.tar.gz", "has_sig": false, "md5_digest": "91bbf12683dc30e3958e41943084b4bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1184638, "upload_time": "2018-09-27T13:01:30", "upload_time_iso_8601": "2018-09-27T13:01:30.151710Z", "url": "https://files.pythonhosted.org/packages/c9/14/728e14ff9e6c3372082ffc88a2f78016b05143f0d6bee5c432c002314169/AMPAL-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91bbf12683dc30e3958e41943084b4bf", "sha256": "ab0f6ee5284e923dac5f599c1e9c93dc2925ed3e63f156a8dd7cc58d69a0c5cc"}, "downloads": -1, "filename": "AMPAL-1.4.0.tar.gz", "has_sig": false, "md5_digest": "91bbf12683dc30e3958e41943084b4bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1184638, "upload_time": "2018-09-27T13:01:30", "upload_time_iso_8601": "2018-09-27T13:01:30.151710Z", "url": "https://files.pythonhosted.org/packages/c9/14/728e14ff9e6c3372082ffc88a2f78016b05143f0d6bee5c432c002314169/AMPAL-1.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:20 2020"}