{"info": {"author": "Guilherme Caminha", "author_email": "gpkc@cin.ufpe.br", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": ".. image:: https://cdn.rawgit.com/gpkc/ELLIPTIc/master/logo.png\n    :align: center\n\n|\n\n.. image:: https://img.shields.io/pypi/v/elliptic.svg\n    :target: https://pypi.python.org/pypi/elliptic\n\n.. image:: https://travis-ci.org/padmec-reservoir/ELLIPTIc.svg?branch=master\n    :target: https://travis-ci.org/padmec-reservoir/ELLIPTIc\n\n.. image:: https://readthedocs.org/projects/elliptic/badge/?version=latest\n    :target: http://elliptic.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://coveralls.io/repos/github/padmec-reservoir/ELLIPTIc/badge.svg?branch=master\n    :target: https://coveralls.io/github/padmec-reservoir/ELLIPTIc?branch=master\n\n.. image:: https://api.codacy.com/project/badge/Grade/025660097e6a41fa9fa6fa590ef28148\n    :target: https://www.codacy.com/app/gpkc/ELLIPTIc?utm_source=github.com&utm_medium=referral&utm_content=padmec-reservoir/ELLIPTIc&utm_campaign=badger\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://raw.githubusercontent.com/gpkc/ELLIPTIc/master/LICENSE\n\n|\n\n.. image:: https://cdn.rawgit.com/gpkc/ELLIPTIc/master/pic.png\n        :width: 500\n        :align: center\n\n===========\nDescription\n===========\n\n**ELLIPTIc**, The ExtensibLe LIbrary for Physical simulaTIons, is a library / framework for creating reusable and extensible `Domain Specific Languages (DSL) <https://martinfowler.com/bliki/DomainSpecificLanguage.html>`_ for scientific purposes.\n\nELLIPTIc's workflow is as follows:\n\n* An ELLIPTIc DSL contract is created to define how the DSL syntax looks like. This DSL contract defines the operations that will be available when using the DSL.\n* A DSL implementation is built based on the DSL contract. The DSL implementation tells ELLIPTIc how to generate the corresponding Cython code.\n* When using ELLIPTIc-based DSLs, a tree-like intermediate representation is built.\n* This intermediate representation is used together with the DSL implementation to generate Cython code.\n\n==========\nDSL Syntax\n==========\n\nELLIPTIc-based DSLs use a `Fluent Interface <https://martinfowler.com/bliki/FluentInterface.html>`_ syntax. This allows\nfor elegant development of algorithms.\n\nBelow is an example of how using an ELLIPTIc-based DSL to iterate in a unstructured mesh would look like:\n\n.. code:: python\n\n    dsl = DSL(...)  # Instatiating a DSL object\n\n\n    with dsl.root() as root:\n        all_ents = root.Entities(dim=3).Adjacencies(bridge_dim=2, to_dim=3)  # Operation chaining\n        internal_ents = all_ents.Where(boundary=False)  # Continuing an operation chain\n        boundary_ents = all_ents.Where(boundary=True)  # Operation branching\n\n        perm_ents = internal_ents.GetField(name=\"permeability\")\n        dirichlet = boundary_ents.GetField(name=\"dirichlet\")\n        neumann = boundary_ents.GetField(name=\"neumann\")\n\n    dsl.get_built_module().run()  # Run the generated Cython code\n\n\nIt is also possible to export the intermediate representation to a image file, allowing for visual debugging:\n\n.. image:: https://cdn.rawgit.com/gpkc/ELLIPTIc/master/tree_example.png\n        :width: 400\n        :align: center\n\n=============\nDocumentation\n=============\n\nPlease refer to the `documentation page <http://elliptic.readthedocs.io/en/latest/>`_.\n\n=======\nTesting\n=======\n\nRun `python setup.py test`.\n\n=======================\nBuilding and installing\n=======================\n\nRun `python setup.py build` and `python setup.py install`.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/padmec-reservoir/ELLIPTIc", "keywords": "", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "ELLIPTIc", "package_url": "https://pypi.org/project/ELLIPTIc/", "platform": "", "project_url": "https://pypi.org/project/ELLIPTIc/", "project_urls": {"Homepage": "https://github.com/padmec-reservoir/ELLIPTIc"}, "release_url": "https://pypi.org/project/ELLIPTIc/1.0.1/", "requires_dist": ["colorlog", "configobj", "anytree", "typing-extensions", "jinja2", "cypyler", "sphinx; extra == 'docs'", "sphinx-autodoc-typehints; extra == 'docs'", "sphinx-rtd-theme; extra == 'docs'"], "requires_python": "", "summary": "A tool for building DSLs for scientific purposes.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://cdn.rawgit.com/gpkc/ELLIPTIc/master/logo.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/175915b3ec7f7982734c1c3a5d761d868523d986/68747470733a2f2f63646e2e7261776769742e636f6d2f67706b632f454c4c49505449632f6d61737465722f6c6f676f2e706e67\">\n<div>\n<div><br></div>\n</div>\n<a href=\"https://pypi.python.org/pypi/elliptic\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/elliptic.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/656e3db2b5d6cd5c2ce883e6e27942e8820ba667/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656c6c69707469632e737667\"></a>\n<a href=\"https://travis-ci.org/padmec-reservoir/ELLIPTIc\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/padmec-reservoir/ELLIPTIc.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e42ca7ba6ee9d9f5b81598c773faf3d8370f21bd/68747470733a2f2f7472617669732d63692e6f72672f7061646d65632d7265736572766f69722f454c4c49505449632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://elliptic.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/elliptic/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a3e4edd62fa88209c0914aca83eb97837db357c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f656c6c69707469632f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/padmec-reservoir/ELLIPTIc?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/padmec-reservoir/ELLIPTIc/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f2f88d431d3935a4d715c193004e6f530e8979c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7061646d65632d7265736572766f69722f454c4c49505449632f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.codacy.com/app/gpkc/ELLIPTIc?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=padmec-reservoir/ELLIPTIc&amp;utm_campaign=badger\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Grade/025660097e6a41fa9fa6fa590ef28148\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37c2e23cf2f29a1974a80524059b8daa637cd8ba/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3032353636303039376536613431666139666136666135393065663238313438\"></a>\n<a href=\"https://raw.githubusercontent.com/gpkc/ELLIPTIc/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<div>\n<div><br></div>\n</div>\n<img alt=\"https://cdn.rawgit.com/gpkc/ELLIPTIc/master/pic.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a820f96a94b6a2e9d53bab4234c9ea09290f3bde/68747470733a2f2f63646e2e7261776769742e636f6d2f67706b632f454c4c49505449632f6d61737465722f7069632e706e67\" width=\"500\">\n<div id=\"description\">\n<h2>Description</h2>\n<p><strong>ELLIPTIc</strong>, The ExtensibLe LIbrary for Physical simulaTIons, is a library / framework for creating reusable and extensible <a href=\"https://martinfowler.com/bliki/DomainSpecificLanguage.html\" rel=\"nofollow\">Domain Specific Languages (DSL)</a> for scientific purposes.</p>\n<p>ELLIPTIc\u2019s workflow is as follows:</p>\n<ul>\n<li>An ELLIPTIc DSL contract is created to define how the DSL syntax looks like. This DSL contract defines the operations that will be available when using the DSL.</li>\n<li>A DSL implementation is built based on the DSL contract. The DSL implementation tells ELLIPTIc how to generate the corresponding Cython code.</li>\n<li>When using ELLIPTIc-based DSLs, a tree-like intermediate representation is built.</li>\n<li>This intermediate representation is used together with the DSL implementation to generate Cython code.</li>\n</ul>\n</div>\n<div id=\"dsl-syntax\">\n<h2>DSL Syntax</h2>\n<p>ELLIPTIc-based DSLs use a <a href=\"https://martinfowler.com/bliki/FluentInterface.html\" rel=\"nofollow\">Fluent Interface</a> syntax. This allows\nfor elegant development of algorithms.</p>\n<p>Below is an example of how using an ELLIPTIc-based DSL to iterate in a unstructured mesh would look like:</p>\n<pre><span class=\"n\">dsl</span> <span class=\"o\">=</span> <span class=\"n\">DSL</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>  <span class=\"c1\"># Instatiating a DSL object</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">dsl</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">root</span><span class=\"p\">:</span>\n    <span class=\"n\">all_ents</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Entities</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Adjacencies</span><span class=\"p\">(</span><span class=\"n\">bridge_dim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">to_dim</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Operation chaining</span>\n    <span class=\"n\">internal_ents</span> <span class=\"o\">=</span> <span class=\"n\">all_ents</span><span class=\"o\">.</span><span class=\"n\">Where</span><span class=\"p\">(</span><span class=\"n\">boundary</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># Continuing an operation chain</span>\n    <span class=\"n\">boundary_ents</span> <span class=\"o\">=</span> <span class=\"n\">all_ents</span><span class=\"o\">.</span><span class=\"n\">Where</span><span class=\"p\">(</span><span class=\"n\">boundary</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># Operation branching</span>\n\n    <span class=\"n\">perm_ents</span> <span class=\"o\">=</span> <span class=\"n\">internal_ents</span><span class=\"o\">.</span><span class=\"n\">GetField</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"permeability\"</span><span class=\"p\">)</span>\n    <span class=\"n\">dirichlet</span> <span class=\"o\">=</span> <span class=\"n\">boundary_ents</span><span class=\"o\">.</span><span class=\"n\">GetField</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"dirichlet\"</span><span class=\"p\">)</span>\n    <span class=\"n\">neumann</span> <span class=\"o\">=</span> <span class=\"n\">boundary_ents</span><span class=\"o\">.</span><span class=\"n\">GetField</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"neumann\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsl</span><span class=\"o\">.</span><span class=\"n\">get_built_module</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>  <span class=\"c1\"># Run the generated Cython code</span>\n</pre>\n<p>It is also possible to export the intermediate representation to a image file, allowing for visual debugging:</p>\n<img alt=\"https://cdn.rawgit.com/gpkc/ELLIPTIc/master/tree_example.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b4ba323d8291a7cca187fe59864efa00bacee1e/68747470733a2f2f63646e2e7261776769742e636f6d2f67706b632f454c4c49505449632f6d61737465722f747265655f6578616d706c652e706e67\" width=\"400\">\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Please refer to the <a href=\"http://elliptic.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation page</a>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Run <cite>python setup.py test</cite>.</p>\n</div>\n<div id=\"building-and-installing\">\n<h2>Building and installing</h2>\n<p>Run <cite>python setup.py build</cite> and <cite>python setup.py install</cite>.</p>\n</div>\n\n          </div>"}, "last_serial": 3778959, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "79296b374bab5c1155004f43eebb51f7", "sha256": "937602e156159ea655f0ef0c7982017e9215a45ab3fb0dc49f7db46ba37a1420"}, "downloads": -1, "filename": "ELLIPTIc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79296b374bab5c1155004f43eebb51f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26394, "upload_time": "2018-04-18T19:36:12", "upload_time_iso_8601": "2018-04-18T19:36:12.785550Z", "url": "https://files.pythonhosted.org/packages/9d/1b/a2c90db9aad187d2a59f4e60ec88feed87655aee84c1b240296015e39889/ELLIPTIc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b5729d34335389266e0bfe36ba877ae", "sha256": "9285aeca3d2faa2cfe9f03c59485ab364d247a2e22fd8feb3d5d80825a537279"}, "downloads": -1, "filename": "ELLIPTIc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1b5729d34335389266e0bfe36ba877ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8844, "upload_time": "2018-04-18T19:36:14", "upload_time_iso_8601": "2018-04-18T19:36:14.169473Z", "url": "https://files.pythonhosted.org/packages/91/f9/9886b4328afb9fc07d6b70239de44c1898730bfea50427c1706de3986ccf/ELLIPTIc-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7642a9cd75ffb775c7946b3a4aa36379", "sha256": "d55dc2999357f8adf59443adff7dd1dbee98e282458eb7ce01fc553e43a7cbfd"}, "downloads": -1, "filename": "ELLIPTIc-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7642a9cd75ffb775c7946b3a4aa36379", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12107, "upload_time": "2018-04-19T00:29:55", "upload_time_iso_8601": "2018-04-19T00:29:55.113874Z", "url": "https://files.pythonhosted.org/packages/f6/65/e3f540f50e15075d85a2c807dd48e8b7978848c93431b080980ade049d06/ELLIPTIc-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6456f6dabf770f84b5fb629b4e4f2807", "sha256": "558146659eb7f7b355bc75fefc6365c2f63b2b98e69e2c7a9a916139dd40e22e"}, "downloads": -1, "filename": "ELLIPTIc-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6456f6dabf770f84b5fb629b4e4f2807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9382, "upload_time": "2018-04-19T00:29:56", "upload_time_iso_8601": "2018-04-19T00:29:56.412035Z", "url": "https://files.pythonhosted.org/packages/fa/79/400348f3ca271d16edb284e8f951d5b8d9ab0b26f3a139dfee31f9a8473f/ELLIPTIc-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7642a9cd75ffb775c7946b3a4aa36379", "sha256": "d55dc2999357f8adf59443adff7dd1dbee98e282458eb7ce01fc553e43a7cbfd"}, "downloads": -1, "filename": "ELLIPTIc-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7642a9cd75ffb775c7946b3a4aa36379", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12107, "upload_time": "2018-04-19T00:29:55", "upload_time_iso_8601": "2018-04-19T00:29:55.113874Z", "url": "https://files.pythonhosted.org/packages/f6/65/e3f540f50e15075d85a2c807dd48e8b7978848c93431b080980ade049d06/ELLIPTIc-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6456f6dabf770f84b5fb629b4e4f2807", "sha256": "558146659eb7f7b355bc75fefc6365c2f63b2b98e69e2c7a9a916139dd40e22e"}, "downloads": -1, "filename": "ELLIPTIc-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6456f6dabf770f84b5fb629b4e4f2807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9382, "upload_time": "2018-04-19T00:29:56", "upload_time_iso_8601": "2018-04-19T00:29:56.412035Z", "url": "https://files.pythonhosted.org/packages/fa/79/400348f3ca271d16edb284e8f951d5b8d9ab0b26f3a139dfee31f9a8473f/ELLIPTIc-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:47 2020"}