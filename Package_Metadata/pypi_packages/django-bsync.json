{"info": {"author": "fingul", "author_email": "fingul@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=================\nDjango-bsync\n=================\n\nForked from Django-livereload\n\nApplication performing a `browser-sync`_ once the development\nserver is ready.\n\nWhy this project ?\n------------------\n\nI recently started using `Gulp`_ and `browser-sync`_ to automatize some\ntasks. Everytime an HTML, CSS or JS file changes, a bsync is performed in\nthe browser to reflect those changes, and I was pretty happy with that.\n\nBut I found one limitation, I cannot perform a bsync of the current\npage when editing Python files because the development server provided by\nDjango is not necessary ready as soon as the bsync request is emitted.\n\nThat's why I created this application.\n\nInstallation\n------------\n\n* First install the package on your system: ::\n\n  $ pip install django-bsync\n\n* Then register the ``'bsync'`` application in your ``INSTALLED_APPS``\n  setting, before the ``'django.contrib.staticfiles'`` application if used.\n\nUsage\n-----\n\nInstall `browser-sync` globally ::\n\n $ npm install -g browser-sync\n\nIf the bsync server provided by `browser-sync` is launched (via `Gulp`_,\n`Grunt`_ or whatever), the ``runserver`` command will do a browser-sync reload on\nyour browser whenever the Django development server is ready.\n\n\n.. _`browser-sync`: http://www.browsersync.io/\n.. _`Gulp`: http://gulpjs.com/\n.. _`Grunt`: http://gruntjs.com/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.com/fingul/django-bsync", "keywords": "django,server,runserver,browser-sync", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-bsync", "package_url": "https://pypi.org/project/django-bsync/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-bsync/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.com/fingul/django-bsync"}, "release_url": "https://pypi.org/project/django-bsync/1.4.3/", "requires_dist": null, "requires_python": null, "summary": "browser-sync with the Django development server", "version": "1.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Forked from Django-livereload</p>\n<p>Application performing a <a href=\"http://www.browsersync.io/\" rel=\"nofollow\">browser-sync</a> once the development\nserver is ready.</p>\n<div id=\"why-this-project\">\n<h2>Why this project ?</h2>\n<p>I recently started using <a href=\"http://gulpjs.com/\" rel=\"nofollow\">Gulp</a> and <a href=\"http://www.browsersync.io/\" rel=\"nofollow\">browser-sync</a> to automatize some\ntasks. Everytime an HTML, CSS or JS file changes, a bsync is performed in\nthe browser to reflect those changes, and I was pretty happy with that.</p>\n<p>But I found one limitation, I cannot perform a bsync of the current\npage when editing Python files because the development server provided by\nDjango is not necessary ready as soon as the bsync request is emitted.</p>\n<p>That\u2019s why I created this application.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li><p>First install the package on your system:</p>\n<pre>$ pip install django-bsync\n</pre>\n</li>\n<li><p>Then register the <tt>'bsync'</tt> application in your <tt>INSTALLED_APPS</tt>\nsetting, before the <tt>'django.contrib.staticfiles'</tt> application if used.</p>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Install <cite>browser-sync</cite> globally</p>\n<pre>$ npm install -g browser-sync\n</pre>\n<p>If the bsync server provided by <cite>browser-sync</cite> is launched (via <a href=\"http://gulpjs.com/\" rel=\"nofollow\">Gulp</a>,\n<a href=\"http://gruntjs.com/\" rel=\"nofollow\">Grunt</a> or whatever), the <tt>runserver</tt> command will do a browser-sync reload on\nyour browser whenever the Django development server is ready.</p>\n</div>\n\n          </div>"}, "last_serial": 1786532, "releases": {"1.4": [{"comment_text": "", "digests": {"md5": "8ad8b7be6d5d5ea2b05227eaaa3c9f1b", "sha256": "f6d171637f1d3c76ba768747da672d29dee598574374184627f78ee2bb8add22"}, "downloads": -1, "filename": "django-bsync-1.4.tar.gz", "has_sig": false, "md5_digest": "8ad8b7be6d5d5ea2b05227eaaa3c9f1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3934, "upload_time": "2015-10-26T12:37:25", "upload_time_iso_8601": "2015-10-26T12:37:25.101588Z", "url": "https://files.pythonhosted.org/packages/09/cd/f566d44b5294ff719f8286381aac71092dbef42bf92a48960cb06f31e639/django-bsync-1.4.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "67c561e79b0e560aff5bd315c25ed084", "sha256": "b8577dbbe3674473cc156f0eba03fa3919f9cbfaf03936155f8d2eecae9c308f"}, "downloads": -1, "filename": "django-bsync-1.4.1.tar.gz", "has_sig": false, "md5_digest": "67c561e79b0e560aff5bd315c25ed084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3931, "upload_time": "2015-10-26T12:43:31", "upload_time_iso_8601": "2015-10-26T12:43:31.550773Z", "url": "https://files.pythonhosted.org/packages/dd/d4/d8b5672b6cf2083c7564e9b60857e2ecc47d91f6747638fff9688a451a6b/django-bsync-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "b725b8add7ba7dffd376d815d440fefb", "sha256": "e6f4ec34fcc16ac1fc3ed985e32c729395d049c029883145a6cc6a4c76dc94cd"}, "downloads": -1, "filename": "django-bsync-1.4.2.tar.gz", "has_sig": false, "md5_digest": "b725b8add7ba7dffd376d815d440fefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3932, "upload_time": "2015-10-26T12:57:00", "upload_time_iso_8601": "2015-10-26T12:57:00.746470Z", "url": "https://files.pythonhosted.org/packages/0c/29/110c1ad0d982fcfc09f3d54d700f253889ae7a59c3b37ec4e6800b3e7af3/django-bsync-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "e55d5a2bc34fd538fc239989873aef1c", "sha256": "b808f9cd36436a4d30036f457b7a8378b47d07148d6fcc96179fdb333e6a9178"}, "downloads": -1, "filename": "django-bsync-1.4.3.tar.gz", "has_sig": false, "md5_digest": "e55d5a2bc34fd538fc239989873aef1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3925, "upload_time": "2015-10-26T13:05:58", "upload_time_iso_8601": "2015-10-26T13:05:58.350979Z", "url": "https://files.pythonhosted.org/packages/07/ab/461c261605d78d78fdea0b34323420c5b0c588566294cd16647b5419e7c7/django-bsync-1.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e55d5a2bc34fd538fc239989873aef1c", "sha256": "b808f9cd36436a4d30036f457b7a8378b47d07148d6fcc96179fdb333e6a9178"}, "downloads": -1, "filename": "django-bsync-1.4.3.tar.gz", "has_sig": false, "md5_digest": "e55d5a2bc34fd538fc239989873aef1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3925, "upload_time": "2015-10-26T13:05:58", "upload_time_iso_8601": "2015-10-26T13:05:58.350979Z", "url": "https://files.pythonhosted.org/packages/07/ab/461c261605d78d78fdea0b34323420c5b0c588566294cd16647b5419e7c7/django-bsync-1.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:19 2020"}