{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "`PyGMLParser` is a [Graph Modeling Language (GML)](https://en.wikipedia.org/wiki/Graph_Modelling_Language) standalone parser for Python 3.\n\nIt is a fork of: [icasdri/gml.py](https://github.com/icasdri/gml.py)\n\n----------\nGet it from PyPi by doing:\n\n`pip3 install PyGMLParser`\n\n\nUses [Travis CI](https://travis-ci.org/github/hasii2011/PyGMLParser) for continuous  integration.  \n\nThe class documentation is [here](https://hasii2011.github.io/PyGMLParser/)\n\n----------\n\nThe specific updates are:\n\n* Updated to Python 3\n* Use f-strings\n* Separate files for each class\n* Use packages instead of single file\n* Updated GML format from Tulip .gml files to include the following keywords keyword used by the \n[Python Tulip](https://tulip.labri.fr/Documentation/current/tulip-python/html) gml exporter ('GML Export')\n    * `graphics`\n    * `Line`\n    * `point`\n* Use dataclasses for graphics and points\n* Use type hinting and custom typing for readability and maintainability\n* Use Python logging for debugging\n* Introduced a set of small unit tests\n\n\n### The fast and the dirty\n```python3\nfrom org.hasii.pygmlparser.Parser import Parser\nfrom org.hasii.pygmlparser.Graph import Graph\nfrom org.hasii.pygmlparser.Edge import Edge\nfrom org.hasii.pygmlparser.Node import Node\nfrom org.hasii.pygmlparser.graphics.NodeGraphics import NodeGraphics\nfrom org.hasii.pygmlparser.graphics.EdgeGraphics import EdgeGraphics\nfrom org.hasii.pygmlparser.graphics.Point import Point\n\n\n\n\n# Instantiate a parser, load a file, and parse it!\nparser: Parser = Parser()\nparser.load_gml('/path/to/aGraph.gml')\nparser.parse()\n\n# Retrieve the graph nodes \nnodes: Graph.Nodes = graph.graphNodes  # a map of id -> Node objects\n\n# Retrieve the graph edges\nedges: Graph.Edges = graph.graphEdges  # list of Edge objects\n\n# Directly access the node or edge attributes\nnode: Node = graph.graphNodes[0]\nedge: Edge = graph.graphEdges[0]\n\nnode.id      # the id of this node\nedge.source  # the source id of this edge\n\nnode.is_anon  # whether or not this node actually appeared as a node block\n              # in the input GML (or if it was inferred, via edge source/targets)\n              # _True_ if inferred, False if actually appeared\n\nnode.forward_edges   # List of Edge instances whose source is this node\nnode.backward_edges  # List of Edge instances whose target is this node\n\n# Special attributes on Edges\nedge.source_node  # Node object corresponding to edge.source (which is an id)\nedge.target_node  # Node object corresponding to edge.target (which is an id)\n\n# Get the Tulip extensions\nedgeGraphics: EdgeGraphics = edge.graphics\nnodeGraphics: NodeGraphics = node.graphics\n\n# Get the edge line drawing description\nline:  Tuple[Point] = edgeGraphics.line\n\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hasii2011/PyGMLParser", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pygmlparser", "package_url": "https://pypi.org/project/pygmlparser/", "platform": "", "project_url": "https://pypi.org/project/pygmlparser/", "project_urls": {"Homepage": "https://github.com/hasii2011/PyGMLParser"}, "release_url": "https://pypi.org/project/pygmlparser/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Graph Modeling Language (GML) standalone parser for Python 3.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><code>PyGMLParser</code> is a <a href=\"https://en.wikipedia.org/wiki/Graph_Modelling_Language\" rel=\"nofollow\">Graph Modeling Language (GML)</a> standalone parser for Python 3.</p>\n<p>It is a fork of: <a href=\"https://github.com/icasdri/gml.py\" rel=\"nofollow\">icasdri/gml.py</a></p>\n<hr>\n<p>Get it from PyPi by doing:</p>\n<p><code>pip3 install PyGMLParser</code></p>\n<p>Uses <a href=\"https://travis-ci.org/github/hasii2011/PyGMLParser\" rel=\"nofollow\">Travis CI</a> for continuous  integration.</p>\n<p>The class documentation is <a href=\"https://hasii2011.github.io/PyGMLParser/\" rel=\"nofollow\">here</a></p>\n<hr>\n<p>The specific updates are:</p>\n<ul>\n<li>Updated to Python 3</li>\n<li>Use f-strings</li>\n<li>Separate files for each class</li>\n<li>Use packages instead of single file</li>\n<li>Updated GML format from Tulip .gml files to include the following keywords keyword used by the\n<a href=\"https://tulip.labri.fr/Documentation/current/tulip-python/html\" rel=\"nofollow\">Python Tulip</a> gml exporter ('GML Export')\n<ul>\n<li><code>graphics</code></li>\n<li><code>Line</code></li>\n<li><code>point</code></li>\n</ul>\n</li>\n<li>Use dataclasses for graphics and points</li>\n<li>Use type hinting and custom typing for readability and maintainability</li>\n<li>Use Python logging for debugging</li>\n<li>Introduced a set of small unit tests</li>\n</ul>\n<h3>The fast and the dirty</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.Parser</span> <span class=\"kn\">import</span> <span class=\"n\">Parser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.Graph</span> <span class=\"kn\">import</span> <span class=\"n\">Graph</span>\n<span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.Edge</span> <span class=\"kn\">import</span> <span class=\"n\">Edge</span>\n<span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.Node</span> <span class=\"kn\">import</span> <span class=\"n\">Node</span>\n<span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.graphics.NodeGraphics</span> <span class=\"kn\">import</span> <span class=\"n\">NodeGraphics</span>\n<span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.graphics.EdgeGraphics</span> <span class=\"kn\">import</span> <span class=\"n\">EdgeGraphics</span>\n<span class=\"kn\">from</span> <span class=\"nn\">org.hasii.pygmlparser.graphics.Point</span> <span class=\"kn\">import</span> <span class=\"n\">Point</span>\n\n\n\n\n<span class=\"c1\"># Instantiate a parser, load a file, and parse it!</span>\n<span class=\"n\">parser</span><span class=\"p\">:</span> <span class=\"n\">Parser</span> <span class=\"o\">=</span> <span class=\"n\">Parser</span><span class=\"p\">()</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">load_gml</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/aGraph.gml'</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Retrieve the graph nodes </span>\n<span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"n\">Graph</span><span class=\"o\">.</span><span class=\"n\">Nodes</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">graphNodes</span>  <span class=\"c1\"># a map of id -&gt; Node objects</span>\n\n<span class=\"c1\"># Retrieve the graph edges</span>\n<span class=\"n\">edges</span><span class=\"p\">:</span> <span class=\"n\">Graph</span><span class=\"o\">.</span><span class=\"n\">Edges</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">graphEdges</span>  <span class=\"c1\"># list of Edge objects</span>\n\n<span class=\"c1\"># Directly access the node or edge attributes</span>\n<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">Node</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">graphNodes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">edge</span><span class=\"p\">:</span> <span class=\"n\">Edge</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">graphEdges</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">id</span>      <span class=\"c1\"># the id of this node</span>\n<span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">source</span>  <span class=\"c1\"># the source id of this edge</span>\n\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">is_anon</span>  <span class=\"c1\"># whether or not this node actually appeared as a node block</span>\n              <span class=\"c1\"># in the input GML (or if it was inferred, via edge source/targets)</span>\n              <span class=\"c1\"># _True_ if inferred, False if actually appeared</span>\n\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">forward_edges</span>   <span class=\"c1\"># List of Edge instances whose source is this node</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">backward_edges</span>  <span class=\"c1\"># List of Edge instances whose target is this node</span>\n\n<span class=\"c1\"># Special attributes on Edges</span>\n<span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">source_node</span>  <span class=\"c1\"># Node object corresponding to edge.source (which is an id)</span>\n<span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">target_node</span>  <span class=\"c1\"># Node object corresponding to edge.target (which is an id)</span>\n\n<span class=\"c1\"># Get the Tulip extensions</span>\n<span class=\"n\">edgeGraphics</span><span class=\"p\">:</span> <span class=\"n\">EdgeGraphics</span> <span class=\"o\">=</span> <span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">graphics</span>\n<span class=\"n\">nodeGraphics</span><span class=\"p\">:</span> <span class=\"n\">NodeGraphics</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">graphics</span>\n\n<span class=\"c1\"># Get the edge line drawing description</span>\n<span class=\"n\">line</span><span class=\"p\">:</span>  <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Point</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">edgeGraphics</span><span class=\"o\">.</span><span class=\"n\">line</span>\n</pre>\n\n          </div>"}, "last_serial": 6899204, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "fc9838f32b3517bc7c6b20ebc4657da5", "sha256": "1dc8cdb87e5c9db9cfacb05f588ea102e4d1984da4abacb476a398c30fd626b0"}, "downloads": -1, "filename": "pygmlparser-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc9838f32b3517bc7c6b20ebc4657da5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14661, "upload_time": "2020-03-27T21:19:40", "upload_time_iso_8601": "2020-03-27T21:19:40.639514Z", "url": "https://files.pythonhosted.org/packages/44/6c/c8a4a893402edc0a4b636f2bbf4f82f363725e52f9a2fd9fb2b4010ce20e/pygmlparser-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e9396c12201b82375674bfe5a6b6022", "sha256": "5ef434940e92c554ee645043609c33fc287d81a0c082efd293a7923f8489b7a1"}, "downloads": -1, "filename": "pygmlparser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0e9396c12201b82375674bfe5a6b6022", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8772, "upload_time": "2020-03-27T21:19:42", "upload_time_iso_8601": "2020-03-27T21:19:42.915156Z", "url": "https://files.pythonhosted.org/packages/1b/a3/fec3ba723588c957ed0cc7da35f5c1a5e5ccf80ed15bf77e3c80e81951dd/pygmlparser-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc9838f32b3517bc7c6b20ebc4657da5", "sha256": "1dc8cdb87e5c9db9cfacb05f588ea102e4d1984da4abacb476a398c30fd626b0"}, "downloads": -1, "filename": "pygmlparser-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc9838f32b3517bc7c6b20ebc4657da5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14661, "upload_time": "2020-03-27T21:19:40", "upload_time_iso_8601": "2020-03-27T21:19:40.639514Z", "url": "https://files.pythonhosted.org/packages/44/6c/c8a4a893402edc0a4b636f2bbf4f82f363725e52f9a2fd9fb2b4010ce20e/pygmlparser-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e9396c12201b82375674bfe5a6b6022", "sha256": "5ef434940e92c554ee645043609c33fc287d81a0c082efd293a7923f8489b7a1"}, "downloads": -1, "filename": "pygmlparser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0e9396c12201b82375674bfe5a6b6022", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8772, "upload_time": "2020-03-27T21:19:42", "upload_time_iso_8601": "2020-03-27T21:19:42.915156Z", "url": "https://files.pythonhosted.org/packages/1b/a3/fec3ba723588c957ed0cc7da35f5c1a5e5ccf80ed15bf77e3c80e81951dd/pygmlparser-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:51 2020"}