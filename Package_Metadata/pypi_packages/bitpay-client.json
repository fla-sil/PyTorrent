{"info": {"author": "kiddhustle", "author_email": "kiddhustle@wiardweb.com", "bugtrack_url": null, "classifiers": [], "description": "New usage: from bitpay_client import BitPay.API\n\u00a92014 BITPAY, INC.\n\nPermission is hereby granted to any person obtaining a copy of this\nsoftware and associated documentation for use and/or modification in\nassociation with the bitpay.com service.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nBitcoin Python payment library using the bitpay.com service.\n\nInstallation\n------------\n\nVaries depending on what python webserver framework you are using\n(SimpleHTTPServer, Flask, Bottle, Django, etc.). Most of the calls will\nrun as-is from a script, but bpVerifyNotification will require updating\ndepending on your framework. You can integrate these functions into your\ncustom shopping cart implementation.\n\nConfiguration\n-------------\n\nNote: Python 2.7 and its built in libraries are required for use of this\ncode library.\n\n1. Create an API key at bitpay.com by clicking My Account > API Access\n   Keys > Add New API Key.\n2. In the bp\\_options.py file, configure the options specific to your\n   implementation.\n\nUsage\n-----\n\n1. In your shopping cart code, call bpCreateInvoice() with the\n   appropriate orderID, price, posData and options.\n2. The library will attempt to POST the new invoice information via curl\n   to the BitPay network. If successful, you will receive an invoice in\n   the return response. Any errors in this process will return an array\n   with a single element: 'error' and the exception msg.\n3. You may use the bpLog function manually to log any information you\n   would like to track or automatically by setting the useLogging option\n   to true in the bp\\_options file. The log file could potentially get\n   very large, depending on usage, so monitor closely or only use during\n   debugging.\n4. Responses from the BitPay network are JSON. You can use the new\n   decodeResponse() function to convert these to an associative array,\n   if needed.\n\nTroubleshooting\n---------------\n\nThe official BitPay API documentation should always be your first\nreference for development: https://bitpay.com/downloads/bitpayApi.pdf\n\n1. Verify that your \"notificationURL\" for the invoice is \"https://\"\n   (not\u00a0\"http://\")\n2. Ensure a valid SSL certificate is installed on your server. Also\n   ensure your root CA cert is updated. If your CA cert is not current,\n   you will see curl SSL verification errors.\n3. Verify that your callback handler at the \"notificationURL\" is\n   properly receiving\u00a0POSTs. You can verify this by POSTing your own\n   messages to the server from a tool like Chrome Postman.\n4. Verify that the POST data received is properly parsed and that the\n   logic that updates the order status on the merchants web server is\n   correct.\n5. Verify that the merchants web server is not blocking POSTs from\n   servers it may not recognize. Double check this on the firewall as\n   well, if one is being used.\n6. Use the logging functionality to log errors during development. If\n   you contact BitPay support, they will ask to see the log file to help\n   diagnose any problems.\n7. Check the version of this Python library agains the official\n   repository to ensure you are using the latest version. Your issue\n   might have been addressed in a newer version of the library.\n8. If all else fails, send an email describing your issue *in detail* to\n   support@bitpay.com\n9. To manually test the library, update the options file with your API\n   key and do the following:\n\n   .. raw:: html\n\n      <pre>\n      $ python\n      >>> import bp_lib\n      >>> bp_lib.bpCreateInvoice(123, 1, 'fish')\n      </pre>\n\n   After a brief pause, you should get a JSON response that looks\n   something like:\n\n   .. raw:: html\n\n      <pre>\n      {'status': 'new', 'invoiceTime': 1393950046292, 'currentTime': 1393950046520, 'url': 'https://bitpay.com/invoice?id=aASDF2jh4ashkASDfh234', 'price': 1, 'btcPrice': '1.0000', 'currency': 'BTC', 'posData': '{\"posData\": \"fish\", \"hash\": \"ASDfkjha452345ASDFaaskjhasdlfkflkajsdf\"}', 'expirationTime': 1393950946292, 'id': 'aASDF2jh4ashkASDfh234'}\n      </pre>\n\nChange Log\n----------\n\nVersion 1.1 - Added new HTTP header for version tracking\n\nVersion 1 - Initial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitpay/python-client", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "bitpay-client", "package_url": "https://pypi.org/project/bitpay-client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bitpay-client/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bitpay/python-client"}, "release_url": "https://pypi.org/project/bitpay-client/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Python client for the BitPay payment web API distributed via PyPi with object-orientated interface", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            New usage: from bitpay_client import BitPay.API<br>\u00a92014 BITPAY, INC.<br><br>Permission is hereby granted to any person obtaining a copy of this<br>software and associated documentation for use and/or modification in<br>association with the bitpay.com service.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS<br>OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF<br>MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.<br>IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY<br>CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,<br>TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE<br>SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<br><br>Bitcoin Python payment library using the bitpay.com service.<br><br>Installation<br>------------<br><br>Varies depending on what python webserver framework you are using<br>(SimpleHTTPServer, Flask, Bottle, Django, etc.). Most of the calls will<br>run as-is from a script, but bpVerifyNotification will require updating<br>depending on your framework. You can integrate these functions into your<br>custom shopping cart implementation.<br><br>Configuration<br>-------------<br><br>Note: Python 2.7 and its built in libraries are required for use of this<br>code library.<br><br>1. Create an API key at bitpay.com by clicking My Account &gt; API Access<br>   Keys &gt; Add New API Key.<br>2. In the bp\\_options.py file, configure the options specific to your<br>   implementation.<br><br>Usage<br>-----<br><br>1. In your shopping cart code, call bpCreateInvoice() with the<br>   appropriate orderID, price, posData and options.<br>2. The library will attempt to POST the new invoice information via curl<br>   to the BitPay network. If successful, you will receive an invoice in<br>   the return response. Any errors in this process will return an array<br>   with a single element: 'error' and the exception msg.<br>3. You may use the bpLog function manually to log any information you<br>   would like to track or automatically by setting the useLogging option<br>   to true in the bp\\_options file. The log file could potentially get<br>   very large, depending on usage, so monitor closely or only use during<br>   debugging.<br>4. Responses from the BitPay network are JSON. You can use the new<br>   decodeResponse() function to convert these to an associative array,<br>   if needed.<br><br>Troubleshooting<br>---------------<br><br>The official BitPay API documentation should always be your first<br>reference for development: https://bitpay.com/downloads/bitpayApi.pdf<br><br>1. Verify that your \"notificationURL\" for the invoice is \"https://\"<br>   (not\u00a0\"http://\")<br>2. Ensure a valid SSL certificate is installed on your server. Also<br>   ensure your root CA cert is updated. If your CA cert is not current,<br>   you will see curl SSL verification errors.<br>3. Verify that your callback handler at the \"notificationURL\" is<br>   properly receiving\u00a0POSTs. You can verify this by POSTing your own<br>   messages to the server from a tool like Chrome Postman.<br>4. Verify that the POST data received is properly parsed and that the<br>   logic that updates the order status on the merchants web server is<br>   correct.<br>5. Verify that the merchants web server is not blocking POSTs from<br>   servers it may not recognize. Double check this on the firewall as<br>   well, if one is being used.<br>6. Use the logging functionality to log errors during development. If<br>   you contact BitPay support, they will ask to see the log file to help<br>   diagnose any problems.<br>7. Check the version of this Python library agains the official<br>   repository to ensure you are using the latest version. Your issue<br>   might have been addressed in a newer version of the library.<br>8. If all else fails, send an email describing your issue *in detail* to<br>   support@bitpay.com<br>9. To manually test the library, update the options file with your API<br>   key and do the following:<br><br>   .. raw:: html<br><br>      &lt;pre&gt;<br>      $ python<br>      &gt;&gt;&gt; import bp_lib<br>      &gt;&gt;&gt; bp_lib.bpCreateInvoice(123, 1, 'fish')<br>      &lt;/pre&gt;<br><br>   After a brief pause, you should get a JSON response that looks<br>   something like:<br><br>   .. raw:: html<br><br>      &lt;pre&gt;<br>      {'status': 'new', 'invoiceTime': 1393950046292, 'currentTime': 1393950046520, 'url': 'https://bitpay.com/invoice?id=aASDF2jh4ashkASDfh234', 'price': 1, 'btcPrice': '1.0000', 'currency': 'BTC', 'posData': '{\"posData\": \"fish\", \"hash\": \"ASDfkjha452345ASDFaaskjhasdlfkflkajsdf\"}', 'expirationTime': 1393950946292, 'id': 'aASDF2jh4ashkASDfh234'}<br>      &lt;/pre&gt;<br><br>Change Log<br>----------<br><br>Version 1.1 - Added new HTTP header for version tracking<br><br>Version 1 - Initial version\n          </div>"}, "last_serial": 1144360, "releases": {"0.1.0": [{"comment_text": "built for Linux-3.8.0-42-generic-x86_64-with-glibc2.7", "digests": {"md5": "81cb9c09053b1aaecc98aace29e35dc3", "sha256": "e1b1c87188aa031b69129248d8181da94982bac13c6a93336aa8205cac8e5838"}, "downloads": -1, "filename": "bitpay-client-0.1.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "81cb9c09053b1aaecc98aace29e35dc3", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 8473, "upload_time": "2014-07-01T15:12:50", "upload_time_iso_8601": "2014-07-01T15:12:50.136099Z", "url": "https://files.pythonhosted.org/packages/df/1a/7fe56d462317422a881aeaddffe543cfca9757da45c89eba1dc450eb794b/bitpay-client-0.1.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "3defbeafcb914f6e602dc922c38ce6b2", "sha256": "96cc742d34dd932dc10e83687580343501629d6b5b1bf2d42cb13641f7278f02"}, "downloads": -1, "filename": "bitpay-client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3defbeafcb914f6e602dc922c38ce6b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6303, "upload_time": "2014-07-01T15:12:57", "upload_time_iso_8601": "2014-07-01T15:12:57.098248Z", "url": "https://files.pythonhosted.org/packages/c0/fd/f9582568d47b8d0cad75b72b627ecb34a22301244b8dedad0b2032ad7496/bitpay-client-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "built for Linux-3.8.0-42-generic-x86_64-with-glibc2.7", "digests": {"md5": "dd6175751fd4ad4447e790e734d0fa9e", "sha256": "9aaaf12e7dd92882fac64cc8ae5740986e2dc2f059e2e85ba05b5bc57d2c9f96"}, "downloads": -1, "filename": "bitpay-client-0.1.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "dd6175751fd4ad4447e790e734d0fa9e", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 10970, "upload_time": "2014-07-02T10:24:20", "upload_time_iso_8601": "2014-07-02T10:24:20.924950Z", "url": "https://files.pythonhosted.org/packages/1c/90/e801606a2aa8dcc39d3b9bfed9e084b64daca103b6f32e4226c78d87beee/bitpay-client-0.1.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cacfc6827fd0a1258aefedcb4bef560", "sha256": "81b704a18f80c3e6656d86ec46e791af031d8de115e08a94e78d14ac75d768eb"}, "downloads": -1, "filename": "bitpay-client-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7cacfc6827fd0a1258aefedcb4bef560", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7442, "upload_time": "2014-07-02T10:24:17", "upload_time_iso_8601": "2014-07-02T10:24:17.233429Z", "url": "https://files.pythonhosted.org/packages/93/0f/52b3f9c5316cd8e19a674532b6405cdbc621db116097a9affe0c75b504fa/bitpay-client-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Linux-3.8.0-42-generic-x86_64-with-glibc2.7", "digests": {"md5": "dd6175751fd4ad4447e790e734d0fa9e", "sha256": "9aaaf12e7dd92882fac64cc8ae5740986e2dc2f059e2e85ba05b5bc57d2c9f96"}, "downloads": -1, "filename": "bitpay-client-0.1.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "dd6175751fd4ad4447e790e734d0fa9e", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 10970, "upload_time": "2014-07-02T10:24:20", "upload_time_iso_8601": "2014-07-02T10:24:20.924950Z", "url": "https://files.pythonhosted.org/packages/1c/90/e801606a2aa8dcc39d3b9bfed9e084b64daca103b6f32e4226c78d87beee/bitpay-client-0.1.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cacfc6827fd0a1258aefedcb4bef560", "sha256": "81b704a18f80c3e6656d86ec46e791af031d8de115e08a94e78d14ac75d768eb"}, "downloads": -1, "filename": "bitpay-client-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7cacfc6827fd0a1258aefedcb4bef560", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7442, "upload_time": "2014-07-02T10:24:17", "upload_time_iso_8601": "2014-07-02T10:24:17.233429Z", "url": "https://files.pythonhosted.org/packages/93/0f/52b3f9c5316cd8e19a674532b6405cdbc621db116097a9affe0c75b504fa/bitpay-client-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:15 2020"}