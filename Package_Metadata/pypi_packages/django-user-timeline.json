{"info": {"author": "Hugo Rodger-Brown", "author_email": "hugo@yunojuno.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django User Timeline\n====================\n\nDjango app for displaying a timeline of events.\n\nBackground\n----------\n\nThis is a very simple Django app that stores 'events' against a User object,\nproviding a timeline of user events. It's very open, the events don't relate\nto anything concrete (this isn't a model auditing app, although there is an\noptional ``GenericForeignKey`` on the ``Event`` model that you _can_ use if you\nwish) - it's just a list of timestamped objects that can be used to track\nuser interactions. Each event in the timeline has a ``category`` and a\n``message`` field, along with a JSON field that can be used to store\nunstructured additional data. An event can optionally be related to another\nmodel via a generic foreign key.\n\nThe rendering of events is up to you - there is no default.\n\nInstallation\n------------\n\nThe project is available through PyPI as ``django-user-timeline``:\n\n.. code::\n\n    $ pip install django-user-timeline\n\nAnd the main package itself is just ``timeline``:\n\n.. code:: python\n\n    >>> from timeline import models, views, urls, admin\n\nUsage\n-----\n\nWhenever something interesting happens, add an event. That's it.\n\n.. code:: python\n\n    >>> from .models import Product, add_to_basket\n    >>> from timeline.models import TimelineEvent\n    >>> def add_product(request, product_id):\n    ...     \"\"\"View function to add product to user's basket.\"\"\"\n    ...     product = get_object_or_404(Product, id=id)\n    ...     add_to_basket(request.user, product)\n    ...     event = TimelineEvent.objects.create_event(\n    ...         user=request.user,\n    ...         category='add_to_basket',\n    ...         message='You added %s to your basket' % product,\n    ...         content_object=product,\n    ...         context = {\n    ...             \"product_id\": product_id,\n    ...             \"price_paid\": 10.00,\n    ...             \"on_sale\": False\n    ...         }\n    ...     )\n    ...     return HttpResponse(\"...\")\n\nHow you use the timeline is up to you - display it on the site, use\nit for reporting, etc. A user's timeline is available directly via\nthe ``related_name`` property of ``timeline``:\n\n.. code:: python\n\n    >>> from django.contrib.auth.models import User\n    >>> from timeline.models import TimelineEvent\n    >>> user = User.objects.get(id=1)\n    >>> assert user.timeline.all() == TimelineEvent.objects.filter(user=user)\n\nTests\n-----\n\nTests are run using ``tox``, and are run on commit pushes through Travis-CI.\n\nContributing\n------------\n\nStandard GH rules apply: clone the repo to your own account, create a branch, make sure you update the tests, and submit a pull request.\n\nStatus\n------\n\nThis is currently a placeholder for an application that is in development (hence 0.0.0).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hugorodgerbrown/django-user-timeline", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-user-timeline", "package_url": "https://pypi.org/project/django-user-timeline/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-user-timeline/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hugorodgerbrown/django-user-timeline"}, "release_url": "https://pypi.org/project/django-user-timeline/0.0.0/", "requires_dist": null, "requires_python": null, "summary": "Django app for managing a timeline of events.", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django app for displaying a timeline of events.</p>\n<div id=\"background\">\n<h2>Background</h2>\n<p>This is a very simple Django app that stores \u2018events\u2019 against a User object,\nproviding a timeline of user events. It\u2019s very open, the events don\u2019t relate\nto anything concrete (this isn\u2019t a model auditing app, although there is an\noptional <tt>GenericForeignKey</tt> on the <tt>Event</tt> model that you _can_ use if you\nwish) - it\u2019s just a list of timestamped objects that can be used to track\nuser interactions. Each event in the timeline has a <tt>category</tt> and a\n<tt>message</tt> field, along with a JSON field that can be used to store\nunstructured additional data. An event can optionally be related to another\nmodel via a generic foreign key.</p>\n<p>The rendering of events is up to you - there is no default.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The project is available through PyPI as <tt><span class=\"pre\">django-user-timeline</span></tt>:</p>\n<pre>$ pip install django-user-timeline\n</pre>\n<p>And the main package itself is just <tt>timeline</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timeline</span> <span class=\"kn\">import</span> <span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">,</span> <span class=\"n\">urls</span><span class=\"p\">,</span> <span class=\"n\">admin</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Whenever something interesting happens, add an event. That\u2019s it.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Product</span><span class=\"p\">,</span> <span class=\"n\">add_to_basket</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timeline.models</span> <span class=\"kn\">import</span> <span class=\"n\">TimelineEvent</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">add_product</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">product_id</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"s2\">\"\"\"View function to add product to user's basket.\"\"\"</span>\n<span class=\"o\">...</span>     <span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">(</span><span class=\"n\">Product</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">add_to_basket</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">product</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">TimelineEvent</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create_event</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>         <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'add_to_basket'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'You added </span><span class=\"si\">%s</span><span class=\"s1\"> to your basket'</span> <span class=\"o\">%</span> <span class=\"n\">product</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">content_object</span><span class=\"o\">=</span><span class=\"n\">product</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>             <span class=\"s2\">\"product_id\"</span><span class=\"p\">:</span> <span class=\"n\">product_id</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>             <span class=\"s2\">\"price_paid\"</span><span class=\"p\">:</span> <span class=\"mf\">10.00</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>             <span class=\"s2\">\"on_sale\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"o\">...</span>         <span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s2\">\"...\"</span><span class=\"p\">)</span>\n</pre>\n<p>How you use the timeline is up to you - display it on the site, use\nit for reporting, etc. A user\u2019s timeline is available directly via\nthe <tt>related_name</tt> property of <tt>timeline</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timeline.models</span> <span class=\"kn\">import</span> <span class=\"n\">TimelineEvent</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">timeline</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">TimelineEvent</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Tests are run using <tt>tox</tt>, and are run on commit pushes through Travis-CI.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Standard GH rules apply: clone the repo to your own account, create a branch, make sure you update the tests, and submit a pull request.</p>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>This is currently a placeholder for an application that is in development (hence 0.0.0).</p>\n</div>\n\n          </div>"}, "last_serial": 2430545, "releases": {"0.0.0": []}, "urls": [], "timestamp": "Fri May  8 00:52:07 2020"}