{"info": {"author": "Simon Ilincev", "author_email": "trilogicworlds@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![Python application](https://github.com/Destaq/chess_graph/workflows/Python%20application/badge.svg)\n# The Chess Opening Analyzer\n\n<p align=\"center\">\n  <img width = \"574\" height = \"400\" src = \"https://github.com/Destaq/opening_analysis/raw/master/images/main_image.png\">\n </p>\n\n## About\nA program that will produce a graphical sunburst chart of chess openings from the PGN that is provided to it.\n\nYou can easily run this with the pip module in one function by simply specifying the path to the PGN database that you would like to have analyzed.\n\nThis package can customize the multi=level pie chart in many ways. It can shade segments based on win percentage, you can click to zoom in, openings are highlighted, and so much more. It's the perfect learning tool for anyone interested in chess or wishing to improve their opening skills!\n\n### Features\n- Make graph of games to **any depth**\n- Upload a **custom database** and see how *your* chart looks like\n- **Hover** to see metadata such as **game count and percentage of parent**\n- Easily **find openings** with simple hover tooltip identification\n- **Click to zoom** in on a slice and expand it, making it easy to magnify any slice of the pie chart\n- **Downloadable files**: you can download the chart as an interactive HTML, or as a static PNG/JPEG/SVG/WEBP image with just a few clicks\n- **Win Ratio Shading** means that you will never be in doubt as to what next move is statistically best\n- **Hide small slices** and prevent them from showing up in the graph!\n- **Custom branching** to analyze database from **any position**\n- **Find your player and color** by selecting games from someone based on their color (white or black) and name\n\n### Prerequisites\n- Runs in Python 3, must have Python 3 installed\n- Requires Plotly and pgnparser\n\nYou can install Plotly and pgnparser using PyPi, as long as you are an admin user on your device. To do so, simply type `pip install plotly` and `pip install pgnparser` into your terminal.\n\n### Using via pip install\n1. `pip install chess-graph`\n2. Open terminal/interpreter.\n3. `import chess_graph`\n4. `chess_graph.graph(database, depth=5, shade = True, fragmentation_percentage=0.0032, should_defragment=False, custom_branching=False, should_download = False, download_format = 'png', download_name = 'fig1')`\n  - Note that the path to the pgn file (the database) must be relative to the current directory python is running in. For example, if you have the pgn downloaded on your Desktop, you could easily solve this issue by navigating to Desktop within terminal (cd Desktop). From there, you can replace the database argument with the simple filename (assuming it is in Desktop). If this is confusing, just type in the full path.\n\n#### A Deeper Look at the Function\nThe `graph()` function takes 11 arguments, and 10 of them are default-set. We'll explore each of them so that you know how to properly use this package to its full potential.\n\n- The `database` argument: This argument must *always* be inputted. It is the path to the file. Let's look at two examples.\n\n  1. `chess_graph.graph('Users/student/Desktop/pgns/mir_khan.pgn')`. Here, we are running the chess_graph on a pgn from Mir Sultan Khan. We are showing the program what file to read this by providing the full path to the file.\n\n  2. In the example above, you can see that the file is in the `pgns` folder in Desktop. So, we can open our terminal, and then type `cd Desktop`, `cd pgns` to go the folder that has this file. Because we are now in that directory, we can type: `chess_graph.graph('mir_khan.pgn')` as it is in the current directory. If you are unsure, stick with the full file path.\n\n- The `depth` argument. This is set to 5 by default, and shows the number of rings that the pie chart will have. You can change this by typing `chess_graph.graph(*path to file*, depth = 7)`. Make sure that you type `depth = `, and not just the integer depth.\n\n- The `shade` argument. This is set to True by default. It is whether you should shade the segments or not based on W/B win percentage. If you set it to False, (`chess_graph.graph(*path to file*, shade = False)`), then a vividly colored chart will be produced instead.\n\n- The `fragmentation_percentage` argument. Set to 0.0032 by default. You can 'defragment' the graph by hiding very small slices. This argument shows how small the slices have to be (relative to the total number of games, e.g. 2 games/100 games total = 2%) to be deleted. In this example, the percentage is 100*0.0032 = 0.32%. Example: `chess_graph.graph(*path to file*, fragmentation_percentage = 0.05)` - 5% or smaller will be deleted.\n\n- The `should_defragment` argument. Set to False by default. Setting it to True will allow the graph to hide the slices, keeping it False will show all slices. Even if you change fragmentation_percentage, if this isn't set to True, nothing will change. Example: `chess_graph.graph(*path to file*, fragmentation_percentage = 0.05, should_defragment = True)`\n\n- The `custom branching` argument. Set to False by default. You can analyze a database from any position if set to True. Example: `chess_graph.graph(*path to file*, custom_branching = True)`. You will be asked for an input for the custom branching. For the sake of this example, let's say you want to analyze only positions from e4 e5. So, type e4 e5. The graph will then show positions only from e4 e5.\n\n- The `should_download` argument. Set to False be default. You can download the figures in five different formats (see more below). Make sure you have the packages installed before downloading. You can set this to True if you would like to download the figure.\n\n- The `download_format` argument. Set to the string 'png' by default. Change it to the string of the file type you want the download to be in. `chess_graph.graph(..., download_format = 'jpeg')`\n\n- The `download_name` argument. The name of the figure that will be downloaded. Set to be fig1 by default, meaning that files downloaded will be downloaded as fig1.png. See above.\n\n- The `color` argument. This is set to both by default. Valid inputs are 'both', 'white', 'w', 'black' and 'b'. If you change the color argument from both, then the program will only read games that are from the color you chose. Note that you need to also change the player name with the `name` argument if you do so. See below.\n\n- The `name` argument. This argument will allow the program to pick games from the file it is given, but only games from a certain player. There is an example below:\nSet the color to 'black' or 'white' to pick only games where the player (the name) played as black or white. (i.e. `chess_graph.graph('pgns/Carlsen.pgn', color = 'white', name = 'Magnus Carlsen')` will pick all the games where Carlsen played as white.)\n\n**Remember to include all variations and parts of a player's name! For example, the player Viktor Korchnoi has his last name spelled as Kortschnoj as well. In that case, for the 'name' field, type: Viktor Korchnoi Kortschnoj**\n\n### Downloading\nDownloading *is* an option, although you need to make sure you have the proper libraries installed.\n\nCurrently, you can uncomment the download interactive HTML file without anything else to download. If you do so, an HTML file of the graph will be saved to your device, which you can open with your browser.\n\nYou can also download the file as: SVG, PDF, JPEG, PNG, and WebP.\n\nHowever, if you want to download in *these* formats you need the following installed.\n\n`npm install -g electron@1.8.4 orca`\n\n`pip install psutil requests`\n\n`pip install psutil`\n\n## Examples\n*All examples are those of Magnus Carlsen's OTB tournament games*\n### Simple Pie Chart\n<p align=\"center\">\n  <img width=\"700\" height=\"450\" src=\"https://github.com/Destaq/opening_analysis/raw/master/images/random.png\">\n</p>\n\n### Hover Functionality | Show Percentage of Parent + Game Count\n<p align=\"center\">\n  <img width = \"522\" height = \"117\" src = \"https://github.com/Destaq/opening_analysis/raw/master/images/hovering.png\">\n </p>\n\n### Click to Zoom\n<p align=\"center\">\n  <img width = \"528\" height = \"457\" src = \"https://github.com/Destaq/opening_analysis/raw/master/images/zoom.png\">\n </p>\n\n## Extra Info\nI based this chart loosely off of a post that I read on ebemunk's blog - you can find the link here: https://blog.ebemunk.com/a-visual-look-at-2-million-chess-games/. However, that project was written in Java and it didn't have everything that I wanted, such as showing all the games, zooming in, etc.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Destaq/chess_graph", "keywords": "", "license": "'MIT'", "maintainer": "", "maintainer_email": "", "name": "chess-graph", "package_url": "https://pypi.org/project/chess-graph/", "platform": "", "project_url": "https://pypi.org/project/chess-graph/", "project_urls": {"Homepage": "https://github.com/Destaq/chess_graph"}, "release_url": "https://pypi.org/project/chess-graph/1.7.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package that can create an interactive multi-level, shaded, piechart visualization of chess games.", "version": "1.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Python application\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/452b2fbfa55e2ff848f35955fbfab4b84653213d/68747470733a2f2f6769746875622e636f6d2f4465737461712f63686573735f67726170682f776f726b666c6f77732f507974686f6e2532306170706c69636174696f6e2f62616467652e737667\"></p>\n<h1>The Chess Opening Analyzer</h1>\n<p align=\"center\">\n  <img height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03cc27c397097380bff6a469216bdb434c918d33/68747470733a2f2f6769746875622e636f6d2f4465737461712f6f70656e696e675f616e616c797369732f7261772f6d61737465722f696d616765732f6d61696e5f696d6167652e706e67\" width=\"574\">\n </p>\n<h2>About</h2>\n<p>A program that will produce a graphical sunburst chart of chess openings from the PGN that is provided to it.</p>\n<p>You can easily run this with the pip module in one function by simply specifying the path to the PGN database that you would like to have analyzed.</p>\n<p>This package can customize the multi=level pie chart in many ways. It can shade segments based on win percentage, you can click to zoom in, openings are highlighted, and so much more. It's the perfect learning tool for anyone interested in chess or wishing to improve their opening skills!</p>\n<h3>Features</h3>\n<ul>\n<li>Make graph of games to <strong>any depth</strong></li>\n<li>Upload a <strong>custom database</strong> and see how <em>your</em> chart looks like</li>\n<li><strong>Hover</strong> to see metadata such as <strong>game count and percentage of parent</strong></li>\n<li>Easily <strong>find openings</strong> with simple hover tooltip identification</li>\n<li><strong>Click to zoom</strong> in on a slice and expand it, making it easy to magnify any slice of the pie chart</li>\n<li><strong>Downloadable files</strong>: you can download the chart as an interactive HTML, or as a static PNG/JPEG/SVG/WEBP image with just a few clicks</li>\n<li><strong>Win Ratio Shading</strong> means that you will never be in doubt as to what next move is statistically best</li>\n<li><strong>Hide small slices</strong> and prevent them from showing up in the graph!</li>\n<li><strong>Custom branching</strong> to analyze database from <strong>any position</strong></li>\n<li><strong>Find your player and color</strong> by selecting games from someone based on their color (white or black) and name</li>\n</ul>\n<h3>Prerequisites</h3>\n<ul>\n<li>Runs in Python 3, must have Python 3 installed</li>\n<li>Requires Plotly and pgnparser</li>\n</ul>\n<p>You can install Plotly and pgnparser using PyPi, as long as you are an admin user on your device. To do so, simply type <code>pip install plotly</code> and <code>pip install pgnparser</code> into your terminal.</p>\n<h3>Using via pip install</h3>\n<ol>\n<li><code>pip install chess-graph</code></li>\n<li>Open terminal/interpreter.</li>\n<li><code>import chess_graph</code></li>\n<li><code>chess_graph.graph(database, depth=5, shade = True, fragmentation_percentage=0.0032, should_defragment=False, custom_branching=False, should_download = False, download_format = 'png', download_name = 'fig1')</code></li>\n</ol>\n<ul>\n<li>Note that the path to the pgn file (the database) must be relative to the current directory python is running in. For example, if you have the pgn downloaded on your Desktop, you could easily solve this issue by navigating to Desktop within terminal (cd Desktop). From there, you can replace the database argument with the simple filename (assuming it is in Desktop). If this is confusing, just type in the full path.</li>\n</ul>\n<h4>A Deeper Look at the Function</h4>\n<p>The <code>graph()</code> function takes 11 arguments, and 10 of them are default-set. We'll explore each of them so that you know how to properly use this package to its full potential.</p>\n<ul>\n<li>\n<p>The <code>database</code> argument: This argument must <em>always</em> be inputted. It is the path to the file. Let's look at two examples.</p>\n<ol>\n<li>\n<p><code>chess_graph.graph('Users/student/Desktop/pgns/mir_khan.pgn')</code>. Here, we are running the chess_graph on a pgn from Mir Sultan Khan. We are showing the program what file to read this by providing the full path to the file.</p>\n</li>\n<li>\n<p>In the example above, you can see that the file is in the <code>pgns</code> folder in Desktop. So, we can open our terminal, and then type <code>cd Desktop</code>, <code>cd pgns</code> to go the folder that has this file. Because we are now in that directory, we can type: <code>chess_graph.graph('mir_khan.pgn')</code> as it is in the current directory. If you are unsure, stick with the full file path.</p>\n</li>\n</ol>\n</li>\n<li>\n<p>The <code>depth</code> argument. This is set to 5 by default, and shows the number of rings that the pie chart will have. You can change this by typing <code>chess_graph.graph(*path to file*, depth = 7)</code>. Make sure that you type <code>depth =</code>, and not just the integer depth.</p>\n</li>\n<li>\n<p>The <code>shade</code> argument. This is set to True by default. It is whether you should shade the segments or not based on W/B win percentage. If you set it to False, (<code>chess_graph.graph(*path to file*, shade = False)</code>), then a vividly colored chart will be produced instead.</p>\n</li>\n<li>\n<p>The <code>fragmentation_percentage</code> argument. Set to 0.0032 by default. You can 'defragment' the graph by hiding very small slices. This argument shows how small the slices have to be (relative to the total number of games, e.g. 2 games/100 games total = 2%) to be deleted. In this example, the percentage is 100*0.0032 = 0.32%. Example: <code>chess_graph.graph(*path to file*, fragmentation_percentage = 0.05)</code> - 5% or smaller will be deleted.</p>\n</li>\n<li>\n<p>The <code>should_defragment</code> argument. Set to False by default. Setting it to True will allow the graph to hide the slices, keeping it False will show all slices. Even if you change fragmentation_percentage, if this isn't set to True, nothing will change. Example: <code>chess_graph.graph(*path to file*, fragmentation_percentage = 0.05, should_defragment = True)</code></p>\n</li>\n<li>\n<p>The <code>custom branching</code> argument. Set to False by default. You can analyze a database from any position if set to True. Example: <code>chess_graph.graph(*path to file*, custom_branching = True)</code>. You will be asked for an input for the custom branching. For the sake of this example, let's say you want to analyze only positions from e4 e5. So, type e4 e5. The graph will then show positions only from e4 e5.</p>\n</li>\n<li>\n<p>The <code>should_download</code> argument. Set to False be default. You can download the figures in five different formats (see more below). Make sure you have the packages installed before downloading. You can set this to True if you would like to download the figure.</p>\n</li>\n<li>\n<p>The <code>download_format</code> argument. Set to the string 'png' by default. Change it to the string of the file type you want the download to be in. <code>chess_graph.graph(..., download_format = 'jpeg')</code></p>\n</li>\n<li>\n<p>The <code>download_name</code> argument. The name of the figure that will be downloaded. Set to be fig1 by default, meaning that files downloaded will be downloaded as fig1.png. See above.</p>\n</li>\n<li>\n<p>The <code>color</code> argument. This is set to both by default. Valid inputs are 'both', 'white', 'w', 'black' and 'b'. If you change the color argument from both, then the program will only read games that are from the color you chose. Note that you need to also change the player name with the <code>name</code> argument if you do so. See below.</p>\n</li>\n<li>\n<p>The <code>name</code> argument. This argument will allow the program to pick games from the file it is given, but only games from a certain player. There is an example below:\nSet the color to 'black' or 'white' to pick only games where the player (the name) played as black or white. (i.e. <code>chess_graph.graph('pgns/Carlsen.pgn', color = 'white', name = 'Magnus Carlsen')</code> will pick all the games where Carlsen played as white.)</p>\n</li>\n</ul>\n<p><strong>Remember to include all variations and parts of a player's name! For example, the player Viktor Korchnoi has his last name spelled as Kortschnoj as well. In that case, for the 'name' field, type: Viktor Korchnoi Kortschnoj</strong></p>\n<h3>Downloading</h3>\n<p>Downloading <em>is</em> an option, although you need to make sure you have the proper libraries installed.</p>\n<p>Currently, you can uncomment the download interactive HTML file without anything else to download. If you do so, an HTML file of the graph will be saved to your device, which you can open with your browser.</p>\n<p>You can also download the file as: SVG, PDF, JPEG, PNG, and WebP.</p>\n<p>However, if you want to download in <em>these</em> formats you need the following installed.</p>\n<p><code>npm install -g electron@1.8.4 orca</code></p>\n<p><code>pip install psutil requests</code></p>\n<p><code>pip install psutil</code></p>\n<h2>Examples</h2>\n<p><em>All examples are those of Magnus Carlsen's OTB tournament games</em></p>\n<h3>Simple Pie Chart</h3>\n<p align=\"center\">\n  <img height=\"450\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13906eab5853aea222f42c3f2cea6b9edf482704/68747470733a2f2f6769746875622e636f6d2f4465737461712f6f70656e696e675f616e616c797369732f7261772f6d61737465722f696d616765732f72616e646f6d2e706e67\" width=\"700\">\n</p>\n<h3>Hover Functionality | Show Percentage of Parent + Game Count</h3>\n<p align=\"center\">\n  <img height=\"117\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b32ec2a4dbf1d2230c89edbfb22ec746f6d8410e/68747470733a2f2f6769746875622e636f6d2f4465737461712f6f70656e696e675f616e616c797369732f7261772f6d61737465722f696d616765732f686f766572696e672e706e67\" width=\"522\">\n </p>\n<h3>Click to Zoom</h3>\n<p align=\"center\">\n  <img height=\"457\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a1c9bb255dd666438c3b6a6e7a365d28f4b0f88/68747470733a2f2f6769746875622e636f6d2f4465737461712f6f70656e696e675f616e616c797369732f7261772f6d61737465722f696d616765732f7a6f6f6d2e706e67\" width=\"528\">\n </p>\n<h2>Extra Info</h2>\n<p>I based this chart loosely off of a post that I read on ebemunk's blog - you can find the link here: <a href=\"https://blog.ebemunk.com/a-visual-look-at-2-million-chess-games/\" rel=\"nofollow\">https://blog.ebemunk.com/a-visual-look-at-2-million-chess-games/</a>. However, that project was written in Java and it didn't have everything that I wanted, such as showing all the games, zooming in, etc.</p>\n\n          </div>"}, "last_serial": 7181195, "releases": {"1.4.0": [{"comment_text": "", "digests": {"md5": "90d361ede427ffaa6400295fe56db13b", "sha256": "12876ef5972d531a40c9c07829c328f680c99e609baa2e22a6794cf2e4204a20"}, "downloads": -1, "filename": "chess_graph-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "90d361ede427ffaa6400295fe56db13b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52390, "upload_time": "2020-05-02T19:56:38", "upload_time_iso_8601": "2020-05-02T19:56:38.222197Z", "url": "https://files.pythonhosted.org/packages/f4/83/62243085d4345dae62f9c791f5663e749cfdca77e377ab9d443bf0c389cd/chess_graph-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1bd561e13ad11a6ea8124cb75429c19", "sha256": "745b7640586577e58e7919d3c76675532b43264297ccbdd7128bf34debc2e9e1"}, "downloads": -1, "filename": "chess-graph-1.4.0.tar.gz", "has_sig": false, "md5_digest": "c1bd561e13ad11a6ea8124cb75429c19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47776, "upload_time": "2020-05-02T19:56:39", "upload_time_iso_8601": "2020-05-02T19:56:39.657410Z", "url": "https://files.pythonhosted.org/packages/c7/0b/eb5837e0c2c55175f0ea721978ad1d9077accf9eefc0840a0f547948c774/chess-graph-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "31c1b37fbe254d667a628f981be71852", "sha256": "ab28a4b3e925555c3ab9158d31670ffc168604179fe6a2dbde2ff09773a037d5"}, "downloads": -1, "filename": "chess_graph-1.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31c1b37fbe254d667a628f981be71852", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52409, "upload_time": "2020-05-03T06:14:09", "upload_time_iso_8601": "2020-05-03T06:14:09.029736Z", "url": "https://files.pythonhosted.org/packages/f6/6b/efadd789f9363e14cdd576f03b6083fcb1dc82296cf2ad5507a623d7db60/chess_graph-1.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34f15278aeb7f3467f3d73a7af157fd", "sha256": "fe9e7e0bfd05bdb2828154c02d45718a442ec0795339b2ed01af4e107ba45eb9"}, "downloads": -1, "filename": "chess-graph-1.4.1.tar.gz", "has_sig": false, "md5_digest": "a34f15278aeb7f3467f3d73a7af157fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47778, "upload_time": "2020-05-03T06:14:10", "upload_time_iso_8601": "2020-05-03T06:14:10.545752Z", "url": "https://files.pythonhosted.org/packages/7e/06/44d3339a08a765d0984cd049ebe61822bbfe29f5e4a43575abf49fa757b0/chess-graph-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "d03fc4849e72c738018d3edbc808d490", "sha256": "25d74c632e5f7721f228d8dee685158a68920615b9a9040bbf836049480eda22"}, "downloads": -1, "filename": "chess_graph-1.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d03fc4849e72c738018d3edbc808d490", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52414, "upload_time": "2020-05-03T06:19:04", "upload_time_iso_8601": "2020-05-03T06:19:04.063298Z", "url": "https://files.pythonhosted.org/packages/b9/0b/dcbbbe0a056430f36f87d2768304c9eff653b99ea732a06e08ae98c3289c/chess_graph-1.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffb8c26b388d3d86e40a143860117d83", "sha256": "4054f666145845b4c4506853a2b32424f485af350f2ea5c145fed00da2455150"}, "downloads": -1, "filename": "chess-graph-1.4.2.tar.gz", "has_sig": false, "md5_digest": "ffb8c26b388d3d86e40a143860117d83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47785, "upload_time": "2020-05-03T06:19:06", "upload_time_iso_8601": "2020-05-03T06:19:06.141928Z", "url": "https://files.pythonhosted.org/packages/4d/43/d179675e579eb672c6ed61b382799239ad8345bb955ed0ef0dc27e5946bd/chess-graph-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "98d63f54af9eadb72b7649e35b83bee1", "sha256": "ce8496072a560cedda37cd4bc8b99f5772a181efb5b47ca3ad70bbb0b59952e7"}, "downloads": -1, "filename": "chess_graph-1.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "98d63f54af9eadb72b7649e35b83bee1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52234, "upload_time": "2020-05-03T10:28:41", "upload_time_iso_8601": "2020-05-03T10:28:41.380558Z", "url": "https://files.pythonhosted.org/packages/88/e5/64f07486ffa0e2ec8fda95758b5bfa46feef253ba06274ea4561609f3b4f/chess_graph-1.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddc5de25f31aaf1c43012cfebdafbe19", "sha256": "b409cc083c9c7223fea8b48ba80ea400def2d6ab57deeb8d2f301b7143370d3f"}, "downloads": -1, "filename": "chess-graph-1.4.3.tar.gz", "has_sig": false, "md5_digest": "ddc5de25f31aaf1c43012cfebdafbe19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47444, "upload_time": "2020-05-03T10:28:42", "upload_time_iso_8601": "2020-05-03T10:28:42.713086Z", "url": "https://files.pythonhosted.org/packages/8c/51/4bc866c3bb6c0841e0b72e5cbfa72d7eefa6501258f7752d82932f8e2628/chess-graph-1.4.3.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "86c45602bb42280b5932fd6e2bdfb25b", "sha256": "1f9408615763068da0937ff1e03b624c137f68e7b9bd94c45811ca8b6bceb18d"}, "downloads": -1, "filename": "chess_graph-1.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "86c45602bb42280b5932fd6e2bdfb25b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52195, "upload_time": "2020-05-03T10:37:16", "upload_time_iso_8601": "2020-05-03T10:37:16.888167Z", "url": "https://files.pythonhosted.org/packages/c3/6c/001fa537401adb75adf70b4333883d4020169f71a4baea1ad8fbb3e43c34/chess_graph-1.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a2fa76ab1f1d50a42b58cf8286acfea", "sha256": "87735a45ae3835093cd7f2a29c3872250bddf9510eac414e02a444dfee97c4b5"}, "downloads": -1, "filename": "chess-graph-1.4.4.tar.gz", "has_sig": false, "md5_digest": "9a2fa76ab1f1d50a42b58cf8286acfea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47424, "upload_time": "2020-05-03T10:37:18", "upload_time_iso_8601": "2020-05-03T10:37:18.186217Z", "url": "https://files.pythonhosted.org/packages/74/4b/479213d16ee9adfbefbfaaf0005345d5e0744ca0346a717618bfa0fb3f2c/chess-graph-1.4.4.tar.gz", "yanked": false}], "1.4.5": [{"comment_text": "", "digests": {"md5": "f9724c3e855436af5a40f6d63b1f56ca", "sha256": "f659f979b462fdc72ad5668bcb1ae9b68549633e75f41c612ccea7fad3cf4a6f"}, "downloads": -1, "filename": "chess_graph-1.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f9724c3e855436af5a40f6d63b1f56ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53343, "upload_time": "2020-05-03T11:02:14", "upload_time_iso_8601": "2020-05-03T11:02:14.736362Z", "url": "https://files.pythonhosted.org/packages/f1/3f/4437aac25548f5b535d39b93b48bca916da423469df96e213848fd08f46b/chess_graph-1.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c967175939e7d623e197aa2de6d756a", "sha256": "bd0b8ca1e173b6577f7cb0f692007e13227942fb3d34a2b460d87658a29b7c6b"}, "downloads": -1, "filename": "chess-graph-1.4.5.tar.gz", "has_sig": false, "md5_digest": "0c967175939e7d623e197aa2de6d756a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49711, "upload_time": "2020-05-03T11:02:16", "upload_time_iso_8601": "2020-05-03T11:02:16.320152Z", "url": "https://files.pythonhosted.org/packages/bc/10/0eec040362f1314a246890b8cf68ba78926d74c57f840646435525958ff5/chess-graph-1.4.5.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "3c234e01cba1277e68580a522d4f9c2f", "sha256": "17ff34f9c343327681ea72738072a8cb471c62f8991d1d16957db613c269f0ba"}, "downloads": -1, "filename": "chess_graph-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3c234e01cba1277e68580a522d4f9c2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53332, "upload_time": "2020-05-03T13:25:50", "upload_time_iso_8601": "2020-05-03T13:25:50.022844Z", "url": "https://files.pythonhosted.org/packages/c2/d0/ba77db7c93ae7c35318e5bfaa2871599160a6c44f7baf41af3aa453e1df6/chess_graph-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b5b241fe53efbb50686d29a024119e5", "sha256": "5e16c1f9ed227dc05635e90c474c84e31286b0de85c2d5b3f1a81cadaad2b16d"}, "downloads": -1, "filename": "chess-graph-1.5.0.tar.gz", "has_sig": false, "md5_digest": "6b5b241fe53efbb50686d29a024119e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49672, "upload_time": "2020-05-03T13:25:51", "upload_time_iso_8601": "2020-05-03T13:25:51.711353Z", "url": "https://files.pythonhosted.org/packages/b1/bf/76fa50ed765b539b8cf7a847dfce1b30afbeb8100a441ad2b09d5738b3b9/chess-graph-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "af9f38f45e4f26bba6215ea0fbe3103f", "sha256": "16f3d9047da330977e1e22bae91c487836c4a69010d7312fefe986c82ba4e37a"}, "downloads": -1, "filename": "chess_graph-1.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "af9f38f45e4f26bba6215ea0fbe3103f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53327, "upload_time": "2020-05-03T13:50:03", "upload_time_iso_8601": "2020-05-03T13:50:03.199614Z", "url": "https://files.pythonhosted.org/packages/f7/0b/e08cd8f00439fc8798f21dcbce8c036930cd9802282060ddfa0f8a4c5836/chess_graph-1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e4b4573def1c10a00681214500118e8", "sha256": "49fb06c7e871b60cb3df4650daed84cb0ae67aafc9d49a04235ed376db39f3f7"}, "downloads": -1, "filename": "chess-graph-1.5.1.tar.gz", "has_sig": false, "md5_digest": "4e4b4573def1c10a00681214500118e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49669, "upload_time": "2020-05-03T13:50:04", "upload_time_iso_8601": "2020-05-03T13:50:04.657881Z", "url": "https://files.pythonhosted.org/packages/bf/c3/70d2d19daddc97a12e11b99060c6f046d95d641878acabf636feb0fec306/chess-graph-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "81c7b8fcb7f962502b7666e5dd345c9a", "sha256": "debc19cabaac728e944903d892d5b900ea2d3e541762226246d064e26c3decc5"}, "downloads": -1, "filename": "chess_graph-1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81c7b8fcb7f962502b7666e5dd345c9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53353, "upload_time": "2020-05-03T14:55:48", "upload_time_iso_8601": "2020-05-03T14:55:48.733211Z", "url": "https://files.pythonhosted.org/packages/21/41/c07282dca1ac7ff2d875f77703b7e571e5d4770acb4384dad71d594ee976/chess_graph-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "992bc2cc97fa7ff5c9df46519e9d5640", "sha256": "f82e04238f58402570ff76d98176f481865b0d94686b4655d6afa6540ad4f90f"}, "downloads": -1, "filename": "chess-graph-1.5.2.tar.gz", "has_sig": false, "md5_digest": "992bc2cc97fa7ff5c9df46519e9d5640", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49673, "upload_time": "2020-05-03T14:55:50", "upload_time_iso_8601": "2020-05-03T14:55:50.271396Z", "url": "https://files.pythonhosted.org/packages/1e/e8/4e80e7e3ec74e5491f243d525a52d36eba478bafa4c52ddd7f177a1683f8/chess-graph-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "70b8ebc623ff4f53bc1d829ea716d8c3", "sha256": "b49194c03f154652b0a7d4de0be57057d2a252895d1d6a3d6fe04f6e6ba5c90b"}, "downloads": -1, "filename": "chess_graph-1.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "70b8ebc623ff4f53bc1d829ea716d8c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53352, "upload_time": "2020-05-03T15:19:04", "upload_time_iso_8601": "2020-05-03T15:19:04.742726Z", "url": "https://files.pythonhosted.org/packages/e5/2b/f3515c5296930af67f5042421095b3f9c595308d93c244f365adf63b27cf/chess_graph-1.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed7bcf91587c4da50cb147855f879f7d", "sha256": "0730eab3372edc3acbd7856db2cb65b3a5559d328093f709de904b020634428a"}, "downloads": -1, "filename": "chess-graph-1.5.3.tar.gz", "has_sig": false, "md5_digest": "ed7bcf91587c4da50cb147855f879f7d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49682, "upload_time": "2020-05-03T15:19:06", "upload_time_iso_8601": "2020-05-03T15:19:06.523183Z", "url": "https://files.pythonhosted.org/packages/66/0d/f7d3bed4c8018feaca8c5ebdfdde77c6c506975409179288f755c8b07bda/chess-graph-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "0eeeeae5f77545b6d1ed8ce01c33103d", "sha256": "9edb66a0cad4bee79e70b000638306fdfb5d3c02fbc351c44d1a1b375710fb97"}, "downloads": -1, "filename": "chess_graph-1.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0eeeeae5f77545b6d1ed8ce01c33103d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53415, "upload_time": "2020-05-03T15:44:46", "upload_time_iso_8601": "2020-05-03T15:44:46.730969Z", "url": "https://files.pythonhosted.org/packages/5d/49/a3b8a21d1b0a2914a8af326097e3fa18f4861c3f163caa8968c4715ab28f/chess_graph-1.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41b8bf4cf101c850d6be3972b904898e", "sha256": "3c2cfb882459d9e021380d69df5d213fa13e766bcf81a434383f9f3b7a6c48f9"}, "downloads": -1, "filename": "chess-graph-1.5.4.tar.gz", "has_sig": false, "md5_digest": "41b8bf4cf101c850d6be3972b904898e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49729, "upload_time": "2020-05-03T15:44:48", "upload_time_iso_8601": "2020-05-03T15:44:48.287766Z", "url": "https://files.pythonhosted.org/packages/23/4e/3259eeda533c616b91a609300e1ff16781586b844722e702372ace3d425c/chess-graph-1.5.4.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "f3d9f4c6bf12e0fd95478ba1496b1f22", "sha256": "ad436d7b0465d1c290d5d215f14fe3c2305405fac8ea032997e7372f50b7ba94"}, "downloads": -1, "filename": "chess_graph-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3d9f4c6bf12e0fd95478ba1496b1f22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53966, "upload_time": "2020-05-05T10:57:32", "upload_time_iso_8601": "2020-05-05T10:57:32.736994Z", "url": "https://files.pythonhosted.org/packages/72/01/39677391c212b7edaf1effc51357e98b692a579f86cc08645fea46703d22/chess_graph-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b62cd1ed781b7ea63508c92a47570a03", "sha256": "b9a53184111f58dc2b9cd2124d9b07cd206400ab8b35989a48b338de2a271110"}, "downloads": -1, "filename": "chess-graph-1.6.0.tar.gz", "has_sig": false, "md5_digest": "b62cd1ed781b7ea63508c92a47570a03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48801, "upload_time": "2020-05-05T10:57:34", "upload_time_iso_8601": "2020-05-05T10:57:34.591196Z", "url": "https://files.pythonhosted.org/packages/d5/86/c63c315a1256c08cf1829a3e9ce042bed1ca4e0077d438a520c66ff80d9e/chess-graph-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "71cad8650234982789112dc274829046", "sha256": "64f8470f437f3aaaa4eb80db90d1a72187ecd07f5f59b5ea59b168741be28132"}, "downloads": -1, "filename": "chess_graph-1.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "71cad8650234982789112dc274829046", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53926, "upload_time": "2020-05-05T10:59:17", "upload_time_iso_8601": "2020-05-05T10:59:17.385783Z", "url": "https://files.pythonhosted.org/packages/2e/a8/ca31ecb3dbf388d2fbbe5c7f80eb6fb6cf66f914a354682746def5cd5e28/chess_graph-1.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fcd3a31db501b53a1c048c7716ac21e", "sha256": "2f1136553e727a83165bf62f30771a87a20a7059c3a6e851a3f5b357ce121d6d"}, "downloads": -1, "filename": "chess-graph-1.6.1.tar.gz", "has_sig": false, "md5_digest": "0fcd3a31db501b53a1c048c7716ac21e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48781, "upload_time": "2020-05-05T10:59:18", "upload_time_iso_8601": "2020-05-05T10:59:18.974489Z", "url": "https://files.pythonhosted.org/packages/8c/b0/22fdc1ccfe9dc1074c144da210cc465a3bdddf0378e00f087bebae076d27/chess-graph-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "e6fe298eb970519b04706289ed5677d1", "sha256": "2991d1f4109d72458c3b838e33ba23c97abf79a669d82fbf61cc461212e3c97b"}, "downloads": -1, "filename": "chess_graph-1.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e6fe298eb970519b04706289ed5677d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53922, "upload_time": "2020-05-05T11:34:17", "upload_time_iso_8601": "2020-05-05T11:34:17.647979Z", "url": "https://files.pythonhosted.org/packages/d0/60/9efac4513284da15c80f0c1a61b7711f2c51688f059b90e8ed156286f974/chess_graph-1.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3a2cb7273e114f89c602d70e7541b5d", "sha256": "8f665b4120fc49f4bec41f45465b32708972d0be1305302e24971eeceaa60108"}, "downloads": -1, "filename": "chess-graph-1.6.2.tar.gz", "has_sig": false, "md5_digest": "c3a2cb7273e114f89c602d70e7541b5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48785, "upload_time": "2020-05-05T11:34:18", "upload_time_iso_8601": "2020-05-05T11:34:18.851645Z", "url": "https://files.pythonhosted.org/packages/8d/62/8516d739edd87547c3266f137e371626f385550cf41159efc988d6f7057b/chess-graph-1.6.2.tar.gz", "yanked": false}], "1.6.3": [{"comment_text": "", "digests": {"md5": "4d1a6ad4c59b88f8e4323ba744a48622", "sha256": "60b825de9c7f27155e6a02aec91db279f37491faa1af378b8f9bc3e1649fa450"}, "downloads": -1, "filename": "chess_graph-1.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4d1a6ad4c59b88f8e4323ba744a48622", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53927, "upload_time": "2020-05-05T16:20:58", "upload_time_iso_8601": "2020-05-05T16:20:58.698990Z", "url": "https://files.pythonhosted.org/packages/41/51/145a262411b97139e31e9967c87ff81a9da75b427c25ab8ebf5a57660bfd/chess_graph-1.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c6a7f6d2e0515ae07929582a9c1d9f3", "sha256": "51c96b79dce1dd71659325339f9eb5b726e792e3ef20109626aab0961320efbe"}, "downloads": -1, "filename": "chess-graph-1.6.3.tar.gz", "has_sig": false, "md5_digest": "8c6a7f6d2e0515ae07929582a9c1d9f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48812, "upload_time": "2020-05-05T16:21:00", "upload_time_iso_8601": "2020-05-05T16:21:00.322613Z", "url": "https://files.pythonhosted.org/packages/6a/05/58e7bc0d88766bf3cd5ced3b391c30e054d580c35964e843fd45d1fe53e9/chess-graph-1.6.3.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "fdb7f49cfa1e3d205ceb128eb39aa2bb", "sha256": "354e8e13f643da7c3bcfffb8a3e373b5208fcdd944c5be2351996f031aa71ca5"}, "downloads": -1, "filename": "chess_graph-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdb7f49cfa1e3d205ceb128eb39aa2bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 54112, "upload_time": "2020-05-06T08:08:11", "upload_time_iso_8601": "2020-05-06T08:08:11.712773Z", "url": "https://files.pythonhosted.org/packages/4c/5d/2c6617649edb90da14023dcd3a674f491fef0486867399f35313278b3997/chess_graph-1.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a820f4b26f365121210d3aed8976a3ad", "sha256": "a3aa844df634d16d50641224dca23cfbc6a4f9c54141b76d1a4fea769e4cd704"}, "downloads": -1, "filename": "chess-graph-1.7.0.tar.gz", "has_sig": false, "md5_digest": "a820f4b26f365121210d3aed8976a3ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48957, "upload_time": "2020-05-06T08:08:13", "upload_time_iso_8601": "2020-05-06T08:08:13.114545Z", "url": "https://files.pythonhosted.org/packages/b9/02/3be0a7fcfb321a58e27aadb0fdf553eaf720299f9743a2f47c091fc87087/chess-graph-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "705aa5958621e759acd7c27bcc1f3b5f", "sha256": "9f8dbfd838b06a97373d3bf3a5a9334af4944fb3ff7a32c8a267e1d7b855ebbc"}, "downloads": -1, "filename": "chess_graph-1.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "705aa5958621e759acd7c27bcc1f3b5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 54127, "upload_time": "2020-05-06T08:11:19", "upload_time_iso_8601": "2020-05-06T08:11:19.536198Z", "url": "https://files.pythonhosted.org/packages/63/6c/b1285a4e8afc41542e58e5bb9dbde331440891ea862a192e549cd298b11f/chess_graph-1.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13ae8d05676f57118e1b01f3bf4ecd55", "sha256": "b685e6efc1e2bdbca6a97b33067494724501ca06aa3ccd80d0e5b6a536cb7e7a"}, "downloads": -1, "filename": "chess-graph-1.7.1.tar.gz", "has_sig": false, "md5_digest": "13ae8d05676f57118e1b01f3bf4ecd55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48956, "upload_time": "2020-05-06T08:11:21", "upload_time_iso_8601": "2020-05-06T08:11:21.193597Z", "url": "https://files.pythonhosted.org/packages/a7/83/8a6f6f60896e2d6c2ccdfec2a8a77ee8c4cfad86af900ccca44e15e738df/chess-graph-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "b1ab0bba33c1ba1b789ede82eb347675", "sha256": "5c32fb28d9847c9630b9ca823928f87b95f27fbdefef55d7bf011b41e2ad1fa7"}, "downloads": -1, "filename": "chess_graph-1.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b1ab0bba33c1ba1b789ede82eb347675", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 54529, "upload_time": "2020-05-06T08:24:16", "upload_time_iso_8601": "2020-05-06T08:24:16.496494Z", "url": "https://files.pythonhosted.org/packages/2a/44/6e12be0d5f9b0c05bff31cca57f2825f2eab1d8758a6803f7128f83a86ab/chess_graph-1.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67a914041c940248ae348d7dc16782ee", "sha256": "cf32a04b9a51d158ca77c0e77c2f61ca14609bea4b338644915193be4c61f31f"}, "downloads": -1, "filename": "chess-graph-1.7.2.tar.gz", "has_sig": false, "md5_digest": "67a914041c940248ae348d7dc16782ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49768, "upload_time": "2020-05-06T08:24:17", "upload_time_iso_8601": "2020-05-06T08:24:17.985436Z", "url": "https://files.pythonhosted.org/packages/6c/75/a34e6e2f38985e7868aa888ab43f60edb352d0fcc3b9301fcfd2fc2ecc53/chess-graph-1.7.2.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "9d72d9567d1671bce1ee7a630a50c560", "sha256": "40c3ce7e729dab8fef73b9118cd09857fc6640891f34373b4c81f074b94615d0"}, "downloads": -1, "filename": "chess_graph-1.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9d72d9567d1671bce1ee7a630a50c560", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 54603, "upload_time": "2020-05-06T15:55:23", "upload_time_iso_8601": "2020-05-06T15:55:23.233006Z", "url": "https://files.pythonhosted.org/packages/83/7b/5577b5b7a053164c3d2ee4931431f878fc39583cfdd57232792d98f2748e/chess_graph-1.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ace5a533c1f9cae84aa668d1d3160bc", "sha256": "6c018414e87f74576fdc7927b03fd84de17658fb5b8f3912164113cf590a2e46"}, "downloads": -1, "filename": "chess-graph-1.7.3.tar.gz", "has_sig": false, "md5_digest": "8ace5a533c1f9cae84aa668d1d3160bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49827, "upload_time": "2020-05-06T15:55:24", "upload_time_iso_8601": "2020-05-06T15:55:24.656586Z", "url": "https://files.pythonhosted.org/packages/5e/a0/057d84008cb8c3dd9a43eaea718478f1209800c17a036df32b0185b2dd79/chess-graph-1.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d72d9567d1671bce1ee7a630a50c560", "sha256": "40c3ce7e729dab8fef73b9118cd09857fc6640891f34373b4c81f074b94615d0"}, "downloads": -1, "filename": "chess_graph-1.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9d72d9567d1671bce1ee7a630a50c560", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 54603, "upload_time": "2020-05-06T15:55:23", "upload_time_iso_8601": "2020-05-06T15:55:23.233006Z", "url": "https://files.pythonhosted.org/packages/83/7b/5577b5b7a053164c3d2ee4931431f878fc39583cfdd57232792d98f2748e/chess_graph-1.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ace5a533c1f9cae84aa668d1d3160bc", "sha256": "6c018414e87f74576fdc7927b03fd84de17658fb5b8f3912164113cf590a2e46"}, "downloads": -1, "filename": "chess-graph-1.7.3.tar.gz", "has_sig": false, "md5_digest": "8ace5a533c1f9cae84aa668d1d3160bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49827, "upload_time": "2020-05-06T15:55:24", "upload_time_iso_8601": "2020-05-06T15:55:24.656586Z", "url": "https://files.pythonhosted.org/packages/5e/a0/057d84008cb8c3dd9a43eaea718478f1209800c17a036df32b0185b2dd79/chess-graph-1.7.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:38 2020"}