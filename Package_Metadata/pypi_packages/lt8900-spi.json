{"info": {"author": "Roy Keene", "author_email": "pypi@rkeene.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python LT8900 via SPI\n\nThis Python module enables a Python to talk to an LT8900 radio attached to an serial peripheral interface (SPI).\n\n## API\n### Synopsis\n\n    lt8900_spi.Radio(spi_bus, spi_dev, config = None) -> instance\n    lt8900_spi.Radio.put_register(reg, value) -> value\n    lt8900_spi.Radio.put_register_bits(reg, bits_dict) -> value\n    lt8900_spi.Radio.get_register(reg) -> value\n    lt8900_spi.Radio.get_register_bits(reg, value = None) -> dictionary\n    lt8900_spi.Radio.configure(config) -> None\n    lt8900_spi.Radio.initialize() -> boolean\n    lt8900_spi.Radio.set_channel(channel) -> dictionary\n    lt8900_spi.Radio.set_syncword(syncword) -> None\n    lt8900_spi.Radio.fill_fifo(message, include_length = True) -> list\n    lt8900_spi.Radio.transmit(message, channel = None) -> boolean\n    lt8900_spi.Radio.multi_transmit(message, channels, retries = 3, delay = 0.1) -> boolean\n    lt8900_spi.Radio.start_listening(channel) -> boolean\n    lt8900_spi.Radio.stop_listening() -> boolean\n    lt8900_spi.Radio.receive(channel = None, wait = False, length = None, wait_time = 0.1) -> list\n\n### instance.get\\_register\\_bits\n\nLow-level primitive to get a named register with bitfields expanded to names.\n\n### instance.put\\_register\\_bits\n\nLow-level primitive to set a named register by bitfield value.\n\n### instance.set\\_syncword\n\nHigh-level interface to syncword mechanism.  The syncword can be 1, 2, 3, or 4 16-bit words long and should be provided as an array.\n\nExample:\n\n    instance.set_syncword([1, 2, 3, 4])\n\n### instance.transmit\n\nTransmit a message.  If a channel is specified transmit on that channel -- otherwise the current channel is queried and then used.\n\n### instance.multi\\_transmit\n\nTransmit a message across multiple channels multiple times.  This is a common pattern so this function is provided for convience.\n\n## Example\n\n    #! /usr/bin/env python3\n\n    import time\n\n    import gpiozero\n    import lt8900_spi\n\n    # Need to keep this attached to drive the line high -- if the object disappears then\n    # the GPIO port gets reconfigured as an input port\n    # Note broadcom pin numbers are used\n    reset_gpio = gpiozero.LED(24)\n    reset_gpio.on()\n    def reset_module_via_gpio():    \n    \treset_gpio.off()\n    \ttime.sleep(0.1)\n    \treset_gpio.on()\n    \ttime.sleep(0.1)\n\n    radio = lt8900_spi.Radio(0, 0, {\n    \t'reset_command': reset_module_via_gpio\n    })\n\n    if not radio.initialize():\n    \traise ValueError('Initialize failed')\n\n    radio.set_syncword([0x258B, 0x147A])\n\n    radio.multi_transmit([0xB0, 0x51, 0xF0, 0x00, 0x00, 0x01, 212], [9, 40, 71], delay = 0.5)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://chiselapp.com/user/rkeene/repository/lt8900_spi/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "lt8900-spi", "package_url": "https://pypi.org/project/lt8900-spi/", "platform": "", "project_url": "https://pypi.org/project/lt8900-spi/", "project_urls": {"Homepage": "https://chiselapp.com/user/rkeene/repository/lt8900_spi/"}, "release_url": "https://pypi.org/project/lt8900-spi/2.4/", "requires_dist": ["spidev (>=3.0.0)"], "requires_python": ">=3.6", "summary": "Python interface to an LT8900 connected via SPI", "version": "2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python LT8900 via SPI</h1>\n<p>This Python module enables a Python to talk to an LT8900 radio attached to an serial peripheral interface (SPI).</p>\n<h2>API</h2>\n<h3>Synopsis</h3>\n<pre><code>lt8900_spi.Radio(spi_bus, spi_dev, config = None) -&gt; instance\nlt8900_spi.Radio.put_register(reg, value) -&gt; value\nlt8900_spi.Radio.put_register_bits(reg, bits_dict) -&gt; value\nlt8900_spi.Radio.get_register(reg) -&gt; value\nlt8900_spi.Radio.get_register_bits(reg, value = None) -&gt; dictionary\nlt8900_spi.Radio.configure(config) -&gt; None\nlt8900_spi.Radio.initialize() -&gt; boolean\nlt8900_spi.Radio.set_channel(channel) -&gt; dictionary\nlt8900_spi.Radio.set_syncword(syncword) -&gt; None\nlt8900_spi.Radio.fill_fifo(message, include_length = True) -&gt; list\nlt8900_spi.Radio.transmit(message, channel = None) -&gt; boolean\nlt8900_spi.Radio.multi_transmit(message, channels, retries = 3, delay = 0.1) -&gt; boolean\nlt8900_spi.Radio.start_listening(channel) -&gt; boolean\nlt8900_spi.Radio.stop_listening() -&gt; boolean\nlt8900_spi.Radio.receive(channel = None, wait = False, length = None, wait_time = 0.1) -&gt; list\n</code></pre>\n<h3>instance.get_register_bits</h3>\n<p>Low-level primitive to get a named register with bitfields expanded to names.</p>\n<h3>instance.put_register_bits</h3>\n<p>Low-level primitive to set a named register by bitfield value.</p>\n<h3>instance.set_syncword</h3>\n<p>High-level interface to syncword mechanism.  The syncword can be 1, 2, 3, or 4 16-bit words long and should be provided as an array.</p>\n<p>Example:</p>\n<pre><code>instance.set_syncword([1, 2, 3, 4])\n</code></pre>\n<h3>instance.transmit</h3>\n<p>Transmit a message.  If a channel is specified transmit on that channel -- otherwise the current channel is queried and then used.</p>\n<h3>instance.multi_transmit</h3>\n<p>Transmit a message across multiple channels multiple times.  This is a common pattern so this function is provided for convience.</p>\n<h2>Example</h2>\n<pre><code>#! /usr/bin/env python3\n\nimport time\n\nimport gpiozero\nimport lt8900_spi\n\n# Need to keep this attached to drive the line high -- if the object disappears then\n# the GPIO port gets reconfigured as an input port\n# Note broadcom pin numbers are used\nreset_gpio = gpiozero.LED(24)\nreset_gpio.on()\ndef reset_module_via_gpio():    \n\treset_gpio.off()\n\ttime.sleep(0.1)\n\treset_gpio.on()\n\ttime.sleep(0.1)\n\nradio = lt8900_spi.Radio(0, 0, {\n\t'reset_command': reset_module_via_gpio\n})\n\nif not radio.initialize():\n\traise ValueError('Initialize failed')\n\nradio.set_syncword([0x258B, 0x147A])\n\nradio.multi_transmit([0xB0, 0x51, 0xF0, 0x00, 0x00, 0x01, 212], [9, 40, 71], delay = 0.5)\n</code></pre>\n\n          </div>"}, "last_serial": 7191147, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "517fc0b607bca747e0dcc8005cf377dd", "sha256": "1d18bdcc95787744574688b4c9c98d77c100805c8418eda9a957b50f9f4b5f51"}, "downloads": -1, "filename": "lt8900_spi-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "517fc0b607bca747e0dcc8005cf377dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7064, "upload_time": "2020-04-29T00:12:37", "upload_time_iso_8601": "2020-04-29T00:12:37.447609Z", "url": "https://files.pythonhosted.org/packages/37/b0/d83cdd0cc4bce56b90ce44f002ed97355c91cde0bc3424dab2f91a93d130/lt8900_spi-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5695b7a661724696614048e5ee9ee54e", "sha256": "a703fae47d107fa3f60cf6e8267c996d326f3b424e4fc7554ae9b5d944c321f8"}, "downloads": -1, "filename": "lt8900_spi-1.0.tar.gz", "has_sig": false, "md5_digest": "5695b7a661724696614048e5ee9ee54e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6046, "upload_time": "2020-04-29T00:12:39", "upload_time_iso_8601": "2020-04-29T00:12:39.444103Z", "url": "https://files.pythonhosted.org/packages/6c/f3/44611af65906f025fc0d2458dc839e4c8554d42834b7a57724f4eeb6136e/lt8900_spi-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "44e3dd81a224521f6cd4176f919808aa", "sha256": "9d8fa20b33cfc7f47e9e12c18e82ff11ece71946c426a46b826877afd31bf350"}, "downloads": -1, "filename": "lt8900_spi-2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "44e3dd81a224521f6cd4176f919808aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7062, "upload_time": "2020-04-29T00:38:34", "upload_time_iso_8601": "2020-04-29T00:38:34.502851Z", "url": "https://files.pythonhosted.org/packages/87/71/e88574913bc037cb623231725ace63308bab151b4ed2795624f9b2da7151/lt8900_spi-2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01dabeb8665db74010a3c3ac8221ab19", "sha256": "e14bb4301482541bf7f93bf2e0647e52154d3a2979b49aca149c7e1483a6150c"}, "downloads": -1, "filename": "lt8900_spi-2.0.tar.gz", "has_sig": false, "md5_digest": "01dabeb8665db74010a3c3ac8221ab19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6047, "upload_time": "2020-04-29T00:38:35", "upload_time_iso_8601": "2020-04-29T00:38:35.464547Z", "url": "https://files.pythonhosted.org/packages/16/26/4d3be8c3f585843cd7b2218a0e28963d84fd136b2d88cecd80c2da508d33/lt8900_spi-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "25e44ee7ead734afa142250c18d6a0b2", "sha256": "c632a0efd7426a5e8049c02c791e47bfc6927f8dd063f99670fc5fa47fe8a1fa"}, "downloads": -1, "filename": "lt8900_spi-2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "25e44ee7ead734afa142250c18d6a0b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7064, "upload_time": "2020-04-29T00:53:51", "upload_time_iso_8601": "2020-04-29T00:53:51.864498Z", "url": "https://files.pythonhosted.org/packages/ff/3f/449406ca07151b8b0301db9466da53f35d418d46a2c5599879636ca4d832/lt8900_spi-2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd94b308f4976fd72ef9a6ff06c3f63d", "sha256": "7cffb2a8547ecf13b5eecd11a5ec663f9ff5129b3e7752b9859d238a117a0a5c"}, "downloads": -1, "filename": "lt8900_spi-2.1.tar.gz", "has_sig": false, "md5_digest": "fd94b308f4976fd72ef9a6ff06c3f63d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6053, "upload_time": "2020-04-29T00:53:53", "upload_time_iso_8601": "2020-04-29T00:53:53.032464Z", "url": "https://files.pythonhosted.org/packages/e6/b5/b67f5c5a42bb0a008566853bc13b581dd357c016d21be976371e32abe037/lt8900_spi-2.1.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "be1fc9fa9d4a764ec45fac05a2adef52", "sha256": "73fad65d49c6370d909edf5a87d49e7821ecce710ab72c265dbdb1b58fe0f30f"}, "downloads": -1, "filename": "lt8900_spi-2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "be1fc9fa9d4a764ec45fac05a2adef52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7076, "upload_time": "2020-04-30T03:30:33", "upload_time_iso_8601": "2020-04-30T03:30:33.348866Z", "url": "https://files.pythonhosted.org/packages/9a/03/6efb8439018fa7f6144a79f474cc956698cb16c11e5f22f5589baace940a/lt8900_spi-2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec17f083f907c8756513005639fe44ee", "sha256": "f21914af35021a212a9a9fd5e99b1412ea3a2ad7c30c1fd764015367bf40d86c"}, "downloads": -1, "filename": "lt8900_spi-2.2.tar.gz", "has_sig": false, "md5_digest": "ec17f083f907c8756513005639fe44ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6061, "upload_time": "2020-04-30T03:30:34", "upload_time_iso_8601": "2020-04-30T03:30:34.534087Z", "url": "https://files.pythonhosted.org/packages/cf/a9/d259a2ad6e26d643f5ef2d6affabfb875dca14c3118a74085209123f12d8/lt8900_spi-2.2.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "5d890d2016b79d7237f3b9a35ee78061", "sha256": "065c6610a0932f8e742f44e65f2c4dd3fa26ebdc3272d9c5fbbf59e6e870cc27"}, "downloads": -1, "filename": "lt8900_spi-2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5d890d2016b79d7237f3b9a35ee78061", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8981, "upload_time": "2020-05-02T15:13:28", "upload_time_iso_8601": "2020-05-02T15:13:28.782844Z", "url": "https://files.pythonhosted.org/packages/63/ce/61014511c0bb5c775f3cfa56ea6aa17210d87833b0a29a56fcbd2d2af85f/lt8900_spi-2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "704e8cd22854d53bc2f57fca579294d3", "sha256": "993072be1085ead55085dd8abbc6b4a10b7da2edee2ea2a37196b564c89b4788"}, "downloads": -1, "filename": "lt8900_spi-2.3.tar.gz", "has_sig": false, "md5_digest": "704e8cd22854d53bc2f57fca579294d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8519, "upload_time": "2020-05-02T15:13:30", "upload_time_iso_8601": "2020-05-02T15:13:30.279649Z", "url": "https://files.pythonhosted.org/packages/b2/f0/9f88d1c79a3ed7c55485b75e990d5a47913642d47ca3ca3fa0b39bca7900/lt8900_spi-2.3.tar.gz", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "064ce810474aeb0fa5635d483d2569f4", "sha256": "26a9d8cb00d8981ebaed5a900a2cb3219db13f05464868a8e997e043c467367b"}, "downloads": -1, "filename": "lt8900_spi-2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "064ce810474aeb0fa5635d483d2569f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9822, "upload_time": "2020-05-07T19:22:47", "upload_time_iso_8601": "2020-05-07T19:22:47.750331Z", "url": "https://files.pythonhosted.org/packages/9f/7e/dc7228a692025fe3ee590120502e793c25dd920179e1d1ee5ee3b0ae7165/lt8900_spi-2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8dbc7e8dd5374cca2861504a9a2bf42", "sha256": "a9e8451e8538ed091f897c08d81c6a2b72db5867e93881f0f2c868b489629960"}, "downloads": -1, "filename": "lt8900_spi-2.4.tar.gz", "has_sig": false, "md5_digest": "c8dbc7e8dd5374cca2861504a9a2bf42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9833, "upload_time": "2020-05-07T19:22:48", "upload_time_iso_8601": "2020-05-07T19:22:48.688855Z", "url": "https://files.pythonhosted.org/packages/73/4b/2445132de6a93ecda5126c884c236bc7a5b39d61a25865a93bb3f2bcc384/lt8900_spi-2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "064ce810474aeb0fa5635d483d2569f4", "sha256": "26a9d8cb00d8981ebaed5a900a2cb3219db13f05464868a8e997e043c467367b"}, "downloads": -1, "filename": "lt8900_spi-2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "064ce810474aeb0fa5635d483d2569f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9822, "upload_time": "2020-05-07T19:22:47", "upload_time_iso_8601": "2020-05-07T19:22:47.750331Z", "url": "https://files.pythonhosted.org/packages/9f/7e/dc7228a692025fe3ee590120502e793c25dd920179e1d1ee5ee3b0ae7165/lt8900_spi-2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8dbc7e8dd5374cca2861504a9a2bf42", "sha256": "a9e8451e8538ed091f897c08d81c6a2b72db5867e93881f0f2c868b489629960"}, "downloads": -1, "filename": "lt8900_spi-2.4.tar.gz", "has_sig": false, "md5_digest": "c8dbc7e8dd5374cca2861504a9a2bf42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9833, "upload_time": "2020-05-07T19:22:48", "upload_time_iso_8601": "2020-05-07T19:22:48.688855Z", "url": "https://files.pythonhosted.org/packages/73/4b/2445132de6a93ecda5126c884c236bc7a5b39d61a25865a93bb3f2bcc384/lt8900_spi-2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:24 2020"}