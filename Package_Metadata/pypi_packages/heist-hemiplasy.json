{"info": {"author": "Matt Gibson, Mark Hibbins", "author_email": "matthewjsgibson@gmail.com, mhibbins@iu.edu", "bugtrack_url": null, "classifiers": [], "description": "# HeIST\n**He**miplasy **I**nference **S**imulation **T**ool\n\n\n![](https://img.shields.io/github/release-pre/mhibbins/hemiplasytool.svg)\n![](https://img.shields.io/github/release-date-pre/mhibbins/hemiplasytool.svg)\n## Authors:\nMatt Gibson (gibsomat@indiana.edu)  \nMark Hibbins (mhibbins@indiana.edu)\n\n## Dependencies:\n* [ms](http://home.uchicago.edu/~rhudson1/source.html)  \n* [seq-gen](http://tree.bio.ed.ac.uk/software/seqgen/)\n* biopython\n* numpy\n* matplotlib\n* ete3\n\n\n## Installation\n\n```\ngit clone https://github.com/mhibbins/heist\ncd heist\npython setup.py install\n```\n\n\n## Usage\n```\n _   _      ___ ____ _____\n| | | | ___|_ _/ ___|_   _|\n| |_| |/ _ \\| |\\___ \\ | |\n|  _  |  __/| | ___) || |\n|_| |_|\\___|___|____/ |_|\nHemiplasy Inference Simulation Tool\nVersion 0.3.0\n\nWritten by Mark Hibbins & Matt Gibson\nIndiana University\n\nusage: heist [-h] [-v] [-n] [-t] [-p] [-g] [-s] [-o] input\n\nTool for characterising hemiplasy given traits mapped onto a species tree\n\npositional arguments:\n  input                 Input NEXUS file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Enable debugging messages to be displayed\n  -n , --replicates     Number of replicates per batch\n  -t , --threads        Number of threads for simulations\n  -p , --mspath         Path to ms (if not in user path)\n  -g , --seqgenpath     Path to seq-gen (if not in user path)\n  -s , --mutationrate   Seq-gen mutation rate (default 0.05)\n  -o , --outputdir      Output directory/prefix\n```\n\n## Input file\n\nThe input file is modified NEXUS format. A minimal example includes a tree (in newick format) and at least two dervived taxa set with the `set derived` command. If an outgroup is specified with `set outgroup`, the tree will be pruned to contain only taxa relevant to the simulation (i.e., the subclade containing derived taxa) + the outgroup. \n\n```\n#NEXUS\nbegin trees;\n\ttree tree_1 = (spA:0.002,(spB:0.001,((spC:0.0004,spD:0.0008)10.0:0.0005,(spE:0.0006,spF:0.0004)8.0:0.0004)15:0.0009)90.0:0.005);\nend;\n\nbegin hemiplasytool;\nset derived taxon=spB\nset derived taxon=spD\nset derived taxon=spF\nend;\n```\n\n### Species tree\n\nSpecies tree in newick format. Branch lengths must be in average substitutions per site and **branches must be labeled with concordance factors**. [IQTree](www.iqtree.org/doc/Concordance-Factor) can be used to do this. \n\n> If your tree is already ultrametric and in coalescent units, you can supply this directly if you add the flag `set type coal` to the input file.\n\n### Traits\n\nSet which taxa have the derived character by using \n\n```\nset derived taxon=\"species in tree\"\n```\n\n\n### Introgression\n\nIntrogression events can be defined by using\n\n```\nset introgression source=\"species in tree\" dest=\"species in tree\" prob=[float_value] timing=[float_value]\n```\nNote that timing must be specified in coalescent units. For this reason, we recommend first running your input tree through [`subs2coal`](#subs2coal)\n\n## Example:\n```\npython -m hemiplasytool -n 100000 -x 5 -p ~/msdir/ms -g ~/Seq-Gen-1.3.4/seq-gen -o test_w_introgression -v test/input_test_small_intro_v2.txt\n```\n\n### Output:\nThree output files will be produced. The main output `test_w_introgression.txt`, a gene trees file `test_w_introgression.trees` which contains all observed topologies, and a mutation distribution plot `test_w_introgression.dist.png`.\n\n\n```\n### INPUT SUMMARY ###\n\nInteger Code\tTaxon Name\n1:\tsp1\n2:\tsp2\n3:\tsp3\n4:\tsp4\n5:\tsp5\n6:\tsp6\n\nThe species tree (smoothed, in coalescent units) is:\n (1:2.78984,(2:2.09238,((3:0.69746,4:0.69746)1:0.69746,(5:0.69746,6:0.69746)1:0.69746)1:0.69746)1:0.69746);\n\n  _________________________________ 1\n |\n_|        _________________________ 2*\n |       |\n |_______|                 ________ 3\n         |         _______|\n         |        |       |________ 4*\n         |________|\n                  |        ________ 5\n                  |_______|\n                          |________ 6*\n\n3 taxa have the derived state: 2, 4, 6\n\nWith homoplasy only, 3 mutations are required to explain this trait pattern (Fitch parsimony)\n\nIntrogression from taxon 4 into taxon 6 occurs at time 0.3 with probability 0.05\n\n5.00e+05 simulations performed\n\n### RESULTS ###\n\n70 loci matched the species character states\n\n\"True\" hemiplasy (1 mutation) occurs 14 time(s)\n\nCombinations of hemiplasy and homoplasy (1 < # mutations < 3) occur 30 time(s)\n\n\"True\" homoplasy (>= 3 mutations) occurs 26 time(s)\n\n70 loci have a discordant gene tree\n0 loci are concordant with the species tree\n\n4 loci originate from an introgressed history\n66 loci originate from the species history\n\nDistribution of mutation counts:\n\n# Mutations\t# Trees\nOn all trees:\n1\t\t14\n2\t\t30\n3\t\t25\n4\t\t1\n\nOn concordant trees:\n# Mutations\t# Trees\n\nOn discordant trees:\n# Mutations\t# Trees\n1\t\t14\n2\t\t30\n3\t\t25\n4\t\t1\n\nOrigins of mutations leading to observed character states for hemiplasy + homoplasy cases:\n\n\tTip mutation\tInternal branch mutation\tTip reversal\nTaxa 2\t3\t27\t0\nTaxa 4\t3\t27\t0\nTaxa 6\t0\t30\t0\n\n### OBSERVED GENE TREES ###\n\n                 _________________ 4\n  ______________|\n |              | ________________ 3\n |              ||\n |               |         _______ 5\n_|               |________|\n |                        |_______ 6*\n |\n |    _____________________________ 1\n |___|\n     |_____________________________ 2\n\nThis topology occured 1 time(s)\n                       ____________ 3\n  ____________________|\n |                    |____________ 5\n_|\n |         ________________________ 1\n |________|\n          |     __________________ 2\n          |____|\n               |        __________ 4\n               |_______|\n                       |__________ 6*\n\nThis topology occured 4 time(s)\n         _________________________ 2\n  ______|\n |      |       __________________ 5\n |      |______|\n |             |   _______________ 4\n_|             |__|\n |                |_______________ 6*\n |\n |  _______________________________ 1\n |_|\n   |_______________________________ 3\n\n...\n```\n\nSee `test_w_introgression.txt.txt` for full output.\n\n![Mutation distribution](test_w_introgression.dist.png)\n\n\n## Sub-modules\n\nOnce installed, two additional programs will be available at the command line: `newick2ms` and `subs2coal`.\n\n### newick2ms\n\n```\nusage: newick2ms [-h] input\n\nTool for converting a newick string to ms-style splits. Note that this only\nmakes sense if the input tree is in coalescent units.\n\npositional arguments:\n  input       Input newick string file\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n\n### subs2coal\n\n```\nusage: subs2coal [-h] input\n\nTool for converting a newick string with branch lengths in subs/site to a\nneewick string with branch lengths in coalescent units. Input requires gene or\nsite-concordancee factors as branch labels\n\npositional arguments:\n  input       Input newick string file\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n### heistMerge\n\n```\nusage: heistmerge [-h] [-d] [inputs [inputs ...]]\n\nMerge output files from multiple HeiST runs. Useful for simulating large trees\nby running multiple batch jobs.\n\npositional arguments:\n  inputs      Prefixes of output files to merge or a directory (supply -d flag\n              as well)\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -d          Merge all files in a directory\n```\n\n`heistMerge` will write the merged output summary to standard out and create a new files `merged_trees.trees` which contains all observed focal gene trees.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mhibbins/hemiplasytool", "keywords": "phylogenetics evolution hemiplasy homoplasy", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "heist-hemiplasy", "package_url": "https://pypi.org/project/heist-hemiplasy/", "platform": "", "project_url": "https://pypi.org/project/heist-hemiplasy/", "project_urls": {"Homepage": "https://github.com/mhibbins/hemiplasytool"}, "release_url": "https://pypi.org/project/heist-hemiplasy/0.3.1/", "requires_dist": ["biopython", "numpy", "matplotlib", "ete3"], "requires_python": "", "summary": "Hemiplasy Inference Simulation Tool. For characterising hemiplasy given traits mapped onto a species tree", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HeIST</h1>\n<p><strong>He</strong>miplasy <strong>I</strong>nference <strong>S</strong>imulation <strong>T</strong>ool</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e4017fa31243d0e92132481a6225c40d8003ad4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d7072652f6d68696262696e732f68656d69706c617379746f6f6c2e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/335d2b8a651ae69be3e86f58eaab25cdae07619f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f6d68696262696e732f68656d69706c617379746f6f6c2e737667\"></p>\n<h2>Authors:</h2>\n<p>Matt Gibson (<a href=\"mailto:gibsomat@indiana.edu\">gibsomat@indiana.edu</a>)<br>\nMark Hibbins (<a href=\"mailto:mhibbins@indiana.edu\">mhibbins@indiana.edu</a>)</p>\n<h2>Dependencies:</h2>\n<ul>\n<li><a href=\"http://home.uchicago.edu/%7Erhudson1/source.html\" rel=\"nofollow\">ms</a></li>\n<li><a href=\"http://tree.bio.ed.ac.uk/software/seqgen/\" rel=\"nofollow\">seq-gen</a></li>\n<li>biopython</li>\n<li>numpy</li>\n<li>matplotlib</li>\n<li>ete3</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>git clone https://github.com/mhibbins/heist\ncd heist\npython setup.py install\n</code></pre>\n<h2>Usage</h2>\n<pre><code> _   _      ___ ____ _____\n| | | | ___|_ _/ ___|_   _|\n| |_| |/ _ \\| |\\___ \\ | |\n|  _  |  __/| | ___) || |\n|_| |_|\\___|___|____/ |_|\nHemiplasy Inference Simulation Tool\nVersion 0.3.0\n\nWritten by Mark Hibbins &amp; Matt Gibson\nIndiana University\n\nusage: heist [-h] [-v] [-n] [-t] [-p] [-g] [-s] [-o] input\n\nTool for characterising hemiplasy given traits mapped onto a species tree\n\npositional arguments:\n  input                 Input NEXUS file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Enable debugging messages to be displayed\n  -n , --replicates     Number of replicates per batch\n  -t , --threads        Number of threads for simulations\n  -p , --mspath         Path to ms (if not in user path)\n  -g , --seqgenpath     Path to seq-gen (if not in user path)\n  -s , --mutationrate   Seq-gen mutation rate (default 0.05)\n  -o , --outputdir      Output directory/prefix\n</code></pre>\n<h2>Input file</h2>\n<p>The input file is modified NEXUS format. A minimal example includes a tree (in newick format) and at least two dervived taxa set with the <code>set derived</code> command. If an outgroup is specified with <code>set outgroup</code>, the tree will be pruned to contain only taxa relevant to the simulation (i.e., the subclade containing derived taxa) + the outgroup.</p>\n<pre><code>#NEXUS\nbegin trees;\n\ttree tree_1 = (spA:0.002,(spB:0.001,((spC:0.0004,spD:0.0008)10.0:0.0005,(spE:0.0006,spF:0.0004)8.0:0.0004)15:0.0009)90.0:0.005);\nend;\n\nbegin hemiplasytool;\nset derived taxon=spB\nset derived taxon=spD\nset derived taxon=spF\nend;\n</code></pre>\n<h3>Species tree</h3>\n<p>Species tree in newick format. Branch lengths must be in average substitutions per site and <strong>branches must be labeled with concordance factors</strong>. <a href=\"www.iqtree.org/doc/Concordance-Factor\" rel=\"nofollow\">IQTree</a> can be used to do this.</p>\n<blockquote>\n<p>If your tree is already ultrametric and in coalescent units, you can supply this directly if you add the flag <code>set type coal</code> to the input file.</p>\n</blockquote>\n<h3>Traits</h3>\n<p>Set which taxa have the derived character by using</p>\n<pre><code>set derived taxon=\"species in tree\"\n</code></pre>\n<h3>Introgression</h3>\n<p>Introgression events can be defined by using</p>\n<pre><code>set introgression source=\"species in tree\" dest=\"species in tree\" prob=[float_value] timing=[float_value]\n</code></pre>\n<p>Note that timing must be specified in coalescent units. For this reason, we recommend first running your input tree through <a href=\"#subs2coal\" rel=\"nofollow\"><code>subs2coal</code></a></p>\n<h2>Example:</h2>\n<pre><code>python -m hemiplasytool -n 100000 -x 5 -p ~/msdir/ms -g ~/Seq-Gen-1.3.4/seq-gen -o test_w_introgression -v test/input_test_small_intro_v2.txt\n</code></pre>\n<h3>Output:</h3>\n<p>Three output files will be produced. The main output <code>test_w_introgression.txt</code>, a gene trees file <code>test_w_introgression.trees</code> which contains all observed topologies, and a mutation distribution plot <code>test_w_introgression.dist.png</code>.</p>\n<pre><code>### INPUT SUMMARY ###\n\nInteger Code\tTaxon Name\n1:\tsp1\n2:\tsp2\n3:\tsp3\n4:\tsp4\n5:\tsp5\n6:\tsp6\n\nThe species tree (smoothed, in coalescent units) is:\n (1:2.78984,(2:2.09238,((3:0.69746,4:0.69746)1:0.69746,(5:0.69746,6:0.69746)1:0.69746)1:0.69746)1:0.69746);\n\n  _________________________________ 1\n |\n_|        _________________________ 2*\n |       |\n |_______|                 ________ 3\n         |         _______|\n         |        |       |________ 4*\n         |________|\n                  |        ________ 5\n                  |_______|\n                          |________ 6*\n\n3 taxa have the derived state: 2, 4, 6\n\nWith homoplasy only, 3 mutations are required to explain this trait pattern (Fitch parsimony)\n\nIntrogression from taxon 4 into taxon 6 occurs at time 0.3 with probability 0.05\n\n5.00e+05 simulations performed\n\n### RESULTS ###\n\n70 loci matched the species character states\n\n\"True\" hemiplasy (1 mutation) occurs 14 time(s)\n\nCombinations of hemiplasy and homoplasy (1 &lt; # mutations &lt; 3) occur 30 time(s)\n\n\"True\" homoplasy (&gt;= 3 mutations) occurs 26 time(s)\n\n70 loci have a discordant gene tree\n0 loci are concordant with the species tree\n\n4 loci originate from an introgressed history\n66 loci originate from the species history\n\nDistribution of mutation counts:\n\n# Mutations\t# Trees\nOn all trees:\n1\t\t14\n2\t\t30\n3\t\t25\n4\t\t1\n\nOn concordant trees:\n# Mutations\t# Trees\n\nOn discordant trees:\n# Mutations\t# Trees\n1\t\t14\n2\t\t30\n3\t\t25\n4\t\t1\n\nOrigins of mutations leading to observed character states for hemiplasy + homoplasy cases:\n\n\tTip mutation\tInternal branch mutation\tTip reversal\nTaxa 2\t3\t27\t0\nTaxa 4\t3\t27\t0\nTaxa 6\t0\t30\t0\n\n### OBSERVED GENE TREES ###\n\n                 _________________ 4\n  ______________|\n |              | ________________ 3\n |              ||\n |               |         _______ 5\n_|               |________|\n |                        |_______ 6*\n |\n |    _____________________________ 1\n |___|\n     |_____________________________ 2\n\nThis topology occured 1 time(s)\n                       ____________ 3\n  ____________________|\n |                    |____________ 5\n_|\n |         ________________________ 1\n |________|\n          |     __________________ 2\n          |____|\n               |        __________ 4\n               |_______|\n                       |__________ 6*\n\nThis topology occured 4 time(s)\n         _________________________ 2\n  ______|\n |      |       __________________ 5\n |      |______|\n |             |   _______________ 4\n_|             |__|\n |                |_______________ 6*\n |\n |  _______________________________ 1\n |_|\n   |_______________________________ 3\n\n...\n</code></pre>\n<p>See <code>test_w_introgression.txt.txt</code> for full output.</p>\n<p><img alt=\"Mutation distribution\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/523c54c01ddf9f51a3c538f4483d3e1b170bad94/746573745f775f696e74726f6772657373696f6e2e646973742e706e67\"></p>\n<h2>Sub-modules</h2>\n<p>Once installed, two additional programs will be available at the command line: <code>newick2ms</code> and <code>subs2coal</code>.</p>\n<h3>newick2ms</h3>\n<pre><code>usage: newick2ms [-h] input\n\nTool for converting a newick string to ms-style splits. Note that this only\nmakes sense if the input tree is in coalescent units.\n\npositional arguments:\n  input       Input newick string file\n\noptional arguments:\n  -h, --help  show this help message and exit\n</code></pre>\n<h3>subs2coal</h3>\n<pre><code>usage: subs2coal [-h] input\n\nTool for converting a newick string with branch lengths in subs/site to a\nneewick string with branch lengths in coalescent units. Input requires gene or\nsite-concordancee factors as branch labels\n\npositional arguments:\n  input       Input newick string file\n\noptional arguments:\n  -h, --help  show this help message and exit\n</code></pre>\n<h3>heistMerge</h3>\n<pre><code>usage: heistmerge [-h] [-d] [inputs [inputs ...]]\n\nMerge output files from multiple HeiST runs. Useful for simulating large trees\nby running multiple batch jobs.\n\npositional arguments:\n  inputs      Prefixes of output files to merge or a directory (supply -d flag\n              as well)\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -d          Merge all files in a directory\n</code></pre>\n<p><code>heistMerge</code> will write the merged output summary to standard out and create a new files <code>merged_trees.trees</code> which contains all observed focal gene trees.</p>\n\n          </div>"}, "last_serial": 7054732, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "844844db506e96ab85145b2297aeac6b", "sha256": "227af1bd5014d32d1197fae8339872edc37a63c79f8e50e31fc705bea75a884b"}, "downloads": -1, "filename": "heist_hemiplasy-0.3.1-py3.6.egg", "has_sig": false, "md5_digest": "844844db506e96ab85145b2297aeac6b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 40256, "upload_time": "2020-04-19T16:23:03", "upload_time_iso_8601": "2020-04-19T16:23:03.282018Z", "url": "https://files.pythonhosted.org/packages/10/f7/22838b554e76edae38ad65a3082235a6cdf6f8433f06accc20f64c511418/heist_hemiplasy-0.3.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "22be4819a58b9ac74ef632e01ad433c3", "sha256": "aeb875d014de04d88a5bb57dd1c21f8f8080460ba5880f02617ab11e1d24f10c"}, "downloads": -1, "filename": "heist_hemiplasy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "22be4819a58b9ac74ef632e01ad433c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20312, "upload_time": "2020-04-19T16:23:00", "upload_time_iso_8601": "2020-04-19T16:23:00.346577Z", "url": "https://files.pythonhosted.org/packages/22/25/1f659167133e863fe019032c31935c3b4f9ed47cb506fbd8e3c1ac7f8106/heist_hemiplasy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98ed96c1c690384cb99913ba580324e7", "sha256": "2964d02c57c11829e8b75ab187c14112095cdfe5497004185f893afb7e103255"}, "downloads": -1, "filename": "heist-hemiplasy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "98ed96c1c690384cb99913ba580324e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20530, "upload_time": "2020-04-19T16:23:02", "upload_time_iso_8601": "2020-04-19T16:23:02.353209Z", "url": "https://files.pythonhosted.org/packages/23/a1/9f53c9e478dea51b242783dc0d26f97653c87b7104cb0f994a58dfd8c3c4/heist-hemiplasy-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "844844db506e96ab85145b2297aeac6b", "sha256": "227af1bd5014d32d1197fae8339872edc37a63c79f8e50e31fc705bea75a884b"}, "downloads": -1, "filename": "heist_hemiplasy-0.3.1-py3.6.egg", "has_sig": false, "md5_digest": "844844db506e96ab85145b2297aeac6b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 40256, "upload_time": "2020-04-19T16:23:03", "upload_time_iso_8601": "2020-04-19T16:23:03.282018Z", "url": "https://files.pythonhosted.org/packages/10/f7/22838b554e76edae38ad65a3082235a6cdf6f8433f06accc20f64c511418/heist_hemiplasy-0.3.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "22be4819a58b9ac74ef632e01ad433c3", "sha256": "aeb875d014de04d88a5bb57dd1c21f8f8080460ba5880f02617ab11e1d24f10c"}, "downloads": -1, "filename": "heist_hemiplasy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "22be4819a58b9ac74ef632e01ad433c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20312, "upload_time": "2020-04-19T16:23:00", "upload_time_iso_8601": "2020-04-19T16:23:00.346577Z", "url": "https://files.pythonhosted.org/packages/22/25/1f659167133e863fe019032c31935c3b4f9ed47cb506fbd8e3c1ac7f8106/heist_hemiplasy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98ed96c1c690384cb99913ba580324e7", "sha256": "2964d02c57c11829e8b75ab187c14112095cdfe5497004185f893afb7e103255"}, "downloads": -1, "filename": "heist-hemiplasy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "98ed96c1c690384cb99913ba580324e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20530, "upload_time": "2020-04-19T16:23:02", "upload_time_iso_8601": "2020-04-19T16:23:02.353209Z", "url": "https://files.pythonhosted.org/packages/23/a1/9f53c9e478dea51b242783dc0d26f97653c87b7104cb0f994a58dfd8c3c4/heist-hemiplasy-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:50 2020"}