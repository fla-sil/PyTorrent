{"info": {"author": "Leticia Figueiredo", "author_email": "letfreirefigueiredo@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PyCoptimizer\n\nThis framework is made to offer, to the user, simplicity to choose what flags can be used for optimization in compilation time. It provides to you a list with compilation flags that can be used in compilation to find your goal: maximize ou minimize some of your numbers, like throughput or execution time. The idea started in a project on CERN, where I ran a genetic algorithm with a list of compilation flags to select the flags that improve the target code  throughput.\n\nIn this framework, you can define your target code to be improved, define what you want improve (maximize throughput, minimize the execution time or minimize memory usage) with what compilation flags (this list can be made by you or you can use the framework default list) and which technique you want to use. You just need to implement an abstract class, defined by the framework and the parameters to be used.\n\n## Installation\n\n### Dependencies\n\nPyCoptimizer requires:\n\n- Python (>= 2.7.10)\n- Matplotlib (>= 2.0.2)\n- NumPy (>= 1.13.3)\n- Pygmo (>= 2.11)\n\nFor Pygmo package, you can follow the instructions to install in the official website: [Installation Guide](https://esa.github.io/pagmo2/install.html).\n\n### User installation\n\nIf you already have a working installation of numpy, matplotlib and pygmo, the easiest way to install pycoptimizer is using pip\n```\npip install PyCoptimizer\n```\n\n## How to use\n\nYou can see how to use PyCoptimizer into the **examples** folder in any file with **test** in the name.\n\n## Source code\n\nYou can check the latest sources with the command:\n```\ngit clone https://github.com/lefreire/tcc.git\n```\n\n\n## Contact\n\nYou can contact me for any problem in:\n\n- E-mail: letfreirefigueiredo@gmail.com", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache License", "maintainer": "", "maintainer_email": "", "name": "PyCoptimizer", "package_url": "https://pypi.org/project/PyCoptimizer/", "platform": "", "project_url": "https://pypi.org/project/PyCoptimizer/", "project_urls": null, "release_url": "https://pypi.org/project/PyCoptimizer/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Python Code Optimization using compilation flags", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyCoptimizer</h1>\n<p>This framework is made to offer, to the user, simplicity to choose what flags can be used for optimization in compilation time. It provides to you a list with compilation flags that can be used in compilation to find your goal: maximize ou minimize some of your numbers, like throughput or execution time. The idea started in a project on CERN, where I ran a genetic algorithm with a list of compilation flags to select the flags that improve the target code  throughput.</p>\n<p>In this framework, you can define your target code to be improved, define what you want improve (maximize throughput, minimize the execution time or minimize memory usage) with what compilation flags (this list can be made by you or you can use the framework default list) and which technique you want to use. You just need to implement an abstract class, defined by the framework and the parameters to be used.</p>\n<h2>Installation</h2>\n<h3>Dependencies</h3>\n<p>PyCoptimizer requires:</p>\n<ul>\n<li>Python (&gt;= 2.7.10)</li>\n<li>Matplotlib (&gt;= 2.0.2)</li>\n<li>NumPy (&gt;= 1.13.3)</li>\n<li>Pygmo (&gt;= 2.11)</li>\n</ul>\n<p>For Pygmo package, you can follow the instructions to install in the official website: <a href=\"https://esa.github.io/pagmo2/install.html\" rel=\"nofollow\">Installation Guide</a>.</p>\n<h3>User installation</h3>\n<p>If you already have a working installation of numpy, matplotlib and pygmo, the easiest way to install pycoptimizer is using pip</p>\n<pre><code>pip install PyCoptimizer\n</code></pre>\n<h2>How to use</h2>\n<p>You can see how to use PyCoptimizer into the <strong>examples</strong> folder in any file with <strong>test</strong> in the name.</p>\n<h2>Source code</h2>\n<p>You can check the latest sources with the command:</p>\n<pre><code>git clone https://github.com/lefreire/tcc.git\n</code></pre>\n<h2>Contact</h2>\n<p>You can contact me for any problem in:</p>\n<ul>\n<li>E-mail: <a href=\"mailto:letfreirefigueiredo@gmail.com\">letfreirefigueiredo@gmail.com</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7009958, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "998d710acb99ceb236c15f68db88ed30", "sha256": "af99a72c5b1bb24d856cd3f2e7bcd5c211a22b49dda3e921a153c38471cc3501"}, "downloads": -1, "filename": "PyCoptimizer-0.1.tar.gz", "has_sig": false, "md5_digest": "998d710acb99ceb236c15f68db88ed30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5063, "upload_time": "2018-12-05T01:37:33", "upload_time_iso_8601": "2018-12-05T01:37:33.476549Z", "url": "https://files.pythonhosted.org/packages/2e/55/48dfb919e13c116c4423887c6ab222197d5f5ec8a249c479a43e74a0de9e/PyCoptimizer-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "54ad22bcbc3784017e8849884fa5e6fb", "sha256": "81a83ef94cdc2e2046558e2b6b7595c63243e32ffe5844020c49d2f25e188f16"}, "downloads": -1, "filename": "PyCoptimizer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "54ad22bcbc3784017e8849884fa5e6fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5547, "upload_time": "2018-12-05T10:53:20", "upload_time_iso_8601": "2018-12-05T10:53:20.081437Z", "url": "https://files.pythonhosted.org/packages/52/b5/db6a97e5aa23f603e1bb551e3977e9e8c07df5ff6642712da8565cddc9a3/PyCoptimizer-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5a4f741f681e493ff3b9c8f112e6fc36", "sha256": "86e704fad0dad502c4bd05e95836c07837d6401c58f90b2de17ce471b5012f15"}, "downloads": -1, "filename": "PyCoptimizer-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5a4f741f681e493ff3b9c8f112e6fc36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5992, "upload_time": "2020-04-13T13:39:12", "upload_time_iso_8601": "2020-04-13T13:39:12.251926Z", "url": "https://files.pythonhosted.org/packages/bd/8f/8ac3d8d64e907b95a5e3d4368dcd7c4b325d6fc2df4f1093b02c67c7eb13/PyCoptimizer-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a4f741f681e493ff3b9c8f112e6fc36", "sha256": "86e704fad0dad502c4bd05e95836c07837d6401c58f90b2de17ce471b5012f15"}, "downloads": -1, "filename": "PyCoptimizer-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5a4f741f681e493ff3b9c8f112e6fc36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5992, "upload_time": "2020-04-13T13:39:12", "upload_time_iso_8601": "2020-04-13T13:39:12.251926Z", "url": "https://files.pythonhosted.org/packages/bd/8f/8ac3d8d64e907b95a5e3d4368dcd7c4b325d6fc2df4f1093b02c67c7eb13/PyCoptimizer-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:03 2020"}