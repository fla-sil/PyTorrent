{"info": {"author": "Peter Ilfrich", "author_email": "peter.ilfrich@au1.ibm.com", "bugtrack_url": null, "classifiers": [], "description": "# PBU Log Inspector\n\nFlask (pip) and React (npm) integration for [python-basic-utils](https://github.com/ilfrich/python-basic-utils) logs.\n\n## Installation\n\n```bash\npip3 install pbu-log-inspector\nnpm install pbu-log-inspector\n```\n\n## Integration\n\n### Backend\n\n```python\nfrom flask import Flask\nfrom loginspect import register_endpoint\n\napp = Flask(__name__)\nregister_endpoint(app)\napp.run(host=\"0.0.0.0\", port=5444)\n```\n\nThe `register_endpoint` function will register an endpoint `GET /api/_logs`, which will can be used to serve daily logs.\nThere are additional parameters available for this function: \n\n```python\nregister_endpoint(app, log_folder=\"_logs\", api_prefix=\"/api\", log_file_mapping=None, login_check=None)\n```\n\n- The default **`log_folder`** is relative to the start script of your application, since that is the `pbu` default.\n- If you provide a different **`api_prefix`** this will just be the prefix, not the `/_logs` part. E.g. `/rest` would\nresult in an endpoint `/rest/_logs`\n- The **`log_file_mapping`** is optional and only necessary, if you instructed `pbu` to write to different file names\nthan the defaults. When provided, the mapping needs to provide a dictionary with keys representing the default pbu log\nfile names (info.log, debug.log, warning.log, error.log) and their respective values are the name of the log file in \nyour app.\n- If your application includes authentication, provide a function via the **`login_check`** parameter that performs the \nauthentication. No parameters are passed to the function. You can use `from flask import request` and access all request \ndata\n\n**Restrictions**\n\n- The date needs to be the first part of a log message\n- The date needs to be in the format `%Y-%m-%d %H:%M:%S.%s`, e.g. `2019-12-25 13:37:01.567`\n- There is no limit on how many logs the endpoint delivers. This can easily cause large payloads and potentially exceed\noperational limits (e.g. browser performance, response size, ...)\n\n### Frontend\n\n```js\nimport React from \"react\"\nimport LogInspectorContainer from \"pbu-log-inspector\"\n\nconst MyContainer = props => (\n    <div>\n        <LogInspectorContainer />\n    </div>\n)\n```\n\nThe container provides the following properties:\n\n- **`apiPrefix`** - default `\"/api\"` - corresponds to the `api_prefix` parameter configured on the Flask backend\n- **`applyRequestOptions`** - default `null` - a function that takes the base request parameters and has to return the \nparameters for the fetch request, in case authentication is required and headers need to be set\n- **`errorHandler`** - default `null` - a function to handle an error during fetching logs (e.g. show an alert), no \n`return` is expected. The parameter is the error thrown.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ilfrich/pbu-log-inspector", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "pbu-log-inspector", "package_url": "https://pypi.org/project/pbu-log-inspector/", "platform": "", "project_url": "https://pypi.org/project/pbu-log-inspector/", "project_urls": {"Homepage": "https://github.com/ilfrich/pbu-log-inspector"}, "release_url": "https://pypi.org/project/pbu-log-inspector/0.0.2/", "requires_dist": ["flask"], "requires_python": "", "summary": "Flask endpoint delivering filtered log messages via REST", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PBU Log Inspector</h1>\n<p>Flask (pip) and React (npm) integration for <a href=\"https://github.com/ilfrich/python-basic-utils\" rel=\"nofollow\">python-basic-utils</a> logs.</p>\n<h2>Installation</h2>\n<pre>pip3 install pbu-log-inspector\nnpm install pbu-log-inspector\n</pre>\n<h2>Integration</h2>\n<h3>Backend</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">loginspect</span> <span class=\"kn\">import</span> <span class=\"n\">register_endpoint</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">register_endpoint</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5444</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>register_endpoint</code> function will register an endpoint <code>GET /api/_logs</code>, which will can be used to serve daily logs.\nThere are additional parameters available for this function:</p>\n<pre><span class=\"n\">register_endpoint</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">log_folder</span><span class=\"o\">=</span><span class=\"s2\">\"_logs\"</span><span class=\"p\">,</span> <span class=\"n\">api_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"/api\"</span><span class=\"p\">,</span> <span class=\"n\">log_file_mapping</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">login_check</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>The default <strong><code>log_folder</code></strong> is relative to the start script of your application, since that is the <code>pbu</code> default.</li>\n<li>If you provide a different <strong><code>api_prefix</code></strong> this will just be the prefix, not the <code>/_logs</code> part. E.g. <code>/rest</code> would\nresult in an endpoint <code>/rest/_logs</code></li>\n<li>The <strong><code>log_file_mapping</code></strong> is optional and only necessary, if you instructed <code>pbu</code> to write to different file names\nthan the defaults. When provided, the mapping needs to provide a dictionary with keys representing the default pbu log\nfile names (info.log, debug.log, warning.log, error.log) and their respective values are the name of the log file in\nyour app.</li>\n<li>If your application includes authentication, provide a function via the <strong><code>login_check</code></strong> parameter that performs the\nauthentication. No parameters are passed to the function. You can use <code>from flask import request</code> and access all request\ndata</li>\n</ul>\n<p><strong>Restrictions</strong></p>\n<ul>\n<li>The date needs to be the first part of a log message</li>\n<li>The date needs to be in the format <code>%Y-%m-%d %H:%M:%S.%s</code>, e.g. <code>2019-12-25 13:37:01.567</code></li>\n<li>There is no limit on how many logs the endpoint delivers. This can easily cause large payloads and potentially exceed\noperational limits (e.g. browser performance, response size, ...)</li>\n</ul>\n<h3>Frontend</h3>\n<pre><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s2\">\"react\"</span>\n<span class=\"kr\">import</span> <span class=\"nx\">LogInspectorContainer</span> <span class=\"nx\">from</span> <span class=\"s2\">\"pbu-log-inspector\"</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">MyContainer</span> <span class=\"o\">=</span> <span class=\"nx\">props</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">LogInspectorContainer</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The container provides the following properties:</p>\n<ul>\n<li><strong><code>apiPrefix</code></strong> - default <code>\"/api\"</code> - corresponds to the <code>api_prefix</code> parameter configured on the Flask backend</li>\n<li><strong><code>applyRequestOptions</code></strong> - default <code>null</code> - a function that takes the base request parameters and has to return the\nparameters for the fetch request, in case authentication is required and headers need to be set</li>\n<li><strong><code>errorHandler</code></strong> - default <code>null</code> - a function to handle an error during fetching logs (e.g. show an alert), no\n<code>return</code> is expected. The parameter is the error thrown.</li>\n</ul>\n\n          </div>"}, "last_serial": 6405638, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f9b432277a724eae5333c21611e3b6c0", "sha256": "7b1f30d377ee6e88c7579bf3a03080002531b3eef5c49b091816f647709ec572"}, "downloads": -1, "filename": "pbu_log_inspector-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9b432277a724eae5333c21611e3b6c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4166, "upload_time": "2020-01-06T23:37:32", "upload_time_iso_8601": "2020-01-06T23:37:32.750881Z", "url": "https://files.pythonhosted.org/packages/ce/b2/62a145e59de79d1493b7038963035d5ad6a3fa5ff57dfb324e5180161d83/pbu_log_inspector-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64d6d6b7bcad46f3aa5acb9b94068b8a", "sha256": "306ba53ee633f749c46b9d1fac5e8e428d62f70a6eb81acea5ac1a559b976d84"}, "downloads": -1, "filename": "pbu-log-inspector-0.0.1.tar.gz", "has_sig": false, "md5_digest": "64d6d6b7bcad46f3aa5acb9b94068b8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3582, "upload_time": "2020-01-06T23:37:35", "upload_time_iso_8601": "2020-01-06T23:37:35.486095Z", "url": "https://files.pythonhosted.org/packages/9d/1b/f88854c0b68d56a15f3b5917d14f0f61d52d6b9df644982fb87365ff5a8b/pbu-log-inspector-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e772516a605e8027bc03063dcab72efa", "sha256": "05433a12f9520444479b3d46c93b77e8e9d0b05b1b9ef9f251dd722e911bd4fd"}, "downloads": -1, "filename": "pbu_log_inspector-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e772516a605e8027bc03063dcab72efa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5398, "upload_time": "2020-01-06T23:42:17", "upload_time_iso_8601": "2020-01-06T23:42:17.499408Z", "url": "https://files.pythonhosted.org/packages/28/0d/eaaf631f9f1df8c6e8c6c82d8770037cee2a56dd27966f77f291011e2f59/pbu_log_inspector-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5175e453e61a3b4345446e19062c958f", "sha256": "928d98bc9f6b3ed3836e41b0cb2b3ba6c53f2199e29f8010a6a0b692eff69f63"}, "downloads": -1, "filename": "pbu-log-inspector-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5175e453e61a3b4345446e19062c958f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4761, "upload_time": "2020-01-06T23:42:19", "upload_time_iso_8601": "2020-01-06T23:42:19.154901Z", "url": "https://files.pythonhosted.org/packages/18/2e/56532a9ffac6d6f57458cced1c569e73ccef7329168173e3fbd8e92f68ad/pbu-log-inspector-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e772516a605e8027bc03063dcab72efa", "sha256": "05433a12f9520444479b3d46c93b77e8e9d0b05b1b9ef9f251dd722e911bd4fd"}, "downloads": -1, "filename": "pbu_log_inspector-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e772516a605e8027bc03063dcab72efa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5398, "upload_time": "2020-01-06T23:42:17", "upload_time_iso_8601": "2020-01-06T23:42:17.499408Z", "url": "https://files.pythonhosted.org/packages/28/0d/eaaf631f9f1df8c6e8c6c82d8770037cee2a56dd27966f77f291011e2f59/pbu_log_inspector-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5175e453e61a3b4345446e19062c958f", "sha256": "928d98bc9f6b3ed3836e41b0cb2b3ba6c53f2199e29f8010a6a0b692eff69f63"}, "downloads": -1, "filename": "pbu-log-inspector-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5175e453e61a3b4345446e19062c958f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4761, "upload_time": "2020-01-06T23:42:19", "upload_time_iso_8601": "2020-01-06T23:42:19.154901Z", "url": "https://files.pythonhosted.org/packages/18/2e/56532a9ffac6d6f57458cced1c569e73ccef7329168173e3fbd8e92f68ad/pbu-log-inspector-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:32 2020"}