{"info": {"author": "Agendaless Consulting", "author_email": "repoze-dev@lists.repoze.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP :: Indexing/Search"], "description": "==============\nrepoze.catalog\n==============\n\n.. image:: https://travis-ci.org/repoze/repoze.catalog.svg?branch=master\n    :target: https://travis-ci.org/repoze/repoze.catalog\n\nA Python indexing and searching system based on `zope.index`_.\n\n.. _`zope.index`: http://pypi.python.org/pypi/zope.index\n\nSee the ``docs`` subdirectory for documentation or the `online docs <http://docs.repoze.org/catalog/>`_.\n\n\nDeprecation\n-----------\n\nThis project is in maintenance only mode.\n\n`Hypatia <https://hypatia.readthedocs.io/en/latest/index.html>`_ is its successor.\n*repoze.catalog* is an earlier iteration of *Hypatia*,\nwhich is the continuation of the work here.\n\n    \"There is no reason to use repoze.catalog on greenfield projects.\"\n\n    -- Chris McDonough\n\n\n0.9.0 (2019-03-07)\n==================\n\n- Add Travis CI support.\n\n- Drop support for Python 2.6.\n\n- Python 3 compatible\n\n- Add support for Python 3.6 - 3.7\n  [vangheem, agitator, jensens]\n\n0.8.3 (2014-08-07)\n==================\n\n- Fix bug in query with names are None [ebrehault].\n\n- The 'numdocs' return value from 'Catalog.search' is now a subclass of integer\n  with an added attribute, 'total', which gives the caller access to the total\n  size of the result set before being limited by the 'limit' argument.\n\n0.8.2 (2012-04-15)\n==================\n\n- Fix docs rendering.\n\n- Add \"dev\" and \"docs\" aliases to setup.cfg.\n\n0.8.1 (2011-08-17)\n==================\n\n- Harmonized index name / discriminator in catalog setup with content schema\n  and queries used in later examples.  Thanks to Douglas Cerna.\n\n- Fixed semantics of 'applyEq' for the Keyword index. The 'applyEq' (and\n  'applyNotEq') methods now expect scalar values for the query. 'applyAny',\n  'applyAll' and their respective negations should be used to query multiple\n  values.\n\n- Fixed bug in query parser where names inside of 'any' or 'all' calls were\n  not being parsed properly.\n\n- When using CQEs, names may now be embedded inside of a list or tuple,\n  allowing expressions like this: \"tags in any([tag1, tag2])\" where tag1 and\n  tag2 are names that will be resolved at query run time.\n\n0.8.0 (2011-03-20)\n==================\n\n- Deprecated ``.search``-based querying of catalog in favor of newer\n  query language(s) via ``.query``.  See docs for more info.\n\n- Added a ``.docids()`` method to ``CatalogIndex``.\n\n- Deprecated ``repoze.catalog.index.path2.CatalogPathIndex2``.\n\n0.7.3 (2010-08-26)\n==================\n\nFeatures\n--------\n\n- Refuse to pickle instances of ``zodb.broken.Broken`` which are\n  returned as the result of an index attempting to call a callable\n  discriminator function.  This prevents edge cases where instances\n  with out-of-sync code could too easily write Broken objects to the\n  database, leaving them around for the next hapless unpickler to\n  find.  This is particularly a problem because many of our\n  discriminators are *functions*; the Broken machinery attempts to\n  recover the state of a broken object when it is unpickled, but it\n  cannot recover the state of an attempted function call.\n\n0.7.2 (2010-06-17)\n==================\n\nBug Fixes\n---------\n\n- Fix a bug which allowed the document map to map more than one docid\n  onto the same address, which put the reverse and forward document\n  map bookeeping out of sync with each other.\n\nPackaging\n---------\n\n- Move benchmark directory into root of distribution instead of\n  leaving it in package.  It interfered with normal operations of the\n  setuptools testrunner.\n\n- Deactivate \"sortbench\" console script.\n\n- Remove \"Development Status\" Trove classifier.\n\n- Bump version to 0.7.2.\n\n- Disuse nose.collector as test_suite (use normal setuptools test runner).\n\n- Remove (unused) TODO.txt.\n\n- Disuse ez_setup.py.\n\n- Make docs render properly in Google Chrome.\n\nBackwards Incompatibilities\n---------------------------\n\n- When using ``DocumentMap.add`` with a ``docid`` argument that\n  references an existing docid with metadata, that metadata is now\n  removed.  Previously it was retained.\n\n0.7.1 (2009-09-27)\n==================\n\n- Minimally get docs into shape for First PyPI release; no\n  functionality changes from 0.7.0.\n\n0.7.0 (2009-08-03)\n==================\n\n- Fixed bug in ``DocumentMap.add`` which left orphan mappings for previous\n  addresses when adding an existing docid with a new address.\n\n- Added the ability to sort by text relevance. Use the name of the text\n  index as the ``sort_index`` in the query.\n\n0.6.2 (2009-04-15)\n==================\n\n- Add metadata-related APIs to ``repoze.catalog.document.DocumentMap``:\n  ``add_metadata``, ``remove_metadata``, ``get_metadata``.\n  \"Metadata\" is a freeform set of key/value pairs related to a docid.\n  See the API documentation for more information.\n\n0.6.1 (2009-02-25)\n==================\n\n- Fixed constructor inheritance issues which kept ``repoze.catalog``\n  from working under Python 2.6.  Note that this change involved removing\n  the ``*args, **kw`` arguments from index constructors:  those values were\n  never used, but had (bogus) tests.\n\n0.6.0 (2009-02-16)\n==================\n\n- N-Best ascending fieldindex sort was being chosen incorrectly when\n  there was no limit.  Symptom: ``RuntimeError, 'n-best used without\n  limit'``.\n\n0.5.9 (2009-02-16)\n==================\n\n- Add ``reindex_doc`` method as an alias for ``index_doc`` to both\n  CatalogFieldIndex and CatalogKeywordIndex (for performance,\n  ``index_doc`` for both indexes has special case code for reindexing).\n\n0.5.8 (2009-02-16)\n==================\n\n- Speed up path2 index attribute search by using __getitem__ rather\n  than .get in some places.\n\n- Override textindex reindex_doc method: calling index_doc only\n  instead of calling unindex_doc and then index_doc is much more\n  efficient.\n\n0.5.7 (2009-02-14)\n==================\n\n- Attributes returned to attribute checker were not correct.\n\n0.5.6 (2009-02-12)\n==================\n\n- Add \"attribute discriminator\" and \"attribute checker\" support to\n  path2 index.  If an index is created with an attribute\n  discriminator, when any object is indexed, the value of the\n  attribute will be stored in the path index.  The path index will\n  know that that attribute belongs to a particular path.  Later, when\n  the \"attribute checker\" feature of the ``apply`` or ``search``\n  method is used, a user-supplied attribute checker function will be\n  able to filter the result set returned by the index.  This is used\n  by the author primarily to support security-filtered searches of a\n  path index.  It is not otherwise documented.\n\n0.5.5 (2009-02-11)\n==================\n\n- Add a ``reindex_doc`` method to the catalog and to the ``common``\n  shared index base class.  The catalog's ``reindex_doc`` calls each\n  index's ``reindex_doc`` method when called.  The common shared index\n  base class implementation unindexes the docid and then subsequently\n  indexes the document using the docid.  This method can be overridden\n  for specific indexes to do something different on a reindex.\n\n- ``repoze.catalog.indexes.path2.CatalogPathIndex2`` now takes an\n  extra argument to its search method named ``include_path``.  If this\n  is true, the docid set returned will include the docid for the path\n  specified by the path query parameter.  The ``apply`` method of the\n  index allows for the specification of the ``include_path`` as a\n  dictionary member in an ``apply`` call which specifies the query as\n  a dictionary.\n\n- Give ``path2.CatalogPathIndex2`` index a better ``reindex_doc``\n  method than the default.\n\n- The CatalogKeywordIndex's ``apply`` method mutated the query passed\n  in if it was a dict.  To fix, we override the ``apply`` method from\n  the zope.index implementation.\n\n- Added a Range class importable as ``repoze.catalog.Range``.  The\n  Range class should be used to represent a range query to a\n  CatalogFieldIndex.  The old-style of passing a 2-tuple to represent\n  a range is still supported, but will be eventually removed in favor\n  of requring a Range object to represent a Range query.  A Range\n  object can be instantiated ala \"Range(start, end)\".\n\n- It is now possible to pass a sequence of items to the\n  CatalogFieldIndex ``apply`` method.  When a sequence of terms that\n  is passed in is *not* a tuple with two items in it (the previous API\n  representing a range, which is deprecated), it will be considered a\n  query for multiple terms.  The docids returned for each term will be\n  unioned together to form the result.\n\n- It is now possible to pass a dictionary to the CatalogFieldIndex\n  ``apply`` method.  When a dictionary is passed, the member of the\n  dictionary named ``query`` is treated as the query.  It may be a\n  single term, a sequence of terms, or a Range.  An additional\n  dictionary member named ``operator`` may also be specified: when\n  this is specified, it must be one of ``or`` or ``and`` (the default\n  is ``or``).  If the query specifies multiple terms, and the operator\n  is ``or``, the results will be unioned; if the query specifies\n  multiple terms and the operator is ``and``, the results will be\n  intersected.\n\n0.5.4 (2009-02-05)\n==================\n\nFeatures\n--------\n\n- A newer path index implementation importable as\n  ``repoze.catalog.path2.CatalogPathIndex2`` has been added as another\n  index type.  The path2 index type is an improvement inasmuch as it\n  actually uses a graph to represent structure instead of the \"levels\"\n  scheme pioneered within Zope2 (and used by\n  ``repoze.catalog.path.CatalogPathIndex``). By eye, the \"levels\"\n  scheme looks like it can return the wrong results for any given path\n  for a sufficiently dense tree.\n\n- Catalog indexes must now supply an ``apply_intersect`` method; it\n  receives a query and a set of docids (the result intersection \"so\n  far\").  It should have the same sort of return value as the\n  ``apply`` method.  Indexes which inherit from\n  ``common.CatalogIndex`` will inherit a default implementation.\n\n- It is now possible to specify index query/merge order within a\n  catalog query.  See ``Index Query/Merge Order`` in the docs.\n\n0.5.3 (2009-01-05)\n==================\n\nFeatures\n--------\n\n- Better detection of when to use fwdscan on ascending sorts in field\n  indexes.\n\n- Better detection of when to use nbest vs. timsort on ascending sorts\n  in field indexes.\n\n0.5.2 (2009-01-04)\n==================\n\nFeatures\n--------\n\n- Allow a new catalog search method keyword: ``sort_type``.  For\n  ascending sorts, this can be one of ``nbest``, ``fwscan``, or\n  ``timsort``.  For descending sorts, only ``nbest`` and ``timsort``\n  are supported.  This argument allows fine-grained control of what\n  algorithm should be chosen to perform sorting within FieldIndex\n  code.\n\n- Better automatic detection of which sort algorithm to use (when it's\n  not supplied via ``sort_type``) based on empirical testing.\n\n- Depend on zope.index 3.5.0 rather than any earlier version\n  (repoze.catalog fixes migrated upstream in zope.index 3.5.0).\n\n - Add 'sortbench' script to test various field index sort strategies\n   (requires 'benchmark' extra to create charts).\n\nBug Fixes\n---------\n\n- Prevent the potential for a zero division error when attempting to\n  sort an empty set of results.\n\n0.5.1 (2008-12-31)\n==================\n\nFeatures\n--------\n\n- Optimize the choice of fieldindex sort strategy.\n\n- Speed up keyword index merges slightly.\n\n- Fix a bug in the return value of the catalog: it would try to return\n  the minimum of the number of docs or the limit event if there was no\n  limit.\n\nBug Fixes\n---------\n\n- Sean Upton pointed out that the document map code artificially\n  limited the number of documents to half the number that it could\n  actually handle.\n\n0.5 (2008-11-10)\n================\n\nFeatures\n--------\n\n- Add path index.\n\n- Speed up keyword index 'and' (intersection) queries nominally by\n  sorting intersected sets from smallest-to-largest first.\n\n- Benchmarking suite provided by Chris Rossi.\n\n- Add a \"facet\" index\n  (``repoze.catalog.indexes.facet.CatalogFacetIndex``).  This index is\n  much like a keyword index, but unlike a keyword index it contains a\n  facet list (a sequence of known colon-separated values) and accepts\n  values that are sequences of colon-separated terms.  Each term is\n  split on its colons, forming a sequence of categories, then each\n  concatenation of the categories is indexed.  For example, if you\n  indexed a document as ``['style:gucci:handbag']``, and the facet\n  list contained ``'style'``, ``'style:gucci'`` and\n  ``'style:gucci:handbag'``, the document would be indexed three\n  times: as ``style``, as ``style:gucci`` and as\n  ``style:gucci:handbag``.  Querying a facet index returns a set of\n  document ids that match the facets passed in.  A facet index also\n  has a ``counts`` method which provided a set of document ids,\n  returns a dictionary containing \"further constraint information\" for\n  use in a narrowing UI.  This count implementation is not meant for\n  very large-scale sites; it is naive.\n\n0.4 (2008-10-06)\n================\n\nFeatures\n--------\n\n- Speed up keyword index 'or' (union) queries by using a single\n  IFBTree.multiunion instead of multiple calls to IFBTree.union; this\n  is most helpful for speeding up 'or' queries where there are lots of\n  terms in the query sequence.\n\nDocumentation\n-------------\n\n- Add ``overview`` page.\n\n0.3 (2008-10-04)\n================\n\nFeatures\n--------\n\n- Add ``repoze.catalog.document.DocumentMap`` class, which provides a\n  mechanism to map \"addresses\" (paths) to document ids.\n\nDocumentation\n-------------\n\n- Add API documentation for catalog and document map.\n\nBackwards incompatibilities\n---------------------------\n\n- Rename ``searchResults`` method to ``search``.\n\n- Removed ``updateIndex`` and ``updateIndexes`` methods of catalog.\n\n- All index implementations moved into ``repoze.catalog.indexes``.\n\n- All interfaces moved to ``repoze.catalog.interfaces``.\n\n0.2 (2008-09-26)\n================\n\n- Provide ``sort_index`` capability.\n\n0.1 (2008-07-26)\n================\n\n- Initial release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.repoze.org", "keywords": "indexing catalog search", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": "", "maintainer_email": "", "name": "repoze.catalog", "package_url": "https://pypi.org/project/repoze.catalog/", "platform": "", "project_url": "https://pypi.org/project/repoze.catalog/", "project_urls": {"Homepage": "http://www.repoze.org"}, "release_url": "https://pypi.org/project/repoze.catalog/0.9.0/", "requires_dist": ["setuptools", "zope.component", "ZODB3", "zope.index (>=3.5.0)", "PyChart ; extra == 'benchmark'", "Sphinx ; extra == 'docs'", "nose ; extra == 'testing'", "coverage ; extra == 'testing'"], "requires_python": "", "summary": "Searching and indexing based on zope.index", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/repoze/repoze.catalog\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/repoze/repoze.catalog.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72cea87c265799749cd6337a48a7fd8c659a7b98/68747470733a2f2f7472617669732d63692e6f72672f7265706f7a652f7265706f7a652e636174616c6f672e7376673f6272616e63683d6d6173746572\"></a>\n<p>A Python indexing and searching system based on <a href=\"http://pypi.python.org/pypi/zope.index\" rel=\"nofollow\">zope.index</a>.</p>\n<p>See the <tt>docs</tt> subdirectory for documentation or the <a href=\"http://docs.repoze.org/catalog/\" rel=\"nofollow\">online docs</a>.</p>\n<div id=\"deprecation\">\n<h2>Deprecation</h2>\n<p>This project is in maintenance only mode.</p>\n<p><a href=\"https://hypatia.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">Hypatia</a> is its successor.\n<em>repoze.catalog</em> is an earlier iteration of <em>Hypatia</em>,\nwhich is the continuation of the work here.</p>\n<blockquote>\n<p>\u201cThere is no reason to use repoze.catalog on greenfield projects.\u201d</p>\n<p>\u2014Chris McDonough</p>\n</blockquote>\n<div id=\"id1\">\n<h3>0.9.0 (2019-03-07)</h3>\n<ul>\n<li>Add Travis CI support.</li>\n<li>Drop support for Python 2.6.</li>\n<li>Python 3 compatible</li>\n<li>Add support for Python 3.6 - 3.7\n[vangheem, agitator, jensens]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.8.3 (2014-08-07)</h3>\n<ul>\n<li>Fix bug in query with names are None [ebrehault].</li>\n<li>The \u2018numdocs\u2019 return value from \u2018Catalog.search\u2019 is now a subclass of integer\nwith an added attribute, \u2018total\u2019, which gives the caller access to the total\nsize of the result set before being limited by the \u2018limit\u2019 argument.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.8.2 (2012-04-15)</h3>\n<ul>\n<li>Fix docs rendering.</li>\n<li>Add \u201cdev\u201d and \u201cdocs\u201d aliases to setup.cfg.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.8.1 (2011-08-17)</h3>\n<ul>\n<li>Harmonized index name / discriminator in catalog setup with content schema\nand queries used in later examples.  Thanks to Douglas Cerna.</li>\n<li>Fixed semantics of \u2018applyEq\u2019 for the Keyword index. The \u2018applyEq\u2019 (and\n\u2018applyNotEq\u2019) methods now expect scalar values for the query. \u2018applyAny\u2019,\n\u2018applyAll\u2019 and their respective negations should be used to query multiple\nvalues.</li>\n<li>Fixed bug in query parser where names inside of \u2018any\u2019 or \u2018all\u2019 calls were\nnot being parsed properly.</li>\n<li>When using CQEs, names may now be embedded inside of a list or tuple,\nallowing expressions like this: \u201ctags in any([tag1, tag2])\u201d where tag1 and\ntag2 are names that will be resolved at query run time.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.8.0 (2011-03-20)</h3>\n<ul>\n<li>Deprecated <tt>.search</tt>-based querying of catalog in favor of newer\nquery language(s) via <tt>.query</tt>.  See docs for more info.</li>\n<li>Added a <tt>.docids()</tt> method to <tt>CatalogIndex</tt>.</li>\n<li>Deprecated <tt>repoze.catalog.index.path2.CatalogPathIndex2</tt>.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.7.3 (2010-08-26)</h3>\n</div>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Refuse to pickle instances of <tt>zodb.broken.Broken</tt> which are\nreturned as the result of an index attempting to call a callable\ndiscriminator function.  This prevents edge cases where instances\nwith out-of-sync code could too easily write Broken objects to the\ndatabase, leaving them around for the next hapless unpickler to\nfind.  This is particularly a problem because many of our\ndiscriminators are <em>functions</em>; the Broken machinery attempts to\nrecover the state of a broken object when it is unpickled, but it\ncannot recover the state of an attempted function call.</li>\n</ul>\n<div id=\"id7\">\n<h3>0.7.2 (2010-06-17)</h3>\n</div>\n</div>\n<div id=\"bug-fixes\">\n<h2>Bug Fixes</h2>\n<ul>\n<li>Fix a bug which allowed the document map to map more than one docid\nonto the same address, which put the reverse and forward document\nmap bookeeping out of sync with each other.</li>\n</ul>\n</div>\n<div id=\"packaging\">\n<h2>Packaging</h2>\n<ul>\n<li>Move benchmark directory into root of distribution instead of\nleaving it in package.  It interfered with normal operations of the\nsetuptools testrunner.</li>\n<li>Deactivate \u201csortbench\u201d console script.</li>\n<li>Remove \u201cDevelopment Status\u201d Trove classifier.</li>\n<li>Bump version to 0.7.2.</li>\n<li>Disuse nose.collector as test_suite (use normal setuptools test runner).</li>\n<li>Remove (unused) TODO.txt.</li>\n<li>Disuse ez_setup.py.</li>\n<li>Make docs render properly in Google Chrome.</li>\n</ul>\n</div>\n<div id=\"backwards-incompatibilities\">\n<h2>Backwards Incompatibilities</h2>\n<ul>\n<li>When using <tt>DocumentMap.add</tt> with a <tt>docid</tt> argument that\nreferences an existing docid with metadata, that metadata is now\nremoved.  Previously it was retained.</li>\n</ul>\n<div id=\"id8\">\n<h3>0.7.1 (2009-09-27)</h3>\n<ul>\n<li>Minimally get docs into shape for First PyPI release; no\nfunctionality changes from 0.7.0.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.7.0 (2009-08-03)</h3>\n<ul>\n<li>Fixed bug in <tt>DocumentMap.add</tt> which left orphan mappings for previous\naddresses when adding an existing docid with a new address.</li>\n<li>Added the ability to sort by text relevance. Use the name of the text\nindex as the <tt>sort_index</tt> in the query.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.6.2 (2009-04-15)</h3>\n<ul>\n<li>Add metadata-related APIs to <tt>repoze.catalog.document.DocumentMap</tt>:\n<tt>add_metadata</tt>, <tt>remove_metadata</tt>, <tt>get_metadata</tt>.\n\u201cMetadata\u201d is a freeform set of key/value pairs related to a docid.\nSee the API documentation for more information.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.6.1 (2009-02-25)</h3>\n<ul>\n<li>Fixed constructor inheritance issues which kept <tt>repoze.catalog</tt>\nfrom working under Python 2.6.  Note that this change involved removing\nthe <tt>*args, **kw</tt> arguments from index constructors:  those values were\nnever used, but had (bogus) tests.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.6.0 (2009-02-16)</h3>\n<ul>\n<li>N-Best ascending fieldindex sort was being chosen incorrectly when\nthere was no limit.  Symptom: <tt>RuntimeError, <span class=\"pre\">'n-best</span> used without\nlimit'</tt>.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.5.9 (2009-02-16)</h3>\n<ul>\n<li>Add <tt>reindex_doc</tt> method as an alias for <tt>index_doc</tt> to both\nCatalogFieldIndex and CatalogKeywordIndex (for performance,\n<tt>index_doc</tt> for both indexes has special case code for reindexing).</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.5.8 (2009-02-16)</h3>\n<ul>\n<li>Speed up path2 index attribute search by using __getitem__ rather\nthan .get in some places.</li>\n<li>Override textindex reindex_doc method: calling index_doc only\ninstead of calling unindex_doc and then index_doc is much more\nefficient.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.5.7 (2009-02-14)</h3>\n<ul>\n<li>Attributes returned to attribute checker were not correct.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.5.6 (2009-02-12)</h3>\n<ul>\n<li>Add \u201cattribute discriminator\u201d and \u201cattribute checker\u201d support to\npath2 index.  If an index is created with an attribute\ndiscriminator, when any object is indexed, the value of the\nattribute will be stored in the path index.  The path index will\nknow that that attribute belongs to a particular path.  Later, when\nthe \u201cattribute checker\u201d feature of the <tt>apply</tt> or <tt>search</tt>\nmethod is used, a user-supplied attribute checker function will be\nable to filter the result set returned by the index.  This is used\nby the author primarily to support security-filtered searches of a\npath index.  It is not otherwise documented.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.5.5 (2009-02-11)</h3>\n<ul>\n<li>Add a <tt>reindex_doc</tt> method to the catalog and to the <tt>common</tt>\nshared index base class.  The catalog\u2019s <tt>reindex_doc</tt> calls each\nindex\u2019s <tt>reindex_doc</tt> method when called.  The common shared index\nbase class implementation unindexes the docid and then subsequently\nindexes the document using the docid.  This method can be overridden\nfor specific indexes to do something different on a reindex.</li>\n<li><tt>repoze.catalog.indexes.path2.CatalogPathIndex2</tt> now takes an\nextra argument to its search method named <tt>include_path</tt>.  If this\nis true, the docid set returned will include the docid for the path\nspecified by the path query parameter.  The <tt>apply</tt> method of the\nindex allows for the specification of the <tt>include_path</tt> as a\ndictionary member in an <tt>apply</tt> call which specifies the query as\na dictionary.</li>\n<li>Give <tt>path2.CatalogPathIndex2</tt> index a better <tt>reindex_doc</tt>\nmethod than the default.</li>\n<li>The CatalogKeywordIndex\u2019s <tt>apply</tt> method mutated the query passed\nin if it was a dict.  To fix, we override the <tt>apply</tt> method from\nthe zope.index implementation.</li>\n<li>Added a Range class importable as <tt>repoze.catalog.Range</tt>.  The\nRange class should be used to represent a range query to a\nCatalogFieldIndex.  The old-style of passing a 2-tuple to represent\na range is still supported, but will be eventually removed in favor\nof requring a Range object to represent a Range query.  A Range\nobject can be instantiated ala \u201cRange(start, end)\u201d.</li>\n<li>It is now possible to pass a sequence of items to the\nCatalogFieldIndex <tt>apply</tt> method.  When a sequence of terms that\nis passed in is <em>not</em> a tuple with two items in it (the previous API\nrepresenting a range, which is deprecated), it will be considered a\nquery for multiple terms.  The docids returned for each term will be\nunioned together to form the result.</li>\n<li>It is now possible to pass a dictionary to the CatalogFieldIndex\n<tt>apply</tt> method.  When a dictionary is passed, the member of the\ndictionary named <tt>query</tt> is treated as the query.  It may be a\nsingle term, a sequence of terms, or a Range.  An additional\ndictionary member named <tt>operator</tt> may also be specified: when\nthis is specified, it must be one of <tt>or</tt> or <tt>and</tt> (the default\nis <tt>or</tt>).  If the query specifies multiple terms, and the operator\nis <tt>or</tt>, the results will be unioned; if the query specifies\nmultiple terms and the operator is <tt>and</tt>, the results will be\nintersected.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.5.4 (2009-02-05)</h3>\n</div>\n</div>\n<div id=\"id19\">\n<h2>Features</h2>\n<ul>\n<li>A newer path index implementation importable as\n<tt>repoze.catalog.path2.CatalogPathIndex2</tt> has been added as another\nindex type.  The path2 index type is an improvement inasmuch as it\nactually uses a graph to represent structure instead of the \u201clevels\u201d\nscheme pioneered within Zope2 (and used by\n<tt>repoze.catalog.path.CatalogPathIndex</tt>). By eye, the \u201clevels\u201d\nscheme looks like it can return the wrong results for any given path\nfor a sufficiently dense tree.</li>\n<li>Catalog indexes must now supply an <tt>apply_intersect</tt> method; it\nreceives a query and a set of docids (the result intersection \u201cso\nfar\u201d).  It should have the same sort of return value as the\n<tt>apply</tt> method.  Indexes which inherit from\n<tt>common.CatalogIndex</tt> will inherit a default implementation.</li>\n<li>It is now possible to specify index query/merge order within a\ncatalog query.  See <tt>Index Query/Merge Order</tt> in the docs.</li>\n</ul>\n<div id=\"id20\">\n<h3>0.5.3 (2009-01-05)</h3>\n</div>\n</div>\n<div id=\"id21\">\n<h2>Features</h2>\n<ul>\n<li>Better detection of when to use fwdscan on ascending sorts in field\nindexes.</li>\n<li>Better detection of when to use nbest vs. timsort on ascending sorts\nin field indexes.</li>\n</ul>\n<div id=\"id22\">\n<h3>0.5.2 (2009-01-04)</h3>\n</div>\n</div>\n<div id=\"id23\">\n<h2>Features</h2>\n<ul>\n<li>Allow a new catalog search method keyword: <tt>sort_type</tt>.  For\nascending sorts, this can be one of <tt>nbest</tt>, <tt>fwscan</tt>, or\n<tt>timsort</tt>.  For descending sorts, only <tt>nbest</tt> and <tt>timsort</tt>\nare supported.  This argument allows fine-grained control of what\nalgorithm should be chosen to perform sorting within FieldIndex\ncode.</li>\n<li>Better automatic detection of which sort algorithm to use (when it\u2019s\nnot supplied via <tt>sort_type</tt>) based on empirical testing.</li>\n<li>Depend on zope.index 3.5.0 rather than any earlier version\n(repoze.catalog fixes migrated upstream in zope.index 3.5.0).</li>\n</ul>\n<blockquote>\n<ul>\n<li>Add \u2018sortbench\u2019 script to test various field index sort strategies\n(requires \u2018benchmark\u2019 extra to create charts).</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id24\">\n<h2>Bug Fixes</h2>\n<ul>\n<li>Prevent the potential for a zero division error when attempting to\nsort an empty set of results.</li>\n</ul>\n<div id=\"id25\">\n<h3>0.5.1 (2008-12-31)</h3>\n</div>\n</div>\n<div id=\"id26\">\n<h2>Features</h2>\n<ul>\n<li>Optimize the choice of fieldindex sort strategy.</li>\n<li>Speed up keyword index merges slightly.</li>\n<li>Fix a bug in the return value of the catalog: it would try to return\nthe minimum of the number of docs or the limit event if there was no\nlimit.</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h2>Bug Fixes</h2>\n<ul>\n<li>Sean Upton pointed out that the document map code artificially\nlimited the number of documents to half the number that it could\nactually handle.</li>\n</ul>\n<div id=\"id28\">\n<h3>0.5 (2008-11-10)</h3>\n</div>\n</div>\n<div id=\"id29\">\n<h2>Features</h2>\n<ul>\n<li>Add path index.</li>\n<li>Speed up keyword index \u2018and\u2019 (intersection) queries nominally by\nsorting intersected sets from smallest-to-largest first.</li>\n<li>Benchmarking suite provided by Chris Rossi.</li>\n<li>Add a \u201cfacet\u201d index\n(<tt>repoze.catalog.indexes.facet.CatalogFacetIndex</tt>).  This index is\nmuch like a keyword index, but unlike a keyword index it contains a\nfacet list (a sequence of known colon-separated values) and accepts\nvalues that are sequences of colon-separated terms.  Each term is\nsplit on its colons, forming a sequence of categories, then each\nconcatenation of the categories is indexed.  For example, if you\nindexed a document as <tt>['style:gucci:handbag']</tt>, and the facet\nlist contained <tt>'style'</tt>, <tt>'style:gucci'</tt> and\n<tt>'style:gucci:handbag'</tt>, the document would be indexed three\ntimes: as <tt>style</tt>, as <tt>style:gucci</tt> and as\n<tt>style:gucci:handbag</tt>.  Querying a facet index returns a set of\ndocument ids that match the facets passed in.  A facet index also\nhas a <tt>counts</tt> method which provided a set of document ids,\nreturns a dictionary containing \u201cfurther constraint information\u201d for\nuse in a narrowing UI.  This count implementation is not meant for\nvery large-scale sites; it is naive.</li>\n</ul>\n<div id=\"id30\">\n<h3>0.4 (2008-10-06)</h3>\n</div>\n</div>\n<div id=\"id31\">\n<h2>Features</h2>\n<ul>\n<li>Speed up keyword index \u2018or\u2019 (union) queries by using a single\nIFBTree.multiunion instead of multiple calls to IFBTree.union; this\nis most helpful for speeding up \u2018or\u2019 queries where there are lots of\nterms in the query sequence.</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<ul>\n<li>Add <tt>overview</tt> page.</li>\n</ul>\n<div id=\"id32\">\n<h3>0.3 (2008-10-04)</h3>\n</div>\n</div>\n<div id=\"id33\">\n<h2>Features</h2>\n<ul>\n<li>Add <tt>repoze.catalog.document.DocumentMap</tt> class, which provides a\nmechanism to map \u201caddresses\u201d (paths) to document ids.</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h2>Documentation</h2>\n<ul>\n<li>Add API documentation for catalog and document map.</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h2>Backwards incompatibilities</h2>\n<ul>\n<li>Rename <tt>searchResults</tt> method to <tt>search</tt>.</li>\n<li>Removed <tt>updateIndex</tt> and <tt>updateIndexes</tt> methods of catalog.</li>\n<li>All index implementations moved into <tt>repoze.catalog.indexes</tt>.</li>\n<li>All interfaces moved to <tt>repoze.catalog.interfaces</tt>.</li>\n</ul>\n<div id=\"id36\">\n<h3>0.2 (2008-09-26)</h3>\n<ul>\n<li>Provide <tt>sort_index</tt> capability.</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h3>0.1 (2008-07-26)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4910975, "releases": {"0.7.0": [{"comment_text": "", "digests": {"md5": "71f23c4c0f299c4477771f47c5b08eea", "sha256": "53527a2cfb409e00ede2235292f649fb3a5ab8946e56b08337f8a08952089c4f"}, "downloads": -1, "filename": "repoze.catalog-0.7.0.tar.gz", "has_sig": false, "md5_digest": "71f23c4c0f299c4477771f47c5b08eea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60823, "upload_time": "2009-08-04T00:38:05", "upload_time_iso_8601": "2009-08-04T00:38:05.303611Z", "url": "https://files.pythonhosted.org/packages/dc/7b/5faee50a00f18a6b96b91e9068abb3af91a1adc1a30a5874d3c1eef975a2/repoze.catalog-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "b9218beebb0c48aabe55a6842a27de0b", "sha256": "5be14d369a95b425f0bf8e260638c92567957a0528c9b8a7d6b560c9e19fddf3"}, "downloads": -1, "filename": "repoze.catalog-0.7.1.tar.gz", "has_sig": false, "md5_digest": "b9218beebb0c48aabe55a6842a27de0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63203, "upload_time": "2009-09-27T19:10:10", "upload_time_iso_8601": "2009-09-27T19:10:10.662139Z", "url": "https://files.pythonhosted.org/packages/25/05/fe83491d552fb8f6757250459034b24c3b83028b3bfd59194864f527282c/repoze.catalog-0.7.1.tar.gz", "yanked": false}], "0.7.1dev": [{"comment_text": "", "digests": {"md5": "2e360b8c58af3517c2b19b6269eb8f5b", "sha256": "9ded64fbcfb294eaddbbf9a4dd266e8656ec60932aeb85d9a2b584ffb21eda75"}, "downloads": -1, "filename": "repoze.catalog-0.7.1dev.tar.gz", "has_sig": false, "md5_digest": "2e360b8c58af3517c2b19b6269eb8f5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63200, "upload_time": "2009-09-27T19:08:32", "upload_time_iso_8601": "2009-09-27T19:08:32.132583Z", "url": "https://files.pythonhosted.org/packages/da/78/b55084ffb177a1a6e89d2ed8e2cbee4054dd53431e4a05ac7854262cb3c4/repoze.catalog-0.7.1dev.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "12fcf32321200d2bcdb65d1d060f1c0c", "sha256": "b42ba67821416570ae456d47ccfe5f183397942b6f36fa3ba74413737559ed6b"}, "downloads": -1, "filename": "repoze.catalog-0.7.2.tar.gz", "has_sig": false, "md5_digest": "12fcf32321200d2bcdb65d1d060f1c0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58999, "upload_time": "2010-06-17T20:04:10", "upload_time_iso_8601": "2010-06-17T20:04:10.084863Z", "url": "https://files.pythonhosted.org/packages/6f/8c/58bd76ab9c5f407a3e898e0513664e57ea7daa2194dc55437e53256e1d2a/repoze.catalog-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "ecf05b25c79fb01c01c33345cc90696f", "sha256": "b9f91849fa83f26f38fe15aff8c83e9f7cca7646654084a328eff6710d09371a"}, "downloads": -1, "filename": "repoze.catalog-0.7.3.tar.gz", "has_sig": false, "md5_digest": "ecf05b25c79fb01c01c33345cc90696f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59568, "upload_time": "2010-08-26T19:40:34", "upload_time_iso_8601": "2010-08-26T19:40:34.435265Z", "url": "https://files.pythonhosted.org/packages/25/6d/1d286a042ec84d8db55d114e3b0e9e4d9fc57f803e45c644ecd6c5376a59/repoze.catalog-0.7.3.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "6501d7af577df143900b67566f090516", "sha256": "c27ce25e2c49b72ca1d0f93c0418f694d4eeec2e5246eee3d46b95baf3cf2773"}, "downloads": -1, "filename": "repoze.catalog-0.8.0.tar.gz", "has_sig": false, "md5_digest": "6501d7af577df143900b67566f090516", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99132, "upload_time": "2011-03-21T02:15:14", "upload_time_iso_8601": "2011-03-21T02:15:14.396118Z", "url": "https://files.pythonhosted.org/packages/bc/09/fbf2853f5b78a59a000e1b9d969f84e286748c1ad1b756f1a7e9a031589e/repoze.catalog-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "a96c74d3bfdfffd111dd22be79202542", "sha256": "6ace60b9670044621202d409b23b14ce76e9f3d8156eb551ffd81f8bbc4ecda0"}, "downloads": -1, "filename": "repoze.catalog-0.8.1.tar.gz", "has_sig": false, "md5_digest": "a96c74d3bfdfffd111dd22be79202542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59800, "upload_time": "2011-08-17T19:58:20", "upload_time_iso_8601": "2011-08-17T19:58:20.964294Z", "url": "https://files.pythonhosted.org/packages/f0/02/ac43073d06d9b5b89e87ec49b63feea7705f86b874be569b366ed94321c0/repoze.catalog-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "235229f74f72bf76030ffaa2c6e8219a", "sha256": "95a1290590e61732452735d2a56f63d5195b2a31428c27498804d9defe53cd54"}, "downloads": -1, "filename": "repoze.catalog-0.8.2.tar.gz", "has_sig": false, "md5_digest": "235229f74f72bf76030ffaa2c6e8219a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101466, "upload_time": "2012-04-15T10:20:58", "upload_time_iso_8601": "2012-04-15T10:20:58.577999Z", "url": "https://files.pythonhosted.org/packages/50/9b/88dd57a315d48195208ec3212a77094ae6f5ed7d65cc8d5a804f52b2c4d8/repoze.catalog-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "170d0656e41ce3d6f2a4ce967dbaf4d4", "sha256": "1e1564162aca51c6cadd8b17f42272a8069b3da7b701eda0c4010da413cac927"}, "downloads": -1, "filename": "repoze.catalog-0.8.3.tar.gz", "has_sig": false, "md5_digest": "170d0656e41ce3d6f2a4ce967dbaf4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105613, "upload_time": "2014-08-07T17:45:18", "upload_time_iso_8601": "2014-08-07T17:45:18.043461Z", "url": "https://files.pythonhosted.org/packages/cb/14/c0ba31d32f5c21dcc7bc807cd6690f668cb904550def2f734939658ba1b4/repoze.catalog-0.8.3.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "6f1b481e56c362dd3299a418b9673b2d", "sha256": "3434026513f67e442be4ba0ff7aedc4264b6e936226051b79b53bf46d2a82792"}, "downloads": -1, "filename": "repoze.catalog-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6f1b481e56c362dd3299a418b9673b2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87880, "upload_time": "2019-03-07T14:54:52", "upload_time_iso_8601": "2019-03-07T14:54:52.357752Z", "url": "https://files.pythonhosted.org/packages/73/09/6445c23bc7b04951b88e02fcaa8cb665f95812d290f0650bbd05c6525dc6/repoze.catalog-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8057746b6a82febd4d6c1c0bab99e55c", "sha256": "7760813dac15128a55016a8367c87a2c6045aafdc8137aa72ea01dc36d442728"}, "downloads": -1, "filename": "repoze.catalog-0.9.0.tar.gz", "has_sig": false, "md5_digest": "8057746b6a82febd4d6c1c0bab99e55c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101757, "upload_time": "2019-03-07T14:54:54", "upload_time_iso_8601": "2019-03-07T14:54:54.039994Z", "url": "https://files.pythonhosted.org/packages/91/42/12833c4a1f0f546b9acfc95318d23c0fc5ece9bd318dae5c9fa339c0340b/repoze.catalog-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f1b481e56c362dd3299a418b9673b2d", "sha256": "3434026513f67e442be4ba0ff7aedc4264b6e936226051b79b53bf46d2a82792"}, "downloads": -1, "filename": "repoze.catalog-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6f1b481e56c362dd3299a418b9673b2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87880, "upload_time": "2019-03-07T14:54:52", "upload_time_iso_8601": "2019-03-07T14:54:52.357752Z", "url": "https://files.pythonhosted.org/packages/73/09/6445c23bc7b04951b88e02fcaa8cb665f95812d290f0650bbd05c6525dc6/repoze.catalog-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8057746b6a82febd4d6c1c0bab99e55c", "sha256": "7760813dac15128a55016a8367c87a2c6045aafdc8137aa72ea01dc36d442728"}, "downloads": -1, "filename": "repoze.catalog-0.9.0.tar.gz", "has_sig": false, "md5_digest": "8057746b6a82febd4d6c1c0bab99e55c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101757, "upload_time": "2019-03-07T14:54:54", "upload_time_iso_8601": "2019-03-07T14:54:54.039994Z", "url": "https://files.pythonhosted.org/packages/91/42/12833c4a1f0f546b9acfc95318d23c0fc5ece9bd318dae5c9fa339c0340b/repoze.catalog-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:27 2020"}