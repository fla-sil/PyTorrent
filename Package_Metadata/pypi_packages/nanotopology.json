{"info": {"author": "Kiruthika J", "author_email": "kiruthika.17cs@kct.ac.in", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# Nanotopology\nThe Python project to check the similarity of two graphs using nano sets.\n\n## nanosets.py file is used to find nanosets of graph\n\n### Input data\n1.List of all vertices of graph.\n\n2.Dictionary that contains vertices of graph as key and adjacent vertices as value.\n\n### Function explanation\n1. Parameters of function **vh** is the list of all vertices of graph(s).\n2. Parameters of function **lower_approximation** and **upper_approximation** are dictionary and the value returned by \n   function vh.\n3. Parameters of function **boundary_region** are the values returned from lower-approximation and upper_approximation.\n4. **nanoset** is obtained by passing the values returned from lower_approximation, upper_approximation and boundary_region.\n\n## graph_euivalence.py file is used to check whether two graphs are isomorphic or not.\nDictionary that contains nodes(key) and adjacent nodes(values) of each graphs are directly passed to the equality function. \n\nFinal result will be isomorphic vertices of second graph to the first graph if two graphs are similar else false statement(graphs are not similar) will be returned.\n\n# Example\n## Input\nd1 = { 1: [1,2,4,6], 2: [1,2,3], 3: [2,3,4], 4:[1,2,4,6], 5:[4,5,6], 6:[1,5,6] } \n\nd2 = { a: [a,b,c,f], b: [b,e,d,a], c:[a,d,c], d:[b,c,d], e:[b,f,e], f:[e,f,a] }\n\n## Output\ntwo graphs are similar\n\nmatching nodes\n\n[['a', 'c', 'd', 'b', 'e', 'f'], ['a', 'd', 'c', 'b', 'f', 'e'], ['a', 'e', 'f', 'b', 'c', 'd'], ['a', 'f', 'e', 'b', 'd', 'c'], ['b', 'c', 'd', 'a', 'e', 'f'], ['b', 'd', 'c', 'a', 'f', 'e'], ['b', 'e', 'f', 'a', 'c', 'd'], ['b', 'f', 'e', 'a', 'd', 'c']] \n\n\n# Dependencies\n\n1.Python >= 2.6\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/J-Kiruthika/Nanotopology", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nanotopology", "package_url": "https://pypi.org/project/nanotopology/", "platform": "", "project_url": "https://pypi.org/project/nanotopology/", "project_urls": {"Homepage": "https://github.com/J-Kiruthika/Nanotopology"}, "release_url": "https://pypi.org/project/nanotopology/1.0.1/", "requires_dist": null, "requires_python": ">=2.6", "summary": "A Python package to check the similarity of two graphs using nanotopology.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Nanotopology</h1>\n<p>The Python project to check the similarity of two graphs using nano sets.</p>\n<h2>nanosets.py file is used to find nanosets of graph</h2>\n<h3>Input data</h3>\n<p>1.List of all vertices of graph.</p>\n<p>2.Dictionary that contains vertices of graph as key and adjacent vertices as value.</p>\n<h3>Function explanation</h3>\n<ol>\n<li>Parameters of function <strong>vh</strong> is the list of all vertices of graph(s).</li>\n<li>Parameters of function <strong>lower_approximation</strong> and <strong>upper_approximation</strong> are dictionary and the value returned by\nfunction vh.</li>\n<li>Parameters of function <strong>boundary_region</strong> are the values returned from lower-approximation and upper_approximation.</li>\n<li><strong>nanoset</strong> is obtained by passing the values returned from lower_approximation, upper_approximation and boundary_region.</li>\n</ol>\n<h2>graph_euivalence.py file is used to check whether two graphs are isomorphic or not.</h2>\n<p>Dictionary that contains nodes(key) and adjacent nodes(values) of each graphs are directly passed to the equality function.</p>\n<p>Final result will be isomorphic vertices of second graph to the first graph if two graphs are similar else false statement(graphs are not similar) will be returned.</p>\n<h1>Example</h1>\n<h2>Input</h2>\n<p>d1 = { 1: [1,2,4,6], 2: [1,2,3], 3: [2,3,4], 4:[1,2,4,6], 5:[4,5,6], 6:[1,5,6] }</p>\n<p>d2 = { a: [a,b,c,f], b: [b,e,d,a], c:[a,d,c], d:[b,c,d], e:[b,f,e], f:[e,f,a] }</p>\n<h2>Output</h2>\n<p>two graphs are similar</p>\n<p>matching nodes</p>\n<p>[['a', 'c', 'd', 'b', 'e', 'f'], ['a', 'd', 'c', 'b', 'f', 'e'], ['a', 'e', 'f', 'b', 'c', 'd'], ['a', 'f', 'e', 'b', 'd', 'c'], ['b', 'c', 'd', 'a', 'e', 'f'], ['b', 'd', 'c', 'a', 'f', 'e'], ['b', 'e', 'f', 'a', 'c', 'd'], ['b', 'f', 'e', 'a', 'd', 'c']]</p>\n<h1>Dependencies</h1>\n<p>1.Python &gt;= 2.6</p>\n\n          </div>"}, "last_serial": 6695846, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "34de15105ab11ae32dcb3d5abb5b356c", "sha256": "126b3ecde865935e5f6b2468cba60fe918f64b4aa0e227074c9cb95af2e40cf5"}, "downloads": -1, "filename": "nanotopology-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "34de15105ab11ae32dcb3d5abb5b356c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6", "size": 4166, "upload_time": "2019-12-08T20:25:57", "upload_time_iso_8601": "2019-12-08T20:25:57.865920Z", "url": "https://files.pythonhosted.org/packages/36/10/0a3298b5464916339a44df09d0f45be0631046587e43dd886ece7fd7526a/nanotopology-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8eeaa77cfeef094f5c59441e69d2801", "sha256": "fc1777ec4892193e21cfa2a7fa0a137b57ac7da2a7bbc70181f9f4d9db9c5d82"}, "downloads": -1, "filename": "nanotopology-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b8eeaa77cfeef094f5c59441e69d2801", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 3428, "upload_time": "2019-12-08T20:26:00", "upload_time_iso_8601": "2019-12-08T20:26:00.551953Z", "url": "https://files.pythonhosted.org/packages/91/4c/fe3ee7ba6215713004f1162386e1f659db5fcb64ccb8756ca17d85974f9e/nanotopology-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34de15105ab11ae32dcb3d5abb5b356c", "sha256": "126b3ecde865935e5f6b2468cba60fe918f64b4aa0e227074c9cb95af2e40cf5"}, "downloads": -1, "filename": "nanotopology-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "34de15105ab11ae32dcb3d5abb5b356c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6", "size": 4166, "upload_time": "2019-12-08T20:25:57", "upload_time_iso_8601": "2019-12-08T20:25:57.865920Z", "url": "https://files.pythonhosted.org/packages/36/10/0a3298b5464916339a44df09d0f45be0631046587e43dd886ece7fd7526a/nanotopology-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8eeaa77cfeef094f5c59441e69d2801", "sha256": "fc1777ec4892193e21cfa2a7fa0a137b57ac7da2a7bbc70181f9f4d9db9c5d82"}, "downloads": -1, "filename": "nanotopology-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b8eeaa77cfeef094f5c59441e69d2801", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 3428, "upload_time": "2019-12-08T20:26:00", "upload_time_iso_8601": "2019-12-08T20:26:00.551953Z", "url": "https://files.pythonhosted.org/packages/91/4c/fe3ee7ba6215713004f1162386e1f659db5fcb64ccb8756ca17d85974f9e/nanotopology-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:35 2020"}