{"info": {"author": "Carmen Bianca Bakker", "author_email": "carmenbianca@fsfe.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication", "License :: OSI Approved :: Apache Software License", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<!--\nSPDX-FileCopyrightText: 2017 Free Software Foundation Europe e.V. <https://fsfe.org>\n\nSPDX-License-Identifier: CC-BY-SA-4.0\n-->\n\n# reuse\n\n[![](https://img.shields.io/pypi/v/reuse.svg)](https://pypi.python.org/pypi/reuse)\n[![](https://img.shields.io/pypi/pyversions/reuse.svg)](https://pypi.python.org/pypi/reuse)\n[![REUSE status](https://api.reuse.software/badge/github.com/fsfe/reuse-tool)](https://api.reuse.software/info/github.com/fsfe/reuse-tool)\n[![](https://img.shields.io/badge/readme_style-standard-brightgreen.svg)](https://github.com/RichardLitt/standard-readme)\n\n> reuse is a tool for compliance with the [REUSE](https://reuse.software/)\n> recommendations.\n\n- Documentation: <https://reuse.readthedocs.io> and <https://reuse.software>\n- Source code: <https://github.com/fsfe/reuse-tool>\n- PyPI: <https://pypi.python.org/pypi/reuse>\n- REUSE: 3.0\n- Python: 3.6+\n\n## Background\n\nCopyright and licensing is difficult, especially when reusing software from\ndifferent projects that are released under various different licenses.\n[REUSE](https://reuse.software) was started by the [Free Software Foundation\nEurope](https://fsfe.org) (FSFE) to provide a set of recommendations to make\nlicensing your Free Software projects easier. Not only do these recommendations\nmake it easier for you to declare the licenses under which your works are\nreleased, but they also make it easier for a computer to understand how your\nproject is licensed.\n\nAs a short summary, the recommendations are threefold:\n\n1. Choose and provide licenses\n2. Add copyright and licensing information to each file\n3. Confirm REUSE compliance\n\nYou are recommended to read [our\ntutorial](https://reuse.software/tutorial) for a step-by-step guide\nthrough these three steps. The [FAQ](https://reuse.software/faq) covers\nbasic questions about licensing, copyright, and more complex use cases.\nAdvanced users and integrators will find the [full\nspecification](https://reuse.software/spec) helpful.\n\nThis tool exists to facilitate the developer in complying with the above\nrecommendations.\n\nThere are [other tools](https://reuse.software/comparison) that have a\nlot more features and functionality surrounding the analysis and\ninspection of copyright and licenses in software projects. The REUSE\nhelper tool, on the other hand, is solely designed to be a simple tool\nto assist in compliance with the REUSE recommendations.\n\n## Install\n\n### Installation via pip\n\nTo install reuse, you need to have the following pieces of software on\nyour computer:\n\n- Python 3.6+\n- pip\n\nYou then only need to run the following command:\n\n```bash\npip3 install --user reuse\n```\n\nAfter this, make sure that `~/.local/bin` is in your `$PATH`.\n\nTo update reuse, run this command:\n\n```bash\npip3 install --user --upgrade reuse\n```\n\nFor full functionality, the following pieces of software are recommended:\n\n- Git\n- Mercurial 4.3+\n\n### Installation via package managers\n\nThere are packages available for easy install on some operating systems. You are\nwelcome to help us package this tool for more distributions!\n\n* Arch Linux (AUR): [reuse](https://aur.archlinux.org/packages/reuse/)\n* Fedora: [reuse](https://apps.fedoraproject.org/packages/reuse)\n* openSUSE: [reuse](https://software.opensuse.org/package/reuse)\n* GNU Guix: [reuse](https://guix.gnu.org/packages/reuse-0.5.0/)\n* NixOS: [reuse](https://nixos.org/nixos/packages.html?attr=reuse)\n\n### Installation from source\n\nYou can also install this tool from the source code, but we recommend the\nmethods above for easier and more stable updates. Please make sure the\nrequirements for the installation via pip are present on your machine.\n\n```bash\npython3 setup.py install\n```\n\n## Usage\n\nFirst, read the [REUSE tutorial](https://reuse.software/tutorial/). In a\nnutshell:\n\n1. Put your licenses in the `LICENSES/` directory.\n2. Add a comment header to each file that says `SPDX-License-Identifier:\n   GPL-3.0-or-later`, and `SPDX-FileCopyrightText: $YEAR $NAME`. You can be\n   flexible with the format, just make sure that the line starts with\n   `SPDX-FileCopyrightText:`.\n3. Verify your work using this tool.\n\nTo check against the recommendations, use `reuse lint`:\n\n```\n~/Projects/reuse-tool $ reuse lint\n[...]\n\nCongratulations! Your project is compliant with version 3.0 of the REUSE Specification :-)\n```\n\nThis tool can do various more things, detailed in the documentation. Here a\nshort summary:\n\n- `addheader` --- Add copyright and/or licensing information to the header of a\n  file.\n\n- `download` --- Download the specified license into the `LICENSES/` directory.\n\n- `init` --- Set up the project for REUSE compliance.\n\n- `lint` --- Verify the project for REUSE compliance.\n\n- `spdx` --- Generate an SPDX Document of all files in the project.\n\n### Run in Docker\n\nThe `fsfe/reuse` Docker image is available on [Docker\nHub](https://hub.docker.com/r/fsfe/reuse). With it, you can easily include REUSE\nin CI/CD processes. This way, you can check for REUSE compliance for each build.\nIn our [resources for developers](https://reuse.software/dev/) you can learn how\nto integrate the REUSE tool in Drone, Travis, GitHub, or GitLab CI.\n\nYou can run the helper tool simply by providing the command you want to run\n(e.g., `lint`, `spdx`). The image's working directory is `/data` by default. So\nif you want to lint a project that is in your current working directory, you can\nmount it on the container's `/data` directory, and tell the tool to lint. That\nlooks a little like this:\n\n```bash\ndocker run --volume $(pwd):/data fsfe/reuse lint\n```\n\nYou can also provide additional arguments, like so:\n\n```bash\ndocker run --volume $(pwd):/data fsfe/reuse --include-submodules spdx -o out.spdx\n```\n\n### Run as pre-commit hook\n\nYou can automatically run `reuse lint` on every commit as a pre-commit hook for\nGit. This uses [pre-commit](https://pre-commit.com/). Once you [have it\ninstalled](https://pre-commit.com/#install), add this to the\n`.pre-commit-config.yaml` in your repository:\n\n```yaml\nrepos:\n-   repo: https://github.com/fsfe/reuse-tool\n    rev: latest\n    hooks:\n    - id: reuse\n```\n\nThen run `pre-commit install`. Now, every time you commit, `reuse lint` is run\nin the background, and will prevent your commit from going through if there was\nan error.\n\n## Maintainers\n\n-   Carmen Bianca Bakker - <carmenbianca@fsfe.org>\n\n## Contribute\n\nAny pull requests or suggestions are welcome at\n<https://github.com/fsfe/reuse-tool> or via e-mail to one of the maintainers.\nGeneral inquiries can be sent to <reuse@lists.fsfe.org>.\n\nInteraction within this project is covered by the [FSFE's Code of\nConduct](https://fsfe.org/about/codeofconduct).\n\nStarting local development is very simple, just execute the following\ncommands:\n\n```bash\ngit clone git@github.com:fsfe/reuse-tool.git\ncd reuse-tool/\npython3 -mvenv venv\nsource venv/bin/activate\nmake develop\n```\n\nYou need to run `make develop` at least once to set up the virtualenv.\n\nNext, run `make help` to see the available interactions.\n\n## License\n\nThis work is licensed under multiple licences. Because keeping this section\nup-to-date is challenging, here is a brief summary as of April 2020:\n\n- All original source code is licensed under GPL-3.0-or-later.\n- All documentation is licensed under CC-BY-SA-4.0.\n- Some configuration and data files are licensed under CC0-1.0.\n- Some code borrowed from\n  [spdx/tool-python](https://github.com/spdx/tools-python) is licensed under\n  Apache-2.0.\n\nFor more accurate information, check the individual files.\n\n\n<!--\nSPDX-FileCopyrightText: 2017 Free Software Foundation Europe e.V. <https://fsfe.org>\nSPDX-FileCopyrightText: \u00a9 2020 Liferay, Inc. <https://liferay.com>\n\nSPDX-License-Identifier: CC-BY-SA-4.0\n-->\n\n# Change log\n\nThis change log follows the [Keep a\nChangelog](http://keepachangelog.com/) spec. Every release contains the\nfollowing sections:\n\n-   `Added` for new features.\n-   `Changed` for changes in existing functionality.\n-   `Deprecated` for soon-to-be removed features.\n-   `Removed` for now removed features.\n-   `Fixed` for any bug fixes.\n-   `Security` in case of vulnerabilities.\n\nThe versions follow [semantic versioning](https://semver.org).\n\n<!--\n## Unreleased - YYYY-MM-DD\n\n### Added\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Fixed\n\n### Security\n-->\n\n## 0.10.0 - 2020-04-24\n\n### Added\n\n- Add support for autoconf comment style (listed as m4).\n\n- More file types are recognised:\n\n  + Cython (`.pyx`, `.pxd`)\n  + Sass and SCSS (`.sass`, `.scss`)\n  + XSL (`.xsl`)\n  + Mailmap (`.mailmap`)\n\n### Changed\n\n- The Docker image has an entrypoint now. In effect, this means running:\n\n `docker run -v $(pwd):/data fsfe/reuse lint`\n\n instead of\n\n `docker run -v $(pwd):/data fsfe/reuse reuse lint`.\n\n## 0.9.0 - 2020-04-21\n\n### Added\n\n- Added support for Mercurial 4.3+.\n\n- A pre-commit hook has been added.\n\n- When an incorrect SPDX identifier is forwarded to `download` or `init`, the\n  tool now suggests what you might have meant.\n\n### Changed\n\n- Under the hood, a lot of code that has to do with Git and Mercurial was moved\n  into its own module.\n\n- The Docker image has been changed such that it now automagically runs `reuse\n  lint` on the `/data` directory unless something else is specified by the user.\n\n### Fixed\n\n- Fixed a bug with `addheader --explicit-license` that would result in\n  `file.license.license` if `file.license` already existed.\n\n- Fixed a Windows-only bug to do with calling subprocesses.\n\n- Fixed a rare bug that would trigger when a directory is both ignored and\n  contains a `.git` file.\n\n## 0.8.1 - 2020-02-22\n\n### Added\n\n- Support Jinja (Jinja2) comment style.\n\n- Support all multi-line comment endings when parsing for SPDX information.\n\n### Fixed\n\n- Improvements to German translation by Thomas Doczkal.\n\n- No longer remove newlines at the end of files when using `addheader`.\n\n- There can now be a tab as whitespace after `SPDX-License-Identifier` and\n  `SPDX-FileCopyrightText`.\n\n## 0.8.0 - 2020-01-20\n\n### Added\n\n- Implemented `--root` argument to specify the root of the project without\n  heuristics.\n\n- The linter will complain about licenses without file extensions.\n\n- Deprecated licenses are now recognised. `lint` will complain about deprecated\n  licenses.\n\n- ProjectReport generation (`lint`, `spdx`) now uses Python multiprocessing,\n  more commonly called multi-threading outside of Python. This has a significant\n  speedup of approximately 300% in testing. Because of overhead, performance\n  increase is not exactly linear.\n\n- For setups where multiprocessing is unsupported or unwanted,\n  `--no-multiprocessing` is added as flag.\n\n- `addheader` now recognises many more extensions. Too many to list here.\n\n- `addheader` now also recognises full filenames such as `Makefile` and\n  `.gitignore`.\n\n- Added BibTex comment style.\n\n- Updated translations:\n\n  + Dutch (Andr\u00e9 Ockers, Carmen Bianca Bakker)\n  + French (OliBug, Vincent Lequertier)\n  + Galician (pd)\n  + German (Max Mehl)\n  + Esperanto (Carmen Bianca Bakker)\n  + Portuguese (Jos\u00e9 Vieira)\n  + Spanish (Roberto Bauglir)\n  + Turkish (T. E. Kalayci)\n\n### Changed\n\n- The linter output has been very slightly re-ordered to be more internally\n  consistent.\n\n- `reuse --version` now prints a version with a Git hash on development\n  versions. Towards that end, the tool now depends on `setuptools-scm` during\n  setup. It is not a runtime dependency.\n\n### Removed\n\n- `lint` no longer accepts path arguments. Where previously one could do `reuse\n  lint SUBDIRECTORY`, this is no longer possible. When linting, you must always\n  lint the entire project. To change the project's root, use `--root`.\n\n- `FileReportInfo` has been removed. `FileReport` is used instead.\n\n### Fixed\n\n- A license that does not have a file extension, but whose full name is a valid\n  SPDX License Identifier, is now correctly identified as such. The linter will\n  complain about them, however.\n\n- If the linter detects a license as being a bad license, that license can now\n  also be detected as being missing.\n\n- Performance of `project.all_files()` has been improved by quite a lot.\n\n- Files with CRLF line endings are now better supported.\n\n## 0.7.0 - 2019-11-28\n\n### Changed\n\n- The program's package name on PyPI has been changed from `fsfe-reuse` to\n  `reuse`. `fsfe-reuse==1.0.0` has been created as an alias that depends on\n  `reuse`. `fsfe-reuse` will not receive any more updates, but will still host\n  the old versions.\n\n- For users of `fsfe-reuse`, this means:\n\n  + If you depend on `fsfe-reuse` or `fsfe-reuse>=0.X.Y` in your\n    requirements.txt, you will get the latest version of `reuse` when you\n    install `fsfe-reuse`. You may like to change the name to `reuse` explicitly,\n    but this is not strictly necessary.\n\n  + If you depend on `fsfe-reuse==0.X.Y`, then you will keep getting that\n    version. When you bump the version you depend on, you will need to change\n    the name to `reuse`.\n\n  + If you depend on `fsfe-reuse>=0.X.Y<1.0.0`, then 0.6.0 will be the latest\n    version you receive. In order to get a later version, you will need to\n    change the name to `reuse`.\n\n## 0.6.0 - 2019-11-19\n\n### Added\n\n- `--include-submodules` is added to also include submodules when linting et\n  cetera.\n\n- `addheader` now also recognises the following extensions:\n\n  + .kt\n  + .xml\n  + .yaml\n  + .yml\n\n### Changed\n\n- Made the workaround for `MachineReadableFormatError` introduced in 0.5.2 more\n  generic.\n\n- Improved shebang detection in `addheader`.\n\n- For `addheader`, the SPDX comment block now need not be the first thing in the\n  file. It will find the SPDX comment block and deal with it in-place.\n\n- Git submodules are now ignored by default.\n\n- `addheader --explicit-license` now no longer breaks on unsupported filetypes.\n\n## 0.5.2 - 2019-10-27\n\n### Added\n\n- `python3 -m reuse` now works.\n\n### Changed\n\n- Updated license list to 3.6-2-g2a14810.\n\n### Fixed\n\n- Performance of `reuse lint` improved by at least a factor of 2. It no longer\n  does any checksums on files behind the scenes.\n\n- Also handle `MachineReadableFormatError` when parsing DEP5 files. Tries to\n  import that error. If the import is unsuccessful, it is handled.\n\n## 0.5.1 - 2019-10-24 [YANKED]\n\nThis release was replaced by 0.5.2 due to importing\n`MachineReadableFormatError`, which is not a backwards-compatible change.\n\n## 0.5.0 - 2019-08-29\n\n### Added\n\n- TeX and ML comment styles added.\n\n- Added `--year` and `--exclude-year` to `reuse addheader`.\n\n- Added `--template` to `reuse addheader`.\n\n- Added `--explicit-license` to `reuse addheader`.\n\n- `binaryornot` added as new dependency.\n\n- Greatly improved the usage documentation.\n\n### Changed\n\n- `reuse addheader` now automatically adds the current year to the copyright\n  notice.\n\n- `reuse addheader` preserves the original header below the new header if it did\n  not contain any SPDX information.\n\n- `reuse addheader` now correctly handles `.license` files.\n\n- Bad licenses are no longer resolved to LicenseRef-Unknown<n>. They are instead\n  resolved to the stem of the path. This reduces the magic in the code base.\n\n- `.gitkeep` files are now ignored by the tool.\n\n- Changed Lisp's comment character from ';;' to ';'.\n\n## 0.4.1 - 2019-08-07\n\n### Added\n\n- `--all` argument help to `reuse download`, which downloads all detected\n  missing licenses.\n\n### Fixed\n\n- When using `reuse addheader` on a file that contains a shebang, the shebang is\n  preserved.\n\n- Copyright lines in `reuse spdx` are now sorted.\n\n- Some publicly visible TODOs were patched away.\n\n## 0.4.0 - 2019-08-07\n\nThis release is a major overhaul and refactoring of the tool. Its\nprimary focus is improved usability and speed, as well as adhering to version\n3.0 of the REUSE Specification.\n\n### Added\n\n- `reuse addheader` has been added as a way to automatically add copyright\n  statements and license identifiers to the headers of files. It is currently\n  not complete.\n\n- `reuse init` has been added as a way to initialise a REUSE project. Its\n  functionality is currently scarce, but should improve in the future.\n\n### Changed\n\n- `reuse lint` now provides a helpful summary instead of merely spitting out\n  non-compliant files.\n\n- `reuse compile` is now `reuse spdx`.\n\n- In addition to `Copyright` and `\u00a9`, copyright lines can be marked with the tag\n  `SPDX-FileCopyrightText:`. This is the new recommended default.\n\n- Project no longer depends on pygit2.\n\n- The list of SPDX licenses has been updated.\n\n- `Valid-License-Identifier` is no longer used, and licenses and exceptions can\n  now only live inside of the LICENSES/ directory.\n\n### Removed\n\n- Removed `--ignore-debian`.\n\n- Removed `--spdx-mandatory`, `--copyright-mandatory`, `--ignore-missing`\n  arguments from `reuse lint`.\n\n- Remove `reuse license`.\n\n- GPL-3.0 and GPL-3.0+ (and all other similar GPL licenses) are no longer\n  detected as SPDX identifiers. Use GPL-3.0-only and GPL-3.0-or-later instead.\n\n### Fixed\n\n- Scanning a Git directory is a lot faster now.\n\n- Scanning binary files is a lot faster now.\n\n## 0.3.4 - 2019-04-15\n\nThis release should be a short-lived one. A new (slightly\nbackwards-incompatible) version is in the works.\n\n### Added\n\n-   Copyrights can now start with `\u00a9` in addition to `Copyright`. The\n    former is now recommended, but they are functionally similar.\n\n### Changed\n\n-   The source code of reuse is now formatted with black.\n-   The repository has been moved from\n    <https://git.fsfe.org/reuse/reuse> to\n    <https://gitlab.com/reuse/reuse>.\n\n## 0.3.3 - 2018-07-15\n\n### Fixed\n\n-   Any files with the suffix `.spdx` are no longer considered licenses.\n\n## 0.3.2 - 2018-07-15\n\n### Fixed\n\n-   The documentation now builds under Python 3.7.\n\n## 0.3.1 - 2018-07-14\n\n### Fixed\n\n-   When using reuse from a child directory using pygit2, correctly find\n    the root.\n\n## 0.3.0 - 2018-05-16\n\n### Changed\n\n-   The output of `reuse compile` is now deterministic. The files,\n    copyright lines and SPDX expressions are sorted alphabetically.\n\n### Fixed\n\n-   When a GPL license could not be found, the correct `-only` or\n    `-or-later` extension is now used in the warning message, rather\n    than a bare `GPL-3.0`.\n-   If you have a license listed as\n    `SPDX-Valid-License: GPL-3.0-or-later`, this now correctly matches\n    corresponding SPDX identifiers. Still it is recommended to use\n    `SPDX-Valid-License: GPL-3.0` instead.\n\n## 0.2.0 - 2018-04-17\n\n### Added\n\n-   Internationalisation support added. Initial support for:\n    -   English.\n    -   Dutch.\n    -   Esperanto.\n    -   Spanish.\n\n### Fixed\n\n-   The license list of SPDX 3.0 has deprecated `GPL-3.0` and `GPL-3.0+`\n    et al in favour of `GPL-3.0-only` and `GPL-3.0-or-later`. The\n    program has been amended to accommodate sufficiently for those\n    licenses.\n\n### Changed\n\n-   `Project.reuse_info_of` now extracts, combines and returns\n    information both from the file itself and from debian/copyright.\n-   `ReuseInfo` now holds sets instead of lists.\n    -   As a result of this, `ReuseInfo` will not hold duplicates of\n        copyright lines or SPDX expressions.\n-   click removed as dependency. Good old argparse from the library is\n    used instead.\n\n## 0.1.1 - 2017-12-14\n\n### Changed\n\n-   The `reuse --help` text has been tidied up a little bit.\n\n### Fixed\n\n-   Release date in change log fixed.\n-   The PyPI homepage now gets reStructuredText instead of Markdown.\n\n## 0.1.0 - 2017-12-14\n\n### Added\n\n-   Successfully parse old-style C and HTML comments now.\n-   Added `reuse compile`, which creates an SPDX bill of materials.\n-   Added `--ignore-missing` to `reuse lint`.\n-   Allow to specify multiple paths to `reuse lint`.\n-   `chardet` added as dependency.\n-   `pygit2` added as soft dependency. reuse remains usable without it,\n    but the performance with `pygit2` is significantly better. Because\n    `pygit2` has a non-Python dependency (`libgit2`), it must be\n    installed independently by the user. In the future, when reuse is\n    packaged natively, this will not be an issue.\n\n### Changed\n\n-   Updated to version 2.0 of the REUSE recommendations. The\n    most important change is that `License-Filename` is no longer used.\n    Instead, the filename is deducted from `SPDX-License-Identifier`.\n    This change is **NOT** backwards compatible.\n-   The conditions for linting have changed. A file is now non-compliant\n    when:\n    -   The license associated with the file could not be found.\n    -   There is no SPDX expression associated with the file.\n    -   There is no copyright notice associated with the file.\n-   Only read the first 4 KiB (by default) from code files rather than\n    the entire file when searching for SPDX tags. This speeds up the\n    tool a bit.\n-   `Project.reuse_info_of` no longer raises an exception. Instead, it\n    returns an empty `ReuseInfo` object when no reuse information is\n    found.\n-   Logging is a lot prettier now. Only output entries from the `reuse`\n    module.\n\n### Fixed\n\n-   `reuse --ignore-debian compile` now works as expected.\n-   The tool no longer breaks when reading a file that has a non-UTF-8\n    encoding. Instead, `chardet` is used to detect the encoding before\n    reading the file. If a file still has errors during decoding, those\n    errors are silently ignored and replaced.\n\n## 0.0.4 - 2017-11-06\n\n### Fixed\n\n-   Removed dependency on `os.PathLike` so that Python 3.5 is actually\n    supported\n\n## 0.0.3 - 2017-11-06\n\n### Fixed\n\n-   Fixed the link to PyPI in the README.\n\n## 0.0.2 - 2017-11-03\n\nThis is a very early development release aimed at distributing the\nprogram as soon as possible. Because this is the first release, the\nchangelog is a little empty beyond \"created the program\".\n\nThe program can do roughly the following:\n\n-   Detect the license of a given file through one of three methods (in\n    order of precedence):\n    -   Information embedded in the .license file.\n    -   Information embedded in its header.\n    -   Information from the global debian/copyright file.\n-   Find and report all files in a project tree of which the license\n    could not be found.\n-   Ignore files ignored by Git.\n-   Do some logging into STDERR.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://reuse.software/", "keywords": "", "license": "GPL-3.0-or-later AND Apache-2.0 AND CC0-1.0 AND CC-BY-SA-4.0", "maintainer": "", "maintainer_email": "", "name": "reuse", "package_url": "https://pypi.org/project/reuse/", "platform": "", "project_url": "https://pypi.org/project/reuse/", "project_urls": {"Documentation": "https://reuse.readthedocs.io/", "Homepage": "https://reuse.software/", "Source": "https://github.com/fsfe/reuse-tool"}, "release_url": "https://pypi.org/project/reuse/0.10.0/", "requires_dist": ["python-debian", "requests", "license-expression", "boolean.py", "Jinja2", "binaryornot"], "requires_python": "", "summary": "reuse is a tool for compliance with the REUSE recommendations.", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>reuse</h1>\n<p><a href=\"https://pypi.python.org/pypi/reuse\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9883c99be1743260bc8a8512a79987c0cdbaba16/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72657573652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/reuse\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5089a835bbffc538b06ca2246a93d8803a985336/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f72657573652e737667\"></a>\n<a href=\"https://api.reuse.software/info/github.com/fsfe/reuse-tool\" rel=\"nofollow\"><img alt=\"REUSE status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4cdb200d3dff0156309da8a690e431863c54b6c/68747470733a2f2f6170692e72657573652e736f6674776172652f62616467652f6769746875622e636f6d2f667366652f72657573652d746f6f6c\"></a>\n<a href=\"https://github.com/RichardLitt/standard-readme\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e23c538ebce9517cdb8accb7755643d2b0078e73/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f726561646d655f7374796c652d7374616e646172642d627269676874677265656e2e737667\"></a></p>\n<blockquote>\n<p>reuse is a tool for compliance with the <a href=\"https://reuse.software/\" rel=\"nofollow\">REUSE</a>\nrecommendations.</p>\n</blockquote>\n<ul>\n<li>Documentation: <a href=\"https://reuse.readthedocs.io\" rel=\"nofollow\">https://reuse.readthedocs.io</a> and <a href=\"https://reuse.software\" rel=\"nofollow\">https://reuse.software</a></li>\n<li>Source code: <a href=\"https://github.com/fsfe/reuse-tool\" rel=\"nofollow\">https://github.com/fsfe/reuse-tool</a></li>\n<li>PyPI: <a href=\"https://pypi.python.org/pypi/reuse\" rel=\"nofollow\">https://pypi.python.org/pypi/reuse</a></li>\n<li>REUSE: 3.0</li>\n<li>Python: 3.6+</li>\n</ul>\n<h2>Background</h2>\n<p>Copyright and licensing is difficult, especially when reusing software from\ndifferent projects that are released under various different licenses.\n<a href=\"https://reuse.software\" rel=\"nofollow\">REUSE</a> was started by the <a href=\"https://fsfe.org\" rel=\"nofollow\">Free Software Foundation\nEurope</a> (FSFE) to provide a set of recommendations to make\nlicensing your Free Software projects easier. Not only do these recommendations\nmake it easier for you to declare the licenses under which your works are\nreleased, but they also make it easier for a computer to understand how your\nproject is licensed.</p>\n<p>As a short summary, the recommendations are threefold:</p>\n<ol>\n<li>Choose and provide licenses</li>\n<li>Add copyright and licensing information to each file</li>\n<li>Confirm REUSE compliance</li>\n</ol>\n<p>You are recommended to read <a href=\"https://reuse.software/tutorial\" rel=\"nofollow\">our\ntutorial</a> for a step-by-step guide\nthrough these three steps. The <a href=\"https://reuse.software/faq\" rel=\"nofollow\">FAQ</a> covers\nbasic questions about licensing, copyright, and more complex use cases.\nAdvanced users and integrators will find the <a href=\"https://reuse.software/spec\" rel=\"nofollow\">full\nspecification</a> helpful.</p>\n<p>This tool exists to facilitate the developer in complying with the above\nrecommendations.</p>\n<p>There are <a href=\"https://reuse.software/comparison\" rel=\"nofollow\">other tools</a> that have a\nlot more features and functionality surrounding the analysis and\ninspection of copyright and licenses in software projects. The REUSE\nhelper tool, on the other hand, is solely designed to be a simple tool\nto assist in compliance with the REUSE recommendations.</p>\n<h2>Install</h2>\n<h3>Installation via pip</h3>\n<p>To install reuse, you need to have the following pieces of software on\nyour computer:</p>\n<ul>\n<li>Python 3.6+</li>\n<li>pip</li>\n</ul>\n<p>You then only need to run the following command:</p>\n<pre>pip3 install --user reuse\n</pre>\n<p>After this, make sure that <code>~/.local/bin</code> is in your <code>$PATH</code>.</p>\n<p>To update reuse, run this command:</p>\n<pre>pip3 install --user --upgrade reuse\n</pre>\n<p>For full functionality, the following pieces of software are recommended:</p>\n<ul>\n<li>Git</li>\n<li>Mercurial 4.3+</li>\n</ul>\n<h3>Installation via package managers</h3>\n<p>There are packages available for easy install on some operating systems. You are\nwelcome to help us package this tool for more distributions!</p>\n<ul>\n<li>Arch Linux (AUR): <a href=\"https://aur.archlinux.org/packages/reuse/\" rel=\"nofollow\">reuse</a></li>\n<li>Fedora: <a href=\"https://apps.fedoraproject.org/packages/reuse\" rel=\"nofollow\">reuse</a></li>\n<li>openSUSE: <a href=\"https://software.opensuse.org/package/reuse\" rel=\"nofollow\">reuse</a></li>\n<li>GNU Guix: <a href=\"https://guix.gnu.org/packages/reuse-0.5.0/\" rel=\"nofollow\">reuse</a></li>\n<li>NixOS: <a href=\"https://nixos.org/nixos/packages.html?attr=reuse\" rel=\"nofollow\">reuse</a></li>\n</ul>\n<h3>Installation from source</h3>\n<p>You can also install this tool from the source code, but we recommend the\nmethods above for easier and more stable updates. Please make sure the\nrequirements for the installation via pip are present on your machine.</p>\n<pre>python3 setup.py install\n</pre>\n<h2>Usage</h2>\n<p>First, read the <a href=\"https://reuse.software/tutorial/\" rel=\"nofollow\">REUSE tutorial</a>. In a\nnutshell:</p>\n<ol>\n<li>Put your licenses in the <code>LICENSES/</code> directory.</li>\n<li>Add a comment header to each file that says <code>SPDX-License-Identifier: GPL-3.0-or-later</code>, and <code>SPDX-FileCopyrightText: $YEAR $NAME</code>. You can be\nflexible with the format, just make sure that the line starts with\n<code>SPDX-FileCopyrightText:</code>.</li>\n<li>Verify your work using this tool.</li>\n</ol>\n<p>To check against the recommendations, use <code>reuse lint</code>:</p>\n<pre><code>~/Projects/reuse-tool $ reuse lint\n[...]\n\nCongratulations! Your project is compliant with version 3.0 of the REUSE Specification :-)\n</code></pre>\n<p>This tool can do various more things, detailed in the documentation. Here a\nshort summary:</p>\n<ul>\n<li>\n<p><code>addheader</code> --- Add copyright and/or licensing information to the header of a\nfile.</p>\n</li>\n<li>\n<p><code>download</code> --- Download the specified license into the <code>LICENSES/</code> directory.</p>\n</li>\n<li>\n<p><code>init</code> --- Set up the project for REUSE compliance.</p>\n</li>\n<li>\n<p><code>lint</code> --- Verify the project for REUSE compliance.</p>\n</li>\n<li>\n<p><code>spdx</code> --- Generate an SPDX Document of all files in the project.</p>\n</li>\n</ul>\n<h3>Run in Docker</h3>\n<p>The <code>fsfe/reuse</code> Docker image is available on <a href=\"https://hub.docker.com/r/fsfe/reuse\" rel=\"nofollow\">Docker\nHub</a>. With it, you can easily include REUSE\nin CI/CD processes. This way, you can check for REUSE compliance for each build.\nIn our <a href=\"https://reuse.software/dev/\" rel=\"nofollow\">resources for developers</a> you can learn how\nto integrate the REUSE tool in Drone, Travis, GitHub, or GitLab CI.</p>\n<p>You can run the helper tool simply by providing the command you want to run\n(e.g., <code>lint</code>, <code>spdx</code>). The image's working directory is <code>/data</code> by default. So\nif you want to lint a project that is in your current working directory, you can\nmount it on the container's <code>/data</code> directory, and tell the tool to lint. That\nlooks a little like this:</p>\n<pre>docker run --volume <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>:/data fsfe/reuse lint\n</pre>\n<p>You can also provide additional arguments, like so:</p>\n<pre>docker run --volume <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>:/data fsfe/reuse --include-submodules spdx -o out.spdx\n</pre>\n<h3>Run as pre-commit hook</h3>\n<p>You can automatically run <code>reuse lint</code> on every commit as a pre-commit hook for\nGit. This uses <a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit</a>. Once you <a href=\"https://pre-commit.com/#install\" rel=\"nofollow\">have it\ninstalled</a>, add this to the\n<code>.pre-commit-config.yaml</code> in your repository:</p>\n<pre><span class=\"nt\">repos</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span>   <span class=\"nt\">repo</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https://github.com/fsfe/reuse-tool</span>\n    <span class=\"nt\">rev</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">latest</span>\n    <span class=\"nt\">hooks</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">reuse</span>\n</pre>\n<p>Then run <code>pre-commit install</code>. Now, every time you commit, <code>reuse lint</code> is run\nin the background, and will prevent your commit from going through if there was\nan error.</p>\n<h2>Maintainers</h2>\n<ul>\n<li>Carmen Bianca Bakker - <a href=\"mailto:carmenbianca@fsfe.org\">carmenbianca@fsfe.org</a></li>\n</ul>\n<h2>Contribute</h2>\n<p>Any pull requests or suggestions are welcome at\n<a href=\"https://github.com/fsfe/reuse-tool\" rel=\"nofollow\">https://github.com/fsfe/reuse-tool</a> or via e-mail to one of the maintainers.\nGeneral inquiries can be sent to <a href=\"mailto:reuse@lists.fsfe.org\">reuse@lists.fsfe.org</a>.</p>\n<p>Interaction within this project is covered by the <a href=\"https://fsfe.org/about/codeofconduct\" rel=\"nofollow\">FSFE's Code of\nConduct</a>.</p>\n<p>Starting local development is very simple, just execute the following\ncommands:</p>\n<pre>git clone git@github.com:fsfe/reuse-tool.git\n<span class=\"nb\">cd</span> reuse-tool/\npython3 -mvenv venv\n<span class=\"nb\">source</span> venv/bin/activate\nmake develop\n</pre>\n<p>You need to run <code>make develop</code> at least once to set up the virtualenv.</p>\n<p>Next, run <code>make help</code> to see the available interactions.</p>\n<h2>License</h2>\n<p>This work is licensed under multiple licences. Because keeping this section\nup-to-date is challenging, here is a brief summary as of April 2020:</p>\n<ul>\n<li>All original source code is licensed under GPL-3.0-or-later.</li>\n<li>All documentation is licensed under CC-BY-SA-4.0.</li>\n<li>Some configuration and data files are licensed under CC0-1.0.</li>\n<li>Some code borrowed from\n<a href=\"https://github.com/spdx/tools-python\" rel=\"nofollow\">spdx/tool-python</a> is licensed under\nApache-2.0.</li>\n</ul>\n<p>For more accurate information, check the individual files.</p>\n\n<h1>Change log</h1>\n<p>This change log follows the <a href=\"http://keepachangelog.com/\" rel=\"nofollow\">Keep a\nChangelog</a> spec. Every release contains the\nfollowing sections:</p>\n<ul>\n<li><code>Added</code> for new features.</li>\n<li><code>Changed</code> for changes in existing functionality.</li>\n<li><code>Deprecated</code> for soon-to-be removed features.</li>\n<li><code>Removed</code> for now removed features.</li>\n<li><code>Fixed</code> for any bug fixes.</li>\n<li><code>Security</code> in case of vulnerabilities.</li>\n</ul>\n<p>The versions follow <a href=\"https://semver.org\" rel=\"nofollow\">semantic versioning</a>.</p>\n\n<h2>0.10.0 - 2020-04-24</h2>\n<h3>Added</h3>\n<ul>\n<li>\n<p>Add support for autoconf comment style (listed as m4).</p>\n</li>\n<li>\n<p>More file types are recognised:</p>\n<ul>\n<li>Cython (<code>.pyx</code>, <code>.pxd</code>)</li>\n<li>Sass and SCSS (<code>.sass</code>, <code>.scss</code>)</li>\n<li>XSL (<code>.xsl</code>)</li>\n<li>Mailmap (<code>.mailmap</code>)</li>\n</ul>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>The Docker image has an entrypoint now. In effect, this means running:</li>\n</ul>\n<p><code>docker run -v $(pwd):/data fsfe/reuse lint</code></p>\n<p>instead of</p>\n<p><code>docker run -v $(pwd):/data fsfe/reuse reuse lint</code>.</p>\n<h2>0.9.0 - 2020-04-21</h2>\n<h3>Added</h3>\n<ul>\n<li>\n<p>Added support for Mercurial 4.3+.</p>\n</li>\n<li>\n<p>A pre-commit hook has been added.</p>\n</li>\n<li>\n<p>When an incorrect SPDX identifier is forwarded to <code>download</code> or <code>init</code>, the\ntool now suggests what you might have meant.</p>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>\n<p>Under the hood, a lot of code that has to do with Git and Mercurial was moved\ninto its own module.</p>\n</li>\n<li>\n<p>The Docker image has been changed such that it now automagically runs <code>reuse lint</code> on the <code>/data</code> directory unless something else is specified by the user.</p>\n</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>\n<p>Fixed a bug with <code>addheader --explicit-license</code> that would result in\n<code>file.license.license</code> if <code>file.license</code> already existed.</p>\n</li>\n<li>\n<p>Fixed a Windows-only bug to do with calling subprocesses.</p>\n</li>\n<li>\n<p>Fixed a rare bug that would trigger when a directory is both ignored and\ncontains a <code>.git</code> file.</p>\n</li>\n</ul>\n<h2>0.8.1 - 2020-02-22</h2>\n<h3>Added</h3>\n<ul>\n<li>\n<p>Support Jinja (Jinja2) comment style.</p>\n</li>\n<li>\n<p>Support all multi-line comment endings when parsing for SPDX information.</p>\n</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>\n<p>Improvements to German translation by Thomas Doczkal.</p>\n</li>\n<li>\n<p>No longer remove newlines at the end of files when using <code>addheader</code>.</p>\n</li>\n<li>\n<p>There can now be a tab as whitespace after <code>SPDX-License-Identifier</code> and\n<code>SPDX-FileCopyrightText</code>.</p>\n</li>\n</ul>\n<h2>0.8.0 - 2020-01-20</h2>\n<h3>Added</h3>\n<ul>\n<li>\n<p>Implemented <code>--root</code> argument to specify the root of the project without\nheuristics.</p>\n</li>\n<li>\n<p>The linter will complain about licenses without file extensions.</p>\n</li>\n<li>\n<p>Deprecated licenses are now recognised. <code>lint</code> will complain about deprecated\nlicenses.</p>\n</li>\n<li>\n<p>ProjectReport generation (<code>lint</code>, <code>spdx</code>) now uses Python multiprocessing,\nmore commonly called multi-threading outside of Python. This has a significant\nspeedup of approximately 300% in testing. Because of overhead, performance\nincrease is not exactly linear.</p>\n</li>\n<li>\n<p>For setups where multiprocessing is unsupported or unwanted,\n<code>--no-multiprocessing</code> is added as flag.</p>\n</li>\n<li>\n<p><code>addheader</code> now recognises many more extensions. Too many to list here.</p>\n</li>\n<li>\n<p><code>addheader</code> now also recognises full filenames such as <code>Makefile</code> and\n<code>.gitignore</code>.</p>\n</li>\n<li>\n<p>Added BibTex comment style.</p>\n</li>\n<li>\n<p>Updated translations:</p>\n<ul>\n<li>Dutch (Andr\u00e9 Ockers, Carmen Bianca Bakker)</li>\n<li>French (OliBug, Vincent Lequertier)</li>\n<li>Galician (pd)</li>\n<li>German (Max Mehl)</li>\n<li>Esperanto (Carmen Bianca Bakker)</li>\n<li>Portuguese (Jos\u00e9 Vieira)</li>\n<li>Spanish (Roberto Bauglir)</li>\n<li>Turkish (T. E. Kalayci)</li>\n</ul>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>\n<p>The linter output has been very slightly re-ordered to be more internally\nconsistent.</p>\n</li>\n<li>\n<p><code>reuse --version</code> now prints a version with a Git hash on development\nversions. Towards that end, the tool now depends on <code>setuptools-scm</code> during\nsetup. It is not a runtime dependency.</p>\n</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>\n<p><code>lint</code> no longer accepts path arguments. Where previously one could do <code>reuse lint SUBDIRECTORY</code>, this is no longer possible. When linting, you must always\nlint the entire project. To change the project's root, use <code>--root</code>.</p>\n</li>\n<li>\n<p><code>FileReportInfo</code> has been removed. <code>FileReport</code> is used instead.</p>\n</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>\n<p>A license that does not have a file extension, but whose full name is a valid\nSPDX License Identifier, is now correctly identified as such. The linter will\ncomplain about them, however.</p>\n</li>\n<li>\n<p>If the linter detects a license as being a bad license, that license can now\nalso be detected as being missing.</p>\n</li>\n<li>\n<p>Performance of <code>project.all_files()</code> has been improved by quite a lot.</p>\n</li>\n<li>\n<p>Files with CRLF line endings are now better supported.</p>\n</li>\n</ul>\n<h2>0.7.0 - 2019-11-28</h2>\n<h3>Changed</h3>\n<ul>\n<li>\n<p>The program's package name on PyPI has been changed from <code>fsfe-reuse</code> to\n<code>reuse</code>. <code>fsfe-reuse==1.0.0</code> has been created as an alias that depends on\n<code>reuse</code>. <code>fsfe-reuse</code> will not receive any more updates, but will still host\nthe old versions.</p>\n</li>\n<li>\n<p>For users of <code>fsfe-reuse</code>, this means:</p>\n<ul>\n<li>\n<p>If you depend on <code>fsfe-reuse</code> or <code>fsfe-reuse&gt;=0.X.Y</code> in your\nrequirements.txt, you will get the latest version of <code>reuse</code> when you\ninstall <code>fsfe-reuse</code>. You may like to change the name to <code>reuse</code> explicitly,\nbut this is not strictly necessary.</p>\n</li>\n<li>\n<p>If you depend on <code>fsfe-reuse==0.X.Y</code>, then you will keep getting that\nversion. When you bump the version you depend on, you will need to change\nthe name to <code>reuse</code>.</p>\n</li>\n<li>\n<p>If you depend on <code>fsfe-reuse&gt;=0.X.Y&lt;1.0.0</code>, then 0.6.0 will be the latest\nversion you receive. In order to get a later version, you will need to\nchange the name to <code>reuse</code>.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>0.6.0 - 2019-11-19</h2>\n<h3>Added</h3>\n<ul>\n<li>\n<p><code>--include-submodules</code> is added to also include submodules when linting et\ncetera.</p>\n</li>\n<li>\n<p><code>addheader</code> now also recognises the following extensions:</p>\n<ul>\n<li>.kt</li>\n<li>.xml</li>\n<li>.yaml</li>\n<li>.yml</li>\n</ul>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>\n<p>Made the workaround for <code>MachineReadableFormatError</code> introduced in 0.5.2 more\ngeneric.</p>\n</li>\n<li>\n<p>Improved shebang detection in <code>addheader</code>.</p>\n</li>\n<li>\n<p>For <code>addheader</code>, the SPDX comment block now need not be the first thing in the\nfile. It will find the SPDX comment block and deal with it in-place.</p>\n</li>\n<li>\n<p>Git submodules are now ignored by default.</p>\n</li>\n<li>\n<p><code>addheader --explicit-license</code> now no longer breaks on unsupported filetypes.</p>\n</li>\n</ul>\n<h2>0.5.2 - 2019-10-27</h2>\n<h3>Added</h3>\n<ul>\n<li><code>python3 -m reuse</code> now works.</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Updated license list to 3.6-2-g2a14810.</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>\n<p>Performance of <code>reuse lint</code> improved by at least a factor of 2. It no longer\ndoes any checksums on files behind the scenes.</p>\n</li>\n<li>\n<p>Also handle <code>MachineReadableFormatError</code> when parsing DEP5 files. Tries to\nimport that error. If the import is unsuccessful, it is handled.</p>\n</li>\n</ul>\n<h2>0.5.1 - 2019-10-24 [YANKED]</h2>\n<p>This release was replaced by 0.5.2 due to importing\n<code>MachineReadableFormatError</code>, which is not a backwards-compatible change.</p>\n<h2>0.5.0 - 2019-08-29</h2>\n<h3>Added</h3>\n<ul>\n<li>\n<p>TeX and ML comment styles added.</p>\n</li>\n<li>\n<p>Added <code>--year</code> and <code>--exclude-year</code> to <code>reuse addheader</code>.</p>\n</li>\n<li>\n<p>Added <code>--template</code> to <code>reuse addheader</code>.</p>\n</li>\n<li>\n<p>Added <code>--explicit-license</code> to <code>reuse addheader</code>.</p>\n</li>\n<li>\n<p><code>binaryornot</code> added as new dependency.</p>\n</li>\n<li>\n<p>Greatly improved the usage documentation.</p>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>\n<p><code>reuse addheader</code> now automatically adds the current year to the copyright\nnotice.</p>\n</li>\n<li>\n<p><code>reuse addheader</code> preserves the original header below the new header if it did\nnot contain any SPDX information.</p>\n</li>\n<li>\n<p><code>reuse addheader</code> now correctly handles <code>.license</code> files.</p>\n</li>\n<li>\n<p>Bad licenses are no longer resolved to LicenseRef-Unknown&lt;n&gt;. They are instead\nresolved to the stem of the path. This reduces the magic in the code base.</p>\n</li>\n<li>\n<p><code>.gitkeep</code> files are now ignored by the tool.</p>\n</li>\n<li>\n<p>Changed Lisp's comment character from ';;' to ';'.</p>\n</li>\n</ul>\n<h2>0.4.1 - 2019-08-07</h2>\n<h3>Added</h3>\n<ul>\n<li><code>--all</code> argument help to <code>reuse download</code>, which downloads all detected\nmissing licenses.</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>\n<p>When using <code>reuse addheader</code> on a file that contains a shebang, the shebang is\npreserved.</p>\n</li>\n<li>\n<p>Copyright lines in <code>reuse spdx</code> are now sorted.</p>\n</li>\n<li>\n<p>Some publicly visible TODOs were patched away.</p>\n</li>\n</ul>\n<h2>0.4.0 - 2019-08-07</h2>\n<p>This release is a major overhaul and refactoring of the tool. Its\nprimary focus is improved usability and speed, as well as adhering to version\n3.0 of the REUSE Specification.</p>\n<h3>Added</h3>\n<ul>\n<li>\n<p><code>reuse addheader</code> has been added as a way to automatically add copyright\nstatements and license identifiers to the headers of files. It is currently\nnot complete.</p>\n</li>\n<li>\n<p><code>reuse init</code> has been added as a way to initialise a REUSE project. Its\nfunctionality is currently scarce, but should improve in the future.</p>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>\n<p><code>reuse lint</code> now provides a helpful summary instead of merely spitting out\nnon-compliant files.</p>\n</li>\n<li>\n<p><code>reuse compile</code> is now <code>reuse spdx</code>.</p>\n</li>\n<li>\n<p>In addition to <code>Copyright</code> and <code>\u00a9</code>, copyright lines can be marked with the tag\n<code>SPDX-FileCopyrightText:</code>. This is the new recommended default.</p>\n</li>\n<li>\n<p>Project no longer depends on pygit2.</p>\n</li>\n<li>\n<p>The list of SPDX licenses has been updated.</p>\n</li>\n<li>\n<p><code>Valid-License-Identifier</code> is no longer used, and licenses and exceptions can\nnow only live inside of the LICENSES/ directory.</p>\n</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>\n<p>Removed <code>--ignore-debian</code>.</p>\n</li>\n<li>\n<p>Removed <code>--spdx-mandatory</code>, <code>--copyright-mandatory</code>, <code>--ignore-missing</code>\narguments from <code>reuse lint</code>.</p>\n</li>\n<li>\n<p>Remove <code>reuse license</code>.</p>\n</li>\n<li>\n<p>GPL-3.0 and GPL-3.0+ (and all other similar GPL licenses) are no longer\ndetected as SPDX identifiers. Use GPL-3.0-only and GPL-3.0-or-later instead.</p>\n</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>\n<p>Scanning a Git directory is a lot faster now.</p>\n</li>\n<li>\n<p>Scanning binary files is a lot faster now.</p>\n</li>\n</ul>\n<h2>0.3.4 - 2019-04-15</h2>\n<p>This release should be a short-lived one. A new (slightly\nbackwards-incompatible) version is in the works.</p>\n<h3>Added</h3>\n<ul>\n<li>Copyrights can now start with <code>\u00a9</code> in addition to <code>Copyright</code>. The\nformer is now recommended, but they are functionally similar.</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>The source code of reuse is now formatted with black.</li>\n<li>The repository has been moved from\n<a href=\"https://git.fsfe.org/reuse/reuse\" rel=\"nofollow\">https://git.fsfe.org/reuse/reuse</a> to\n<a href=\"https://gitlab.com/reuse/reuse\" rel=\"nofollow\">https://gitlab.com/reuse/reuse</a>.</li>\n</ul>\n<h2>0.3.3 - 2018-07-15</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Any files with the suffix <code>.spdx</code> are no longer considered licenses.</li>\n</ul>\n<h2>0.3.2 - 2018-07-15</h2>\n<h3>Fixed</h3>\n<ul>\n<li>The documentation now builds under Python 3.7.</li>\n</ul>\n<h2>0.3.1 - 2018-07-14</h2>\n<h3>Fixed</h3>\n<ul>\n<li>When using reuse from a child directory using pygit2, correctly find\nthe root.</li>\n</ul>\n<h2>0.3.0 - 2018-05-16</h2>\n<h3>Changed</h3>\n<ul>\n<li>The output of <code>reuse compile</code> is now deterministic. The files,\ncopyright lines and SPDX expressions are sorted alphabetically.</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>When a GPL license could not be found, the correct <code>-only</code> or\n<code>-or-later</code> extension is now used in the warning message, rather\nthan a bare <code>GPL-3.0</code>.</li>\n<li>If you have a license listed as\n<code>SPDX-Valid-License: GPL-3.0-or-later</code>, this now correctly matches\ncorresponding SPDX identifiers. Still it is recommended to use\n<code>SPDX-Valid-License: GPL-3.0</code> instead.</li>\n</ul>\n<h2>0.2.0 - 2018-04-17</h2>\n<h3>Added</h3>\n<ul>\n<li>Internationalisation support added. Initial support for:\n<ul>\n<li>English.</li>\n<li>Dutch.</li>\n<li>Esperanto.</li>\n<li>Spanish.</li>\n</ul>\n</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>The license list of SPDX 3.0 has deprecated <code>GPL-3.0</code> and <code>GPL-3.0+</code>\net al in favour of <code>GPL-3.0-only</code> and <code>GPL-3.0-or-later</code>. The\nprogram has been amended to accommodate sufficiently for those\nlicenses.</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li><code>Project.reuse_info_of</code> now extracts, combines and returns\ninformation both from the file itself and from debian/copyright.</li>\n<li><code>ReuseInfo</code> now holds sets instead of lists.\n<ul>\n<li>As a result of this, <code>ReuseInfo</code> will not hold duplicates of\ncopyright lines or SPDX expressions.</li>\n</ul>\n</li>\n<li>click removed as dependency. Good old argparse from the library is\nused instead.</li>\n</ul>\n<h2>0.1.1 - 2017-12-14</h2>\n<h3>Changed</h3>\n<ul>\n<li>The <code>reuse --help</code> text has been tidied up a little bit.</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Release date in change log fixed.</li>\n<li>The PyPI homepage now gets reStructuredText instead of Markdown.</li>\n</ul>\n<h2>0.1.0 - 2017-12-14</h2>\n<h3>Added</h3>\n<ul>\n<li>Successfully parse old-style C and HTML comments now.</li>\n<li>Added <code>reuse compile</code>, which creates an SPDX bill of materials.</li>\n<li>Added <code>--ignore-missing</code> to <code>reuse lint</code>.</li>\n<li>Allow to specify multiple paths to <code>reuse lint</code>.</li>\n<li><code>chardet</code> added as dependency.</li>\n<li><code>pygit2</code> added as soft dependency. reuse remains usable without it,\nbut the performance with <code>pygit2</code> is significantly better. Because\n<code>pygit2</code> has a non-Python dependency (<code>libgit2</code>), it must be\ninstalled independently by the user. In the future, when reuse is\npackaged natively, this will not be an issue.</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Updated to version 2.0 of the REUSE recommendations. The\nmost important change is that <code>License-Filename</code> is no longer used.\nInstead, the filename is deducted from <code>SPDX-License-Identifier</code>.\nThis change is <strong>NOT</strong> backwards compatible.</li>\n<li>The conditions for linting have changed. A file is now non-compliant\nwhen:\n<ul>\n<li>The license associated with the file could not be found.</li>\n<li>There is no SPDX expression associated with the file.</li>\n<li>There is no copyright notice associated with the file.</li>\n</ul>\n</li>\n<li>Only read the first 4 KiB (by default) from code files rather than\nthe entire file when searching for SPDX tags. This speeds up the\ntool a bit.</li>\n<li><code>Project.reuse_info_of</code> no longer raises an exception. Instead, it\nreturns an empty <code>ReuseInfo</code> object when no reuse information is\nfound.</li>\n<li>Logging is a lot prettier now. Only output entries from the <code>reuse</code>\nmodule.</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li><code>reuse --ignore-debian compile</code> now works as expected.</li>\n<li>The tool no longer breaks when reading a file that has a non-UTF-8\nencoding. Instead, <code>chardet</code> is used to detect the encoding before\nreading the file. If a file still has errors during decoding, those\nerrors are silently ignored and replaced.</li>\n</ul>\n<h2>0.0.4 - 2017-11-06</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Removed dependency on <code>os.PathLike</code> so that Python 3.5 is actually\nsupported</li>\n</ul>\n<h2>0.0.3 - 2017-11-06</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Fixed the link to PyPI in the README.</li>\n</ul>\n<h2>0.0.2 - 2017-11-03</h2>\n<p>This is a very early development release aimed at distributing the\nprogram as soon as possible. Because this is the first release, the\nchangelog is a little empty beyond \"created the program\".</p>\n<p>The program can do roughly the following:</p>\n<ul>\n<li>Detect the license of a given file through one of three methods (in\norder of precedence):\n<ul>\n<li>Information embedded in the .license file.</li>\n<li>Information embedded in its header.</li>\n<li>Information from the global debian/copyright file.</li>\n</ul>\n</li>\n<li>Find and report all files in a project tree of which the license\ncould not be found.</li>\n<li>Ignore files ignored by Git.</li>\n<li>Do some logging into STDERR.</li>\n</ul>\n\n          </div>"}, "last_serial": 7092746, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "ef5cbe2d5e58ca9991d5452a66695ca8", "sha256": "9ab7634b102574ea36c3ab0b8ff75156f08c5f0ff00f45758ecb7954f29a4bc2"}, "downloads": -1, "filename": "reuse-0.10.0-py3-none-any.whl", "has_sig": true, "md5_digest": "ef5cbe2d5e58ca9991d5452a66695ca8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 131421, "upload_time": "2020-04-24T12:43:55", "upload_time_iso_8601": "2020-04-24T12:43:55.910550Z", "url": "https://files.pythonhosted.org/packages/7b/6d/3cd639f4a461cc955c1d21b98b4505017a02fbd96dfbe341d1176f73705d/reuse-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f87ab698fc767c9d48581db997cd19", "sha256": "f5eba74f8c4602c77634216494aef8cd6d0ed0b444925f95a0b9fda062e47cb6"}, "downloads": -1, "filename": "reuse-0.10.0.tar.gz", "has_sig": true, "md5_digest": "95f87ab698fc767c9d48581db997cd19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 176740, "upload_time": "2020-04-24T12:43:58", "upload_time_iso_8601": "2020-04-24T12:43:58.346529Z", "url": "https://files.pythonhosted.org/packages/84/cc/664300e6112c0e72aacc34b2b1e7c49af90bea963d6cf06301587979d65c/reuse-0.10.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "f0192e74eeb6ebbf4aab5763babe3079", "sha256": "6e86c3dcd3ccd49eae30f17b6a23c94d584433a79fe80d01a3506cf4c7683f28"}, "downloads": -1, "filename": "reuse-0.7.0-py3-none-any.whl", "has_sig": true, "md5_digest": "f0192e74eeb6ebbf4aab5763babe3079", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71431, "upload_time": "2019-11-28T12:17:55", "upload_time_iso_8601": "2019-11-28T12:17:55.824879Z", "url": "https://files.pythonhosted.org/packages/5b/c9/9928c5978f5a60cc4a9a415267b1c9337a1351e97a06b2d88203f9b4452f/reuse-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "834167f6c7ca874ad6a1f3c3e272ce47", "sha256": "931e591f790c1764598ad5a6a24fda25cfec66abd2e87516c5a532d93b12969b"}, "downloads": -1, "filename": "reuse-0.7.0.tar.gz", "has_sig": true, "md5_digest": "834167f6c7ca874ad6a1f3c3e272ce47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118951, "upload_time": "2019-11-28T12:17:58", "upload_time_iso_8601": "2019-11-28T12:17:58.040312Z", "url": "https://files.pythonhosted.org/packages/e9/e8/487edae2dd78b6a0f85ee72ab438d8798314545df4f1a9f4b4786aef46ae/reuse-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "6c96e89725481d8a63c248c1ea81af24", "sha256": "708ab12cfe6b5de59ced006963d23882618895a841a79d3fd6e5321aa698e465"}, "downloads": -1, "filename": "reuse-0.8.0-py3-none-any.whl", "has_sig": true, "md5_digest": "6c96e89725481d8a63c248c1ea81af24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 120608, "upload_time": "2020-01-20T16:50:14", "upload_time_iso_8601": "2020-01-20T16:50:14.567379Z", "url": "https://files.pythonhosted.org/packages/31/89/e041bc94866b4bc888c1d25873a5a8a49e79da1a43f8c4581d655edde37a/reuse-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac5d65397741aac33efb1d8c8d65549e", "sha256": "a80460b607bf70804f052cbf4fea3aea2eb9ff8571b13cd4d5f351f2adac47c2"}, "downloads": -1, "filename": "reuse-0.8.0.tar.gz", "has_sig": true, "md5_digest": "ac5d65397741aac33efb1d8c8d65549e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167446, "upload_time": "2020-01-20T16:50:17", "upload_time_iso_8601": "2020-01-20T16:50:17.078929Z", "url": "https://files.pythonhosted.org/packages/bb/ba/51947e578a6414ec422d1f922214e6ab39e5cd99255c4827f8ae092c95cf/reuse-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "82ec469edde3477618ef0f830805daed", "sha256": "ae8a2e96972bbae3034e8ced677b4e3a74247952977346fca580a54c721fbd68"}, "downloads": -1, "filename": "reuse-0.8.1-py3-none-any.whl", "has_sig": true, "md5_digest": "82ec469edde3477618ef0f830805daed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 128241, "upload_time": "2020-02-21T20:25:03", "upload_time_iso_8601": "2020-02-21T20:25:03.976856Z", "url": "https://files.pythonhosted.org/packages/15/01/53945fbe8b9dc32f18cfe5456edf903a383d42315afd085d032b476655e9/reuse-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e749e4b1a869c6d386a7a5446401a483", "sha256": "ccc8ec1030aa3aa90d4e9d2f2f47405c978bc2335e2048f4a50587145d35cf61"}, "downloads": -1, "filename": "reuse-0.8.1.tar.gz", "has_sig": true, "md5_digest": "e749e4b1a869c6d386a7a5446401a483", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 171490, "upload_time": "2020-02-21T20:25:05", "upload_time_iso_8601": "2020-02-21T20:25:05.788442Z", "url": "https://files.pythonhosted.org/packages/a9/c6/5238d5a75d2490f9bf32ba375529e8826c4ab8728cf77556bd675413ef10/reuse-0.8.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "efd532782d604dbf839d6df4d1659d33", "sha256": "0f09f92fff482276d256b867ec65d79a2f3b2ba3a63568bb6862895aa7fa0899"}, "downloads": -1, "filename": "reuse-0.9.0-py3-none-any.whl", "has_sig": true, "md5_digest": "efd532782d604dbf839d6df4d1659d33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 130992, "upload_time": "2020-04-21T13:47:50", "upload_time_iso_8601": "2020-04-21T13:47:50.801410Z", "url": "https://files.pythonhosted.org/packages/a3/c1/5391b2d4ff902805de30b682130707183396d1d74a11e083cf84225ba33b/reuse-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d43d4c197b05ec712319b6c4b816efb", "sha256": "15f1ba8846fdda11bf987c60c367b7d01b862b21b89e48000028c7921620265b"}, "downloads": -1, "filename": "reuse-0.9.0.tar.gz", "has_sig": true, "md5_digest": "7d43d4c197b05ec712319b6c4b816efb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 176074, "upload_time": "2020-04-21T13:47:53", "upload_time_iso_8601": "2020-04-21T13:47:53.691114Z", "url": "https://files.pythonhosted.org/packages/b3/ae/069161e75bc5998e90230af769dad18eda6e718697c678e40d8540f5d97c/reuse-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef5cbe2d5e58ca9991d5452a66695ca8", "sha256": "9ab7634b102574ea36c3ab0b8ff75156f08c5f0ff00f45758ecb7954f29a4bc2"}, "downloads": -1, "filename": "reuse-0.10.0-py3-none-any.whl", "has_sig": true, "md5_digest": "ef5cbe2d5e58ca9991d5452a66695ca8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 131421, "upload_time": "2020-04-24T12:43:55", "upload_time_iso_8601": "2020-04-24T12:43:55.910550Z", "url": "https://files.pythonhosted.org/packages/7b/6d/3cd639f4a461cc955c1d21b98b4505017a02fbd96dfbe341d1176f73705d/reuse-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f87ab698fc767c9d48581db997cd19", "sha256": "f5eba74f8c4602c77634216494aef8cd6d0ed0b444925f95a0b9fda062e47cb6"}, "downloads": -1, "filename": "reuse-0.10.0.tar.gz", "has_sig": true, "md5_digest": "95f87ab698fc767c9d48581db997cd19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 176740, "upload_time": "2020-04-24T12:43:58", "upload_time_iso_8601": "2020-04-24T12:43:58.346529Z", "url": "https://files.pythonhosted.org/packages/84/cc/664300e6112c0e72aacc34b2b1e7c49af90bea963d6cf06301587979d65c/reuse-0.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:20 2020"}