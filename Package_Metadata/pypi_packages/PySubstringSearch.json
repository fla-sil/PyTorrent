{"info": {"author": "Gal Ben David", "author_email": "gal@intsights.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<p align=\"center\">\n    <a href=\"https://github.com/Intsights/PySubstringSearch\">\n        <img src=\"https://raw.githubusercontent.com/Intsights/PySubstringSearch/master/images/logo.png\" alt=\"Logo\">\n    </a>\n    <h3 align=\"center\">\n        Python library for fast substring/pattern search written in C++ leveraging Suffix Array Algorithm\n    </h3>\n</p>\n\n![license](https://img.shields.io/badge/MIT-License-blue)\n![Python](https://img.shields.io/badge/Python-3.6%20%7C%203.7%20%7C%203.8%20%7C%20pypy3-blue)\n![Build](https://github.com/Intsights/PySubstringSearch/workflows/Build/badge.svg)\n[![PyPi](https://img.shields.io/pypi/v/PySubstringSearch.svg)](https://pypi.org/project/PySubstringSearch/)\n\n## Table of Contents\n\n- [Table of Contents](#table-of-contents)\n- [About The Project](#about-the-project)\n  - [Built With](#built-with)\n  - [Performance](#performance)\n  - [Prerequisites](#prerequisites)\n  - [Installation](#installation)\n- [Usage](#usage)\n- [License](#license)\n- [Contact](#contact)\n\n\n## About The Project\n\nPySubstringSearch is a library intended for searching over an index file for substring patterns. The library is written in C++ to achieve speed and efficiency. The library also uses [Msufsort](https://github.com/michaelmaniscalco/msufsort) suffix array construction library for string indexing. The created index consists of the original text and a 32bit suffix array structs. The library relies on a proprietary container protocol to hold the original text along with the index in chunks of 512mb to evade the limitation of the Suffix Array Construction implementation.\n\nThe module implements two methods, search_sequential & search_parallel. search_sequential searches through the inner chunks one by one where search_parallel searches concurrently. When dealing with big indices, bigger than 1gb for example, search_parallel would function faster. I advice to check them both with the resulted index to find which one fits better.\n\n\n### Built With\n\n* [Msufsort](https://github.com/michaelmaniscalco/msufsort)\n\n\n### Performance\n\n| Library  | Text Size | Function | Time | #Results | Improvement Factor |\n| ------------- | ------------- | ------------- | ------------- | ------------- | ------------- |\n| [ripgrepy](https://pypi.org/project/ripgrepy/) | 500mb | Ripgrepy('text_one', '500mb').run().as_string.split('\\n') | 127 ms \u00b1 694 \u00b5s per loop | 12553 | 1.0x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 500mb | reader.search_sequential('text_one') | 2.48 ms \u00b1 53.4 \u00b5s per loop | 12553 | 51.2x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 500mb | reader.search_parallel('text_one') | 3.78 ms \u00b1 350 \u00b5s per loop | 12553 | 33.6x |\n| [ripgrepy](https://pypi.org/project/ripgrepy/) | 500mb | Ripgrepy('text_two', '500mb').run().as_string.split('\\n') | 127 ms \u00b1 623 \u00b5s per loop | 769 | 1.0x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 500mb | reader.search_sequential('text_two') | 156 \u00b5s \u00b1 916 ns per loop | 769 | 814.0x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 500mb | reader.search_parallel('text_two') | 251 \u00b5s \u00b1 80.2 \u00b5s per loop | 769 | 506.0x |\n| [ripgrepy](https://pypi.org/project/ripgrepy/) | 6gb | Ripgrepy('text_one', '6gb').run().as_string.split('\\n') | 1.38 s \u00b1 3.82 ms | 206884 | 1.0x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 6gb | reader.search_sequential('text_one') | 93.7 ms \u00b1 2.16 ms per loop | 206884 | 15.3x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 6gb | reader.search_parallel('text_one') | 34.3 ms \u00b1 321 \u00b5s per loop | 206884 | 40.5x |\n| [ripgrepy](https://pypi.org/project/ripgrepy/) | 6gb | Ripgrepy('text_two', '6gb').run().as_string.split('\\n') | 1.61 s \u00b1 37.2 ms per loop | 6921 | 1.0x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 6gb | reader.search_sequential('text_two') | 2.22 ms \u00b1 79.3 \u00b5s per loop | 6921 | 725.2x |\n| [PySubstringSearch](https://github.com/Intsights/PySubstringSearch) | 6gb | reader.search_parallel('text_two') | 1.38 ms \u00b1 26 \u00b5s per loop | 6921 | 1166.6x |\n\n### Prerequisites\n\nIn order to compile this package you should have GCC & Python development package installed.\n* Fedora\n```sh\nsudo dnf install python3-devel gcc-c++\n```\n* Ubuntu 18.04\n```sh\nsudo apt install python3-dev g++-9\n```\n\n### Installation\n\n```sh\npip3 install PySubstringSearch\n```\n\n\n\n## Usage\n\nCreate an index\n```python\nimport pysubstringsearch\n\n# creating a new index file\n# if a file with this name is already exists, it will be overwritten\nwriter = pysubstringsearch.Writer(\n    index_file_path='output.idx',\n)\n\n# adding entries to the new index\nwriter.add_entry('some short string')\nwriter.add_entry('another but now a longer string')\nwriter.add_entry('more text to add')\n\n# making sure the data is dumped to the file\nwriter.finalize()\n```\n\nSearch a substring within an index\n```python\nimport pysubstringsearch\n\n# opening an index file for searching\nreader = pysubstringsearch.Reader(\n    index_file_path='output.idx',\n)\n\n# lookup for a substring sequentially\nreader.search_sequential('short')\n>>> ['some short string']\n\n# lookup for a substring sequentially\nreader.search_sequential('string')\n>>> ['some short string', 'another but now a longer string']\n\n# lookup for a substring concurrently\nreader.search_parallel('short')\n>>> ['some short string']\n\n# lookup for a substring concurrently\nreader.search_parallel('string')\n>>> ['some short string', 'another but now a longer string']\n```\n\n\n\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n## Contact\n\nGal Ben David - gal@intsights.com\n\nProject Link: [https://github.com/Intsights/PySubstringSearch](https://github.com/Intsights/PySubstringSearch)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Intsights/PySubstringSearch", "keywords": "substring pattern search suffix array c++", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PySubstringSearch", "package_url": "https://pypi.org/project/PySubstringSearch/", "platform": "", "project_url": "https://pypi.org/project/PySubstringSearch/", "project_urls": {"Homepage": "https://github.com/Intsights/PySubstringSearch", "Source": "https://github.com/Intsights/PySubstringSearch"}, "release_url": "https://pypi.org/project/PySubstringSearch/0.3.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python library for fast substring/pattern search written in C++ leveraging Suffix Array Algorithm", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n    <a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">\n        <img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74be79fdc2df9ca5c3a4fcf2dc022925cb60197d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f496e747369676874732f5079537562737472696e675365617263682f6d61737465722f696d616765732f6c6f676f2e706e67\">\n    </a>\n    </p><h3>\n        Python library for fast substring/pattern search written in C++ leveraging Suffix Array Algorithm\n    </h3>\n<p></p>\n<p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e2c5645ad5ed0836f6be03a610f6db5ed84dfda/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d49542d4c6963656e73652d626c7565\">\n<img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c55a672c0f73f69fda45cf3cd9c059e646306dd7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e36253230253743253230332e37253230253743253230332e3825323025374325323070797079332d626c7565\">\n<img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94a5bf0178f85903a32c14275d6c60ed1a14e817/68747470733a2f2f6769746875622e636f6d2f496e747369676874732f5079537562737472696e675365617263682f776f726b666c6f77732f4275696c642f62616467652e737667\">\n<a href=\"https://pypi.org/project/PySubstringSearch/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cccd637994db9e95feedfc350b1999e5066bb1b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f5079537562737472696e675365617263682e737667\"></a></p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#table-of-contents\" rel=\"nofollow\">Table of Contents</a></li>\n<li><a href=\"#about-the-project\" rel=\"nofollow\">About The Project</a>\n<ul>\n<li><a href=\"#built-with\" rel=\"nofollow\">Built With</a></li>\n<li><a href=\"#performance\" rel=\"nofollow\">Performance</a></li>\n<li><a href=\"#prerequisites\" rel=\"nofollow\">Prerequisites</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#contact\" rel=\"nofollow\">Contact</a></li>\n</ul>\n<h2>About The Project</h2>\n<p>PySubstringSearch is a library intended for searching over an index file for substring patterns. The library is written in C++ to achieve speed and efficiency. The library also uses <a href=\"https://github.com/michaelmaniscalco/msufsort\" rel=\"nofollow\">Msufsort</a> suffix array construction library for string indexing. The created index consists of the original text and a 32bit suffix array structs. The library relies on a proprietary container protocol to hold the original text along with the index in chunks of 512mb to evade the limitation of the Suffix Array Construction implementation.</p>\n<p>The module implements two methods, search_sequential &amp; search_parallel. search_sequential searches through the inner chunks one by one where search_parallel searches concurrently. When dealing with big indices, bigger than 1gb for example, search_parallel would function faster. I advice to check them both with the resulted index to find which one fits better.</p>\n<h3>Built With</h3>\n<ul>\n<li><a href=\"https://github.com/michaelmaniscalco/msufsort\" rel=\"nofollow\">Msufsort</a></li>\n</ul>\n<h3>Performance</h3>\n<table>\n<thead>\n<tr>\n<th>Library</th>\n<th>Text Size</th>\n<th>Function</th>\n<th>Time</th>\n<th>#Results</th>\n<th>Improvement Factor</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://pypi.org/project/ripgrepy/\" rel=\"nofollow\">ripgrepy</a></td>\n<td>500mb</td>\n<td>Ripgrepy('text_one', '500mb').run().as_string.split('\\n')</td>\n<td>127 ms \u00b1 694 \u00b5s per loop</td>\n<td>12553</td>\n<td>1.0x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>500mb</td>\n<td>reader.search_sequential('text_one')</td>\n<td>2.48 ms \u00b1 53.4 \u00b5s per loop</td>\n<td>12553</td>\n<td>51.2x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>500mb</td>\n<td>reader.search_parallel('text_one')</td>\n<td>3.78 ms \u00b1 350 \u00b5s per loop</td>\n<td>12553</td>\n<td>33.6x</td>\n</tr>\n<tr>\n<td><a href=\"https://pypi.org/project/ripgrepy/\" rel=\"nofollow\">ripgrepy</a></td>\n<td>500mb</td>\n<td>Ripgrepy('text_two', '500mb').run().as_string.split('\\n')</td>\n<td>127 ms \u00b1 623 \u00b5s per loop</td>\n<td>769</td>\n<td>1.0x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>500mb</td>\n<td>reader.search_sequential('text_two')</td>\n<td>156 \u00b5s \u00b1 916 ns per loop</td>\n<td>769</td>\n<td>814.0x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>500mb</td>\n<td>reader.search_parallel('text_two')</td>\n<td>251 \u00b5s \u00b1 80.2 \u00b5s per loop</td>\n<td>769</td>\n<td>506.0x</td>\n</tr>\n<tr>\n<td><a href=\"https://pypi.org/project/ripgrepy/\" rel=\"nofollow\">ripgrepy</a></td>\n<td>6gb</td>\n<td>Ripgrepy('text_one', '6gb').run().as_string.split('\\n')</td>\n<td>1.38 s \u00b1 3.82 ms</td>\n<td>206884</td>\n<td>1.0x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>6gb</td>\n<td>reader.search_sequential('text_one')</td>\n<td>93.7 ms \u00b1 2.16 ms per loop</td>\n<td>206884</td>\n<td>15.3x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>6gb</td>\n<td>reader.search_parallel('text_one')</td>\n<td>34.3 ms \u00b1 321 \u00b5s per loop</td>\n<td>206884</td>\n<td>40.5x</td>\n</tr>\n<tr>\n<td><a href=\"https://pypi.org/project/ripgrepy/\" rel=\"nofollow\">ripgrepy</a></td>\n<td>6gb</td>\n<td>Ripgrepy('text_two', '6gb').run().as_string.split('\\n')</td>\n<td>1.61 s \u00b1 37.2 ms per loop</td>\n<td>6921</td>\n<td>1.0x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>6gb</td>\n<td>reader.search_sequential('text_two')</td>\n<td>2.22 ms \u00b1 79.3 \u00b5s per loop</td>\n<td>6921</td>\n<td>725.2x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">PySubstringSearch</a></td>\n<td>6gb</td>\n<td>reader.search_parallel('text_two')</td>\n<td>1.38 ms \u00b1 26 \u00b5s per loop</td>\n<td>6921</td>\n<td>1166.6x</td>\n</tr></tbody></table>\n<h3>Prerequisites</h3>\n<p>In order to compile this package you should have GCC &amp; Python development package installed.</p>\n<ul>\n<li>Fedora</li>\n</ul>\n<pre>sudo dnf install python3-devel gcc-c++\n</pre>\n<ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<pre>sudo apt install python3-dev g++-9\n</pre>\n<h3>Installation</h3>\n<pre>pip3 install PySubstringSearch\n</pre>\n<h2>Usage</h2>\n<p>Create an index</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pysubstringsearch</span>\n\n<span class=\"c1\"># creating a new index file</span>\n<span class=\"c1\"># if a file with this name is already exists, it will be overwritten</span>\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">pysubstringsearch</span><span class=\"o\">.</span><span class=\"n\">Writer</span><span class=\"p\">(</span>\n    <span class=\"n\">index_file_path</span><span class=\"o\">=</span><span class=\"s1\">'output.idx'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># adding entries to the new index</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">add_entry</span><span class=\"p\">(</span><span class=\"s1\">'some short string'</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">add_entry</span><span class=\"p\">(</span><span class=\"s1\">'another but now a longer string'</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">add_entry</span><span class=\"p\">(</span><span class=\"s1\">'more text to add'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># making sure the data is dumped to the file</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">finalize</span><span class=\"p\">()</span>\n</pre>\n<p>Search a substring within an index</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pysubstringsearch</span>\n\n<span class=\"c1\"># opening an index file for searching</span>\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">pysubstringsearch</span><span class=\"o\">.</span><span class=\"n\">Reader</span><span class=\"p\">(</span>\n    <span class=\"n\">index_file_path</span><span class=\"o\">=</span><span class=\"s1\">'output.idx'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># lookup for a substring sequentially</span>\n<span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">search_sequential</span><span class=\"p\">(</span><span class=\"s1\">'short'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'some short string'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># lookup for a substring sequentially</span>\n<span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">search_sequential</span><span class=\"p\">(</span><span class=\"s1\">'string'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'some short string'</span><span class=\"p\">,</span> <span class=\"s1\">'another but now a longer string'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># lookup for a substring concurrently</span>\n<span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">search_parallel</span><span class=\"p\">(</span><span class=\"s1\">'short'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'some short string'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># lookup for a substring concurrently</span>\n<span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">search_parallel</span><span class=\"p\">(</span><span class=\"s1\">'string'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'some short string'</span><span class=\"p\">,</span> <span class=\"s1\">'another but now a longer string'</span><span class=\"p\">]</span>\n</pre>\n<h2>License</h2>\n<p>Distributed under the MIT License. See <code>LICENSE</code> for more information.</p>\n<h2>Contact</h2>\n<p>Gal Ben David - <a href=\"mailto:gal@intsights.com\">gal@intsights.com</a></p>\n<p>Project Link: <a href=\"https://github.com/Intsights/PySubstringSearch\" rel=\"nofollow\">https://github.com/Intsights/PySubstringSearch</a></p>\n\n          </div>"}, "last_serial": 6823946, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "300cb2bbe9f2027e691cf9f900fbfd4e", "sha256": "c9d8b08ab0c276631eb0080b5ad0afcf184c95a1c3b341af989cb866278876d7"}, "downloads": -1, "filename": "PySubstringSearch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "300cb2bbe9f2027e691cf9f900fbfd4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 74767, "upload_time": "2020-01-03T09:46:15", "upload_time_iso_8601": "2020-01-03T09:46:15.430630Z", "url": "https://files.pythonhosted.org/packages/1c/27/e99df417edb150c0efeec40ca3b43c721e447b3ba502d617796e8e12faaf/PySubstringSearch-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "352c5bd691e2895396f23e379463b081", "sha256": "39eb660df89cf12b411495e79fc83dfd4fc280ea920d40d1a7de4ee868a62f93"}, "downloads": -1, "filename": "PySubstringSearch-0.2.0.tar.gz", "has_sig": false, "md5_digest": "352c5bd691e2895396f23e379463b081", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 75492, "upload_time": "2020-01-05T15:29:24", "upload_time_iso_8601": "2020-01-05T15:29:24.304694Z", "url": "https://files.pythonhosted.org/packages/4c/3e/5ff657a9ccf48a2660a7519498dc1f0a6fb5eff2e83c6eda61a520577018/PySubstringSearch-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "6d8ff0807af804400e917ba85c010a63", "sha256": "c0cc45f1786b898776606d928eca340a2c656406b518489c06f45d64a12811cf"}, "downloads": -1, "filename": "PySubstringSearch-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6d8ff0807af804400e917ba85c010a63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 75614, "upload_time": "2020-01-08T17:12:42", "upload_time_iso_8601": "2020-01-08T17:12:42.615686Z", "url": "https://files.pythonhosted.org/packages/e2/94/55187ce672b83f3630ae28ae3d81d468158590780e9172083ef6fc96138c/PySubstringSearch-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "80638f56ab8bf6bbc0926d658ab8c292", "sha256": "b2e2066f365b1e0fd1e41366056b515cd5688a01b239e3ebeaedcc25521c4384"}, "downloads": -1, "filename": "PySubstringSearch-0.2.3.tar.gz", "has_sig": false, "md5_digest": "80638f56ab8bf6bbc0926d658ab8c292", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 76054, "upload_time": "2020-01-20T10:28:30", "upload_time_iso_8601": "2020-01-20T10:28:30.761266Z", "url": "https://files.pythonhosted.org/packages/36/0b/65a8361b5093e762e5deb81ffb3b7f4b52d6146faa2b203ba79eaebc7571/PySubstringSearch-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "a46e0e3b45dcfcb48c7553b65db5f82f", "sha256": "7d8b34eed6ac4ae313b4c69d86d4568f832617c172e9c2d09abcf4615d53731d"}, "downloads": -1, "filename": "PySubstringSearch-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a46e0e3b45dcfcb48c7553b65db5f82f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 76153, "upload_time": "2020-03-16T18:40:25", "upload_time_iso_8601": "2020-03-16T18:40:25.356853Z", "url": "https://files.pythonhosted.org/packages/45/22/d97c8d6e10b4c81158df4d888a4251972e7911191841f48ca2b509c7e79e/PySubstringSearch-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "6a23414575e7b5d92fde6bb5ee619f43", "sha256": "5dbbc97b54d28460a2a4c085cd5c3e283b3d925d9718fb988765e16d19127320"}, "downloads": -1, "filename": "PySubstringSearch-0.2.5.tar.gz", "has_sig": false, "md5_digest": "6a23414575e7b5d92fde6bb5ee619f43", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 208077, "upload_time": "2020-03-16T19:48:56", "upload_time_iso_8601": "2020-03-16T19:48:56.027171Z", "url": "https://files.pythonhosted.org/packages/85/cd/ca4027a9e8d8aef6d13869757def73bb61ef9be286b2468d9040f6618cca/PySubstringSearch-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d658914ddb306a49d3ac8650f35e7dd4", "sha256": "9fff0ce6037d4b95319583b7383f1d19145af34a138b581afb173b4298e02143"}, "downloads": -1, "filename": "PySubstringSearch-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d658914ddb306a49d3ac8650f35e7dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 208275, "upload_time": "2020-03-16T20:13:17", "upload_time_iso_8601": "2020-03-16T20:13:17.894778Z", "url": "https://files.pythonhosted.org/packages/20/1f/dc985330993ccd68468a96dd8c03d44b8c6e36b17dcc27482cf37f2ac416/PySubstringSearch-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d658914ddb306a49d3ac8650f35e7dd4", "sha256": "9fff0ce6037d4b95319583b7383f1d19145af34a138b581afb173b4298e02143"}, "downloads": -1, "filename": "PySubstringSearch-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d658914ddb306a49d3ac8650f35e7dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 208275, "upload_time": "2020-03-16T20:13:17", "upload_time_iso_8601": "2020-03-16T20:13:17.894778Z", "url": "https://files.pythonhosted.org/packages/20/1f/dc985330993ccd68468a96dd8c03d44b8c6e36b17dcc27482cf37f2ac416/PySubstringSearch-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:50 2020"}