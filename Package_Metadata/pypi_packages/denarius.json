{"info": {"author": "Will Breaden Madden", "author_email": "wbm@protonmail.ch", "bugtrack_url": null, "classifiers": [], "description": "denarius\n========\n\ncurrency and other utilities\n\n    If you don't find a way to make money while you sleep, you will work\n    until you die. -- Warren Buffett\n\nintroduction\n============\n\ndenarius is a project, not a finished product. It features various\nutilities for collating cryptocurrency, mining, financial and other\ndata, for plotting data and for accessing bank accounts. It features\nanalyses of data for systematic descriptions, for predictions, for\narbitrage etc.\n\nsetup\n=====\n\n.. code:: bash\n\n    sudo apt-get install sqlite\n\n    wget https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz\n    tar -xvzf geckodriver-v0.19.1-linux64.tar.gz\n    rm geckodriver-v0.19.1-linux64.tar.gz\n    chmod +x geckodriver\n    sudo cp geckodriver /usr/local/bin/\n\n    sudo pip2 install git+https://github.com/veox/python2-krakenex.git\n    sudo pip3 install git+https://github.com/veox/python3-krakenex.git\n\n    sudo pip install denarius --upgrade --process-dependency-links\n\nBitcoin values\n==============\n\n.. figure:: media/2010_07_17--2017_01_20_Bitcoin_EUR.png\n   :alt: \n\n.. figure:: media/2016-12--2017-01_Bitcoin_EUR.png\n   :alt: \n\nThe function ``ticker_Bitcoin`` returns data of the following form:\n\n.. code:: python\n\n    {'volume': 2050.1665002833397, 'last': 992.2553834529656, 'timestamp': 1487551580.0, 'bid': 991.8303740083114, 'vwap': 993.3415187004156, 'high': 1002.9278428409522, 'low': 981.3656970154892, 'ask': 992.2553834529656, 'open': 993.3887419720438}\n\nIt accesses data from Bitstamp.\n\n+---------------+-----------------------------------------------+\n| **feature**   | **description**                               |\n+===============+===============================================+\n| last          | last Bitcoin price                            |\n+---------------+-----------------------------------------------+\n| high          | last 24 hours price high                      |\n+---------------+-----------------------------------------------+\n| low           | last 24 hours price low                       |\n+---------------+-----------------------------------------------+\n| vwap          | last 24 hours volume weighted average price   |\n+---------------+-----------------------------------------------+\n| volume        | last 24 hours volume                          |\n+---------------+-----------------------------------------------+\n| bid           | highest buy order                             |\n+---------------+-----------------------------------------------+\n| ask           | lowest sell order                             |\n+---------------+-----------------------------------------------+\n| timestamp     | UNIX timestamp date and time                  |\n+---------------+-----------------------------------------------+\n| open          | first price of the day                        |\n+---------------+-----------------------------------------------+\n\nThe function ``data_historical_Bitcoin`` returns by default data of the\nfollowing form:\n\n.. code:: python\n\n    {'bpi': {'2017-02-17': 992.1077, '2017-02-16': 969.2414, '2017-02-15': 952.6512, '2017-02-14': 954.1432, '2017-02-13': 940.7982, '2017-02-12': 940.1764, '2017-02-11': 949.3397, '2017-02-10': 933.4325, '2017-02-19': 991.254, '2017-02-18': 997.0854}, 'time': {'updated': 'Feb 20, 2017 00:20:08 UTC', 'updatedISO': '2017-02-20T00:20:08+00:00'}, 'disclaimer': 'This data was produced from the CoinDesk Bitcoin Price Index. BPI value data returned as EUR.'}\n\nWith the option ``return_list``, it returns data of the following form:\n\n.. code:: python\n\n    [['2017-02-10', 933.4325], ['2017-02-11', 949.3397], ['2017-02-12', 940.1764], ['2017-02-13', 940.7982], ['2017-02-14', 954.1432], ['2017-02-15', 952.6512], ['2017-02-16', 969.2414], ['2017-02-17', 992.1077], ['2017-02-18', 997.0854], ['2017-02-19', 991.254]]\n\nWith the option ``return_UNIX_times``, it returns data of the following\nform:\n\n.. code:: python\n\n    [[1486684800, 933.4325], [1486771200, 949.3397], [1486857600, 940.1764], [1486944000, 940.7982], [1487030400, 954.1432], [1487116800, 952.6512], [1487203200, 969.2414], [1487289600, 992.1077], [1487376000, 997.0854], [1487462400, 991.254]]\n\nLocalBitcoins\n=============\n\nLocalBitcoins data is available via its API. For example, the following\nURL gives data on current trades in GBP available by national bank\ntransfer:\n\n-  https://localbitcoins.com/buy-bitcoins-online/GB/united-kingdom/national-bank-transfer/.json\n\nThe data returned by the API is of a form `like\nthis <data/2017-03-07T2249Z.txt>`__.\n\nThe function ``values_Bitcoin_LocalBitcoin`` returns the price values\nreturned by calling the API in this way.\n\n.. code:: python\n\n    import denarius\n    denarius.values_Bitcoin_LocalBitcoin()\n\nThe script ``loop_save_LocalBitcoins_values_to_database.py`` loop\nrecords LocalBitcoins data to database. To address closed gateways\narising from repeat calls, the script could be used in a way like the\nfollowing:\n\n.. code:: bash\n\n    while true; do\n        loop_save_LocalBitcoins_values_to_database.py --timeperiod=3600\n        sleep 5400\n    done\n\nThe script ``login_web_LocalBitcoins.py`` is available for a quick login\nto LocalBitcoins using Selenium. It depends on the credentials file\n``~/.lbc`` existing and containing information of the following form:\n\n.. code:: python\n\n    username = \"xxxxxxxxxx\"\n    passcode = \"xxxxxxxxxx\"\n    secret   = \"xxxxxxxxxxxxxxxxxxxxxxxx\"\n\ndatabases\n=========\n\nA database of Bitcoin values can be saved in the following ways:\n\n.. code:: python\n\n    import denarius\n    denarius.save_database_Bitcoin(filename = \"database.db\")\n\n.. code:: python\n\n    import denarius\n    denarius.save_database_Bitcoin(filename = \"database_Bitcoin_EUR.db\", currency = \"EUR\")\n    denarius.save_database_Bitcoin(filename = \"database_Bitcoin_GBP.db\", currency = \"GBP\")\n\ngraphs\n======\n\nThe function ``save_graph_Bitcoin`` creates a graph of Bitcoin\nhistorical values over a specified time. The function\n``save_graph_LocalBitcoins`` creates a graph of LocalBitcoins Bitcoin\nlowest prices in GBP as recorded in a database by the script\n``loop_save_LocalBitcoins_values_to_database.py``.\n\ndenarius\\_graph\\_Bitcoin\n------------------------\n\nThe script ``denarius_graph_Bitcoin.py`` displays a PyQt GUI with a\ngraph of the last Bitcoin values.\n\n.. code:: bash\n\n    denarius_graph_Bitcoin.py --help\n\n.. code:: bash\n\n    denarius_graph_Bitcoin.py\n\n.. code:: bash\n\n    denarius_graph_Bitcoin.py --currency=EUR --days=100\n\n.. figure:: media/denarius_graph_Bitcoin.png\n   :alt: \n\nLocalBitcoins\n-------------\n\nA graph can be generated of Bitcoin GBP value versus LocalBitcoins GBP\nlowest value:\n\n.. code:: bash\n\n    import denarius\n    denarius.save_graph_Bitcoin_LocalBitcoins()\n\n.. figure:: media/Bitcoin_LocalBitcoins_lowest_price_GBP.png\n   :alt: \n\nA graph can be generated of Bitcoin GBP value versus LocalBitcoins GBP\nlowest 5 values:\n\n.. code:: bash\n\n    import denarius\n    denarius.save_graphs_Bitcoin_LocalBitcoins()\n\n.. figure:: media/Bitcoin_LocalBitcoins_prices_GBP.png\n   :alt: \n\nA graph can be generated of LocalBitcoins normalized prices over days:\n\n.. figure:: media/LocalBitcoins_Bitcoin_lowest_price_GBP_days.png\n   :alt: \n\nA graph can be generated of LocalBitcoins normalized prices over weeks:\n\n.. figure:: media/LocalBitcoins_Bitcoin_lowest_price_GBP_weeks.png\n   :alt: \n\nA graph can be generated of LocalBitcoins non-normalized prices over\nweeks:\n\n.. figure:: media/LocalBitcoins_Bitcoin_lowest_price_GBP_weeks_not_normalized.png\n   :alt: \n\nBollinger bands\n---------------\n\n.. figure:: media/LocalBitcoins_1_Bollinger_bands.png\n   :alt: \n\nKanoPool\n========\n\nKanoPool records for addresses can be recorded to CSV in a way like the\nfollowing:\n\n.. code:: bash\n\n    denarius_loop_save_KanoPool.py --help\n\n    denarius_loop_save_KanoPool.py --addresses=1Miner7R28PKcTRbEDwQt4ykMinunhTehs --interval=10\n\nThe CSV data can be analysed using the Jupyter Notebook\n`KanoPool.ipynb <https://github.com/wdbm/denarius/blob/master/KanoPool.ipynb>`__.\n\nNanopool\n========\n\nNanopool records for addresses can be recorded to CSV in a way like the\nfollowing:\n\n.. code:: bash\n\n    denarius_loop_save_Nanopool.py --help\n\n    denarius_loop_save_Nanopool.py --addresses=0xbd3f1126d4c20f72a77e38dfda18622a6d663cd0\n\nThe CSV fields are, in order, as follows:\n\n-  datetime\n-  account\n-  balance\n-  earnings\\_per\\_day\\_BTC\n-  earnings\\_per\\_day\\_ETH\n-  earnings\\_per\\_day\\_EUR\n-  earnings\\_per\\_hour\\_BTC\n-  earnings\\_per\\_hour\\_ETH\n-  earnings\\_per\\_hour\\_EUR\n-  earnings\\_per\\_minute\\_BTC\n-  earnings\\_per\\_minute\\_ETH\n-  earnings\\_per\\_minute\\_EUR\n-  earnings\\_per\\_month\\_BTC\n-  earnings\\_per\\_month\\_ETH\n-  earnings\\_per\\_month\\_EUR\n-  earnings\\_per\\_week\\_BTC\n-  earnings\\_per\\_week\\_ETH\n-  earnings\\_per\\_week\\_EUR\n-  hashrate\n-  hashrate12hr\n-  hashrate1hr\n-  hashrate24hr\n-  hashrate3hr\n-  hashrate6hr\n-  hashrate\\_pool\n-  pool\\_miners\n-  pool\\_workers\n\nSlush Pool\n==========\n\nSlush Pool records for an address can be recorded to CSV in a way like\nthe following:\n\n.. code:: bash\n\n    denarius_loop_save_SlushPool.py --help\n\n    denarius_loop_save_SlushPool.py --addresses=1Miner7R28PKcTRbEDwQt4ykMinunhTehs --interval=60 --alarm=11800000 --slushloginname=user --slushworkername=worker1\n\nThe CSV fields are, in order, as follows:\n\n-  address\n-  hash rate\n-  shares\n-  UNIX timestamp\n-  unconfirmed reward in Bitcoin\n-  confirmed reward in Bitcoin\n-  total reward (confirmed + unconfirmed) in Bitcoin\n-  total payout since script launch in Bitcoin\n-  number of blocks found since script launch\n\nThe CSV data can be analysed using the Jupyter Notebook\n`SlushPool.ipynb <https://github.com/wdbm/denarius/blob/master/SlushPool.ipynb>`__.\n\nbanks\n=====\n\nThe banks module provides utilities for getting transactions of a bank\naccount (Monzo, Starling or RBS) using the `Monzo\nAPI <https://monzo.com/docs/>`__, the `Starling\nAPI <https://developer.starlingbank.com/get-started>`__ and the\n`Teller.io API <https://teller.io/>`__ (`background on Teller.io and\nStevie\nGraham <https://www.wired.co.uk/article/stevie-graham-teller-open-banking-barclays-hsbc>`__.\nTo use this module, credentials files should be created.\n\nAccess the `Monzo developers portal <https://developers.monzo.com>`__\nand create a new OAuth confidential client. Set the redirect URL for the\nclient to https://github.com/pawelad/pymonzo. Create a URL of the\nfollowing form using the client ID string:\n\n::\n\n    https://auth.getmondo.co.uk/?response_type=code&redirect_uri=https://github.com/pawelad/pymonzo&client_id=<YOUR_CLIENT_ID>\n\nAccess this URL and authorize the client application. The confirmation\ne-mail sent contains a URL of the following form:\n\n::\n\n    https://github.com/pawelad/pymonzo?code=<YOUR_AUTH_CODE>&state=\n\nCopy the authorization code from this URL and then access the URL to\nauthorize the client application.\n\nLaunch an interactive Python session and, using the client credentials\nand the ``pymonzo`` API interface, generate an access token and a\nrefresh token.\n\n.. code:: python\n\n    client_id = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n    client_secret = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n    auth_code = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n\n    from pymonzo import MonzoAPI\n\n    monzo = MonzoAPI(\n        client_id     = client_id,\n        client_secret = client_secret,\n        auth_code     = auth_code\n    )\n\nThis saves an authorization that lasts 48 hours to the file\n``~/.pymonzo-token``, which contains a dictionary of the following form:\n\n.. code:: python\n\n    {\n        \"access_token\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"client_id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"client_secret\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"expires_at\": 1517106306.8881364,\n        \"expires_in\": 172799,\n        \"refresh_token\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"token_type\": \"Bearer\",\n        \"user_id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n    }\n\nNow, API access can be tested by calling the ``monzopy`` Monzo API\ninterface without any arguments (such that it loads tokens from the file\n``~/.pymonzo-token`` and manages token refreshes).\n\n.. code:: python\n\n    from pymonzo import MonzoAPI\n\n    monzo = MonzoAPI()\n\n    print(monzo.accounts())\n    print(monzo.balance())\n    print(monzo.transactions())\n\nFor Starling, the credentials file (by default ``~/.starling``) should\nbe created and its content should be a Starling personal access token.\nThis is acquired by creating a Starling personal account, then creating\na Starling developers account, linking these accounts, and then\ngenerating a personal access token. More advanced access is possible\nusing OAuth2.\n\nFor RBS, the credentials file (by default ``~/.rbs``) should have\ncontent of the following form:\n\n.. code:: python\n\n    token_teller        = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    account_code_teller = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n\nPandas DataFrames of transactions can be retrieved in ways like the\nfollowing:\n\n.. code:: python\n\n    import denarius.banks\n    df = denarius.banks.transactions_DataFrame_Monzo()\n    df = denarius.banks.transactions_DataFrame_RBS()\n    df = denarius.banks.transactions_DataFrame_Starling()\n\nA payment can be searched for in ways like the following:\n\n.. code:: python\n\n    denarius.banks.payment_in_transactions_Monzo(reference = \"271828182\", amount = 314)\n    denarius.banks.payment_in_transactions_RBS(reference = \"271828182\", amount = 314)\n    denarius.banks.payment_in_transactions_Starling(reference = \"271828182\", amount = 314)\n\nThese functions search the \"counterparty\\_reference\", \"description\" and\n\"notes\" fields of a DataFrame of bank account transactions for a\nspecified reference. If the reference is found, the specified amount of\nthe payment is compared to the sum of amounts found for the specified\nreference in the \"amount\" field. If a payer name is specified, it is\nchecked against the payer name of the transaction. They return a\ndictionary of the following form:\n\n.. code:: python\n\n    {\n        \"reference_found\":     bool,         # True if reference found\n        \"payer_name_match\":    bool or None, # True if payer name matched, False if payer name not matched, None if no payer name to check\n        \"payer_name_observed\": string,       # payer name observed\n        \"amount_correct\":      bool,         # True if sum of amounts found is amount specified\n        \"valid\":               bool,         # True if reference found and amount correct\n        \"transactions\"         DataFrame,    # DataFrame of matches\n        \"amount_difference\":   float         # difference between amount specified and sum of amounts found\n    }\n\nSo, these functions could be used in a straightforward boolean way to\ncheck if a payment has been made:\n\n.. code:: python\n\n    denarius.banks.payment_in_transactions_Monzo(reference = \"271828182\", amount = 314)[\"valid\"]\n\nThey also could be used in a more involved way to account for occasions\nin which a payment is found but has an incorrect amount and a further\npayment with the same reference must be requested.\n\nBoth the ``transactions_DataFrame`` and ``payment_in_transactions``\nfunctions have the option ``print_table`` which can print to terminal a\ntable of the transactions under consideration:\n\n.. code:: python\n\n    df = denarius.banks.transactions_DataFrame_Monzo(print_table = True)\n\nThe script ``print_table_bank_account.py`` uses this functionality to\nprint to terminal a table of transactions from a specified bank.\n\nThere is the function ``payment_in_transactions_bank`` which is a\nwrapper for the more specialised functions like\n``payment_in_transactions_Monzo``. It takes a bank name as an argument\nand uses the appropriate functionality for the bank specified.\n\nKraken\n======\n\nThe Kraken module provides utilities for getting current balances of\ncurrencies held, buying Bitcoin for Euros at the last market price, and\nsending Bitcoin from Kraken to an address, the key for which has been\nverified on Kraken. The scripts ``print_Kraken_balances.py``,\n``print_Kraken_last_price_BTC_EUR.py`` and\n``buy_BTC_for_EUR_last_price_on_Kraken.py`` all use these\nfunctionalities.\n\nThe Kraken module depends on the credentials file ``~/.kraken`` existing\nand containing the key on the first line and the secret on the second\nline.\n\nBitcoin can be sent from Kraken to an address key in a way like the\nfollowing:\n\n.. code:: python\n\n    import denarius.Kraken\n\n    denarius.Kraken.start_API()\n    print(denarius.Kraken.send_XBT(amount = 0.1, address_key = \"BIGMONEY\"))\n\nThe script ``login_web_Kraken.py`` is available for a quick login to\nKraken using Selenium. It depends on the credentials file\n``~/.kraken_credentials`` existing and containing information of the\nfollowing form:\n\n.. code:: python\n\n    username = \"xxxxxxxxxx\"\n    passcode = \"xxxxxxxxxx\"\n    secret   = \"xxxxxxxxxxxxxxxxxxxxxxxx\"\n\nRBS\n===\n\nThe RBS module provides utilities for getting the balance and recent\ntransactions of an RBS account using the RBS banking web interface,\nSelenium and Firefox. For convenience, account details can be stored in\na credentials file, which is assumed by default to be ``~/.rbs``. The\naccount code is an alphanumeric code extracted from the web interface.\nThe content of a credentials file is of the following form, which is\nPython code:\n\n.. code:: python\n\n    customer_number = \"XXXXXXXXXX\"\n    PIN             = \"XXXXXX\"\n    passcode        = \"XXXXXXXXXXXXXXXXXXXX\"\n    account_code    = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n\nA dictionary of the current balance and a pandas DataFrame of recent\ntransactions is returned by the function ``RBS.account_status``.\n\n.. code:: python\n\n    import denarius.RBS\n\n    status  = RBS.account_status()\n    balance = status[\"balance\"]\n    df      = status[\"transactions\"]\n\nThe DataFrame features the fields ``date``, ``description`` and\n``amount``. A transaction containing a certain reference or description\ncould be selected in the following way:\n\n.. code:: python\n\n    df[df[\"description\"].str.contains(\"transaction reference 123\")]\n\nThe existence of a transaction can be tested in a way like the\nfollowing:\n\n.. code:: python\n\n    if df[df[\"description\"].str.contains(\"transaction reference 123\")].values.any():\n\n        print(\"transaction found\")\n\n    else:\n\n        print(\"transaction not found\")\n\nThe script ``get_account_balance_RBS.py`` is available to open an RBS\naccount web interface and to display the current balance and recent\ntransactions in the terminal, optionally in a loop.\n\n.. code:: bash\n\n    get_account_balance_RBS.py --loop\n\nThe script ``detect_transaction_RBS.py`` is available to search for a\ntransaction or transactions with a specified reference.\n\n.. code:: bash\n\n    detect_transaction_RBS.py --reference=123\n\nThe script ``loop_save_RBS_to_CSV.py`` is available to loop save RBS\ntransactions and balance to CSV, merging with recorded CSV data to avoid\nrecording duplicates.\n\nSantander\n=========\n\nThe Santander module provides utilities for getting recent transactions\nusing the Santander banking web interface, Selenium and Firefox. Account\ndetails are stored in a credentials file, which is assumed by default to\nbe ``~/.santander``. The content of a credentials file is of the\nfollowing form, which is Python code:\n\n.. code:: python\n\n    customer_number          = \"XXXXXXXX\"\n    customer_PIN             = \"XXXXX\"\n    security_question_answer = \"XXXXXXXX\"\n\nA DataFrame of recent transactions is returned by the function\n``Santander.transactions_DataFrame``. The script\n``loop_save_Santander_to_CSV.py`` saves transactions to CSV in a\ncontinuous loop. The function ``Santander.payment_in_transactions_CSV``\ncan search in transactions recorded in CSV for a specified transaction\nreference together with a specified value and returns a boolean to\nindicate whether the transaction was detected.\n\narbitrage\n=========\n\n-  `denarius.arbitrage <denarius.arbitrage.ipynb>`__\n\nThe script ``denarius_loop_append_arbitrage_DataFrames_to_CSV.py``\nrecords data for arbitrage between Kraken and LocalBitcoins UK. The\nscript ``denarius_display_arbitrage.py`` displays recorded data and\ncurrent prices for arbitrage between Kraken and LocalBitcoins UK.\n\n.. figure:: media/denarius_display_arbitrage.png\n   :alt: \n\nThe old script ``loop_save_arbitrage_data_Kraken_LocalBitcoins_UK.py``\nrecords data for arbitrage between Kraken and LocalBitcoins UK. The old\nscript ``loop_display_arbitrage_data.py`` displays recorded data and\ncurrent prices for arbitrage between Kraken and LocalBitcoins UK.\n\n.. figure:: media/loop_display_arbitrage_data.png\n   :alt: \n\npaper wallets for Bitcoin, QR codes of keys\n===========================================\n\nThe script ``create_QR_codes_of_public_and_private_keys.py`` creates a\nQR code for a specified public key and private key and enables optional\nspecification of the size of the resulting PNG images. It loads the keys\nfrom a Python file (``keys.py`` by default) which defines the string\nvariables ``key_public`` and ``key_private``.\n\nThe script ``create_paper_wallet.py`` creates a QR code for a specified\npublic key and private key. It then creates an image of a Bitcoin paper\nwallet. It loads the keys from a Python file (``keys.py`` by default)\nwhich defines the string variables ``key_public`` and ``key_private``.\n\n.. figure:: media/paper_wallet.png\n   :alt: \n\nFaster Payments Service\n=======================\n\n-  `2018-01-14\n   participants <http://www.fasterpayments.org.uk/about-us/current-participants>`__\n\n-  Barclays\n-  Citi\n-  Clear Bank\n-  Clydesdale Bank\n-  The Co-operative Bank\n-  HSBC\n-  Lloyds Bank\n-  Metro Bank\n-  Monzo\n-  Nationwide\n-  NatWest\n-  Northern Bank\n-  Raphaels Bank\n-  Royal Bank of Scotland\n-  Santander\n-  Starling Bank\n-  Turkish Bank UK\n\nSEPA Instant\n============\n\n-  `2018-01-14\n   participants <https://www.europeanpaymentscouncil.eu/sites/default/files/participants_export/sepa_instant_credit_transfer/sepa_instant_credit_transfer.pdf?v=1515763349>`__\n\n-  Austria\n-  Belgium\n-  Bulgaria\n-  Estonia\n-  France\n-  Germany\n-  Italy\n-  Latvia\n-  Lithuania\n-  Malta\n-  Netherlands\n-  Spain\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wdbm/denarius", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "denarius", "package_url": "https://pypi.org/project/denarius/", "platform": "", "project_url": "https://pypi.org/project/denarius/", "project_urls": {"Homepage": "https://github.com/wdbm/denarius"}, "release_url": "https://pypi.org/project/denarius/2018.9.14.1432/", "requires_dist": null, "requires_python": "", "summary": "currency and other utilities", "version": "2018.9.14.1432", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"denarius\">\n<h2>denarius</h2>\n<p>currency and other utilities</p>\n<blockquote>\nIf you don\u2019t find a way to make money while you sleep, you will work\nuntil you die. \u2013 Warren Buffett</blockquote>\n</div>\n<div id=\"introduction\">\n<h2>introduction</h2>\n<p>denarius is a project, not a finished product. It features various\nutilities for collating cryptocurrency, mining, financial and other\ndata, for plotting data and for accessing bank accounts. It features\nanalyses of data for systematic descriptions, for predictions, for\narbitrage etc.</p>\n</div>\n<div id=\"setup\">\n<h2>setup</h2>\n<pre>sudo apt-get install sqlite\n\nwget https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz\ntar -xvzf geckodriver-v0.19.1-linux64.tar.gz\nrm geckodriver-v0.19.1-linux64.tar.gz\nchmod +x geckodriver\nsudo cp geckodriver /usr/local/bin/\n\nsudo pip2 install git+https://github.com/veox/python2-krakenex.git\nsudo pip3 install git+https://github.com/veox/python3-krakenex.git\n\nsudo pip install denarius --upgrade --process-dependency-links\n</pre>\n</div>\n<div id=\"bitcoin-values\">\n<h2>Bitcoin values</h2>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/281c712df6ee97251d3af148d427bb7e3f2997e1/6d656469612f323031305f30375f31372d2d323031375f30315f32305f426974636f696e5f4555522e706e67\">\n</div>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b3cdcba37f0c47fdc51638d7af98cf8226766f5/6d656469612f323031362d31322d2d323031372d30315f426974636f696e5f4555522e706e67\">\n</div>\n<p>The function <tt>ticker_Bitcoin</tt> returns data of the following form:</p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'volume'</span><span class=\"p\">:</span> <span class=\"mf\">2050.1665002833397</span><span class=\"p\">,</span> <span class=\"s1\">'last'</span><span class=\"p\">:</span> <span class=\"mf\">992.2553834529656</span><span class=\"p\">,</span> <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mf\">1487551580.0</span><span class=\"p\">,</span> <span class=\"s1\">'bid'</span><span class=\"p\">:</span> <span class=\"mf\">991.8303740083114</span><span class=\"p\">,</span> <span class=\"s1\">'vwap'</span><span class=\"p\">:</span> <span class=\"mf\">993.3415187004156</span><span class=\"p\">,</span> <span class=\"s1\">'high'</span><span class=\"p\">:</span> <span class=\"mf\">1002.9278428409522</span><span class=\"p\">,</span> <span class=\"s1\">'low'</span><span class=\"p\">:</span> <span class=\"mf\">981.3656970154892</span><span class=\"p\">,</span> <span class=\"s1\">'ask'</span><span class=\"p\">:</span> <span class=\"mf\">992.2553834529656</span><span class=\"p\">,</span> <span class=\"s1\">'open'</span><span class=\"p\">:</span> <span class=\"mf\">993.3887419720438</span><span class=\"p\">}</span>\n</pre>\n<p>It accesses data from Bitstamp.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th><strong>feature</strong></th>\n<th><strong>description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr><td>last</td>\n<td>last Bitcoin price</td>\n</tr>\n<tr><td>high</td>\n<td>last 24 hours price high</td>\n</tr>\n<tr><td>low</td>\n<td>last 24 hours price low</td>\n</tr>\n<tr><td>vwap</td>\n<td>last 24 hours volume weighted average price</td>\n</tr>\n<tr><td>volume</td>\n<td>last 24 hours volume</td>\n</tr>\n<tr><td>bid</td>\n<td>highest buy order</td>\n</tr>\n<tr><td>ask</td>\n<td>lowest sell order</td>\n</tr>\n<tr><td>timestamp</td>\n<td>UNIX timestamp date and time</td>\n</tr>\n<tr><td>open</td>\n<td>first price of the day</td>\n</tr>\n</tbody>\n</table>\n<p>The function <tt>data_historical_Bitcoin</tt> returns by default data of the\nfollowing form:</p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'bpi'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'2017-02-17'</span><span class=\"p\">:</span> <span class=\"mf\">992.1077</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-16'</span><span class=\"p\">:</span> <span class=\"mf\">969.2414</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-15'</span><span class=\"p\">:</span> <span class=\"mf\">952.6512</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-14'</span><span class=\"p\">:</span> <span class=\"mf\">954.1432</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-13'</span><span class=\"p\">:</span> <span class=\"mf\">940.7982</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-12'</span><span class=\"p\">:</span> <span class=\"mf\">940.1764</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-11'</span><span class=\"p\">:</span> <span class=\"mf\">949.3397</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-10'</span><span class=\"p\">:</span> <span class=\"mf\">933.4325</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-19'</span><span class=\"p\">:</span> <span class=\"mf\">991.254</span><span class=\"p\">,</span> <span class=\"s1\">'2017-02-18'</span><span class=\"p\">:</span> <span class=\"mf\">997.0854</span><span class=\"p\">},</span> <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'updated'</span><span class=\"p\">:</span> <span class=\"s1\">'Feb 20, 2017 00:20:08 UTC'</span><span class=\"p\">,</span> <span class=\"s1\">'updatedISO'</span><span class=\"p\">:</span> <span class=\"s1\">'2017-02-20T00:20:08+00:00'</span><span class=\"p\">},</span> <span class=\"s1\">'disclaimer'</span><span class=\"p\">:</span> <span class=\"s1\">'This data was produced from the CoinDesk Bitcoin Price Index. BPI value data returned as EUR.'</span><span class=\"p\">}</span>\n</pre>\n<p>With the option <tt>return_list</tt>, it returns data of the following form:</p>\n<pre><span class=\"p\">[[</span><span class=\"s1\">'2017-02-10'</span><span class=\"p\">,</span> <span class=\"mf\">933.4325</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-11'</span><span class=\"p\">,</span> <span class=\"mf\">949.3397</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-12'</span><span class=\"p\">,</span> <span class=\"mf\">940.1764</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-13'</span><span class=\"p\">,</span> <span class=\"mf\">940.7982</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-14'</span><span class=\"p\">,</span> <span class=\"mf\">954.1432</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-15'</span><span class=\"p\">,</span> <span class=\"mf\">952.6512</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-16'</span><span class=\"p\">,</span> <span class=\"mf\">969.2414</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-17'</span><span class=\"p\">,</span> <span class=\"mf\">992.1077</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-18'</span><span class=\"p\">,</span> <span class=\"mf\">997.0854</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'2017-02-19'</span><span class=\"p\">,</span> <span class=\"mf\">991.254</span><span class=\"p\">]]</span>\n</pre>\n<p>With the option <tt>return_UNIX_times</tt>, it returns data of the following\nform:</p>\n<pre><span class=\"p\">[[</span><span class=\"mi\">1486684800</span><span class=\"p\">,</span> <span class=\"mf\">933.4325</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1486771200</span><span class=\"p\">,</span> <span class=\"mf\">949.3397</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1486857600</span><span class=\"p\">,</span> <span class=\"mf\">940.1764</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1486944000</span><span class=\"p\">,</span> <span class=\"mf\">940.7982</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1487030400</span><span class=\"p\">,</span> <span class=\"mf\">954.1432</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1487116800</span><span class=\"p\">,</span> <span class=\"mf\">952.6512</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1487203200</span><span class=\"p\">,</span> <span class=\"mf\">969.2414</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1487289600</span><span class=\"p\">,</span> <span class=\"mf\">992.1077</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1487376000</span><span class=\"p\">,</span> <span class=\"mf\">997.0854</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1487462400</span><span class=\"p\">,</span> <span class=\"mf\">991.254</span><span class=\"p\">]]</span>\n</pre>\n</div>\n<div id=\"localbitcoins\">\n<h2>LocalBitcoins</h2>\n<p>LocalBitcoins data is available via its API. For example, the following\nURL gives data on current trades in GBP available by national bank\ntransfer:</p>\n<ul>\n<li><a href=\"https://localbitcoins.com/buy-bitcoins-online/GB/united-kingdom/national-bank-transfer/.json\" rel=\"nofollow\">https://localbitcoins.com/buy-bitcoins-online/GB/united-kingdom/national-bank-transfer/.json</a></li>\n</ul>\n<p>The data returned by the API is of a form <a href=\"data/2017-03-07T2249Z.txt\" rel=\"nofollow\">like\nthis</a>.</p>\n<p>The function <tt>values_Bitcoin_LocalBitcoin</tt> returns the price values\nreturned by calling the API in this way.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">denarius</span>\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">values_Bitcoin_LocalBitcoin</span><span class=\"p\">()</span>\n</pre>\n<p>The script <tt>loop_save_LocalBitcoins_values_to_database.py</tt> loop\nrecords LocalBitcoins data to database. To address closed gateways\narising from repeat calls, the script could be used in a way like the\nfollowing:</p>\n<pre><span class=\"k\">while</span> true<span class=\"p\">;</span> <span class=\"k\">do</span>\n    loop_save_LocalBitcoins_values_to_database.py --timeperiod<span class=\"o\">=</span><span class=\"m\">3600</span>\n    sleep <span class=\"m\">5400</span>\n<span class=\"k\">done</span>\n</pre>\n<p>The script <tt>login_web_LocalBitcoins.py</tt> is available for a quick login\nto LocalBitcoins using Selenium. It depends on the credentials file\n<tt><span class=\"pre\">~/.lbc</span></tt> existing and containing information of the following form:</p>\n<pre><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxx\"</span>\n<span class=\"n\">passcode</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxx\"</span>\n<span class=\"n\">secret</span>   <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxx\"</span>\n</pre>\n</div>\n<div id=\"databases\">\n<h2>databases</h2>\n<p>A database of Bitcoin values can be saved in the following ways:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">denarius</span>\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">save_database_Bitcoin</span><span class=\"p\">(</span><span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s2\">\"database.db\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">denarius</span>\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">save_database_Bitcoin</span><span class=\"p\">(</span><span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s2\">\"database_Bitcoin_EUR.db\"</span><span class=\"p\">,</span> <span class=\"n\">currency</span> <span class=\"o\">=</span> <span class=\"s2\">\"EUR\"</span><span class=\"p\">)</span>\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">save_database_Bitcoin</span><span class=\"p\">(</span><span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s2\">\"database_Bitcoin_GBP.db\"</span><span class=\"p\">,</span> <span class=\"n\">currency</span> <span class=\"o\">=</span> <span class=\"s2\">\"GBP\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"graphs\">\n<h2>graphs</h2>\n<p>The function <tt>save_graph_Bitcoin</tt> creates a graph of Bitcoin\nhistorical values over a specified time. The function\n<tt>save_graph_LocalBitcoins</tt> creates a graph of LocalBitcoins Bitcoin\nlowest prices in GBP as recorded in a database by the script\n<tt>loop_save_LocalBitcoins_values_to_database.py</tt>.</p>\n<div id=\"denarius-graph-bitcoin\">\n<h3>denarius_graph_Bitcoin</h3>\n<p>The script <tt>denarius_graph_Bitcoin.py</tt> displays a PyQt GUI with a\ngraph of the last Bitcoin values.</p>\n<pre>denarius_graph_Bitcoin.py --help\n</pre>\n<pre>denarius_graph_Bitcoin.py\n</pre>\n<pre>denarius_graph_Bitcoin.py --currency<span class=\"o\">=</span>EUR --days<span class=\"o\">=</span><span class=\"m\">100</span>\n</pre>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c08719ec8b815086d0ea1919ebd2887b3c5be919/6d656469612f64656e61726975735f67726170685f426974636f696e2e706e67\">\n</div>\n</div>\n<div id=\"id1\">\n<h3>LocalBitcoins</h3>\n<p>A graph can be generated of Bitcoin GBP value versus LocalBitcoins GBP\nlowest value:</p>\n<pre>import denarius\ndenarius.save_graph_Bitcoin_LocalBitcoins<span class=\"o\">()</span>\n</pre>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/252027f658a2a51554a0045fe9244a3c307ddf5f/6d656469612f426974636f696e5f4c6f63616c426974636f696e735f6c6f776573745f70726963655f4742502e706e67\">\n</div>\n<p>A graph can be generated of Bitcoin GBP value versus LocalBitcoins GBP\nlowest 5 values:</p>\n<pre>import denarius\ndenarius.save_graphs_Bitcoin_LocalBitcoins<span class=\"o\">()</span>\n</pre>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4563b0b585fe19190dd8b8c44360be8b12fa71c1/6d656469612f426974636f696e5f4c6f63616c426974636f696e735f7072696365735f4742502e706e67\">\n</div>\n<p>A graph can be generated of LocalBitcoins normalized prices over days:</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65b7ffbd070ab8c9e37cda15e2f061e24c38eae8/6d656469612f4c6f63616c426974636f696e735f426974636f696e5f6c6f776573745f70726963655f4742505f646179732e706e67\">\n</div>\n<p>A graph can be generated of LocalBitcoins normalized prices over weeks:</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0ad13406d8c3932c3ef2b9ca87e6b1329bfaedd/6d656469612f4c6f63616c426974636f696e735f426974636f696e5f6c6f776573745f70726963655f4742505f7765656b732e706e67\">\n</div>\n<p>A graph can be generated of LocalBitcoins non-normalized prices over\nweeks:</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1cfbd450cab4a48aa56f3f6407234f218a6569f5/6d656469612f4c6f63616c426974636f696e735f426974636f696e5f6c6f776573745f70726963655f4742505f7765656b735f6e6f745f6e6f726d616c697a65642e706e67\">\n</div>\n</div>\n<div id=\"bollinger-bands\">\n<h3>Bollinger bands</h3>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e77e4f4cd1a386ee9663f416231bae53394d1751/6d656469612f4c6f63616c426974636f696e735f315f426f6c6c696e6765725f62616e64732e706e67\">\n</div>\n</div>\n</div>\n<div id=\"kanopool\">\n<h2>KanoPool</h2>\n<p>KanoPool records for addresses can be recorded to CSV in a way like the\nfollowing:</p>\n<pre>denarius_loop_save_KanoPool.py --help\n\ndenarius_loop_save_KanoPool.py --addresses<span class=\"o\">=</span>1Miner7R28PKcTRbEDwQt4ykMinunhTehs --interval<span class=\"o\">=</span><span class=\"m\">10</span>\n</pre>\n<p>The CSV data can be analysed using the Jupyter Notebook\n<a href=\"https://github.com/wdbm/denarius/blob/master/KanoPool.ipynb\" rel=\"nofollow\">KanoPool.ipynb</a>.</p>\n</div>\n<div id=\"nanopool\">\n<h2>Nanopool</h2>\n<p>Nanopool records for addresses can be recorded to CSV in a way like the\nfollowing:</p>\n<pre>denarius_loop_save_Nanopool.py --help\n\ndenarius_loop_save_Nanopool.py --addresses<span class=\"o\">=</span>0xbd3f1126d4c20f72a77e38dfda18622a6d663cd0\n</pre>\n<p>The CSV fields are, in order, as follows:</p>\n<ul>\n<li>datetime</li>\n<li>account</li>\n<li>balance</li>\n<li>earnings_per_day_BTC</li>\n<li>earnings_per_day_ETH</li>\n<li>earnings_per_day_EUR</li>\n<li>earnings_per_hour_BTC</li>\n<li>earnings_per_hour_ETH</li>\n<li>earnings_per_hour_EUR</li>\n<li>earnings_per_minute_BTC</li>\n<li>earnings_per_minute_ETH</li>\n<li>earnings_per_minute_EUR</li>\n<li>earnings_per_month_BTC</li>\n<li>earnings_per_month_ETH</li>\n<li>earnings_per_month_EUR</li>\n<li>earnings_per_week_BTC</li>\n<li>earnings_per_week_ETH</li>\n<li>earnings_per_week_EUR</li>\n<li>hashrate</li>\n<li>hashrate12hr</li>\n<li>hashrate1hr</li>\n<li>hashrate24hr</li>\n<li>hashrate3hr</li>\n<li>hashrate6hr</li>\n<li>hashrate_pool</li>\n<li>pool_miners</li>\n<li>pool_workers</li>\n</ul>\n</div>\n<div id=\"slush-pool\">\n<h2>Slush Pool</h2>\n<p>Slush Pool records for an address can be recorded to CSV in a way like\nthe following:</p>\n<pre>denarius_loop_save_SlushPool.py --help\n\ndenarius_loop_save_SlushPool.py --addresses<span class=\"o\">=</span>1Miner7R28PKcTRbEDwQt4ykMinunhTehs --interval<span class=\"o\">=</span><span class=\"m\">60</span> --alarm<span class=\"o\">=</span><span class=\"m\">11800000</span> --slushloginname<span class=\"o\">=</span>user --slushworkername<span class=\"o\">=</span>worker1\n</pre>\n<p>The CSV fields are, in order, as follows:</p>\n<ul>\n<li>address</li>\n<li>hash rate</li>\n<li>shares</li>\n<li>UNIX timestamp</li>\n<li>unconfirmed reward in Bitcoin</li>\n<li>confirmed reward in Bitcoin</li>\n<li>total reward (confirmed + unconfirmed) in Bitcoin</li>\n<li>total payout since script launch in Bitcoin</li>\n<li>number of blocks found since script launch</li>\n</ul>\n<p>The CSV data can be analysed using the Jupyter Notebook\n<a href=\"https://github.com/wdbm/denarius/blob/master/SlushPool.ipynb\" rel=\"nofollow\">SlushPool.ipynb</a>.</p>\n</div>\n<div id=\"banks\">\n<h2>banks</h2>\n<p>The banks module provides utilities for getting transactions of a bank\naccount (Monzo, Starling or RBS) using the <a href=\"https://monzo.com/docs/\" rel=\"nofollow\">Monzo\nAPI</a>, the <a href=\"https://developer.starlingbank.com/get-started\" rel=\"nofollow\">Starling\nAPI</a> and the\n<a href=\"https://teller.io/\" rel=\"nofollow\">Teller.io API</a> (<a href=\"https://www.wired.co.uk/article/stevie-graham-teller-open-banking-barclays-hsbc\" rel=\"nofollow\">background on Teller.io and\nStevie\nGraham</a>.\nTo use this module, credentials files should be created.</p>\n<p>Access the <a href=\"https://developers.monzo.com\" rel=\"nofollow\">Monzo developers portal</a>\nand create a new OAuth confidential client. Set the redirect URL for the\nclient to <a href=\"https://github.com/pawelad/pymonzo\" rel=\"nofollow\">https://github.com/pawelad/pymonzo</a>. Create a URL of the\nfollowing form using the client ID string:</p>\n<pre>https://auth.getmondo.co.uk/?response_type=code&amp;redirect_uri=https://github.com/pawelad/pymonzo&amp;client_id=&lt;YOUR_CLIENT_ID&gt;\n</pre>\n<p>Access this URL and authorize the client application. The confirmation\ne-mail sent contains a URL of the following form:</p>\n<pre>https://github.com/pawelad/pymonzo?code=&lt;YOUR_AUTH_CODE&gt;&amp;state=\n</pre>\n<p>Copy the authorization code from this URL and then access the URL to\nauthorize the client application.</p>\n<p>Launch an interactive Python session and, using the client credentials\nand the <tt>pymonzo</tt> API interface, generate an access token and a\nrefresh token.</p>\n<pre><span class=\"n\">client_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span>\n<span class=\"n\">client_secret</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span>\n<span class=\"n\">auth_code</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pymonzo</span> <span class=\"kn\">import</span> <span class=\"n\">MonzoAPI</span>\n\n<span class=\"n\">monzo</span> <span class=\"o\">=</span> <span class=\"n\">MonzoAPI</span><span class=\"p\">(</span>\n    <span class=\"n\">client_id</span>     <span class=\"o\">=</span> <span class=\"n\">client_id</span><span class=\"p\">,</span>\n    <span class=\"n\">client_secret</span> <span class=\"o\">=</span> <span class=\"n\">client_secret</span><span class=\"p\">,</span>\n    <span class=\"n\">auth_code</span>     <span class=\"o\">=</span> <span class=\"n\">auth_code</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This saves an authorization that lasts 48 hours to the file\n<tt><span class=\"pre\">~/.pymonzo-token</span></tt>, which contains a dictionary of the following form:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"access_token\"</span><span class=\"p\">:</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"client_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"client_secret\"</span><span class=\"p\">:</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"expires_at\"</span><span class=\"p\">:</span> <span class=\"mf\">1517106306.8881364</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"expires_in\"</span><span class=\"p\">:</span> <span class=\"mi\">172799</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"refresh_token\"</span><span class=\"p\">:</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"token_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bearer\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"user_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxxxxx\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Now, API access can be tested by calling the <tt>monzopy</tt> Monzo API\ninterface without any arguments (such that it loads tokens from the file\n<tt><span class=\"pre\">~/.pymonzo-token</span></tt> and manages token refreshes).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymonzo</span> <span class=\"kn\">import</span> <span class=\"n\">MonzoAPI</span>\n\n<span class=\"n\">monzo</span> <span class=\"o\">=</span> <span class=\"n\">MonzoAPI</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">monzo</span><span class=\"o\">.</span><span class=\"n\">accounts</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">monzo</span><span class=\"o\">.</span><span class=\"n\">balance</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">monzo</span><span class=\"o\">.</span><span class=\"n\">transactions</span><span class=\"p\">())</span>\n</pre>\n<p>For Starling, the credentials file (by default <tt><span class=\"pre\">~/.starling</span></tt>) should\nbe created and its content should be a Starling personal access token.\nThis is acquired by creating a Starling personal account, then creating\na Starling developers account, linking these accounts, and then\ngenerating a personal access token. More advanced access is possible\nusing OAuth2.</p>\n<p>For RBS, the credentials file (by default <tt><span class=\"pre\">~/.rbs</span></tt>) should have\ncontent of the following form:</p>\n<pre><span class=\"n\">token_teller</span>        <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"</span>\n<span class=\"n\">account_code_teller</span> <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"</span>\n</pre>\n<p>Pandas DataFrames of transactions can be retrieved in ways like the\nfollowing:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">denarius.banks</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">transactions_DataFrame_Monzo</span><span class=\"p\">()</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">transactions_DataFrame_RBS</span><span class=\"p\">()</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">transactions_DataFrame_Starling</span><span class=\"p\">()</span>\n</pre>\n<p>A payment can be searched for in ways like the following:</p>\n<pre><span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">payment_in_transactions_Monzo</span><span class=\"p\">(</span><span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"s2\">\"271828182\"</span><span class=\"p\">,</span> <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"mi\">314</span><span class=\"p\">)</span>\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">payment_in_transactions_RBS</span><span class=\"p\">(</span><span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"s2\">\"271828182\"</span><span class=\"p\">,</span> <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"mi\">314</span><span class=\"p\">)</span>\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">payment_in_transactions_Starling</span><span class=\"p\">(</span><span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"s2\">\"271828182\"</span><span class=\"p\">,</span> <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"mi\">314</span><span class=\"p\">)</span>\n</pre>\n<p>These functions search the \u201ccounterparty_reference\u201d, \u201cdescription\u201d and\n\u201cnotes\u201d fields of a DataFrame of bank account transactions for a\nspecified reference. If the reference is found, the specified amount of\nthe payment is compared to the sum of amounts found for the specified\nreference in the \u201camount\u201d field. If a payer name is specified, it is\nchecked against the payer name of the transaction. They return a\ndictionary of the following form:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"reference_found\"</span><span class=\"p\">:</span>     <span class=\"nb\">bool</span><span class=\"p\">,</span>         <span class=\"c1\"># True if reference found</span>\n    <span class=\"s2\">\"payer_name_match\"</span><span class=\"p\">:</span>    <span class=\"nb\">bool</span> <span class=\"ow\">or</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># True if payer name matched, False if payer name not matched, None if no payer name to check</span>\n    <span class=\"s2\">\"payer_name_observed\"</span><span class=\"p\">:</span> <span class=\"n\">string</span><span class=\"p\">,</span>       <span class=\"c1\"># payer name observed</span>\n    <span class=\"s2\">\"amount_correct\"</span><span class=\"p\">:</span>      <span class=\"nb\">bool</span><span class=\"p\">,</span>         <span class=\"c1\"># True if sum of amounts found is amount specified</span>\n    <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span>               <span class=\"nb\">bool</span><span class=\"p\">,</span>         <span class=\"c1\"># True if reference found and amount correct</span>\n    <span class=\"s2\">\"transactions\"</span>         <span class=\"n\">DataFrame</span><span class=\"p\">,</span>    <span class=\"c1\"># DataFrame of matches</span>\n    <span class=\"s2\">\"amount_difference\"</span><span class=\"p\">:</span>   <span class=\"nb\">float</span>         <span class=\"c1\"># difference between amount specified and sum of amounts found</span>\n<span class=\"p\">}</span>\n</pre>\n<p>So, these functions could be used in a straightforward boolean way to\ncheck if a payment has been made:</p>\n<pre><span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">payment_in_transactions_Monzo</span><span class=\"p\">(</span><span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"s2\">\"271828182\"</span><span class=\"p\">,</span> <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"mi\">314</span><span class=\"p\">)[</span><span class=\"s2\">\"valid\"</span><span class=\"p\">]</span>\n</pre>\n<p>They also could be used in a more involved way to account for occasions\nin which a payment is found but has an incorrect amount and a further\npayment with the same reference must be requested.</p>\n<p>Both the <tt>transactions_DataFrame</tt> and <tt>payment_in_transactions</tt>\nfunctions have the option <tt>print_table</tt> which can print to terminal a\ntable of the transactions under consideration:</p>\n<pre><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">banks</span><span class=\"o\">.</span><span class=\"n\">transactions_DataFrame_Monzo</span><span class=\"p\">(</span><span class=\"n\">print_table</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The script <tt>print_table_bank_account.py</tt> uses this functionality to\nprint to terminal a table of transactions from a specified bank.</p>\n<p>There is the function <tt>payment_in_transactions_bank</tt> which is a\nwrapper for the more specialised functions like\n<tt>payment_in_transactions_Monzo</tt>. It takes a bank name as an argument\nand uses the appropriate functionality for the bank specified.</p>\n</div>\n<div id=\"kraken\">\n<h2>Kraken</h2>\n<p>The Kraken module provides utilities for getting current balances of\ncurrencies held, buying Bitcoin for Euros at the last market price, and\nsending Bitcoin from Kraken to an address, the key for which has been\nverified on Kraken. The scripts <tt>print_Kraken_balances.py</tt>,\n<tt>print_Kraken_last_price_BTC_EUR.py</tt> and\n<tt>buy_BTC_for_EUR_last_price_on_Kraken.py</tt> all use these\nfunctionalities.</p>\n<p>The Kraken module depends on the credentials file <tt><span class=\"pre\">~/.kraken</span></tt> existing\nand containing the key on the first line and the secret on the second\nline.</p>\n<p>Bitcoin can be sent from Kraken to an address key in a way like the\nfollowing:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">denarius.Kraken</span>\n\n<span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">Kraken</span><span class=\"o\">.</span><span class=\"n\">start_API</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">denarius</span><span class=\"o\">.</span><span class=\"n\">Kraken</span><span class=\"o\">.</span><span class=\"n\">send_XBT</span><span class=\"p\">(</span><span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">address_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"BIGMONEY\"</span><span class=\"p\">))</span>\n</pre>\n<p>The script <tt>login_web_Kraken.py</tt> is available for a quick login to\nKraken using Selenium. It depends on the credentials file\n<tt><span class=\"pre\">~/.kraken_credentials</span></tt> existing and containing information of the\nfollowing form:</p>\n<pre><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxx\"</span>\n<span class=\"n\">passcode</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxx\"</span>\n<span class=\"n\">secret</span>   <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxxxxxxxxxx\"</span>\n</pre>\n</div>\n<div id=\"rbs\">\n<h2>RBS</h2>\n<p>The RBS module provides utilities for getting the balance and recent\ntransactions of an RBS account using the RBS banking web interface,\nSelenium and Firefox. For convenience, account details can be stored in\na credentials file, which is assumed by default to be <tt><span class=\"pre\">~/.rbs</span></tt>. The\naccount code is an alphanumeric code extracted from the web interface.\nThe content of a credentials file is of the following form, which is\nPython code:</p>\n<pre><span class=\"n\">customer_number</span> <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXXXX\"</span>\n<span class=\"n\">PIN</span>             <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXX\"</span>\n<span class=\"n\">passcode</span>        <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXXXXXXXXXXXXXX\"</span>\n<span class=\"n\">account_code</span>    <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"</span>\n</pre>\n<p>A dictionary of the current balance and a pandas DataFrame of recent\ntransactions is returned by the function <tt>RBS.account_status</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">denarius.RBS</span>\n\n<span class=\"n\">status</span>  <span class=\"o\">=</span> <span class=\"n\">RBS</span><span class=\"o\">.</span><span class=\"n\">account_status</span><span class=\"p\">()</span>\n<span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">status</span><span class=\"p\">[</span><span class=\"s2\">\"balance\"</span><span class=\"p\">]</span>\n<span class=\"n\">df</span>      <span class=\"o\">=</span> <span class=\"n\">status</span><span class=\"p\">[</span><span class=\"s2\">\"transactions\"</span><span class=\"p\">]</span>\n</pre>\n<p>The DataFrame features the fields <tt>date</tt>, <tt>description</tt> and\n<tt>amount</tt>. A transaction containing a certain reference or description\ncould be selected in the following way:</p>\n<pre><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"description\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"s2\">\"transaction reference 123\"</span><span class=\"p\">)]</span>\n</pre>\n<p>The existence of a transaction can be tested in a way like the\nfollowing:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"description\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"s2\">\"transaction reference 123\"</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">():</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"transaction found\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">else</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"transaction not found\"</span><span class=\"p\">)</span>\n</pre>\n<p>The script <tt>get_account_balance_RBS.py</tt> is available to open an RBS\naccount web interface and to display the current balance and recent\ntransactions in the terminal, optionally in a loop.</p>\n<pre>get_account_balance_RBS.py --loop\n</pre>\n<p>The script <tt>detect_transaction_RBS.py</tt> is available to search for a\ntransaction or transactions with a specified reference.</p>\n<pre>detect_transaction_RBS.py --reference<span class=\"o\">=</span><span class=\"m\">123</span>\n</pre>\n<p>The script <tt>loop_save_RBS_to_CSV.py</tt> is available to loop save RBS\ntransactions and balance to CSV, merging with recorded CSV data to avoid\nrecording duplicates.</p>\n</div>\n<div id=\"santander\">\n<h2>Santander</h2>\n<p>The Santander module provides utilities for getting recent transactions\nusing the Santander banking web interface, Selenium and Firefox. Account\ndetails are stored in a credentials file, which is assumed by default to\nbe <tt><span class=\"pre\">~/.santander</span></tt>. The content of a credentials file is of the\nfollowing form, which is Python code:</p>\n<pre><span class=\"n\">customer_number</span>          <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXX\"</span>\n<span class=\"n\">customer_PIN</span>             <span class=\"o\">=</span> <span class=\"s2\">\"XXXXX\"</span>\n<span class=\"n\">security_question_answer</span> <span class=\"o\">=</span> <span class=\"s2\">\"XXXXXXXX\"</span>\n</pre>\n<p>A DataFrame of recent transactions is returned by the function\n<tt>Santander.transactions_DataFrame</tt>. The script\n<tt>loop_save_Santander_to_CSV.py</tt> saves transactions to CSV in a\ncontinuous loop. The function <tt>Santander.payment_in_transactions_CSV</tt>\ncan search in transactions recorded in CSV for a specified transaction\nreference together with a specified value and returns a boolean to\nindicate whether the transaction was detected.</p>\n</div>\n<div id=\"arbitrage\">\n<h2>arbitrage</h2>\n<ul>\n<li><a href=\"denarius.arbitrage.ipynb\" rel=\"nofollow\">denarius.arbitrage</a></li>\n</ul>\n<p>The script <tt>denarius_loop_append_arbitrage_DataFrames_to_CSV.py</tt>\nrecords data for arbitrage between Kraken and LocalBitcoins UK. The\nscript <tt>denarius_display_arbitrage.py</tt> displays recorded data and\ncurrent prices for arbitrage between Kraken and LocalBitcoins UK.</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0bbc16c5fff21e24d23ab4968595bbdef8e93f5/6d656469612f64656e61726975735f646973706c61795f6172626974726167652e706e67\">\n</div>\n<p>The old script <tt>loop_save_arbitrage_data_Kraken_LocalBitcoins_UK.py</tt>\nrecords data for arbitrage between Kraken and LocalBitcoins UK. The old\nscript <tt>loop_display_arbitrage_data.py</tt> displays recorded data and\ncurrent prices for arbitrage between Kraken and LocalBitcoins UK.</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbbc412da8676ffec28384b8fe683505cb20b9c7/6d656469612f6c6f6f705f646973706c61795f6172626974726167655f646174612e706e67\">\n</div>\n</div>\n<div id=\"paper-wallets-for-bitcoin-qr-codes-of-keys\">\n<h2>paper wallets for Bitcoin, QR codes of keys</h2>\n<p>The script <tt>create_QR_codes_of_public_and_private_keys.py</tt> creates a\nQR code for a specified public key and private key and enables optional\nspecification of the size of the resulting PNG images. It loads the keys\nfrom a Python file (<tt>keys.py</tt> by default) which defines the string\nvariables <tt>key_public</tt> and <tt>key_private</tt>.</p>\n<p>The script <tt>create_paper_wallet.py</tt> creates a QR code for a specified\npublic key and private key. It then creates an image of a Bitcoin paper\nwallet. It loads the keys from a Python file (<tt>keys.py</tt> by default)\nwhich defines the string variables <tt>key_public</tt> and <tt>key_private</tt>.</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa963d3ae4f43b4af1cac8ab9ddbb3a007ed75d9/6d656469612f70617065725f77616c6c65742e706e67\">\n</div>\n</div>\n<div id=\"faster-payments-service\">\n<h2>Faster Payments Service</h2>\n<ul>\n<li><a href=\"http://www.fasterpayments.org.uk/about-us/current-participants\" rel=\"nofollow\">2018-01-14\nparticipants</a></li>\n<li>Barclays</li>\n<li>Citi</li>\n<li>Clear Bank</li>\n<li>Clydesdale Bank</li>\n<li>The Co-operative Bank</li>\n<li>HSBC</li>\n<li>Lloyds Bank</li>\n<li>Metro Bank</li>\n<li>Monzo</li>\n<li>Nationwide</li>\n<li>NatWest</li>\n<li>Northern Bank</li>\n<li>Raphaels Bank</li>\n<li>Royal Bank of Scotland</li>\n<li>Santander</li>\n<li>Starling Bank</li>\n<li>Turkish Bank UK</li>\n</ul>\n</div>\n<div id=\"sepa-instant\">\n<h2>SEPA Instant</h2>\n<ul>\n<li><a href=\"https://www.europeanpaymentscouncil.eu/sites/default/files/participants_export/sepa_instant_credit_transfer/sepa_instant_credit_transfer.pdf?v=1515763349\" rel=\"nofollow\">2018-01-14\nparticipants</a></li>\n<li>Austria</li>\n<li>Belgium</li>\n<li>Bulgaria</li>\n<li>Estonia</li>\n<li>France</li>\n<li>Germany</li>\n<li>Italy</li>\n<li>Latvia</li>\n<li>Lithuania</li>\n<li>Malta</li>\n<li>Netherlands</li>\n<li>Spain</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4272584, "releases": {"2017.1.20.21": [{"comment_text": "", "digests": {"md5": "ae5391ff26c4b651ff318d4d56558191", "sha256": "a9935d29dce98322753395534c2707addb02bf34207911c1d8651b88f96f6435"}, "downloads": -1, "filename": "denarius-2017.1.20.21.tar.gz", "has_sig": false, "md5_digest": "ae5391ff26c4b651ff318d4d56558191", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15628, "upload_time": "2017-01-20T00:24:01", "upload_time_iso_8601": "2017-01-20T00:24:01.727688Z", "url": "https://files.pythonhosted.org/packages/a6/b9/8d00cc87a9fc0e8f713ff858f116b01ebe032a4538e597ff3a7897aeb54f/denarius-2017.1.20.21.tar.gz", "yanked": false}], "2017.10.18.1930": [{"comment_text": "", "digests": {"md5": "e8c4488cdbac415c94bab852fed68d27", "sha256": "901243769979de0e51d9faab7d3de3b7a3fa8960f5f80d3209a6e405761ecc3d"}, "downloads": -1, "filename": "denarius-2017.10.18.1930.tar.gz", "has_sig": false, "md5_digest": "e8c4488cdbac415c94bab852fed68d27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29976, "upload_time": "2017-10-18T19:35:08", "upload_time_iso_8601": "2017-10-18T19:35:08.146513Z", "url": "https://files.pythonhosted.org/packages/7c/69/a319e9dc378c1d10f58e6c0c52c16c46f312defc08852b80a88d3a509d49/denarius-2017.10.18.1930.tar.gz", "yanked": false}], "2017.11.28.1853": [{"comment_text": "", "digests": {"md5": "92529460efc70140f84ad9ceb37c850e", "sha256": "940f73fbb03e3e85a1fd8ac34720eebd758b8b6ae38d6e15eb07f678003362c6"}, "downloads": -1, "filename": "denarius-2017.11.28.1853.tar.gz", "has_sig": false, "md5_digest": "92529460efc70140f84ad9ceb37c850e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37615, "upload_time": "2017-11-28T19:26:25", "upload_time_iso_8601": "2017-11-28T19:26:25.777519Z", "url": "https://files.pythonhosted.org/packages/95/f4/0c9069dfad1af42770e5aabdd9989251c021037a10d2e6c1fa33269d63c9/denarius-2017.11.28.1853.tar.gz", "yanked": false}], "2017.11.29.1856": [{"comment_text": "", "digests": {"md5": "d154e9ad881fa4c5a8160385bbbd5eb2", "sha256": "3f9dab3a15c9f9924410da3e5bc72c1af4c7830b958725bcd3266743160d654a"}, "downloads": -1, "filename": "denarius-2017.11.29.1856.tar.gz", "has_sig": false, "md5_digest": "d154e9ad881fa4c5a8160385bbbd5eb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39116, "upload_time": "2017-11-29T18:59:03", "upload_time_iso_8601": "2017-11-29T18:59:03.628281Z", "url": "https://files.pythonhosted.org/packages/16/ec/a1a9c921f4f83b795b9b9ad0a85cf7aa50714fad556ea0fa9734b5b26fb0/denarius-2017.11.29.1856.tar.gz", "yanked": false}], "2017.12.21.1910": [{"comment_text": "", "digests": {"md5": "c87f2de31352dc5aa9e5df84b86333c1", "sha256": "f41cd229a70281ed3d2bd24b8c73d2bbddc5e17c37c83aa8bf5f58a110a4daa2"}, "downloads": -1, "filename": "denarius-2017.12.21.1910.tar.gz", "has_sig": false, "md5_digest": "c87f2de31352dc5aa9e5df84b86333c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40737, "upload_time": "2017-12-21T19:12:43", "upload_time_iso_8601": "2017-12-21T19:12:43.928191Z", "url": "https://files.pythonhosted.org/packages/e6/aa/836d5059e4fefcbe3fe74095e10c66a2b5ad19d32d18de13ee347fd48f84/denarius-2017.12.21.1910.tar.gz", "yanked": false}], "2017.12.25.2154": [{"comment_text": "", "digests": {"md5": "7176a2bc63a2b77fa28f66987cb67053", "sha256": "1d1f5963c495b73e008625f939009ef2b8ea4055c0aa86163b64e8d8f3864cf1"}, "downloads": -1, "filename": "denarius-2017.12.25.2154.tar.gz", "has_sig": false, "md5_digest": "7176a2bc63a2b77fa28f66987cb67053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189267, "upload_time": "2017-12-25T22:13:35", "upload_time_iso_8601": "2017-12-25T22:13:35.148821Z", "url": "https://files.pythonhosted.org/packages/07/3f/6cf29cba4aa79cca84eb653684749939d59a07a13ef1eebe8d90d78dee05/denarius-2017.12.25.2154.tar.gz", "yanked": false}], "2017.2.20.1911": [{"comment_text": "", "digests": {"md5": "44709a49e97c8d304d0d0603629514a8", "sha256": "c69825836682613a43f8cceb68dd2bca1c08000e5a161ac0c88255134786e1e5"}, "downloads": -1, "filename": "denarius-2017.2.20.1911.tar.gz", "has_sig": false, "md5_digest": "44709a49e97c8d304d0d0603629514a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17200, "upload_time": "2017-02-20T19:18:47", "upload_time_iso_8601": "2017-02-20T19:18:47.466366Z", "url": "https://files.pythonhosted.org/packages/66/22/edc4ad0485a952f9e69d50b280ce49e051af09e9dc2bd5a48ab718aaa232/denarius-2017.2.20.1911.tar.gz", "yanked": false}], "2017.2.20.1919": [{"comment_text": "", "digests": {"md5": "e1bd6e2cf7c5c4aa2d79933e32282611", "sha256": "f991f89c86e867a0ccac4c90ba98e7b98c481930da0ce575b08af4d3184a78f2"}, "downloads": -1, "filename": "denarius-2017.2.20.1919.tar.gz", "has_sig": false, "md5_digest": "e1bd6e2cf7c5c4aa2d79933e32282611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17192, "upload_time": "2017-02-20T19:20:44", "upload_time_iso_8601": "2017-02-20T19:20:44.462643Z", "url": "https://files.pythonhosted.org/packages/3e/c3/f27e7f10a2bb4850ec51655764d37c62eca0657d71f2046f7c3fb876d4be/denarius-2017.2.20.1919.tar.gz", "yanked": false}], "2017.3.14.1606": [{"comment_text": "", "digests": {"md5": "755c27f039e225e09b57d26a225e63c6", "sha256": "a6509bd4bc120cb826aa2ad64d32696c035f895325b8b096e972f16a02c328ea"}, "downloads": -1, "filename": "denarius-2017.3.14.1606.tar.gz", "has_sig": false, "md5_digest": "755c27f039e225e09b57d26a225e63c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21481, "upload_time": "2017-03-14T16:12:41", "upload_time_iso_8601": "2017-03-14T16:12:41.128023Z", "url": "https://files.pythonhosted.org/packages/87/39/e8a2af6c0196e4099de86aa19c22469bac7fefb0593981b955cc3d74f6d1/denarius-2017.3.14.1606.tar.gz", "yanked": false}], "2017.3.14.55": [{"comment_text": "", "digests": {"md5": "86d8c46fb81427385c089c3c99c77c8b", "sha256": "6d7d9a3f51d6ecb1fb0dacc7d163f8a3642c1a6f9b31d883d075a3f638d9292b"}, "downloads": -1, "filename": "denarius-2017.3.14.55.tar.gz", "has_sig": false, "md5_digest": "86d8c46fb81427385c089c3c99c77c8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21315, "upload_time": "2017-03-14T01:06:53", "upload_time_iso_8601": "2017-03-14T01:06:53.739416Z", "url": "https://files.pythonhosted.org/packages/33/8f/9729599431e5882ebe9892961c9facc8eaddfba49055d404c2828a2d9227/denarius-2017.3.14.55.tar.gz", "yanked": false}], "2017.3.17.1555": [{"comment_text": "", "digests": {"md5": "0fa56318c98f0b02b58aa712a92e697c", "sha256": "39123c4417304966c943edf88ee28ffefad064437b09e045884db5fbfd167f4c"}, "downloads": -1, "filename": "denarius-2017.3.17.1555.tar.gz", "has_sig": false, "md5_digest": "0fa56318c98f0b02b58aa712a92e697c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21496, "upload_time": "2017-03-17T15:57:22", "upload_time_iso_8601": "2017-03-17T15:57:22.427410Z", "url": "https://files.pythonhosted.org/packages/2a/1c/586e87adb8be63584981bd06abe77026627f33bbdde59d5c7cfb21e6fc47/denarius-2017.3.17.1555.tar.gz", "yanked": false}], "2017.3.7.1840": [{"comment_text": "", "digests": {"md5": "182d44608235ed8e86fa47295702fc4c", "sha256": "71789161df24c551ed5ab2f443ef9dc4419fa61ae2ecc4e37ddfdd15ca1bbcf4"}, "downloads": -1, "filename": "denarius-2017.3.7.1840.tar.gz", "has_sig": false, "md5_digest": "182d44608235ed8e86fa47295702fc4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19105, "upload_time": "2017-03-07T19:59:44", "upload_time_iso_8601": "2017-03-07T19:59:44.574643Z", "url": "https://files.pythonhosted.org/packages/0d/07/277dc0f09576a7c8fb09dac1e648e3ef4406123cd4c74b93f629648c5954/denarius-2017.3.7.1840.tar.gz", "yanked": false}], "2017.3.7.2350": [{"comment_text": "", "digests": {"md5": "2908270fec30382b6c5fc648938f09f7", "sha256": "674101c9bf7c7b8093c02796dff0e58eb0c03909982494f723a5a538b0c309f9"}, "downloads": -1, "filename": "denarius-2017.3.7.2350.tar.gz", "has_sig": false, "md5_digest": "2908270fec30382b6c5fc648938f09f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19541, "upload_time": "2017-03-07T23:54:17", "upload_time_iso_8601": "2017-03-07T23:54:17.920738Z", "url": "https://files.pythonhosted.org/packages/49/6c/ef83128ed7de1ac781748a8d705299cdf274f38fb9ca9c9b1a07f05fb2c7/denarius-2017.3.7.2350.tar.gz", "yanked": false}], "2017.3.8.1411": [{"comment_text": "", "digests": {"md5": "a2dc9e5f19b2d7335f55621c4160dfcd", "sha256": "0655d51ca8dfc1f91205413af314273af4c4375f238bb9efece52f292db13a2c"}, "downloads": -1, "filename": "denarius-2017.3.8.1411.tar.gz", "has_sig": false, "md5_digest": "a2dc9e5f19b2d7335f55621c4160dfcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20184, "upload_time": "2017-03-08T14:25:55", "upload_time_iso_8601": "2017-03-08T14:25:55.058207Z", "url": "https://files.pythonhosted.org/packages/18/25/57bb692299f6746ee7f997f33a26cc64c394da0de69ae88f072115c91e00/denarius-2017.3.8.1411.tar.gz", "yanked": false}], "2017.4.18.1308": [{"comment_text": "", "digests": {"md5": "a78fbd0919ce29eb25251cce68967db0", "sha256": "c521842d6c69f10ba72f047b50daf18d3952a7b9fe6538e0903d135d026fa9ae"}, "downloads": -1, "filename": "denarius-2017.4.18.1308.tar.gz", "has_sig": false, "md5_digest": "a78fbd0919ce29eb25251cce68967db0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22090, "upload_time": "2017-04-18T13:11:47", "upload_time_iso_8601": "2017-04-18T13:11:47.901997Z", "url": "https://files.pythonhosted.org/packages/df/a9/3191b04894a6d96652d14602a36cabcac46d51e71f6a7ac98c69c011cff3/denarius-2017.4.18.1308.tar.gz", "yanked": false}], "2017.5.11.1148": [{"comment_text": "", "digests": {"md5": "8708e76af42dabfc9e4f61fe8c04f69e", "sha256": "81e62f2b945cc77bf88d01f832e227796efb85492acc1722b4ada37e39b4f8d7"}, "downloads": -1, "filename": "denarius-2017.5.11.1148.tar.gz", "has_sig": false, "md5_digest": "8708e76af42dabfc9e4f61fe8c04f69e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22239, "upload_time": "2017-05-11T11:50:14", "upload_time_iso_8601": "2017-05-11T11:50:14.512542Z", "url": "https://files.pythonhosted.org/packages/4c/e4/b64d7ed5d3d4f3c0fbb3f6f30b02c583e477a341ecd07df737a7b3d33e28/denarius-2017.5.11.1148.tar.gz", "yanked": false}], "2017.5.11.1551": [{"comment_text": "", "digests": {"md5": "1a25e848c5e020e45dc916f2664699c0", "sha256": "448e4f999d509624f974ca2a99568e6b0f6e0c1dd9ba7457c43a8605181be00a"}, "downloads": -1, "filename": "denarius-2017.5.11.1551.tar.gz", "has_sig": false, "md5_digest": "1a25e848c5e020e45dc916f2664699c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22269, "upload_time": "2017-05-11T16:10:09", "upload_time_iso_8601": "2017-05-11T16:10:09.863276Z", "url": "https://files.pythonhosted.org/packages/eb/91/758f575c3c970aba06d09f7b25f8f12e15eba2e37217f45d58a9ee583b7c/denarius-2017.5.11.1551.tar.gz", "yanked": false}], "2017.5.30.1701": [{"comment_text": "", "digests": {"md5": "19f07fc40f106ec784f0f9cdd5dc8c85", "sha256": "9e85ec28b3026ed7a01139d6fa6428aa7d851d8c479c1c2017e6598a87a53389"}, "downloads": -1, "filename": "denarius-2017.5.30.1701.tar.gz", "has_sig": false, "md5_digest": "19f07fc40f106ec784f0f9cdd5dc8c85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23180, "upload_time": "2017-05-30T17:19:42", "upload_time_iso_8601": "2017-05-30T17:19:42.635112Z", "url": "https://files.pythonhosted.org/packages/c1/e9/204dfece98c06ead4def4dddb5d88d796efc72f1d2aad1607d681aebd553/denarius-2017.5.30.1701.tar.gz", "yanked": false}], "2017.6.13.1607": [{"comment_text": "", "digests": {"md5": "402b3b84b0d66b0aa1707350c943361b", "sha256": "c27941051fbc2e609d784d5a0e229b1ca97ef5d019d1e14780eeec06f329f887"}, "downloads": -1, "filename": "denarius-2017.6.13.1607.tar.gz", "has_sig": false, "md5_digest": "402b3b84b0d66b0aa1707350c943361b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23629, "upload_time": "2017-06-13T16:10:20", "upload_time_iso_8601": "2017-06-13T16:10:20.958293Z", "url": "https://files.pythonhosted.org/packages/f3/7d/da89d74dc446274d4b45ca65b88089b94e0451974ef9ac8b8916d2d21fac/denarius-2017.6.13.1607.tar.gz", "yanked": false}], "2017.6.21.1935": [{"comment_text": "", "digests": {"md5": "519a9a4af6f1d0daa74d9f9415f7f254", "sha256": "71f7192bc37f4b307f03da6482623f1102439ec335066ee1aba3764df8862150"}, "downloads": -1, "filename": "denarius-2017.6.21.1935.tar.gz", "has_sig": false, "md5_digest": "519a9a4af6f1d0daa74d9f9415f7f254", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23638, "upload_time": "2017-06-21T19:36:53", "upload_time_iso_8601": "2017-06-21T19:36:53.192481Z", "url": "https://files.pythonhosted.org/packages/85/9e/b010fc84c43fa1ee0acf57951953b635d0e4b9dde0b9031dab0f50b4a02b/denarius-2017.6.21.1935.tar.gz", "yanked": false}], "2017.6.21.1942": [{"comment_text": "", "digests": {"md5": "609ac4ddd4d71e8944f90be8edcccaac", "sha256": "887e96b9ecec7467bcf8f1cb36822452e556b57d155d906e54c92ac85d7aa945"}, "downloads": -1, "filename": "denarius-2017.6.21.1942.tar.gz", "has_sig": false, "md5_digest": "609ac4ddd4d71e8944f90be8edcccaac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24615, "upload_time": "2017-06-21T19:43:39", "upload_time_iso_8601": "2017-06-21T19:43:39.681044Z", "url": "https://files.pythonhosted.org/packages/15/ca/84a8ed3e2561c4d9484d67e5ab338e05dcb7791b4833e663cde6a50745f3/denarius-2017.6.21.1942.tar.gz", "yanked": false}], "2017.6.21.1952": [{"comment_text": "", "digests": {"md5": "8bfc527925ae6f410753e6b485e45c5d", "sha256": "e88d6b75bc45f1b5f9ec1f0c5e0de1532c26773f73e177a97cc11dc656d5bc97"}, "downloads": -1, "filename": "denarius-2017.6.21.1952.tar.gz", "has_sig": false, "md5_digest": "8bfc527925ae6f410753e6b485e45c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24612, "upload_time": "2017-06-21T19:53:29", "upload_time_iso_8601": "2017-06-21T19:53:29.825874Z", "url": "https://files.pythonhosted.org/packages/01/43/f32c5f6b20c323bbb2586fcd4088f9de4920a73caec7e1c4e381cdc709e9/denarius-2017.6.21.1952.tar.gz", "yanked": false}], "2017.6.29.1658": [{"comment_text": "", "digests": {"md5": "aee21f687c63b208ee7e1d12b54c3ca7", "sha256": "5f1322b960cd1e0356597dd125840b0e847b4d39e25d1bc5d25f10776ddea27b"}, "downloads": -1, "filename": "denarius-2017.6.29.1658.tar.gz", "has_sig": false, "md5_digest": "aee21f687c63b208ee7e1d12b54c3ca7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24990, "upload_time": "2017-07-03T13:36:22", "upload_time_iso_8601": "2017-07-03T13:36:22.552163Z", "url": "https://files.pythonhosted.org/packages/ae/19/175f85425d133bdfa8f595c14c57329cf105059b143d16df6d806f126ed9/denarius-2017.6.29.1658.tar.gz", "yanked": false}], "2017.7.10.1019": [{"comment_text": "", "digests": {"md5": "3719389db0fb3b4660bacc67a9206696", "sha256": "c3c924cfacbc7515b53fd0ce98cd293d515a80fa5b352b38fe46bda60172a531"}, "downloads": -1, "filename": "denarius-2017.7.10.1019.tar.gz", "has_sig": false, "md5_digest": "3719389db0fb3b4660bacc67a9206696", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26107, "upload_time": "2017-07-10T10:24:21", "upload_time_iso_8601": "2017-07-10T10:24:21.002082Z", "url": "https://files.pythonhosted.org/packages/50/37/546219049961a6354d7960378ad2ae2e18e6ceac0af055539ff3223d9b0f/denarius-2017.7.10.1019.tar.gz", "yanked": false}], "2017.7.10.1020": [{"comment_text": "", "digests": {"md5": "9f92fcee26c078ca13cf549d6c599c7a", "sha256": "f8506956619abeaa39f8dc09e7f73846e059b380b8024b7e6c9934873712f8c2"}, "downloads": -1, "filename": "denarius-2017.7.10.1020.tar.gz", "has_sig": false, "md5_digest": "9f92fcee26c078ca13cf549d6c599c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26099, "upload_time": "2017-07-10T10:26:55", "upload_time_iso_8601": "2017-07-10T10:26:55.488619Z", "url": "https://files.pythonhosted.org/packages/08/0c/1b7297ea2b65142959ca71bbcfa5c5684ac6a6f2bb860f75007ee20b2e5d/denarius-2017.7.10.1020.tar.gz", "yanked": false}], "2017.7.7.1543": [{"comment_text": "", "digests": {"md5": "c3086b1b1f77a1c336e1c38140462d70", "sha256": "00fe1b6321b4641ab52ef3170f805e1075681c408b185473a40e2d3325a20667"}, "downloads": -1, "filename": "denarius-2017.7.7.1543.tar.gz", "has_sig": false, "md5_digest": "c3086b1b1f77a1c336e1c38140462d70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26078, "upload_time": "2017-07-07T15:52:04", "upload_time_iso_8601": "2017-07-07T15:52:04.394021Z", "url": "https://files.pythonhosted.org/packages/d1/7a/995f5e078e43413841c51b55446b2564b3f47f960aa9eb8815cb7ab7feb0/denarius-2017.7.7.1543.tar.gz", "yanked": false}], "2017.7.9.108": [{"comment_text": "", "digests": {"md5": "8c0457301981e6af1391815d5ac5eacf", "sha256": "c52bf6e7f20bbf9c240679a3a0b4662cb591009286898de33e335b8f70db46fb"}, "downloads": -1, "filename": "denarius-2017.7.9.108.tar.gz", "has_sig": false, "md5_digest": "8c0457301981e6af1391815d5ac5eacf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26097, "upload_time": "2017-07-10T10:15:25", "upload_time_iso_8601": "2017-07-10T10:15:25.323704Z", "url": "https://files.pythonhosted.org/packages/f4/f3/a70b16a7bb779781db5aefc7000b2bc74b3307b1a642d68c416573ebe7ff/denarius-2017.7.9.108.tar.gz", "yanked": false}], "2018.1.12.2154": [{"comment_text": "", "digests": {"md5": "4a57bb5378e36c062bbe12bcf594462e", "sha256": "6440c30e8cb39cb915a296fd8c1b27e59c93d13a5193533e6aa813382ad002f3"}, "downloads": -1, "filename": "denarius-2018.1.12.2154.tar.gz", "has_sig": false, "md5_digest": "4a57bb5378e36c062bbe12bcf594462e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 192367, "upload_time": "2018-01-13T17:40:02", "upload_time_iso_8601": "2018-01-13T17:40:02.494349Z", "url": "https://files.pythonhosted.org/packages/4f/c0/050417ba17b5da2f9e341a52432605f96a0ce55e9bf7dd07278e478e850e/denarius-2018.1.12.2154.tar.gz", "yanked": false}], "2018.1.13.1931": [{"comment_text": "", "digests": {"md5": "e96710b964c2b0f3dce335db2d285b1e", "sha256": "62425c671c719cf919f71ca5637ad23e75db4930eed7d7b06d5d5641868911ef"}, "downloads": -1, "filename": "denarius-2018.1.13.1931.tar.gz", "has_sig": false, "md5_digest": "e96710b964c2b0f3dce335db2d285b1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 192356, "upload_time": "2018-01-13T19:32:48", "upload_time_iso_8601": "2018-01-13T19:32:48.241887Z", "url": "https://files.pythonhosted.org/packages/a2/40/083fde15a9363a196c61e051437529c5c20ed03c23e1ad54375c2a9500e4/denarius-2018.1.13.1931.tar.gz", "yanked": false}], "2018.1.14.2009": [{"comment_text": "", "digests": {"md5": "a69430044f28efcf63637e1387c07bb3", "sha256": "5483d731c2ddf0a031c9cef06a1ad25a12b2f87363635a8f450dce29586b1365"}, "downloads": -1, "filename": "denarius-2018.1.14.2009.tar.gz", "has_sig": false, "md5_digest": "a69430044f28efcf63637e1387c07bb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196238, "upload_time": "2018-01-14T20:25:06", "upload_time_iso_8601": "2018-01-14T20:25:06.345114Z", "url": "https://files.pythonhosted.org/packages/e3/9f/ef4764500396ccb08b78b8cf6ebf412c090d9244c872e96d9155ffb3a42b/denarius-2018.1.14.2009.tar.gz", "yanked": false}], "2018.1.14.3": [{"comment_text": "", "digests": {"md5": "0cda4b30b1aa3edb7641338d86638614", "sha256": "559eaa39e227dac9e92c1bebea8821a0accaea8439925140048ce02431af59ed"}, "downloads": -1, "filename": "denarius-2018.1.14.3.tar.gz", "has_sig": false, "md5_digest": "0cda4b30b1aa3edb7641338d86638614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 193508, "upload_time": "2018-01-14T00:12:35", "upload_time_iso_8601": "2018-01-14T00:12:35.506797Z", "url": "https://files.pythonhosted.org/packages/37/b8/d1bdfde4a699e81c0a0179b3b7e612a6292acc14ff92118a353b88dabc37/denarius-2018.1.14.3.tar.gz", "yanked": false}], "2018.1.16.2213": [{"comment_text": "", "digests": {"md5": "9b3a74d1c1a58ffd0c027a919fe6639a", "sha256": "fabc062a08d6f33e0ee64ae375ee06834e0270900ccd372d79dad5578f98c298"}, "downloads": -1, "filename": "denarius-2018.1.16.2213.tar.gz", "has_sig": false, "md5_digest": "9b3a74d1c1a58ffd0c027a919fe6639a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 198160, "upload_time": "2018-01-16T22:14:37", "upload_time_iso_8601": "2018-01-16T22:14:37.718707Z", "url": "https://files.pythonhosted.org/packages/d4/d4/1baffff1d9db5888daff6a0706673cd583a3e87f2282ff100c9e216093de/denarius-2018.1.16.2213.tar.gz", "yanked": false}], "2018.1.18.1452": [{"comment_text": "", "digests": {"md5": "b0674e85f7a663876d8755d0acb4e21e", "sha256": "fc82c5ae3d2e9dfccca0c7dad031d3b21587fa3b1a14e2279a21390d1c54f7ce"}, "downloads": -1, "filename": "denarius-2018.1.18.1452.tar.gz", "has_sig": false, "md5_digest": "b0674e85f7a663876d8755d0acb4e21e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 198190, "upload_time": "2018-01-18T14:57:21", "upload_time_iso_8601": "2018-01-18T14:57:21.956905Z", "url": "https://files.pythonhosted.org/packages/09/4a/f183ff5fbc00bcf939897153d12d0f434e1f5073a7a21ec2f7bb247c58c4/denarius-2018.1.18.1452.tar.gz", "yanked": false}], "2018.1.20.2215": [{"comment_text": "", "digests": {"md5": "16e26e7dfeaf52be8a2bdaa59262ceb2", "sha256": "e23a01aa30ffedbd9ab87da789ed0a97b4e19aaac753df390abd7b6bf81f2902"}, "downloads": -1, "filename": "denarius-2018.1.20.2215.tar.gz", "has_sig": false, "md5_digest": "16e26e7dfeaf52be8a2bdaa59262ceb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200525, "upload_time": "2018-01-20T22:17:35", "upload_time_iso_8601": "2018-01-20T22:17:35.070238Z", "url": "https://files.pythonhosted.org/packages/ad/b3/1b79309f2a7e9bf4ea7629989f182759dfea5c7e81986c39548d2d0bcec6/denarius-2018.1.20.2215.tar.gz", "yanked": false}], "2018.1.20.2227": [{"comment_text": "", "digests": {"md5": "b371b6bfdf47c34cfea270fb83e8e421", "sha256": "ee877556127b3f2625f458af9572db2e66f8128d21b99e8dc82e0b0cafa6398a"}, "downloads": -1, "filename": "denarius-2018.1.20.2227.tar.gz", "has_sig": false, "md5_digest": "b371b6bfdf47c34cfea270fb83e8e421", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201216, "upload_time": "2018-01-20T22:50:34", "upload_time_iso_8601": "2018-01-20T22:50:34.785031Z", "url": "https://files.pythonhosted.org/packages/0e/ee/57b432c44096c8c07bee8b058d307b45ef640f36a9c48233c6d439aef976/denarius-2018.1.20.2227.tar.gz", "yanked": false}], "2018.1.20.2345": [{"comment_text": "", "digests": {"md5": "95521554b75f7172c1e1ce8cbc387221", "sha256": "2acc584effacd5a9c6c28ff3ca602f7affcf6e0ac3ce6228ebc41e2cfc966ce0"}, "downloads": -1, "filename": "denarius-2018.1.20.2345.tar.gz", "has_sig": false, "md5_digest": "95521554b75f7172c1e1ce8cbc387221", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203184, "upload_time": "2018-01-20T23:47:36", "upload_time_iso_8601": "2018-01-20T23:47:36.523536Z", "url": "https://files.pythonhosted.org/packages/39/09/9a616b6a9d2b9d485c388967209cb8c40c5e9c32dc7c3a7606c01c14dedb/denarius-2018.1.20.2345.tar.gz", "yanked": false}], "2018.1.21.227": [{"comment_text": "", "digests": {"md5": "96adf2ff830d78f33dd3f87a75754ff3", "sha256": "c8a677cacffec71b49fae53912a15a2e80ae75eef50187a0d07e603e2d37698f"}, "downloads": -1, "filename": "denarius-2018.1.21.227.tar.gz", "has_sig": false, "md5_digest": "96adf2ff830d78f33dd3f87a75754ff3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201937, "upload_time": "2018-01-21T02:33:10", "upload_time_iso_8601": "2018-01-21T02:33:10.472098Z", "url": "https://files.pythonhosted.org/packages/1b/6b/3a24f478ab8625781621dd14cce616b71b482bb187488dcbcf1969faa42d/denarius-2018.1.21.227.tar.gz", "yanked": false}], "2018.1.23.11": [{"comment_text": "", "digests": {"md5": "2f84a5ce34c59804193cf5432ab89d6a", "sha256": "1ae9fd641ca0764dd790a0bd12887064fe8e5a8d26a9c46126eaa13a50d0708c"}, "downloads": -1, "filename": "denarius-2018.1.23.11.tar.gz", "has_sig": false, "md5_digest": "2f84a5ce34c59804193cf5432ab89d6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 197250, "upload_time": "2018-01-23T00:14:29", "upload_time_iso_8601": "2018-01-23T00:14:29.757720Z", "url": "https://files.pythonhosted.org/packages/cd/59/e2c12be1b2f3fcc0e99a117161fbd61450d79c7466cfe072d2ac15fab7df/denarius-2018.1.23.11.tar.gz", "yanked": false}], "2018.1.23.1644": [{"comment_text": "", "digests": {"md5": "e8ac3c2e40d50ca47b9ab565917d470e", "sha256": "c32e71b7c2a9cf195c9dc5f3409f08dec26a269eebb47752184b15850c4685d0"}, "downloads": -1, "filename": "denarius-2018.1.23.1644.tar.gz", "has_sig": false, "md5_digest": "e8ac3c2e40d50ca47b9ab565917d470e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201920, "upload_time": "2018-01-23T16:47:59", "upload_time_iso_8601": "2018-01-23T16:47:59.414392Z", "url": "https://files.pythonhosted.org/packages/69/5d/31522eb9c74b1aeea92ce657116b3de785e29003e75c460b3208d2f707b6/denarius-2018.1.23.1644.tar.gz", "yanked": false}], "2018.1.23.1815": [{"comment_text": "", "digests": {"md5": "e3cf006716341cbc88182e33887f8b36", "sha256": "15986bf8ad618d7f1e2073f908e09ca4b9a69988803d9bdb9d68d62ba6b77bce"}, "downloads": -1, "filename": "denarius-2018.1.23.1815.tar.gz", "has_sig": false, "md5_digest": "e3cf006716341cbc88182e33887f8b36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202182, "upload_time": "2018-01-23T18:19:32", "upload_time_iso_8601": "2018-01-23T18:19:32.253322Z", "url": "https://files.pythonhosted.org/packages/95/57/fab00159350aaecee31df19b529700c2fdc2e37541fbf4bdd0f0bce3860e/denarius-2018.1.23.1815.tar.gz", "yanked": false}], "2018.1.23.1820": [{"comment_text": "", "digests": {"md5": "bcb9d05479704f23133fb6e654364213", "sha256": "709f85fbf5fe8616f6644e0d600f49b8d7bfce9fa13a61724904b1a061827c6e"}, "downloads": -1, "filename": "denarius-2018.1.23.1820.tar.gz", "has_sig": false, "md5_digest": "bcb9d05479704f23133fb6e654364213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202412, "upload_time": "2018-01-23T18:21:43", "upload_time_iso_8601": "2018-01-23T18:21:43.668886Z", "url": "https://files.pythonhosted.org/packages/d9/35/406ba385cd454312c84e83036c45c9bdcdb1a697a92d80c7169158925bba/denarius-2018.1.23.1820.tar.gz", "yanked": false}], "2018.1.23.1907": [{"comment_text": "", "digests": {"md5": "636482be8b4cb6f08b7adbcd947cdddf", "sha256": "02586d435ca27051f88f3d1eee9021931d931ab10ab0caf2deaf36d14ad0e4c2"}, "downloads": -1, "filename": "denarius-2018.1.23.1907.tar.gz", "has_sig": false, "md5_digest": "636482be8b4cb6f08b7adbcd947cdddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202439, "upload_time": "2018-01-23T19:16:03", "upload_time_iso_8601": "2018-01-23T19:16:03.873479Z", "url": "https://files.pythonhosted.org/packages/5f/19/fd0f84689935e539bcaf87c76d7d7f5a8305c4ba8559b9410d333ea720a8/denarius-2018.1.23.1907.tar.gz", "yanked": false}], "2018.1.25.135": [{"comment_text": "", "digests": {"md5": "b04e3da8ca66f9755f8ecb3db318837d", "sha256": "64ee177e02b209bc1b9f38fe8eb63dc5015afbbe5d4959990be273868234fee1"}, "downloads": -1, "filename": "denarius-2018.1.25.135.tar.gz", "has_sig": false, "md5_digest": "b04e3da8ca66f9755f8ecb3db318837d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202551, "upload_time": "2018-01-25T01:40:45", "upload_time_iso_8601": "2018-01-25T01:40:45.347567Z", "url": "https://files.pythonhosted.org/packages/6e/70/cd6cd257d08abad9ca3424204cbc2261dc0504fc59e0a97198db6744dabc/denarius-2018.1.25.135.tar.gz", "yanked": false}], "2018.1.25.2013": [{"comment_text": "", "digests": {"md5": "c15ea820e10e54941037a252fb91db84", "sha256": "8497c64c1e583966ef9917e4a82e6e85c225d4fd204a5a0cff6d51b6f868216d"}, "downloads": -1, "filename": "denarius-2018.1.25.2013.tar.gz", "has_sig": false, "md5_digest": "c15ea820e10e54941037a252fb91db84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204397, "upload_time": "2018-01-25T20:32:52", "upload_time_iso_8601": "2018-01-25T20:32:52.463080Z", "url": "https://files.pythonhosted.org/packages/a3/b9/cca5cc0ccb4c66f2c39c7750845a99927381c80e1d774d14a0d9e53cad65/denarius-2018.1.25.2013.tar.gz", "yanked": false}], "2018.1.26.310": [{"comment_text": "", "digests": {"md5": "2ae04955a8a645dfbfdef49f11b9104c", "sha256": "8c11534133c3de153f4cfcacdfff0ff986bb0e5e402e03fdc5b3cc6f24901aad"}, "downloads": -1, "filename": "denarius-2018.1.26.310.tar.gz", "has_sig": false, "md5_digest": "2ae04955a8a645dfbfdef49f11b9104c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201409, "upload_time": "2018-01-26T04:40:36", "upload_time_iso_8601": "2018-01-26T04:40:36.152697Z", "url": "https://files.pythonhosted.org/packages/76/d2/3fd459d82edc9c0b76498d8c659431586559a19aa8868650e3f8911022c4/denarius-2018.1.26.310.tar.gz", "yanked": false}], "2018.1.26.536": [{"comment_text": "", "digests": {"md5": "3bcb182d0b90ab26db14ac77d5f9f124", "sha256": "035e98ca0afdb8d13940a07df70fafcf94d9def04b5e71be04f8f5f6242546d3"}, "downloads": -1, "filename": "denarius-2018.1.26.536.tar.gz", "has_sig": false, "md5_digest": "3bcb182d0b90ab26db14ac77d5f9f124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201395, "upload_time": "2018-01-26T05:39:10", "upload_time_iso_8601": "2018-01-26T05:39:10.045207Z", "url": "https://files.pythonhosted.org/packages/71/8b/0e0da0725f0129a2e91d5b45ca5355e0a57018e11f9826d65d28af423a0e/denarius-2018.1.26.536.tar.gz", "yanked": false}], "2018.1.30.2238": [{"comment_text": "", "digests": {"md5": "6a50c00a62b8e0ded1bbc221c1f1c737", "sha256": "b402c7db601e9dc3487c2f1bec82947f2c04448f4ea2de9d301408630bf4be7a"}, "downloads": -1, "filename": "denarius-2018.1.30.2238.tar.gz", "has_sig": false, "md5_digest": "6a50c00a62b8e0ded1bbc221c1f1c737", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207168, "upload_time": "2018-01-30T23:29:53", "upload_time_iso_8601": "2018-01-30T23:29:53.067335Z", "url": "https://files.pythonhosted.org/packages/2f/c8/049a8a16bd73a316cab9b10a332c518dfc36bf522eed08530022b5d2254e/denarius-2018.1.30.2238.tar.gz", "yanked": false}], "2018.1.31.1721": [{"comment_text": "", "digests": {"md5": "11e41079691ddc532812cdf58116308e", "sha256": "f682189b28a0764fc524e1f57ea8a5aeca88036b381e61724366fe10cd427197"}, "downloads": -1, "filename": "denarius-2018.1.31.1721.tar.gz", "has_sig": false, "md5_digest": "11e41079691ddc532812cdf58116308e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210250, "upload_time": "2018-01-31T17:30:31", "upload_time_iso_8601": "2018-01-31T17:30:31.916799Z", "url": "https://files.pythonhosted.org/packages/f7/82/7a96f8c27a0bd3c806013d3174d50663e3d8337780101c4ca746ea85f81a/denarius-2018.1.31.1721.tar.gz", "yanked": false}], "2018.1.31.1732": [{"comment_text": "", "digests": {"md5": "8227ef68c29724def7477c5df57af7bf", "sha256": "69e650ab00cc70c28b51c069509fa4daa31af918d22ad98982176d575a69f648"}, "downloads": -1, "filename": "denarius-2018.1.31.1732.tar.gz", "has_sig": false, "md5_digest": "8227ef68c29724def7477c5df57af7bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210246, "upload_time": "2018-01-31T17:33:20", "upload_time_iso_8601": "2018-01-31T17:33:20.478356Z", "url": "https://files.pythonhosted.org/packages/48/29/dbd355a29c69265131bb6c6a7804adee25ad37b76189f77e6ec96b199d11/denarius-2018.1.31.1732.tar.gz", "yanked": false}], "2018.1.31.24": [{"comment_text": "", "digests": {"md5": "9234df8736307993d89889f2b5358b0d", "sha256": "16650f9ab8a62238c19f6b1d66d2d9783337392884362a055d6ad843e5653888"}, "downloads": -1, "filename": "denarius-2018.1.31.24.tar.gz", "has_sig": false, "md5_digest": "9234df8736307993d89889f2b5358b0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 209114, "upload_time": "2018-01-31T01:04:12", "upload_time_iso_8601": "2018-01-31T01:04:12.643220Z", "url": "https://files.pythonhosted.org/packages/8e/42/a081d357900e3f7ed8d6282289e99620423fefb0daa34aef1de215199b04/denarius-2018.1.31.24.tar.gz", "yanked": false}], "2018.1.5.1727": [{"comment_text": "", "digests": {"md5": "1b80eb8a5f40c3c526912e6a07426470", "sha256": "9a599139a5de43191b98206a16e04d6661184e4ff9043adbf08c92431a76821c"}, "downloads": -1, "filename": "denarius-2018.1.5.1727.tar.gz", "has_sig": false, "md5_digest": "1b80eb8a5f40c3c526912e6a07426470", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 191718, "upload_time": "2018-01-05T17:30:13", "upload_time_iso_8601": "2018-01-05T17:30:13.521514Z", "url": "https://files.pythonhosted.org/packages/1c/fa/2a8eba9e25521ecfa307fabfdce04e874c660f0f75befeff3ce998a13cda/denarius-2018.1.5.1727.tar.gz", "yanked": false}], "2018.2.6.1956": [{"comment_text": "", "digests": {"md5": "e981f49f477631f8f387482c445961ff", "sha256": "c1d12e1595b58dc856c104233adefe53279c7b51e8a9251dc57dfb519ff3ceb8"}, "downloads": -1, "filename": "denarius-2018.2.6.1956.tar.gz", "has_sig": false, "md5_digest": "e981f49f477631f8f387482c445961ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207463, "upload_time": "2018-02-06T23:45:45", "upload_time_iso_8601": "2018-02-06T23:45:45.587789Z", "url": "https://files.pythonhosted.org/packages/51/1e/9c04eb734bb88e4a56e085fd61dd08383b42aaf52911fe7f9e3b7fe80505/denarius-2018.2.6.1956.tar.gz", "yanked": false}], "2018.2.7.53": [{"comment_text": "", "digests": {"md5": "af65edb413d8c65e3887fa356422d806", "sha256": "3e2287a91858f948252306d2fd9fa717f4e6c2487947578d27cd6ab6257ff2e8"}, "downloads": -1, "filename": "denarius-2018.2.7.53.tar.gz", "has_sig": false, "md5_digest": "af65edb413d8c65e3887fa356422d806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207450, "upload_time": "2018-02-07T00:56:58", "upload_time_iso_8601": "2018-02-07T00:56:58.863063Z", "url": "https://files.pythonhosted.org/packages/1b/c5/66cfb7e7a335f83697801c51069bfcfe4aef0b8adeb573a18456ddf7206d/denarius-2018.2.7.53.tar.gz", "yanked": false}], "2018.3.13.2151": [{"comment_text": "", "digests": {"md5": "78561296f313dffce8b88b1c8112cb61", "sha256": "e5f6ded094e292797ffc2f6686d5c9678b0b34ecdf070484358bb94d0e153300"}, "downloads": -1, "filename": "denarius-2018.3.13.2151.tar.gz", "has_sig": false, "md5_digest": "78561296f313dffce8b88b1c8112cb61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213439, "upload_time": "2018-03-13T21:53:24", "upload_time_iso_8601": "2018-03-13T21:53:24.985264Z", "url": "https://files.pythonhosted.org/packages/21/55/114ee35a3c3a4a882f83bd8d9a1b13db35205cff86641f6f8b5901b80d6a/denarius-2018.3.13.2151.tar.gz", "yanked": false}], "2018.3.2.244": [{"comment_text": "", "digests": {"md5": "5a59d82d9987b6a517e039ef75d8a5b7", "sha256": "45f2d142d1d4e271c2cd6280ad6787eb0c42e65f1befade70729214d8c05978a"}, "downloads": -1, "filename": "denarius-2018.3.2.244.tar.gz", "has_sig": false, "md5_digest": "5a59d82d9987b6a517e039ef75d8a5b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207523, "upload_time": "2018-03-02T13:48:22", "upload_time_iso_8601": "2018-03-02T13:48:22.693857Z", "url": "https://files.pythonhosted.org/packages/45/90/4d77b4f816756f27388a3edf7f2de4d6770bd7026c7fe150d41f772c7ee6/denarius-2018.3.2.244.tar.gz", "yanked": false}], "2018.3.25.2227": [{"comment_text": "", "digests": {"md5": "c2dcfb492f6bde53f84df7b37be37bf5", "sha256": "d7cbfa4828125bb35fa9823c0e58ae47af1228173a1edb718982ee5618199cbd"}, "downloads": -1, "filename": "denarius-2018.3.25.2227.tar.gz", "has_sig": false, "md5_digest": "c2dcfb492f6bde53f84df7b37be37bf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213613, "upload_time": "2018-03-25T22:30:48", "upload_time_iso_8601": "2018-03-25T22:30:48.446165Z", "url": "https://files.pythonhosted.org/packages/9f/70/7f4b070ca49000639e1eaa4f821bab2db3aa3644e13aa25d99790006dfef/denarius-2018.3.25.2227.tar.gz", "yanked": false}], "2018.3.8.42": [{"comment_text": "", "digests": {"md5": "9a7d84b24d67e1df8f1efc74c6baaee9", "sha256": "f62bc2e00dc62c4b33d4075ead08ed1e4e57b4f22e1c03ebc357e95b2832e8b8"}, "downloads": -1, "filename": "denarius-2018.3.8.42.tar.gz", "has_sig": false, "md5_digest": "9a7d84b24d67e1df8f1efc74c6baaee9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213335, "upload_time": "2018-03-08T01:03:16", "upload_time_iso_8601": "2018-03-08T01:03:16.104277Z", "url": "https://files.pythonhosted.org/packages/f3/a3/1b1a969bdeb95fe8e7f851d8ca8881b6e1839654ceea71a0c48fac3e6746/denarius-2018.3.8.42.tar.gz", "yanked": false}], "2018.4.15.214": [{"comment_text": "", "digests": {"md5": "90aa6beab5549be69375479e5543c87b", "sha256": "debd8b02394414d9b18873bad34ffaa56fbfd63e8d563cb4d5cc58357c6b8f5d"}, "downloads": -1, "filename": "denarius-2018.4.15.214.tar.gz", "has_sig": false, "md5_digest": "90aa6beab5549be69375479e5543c87b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 216535, "upload_time": "2018-04-15T03:17:32", "upload_time_iso_8601": "2018-04-15T03:17:32.312747Z", "url": "https://files.pythonhosted.org/packages/5e/39/baf6e02acf6374be27f3e78bb1530e69546b9c601780a10d139ad16bb704/denarius-2018.4.15.214.tar.gz", "yanked": false}], "2018.4.15.2226": [{"comment_text": "", "digests": {"md5": "de92a0c6640977ae7c7b9f2b3ece237a", "sha256": "dd8630f1322862ea40113d9a15c64f81228a05ab2364afeb7b52da2b9831bedd"}, "downloads": -1, "filename": "denarius-2018.4.15.2226.tar.gz", "has_sig": false, "md5_digest": "de92a0c6640977ae7c7b9f2b3ece237a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 216539, "upload_time": "2018-04-15T22:45:54", "upload_time_iso_8601": "2018-04-15T22:45:54.431246Z", "url": "https://files.pythonhosted.org/packages/7b/9a/310ebd7db2f4ec9c2ff6eca9e18d5f507cc5ca0bc560284bf8adefca3852/denarius-2018.4.15.2226.tar.gz", "yanked": false}], "2018.4.15.2324": [{"comment_text": "", "digests": {"md5": "d9b4abd1703928923fe46d96902641ff", "sha256": "9760e118ab70366f8855a4f2738a786b6433e0041fb7b3d19cb4c6346046130b"}, "downloads": -1, "filename": "denarius-2018.4.15.2324.tar.gz", "has_sig": false, "md5_digest": "d9b4abd1703928923fe46d96902641ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 216727, "upload_time": "2018-04-15T23:25:55", "upload_time_iso_8601": "2018-04-15T23:25:55.639922Z", "url": "https://files.pythonhosted.org/packages/20/b4/e0da1800b588adac97ecdd9af5befdd58ea0326d04b4cc310c3767285f6e/denarius-2018.4.15.2324.tar.gz", "yanked": false}], "2018.4.16.1225": [{"comment_text": "", "digests": {"md5": "e992f8c59c9b5f941ac5bae49ba15428", "sha256": "ada83d1db63e773be692779117be18fff47d4be7c2bf6746dec1ffa6c856ee68"}, "downloads": -1, "filename": "denarius-2018.4.16.1225.tar.gz", "has_sig": false, "md5_digest": "e992f8c59c9b5f941ac5bae49ba15428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 216874, "upload_time": "2018-04-16T12:32:14", "upload_time_iso_8601": "2018-04-16T12:32:14.082850Z", "url": "https://files.pythonhosted.org/packages/9c/93/9711372d3c922e66b60a934f8adcec43620c84452679380be8c24e9e9dce/denarius-2018.4.16.1225.tar.gz", "yanked": false}], "2018.4.16.34": [{"comment_text": "", "digests": {"md5": "b25204d64c1f5574d4b2dd65abf7036a", "sha256": "a057cc7d0cfa30173892dbad5dd7a314cfc82e8642cd5a8b37edf3d209bde95a"}, "downloads": -1, "filename": "denarius-2018.4.16.34.tar.gz", "has_sig": false, "md5_digest": "b25204d64c1f5574d4b2dd65abf7036a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 216937, "upload_time": "2018-04-16T00:37:26", "upload_time_iso_8601": "2018-04-16T00:37:26.630307Z", "url": "https://files.pythonhosted.org/packages/95/3f/108439357724a60fe8d57847abedcfce5b78cc879dc094d60bf9f9b32e0b/denarius-2018.4.16.34.tar.gz", "yanked": false}], "2018.4.18.547": [{"comment_text": "", "digests": {"md5": "e6888d930b14db2572b03b849dbbf346", "sha256": "81943a34545c7860ce76084827222507a098045d447c30a251daccdaa34a528a"}, "downloads": -1, "filename": "denarius-2018.4.18.547.tar.gz", "has_sig": false, "md5_digest": "e6888d930b14db2572b03b849dbbf346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 217640, "upload_time": "2018-04-18T05:58:10", "upload_time_iso_8601": "2018-04-18T05:58:10.199964Z", "url": "https://files.pythonhosted.org/packages/20/d0/6b8053a2938abf5ea415f69c405068455ec5ee6c8b267c87efb9c6c31348/denarius-2018.4.18.547.tar.gz", "yanked": false}], "2018.4.19.2327": [{"comment_text": "", "digests": {"md5": "ddf39b4aa0ce0a9023bce81424e097bb", "sha256": "ed58fd840b79baadae884a9307b947a81125c2c843d9bccf75b4aba42ef5c9d4"}, "downloads": -1, "filename": "denarius-2018.4.19.2327.tar.gz", "has_sig": false, "md5_digest": "ddf39b4aa0ce0a9023bce81424e097bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218160, "upload_time": "2018-04-19T23:30:26", "upload_time_iso_8601": "2018-04-19T23:30:26.806249Z", "url": "https://files.pythonhosted.org/packages/2a/5e/76b6f30cc6bf8b46c94ee72f95ce26b6e1d8d5afcade97ac119e643d8ea3/denarius-2018.4.19.2327.tar.gz", "yanked": false}], "2018.4.3.2119": [{"comment_text": "", "digests": {"md5": "48ac412817d7e4a8958f92bc358094aa", "sha256": "b7b09541c3b5162989ac669c533bdc5eaa5b860c3923dbbc2f1fe915e49c8fd1"}, "downloads": -1, "filename": "denarius-2018.4.3.2119.tar.gz", "has_sig": false, "md5_digest": "48ac412817d7e4a8958f92bc358094aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215156, "upload_time": "2018-04-03T21:43:05", "upload_time_iso_8601": "2018-04-03T21:43:05.013182Z", "url": "https://files.pythonhosted.org/packages/12/25/16c563901990a96591deef2d860fb813d7ff06e33d0e385c073d4ae0346d/denarius-2018.4.3.2119.tar.gz", "yanked": false}], "2018.4.3.2341": [{"comment_text": "", "digests": {"md5": "9752c0d4034504215592d54f053b1829", "sha256": "0fe25b8991f922b4a5b85d384795b7d510284bfb644dd327ea7db9e4f6ec166b"}, "downloads": -1, "filename": "denarius-2018.4.3.2341.tar.gz", "has_sig": false, "md5_digest": "9752c0d4034504215592d54f053b1829", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215165, "upload_time": "2018-04-03T23:43:14", "upload_time_iso_8601": "2018-04-03T23:43:14.228101Z", "url": "https://files.pythonhosted.org/packages/b3/a7/0ca241cdd47dad81174235844829b92fc305746e7bd045c1a0a177955732/denarius-2018.4.3.2341.tar.gz", "yanked": false}], "2018.4.4.1401": [{"comment_text": "", "digests": {"md5": "9654ec70cadd715d5a05910b0bd32b2c", "sha256": "ce614e8f3321fac3b6f322b885ed5c46693cf16c64258c89e4f892bfdd65ee34"}, "downloads": -1, "filename": "denarius-2018.4.4.1401.tar.gz", "has_sig": false, "md5_digest": "9654ec70cadd715d5a05910b0bd32b2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215197, "upload_time": "2018-04-04T14:02:35", "upload_time_iso_8601": "2018-04-04T14:02:35.360882Z", "url": "https://files.pythonhosted.org/packages/85/c6/c4f260b0a32dcbcbb023b9a0afbf3f7b3f23ef0ebbadedf168afec090c1d/denarius-2018.4.4.1401.tar.gz", "yanked": false}], "2018.4.4.1419": [{"comment_text": "", "digests": {"md5": "2cc45fdb9d164ea2c28b4782eb17d2ea", "sha256": "5d3ceb013bc1ad0574cd7dccd3b534c36b3214bb3ac6c6097160d143d7478fa0"}, "downloads": -1, "filename": "denarius-2018.4.4.1419.tar.gz", "has_sig": false, "md5_digest": "2cc45fdb9d164ea2c28b4782eb17d2ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215218, "upload_time": "2018-04-04T14:20:39", "upload_time_iso_8601": "2018-04-04T14:20:39.946410Z", "url": "https://files.pythonhosted.org/packages/83/20/d2963b148467c340dbf55d0d7ba3fdbc543882ac0137cbee0815af0bb873/denarius-2018.4.4.1419.tar.gz", "yanked": false}], "2018.4.4.1650": [{"comment_text": "", "digests": {"md5": "7f8a71c131481b4d2e56e74789b909ef", "sha256": "dede449b36e919e6c13ef8a0c733183ad2aa6c48ee03a9c395b604cc7c908023"}, "downloads": -1, "filename": "denarius-2018.4.4.1650.tar.gz", "has_sig": false, "md5_digest": "7f8a71c131481b4d2e56e74789b909ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215332, "upload_time": "2018-04-04T16:57:47", "upload_time_iso_8601": "2018-04-04T16:57:47.271890Z", "url": "https://files.pythonhosted.org/packages/ae/47/f38fe7dd4c07fd9d730d353bffed34681c9f4b980d93369990d84a6ba2f6/denarius-2018.4.4.1650.tar.gz", "yanked": false}], "2018.4.5.2217": [{"comment_text": "", "digests": {"md5": "0fbe3ebf93b4e9b14c7ecb4a52b1a6bc", "sha256": "94946c5239e2d501759333a9f076294fb6a55eda003d3e67971553910a73438c"}, "downloads": -1, "filename": "denarius-2018.4.5.2217.tar.gz", "has_sig": false, "md5_digest": "0fbe3ebf93b4e9b14c7ecb4a52b1a6bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215347, "upload_time": "2018-04-05T22:24:45", "upload_time_iso_8601": "2018-04-05T22:24:45.169985Z", "url": "https://files.pythonhosted.org/packages/35/94/890aa642f16ac211de41f5ac9e66c39862fe6a75b9e39f19b27edb3c57fc/denarius-2018.4.5.2217.tar.gz", "yanked": false}], "2018.4.5.2347": [{"comment_text": "", "digests": {"md5": "879fc15bff18a0714eedec958dd1f2f8", "sha256": "f242623bd340ef360ebc92ae30c9f2568befcd54ff50c28f71cf744af801f867"}, "downloads": -1, "filename": "denarius-2018.4.5.2347.tar.gz", "has_sig": false, "md5_digest": "879fc15bff18a0714eedec958dd1f2f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215850, "upload_time": "2018-04-06T00:10:27", "upload_time_iso_8601": "2018-04-06T00:10:27.013225Z", "url": "https://files.pythonhosted.org/packages/1d/29/533a0921ec2f588a7e13483449ee795a3e46ba4f5fc83eb780836c368391/denarius-2018.4.5.2347.tar.gz", "yanked": false}], "2018.4.6.1611": [{"comment_text": "", "digests": {"md5": "cb726fbb442f465cc27c81fe20e32bec", "sha256": "b9aee96fe2c1164017ba1dcdc17d13e7e5b1e2c2379fd949eba86a92d3d90869"}, "downloads": -1, "filename": "denarius-2018.4.6.1611.tar.gz", "has_sig": false, "md5_digest": "cb726fbb442f465cc27c81fe20e32bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215878, "upload_time": "2018-04-06T16:15:00", "upload_time_iso_8601": "2018-04-06T16:15:00.347625Z", "url": "https://files.pythonhosted.org/packages/3b/a0/91558aa9f464d4bb48a0ac2d4313f11d32477c7a6f5d2f2c0732dd214214/denarius-2018.4.6.1611.tar.gz", "yanked": false}], "2018.5.3.1919": [{"comment_text": "", "digests": {"md5": "9d219504ab2b16144e7bd1999524743b", "sha256": "6726a31a874beda6be4d7fb16560d2cb394f90c91bf41c7a63798fd5e7cc4ae2"}, "downloads": -1, "filename": "denarius-2018.5.3.1919.tar.gz", "has_sig": false, "md5_digest": "9d219504ab2b16144e7bd1999524743b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218203, "upload_time": "2018-05-03T19:22:04", "upload_time_iso_8601": "2018-05-03T19:22:04.095587Z", "url": "https://files.pythonhosted.org/packages/5b/3c/b32e7d038dcad0671c157688ce2145f5c5f4b03b1619dd51a684f8d67eef/denarius-2018.5.3.1919.tar.gz", "yanked": false}], "2018.6.17.613": [{"comment_text": "", "digests": {"md5": "44949e76a00a45eb55d2d181dde0bd89", "sha256": "eaa425161128103fa5cfcb6daf87034564085f58e6b2921299252412f9b05a59"}, "downloads": -1, "filename": "denarius-2018.6.17.613.tar.gz", "has_sig": false, "md5_digest": "44949e76a00a45eb55d2d181dde0bd89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 219552, "upload_time": "2018-06-17T15:11:13", "upload_time_iso_8601": "2018-06-17T15:11:13.627223Z", "url": "https://files.pythonhosted.org/packages/d2/09/e53368a597d629b8e260884d434a2095deb3355fd2e0a77a5ce95b585e0c/denarius-2018.6.17.613.tar.gz", "yanked": false}], "2018.6.3.1848": [{"comment_text": "", "digests": {"md5": "5ea2dfdaad02905de145a7ab93361a27", "sha256": "1e33b3e18a733d8dc532f27f0c4bf8d7c203918a4978c1f093aabb97ea26ea38"}, "downloads": -1, "filename": "denarius-2018.6.3.1848.tar.gz", "has_sig": false, "md5_digest": "5ea2dfdaad02905de145a7ab93361a27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218604, "upload_time": "2018-06-03T18:51:56", "upload_time_iso_8601": "2018-06-03T18:51:56.656259Z", "url": "https://files.pythonhosted.org/packages/44/cc/77f75a0e9319153fad8677fdb2d6259aaaccfcc870a87ecf019d2c7770af/denarius-2018.6.3.1848.tar.gz", "yanked": false}], "2018.6.3.1854": [{"comment_text": "", "digests": {"md5": "8f50052198ade5860a24fac8d1135351", "sha256": "c6a0e3abcc32bc06adaff557c3bc5d949e84763d33984094955523458233cee5"}, "downloads": -1, "filename": "denarius-2018.6.3.1854.tar.gz", "has_sig": false, "md5_digest": "8f50052198ade5860a24fac8d1135351", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218738, "upload_time": "2018-06-03T19:01:14", "upload_time_iso_8601": "2018-06-03T19:01:14.352373Z", "url": "https://files.pythonhosted.org/packages/08/f0/4388d71df4a8e9d4cbc479c2cde3bc5e7d0ceb9fd52dde66a652dd8ae5d3/denarius-2018.6.3.1854.tar.gz", "yanked": false}], "2018.6.3.1902": [{"comment_text": "", "digests": {"md5": "3aeb3dee25c21dc2c204ae5624bc4934", "sha256": "342e36570a6299e710ac55236324363859e968e508974774a0f4c4e4eaff0cc3"}, "downloads": -1, "filename": "denarius-2018.6.3.1902.tar.gz", "has_sig": false, "md5_digest": "3aeb3dee25c21dc2c204ae5624bc4934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218727, "upload_time": "2018-06-03T19:03:18", "upload_time_iso_8601": "2018-06-03T19:03:18.153581Z", "url": "https://files.pythonhosted.org/packages/c5/d7/eb30f418fbdfff2a43647f5b49475270453c6a46bc1b190a5aad0b5032c9/denarius-2018.6.3.1902.tar.gz", "yanked": false}], "2018.6.3.1905": [{"comment_text": "", "digests": {"md5": "d80f46b0226a5356199b58a0d712b37c", "sha256": "c09e8f5ca2b64535a00c9d90cd891d8cca6562f9c4f98d30a50c47b3b5d962d2"}, "downloads": -1, "filename": "denarius-2018.6.3.1905.tar.gz", "has_sig": false, "md5_digest": "d80f46b0226a5356199b58a0d712b37c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218746, "upload_time": "2018-06-03T19:05:36", "upload_time_iso_8601": "2018-06-03T19:05:36.975864Z", "url": "https://files.pythonhosted.org/packages/a5/6c/1afe62692b362a7ae4bd02aac04ee73ff9f59fceb26ceebebca074459a99/denarius-2018.6.3.1905.tar.gz", "yanked": false}], "2018.9.14.1432": [{"comment_text": "", "digests": {"md5": "6c027543a9bcabb44c8e7c858f4edaf7", "sha256": "123a6fe7eb981c093c292ef85a785f1a720a682ffe4cb184353e493a566ba3cd"}, "downloads": -1, "filename": "denarius-2018.9.14.1432.tar.gz", "has_sig": false, "md5_digest": "6c027543a9bcabb44c8e7c858f4edaf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 219743, "upload_time": "2018-09-14T14:33:17", "upload_time_iso_8601": "2018-09-14T14:33:17.795403Z", "url": "https://files.pythonhosted.org/packages/db/60/6e2e5f17b562b2dc4f1093c62cc278357677b3e33e2f603d93482cd5883b/denarius-2018.9.14.1432.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6c027543a9bcabb44c8e7c858f4edaf7", "sha256": "123a6fe7eb981c093c292ef85a785f1a720a682ffe4cb184353e493a566ba3cd"}, "downloads": -1, "filename": "denarius-2018.9.14.1432.tar.gz", "has_sig": false, "md5_digest": "6c027543a9bcabb44c8e7c858f4edaf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 219743, "upload_time": "2018-09-14T14:33:17", "upload_time_iso_8601": "2018-09-14T14:33:17.795403Z", "url": "https://files.pythonhosted.org/packages/db/60/6e2e5f17b562b2dc4f1093c62cc278357677b3e33e2f603d93482cd5883b/denarius-2018.9.14.1432.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:07 2020"}