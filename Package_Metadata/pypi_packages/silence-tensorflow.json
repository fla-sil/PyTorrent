{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "silence_tensorflow\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability|\n|codacy| |code_climate_maintainability| |pip| |downloads|\n\nSimple python package to shut up Tensorflow warnings and logs.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install silence_tensorflow\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometimes\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nHow do I use it?\n----------------------------------------\nYou only need to import the package before import Tensorflow:\n\n.. code:: python\n\n    from silence_tensorflow import silence_tensorflow\n    silence_tensorflow()\n    import tensorflow as tf\n\n    ...\n\n    # your code\n\nCan it be done within the import?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSure, you can do everything with a single line by\nimporting the submodule auto:\n\n.. code:: python\n\n    import silence_tensorflow.auto\n    import tensorflow as tf\n\n    ...\n\n    # your code\n\nHow can I get pylint to ignore the unused import?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou can use the flag 'disable=unused-import' as such:\n\n.. code:: python\n\n    import silence_tensorflow.auto  # pylint: disable=unused-import\n    import tensorflow as tf\n\n    ...\n\n    # your code\n\nHow can I get pylint to ignore the unused variable?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf you import silence_tensorflow in the context of a function\nyou will get a different warning from pyling: unused variable.\nYou can use the flag 'disable=unused-variable' as such:\n\n.. code:: python\n    \n    def func():\n        import silence_tensorflow.auto  # pylint: disable=unused-variable\n        import tensorflow as tf\n\n        ...\n\n        # your code\n\nHow does this work under the hood?\n----------------------------------------\nThis package will set the `KMP_AFFINITY` system variable to `\"noverbose\"`,\n`TF_CPP_MIN_LOG_LEVEL` to level `3` (only errors logged).\n\nIf you need a custom value for `KMP_AFFINITY` you should reset it after importing the package, as follows:\n\n.. code:: python\n\n    import os\n    from silence_tensorflow import silence_tensorflow\n    backup = os.environ[\"KMP_AFFINITY\"]\n    silence_tensorflow()\n    os.environ[\"KMP_AFFINITY\"] = backup\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/silence_tensorflow.png\n   :target: https://travis-ci.org/LucaCappelletti94/silence_tensorflow\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_silence_tensorflow&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_silence_tensorflow\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_silence_tensorflow&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_silence_tensorflow\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_silence_tensorflow&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_silence_tensorflow\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/silence_tensorflow/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/silence_tensorflow?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/silence-tensorflow.svg\n    :target: https://badge.fury.io/py/silence-tensorflow\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/silence-tensorflow\n    :target: https://pepy.tech/badge/silence-tensorflow\n    :alt: Pypi total project downloads \n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/e6fe64db1c9042bbaa4c0a20bde585dc\n    :target: https://www.codacy.com/app/LucaCappelletti94/silence_tensorflow?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/silence_tensorflow&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/c2c6e147021b6855351e/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/silence_tensorflow/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/c2c6e147021b6855351e/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/silence_tensorflow/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/silence_tensorflow", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "silence-tensorflow", "package_url": "https://pypi.org/project/silence-tensorflow/", "platform": "", "project_url": "https://pypi.org/project/silence-tensorflow/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/silence_tensorflow"}, "release_url": "https://pypi.org/project/silence-tensorflow/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Simple python package to shut up Tensorflow warnings and logs.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/silence_tensorflow\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3cb8b035bf1b337f76c144bbea2ea597b6eec9f/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f73696c656e63655f74656e736f72666c6f772e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_silence_tensorflow\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a291cea2a8fc4ba430c0fdaad661a3039e54449f/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f73696c656e63655f74656e736f72666c6f77266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_silence_tensorflow\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20c804a7755e209ca7897a26ba6678ab15a3abff/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f73696c656e63655f74656e736f72666c6f77266d65747269633d7371616c655f726174696e67\"></a>\n<a href=\"https://www.codacy.com/app/LucaCappelletti94/silence_tensorflow?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/silence_tensorflow&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31679f104aedaa759ece526deba1bef81640fc1b/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6536666536346462316339303432626261613463306132306264653538356463\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/silence_tensorflow/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a90d96408c07921448b6acea607e588792d72399/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f63326336653134373032316236383535333531652f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/silence-tensorflow\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbc91122d572a9c281e0fe20013378f6fc9abc5d/68747470733a2f2f62616467652e667572792e696f2f70792f73696c656e63652d74656e736f72666c6f772e737667\"></a> <a href=\"https://pepy.tech/badge/silence-tensorflow\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/524ecb5533596ab1125ee75c90ea6c35ab996c5a/68747470733a2f2f706570792e746563682f62616467652f73696c656e63652d74656e736f72666c6f77\"></a></p>\n<p>Simple python package to shut up Tensorflow warnings and logs.</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install silence_tensorflow\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometimes\nget slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/silence_tensorflow?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e2960c430aed10f889a9c1a1799974c397e51f1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f73696c656e63655f74656e736f72666c6f772f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_silence_tensorflow\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb4690a0ad3e4008e6254e17c3ad055ed83b559a/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f73696c656e63655f74656e736f72666c6f77266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/silence_tensorflow/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4377f747c2b4084e2443082eb5d395fd86e1976/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f63326336653134373032316236383535333531652f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"how-do-i-use-it\">\n<h2>How do I use it?</h2>\n<p>You only need to import the package before import Tensorflow:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">silence_tensorflow</span> <span class=\"kn\">import</span> <span class=\"n\">silence_tensorflow</span>\n<span class=\"n\">silence_tensorflow</span><span class=\"p\">()</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># your code</span>\n</pre>\n<div id=\"can-it-be-done-within-the-import\">\n<h3>Can it be done within the import?</h3>\n<p>Sure, you can do everything with a single line by\nimporting the submodule auto:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">silence_tensorflow.auto</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># your code</span>\n</pre>\n</div>\n<div id=\"how-can-i-get-pylint-to-ignore-the-unused-import\">\n<h3>How can I get pylint to ignore the unused import?</h3>\n<p>You can use the flag \u2018disable=unused-import\u2019 as such:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">silence_tensorflow.auto</span>  <span class=\"c1\"># pylint: disable=unused-import</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># your code</span>\n</pre>\n</div>\n<div id=\"how-can-i-get-pylint-to-ignore-the-unused-variable\">\n<h3>How can I get pylint to ignore the unused variable?</h3>\n<p>If you import silence_tensorflow in the context of a function\nyou will get a different warning from pyling: unused variable.\nYou can use the flag \u2018disable=unused-variable\u2019 as such:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">silence_tensorflow.auto</span>  <span class=\"c1\"># pylint: disable=unused-variable</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n    <span class=\"o\">...</span>\n\n    <span class=\"c1\"># your code</span>\n</pre>\n</div>\n</div>\n<div id=\"how-does-this-work-under-the-hood\">\n<h2>How does this work under the hood?</h2>\n<p>This package will set the <cite>KMP_AFFINITY</cite> system variable to <cite>\u201cnoverbose\u201d</cite>,\n<cite>TF_CPP_MIN_LOG_LEVEL</cite> to level <cite>3</cite> (only errors logged).</p>\n<p>If you need a custom value for <cite>KMP_AFFINITY</cite> you should reset it after importing the package, as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">silence_tensorflow</span> <span class=\"kn\">import</span> <span class=\"n\">silence_tensorflow</span>\n<span class=\"n\">backup</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"KMP_AFFINITY\"</span><span class=\"p\">]</span>\n<span class=\"n\">silence_tensorflow</span><span class=\"p\">()</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"KMP_AFFINITY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">backup</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6776614, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "58e0104b468b975d2d6424e1274360ad", "sha256": "91cb4a6bda2350e8622c6451422ffdf85c4a2d599f85b3ae3509c37a1b28ad24"}, "downloads": -1, "filename": "silence_tensorflow-1.0.0.tar.gz", "has_sig": false, "md5_digest": "58e0104b468b975d2d6424e1274360ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2956, "upload_time": "2019-05-25T06:39:02", "upload_time_iso_8601": "2019-05-25T06:39:02.203297Z", "url": "https://files.pythonhosted.org/packages/71/6d/a34b9c8d1c905e68b32c667370a253e391b287e80a2db21cce75bd144a07/silence_tensorflow-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "846f6e103e6bdf69d765cedbffa5636a", "sha256": "9a2dd14f8dcc53bed6d05b862f87e7b195287fc1ee3d9ad83bb4d7fb84ad7926"}, "downloads": -1, "filename": "silence_tensorflow-1.0.1.tar.gz", "has_sig": false, "md5_digest": "846f6e103e6bdf69d765cedbffa5636a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3013, "upload_time": "2019-06-02T18:01:52", "upload_time_iso_8601": "2019-06-02T18:01:52.281013Z", "url": "https://files.pythonhosted.org/packages/52/39/a1dd1077d31c6a06903c6a30ec6b2c7332904d7894ef38413c23fb2078f4/silence_tensorflow-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "16272660bd3faa6f41fa0f2c1ca98046", "sha256": "cc34d1e3d6aa410ac0c1009568d4f51e78ffb9a0215696ddf65386b1fcccb015"}, "downloads": -1, "filename": "silence_tensorflow-1.0.2.tar.gz", "has_sig": false, "md5_digest": "16272660bd3faa6f41fa0f2c1ca98046", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3035, "upload_time": "2019-08-08T14:09:13", "upload_time_iso_8601": "2019-08-08T14:09:13.999937Z", "url": "https://files.pythonhosted.org/packages/80/27/8d619da6abad8832d62abdc39fe5b10261c9b6c7e0d5a92c6b27eb56e945/silence_tensorflow-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "55e0ecbe56eb17cf9f63c885b830b5e3", "sha256": "aa522ff65d86b5128a722e7dadc69291d7efa4d417af6a8b930bb204266d9771"}, "downloads": -1, "filename": "silence_tensorflow-1.1.0.tar.gz", "has_sig": false, "md5_digest": "55e0ecbe56eb17cf9f63c885b830b5e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3202, "upload_time": "2020-03-02T10:54:30", "upload_time_iso_8601": "2020-03-02T10:54:30.862358Z", "url": "https://files.pythonhosted.org/packages/0a/77/33654280aa526c0778e4ddca4c12f9a909a909eb32baee2bb1492b543902/silence_tensorflow-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "3472a1d7bc9fc3cded73fa24df969466", "sha256": "e06bd7c8c8f1394eb19c29107dbab164a366a23b3f69d46ee0be6d2eace6e7bd"}, "downloads": -1, "filename": "silence_tensorflow-1.1.1.tar.gz", "has_sig": false, "md5_digest": "3472a1d7bc9fc3cded73fa24df969466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3578, "upload_time": "2020-03-09T12:13:38", "upload_time_iso_8601": "2020-03-09T12:13:38.989562Z", "url": "https://files.pythonhosted.org/packages/96/d7/076b21d0e79cfc8a085f623e6577b754c50a42cfbcce51d77d0d2206988c/silence_tensorflow-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3472a1d7bc9fc3cded73fa24df969466", "sha256": "e06bd7c8c8f1394eb19c29107dbab164a366a23b3f69d46ee0be6d2eace6e7bd"}, "downloads": -1, "filename": "silence_tensorflow-1.1.1.tar.gz", "has_sig": false, "md5_digest": "3472a1d7bc9fc3cded73fa24df969466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3578, "upload_time": "2020-03-09T12:13:38", "upload_time_iso_8601": "2020-03-09T12:13:38.989562Z", "url": "https://files.pythonhosted.org/packages/96/d7/076b21d0e79cfc8a085f623e6577b754c50a42cfbcce51d77d0d2206988c/silence_tensorflow-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:30 2020"}