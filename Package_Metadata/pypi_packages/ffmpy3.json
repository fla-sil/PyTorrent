{"info": {"author": "Eric Ahn", "author_email": "ericahn3@illinois.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Multimedia :: Sound/Audio"], "description": ".. image:: https://img.shields.io/pypi/v/ffmpy3.svg\n    :target: https://pypi.python.org/pypi/ffmpy3\n    :alt: Latest version\n\n.. image:: https://travis-ci.org/wchill/ffmpy3.svg?branch=master\n    :target: https://travis-ci.org/wchill/ffmpy3\n    :alt: Travis-CI\n\n.. image:: https://readthedocs.org/projects/ffmpy3/badge/?version=latest\n    :target: http://ffmpy3.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n\nffmpy3\n======\nffmpy3 is a fork of ffmpy, a simplistic `FFmpeg <http://ffmpeg.org/>`_ command line wrapper. ffmpy implements a Pythonic interface for executing FFmpeg via command line and uses Python's `subprocess <https://docs.python.org/3/library/subprocess.html>`_ module for synchronous execution. Asynchronous execution using `yield from` or `await` is also supported using Python's `asyncio.subprocess <https://docs.python.org/3/library/asyncio-subprocess.html>`_ module.\n\nInstallation\n------------\nYou guessed it::\n\n  pip install ffmpy3\n\nQuick example\n-------------\nThe following code snippet executes FFmpeg synchronously, taking ``input.mp4`` from the current directory as the input. It remuxes the contents of ``input.mp4`` into a new file called ``output.avi`` which is saved in the current directory.\n\n.. code:: python\n\n  >>> import ffmpy3\n  >>> ff = ffmpy3.FFmpeg(\n  ...     inputs={'input.mp4': None},\n  ...     outputs={'output.avi': None}\n  ... )\n  >>> ff.run()\n\nThe following code snippet does the same thing as above, but executes FFmpeg asynchronously.\n\n.. code:: python\n\n  >>> ff = ffmpy3.FFmpeg(\n  ...     inputs={'input.mp4': None},\n  ...     outputs={'output.avi': None}\n  ... )\n  >>> ff.run_async()\n  >>> await ff.wait()\n\nDocumentation\n-------------\nhttp://ffmpy3.readthedocs.io/en/latest\n\nSee `Examples <http://ffmpy3.readthedocs.io/en/latest/examples.html>`_ section for usage examples.\n\nLicense\n-------\nffmpy3 is licensed under the terms of the MIT license.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wchill/ffmpy3", "keywords": "ffmpeg ffprobe wrapper audio video transcoding", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ffmpy3", "package_url": "https://pypi.org/project/ffmpy3/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ffmpy3/", "project_urls": {"Homepage": "https://github.com/wchill/ffmpy3"}, "release_url": "https://pypi.org/project/ffmpy3/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "A simple asynchronous Python wrapper for ffmpeg", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/ffmpy3\" rel=\"nofollow\"><img alt=\"Latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4591cf512072cbc38edbc55c313a58b1cec4e50e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f66666d7079332e737667\"></a>\n<a href=\"https://travis-ci.org/wchill/ffmpy3\" rel=\"nofollow\"><img alt=\"Travis-CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8621f04f8e7917ae2d6a76d41f2162bf1823a24a/68747470733a2f2f7472617669732d63692e6f72672f776368696c6c2f66666d7079332e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://ffmpy3.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3f7644e6666b743179a6d58b72cc103a7ea33a7b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66666d7079332f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<div id=\"ffmpy3\">\n<h2>ffmpy3</h2>\n<p>ffmpy3 is a fork of ffmpy, a simplistic <a href=\"http://ffmpeg.org/\" rel=\"nofollow\">FFmpeg</a> command line wrapper. ffmpy implements a Pythonic interface for executing FFmpeg via command line and uses Python\u2019s <a href=\"https://docs.python.org/3/library/subprocess.html\" rel=\"nofollow\">subprocess</a> module for synchronous execution. Asynchronous execution using <cite>yield from</cite> or <cite>await</cite> is also supported using Python\u2019s <a href=\"https://docs.python.org/3/library/asyncio-subprocess.html\" rel=\"nofollow\">asyncio.subprocess</a> module.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>You guessed it:</p>\n<pre>pip install ffmpy3\n</pre>\n</div>\n<div id=\"quick-example\">\n<h3>Quick example</h3>\n<p>The following code snippet executes FFmpeg synchronously, taking <tt>input.mp4</tt> from the current directory as the input. It remuxes the contents of <tt>input.mp4</tt> into a new file called <tt>output.avi</tt> which is saved in the current directory.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ffmpy3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ff</span> <span class=\"o\">=</span> <span class=\"n\">ffmpy3</span><span class=\"o\">.</span><span class=\"n\">FFmpeg</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'input.mp4'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'output.avi'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ff</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>The following code snippet does the same thing as above, but executes FFmpeg asynchronously.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ff</span> <span class=\"o\">=</span> <span class=\"n\">ffmpy3</span><span class=\"o\">.</span><span class=\"n\">FFmpeg</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'input.mp4'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'output.avi'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ff</span><span class=\"o\">.</span><span class=\"n\">run_async</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">await</span> <span class=\"n\">ff</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p><a href=\"http://ffmpy3.readthedocs.io/en/latest\" rel=\"nofollow\">http://ffmpy3.readthedocs.io/en/latest</a></p>\n<p>See <a href=\"http://ffmpy3.readthedocs.io/en/latest/examples.html\" rel=\"nofollow\">Examples</a> section for usage examples.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>ffmpy3 is licensed under the terms of the MIT license.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2547966, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "6585b7e00dd568971b03433ffe706913", "sha256": "e072401afbac71fcd320df551997a57750878988e11f640a50d9a9c949e3fac9"}, "downloads": -1, "filename": "ffmpy3-0.2.3-py3.5.egg", "has_sig": false, "md5_digest": "6585b7e00dd568971b03433ffe706913", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 9421, "upload_time": "2017-01-01T03:25:03", "upload_time_iso_8601": "2017-01-01T03:25:03.806331Z", "url": "https://files.pythonhosted.org/packages/1f/e1/683a056b854958526c9fdcc40b93094e0021fbe37defa9bf61d5f2c9e0f7/ffmpy3-0.2.3-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c4670e55afd04b6d14ef6856fd5f0f8", "sha256": "ed5c3c15de8473ffe24974233e09613f770ca1ff7a379d2db0ba19053c086a4e"}, "downloads": -1, "filename": "ffmpy3-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c4670e55afd04b6d14ef6856fd5f0f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6965, "upload_time": "2017-01-01T03:25:01", "upload_time_iso_8601": "2017-01-01T03:25:01.282130Z", "url": "https://files.pythonhosted.org/packages/96/7a/4bcefef1b5d7143fc916762563d3d25afc6386a62d71c6b5970fec3a3123/ffmpy3-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0915aa6a597d09d41667f56755d95f44", "sha256": "3cd28b13a59d3e2fa2f2ac9c07afdae0e29a15f2314d52e3a5b3cd6dfb0622f9"}, "downloads": -1, "filename": "ffmpy3-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0915aa6a597d09d41667f56755d95f44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5180, "upload_time": "2017-01-01T03:25:05", "upload_time_iso_8601": "2017-01-01T03:25:05.889493Z", "url": "https://files.pythonhosted.org/packages/cd/5f/5fb70d8de4c7aad1a62028ac172b3a789c4b3526fe0204a7d2e392b3f17d/ffmpy3-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6585b7e00dd568971b03433ffe706913", "sha256": "e072401afbac71fcd320df551997a57750878988e11f640a50d9a9c949e3fac9"}, "downloads": -1, "filename": "ffmpy3-0.2.3-py3.5.egg", "has_sig": false, "md5_digest": "6585b7e00dd568971b03433ffe706913", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 9421, "upload_time": "2017-01-01T03:25:03", "upload_time_iso_8601": "2017-01-01T03:25:03.806331Z", "url": "https://files.pythonhosted.org/packages/1f/e1/683a056b854958526c9fdcc40b93094e0021fbe37defa9bf61d5f2c9e0f7/ffmpy3-0.2.3-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c4670e55afd04b6d14ef6856fd5f0f8", "sha256": "ed5c3c15de8473ffe24974233e09613f770ca1ff7a379d2db0ba19053c086a4e"}, "downloads": -1, "filename": "ffmpy3-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c4670e55afd04b6d14ef6856fd5f0f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6965, "upload_time": "2017-01-01T03:25:01", "upload_time_iso_8601": "2017-01-01T03:25:01.282130Z", "url": "https://files.pythonhosted.org/packages/96/7a/4bcefef1b5d7143fc916762563d3d25afc6386a62d71c6b5970fec3a3123/ffmpy3-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0915aa6a597d09d41667f56755d95f44", "sha256": "3cd28b13a59d3e2fa2f2ac9c07afdae0e29a15f2314d52e3a5b3cd6dfb0622f9"}, "downloads": -1, "filename": "ffmpy3-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0915aa6a597d09d41667f56755d95f44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5180, "upload_time": "2017-01-01T03:25:05", "upload_time_iso_8601": "2017-01-01T03:25:05.889493Z", "url": "https://files.pythonhosted.org/packages/cd/5f/5fb70d8de4c7aad1a62028ac172b3a789c4b3526fe0204a7d2e392b3f17d/ffmpy3-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:47 2020"}