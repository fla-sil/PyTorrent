{"info": {"author": "Valerio Lyndon", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "#### About\n\nA locally-run cover generator for [MyAnimeList](https://myanimelist.net) written with Python 3.7. Generates CSS files for high resolutions covers. Currently somewhat barebones.\n\nThis project is more of a fun experiment than something I expect to announce loudly to the world. It is named after Doomcat's [\"MalCat\"](https://myanimelist.net/forum/?topicid=1533260), even though it's function-set is rather different for the moment.\n\n#### How To Install\n\n*Python 3 is required.*\n\nLaunch command line and install via pip:\n```\npip install MalFox\n```\n\n#### How To Use\n\n*This script requires your MAL list to be public.*\n\nRun via command line and pass it up to three arguments: username, list type, and CSS preset. MalFox will generate a \"Results\" folder wherever you run the script, so make sure to \"cd\" to your preferred directory.\n\n**Command line syntax:**\n```\npython -m MalFox <user> <type> <preset>\n```\n\n**Valid types:** 'anime', 'manga', 'both'\n\n**Valid presets:** 'dataimagelink', 'dataimagelinkbefore', 'dataimagelinkafter', 'datatitlelink', 'datatitlelinkbefore', 'datatitlelinkafter', 'animetitle', 'animetitlebefore', 'animetitleafter', 'more'\n\nOnly username is required. If no type or preset is provided, it defaults to 'both' + 'dataimagelinkbefore'.\n\nExample command line prompt:\n```\npython -m MalFox Valerio_Lyndon both dataimagelink\n```\n\nThis tutorial will be improved in the future if/when this script is also improved.\n\n#### Plans\n\n- **Complete** ~~Proper Python formatting, allowing easier install through pip (including module dependency direction). I'm kinda bad so I am still figuring out how to do this.~~\n- (Definite) Automatic uploading of files to hosting service. Would automatically override files if they exist.\n- (Definite) Add details to readme on how to have script run via .bat file, including automatically on computer start.\n- (Possible) Toggle for combining anime/manga files into one output file. Not valid for 'more' preset.\n- (Unlikely) Package project as an exe file for easier use.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ValerioLyndon/MalFox", "keywords": "MyAnimeList,CSS,User Customization", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "MalFox", "package_url": "https://pypi.org/project/MalFox/", "platform": "", "project_url": "https://pypi.org/project/MalFox/", "project_urls": {"Homepage": "https://github.com/ValerioLyndon/MalFox"}, "release_url": "https://pypi.org/project/MalFox/0.2.0/", "requires_dist": ["requests"], "requires_python": "", "summary": "A locally-run cover generator for MyAnimeList.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h4>About</h4>\n<p>A locally-run cover generator for <a href=\"https://myanimelist.net\" rel=\"nofollow\">MyAnimeList</a> written with Python 3.7. Generates CSS files for high resolutions covers. Currently somewhat barebones.</p>\n<p>This project is more of a fun experiment than something I expect to announce loudly to the world. It is named after Doomcat's <a href=\"https://myanimelist.net/forum/?topicid=1533260\" rel=\"nofollow\">\"MalCat\"</a>, even though it's function-set is rather different for the moment.</p>\n<h4>How To Install</h4>\n<p><em>Python 3 is required.</em></p>\n<p>Launch command line and install via pip:</p>\n<pre><code>pip install MalFox\n</code></pre>\n<h4>How To Use</h4>\n<p><em>This script requires your MAL list to be public.</em></p>\n<p>Run via command line and pass it up to three arguments: username, list type, and CSS preset. MalFox will generate a \"Results\" folder wherever you run the script, so make sure to \"cd\" to your preferred directory.</p>\n<p><strong>Command line syntax:</strong></p>\n<pre><code>python -m MalFox &lt;user&gt; &lt;type&gt; &lt;preset&gt;\n</code></pre>\n<p><strong>Valid types:</strong> 'anime', 'manga', 'both'</p>\n<p><strong>Valid presets:</strong> 'dataimagelink', 'dataimagelinkbefore', 'dataimagelinkafter', 'datatitlelink', 'datatitlelinkbefore', 'datatitlelinkafter', 'animetitle', 'animetitlebefore', 'animetitleafter', 'more'</p>\n<p>Only username is required. If no type or preset is provided, it defaults to 'both' + 'dataimagelinkbefore'.</p>\n<p>Example command line prompt:</p>\n<pre><code>python -m MalFox Valerio_Lyndon both dataimagelink\n</code></pre>\n<p>This tutorial will be improved in the future if/when this script is also improved.</p>\n<h4>Plans</h4>\n<ul>\n<li><strong>Complete</strong> <del>Proper Python formatting, allowing easier install through pip (including module dependency direction). I'm kinda bad so I am still figuring out how to do this.</del></li>\n<li>(Definite) Automatic uploading of files to hosting service. Would automatically override files if they exist.</li>\n<li>(Definite) Add details to readme on how to have script run via .bat file, including automatically on computer start.</li>\n<li>(Possible) Toggle for combining anime/manga files into one output file. Not valid for 'more' preset.</li>\n<li>(Unlikely) Package project as an exe file for easier use.</li>\n</ul>\n\n          </div>"}, "last_serial": 5562020, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "017a79f583b4dd04bb48983ad844985b", "sha256": "f5a295908b7f651cfbcc54cbc45cd4998a85076f21ae906269df2212c1acf09d"}, "downloads": -1, "filename": "MalFox-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "017a79f583b4dd04bb48983ad844985b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4885, "upload_time": "2019-07-21T01:47:54", "upload_time_iso_8601": "2019-07-21T01:47:54.951121Z", "url": "https://files.pythonhosted.org/packages/cd/d4/d18ea11aa0181cbc60510d9a034422076c3f630eaf360e879aa1f0a08adf/MalFox-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8de38adb144405f9be251511afee628d", "sha256": "4b9322816bba68e4e7d621ddab3328e734c8c6a90f0a07c3411617aee519d723"}, "downloads": -1, "filename": "MalFox-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8de38adb144405f9be251511afee628d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3744, "upload_time": "2019-07-21T01:47:57", "upload_time_iso_8601": "2019-07-21T01:47:57.077168Z", "url": "https://files.pythonhosted.org/packages/d8/7a/051ee475b4cdca4ec8ce399394ede44e5e96d89b9b92370c322133b1d6fa/MalFox-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "017a79f583b4dd04bb48983ad844985b", "sha256": "f5a295908b7f651cfbcc54cbc45cd4998a85076f21ae906269df2212c1acf09d"}, "downloads": -1, "filename": "MalFox-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "017a79f583b4dd04bb48983ad844985b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4885, "upload_time": "2019-07-21T01:47:54", "upload_time_iso_8601": "2019-07-21T01:47:54.951121Z", "url": "https://files.pythonhosted.org/packages/cd/d4/d18ea11aa0181cbc60510d9a034422076c3f630eaf360e879aa1f0a08adf/MalFox-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8de38adb144405f9be251511afee628d", "sha256": "4b9322816bba68e4e7d621ddab3328e734c8c6a90f0a07c3411617aee519d723"}, "downloads": -1, "filename": "MalFox-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8de38adb144405f9be251511afee628d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3744, "upload_time": "2019-07-21T01:47:57", "upload_time_iso_8601": "2019-07-21T01:47:57.077168Z", "url": "https://files.pythonhosted.org/packages/d8/7a/051ee475b4cdca4ec8ce399394ede44e5e96d89b9b92370c322133b1d6fa/MalFox-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:44 2020"}