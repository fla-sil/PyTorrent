{"info": {"author": "Clayton Parker", "author_email": "robots@claytron.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "Introduction\n============\n\nHip hop music is notorious for adding extra information into the artist\nand track names. This script helps you normalize and move those pesky\n``(Feat. Some Artist)`` strings in your iTunes library. The script\nallows you to make a selection in iTunes, then run the script against\nthose tracks from the command line.\n\nCode Repository\n  https://github.com/claytron/claytron.featuring\nPyPi\n  http://pypi.python.org/pypi/claytron.featuring/\nIssues\n  https://github.com/claytron/claytron.featuring/issues\n\nInstallation\n------------\n\nThis script can be installed with pip. I would also recommend installing\nit into a virtualenv::\n\n    $ pip install -U claytron.featuring\n\nUsage\n-----\n\nYou can see the usage string from the ``-h`` option::\n\n    $ featuring_fix -h\n    Usage: featuring_fix [options]\n    \n    This script will allow you to modify the tracks in your iTunes database.\n    Select the items that you want to modify in iTunes, then run this script from\n    the command line using the options below. The \"featuring\" strings will be\n    normalized and added to the comment tag as (Featuring Some Artist). The\n    previous contents of the comment will be left intact.\n    \n    Options:\n      --version             show program's version number and exit\n      -h, --help            show this help message and exit\n      -r, --real-run        Change the iTunes database (default: False)\n      -c, --with-csv        Write change info into a CSV file\n      -w, --featuring-with  Take care of 'with'\n      -n, --no-parens       Process the tracks without parenthesis (be CAREFUL\n                            with this option, since \"featuring\" is a common word)\n\nBy default the script does not modify the iTunes database since there is\nno real undo in iTunes. If you want to see what the result of the\nmodification will be, you can run ``featuring_fix`` with the csv output\noption::\n\n    $ featuring_fix -c\n\nIf you want to modify the files in your library, you must use the ``-r``\noption::\n\n    $ featuring_fix -r\n\nWARNING: This can take a long time to process a large selection of\ntracks. If you want to run it against your whole library, make sure and\nhave some music playing, then go grab a coffee.\n\nFeaturing Styles\n----------------\n\nThere are many different ways in which a track can be tagged as\n\"featuring\" an artist. A few examples::\n\n    Featuring Mr. Lif\n    Feat. Mr. Lif\n    Ft. Mr. Lif\n    f. Mr. Lif\n    f/Mr. Lif\n    with Mr. Lif\n    w/Mr. lif\n\nAnd I'm sure there are other incarnations of these EVIL strings.\nCurrently the script can handle all but the ``w/`` and ``f/`` items from\nthe list above.\n\nChangelog\n=========\n\n1.0.1 (2011-05-08)\n------------------\n\n- Updated docs with the code repo and issue tracker links\n\n1.0 (2011-05-08)\n----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://claytron.com", "keywords": "itunes metadata", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "claytron.featuring", "package_url": "https://pypi.org/project/claytron.featuring/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/claytron.featuring/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://claytron.com"}, "release_url": "https://pypi.org/project/claytron.featuring/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A console script to clean an iTunes library of featuring strings", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Hip hop music is notorious for adding extra information into the artist\nand track names. This script helps you normalize and move those pesky\n<tt>(Feat. Some Artist)</tt> strings in your iTunes library. The script\nallows you to make a selection in iTunes, then run the script against\nthose tracks from the command line.</p>\n<dl>\n<dt>Code Repository</dt>\n<dd><a href=\"https://github.com/claytron/claytron.featuring\" rel=\"nofollow\">https://github.com/claytron/claytron.featuring</a></dd>\n<dt>PyPi</dt>\n<dd><a href=\"http://pypi.python.org/pypi/claytron.featuring/\" rel=\"nofollow\">http://pypi.python.org/pypi/claytron.featuring/</a></dd>\n<dt>Issues</dt>\n<dd><a href=\"https://github.com/claytron/claytron.featuring/issues\" rel=\"nofollow\">https://github.com/claytron/claytron.featuring/issues</a></dd>\n</dl>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>This script can be installed with pip. I would also recommend installing\nit into a virtualenv:</p>\n<pre>$ pip install -U claytron.featuring\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>You can see the usage string from the <tt><span class=\"pre\">-h</span></tt> option:</p>\n<pre>$ featuring_fix -h\nUsage: featuring_fix [options]\n\nThis script will allow you to modify the tracks in your iTunes database.\nSelect the items that you want to modify in iTunes, then run this script from\nthe command line using the options below. The \"featuring\" strings will be\nnormalized and added to the comment tag as (Featuring Some Artist). The\nprevious contents of the comment will be left intact.\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -r, --real-run        Change the iTunes database (default: False)\n  -c, --with-csv        Write change info into a CSV file\n  -w, --featuring-with  Take care of 'with'\n  -n, --no-parens       Process the tracks without parenthesis (be CAREFUL\n                        with this option, since \"featuring\" is a common word)\n</pre>\n<p>By default the script does not modify the iTunes database since there is\nno real undo in iTunes. If you want to see what the result of the\nmodification will be, you can run <tt>featuring_fix</tt> with the csv output\noption:</p>\n<pre>$ featuring_fix -c\n</pre>\n<p>If you want to modify the files in your library, you must use the <tt><span class=\"pre\">-r</span></tt>\noption:</p>\n<pre>$ featuring_fix -r\n</pre>\n<p>WARNING: This can take a long time to process a large selection of\ntracks. If you want to run it against your whole library, make sure and\nhave some music playing, then go grab a coffee.</p>\n</div>\n<div id=\"featuring-styles\">\n<h3>Featuring Styles</h3>\n<p>There are many different ways in which a track can be tagged as\n\u201cfeaturing\u201d an artist. A few examples:</p>\n<pre>Featuring Mr. Lif\nFeat. Mr. Lif\nFt. Mr. Lif\nf. Mr. Lif\nf/Mr. Lif\nwith Mr. Lif\nw/Mr. lif\n</pre>\n<p>And I\u2019m sure there are other incarnations of these EVIL strings.\nCurrently the script can handle all but the <tt>w/</tt> and <tt>f/</tt> items from\nthe list above.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0.1 (2011-05-08)</h3>\n<ul>\n<li>Updated docs with the code repo and issue tracker links</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0 (2011-05-08)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 787444, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "123b9b964d068e8afa7e2866294bd943", "sha256": "d3cc25a342d17ee244d9e1d18241fa2a1530827b8a0261d73e32ccfe9382a2e3"}, "downloads": -1, "filename": "claytron.featuring-1.0.zip", "has_sig": false, "md5_digest": "123b9b964d068e8afa7e2866294bd943", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9749, "upload_time": "2011-05-08T17:18:49", "upload_time_iso_8601": "2011-05-08T17:18:49.416996Z", "url": "https://files.pythonhosted.org/packages/85/95/37d13d2e675d62b92f6bc10e79b08f450e6ef8398deca826f7f0e99cc448/claytron.featuring-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3dfb14e785efbfbba1cac0efd3c4a4d7", "sha256": "404307b9f7bbceeb6d51c17f0d8dc58a41c7336cfe1f915123ed823851013d25"}, "downloads": -1, "filename": "claytron.featuring-1.0.1.zip", "has_sig": false, "md5_digest": "3dfb14e785efbfbba1cac0efd3c4a4d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10183, "upload_time": "2011-05-08T17:33:14", "upload_time_iso_8601": "2011-05-08T17:33:14.054512Z", "url": "https://files.pythonhosted.org/packages/e0/f7/c36e65d853758e7258bfd3400901e47e45bdeb63eb3f384d87099f8557ce/claytron.featuring-1.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3dfb14e785efbfbba1cac0efd3c4a4d7", "sha256": "404307b9f7bbceeb6d51c17f0d8dc58a41c7336cfe1f915123ed823851013d25"}, "downloads": -1, "filename": "claytron.featuring-1.0.1.zip", "has_sig": false, "md5_digest": "3dfb14e785efbfbba1cac0efd3c4a4d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10183, "upload_time": "2011-05-08T17:33:14", "upload_time_iso_8601": "2011-05-08T17:33:14.054512Z", "url": "https://files.pythonhosted.org/packages/e0/f7/c36e65d853758e7258bfd3400901e47e45bdeb63eb3f384d87099f8557ce/claytron.featuring-1.0.1.zip", "yanked": false}], "timestamp": "Thu May  7 22:19:07 2020"}