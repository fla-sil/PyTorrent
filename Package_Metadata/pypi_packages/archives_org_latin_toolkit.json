{"info": {"author": "Thibault Cl\u00e9rice", "author_email": "leponteineptique@gmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://coveralls.io/repos/github/PonteIneptique/archives_org_latin_toolkit/badge.svg?branch=master\n    :target: https://coveralls.io/github/PonteIneptique/archives_org_latin_toolkit?branch=master\n.. image:: https://travis-ci.org/PonteIneptique/archives_org_latin_toolkit.svg?branch=master\n    :target: https://travis-ci.org/PonteIneptique/archives_org_latin_toolkit\n.. image:: https://badge.fury.io/py/archives_org_latin_toolkit.svg\n    :target: https://badge.fury.io/py/archives_org_latin_toolkit\n.. image:: https://readthedocs.org/projects/archives-org-latin-toolkit/badge/?version=latest\n    :alt: Documentation\n    :target: https://archives-org-latin-toolkit.readthedocs.io\n.. image:: https://zenodo.org/badge/68894385.svg\n   :target: https://zenodo.org/badge/latestdoi/68894385\n\nWhat ?\n######\n\nThis piece of software is intended to be used with the 11K Latin Texts produced by David Bamman ( http://www.cs.cmu.edu/~dbamman/latin.html ). \\\nIt supports only the plain text formats and the metadata github repo CSV file. This has been tested with *Python3* only. \\\nI welcome any new functions or backward compatibility support.\n\nHow to install ?\n################\n\n- **With development version:**\n    - Clone the repository : :code:`git clone https://github.com/ponteineptique/archives_org_latin_toolkit.git`\n    - Go to the directory : :code:`cd archives_org_latin_toolkit`\n    - Install the source with develop option : :code:`python setup.py install`\n- **With pip:**\n    - Install from pip : :code:`pip install archives_org_latin_toolkit`\n\nExample\n#######\n\nThe following example should run with the data in tests/test_data. The example can be run with :code:`python example.py`\n\n.. code-block:: python\n\n    # We import the main classes from the module\n    from archives_org_latin_toolkit import Repo, Metadata\n    from pprint import pprint\n\n    # We initiate a Metadata object and a Repo object\n    metadata = Metadata(\"./test/test_data/latin_metadata.csv\")\n    # We want the text to be set in lowercase\n    repo = Repo(\"./test/test_data/archive_org_latin/\", metadata=metadata, lowercase=True)\n\n    # We define a list of token we want to search for\n    tokens = [\"ecclesiastico\", \"ecclesia\", \"ecclesiis\", \"&quot;\"]\n\n    # We instantiate a result storage\n    results = []\n\n    # We iter over text having those tokens :\n    # Note that we need to \"unzip\" the list\n    for text_matching in repo.find(*tokens):\n\n        # For each text, we iter over embeddings found in the text\n        # We want 3 words left, 3 words right,\n        # and we want to keep the original token (Default behaviour)\n        for embedding in text_matching.find_embedding(*tokens, window=3, ignore_center=False):\n            # We add it to the results\n            results.append(embedding)\n\n    # We print the result (list of list of strings)\n    pprint(results)\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ponteineptique/archives_org_latin", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "archives_org_latin_toolkit", "package_url": "https://pypi.org/project/archives_org_latin_toolkit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/archives_org_latin_toolkit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/ponteineptique/archives_org_latin"}, "release_url": "https://pypi.org/project/archives_org_latin_toolkit/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Tools to parse and search across http://www.cs.cmu.edu/~dbamman/latin.html", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://coveralls.io/github/PonteIneptique/archives_org_latin_toolkit?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/PonteIneptique/archives_org_latin_toolkit/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d46b340adc73fc35972a34a984dcf608548ae668/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f506f6e7465496e657074697175652f61726368697665735f6f72675f6c6174696e5f746f6f6c6b69742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/PonteIneptique/archives_org_latin_toolkit\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/PonteIneptique/archives_org_latin_toolkit.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/501dc4770cfa7fd7777c43424a55e22fb09fbbe4/68747470733a2f2f7472617669732d63692e6f72672f506f6e7465496e657074697175652f61726368697665735f6f72675f6c6174696e5f746f6f6c6b69742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/archives_org_latin_toolkit\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/archives_org_latin_toolkit.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94063fb0f2171a0f37a229d62a0bce7d875a5b96/68747470733a2f2f62616467652e667572792e696f2f70792f61726368697665735f6f72675f6c6174696e5f746f6f6c6b69742e737667\"></a>\n<a href=\"https://archives-org-latin-toolkit.readthedocs.io\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79435d418979de93c4a5b1fa36b9e2872c300f9a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61726368697665732d6f72672d6c6174696e2d746f6f6c6b69742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/68894385\" rel=\"nofollow\"><img alt=\"https://zenodo.org/badge/68894385.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd71b47eb34afc25c0de9c206874d4cb9dc0bceb/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f36383839343338352e737667\"></a>\n<div id=\"what\">\n<h2>What ?</h2>\n<p>This piece of software is intended to be used with the 11K Latin Texts produced by David Bamman ( <a href=\"http://www.cs.cmu.edu/~dbamman/latin.html\" rel=\"nofollow\">http://www.cs.cmu.edu/~dbamman/latin.html</a> ). It supports only the plain text formats and the metadata github repo CSV file. This has been tested with <em>Python3</em> only. I welcome any new functions or backward compatibility support.</p>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install ?</h2>\n<ul>\n<li><dl>\n<dt><strong>With development version:</strong></dt>\n<dd><ul>\n<li>Clone the repository : <code>git clone https://github.com/ponteineptique/archives_org_latin_toolkit.git</code></li>\n<li>Go to the directory : <code>cd archives_org_latin_toolkit</code></li>\n<li>Install the source with develop option : <code>python setup.py install</code></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>With pip:</strong></dt>\n<dd><ul>\n<li>Install from pip : <code>pip install archives_org_latin_toolkit</code></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>The following example should run with the data in tests/test_data. The example can be run with <code>python example.py</code></p>\n<pre><span class=\"c1\"># We import the main classes from the module</span>\n<span class=\"kn\">from</span> <span class=\"nn\">archives_org_latin_toolkit</span> <span class=\"kn\">import</span> <span class=\"n\">Repo</span><span class=\"p\">,</span> <span class=\"n\">Metadata</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n\n<span class=\"c1\"># We initiate a Metadata object and a Repo object</span>\n<span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">Metadata</span><span class=\"p\">(</span><span class=\"s2\">\"./test/test_data/latin_metadata.csv\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># We want the text to be set in lowercase</span>\n<span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"s2\">\"./test/test_data/archive_org_latin/\"</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">lowercase</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We define a list of token we want to search for</span>\n<span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"ecclesiastico\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ecclesia\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ecclesiis\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&amp;quot;\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># We instantiate a result storage</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"c1\"># We iter over text having those tokens :</span>\n<span class=\"c1\"># Note that we need to \"unzip\" the list</span>\n<span class=\"k\">for</span> <span class=\"n\">text_matching</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tokens</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># For each text, we iter over embeddings found in the text</span>\n    <span class=\"c1\"># We want 3 words left, 3 words right,</span>\n    <span class=\"c1\"># and we want to keep the original token (Default behaviour)</span>\n    <span class=\"k\">for</span> <span class=\"n\">embedding</span> <span class=\"ow\">in</span> <span class=\"n\">text_matching</span><span class=\"o\">.</span><span class=\"n\">find_embedding</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ignore_center</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"c1\"># We add it to the results</span>\n        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">embedding</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We print the result (list of list of strings)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2357162, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4ff522231b46815403f22f32dbc82b3a", "sha256": "94b9065c1f8444975096f5de1640166914dc565bb1cb8ad2f5f7385cf0fd6b18"}, "downloads": -1, "filename": "archives_org_latin_toolkit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4ff522231b46815403f22f32dbc82b3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4990, "upload_time": "2016-09-22T08:53:48", "upload_time_iso_8601": "2016-09-22T08:53:48.766294Z", "url": "https://files.pythonhosted.org/packages/ca/90/ad0f2446e9cbda1314ca0d3098275d9a0e9102ed1afedd28c78ecabd199a/archives_org_latin_toolkit-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "88dc885a5eee93bb1563c775e3efe29d", "sha256": "130077d8d151059c19b076c09acdbbd22055d614dfbab7e46cc3df34d0d368fe"}, "downloads": -1, "filename": "archives_org_latin_toolkit-0.0.2.tar.gz", "has_sig": false, "md5_digest": "88dc885a5eee93bb1563c775e3efe29d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5332, "upload_time": "2016-09-22T11:59:47", "upload_time_iso_8601": "2016-09-22T11:59:47.196100Z", "url": "https://files.pythonhosted.org/packages/a9/b3/ba968b2bba1712c88303c0e0f67ef015f07ff330e71a532d1efe007dd586/archives_org_latin_toolkit-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88dc885a5eee93bb1563c775e3efe29d", "sha256": "130077d8d151059c19b076c09acdbbd22055d614dfbab7e46cc3df34d0d368fe"}, "downloads": -1, "filename": "archives_org_latin_toolkit-0.0.2.tar.gz", "has_sig": false, "md5_digest": "88dc885a5eee93bb1563c775e3efe29d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5332, "upload_time": "2016-09-22T11:59:47", "upload_time_iso_8601": "2016-09-22T11:59:47.196100Z", "url": "https://files.pythonhosted.org/packages/a9/b3/ba968b2bba1712c88303c0e0f67ef015f07ff330e71a532d1efe007dd586/archives_org_latin_toolkit-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:22 2020"}