{"info": {"author": "Torsten Sachse", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: C++", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "# Overview\n\nYou are viewing the readme of ManipulateAggregates, a set of tools for\ncomputational chemistry.\nThis package comes with two main tools:\n\n* `energyscan`:\n  * Determines geometricaly diverse local energy minima on the potential energy\n    surface of aggregates bound by van-der-Waals or Coulomb forces using\n    empirical force fields.\n  * Simply run `energyscan --porphin-example` or `energyscan --urea-example` to\n    run the extensive porphin or urea computations published in the following\n    paper in your current directory:\n    *\"A Program for Automatically Predicting Supramolecular Aggregates and\n    Its Application to Urea and Porphin\"* by Sachse *et al*, accessible at\n    https://dx.doi.org/10.1002/jcc.25151\n  * You can also run `energyscan --anthracene-example` for a quick and less\n    demanding scan using the anthracene molecule.\n  * Running `energyscan --longhelp` will output a complete config file\n    including explanations to stdout.\n  * If you want to use multiprocessing, set the environment variable\n    `OMP_NUM_THREADS` to the number of processes you want to use. Happy\n    scanning!\n\n* `manipagg`:\n  * Manipulates internal degrees of freedoms of molecules and aggregates from\n    the command line.\n  * Computes the electrostatic potential on van-der-Waals surfaces or\n    isosurfaces of the electron density based on empirical force fields or\n    quantum chemical computations.\n  * Simply run `manipagg --example-vdw` or `manipagg --example-iso` to run an\n    example visualization of the electrostatic potential on a molecule's\n    van-der-Waals or electrond ensity iso surface, the former as publised in\n    the paper *\"Introducing double polar heads to highly fluorescent Thiazoles:\n    Influence on supramolecular structures and photonic properties\"* by\n    Kaufmann *et al*, accessible at https://doi.org/10.1016/j.jcis.2018.04.105\n  * If you want to use multiprocessing, set the environment variable\n    `OMP_NUM_THREADS` to the number of processes you want to use. Happy\n    rendering and manipulating!\n\nPlease see the documentation for a detailed description and a full list of\nfeatures on <https://razziel89.github.io/ManipulateAggregates/> (provided via\nGitHub pages).\n\n# Quick installation\n\nIf you are running Ubuntu and use Anaconda to manage your Python environments,\nyou can easily install ManipulateAggregates the following way:\n\n```bash\n# Install system packages\nsudo apt-get install libcgal-dev libmpfr-dev libgmp-dev freeglut3 libglu1-mesa-dev\n# If you want to render using PoVRay, run:\nsudo apt-get install povray\n# Install and activate a new environment like this:\nconda create -n manipagg python=3 numpy swig eigen pyopengl\nconda activate manipagg\n# Install ManipulateAggregates and its dependencies\npip install ManipulateAggregates\n```\n\nPlease refer to the documentation on\n<https://razziel89.github.io/ManipulateAggregates/#prerequisites> for more\ninformation.\n\n# Contributing\n\nContributions are very welcome!\nPlease simply open a pull request.\nIf you would like to make large-ish contributions, it might be prudent to first\ncontact the maintainer to better co-ordinate those efforts.\n\nThis project uses the following auto-formatter:\n* Python code: black (the uncompromising Python code formatter)\n  <https://github.com/psf/black>\n\nPlease make sure to auto-format your pull request with those options.\nFurthermore, please document any code you add.\nHappy contributing!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/razziel89/ManipulateAggregates", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ManipulateAggregates", "package_url": "https://pypi.org/project/ManipulateAggregates/", "platform": "", "project_url": "https://pypi.org/project/ManipulateAggregates/", "project_urls": {"Homepage": "https://github.com/razziel89/ManipulateAggregates"}, "release_url": "https://pypi.org/project/ManipulateAggregates/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Manipulate molecular DOF and scan PES of aggregates", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Overview</h1>\n<p>You are viewing the readme of ManipulateAggregates, a set of tools for\ncomputational chemistry.\nThis package comes with two main tools:</p>\n<ul>\n<li>\n<p><code>energyscan</code>:</p>\n<ul>\n<li>Determines geometricaly diverse local energy minima on the potential energy\nsurface of aggregates bound by van-der-Waals or Coulomb forces using\nempirical force fields.</li>\n<li>Simply run <code>energyscan --porphin-example</code> or <code>energyscan --urea-example</code> to\nrun the extensive porphin or urea computations published in the following\npaper in your current directory:\n<em>\"A Program for Automatically Predicting Supramolecular Aggregates and\nIts Application to Urea and Porphin\"</em> by Sachse <em>et al</em>, accessible at\n<a href=\"https://dx.doi.org/10.1002/jcc.25151\" rel=\"nofollow\">https://dx.doi.org/10.1002/jcc.25151</a></li>\n<li>You can also run <code>energyscan --anthracene-example</code> for a quick and less\ndemanding scan using the anthracene molecule.</li>\n<li>Running <code>energyscan --longhelp</code> will output a complete config file\nincluding explanations to stdout.</li>\n<li>If you want to use multiprocessing, set the environment variable\n<code>OMP_NUM_THREADS</code> to the number of processes you want to use. Happy\nscanning!</li>\n</ul>\n</li>\n<li>\n<p><code>manipagg</code>:</p>\n<ul>\n<li>Manipulates internal degrees of freedoms of molecules and aggregates from\nthe command line.</li>\n<li>Computes the electrostatic potential on van-der-Waals surfaces or\nisosurfaces of the electron density based on empirical force fields or\nquantum chemical computations.</li>\n<li>Simply run <code>manipagg --example-vdw</code> or <code>manipagg --example-iso</code> to run an\nexample visualization of the electrostatic potential on a molecule's\nvan-der-Waals or electrond ensity iso surface, the former as publised in\nthe paper <em>\"Introducing double polar heads to highly fluorescent Thiazoles:\nInfluence on supramolecular structures and photonic properties\"</em> by\nKaufmann <em>et al</em>, accessible at <a href=\"https://doi.org/10.1016/j.jcis.2018.04.105\" rel=\"nofollow\">https://doi.org/10.1016/j.jcis.2018.04.105</a></li>\n<li>If you want to use multiprocessing, set the environment variable\n<code>OMP_NUM_THREADS</code> to the number of processes you want to use. Happy\nrendering and manipulating!</li>\n</ul>\n</li>\n</ul>\n<p>Please see the documentation for a detailed description and a full list of\nfeatures on <a href=\"https://razziel89.github.io/ManipulateAggregates/\" rel=\"nofollow\">https://razziel89.github.io/ManipulateAggregates/</a> (provided via\nGitHub pages).</p>\n<h1>Quick installation</h1>\n<p>If you are running Ubuntu and use Anaconda to manage your Python environments,\nyou can easily install ManipulateAggregates the following way:</p>\n<pre><span class=\"c1\"># Install system packages</span>\nsudo apt-get install libcgal-dev libmpfr-dev libgmp-dev freeglut3 libglu1-mesa-dev\n<span class=\"c1\"># If you want to render using PoVRay, run:</span>\nsudo apt-get install povray\n<span class=\"c1\"># Install and activate a new environment like this:</span>\nconda create -n manipagg <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span> numpy swig eigen pyopengl\nconda activate manipagg\n<span class=\"c1\"># Install ManipulateAggregates and its dependencies</span>\npip install ManipulateAggregates\n</pre>\n<p>Please refer to the documentation on\n<a href=\"https://razziel89.github.io/ManipulateAggregates/#prerequisites\" rel=\"nofollow\">https://razziel89.github.io/ManipulateAggregates/#prerequisites</a> for more\ninformation.</p>\n<h1>Contributing</h1>\n<p>Contributions are very welcome!\nPlease simply open a pull request.\nIf you would like to make large-ish contributions, it might be prudent to first\ncontact the maintainer to better co-ordinate those efforts.</p>\n<p>This project uses the following auto-formatter:</p>\n<ul>\n<li>Python code: black (the uncompromising Python code formatter)\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\">https://github.com/psf/black</a></li>\n</ul>\n<p>Please make sure to auto-format your pull request with those options.\nFurthermore, please document any code you add.\nHappy contributing!</p>\n\n          </div>"}, "last_serial": 7047990, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "c8e79425cfa5de39b1ad8bab59be8518", "sha256": "ab07d1bdbc9e98006ee758041bb371bd2576c76c6ebf476ff6cc4a914e5472ee"}, "downloads": -1, "filename": "ManipulateAggregates-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c8e79425cfa5de39b1ad8bab59be8518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137545, "upload_time": "2020-04-03T10:40:11", "upload_time_iso_8601": "2020-04-03T10:40:11.003568Z", "url": "https://files.pythonhosted.org/packages/b4/5d/8f877f350dbb8774ab3b91a0d39b816679f08ce41480dbd0f743f215ca01/ManipulateAggregates-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "33671465053bf8de7c29b87b39379d43", "sha256": "8eefe7fdfc0dcff55dad643fe920bf092cdff6df0d4126e6d86019baaf191cf2"}, "downloads": -1, "filename": "ManipulateAggregates-0.1.2.tar.gz", "has_sig": false, "md5_digest": "33671465053bf8de7c29b87b39379d43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137540, "upload_time": "2020-04-03T21:52:05", "upload_time_iso_8601": "2020-04-03T21:52:05.211303Z", "url": "https://files.pythonhosted.org/packages/f7/2b/624fe062b93d0d08f9cb3837839ab4557183eadd93063e086741eec28e90/ManipulateAggregates-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b3942ebd3ab9633499b0b3e63a0c8b2b", "sha256": "9880f0d5679b0b603454d1b6fc195126a62db33734726a0a4140fadc263aacb0"}, "downloads": -1, "filename": "ManipulateAggregates-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b3942ebd3ab9633499b0b3e63a0c8b2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 801204, "upload_time": "2020-04-18T13:54:23", "upload_time_iso_8601": "2020-04-18T13:54:23.128904Z", "url": "https://files.pythonhosted.org/packages/50/29/2a22e714d6fe9a3ebe1619c3010dc715ee5d759be250022718950825387f/ManipulateAggregates-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3942ebd3ab9633499b0b3e63a0c8b2b", "sha256": "9880f0d5679b0b603454d1b6fc195126a62db33734726a0a4140fadc263aacb0"}, "downloads": -1, "filename": "ManipulateAggregates-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b3942ebd3ab9633499b0b3e63a0c8b2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 801204, "upload_time": "2020-04-18T13:54:23", "upload_time_iso_8601": "2020-04-18T13:54:23.128904Z", "url": "https://files.pythonhosted.org/packages/50/29/2a22e714d6fe9a3ebe1619c3010dc715ee5d759be250022718950825387f/ManipulateAggregates-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:31 2020"}