{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Alibaba Cloud OSS SDK for Python\n================================\n\n\n\nOverview\n--------\n\nAlibaba Cloud Object Storage Python SDK 2.x. This version is not compatible with the previous version (Version 0.x). The package name is `oss2` to avoid conflict with previous versions. \n\n\nThe SDK of this version is dependent on the third-party HTTP library `requests <https://github.com/kennethreitz/requests>`_ and `crcmod`. Install the SDK following the methods below. \n\nNote:\n\n    This version does not contain the `osscmd` command line tool. \n\nRunning environment\n-------------------\n\nPython 2.6\uff0c2.7\uff0c3.3\uff0c3.4\uff0c3.5\n\nNote:\n\n    Do not use Python 3.3.0 or 3.3.1. Refer to `Python Issue 16658 <https://bugs.python.org/issue16658>`_.\n\nInstalling\n----------\n\nInstall the official release version through PIP (taking Linux as an example): \n\n.. code-block:: bash\n\n    $ pip install oss2\n\nYou can also install the unzipped installer package directly: \n\n.. code-block:: bash\n\n    $ sudo python setup.py install\n\n\nGetting started\n---------------\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n\n    import oss2\n\n    endpoint = 'http://oss-cn-hangzhou.aliyuncs.com' # Suppose that your bucket is in the Hangzhou region. \n\n    auth = oss2.Auth('<Your AccessKeyID>', '<Your AccessKeySecret>')\n    bucket = oss2.Bucket(auth, endpoint, '<your bucket name>')\n\n    # The object key in the bucket is story.txt\n    key = 'story.txt'\n\n    # Upload\n    bucket.put_object(key, 'Ali Baba is a happy youth.')\n\n    # Download\n    bucket.get_object(key).read()\n\n    # Delete\n    bucket.delete_object(key)\n\n    # Traverse all objects in the bucket\n    for object_info in oss2.ObjectIterator(bucket):\n        print(object_info.key)\n\nFor more examples, refer to the code under the \"examples\" directory. \n\nHandling errors\n---------------\n\nThe Python SDK interface will throw an exception in case of an error (see oss2.exceptions sub-module) unless otherwise specified. An example is provided below:\n\n.. code-block:: python\n\n    try:\n        result = bucket.get_object(key)\n        print(result.read())\n    except oss2.exceptions.NoSuchKey as e:\n        print('{0} not found: http_status={1}, request_id={2}'.format(key, e.status, e.request_id))\n\nSetup Logging\n---------------\n\nThe following code can set the logging level of 'oss2'.\n .. code-block:: python\n\n    import logging\n    logging.getLogger('oss2').setLevel(logging.WARNING)\n\nTesting\n-------\n\nFirst set the required AccessKeyId, AccessKeySecret, endpoint and bucket information for the test through environment variables (**Do not use the bucket for the production environment**). \nTake the Linux system for example: \n\n.. code-block:: bash\n\n    $ export OSS_TEST_ACCESS_KEY_ID=<AccessKeyId>\n    $ export OSS_TEST_ACCESS_KEY_SECRET=<AccessKeySecret>\n    $ export OSS_TEST_ENDPOINT=<endpoint>\n    $ export OSS_TEST_BUCKET=<bucket>\n\n    $ export OSS_TEST_STS_ID=<AccessKeyId for testing STS>\n    $ export OSS_TEST_STS_KEY=<AccessKeySecret for testing STS>\n    $ export OSS_TEST_STS_ARN=<Role ARN for testing STS>\n\n\nRun the test in the following method: \n\n.. code-block:: bash\n\n    $ nosetests                          # First install nose\n\n\nYou can set environment variable to test auth v2:\n\n.. code-block:: bash\n\n    $ export OSS_TEST_AUTH_VERSION=v2\n\nMore resources\n--------------\n- `More examples <https://github.com/aliyun/aliyun-oss-python-sdk/tree/master/examples>`_. \n- `Python SDK API documentation <http://aliyun-oss-python-sdk.readthedocs.org/en/latest>`_. \n- `Official Python SDK documentation <https://help.aliyun.com/document_detail/32026.html>`_.\n\nContacting us\n-------------\n- `Alibaba Cloud OSS official website <http://oss.aliyun.com>`_.\n- `Alibaba Cloud OSS official forum <http://bbs.aliyun.com>`_.\n- `Alibaba Cloud OSS official documentation center <https://help.aliyun.com/document_detail/32026.html>`_.\n- Alibaba Cloud official technical support: `Submit a ticket <https://workorder.console.aliyun.com/#/ticket/createIndex>`_.\n\nLicense\n-------\n- `MIT <https://github.com/aliyun/aliyun-oss-python-sdk/blob/master/LICENSE>`_.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://oss.aliyun.com", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "oss2-test-1", "package_url": "https://pypi.org/project/oss2-test-1/", "platform": "", "project_url": "https://pypi.org/project/oss2-test-1/", "project_urls": {"Homepage": "http://oss.aliyun.com"}, "release_url": "https://pypi.org/project/oss2-test-1/2.6.2/", "requires_dist": null, "requires_python": "", "summary": "Aliyun OSS (Object Storage Service) SDK", "version": "2.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Alibaba Cloud Object Storage Python SDK 2.x. This version is not compatible with the previous version (Version 0.x). The package name is <cite>oss2</cite> to avoid conflict with previous versions.</p>\n<p>The SDK of this version is dependent on the third-party HTTP library <a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">requests</a> and <cite>crcmod</cite>. Install the SDK following the methods below.</p>\n<p>Note:</p>\n<blockquote>\nThis version does not contain the <cite>osscmd</cite> command line tool.</blockquote>\n</div>\n<div id=\"running-environment\">\n<h2>Running environment</h2>\n<p>Python 2.6\uff0c2.7\uff0c3.3\uff0c3.4\uff0c3.5</p>\n<p>Note:</p>\n<blockquote>\nDo not use Python 3.3.0 or 3.3.1. Refer to <a href=\"https://bugs.python.org/issue16658\" rel=\"nofollow\">Python Issue 16658</a>.</blockquote>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Install the official release version through PIP (taking Linux as an example):</p>\n<pre>$ pip install oss2\n</pre>\n<p>You can also install the unzipped installer package directly:</p>\n<pre>$ sudo python setup.py install\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">oss2</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s1\">'http://oss-cn-hangzhou.aliyuncs.com'</span> <span class=\"c1\"># Suppose that your bucket is in the Hangzhou region.</span>\n\n<span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"n\">oss2</span><span class=\"o\">.</span><span class=\"n\">Auth</span><span class=\"p\">(</span><span class=\"s1\">'&lt;Your AccessKeyID&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;Your AccessKeySecret&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">oss2</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"p\">(</span><span class=\"n\">auth</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;your bucket name&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The object key in the bucket is story.txt</span>\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s1\">'story.txt'</span>\n\n<span class=\"c1\"># Upload</span>\n<span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">put_object</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s1\">'Ali Baba is a happy youth.'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Download</span>\n<span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">get_object</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Delete</span>\n<span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">delete_object</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Traverse all objects in the bucket</span>\n<span class=\"k\">for</span> <span class=\"n\">object_info</span> <span class=\"ow\">in</span> <span class=\"n\">oss2</span><span class=\"o\">.</span><span class=\"n\">ObjectIterator</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">object_info</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</pre>\n<p>For more examples, refer to the code under the \u201cexamples\u201d directory.</p>\n</div>\n<div id=\"handling-errors\">\n<h2>Handling errors</h2>\n<p>The Python SDK interface will throw an exception in case of an error (see oss2.exceptions sub-module) unless otherwise specified. An example is provided below:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">get_object</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"k\">except</span> <span class=\"n\">oss2</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">NoSuchKey</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{0}</span><span class=\"s1\"> not found: http_status=</span><span class=\"si\">{1}</span><span class=\"s1\">, request_id=</span><span class=\"si\">{2}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">request_id</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"setup-logging\">\n<h2>Setup Logging</h2>\n<dl>\n<dt>The following code can set the logging level of \u2018oss2\u2019.</dt>\n<dd><pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'oss2'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n</pre>\n</dd>\n</dl>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>First set the required AccessKeyId, AccessKeySecret, endpoint and bucket information for the test through environment variables (<strong>Do not use the bucket for the production environment</strong>).\nTake the Linux system for example:</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_ACCESS_KEY_ID</span><span class=\"o\">=</span>&lt;AccessKeyId&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_ACCESS_KEY_SECRET</span><span class=\"o\">=</span>&lt;AccessKeySecret&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_ENDPOINT</span><span class=\"o\">=</span>&lt;endpoint&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_BUCKET</span><span class=\"o\">=</span>&lt;bucket&gt;\n\n$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_STS_ID</span><span class=\"o\">=</span>&lt;AccessKeyId <span class=\"k\">for</span> testing STS&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_STS_KEY</span><span class=\"o\">=</span>&lt;AccessKeySecret <span class=\"k\">for</span> testing STS&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_STS_ARN</span><span class=\"o\">=</span>&lt;Role ARN <span class=\"k\">for</span> testing STS&gt;\n</pre>\n<p>Run the test in the following method:</p>\n<pre>$ nosetests                          <span class=\"c1\"># First install nose</span>\n</pre>\n<p>You can set environment variable to test auth v2:</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">OSS_TEST_AUTH_VERSION</span><span class=\"o\">=</span>v2\n</pre>\n</div>\n<div id=\"more-resources\">\n<h2>More resources</h2>\n<ul>\n<li><a href=\"https://github.com/aliyun/aliyun-oss-python-sdk/tree/master/examples\" rel=\"nofollow\">More examples</a>.</li>\n<li><a href=\"http://aliyun-oss-python-sdk.readthedocs.org/en/latest\" rel=\"nofollow\">Python SDK API documentation</a>.</li>\n<li><a href=\"https://help.aliyun.com/document_detail/32026.html\" rel=\"nofollow\">Official Python SDK documentation</a>.</li>\n</ul>\n</div>\n<div id=\"contacting-us\">\n<h2>Contacting us</h2>\n<ul>\n<li><a href=\"http://oss.aliyun.com\" rel=\"nofollow\">Alibaba Cloud OSS official website</a>.</li>\n<li><a href=\"http://bbs.aliyun.com\" rel=\"nofollow\">Alibaba Cloud OSS official forum</a>.</li>\n<li><a href=\"https://help.aliyun.com/document_detail/32026.html\" rel=\"nofollow\">Alibaba Cloud OSS official documentation center</a>.</li>\n<li>Alibaba Cloud official technical support: <a href=\"https://workorder.console.aliyun.com/#/ticket/createIndex\" rel=\"nofollow\">Submit a ticket</a>.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<ul>\n<li><a href=\"https://github.com/aliyun/aliyun-oss-python-sdk/blob/master/LICENSE\" rel=\"nofollow\">MIT</a>.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5418570, "releases": {"2.6.2": [{"comment_text": "", "digests": {"md5": "272bb2651d9402231b97216abcda912d", "sha256": "f49b11de9673a9dbcd1b5166720046a53da789494152d16f02ce50e8d985176a"}, "downloads": -1, "filename": "oss2-test-1-2.6.2.tar.gz", "has_sig": false, "md5_digest": "272bb2651d9402231b97216abcda912d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156860, "upload_time": "2019-06-19T05:06:50", "upload_time_iso_8601": "2019-06-19T05:06:50.432952Z", "url": "https://files.pythonhosted.org/packages/ca/1f/4a6644613d932f71ec84fc9bc09f6d15115f08212fd7b80815aef6fa4f14/oss2-test-1-2.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "272bb2651d9402231b97216abcda912d", "sha256": "f49b11de9673a9dbcd1b5166720046a53da789494152d16f02ce50e8d985176a"}, "downloads": -1, "filename": "oss2-test-1-2.6.2.tar.gz", "has_sig": false, "md5_digest": "272bb2651d9402231b97216abcda912d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156860, "upload_time": "2019-06-19T05:06:50", "upload_time_iso_8601": "2019-06-19T05:06:50.432952Z", "url": "https://files.pythonhosted.org/packages/ca/1f/4a6644613d932f71ec84fc9bc09f6d15115f08212fd7b80815aef6fa4f14/oss2-test-1-2.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:59 2020"}