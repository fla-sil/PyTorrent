{"info": {"author": "Drew Smathers", "author_email": "drew dot smathers at gmail dot com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet :: Log Analysis", "Topic :: Utilities"], "description": "I wrote loggrok a while back as I needed a simple library\n    for analyzing logs.  I am not actively developing loggrok, but please let me know\n    if you find any bugs etc.\n\n    Features include: \n    \n    * Simple callback system (loggrok.actions) \n    * Seemless iteration over multiple rollover-index based log files - smartly joins\n      broken lines (RollingIndexLogStream)\n    * Custom regex-based header and message body matching.\n\n    Example usage:\n\n        >>> from loggrok.actions import Action\n        >>> action = Action()\n        >>> def printError(entry):\n        ...     print 'err!', str(entry)[:-1]\n        ...\n        >>> action.addLevelCallback('ERROR', printError)\n        >>> def printWarning(entry):\n        ...     print 'warning!', str(entry)[:-1]\n        ...\n        >>> action.addLevelCallback('WARN', printWarning)\n        >>> from loggrok.log import LogStream\n        >>> stream = LogStream(fname)\n        >>> stream.action = action\n        >>> for entry in stream:\n        ...     continue\n        ...\n        err! blah blah\n        warning! blah blah\n        err! blah blah\n\n    You can also write your own regexes for matching custom headers:\n\n        >>> from loggrok.parse import HeaderParser, MessageParser\n        >>> header_patt = r'^([a-zA-Z]+) ([a-zA-Z]+) <(\\d+)> '\n        # Entry attributes correspond to groups in regex pattern\n        >>> header_attrs = ('foo', 'bar', 'baz')\n        >>> header_parser = HeaderParser(header_patt, header_attrs)\n        >>> message_patterns = (...) # regexs for message body - after header\n        >>> message_attrs = (...) # tuple of attribute tuples corresponding to patters\n        >>> messageParser = MessageParser(message_patterns, message_attrs)\n        ...\n        >>> stream.messageParser = messageParser\n\n    See doctest in tests directory for working examples.\n\n    To run unit tests:\n\n        python runtests.py\n\n    N.B. - loggrok will emit warning related to \"broken\" CurriedCallable class, though\n    it should not cause issues.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://xix.python-hosting.com/#loggrok", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "loggrok", "package_url": "https://pypi.org/project/loggrok/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/loggrok/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://xix.python-hosting.com/#loggrok"}, "release_url": "https://pypi.org/project/loggrok/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Simple log analysis library", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <dl>\n<dt>I wrote loggrok a while back as I needed a simple library</dt>\n<dd><p>for analyzing logs.  I am not actively developing loggrok, but please let me know\nif you find any bugs etc.</p>\n<p>Features include:</p>\n<ul>\n<li>Simple callback system (loggrok.actions)</li>\n<li>Seemless iteration over multiple rollover-index based log files - smartly joins\nbroken lines (RollingIndexLogStream)</li>\n<li>Custom regex-based header and message body matching.</li>\n</ul>\n<p>Example usage:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from loggrok.actions import Action\n&gt;&gt;&gt; action = Action()\n&gt;&gt;&gt; def printError(entry):\n...     print 'err!', str(entry)[:-1]\n...\n&gt;&gt;&gt; action.addLevelCallback('ERROR', printError)\n&gt;&gt;&gt; def printWarning(entry):\n...     print 'warning!', str(entry)[:-1]\n...\n&gt;&gt;&gt; action.addLevelCallback('WARN', printWarning)\n&gt;&gt;&gt; from loggrok.log import LogStream\n&gt;&gt;&gt; stream = LogStream(fname)\n&gt;&gt;&gt; stream.action = action\n&gt;&gt;&gt; for entry in stream:\n...     continue\n...\nerr! blah blah\nwarning! blah blah\nerr! blah blah\n</pre>\n</blockquote>\n<p>You can also write your own regexes for matching custom headers:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from loggrok.parse import HeaderParser, MessageParser\n&gt;&gt;&gt; header_patt = r'^([a-zA-Z]+) ([a-zA-Z]+) &lt;(\\d+)&gt; '\n# Entry attributes correspond to groups in regex pattern\n&gt;&gt;&gt; header_attrs = ('foo', 'bar', 'baz')\n&gt;&gt;&gt; header_parser = HeaderParser(header_patt, header_attrs)\n&gt;&gt;&gt; message_patterns = (...) # regexs for message body - after header\n&gt;&gt;&gt; message_attrs = (...) # tuple of attribute tuples corresponding to patters\n&gt;&gt;&gt; messageParser = MessageParser(message_patterns, message_attrs)\n...\n&gt;&gt;&gt; stream.messageParser = messageParser\n</pre>\n</blockquote>\n<p>See doctest in tests directory for working examples.</p>\n<p>To run unit tests:</p>\n<blockquote>\npython runtests.py</blockquote>\n<p>N.B. - loggrok will emit warning related to \u201cbroken\u201d CurriedCallable class, though\nit should not cause issues.</p>\n</dd>\n</dl>\n\n          </div>"}, "last_serial": 794319, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "2dcbaf520789fe076e82d488ea64df74", "sha256": "6b38c085d77c27043600da2f78f9cf5bd5b7b9702bb6bf11b9f9c11dcdec5e35"}, "downloads": -1, "filename": "loggrok-0.2.1-py2.4.egg", "has_sig": false, "md5_digest": "2dcbaf520789fe076e82d488ea64df74", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12739, "upload_time": "2007-02-03T23:45:51", "upload_time_iso_8601": "2007-02-03T23:45:51Z", "url": "https://files.pythonhosted.org/packages/b5/bc/59e481fbbdab2bbb8e3a65b5c2cb740897a6e11f1bf07984acf1fb85d333/loggrok-0.2.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3284db4187c67049305844eef5b2e65", "sha256": "03a580644828d73bc448a08737439466b7f4e27ac79f0e5be75fc34b9526220f"}, "downloads": -1, "filename": "loggrok-0.2.1-py2.5.egg", "has_sig": false, "md5_digest": "c3284db4187c67049305844eef5b2e65", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 12576, "upload_time": "2007-02-03T23:45:51", "upload_time_iso_8601": "2007-02-03T23:45:51Z", "url": "https://files.pythonhosted.org/packages/9c/a0/ee46273386655a240ae81a75f980599e0f935b50734bd8208ff57723defc/loggrok-0.2.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2059387c68666257cefd8186c89c2fc7", "sha256": "a92bc52abda416db3389a7d4d00e45535e7fe9700adeb5e80f756a386e33f232"}, "downloads": -1, "filename": "loggrok-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2059387c68666257cefd8186c89c2fc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10937, "upload_time": "2007-02-03T23:45:51", "upload_time_iso_8601": "2007-02-03T23:45:51Z", "url": "https://files.pythonhosted.org/packages/7d/cc/b118845b0110ed09fec8c77b7023cacc5dccb86332fb778ed03db9afaa36/loggrok-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2dcbaf520789fe076e82d488ea64df74", "sha256": "6b38c085d77c27043600da2f78f9cf5bd5b7b9702bb6bf11b9f9c11dcdec5e35"}, "downloads": -1, "filename": "loggrok-0.2.1-py2.4.egg", "has_sig": false, "md5_digest": "2dcbaf520789fe076e82d488ea64df74", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12739, "upload_time": "2007-02-03T23:45:51", "upload_time_iso_8601": "2007-02-03T23:45:51Z", "url": "https://files.pythonhosted.org/packages/b5/bc/59e481fbbdab2bbb8e3a65b5c2cb740897a6e11f1bf07984acf1fb85d333/loggrok-0.2.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3284db4187c67049305844eef5b2e65", "sha256": "03a580644828d73bc448a08737439466b7f4e27ac79f0e5be75fc34b9526220f"}, "downloads": -1, "filename": "loggrok-0.2.1-py2.5.egg", "has_sig": false, "md5_digest": "c3284db4187c67049305844eef5b2e65", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 12576, "upload_time": "2007-02-03T23:45:51", "upload_time_iso_8601": "2007-02-03T23:45:51Z", "url": "https://files.pythonhosted.org/packages/9c/a0/ee46273386655a240ae81a75f980599e0f935b50734bd8208ff57723defc/loggrok-0.2.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2059387c68666257cefd8186c89c2fc7", "sha256": "a92bc52abda416db3389a7d4d00e45535e7fe9700adeb5e80f756a386e33f232"}, "downloads": -1, "filename": "loggrok-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2059387c68666257cefd8186c89c2fc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10937, "upload_time": "2007-02-03T23:45:51", "upload_time_iso_8601": "2007-02-03T23:45:51Z", "url": "https://files.pythonhosted.org/packages/7d/cc/b118845b0110ed09fec8c77b7023cacc5dccb86332fb778ed03db9afaa36/loggrok-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:16 2020"}