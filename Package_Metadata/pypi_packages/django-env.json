{"info": {"author": "Tomek Czy\u017c", "author_email": "tomekczyz@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-env\n**********\n\n\nInstallation\n============\n\nWarning: You have to consider where to place this package because it has to\n  be importable \"outside\" your project. Probably best place for it\n  exists in project directory (or your \"lib\" directory) or in system-\n  wide packages' place.\n\nSimplest way is to do (system-wide):\n\n   pip install django-env\n\nor using archive\n\n   tar xf django-env*\n   cd django-env*\n   python setup.py install\n\nor place installed egg in project's directory.\n\n\nConfiguration\n=============\n\nFirstly, you have some options in *settings.py*:\n\n\nSettings.py\n-----------\n\nYou can set number of settings:\n\nenv.settings.DJANGO_ENV_CREATE_AUTOUPDATE = False\n\n   When doing *env_create*, should be run *env_update* after it.\n\nenv.settings.DJANGO_ENV_CREATE_SITEPACKAGES = False\n\n   When doing *env_create*, should it *connect* global *site-\n   packages*.\n\nenv.settings.DJANGO_ENV_NAME = 'py_env'\n\n   Directory's name of virtualenv. If the name is *relative name* it\n   is appended to *project's path*, if the name is *absolute name*\n   (starts with /), is is set as is for virtualenv's directory.\n\nenv.settings.DJANGO_ENV_UPDATE_PIP_ARGUMENTS = []\n\n   During *env_update* it is used *pip* for installing packages, you\n   can add here additional arguments like *-i* or *-f*. *-U* can be\n   set dynamicaly by adding *--upgrade* to *env_update*.\n\nenv.settings.DJANGO_ENV_UPDATE_REQUIREMENTS = 'requirements.pip'\n\n   Name of file with requirements. If this path is relative is\n   appended to project's path, else it is set as absolute.\n\nNote: Project's directory is the same where *manage.py* and *settings.py*\n  lives.\n\n\nINSTALLED_APPS\n--------------\n\nNote: It is just cosmetic change to display command in *manage.py help*.\n\nAdd *env* to *INSTALLED_APPS*:\n\n   INSTALLED_APPS += ('env', )\n\n\nproject setup\n-------------\n\nHow to activate the environment? Example:\n\n   import env\n\nI suggest to place it in *manage.py* at the top.\n\n\nHow it works?\n=============\n\nIt just grab control from *manage.py* (if you import it) and check the\nargument line. If you passed one of *django-env* commands, it do what\nis needed and exit; else it pass control to *manage.py* to parse other\nargs.\n\n\nUsage\n=====\n\nTarget of this project is automating in creating project environment.\n\nThis app gives you some additional *manage.py* commands:\n\nenv_create [--force]\n   create environment (and optionally do *env_update* - it depends on\n   DJANGO_ENV_AUTOUPDATE variable in *settings.py*)\n\nenv_update [--upgrade]\n   install packages from DJANGO_ENV_REQUIREMENTS file to current\n   environment via *pip install -r*, or if you provide *--upgrade* it\n   runs *pip install -U -r*.\n\n   You can pass other arguments to *pip*, see *settings.py*.\n\nenv_remove\n   simply deletes environments directory.\n\n\nTODO\n====\n\n* *py_env*/last_update - show last update date - monitoring feature\n\n\nChanges\n*******\n\n0.2\n\n   * easier setup\n\n   * added several options to 'settings.py'\n\n   * it should work!\n\n0.1 - init", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/spinus/django-env", "keywords": "django virtualenv managment", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-env", "package_url": "https://pypi.org/project/django-env/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-env/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/spinus/django-env"}, "release_url": "https://pypi.org/project/django-env/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Automaticly manages virtualenv for django project", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-env\">\n<h2>django-env</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<dl>\n<dt>Warning: You have to consider where to place this package because it has to</dt>\n<dd>be importable \u201coutside\u201d your project. Probably best place for it\nexists in project directory (or your \u201clib\u201d directory) or in system-\nwide packages\u2019 place.</dd>\n</dl>\n<p>Simplest way is to do (system-wide):</p>\n<blockquote>\npip install django-env</blockquote>\n<p>or using archive</p>\n<blockquote>\ntar xf django-env*\ncd django-env*\npython setup.py install</blockquote>\n<p>or place installed egg in project\u2019s directory.</p>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Firstly, you have some options in <em>settings.py</em>:</p>\n<div id=\"settings-py\">\n<h4>Settings.py</h4>\n<p>You can set number of settings:</p>\n<p>env.settings.DJANGO_ENV_CREATE_AUTOUPDATE = False</p>\n<blockquote>\nWhen doing <em>env_create</em>, should be run <em>env_update</em> after it.</blockquote>\n<p>env.settings.DJANGO_ENV_CREATE_SITEPACKAGES = False</p>\n<blockquote>\nWhen doing <em>env_create</em>, should it <em>connect</em> global <em>site-\npackages</em>.</blockquote>\n<p>env.settings.DJANGO_ENV_NAME = \u2018py_env\u2019</p>\n<blockquote>\nDirectory\u2019s name of virtualenv. If the name is <em>relative name</em> it\nis appended to <em>project\u2019s path</em>, if the name is <em>absolute name</em>\n(starts with /), is is set as is for virtualenv\u2019s directory.</blockquote>\n<p>env.settings.DJANGO_ENV_UPDATE_PIP_ARGUMENTS = []</p>\n<blockquote>\nDuring <em>env_update</em> it is used <em>pip</em> for installing packages, you\ncan add here additional arguments like <em>-i</em> or <em>-f</em>. <em>-U</em> can be\nset dynamicaly by adding <em>\u2013upgrade</em> to <em>env_update</em>.</blockquote>\n<p>env.settings.DJANGO_ENV_UPDATE_REQUIREMENTS = \u2018requirements.pip\u2019</p>\n<blockquote>\nName of file with requirements. If this path is relative is\nappended to project\u2019s path, else it is set as absolute.</blockquote>\n<dl>\n<dt>Note: Project\u2019s directory is the same where <em>manage.py</em> and <em>settings.py</em></dt>\n<dd>lives.</dd>\n</dl>\n</div>\n<div id=\"installed-apps\">\n<h4>INSTALLED_APPS</h4>\n<p>Note: It is just cosmetic change to display command in <em>manage.py help</em>.</p>\n<p>Add <em>env</em> to <em>INSTALLED_APPS</em>:</p>\n<blockquote>\nINSTALLED_APPS += (\u2018env\u2019, )</blockquote>\n</div>\n<div id=\"project-setup\">\n<h4>project setup</h4>\n<p>How to activate the environment? Example:</p>\n<blockquote>\nimport env</blockquote>\n<p>I suggest to place it in <em>manage.py</em> at the top.</p>\n</div>\n</div>\n<div id=\"how-it-works\">\n<h3>How it works?</h3>\n<p>It just grab control from <em>manage.py</em> (if you import it) and check the\nargument line. If you passed one of <em>django-env</em> commands, it do what\nis needed and exit; else it pass control to <em>manage.py</em> to parse other\nargs.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Target of this project is automating in creating project environment.</p>\n<p>This app gives you some additional <em>manage.py</em> commands:</p>\n<dl>\n<dt>env_create [\u2013force]</dt>\n<dd>create environment (and optionally do <em>env_update</em> - it depends on\nDJANGO_ENV_AUTOUPDATE variable in <em>settings.py</em>)</dd>\n<dt>env_update [\u2013upgrade]</dt>\n<dd><p>install packages from DJANGO_ENV_REQUIREMENTS file to current\nenvironment via <em>pip install -r</em>, or if you provide <em>\u2013upgrade</em> it\nruns <em>pip install -U -r</em>.</p>\n<p>You can pass other arguments to <em>pip</em>, see <em>settings.py</em>.</p>\n</dd>\n<dt>env_remove</dt>\n<dd>simply deletes environments directory.</dd>\n</dl>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li><em>py_env</em>/last_update - show last update date - monitoring feature</li>\n</ul>\n</div>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p>0.2</p>\n<blockquote>\n<ul>\n<li>easier setup</li>\n<li>added several options to \u2018settings.py\u2019</li>\n<li>it should work!</li>\n</ul>\n</blockquote>\n<p>0.1 - init</p>\n</div>\n\n          </div>"}, "last_serial": 789569, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d23298bfbf2b76de61910b39e49d7982", "sha256": "50228661bff062cd1375b73795438820d516ee52d6c32fe0bd3f6d5e02d6d694"}, "downloads": -1, "filename": "django-env-0.1.tar.gz", "has_sig": true, "md5_digest": "d23298bfbf2b76de61910b39e49d7982", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11614, "upload_time": "2012-02-05T01:04:47", "upload_time_iso_8601": "2012-02-05T01:04:47.056595Z", "url": "https://files.pythonhosted.org/packages/4a/d1/1cce51832498ae3092e1de83e615ca90361c0fae97bde426068a173f54be/django-env-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2808f99eb0a676518ff2ace51498e0db", "sha256": "0d224eeda55068008990709b252683fcd264c0b940194ca240bbf49f3ba06597"}, "downloads": -1, "filename": "django-env-0.2.tar.gz", "has_sig": false, "md5_digest": "2808f99eb0a676518ff2ace51498e0db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13179, "upload_time": "2012-02-11T17:04:06", "upload_time_iso_8601": "2012-02-11T17:04:06.504402Z", "url": "https://files.pythonhosted.org/packages/b1/7e/12535048e5d8d2b64971266ae411c41328b1772c935ab0d7f558197878ff/django-env-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e55faa5c3b86285894043438d7510537", "sha256": "b1628892a2819a0c143ed058b0d22c315beef72dc7fbf262b35c13c5d04b441c"}, "downloads": -1, "filename": "django-env-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e55faa5c3b86285894043438d7510537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13095, "upload_time": "2012-02-13T18:37:56", "upload_time_iso_8601": "2012-02-13T18:37:56.630335Z", "url": "https://files.pythonhosted.org/packages/58/b9/b333886b8b004b3d8cc14006e3c9c16d035796f189254c8936202ef9f5bb/django-env-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e55faa5c3b86285894043438d7510537", "sha256": "b1628892a2819a0c143ed058b0d22c315beef72dc7fbf262b35c13c5d04b441c"}, "downloads": -1, "filename": "django-env-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e55faa5c3b86285894043438d7510537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13095, "upload_time": "2012-02-13T18:37:56", "upload_time_iso_8601": "2012-02-13T18:37:56.630335Z", "url": "https://files.pythonhosted.org/packages/58/b9/b333886b8b004b3d8cc14006e3c9c16d035796f189254c8936202ef9f5bb/django-env-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:21 2020"}