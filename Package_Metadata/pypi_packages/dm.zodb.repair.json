{"info": {"author": "Dieter Maurer", "author_email": "dieter@handshake.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Zope2", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "This package contains a function to restore lost objects from a ZODB backup.\nIn the future, it might grow further tools for ZODB repair.\n\nrecover.restore_from_backup\n===========================\n\nThe module ``recover`` defines the function ``restore_from_backup``\nto restore lost objects from a ZODB backup. ``restore_from_backup``\nhas parameters *lost*, *backup* and *target*.\n\n*lost* is an iterable of oids identifying objects lost in *target*.\nThe oids might e.g. have been found by the standard ``fsrefs`` utility.\n\n*backup* and *target* are open ZODB storages. *backup* is read only\nand can have been opened read only; *target* is read and written.\n\n``restore_from_backup`` reads the objects identified by the oids in\n*lost* from *backup* and writes them to *target*. If such a restored\nobject contains references to other objects not available in *target*,\nthey are restored recursively.\nThe operations are logged via Python's standard logging subsystem.\n\nExample usage::\n\n  from logging import basicConfig, getLogger, INFO\n  from ZODB.FileStorage.FileStorage import FileStorage\n  from dm.zodb.repair.recover import restore_from_backup\n  \n  basicConfig()\n  logger = getLogger(); logger.setLevel(INFO)\n  \n  lost = [....] # list of oids for lost objects, e.g. derived from \"fsrefs\" output\n  \n  backup = FileStorage('backup.fs', read_only=True)\n  target = FileStorage('target.fs')\n  restore_from_backup(lost, backup, target)\n  backup.close()\n  target.close()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/dm.zodb.repair", "keywords": "ZODB recovery", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "dm.zodb.repair", "package_url": "https://pypi.org/project/dm.zodb.repair/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dm.zodb.repair/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/dm.zodb.repair"}, "release_url": "https://pypi.org/project/dm.zodb.repair/1.0/", "requires_dist": null, "requires_python": null, "summary": "ZODB: recover lost objects from a backup", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package contains a function to restore lost objects from a ZODB backup.\nIn the future, it might grow further tools for ZODB repair.</p>\n<div id=\"recover-restore-from-backup\">\n<h2>recover.restore_from_backup</h2>\n<p>The module <tt>recover</tt> defines the function <tt>restore_from_backup</tt>\nto restore lost objects from a ZODB backup. <tt>restore_from_backup</tt>\nhas parameters <em>lost</em>, <em>backup</em> and <em>target</em>.</p>\n<p><em>lost</em> is an iterable of oids identifying objects lost in <em>target</em>.\nThe oids might e.g. have been found by the standard <tt>fsrefs</tt> utility.</p>\n<p><em>backup</em> and <em>target</em> are open ZODB storages. <em>backup</em> is read only\nand can have been opened read only; <em>target</em> is read and written.</p>\n<p><tt>restore_from_backup</tt> reads the objects identified by the oids in\n<em>lost</em> from <em>backup</em> and writes them to <em>target</em>. If such a restored\nobject contains references to other objects not available in <em>target</em>,\nthey are restored recursively.\nThe operations are logged via Python\u2019s standard logging subsystem.</p>\n<p>Example usage:</p>\n<pre>from logging import basicConfig, getLogger, INFO\nfrom ZODB.FileStorage.FileStorage import FileStorage\nfrom dm.zodb.repair.recover import restore_from_backup\n\nbasicConfig()\nlogger = getLogger(); logger.setLevel(INFO)\n\nlost = [....] # list of oids for lost objects, e.g. derived from \"fsrefs\" output\n\nbackup = FileStorage('backup.fs', read_only=True)\ntarget = FileStorage('target.fs')\nrestore_from_backup(lost, backup, target)\nbackup.close()\ntarget.close()\n</pre>\n</div>\n\n          </div>"}, "last_serial": 791262, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "650fb9abd6a4b9ce6d0b668172582537", "sha256": "c0e3cf6496f63768d1f271cc86c16c47ec04ce1b3726ccfbb168cdeb6f8bbfcc"}, "downloads": -1, "filename": "dm.zodb.repair-1.0.tar.gz", "has_sig": false, "md5_digest": "650fb9abd6a4b9ce6d0b668172582537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2934, "upload_time": "2010-11-10T10:58:03", "upload_time_iso_8601": "2010-11-10T10:58:03.127194Z", "url": "https://files.pythonhosted.org/packages/e2/73/9fcbb68352ecd1d6a820a3c87c3c9ba6fd4c10fee1e39e6c9c5f9c593a53/dm.zodb.repair-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "650fb9abd6a4b9ce6d0b668172582537", "sha256": "c0e3cf6496f63768d1f271cc86c16c47ec04ce1b3726ccfbb168cdeb6f8bbfcc"}, "downloads": -1, "filename": "dm.zodb.repair-1.0.tar.gz", "has_sig": false, "md5_digest": "650fb9abd6a4b9ce6d0b668172582537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2934, "upload_time": "2010-11-10T10:58:03", "upload_time_iso_8601": "2010-11-10T10:58:03.127194Z", "url": "https://files.pythonhosted.org/packages/e2/73/9fcbb68352ecd1d6a820a3c87c3c9ba6fd4c10fee1e39e6c9c5f9c593a53/dm.zodb.repair-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:11 2020"}