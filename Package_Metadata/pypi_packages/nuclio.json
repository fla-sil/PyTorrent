{"info": {"author": "Miki Tebeka", "author_email": "miki@353solutions.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# nuclio Jupyter Export\n\n<!--\nUncomment once we enable travis\n\n[![Build Status](https://travis-ci.org/nu/nuclio.svg?branch=master)](https://travis-ci.org/nuclio/nuclio-jupyter) \n-->\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\nConvert Jupyter notebook to Python code that can run as [nuclio](https://nuclio.io/) handler\n\n## Usage\n\nWhen developing, import `Context` and `Event` from `nucilo` and use it to\ngenerate a mock context and request.\n\n```python\n# nuclio: ignore\nfrom nuclio import Context, Event\n\ncontext = Context()\nevent = Event(body='Hello Nuclio')\n# your code goes here\n```\n\nIn the cell you'd like to become the handler, added the comment `#\nnuclio:handler`. If there's a specific line you'd like to be the returned one -\nadded `# nuclio:return` at the end of it.\n\nCells containing `# nuclio: ignore` comment will be commented out in the export\nprocess.\n\nNow choose `File/Download as/Nuclio` in Jupyter notebook\n\n![](doc/menu.png)\n\nOr you can run\n\n```\njupyter nbconvert --to nuclio example.ipynb\n```\n\n\nThis will create `example.py` with your code wrapped in handler function and all\ncells with `# nuclio: ignore` commented out.\n\n### Example\n\n![](doc/example.png)\n\nWill generate\n\n```python\n# coding: utf-8\n\n# In[1]:\ndef greeting(name):\n    return 'Hi ' + name + '. How are you?'\n\n# In[2]:\ndefault_name = 'Dave'\n\n# In[3]:\n# # nuclio:ignore\n# from nuclio import Context, Event\n# context = Context()\n# event = Event(body=default_name)\n\n# In[4]:\ndef handler(context, event):\n    # nuclio:handler\n    return greeting(event.body)\n```\n\n## Try It Out\n\nYou can build a docker image and try it out\n\n### Build\n\n    $ docker build -t jupyter-nuclio .\n\n### Run\n\n    $ docker run -p 8888:8888 jupyter-nuclio\n\nThen open your browser at http://localhost:8888 and enter the password `nuclio`\nwhen prompted.\n\n\n## Developing\n\nWe're using [pipenv](https://docs.pipenv.org/) as package manager. To install\ndependencies run\n\n    $ pipenv sync -d\n\nTo run the tests run\n\n    $ pipenv run python -m pytest -v tests\n\n## Licence\n\nApache 2.0 (see [LICENSE.txt](LICENSE.txt))\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nuclio/nuclio-jupyter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nuclio", "package_url": "https://pypi.org/project/nuclio/", "platform": "", "project_url": "https://pypi.org/project/nuclio/", "project_urls": {"Homepage": "https://github.com/nuclio/nuclio-jupyter"}, "release_url": "https://pypi.org/project/nuclio/0.1.0/", "requires_dist": ["ipython (>=6.4.0)", "jupyter (>=1.0.0)", "traitlets (>=4.3.2)"], "requires_python": "", "summary": "Convert Jupyter notebook to nuclio", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nuclio Jupyter Export</h1>\n\n<p><a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Convert Jupyter notebook to Python code that can run as <a href=\"https://nuclio.io/\" rel=\"nofollow\">nuclio</a> handler</p>\n<h2>Usage</h2>\n<p>When developing, import <code>Context</code> and <code>Event</code> from <code>nucilo</code> and use it to\ngenerate a mock context and request.</p>\n<pre><span class=\"c1\"># nuclio: ignore</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nuclio</span> <span class=\"kn\">import</span> <span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">Event</span>\n\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">Context</span><span class=\"p\">()</span>\n<span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">Event</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'Hello Nuclio'</span><span class=\"p\">)</span>\n<span class=\"c1\"># your code goes here</span>\n</pre>\n<p>In the cell you'd like to become the handler, added the comment <code># nuclio:handler</code>. If there's a specific line you'd like to be the returned one -\nadded <code># nuclio:return</code> at the end of it.</p>\n<p>Cells containing <code># nuclio: ignore</code> comment will be commented out in the export\nprocess.</p>\n<p>Now choose <code>File/Download as/Nuclio</code> in Jupyter notebook</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fd2f0a90e0d53b156cd895ba1be25977422990a/646f632f6d656e752e706e67\"></p>\n<p>Or you can run</p>\n<pre><code>jupyter nbconvert --to nuclio example.ipynb\n</code></pre>\n<p>This will create <code>example.py</code> with your code wrapped in handler function and all\ncells with <code># nuclio: ignore</code> commented out.</p>\n<h3>Example</h3>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e185184f8954b89b3dfbd412361bcbf9858aeedf/646f632f6578616d706c652e706e67\"></p>\n<p>Will generate</p>\n<pre><span class=\"c1\"># coding: utf-8</span>\n\n<span class=\"c1\"># In[1]:</span>\n<span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'Hi '</span> <span class=\"o\">+</span> <span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">'. How are you?'</span>\n\n<span class=\"c1\"># In[2]:</span>\n<span class=\"n\">default_name</span> <span class=\"o\">=</span> <span class=\"s1\">'Dave'</span>\n\n<span class=\"c1\"># In[3]:</span>\n<span class=\"c1\"># # nuclio:ignore</span>\n<span class=\"c1\"># from nuclio import Context, Event</span>\n<span class=\"c1\"># context = Context()</span>\n<span class=\"c1\"># event = Event(body=default_name)</span>\n\n<span class=\"c1\"># In[4]:</span>\n<span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"c1\"># nuclio:handler</span>\n    <span class=\"k\">return</span> <span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n</pre>\n<h2>Try It Out</h2>\n<p>You can build a docker image and try it out</p>\n<h3>Build</h3>\n<pre><code>$ docker build -t jupyter-nuclio .\n</code></pre>\n<h3>Run</h3>\n<pre><code>$ docker run -p 8888:8888 jupyter-nuclio\n</code></pre>\n<p>Then open your browser at <a href=\"http://localhost:8888\" rel=\"nofollow\">http://localhost:8888</a> and enter the password <code>nuclio</code>\nwhen prompted.</p>\n<h2>Developing</h2>\n<p>We're using <a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">pipenv</a> as package manager. To install\ndependencies run</p>\n<pre><code>$ pipenv sync -d\n</code></pre>\n<p>To run the tests run</p>\n<pre><code>$ pipenv run python -m pytest -v tests\n</code></pre>\n<h2>Licence</h2>\n<p>Apache 2.0 (see <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a>)</p>\n\n          </div>"}, "last_serial": 4105178, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a2a50074a0a802c555b5eeca7a21b721", "sha256": "84f3977ff059499e4ca64371c0191aad78a132da443853b2b5329192190d2ffa"}, "downloads": -1, "filename": "nuclio-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "a2a50074a0a802c555b5eeca7a21b721", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 11427, "upload_time": "2018-07-26T16:00:09", "upload_time_iso_8601": "2018-07-26T16:00:09.502313Z", "url": "https://files.pythonhosted.org/packages/c0/dd/2e8dd6bfe1d1da2415749e43e3890c301560e466b25555e039dd10c023f2/nuclio-0.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "58421d00fca35be102bede9cc3280ca3", "sha256": "b7ea848e9195994e6d87ab1af0625e62523473bee9de0a164a30e3ceacd59965"}, "downloads": -1, "filename": "nuclio-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "58421d00fca35be102bede9cc3280ca3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7025, "upload_time": "2018-07-26T16:00:08", "upload_time_iso_8601": "2018-07-26T16:00:08.110203Z", "url": "https://files.pythonhosted.org/packages/44/6e/fd8475d89c770cbca3d45257177312d13a544cbe9bfd4281f7d6e06e3c6a/nuclio-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e6e5c1cfab3721cc550ee199841bc4c", "sha256": "622ca683be4acb5819680c71071143852811b2a115d01d2ebc50cc7d498772f4"}, "downloads": -1, "filename": "nuclio-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0e6e5c1cfab3721cc550ee199841bc4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108525, "upload_time": "2018-07-26T16:00:11", "upload_time_iso_8601": "2018-07-26T16:00:11.258561Z", "url": "https://files.pythonhosted.org/packages/2e/f5/8e805ef3fba72d00926a7ca95f852d3a19dd249e9cce1ebbe9de1f16994b/nuclio-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a2a50074a0a802c555b5eeca7a21b721", "sha256": "84f3977ff059499e4ca64371c0191aad78a132da443853b2b5329192190d2ffa"}, "downloads": -1, "filename": "nuclio-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "a2a50074a0a802c555b5eeca7a21b721", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 11427, "upload_time": "2018-07-26T16:00:09", "upload_time_iso_8601": "2018-07-26T16:00:09.502313Z", "url": "https://files.pythonhosted.org/packages/c0/dd/2e8dd6bfe1d1da2415749e43e3890c301560e466b25555e039dd10c023f2/nuclio-0.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "58421d00fca35be102bede9cc3280ca3", "sha256": "b7ea848e9195994e6d87ab1af0625e62523473bee9de0a164a30e3ceacd59965"}, "downloads": -1, "filename": "nuclio-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "58421d00fca35be102bede9cc3280ca3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7025, "upload_time": "2018-07-26T16:00:08", "upload_time_iso_8601": "2018-07-26T16:00:08.110203Z", "url": "https://files.pythonhosted.org/packages/44/6e/fd8475d89c770cbca3d45257177312d13a544cbe9bfd4281f7d6e06e3c6a/nuclio-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e6e5c1cfab3721cc550ee199841bc4c", "sha256": "622ca683be4acb5819680c71071143852811b2a115d01d2ebc50cc7d498772f4"}, "downloads": -1, "filename": "nuclio-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0e6e5c1cfab3721cc550ee199841bc4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108525, "upload_time": "2018-07-26T16:00:11", "upload_time_iso_8601": "2018-07-26T16:00:11.258561Z", "url": "https://files.pythonhosted.org/packages/2e/f5/8e805ef3fba72d00926a7ca95f852d3a19dd249e9cce1ebbe9de1f16994b/nuclio-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:18 2020"}