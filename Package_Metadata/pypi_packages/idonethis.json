{"info": {"author": "Dan Tracy.", "author_email": "djt5019@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "iDoneThis CLI Utility\n=====================\n\n|Version| |Documentation| |Status| |Coverage| |License| |GPA|\n\nA simple, small, and opinionated Python CLI for interacting with the awesome\niDoneThis service in a way that suits for my workflow.\n\nThis CLI allows you to record your grandiose accomplishments of the day did\ntoday as well as see what others on your team did.\n\nYou can find more docs on `ReadTheDocs <http://idonethis.readthedocs.org/en/latest/>`_.\n\n\nRecord what you've done\n-----------------------\n\n::\n\n  $ idonethis -m 'Holy smoke I did it!' --token 'my-auth-token' --team 'backend'\n  Recorded what you've done, keep up the good work!\n\n  $ echo 'Holy smoke I did it!' | idonethis --token 'my-auth-token' --team 'backend'\n  Recorded what you've done, keep up the good work!\n\n\nOr if you're feeling fancy and want to use your ``$EDITOR``\n\n::\n\n  $ idonethis --token 'my-auth-token' --team 'backend'\n  Recorded what you've done, keep up the good work!\n\n\nSee what others have done\n-------------------------\n\n::\n\n  $ date\n  Thu Jun  4 19:10:11 EDT 2015\n\n  $ idonethis summary --token 'my-auth-token' --team 'backend'\n  The \"backend\" team did this on 2015-06-04\n\n  DanT\n  ----\n\n  * Made a PR on something\n  * Created a little CLI for stuff\n\n  OtherGuy\n  --------\n\n  * Fixed all the things\n\n\nOr if you want to see who was slacking yesterday\n\n::\n\n  $ idonethis summary --date yesterday --token 'my-auth-token' --team 'backend'\n  The \"backend\" team did this on 2015-06-04\n\n  DanT\n  ----\n\n  * Thought about doing work, then didn't\n\n  OtherGuy\n  --------\n\n  * Planning to fix all the things\n\n\nInstallation\n------------\n\nYou can install this off of PyPI using PIP.\n\n::\n\n    $ pip install idonethis\n\n\n.. include:: contributing.rst\n\n\nDevelopment\n-----------\n\nPython 2.7, 3.2, 3.3, 3.4, and Pypy 2.1 are all supported and integrated\nagainst.  To run `detox`_ locally you'll need all the interpreters... or you\ncan do what I do and throw it over the fence to TravisCI and hope my config\nfile hasn't broken again.\n\n1. Create a new virtual environment\n2. Install development requirements from *requirements.txt*\n3. Run tests  ``nosetests``\n4. `detox`_ is installed and will run the test suite across all supported python platforms\n5. `python setup.py build_sphinx` will generate documentation into *build/sphinx/html*\n\nTL;DR\n+++++\n\n::\n\n    $ virtualenv env\n    $ ./env/bin/pip install -qr requirements.txt\n    $ source env/bin/activate\n    (env) $ nosetests\n    (env) $ python setup.py build_sphinx\n    (env) $ detox\n\n\n.. include:: ../HISTORY.rst\n\n\nLicense\n-------\n\nMIT\n\n.. include:: ../LICENSE\n\n\n.. _detox: https://testrun.org/tox/\n\n.. |Version| image:: https://badge.fury.io/py/idonethis.svg?\n   :target: http://badge.fury.io/py/idonethis\n\n.. |Status| image:: https://travis-ci.org/djt5019/idonethis.svg?branch=master\n   :target: https://travis-ci.org/djt5019/idonethis\n\n.. |Coverage| image:: https://coveralls.io/repos/djt5019/idonethis/badge.svg\n  :target: https://coveralls.io/r/djt5019/idonethis\n\n.. |Downloads| image:: https://pypip.in/d/idonethis/badge.svg?\n   :target: https://pypi.python.org/pypi/idonethis\n\n.. |License| image:: http://img.shields.io/:license-mit-blue.svg\n   :target: http://doge.mit-license.org\n\n.. |Documentation| image:: https://readthedocs.org/projects/idonethis/badge/?version=latest\n   :target: http://idonethis.readthedocs.org/en/latest\n   :alt: Documentation Status\n\n.. |GPA| image:: https://codeclimate.com/github/djt5019/idonethis/badges/gpa.svg\n   :target: https://codeclimate.com/github/djt5019/idonethis\n   :alt: Code Climate", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/djt5019/idonethis", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "idonethis", "package_url": "https://pypi.org/project/idonethis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/idonethis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/djt5019/idonethis"}, "release_url": "https://pypi.org/project/idonethis/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A simple Python CLI for interacting with idonethis", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            iDoneThis CLI Utility<br>=====================<br><br>|Version| |Documentation| |Status| |Coverage| |License| |GPA|<br><br>A simple, small, and opinionated Python CLI for interacting with the awesome<br>iDoneThis service in a way that suits for my workflow.<br><br>This CLI allows you to record your grandiose accomplishments of the day did<br>today as well as see what others on your team did.<br><br>You can find more docs on `ReadTheDocs &lt;http://idonethis.readthedocs.org/en/latest/&gt;`_.<br><br><br>Record what you've done<br>-----------------------<br><br>::<br><br>  $ idonethis -m 'Holy smoke I did it!' --token 'my-auth-token' --team 'backend'<br>  Recorded what you've done, keep up the good work!<br><br>  $ echo 'Holy smoke I did it!' | idonethis --token 'my-auth-token' --team 'backend'<br>  Recorded what you've done, keep up the good work!<br><br><br>Or if you're feeling fancy and want to use your ``$EDITOR``<br><br>::<br><br>  $ idonethis --token 'my-auth-token' --team 'backend'<br>  Recorded what you've done, keep up the good work!<br><br><br>See what others have done<br>-------------------------<br><br>::<br><br>  $ date<br>  Thu Jun  4 19:10:11 EDT 2015<br><br>  $ idonethis summary --token 'my-auth-token' --team 'backend'<br>  The \"backend\" team did this on 2015-06-04<br><br>  DanT<br>  ----<br><br>  * Made a PR on something<br>  * Created a little CLI for stuff<br><br>  OtherGuy<br>  --------<br><br>  * Fixed all the things<br><br><br>Or if you want to see who was slacking yesterday<br><br>::<br><br>  $ idonethis summary --date yesterday --token 'my-auth-token' --team 'backend'<br>  The \"backend\" team did this on 2015-06-04<br><br>  DanT<br>  ----<br><br>  * Thought about doing work, then didn't<br><br>  OtherGuy<br>  --------<br><br>  * Planning to fix all the things<br><br><br>Installation<br>------------<br><br>You can install this off of PyPI using PIP.<br><br>::<br><br>    $ pip install idonethis<br><br><br>.. include:: contributing.rst<br><br><br>Development<br>-----------<br><br>Python 2.7, 3.2, 3.3, 3.4, and Pypy 2.1 are all supported and integrated<br>against.  To run `detox`_ locally you'll need all the interpreters... or you<br>can do what I do and throw it over the fence to TravisCI and hope my config<br>file hasn't broken again.<br><br>1. Create a new virtual environment<br>2. Install development requirements from *requirements.txt*<br>3. Run tests  ``nosetests``<br>4. `detox`_ is installed and will run the test suite across all supported python platforms<br>5. `python setup.py build_sphinx` will generate documentation into *build/sphinx/html*<br><br>TL;DR<br>+++++<br><br>::<br><br>    $ virtualenv env<br>    $ ./env/bin/pip install -qr requirements.txt<br>    $ source env/bin/activate<br>    (env) $ nosetests<br>    (env) $ python setup.py build_sphinx<br>    (env) $ detox<br><br><br>.. include:: ../HISTORY.rst<br><br><br>License<br>-------<br><br>MIT<br><br>.. include:: ../LICENSE<br><br><br>.. _detox: https://testrun.org/tox/<br><br>.. |Version| image:: https://badge.fury.io/py/idonethis.svg?<br>   :target: http://badge.fury.io/py/idonethis<br><br>.. |Status| image:: https://travis-ci.org/djt5019/idonethis.svg?branch=master<br>   :target: https://travis-ci.org/djt5019/idonethis<br><br>.. |Coverage| image:: https://coveralls.io/repos/djt5019/idonethis/badge.svg<br>  :target: https://coveralls.io/r/djt5019/idonethis<br><br>.. |Downloads| image:: https://pypip.in/d/idonethis/badge.svg?<br>   :target: https://pypi.python.org/pypi/idonethis<br><br>.. |License| image:: http://img.shields.io/:license-mit-blue.svg<br>   :target: http://doge.mit-license.org<br><br>.. |Documentation| image:: https://readthedocs.org/projects/idonethis/badge/?version=latest<br>   :target: http://idonethis.readthedocs.org/en/latest<br>   :alt: Documentation Status<br><br>.. |GPA| image:: https://codeclimate.com/github/djt5019/idonethis/badges/gpa.svg<br>   :target: https://codeclimate.com/github/djt5019/idonethis<br>   :alt: Code Climate\n          </div>"}, "last_serial": 1579205, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "21dd78230d7dcbd3c86099d7b1e59016", "sha256": "4e7b20ce10ba82f4b794d499e9b97371553a4fa1e9c32275516a122cfbd12c89"}, "downloads": -1, "filename": "idonethis-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21dd78230d7dcbd3c86099d7b1e59016", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6511, "upload_time": "2015-06-05T04:40:59", "upload_time_iso_8601": "2015-06-05T04:40:59.972302Z", "url": "https://files.pythonhosted.org/packages/a6/b3/8ed05a222bd2aa90326c4d0ec326741bfd745078a1fe46291ef927a19d4f/idonethis-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8275f750b8c22d4146c4b4f09c3a454", "sha256": "fe2508b43e6929958aeab25750c94efde36c04f5360305866490bb89c275e2a6"}, "downloads": -1, "filename": "idonethis-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a8275f750b8c22d4146c4b4f09c3a454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6850, "upload_time": "2015-06-05T04:40:56", "upload_time_iso_8601": "2015-06-05T04:40:56.568325Z", "url": "https://files.pythonhosted.org/packages/bf/de/61a127fbb606e0adb9f4e65bd264c978541787edd923e9acfd060e172c22/idonethis-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21dd78230d7dcbd3c86099d7b1e59016", "sha256": "4e7b20ce10ba82f4b794d499e9b97371553a4fa1e9c32275516a122cfbd12c89"}, "downloads": -1, "filename": "idonethis-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21dd78230d7dcbd3c86099d7b1e59016", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6511, "upload_time": "2015-06-05T04:40:59", "upload_time_iso_8601": "2015-06-05T04:40:59.972302Z", "url": "https://files.pythonhosted.org/packages/a6/b3/8ed05a222bd2aa90326c4d0ec326741bfd745078a1fe46291ef927a19d4f/idonethis-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8275f750b8c22d4146c4b4f09c3a454", "sha256": "fe2508b43e6929958aeab25750c94efde36c04f5360305866490bb89c275e2a6"}, "downloads": -1, "filename": "idonethis-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a8275f750b8c22d4146c4b4f09c3a454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6850, "upload_time": "2015-06-05T04:40:56", "upload_time_iso_8601": "2015-06-05T04:40:56.568325Z", "url": "https://files.pythonhosted.org/packages/bf/de/61a127fbb606e0adb9f4e65bd264c978541787edd923e9acfd060e172c22/idonethis-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:52 2020"}