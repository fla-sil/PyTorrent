{"info": {"author": "Steib Cristian", "author_email": "cristiansteib@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Flask", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Security"], "description": "# crecaptcha\n###### A simple python module for  Google Recaptcha V3\nA pure python module, don't requires requests library\n## Installation\n- from latest version on PyPi:\n    ```bash\n    pip install crecaptcha\n    ```\n    \n## how to use?\n```python\nfrom crecatpcha.crecaptcha import crecaptcha\nSECRET_KEY = 'Your secret key'\n\ndef some_function():\n    response_token = 'the response token from the client'\n    \n    if crecaptcha(SECRET_KEY, response_token, 'action_name'):\n        # safe action\n        pass\n    else:\n        # is a bot, take your custom action.\n        pass\n ```\n \n      \n## how to use with django?\n### Configuration:\nIn the settings.py define the following values:  \n **CRECAPTCHA_SECRET_KEY**: the recaptcha secret key.   \n **CRECAPTCHA_KEY_NAME**: the name of the var in the POST request, by default is 'recaptcha_token'.    \n Example:\n ```python\nCRECAPTCHA_SECRET_KEY = \"jgjdnvurmfj3nrfo3nrlksjf\" # Mandatory\nCRECAPTCHA_KEY_NAME = \"grecatpcha\" # by default is 'recaptcha_token'\n ```\n \n### Usage:\n#### Simple way:\nIn the following example if the recaptcha validation fails, it will raise an HttpResponseForbidden\n```python\nfrom crecatpcha.django_crecatpcha import crecaptcha\n\n@crecaptcha('login')\ndef login_user(request):\n    pass\n    \n@crecaptcha('register', threshold=0.6)\ndef register_user(request):\n    pass\n    \n```\n\n#### Advance way:\nYou can define your custom callback when the validations fails, an optionally you can send args & kwargs.\n\n```python\nfrom crecatpcha.django_crecatpcha import crecaptcha\n\ndef register_user_on_crecaptcha_error(request, *args, **kwargs):\n    pass\n    \n@crecaptcha('register', register_user_on_crecaptcha_error, args_on_error=[], kwargs_on_error={})    \ndef register_user(request):\n    pass\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cristiansteib/crecaptcha/", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "crecaptcha", "package_url": "https://pypi.org/project/crecaptcha/", "platform": "", "project_url": "https://pypi.org/project/crecaptcha/", "project_urls": {"Homepage": "https://github.com/cristiansteib/crecaptcha/"}, "release_url": "https://pypi.org/project/crecaptcha/0.1.32/", "requires_dist": null, "requires_python": "", "summary": "reCatpcha api v3.0 - with django support", "version": "0.1.32", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>crecaptcha</h1>\n<h6>A simple python module for  Google Recaptcha V3</h6>\n<p>A pure python module, don't requires requests library</p>\n<h2>Installation</h2>\n<ul>\n<li>from latest version on PyPi:\n<pre>pip install crecaptcha\n</pre>\n</li>\n</ul>\n<h2>how to use?</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">crecatpcha.crecaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">crecaptcha</span>\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'Your secret key'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"n\">response_token</span> <span class=\"o\">=</span> <span class=\"s1\">'the response token from the client'</span>\n    \n    <span class=\"k\">if</span> <span class=\"n\">crecaptcha</span><span class=\"p\">(</span><span class=\"n\">SECRET_KEY</span><span class=\"p\">,</span> <span class=\"n\">response_token</span><span class=\"p\">,</span> <span class=\"s1\">'action_name'</span><span class=\"p\">):</span>\n        <span class=\"c1\"># safe action</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># is a bot, take your custom action.</span>\n        <span class=\"k\">pass</span>\n</pre>\n<h2>how to use with django?</h2>\n<h3>Configuration:</h3>\n<p>In the settings.py define the following values:<br>\n<strong>CRECAPTCHA_SECRET_KEY</strong>: the recaptcha secret key.<br>\n<strong>CRECAPTCHA_KEY_NAME</strong>: the name of the var in the POST request, by default is 'recaptcha_token'.<br>\nExample:</p>\n<pre><span class=\"n\">CRECAPTCHA_SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"jgjdnvurmfj3nrfo3nrlksjf\"</span> <span class=\"c1\"># Mandatory</span>\n<span class=\"n\">CRECAPTCHA_KEY_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"grecatpcha\"</span> <span class=\"c1\"># by default is 'recaptcha_token'</span>\n</pre>\n<h3>Usage:</h3>\n<h4>Simple way:</h4>\n<p>In the following example if the recaptcha validation fails, it will raise an HttpResponseForbidden</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">crecatpcha.django_crecatpcha</span> <span class=\"kn\">import</span> <span class=\"n\">crecaptcha</span>\n\n<span class=\"nd\">@crecaptcha</span><span class=\"p\">(</span><span class=\"s1\">'login'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">login_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n    \n<span class=\"nd\">@crecaptcha</span><span class=\"p\">(</span><span class=\"s1\">'register'</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.6</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">register_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n    \n</pre>\n<h4>Advance way:</h4>\n<p>You can define your custom callback when the validations fails, an optionally you can send args &amp; kwargs.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">crecatpcha.django_crecatpcha</span> <span class=\"kn\">import</span> <span class=\"n\">crecaptcha</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">register_user_on_crecaptcha_error</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n    \n<span class=\"nd\">@crecaptcha</span><span class=\"p\">(</span><span class=\"s1\">'register'</span><span class=\"p\">,</span> <span class=\"n\">register_user_on_crecaptcha_error</span><span class=\"p\">,</span> <span class=\"n\">args_on_error</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">kwargs_on_error</span><span class=\"o\">=</span><span class=\"p\">{})</span>    \n<span class=\"k\">def</span> <span class=\"nf\">register_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 4384494, "releases": {"0.1.31": [{"comment_text": "", "digests": {"md5": "1fef81c550748339cc45c94a60497891", "sha256": "94ae70fae0241159ab130bd1d53b4060a558583affd2c7e68cd4db8bcee098e2"}, "downloads": -1, "filename": "crecaptcha-0.1.31.tar.gz", "has_sig": false, "md5_digest": "1fef81c550748339cc45c94a60497891", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7086, "upload_time": "2018-10-16T23:46:51", "upload_time_iso_8601": "2018-10-16T23:46:51.135242Z", "url": "https://files.pythonhosted.org/packages/3a/0e/cb97d5694adc9c7cf0d0b60dc175990b09ae1cf0b3035f488437b7eb975f/crecaptcha-0.1.31.tar.gz", "yanked": false}], "0.1.32": [{"comment_text": "", "digests": {"md5": "e13648d639bb5a5f525cea3cfb877000", "sha256": "832f84305c26ca2f370f85a0f3a6513a794240a113697a870e08428508d0641d"}, "downloads": -1, "filename": "crecaptcha-0.1.32.tar.gz", "has_sig": false, "md5_digest": "e13648d639bb5a5f525cea3cfb877000", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7120, "upload_time": "2018-10-17T00:18:54", "upload_time_iso_8601": "2018-10-17T00:18:54.833348Z", "url": "https://files.pythonhosted.org/packages/db/d8/4b975cc0b846b5b5ad504539cbb534ef5ee3c161db949a625a8773e5f789/crecaptcha-0.1.32.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e13648d639bb5a5f525cea3cfb877000", "sha256": "832f84305c26ca2f370f85a0f3a6513a794240a113697a870e08428508d0641d"}, "downloads": -1, "filename": "crecaptcha-0.1.32.tar.gz", "has_sig": false, "md5_digest": "e13648d639bb5a5f525cea3cfb877000", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7120, "upload_time": "2018-10-17T00:18:54", "upload_time_iso_8601": "2018-10-17T00:18:54.833348Z", "url": "https://files.pythonhosted.org/packages/db/d8/4b975cc0b846b5b5ad504539cbb534ef5ee3c161db949a625a8773e5f789/crecaptcha-0.1.32.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:22 2020"}