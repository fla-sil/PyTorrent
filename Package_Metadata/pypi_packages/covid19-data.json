{"info": {"author": "Taylor Dettling", "author_email": "taylor@binarynightowl.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development"], "description": "# COVID19-Data\n![Build Status](https://github.com/binarynightowl/covid19_python/workflows/Build%20Status/badge.svg)\n<img alt=\"GitHub issues\" src=\"https://img.shields.io/github/issues/binarynightowl/covid19_python\">\n<img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/covid19-data?logo=python\">\n<img alt=\"GitHub release (latest by date)\" src=\"https://img.shields.io/github/v/release/binarynightowl/covid19_python?logo=github\">\n<img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/covid19-data?label=PyPi&logo=PyPi\">\n<img alt=\"GitHub release (latest by date including pre-releases)\" src=\"https://img.shields.io/github/v/release/binarynightowl/covid19_python?include_prereleases&label=pre-release&logo=github\">\n\n## Overview\ncovid19-data is a powerful and easy to use Python client for getting COVID-19 data (*see sources below\nfor more information on how data is obtained*)\n* Uses a fast method of getting data\n    * Does not rely on scraping sites, parsing files, or getting (old) data from a repository, so you do not depend on the \n    repository being updated to get up to date data\n* Very fast and responsive\n    * The client only gets the data once, and parses it into a search friendly format in the backend, so once the data is \n    loaded ( *~* 1 second ), data for the World or any Country/State can be retrieved instantly\n* User friendly and simple to implement into your application\n* Very flexible and will return the data in multiple forms (*read documentation section for more info*)\n    * Can return a object with the data as attributes\n    * Can return a JSON document\n* Super simplistic and lightweight and does not rely on any external python packages\n\n\n## Installing\ncovid19-data can be installed with [pip](https://pypi.org/project/covid19-data/):\n```\n$ pip install covid19-data\n```\nAlternatively, you can grab the latest source code from [GitHub](https://github.com/binarynightowl/covid19_python):\n```\n$ git clone git://github.com/binarynightowl/covid19_python\n$ python setup.py install\n```\n\n\n# Documentation\n\n## Usage\nThere are two ways of getting data with covid19-data\n1. As an object with attributes of COVID data\n    * Get the data by name (*note: spacing and capitalization do not matter, EX: `total = covid19_data.dataByName(\"New \n    York\")`, \n    `total = covid19_data.dataByName(\"newyork\")`, and `total = covid19_data.dataByName(\"NEW YORK\")` are all interchangable*)\n        ```python\n        import covid19_data\n\n        # example of how to get data by name\n        # .dataByName([string of item to find: any state, country, or total amount (spacing and capitalization do not matter)])\n        # object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered\n\n        total = covid19_data.dataByName(\"Total\")    # create an object for our total data\n        china = covid19_data.dataByName(\"China\")\n        US = covid19_data.dataByName(\"US\")\n        new_york = covid19_data.dataByName(\"NewYork\")\n        print(total.deaths, china.recovered, US.cases)\n        ```\n        This should print something similar to:\n        ```\n        22184 74181 69246\n        ```\n    * Get the data by abbreviation (*note: spacing and capitalization do not matter, EX: `total = covid19_data.dataByName(\"New \n    York\")`, \n    `total = covid19_data.dataByName(\"newyork\")`, and `total = covid19_data.dataByName(\"NEW YORK\")` are all interchangable*)\n        ```python\n        import covid19_data        \n\n        # example of how to get data by abbreviated name\n        # .dataByNameShort([two letter string of item you want to find, can be any state])\n        # object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered\n\n        texas = covid19_data.dataByNameShort(\"TX\")    # create an object for our total data\n        california = covid19_data.dataByNameShort(\"CA\")\n        new_york = covid19_data.dataByNameShort(\"NY\")\n        print(texas.cases, california.deaths, new_york.cases)\n        ```\n        This should print something similar to:\n        ```\n        1353 67 33033\n        ```\n2. As a JSON document \n    * Get the json by name (*note: spacing and capitalization do not matter, EX: `total = covid19_data.dataByName(\"New \n    York\")`, \n    `total = covid19_data.dataByName(\"newyork\")`, and `total = covid19_data.dataByName(\"NEW YORK\")` are all interchangable*)\n        ```python\n        import covid19_data\n\n        # example of how to get json by name\n        # .jsonByName([string of item you want to find, can be any state, country, or total amount (spacing and capitalization do not matter)])\n        # object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered\n\n        total = covid19_data.jsonByName(\"Total\")    # create an object for our total data\n        china = covid19_data.jsonByName(\"China\")\n        US = covid19_data.jsonByName(\"US\")\n        new_york = covid19_data.jsonByName(\"NewYork\")\n        print(total, china, US, new_york)\n        ```\n        This should print something similar to:\n        ```\n        {'Confirmed': 492603, 'Deaths': 22184, 'Recovered': 119918}\n        {'Confirmed': 81782, 'Deaths': 3291, 'Recovered': 74181, 'Active': 4310}\n        {'Confirmed': 69246, 'Deaths': 1046, 'Recovered': 619, 'Active': 0}\n        {'Confirmed': 33033, 'Deaths': 366, 'Recovered': 0, 'Active': 0}\n        ```\n    * Get the json by abbreviation (*note: spacing and capitalization do not matter, EX: `total = covid19_data.dataByName(\"New \n    York\")`, \n    `total = covid19_data.dataByName(\"newyork\")`, and `total = covid19_data.dataByName(\"NEW YORK\")` are all interchangable*)\n        ```python\n        import covid19_data\n\n        # example of how to get json by abbreviated name\n        # .jsonByNameShort([two letter string of item you want to find, can be any state])\n        # object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered\n\n        texas = covid19_data.jsonByNameShort(\"TX\")    # create an object for our total data\n        california = covid19_data.jsonByNameShort(\"CA\")\n        new_york = covid19_data.jsonByNameShort(\"NY\")\n        print(texas, california, new_york)\n        ```\n        This should print something similar to:\n        ```\n        {'Confirmed': 1353, 'Deaths': 17, 'Recovered': 0, 'Active': 0}\n        {'Confirmed': 3172, 'Deaths': 67, 'Recovered': 0, 'Active': 0}\n        {'Confirmed': 33033, 'Deaths': 366, 'Recovered': 0, 'Active': 0}\n        ```\n\n#### Sources\nThis project utilizes [John Hopkins University](https://coronavirus.jhu.edu/map.html)'s \n[ArcGIS data layer](https://services1.arcgis.com/0MSEUqKaxRlEPj5g/ArcGIS/rest/services/ncov_cases/FeatureServer) \nto get its data. Please follow their terms of service and licensing when using their data in your application. The data layer \npulls data from the \nfollowing sources:\n- [World Health Organization (WHO)](https://www.who.int/)\n- [DXY.cn. Pneumonia. 2020.](http://3g.dxy.cn/newh5/view/pneumonia)\n- [BNO News](https://bnonews.com/index.php/2020/02/the-latest-coronavirus-cases/)\n- [National Health Commission of the People\u2019s Republic of China (NHC)](http://www.nhc.gov.cn/xcs/yqtb/list_gzbd.shtml)\n- [China CDC (CCDC)](http://weekly.chinacdc.cn/news/TrackingtheEpidemic.htm)\n- [Hong Kong Department of Health](https://www.chp.gov.hk/en/features/102465.html)\n- [Macau Government](https://www.ssm.gov.mo/portal/)\n- [Taiwan CDC](https://sites.google.com/cdc.gov.tw/2019ncov/taiwan?authuser=0)\n- [US CDC](https://www.cdc.gov/coronavirus/2019-ncov/index.html)\n- [Government of Canada](https://www.canada.ca/en/public-health/services/diseases/coronavirus.html)\n- [Australia Government Department of Health](https://www.health.gov.au/news/coronavirus-update-at-a-glance)\n- [European Centre for Disease Prevention and Control (ECDC)](https://www.ecdc.europa.eu/en/geographical-distribution-2019-ncov-cases)\n- [Ministry of Health Singapore (MOH)](https://www.moh.gov.sg/covid-19)\n- [Italy Ministry of Health](http://www.salute.gov.it/nuovocoronavirus)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/binarynightowl/covid19_python", "keywords": "covid covid-19 corona coronavirus query hopkins python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "covid19-data", "package_url": "https://pypi.org/project/covid19-data/", "platform": "", "project_url": "https://pypi.org/project/covid19-data/", "project_urls": {"Homepage": "http://github.com/binarynightowl/covid19_python"}, "release_url": "https://pypi.org/project/covid19-data/1.0.1/", "requires_dist": null, "requires_python": ">=3", "summary": "A fast, powerful, and flexible way to get up to date COVID-19 data for any major city, state, country, and total world wide data", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>COVID19-Data</h1>\n<p><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/908ba515e05ef6b016bcef9b9b86eb42d8efcc48/68747470733a2f2f6769746875622e636f6d2f62696e6172796e696768746f776c2f636f76696431395f707974686f6e2f776f726b666c6f77732f4275696c642532305374617475732f62616467652e737667\">\n<img alt=\"GitHub issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f532823ce56dba7d88f8774f493d290b1c2a8975/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f62696e6172796e696768746f776c2f636f76696431395f707974686f6e\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7ea2862a9ecb8c0baee0865fdc367d9632d664c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f76696431392d646174613f6c6f676f3d707974686f6e\">\n<img alt=\"GitHub release (latest by date)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14b1f85307910a0a9fd4dd9d005a1988711acc05/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f62696e6172796e696768746f776c2f636f76696431395f707974686f6e3f6c6f676f3d676974687562\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/083aab9a52843cfe905f4403923f23656ba6edc7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f76696431392d646174613f6c6162656c3d50795069266c6f676f3d50795069\">\n<img alt=\"GitHub release (latest by date including pre-releases)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45f41c8eef6bf1a9a49013a5e93ded6a1ab97b52/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f62696e6172796e696768746f776c2f636f76696431395f707974686f6e3f696e636c7564655f70726572656c6561736573266c6162656c3d7072652d72656c65617365266c6f676f3d676974687562\"></p>\n<h2>Overview</h2>\n<p>covid19-data is a powerful and easy to use Python client for getting COVID-19 data (<em>see sources below\nfor more information on how data is obtained</em>)</p>\n<ul>\n<li>Uses a fast method of getting data\n<ul>\n<li>Does not rely on scraping sites, parsing files, or getting (old) data from a repository, so you do not depend on the\nrepository being updated to get up to date data</li>\n</ul>\n</li>\n<li>Very fast and responsive\n<ul>\n<li>The client only gets the data once, and parses it into a search friendly format in the backend, so once the data is\nloaded ( <em>~</em> 1 second ), data for the World or any Country/State can be retrieved instantly</li>\n</ul>\n</li>\n<li>User friendly and simple to implement into your application</li>\n<li>Very flexible and will return the data in multiple forms (<em>read documentation section for more info</em>)\n<ul>\n<li>Can return a object with the data as attributes</li>\n<li>Can return a JSON document</li>\n</ul>\n</li>\n<li>Super simplistic and lightweight and does not rely on any external python packages</li>\n</ul>\n<h2>Installing</h2>\n<p>covid19-data can be installed with <a href=\"https://pypi.org/project/covid19-data/\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>$ pip install covid19-data\n</code></pre>\n<p>Alternatively, you can grab the latest source code from <a href=\"https://github.com/binarynightowl/covid19_python\" rel=\"nofollow\">GitHub</a>:</p>\n<pre><code>$ git clone git://github.com/binarynightowl/covid19_python\n$ python setup.py install\n</code></pre>\n<h1>Documentation</h1>\n<h2>Usage</h2>\n<p>There are two ways of getting data with covid19-data</p>\n<ol>\n<li>As an object with attributes of COVID data\n<ul>\n<li>Get the data by name (<em>note: spacing and capitalization do not matter, EX: <code>total = covid19_data.dataByName(\"New York\")</code>,\n<code>total = covid19_data.dataByName(\"newyork\")</code>, and <code>total = covid19_data.dataByName(\"NEW YORK\")</code> are all interchangable</em>)\n<pre><span class=\"kn\">import</span> <span class=\"nn\">covid19_data</span>\n\n<span class=\"c1\"># example of how to get data by name</span>\n<span class=\"c1\"># .dataByName([string of item to find: any state, country, or total amount (spacing and capitalization do not matter)])</span>\n<span class=\"c1\"># object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered</span>\n\n<span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByName</span><span class=\"p\">(</span><span class=\"s2\">\"Total\"</span><span class=\"p\">)</span>    <span class=\"c1\"># create an object for our total data</span>\n<span class=\"n\">china</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByName</span><span class=\"p\">(</span><span class=\"s2\">\"China\"</span><span class=\"p\">)</span>\n<span class=\"n\">US</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByName</span><span class=\"p\">(</span><span class=\"s2\">\"US\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_york</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByName</span><span class=\"p\">(</span><span class=\"s2\">\"NewYork\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">.</span><span class=\"n\">deaths</span><span class=\"p\">,</span> <span class=\"n\">china</span><span class=\"o\">.</span><span class=\"n\">recovered</span><span class=\"p\">,</span> <span class=\"n\">US</span><span class=\"o\">.</span><span class=\"n\">cases</span><span class=\"p\">)</span>\n</pre>\nThis should print something similar to:\n<pre><code>22184 74181 69246\n</code></pre>\n</li>\n<li>Get the data by abbreviation (<em>note: spacing and capitalization do not matter, EX: <code>total = covid19_data.dataByName(\"New York\")</code>,\n<code>total = covid19_data.dataByName(\"newyork\")</code>, and <code>total = covid19_data.dataByName(\"NEW YORK\")</code> are all interchangable</em>)\n<pre><span class=\"kn\">import</span> <span class=\"nn\">covid19_data</span>        \n\n<span class=\"c1\"># example of how to get data by abbreviated name</span>\n<span class=\"c1\"># .dataByNameShort([two letter string of item you want to find, can be any state])</span>\n<span class=\"c1\"># object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered</span>\n\n<span class=\"n\">texas</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByNameShort</span><span class=\"p\">(</span><span class=\"s2\">\"TX\"</span><span class=\"p\">)</span>    <span class=\"c1\"># create an object for our total data</span>\n<span class=\"n\">california</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByNameShort</span><span class=\"p\">(</span><span class=\"s2\">\"CA\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_york</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">dataByNameShort</span><span class=\"p\">(</span><span class=\"s2\">\"NY\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">texas</span><span class=\"o\">.</span><span class=\"n\">cases</span><span class=\"p\">,</span> <span class=\"n\">california</span><span class=\"o\">.</span><span class=\"n\">deaths</span><span class=\"p\">,</span> <span class=\"n\">new_york</span><span class=\"o\">.</span><span class=\"n\">cases</span><span class=\"p\">)</span>\n</pre>\nThis should print something similar to:\n<pre><code>1353 67 33033\n</code></pre>\n</li>\n</ul>\n</li>\n<li>As a JSON document\n<ul>\n<li>Get the json by name (<em>note: spacing and capitalization do not matter, EX: <code>total = covid19_data.dataByName(\"New York\")</code>,\n<code>total = covid19_data.dataByName(\"newyork\")</code>, and <code>total = covid19_data.dataByName(\"NEW YORK\")</code> are all interchangable</em>)\n<pre><span class=\"kn\">import</span> <span class=\"nn\">covid19_data</span>\n\n<span class=\"c1\"># example of how to get json by name</span>\n<span class=\"c1\"># .jsonByName([string of item you want to find, can be any state, country, or total amount (spacing and capitalization do not matter)])</span>\n<span class=\"c1\"># object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered</span>\n\n<span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByName</span><span class=\"p\">(</span><span class=\"s2\">\"Total\"</span><span class=\"p\">)</span>    <span class=\"c1\"># create an object for our total data</span>\n<span class=\"n\">china</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByName</span><span class=\"p\">(</span><span class=\"s2\">\"China\"</span><span class=\"p\">)</span>\n<span class=\"n\">US</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByName</span><span class=\"p\">(</span><span class=\"s2\">\"US\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_york</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByName</span><span class=\"p\">(</span><span class=\"s2\">\"NewYork\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">,</span> <span class=\"n\">china</span><span class=\"p\">,</span> <span class=\"n\">US</span><span class=\"p\">,</span> <span class=\"n\">new_york</span><span class=\"p\">)</span>\n</pre>\nThis should print something similar to:\n<pre><code>{'Confirmed': 492603, 'Deaths': 22184, 'Recovered': 119918}\n{'Confirmed': 81782, 'Deaths': 3291, 'Recovered': 74181, 'Active': 4310}\n{'Confirmed': 69246, 'Deaths': 1046, 'Recovered': 619, 'Active': 0}\n{'Confirmed': 33033, 'Deaths': 366, 'Recovered': 0, 'Active': 0}\n</code></pre>\n</li>\n<li>Get the json by abbreviation (<em>note: spacing and capitalization do not matter, EX: <code>total = covid19_data.dataByName(\"New York\")</code>,\n<code>total = covid19_data.dataByName(\"newyork\")</code>, and <code>total = covid19_data.dataByName(\"NEW YORK\")</code> are all interchangable</em>)\n<pre><span class=\"kn\">import</span> <span class=\"nn\">covid19_data</span>\n\n<span class=\"c1\"># example of how to get json by abbreviated name</span>\n<span class=\"c1\"># .jsonByNameShort([two letter string of item you want to find, can be any state])</span>\n<span class=\"c1\"># object has three useful attributes: .deaths, .cases (.confirmed also works), and .recovered</span>\n\n<span class=\"n\">texas</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByNameShort</span><span class=\"p\">(</span><span class=\"s2\">\"TX\"</span><span class=\"p\">)</span>    <span class=\"c1\"># create an object for our total data</span>\n<span class=\"n\">california</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByNameShort</span><span class=\"p\">(</span><span class=\"s2\">\"CA\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_york</span> <span class=\"o\">=</span> <span class=\"n\">covid19_data</span><span class=\"o\">.</span><span class=\"n\">jsonByNameShort</span><span class=\"p\">(</span><span class=\"s2\">\"NY\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">texas</span><span class=\"p\">,</span> <span class=\"n\">california</span><span class=\"p\">,</span> <span class=\"n\">new_york</span><span class=\"p\">)</span>\n</pre>\nThis should print something similar to:\n<pre><code>{'Confirmed': 1353, 'Deaths': 17, 'Recovered': 0, 'Active': 0}\n{'Confirmed': 3172, 'Deaths': 67, 'Recovered': 0, 'Active': 0}\n{'Confirmed': 33033, 'Deaths': 366, 'Recovered': 0, 'Active': 0}\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n<h4>Sources</h4>\n<p>This project utilizes <a href=\"https://coronavirus.jhu.edu/map.html\" rel=\"nofollow\">John Hopkins University</a>'s\n<a href=\"https://services1.arcgis.com/0MSEUqKaxRlEPj5g/ArcGIS/rest/services/ncov_cases/FeatureServer\" rel=\"nofollow\">ArcGIS data layer</a>\nto get its data. Please follow their terms of service and licensing when using their data in your application. The data layer\npulls data from the\nfollowing sources:</p>\n<ul>\n<li><a href=\"https://www.who.int/\" rel=\"nofollow\">World Health Organization (WHO)</a></li>\n<li><a href=\"http://3g.dxy.cn/newh5/view/pneumonia\" rel=\"nofollow\">DXY.cn. Pneumonia. 2020.</a></li>\n<li><a href=\"https://bnonews.com/index.php/2020/02/the-latest-coronavirus-cases/\" rel=\"nofollow\">BNO News</a></li>\n<li><a href=\"http://www.nhc.gov.cn/xcs/yqtb/list_gzbd.shtml\" rel=\"nofollow\">National Health Commission of the People\u2019s Republic of China (NHC)</a></li>\n<li><a href=\"http://weekly.chinacdc.cn/news/TrackingtheEpidemic.htm\" rel=\"nofollow\">China CDC (CCDC)</a></li>\n<li><a href=\"https://www.chp.gov.hk/en/features/102465.html\" rel=\"nofollow\">Hong Kong Department of Health</a></li>\n<li><a href=\"https://www.ssm.gov.mo/portal/\" rel=\"nofollow\">Macau Government</a></li>\n<li><a href=\"https://sites.google.com/cdc.gov.tw/2019ncov/taiwan?authuser=0\" rel=\"nofollow\">Taiwan CDC</a></li>\n<li><a href=\"https://www.cdc.gov/coronavirus/2019-ncov/index.html\" rel=\"nofollow\">US CDC</a></li>\n<li><a href=\"https://www.canada.ca/en/public-health/services/diseases/coronavirus.html\" rel=\"nofollow\">Government of Canada</a></li>\n<li><a href=\"https://www.health.gov.au/news/coronavirus-update-at-a-glance\" rel=\"nofollow\">Australia Government Department of Health</a></li>\n<li><a href=\"https://www.ecdc.europa.eu/en/geographical-distribution-2019-ncov-cases\" rel=\"nofollow\">European Centre for Disease Prevention and Control (ECDC)</a></li>\n<li><a href=\"https://www.moh.gov.sg/covid-19\" rel=\"nofollow\">Ministry of Health Singapore (MOH)</a></li>\n<li><a href=\"http://www.salute.gov.it/nuovocoronavirus\" rel=\"nofollow\">Italy Ministry of Health</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6889299, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c5fb158cd7214881c90654094dc969b7", "sha256": "0402e075fa7b8a16c15633e3525bbbd5a3c4079978c6c912bcb39c103bbb65e5"}, "downloads": -1, "filename": "covid19_data-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5fb158cd7214881c90654094dc969b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1717, "upload_time": "2020-03-25T17:55:22", "upload_time_iso_8601": "2020-03-25T17:55:22.568095Z", "url": "https://files.pythonhosted.org/packages/a7/af/3daabe94bf992861808cd18baf9aa97c7a75057dd18ab371ab1a911b8960/covid19_data-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "263b52be1c290691fe7c158752c197f9", "sha256": "2de359f3bab5dd16253eaf0023a89c1460e1c510299ea7f4a11ae25e3a27a90a"}, "downloads": -1, "filename": "covid19-data-0.0.1.tar.gz", "has_sig": false, "md5_digest": "263b52be1c290691fe7c158752c197f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1381, "upload_time": "2020-03-25T17:55:24", "upload_time_iso_8601": "2020-03-25T17:55:24.877469Z", "url": "https://files.pythonhosted.org/packages/67/bf/978d0605ea8ac4a9497ea43fa24057cbb48c2910058f5c1db5b8931a7f89/covid19-data-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f8416f6b2ae8d4cb98aa76f48e41c2b0", "sha256": "99e352624f3c7e17b479cbaf8860600ace6b192bcd48b0340771a2783476e9e5"}, "downloads": -1, "filename": "covid19_data-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f8416f6b2ae8d4cb98aa76f48e41c2b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1767, "upload_time": "2020-03-25T18:39:58", "upload_time_iso_8601": "2020-03-25T18:39:58.132154Z", "url": "https://files.pythonhosted.org/packages/e9/2e/e5396bb5ae32730343829003394099bfe78cc3c48b725dab6266a60a91f9/covid19_data-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d5ec3ec63b9be6220ca471084078362", "sha256": "0974671688ecb041234b6fd5de6d53825546bcf33fd933d5967c5eeaca5b8dc4"}, "downloads": -1, "filename": "covid19-data-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8d5ec3ec63b9be6220ca471084078362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1442, "upload_time": "2020-03-25T18:39:59", "upload_time_iso_8601": "2020-03-25T18:39:59.158467Z", "url": "https://files.pythonhosted.org/packages/6b/82/b82231d5bc61d2d38fccb1a322a9af969e55ae31756df790f8b11dd43007/covid19-data-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "bc1801a3e9d159a51458857dfbdab182", "sha256": "b7206110a01b023464704acb638bc97f6749a38bc44b2186c0c99b6cb99b1c5a"}, "downloads": -1, "filename": "covid19_data-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bc1801a3e9d159a51458857dfbdab182", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1760, "upload_time": "2020-03-25T18:55:55", "upload_time_iso_8601": "2020-03-25T18:55:55.808093Z", "url": "https://files.pythonhosted.org/packages/36/d5/ef4b8eb14568541cf1db3cec5a8a3de2cec03f889ee2238b0a81b294740b/covid19_data-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe4363e22cc04bbdc235936d51123b4d", "sha256": "2e4cd2837e5621d96f33c14d84a65059d030353ed37a3d3d310eaf66070f55a1"}, "downloads": -1, "filename": "covid19-data-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fe4363e22cc04bbdc235936d51123b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1487, "upload_time": "2020-03-25T18:55:57", "upload_time_iso_8601": "2020-03-25T18:55:57.155441Z", "url": "https://files.pythonhosted.org/packages/95/4c/ccbcb67c487e778be3b9241cd95a467e60442dd63c1bd769fc2516607f8f/covid19-data-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6fc3d2306a03e8a563d336d690c7517e", "sha256": "f31f00b8ba9b6c51fcbc6bd364c1246274025f18313dc049a2f8fbacdec88219"}, "downloads": -1, "filename": "covid19_data-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6fc3d2306a03e8a563d336d690c7517e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1928, "upload_time": "2020-03-25T19:11:11", "upload_time_iso_8601": "2020-03-25T19:11:11.278783Z", "url": "https://files.pythonhosted.org/packages/47/ae/65f44412ecd15f7b68611db2fa885daf1b8844d876f20729348196fbd749/covid19_data-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae571999434126367679e6deb2accea2", "sha256": "ea4ee871f3b64ef854e7d670bf1ffadce6c6ed6e64ec94adbce3a602a67cbe88"}, "downloads": -1, "filename": "covid19-data-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ae571999434126367679e6deb2accea2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1490, "upload_time": "2020-03-25T19:11:15", "upload_time_iso_8601": "2020-03-25T19:11:15.795355Z", "url": "https://files.pythonhosted.org/packages/a7/6f/f4fe1459db9bcaedddb826b314d94e1f026a70d90e5f58a03f2a18a81645/covid19-data-0.0.4.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "548fe076f58fe38b467056f97852175d", "sha256": "6870a11427b93a1f9e9c141578c1b7af686129a4a4da42e6504b65b5651ef72b"}, "downloads": -1, "filename": "covid19_data-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "548fe076f58fe38b467056f97852175d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5521, "upload_time": "2020-03-26T03:25:41", "upload_time_iso_8601": "2020-03-26T03:25:41.975878Z", "url": "https://files.pythonhosted.org/packages/c6/3a/322418ebac54837d49e5e6eba07b07887432ca077337d456691d57c38301/covid19_data-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd03e7377bb8c92184f2246da39f9ea7", "sha256": "c35cc374df7d43fe63eb86740dbcafedd5f8e7cb0d9b1b3ff282317c9f0a4584"}, "downloads": -1, "filename": "covid19-data-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cd03e7377bb8c92184f2246da39f9ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6098, "upload_time": "2020-03-26T03:25:43", "upload_time_iso_8601": "2020-03-26T03:25:43.008305Z", "url": "https://files.pythonhosted.org/packages/8e/c7/198b0524c36cd6425e4979d811f104bc3de66fd956e3b096fd1e22b47b53/covid19-data-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "113c94e8c1b0922d45dd9cdddb502cbd", "sha256": "0eb01545e029fd322fb0bb2fe5d00a36a27c4344d8876ee204533433db6a7a2a"}, "downloads": -1, "filename": "covid19_data-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "113c94e8c1b0922d45dd9cdddb502cbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5559, "upload_time": "2020-03-26T03:45:48", "upload_time_iso_8601": "2020-03-26T03:45:48.595287Z", "url": "https://files.pythonhosted.org/packages/24/4f/860daff49efcfa700f8d0ed114ee44fa934cd4af82d5d7aeed57f22fc920/covid19_data-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91c1566a8f46a071baccbd6138834c54", "sha256": "49a5da139ad1ec3bae5e39778381f9eaded4b725d0f26200163204f8b86dfbeb"}, "downloads": -1, "filename": "covid19-data-0.1.4.tar.gz", "has_sig": false, "md5_digest": "91c1566a8f46a071baccbd6138834c54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6088, "upload_time": "2020-03-26T03:45:49", "upload_time_iso_8601": "2020-03-26T03:45:49.808267Z", "url": "https://files.pythonhosted.org/packages/ba/0b/aa883f954278ab28c0ee1639a4d825f80f948a1916c8d4be6ded71239eaa/covid19-data-0.1.4.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "41d1ffc40ff0f4e13d6712769a6eb4d9", "sha256": "c876b50fbcd70262dd24f6c07916f9053cc3416b7930320dcb2a47de33bb6abc"}, "downloads": -1, "filename": "covid19_data-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "41d1ffc40ff0f4e13d6712769a6eb4d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7901, "upload_time": "2020-03-26T04:40:17", "upload_time_iso_8601": "2020-03-26T04:40:17.201208Z", "url": "https://files.pythonhosted.org/packages/81/26/e85f70ff0fa770749c7ba96001ec0281ba740f97f85df67f998dc204a59f/covid19_data-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4093a657c304d706771b037d585889d", "sha256": "57e2d9390a03803dd4b63e61e013e75f0fdda64c6435eeed86c5f2b7b2c9ac69"}, "downloads": -1, "filename": "covid19-data-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c4093a657c304d706771b037d585889d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6593, "upload_time": "2020-03-26T04:40:18", "upload_time_iso_8601": "2020-03-26T04:40:18.469027Z", "url": "https://files.pythonhosted.org/packages/15/5a/19c957b1eaf1d5f447b89c91b35a1b951e042703717fa2c18294ebfc5bdf/covid19-data-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "67f19b6f90b82527c3d62caadd1870d0", "sha256": "6ffffb265159b0294dd5d3bf638fef9257270fbc284c9737e0901a0e660a25c5"}, "downloads": -1, "filename": "covid19_data-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "67f19b6f90b82527c3d62caadd1870d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8029, "upload_time": "2020-03-26T04:58:29", "upload_time_iso_8601": "2020-03-26T04:58:29.640966Z", "url": "https://files.pythonhosted.org/packages/a3/51/a9374e9effd204d30ef559be2480787ba8e5438f28c478d7990324e87f88/covid19_data-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "faa475a95e71a0ad3a7f412e7de58336", "sha256": "fa01913646ee846ae68254af0d7530c929911b1d9971fd6066be65c8f942bf3f"}, "downloads": -1, "filename": "covid19-data-0.1.7.tar.gz", "has_sig": false, "md5_digest": "faa475a95e71a0ad3a7f412e7de58336", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6774, "upload_time": "2020-03-26T04:58:30", "upload_time_iso_8601": "2020-03-26T04:58:30.743146Z", "url": "https://files.pythonhosted.org/packages/59/4a/dda21c3f857c69c967dbbdb6d35b8b0460905b3fd4fb0d330810e093d214/covid19-data-0.1.7.tar.gz", "yanked": false}], "0.1.7a1": [{"comment_text": "", "digests": {"md5": "8edecbc25a19a558703f8b48c1fccc7d", "sha256": "c584d5121e2a19e51259ca82d0050862e20a937a15f51b267100d0f40181c10c"}, "downloads": -1, "filename": "covid19_data-0.1.7a1-py3-none-any.whl", "has_sig": false, "md5_digest": "8edecbc25a19a558703f8b48c1fccc7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8048, "upload_time": "2020-03-26T04:55:35", "upload_time_iso_8601": "2020-03-26T04:55:35.031507Z", "url": "https://files.pythonhosted.org/packages/c9/7c/1c0e07baf0ae49bbea53110f254910534733e6ba287a53694f94c7b27c5f/covid19_data-0.1.7a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17f12b7d7b6c4eee59bbd20f32b6557e", "sha256": "bf241ba6385ced8891291f739bb1e8fa1499f1fc5e2ac71fa86bd4e98f54ee68"}, "downloads": -1, "filename": "covid19-data-0.1.7a1.tar.gz", "has_sig": false, "md5_digest": "17f12b7d7b6c4eee59bbd20f32b6557e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6767, "upload_time": "2020-03-26T04:55:36", "upload_time_iso_8601": "2020-03-26T04:55:36.371337Z", "url": "https://files.pythonhosted.org/packages/33/03/927c22ed4de8af347d3fca8f3ea5282af220904856da610dbd6551dd5c39/covid19-data-0.1.7a1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "88073e36ad9b4dbe8f431f940ea11fca", "sha256": "b47155cb0979837b0357b759739de1632bea2eb4af25c47c0a4f6d5c00d6e673"}, "downloads": -1, "filename": "covid19_data-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88073e36ad9b4dbe8f431f940ea11fca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10061, "upload_time": "2020-03-26T16:13:18", "upload_time_iso_8601": "2020-03-26T16:13:18.181914Z", "url": "https://files.pythonhosted.org/packages/26/cb/5915641ab74663d417480f945c417dc4ea7e64a16b62087a902ea9b12c54/covid19_data-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33995afa5a8c2e93a650c63a3823f87c", "sha256": "57d82996e548049a5c628c4677e25ca8b6dd7283391055106134f30d22f558f0"}, "downloads": -1, "filename": "covid19-data-1.0.0.tar.gz", "has_sig": false, "md5_digest": "33995afa5a8c2e93a650c63a3823f87c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11730, "upload_time": "2020-03-26T16:13:19", "upload_time_iso_8601": "2020-03-26T16:13:19.410908Z", "url": "https://files.pythonhosted.org/packages/d2/00/cecdeb2f31698962197f430d4386ad13868f94bdc9761480a8034724c3b8/covid19-data-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9aa30a6ce2279451f7b24753d90a2bfd", "sha256": "29172511d293939a88a2dc150e6d5283c5cd4bd10cab3f001851dd599c08255c"}, "downloads": -1, "filename": "covid19_data-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9aa30a6ce2279451f7b24753d90a2bfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10141, "upload_time": "2020-03-26T16:23:57", "upload_time_iso_8601": "2020-03-26T16:23:57.311394Z", "url": "https://files.pythonhosted.org/packages/36/b3/f4b1512f179a2868dcd6987849d0eb28a1c9eb578481bb9386f0b40ad600/covid19_data-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f0cce68ea1cb81fbeec23dfb111129d", "sha256": "d5d6b82e0cebc4330c49971c703f4791ea6f536ddddde22c74546465ffa1986b"}, "downloads": -1, "filename": "covid19-data-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2f0cce68ea1cb81fbeec23dfb111129d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11836, "upload_time": "2020-03-26T16:23:58", "upload_time_iso_8601": "2020-03-26T16:23:58.848432Z", "url": "https://files.pythonhosted.org/packages/cb/a3/af4476f45b179c1f7be6568214682cc0bee7ae06ac654f240709998a72ad/covid19-data-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9aa30a6ce2279451f7b24753d90a2bfd", "sha256": "29172511d293939a88a2dc150e6d5283c5cd4bd10cab3f001851dd599c08255c"}, "downloads": -1, "filename": "covid19_data-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9aa30a6ce2279451f7b24753d90a2bfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10141, "upload_time": "2020-03-26T16:23:57", "upload_time_iso_8601": "2020-03-26T16:23:57.311394Z", "url": "https://files.pythonhosted.org/packages/36/b3/f4b1512f179a2868dcd6987849d0eb28a1c9eb578481bb9386f0b40ad600/covid19_data-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f0cce68ea1cb81fbeec23dfb111129d", "sha256": "d5d6b82e0cebc4330c49971c703f4791ea6f536ddddde22c74546465ffa1986b"}, "downloads": -1, "filename": "covid19-data-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2f0cce68ea1cb81fbeec23dfb111129d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11836, "upload_time": "2020-03-26T16:23:58", "upload_time_iso_8601": "2020-03-26T16:23:58.848432Z", "url": "https://files.pythonhosted.org/packages/cb/a3/af4476f45b179c1f7be6568214682cc0bee7ae06ac654f240709998a72ad/covid19-data-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:46 2020"}