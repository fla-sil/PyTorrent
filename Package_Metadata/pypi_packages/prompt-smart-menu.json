{"info": {"author": "Yesha", "author_email": "valetudinarygoat@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development"], "description": "=======================\nPython Prompt SmartMenu\n=======================\n\n`prompt_smart_menu` is a library for building command line menus for terminal applications \nin Python. It allows you to create a multi-tiered argument parsing menu for executing\ndifferent subcommands of a command line application.\n\nRead the `documentation on readthedocs\n<http://python-prompt-smart-menu.readthedocs.io/en/latest/>`_.\n\n\nDescription\n===========\n\nThis library is designed around parsing a command string, not command line arguments. That is,\nit is intended to be used inside a python application using an ``input()`` type interface.\n\nFor command line arguments passed to the python script, a library such as argparse would be \nbetter suited. Though this library could be used for such purpose.\n\nThough not required, this library was designed to augment the \n`auto-completion <https://python-prompt-toolkit.readthedocs.io/en/stable/pages/asking_for_input.html#nested-completion>`__ \nfeature of `Python Prompt Toolkit`_. The `prompt_toolkit` library is very powerful, check it out!\n\n\nFeatures\n========\n\n- **Declarative interface** (That's why I built this :] )\n- Integration with `prompt_toolkit auto-completion <https://python-prompt-toolkit.readthedocs.io/en/stable/pages/asking_for_input.html#nested-completion>`__\n- Support for python keyword arguments.\n- Different parsers for type casting arguments (e.g. numbers).\n- Ability to build custom argument parser.\n- Argument validation for endpoint functions.\n- Flexibility to mix options (e.g. parsers) for different subcommands.\n- No dependencies, though `prompt_toolkit` highly recommended.\n\n\nInstallation\n============\n\n::\n\n    pip install prompt_smart_menu\n\n\nGetting started\n===============\n\nSee documentation on `readthedocs <http://python-prompt-smart-menu.readthedocs.io/en/latest/>`_.\n\n\n.. _Python Prompt Toolkit: https://python-prompt-toolkit.readthedocs.io/en/stable/index.html\n\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/future-cyborg/python-prompt-smart-menu/", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "prompt-smart-menu", "package_url": "https://pypi.org/project/prompt-smart-menu/", "platform": "any", "project_url": "https://pypi.org/project/prompt-smart-menu/", "project_urls": {"Documentation": "https://python-prompt-smart-menu.readthedocs.io/en/latest/", "Homepage": "https://github.com/future-cyborg/python-prompt-smart-menu/"}, "release_url": "https://pypi.org/project/prompt-smart-menu/0.1/", "requires_dist": ["pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": ">=3.6", "summary": "Library for building command line menus in Python", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>prompt_smart_menu</cite> is a library for building command line menus for terminal applications\nin Python. It allows you to create a multi-tiered argument parsing menu for executing\ndifferent subcommands of a command line application.</p>\n<p>Read the <a href=\"http://python-prompt-smart-menu.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation on readthedocs</a>.</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>This library is designed around parsing a command string, not command line arguments. That is,\nit is intended to be used inside a python application using an <tt>input()</tt> type interface.</p>\n<p>For command line arguments passed to the python script, a library such as argparse would be\nbetter suited. Though this library could be used for such purpose.</p>\n<p>Though not required, this library was designed to augment the\n<a href=\"https://python-prompt-toolkit.readthedocs.io/en/stable/pages/asking_for_input.html#nested-completion\" rel=\"nofollow\">auto-completion</a>\nfeature of <a href=\"https://python-prompt-toolkit.readthedocs.io/en/stable/index.html\" rel=\"nofollow\">Python Prompt Toolkit</a>. The <cite>prompt_toolkit</cite> library is very powerful, check it out!</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><strong>Declarative interface</strong> (That\u2019s why I built this :] )</li>\n<li>Integration with <a href=\"https://python-prompt-toolkit.readthedocs.io/en/stable/pages/asking_for_input.html#nested-completion\" rel=\"nofollow\">prompt_toolkit auto-completion</a></li>\n<li>Support for python keyword arguments.</li>\n<li>Different parsers for type casting arguments (e.g. numbers).</li>\n<li>Ability to build custom argument parser.</li>\n<li>Argument validation for endpoint functions.</li>\n<li>Flexibility to mix options (e.g. parsers) for different subcommands.</li>\n<li>No dependencies, though <cite>prompt_toolkit</cite> highly recommended.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install prompt_smart_menu\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>See documentation on <a href=\"http://python-prompt-smart-menu.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7020944, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0a6f423493d2270e1bac18b30b94586a", "sha256": "2817a3731baa6cba9ce21880771838b697a02f58ca04f98a51e72e517732c11f"}, "downloads": -1, "filename": "prompt_smart_menu-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0a6f423493d2270e1bac18b30b94586a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9664, "upload_time": "2020-04-14T23:34:13", "upload_time_iso_8601": "2020-04-14T23:34:13.727608Z", "url": "https://files.pythonhosted.org/packages/f3/2b/fe7d34dd5ed067cec53354ba858dc2f19e63655c0ec9115745ce0f292094/prompt_smart_menu-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c7e9888fc99c956a5e278e4b36d0d5b", "sha256": "18511dd33583734132538b36cde6c95fab4bcaba57b39d4d4815960bc5883155"}, "downloads": -1, "filename": "prompt_smart_menu-0.1.tar.gz", "has_sig": false, "md5_digest": "0c7e9888fc99c956a5e278e4b36d0d5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32645, "upload_time": "2020-04-14T23:34:15", "upload_time_iso_8601": "2020-04-14T23:34:15.797991Z", "url": "https://files.pythonhosted.org/packages/b8/f1/b0290ca34206c72a03d4f4b929cf9bb87cf70be311c34a5eb2ac94481e1f/prompt_smart_menu-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a6f423493d2270e1bac18b30b94586a", "sha256": "2817a3731baa6cba9ce21880771838b697a02f58ca04f98a51e72e517732c11f"}, "downloads": -1, "filename": "prompt_smart_menu-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0a6f423493d2270e1bac18b30b94586a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9664, "upload_time": "2020-04-14T23:34:13", "upload_time_iso_8601": "2020-04-14T23:34:13.727608Z", "url": "https://files.pythonhosted.org/packages/f3/2b/fe7d34dd5ed067cec53354ba858dc2f19e63655c0ec9115745ce0f292094/prompt_smart_menu-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c7e9888fc99c956a5e278e4b36d0d5b", "sha256": "18511dd33583734132538b36cde6c95fab4bcaba57b39d4d4815960bc5883155"}, "downloads": -1, "filename": "prompt_smart_menu-0.1.tar.gz", "has_sig": false, "md5_digest": "0c7e9888fc99c956a5e278e4b36d0d5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32645, "upload_time": "2020-04-14T23:34:15", "upload_time_iso_8601": "2020-04-14T23:34:15.797991Z", "url": "https://files.pythonhosted.org/packages/b8/f1/b0290ca34206c72a03d4f4b929cf9bb87cf70be311c34a5eb2ac94481e1f/prompt_smart_menu-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:04 2020"}