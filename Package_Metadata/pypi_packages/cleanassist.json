{"info": {"author": "Juan Duran", "author_email": "juan.duran.info@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# Clean Assist\n\nClean Assist is a simple library designed to help data scientists observe a summary of any DataFrame they would like to clean.\nThis library also displays charts to view the normal approximation of your variables.<br>\n\n**Clean Assist is composed of 2 functions:**\n---------\n1. **clean_assist.table(df, n_rows, n_round)**<br><br>\n    Displays relevant features to help you on data cleaning and analysis.<br>\n    \n    ***Parameters***<br>\n    df  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   : DataFrame you would like to analyze<br>\n    n_rows &nbsp;&nbsp; : Number of variables to display<br>\n    n_round &nbsp; :  Number of decimals to round calculations<br><br>\n2. ***clean_assist.normality(df, list_var, print_img, size_x, size_y, font_size)***<br><br>\n    Displays histograms to compare the your variables to a normal distribution.<br>\n    \n    ***Parameters***<br>\n    df  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   : DataFrame you would like to analyze<br>\n    list_var &nbsp;&nbsp; : Name of columns to analyze in a list format<br>\n    print_img &nbsp;&nbsp; : input 'y' to print image or 'n' to not print<br>\n    size_x &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :  width of the image output<br>\n    size_y &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :  height of the image output<br>\n    font_size &nbsp;&nbsp; :  font size of the titles and headers<br>\n\n### To import the library: copy paste the green colored code to your python code:\n```diff\n- Note: Delete the plus(+) signs after pasting code\n```\n```diff\n+ import requests\n+ url = 'https://raw.githubusercontent.com/juanduranc/Clean-Assist/master/library'\n+ exec(requests.get(url).text)\n+ help(clean_assist)\n```\n\n<!DOCTYPE html>\n<html>\n<body>\n\n<h3>Example of library usage and interpretation:</h3>\n1. The following table is a sample of an output form the function: clean_assist.table(df, n_rows, n_round)<br><br>\n\n<table>\n     <tr>\n      <th>VARIABLES</th>\n      <th>NULLS</th>\n      <th>COUNT</th>\n      <th>TYPES</th>\n      <th>MEAN</th>\n      <th>MEDIAN</th>\n      <th>UNIQUES</th>\n      <th>SAMPLE_________________________________</th>\n      <th>Outliers</th>\n      <th>pval(Norm)</th>\n    </tr>\n    <tr height=\"20\">\n      <td>AVG_CLICKS_PER_VISIT</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>int64</td>\n      <td>13.5</td>\n      <td>13.0</td>\n      <td>15</td>\n      <td>[11, 13, 12, 13, 13, 17, 10, 13, 12, 12]</td>\n      <td>[6,0]</td>\n      <td>0.03</td>\n    </tr>\n    <tr>\n      <td>MEDIAN_MEAL_RATING</td>\n      <td>47</td>\n      <td>1899</td>\n      <td>int64</td>\n      <td>2.8</td>\n      <td>3.0</td>\n      <td>5</td>\n      <td>[3, 3, 3, 3, 3, 2, 4, 3, 3, 3]</td>\n      <td>[0,13]</td>\n      <td>3e-06</td>\n    </tr>\n    <tr>\n      <td>REVENUE</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>float64</td>\n      <td>2107.3</td>\n      <td>1740.0</td>\n      <td>859</td>\n      <td>[1880, 1495, 2572.5, 1647, 1923, 1250]</td>\n      <td>[0,82]</td>\n      <td>1e-21</td>\n    </tr>\n    <tr>\n      <td>TOTAL_PHOTOS_VIEWED</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>int64</td>\n      <td>106.4</td>\n      <td>0.0</td>\n      <td>371</td>\n      <td>[0, 90, 0, 0, 253, 0, 705, 0, 0, 0]</td>\n      <td>[0,120]</td>\n      <td>5e-90</td>\n    </tr>\n      <td>CROSS_SELL_SUCCESS</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>int64</td>\n      <td>0.7</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>[1, 1, 1, 0, 1, 1, 0, 1, 1, 1]</td>\n      <td></td>\n      <td>1e-159</td>\n</table><br>\nExamples of findings:<br>\n<ul>\n  <li>AVG_CLICKS_PER_VISIT has a similar mean and mean, it aproximates a normal distribution and has 6 lower outliers.</li>\n  <li>MEDIAN_MEAL_RATING has 47 nulls which need imputation.</li>\n  <li>Revenue is the only float variables, the rest are integer.</li>\n  <li>TOTAL_PHOTOS_VIEWED has a median of 0 and 120 upper outliers. This means most people dont look view photos.</li>\n  <li>CROSS_SELL_SUCCESS has 2 unique values. From the column named sample you can see only ones and zeros. This is a binary or boolean column.</li>\n</ul>\n<br>\n2. Next, a sample output from the function: clean_assist.normality(df, list_var, print_img, size_x, size_y, font_size)<br><br>\n<img src=\"https://raw.githubusercontent.com/juanduranc/Clean-Assist/master/normality.png\" />\n<br>\nHistograms' interpretation:<br>\n<ul>\n  <li>MEDIAN_MEAL_RATING has interger values and it mimisc a normal distribution.</li>\n  <li>AVG_CLICKS_PER_VISIT is the colsest variable to a normal distribution with a p value of 0.03.</li>\n  <li>REVENUE is right skewed with 82 upper outliers.</li>\n  <li>TOTAL_PHOTOS_VIEWED has too many zero values. It is also right skewed and far from being a normal distribution.</li>\n</ul>\n</body>\n</html>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/juanduranc/Clean-Assist", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cleanassist", "package_url": "https://pypi.org/project/cleanassist/", "platform": "", "project_url": "https://pypi.org/project/cleanassist/", "project_urls": {"Homepage": "https://github.com/juanduranc/Clean-Assist"}, "release_url": "https://pypi.org/project/cleanassist/1.3.4/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "clean_assist is a simple library designed to help data scientists observe a descriptive summary of their DataFrame", "version": "1.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Clean Assist</h1>\n<p>Clean Assist is a simple library designed to help data scientists observe a summary of any DataFrame they would like to clean.\nThis library also displays charts to view the normal approximation of your variables.<br></p>\n<h2><strong>Clean Assist is composed of 2 functions:</strong></h2>\n<ol>\n<li>\n<p><strong>clean_assist.table(df, n_rows, n_round)</strong><br><br>\nDisplays relevant features to help you on data cleaning and analysis.<br></p>\n<p><em><strong>Parameters</strong></em><br>\ndf  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   : DataFrame you would like to analyze<br>\nn_rows \u00a0\u00a0 : Number of variables to display<br>\nn_round \u00a0 :  Number of decimals to round calculations<br><br></p>\n</li>\n<li>\n<p>***clean_assist.normality(df, list_var, print_img, size_x, size_y, font_size)***<br><br>\nDisplays histograms to compare the your variables to a normal distribution.<br></p>\n<p><em><strong>Parameters</strong></em><br>\ndf  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   : DataFrame you would like to analyze<br>\nlist_var \u00a0\u00a0 : Name of columns to analyze in a list format<br>\nprint_img \u00a0\u00a0 : input 'y' to print image or 'n' to not print<br>\nsize_x \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 :  width of the image output<br>\nsize_y \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 :  height of the image output<br>\nfont_size \u00a0\u00a0 :  font size of the titles and headers<br></p>\n</li>\n</ol>\n<h3>To import the library: copy paste the green colored code to your python code:</h3>\n<pre><span class=\"gd\">- Note: Delete the plus(+) signs after pasting code</span>\n</pre>\n<pre><span class=\"gi\">+ import requests</span>\n<span class=\"gi\">+ url = 'https://raw.githubusercontent.com/juanduranc/Clean-Assist/master/library'</span>\n<span class=\"gi\">+ exec(requests.get(url).text)</span>\n<span class=\"gi\">+ help(clean_assist)</span>\n</pre>\n\n&lt;html&gt;\n&lt;body&gt;\n<h3>Example of library usage and interpretation:</h3>\n1. The following table is a sample of an output form the function: clean_assist.table(df, n_rows, n_round)<br><br>\n<table>\n     <tr>\n      <th>VARIABLES</th>\n      <th>NULLS</th>\n      <th>COUNT</th>\n      <th>TYPES</th>\n      <th>MEAN</th>\n      <th>MEDIAN</th>\n      <th>UNIQUES</th>\n      <th>SAMPLE_________________________________</th>\n      <th>Outliers</th>\n      <th>pval(Norm)</th>\n    </tr>\n    <tr>\n      <td>AVG_CLICKS_PER_VISIT</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>int64</td>\n      <td>13.5</td>\n      <td>13.0</td>\n      <td>15</td>\n      <td>[11, 13, 12, 13, 13, 17, 10, 13, 12, 12]</td>\n      <td>[6,0]</td>\n      <td>0.03</td>\n    </tr>\n    <tr>\n      <td>MEDIAN_MEAL_RATING</td>\n      <td>47</td>\n      <td>1899</td>\n      <td>int64</td>\n      <td>2.8</td>\n      <td>3.0</td>\n      <td>5</td>\n      <td>[3, 3, 3, 3, 3, 2, 4, 3, 3, 3]</td>\n      <td>[0,13]</td>\n      <td>3e-06</td>\n    </tr>\n    <tr>\n      <td>REVENUE</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>float64</td>\n      <td>2107.3</td>\n      <td>1740.0</td>\n      <td>859</td>\n      <td>[1880, 1495, 2572.5, 1647, 1923, 1250]</td>\n      <td>[0,82]</td>\n      <td>1e-21</td>\n    </tr>\n    <tr>\n      <td>TOTAL_PHOTOS_VIEWED</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>int64</td>\n      <td>106.4</td>\n      <td>0.0</td>\n      <td>371</td>\n      <td>[0, 90, 0, 0, 253, 0, 705, 0, 0, 0]</td>\n      <td>[0,120]</td>\n      <td>5e-90</td>\n    </tr>\n      <tr><td>CROSS_SELL_SUCCESS</td>\n      <td>0</td>\n      <td>1946</td>\n      <td>int64</td>\n      <td>0.7</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>[1, 1, 1, 0, 1, 1, 0, 1, 1, 1]</td>\n      <td></td>\n      <td>1e-159</td>\n</tr></table><br>\nExamples of findings:<br>\n<ul>\n  <li>AVG_CLICKS_PER_VISIT has a similar mean and mean, it aproximates a normal distribution and has 6 lower outliers.</li>\n  <li>MEDIAN_MEAL_RATING has 47 nulls which need imputation.</li>\n  <li>Revenue is the only float variables, the rest are integer.</li>\n  <li>TOTAL_PHOTOS_VIEWED has a median of 0 and 120 upper outliers. This means most people dont look view photos.</li>\n  <li>CROSS_SELL_SUCCESS has 2 unique values. From the column named sample you can see only ones and zeros. This is a binary or boolean column.</li>\n</ul>\n<br>\n2. Next, a sample output from the function: clean_assist.normality(df, list_var, print_img, size_x, size_y, font_size)<br><br>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e475970e23d9fad08e672256b12c9fc6bd6ac103/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6a75616e647572616e632f436c65616e2d4173736973742f6d61737465722f6e6f726d616c6974792e706e67\">\n<br>\nHistograms' interpretation:<br>\n<ul>\n  <li>MEDIAN_MEAL_RATING has interger values and it mimisc a normal distribution.</li>\n  <li>AVG_CLICKS_PER_VISIT is the colsest variable to a normal distribution with a p value of 0.03.</li>\n  <li>REVENUE is right skewed with 82 upper outliers.</li>\n  <li>TOTAL_PHOTOS_VIEWED has too many zero values. It is also right skewed and far from being a normal distribution.</li>\n</ul>\n&lt;/body&gt;\n&lt;/html&gt;\n\n          </div>"}, "last_serial": 6650474, "releases": {"1.3.4": [{"comment_text": "", "digests": {"md5": "911ec0f6026f93fef59a1fe7c49836a9", "sha256": "ace10a0d3b3d5191502289899f3831476c24331d1b394aaa777e4e74037d9d7e"}, "downloads": -1, "filename": "cleanassist-1.3.4.tar.gz", "has_sig": false, "md5_digest": "911ec0f6026f93fef59a1fe7c49836a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5213, "upload_time": "2020-02-18T02:41:17", "upload_time_iso_8601": "2020-02-18T02:41:17.304247Z", "url": "https://files.pythonhosted.org/packages/e0/3c/5b9dbf213d7bf58c96607fa14ba0f6c198eecee4b3f7fa88dcf4bce10c7b/cleanassist-1.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "911ec0f6026f93fef59a1fe7c49836a9", "sha256": "ace10a0d3b3d5191502289899f3831476c24331d1b394aaa777e4e74037d9d7e"}, "downloads": -1, "filename": "cleanassist-1.3.4.tar.gz", "has_sig": false, "md5_digest": "911ec0f6026f93fef59a1fe7c49836a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5213, "upload_time": "2020-02-18T02:41:17", "upload_time_iso_8601": "2020-02-18T02:41:17.304247Z", "url": "https://files.pythonhosted.org/packages/e0/3c/5b9dbf213d7bf58c96607fa14ba0f6c198eecee4b3f7fa88dcf4bce10c7b/cleanassist-1.3.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:06 2020"}