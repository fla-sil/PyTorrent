{"info": {"author": "Milan Oberkirch | geOps", "author_email": "milan.oberkirch@geops.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "Tool for dumping VDV 451 data into a database\n---------------------------------------------\n\nThis is intended to quickly analyze the content of a collection of VDV files in\nthe VDV 451 format. By running this script a new schema is created and filled\nwith one table per inuput file. Some known primary key mappings are used, you\ncan add more using a config-file (see `development.ini.dist` for an example).\n\nAfter dumping the data a SQL script `apply_constraints.sql` is run with the\nnew schema. It sets foreign keys and indices. You may want to modify that to\nfit your needs (some errors are to be expected if you didn't create all tabels\nreferenced there).\n\n\n### Installation\n\n    pip install vdv2pg\n\n\n### Usage\n\n    usage: vdv2pg [-h] [--schema SCHEMA] [-c CONFIG]\n                    [--post_ingest_script POST_INGEST_SCRIPT]\n                    database_url input_file [input_file ...]\n\n    positional arguments:\n      database_url          Database to write to.\n      input_file            Files to read data from\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --schema SCHEMA       Schema to create tables in (default: vdv2pg)\n      -c CONFIG, --config_file CONFIG\n                            Optional primary key and logging configuration\n      --post_ingest_script POST_INGEST_SCRIPT\n                            Optional path to an alternative post-ingest SQL script\n\nExample:\n\n    vdv2pg --schema import01 postgresql:///vdv_imports *.X10\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/geops/vdv2pg", "keywords": "vdv2pg sql database", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vdv2pg", "package_url": "https://pypi.org/project/vdv2pg/", "platform": "", "project_url": "https://pypi.org/project/vdv2pg/", "project_urls": {"Homepage": "https://github.com/geops/vdv2pg"}, "release_url": "https://pypi.org/project/vdv2pg/0.0.2/", "requires_dist": ["SQLAlchemy (==1.2.15)", "psycopg2-binary (==2.7.6.1)"], "requires_python": "", "summary": "Import VDV 451 files into a database", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Tool for dumping VDV 451 data into a database</h2>\n<p>This is intended to quickly analyze the content of a collection of VDV files in\nthe VDV 451 format. By running this script a new schema is created and filled\nwith one table per inuput file. Some known primary key mappings are used, you\ncan add more using a config-file (see <code>development.ini.dist</code> for an example).</p>\n<p>After dumping the data a SQL script <code>apply_constraints.sql</code> is run with the\nnew schema. It sets foreign keys and indices. You may want to modify that to\nfit your needs (some errors are to be expected if you didn't create all tabels\nreferenced there).</p>\n<h3>Installation</h3>\n<pre><code>pip install vdv2pg\n</code></pre>\n<h3>Usage</h3>\n<pre><code>usage: vdv2pg [-h] [--schema SCHEMA] [-c CONFIG]\n                [--post_ingest_script POST_INGEST_SCRIPT]\n                database_url input_file [input_file ...]\n\npositional arguments:\n  database_url          Database to write to.\n  input_file            Files to read data from\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --schema SCHEMA       Schema to create tables in (default: vdv2pg)\n  -c CONFIG, --config_file CONFIG\n                        Optional primary key and logging configuration\n  --post_ingest_script POST_INGEST_SCRIPT\n                        Optional path to an alternative post-ingest SQL script\n</code></pre>\n<p>Example:</p>\n<pre><code>vdv2pg --schema import01 postgresql:///vdv_imports *.X10\n</code></pre>\n\n          </div>"}, "last_serial": 4620710, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "20fd4368a2f24a4e2d9531b83690665e", "sha256": "2eeffaf7219b5f9cd50387c52ee067ec3c4236fa18409cb24dc14348e770fc9e"}, "downloads": -1, "filename": "vdv2pg-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "20fd4368a2f24a4e2d9531b83690665e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7233, "upload_time": "2018-12-19T09:06:23", "upload_time_iso_8601": "2018-12-19T09:06:23.647832Z", "url": "https://files.pythonhosted.org/packages/85/3d/f9d0edaf62eef1ce0b70acc741ca24621e9e2679db1552e760277b6e4f02/vdv2pg-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e4609b379b67fc52c3e42989787021e", "sha256": "b86ebf244c0daf210ff59953bb59b3b9a5d2e7b89cc353a79efd6dfa0d49542d"}, "downloads": -1, "filename": "vdv2pg-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9e4609b379b67fc52c3e42989787021e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2018-12-19T09:06:25", "upload_time_iso_8601": "2018-12-19T09:06:25.681846Z", "url": "https://files.pythonhosted.org/packages/1b/9c/edf0624ef2c99ef0d85534df82796d91cc343a4784f23fb2b5fb8063fe6d/vdv2pg-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ba860d10c4a4f5f185521d0e6a1f5d82", "sha256": "fb12fa5f3225c44accd1ba5098b0755eb5642bf9f3e14303a1be6d18cd913f8b"}, "downloads": -1, "filename": "vdv2pg-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ba860d10c4a4f5f185521d0e6a1f5d82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7335, "upload_time": "2018-12-20T12:56:58", "upload_time_iso_8601": "2018-12-20T12:56:58.884691Z", "url": "https://files.pythonhosted.org/packages/9f/bb/be3a76c08d544a10e53b8c16944f123777f151642eec459af88fe21f1f13/vdv2pg-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d36d0548cea4e675e809e4cf8e72ecf", "sha256": "393380cf32435e97052fe3a603441a5bd0094be7b6f57e7a1ee57b189aeae494"}, "downloads": -1, "filename": "vdv2pg-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9d36d0548cea4e675e809e4cf8e72ecf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5483, "upload_time": "2018-12-20T12:57:00", "upload_time_iso_8601": "2018-12-20T12:57:00.777239Z", "url": "https://files.pythonhosted.org/packages/0c/1b/bd752c29ddd42212a5dfae3255b66070241847b2d43a56b6dca1ddf16c9e/vdv2pg-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba860d10c4a4f5f185521d0e6a1f5d82", "sha256": "fb12fa5f3225c44accd1ba5098b0755eb5642bf9f3e14303a1be6d18cd913f8b"}, "downloads": -1, "filename": "vdv2pg-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ba860d10c4a4f5f185521d0e6a1f5d82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7335, "upload_time": "2018-12-20T12:56:58", "upload_time_iso_8601": "2018-12-20T12:56:58.884691Z", "url": "https://files.pythonhosted.org/packages/9f/bb/be3a76c08d544a10e53b8c16944f123777f151642eec459af88fe21f1f13/vdv2pg-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d36d0548cea4e675e809e4cf8e72ecf", "sha256": "393380cf32435e97052fe3a603441a5bd0094be7b6f57e7a1ee57b189aeae494"}, "downloads": -1, "filename": "vdv2pg-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9d36d0548cea4e675e809e4cf8e72ecf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5483, "upload_time": "2018-12-20T12:57:00", "upload_time_iso_8601": "2018-12-20T12:57:00.777239Z", "url": "https://files.pythonhosted.org/packages/0c/1b/bd752c29ddd42212a5dfae3255b66070241847b2d43a56b6dca1ddf16c9e/vdv2pg-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:16 2020"}