{"info": {"author": "Arman Noroozian", "author_email": "arman.noroozian.developer@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Security", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pysbw\n=====\n\nPython 3 implementation of the\n`Stopbadware <https://www.stopbadware.org/>`\n`Private API <https://stopbadware.atlassian.net/wiki/display/apidocs/StopBadware+API+Documentation+Home>`.\nIn its current form it only implements downloading of events from a specific timestamps, IP addresses and searching based\non timestamps.\n\nHow To Use\n----------\n\n::\n\n    import pysbw\n    import time\n\n    api = pysbw.API('~/.stopbadware.key')\n\n    # Retrieve event reports for past 24 hours using UNIX style timestamp\n    json_response = api.retrieve(int(time.time()) - 24 * 3600)\n\n    # Retrieve event report with report UID\n    json_response = api.retrieve(\"564f2c78e4b0a131f050f844\")\n                      \n    # Retrieve event reports for past 24 hours using search functionality\n    end = int(time.time())\n    json_response = self.api.search_between(end - 24 * 3600, end)\n\nInstalliation\n-------------\n\n::\n\n    pip3 install pysbw --pre\n\nExample Key File\n----------------\n\n::\n\n    [sbw]\n    apikey=<String of private key>\n    publickey=<String of public key>\n\nInstantiation\n-------------\n\n::\n\n    api = pysbw.API('~/.virustotal.key')  # The default way of using the \n    api = pysbw.API('', private_api_key=<PRIVATE API KEY>, public_api_key=<PUBLIC API KEY>)  # Providing other parameters\n    api = pysbw.API( ... , max_retires=<N: Number>)  # If specified the API will only retry <N> times to get the response\n    api = pysbw.API( ... , rate_limit={\"requests\": 40, \"seconds\": 300})  # The rate limits for the number of queries to the API\n\n\nAPI\n---\n\nUse the method ***retrieve()*** to get Reports. This method's first\nargument can be:\n\n-  a UNIX style timestamp in UTC to retrieve reports since that\n   timestamp\n-  an IP address in DOT notation such as '8.8.8.8' to retrieve all\n   reports relating to IP address\n-  an event report UID which is a 24 digit hex number.\n\nretrieve() will attempt to auto-detect what you're giving it. If you\nwant to be explicit, you can use the thing\\_type parameter with the\nvalues:\n\n-  ip\n-  timestamp\n-  uid\n\nThese values are provided as constants that you can use instead in the\n'API\\_Constans' class which you can import as follows\n\n::\n\n    from pysbw import API_Constansts\n\nUse the method ***search\\_between()*** to search for events between two\ntimestamp values.\n\nReferences\n----------\n`SBW API Documentation <https://stopbadware.atlassian.net/wiki/display/apidocs/StopBadware+API+Documentation+Home>`.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/arman_noroozian/pysbw", "keywords": "stopbadware api download", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pysbw", "package_url": "https://pypi.org/project/pysbw/", "platform": "", "project_url": "https://pypi.org/project/pysbw/", "project_urls": {"Homepage": "https://bitbucket.org/arman_noroozian/pysbw"}, "release_url": "https://pypi.org/project/pysbw/0.1a10/", "requires_dist": null, "requires_python": "", "summary": "Python API Implementation for Accessing Stopbadware Data Feed", "version": "0.1a10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python 3 implementation of the\n<cite>Stopbadware &lt;https://www.stopbadware.org/&gt;</cite>\n<cite>Private API &lt;https://stopbadware.atlassian.net/wiki/display/apidocs/StopBadware+API+Documentation+Home&gt;</cite>.\nIn its current form it only implements downloading of events from a specific timestamps, IP addresses and searching based\non timestamps.</p>\n<div id=\"how-to-use\">\n<h2>How To Use</h2>\n<pre>import pysbw\nimport time\n\napi = pysbw.API('~/.stopbadware.key')\n\n# Retrieve event reports for past 24 hours using UNIX style timestamp\njson_response = api.retrieve(int(time.time()) - 24 * 3600)\n\n# Retrieve event report with report UID\njson_response = api.retrieve(\"564f2c78e4b0a131f050f844\")\n\n# Retrieve event reports for past 24 hours using search functionality\nend = int(time.time())\njson_response = self.api.search_between(end - 24 * 3600, end)\n</pre>\n</div>\n<div id=\"installiation\">\n<h2>Installiation</h2>\n<pre>pip3 install pysbw --pre\n</pre>\n</div>\n<div id=\"example-key-file\">\n<h2>Example Key File</h2>\n<pre>[sbw]\napikey=&lt;String of private key&gt;\npublickey=&lt;String of public key&gt;\n</pre>\n</div>\n<div id=\"instantiation\">\n<h2>Instantiation</h2>\n<pre>api = pysbw.API('~/.virustotal.key')  # The default way of using the\napi = pysbw.API('', private_api_key=&lt;PRIVATE API KEY&gt;, public_api_key=&lt;PUBLIC API KEY&gt;)  # Providing other parameters\napi = pysbw.API( ... , max_retires=&lt;N: Number&gt;)  # If specified the API will only retry &lt;N&gt; times to get the response\napi = pysbw.API( ... , rate_limit={\"requests\": 40, \"seconds\": 300})  # The rate limits for the number of queries to the API\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>Use the method <strong>*retrieve()*</strong> to get Reports. This method\u2019s first\nargument can be:</p>\n<ul>\n<li>a UNIX style timestamp in UTC to retrieve reports since that\ntimestamp</li>\n<li>an IP address in DOT notation such as \u20188.8.8.8\u2019 to retrieve all\nreports relating to IP address</li>\n<li>an event report UID which is a 24 digit hex number.</li>\n</ul>\n<p>retrieve() will attempt to auto-detect what you\u2019re giving it. If you\nwant to be explicit, you can use the thing_type parameter with the\nvalues:</p>\n<ul>\n<li>ip</li>\n<li>timestamp</li>\n<li>uid</li>\n</ul>\n<p>These values are provided as constants that you can use instead in the\n\u2018API_Constans\u2019 class which you can import as follows</p>\n<pre>from pysbw import API_Constansts\n</pre>\n<p>Use the method <strong>*search_between()*</strong> to search for events between two\ntimestamp values.</p>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<p><cite>SBW API Documentation &lt;https://stopbadware.atlassian.net/wiki/display/apidocs/StopBadware+API+Documentation+Home&gt;</cite>.</p>\n</div>\n\n          </div>"}, "last_serial": 2413308, "releases": {"0.1a10": [{"comment_text": "", "digests": {"md5": "e9958a3d05694f6e1a253f344f4d72f9", "sha256": "4c70e9f5a903cd3feaa5d08a5e979e321ea9232b343b1fdeb846dc5336203ab6"}, "downloads": -1, "filename": "pysbw-0.1a10.tar.gz", "has_sig": false, "md5_digest": "e9958a3d05694f6e1a253f344f4d72f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7219, "upload_time": "2016-10-20T16:41:46", "upload_time_iso_8601": "2016-10-20T16:41:46.444769Z", "url": "https://files.pythonhosted.org/packages/8a/35/ad080ddbe66a31023539ce5380989beaaf2201bf717b401bac751d6868a1/pysbw-0.1a10.tar.gz", "yanked": false}], "0.1a6": [{"comment_text": "", "digests": {"md5": "4a5993e31ea414c90be45021e8f581cf", "sha256": "77d3cedf6bcf4b432958434244d038381e97cbcc26b2f2fc44bd4002c01d944f"}, "downloads": -1, "filename": "pysbw-0.1a6.tar.gz", "has_sig": false, "md5_digest": "4a5993e31ea414c90be45021e8f581cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6927, "upload_time": "2015-11-23T13:08:48", "upload_time_iso_8601": "2015-11-23T13:08:48.803167Z", "url": "https://files.pythonhosted.org/packages/de/66/b1075c5a96ad2244c01e7c12d6a35f2831544128ea7b5e066b57d4b81fa2/pysbw-0.1a6.tar.gz", "yanked": false}], "0.1a7": [{"comment_text": "", "digests": {"md5": "d4cdf34877bd959ff676b5e417f7ae55", "sha256": "490b388ed5b199564ac986f19017c1d5d74ab2761dff97d7d77460f33c7361ce"}, "downloads": -1, "filename": "pysbw-0.1a7.tar.gz", "has_sig": false, "md5_digest": "d4cdf34877bd959ff676b5e417f7ae55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7170, "upload_time": "2015-11-23T14:52:49", "upload_time_iso_8601": "2015-11-23T14:52:49.481523Z", "url": "https://files.pythonhosted.org/packages/75/94/74e96ebe63f97283ffe6e45685716f5dc0d937af99a70be02a32a31f2ba5/pysbw-0.1a7.tar.gz", "yanked": false}], "0.1a8": [{"comment_text": "", "digests": {"md5": "fe9e5dd9b891fae06342dd2ab99eca10", "sha256": "c959c814a73f291de10568f608d504e2ab568baf2412aac433f22ab14f52d14b"}, "downloads": -1, "filename": "pysbw-0.1a8.tar.gz", "has_sig": false, "md5_digest": "fe9e5dd9b891fae06342dd2ab99eca10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7170, "upload_time": "2015-11-23T15:17:47", "upload_time_iso_8601": "2015-11-23T15:17:47.115448Z", "url": "https://files.pythonhosted.org/packages/11/fe/7184a8223e1f08e522022819974565b8d18e1fe31f0976bedf26f8733e3c/pysbw-0.1a8.tar.gz", "yanked": false}], "0.1a9": [{"comment_text": "", "digests": {"md5": "53715d05d556a0966558822d5d31a9d2", "sha256": "2ec01d8cb68c39ff9f98f67af30bf0a56f48d0cfc49dac468e13e4d072851010"}, "downloads": -1, "filename": "pysbw-0.1a9.tar.gz", "has_sig": false, "md5_digest": "53715d05d556a0966558822d5d31a9d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7166, "upload_time": "2016-10-20T16:29:25", "upload_time_iso_8601": "2016-10-20T16:29:25.991801Z", "url": "https://files.pythonhosted.org/packages/96/04/a23154c1069dd0f436c1697121ea2bcff8ded0787b76324fbf189ef10dc2/pysbw-0.1a9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9958a3d05694f6e1a253f344f4d72f9", "sha256": "4c70e9f5a903cd3feaa5d08a5e979e321ea9232b343b1fdeb846dc5336203ab6"}, "downloads": -1, "filename": "pysbw-0.1a10.tar.gz", "has_sig": false, "md5_digest": "e9958a3d05694f6e1a253f344f4d72f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7219, "upload_time": "2016-10-20T16:41:46", "upload_time_iso_8601": "2016-10-20T16:41:46.444769Z", "url": "https://files.pythonhosted.org/packages/8a/35/ad080ddbe66a31023539ce5380989beaaf2201bf717b401bac751d6868a1/pysbw-0.1a10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:22 2020"}