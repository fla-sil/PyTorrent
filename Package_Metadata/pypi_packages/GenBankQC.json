{"info": {"author": "Andrew Sanchez", "author_email": "inbox.asanchez@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": ".. image:: https://api.travis-ci.org/andrewsanchez/GenBankQC.svg?branch=master \n\n=============================================\n           GenBank Quality Control\n=============================================\n\nComplete documentation lives at `genbank-qc.readthedocs.io`_.  It is a work in progress.\n\nGenBankQC is an effort to address the quality control problem for public databases such as the National Center for Biotechnology Information's `GenBank`_.  The goal is to offer a simple, efficient, and automated solution for assessing the quality of your genomes.\n\nNote\n----\n\n    Please note that GenbankQC is currently in alpha.  As a proof of concept for a specific use case, it currently has limitations that users should be aware of.  If there is interest, we will address the issues to make it more convenient to use.  Please see `caveats <#caveats>`__ for more details.\n\n\nFeatures\n--------\n\n- Labelling/annotation-independent quality control based on:\n\n  -  Simple metrics\n\n  - Genome distance estimation using `MASH`_\n\n- Flag potential outliers to exclude them from polluting your pipelines\n\nThe genbankqc work-flow consists of the following steps:\n\n#. Generate statistics for each genome based on the following metrics:\n\n   * Number of unknown bases\n   * Number of contigs\n   * Assembly size\n   * Average `MASH`_ distance compared to other genomes\n\n#. Flag potential outliers based on these statistics:\n\n   * Flag genomes containing more than a certain number of unknown bases.\n\n   * Flag genomes outside of a range based on the median absolute deviation.\n\n     * Applies to number of contigs and assembly size\n\n   * Flag genomes whose `MASH`_ distance is greater than the upper end of the median absolute deviation.\n\n#. Visualize the results with a color coded tree\n\nUsage\n-----\n\n::\n\n    genbankqc /path/to/genomes\n    open /path/to/genomes/Escherichia_coli/qc/200_3.0_3.0_3.0/tree.svg\n\n\nInstallation\n------------\n\nIf you don't yet have a functional conda environment, please download and install `Miniconda`_.\n\n.. code::\n\n    conda create -n genbankqc -c etetoolkit -c biocore pip ete3 scikit-bio\n\n    source activate genbankqc\n\n    pip install genbankqc\n\n\n.. _caveats:\n\nCaveats\n--------\n\nThere are some arbitrary, hard-coded limitations regarding file names.  This is because the project originally began as a part of the NCBI Tool Kit (`NCBITK`_) which we use for downloading genomes from NCBI.  NCBITK generates a specific directory structure and file naming scheme which GenbankQC currently expects.\n\nIf you'd like to use GenBankQC without using NCBITK, all that is required is that your file names match the python regular expression ``re.compile('.*(GCA_\\d+\\.\\d.*)(.fasta)')``.  You can quickly test this by following my example at `pythex.org`_.\n\n.. _pythex.org: https://pythex.org/?regex=.*(GCA_%5Cd%2B%5C.%5Cd.*)(.fasta)&test_string=GCA_002415405.1_Acinetobacter_nosocomialis_UBA5139_Scaffold.fasta&ignorecase=0&multiline=0&dotall=0&verbose=0\n\n.. _NCBITK:  https://github.com/andrewsanchez/NCBITK\n.. _GenBank: https://www.ncbi.nlm.nih.gov/genbank/\n.. _ETE Toolkit: http://etetoolkit.org/ \n.. _Miniconda: https://conda.io/miniconda.html\n.. _MASH: http://mash.readthedocs.io/en/latest/\n.. _genbank-qc.readthedocs.io: http://genbank-qc.readthedocs.io/en/latest/\n\n.. image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square \n           :target: https://yangsu.github.io/pull-request-tutorial/\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andrewsanchez/genbankqc", "keywords": "NCBI bioinformatics genomics", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "GenBankQC", "package_url": "https://pypi.org/project/GenBankQC/", "platform": "", "project_url": "https://pypi.org/project/GenBankQC/", "project_urls": {"Homepage": "https://github.com/andrewsanchez/genbankqc"}, "release_url": "https://pypi.org/project/GenBankQC/0.2a0/", "requires_dist": null, "requires_python": "", "summary": "\"Automated quality control for GenBank genomes.\"", "version": "0.2a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://api.travis-ci.org/andrewsanchez/GenBankQC.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b926be2d9250b150209a3026426af257afaae50d/68747470733a2f2f6170692e7472617669732d63692e6f72672f616e6472657773616e6368657a2f47656e42616e6b51432e7376673f6272616e63683d6d6173746572\">\n<div id=\"genbank-quality-control\">\n<h2>GenBank Quality Control</h2>\n<p>Complete documentation lives at <a href=\"http://genbank-qc.readthedocs.io/en/latest/\" rel=\"nofollow\">genbank-qc.readthedocs.io</a>.  It is a work in progress.</p>\n<p>GenBankQC is an effort to address the quality control problem for public databases such as the National Center for Biotechnology Information\u2019s <a href=\"https://www.ncbi.nlm.nih.gov/genbank/\" rel=\"nofollow\">GenBank</a>.  The goal is to offer a simple, efficient, and automated solution for assessing the quality of your genomes.</p>\n<div id=\"note\">\n<h3>Note</h3>\n<blockquote>\nPlease note that GenbankQC is currently in alpha.  As a proof of concept for a specific use case, it currently has limitations that users should be aware of.  If there is interest, we will address the issues to make it more convenient to use.  Please see <a href=\"#caveats\" rel=\"nofollow\">caveats</a> for more details.</blockquote>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Labelling/annotation-independent quality control based on:<ul>\n<li>Simple metrics</li>\n<li>Genome distance estimation using <a href=\"http://mash.readthedocs.io/en/latest/\" rel=\"nofollow\">MASH</a></li>\n</ul>\n</li>\n<li>Flag potential outliers to exclude them from polluting your pipelines</li>\n</ul>\n<p>The genbankqc work-flow consists of the following steps:</p>\n<ol>\n<li>Generate statistics for each genome based on the following metrics:<ul>\n<li>Number of unknown bases</li>\n<li>Number of contigs</li>\n<li>Assembly size</li>\n<li>Average <a href=\"http://mash.readthedocs.io/en/latest/\" rel=\"nofollow\">MASH</a> distance compared to other genomes</li>\n</ul>\n</li>\n<li>Flag potential outliers based on these statistics:<ul>\n<li>Flag genomes containing more than a certain number of unknown bases.</li>\n<li>Flag genomes outside of a range based on the median absolute deviation.<ul>\n<li>Applies to number of contigs and assembly size</li>\n</ul>\n</li>\n<li>Flag genomes whose <a href=\"http://mash.readthedocs.io/en/latest/\" rel=\"nofollow\">MASH</a> distance is greater than the upper end of the median absolute deviation.</li>\n</ul>\n</li>\n<li>Visualize the results with a color coded tree</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre>genbankqc /path/to/genomes\nopen /path/to/genomes/Escherichia_coli/qc/200_3.0_3.0_3.0/tree.svg\n</pre>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>If you don\u2019t yet have a functional conda environment, please download and install <a href=\"https://conda.io/miniconda.html\" rel=\"nofollow\">Miniconda</a>.</p>\n<pre>conda create -n genbankqc -c etetoolkit -c biocore pip ete3 scikit-bio\n\nsource activate genbankqc\n\npip install genbankqc\n</pre>\n</div>\n<div id=\"id1\">\n<span id=\"caveats\"></span><h3>Caveats</h3>\n<p>There are some arbitrary, hard-coded limitations regarding file names.  This is because the project originally began as a part of the NCBI Tool Kit (<a href=\"https://github.com/andrewsanchez/NCBITK\" rel=\"nofollow\">NCBITK</a>) which we use for downloading genomes from NCBI.  NCBITK generates a specific directory structure and file naming scheme which GenbankQC currently expects.</p>\n<p>If you\u2019d like to use GenBankQC without using NCBITK, all that is required is that your file names match the python regular expression <tt><span class=\"pre\">re.compile('.*(GCA_\\d+\\.\\d.*)(.fasta)')</span></tt>.  You can quickly test this by following my example at <a href=\"https://pythex.org/?regex=.*(GCA_%5Cd%2B%5C.%5Cd.*)(.fasta)&amp;test_string=GCA_002415405.1_Acinetobacter_nosocomialis_UBA5139_Scaffold.fasta&amp;ignorecase=0&amp;multiline=0&amp;dotall=0&amp;verbose=0\" rel=\"nofollow\">pythex.org</a>.</p>\n<a href=\"https://yangsu.github.io/pull-request-tutorial/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8897c5f5e8a5eacb8ddf983bb640b73cc10464c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3404455, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "ef2e58193a7d0ae26dd8eaa12436f585", "sha256": "9d492b8199b62a5396006f8234cb88e89091cfc6123221e30242c2c51242a806"}, "downloads": -1, "filename": "GenBankQC-0.1a0.tar.gz", "has_sig": false, "md5_digest": "ef2e58193a7d0ae26dd8eaa12436f585", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11587, "upload_time": "2017-12-09T00:38:45", "upload_time_iso_8601": "2017-12-09T00:38:45.142614Z", "url": "https://files.pythonhosted.org/packages/ce/35/67c554d2f973ec6b67073043e008b821fb3d2083be393947998bb75cfc2e/GenBankQC-0.1a0.tar.gz", "yanked": false}], "0.2a0": [{"comment_text": "", "digests": {"md5": "142daca61f1e4119362fa97ca6fa5f44", "sha256": "f1aad07badc81af3a0b65c14d892fa8716ee8696263e6f99a5f795dd46038180"}, "downloads": -1, "filename": "GenBankQC-0.2a0.tar.gz", "has_sig": false, "md5_digest": "142daca61f1e4119362fa97ca6fa5f44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11777, "upload_time": "2017-12-10T00:58:14", "upload_time_iso_8601": "2017-12-10T00:58:14.585397Z", "url": "https://files.pythonhosted.org/packages/55/b8/f48c8cb01371078f0d8099eadc90fa27d3d65696c0edb7e87860c9e514b6/GenBankQC-0.2a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "142daca61f1e4119362fa97ca6fa5f44", "sha256": "f1aad07badc81af3a0b65c14d892fa8716ee8696263e6f99a5f795dd46038180"}, "downloads": -1, "filename": "GenBankQC-0.2a0.tar.gz", "has_sig": false, "md5_digest": "142daca61f1e4119362fa97ca6fa5f44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11777, "upload_time": "2017-12-10T00:58:14", "upload_time_iso_8601": "2017-12-10T00:58:14.585397Z", "url": "https://files.pythonhosted.org/packages/55/b8/f48c8cb01371078f0d8099eadc90fa27d3d65696c0edb7e87860c9e514b6/GenBankQC-0.2a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:29 2020"}