{"info": {"author": "Ulf Hamster", "author_email": "554c46@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/ulf1/sparsity-pattern/master?urlpath=lab)\n\n# sparsity-pattern\nGenerate different types of sparsity pattern for sparse matrices.\n\n\n## Installation\nThe `sparsity-pattern` [git repo](http://github.com/ulf1/sparsity-pattern) is available as [PyPi package](https://pypi.org/project/sparsity-pattern)\n\n```\npip install sparsity-pattern\npip install git+ssh://git@github.com/ulf1/sparsity-pattern.git\n```\n\n\n## Usage\nThe `block`-diagonal pattern for tensorflow\n\n```\nimport sparsity_pattern\nimport tensorflow as tf\n\nn_rows, n_cols = 10, 12\nidx = sparsity_pattern.get('block', min(n_rows, n_cols), block_sizes=[3, 1, 2])\n\nmat = tf.sparse.SparseTensor(\n    dense_shape=(n_rows, n_cols),\n    indices=tf.convert_to_tensor(idx, dtype=tf.int64),\n    values=range(1, len(idx)+1))\n\nprint(tf.sparse.to_dense(mat))\n```\n\nThe `circle` pattern for pytorch\n\n```\nimport sparsity_pattern\nimport torch\n\nn_rows, n_cols = 5, 7\nidx = sparsity_pattern.get('circle', min(n_rows, n_cols), offsets=[1, 2])\n\nmat = torch.sparse_coo_tensor(\n    indices=torch.tensor(idx).transpose(0, 1), \n    values=range(1, len(idx)+1),\n    size=[n_rows, n_cols])\n\nprint(mat.to_dense())\n```\n\nThe `triu` pattern for scipy\n\n```\nimport sparsity_pattern\nimport scipy.sparse\nimport numpy as np\n\nn, k = 4, -1\nidx = sparsity_pattern.get('triu', n, k)\nidx_rows, idx_cols = np.array(idx)[:, 0], np.array(idx)[:, 1]\nmat = scipy.sparse.lil_matrix((n, n), dtype=np.int64)\nmat[idx_rows, idx_cols] = range(1, len(idx)+1)\n\nprint(mat.todense())\n```\n\nCheck the [examples](https://github.com/ulf1/sparsity-pattern/tree/master/examples) folder for more notebooks.\n\n\n## Appendix\n\n### Install a virtual environment\n\n```\npython3.6 -m venv .venv\nsource .venv/bin/activate\npip3 install --upgrade pip\npip3 install -r requirements.txt\n```\n\n(If your git repo is stored in a folder with whitespaces, then don't use the subfolder `.venv`. Use an absolute path without whitespaces.)\n\n### Python commands\n\n* Jupyter for the examples: `jupyter lab`\n* Check syntax: `flake8 --ignore=F401 --exclude=$(grep -v '^#' .gitignore | xargs | sed -e 's/ /,/g')`\n* Run Unit Tests: `pytest`\n* Upload to PyPi with twine: `python setup.py sdist && twine upload -r pypi dist/*`\n\n### Clean up \n\n```\nfind . -type f -name \"*.pyc\" | xargs rm\nfind . -type d -name \"__pycache__\" | xargs rm -r\nrm -r .pytest_cache\nrm -r .venv\n```\n\n\n### Support\nPlease [open an issue](https://github.com/ulf1/sparsity-pattern/issues/new) for support.\n\n\n### Contributing\nPlease contribute using [Github Flow](https://guides.github.com/introduction/flow/). Create a branch, add commits, and [open a pull request](https://github.com/ulf1/sparsity-pattern/compare/).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ulf1/sparsity-pattern", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sparsity-pattern", "package_url": "https://pypi.org/project/sparsity-pattern/", "platform": "", "project_url": "https://pypi.org/project/sparsity-pattern/", "project_urls": {"Homepage": "http://github.com/ulf1/sparsity-pattern"}, "release_url": "https://pypi.org/project/sparsity-pattern/0.3.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Generate different types of sparsity pattern for sparse matrices.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://mybinder.org/v2/gh/ulf1/sparsity-pattern/master?urlpath=lab\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86eb116bc9e98bea90d9454762d384d9cae5055c/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a></p>\n<h1>sparsity-pattern</h1>\n<p>Generate different types of sparsity pattern for sparse matrices.</p>\n<h2>Installation</h2>\n<p>The <code>sparsity-pattern</code> <a href=\"http://github.com/ulf1/sparsity-pattern\" rel=\"nofollow\">git repo</a> is available as <a href=\"https://pypi.org/project/sparsity-pattern\" rel=\"nofollow\">PyPi package</a></p>\n<pre><code>pip install sparsity-pattern\npip install git+ssh://git@github.com/ulf1/sparsity-pattern.git\n</code></pre>\n<h2>Usage</h2>\n<p>The <code>block</code>-diagonal pattern for tensorflow</p>\n<pre><code>import sparsity_pattern\nimport tensorflow as tf\n\nn_rows, n_cols = 10, 12\nidx = sparsity_pattern.get('block', min(n_rows, n_cols), block_sizes=[3, 1, 2])\n\nmat = tf.sparse.SparseTensor(\n    dense_shape=(n_rows, n_cols),\n    indices=tf.convert_to_tensor(idx, dtype=tf.int64),\n    values=range(1, len(idx)+1))\n\nprint(tf.sparse.to_dense(mat))\n</code></pre>\n<p>The <code>circle</code> pattern for pytorch</p>\n<pre><code>import sparsity_pattern\nimport torch\n\nn_rows, n_cols = 5, 7\nidx = sparsity_pattern.get('circle', min(n_rows, n_cols), offsets=[1, 2])\n\nmat = torch.sparse_coo_tensor(\n    indices=torch.tensor(idx).transpose(0, 1), \n    values=range(1, len(idx)+1),\n    size=[n_rows, n_cols])\n\nprint(mat.to_dense())\n</code></pre>\n<p>The <code>triu</code> pattern for scipy</p>\n<pre><code>import sparsity_pattern\nimport scipy.sparse\nimport numpy as np\n\nn, k = 4, -1\nidx = sparsity_pattern.get('triu', n, k)\nidx_rows, idx_cols = np.array(idx)[:, 0], np.array(idx)[:, 1]\nmat = scipy.sparse.lil_matrix((n, n), dtype=np.int64)\nmat[idx_rows, idx_cols] = range(1, len(idx)+1)\n\nprint(mat.todense())\n</code></pre>\n<p>Check the <a href=\"https://github.com/ulf1/sparsity-pattern/tree/master/examples\" rel=\"nofollow\">examples</a> folder for more notebooks.</p>\n<h2>Appendix</h2>\n<h3>Install a virtual environment</h3>\n<pre><code>python3.6 -m venv .venv\nsource .venv/bin/activate\npip3 install --upgrade pip\npip3 install -r requirements.txt\n</code></pre>\n<p>(If your git repo is stored in a folder with whitespaces, then don't use the subfolder <code>.venv</code>. Use an absolute path without whitespaces.)</p>\n<h3>Python commands</h3>\n<ul>\n<li>Jupyter for the examples: <code>jupyter lab</code></li>\n<li>Check syntax: <code>flake8 --ignore=F401 --exclude=$(grep -v '^#' .gitignore | xargs | sed -e 's/ /,/g')</code></li>\n<li>Run Unit Tests: <code>pytest</code></li>\n<li>Upload to PyPi with twine: <code>python setup.py sdist &amp;&amp; twine upload -r pypi dist/*</code></li>\n</ul>\n<h3>Clean up</h3>\n<pre><code>find . -type f -name \"*.pyc\" | xargs rm\nfind . -type d -name \"__pycache__\" | xargs rm -r\nrm -r .pytest_cache\nrm -r .venv\n</code></pre>\n<h3>Support</h3>\n<p>Please <a href=\"https://github.com/ulf1/sparsity-pattern/issues/new\" rel=\"nofollow\">open an issue</a> for support.</p>\n<h3>Contributing</h3>\n<p>Please contribute using <a href=\"https://guides.github.com/introduction/flow/\" rel=\"nofollow\">Github Flow</a>. Create a branch, add commits, and <a href=\"https://github.com/ulf1/sparsity-pattern/compare/\" rel=\"nofollow\">open a pull request</a>.</p>\n\n          </div>"}, "last_serial": 6859411, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "383c2f91ee4203f4cb427295a0024127", "sha256": "9bc8db71a71823b85b4e24a92b07ff5b1b65c15d8ee6015b750c474dd43e3a73"}, "downloads": -1, "filename": "sparsity-pattern-0.1.0.tar.gz", "has_sig": false, "md5_digest": "383c2f91ee4203f4cb427295a0024127", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3801, "upload_time": "2020-03-08T19:34:37", "upload_time_iso_8601": "2020-03-08T19:34:37.820485Z", "url": "https://files.pythonhosted.org/packages/51/a3/b328ebf1174058ffa7609db735c2a21f1980010b9769e800d8801cde90eb/sparsity-pattern-0.1.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "3571b051e918a5228e34d33dbcf408b4", "sha256": "82d1b3c1bc73b9b79798ad099b7f72e69115c82f4685734f55ebb45635a48746"}, "downloads": -1, "filename": "sparsity-pattern-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3571b051e918a5228e34d33dbcf408b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5503, "upload_time": "2020-03-22T11:24:49", "upload_time_iso_8601": "2020-03-22T11:24:49.685605Z", "url": "https://files.pythonhosted.org/packages/70/dc/a3414db3fa95caaef070b6b656d3da11046dbe3f1d3705673739f5672498/sparsity-pattern-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3571b051e918a5228e34d33dbcf408b4", "sha256": "82d1b3c1bc73b9b79798ad099b7f72e69115c82f4685734f55ebb45635a48746"}, "downloads": -1, "filename": "sparsity-pattern-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3571b051e918a5228e34d33dbcf408b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5503, "upload_time": "2020-03-22T11:24:49", "upload_time_iso_8601": "2020-03-22T11:24:49.685605Z", "url": "https://files.pythonhosted.org/packages/70/dc/a3414db3fa95caaef070b6b656d3da11046dbe3f1d3705673739f5672498/sparsity-pattern-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:49 2020"}