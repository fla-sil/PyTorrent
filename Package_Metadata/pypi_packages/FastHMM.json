{"info": {"author": "Yunshan Chen", "author_email": "chenyunshan312@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[\u4e2d\u6587\u7248\u672c\u7684 README](README.md)\n------------------------------\n\n# FastHMM\n\nA python package for HMM (Hidden Markov Model) model with fast train and decoding implementation\n\n## Python version\ntest by using Python3\n\n## Install\n### pip\n```bash\npip install FastHMM\n```\n\n### source\n```bash\npip install git+https://github.com/312shan/FastHMM.git\n```\n\n## Usage\n```python\nfrom FastHMM.hmm import HMMModel\n\n# test model training and predict\nhmm_model = HMMModel()\nhmm_model.train_one_line([(\"\u6211\", \"r\"), (\"\u7231\", \"v\"), (\"\u5317\u4eac\", \"ns\"), (\"\u5929\u5b89\u95e8\", \"ns\")])\nhmm_model.train_one_line([(\"\u4f60\", \"r\"), (\"\u53bb\", \"v\"), (\"\u6df1\u5733\", \"ns\")])\nresult = hmm_model.predict([\"\u4ffa\", \"\u7231\", \"\u5e7f\u5dde\"])\nprint(result)\n\n# test save and load model\nhmm_model.save_model()\nhmm_model = HMMModel().load_model()\nresult = hmm_model.predict([\"\u6211\u4eec\", \"\u7231\", \"\u6df1\u5733\"])\nprint(result)\n```\n\nOutput:\n```python\n[('\u4ffa', 'r'), ('\u7231', 'v'), ('\u5e7f\u5dde', 'ns')]\n[('\u6211\u4eec', 'r'), ('\u7231', 'v'), ('\u6df1\u5733', 'ns')]\n```\n\n## Performance:\ntest on dataset \u4eba\u6c11\u65e5\u62a5 \n```\npython .test/test_postagging.py\n```\nOutput:\n```text\ntrain size 18484 ,test_size 1000\nfinish training\neval result: \npredict 57929 tags, 54228 correct,  accuracy 0.9361114467710473\nruntime : 370.1029086 seconds\n```\nMost of time the consuming is on the decoding stage,\nI tried many ways to implement viterbi algorithm,\nThe implementation I currently use is the fastest\nIf you have suggestions for improving this decoding algorithm, \nplease let me know, thank you very much.\n\n## Reference\n[MicroHMM](https://github.com/howl-anderson/MicroHMM)   \n[Hidden Markov model](https://en.wikipedia.org/wiki/Hidden_Markov_model)    \n[Viterbi algorithm](https://en.wikipedia.org/wiki/Viterbi_algorithm)  \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/312shan/FastHMM", "keywords": "hmm viterbi", "license": "", "maintainer": "", "maintainer_email": "", "name": "FastHMM", "package_url": "https://pypi.org/project/FastHMM/", "platform": "", "project_url": "https://pypi.org/project/FastHMM/", "project_urls": {"Homepage": "https://github.com/312shan/FastHMM"}, "release_url": "https://pypi.org/project/FastHMM/0.1.2/", "requires_dist": ["pathlib ; python_version < \"3.4\"", "typing ; python_version < \"3.5\""], "requires_python": ">=3.5", "summary": "A python package for HMM model with fast train and decoding implementation", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2><a href=\"README.md\" rel=\"nofollow\">\u4e2d\u6587\u7248\u672c\u7684 README</a></h2>\n<h1>FastHMM</h1>\n<p>A python package for HMM (Hidden Markov Model) model with fast train and decoding implementation</p>\n<h2>Python version</h2>\n<p>test by using Python3</p>\n<h2>Install</h2>\n<h3>pip</h3>\n<pre>pip install FastHMM\n</pre>\n<h3>source</h3>\n<pre>pip install git+https://github.com/312shan/FastHMM.git\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">FastHMM.hmm</span> <span class=\"kn\">import</span> <span class=\"n\">HMMModel</span>\n\n<span class=\"c1\"># test model training and predict</span>\n<span class=\"n\">hmm_model</span> <span class=\"o\">=</span> <span class=\"n\">HMMModel</span><span class=\"p\">()</span>\n<span class=\"n\">hmm_model</span><span class=\"o\">.</span><span class=\"n\">train_one_line</span><span class=\"p\">([(</span><span class=\"s2\">\"\u6211\"</span><span class=\"p\">,</span> <span class=\"s2\">\"r\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"\u7231\"</span><span class=\"p\">,</span> <span class=\"s2\">\"v\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"\u5317\u4eac\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ns\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"\u5929\u5b89\u95e8\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ns\"</span><span class=\"p\">)])</span>\n<span class=\"n\">hmm_model</span><span class=\"o\">.</span><span class=\"n\">train_one_line</span><span class=\"p\">([(</span><span class=\"s2\">\"\u4f60\"</span><span class=\"p\">,</span> <span class=\"s2\">\"r\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"\u53bb\"</span><span class=\"p\">,</span> <span class=\"s2\">\"v\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"\u6df1\u5733\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ns\"</span><span class=\"p\">)])</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">hmm_model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([</span><span class=\"s2\">\"\u4ffa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\u7231\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\u5e7f\u5dde\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># test save and load model</span>\n<span class=\"n\">hmm_model</span><span class=\"o\">.</span><span class=\"n\">save_model</span><span class=\"p\">()</span>\n<span class=\"n\">hmm_model</span> <span class=\"o\">=</span> <span class=\"n\">HMMModel</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">load_model</span><span class=\"p\">()</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">hmm_model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([</span><span class=\"s2\">\"\u6211\u4eec\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\u7231\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\u6df1\u5733\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"p\">[(</span><span class=\"s1\">'\u4ffa'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'\u7231'</span><span class=\"p\">,</span> <span class=\"s1\">'v'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'\u5e7f\u5dde'</span><span class=\"p\">,</span> <span class=\"s1\">'ns'</span><span class=\"p\">)]</span>\n<span class=\"p\">[(</span><span class=\"s1\">'\u6211\u4eec'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'\u7231'</span><span class=\"p\">,</span> <span class=\"s1\">'v'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'\u6df1\u5733'</span><span class=\"p\">,</span> <span class=\"s1\">'ns'</span><span class=\"p\">)]</span>\n</pre>\n<h2>Performance:</h2>\n<p>test on dataset \u4eba\u6c11\u65e5\u62a5</p>\n<pre><code>python .test/test_postagging.py\n</code></pre>\n<p>Output:</p>\n<pre>train size 18484 ,test_size 1000\nfinish training\neval result: \npredict 57929 tags, 54228 correct,  accuracy 0.9361114467710473\nruntime : 370.1029086 seconds\n</pre>\n<p>Most of time the consuming is on the decoding stage,\nI tried many ways to implement viterbi algorithm,\nThe implementation I currently use is the fastest\nIf you have suggestions for improving this decoding algorithm,\nplease let me know, thank you very much.</p>\n<h2>Reference</h2>\n<p><a href=\"https://github.com/howl-anderson/MicroHMM\" rel=\"nofollow\">MicroHMM</a><br>\n<a href=\"https://en.wikipedia.org/wiki/Hidden_Markov_model\" rel=\"nofollow\">Hidden Markov model</a><br>\n<a href=\"https://en.wikipedia.org/wiki/Viterbi_algorithm\" rel=\"nofollow\">Viterbi algorithm</a></p>\n\n          </div>"}, "last_serial": 6413856, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "108d9cb1d616cf9b147d0c1cac58f45c", "sha256": "7d713c47f32bd3f91346e2a9a6b41bada0277a042928bf870d9500e68d322bc3"}, "downloads": -1, "filename": "FastHMM-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "108d9cb1d616cf9b147d0c1cac58f45c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6491, "upload_time": "2020-01-06T02:47:24", "upload_time_iso_8601": "2020-01-06T02:47:24.778258Z", "url": "https://files.pythonhosted.org/packages/0e/df/3e996f075d27cee03ac81e1da13cb9fbc0923e7dbbd72b1be6ba96c87604/FastHMM-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74233bdafa28df7ff17cb5a2c309fd9c", "sha256": "3019feaf3076a2c8a276b51dd8013fa3ddae9a41a36394a636f75752e0faaa82"}, "downloads": -1, "filename": "FastHMM-0.1.1.tar.gz", "has_sig": false, "md5_digest": "74233bdafa28df7ff17cb5a2c309fd9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5427, "upload_time": "2020-01-06T02:47:26", "upload_time_iso_8601": "2020-01-06T02:47:26.830441Z", "url": "https://files.pythonhosted.org/packages/12/85/375398526adcd67cbc4dfbb03d55a73e15ef8e0d7aa189fb2c57e7bbb256/FastHMM-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4b61a5650d34db3fd7caa320a3cec873", "sha256": "360c01d063f0340b7cb56df7f0cc3a91a17017913c445a6207d8d670ae15b361"}, "downloads": -1, "filename": "FastHMM-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4b61a5650d34db3fd7caa320a3cec873", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6769, "upload_time": "2020-01-08T07:43:03", "upload_time_iso_8601": "2020-01-08T07:43:03.130323Z", "url": "https://files.pythonhosted.org/packages/97/2c/dcb2b902cb4e3856416aa2a841a7ba7e01148edd9978b9447b40c2dacb5f/FastHMM-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a090d48d8d66fe4be582e3c48e758fc", "sha256": "157856e9e7505a2a9f7e1d1ea59cb6ed8696be25d7160e3a8abf9cdc512c0353"}, "downloads": -1, "filename": "FastHMM-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a090d48d8d66fe4be582e3c48e758fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5841, "upload_time": "2020-01-08T07:43:04", "upload_time_iso_8601": "2020-01-08T07:43:04.751413Z", "url": "https://files.pythonhosted.org/packages/fc/7b/a179d1aed2d46c24a727909ad3f05651d2732de5487986979fdcce5ee1ea/FastHMM-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b61a5650d34db3fd7caa320a3cec873", "sha256": "360c01d063f0340b7cb56df7f0cc3a91a17017913c445a6207d8d670ae15b361"}, "downloads": -1, "filename": "FastHMM-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4b61a5650d34db3fd7caa320a3cec873", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6769, "upload_time": "2020-01-08T07:43:03", "upload_time_iso_8601": "2020-01-08T07:43:03.130323Z", "url": "https://files.pythonhosted.org/packages/97/2c/dcb2b902cb4e3856416aa2a841a7ba7e01148edd9978b9447b40c2dacb5f/FastHMM-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a090d48d8d66fe4be582e3c48e758fc", "sha256": "157856e9e7505a2a9f7e1d1ea59cb6ed8696be25d7160e3a8abf9cdc512c0353"}, "downloads": -1, "filename": "FastHMM-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a090d48d8d66fe4be582e3c48e758fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5841, "upload_time": "2020-01-08T07:43:04", "upload_time_iso_8601": "2020-01-08T07:43:04.751413Z", "url": "https://files.pythonhosted.org/packages/fc/7b/a179d1aed2d46c24a727909ad3f05651d2732de5487986979fdcce5ee1ea/FastHMM-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:30 2020"}