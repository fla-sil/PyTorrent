{"info": {"author": "Hans Roh", "author_email": "hansroh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "==========================================\nTensorflow gRPC and RESTful API Server\n==========================================\n\n**tfserver** is an example for serving Tensorflow model with `Skitai App Engine`_.\n\nIt can be accessed by gRPC and JSON RESTful API.\n\nThis project is inspired by `issue #176`_.\n\n.. _`issue #176` : https://github.com/tensorflow/serving/issues/176\n.. _`Skitai App Engine`: https://pypi.python.org/pypi/skitai\n\n\n.. contents:: Table of Contents\n\nSaving Tensorflow Model\n===================================\n\nSee `tf.saved_model.builder.SavedModelBuilder`_, but for example:\n\n.. code:: python\n  \n  import tensorflow as tf\n  \n  # your own neural network\n  class DNN:\n    ...\n\n  net = DNN (phase_train=False)\n  \n  sess = tf.Session()\n  sess.run (tf.global_variables_initializer())\n  \n  # restoring checkpoint\n  saver = tf.train.Saver (tf.global_variables())\n  saver.restore (sess, \"./models/model.cpkt-1000\")\n  \n  # save model with builder  \n  builder = tf.saved_model.builder.SavedModelBuilder (\"exported/1/\")\n  \n  prediction_signature = (\n    tf.saved_model.signature_def_utils.build_signature_def(\n      inputs = {'x': tf.saved_model.utils.build_tensor_info (net.x)},\n      outputs = {'y': tf.saved_model.utils.build_tensor_info (net.predict)])},\n      method_name = tf.saved_model.signature_constants.PREDICT_METHOD_NAME)\n  )  \n  # Remember 'x', 'y' for I/O\n  \n  legacy_init_op = tf.group (tf.tables_initializer (), name = 'legacy_init_op')\n  builder.add_meta_graph_and_variables(\n    sess, \n    [ tf.saved_model.tag_constants.SERVING ],\n    signature_def_map = {'predict': prediction_signature},\n    legacy_init_op = legacy_init_op\n  )\n  # Remember 'signature_def_name'\n  \n  builder.save()\n\n.. _`tf.saved_model.builder.SavedModelBuilder`: https://www.tensorflow.org/api_docs/python/tf/saved_model/builder/SavedModelBuilder\n\n\nRunning Server\n===================================\n\nYou just setup model path and tensorflow configuration, then you can have gRPC and JSON API services.\n\nExample of api.py\n\n.. code:: python\n  \n  import tfserver\n  import skitai\n  import tensorflow as tf\n\n  pref = skitai.pref ()\n  pref.max_client_body_size = 100 * 1024 * 1024 # 100 MB\n  \n  # we want to serve 2 models: \n  # alias and (model_dir, optional session config)  \n  pref.config.tf_models [\"model1\"] = \"exported/2\"\n  pref.config.tf_models [\"model2\"] = (\n  \t\"exported/3\", \n  \ttf.ConfigProto(\n  \t  gpu_options=tf.GPUOptions (per_process_gpu_memory_fraction = 0.2),\n  \t  log_device_placement = False\n    )\n  )\n  \n  # If you want to activate gRPC, should mount on '/'\n  skitai.mount (\"/\", tfserver, pref = pref)\n  skitai.run (port = 5000)\n\nAnd run,\n\n.. code:: bash\n\n  python3 api.py  \n\n\nAdding Custom APIs\n-------------------------------------\n\nYou can create your own APIs.\n\nIf your APIs are located in,\n\n.. code:: bash\n\n  /api/service/loader.py\n  /api/service/apis.py\n\nFor example,\n\n.. code:: python\n\n  # apis.py\n  \n  import tfserver\n      \n  def predict (spec_name, signature_name, **inputs):    \n      result = tfserver.run (spec_name, signature_name, **inputs)\n      pred = np.argmax (result [\"y\"][0])\n      return dict (\n          confidence = float (result [\"y\"][0][pred]), \n          code = tfserver.tfsess [spec_name].labels [0].item (pred)\n      )    \n      \n  def __mount__ (app):\n      import os\n      import tensorflow as tf\n      from .helpers.unspsc import datautil      \n\n      def load_latest_model (app, model_name, loc, per_process_gpu_memory_fraction = 0.03):\t\n          if not os.path.isdir (loc) or not os.listdir (loc):\n              return\n          version = max ([int (ver) for ver in os.listdir (loc) if ver.isdigit () and os.path.isdir (os.path.join (loc, ver))])\t\n          model_path = os.path.join (loc, str (version))\n          tfconfig = tf.ConfigProto(gpu_options=tf.GPUOptions (\n            per_process_gpu_memory_fraction = per_process_gpu_memory_fraction), \n            log_device_placement = False\n          )\n          app.config.tf_models [model_name] = (model_path, tfconfig)\n          return model_path\n\n      def initialize_models (app):          \n          for model in os.listdir (app.config.model_root):\n              model_path = load_latest_model (app, model, os.path.join (app.config.model_root, model), 0.1)\n              if model == \"f22\":\n                  datautil.load_features (os.path.join (model_path, 'features.pkl'))\n\n      initialize_models (app)\n      \n      @app.route (\"/\", methods = [\"GET\"])\n      def models (was):        \n          return was.API (models = list (tfserver.tfsess.keys ()))\n\n      @app.route (\"/unspsc\", methods = [\"POST\"])\n      def unspsc (was, text, signature_name = \"predict\"):        \n          x, seq_length = datautil.encode (text)        \n          result = predict (\"unspsc\", signature_name, x = [x], seq_length = [seq_length])        \n          return was.API (result = result)\n\nThen mount these services and run.\n\n.. code:: python\n\n  # serve.py\n  import tfserver\n\n\tpref = tfserver.preference (\"/api\")\n\tfrom services import apis, loader\n\n\tpref.mount (\"/tfserver/apis\", loader, apis)\t\n\tpref.config.model_root = skitai.joinpath (\"api/models\")\n\tpref.debug = True\n\tpref.use_reloader = True\n\tpref.access_control_allow_origin = [\"*\"]\n\tpref.max_client_body_size = 100 * 1024 * 1024 # 100 MB\t\n\n\tskitai.mount (\"/\", tfserver, pref = pref)\n\tskitai.run (port = 5000, name = \"tfapi\")\n\n\nRequest Examples\n====================================\n\ngRPC Client\n--------------\n\nUsing grpcio library,\n\n.. code:: python\n\n  from tfserver import cli\n  from tensorflow.python.framework import tensor_util\n  import numpy as np\n  \n  stub = cli.Server (\"http://localhost:5000\")\n  problem = np.array ([1.0, 2.0])\n  \n  resp = stub.predict (\n    'model1', #alias for model\n    'predict', #signature_def_name \n    x = tensor_util.make_tensor_proto(problem.astype('float32'), shape=problem.shape)\n  )\n  # then get 'y'\n  resp.y\n  >> np.ndarray ([-1.5, 1.6])\n\nUsing aquests for async request,\n\n.. code:: python\n  \n  import aquests\n  from tfserver import cli\n  from tensorflow.python.framework import tensor_util\n  import numpy as np\n  \n  def print_result (resp):\n    cli.Response (resp.data).y\n    >> np.ndarray ([-1.5, 1.6])\n    \n  stub = aquests.grpc (\"http://localhost:5000/tensorflow.serving.PredictionService\", callback = print_result)\n  problem = np.array ([1.0, 2.0])\n  \n  request = cli.build_request (\n    'model1',\n    'predict', \n    x = problem\n  )\n  stub.Predict (request, 10.0)\n\n  aquests.fetchall ()\n\n  \nRESTful API\n-------------\n\nUsing requests,\n\n.. code:: python\n  \n  import requests\n  \n  problem = np.array ([1.0, 2.0])\n  api = requests.session ()\n  resp = api.post (\n    \"http://localhost:5000/predict\",\n    json.dumps ({\"x\": problem.astype (\"float32\").tolist()}), \n    headers = {\"Content-Type\": \"application/json\"}\n  )\n  data = json.loads (resp.text)\n  data [\"y\"]\n  >> [-1.5, 1.6]\n\nAnother,\n  \n.. code:: python\n\n  from aquests.lib import siesta\n  \n  problem = np.array ([1.0, 2.0])  \n  api = siesta.API (\"http://localhost:5000\")\n  resp = api.predict.post ({\"x\": problem.astype (\"float32\").tolist()})\n  resp.data.y  \n  >> [-1.5, 1.6]\n\n\n\nPerformance Note Comparing with Proto Buffer and JSON\n======================================================================\n\nTest Environment\n-------------------------------\n\n- Input: \n\n  - dtype: Float 32\n  - shape: Various, From (50, 1025) To (300, 1025), Prox. Average (100, 1025)\n \n- Output: \n  \n  - dtype: Float 32\n  - shape: (60,)\n  \n- Request Threads: 16\n- Requests Per Thread: 100\n- Total Requests: 1,600\n\nResults\n--------------------\n\nAverage of 3 runs,\n\n- gRPC with Proto Buffer:\n  \n  - Use grpcio\n  - 11.58 seconds\n\n- RESTful API with JSON\n\n  - Use requests\n  - 216.66 seconds\n\nProto Buffer is 20 times faster than JSON...\n\n\nRelease History\n=============================\n\n- 0.2 (2018. 12.1): integrated with dnn 0.3\n\n- 0.1b8 (2018. 4.13): fix grpc trailers, skitai upgrade is required\n\n- 0.1b6 (2018. 3.19): found works only grpcio 1.4.0\n\n- 0.1b3 (2018. 2. 4): add @app.umounted decorator for clearing resource\n\n- 0.1b2: remove self.tfsess.run (tf.global_variables_initializer())\n  \n- 0.1b1 (2018. 1. 28): Beta release\n  \n- 0.1a (2018. 1. 4): Alpha release\n\n  ", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/tfserver", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/hansroh/tfserver", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tfserver", "package_url": "https://pypi.org/project/tfserver/", "platform": "posix", "project_url": "https://pypi.org/project/tfserver/", "project_urls": {"Download": "https://pypi.python.org/pypi/tfserver", "Homepage": "https://gitlab.com/hansroh/tfserver"}, "release_url": "https://pypi.org/project/tfserver/0.2.0.12/", "requires_dist": null, "requires_python": "", "summary": "Tensor Flow Model Server", "version": "0.2.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>tfserver</strong> is an example for serving Tensorflow model with <a href=\"https://pypi.python.org/pypi/skitai\" rel=\"nofollow\">Skitai App Engine</a>.</p>\n<p>It can be accessed by gRPC and JSON RESTful API.</p>\n<p>This project is inspired by <a href=\"https://github.com/tensorflow/serving/issues/176\" rel=\"nofollow\">issue #176</a>.</p>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#saving-tensorflow-model\" id=\"id1\" rel=\"nofollow\">Saving Tensorflow Model</a></li>\n<li><a href=\"#running-server\" id=\"id2\" rel=\"nofollow\">Running Server</a><ul>\n<li><a href=\"#adding-custom-apis\" id=\"id3\" rel=\"nofollow\">Adding Custom APIs</a></li>\n</ul>\n</li>\n<li><a href=\"#request-examples\" id=\"id4\" rel=\"nofollow\">Request Examples</a><ul>\n<li><a href=\"#grpc-client\" id=\"id5\" rel=\"nofollow\">gRPC Client</a></li>\n<li><a href=\"#restful-api\" id=\"id6\" rel=\"nofollow\">RESTful API</a></li>\n</ul>\n</li>\n<li><a href=\"#performance-note-comparing-with-proto-buffer-and-json\" id=\"id7\" rel=\"nofollow\">Performance Note Comparing with Proto Buffer and JSON</a><ul>\n<li><a href=\"#test-environment\" id=\"id8\" rel=\"nofollow\">Test Environment</a></li>\n<li><a href=\"#results\" id=\"id9\" rel=\"nofollow\">Results</a></li>\n</ul>\n</li>\n<li><a href=\"#release-history\" id=\"id10\" rel=\"nofollow\">Release History</a></li>\n</ul>\n</div>\n<div id=\"saving-tensorflow-model\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Saving Tensorflow Model</a></h2>\n<p>See <a href=\"https://www.tensorflow.org/api_docs/python/tf/saved_model/builder/SavedModelBuilder\" rel=\"nofollow\">tf.saved_model.builder.SavedModelBuilder</a>, but for example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n<span class=\"c1\"># your own neural network</span>\n<span class=\"k\">class</span> <span class=\"nc\">DNN</span><span class=\"p\">:</span>\n  <span class=\"o\">...</span>\n\n<span class=\"n\">net</span> <span class=\"o\">=</span> <span class=\"n\">DNN</span> <span class=\"p\">(</span><span class=\"n\">phase_train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">sess</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span> <span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">global_variables_initializer</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># restoring checkpoint</span>\n<span class=\"n\">saver</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">Saver</span> <span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">global_variables</span><span class=\"p\">())</span>\n<span class=\"n\">saver</span><span class=\"o\">.</span><span class=\"n\">restore</span> <span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"p\">,</span> <span class=\"s2\">\"./models/model.cpkt-1000\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># save model with builder</span>\n<span class=\"n\">builder</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">SavedModelBuilder</span> <span class=\"p\">(</span><span class=\"s2\">\"exported/1/\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">prediction_signature</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n  <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">signature_def_utils</span><span class=\"o\">.</span><span class=\"n\">build_signature_def</span><span class=\"p\">(</span>\n    <span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">build_tensor_info</span> <span class=\"p\">(</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)},</span>\n    <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">build_tensor_info</span> <span class=\"p\">(</span><span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">)])},</span>\n    <span class=\"n\">method_name</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">signature_constants</span><span class=\"o\">.</span><span class=\"n\">PREDICT_METHOD_NAME</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Remember 'x', 'y' for I/O</span>\n\n<span class=\"n\">legacy_init_op</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">tables_initializer</span> <span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'legacy_init_op'</span><span class=\"p\">)</span>\n<span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">add_meta_graph_and_variables</span><span class=\"p\">(</span>\n  <span class=\"n\">sess</span><span class=\"p\">,</span>\n  <span class=\"p\">[</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">tag_constants</span><span class=\"o\">.</span><span class=\"n\">SERVING</span> <span class=\"p\">],</span>\n  <span class=\"n\">signature_def_map</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'predict'</span><span class=\"p\">:</span> <span class=\"n\">prediction_signature</span><span class=\"p\">},</span>\n  <span class=\"n\">legacy_init_op</span> <span class=\"o\">=</span> <span class=\"n\">legacy_init_op</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Remember 'signature_def_name'</span>\n\n<span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"running-server\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Running Server</a></h2>\n<p>You just setup model path and tensorflow configuration, then you can have gRPC and JSON API services.</p>\n<p>Example of api.py</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tfserver</span>\n<span class=\"kn\">import</span> <span class=\"nn\">skitai</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n<span class=\"n\">pref</span> <span class=\"o\">=</span> <span class=\"n\">skitai</span><span class=\"o\">.</span><span class=\"n\">pref</span> <span class=\"p\">()</span>\n<span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">max_client_body_size</span> <span class=\"o\">=</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span> <span class=\"c1\"># 100 MB</span>\n\n<span class=\"c1\"># we want to serve 2 models:</span>\n<span class=\"c1\"># alias and (model_dir, optional session config)</span>\n<span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">tf_models</span> <span class=\"p\">[</span><span class=\"s2\">\"model1\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"exported/2\"</span>\n<span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">tf_models</span> <span class=\"p\">[</span><span class=\"s2\">\"model2\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n      <span class=\"s2\">\"exported/3\"</span><span class=\"p\">,</span>\n      <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ConfigProto</span><span class=\"p\">(</span>\n        <span class=\"n\">gpu_options</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">GPUOptions</span> <span class=\"p\">(</span><span class=\"n\">per_process_gpu_memory_fraction</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span><span class=\"p\">),</span>\n        <span class=\"n\">log_device_placement</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to activate gRPC, should mount on '/'</span>\n<span class=\"n\">skitai</span><span class=\"o\">.</span><span class=\"n\">mount</span> <span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">tfserver</span><span class=\"p\">,</span> <span class=\"n\">pref</span> <span class=\"o\">=</span> <span class=\"n\">pref</span><span class=\"p\">)</span>\n<span class=\"n\">skitai</span><span class=\"o\">.</span><span class=\"n\">run</span> <span class=\"p\">(</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<p>And run,</p>\n<pre>python3 api.py\n</pre>\n<div id=\"adding-custom-apis\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Adding Custom APIs</a></h3>\n<p>You can create your own APIs.</p>\n<p>If your APIs are located in,</p>\n<pre>/api/service/loader.py\n/api/service/apis.py\n</pre>\n<p>For example,</p>\n<pre><span class=\"c1\"># apis.py</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">tfserver</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">predict</span> <span class=\"p\">(</span><span class=\"n\">spec_name</span><span class=\"p\">,</span> <span class=\"n\">signature_name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">inputs</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">tfserver</span><span class=\"o\">.</span><span class=\"n\">run</span> <span class=\"p\">(</span><span class=\"n\">spec_name</span><span class=\"p\">,</span> <span class=\"n\">signature_name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n    <span class=\"n\">pred</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"p\">[</span><span class=\"s2\">\"y\"</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"nb\">dict</span> <span class=\"p\">(</span>\n        <span class=\"n\">confidence</span> <span class=\"o\">=</span> <span class=\"nb\">float</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"p\">[</span><span class=\"s2\">\"y\"</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">pred</span><span class=\"p\">]),</span>\n        <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"n\">tfserver</span><span class=\"o\">.</span><span class=\"n\">tfsess</span> <span class=\"p\">[</span><span class=\"n\">spec_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">labels</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">item</span> <span class=\"p\">(</span><span class=\"n\">pred</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">__mount__</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">os</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.helpers.unspsc</span> <span class=\"kn\">import</span> <span class=\"n\">datautil</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load_latest_model</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">per_process_gpu_memory_fraction</span> <span class=\"o\">=</span> <span class=\"mf\">0.03</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span> <span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span> <span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"nb\">max</span> <span class=\"p\">([</span><span class=\"nb\">int</span> <span class=\"p\">(</span><span class=\"n\">ver</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">ver</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span> <span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">ver</span><span class=\"o\">.</span><span class=\"n\">isdigit</span> <span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span> <span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span> <span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">ver</span><span class=\"p\">))])</span>\n        <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span> <span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">))</span>\n        <span class=\"n\">tfconfig</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ConfigProto</span><span class=\"p\">(</span><span class=\"n\">gpu_options</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">GPUOptions</span> <span class=\"p\">(</span>\n          <span class=\"n\">per_process_gpu_memory_fraction</span> <span class=\"o\">=</span> <span class=\"n\">per_process_gpu_memory_fraction</span><span class=\"p\">),</span>\n          <span class=\"n\">log_device_placement</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">tf_models</span> <span class=\"p\">[</span><span class=\"n\">model_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">tfconfig</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">model_path</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">initialize_models</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">model_root</span><span class=\"p\">):</span>\n            <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">load_latest_model</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">model_root</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">),</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">model</span> <span class=\"o\">==</span> <span class=\"s2\">\"f22\"</span><span class=\"p\">:</span>\n                <span class=\"n\">datautil</span><span class=\"o\">.</span><span class=\"n\">load_features</span> <span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span> <span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"s1\">'features.pkl'</span><span class=\"p\">))</span>\n\n    <span class=\"n\">initialize_models</span> <span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span> <span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"GET\"</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">models</span> <span class=\"p\">(</span><span class=\"n\">was</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">was</span><span class=\"o\">.</span><span class=\"n\">API</span> <span class=\"p\">(</span><span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"nb\">list</span> <span class=\"p\">(</span><span class=\"n\">tfserver</span><span class=\"o\">.</span><span class=\"n\">tfsess</span><span class=\"o\">.</span><span class=\"n\">keys</span> <span class=\"p\">()))</span>\n\n    <span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span> <span class=\"p\">(</span><span class=\"s2\">\"/unspsc\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">unspsc</span> <span class=\"p\">(</span><span class=\"n\">was</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">signature_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"predict\"</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">seq_length</span> <span class=\"o\">=</span> <span class=\"n\">datautil</span><span class=\"o\">.</span><span class=\"n\">encode</span> <span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">predict</span> <span class=\"p\">(</span><span class=\"s2\">\"unspsc\"</span><span class=\"p\">,</span> <span class=\"n\">signature_name</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">],</span> <span class=\"n\">seq_length</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">seq_length</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">was</span><span class=\"o\">.</span><span class=\"n\">API</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>Then mount these services and run.</p>\n<pre><span class=\"c1\"># serve.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tfserver</span>\n\n      <span class=\"n\">pref</span> <span class=\"o\">=</span> <span class=\"n\">tfserver</span><span class=\"o\">.</span><span class=\"n\">preference</span> <span class=\"p\">(</span><span class=\"s2\">\"/api\"</span><span class=\"p\">)</span>\n      <span class=\"kn\">from</span> <span class=\"nn\">services</span> <span class=\"kn\">import</span> <span class=\"n\">apis</span><span class=\"p\">,</span> <span class=\"n\">loader</span>\n\n      <span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">mount</span> <span class=\"p\">(</span><span class=\"s2\">\"/tfserver/apis\"</span><span class=\"p\">,</span> <span class=\"n\">loader</span><span class=\"p\">,</span> <span class=\"n\">apis</span><span class=\"p\">)</span>\n      <span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">model_root</span> <span class=\"o\">=</span> <span class=\"n\">skitai</span><span class=\"o\">.</span><span class=\"n\">joinpath</span> <span class=\"p\">(</span><span class=\"s2\">\"api/models\"</span><span class=\"p\">)</span>\n      <span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n      <span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">use_reloader</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n      <span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">access_control_allow_origin</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"*\"</span><span class=\"p\">]</span>\n      <span class=\"n\">pref</span><span class=\"o\">.</span><span class=\"n\">max_client_body_size</span> <span class=\"o\">=</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span> <span class=\"c1\"># 100 MB</span>\n\n      <span class=\"n\">skitai</span><span class=\"o\">.</span><span class=\"n\">mount</span> <span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">tfserver</span><span class=\"p\">,</span> <span class=\"n\">pref</span> <span class=\"o\">=</span> <span class=\"n\">pref</span><span class=\"p\">)</span>\n      <span class=\"n\">skitai</span><span class=\"o\">.</span><span class=\"n\">run</span> <span class=\"p\">(</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">5000</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"tfapi\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"request-examples\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Request Examples</a></h2>\n<div id=\"grpc-client\">\n<h3><a href=\"#id5\" rel=\"nofollow\">gRPC Client</a></h3>\n<p>Using grpcio library,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tfserver</span> <span class=\"kn\">import</span> <span class=\"n\">cli</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tensorflow.python.framework</span> <span class=\"kn\">import</span> <span class=\"n\">tensor_util</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">stub</span> <span class=\"o\">=</span> <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">Server</span> <span class=\"p\">(</span><span class=\"s2\">\"http://localhost:5000\"</span><span class=\"p\">)</span>\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span> <span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">])</span>\n\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">stub</span><span class=\"o\">.</span><span class=\"n\">predict</span> <span class=\"p\">(</span>\n  <span class=\"s1\">'model1'</span><span class=\"p\">,</span> <span class=\"c1\">#alias for model</span>\n  <span class=\"s1\">'predict'</span><span class=\"p\">,</span> <span class=\"c1\">#signature_def_name</span>\n  <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">tensor_util</span><span class=\"o\">.</span><span class=\"n\">make_tensor_proto</span><span class=\"p\">(</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">'float32'</span><span class=\"p\">),</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># then get 'y'</span>\n<span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">y</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">])</span>\n</pre>\n<p>Using aquests for async request,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aquests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tfserver</span> <span class=\"kn\">import</span> <span class=\"n\">cli</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tensorflow.python.framework</span> <span class=\"kn\">import</span> <span class=\"n\">tensor_util</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">print_result</span> <span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">):</span>\n  <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">Response</span> <span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">y</span>\n  <span class=\"o\">&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">])</span>\n\n<span class=\"n\">stub</span> <span class=\"o\">=</span> <span class=\"n\">aquests</span><span class=\"o\">.</span><span class=\"n\">grpc</span> <span class=\"p\">(</span><span class=\"s2\">\"http://localhost:5000/tensorflow.serving.PredictionService\"</span><span class=\"p\">,</span> <span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">print_result</span><span class=\"p\">)</span>\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span> <span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">])</span>\n\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">build_request</span> <span class=\"p\">(</span>\n  <span class=\"s1\">'model1'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'predict'</span><span class=\"p\">,</span>\n  <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">problem</span>\n<span class=\"p\">)</span>\n<span class=\"n\">stub</span><span class=\"o\">.</span><span class=\"n\">Predict</span> <span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"mf\">10.0</span><span class=\"p\">)</span>\n\n<span class=\"n\">aquests</span><span class=\"o\">.</span><span class=\"n\">fetchall</span> <span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"restful-api\">\n<h3><a href=\"#id6\" rel=\"nofollow\">RESTful API</a></h3>\n<p>Using requests,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span> <span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">])</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">session</span> <span class=\"p\">()</span>\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">post</span> <span class=\"p\">(</span>\n  <span class=\"s2\">\"http://localhost:5000/predict\"</span><span class=\"p\">,</span>\n  <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span> <span class=\"p\">({</span><span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">astype</span> <span class=\"p\">(</span><span class=\"s2\">\"float32\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()}),</span>\n  <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Content-Type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"application/json\"</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span> <span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"p\">[</span><span class=\"s2\">\"y\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">]</span>\n</pre>\n<p>Another,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aquests.lib</span> <span class=\"kn\">import</span> <span class=\"n\">siesta</span>\n\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span> <span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">])</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">siesta</span><span class=\"o\">.</span><span class=\"n\">API</span> <span class=\"p\">(</span><span class=\"s2\">\"http://localhost:5000\"</span><span class=\"p\">)</span>\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"o\">.</span><span class=\"n\">post</span> <span class=\"p\">({</span><span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">astype</span> <span class=\"p\">(</span><span class=\"s2\">\"float32\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()})</span>\n<span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">y</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"performance-note-comparing-with-proto-buffer-and-json\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Performance Note Comparing with Proto Buffer and JSON</a></h2>\n<div id=\"test-environment\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Test Environment</a></h3>\n<ul>\n<li>Input:<ul>\n<li>dtype: Float 32</li>\n<li>shape: Various, From (50, 1025) To (300, 1025), Prox. Average (100, 1025)</li>\n</ul>\n</li>\n<li>Output:<ul>\n<li>dtype: Float 32</li>\n<li>shape: (60,)</li>\n</ul>\n</li>\n<li>Request Threads: 16</li>\n<li>Requests Per Thread: 100</li>\n<li>Total Requests: 1,600</li>\n</ul>\n</div>\n<div id=\"results\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Results</a></h3>\n<p>Average of 3 runs,</p>\n<ul>\n<li>gRPC with Proto Buffer:<ul>\n<li>Use grpcio</li>\n<li>11.58 seconds</li>\n</ul>\n</li>\n<li>RESTful API with JSON<ul>\n<li>Use requests</li>\n<li>216.66 seconds</li>\n</ul>\n</li>\n</ul>\n<p>Proto Buffer is 20 times faster than JSON\u2026</p>\n</div>\n</div>\n<div id=\"release-history\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Release History</a></h2>\n<ul>\n<li>0.2 (2018. 12.1): integrated with dnn 0.3</li>\n<li>0.1b8 (2018. 4.13): fix grpc trailers, skitai upgrade is required</li>\n<li>0.1b6 (2018. 3.19): found works only grpcio 1.4.0</li>\n<li>0.1b3 (2018. 2. 4): add @app.umounted decorator for clearing resource</li>\n<li>0.1b2: remove self.tfsess.run (tf.global_variables_initializer())</li>\n<li>0.1b1 (2018. 1. 28): Beta release</li>\n<li>0.1a (2018. 1. 4): Alpha release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6029156, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4267d0789c710991d436010bc42b67a3", "sha256": "b74232dfdbb249956cfa53b630abbb7eb57fd4fdfa910743e6504cdd08e684f2"}, "downloads": -1, "filename": "tfserver-0.1.tar.gz", "has_sig": false, "md5_digest": "4267d0789c710991d436010bc42b67a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9495, "upload_time": "2018-04-20T04:23:11", "upload_time_iso_8601": "2018-04-20T04:23:11.916055Z", "url": "https://files.pythonhosted.org/packages/55/fb/0ccea5481f241201aa571e9114d99261d52c489ff47d155275b415f550ab/tfserver-0.1.tar.gz", "yanked": false}], "0.1a1": [{"comment_text": "", "digests": {"md5": "0c17f697d61ce7304419b09da1f6069c", "sha256": "0ce5182c678dfd5bb0564c8ab78052ae3bbe50738dc61b92d684a60fbcc9fbda"}, "downloads": -1, "filename": "tfserver-0.1a1.tar.gz", "has_sig": false, "md5_digest": "0c17f697d61ce7304419b09da1f6069c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1551, "upload_time": "2018-01-03T11:29:37", "upload_time_iso_8601": "2018-01-03T11:29:37.894999Z", "url": "https://files.pythonhosted.org/packages/1e/d6/4c39b69146624a0315e58809f0928a8c3011a22dabb0c5b381b39968ae47/tfserver-0.1a1.tar.gz", "yanked": false}], "0.1a10": [{"comment_text": "", "digests": {"md5": "08ec37e5ef9792f987da38aca7872680", "sha256": "0d77e586db2e998315eb20c3993674adc0a560ef715410c634b33bb8c31d63cf"}, "downloads": -1, "filename": "tfserver-0.1a10.tar.gz", "has_sig": false, "md5_digest": "08ec37e5ef9792f987da38aca7872680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7976, "upload_time": "2018-01-05T13:02:41", "upload_time_iso_8601": "2018-01-05T13:02:41.867272Z", "url": "https://files.pythonhosted.org/packages/9e/36/3d07d83ef7ace1ad57e13c38801a2c1bfddb70452ec6f263284edae7c827/tfserver-0.1a10.tar.gz", "yanked": false}], "0.1a11": [{"comment_text": "", "digests": {"md5": "98570fb432213ee3df8892345b5f06f1", "sha256": "1055e6403115d2a923bd3a89a9f9af61d4e243f7ea157c34b34f1091215698ae"}, "downloads": -1, "filename": "tfserver-0.1a11.tar.gz", "has_sig": false, "md5_digest": "98570fb432213ee3df8892345b5f06f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8970, "upload_time": "2018-01-06T07:13:01", "upload_time_iso_8601": "2018-01-06T07:13:01.953264Z", "url": "https://files.pythonhosted.org/packages/3b/a4/017db361a6432a0fd283b29721c710c1c5b858287022913f4a655cb6b715/tfserver-0.1a11.tar.gz", "yanked": false}], "0.1a12": [{"comment_text": "", "digests": {"md5": "eedb01c5e91adbbb7f65c688aa5b6d98", "sha256": "ae74f1c44e19fb2f4f2fee2708a163ca1e4b98f53ba53f70c13c3e554dd2c1f2"}, "downloads": -1, "filename": "tfserver-0.1a12.tar.gz", "has_sig": false, "md5_digest": "eedb01c5e91adbbb7f65c688aa5b6d98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9053, "upload_time": "2018-01-06T07:26:39", "upload_time_iso_8601": "2018-01-06T07:26:39.214251Z", "url": "https://files.pythonhosted.org/packages/c2/bd/d7bcd597f6fd840bbd887f981f3590af5e248878f081bb6e135926eec1d3/tfserver-0.1a12.tar.gz", "yanked": false}], "0.1a13": [{"comment_text": "", "digests": {"md5": "af6c9baff3ecd7c72550637a955b65d9", "sha256": "fb2936443fee428729324342aa16c455c61066f2b7206fcfc92b4360a820b06f"}, "downloads": -1, "filename": "tfserver-0.1a13.tar.gz", "has_sig": false, "md5_digest": "af6c9baff3ecd7c72550637a955b65d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9089, "upload_time": "2018-01-06T07:32:49", "upload_time_iso_8601": "2018-01-06T07:32:49.715821Z", "url": "https://files.pythonhosted.org/packages/20/fb/f4cb0bfa998aae9547a9cdb01e812ca004f927a5191d854275eed10d447b/tfserver-0.1a13.tar.gz", "yanked": false}], "0.1a14": [{"comment_text": "", "digests": {"md5": "2cbeba983715de83ad20862fdffc98e8", "sha256": "a91e6ff7be92d243e8f8166dee48ccbc32f7d94647ce79531ecb743d7c439d45"}, "downloads": -1, "filename": "tfserver-0.1a14.tar.gz", "has_sig": false, "md5_digest": "2cbeba983715de83ad20862fdffc98e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9555, "upload_time": "2018-01-06T08:38:40", "upload_time_iso_8601": "2018-01-06T08:38:40.650137Z", "url": "https://files.pythonhosted.org/packages/a1/83/eeeb5c7d0d32d76169d2c9b5fb43b7ff592044c0067fca90185e80256714/tfserver-0.1a14.tar.gz", "yanked": false}], "0.1a15": [{"comment_text": "", "digests": {"md5": "0caf53abaab27d7b5913a82cfb648bd4", "sha256": "462addaea3ec8b79ef2fcbdcb708caca190bf85d22b5a550373da1078d67a897"}, "downloads": -1, "filename": "tfserver-0.1a15.tar.gz", "has_sig": false, "md5_digest": "0caf53abaab27d7b5913a82cfb648bd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9535, "upload_time": "2018-01-06T08:45:47", "upload_time_iso_8601": "2018-01-06T08:45:47.062039Z", "url": "https://files.pythonhosted.org/packages/4f/30/48c6a42b9e4ff266f16c5a0b8df82b9f51a3852c5a726faa02c4fc96affb/tfserver-0.1a15.tar.gz", "yanked": false}], "0.1a16": [{"comment_text": "", "digests": {"md5": "21335bcf53082ed1b0a9554840a5bb7a", "sha256": "2494183135f517e235dedc4c98a95d6d12f754084d181dae80d5ef5a9ccc9413"}, "downloads": -1, "filename": "tfserver-0.1a16.tar.gz", "has_sig": false, "md5_digest": "21335bcf53082ed1b0a9554840a5bb7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9540, "upload_time": "2018-01-06T08:52:16", "upload_time_iso_8601": "2018-01-06T08:52:16.362282Z", "url": "https://files.pythonhosted.org/packages/a9/04/79edfed11fed773df53cbb40f2e5826a6b2b5a8132161f50e9d82fc287d7/tfserver-0.1a16.tar.gz", "yanked": false}], "0.1a17": [{"comment_text": "", "digests": {"md5": "52d46c8519cee561e5c31b7235a8f858", "sha256": "716dcb9a37846c86707d40e61cb989fb8d70f37167702ae6ba209667d5ca2e0a"}, "downloads": -1, "filename": "tfserver-0.1a17.tar.gz", "has_sig": false, "md5_digest": "52d46c8519cee561e5c31b7235a8f858", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9549, "upload_time": "2018-01-06T08:59:29", "upload_time_iso_8601": "2018-01-06T08:59:29.133197Z", "url": "https://files.pythonhosted.org/packages/5d/a7/947dcca98c10242e9dbcda96990374df16d922dff89f66475d1399dfe8c2/tfserver-0.1a17.tar.gz", "yanked": false}], "0.1a18": [{"comment_text": "", "digests": {"md5": "fac24340b50c8591eda3474082578395", "sha256": "90bc6dd0d8bb97996f10bc3684d70dc1e3e1ce5ac77a53e5454075b5d30cf8a4"}, "downloads": -1, "filename": "tfserver-0.1a18.tar.gz", "has_sig": false, "md5_digest": "fac24340b50c8591eda3474082578395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9564, "upload_time": "2018-01-06T09:00:33", "upload_time_iso_8601": "2018-01-06T09:00:33.477659Z", "url": "https://files.pythonhosted.org/packages/2c/79/eebec6ad5006beaba1131961249fb73ec7188ffd3bdd3232b855917c73a5/tfserver-0.1a18.tar.gz", "yanked": false}], "0.1a19": [{"comment_text": "", "digests": {"md5": "5eec1c07b69cd3b01dd72ad8a85df6a1", "sha256": "52433b068e7660f0c380a9aa1a63c3142aca70d46cb7a95a80867e0a046e800c"}, "downloads": -1, "filename": "tfserver-0.1a19.tar.gz", "has_sig": false, "md5_digest": "5eec1c07b69cd3b01dd72ad8a85df6a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9564, "upload_time": "2018-01-06T09:04:36", "upload_time_iso_8601": "2018-01-06T09:04:36.039431Z", "url": "https://files.pythonhosted.org/packages/fd/b8/21c63f08228636b0ceee1fed0618196300c18523eb43c4dc7a6b1a45cadd/tfserver-0.1a19.tar.gz", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "e246e2aca15f89a667cfab112f1b16e6", "sha256": "a939b6557a190c94063a5ffe46e40239f0fac14622fe9e68ab394c26db03435f"}, "downloads": -1, "filename": "tfserver-0.1a2.tar.gz", "has_sig": false, "md5_digest": "e246e2aca15f89a667cfab112f1b16e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7630, "upload_time": "2018-01-05T12:37:14", "upload_time_iso_8601": "2018-01-05T12:37:14.602044Z", "url": "https://files.pythonhosted.org/packages/08/0b/e78825ae0db30acf1dfb03a75650bd92af81bb8c47cee2b23a3d916f845b/tfserver-0.1a2.tar.gz", "yanked": false}], "0.1a20": [{"comment_text": "", "digests": {"md5": "361aaa203b58339e1e25ff14d669790e", "sha256": "ff53a7d80870c40dbd517da7a899a0d64a4a025c5429a9cc4026636c2a5c138c"}, "downloads": -1, "filename": "tfserver-0.1a20.tar.gz", "has_sig": false, "md5_digest": "361aaa203b58339e1e25ff14d669790e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9678, "upload_time": "2018-01-06T09:57:45", "upload_time_iso_8601": "2018-01-06T09:57:45.280570Z", "url": "https://files.pythonhosted.org/packages/cd/d0/4ce6fd1b9b678bf7bc84e06a1e571210088d1ad944fab59628f329b23064/tfserver-0.1a20.tar.gz", "yanked": false}], "0.1a21": [{"comment_text": "", "digests": {"md5": "e14e3b686f0193295201e8b4287dcd87", "sha256": "102724829423f4f0be274b302b010fa436ae50e5ab123bbb3e28d828bfec4f94"}, "downloads": -1, "filename": "tfserver-0.1a21.tar.gz", "has_sig": false, "md5_digest": "e14e3b686f0193295201e8b4287dcd87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9716, "upload_time": "2018-01-06T09:59:35", "upload_time_iso_8601": "2018-01-06T09:59:35.351599Z", "url": "https://files.pythonhosted.org/packages/57/0d/48e20581552a0c691c5f0a6d278304c6ffde7d2e4ca89cda7facb5e8dbf4/tfserver-0.1a21.tar.gz", "yanked": false}], "0.1a22": [{"comment_text": "", "digests": {"md5": "eecd2891c440443d8dc7207988a1a60c", "sha256": "cf8cd889d4d556de330c36dc3ef0f40e1d3ad0e8d76fac2880ffdcc4626d9dda"}, "downloads": -1, "filename": "tfserver-0.1a22.tar.gz", "has_sig": false, "md5_digest": "eecd2891c440443d8dc7207988a1a60c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9715, "upload_time": "2018-01-06T10:07:19", "upload_time_iso_8601": "2018-01-06T10:07:19.281971Z", "url": "https://files.pythonhosted.org/packages/ce/71/22e13cb1838c866ae7c2861921d4aa2b13c0995990c6b1305e29b23f8941/tfserver-0.1a22.tar.gz", "yanked": false}], "0.1a23": [{"comment_text": "", "digests": {"md5": "d06ea876eb5b13dbcc951107eb0136c1", "sha256": "7ea63d72c055bf3008f5470984d7068dd16fa2ae70dda2f40eae123c3436495c"}, "downloads": -1, "filename": "tfserver-0.1a23.tar.gz", "has_sig": false, "md5_digest": "d06ea876eb5b13dbcc951107eb0136c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9705, "upload_time": "2018-01-06T10:27:56", "upload_time_iso_8601": "2018-01-06T10:27:56.924655Z", "url": "https://files.pythonhosted.org/packages/56/b9/b467665fc1872ffa1be30ef630bdf210f41af52fbfacaa2656ce5bec995c/tfserver-0.1a23.tar.gz", "yanked": false}], "0.1a24": [{"comment_text": "", "digests": {"md5": "21886bb3566adab4dcab2155720cf9b9", "sha256": "cf07abdc67c559d00807d5c6a7eb8f54fa173cdebda4e5c3cd552526b38acba0"}, "downloads": -1, "filename": "tfserver-0.1a24.tar.gz", "has_sig": false, "md5_digest": "21886bb3566adab4dcab2155720cf9b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9820, "upload_time": "2018-01-06T21:59:04", "upload_time_iso_8601": "2018-01-06T21:59:04.986637Z", "url": "https://files.pythonhosted.org/packages/28/13/884a346d6cc5c00335aec06fa8913ee6be8227d3ccd9ef140507c1383a4d/tfserver-0.1a24.tar.gz", "yanked": false}], "0.1a25": [{"comment_text": "", "digests": {"md5": "c8aefe5b63ff8c5a3c2c7a9425183da8", "sha256": "158c349c2cf03636cccaa40fe1c3eb7707a953bf3da18185122d98ef8d8d3d3f"}, "downloads": -1, "filename": "tfserver-0.1a25.tar.gz", "has_sig": false, "md5_digest": "c8aefe5b63ff8c5a3c2c7a9425183da8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9837, "upload_time": "2018-01-06T22:02:21", "upload_time_iso_8601": "2018-01-06T22:02:21.313999Z", "url": "https://files.pythonhosted.org/packages/fa/e9/e1fc85d5c76696235793574ad6becd2ba74d98c774577eb15e27d7687fbf/tfserver-0.1a25.tar.gz", "yanked": false}], "0.1a26": [{"comment_text": "", "digests": {"md5": "6effe0a03a1bccb3eeb63055c3d45b26", "sha256": "1403ba12026a9b50fde93169c0219ea2e60842eaf801f339b462a5a1038dc14f"}, "downloads": -1, "filename": "tfserver-0.1a26.tar.gz", "has_sig": false, "md5_digest": "6effe0a03a1bccb3eeb63055c3d45b26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9792, "upload_time": "2018-01-06T22:06:26", "upload_time_iso_8601": "2018-01-06T22:06:26.210115Z", "url": "https://files.pythonhosted.org/packages/1b/bd/67c6a3daacc9e1e2d305308b480144ea8b809ed74a9b108d10dd1635efaa/tfserver-0.1a26.tar.gz", "yanked": false}], "0.1a27": [{"comment_text": "", "digests": {"md5": "23dbcd911d68b482ab82eb4a8b069c26", "sha256": "a977bf3b68369b63ac90520249a00f7052c4fa65eea2f5ecd64f07dd6dc4ec13"}, "downloads": -1, "filename": "tfserver-0.1a27.tar.gz", "has_sig": false, "md5_digest": "23dbcd911d68b482ab82eb4a8b069c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9839, "upload_time": "2018-01-06T22:16:41", "upload_time_iso_8601": "2018-01-06T22:16:41.488686Z", "url": "https://files.pythonhosted.org/packages/44/5e/109bbce55e67f993e7eac74ca659e8d705fb776f80318ce2ce437f99a609/tfserver-0.1a27.tar.gz", "yanked": false}], "0.1a28": [{"comment_text": "", "digests": {"md5": "4efd7e3ac3fd653a0ea6f504c5f12669", "sha256": "45e651de2f74e7d8cde69ff94d3b7c95bf6a440970eeaacee2fea8d149cba2c2"}, "downloads": -1, "filename": "tfserver-0.1a28.tar.gz", "has_sig": false, "md5_digest": "4efd7e3ac3fd653a0ea6f504c5f12669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10011, "upload_time": "2018-01-07T08:01:46", "upload_time_iso_8601": "2018-01-07T08:01:46.124259Z", "url": "https://files.pythonhosted.org/packages/00/d6/fab49a051b23346fd8a15e68ffd20554d1366db1e543b567aa2cb2b9fe14/tfserver-0.1a28.tar.gz", "yanked": false}], "0.1a29": [{"comment_text": "", "digests": {"md5": "c8f37c969db81ef65bb60871898fdcdf", "sha256": "c578ee9b3c846b02bdc7c6a8f1f80153db175b27d56ed3bce105ed33085bcabe"}, "downloads": -1, "filename": "tfserver-0.1a29.tar.gz", "has_sig": false, "md5_digest": "c8f37c969db81ef65bb60871898fdcdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10026, "upload_time": "2018-01-07T09:02:43", "upload_time_iso_8601": "2018-01-07T09:02:43.743376Z", "url": "https://files.pythonhosted.org/packages/98/8f/02588206514a528bd067555fa73db3721899f8d2aa0ef8ea5691003c1869/tfserver-0.1a29.tar.gz", "yanked": false}], "0.1a3": [{"comment_text": "", "digests": {"md5": "fdbaf505b4ea2e17f79d8d1231274397", "sha256": "5ec51e1237e987dc30caaf4afdd3fcb22ec905a6c44d70785a305054b18a86d0"}, "downloads": -1, "filename": "tfserver-0.1a3.tar.gz", "has_sig": false, "md5_digest": "fdbaf505b4ea2e17f79d8d1231274397", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7627, "upload_time": "2018-01-05T12:38:29", "upload_time_iso_8601": "2018-01-05T12:38:29.277340Z", "url": "https://files.pythonhosted.org/packages/c0/93/0cec9d9e279622703ed61eabbbf939985535889f8c7ea6f5458d64016d50/tfserver-0.1a3.tar.gz", "yanked": false}], "0.1a30": [{"comment_text": "", "digests": {"md5": "80c753c8ad8f0444174b0d2a72463555", "sha256": "1c551107b04ce9227ab699a11fda510b38cf02a47a32de25c289186891edd523"}, "downloads": -1, "filename": "tfserver-0.1a30.tar.gz", "has_sig": false, "md5_digest": "80c753c8ad8f0444174b0d2a72463555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10231, "upload_time": "2018-01-24T10:56:12", "upload_time_iso_8601": "2018-01-24T10:56:12.598188Z", "url": "https://files.pythonhosted.org/packages/7f/58/5ce9ba8f10a65dde532b594909b93e56946c54d9c020787b9eebea7f5136/tfserver-0.1a30.tar.gz", "yanked": false}], "0.1a31": [{"comment_text": "", "digests": {"md5": "7395d5bf16ed22c334a4adba11830ab7", "sha256": "d77a93508c3f0d1f135f4544df7656e42e3b0971a15d89e8275953ee77c629ec"}, "downloads": -1, "filename": "tfserver-0.1a31.tar.gz", "has_sig": false, "md5_digest": "7395d5bf16ed22c334a4adba11830ab7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10224, "upload_time": "2018-01-25T04:42:18", "upload_time_iso_8601": "2018-01-25T04:42:18.499014Z", "url": "https://files.pythonhosted.org/packages/d6/c2/93f8dd9d3bf2caba8db106ec7309b3ddcef63ad010231b30212666684b01/tfserver-0.1a31.tar.gz", "yanked": false}], "0.1a32": [{"comment_text": "", "digests": {"md5": "93c9bdc764d7957aa213972b6f938951", "sha256": "e9ecdecda5a56e3888ef4564cbe8aa93041fc266681e9874e5f52782e67933e3"}, "downloads": -1, "filename": "tfserver-0.1a32.tar.gz", "has_sig": false, "md5_digest": "93c9bdc764d7957aa213972b6f938951", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10310, "upload_time": "2018-01-27T14:36:36", "upload_time_iso_8601": "2018-01-27T14:36:36.055361Z", "url": "https://files.pythonhosted.org/packages/de/83/3adf8d003f210cf70232c5b7febb8d106a2ffe7fcd7ca74a696e69193337/tfserver-0.1a32.tar.gz", "yanked": false}], "0.1a4": [{"comment_text": "", "digests": {"md5": "390e444a0723db86a86b44c88727cce3", "sha256": "573611a4faff663e697856962670f5762c8237abb1d9628f3ebe2f8a49cd71a1"}, "downloads": -1, "filename": "tfserver-0.1a4.tar.gz", "has_sig": false, "md5_digest": "390e444a0723db86a86b44c88727cce3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7960, "upload_time": "2018-01-05T12:46:06", "upload_time_iso_8601": "2018-01-05T12:46:06.415347Z", "url": "https://files.pythonhosted.org/packages/8d/19/e8a2544f0d0b11c466ef65da5661e78f76fdd4f4a580d7cd92d00841db7c/tfserver-0.1a4.tar.gz", "yanked": false}], "0.1a5": [{"comment_text": "", "digests": {"md5": "ba0cee2ee21223bdd550d1df4f7ad209", "sha256": "f9669561e2bd40e62e9c3938c45328209988d8cf58c24ae32d3503a8c242e269"}, "downloads": -1, "filename": "tfserver-0.1a5.tar.gz", "has_sig": false, "md5_digest": "ba0cee2ee21223bdd550d1df4f7ad209", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7992, "upload_time": "2018-01-05T12:47:33", "upload_time_iso_8601": "2018-01-05T12:47:33.842190Z", "url": "https://files.pythonhosted.org/packages/6d/20/9d67e4a9f5bdbf6f0c1ca3cedf5ca330be03aa57d9df320f595e9126a65c/tfserver-0.1a5.tar.gz", "yanked": false}], "0.1a6": [{"comment_text": "", "digests": {"md5": "3aa9e055d3c5de38b566d6de2d7b3ac9", "sha256": "4b1cf9dde63a1c58720d75c59866066fb4ffa1f1093d21086c9f194fec9d8404"}, "downloads": -1, "filename": "tfserver-0.1a6.tar.gz", "has_sig": false, "md5_digest": "3aa9e055d3c5de38b566d6de2d7b3ac9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8039, "upload_time": "2018-01-05T12:52:04", "upload_time_iso_8601": "2018-01-05T12:52:04.420214Z", "url": "https://files.pythonhosted.org/packages/80/05/adf2d4c813d76a96a99d8b125659e3929de8545796ac905792c564d4bffa/tfserver-0.1a6.tar.gz", "yanked": false}], "0.1a7": [{"comment_text": "", "digests": {"md5": "a56e676cf4de43c8330845a5d7220e90", "sha256": "73a6f6848d150534ea9a09c71f294ed2e5ee62801040e5bdeb6b7fabc456ef33"}, "downloads": -1, "filename": "tfserver-0.1a7.tar.gz", "has_sig": false, "md5_digest": "a56e676cf4de43c8330845a5d7220e90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8038, "upload_time": "2018-01-05T12:53:16", "upload_time_iso_8601": "2018-01-05T12:53:16.142926Z", "url": "https://files.pythonhosted.org/packages/95/1a/0684f26c12b6919a717311ca5330522a177a4b0e87d0b26365276138354f/tfserver-0.1a7.tar.gz", "yanked": false}], "0.1a8": [{"comment_text": "", "digests": {"md5": "eb8f13c843f96254610aae369758f29b", "sha256": "1ff6188f177d06cc4b1cc98e5cb69b1a56c23cac07989761c018600febf05fc7"}, "downloads": -1, "filename": "tfserver-0.1a8.tar.gz", "has_sig": false, "md5_digest": "eb8f13c843f96254610aae369758f29b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8033, "upload_time": "2018-01-05T12:54:31", "upload_time_iso_8601": "2018-01-05T12:54:31.110639Z", "url": "https://files.pythonhosted.org/packages/93/32/0eb4daa0e0dc0d353076f8029fedfabcc968a38d7ffd92347b9f7fec0ca5/tfserver-0.1a8.tar.gz", "yanked": false}], "0.1a9": [{"comment_text": "", "digests": {"md5": "2eed27875998c6170d2cea73a8149f4d", "sha256": "2808580e565a7d8c83dd2a914b536f1550d551879810373bb6091ee8aa1c1843"}, "downloads": -1, "filename": "tfserver-0.1a9.tar.gz", "has_sig": false, "md5_digest": "2eed27875998c6170d2cea73a8149f4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7975, "upload_time": "2018-01-05T13:00:07", "upload_time_iso_8601": "2018-01-05T13:00:07.216799Z", "url": "https://files.pythonhosted.org/packages/76/da/0720101e2b8fa12f192dfef8f96898e8e376dea1504aadcc9f6e0541bcf9/tfserver-0.1a9.tar.gz", "yanked": false}], "0.1b1": [{"comment_text": "", "digests": {"md5": "1dd4f0d00756935d6d9084f55e09fd57", "sha256": "453eb1b31a70cae86aa7a067c0bc84772b709d2e124d1818c12d1d48c63446ad"}, "downloads": -1, "filename": "tfserver-0.1b1.tar.gz", "has_sig": false, "md5_digest": "1dd4f0d00756935d6d9084f55e09fd57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10319, "upload_time": "2018-01-28T04:14:31", "upload_time_iso_8601": "2018-01-28T04:14:31.278393Z", "url": "https://files.pythonhosted.org/packages/57/80/590b347869e67e33c109dd8d907323b582a7564e2917b493615bff68e910/tfserver-0.1b1.tar.gz", "yanked": false}], "0.1b2": [{"comment_text": "", "digests": {"md5": "0aa4d5dd9838f272d3eaf51a52a957f1", "sha256": "8503b3ce0e7285b17ab982a5542c22f1dc69e0f3c159a5b5e62a30ad1bafe3ba"}, "downloads": -1, "filename": "tfserver-0.1b2.tar.gz", "has_sig": false, "md5_digest": "0aa4d5dd9838f272d3eaf51a52a957f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10419, "upload_time": "2018-01-30T04:22:26", "upload_time_iso_8601": "2018-01-30T04:22:26.712729Z", "url": "https://files.pythonhosted.org/packages/55/b2/f9aaf1811de21c3470df60c20f0ed42033463a6561c99489ebd7a51d9168/tfserver-0.1b2.tar.gz", "yanked": false}], "0.1b3": [{"comment_text": "", "digests": {"md5": "06badf81bdcf53fb9f27692ddeb44586", "sha256": "c047ac4451fe27c0bc89c2c40a1ac2a22d81d11e3da815466d8c3d4127fd61fe"}, "downloads": -1, "filename": "tfserver-0.1b3.tar.gz", "has_sig": false, "md5_digest": "06badf81bdcf53fb9f27692ddeb44586", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10512, "upload_time": "2018-02-04T12:11:49", "upload_time_iso_8601": "2018-02-04T12:11:49.161466Z", "url": "https://files.pythonhosted.org/packages/70/85/df3228bd3505c2bbea5872181ef4c492e5bdcce02cfa3be77cfa7288423d/tfserver-0.1b3.tar.gz", "yanked": false}], "0.1b4": [{"comment_text": "", "digests": {"md5": "ecd1a1dea6a952d62deae06d5cf47d6b", "sha256": "cae82a7ce92b52ae70c9da05816ad5ca3e7e80fa76852df175555b01f043e890"}, "downloads": -1, "filename": "tfserver-0.1b4.tar.gz", "has_sig": false, "md5_digest": "ecd1a1dea6a952d62deae06d5cf47d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10515, "upload_time": "2018-02-10T04:12:51", "upload_time_iso_8601": "2018-02-10T04:12:51.264216Z", "url": "https://files.pythonhosted.org/packages/33/41/77ef4f5dd0667a506bf8fbd4142c38736a10cf07c0dbc57a03e0c45659a0/tfserver-0.1b4.tar.gz", "yanked": false}], "0.1b5": [{"comment_text": "", "digests": {"md5": "3de81b23f3daaf891aba7ae1395ec595", "sha256": "f737da2ee97457d4a2146eada06a1c33923ed33b60c18df1007deeb551364ae2"}, "downloads": -1, "filename": "tfserver-0.1b5.tar.gz", "has_sig": false, "md5_digest": "3de81b23f3daaf891aba7ae1395ec595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10505, "upload_time": "2018-02-10T10:22:55", "upload_time_iso_8601": "2018-02-10T10:22:55.051525Z", "url": "https://files.pythonhosted.org/packages/a4/f6/48cbe0777adbf30eb472703924620495a597e37d37022900f90c6e854dff/tfserver-0.1b5.tar.gz", "yanked": false}], "0.1b6": [{"comment_text": "", "digests": {"md5": "222ff9030dfa20b07867e15b2f90c8a4", "sha256": "ffa0368c732780ba31ec9557885f7f577d5c60ccf692720216c745ae5dfe6647"}, "downloads": -1, "filename": "tfserver-0.1b6.tar.gz", "has_sig": false, "md5_digest": "222ff9030dfa20b07867e15b2f90c8a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9442, "upload_time": "2018-03-19T04:30:32", "upload_time_iso_8601": "2018-03-19T04:30:32.640544Z", "url": "https://files.pythonhosted.org/packages/3e/55/cd125ddfd3dbfd55a73fbc50c1b0a31333761ed36e1f0d653a4665f9dc9f/tfserver-0.1b6.tar.gz", "yanked": false}], "0.1b7": [{"comment_text": "", "digests": {"md5": "03e121b349a31773d7dd4b2858eed756", "sha256": "97b226c0faa9046481d2de4c2f9ce712266b7516422f598f58c6f7e3f857570a"}, "downloads": -1, "filename": "tfserver-0.1b7.tar.gz", "has_sig": false, "md5_digest": "03e121b349a31773d7dd4b2858eed756", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9700, "upload_time": "2018-03-21T06:50:54", "upload_time_iso_8601": "2018-03-21T06:50:54.684047Z", "url": "https://files.pythonhosted.org/packages/67/80/4a2af5857036a2a1285009d68dec750374f956feb6c6726438bcd1bc4dad/tfserver-0.1b7.tar.gz", "yanked": false}], "0.1b8": [{"comment_text": "", "digests": {"md5": "3a5cdd7747967f83514760726f0595df", "sha256": "6586310e65ce73979b7d05dfe644352ab3de718e9c0cb0f02af2b0f499da9737"}, "downloads": -1, "filename": "tfserver-0.1b8.tar.gz", "has_sig": false, "md5_digest": "3a5cdd7747967f83514760726f0595df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9672, "upload_time": "2018-04-09T11:18:42", "upload_time_iso_8601": "2018-04-09T11:18:42.429055Z", "url": "https://files.pythonhosted.org/packages/8c/23/f98512f5762322128fce780b4167147321f91c4fe7e4e352a97392d2dd5c/tfserver-0.1b8.tar.gz", "yanked": false}], "0.1b9": [{"comment_text": "", "digests": {"md5": "0947e9de8f44c7fe349cac0f6dccb905", "sha256": "3aaee73a5b60758a826c55f81c798a40da60af2a859890c6a3262a44c65eb73a"}, "downloads": -1, "filename": "tfserver-0.1b9.tar.gz", "has_sig": false, "md5_digest": "0947e9de8f44c7fe349cac0f6dccb905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9705, "upload_time": "2018-04-12T23:48:04", "upload_time_iso_8601": "2018-04-12T23:48:04.294245Z", "url": "https://files.pythonhosted.org/packages/4a/dd/fcc2254b04dbe3f6915ef41aefbfad75219af39d8a77fee644b220f0aa1d/tfserver-0.1b9.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f54c3583cbd6570e876ad66df3bb9807", "sha256": "b603882d021da9ae3f44c599a00d2b0ffde34bff6bcfbd7b00f18b3479309e72"}, "downloads": -1, "filename": "tfserver-0.2.tar.gz", "has_sig": false, "md5_digest": "f54c3583cbd6570e876ad66df3bb9807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9284, "upload_time": "2018-12-01T07:46:44", "upload_time_iso_8601": "2018-12-01T07:46:44.307303Z", "url": "https://files.pythonhosted.org/packages/23/df/6603e17829d468701ce8f89a29cf4d25a468c2c8a1e1856410bb0a15c4be/tfserver-0.2.tar.gz", "yanked": false}], "0.2.0.1": [{"comment_text": "", "digests": {"md5": "cd3b640b0d4493ebaeed27edd673cf04", "sha256": "d1bd8ffd7d41f6b692610d4787805f6ab3ba2537a924dff9984014d2697bf8e5"}, "downloads": -1, "filename": "tfserver-0.2.0.1.tar.gz", "has_sig": false, "md5_digest": "cd3b640b0d4493ebaeed27edd673cf04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9288, "upload_time": "2018-12-01T11:19:48", "upload_time_iso_8601": "2018-12-01T11:19:48.745800Z", "url": "https://files.pythonhosted.org/packages/c8/61/61b443a8e67f180c0c21146075d73f730e7476c7b987373563ce0fa6e46c/tfserver-0.2.0.1.tar.gz", "yanked": false}], "0.2.0.10": [{"comment_text": "", "digests": {"md5": "a9e3d535009cb3a6b96a8b7e62c84bb7", "sha256": "dec3996e949076854b5555a780f289c7d2d7c14a83c7ff0db43b0b093f7e3a40"}, "downloads": -1, "filename": "tfserver-0.2.0.10.tar.gz", "has_sig": false, "md5_digest": "a9e3d535009cb3a6b96a8b7e62c84bb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14053, "upload_time": "2019-10-20T03:50:11", "upload_time_iso_8601": "2019-10-20T03:50:11.822902Z", "url": "https://files.pythonhosted.org/packages/d4/1f/cb7426d62f6449448eac8e675d85090a36de7e01eea34f58dd80827665d2/tfserver-0.2.0.10.tar.gz", "yanked": false}], "0.2.0.11": [{"comment_text": "", "digests": {"md5": "24f2ae632c617b766bacc8a08fee9180", "sha256": "1b04f84bb6079664d4926549dafa3e1535f4119ff6c02dd7b062ae986bbdff00"}, "downloads": -1, "filename": "tfserver-0.2.0.11.tar.gz", "has_sig": false, "md5_digest": "24f2ae632c617b766bacc8a08fee9180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14062, "upload_time": "2019-10-20T04:33:38", "upload_time_iso_8601": "2019-10-20T04:33:38.478898Z", "url": "https://files.pythonhosted.org/packages/e0/64/8aa61abdf718b2b7b2828a1ed5c921137943f8f04fca35a3f071968d9dd2/tfserver-0.2.0.11.tar.gz", "yanked": false}], "0.2.0.12": [{"comment_text": "", "digests": {"md5": "e526559795eda9826fbcb2844d2f654b", "sha256": "aa9ef6e76185cf4c04361c4632ff68fa432a676bc373a5a73a9dd24339e0510b"}, "downloads": -1, "filename": "tfserver-0.2.0.12.tar.gz", "has_sig": false, "md5_digest": "e526559795eda9826fbcb2844d2f654b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10522, "upload_time": "2019-10-25T12:10:57", "upload_time_iso_8601": "2019-10-25T12:10:57.580700Z", "url": "https://files.pythonhosted.org/packages/be/18/cce9e22e356c93d50b5507b0d78b8759ef15eeea3815bad03c9d1c80c782/tfserver-0.2.0.12.tar.gz", "yanked": false}], "0.2.0.2": [{"comment_text": "", "digests": {"md5": "7729228ceb1afb723c0d56343706bb9b", "sha256": "3c8ab0bb3dcb03b7ebe64e40f509dfb79d28ca142df778c371cff12fabbe1cfb"}, "downloads": -1, "filename": "tfserver-0.2.0.2.tar.gz", "has_sig": false, "md5_digest": "7729228ceb1afb723c0d56343706bb9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9389, "upload_time": "2019-01-08T21:59:23", "upload_time_iso_8601": "2019-01-08T21:59:23.319114Z", "url": "https://files.pythonhosted.org/packages/44/50/416acd16c3704bb50eba92ecd6dee48c6abb81801b3d542516908d84e967/tfserver-0.2.0.2.tar.gz", "yanked": false}], "0.2.0.3": [{"comment_text": "", "digests": {"md5": "f194431953d828faa2a3768c18bf6ac7", "sha256": "ed72644198600b8dba21f349e988a2eaf2ca8465b25cdfede538bc0695df7277"}, "downloads": -1, "filename": "tfserver-0.2.0.3.tar.gz", "has_sig": false, "md5_digest": "f194431953d828faa2a3768c18bf6ac7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9388, "upload_time": "2019-01-16T05:56:31", "upload_time_iso_8601": "2019-01-16T05:56:31.475182Z", "url": "https://files.pythonhosted.org/packages/2a/29/9f3a133cc9a8ee234ceaa010ec09fd9a7de367f97ddc568a7bfe601389dc/tfserver-0.2.0.3.tar.gz", "yanked": false}], "0.2.0.4": [{"comment_text": "", "digests": {"md5": "43f78ca5e48542f45f45836218b37565", "sha256": "324edf62d32930e3c73be1bfb7617dbf8f29be344f306221faafeddcd9ca4a5f"}, "downloads": -1, "filename": "tfserver-0.2.0.4.tar.gz", "has_sig": false, "md5_digest": "43f78ca5e48542f45f45836218b37565", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9421, "upload_time": "2019-01-27T08:31:38", "upload_time_iso_8601": "2019-01-27T08:31:38.883595Z", "url": "https://files.pythonhosted.org/packages/d6/32/74e6cd34caf60452736b3a048307ae2c07ea624a9065885ea54503c09087/tfserver-0.2.0.4.tar.gz", "yanked": false}], "0.2.0.5": [{"comment_text": "", "digests": {"md5": "80593204108b3f467dd685d7f7b2fd94", "sha256": "f1a5180f6d60ec32c1d1f853f14a535a0aaef9d00d4739980fad6de12c102666"}, "downloads": -1, "filename": "tfserver-0.2.0.5.tar.gz", "has_sig": false, "md5_digest": "80593204108b3f467dd685d7f7b2fd94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9617, "upload_time": "2019-04-08T12:32:16", "upload_time_iso_8601": "2019-04-08T12:32:16.935113Z", "url": "https://files.pythonhosted.org/packages/45/b4/27e64cb564929c3690cc925f14feb1d695e5a8dc54f079410a8f980710da/tfserver-0.2.0.5.tar.gz", "yanked": false}], "0.2.0.6": [{"comment_text": "", "digests": {"md5": "1e2ebbaf76ac583db9828407ed835d9f", "sha256": "c73f6f522218be47d9c5e8b75d56aad99763dee1812dbcf88826c2e441846de7"}, "downloads": -1, "filename": "tfserver-0.2.0.6.tar.gz", "has_sig": false, "md5_digest": "1e2ebbaf76ac583db9828407ed835d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10716, "upload_time": "2019-07-21T04:51:49", "upload_time_iso_8601": "2019-07-21T04:51:49.910895Z", "url": "https://files.pythonhosted.org/packages/cf/45/9ebc6b8506d7c89c3b23def429bf1287ea3d6a0aee72c6975f92c5582638/tfserver-0.2.0.6.tar.gz", "yanked": false}], "0.2.0.7": [{"comment_text": "", "digests": {"md5": "3512536ebf36fe0ea3044d36502e844d", "sha256": "5b127a09275034d230eb9094f3a6278b815aba14ea4b14138ff03f41007854dd"}, "downloads": -1, "filename": "tfserver-0.2.0.7.tar.gz", "has_sig": false, "md5_digest": "3512536ebf36fe0ea3044d36502e844d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10713, "upload_time": "2019-07-21T04:55:53", "upload_time_iso_8601": "2019-07-21T04:55:53.557054Z", "url": "https://files.pythonhosted.org/packages/96/f0/2a829c0a153ffc5dcafc0f993a748b8f2d4d34dc5a917770137c1f4064fe/tfserver-0.2.0.7.tar.gz", "yanked": false}], "0.2.0.8": [{"comment_text": "", "digests": {"md5": "fd160c7b7102fd027dfcc4080b8c728f", "sha256": "8c5fb1eeb400ec9c7f224d6fac0260771f58d721adeaa498bfb92878a5e1d4ed"}, "downloads": -1, "filename": "tfserver-0.2.0.8.tar.gz", "has_sig": false, "md5_digest": "fd160c7b7102fd027dfcc4080b8c728f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10712, "upload_time": "2019-07-21T05:37:18", "upload_time_iso_8601": "2019-07-21T05:37:18.863893Z", "url": "https://files.pythonhosted.org/packages/51/81/08cfc577a02a7734d798a815cc10e381a36baa48d0027a074d93941af591/tfserver-0.2.0.8.tar.gz", "yanked": false}], "0.2.0.9": [{"comment_text": "", "digests": {"md5": "de36b08ca798755d7491177bb4a4ffc9", "sha256": "d5b0e7ea98c5063d406f13a8551f1a4a861bcbe1b6256517d10b03d9616c80f1"}, "downloads": -1, "filename": "tfserver-0.2.0.9.tar.gz", "has_sig": false, "md5_digest": "de36b08ca798755d7491177bb4a4ffc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10710, "upload_time": "2019-07-21T05:40:14", "upload_time_iso_8601": "2019-07-21T05:40:14.604978Z", "url": "https://files.pythonhosted.org/packages/52/d0/cf807b049fda60dbd6d8deb09f51ecfd0792eea76ca4b07ccd9351da4f45/tfserver-0.2.0.9.tar.gz", "yanked": false}], "0.2a1": [{"comment_text": "", "digests": {"md5": "5795cf2513da76e5b7450f50455159fb", "sha256": "5f4e056db99f49c6083b63a027356d4ef1a562c776fb1167cc05fde6eb4cab73"}, "downloads": -1, "filename": "tfserver-0.2a1.tar.gz", "has_sig": false, "md5_digest": "5795cf2513da76e5b7450f50455159fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9588, "upload_time": "2018-06-17T20:56:33", "upload_time_iso_8601": "2018-06-17T20:56:33.366348Z", "url": "https://files.pythonhosted.org/packages/7f/d0/d2023c156f0b041d909ebd2621ede155d0ecccfce6f38f937a1facf94d61/tfserver-0.2a1.tar.gz", "yanked": false}], "0.2a2": [{"comment_text": "", "digests": {"md5": "40c86faacfaf5637becfd5a67fcce614", "sha256": "24992f37f2e9919a45970d0d30887acacf814698e92faa324a8c4559004e9d1f"}, "downloads": -1, "filename": "tfserver-0.2a2.tar.gz", "has_sig": false, "md5_digest": "40c86faacfaf5637becfd5a67fcce614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9262, "upload_time": "2018-06-24T04:24:53", "upload_time_iso_8601": "2018-06-24T04:24:53.088573Z", "url": "https://files.pythonhosted.org/packages/90/0d/88bdaa2ddf3c29b4833662b2a02d77f717b8490e574741a606c4d0f5c50c/tfserver-0.2a2.tar.gz", "yanked": false}], "0.2a3": [{"comment_text": "", "digests": {"md5": "75e8ecf67ac0ff80a7b34bd44adff096", "sha256": "604c403cfed2dc7c24c6867ad6223ca8e20d3dbd04ddaa072588daacf64eb8dd"}, "downloads": -1, "filename": "tfserver-0.2a3.tar.gz", "has_sig": false, "md5_digest": "75e8ecf67ac0ff80a7b34bd44adff096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9266, "upload_time": "2018-06-24T10:38:55", "upload_time_iso_8601": "2018-06-24T10:38:55.756303Z", "url": "https://files.pythonhosted.org/packages/ed/f6/8436ab28808b8946b44de807fcffd6676bb17d53ccc2482ae47925dd7581/tfserver-0.2a3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e526559795eda9826fbcb2844d2f654b", "sha256": "aa9ef6e76185cf4c04361c4632ff68fa432a676bc373a5a73a9dd24339e0510b"}, "downloads": -1, "filename": "tfserver-0.2.0.12.tar.gz", "has_sig": false, "md5_digest": "e526559795eda9826fbcb2844d2f654b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10522, "upload_time": "2019-10-25T12:10:57", "upload_time_iso_8601": "2019-10-25T12:10:57.580700Z", "url": "https://files.pythonhosted.org/packages/be/18/cce9e22e356c93d50b5507b0d78b8759ef15eeea3815bad03c9d1c80c782/tfserver-0.2.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:21 2020"}