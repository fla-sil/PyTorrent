{"info": {"author": "Dhananjay Nene", "author_email": "dhananjay.nene@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "nestegg\n=======\n\n.. contents::\n\nOn-demand, lightweight, package building pypi mirror\n\nFeatures \n--------\n\n.. note :: \n\n  Still in early stages, though has enough features for me to use it\n\n**Implemented**\n\n* *Pypi like repository*: For software you author or python libraries you modify but only publish internally\n* *Pypi Mirror*: Mirrors packages from pypi.python.org. \n  * *On demand*: Packages are downloaded only when requested for. \n  * *Lightweight*: Downloads and mirrors only those versions requested for.\n\n**TODO**\n\n* **Continuous integration**: Test all defined source builds at defined intervals and/or based on git / hg commits. Offer readonly web based interface to past tests and results\n* Apache integration using mod_wsgi\n* Refresh pypi packages and indices\n* Additional python versions (currently tested only with python 3.3)\n\nQuick start\n-----------\n\n* Create and activate a python virtual environment\n\n  * Currently only tested with python version 3.3. Additional versions to be added later\n\n* Install package::\n\n    $ pip install nestegg\n\n* Create configuration file for nestegg in your home directory `$HOME/nestegg.yml` ::\n\n.. code:: yml\n\n  nestegg:\n    nestegg_dir: /var/cache/nestegg                         # Where nestegg makes a nest\n    port: 7654                                              # Port to run on\n    index-url: https://pypi.python.org/simple               # Pypi Index URL\n    source_builds:                                          # List of source builds\n      - name: my_package_name                               # package name\n        repo_type: git                                      # git and hg supported\n        repo_url: git@mygithost.com:myuserid/mypackage.git  # git url here\n        private: Yes                                        # private or public\n        versions:\n          - version: 1.0.0                                  # python version\n            tag: 1.0.0                                      # git/hg branch/tag name\n            dist_file: mypackage-1.0.0.tar.gz               # source dist file name\n\nFor each source build / version defined, nestegg will :\n\n* Create a git or hg clone from the git / hg repo\n* Checkout the defined tag / branch\n* Create a source distribution using `python setup.py sdist`\n* Publish the distribution to the nestegg package repository. \n* You can install/use the distribution using pip, easy_install etc.\n\nAll the source builds and versions you defined will be cloned, the corresponding tag checked out and source distributi\n\n* Start nestegg server::\n\n  $ nestegg\n  Bottle v0.11.6 server starting up (using WSGIRefServer())...\n  Listening on http://0.0.0.0:7654/\n  Hit Ctrl-C to quit.\n\nUse http://localhost:7654/simple as the index url with pip or tox or other clients. eg. ::\n\n  $ pip install SQLAlchemy==0.8.2 --index-url=http://localhost:7654 \n\n\nGoals\n-----\n\n* Create a desktop / intranet mirror of all packages used. Create new test virtualenvs readily without having to wait for long downloads\n* Manage versions of your package dependencies (even if pypi eventually does not publish the versions you rely upon)\n* Publish versions of libraries you fork, or any you create to a pypi like repository without having to publish it globally.\n* Ensure access control. Continues to work with git/hg authentication over ssh\n* (TODO) Continuous / automatic integration / testing of python packages you author and maintain.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/dnene/nestegg", "keywords": "pypi mirror build release packages", "license": "The MIT License (MIT)", "maintainer": null, "maintainer_email": null, "name": "nestegg", "package_url": "https://pypi.org/project/nestegg/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nestegg/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/dnene/nestegg"}, "release_url": "https://pypi.org/project/nestegg/0.0.1alpha2/", "requires_dist": null, "requires_python": null, "summary": "Lightweight pypi mirror and continuous integration server", "version": "0.0.1alpha2", "yanked": false, "html_description": "<div class=\"project-description\">\n            nestegg<br>=======<br><br>.. contents::<br><br>On-demand, lightweight, package building pypi mirror<br><br>Features <br>--------<br><br>.. note :: <br><br>  Still in early stages, though has enough features for me to use it<br><br>**Implemented**<br><br>* *Pypi like repository*: For software you author or python libraries you modify but only publish internally<br>* *Pypi Mirror*: Mirrors packages from pypi.python.org. <br>  * *On demand*: Packages are downloaded only when requested for. <br>  * *Lightweight*: Downloads and mirrors only those versions requested for.<br><br>**TODO**<br><br>* **Continuous integration**: Test all defined source builds at defined intervals and/or based on git / hg commits. Offer readonly web based interface to past tests and results<br>* Apache integration using mod_wsgi<br>* Refresh pypi packages and indices<br>* Additional python versions (currently tested only with python 3.3)<br><br>Quick start<br>-----------<br><br>* Create and activate a python virtual environment<br><br>  * Currently only tested with python version 3.3. Additional versions to be added later<br><br>* Install package::<br><br>    $ pip install nestegg<br><br>* Create configuration file for nestegg in your home directory `$HOME/nestegg.yml` ::<br><br>.. code:: yml<br><br>  nestegg:<br>    nestegg_dir: /var/cache/nestegg                         # Where nestegg makes a nest<br>    port: 7654                                              # Port to run on<br>    index-url: https://pypi.python.org/simple               # Pypi Index URL<br>    source_builds:                                          # List of source builds<br>      - name: my_package_name                               # package name<br>        repo_type: git                                      # git and hg supported<br>        repo_url: git@mygithost.com:myuserid/mypackage.git  # git url here<br>        private: Yes                                        # private or public<br>        versions:<br>          - version: 1.0.0                                  # python version<br>            tag: 1.0.0                                      # git/hg branch/tag name<br>            dist_file: mypackage-1.0.0.tar.gz               # source dist file name<br><br>For each source build / version defined, nestegg will :<br><br>* Create a git or hg clone from the git / hg repo<br>* Checkout the defined tag / branch<br>* Create a source distribution using `python setup.py sdist`<br>* Publish the distribution to the nestegg package repository. <br>* You can install/use the distribution using pip, easy_install etc.<br><br>All the source builds and versions you defined will be cloned, the corresponding tag checked out and source distributi<br><br>* Start nestegg server::<br><br>  $ nestegg<br>  Bottle v0.11.6 server starting up (using WSGIRefServer())...<br>  Listening on http://0.0.0.0:7654/<br>  Hit Ctrl-C to quit.<br><br>Use http://localhost:7654/simple as the index url with pip or tox or other clients. eg. ::<br><br>  $ pip install SQLAlchemy==0.8.2 --index-url=http://localhost:7654 <br><br><br>Goals<br>-----<br><br>* Create a desktop / intranet mirror of all packages used. Create new test virtualenvs readily without having to wait for long downloads<br>* Manage versions of your package dependencies (even if pypi eventually does not publish the versions you rely upon)<br>* Publish versions of libraries you fork, or any you create to a pypi like repository without having to publish it globally.<br>* Ensure access control. Continues to work with git/hg authentication over ssh<br>* (TODO) Continuous / automatic integration / testing of python packages you author and maintain.\n          </div>"}, "last_serial": 848790, "releases": {"0.0.1alpha1": [], "0.0.1alpha2": [{"comment_text": "", "digests": {"md5": "714cd2e9be9e00463ba3d08f30117745", "sha256": "c96e2a3e3864f9eaa82f37914288e06bc3b3b410f28e056fa1369a4da423375f"}, "downloads": -1, "filename": "nestegg-0.0.1alpha2.tar.gz", "has_sig": false, "md5_digest": "714cd2e9be9e00463ba3d08f30117745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5486, "upload_time": "2013-08-26T03:47:03", "upload_time_iso_8601": "2013-08-26T03:47:03.955164Z", "url": "https://files.pythonhosted.org/packages/92/61/619870b7558f0fe3b27fef63f4b3c87acb8736f43f7c32ba55d4bfff0f31/nestegg-0.0.1alpha2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "714cd2e9be9e00463ba3d08f30117745", "sha256": "c96e2a3e3864f9eaa82f37914288e06bc3b3b410f28e056fa1369a4da423375f"}, "downloads": -1, "filename": "nestegg-0.0.1alpha2.tar.gz", "has_sig": false, "md5_digest": "714cd2e9be9e00463ba3d08f30117745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5486, "upload_time": "2013-08-26T03:47:03", "upload_time_iso_8601": "2013-08-26T03:47:03.955164Z", "url": "https://files.pythonhosted.org/packages/92/61/619870b7558f0fe3b27fef63f4b3c87acb8736f43f7c32ba55d4bfff0f31/nestegg-0.0.1alpha2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:22 2020"}