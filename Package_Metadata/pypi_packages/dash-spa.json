{"info": {"author": "Steve Jones", "author_email": "jonesst2608@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "### Dash Single Page Application (SPA) Framework\n\n    pip install -r requirements.txt\n    python usage.py\n\n**Dash/SPA** is a minimal template and component suite that allows you to build complex \n**[Dash](https://dash.plot.ly/introduction)** based multi-page applications with ease. The demo application includes\nseveral well known Dash demos that have been pasted into the SPA framework\nto show how easy it is to transition to SPA.\n\n**Dash/SPA** supports Flask style Blueprints and route decorators:\n\n```\nimport dash_html_components as html\nfrom dash_spa import Blueprint\n\ngreetings = Blueprint('greetings')\n\n@greetings.route('/hello')\ndef hello():\n    return html.H2('Dash/SPA says HELLO!')\n\n@greetings.route('/goodby')\ndef goodby():\n    return html.H2('Dash/SPA says GOODBY!')\n\n...\n\napp.register_blueprint(greetings, url_prefix='/test/greetings')\n```\n\n**Dash/SPA** manages component IDs using blueprint/route based namespaces. This greatly \nreduces Dash component ID conflicts. A component ID is only defined once when the component\nis created. It is then used by reference in associated Dash callbacks:\n\n```\n    user_name = spa.Input(id='user', placeholder=\"Enter name\")\n    password = spa.PasswordInput(\"Password\", name='password', id='password', placeholder=\"Enter password\")\n\n    btn = spa.Button('Enter', id='enter', disabled=True)\n\n    @app.callback(btn.output.disabled, [user_name.input.value, password.input.value])\n    def _cb_enter(user_name, password):\n        return not db_validate_user(user_name, password)\n\n```\n\n**Dash/SPA** includes an optional NAVBAR, configured by a simple dictionary:\n\n```\nNAV_BAR_ITEMS = {\n    'brand' : {'title' : 'Dash/SPA', 'href' : '/'},\n    'left' : [\n        {'title' : 'Global Warming', 'endpoint' : 'demo.warming'},\n        {'title' : 'State Solar', 'endpoint' : 'demo.solar'},\n        {'title' : 'Ticker', 'endpoint' : 'demo.ticker?tickers=COKE+TSLA'},\n    ],\n    'right': [\n        {'title' : 'Sign In', 'endpoint' : 'admin.login', 'icon' : \"fa fa-sign-in\"},\n        {'title' : 'Register', 'endpoint' : 'admin.register', 'icon' : \"fa fa-user\"},\n    ]\n}\n```\n\n**Dash/SPA** Allows easy creation of interactive forms\n\n```\n        email = spa.Input('Email', name='email', type='email', placeholder=\"Enter email\")\n        password = spa.PasswordInput(\"Password\", name='password', placeholder=\"Enter password\")\n        button = button = spa.Button('Sign In', type='submit')\n\n        form = spa.Form([\n            email,\n            password,\n            button,\n        ], title='Sign In'),\n\n\n        @spa.callback(form.output.children, [form.input.form_data])\n        def _form_submit(values):\n            print(values)\n            return spa.NOUPDATE\n\n\n```\n\n## Documentation\n\nFor additional documentation and examples visit [dash-spa](https://github.com/stevej2608/dash-spa)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stevej2608/dash-spa", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dash-spa", "package_url": "https://pypi.org/project/dash-spa/", "platform": "", "project_url": "https://pypi.org/project/dash-spa/", "project_urls": {"Homepage": "https://github.com/stevej2608/dash-spa"}, "release_url": "https://pypi.org/project/dash-spa/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Dash Single Page Application (SPA) Framework", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>Dash Single Page Application (SPA) Framework</h3>\n<pre><code>pip install -r requirements.txt\npython usage.py\n</code></pre>\n<p><strong>Dash/SPA</strong> is a minimal template and component suite that allows you to build complex\n<strong><a href=\"https://dash.plot.ly/introduction\" rel=\"nofollow\">Dash</a></strong> based multi-page applications with ease. The demo application includes\nseveral well known Dash demos that have been pasted into the SPA framework\nto show how easy it is to transition to SPA.</p>\n<p><strong>Dash/SPA</strong> supports Flask style Blueprints and route decorators:</p>\n<pre><code>import dash_html_components as html\nfrom dash_spa import Blueprint\n\ngreetings = Blueprint('greetings')\n\n@greetings.route('/hello')\ndef hello():\n    return html.H2('Dash/SPA says HELLO!')\n\n@greetings.route('/goodby')\ndef goodby():\n    return html.H2('Dash/SPA says GOODBY!')\n\n...\n\napp.register_blueprint(greetings, url_prefix='/test/greetings')\n</code></pre>\n<p><strong>Dash/SPA</strong> manages component IDs using blueprint/route based namespaces. This greatly\nreduces Dash component ID conflicts. A component ID is only defined once when the component\nis created. It is then used by reference in associated Dash callbacks:</p>\n<pre><code>    user_name = spa.Input(id='user', placeholder=\"Enter name\")\n    password = spa.PasswordInput(\"Password\", name='password', id='password', placeholder=\"Enter password\")\n\n    btn = spa.Button('Enter', id='enter', disabled=True)\n\n    @app.callback(btn.output.disabled, [user_name.input.value, password.input.value])\n    def _cb_enter(user_name, password):\n        return not db_validate_user(user_name, password)\n\n</code></pre>\n<p><strong>Dash/SPA</strong> includes an optional NAVBAR, configured by a simple dictionary:</p>\n<pre><code>NAV_BAR_ITEMS = {\n    'brand' : {'title' : 'Dash/SPA', 'href' : '/'},\n    'left' : [\n        {'title' : 'Global Warming', 'endpoint' : 'demo.warming'},\n        {'title' : 'State Solar', 'endpoint' : 'demo.solar'},\n        {'title' : 'Ticker', 'endpoint' : 'demo.ticker?tickers=COKE+TSLA'},\n    ],\n    'right': [\n        {'title' : 'Sign In', 'endpoint' : 'admin.login', 'icon' : \"fa fa-sign-in\"},\n        {'title' : 'Register', 'endpoint' : 'admin.register', 'icon' : \"fa fa-user\"},\n    ]\n}\n</code></pre>\n<p><strong>Dash/SPA</strong> Allows easy creation of interactive forms</p>\n<pre><code>        email = spa.Input('Email', name='email', type='email', placeholder=\"Enter email\")\n        password = spa.PasswordInput(\"Password\", name='password', placeholder=\"Enter password\")\n        button = button = spa.Button('Sign In', type='submit')\n\n        form = spa.Form([\n            email,\n            password,\n            button,\n        ], title='Sign In'),\n\n\n        @spa.callback(form.output.children, [form.input.form_data])\n        def _form_submit(values):\n            print(values)\n            return spa.NOUPDATE\n\n\n</code></pre>\n<h2>Documentation</h2>\n<p>For additional documentation and examples visit <a href=\"https://github.com/stevej2608/dash-spa\" rel=\"nofollow\">dash-spa</a></p>\n\n          </div>"}, "last_serial": 5905275, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8fdf19e5d50cd99f8ee2ac7653f5cea4", "sha256": "f35e6dfb2094a12016100cd26d03946b5937bdaf294c7e54420f2dea26126ceb"}, "downloads": -1, "filename": "dash-spa-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8fdf19e5d50cd99f8ee2ac7653f5cea4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19203, "upload_time": "2019-09-24T16:33:07", "upload_time_iso_8601": "2019-09-24T16:33:07.289770Z", "url": "https://files.pythonhosted.org/packages/04/96/1f91c851292c682adac531f70cd11c71ea3753c3ac490af1d09b556ecf55/dash-spa-0.0.1.tar.gz", "yanked": false}], "0.0.1rc1": [{"comment_text": "", "digests": {"md5": "aef5f3736d6494adeb4bb060ddd2f5ea", "sha256": "5932466fc82f7d99183b45943c0a7b34cf8a80e7ec2de092b08f7d5bad978125"}, "downloads": -1, "filename": "dash-spa-0.0.1rc1.tar.gz", "has_sig": false, "md5_digest": "aef5f3736d6494adeb4bb060ddd2f5ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19199, "upload_time": "2019-09-24T16:24:57", "upload_time_iso_8601": "2019-09-24T16:24:57.528339Z", "url": "https://files.pythonhosted.org/packages/53/0e/b34ff30ddaf1849d5040b3faa6642e6b9aa7070a3dc23766b33f0f1ea50e/dash-spa-0.0.1rc1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c78379bc67fb64d6d44c363954865f8a", "sha256": "3c5dfa888da46f938998c07d5a3b2532a32afe555bd14856e43286d835552ad2"}, "downloads": -1, "filename": "dash-spa-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c78379bc67fb64d6d44c363954865f8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19495, "upload_time": "2019-09-30T07:20:56", "upload_time_iso_8601": "2019-09-30T07:20:56.093000Z", "url": "https://files.pythonhosted.org/packages/aa/a8/d6532aeda2bf5e12767aa88d7b7a0cda1c40537629fb6ade581a82cd5986/dash-spa-0.0.2.tar.gz", "yanked": false}], "0.0.2rc1": [{"comment_text": "", "digests": {"md5": "145775f593c063843775a718eddc8608", "sha256": "e13df243358b0bec7425fcc4ff7b619b8a613a8b5cdb2414ed8af1100380d6b2"}, "downloads": -1, "filename": "dash-spa-0.0.2rc1.tar.gz", "has_sig": false, "md5_digest": "145775f593c063843775a718eddc8608", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19432, "upload_time": "2019-09-30T06:34:05", "upload_time_iso_8601": "2019-09-30T06:34:05.974183Z", "url": "https://files.pythonhosted.org/packages/ec/44/4e7462d777142448bc29a8a562ab59aaeace9c2ab038fb3bea8d2e55a731/dash-spa-0.0.2rc1.tar.gz", "yanked": false}], "0.0.2rc2": [{"comment_text": "", "digests": {"md5": "e4debbfae20eb12ae9fe80a10c044cd3", "sha256": "31ad938d7298e9bd51ac921259c01dcb38d73976acf7b7561717f5b679dcedf3"}, "downloads": -1, "filename": "dash-spa-0.0.2rc2.tar.gz", "has_sig": false, "md5_digest": "e4debbfae20eb12ae9fe80a10c044cd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19482, "upload_time": "2019-09-30T06:47:27", "upload_time_iso_8601": "2019-09-30T06:47:27.394784Z", "url": "https://files.pythonhosted.org/packages/41/5f/2e466af0875ac78e46cbbbd309a9008fbc3f642ea0320856620e42137d37/dash-spa-0.0.2rc2.tar.gz", "yanked": false}], "0.0.2rc3": [{"comment_text": "", "digests": {"md5": "c29fdc98c9d87057edb4a4a46595ab2a", "sha256": "1659bbf0430fb57bc631f2e2936a491f4393024dc0ff948100a313f6e1d483ce"}, "downloads": -1, "filename": "dash-spa-0.0.2rc3.tar.gz", "has_sig": false, "md5_digest": "c29fdc98c9d87057edb4a4a46595ab2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19476, "upload_time": "2019-09-30T06:54:16", "upload_time_iso_8601": "2019-09-30T06:54:16.415033Z", "url": "https://files.pythonhosted.org/packages/8d/37/658a148adb8e1810a82303d42c473d144590733f00932b679b7aced8be1b/dash-spa-0.0.2rc3.tar.gz", "yanked": false}], "0.0.2rc4": [{"comment_text": "", "digests": {"md5": "a440de756c78ea99b7576f6e0c415d3b", "sha256": "484b105cda2b8e2f6f9ca2337a08dde365c4e39e46c526a5f1eb9415faf3d7d3"}, "downloads": -1, "filename": "dash-spa-0.0.2rc4.tar.gz", "has_sig": false, "md5_digest": "a440de756c78ea99b7576f6e0c415d3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19499, "upload_time": "2019-09-30T07:17:13", "upload_time_iso_8601": "2019-09-30T07:17:13.703348Z", "url": "https://files.pythonhosted.org/packages/73/c0/2487659eadfc0907277b2caa36c4975e46be306f9913c5aa463293b65ad2/dash-spa-0.0.2rc4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c78379bc67fb64d6d44c363954865f8a", "sha256": "3c5dfa888da46f938998c07d5a3b2532a32afe555bd14856e43286d835552ad2"}, "downloads": -1, "filename": "dash-spa-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c78379bc67fb64d6d44c363954865f8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19495, "upload_time": "2019-09-30T07:20:56", "upload_time_iso_8601": "2019-09-30T07:20:56.093000Z", "url": "https://files.pythonhosted.org/packages/aa/a8/d6532aeda2bf5e12767aa88d7b7a0cda1c40537629fb6ade581a82cd5986/dash-spa-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:34 2020"}