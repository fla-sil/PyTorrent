{"info": {"author": "utsurius", "author_email": "przemek@upsecure.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "<h1 align=\"center\">\n    <a href=\"https://github.com/utsurius/django-actionable-messages\">\n        Actionable messages\n    </a>\n</h1>\n\n<p align=\"center\">\n    <a href=\"https://github.com/utsurius/django-actionable-messages/releases\">\n        <img src=\"https://img.shields.io/github/release/utsurius/django-actionable-messages\" alt=\"github\"/>\n    </a>\n    <a href=\"https://pypi.python.org/pypi/django-actionable-messages\">\n        <img src=\"https://badge.fury.io/py/django-actionable-messages.svg\" alt=\"pypi\"/>\n    </a>\n    <a href=\"https://github.com/utsurius/django-actionable-messages\">\n        <img src=\"https://img.shields.io/pypi/pyversions/django_actionable_messages.svg\" alt=\"python\"/>\n    </a>\n    <a href=\"https://github.com/utsurius/django-actionable-messages\">\n        <img src=\"https://img.shields.io/pypi/djversions/django_actionable_messages.svg\" alt=\"django\"/>\n    </a>\n    <a href=\"https://github.com/utsurius/django-actionable-messages/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/github/license/utsurius/django-actionable-messages\" alt=\"license\"/>\n    </a>\n</p>\n\n1. [Base informations](#base-informations)\n2. [Installation](#installation)\n3. [Requirements](#requirements)\n4. [Usage](#usage)\n5. [AdaptiveCard](#adaptivecard)\n    * [Elements](#adaptivecard-elements)\n        * [TextBlock](#adaptivecard-textblock)\n        * [Image](#adaptivecard-image)\n        * [MediaSource](#adaptivecard-mediasource)\n        * [Media](#adaptivecard-media)\n        * [TextRun](#adaptivecard-textrun)\n        * [RichTextBlock](#adaptivecard-richtextblock)\n    * [Inputs](#adaptivecard-inputs)\n        * [TextInput](#adaptivecard-textinput)\n        * [NumberInput](#adaptivecard-numberinput)\n        * [DateInput](#adaptivecard-dateinput)\n        * [TimeInput](#adaptivecard-timeinput)\n        * [ToggleInput](#adaptivecard-toggleinput)\n        * [InputChoice](#adaptivecard-inputchoice)\n        * [ChoiceSetInput](#adaptivecard-choicesetinput)\n    * [Actions](#adaptivecard-actions)\n        * [OpenUrl](#adaptivecard-openurl)\n        * [Submit](#adaptivecard-submit)\n        * [ShowCard](#adaptivecard-showcard)\n        * [TargetElement](#adaptivecard-targetelement)\n        * [ToggleVisibility](#adaptivecard-togglevisibility)\n    * [Containers](#adaptivecard-containers)\n        * [ActionSet](#adaptivecard-actionset)\n        * [Container](#adaptivecard-container)\n        * [Column](#adaptivecard-column)\n        * [ColumnSet](#adaptivecard-columnset)\n        * [Fact](#adaptivecard-fact)\n        * [FactSet](#adaptivecard-factset)\n        * [ImageSet](#adaptivecard-imageset)\n    * [Types](#adaptivecard-types)\n        * [BackgroundImage](#adaptivecard-backgroundimage)\n    * [Cards](#adaptivecard-cards)\n        * [AdaptiveCard](#adaptivecard-adaptivecard)\n6. [MessageCard](#messagecard)\n    * [Elements](#messagecard-elements)\n        * [Header](#messagecard-header)\n        * [Fact](#messagecard-fact)\n        * [HeroImage](#messagecard-heroimage)\n        * [InputChoice](#messagecard-inputchoice)\n        * [ActionTarget](#messagecard-actiontarget)\n    * [Inputs](#messagecard-inputs)\n        * [TextInput](#messagecard-textinput)\n        * [DateInput](#messagecard-dateinput)\n        * [MultiChoiceInput](#messagecard-multichoiceinput)\n    * [Actions](#messagecard-actions)\n        * [OpenUri](#messagecard-openuri)\n        * [HttpPOST](#messagecard-httppost)\n        * [InvokeAddInCommand](#messagecard-invokeaddincommand)\n        * [ActionCard](#messagecard-actioncard)\n    * [Sections](#messagecard-sections)\n        * [Section](#messagecard-section)\n    * [Cards](#messagecard-cards)\n        * [MessageCard](#messagecard-messagecard)\n7. [HeroCard](#herocard)\n    * [Elements](#herocard-elements)\n        * [OpenUrl](#herocard-openurl)\n        * [Image](#herocard-image)\n    * [Cards](#herocard-cards)\n        * [HeroCard](#herocard-herocard)\n8. [ThumbnailCard](#thumbnailcard)\n    * [Elements](#thumbnailcard-elements)\n    * [Cards](#thumbnailcard-cards)\n        * [ThumbnailCard](#thumbnailcard-herocard)\n\n\n<h2 id=\"base-informations\">Base informations</h2>\n\n[Playground V2](https://messagecardplayground.azurewebsites.net/)\n\n[Send an actionable message via email in Office 365](https://docs.microsoft.com/en-gb/outlook/actionable-messages/send-via-email)\n\n[Outlook version requirements for actionable messages](https://docs.microsoft.com/en-us/outlook/actionable-messages/#outlook-version-requirements-for-actionable-messages)\n\n\n<h2 id=\"installation\">Installation</h2>\n\n`pip install git+https://github.com/utsurius/django-actionable-messages`\n\n`pip install django-actionable-messages`\n\nAdd \"django_actionable_messages\" to INSTALLED_APPS:\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"django_actionable_messages\",\n]\n```\n\nSETTINGS\n\n```python\nACTIONABLE_MESSAGES = {\n    \"JSON_ENCODER\": None,\n    \"LANGUAGE_CODE\": \"en\"\n}\n```\n\n\"JSON_ENCODER\" - doted path to custom json encoder (default: BaseEncoder).\n\n\"LANGUAGE_CODE\" - language code used for translations (defaults to project settings.LANGUAGE_CODE). Each element of adaptive_card/message_card can set individual \"lang_code\".\n\n\n<h2 id=\"requirements\">Requirements</h2>\n\n|Name|Version|\n|---|---|\n|python|3.5 - 3.8|\n|django|2.2 - 3.0|\n\n\n<h2 id=\"usage\">Usage</h2>\n\n**`examples/message_card/github.py`**\n\n```python\nfrom django_actionable_messages.message_card.actions import OpenUri, HttpPOST, ActionCard\nfrom django_actionable_messages.message_card.cards import MessageCard\nfrom django_actionable_messages.message_card.elements import Fact, ActionTarget\nfrom django_actionable_messages.message_card.inputs import TextInput\nfrom django_actionable_messages.message_card.sections import Section\nfrom django_actionable_messages.message_card.utils import OSType\n\n\nissue_opened = MessageCard(title=\"Issue opened: \\\"Push notifications not working\\\"\", summary=\"Issue 176715375\",\n                           theme_color=\"0078D7\")\nissue_opened.add_sections(\n    Section(\n        activity_title=\"Miguel Garcie\",\n        activity_subtitle=\"9/13/2016, 11:46am\",\n        activity_image=\"https://connectorsdemo.azurewebsites.net/images/MSC12_Oscar_002.jpg\",\n        text=\"There is a problem with Push notifications, they don't seem to be picked up by the connector.\",\n        facts=[\n            Fact(\"Repository:\", \"mgarcia\\\\test\"),\n            Fact(\"Issue #:\", \"176715375\")\n        ]\n    )\n)\nissue_opened.add_actions([\n    ActionCard(\n        name=\"Add a comment\",\n        inputs=[\n            TextInput(input_id=\"comment\", title=\"Enter a comment\", is_multiline=True)\n        ],\n        actions=[\n            HttpPOST(\"OK\", target=\"http://...\")\n        ]\n    ),\n    HttpPOST(\"Close\", target=\"http://...\"),\n    OpenUri(name=\"View in Github\", targets=[\n        ActionTarget(OSType.DEFAULT, \"http://...\")\n    ])\n])\n```\n\n**`examples/adaptive_card/calendar_reminder.py`**\n\n```python\nfrom django_actionable_messages.adaptive_card.actions import Submit\nfrom django_actionable_messages.adaptive_card.cards import AdaptiveCard\nfrom django_actionable_messages.adaptive_card.elements import TextBlock\nfrom django_actionable_messages.adaptive_card.inputs import InputChoice, ChoiceSetInput\nfrom django_actionable_messages.adaptive_card.utils import SCHEMA, FontSize, FontWeight, SpacingStyle, ChoiceInputStyle\n\n\ncalendar_reminder = AdaptiveCard(version=\"1.0\", schema=SCHEMA)\ncalendar_reminder.set_speak(\"Your  meeting about \\\"Adaptive Card design session\\\" is starting at 12:30pm\"\n                            \"Do you want to snooze  or do you want to send a late notification to the attendees?\")\ncalendar_reminder.add_elements(TextBlock(\"Adaptive Card design session\", size=FontSize.LARGE, weight=FontWeight.BOLDER))\ncalendar_reminder.add_elements([\n    TextBlock(\"Conf Room 112/3377 (10)\", is_subtle=True),\n    TextBlock(\"12:30 PM - 1:30 PM\", is_subtle=True, spacing=SpacingStyle.NONE),\n    TextBlock(\"Snooze for\")\n])\ncalendar_reminder.add_elements(ChoiceSetInput(\n    item_id=\"snooze\", style=ChoiceInputStyle.COMPACT, value=\"5\", choices=[\n        InputChoice(\"5 minutes\", \"5\"),\n        InputChoice(\"15 minutes\", \"15\"),\n        InputChoice(\"30 minutes\", \"30\")\n    ]\n))\ncalendar_reminder.add_actions([\n    Submit(title=\"Snooze\", data={\n        \"x\": \"snooze\"\n    }),\n    Submit(title=\"I'll be late\", data={\n        \"x\": \"late\"\n    })\n])\n```\n\nFor more view **`examples`** folder\n\nTo get dictionary, json or html payload from card use:\n\n|Property|Type|\n|---|---|\n|.payload|*dict* (raw data)|\n|.json_payload|json string|\n|.html_payload|html string - can be used to send card via email ([docs](https://docs.microsoft.com/en-gb/outlook/actionable-messages/send-via-email))|\n|.signed_html_payload|html string<sup>1</sup> - can be used to send card via email ([docs](https://docs.microsoft.com/en-us/outlook/actionable-messages/security-requirements))|\n\n\\[1\\] you must overwrite **get_signed_payload()** in AdaptiveCard/MessageCard to sign the payload!\n\n\nProblem: **'... is not JSON serializable'** - probably invalid argument type was used. Default json serializer can handle translated strings and everything that `DjangoJSONEncoder` can handle. \n\nSolution: [Better Python Object Serialization](https://hynek.me/articles/serialization/). Remember to ALWAYS inherit from EncoderMixin or BaseEncoder (`django_actionable_messages.encoders import EncoderMixin, BaseEncoder`)\n\nYou can set JSON_ENCODER (globally) in SETTINGS(ACTIONABLE_MESSAGES) or set it by card(json_encoder):\n\n```python\nfrom django_actionable_messages.adaptive_card.cards import AdaptiveCard\n\n\nclass MyAdaptiveCard(AdaptiveCard):\n    json_encoder = \"path.to.my.encoder\"\n```\nor\n```python\nfrom django_actionable_messages.adaptive_card.cards import AdaptiveCard\n\n\nclass MyAdaptiveCard(AdaptiveCard):\n    json_encoder = MyJSONEncoder\n```\n\nTo customize json dump you can overwrite `get_json_dump_kwargs()` in card (AdaptiveCard/MessageCard)\n\n```python\nfrom django_actionable_messages.adaptive_card.cards import AdaptiveCard\n\n\nclass MyAdaptiveCard(AdaptiveCard):\n    def get_json_dump_kwargs(self):\n        return {\n            'ensure_ascii': False,\n            'indent': 2\n        }\n```\n\nSend MessageCard to msteams using webhooks and `requests` library:\n```python\nimport requests\n\n\nrequests.post(\n    webhook_url,\n    data=card.json_payload,\n    headers={\n        \"Content-Type\": \"application/json; charset=utf-8\"\n    }\n)\n``` \n\nTo get/add `webhook_url` see here: [Get the Microsoft Teams webhook URL](https://learning.getpostman.com/docs/postman_pro/integrations/microsoft_teams/#get-the-microsoft-teams-webhook-url), [Create and add an outgoing webhook in Teams](https://support.office.com/en-ie/article/create-and-add-an-outgoing-webhook-in-teams-8e1a1648-982f-4511-b342-6d8492437207)\n\n<h2 id=\"adaptivecard\">AdaptiveCard</h2>\n\nSupported versions: **1.0**, **1.1**, **1.2**\n\n[Schema Explorer](https://adaptivecards.io/explorer/)\n\n\n<h3 id=\"adaptivecard-elements\">Elements</h3>\n\n**src**: `from django_actionable_messages.adaptive_card.elements import ...`\n\n<h4 id=\"adaptivecard-textblock\">TextBlock <a href=\"https://adaptivecards.io/explorer/TextBlock.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**text**|set_text()|text|*str, trans<sup>3</sup>*|\n|color|set_color()|color|Color<sup>1</sup>|\n|font_type|set_font_type()|fontType|FontType<sup>1</sup>|\n|horizontal_alignment|set_horizontal_alignment()|horizontalAlignment|HorizontalAlignment<sup>1</sup>|\n|is_subtle|set_is_subtle()|isSubtle|*bool*|\n|max_lines|set_max_lines()|maxLines|*int*|\n|size|set_size()|size|FontSize<sup>1</sup>|\n|weight|set_weight()|weight|FontWeight<sup>1</sup>|\n|wrap|set_wrap()|wrap|*bool*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-image\">Image <a href=\"https://adaptivecards.io/explorer/Image.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**url**|set_url()|url|*str*|\n|alternate_text|set_alternate_text()|altText|*str*|\n|background_color|set_background_color()|backgroundColor|*str*|\n|height|set_height()|height|str or BlockElementHeight<sup>1</sup>|\n|horizontal_alignment|set_horizontal_alignment()|horizontalAlignment|HorizontalAlignment<sup>1</sup>|\n|select_action|set_select_action()|selectAction|see docs|\n|size|set_size()|size|ImageSize<sup>1</sup>|\n|style|set_style()|style|ImageStyle<sup>1</sup>|\n|width|set_width()|width|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n<h4 id=\"adaptivecard-mediasource\">MediaSource <a href=\"https://adaptivecards.io/explorer/MediaSource.html\">docs</a></h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**mime_type**|mimeType|*str*|\n|**url**|url|*str*|\n\n<h4 id=\"adaptivecard-media\">Media <a href=\"https://adaptivecards.io/explorer/Media.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**sources**|add_sources()|sources|*list* of MediaSource(s)<sup>1</sup>|\n|poster|set_poster()|poster|*str*|\n|alternate_text|set_alternate_text()|altText|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>2</sup>|\n|lang_code|-|-|*str*|\n\nOther functions\n\n|Name|Property|Type|\n|---|---|---|\n|add_source()|sources|MediaSource<sup>1</sup>|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.elements import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n<h4 id=\"adaptivecard-textrun\">TextRun <a href=\"https://adaptivecards.io/explorer/TextRun.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**text**|set_text()|text|*str*, trans <sup>2</sup>|\n|color|set_color()|color|Color<sup>1</sup>|\n|font_type|set_font_type()|fontType|FontType<sup>1</sup>|\n|highlight|set_highlight()|highlight|*bool*|\n|is_subtle|set_is_subtle()|isSubtle|*bool*|\n|italic|set_italic()|italic|*bool*|\n|select_action|set_select_action()|selectAction|see docs|\n|size|set_size()|fontSize|FontSize<sup>1</sup>|\n|strike_through|set_strike_through()|strikethrough|*bool*|\n|weight|set_weight()|fontWeight|FontWeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-richtextblock\">RichTextBlock <a href=\"https://adaptivecards.io/explorer/RichTextBlock.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**inlines**|set_inlines()|inlines|*str*, TextRun<sup>1</sup>, trans<sup>4</sup>|\n|horizontal_alignment|set_horizontal_alignment()|horizontalAlignment|HorizontalAlignment<sup>1</sup>|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.elements import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[4\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h3 id=\"adaptivecard-inputs\">Inputs</h3>\n\n**src**: `from django_actionable_messages.adaptive_card.inputs import ...`\n\n<h4 id=\"adaptivecard-textinput\">TextInput <a href=\"https://adaptivecards.io/explorer/Input.Text.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|is_multiline|set_is_multiline()|isMultiline|*bool*|\n|max_length|set_max_length()|maxLength|*int*|\n|placeholder|set_placeholder()|placeholder|*str*, trans<sup>3</sup>|\n|style|set_style()|style|TextInputStyle<sup>1</sup>|\n|inline_action|set_inline_action()|inlineAction|see docs|\n|value|set_value()|value|*str*, trans<sup>3</sup>|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-numberinput\">NumberInput <a href=\"https://adaptivecards.io/explorer/Input.Number.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|max_value|set_max_value()|maxValue|*int*|\n|min_value|set_min_value()|minValue|*int*|\n|placeholder|set_placeholder()|placeholder|*str*, trans<sup>3</sup>|\n|value|set_value()|value|*int*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-dateinput\">DateInput <a href=\"https://adaptivecards.io/explorer/Input.Date.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|max_value|set_max_value()|maxValue|*str*|\n|min_value|set_min_value()|minValue|*str*|\n|placeholder|set_placeholder()|placeholder|*str*, trans<sup>3</sup>|\n|value|set_value()|value|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-timeinput\">TimeInput <a href=\"https://adaptivecards.io/explorer/Input.Time.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|max_value|set_max_value()|maxValue|*str*|\n|min_value|set_min_value()|minValue|*str*|\n|placeholder|set_placeholder()|placeholder|*str*, trans<sup>3</sup>|\n|value|set_value()|value|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-toggleinput\">ToggleInput <a href=\"https://adaptivecards.io/explorer/Input.Toggle.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**title**|set_title()|title|*str*, trans<sup>3</sup>|\n|value|set_value()|value|*str*|\n|value_off|set_value_off()|valueOff|*str*|\n|value_on|set_value_on()|valueOn|*str*|\n|wrap|set_wrap()|wrap|*bool*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-inputchoice\">InputChoice <a href=\"https://adaptivecards.io/explorer/Input.Choice.html\">docs</a></h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**title**|title|*str*, trans<sup>1</sup>|\n|**value**|value|*str*, *int*|\n|lang_code|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-choicesetinput\">ChoiceSetInput <a href=\"https://adaptivecards.io/explorer/Input.ChoiceSet.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**choices**|set_choices()|choices|*list* of InputChoice(s)<sup>1</sup>|\n|is_multi_select|set_is_multi_select()|isMultiSelect|*bool*|\n|style|set_style()|style|ChoiceInputStyle<sup>2</sup>|\n|value|set_value()|value|*str*|\n|wrap|set_wrap()|wrap|*bool*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>2</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.inputs import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\n<h3 id=\"adaptivecard-actions\">Actions</h3>\n\n**src**: `from django_actionable_messages.adaptive_card.actions import ...`\n\n<h4 id=\"adaptivecard-openurl\">OpenUrl <a href=\"https://adaptivecards.io/explorer/Action.OpenUrl.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**url**|set_url()|url|*str*|\n|title|set_title()|title|*str*, trans<sup>3</sup>|\n|icon_url|set_icon_url()|iconUrl|*str*|\n|style|set_style()|style|ActionStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)|\n|requires|set_requires()|requires|*dict*|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.actions import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-submit\">Submit <a href=\"https://adaptivecards.io/explorer/Action.Submit.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|data|set_data()|data|*str*, *dict*|\n|title|set_title()|title|*str*, trans<sup>3</sup>|\n|icon_url|set_icon_url()|iconUrl|*str*|\n|style|set_style()|style|ActionStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)|\n|requires|set_requires()|requires|*dict*|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.actions import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-showcard\">ShowCard <a href=\"https://adaptivecards.io/explorer/Action.ShowCard.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|card|set_card()|card|AdaptiveCard<sup>2</sup>|\n|title|set_title()|title|*str*, trans<sup>4</sup>|\n|icon_url|set_icon_url()|iconUrl|*str*|\n|style|set_style()|style|ActionStyle<sup>3</sup>|\n|item_id|set_id()|id|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>3</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)|\n|requires|set_requires()|requires|*dict*|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.actions import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.cards import ...`\n\n\\[3\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[4\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-targetelement\">TargetElement <a href=\"https://adaptivecards.io/explorer/TargetElement.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**element_id**|set_element_id()|elementId|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n\n<h4 id=\"adaptivecard-togglevisibility\">ToggleVisibility <a href=\"https://adaptivecards.io/explorer/Action.ToggleVisibility.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|target_elements|set_target_elements()|targetElements|*list* of TargetElement<sup>1</sup>/*str*/trans<sup>3</sup> (can be mixed)|\n|title|set_title()|title|*str*|\n|icon_url|set_icon_url()|iconUrl|*str*|\n|style|set_style()|style|ActionStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)|\n|requires|set_requires()|requires|*dict*|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.actions import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h3 id=\"adaptivecard-containers\">Containers</h3>\n\n**src**: `from django_actionable_messages.adaptive_card.containers import ...`\n\n<h4 id=\"adaptivecard-actionset\">ActionSet <a href=\"https://adaptivecards.io/explorer/ActionSet.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|actions|add_actions()|actions|action or *list* of actions(see docs)|\n|fallback|set_fallback()|fallback|FallbackOption<sup>1</sup> or card element<sup>2</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>1</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n<h4 id=\"adaptivecard-container\">Container <a href=\"https://adaptivecards.io/explorer/Container.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|items|add_items()|items|item or *list* of items(see docs)|\n|select_action|set_select_action()|selectAction|any action(see docs)|\n|style|set_style()|style|Style<sup>2</sup>|\n|vertical_content_alignment|set_vertical_content_alignment()|verticalContentAlignment|VerticalAlignment<sup>2</sup>|\n|bleed|set_bleed()|bleed|*bool*|\n|background_image|set_background_image()|backgroundImage|BackgroundImage<sup>1</sup>|\n|min_height|set_min_height()|minHeight|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>2</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.types import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n<h4 id=\"adaptivecard-column\">Column <a href=\"https://adaptivecards.io/explorer/Column.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|items|add_items()|items|item or *list* of items(see docs)|\n|background_image|set_background_image()|backgroundImage|*str*, BackgroundImage<sup>2</sup>|\n|bleed|set_bleed()|bleed|*bool*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>3</sup> or Column<sup>1</sup>|\n|min_height|set_min_height()|minHeight|*str*|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>3</sup>|\n|select_action|set_select_action()|selectAction|see docs|\n|style|set_style()|style|Style<sup>3</sup>|\n|vertical_content_alignment|set_vertical_content_alignment()|verticalContentAlignment|VerticalAlignment<sup>3</sup>|\n|width|set_width()|width|*str*, *int*, Width<sup>3</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.containers import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.types import ...`\n\n\\[3\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n<h4 id=\"adaptivecard-columnset\">ColumnSet <a href=\"https://adaptivecards.io/explorer/ColumnSet.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**columns**|add_columns()|columns|Column<sup>1</sup> or *list* of Column(s)<sup>1</sup>|\n|select_action|set_select_action()|selectAction|see docs|\n|style|set_style()|style|Style<sup>2</sup>|\n|bleed|set_bleed()|bleed|*bool*|\n|min_height|set_min_height()|minHeight|*str*|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>2</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.containers import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n<h4 id=\"adaptivecard-fact\">Fact <a href=\"https://adaptivecards.io/explorer/Fact.html\">docs</a></h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**title**|title|*str*, trans<sup>1</sup>|\n|**value**|value|*str*, trans<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"adaptivecard-factset\">FactSet <a href=\"https://adaptivecards.io/explorer/FactSet.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|facts|add_facts()|facts|Fact<sup>1</sup> or *list* of Fact(s)<sup>1</sup>|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>2</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.containers import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n<h4 id=\"adaptivecard-imageset\">ImageSet <a href=\"https://adaptivecards.io/explorer/ImageSet.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|images|add_images()|images|Image<sup>1</sup> or *list* of Image(s)<sup>1</sup>|\n|image_size|set_image_size()|imageSize|ImageSize<sup>2</sup>|\n|fallback|set_fallback()|fallback|FallbackOption<sup>2</sup> or card element<sup>3</sup>|\n|separator|set_separator()|separator|*bool*|\n|spacing|set_spacing()|spacing|SpacingStyle<sup>2</sup>|\n|item_id|set_id()|id|*str*|\n|is_visible|set_is_visible()|isVisible|*bool*|\n|requires|set_requires()|requires|*dict*|\n|height|set_height()|height|BlockElementHeight<sup>2</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.elements import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[3\\]\n\n|Type|All except|Import|\n|---|---|---|\n|`containers`|Fact, Column|`from django_actionable_messages.adaptive_cards.containers import ...`|\n|`elements`|MediaSource, TextRun|`from django_actionable_messages.adaptive_cards.elements import ...`|\n|`inputs`|InputChoice|`from django_actionable_messages.adaptive_cards.inputs import ...`|\n\n\n<h3 id=\"adaptivecard-types\">Types</h3>\n\n**src**: `from django_actionable_messages.adaptive_card.types import ...`\n\n<h4 id=\"adaptivecard-backgroundimage\">BackgroundImage <a href=\"https://adaptivecards.io/explorer/BackgroundImage.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**url**|set_url()|url|*str*|\n|fill_mode|set_fill_mode()|fillMode|FillMode<sup>1</sup>|\n|horizontal_alignment|set_horizontal_alignment()|horizontalAlignment|HorizontalAlignment<sup>1</sup>|\n|vertical_alignment|set_vertical_alignment()|verticalAlignment|VerticalAlignment<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n<h3 id=\"adaptivecard-cards\">Cards</h3>\n\n**src**: `from django_actionable_messages.adaptive_card.cards import ...`\n\n<h4 id=\"adaptivecard-adaptivecard\">AdaptiveCard <a href=\"https://adaptivecards.io/explorer/AdaptiveCard.html\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|version|set_version()|version|*str*, SCHEMA<sup>1</sup>|\n|schema|set_schema()|$schema|*str*|\n|inputs|add_elements()|inputs|input or *list* of inputs(see docs)|\n|actions|add_actions()|actions|action or *list* of actions(see docs)|\n|select_action|set_select_action()|selectAction|see docs|\n|style|set_style()|style|Style<sup>1</sup>|\n|hide_original_body|set_hide_original_body()|hideOriginalBody|*bool*|\n|fallback_text|set_fallback_text()|fallbackText|*str*|\n|background_image|set_background_image()|backgroundImage|*str*, Image<sup>2</sup>|\n|min_height|set_min_height()|minHeight|*str*|\n|speak|set_speak()|speak|*str*|\n|lang|set_lang()|lang|*str*|\n|vertical_content_alignment|set_vertical_content_alignment()|verticalContentAlignment|VerticalAlignment<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.adaptive_cards.utils import ...`\n\n\\[2\\] `from django_actionable_messages.adaptive_cards.elements import ...`\n\n<h2 id=\"messagecard\">MessageCard</h2>\n\n[Legacy actionable message card reference](https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference)\n\n<h3 id=\"messagecard-elements\">Elements</h3>\n\n**src**: `from django_actionable_messages.message_card.elements import ...`\n\n<h4 id=\"messagecard-header\">Header <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#header\">docs</a></h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**name**|name|*str*|\n|**value**|value|*str*, *int*|\n\n<h4 id=\"messagecard-fact\">**Fact**</h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**name**|name|*str*, trans<sup>1</sup>|\n|**value**|value|*str*, trans<sup>1</sup>|\n|lang_code|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-heroimage\">HeroImage <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#image-object\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**url**|set_url()|image|*str*|\n|title|set_title()|title|*str*, trans<sup>1</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-inputchoice\">InputChoice</h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**name**|display|*str*, trans<sup>1</sup>|\n|**value**|value|*str*, *int*|\n|lang_code|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-actiontarget\">ActionTarget</h4>\n\n|Argument name|Property|Type|\n|---|---|---|\n|**os_type**|os|OSType<sup>1</sup>|\n|url|uri|*str*|\n|lang_code|-|*str*|\n\n\\[1\\] `from django_actionable_messages.message_cards.utils import ...`\n\n<h3 id=\"messagecard-inputs\">Inputs</h3>\n\n**src**: `from django_actionable_messages.message_card.inputs import ...`\n\n<h4 id=\"messagecard-textinput\">TextInput <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#textinput\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|max_length|set_max_length()|maxLength|*int*|\n|is_multiline|set_is_multiline()|isMultiline|*bool*|\n|input_id|set_id()|id|*str*|\n|title|set_title()|title|*str*, trans<sup>1</sup>|\n|value|set_value()|value|*str*|\n|is_required|set_is_required()|isRequired|*bool*|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-dateinput\">DateInput <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#dateinput\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|include_time|set_include_time()|maxLength|*bool*|\n|input_id|set_id()|id|*str*|\n|title|set_title()|title|*str*, trans<sup>1</sup>|\n|value|set_value()|value|*str*|\n|is_required|set_is_required()|isRequired|*bool*|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-multichoiceinput\">MultiChoiceInput <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#multichoiceinput\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**choices**|add_choices()|choices|*list* of InputChoice(s)<sup>1</sup>|\n|is_multi_select|set_is_multi_select()|isMultiSelect|*bool*|\n|style|set_style()|style|ChoiceStyle<sup>2</sup>|\n|input_id|set_id()|id|*str*|\n|title|set_title()|title|*str*, trans<sup>3</sup>|\n|value|set_value()|value|*str*|\n|is_required|set_is_required()|isRequired|*bool*|\n|lang_code|-|-|*str*|\n\nOther functions\n\n|Name|Property|Type|\n|---|---|---|\n|add_choice()|choices|InputChoice<sup>1</sup>|\n\n\\[1\\] `from django_actionable_messages.message_cards.inputs import ...`\n\n\\[2\\] `from django_actionable_messages.message_cards.utils import ...`\n\n\\[3\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h3 id=\"messagecard-actions\">Actions</h3>\n\n**src**: `from django_actionable_messages.message_card.actions import ...`\n\n<h4 id=\"messagecard-openuri\">OpenUri <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#openuri-action\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**name**|set_name()|name|*str*, trans<sup>2</sup>|\n|targets|add_targets()|targets|*list* of ActionTarget<sup>1</sup>|\n|lang_code|-|-|*str*|\n\nOther functions\n\n|Name|Property|Type|\n|---|---|---|\n|add_target()|targets|ActionTarget<sup>1</sup>|\n\n\\[1\\] `from django_actionable_messages.message_cards.elements import ...`\n\n\\[2\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-httppost\">HttpPOST <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#httppost-action\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**name**|set_name()|name|*str*, trans<sup>2</sup>|\n|**target**|set_target()|targets|*str*|\n|headers|add_headers()|headers|Header<sup>1</sup> or *list* of Header(s)<sup>1</sup>|\n|body|set_body()|body|*str*|\n|body_content_type|set_body_content_type()|bodyContentType|*str*|\n|lang_code|-|-|*str*|\n\n\\[1\\] `from django_actionable_messages.message_cards.elements import ...`\n\n\\[2\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-invokeaddincommand\">InvokeAddInCommand <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#invokeaddincommand-action\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**name**|set_name()|name|*str*, trans<sup>1</sup>|\n|**add_in_id**|set_add_in_id()|addInId|*str*|\n|**desktop_command_id**|set_desktop_command_id()|desktopCommandId|*str*|\n|initialization_context|set_set_initialization_context()|initializationContext|*dict*|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"messagecard-actioncard\">ActionCard <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#actioncard-action\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**name**|set_name()|name|*str*, trans<sup>1</sup>|\n|inputs|add_inputs()|inputs|input or *list* of inputs(see docs)|\n|actions|add_actions()|actions|action or *list* of actions(see docs)|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h3 id=\"messagecard-sections\">Sections</h3>\n\n**src**: `from django_actionable_messages.message_card.sections import ...`\n\n<h4 id=\"messagecard-section\">Section <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#section-fields\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|start_group|set_start_group()|startGroup|*bool*|\n|title|set_title()|title|*str*, trans<sup>2</sup>|\n|text|set_text()|text|*str*, trans<sup>2</sup>|\n|activity_image|set_activity_image()|activityImage|*str*|\n|activity_title|set_activity_title()|activityTitle|*str*, trans<sup>2</sup>|\n|activity_subtitle|set_activity_subtitle()|activitySubtitle|*str*, trans<sup>2</sup>|\n|activity_text|set_activity_text()|activityText|*str*, trans<sup>2</sup>|\n|hero_image|set_hero_image()|heroImage|HeroImage<sup>2</sup>|\n|facts|add_facts()|facts|Fact(s)<sup>1</sup> or *list* of Fact<sup>1</sup>|\n|actions|add_potential_actions()|potentialAction|action or *list* of actions(see docs)|\n|lang_code|-|-|*str*|\n\nOther functions:\n\n|Name|Property|Type|\n|---|---|---|\n|set_activity(image, title, subtitle, text)|activityImage, activityTitle, activitySubtitle, activityText|*str*|\n\n\\[1\\] `from django_actionable_messages.message_cards.elements import ...`\n\n\\[2\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h3 id=\"messagecard-cards\">Cards</h3>\n\n**src**: `from django_actionable_messages.message_card.cards import ...`\n\n<h4 id=\"messagecard-messagecard\">MessageCard</h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|title|set_title()|title|*str*, trans<sup>2</sup>|\n|text|set_text()|text|*str*, trans<sup>2</sup>|\n|originator|set_originator()|originator|*str*|\n|summary|set_summary()|summary|*str*, trans<sup>2</sup>|\n|theme_color|set_theme_color()|themeColor|*str*|\n|correlation_id|set_correlation_id()|correlationId|*str*|\n|auto_correlation_id*|-|correlationId|*bool* (default: *True*)|\n|expected_actors|set_expected_actors()|expectedActors|*list* of emails|\n|hide_original_body|set_hide_original_body()|hideOriginalBody|*bool*|\n|sections|add_sections()|sections|Section<sup>1</sup> or *list* of Sections<sup>1</sup>|\n|actions|add_actions()|potentialAction|action<sup>3</sup> or *list* of actions<sup>3</sup>|\n|lang_code|-|-|*str*|\n\nOther functions:\n\n|Name|Property|Type|\n|---|---|---|\n|add_expected_actors()|expectedActors|*str* or list of *str*|\n\n\\[1\\] `from django_actionable_messages.message_cards.sections import ...`\n\n\\[2\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n\\[3\\] `from django_actionable_messages.message_cards.actions import ...`\n\n<h2 id=\"herocard\">HeroCard</h2>\n\n<h3 id=\"herocard-elements\">Elements</h3>\n\n<h4 id=\"herocard-openurl\">OpenUrl</h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**title**|-|title|*str*, trans<sup>1</sup>|\n|**url**|-|value|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h4 id=\"herocard-Image\">Image</h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|**url**|-|value|*str*|\n|alt|-|alt|*str*, trans<sup>1</sup>|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n<h3 id=\"herocard-cards\">Cards</h3>\n\n**src**: `from django_actionable_messages.msteams_cards.cards import HeroCard`\n\n<h4 id=\"herocard-herocard\">HeroCard <a href=\"https://docs.microsoft.com/en-us/microsoftteams/platform/task-modules-and-cards/cards/cards-reference#hero-card\">docs</a></h4>\n\n|Argument name|Function|Property|Type|\n|---|---|---|---|\n|title|set_title()|title|*str*, trans<sup>1</sup>|\n|subtitle|set_subtitle()|subtitle|*str*, trans<sup>1</sup>|\n|text|set_text()|text|*str*, trans<sup>1</sup>|\n|images|add_images()|images|Image<sup>2</sup> or *list* of Images<sup>2</sup>|\n|buttons|add_buttons()|buttons|OpenUrl<sup>3</sup> or *list* of OpenUrls<sup>3</sup>|\n|lang_code|-|-|*str*|\n\n\\[1\\] any translation like `from django.utils.translation import gettext, gettext_lazy, ...`\n\n\\[2\\] `from django_actionable_messages.msteams_cards.elements import Image`\n\n\\[3\\] `from django_actionable_messages.msteams_cards.elements import OpenUrl`\n\n<h2 id=\"thumbnailcard\">ThumbnailCard</h2>\n\n<h3 id=\"thumbnailcard-elements\">Elements</h3>\n\nsee HeroCard [Elements](#herocard-elements) section\n\n<h3 id=\"thumbnailcard-cards\">Cards</h3>\n\n**src**: `from django_actionable_messages.msteams_cards.cards import ThumbnailCard`\n\n<h4 id=\"thumbnailcard-thumbnailcard\">ThumbnailCard <a href=\"https://docs.microsoft.com/en-us/microsoftteams/platform/task-modules-and-cards/cards/cards-reference#thumbnail-card\">docs</a></h4>\n\nsee HeroCard [HeroCard](#herocard-herocard) section\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/utsurius/django-actionable-messages", "keywords": "msteams,AdaptiveCard,MessageCard,HeroCard,ThumbnailCard,actionable messages", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-actionable-messages", "package_url": "https://pypi.org/project/django-actionable-messages/", "platform": "", "project_url": "https://pypi.org/project/django-actionable-messages/", "project_urls": {"Documentation": "https://github.com/utsurius/django-actionable-messages/blob/master/README.md", "Homepage": "https://github.com/utsurius/django-actionable-messages", "Source": "https://github.com/utsurius/django-actionable-messages", "Tracker": "https://github.com/utsurius/django-actionable-messages/issues"}, "release_url": "https://pypi.org/project/django-actionable-messages/0.2.3/", "requires_dist": ["django (>=2.2.0)"], "requires_python": ">=3.5", "summary": "Actionable messages", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\n    <a href=\"https://github.com/utsurius/django-actionable-messages\" rel=\"nofollow\">\n        Actionable messages\n    </a>\n</h1>\n<p align=\"center\">\n    <a href=\"https://github.com/utsurius/django-actionable-messages/releases\" rel=\"nofollow\">\n        <img alt=\"github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2de7d5ac3499f8a58956048eb3dc55a174035cb8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f75747375726975732f646a616e676f2d616374696f6e61626c652d6d65737361676573\">\n    </a>\n    <a href=\"https://pypi.python.org/pypi/django-actionable-messages\" rel=\"nofollow\">\n        <img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed287e4aec9fcdfb8a1c1e93835d050af3aac141/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d616374696f6e61626c652d6d657373616765732e737667\">\n    </a>\n    <a href=\"https://github.com/utsurius/django-actionable-messages\" rel=\"nofollow\">\n        <img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ce9f8d12c252caeea12628562b7102b9d9f2231/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f5f616374696f6e61626c655f6d657373616765732e737667\">\n    </a>\n    <a href=\"https://github.com/utsurius/django-actionable-messages\" rel=\"nofollow\">\n        <img alt=\"django\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7c3b96a813ee89874cea8db5b91f7a6a5cc21ea/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a616e676f5f616374696f6e61626c655f6d657373616765732e737667\">\n    </a>\n    <a href=\"https://github.com/utsurius/django-actionable-messages/blob/master/LICENSE\" rel=\"nofollow\">\n        <img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a71f338baf18776b5616cc51591a737e9d6cb874/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f75747375726975732f646a616e676f2d616374696f6e61626c652d6d65737361676573\">\n    </a>\n</p>\n<ol>\n<li><a href=\"#base-informations\" rel=\"nofollow\">Base informations</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#adaptivecard\" rel=\"nofollow\">AdaptiveCard</a>\n<ul>\n<li><a href=\"#adaptivecard-elements\" rel=\"nofollow\">Elements</a>\n<ul>\n<li><a href=\"#adaptivecard-textblock\" rel=\"nofollow\">TextBlock</a></li>\n<li><a href=\"#adaptivecard-image\" rel=\"nofollow\">Image</a></li>\n<li><a href=\"#adaptivecard-mediasource\" rel=\"nofollow\">MediaSource</a></li>\n<li><a href=\"#adaptivecard-media\" rel=\"nofollow\">Media</a></li>\n<li><a href=\"#adaptivecard-textrun\" rel=\"nofollow\">TextRun</a></li>\n<li><a href=\"#adaptivecard-richtextblock\" rel=\"nofollow\">RichTextBlock</a></li>\n</ul>\n</li>\n<li><a href=\"#adaptivecard-inputs\" rel=\"nofollow\">Inputs</a>\n<ul>\n<li><a href=\"#adaptivecard-textinput\" rel=\"nofollow\">TextInput</a></li>\n<li><a href=\"#adaptivecard-numberinput\" rel=\"nofollow\">NumberInput</a></li>\n<li><a href=\"#adaptivecard-dateinput\" rel=\"nofollow\">DateInput</a></li>\n<li><a href=\"#adaptivecard-timeinput\" rel=\"nofollow\">TimeInput</a></li>\n<li><a href=\"#adaptivecard-toggleinput\" rel=\"nofollow\">ToggleInput</a></li>\n<li><a href=\"#adaptivecard-inputchoice\" rel=\"nofollow\">InputChoice</a></li>\n<li><a href=\"#adaptivecard-choicesetinput\" rel=\"nofollow\">ChoiceSetInput</a></li>\n</ul>\n</li>\n<li><a href=\"#adaptivecard-actions\" rel=\"nofollow\">Actions</a>\n<ul>\n<li><a href=\"#adaptivecard-openurl\" rel=\"nofollow\">OpenUrl</a></li>\n<li><a href=\"#adaptivecard-submit\" rel=\"nofollow\">Submit</a></li>\n<li><a href=\"#adaptivecard-showcard\" rel=\"nofollow\">ShowCard</a></li>\n<li><a href=\"#adaptivecard-targetelement\" rel=\"nofollow\">TargetElement</a></li>\n<li><a href=\"#adaptivecard-togglevisibility\" rel=\"nofollow\">ToggleVisibility</a></li>\n</ul>\n</li>\n<li><a href=\"#adaptivecard-containers\" rel=\"nofollow\">Containers</a>\n<ul>\n<li><a href=\"#adaptivecard-actionset\" rel=\"nofollow\">ActionSet</a></li>\n<li><a href=\"#adaptivecard-container\" rel=\"nofollow\">Container</a></li>\n<li><a href=\"#adaptivecard-column\" rel=\"nofollow\">Column</a></li>\n<li><a href=\"#adaptivecard-columnset\" rel=\"nofollow\">ColumnSet</a></li>\n<li><a href=\"#adaptivecard-fact\" rel=\"nofollow\">Fact</a></li>\n<li><a href=\"#adaptivecard-factset\" rel=\"nofollow\">FactSet</a></li>\n<li><a href=\"#adaptivecard-imageset\" rel=\"nofollow\">ImageSet</a></li>\n</ul>\n</li>\n<li><a href=\"#adaptivecard-types\" rel=\"nofollow\">Types</a>\n<ul>\n<li><a href=\"#adaptivecard-backgroundimage\" rel=\"nofollow\">BackgroundImage</a></li>\n</ul>\n</li>\n<li><a href=\"#adaptivecard-cards\" rel=\"nofollow\">Cards</a>\n<ul>\n<li><a href=\"#adaptivecard-adaptivecard\" rel=\"nofollow\">AdaptiveCard</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#messagecard\" rel=\"nofollow\">MessageCard</a>\n<ul>\n<li><a href=\"#messagecard-elements\" rel=\"nofollow\">Elements</a>\n<ul>\n<li><a href=\"#messagecard-header\" rel=\"nofollow\">Header</a></li>\n<li><a href=\"#messagecard-fact\" rel=\"nofollow\">Fact</a></li>\n<li><a href=\"#messagecard-heroimage\" rel=\"nofollow\">HeroImage</a></li>\n<li><a href=\"#messagecard-inputchoice\" rel=\"nofollow\">InputChoice</a></li>\n<li><a href=\"#messagecard-actiontarget\" rel=\"nofollow\">ActionTarget</a></li>\n</ul>\n</li>\n<li><a href=\"#messagecard-inputs\" rel=\"nofollow\">Inputs</a>\n<ul>\n<li><a href=\"#messagecard-textinput\" rel=\"nofollow\">TextInput</a></li>\n<li><a href=\"#messagecard-dateinput\" rel=\"nofollow\">DateInput</a></li>\n<li><a href=\"#messagecard-multichoiceinput\" rel=\"nofollow\">MultiChoiceInput</a></li>\n</ul>\n</li>\n<li><a href=\"#messagecard-actions\" rel=\"nofollow\">Actions</a>\n<ul>\n<li><a href=\"#messagecard-openuri\" rel=\"nofollow\">OpenUri</a></li>\n<li><a href=\"#messagecard-httppost\" rel=\"nofollow\">HttpPOST</a></li>\n<li><a href=\"#messagecard-invokeaddincommand\" rel=\"nofollow\">InvokeAddInCommand</a></li>\n<li><a href=\"#messagecard-actioncard\" rel=\"nofollow\">ActionCard</a></li>\n</ul>\n</li>\n<li><a href=\"#messagecard-sections\" rel=\"nofollow\">Sections</a>\n<ul>\n<li><a href=\"#messagecard-section\" rel=\"nofollow\">Section</a></li>\n</ul>\n</li>\n<li><a href=\"#messagecard-cards\" rel=\"nofollow\">Cards</a>\n<ul>\n<li><a href=\"#messagecard-messagecard\" rel=\"nofollow\">MessageCard</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#herocard\" rel=\"nofollow\">HeroCard</a>\n<ul>\n<li><a href=\"#herocard-elements\" rel=\"nofollow\">Elements</a>\n<ul>\n<li><a href=\"#herocard-openurl\" rel=\"nofollow\">OpenUrl</a></li>\n<li><a href=\"#herocard-image\" rel=\"nofollow\">Image</a></li>\n</ul>\n</li>\n<li><a href=\"#herocard-cards\" rel=\"nofollow\">Cards</a>\n<ul>\n<li><a href=\"#herocard-herocard\" rel=\"nofollow\">HeroCard</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#thumbnailcard\" rel=\"nofollow\">ThumbnailCard</a>\n<ul>\n<li><a href=\"#thumbnailcard-elements\" rel=\"nofollow\">Elements</a></li>\n<li><a href=\"#thumbnailcard-cards\" rel=\"nofollow\">Cards</a>\n<ul>\n<li><a href=\"#thumbnailcard-herocard\" rel=\"nofollow\">ThumbnailCard</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"base-informations\">Base informations</h2>\n<p><a href=\"https://messagecardplayground.azurewebsites.net/\" rel=\"nofollow\">Playground V2</a></p>\n<p><a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/send-via-email\" rel=\"nofollow\">Send an actionable message via email in Office 365</a></p>\n<p><a href=\"https://docs.microsoft.com/en-us/outlook/actionable-messages/#outlook-version-requirements-for-actionable-messages\" rel=\"nofollow\">Outlook version requirements for actionable messages</a></p>\n<h2 id=\"installation\">Installation</h2>\n<p><code>pip install git+https://github.com/utsurius/django-actionable-messages</code></p>\n<p><code>pip install django-actionable-messages</code></p>\n<p>Add \"django_actionable_messages\" to INSTALLED_APPS:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s2\">\"django_actionable_messages\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>SETTINGS</p>\n<pre><span class=\"n\">ACTIONABLE_MESSAGES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"JSON_ENCODER\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"LANGUAGE_CODE\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>\"JSON_ENCODER\" - doted path to custom json encoder (default: BaseEncoder).</p>\n<p>\"LANGUAGE_CODE\" - language code used for translations (defaults to project settings.LANGUAGE_CODE). Each element of adaptive_card/message_card can set individual \"lang_code\".</p>\n<h2 id=\"requirements\">Requirements</h2>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>python</td>\n<td>3.5 - 3.8</td>\n</tr>\n<tr>\n<td>django</td>\n<td>2.2 - 3.0</td>\n</tr></tbody></table>\n<h2 id=\"usage\">Usage</h2>\n<p><strong><code>examples/message_card/github.py</code></strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.message_card.actions</span> <span class=\"kn\">import</span> <span class=\"n\">OpenUri</span><span class=\"p\">,</span> <span class=\"n\">HttpPOST</span><span class=\"p\">,</span> <span class=\"n\">ActionCard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.message_card.cards</span> <span class=\"kn\">import</span> <span class=\"n\">MessageCard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.message_card.elements</span> <span class=\"kn\">import</span> <span class=\"n\">Fact</span><span class=\"p\">,</span> <span class=\"n\">ActionTarget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.message_card.inputs</span> <span class=\"kn\">import</span> <span class=\"n\">TextInput</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.message_card.sections</span> <span class=\"kn\">import</span> <span class=\"n\">Section</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.message_card.utils</span> <span class=\"kn\">import</span> <span class=\"n\">OSType</span>\n\n\n<span class=\"n\">issue_opened</span> <span class=\"o\">=</span> <span class=\"n\">MessageCard</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Issue opened: </span><span class=\"se\">\\\"</span><span class=\"s2\">Push notifications not working</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">summary</span><span class=\"o\">=</span><span class=\"s2\">\"Issue 176715375\"</span><span class=\"p\">,</span>\n                           <span class=\"n\">theme_color</span><span class=\"o\">=</span><span class=\"s2\">\"0078D7\"</span><span class=\"p\">)</span>\n<span class=\"n\">issue_opened</span><span class=\"o\">.</span><span class=\"n\">add_sections</span><span class=\"p\">(</span>\n    <span class=\"n\">Section</span><span class=\"p\">(</span>\n        <span class=\"n\">activity_title</span><span class=\"o\">=</span><span class=\"s2\">\"Miguel Garcie\"</span><span class=\"p\">,</span>\n        <span class=\"n\">activity_subtitle</span><span class=\"o\">=</span><span class=\"s2\">\"9/13/2016, 11:46am\"</span><span class=\"p\">,</span>\n        <span class=\"n\">activity_image</span><span class=\"o\">=</span><span class=\"s2\">\"https://connectorsdemo.azurewebsites.net/images/MSC12_Oscar_002.jpg\"</span><span class=\"p\">,</span>\n        <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"There is a problem with Push notifications, they don't seem to be picked up by the connector.\"</span><span class=\"p\">,</span>\n        <span class=\"n\">facts</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">Fact</span><span class=\"p\">(</span><span class=\"s2\">\"Repository:\"</span><span class=\"p\">,</span> <span class=\"s2\">\"mgarcia</span><span class=\"se\">\\\\</span><span class=\"s2\">test\"</span><span class=\"p\">),</span>\n            <span class=\"n\">Fact</span><span class=\"p\">(</span><span class=\"s2\">\"Issue #:\"</span><span class=\"p\">,</span> <span class=\"s2\">\"176715375\"</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">issue_opened</span><span class=\"o\">.</span><span class=\"n\">add_actions</span><span class=\"p\">([</span>\n    <span class=\"n\">ActionCard</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Add a comment\"</span><span class=\"p\">,</span>\n        <span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">TextInput</span><span class=\"p\">(</span><span class=\"n\">input_id</span><span class=\"o\">=</span><span class=\"s2\">\"comment\"</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Enter a comment\"</span><span class=\"p\">,</span> <span class=\"n\">is_multiline</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n        <span class=\"n\">actions</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">HttpPOST</span><span class=\"p\">(</span><span class=\"s2\">\"OK\"</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">\"http://...\"</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">HttpPOST</span><span class=\"p\">(</span><span class=\"s2\">\"Close\"</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">\"http://...\"</span><span class=\"p\">),</span>\n    <span class=\"n\">OpenUri</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"View in Github\"</span><span class=\"p\">,</span> <span class=\"n\">targets</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ActionTarget</span><span class=\"p\">(</span><span class=\"n\">OSType</span><span class=\"o\">.</span><span class=\"n\">DEFAULT</span><span class=\"p\">,</span> <span class=\"s2\">\"http://...\"</span><span class=\"p\">)</span>\n    <span class=\"p\">])</span>\n<span class=\"p\">])</span>\n</pre>\n<p><strong><code>examples/adaptive_card/calendar_reminder.py</code></strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.actions</span> <span class=\"kn\">import</span> <span class=\"n\">Submit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.cards</span> <span class=\"kn\">import</span> <span class=\"n\">AdaptiveCard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.elements</span> <span class=\"kn\">import</span> <span class=\"n\">TextBlock</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.inputs</span> <span class=\"kn\">import</span> <span class=\"n\">InputChoice</span><span class=\"p\">,</span> <span class=\"n\">ChoiceSetInput</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.utils</span> <span class=\"kn\">import</span> <span class=\"n\">SCHEMA</span><span class=\"p\">,</span> <span class=\"n\">FontSize</span><span class=\"p\">,</span> <span class=\"n\">FontWeight</span><span class=\"p\">,</span> <span class=\"n\">SpacingStyle</span><span class=\"p\">,</span> <span class=\"n\">ChoiceInputStyle</span>\n\n\n<span class=\"n\">calendar_reminder</span> <span class=\"o\">=</span> <span class=\"n\">AdaptiveCard</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">\"1.0\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">SCHEMA</span><span class=\"p\">)</span>\n<span class=\"n\">calendar_reminder</span><span class=\"o\">.</span><span class=\"n\">set_speak</span><span class=\"p\">(</span><span class=\"s2\">\"Your  meeting about </span><span class=\"se\">\\\"</span><span class=\"s2\">Adaptive Card design session</span><span class=\"se\">\\\"</span><span class=\"s2\"> is starting at 12:30pm\"</span>\n                            <span class=\"s2\">\"Do you want to snooze  or do you want to send a late notification to the attendees?\"</span><span class=\"p\">)</span>\n<span class=\"n\">calendar_reminder</span><span class=\"o\">.</span><span class=\"n\">add_elements</span><span class=\"p\">(</span><span class=\"n\">TextBlock</span><span class=\"p\">(</span><span class=\"s2\">\"Adaptive Card design session\"</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">FontSize</span><span class=\"o\">.</span><span class=\"n\">LARGE</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"n\">FontWeight</span><span class=\"o\">.</span><span class=\"n\">BOLDER</span><span class=\"p\">))</span>\n<span class=\"n\">calendar_reminder</span><span class=\"o\">.</span><span class=\"n\">add_elements</span><span class=\"p\">([</span>\n    <span class=\"n\">TextBlock</span><span class=\"p\">(</span><span class=\"s2\">\"Conf Room 112/3377 (10)\"</span><span class=\"p\">,</span> <span class=\"n\">is_subtle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">TextBlock</span><span class=\"p\">(</span><span class=\"s2\">\"12:30 PM - 1:30 PM\"</span><span class=\"p\">,</span> <span class=\"n\">is_subtle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">spacing</span><span class=\"o\">=</span><span class=\"n\">SpacingStyle</span><span class=\"o\">.</span><span class=\"n\">NONE</span><span class=\"p\">),</span>\n    <span class=\"n\">TextBlock</span><span class=\"p\">(</span><span class=\"s2\">\"Snooze for\"</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n<span class=\"n\">calendar_reminder</span><span class=\"o\">.</span><span class=\"n\">add_elements</span><span class=\"p\">(</span><span class=\"n\">ChoiceSetInput</span><span class=\"p\">(</span>\n    <span class=\"n\">item_id</span><span class=\"o\">=</span><span class=\"s2\">\"snooze\"</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"n\">ChoiceInputStyle</span><span class=\"o\">.</span><span class=\"n\">COMPACT</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"5\"</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">InputChoice</span><span class=\"p\">(</span><span class=\"s2\">\"5 minutes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"5\"</span><span class=\"p\">),</span>\n        <span class=\"n\">InputChoice</span><span class=\"p\">(</span><span class=\"s2\">\"15 minutes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"15\"</span><span class=\"p\">),</span>\n        <span class=\"n\">InputChoice</span><span class=\"p\">(</span><span class=\"s2\">\"30 minutes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"30\"</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">))</span>\n<span class=\"n\">calendar_reminder</span><span class=\"o\">.</span><span class=\"n\">add_actions</span><span class=\"p\">([</span>\n    <span class=\"n\">Submit</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Snooze\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"s2\">\"snooze\"</span>\n    <span class=\"p\">}),</span>\n    <span class=\"n\">Submit</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"I'll be late\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"s2\">\"late\"</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">])</span>\n</pre>\n<p>For more view <strong><code>examples</code></strong> folder</p>\n<p>To get dictionary, json or html payload from card use:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.payload</td>\n<td><em>dict</em> (raw data)</td>\n</tr>\n<tr>\n<td>.json_payload</td>\n<td>json string</td>\n</tr>\n<tr>\n<td>.html_payload</td>\n<td>html string - can be used to send card via email (<a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/send-via-email\" rel=\"nofollow\">docs</a>)</td>\n</tr>\n<tr>\n<td>.signed_html_payload</td>\n<td>html string<sup>1</sup> - can be used to send card via email (<a href=\"https://docs.microsoft.com/en-us/outlook/actionable-messages/security-requirements\" rel=\"nofollow\">docs</a>)</td>\n</tr></tbody></table>\n<p>[1] you must overwrite <strong>get_signed_payload()</strong> in AdaptiveCard/MessageCard to sign the payload!</p>\n<p>Problem: <strong>'... is not JSON serializable'</strong> - probably invalid argument type was used. Default json serializer can handle translated strings and everything that <code>DjangoJSONEncoder</code> can handle.</p>\n<p>Solution: <a href=\"https://hynek.me/articles/serialization/\" rel=\"nofollow\">Better Python Object Serialization</a>. Remember to ALWAYS inherit from EncoderMixin or BaseEncoder (<code>django_actionable_messages.encoders import EncoderMixin, BaseEncoder</code>)</p>\n<p>You can set JSON_ENCODER (globally) in SETTINGS(ACTIONABLE_MESSAGES) or set it by card(json_encoder):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.cards</span> <span class=\"kn\">import</span> <span class=\"n\">AdaptiveCard</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdaptiveCard</span><span class=\"p\">(</span><span class=\"n\">AdaptiveCard</span><span class=\"p\">):</span>\n    <span class=\"n\">json_encoder</span> <span class=\"o\">=</span> <span class=\"s2\">\"path.to.my.encoder\"</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.cards</span> <span class=\"kn\">import</span> <span class=\"n\">AdaptiveCard</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdaptiveCard</span><span class=\"p\">(</span><span class=\"n\">AdaptiveCard</span><span class=\"p\">):</span>\n    <span class=\"n\">json_encoder</span> <span class=\"o\">=</span> <span class=\"n\">MyJSONEncoder</span>\n</pre>\n<p>To customize json dump you can overwrite <code>get_json_dump_kwargs()</code> in card (AdaptiveCard/MessageCard)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_actionable_messages.adaptive_card.cards</span> <span class=\"kn\">import</span> <span class=\"n\">AdaptiveCard</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdaptiveCard</span><span class=\"p\">(</span><span class=\"n\">AdaptiveCard</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_json_dump_kwargs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ensure_ascii'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s1\">'indent'</span><span class=\"p\">:</span> <span class=\"mi\">2</span>\n        <span class=\"p\">}</span>\n</pre>\n<p>Send MessageCard to msteams using webhooks and <code>requests</code> library:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">webhook_url</span><span class=\"p\">,</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">json_payload</span><span class=\"p\">,</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"Content-Type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"application/json; charset=utf-8\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To get/add <code>webhook_url</code> see here: <a href=\"https://learning.getpostman.com/docs/postman_pro/integrations/microsoft_teams/#get-the-microsoft-teams-webhook-url\" rel=\"nofollow\">Get the Microsoft Teams webhook URL</a>, <a href=\"https://support.office.com/en-ie/article/create-and-add-an-outgoing-webhook-in-teams-8e1a1648-982f-4511-b342-6d8492437207\" rel=\"nofollow\">Create and add an outgoing webhook in Teams</a></p>\n<h2 id=\"adaptivecard\">AdaptiveCard</h2>\n<p>Supported versions: <strong>1.0</strong>, <strong>1.1</strong>, <strong>1.2</strong></p>\n<p><a href=\"https://adaptivecards.io/explorer/\" rel=\"nofollow\">Schema Explorer</a></p>\n<h3 id=\"adaptivecard-elements\">Elements</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.adaptive_card.elements import ...</code></p>\n<h4 id=\"adaptivecard-textblock\">TextBlock <a href=\"https://adaptivecards.io/explorer/TextBlock.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>text</strong></td>\n<td>set_text()</td>\n<td>text</td>\n<td><em>str, trans<sup>3</sup></em></td>\n</tr>\n<tr>\n<td>color</td>\n<td>set_color()</td>\n<td>color</td>\n<td>Color<sup>1</sup></td>\n</tr>\n<tr>\n<td>font_type</td>\n<td>set_font_type()</td>\n<td>fontType</td>\n<td>FontType<sup>1</sup></td>\n</tr>\n<tr>\n<td>horizontal_alignment</td>\n<td>set_horizontal_alignment()</td>\n<td>horizontalAlignment</td>\n<td>HorizontalAlignment<sup>1</sup></td>\n</tr>\n<tr>\n<td>is_subtle</td>\n<td>set_is_subtle()</td>\n<td>isSubtle</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>max_lines</td>\n<td>set_max_lines()</td>\n<td>maxLines</td>\n<td><em>int</em></td>\n</tr>\n<tr>\n<td>size</td>\n<td>set_size()</td>\n<td>size</td>\n<td>FontSize<sup>1</sup></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>set_weight()</td>\n<td>weight</td>\n<td>FontWeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>wrap</td>\n<td>set_wrap()</td>\n<td>wrap</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-image\">Image <a href=\"https://adaptivecards.io/explorer/Image.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>url</strong></td>\n<td>set_url()</td>\n<td>url</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>alternate_text</td>\n<td>set_alternate_text()</td>\n<td>altText</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>background_color</td>\n<td>set_background_color()</td>\n<td>backgroundColor</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>str or BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>horizontal_alignment</td>\n<td>set_horizontal_alignment()</td>\n<td>horizontalAlignment</td>\n<td>HorizontalAlignment<sup>1</sup></td>\n</tr>\n<tr>\n<td>select_action</td>\n<td>set_select_action()</td>\n<td>selectAction</td>\n<td>see docs</td>\n</tr>\n<tr>\n<td>size</td>\n<td>set_size()</td>\n<td>size</td>\n<td>ImageSize<sup>1</sup></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ImageStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>width</td>\n<td>set_width()</td>\n<td>width</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-mediasource\">MediaSource <a href=\"https://adaptivecards.io/explorer/MediaSource.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>mime_type</strong></td>\n<td>mimeType</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td><strong>url</strong></td>\n<td>url</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-media\">Media <a href=\"https://adaptivecards.io/explorer/Media.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>sources</strong></td>\n<td>add_sources()</td>\n<td>sources</td>\n<td><em>list</em> of MediaSource(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>poster</td>\n<td>set_poster()</td>\n<td>poster</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>alternate_text</td>\n<td>set_alternate_text()</td>\n<td>altText</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>2</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>Other functions</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add_source()</td>\n<td>sources</td>\n<td>MediaSource<sup>1</sup></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.elements import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-textrun\">TextRun <a href=\"https://adaptivecards.io/explorer/TextRun.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>text</strong></td>\n<td>set_text()</td>\n<td>text</td>\n<td><em>str</em>, trans <sup>2</sup></td>\n</tr>\n<tr>\n<td>color</td>\n<td>set_color()</td>\n<td>color</td>\n<td>Color<sup>1</sup></td>\n</tr>\n<tr>\n<td>font_type</td>\n<td>set_font_type()</td>\n<td>fontType</td>\n<td>FontType<sup>1</sup></td>\n</tr>\n<tr>\n<td>highlight</td>\n<td>set_highlight()</td>\n<td>highlight</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>is_subtle</td>\n<td>set_is_subtle()</td>\n<td>isSubtle</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>italic</td>\n<td>set_italic()</td>\n<td>italic</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>select_action</td>\n<td>set_select_action()</td>\n<td>selectAction</td>\n<td>see docs</td>\n</tr>\n<tr>\n<td>size</td>\n<td>set_size()</td>\n<td>fontSize</td>\n<td>FontSize<sup>1</sup></td>\n</tr>\n<tr>\n<td>strike_through</td>\n<td>set_strike_through()</td>\n<td>strikethrough</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>weight</td>\n<td>set_weight()</td>\n<td>fontWeight</td>\n<td>FontWeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-richtextblock\">RichTextBlock <a href=\"https://adaptivecards.io/explorer/RichTextBlock.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>inlines</strong></td>\n<td>set_inlines()</td>\n<td>inlines</td>\n<td><em>str</em>, TextRun<sup>1</sup>, trans<sup>4</sup></td>\n</tr>\n<tr>\n<td>horizontal_alignment</td>\n<td>set_horizontal_alignment()</td>\n<td>horizontalAlignment</td>\n<td>HorizontalAlignment<sup>1</sup></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.elements import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[4] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h3 id=\"adaptivecard-inputs\">Inputs</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.adaptive_card.inputs import ...</code></p>\n<h4 id=\"adaptivecard-textinput\">TextInput <a href=\"https://adaptivecards.io/explorer/Input.Text.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is_multiline</td>\n<td>set_is_multiline()</td>\n<td>isMultiline</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>max_length</td>\n<td>set_max_length()</td>\n<td>maxLength</td>\n<td><em>int</em></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>set_placeholder()</td>\n<td>placeholder</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>TextInputStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>inline_action</td>\n<td>set_inline_action()</td>\n<td>inlineAction</td>\n<td>see docs</td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-numberinput\">NumberInput <a href=\"https://adaptivecards.io/explorer/Input.Number.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max_value</td>\n<td>set_max_value()</td>\n<td>maxValue</td>\n<td><em>int</em></td>\n</tr>\n<tr>\n<td>min_value</td>\n<td>set_min_value()</td>\n<td>minValue</td>\n<td><em>int</em></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>set_placeholder()</td>\n<td>placeholder</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>int</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-dateinput\">DateInput <a href=\"https://adaptivecards.io/explorer/Input.Date.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max_value</td>\n<td>set_max_value()</td>\n<td>maxValue</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>min_value</td>\n<td>set_min_value()</td>\n<td>minValue</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>set_placeholder()</td>\n<td>placeholder</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-timeinput\">TimeInput <a href=\"https://adaptivecards.io/explorer/Input.Time.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max_value</td>\n<td>set_max_value()</td>\n<td>maxValue</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>min_value</td>\n<td>set_min_value()</td>\n<td>minValue</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>set_placeholder()</td>\n<td>placeholder</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-toggleinput\">ToggleInput <a href=\"https://adaptivecards.io/explorer/Input.Toggle.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>title</strong></td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>value_off</td>\n<td>set_value_off()</td>\n<td>valueOff</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>value_on</td>\n<td>set_value_on()</td>\n<td>valueOn</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>wrap</td>\n<td>set_wrap()</td>\n<td>wrap</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-inputchoice\">InputChoice <a href=\"https://adaptivecards.io/explorer/Input.Choice.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>title</strong></td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td><strong>value</strong></td>\n<td>value</td>\n<td><em>str</em>, <em>int</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-choicesetinput\">ChoiceSetInput <a href=\"https://adaptivecards.io/explorer/Input.ChoiceSet.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>choices</strong></td>\n<td>set_choices()</td>\n<td>choices</td>\n<td><em>list</em> of InputChoice(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>is_multi_select</td>\n<td>set_is_multi_select()</td>\n<td>isMultiSelect</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ChoiceInputStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>wrap</td>\n<td>set_wrap()</td>\n<td>wrap</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>2</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.inputs import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h3 id=\"adaptivecard-actions\">Actions</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.adaptive_card.actions import ...</code></p>\n<h4 id=\"adaptivecard-openurl\">OpenUrl <a href=\"https://adaptivecards.io/explorer/Action.OpenUrl.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>url</strong></td>\n<td>set_url()</td>\n<td>url</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>set_icon_url()</td>\n<td>iconUrl</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ActionStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)</td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.actions import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-submit\">Submit <a href=\"https://adaptivecards.io/explorer/Action.Submit.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>set_data()</td>\n<td>data</td>\n<td><em>str</em>, <em>dict</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>set_icon_url()</td>\n<td>iconUrl</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ActionStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)</td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.actions import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-showcard\">ShowCard <a href=\"https://adaptivecards.io/explorer/Action.ShowCard.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>card</td>\n<td>set_card()</td>\n<td>card</td>\n<td>AdaptiveCard<sup>2</sup></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>4</sup></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>set_icon_url()</td>\n<td>iconUrl</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ActionStyle<sup>3</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>3</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)</td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.actions import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.cards import ...</code></p>\n<p>[3] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[4] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-targetelement\">TargetElement <a href=\"https://adaptivecards.io/explorer/TargetElement.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>element_id</strong></td>\n<td>set_element_id()</td>\n<td>elementId</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-togglevisibility\">ToggleVisibility <a href=\"https://adaptivecards.io/explorer/Action.ToggleVisibility.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>target_elements</td>\n<td>set_target_elements()</td>\n<td>targetElements</td>\n<td><em>list</em> of TargetElement<sup>1</sup>/<em>str</em>/trans<sup>3</sup> (can be mixed)</td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>set_icon_url()</td>\n<td>iconUrl</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ActionStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or action<sup>1</sup>(except TargetElement<sup>1</sup>)</td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.actions import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h3 id=\"adaptivecard-containers\">Containers</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.adaptive_card.containers import ...</code></p>\n<h4 id=\"adaptivecard-actionset\">ActionSet <a href=\"https://adaptivecards.io/explorer/ActionSet.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>actions</td>\n<td>add_actions()</td>\n<td>actions</td>\n<td>action or <em>list</em> of actions(see docs)</td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>1</sup> or card element<sup>2</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>1</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-container\">Container <a href=\"https://adaptivecards.io/explorer/Container.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>add_items()</td>\n<td>items</td>\n<td>item or <em>list</em> of items(see docs)</td>\n</tr>\n<tr>\n<td>select_action</td>\n<td>set_select_action()</td>\n<td>selectAction</td>\n<td>any action(see docs)</td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>Style<sup>2</sup></td>\n</tr>\n<tr>\n<td>vertical_content_alignment</td>\n<td>set_vertical_content_alignment()</td>\n<td>verticalContentAlignment</td>\n<td>VerticalAlignment<sup>2</sup></td>\n</tr>\n<tr>\n<td>bleed</td>\n<td>set_bleed()</td>\n<td>bleed</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>background_image</td>\n<td>set_background_image()</td>\n<td>backgroundImage</td>\n<td>BackgroundImage<sup>1</sup></td>\n</tr>\n<tr>\n<td>min_height</td>\n<td>set_min_height()</td>\n<td>minHeight</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>2</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.types import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-column\">Column <a href=\"https://adaptivecards.io/explorer/Column.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>add_items()</td>\n<td>items</td>\n<td>item or <em>list</em> of items(see docs)</td>\n</tr>\n<tr>\n<td>background_image</td>\n<td>set_background_image()</td>\n<td>backgroundImage</td>\n<td><em>str</em>, BackgroundImage<sup>2</sup></td>\n</tr>\n<tr>\n<td>bleed</td>\n<td>set_bleed()</td>\n<td>bleed</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>3</sup> or Column<sup>1</sup></td>\n</tr>\n<tr>\n<td>min_height</td>\n<td>set_min_height()</td>\n<td>minHeight</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>3</sup></td>\n</tr>\n<tr>\n<td>select_action</td>\n<td>set_select_action()</td>\n<td>selectAction</td>\n<td>see docs</td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>Style<sup>3</sup></td>\n</tr>\n<tr>\n<td>vertical_content_alignment</td>\n<td>set_vertical_content_alignment()</td>\n<td>verticalContentAlignment</td>\n<td>VerticalAlignment<sup>3</sup></td>\n</tr>\n<tr>\n<td>width</td>\n<td>set_width()</td>\n<td>width</td>\n<td><em>str</em>, <em>int</em>, Width<sup>3</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.containers import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.types import ...</code></p>\n<p>[3] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<h4 id=\"adaptivecard-columnset\">ColumnSet <a href=\"https://adaptivecards.io/explorer/ColumnSet.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>columns</strong></td>\n<td>add_columns()</td>\n<td>columns</td>\n<td>Column<sup>1</sup> or <em>list</em> of Column(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>select_action</td>\n<td>set_select_action()</td>\n<td>selectAction</td>\n<td>see docs</td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>Style<sup>2</sup></td>\n</tr>\n<tr>\n<td>bleed</td>\n<td>set_bleed()</td>\n<td>bleed</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>min_height</td>\n<td>set_min_height()</td>\n<td>minHeight</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>2</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.containers import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-fact\">Fact <a href=\"https://adaptivecards.io/explorer/Fact.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>title</strong></td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td><strong>value</strong></td>\n<td>value</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"adaptivecard-factset\">FactSet <a href=\"https://adaptivecards.io/explorer/FactSet.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>facts</td>\n<td>add_facts()</td>\n<td>facts</td>\n<td>Fact<sup>1</sup> or <em>list</em> of Fact(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>2</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.containers import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h4 id=\"adaptivecard-imageset\">ImageSet <a href=\"https://adaptivecards.io/explorer/ImageSet.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>images</td>\n<td>add_images()</td>\n<td>images</td>\n<td>Image<sup>1</sup> or <em>list</em> of Image(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>image_size</td>\n<td>set_image_size()</td>\n<td>imageSize</td>\n<td>ImageSize<sup>2</sup></td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>set_fallback()</td>\n<td>fallback</td>\n<td>FallbackOption<sup>2</sup> or card element<sup>3</sup></td>\n</tr>\n<tr>\n<td>separator</td>\n<td>set_separator()</td>\n<td>separator</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>spacing</td>\n<td>set_spacing()</td>\n<td>spacing</td>\n<td>SpacingStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>item_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_visible</td>\n<td>set_is_visible()</td>\n<td>isVisible</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>requires</td>\n<td>set_requires()</td>\n<td>requires</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>height</td>\n<td>set_height()</td>\n<td>height</td>\n<td>BlockElementHeight<sup>2</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.elements import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[3]</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>All except</th>\n<th>Import</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>containers</code></td>\n<td>Fact, Column</td>\n<td><code>from django_actionable_messages.adaptive_cards.containers import ...</code></td>\n</tr>\n<tr>\n<td><code>elements</code></td>\n<td>MediaSource, TextRun</td>\n<td><code>from django_actionable_messages.adaptive_cards.elements import ...</code></td>\n</tr>\n<tr>\n<td><code>inputs</code></td>\n<td>InputChoice</td>\n<td><code>from django_actionable_messages.adaptive_cards.inputs import ...</code></td>\n</tr></tbody></table>\n<h3 id=\"adaptivecard-types\">Types</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.adaptive_card.types import ...</code></p>\n<h4 id=\"adaptivecard-backgroundimage\">BackgroundImage <a href=\"https://adaptivecards.io/explorer/BackgroundImage.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>url</strong></td>\n<td>set_url()</td>\n<td>url</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>fill_mode</td>\n<td>set_fill_mode()</td>\n<td>fillMode</td>\n<td>FillMode<sup>1</sup></td>\n</tr>\n<tr>\n<td>horizontal_alignment</td>\n<td>set_horizontal_alignment()</td>\n<td>horizontalAlignment</td>\n<td>HorizontalAlignment<sup>1</sup></td>\n</tr>\n<tr>\n<td>vertical_alignment</td>\n<td>set_vertical_alignment()</td>\n<td>verticalAlignment</td>\n<td>VerticalAlignment<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<h3 id=\"adaptivecard-cards\">Cards</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.adaptive_card.cards import ...</code></p>\n<h4 id=\"adaptivecard-adaptivecard\">AdaptiveCard <a href=\"https://adaptivecards.io/explorer/AdaptiveCard.html\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>version</td>\n<td>set_version()</td>\n<td>version</td>\n<td><em>str</em>, SCHEMA<sup>1</sup></td>\n</tr>\n<tr>\n<td>schema</td>\n<td>set_schema()</td>\n<td>$schema</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>inputs</td>\n<td>add_elements()</td>\n<td>inputs</td>\n<td>input or <em>list</em> of inputs(see docs)</td>\n</tr>\n<tr>\n<td>actions</td>\n<td>add_actions()</td>\n<td>actions</td>\n<td>action or <em>list</em> of actions(see docs)</td>\n</tr>\n<tr>\n<td>select_action</td>\n<td>set_select_action()</td>\n<td>selectAction</td>\n<td>see docs</td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>Style<sup>1</sup></td>\n</tr>\n<tr>\n<td>hide_original_body</td>\n<td>set_hide_original_body()</td>\n<td>hideOriginalBody</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>fallback_text</td>\n<td>set_fallback_text()</td>\n<td>fallbackText</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>background_image</td>\n<td>set_background_image()</td>\n<td>backgroundImage</td>\n<td><em>str</em>, Image<sup>2</sup></td>\n</tr>\n<tr>\n<td>min_height</td>\n<td>set_min_height()</td>\n<td>minHeight</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>speak</td>\n<td>set_speak()</td>\n<td>speak</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>lang</td>\n<td>set_lang()</td>\n<td>lang</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>vertical_content_alignment</td>\n<td>set_vertical_content_alignment()</td>\n<td>verticalContentAlignment</td>\n<td>VerticalAlignment<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.adaptive_cards.utils import ...</code></p>\n<p>[2] <code>from django_actionable_messages.adaptive_cards.elements import ...</code></p>\n<h2 id=\"messagecard\">MessageCard</h2>\n<p><a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference\" rel=\"nofollow\">Legacy actionable message card reference</a></p>\n<h3 id=\"messagecard-elements\">Elements</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.message_card.elements import ...</code></p>\n<h4 id=\"messagecard-header\">Header <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#header\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>name</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td><strong>value</strong></td>\n<td>value</td>\n<td><em>str</em>, <em>int</em></td>\n</tr></tbody></table>\n<h4 id=\"messagecard-fact\">**Fact**</h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>name</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td><strong>value</strong></td>\n<td>value</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-heroimage\">HeroImage <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#image-object\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>url</strong></td>\n<td>set_url()</td>\n<td>image</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-inputchoice\">InputChoice</h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>display</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td><strong>value</strong></td>\n<td>value</td>\n<td><em>str</em>, <em>int</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-actiontarget\">ActionTarget</h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>os_type</strong></td>\n<td>os</td>\n<td>OSType<sup>1</sup></td>\n</tr>\n<tr>\n<td>url</td>\n<td>uri</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.message_cards.utils import ...</code></p>\n<h3 id=\"messagecard-inputs\">Inputs</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.message_card.inputs import ...</code></p>\n<h4 id=\"messagecard-textinput\">TextInput <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#textinput\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max_length</td>\n<td>set_max_length()</td>\n<td>maxLength</td>\n<td><em>int</em></td>\n</tr>\n<tr>\n<td>is_multiline</td>\n<td>set_is_multiline()</td>\n<td>isMultiline</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>input_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_required</td>\n<td>set_is_required()</td>\n<td>isRequired</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-dateinput\">DateInput <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#dateinput\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>include_time</td>\n<td>set_include_time()</td>\n<td>maxLength</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>input_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_required</td>\n<td>set_is_required()</td>\n<td>isRequired</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-multichoiceinput\">MultiChoiceInput <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#multichoiceinput\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>choices</strong></td>\n<td>add_choices()</td>\n<td>choices</td>\n<td><em>list</em> of InputChoice(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>is_multi_select</td>\n<td>set_is_multi_select()</td>\n<td>isMultiSelect</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>style</td>\n<td>set_style()</td>\n<td>style</td>\n<td>ChoiceStyle<sup>2</sup></td>\n</tr>\n<tr>\n<td>input_id</td>\n<td>set_id()</td>\n<td>id</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>3</sup></td>\n</tr>\n<tr>\n<td>value</td>\n<td>set_value()</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>is_required</td>\n<td>set_is_required()</td>\n<td>isRequired</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>Other functions</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add_choice()</td>\n<td>choices</td>\n<td>InputChoice<sup>1</sup></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.message_cards.inputs import ...</code></p>\n<p>[2] <code>from django_actionable_messages.message_cards.utils import ...</code></p>\n<p>[3] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h3 id=\"messagecard-actions\">Actions</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.message_card.actions import ...</code></p>\n<h4 id=\"messagecard-openuri\">OpenUri <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#openuri-action\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>set_name()</td>\n<td>name</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>targets</td>\n<td>add_targets()</td>\n<td>targets</td>\n<td><em>list</em> of ActionTarget<sup>1</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>Other functions</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add_target()</td>\n<td>targets</td>\n<td>ActionTarget<sup>1</sup></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.message_cards.elements import ...</code></p>\n<p>[2] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-httppost\">HttpPOST <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#httppost-action\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>set_name()</td>\n<td>name</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td><strong>target</strong></td>\n<td>set_target()</td>\n<td>targets</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>headers</td>\n<td>add_headers()</td>\n<td>headers</td>\n<td>Header<sup>1</sup> or <em>list</em> of Header(s)<sup>1</sup></td>\n</tr>\n<tr>\n<td>body</td>\n<td>set_body()</td>\n<td>body</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>body_content_type</td>\n<td>set_body_content_type()</td>\n<td>bodyContentType</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.message_cards.elements import ...</code></p>\n<p>[2] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-invokeaddincommand\">InvokeAddInCommand <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#invokeaddincommand-action\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>set_name()</td>\n<td>name</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td><strong>add_in_id</strong></td>\n<td>set_add_in_id()</td>\n<td>addInId</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td><strong>desktop_command_id</strong></td>\n<td>set_desktop_command_id()</td>\n<td>desktopCommandId</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>initialization_context</td>\n<td>set_set_initialization_context()</td>\n<td>initializationContext</td>\n<td><em>dict</em></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"messagecard-actioncard\">ActionCard <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#actioncard-action\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>name</strong></td>\n<td>set_name()</td>\n<td>name</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>inputs</td>\n<td>add_inputs()</td>\n<td>inputs</td>\n<td>input or <em>list</em> of inputs(see docs)</td>\n</tr>\n<tr>\n<td>actions</td>\n<td>add_actions()</td>\n<td>actions</td>\n<td>action or <em>list</em> of actions(see docs)</td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h3 id=\"messagecard-sections\">Sections</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.message_card.sections import ...</code></p>\n<h4 id=\"messagecard-section\">Section <a href=\"https://docs.microsoft.com/en-gb/outlook/actionable-messages/message-card-reference#section-fields\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start_group</td>\n<td>set_start_group()</td>\n<td>startGroup</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>text</td>\n<td>set_text()</td>\n<td>text</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>activity_image</td>\n<td>set_activity_image()</td>\n<td>activityImage</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>activity_title</td>\n<td>set_activity_title()</td>\n<td>activityTitle</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>activity_subtitle</td>\n<td>set_activity_subtitle()</td>\n<td>activitySubtitle</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>activity_text</td>\n<td>set_activity_text()</td>\n<td>activityText</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>hero_image</td>\n<td>set_hero_image()</td>\n<td>heroImage</td>\n<td>HeroImage<sup>2</sup></td>\n</tr>\n<tr>\n<td>facts</td>\n<td>add_facts()</td>\n<td>facts</td>\n<td>Fact(s)<sup>1</sup> or <em>list</em> of Fact<sup>1</sup></td>\n</tr>\n<tr>\n<td>actions</td>\n<td>add_potential_actions()</td>\n<td>potentialAction</td>\n<td>action or <em>list</em> of actions(see docs)</td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>Other functions:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set_activity(image, title, subtitle, text)</td>\n<td>activityImage, activityTitle, activitySubtitle, activityText</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.message_cards.elements import ...</code></p>\n<p>[2] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h3 id=\"messagecard-cards\">Cards</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.message_card.cards import ...</code></p>\n<h4 id=\"messagecard-messagecard\">MessageCard</h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>text</td>\n<td>set_text()</td>\n<td>text</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>originator</td>\n<td>set_originator()</td>\n<td>originator</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>summary</td>\n<td>set_summary()</td>\n<td>summary</td>\n<td><em>str</em>, trans<sup>2</sup></td>\n</tr>\n<tr>\n<td>theme_color</td>\n<td>set_theme_color()</td>\n<td>themeColor</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>correlation_id</td>\n<td>set_correlation_id()</td>\n<td>correlationId</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>auto_correlation_id*</td>\n<td>-</td>\n<td>correlationId</td>\n<td><em>bool</em> (default: <em>True</em>)</td>\n</tr>\n<tr>\n<td>expected_actors</td>\n<td>set_expected_actors()</td>\n<td>expectedActors</td>\n<td><em>list</em> of emails</td>\n</tr>\n<tr>\n<td>hide_original_body</td>\n<td>set_hide_original_body()</td>\n<td>hideOriginalBody</td>\n<td><em>bool</em></td>\n</tr>\n<tr>\n<td>sections</td>\n<td>add_sections()</td>\n<td>sections</td>\n<td>Section<sup>1</sup> or <em>list</em> of Sections<sup>1</sup></td>\n</tr>\n<tr>\n<td>actions</td>\n<td>add_actions()</td>\n<td>potentialAction</td>\n<td>action<sup>3</sup> or <em>list</em> of actions<sup>3</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>Other functions:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add_expected_actors()</td>\n<td>expectedActors</td>\n<td><em>str</em> or list of <em>str</em></td>\n</tr></tbody></table>\n<p>[1] <code>from django_actionable_messages.message_cards.sections import ...</code></p>\n<p>[2] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<p>[3] <code>from django_actionable_messages.message_cards.actions import ...</code></p>\n<h2 id=\"herocard\">HeroCard</h2>\n<h3 id=\"herocard-elements\">Elements</h3>\n<h4 id=\"herocard-openurl\">OpenUrl</h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>title</strong></td>\n<td>-</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td><strong>url</strong></td>\n<td>-</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h4 id=\"herocard-Image\">Image</h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>url</strong></td>\n<td>-</td>\n<td>value</td>\n<td><em>str</em></td>\n</tr>\n<tr>\n<td>alt</td>\n<td>-</td>\n<td>alt</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<h3 id=\"herocard-cards\">Cards</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.msteams_cards.cards import HeroCard</code></p>\n<h4 id=\"herocard-herocard\">HeroCard <a href=\"https://docs.microsoft.com/en-us/microsoftteams/platform/task-modules-and-cards/cards/cards-reference#hero-card\" rel=\"nofollow\">docs</a></h4>\n<table>\n<thead>\n<tr>\n<th>Argument name</th>\n<th>Function</th>\n<th>Property</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>set_title()</td>\n<td>title</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>subtitle</td>\n<td>set_subtitle()</td>\n<td>subtitle</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>text</td>\n<td>set_text()</td>\n<td>text</td>\n<td><em>str</em>, trans<sup>1</sup></td>\n</tr>\n<tr>\n<td>images</td>\n<td>add_images()</td>\n<td>images</td>\n<td>Image<sup>2</sup> or <em>list</em> of Images<sup>2</sup></td>\n</tr>\n<tr>\n<td>buttons</td>\n<td>add_buttons()</td>\n<td>buttons</td>\n<td>OpenUrl<sup>3</sup> or <em>list</em> of OpenUrls<sup>3</sup></td>\n</tr>\n<tr>\n<td>lang_code</td>\n<td>-</td>\n<td>-</td>\n<td><em>str</em></td>\n</tr></tbody></table>\n<p>[1] any translation like <code>from django.utils.translation import gettext, gettext_lazy, ...</code></p>\n<p>[2] <code>from django_actionable_messages.msteams_cards.elements import Image</code></p>\n<p>[3] <code>from django_actionable_messages.msteams_cards.elements import OpenUrl</code></p>\n<h2 id=\"thumbnailcard\">ThumbnailCard</h2>\n<h3 id=\"thumbnailcard-elements\">Elements</h3>\n<p>see HeroCard <a href=\"#herocard-elements\" rel=\"nofollow\">Elements</a> section</p>\n<h3 id=\"thumbnailcard-cards\">Cards</h3>\n<p><strong>src</strong>: <code>from django_actionable_messages.msteams_cards.cards import ThumbnailCard</code></p>\n<h4 id=\"thumbnailcard-thumbnailcard\">ThumbnailCard <a href=\"https://docs.microsoft.com/en-us/microsoftteams/platform/task-modules-and-cards/cards/cards-reference#thumbnail-card\" rel=\"nofollow\">docs</a></h4>\n<p>see HeroCard <a href=\"#herocard-herocard\" rel=\"nofollow\">HeroCard</a> section</p>\n\n          </div>"}, "last_serial": 6915212, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cf7285db51e24e17bf01e31545f244b7", "sha256": "0572f64f00ac77219ebdbf7ef54137e9bae94424802d60c1b188ff7b2627fd96"}, "downloads": -1, "filename": "django_actionable_messages-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cf7285db51e24e17bf01e31545f244b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24732, "upload_time": "2019-10-02T19:20:43", "upload_time_iso_8601": "2019-10-02T19:20:43.175856Z", "url": "https://files.pythonhosted.org/packages/84/db/76bfc75460c90d02d737b0c170975a5bf6f2107b37c962856baff693c732/django_actionable_messages-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a818343966949752d7d6734f12047a6b", "sha256": "a8a20d5453b9a2aa3a26d6f494dc54b60575ed3b84ea293043a9b003d7c32304"}, "downloads": -1, "filename": "django_actionable_messages-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a818343966949752d7d6734f12047a6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 28991, "upload_time": "2019-10-02T19:20:47", "upload_time_iso_8601": "2019-10-02T19:20:47.627098Z", "url": "https://files.pythonhosted.org/packages/16/a3/4e763d645456035564c1cace37909698ddeedc5d606bd7ccf7f5962f817c/django_actionable_messages-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "de2bc2b1a78c54fea425e6c97a1f238a", "sha256": "a7906f751c7b6f13ee17bd47bab278ce880bfcf5b606fa63fca037eca3c47630"}, "downloads": -1, "filename": "django_actionable_messages-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "de2bc2b1a78c54fea425e6c97a1f238a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24731, "upload_time": "2019-10-02T19:28:02", "upload_time_iso_8601": "2019-10-02T19:28:02.114795Z", "url": "https://files.pythonhosted.org/packages/7f/db/0a1087e228d04ad472d0797f2890c746aebf924e03a86d6595ef04828aeb/django_actionable_messages-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23007175a6d3d6e90f9d32bfb85c3b3f", "sha256": "e90d020c912e81535fb08e68b29aec08d1d8d3e265a8e8ade0b8feb4208408a9"}, "downloads": -1, "filename": "django_actionable_messages-0.1.1.tar.gz", "has_sig": false, "md5_digest": "23007175a6d3d6e90f9d32bfb85c3b3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 29001, "upload_time": "2019-10-02T19:28:04", "upload_time_iso_8601": "2019-10-02T19:28:04.664154Z", "url": "https://files.pythonhosted.org/packages/a8/0b/96baea1ddca1e7227a2ebe1672e2884ec4ed1d7e0fab6f7ba2c00ee52c81/django_actionable_messages-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "590e88be7715be4f6b16dabcd04202bb", "sha256": "30514711ffd941b4831fef566f78af60f90e159243b99e6d657701c87c079c38"}, "downloads": -1, "filename": "django_actionable_messages-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "590e88be7715be4f6b16dabcd04202bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 25083, "upload_time": "2019-10-15T14:37:10", "upload_time_iso_8601": "2019-10-15T14:37:10.298423Z", "url": "https://files.pythonhosted.org/packages/41/44/c477e6a7ae750d1f4c56ade04becf76573804068ea0521a01dd15fb349ab/django_actionable_messages-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c31eea95e372d41cd65c930dc4bbe80", "sha256": "c3e1e3899bcd4015ef052bbcf633087a6d3b5b4bde8a17750aaea22cb9fabf7e"}, "downloads": -1, "filename": "django_actionable_messages-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1c31eea95e372d41cd65c930dc4bbe80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 30076, "upload_time": "2019-10-15T14:37:13", "upload_time_iso_8601": "2019-10-15T14:37:13.366784Z", "url": "https://files.pythonhosted.org/packages/f5/3d/9fc650c0ac4c00aa659ec86ed14b9278f530ce057b0fad025771acfcd3aa/django_actionable_messages-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c7bf5a283d1acf56489cd47f97db8fe8", "sha256": "b8813d3c05d79c29ad1145cf129029834f004b74c25de831c536dc9afccdfebd"}, "downloads": -1, "filename": "django_actionable_messages-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c7bf5a283d1acf56489cd47f97db8fe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 25095, "upload_time": "2019-12-30T18:57:45", "upload_time_iso_8601": "2019-12-30T18:57:45.404508Z", "url": "https://files.pythonhosted.org/packages/0d/45/10fb20437d546c9eab6c67885b9af65ed795ab71e31d5cf3ee8339751704/django_actionable_messages-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edd087331709fc3d8492ddaa5063eccb", "sha256": "27ba066750fc9ba2a36c3cde43d15083a9cd72fd635a7c4c3b8ba1822806d8b8"}, "downloads": -1, "filename": "django_actionable_messages-0.1.3.tar.gz", "has_sig": false, "md5_digest": "edd087331709fc3d8492ddaa5063eccb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 30073, "upload_time": "2019-12-30T18:57:48", "upload_time_iso_8601": "2019-12-30T18:57:48.002201Z", "url": "https://files.pythonhosted.org/packages/4c/97/bc465c8b7988edc855a3fd4706eebaa8dc9ab7951cdcaee0c6ddfcca373c/django_actionable_messages-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8708449baacf891a52d12c1aa105157c", "sha256": "2fda136b5ecc430b6db7a90aac6bea715321846c0211e1ad0e288e8f86112ac4"}, "downloads": -1, "filename": "django_actionable_messages-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8708449baacf891a52d12c1aa105157c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26320, "upload_time": "2020-03-25T15:15:23", "upload_time_iso_8601": "2020-03-25T15:15:23.146782Z", "url": "https://files.pythonhosted.org/packages/9e/0e/ce3d65906b658dbfe29108715ab70bb7c790342b1c6860ca42836e7087ae/django_actionable_messages-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3e8f4d1dc68ceff0dd57ca8fde8a650", "sha256": "f42b9dd87cf061f804537d798bb7512f07d098cfba2b7c54496a6de2ddfe4c1f"}, "downloads": -1, "filename": "django_actionable_messages-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b3e8f4d1dc68ceff0dd57ca8fde8a650", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31385, "upload_time": "2020-03-25T15:15:25", "upload_time_iso_8601": "2020-03-25T15:15:25.770775Z", "url": "https://files.pythonhosted.org/packages/17/fb/28a84c5e2ad54b399ab498e0ff9cff21b2057b41d836f2f34858005ba305/django_actionable_messages-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c625bfcfb3ee6701eece623b8b747dfb", "sha256": "f6bacc3007883c6fa8798bf460d0ef263c9ed91109da34823f4dceabdc163756"}, "downloads": -1, "filename": "django_actionable_messages-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c625bfcfb3ee6701eece623b8b747dfb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26954, "upload_time": "2020-03-26T16:39:43", "upload_time_iso_8601": "2020-03-26T16:39:43.739206Z", "url": "https://files.pythonhosted.org/packages/3c/a2/82c8aec8c444385a8d867900c63834b1a4a82654b49b7be11834ed43c3de/django_actionable_messages-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85b55d68da8f920606399cc2b2b87325", "sha256": "f6beb9b00523d46ed1b1ca6ed8ed151317ac85ae3f9fe6d328a71997b4a5ef67"}, "downloads": -1, "filename": "django_actionable_messages-0.2.1.tar.gz", "has_sig": false, "md5_digest": "85b55d68da8f920606399cc2b2b87325", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31996, "upload_time": "2020-03-26T16:39:45", "upload_time_iso_8601": "2020-03-26T16:39:45.870954Z", "url": "https://files.pythonhosted.org/packages/91/95/4834256279f55bd6162496eea6cef20d6f382e222d33e5cd609e10558d1d/django_actionable_messages-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "2479f49742a75e691f3147168bf85719", "sha256": "c58801b0be2914d3d7a19517818b2c2fca0e028f19b33ae5c75b274bfd5ff28a"}, "downloads": -1, "filename": "django_actionable_messages-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2479f49742a75e691f3147168bf85719", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 27112, "upload_time": "2020-03-28T14:52:08", "upload_time_iso_8601": "2020-03-28T14:52:08.603979Z", "url": "https://files.pythonhosted.org/packages/49/55/474e9726cbd3ca64ce21d119e51ea72115ba17bf8f71a998e8a7ae141a4b/django_actionable_messages-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "829d043c6f91c96b7d75ae21051604b2", "sha256": "eba6a2726754579c31b2dd5944d8d37cf1f2caf57488c67ea418a7eff3d98ba9"}, "downloads": -1, "filename": "django_actionable_messages-0.2.2.tar.gz", "has_sig": false, "md5_digest": "829d043c6f91c96b7d75ae21051604b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 32474, "upload_time": "2020-03-28T14:52:10", "upload_time_iso_8601": "2020-03-28T14:52:10.930552Z", "url": "https://files.pythonhosted.org/packages/b5/d0/e1dc912dfd7e71dbb8fbd1052a6c00ba0b9c52b2bc21cab6de0575bb97f5/django_actionable_messages-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d4cd4bf8db034b3b5617770db7bc4d8e", "sha256": "ab82adc89dd1e9bd552970c42df28094fc115e1845101945d9d26cc3a509c031"}, "downloads": -1, "filename": "django_actionable_messages-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d4cd4bf8db034b3b5617770db7bc4d8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 32544, "upload_time": "2020-03-30T19:48:09", "upload_time_iso_8601": "2020-03-30T19:48:09.975145Z", "url": "https://files.pythonhosted.org/packages/ce/7e/761ad140e3a81784a8a8d48c26a690f8a63882731b8e7777af894437aea8/django_actionable_messages-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22671be9137f69a3fb283afd82a574d4", "sha256": "21b5a3da1fc9c85d154c7a92685b65e5a4eb32e60239ffd14fa26890fb4c30c8"}, "downloads": -1, "filename": "django_actionable_messages-0.2.3.tar.gz", "has_sig": false, "md5_digest": "22671be9137f69a3fb283afd82a574d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 34842, "upload_time": "2020-03-30T19:48:12", "upload_time_iso_8601": "2020-03-30T19:48:12.534573Z", "url": "https://files.pythonhosted.org/packages/6c/54/7f7b747195746ff98ce7dbb44345b85b1f076a18f2e0fd72a0529c645af1/django_actionable_messages-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4cd4bf8db034b3b5617770db7bc4d8e", "sha256": "ab82adc89dd1e9bd552970c42df28094fc115e1845101945d9d26cc3a509c031"}, "downloads": -1, "filename": "django_actionable_messages-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d4cd4bf8db034b3b5617770db7bc4d8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 32544, "upload_time": "2020-03-30T19:48:09", "upload_time_iso_8601": "2020-03-30T19:48:09.975145Z", "url": "https://files.pythonhosted.org/packages/ce/7e/761ad140e3a81784a8a8d48c26a690f8a63882731b8e7777af894437aea8/django_actionable_messages-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22671be9137f69a3fb283afd82a574d4", "sha256": "21b5a3da1fc9c85d154c7a92685b65e5a4eb32e60239ffd14fa26890fb4c30c8"}, "downloads": -1, "filename": "django_actionable_messages-0.2.3.tar.gz", "has_sig": false, "md5_digest": "22671be9137f69a3fb283afd82a574d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 34842, "upload_time": "2020-03-30T19:48:12", "upload_time_iso_8601": "2020-03-30T19:48:12.534573Z", "url": "https://files.pythonhosted.org/packages/6c/54/7f7b747195746ff98ce7dbb44345b85b1f076a18f2e0fd72a0529c645af1/django_actionable_messages-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:53 2020"}