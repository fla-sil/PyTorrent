{"info": {"author": "Mahdi Yusuf", "author_email": "yusuf.mahdi@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Topic :: Terminals :: Terminal Emulators/X Terminals"], "description": "Clint: Python Command-line Application Tools\n============================================\n\n**Clint** is a module filled with a set of awesome tools for developing\ncommandline applications.\n\n.. image:: https://github.com/kennethreitz/clint/raw/master/misc/clint.jpeg\n\n**C** ommand\n**L** ine\n**IN** terface\n**T** ools\n. \n\n\nClint is awesome. Crazy awesome. It supports colors, but detects if the session is a TTY, so doesn't render the colors if you're piping stuff around. Automagically.\n\nAwesome nest-able indentation context manager. Example: (``with indent(4): puts('indented text')``). It supports custom email-style quotes. Of course, it supports color too, if and when needed.\n\nIt has an awesome Column printer with optional auto-expanding columns. It detects how wide your current console is and adjusts accordingly. It wraps your words properly to fit the column size. With or without colors mixed in. All with a single function call.\n\nThe world's easiest to use implicit argument system w/ chaining methods for filtering. Seriously. \n\n\nRun the various executables in examples_ to get a good feel for what Clint offers.\n\n.. _examples: https://github.com/kennethreitz/clint/tree/develop/examples\n\nYou'll never want to not use it.\n\n\n\nCurrent Features:\n-----------------\n- Little Documentation (bear with me for now)\n- CLI Colors and Indents\n- Extremely Simple + Powerful Column Printer\n- Iterator-based Progress Bar\n- Implicit Argument Handling\n- Simple Support for Incoming Unix Pipes\n- Application Directory management\n\n\nFuture Features:\n----------------\n- Documentation!\n- Simple choice system ``Are you sure? [Yn]``\n- Default query system ``Installation Path [/usr/local/bin/]``\n- Suggestions welcome.\n\n\nExample\n-------\n\nI want to indent my console text. ::\n\n    >>> from clint.textui import puts, indent\n\n    >>> puts('not indented text')\n    >>> with indent(4):\n    >>>     puts('indented text')\n    not indented text\n        indented text\n\nI want to quote my console text (like email). ::\n\n    >>> puts('not indented text')\n    >>> with indent(4, quote=' >'):\n    >>>     puts('quoted text')\n    >>>     puts('pretty cool, eh?')\n    \n    not indented text\n     >  quoted text\n     >  pretty cool, eh?\n\nI want to color my console text. ::\n\n    >>> from clint.textui import colored\n\n    >>> puts(colored.red('red text'))\n    red text\n\n    # It's red in Windows, OSX, and Linux alike.\n\nI want to get data piped to stdin. ::\n\n    >>> clint.piped_in()\n    \n    # if no data was piped in, piped_in returns None\n\n\nI want to get the first commandline argument passed in. ::\n\n    >>> clint.args.get(0)\n\n    # if no argument was passed, get returns None\n\n\nI want to store a configuration file. ::\n\n    >>> from clint import resources\n\n    >>> resources.init('Company', 'AppName')\n    >>> resources.user.write('config.ini', file_contents)\n\n    # OSX: '/Users/appuser/Library/Application Support/AppName/config.ini'\n    # Windows: 'C:\\\\Users\\\\appuser\\\\AppData\\\\Local\\\\Company\\\\AppName\\\\config.ini'\n    # Linux: '/home/appuser/.config/appname/config.ini'\n\n\nInstallation\n------------\n\nTo install clint, simply: ::\n\n    $ pip install clint\n\nOr, if you absolutely must: ::\n\n    $ easy_install clint\n\nBut, you really shouldn't do that.\n\n\n\nLicense:\n--------\n\nISC License. ::\n\n    Copyright (c) 2011, Kenneth Reitz <me@kennethreitz.com>\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted, provided that the above\n    copyright notice and this permission notice appear in all copies.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\nContribute\n----------\n\nIf you'd like to contribute, simply fork `the repository`_, commit your changes\nto the **develop** branch (or branch off of it), and send a pull request. Make\nsure you add yourself to AUTHORS_.\n\n\nRoadmap\n-------\n- Unittests\n- Sphinx Documentation\n- Python 2.5, 3.1, 3.2 Support\n\n\n\n.. _`the repository`: http://github.com/kennethreitz/clint\n.. _AUTHORS: http://github.com/kennethreitz/clint/blob/master/AUTHORS\n\n\nHistory\n-------\n\n0.3.0\n+++++\n\n* Python 3 support!\n\n0.2.4\n+++++\n\n* New eng module\n* Win32 Bugfix\n\n\n0.2.3\n+++++\n\n* Only init colors if they are used (iPython compatability)\n* New progress module\n* Various bugfixes\n\n\n0.2.2\n+++++\n\n* Auto Color Disabling\n* Progress Namespace Change\n* New Progress Bars\n* textui.puts newline fix\n\n\n0.2.1 (2011-03-24)\n++++++++++++++++++\n\n* Python 2.5 Support\n* List of available colors\n\n\n0.2.0 (2011-03-23)\n++++++++++++++++++\n\n* Column Printing!!!\n* (Auto/Manual) Disabling of Colors\n* Smarter Colors\n* max_width, min_width\n* Strip cli colors\n* bug fixes\n\n\n0.1.2 (2011-03-21)\n++++++++++++++++++\n\n* Bugfixes\n\n\n0.1.1 (2011-03-20)\n++++++++++++++++++\n\n* Bugfixes\n* Indent Newline Injection\n* resources: flags, not_flags, files, not_files\n* Lots of Examples\n\n\n\n0.1.0 (2011-03-20)\n++++++++++++++++++\n\n* Initial Release!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/myusuf3/clint", "keywords": null, "license": "ISC", "maintainer": null, "maintainer_email": null, "name": "clint2", "package_url": "https://pypi.org/project/clint2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/clint2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/myusuf3/clint"}, "release_url": "https://pypi.org/project/clint2/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "Python Command-line Application Tools", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Clint</strong> is a module filled with a set of awesome tools for developing\ncommandline applications.</p>\n<img alt=\"https://github.com/kennethreitz/clint/raw/master/misc/clint.jpeg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bab1f713ed7181efcea82c9e6321e8669ca51b3/68747470733a2f2f6769746875622e636f6d2f6b656e6e657468726569747a2f636c696e742f7261772f6d61737465722f6d6973632f636c696e742e6a706567\">\n<p><strong>C</strong> ommand\n<strong>L</strong> ine\n<strong>IN</strong> terface\n<strong>T</strong> ools\n.</p>\n<p>Clint is awesome. Crazy awesome. It supports colors, but detects if the session is a TTY, so doesn\u2019t render the colors if you\u2019re piping stuff around. Automagically.</p>\n<p>Awesome nest-able indentation context manager. Example: (<tt>with indent(4): <span class=\"pre\">puts('indented</span> text')</tt>). It supports custom email-style quotes. Of course, it supports color too, if and when needed.</p>\n<p>It has an awesome Column printer with optional auto-expanding columns. It detects how wide your current console is and adjusts accordingly. It wraps your words properly to fit the column size. With or without colors mixed in. All with a single function call.</p>\n<p>The world\u2019s easiest to use implicit argument system w/ chaining methods for filtering. Seriously.</p>\n<p>Run the various executables in <a href=\"https://github.com/kennethreitz/clint/tree/develop/examples\" rel=\"nofollow\">examples</a> to get a good feel for what Clint offers.</p>\n<p>You\u2019ll never want to not use it.</p>\n<div id=\"current-features\">\n<h2>Current Features:</h2>\n<ul>\n<li>Little Documentation (bear with me for now)</li>\n<li>CLI Colors and Indents</li>\n<li>Extremely Simple + Powerful Column Printer</li>\n<li>Iterator-based Progress Bar</li>\n<li>Implicit Argument Handling</li>\n<li>Simple Support for Incoming Unix Pipes</li>\n<li>Application Directory management</li>\n</ul>\n</div>\n<div id=\"future-features\">\n<h2>Future Features:</h2>\n<ul>\n<li>Documentation!</li>\n<li>Simple choice system <tt>Are you sure? [Yn]</tt></li>\n<li>Default query system <tt>Installation Path [/usr/local/bin/]</tt></li>\n<li>Suggestions welcome.</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>I want to indent my console text.</p>\n<pre>&gt;&gt;&gt; from clint.textui import puts, indent\n\n&gt;&gt;&gt; puts('not indented text')\n&gt;&gt;&gt; with indent(4):\n&gt;&gt;&gt;     puts('indented text')\nnot indented text\n    indented text\n</pre>\n<p>I want to quote my console text (like email).</p>\n<pre>&gt;&gt;&gt; puts('not indented text')\n&gt;&gt;&gt; with indent(4, quote=' &gt;'):\n&gt;&gt;&gt;     puts('quoted text')\n&gt;&gt;&gt;     puts('pretty cool, eh?')\n\nnot indented text\n &gt;  quoted text\n &gt;  pretty cool, eh?\n</pre>\n<p>I want to color my console text.</p>\n<pre>&gt;&gt;&gt; from clint.textui import colored\n\n&gt;&gt;&gt; puts(colored.red('red text'))\nred text\n\n# It's red in Windows, OSX, and Linux alike.\n</pre>\n<p>I want to get data piped to stdin.</p>\n<pre>&gt;&gt;&gt; clint.piped_in()\n\n# if no data was piped in, piped_in returns None\n</pre>\n<p>I want to get the first commandline argument passed in.</p>\n<pre>&gt;&gt;&gt; clint.args.get(0)\n\n# if no argument was passed, get returns None\n</pre>\n<p>I want to store a configuration file.</p>\n<pre>&gt;&gt;&gt; from clint import resources\n\n&gt;&gt;&gt; resources.init('Company', 'AppName')\n&gt;&gt;&gt; resources.user.write('config.ini', file_contents)\n\n# OSX: '/Users/appuser/Library/Application Support/AppName/config.ini'\n# Windows: 'C:\\\\Users\\\\appuser\\\\AppData\\\\Local\\\\Company\\\\AppName\\\\config.ini'\n# Linux: '/home/appuser/.config/appname/config.ini'\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install clint, simply:</p>\n<pre>$ pip install clint\n</pre>\n<p>Or, if you absolutely must:</p>\n<pre>$ easy_install clint\n</pre>\n<p>But, you really shouldn\u2019t do that.</p>\n</div>\n<div id=\"license\">\n<h2>License:</h2>\n<p>ISC License.</p>\n<pre>Copyright (c) 2011, Kenneth Reitz &lt;me@kennethreitz.com&gt;\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n</pre>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>If you\u2019d like to contribute, simply fork <a href=\"http://github.com/kennethreitz/clint\" rel=\"nofollow\">the repository</a>, commit your changes\nto the <strong>develop</strong> branch (or branch off of it), and send a pull request. Make\nsure you add yourself to <a href=\"http://github.com/kennethreitz/clint/blob/master/AUTHORS\" rel=\"nofollow\">AUTHORS</a>.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<ul>\n<li>Unittests</li>\n<li>Sphinx Documentation</li>\n<li>Python 2.5, 3.1, 3.2 Support</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.3.0</h3>\n<ul>\n<li>Python 3 support!</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.4</h3>\n<ul>\n<li>New eng module</li>\n<li>Win32 Bugfix</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.3</h3>\n<ul>\n<li>Only init colors if they are used (iPython compatability)</li>\n<li>New progress module</li>\n<li>Various bugfixes</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.2</h3>\n<ul>\n<li>Auto Color Disabling</li>\n<li>Progress Namespace Change</li>\n<li>New Progress Bars</li>\n<li>textui.puts newline fix</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.1 (2011-03-24)</h3>\n<ul>\n<li>Python 2.5 Support</li>\n<li>List of available colors</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2.0 (2011-03-23)</h3>\n<ul>\n<li>Column Printing!!!</li>\n<li>(Auto/Manual) Disabling of Colors</li>\n<li>Smarter Colors</li>\n<li>max_width, min_width</li>\n<li>Strip cli colors</li>\n<li>bug fixes</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.2 (2011-03-21)</h3>\n<ul>\n<li>Bugfixes</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1.1 (2011-03-20)</h3>\n<ul>\n<li>Bugfixes</li>\n<li>Indent Newline Injection</li>\n<li>resources: flags, not_flags, files, not_files</li>\n<li>Lots of Examples</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.1.0 (2011-03-20)</h3>\n<ul>\n<li>Initial Release!</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 787470, "releases": {"0.3.2": [{"comment_text": "", "digests": {"md5": "edf3b20238fc5689456243cf6d239ad3", "sha256": "5aa013c7e36bee6f36eb358a3ccbff1d7eb5e64406f2f42de540bc56cad277de"}, "downloads": -1, "filename": "clint2-0.3.2.tar.gz", "has_sig": false, "md5_digest": "edf3b20238fc5689456243cf6d239ad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23640, "upload_time": "2012-06-30T04:33:05", "upload_time_iso_8601": "2012-06-30T04:33:05.033172Z", "url": "https://files.pythonhosted.org/packages/11/32/15f0a217c8da0cc680073f360061323f513614d6fcc8568b6bf251eff00b/clint2-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "edf3b20238fc5689456243cf6d239ad3", "sha256": "5aa013c7e36bee6f36eb358a3ccbff1d7eb5e64406f2f42de540bc56cad277de"}, "downloads": -1, "filename": "clint2-0.3.2.tar.gz", "has_sig": false, "md5_digest": "edf3b20238fc5689456243cf6d239ad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23640, "upload_time": "2012-06-30T04:33:05", "upload_time_iso_8601": "2012-06-30T04:33:05.033172Z", "url": "https://files.pythonhosted.org/packages/11/32/15f0a217c8da0cc680073f360061323f513614d6fcc8568b6bf251eff00b/clint2-0.3.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:57 2020"}