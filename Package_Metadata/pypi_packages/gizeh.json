{"info": {"author": "Zulko", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://raw.githubusercontent.com/Zulko/gizeh/master/logo.jpeg\n   :alt: [logo]\n   :align: center\n\nGizeh - Cairo for tourists\n===========================\n\nGizeh is a Python library for vector graphics:\n\n.. code:: python\n\n    # Let's draw a red circle !\n    import gizeh\n    surface = gizeh.Surface(width=320, height=260) # in pixels\n    circle = gizeh.circle(r=30, xy=[40,40], fill=(1,0,0))\n    circle.draw(surface) # draw the circle on the surface\n    surface.write_to_png(\"circle.png\") # export the surface as a PNG\n\nYou can see examples of Gizeh in action (combined with MoviePy to make animations) in `this blog post <http://zulko.github.io/blog/2014/09/20/vector-animations-with-python/>`_.\n\nGizeh is written on top of the module ``cairocffi``, which is a Python binding of the popular C library Cairo_. Cairo is powerful, but difficult to learn and use. Gizeh implements a few classes on top of Cairo that make it more intuitive.\n\nGizeh should work on any platform and with python 2 and 3.\n\nInstallation\n--------------\n\nTo use Gizeh you must first install Cairo_ on your computer (see their website).\n\nGizeh depends on the Python packages ``cairocffi`` and ``Numpy``. They will both be automatically installed (if they aren't already) during the installation of Gizeh. If you have trouble with the installation, head to the last section of this README for troubleshooting. If it doesn't help, you can ask for help on Github.\n\n**Installation from the sources:** Gizeh can be installed by unzipping the source code in some directory and using this command in the same directory:\n::\n\n    (sudo) python setup.py install\n\n**Installation with pip:** Alternatively, you can install Gizeh directly from the Python Package Index with this command:\n::\n\n    (sudo) pip install gizeh\n\nThis method may fail if ``ez_setup`` is not installed on your computer. In this case install ``ez_setup`` first, with ::\n\n    (sudo) pip install ez_setup\n\nContribute !\n-------------\n\nGizeh is an open-source software written by Zulko_ and released under the MIT licence. The project is hosted on Github_.\nEveryone is welcome to contribute !\n\n\nUser Guide\n-------------\n\nThis guide, along with the examples in the ``gizeh/examples`` folder, should give you everything you need to get started. To go further, read the function docstrings.\n\nSurfaces\n~~~~~~~~\n\nA Surface is a rectangle of fixed dimensions (in pixels), on which you will draw elements, and that you can save or export as an image:\n\n.. code:: python\n\n    import gizeh\n\n    # initialize surface\n    surface = gizeh.Surface(width=320, height=260) # in pixels\n\n    # Now make a shape and draw it on the surface\n    circle = gizeh.circle(r=30, xy= [40,40], fill=(1,1,1))\n    circle.draw(surface)\n\n    # Now export the surface\n    surface.get_npimage() # returns a (width x height x 3) numpy array\n    surface.write_to_png(\"circle.png\")\n\n\n\nElements\n~~~~~~~~~\n\nBasic elements are circles, rectangles, lines, texts, etc., that you can draw on a surface using ``my_element.draw(surface)``. You can specify the properties and coordinates of these elements at creation time:\n\n- ``xy`` : coordinates of the center of the object. At rendering time (in function ``surface.write_to_png``) you can set the parameter ``y_origin`` to ``top`` (default) or ``bottom``. If you leave it to ``top``, (0,0) corresponds to the upper left corner of the final picture, and the bottom right corner has coordinates (width, height). If you choose ``y_origin=bottom``, (0,0) will be at the bottom left of the picture (like in a standard plot) and (width, height) will be at the upper right corner.\n- ``angle`` : angle (in radians) of the rotation of the element around its center ``xy``.\n- ``fill`` : what will fill the element (default is no fill). Can be a color (R,G,B), a color gradient, an image, etc. See section below.\n- ``stroke`` : What will fill the element's contour. Same rules as for ``fill``.\n- ``stroke_width`` : the width (in pixels) of the element's contour. Default is 0 (no stroke).\n\nExamples of elements:\n\n.. code:: python\n\n    Pi = 3.14\n    circ = gizeh.circle(r=30, xy=(50,50), fill=(1,1,1))\n    rect = gizeh.rectangle(lx=60.3, ly=45, xy=(60,70), fill=(0,1,0), angle=Pi/8)\n    sqr = gizeh.square(l=20, stroke=(1,1,1), stroke_width= 1.5)\n    arc = gizeh.arc(r=20, a1=Pi/4, a2=3*Pi/4, fill=(1,1,1))\n    text = gizeh.text(\"Hello world\", fontfamily=\"Impact\",  fontsize=40,\n                      fill=(1,1,1), xy=(100,100), angle=Pi/12)\n    polygon = gizeh.regular_polygon(r=40, n=5, angle=np.pi/4, xy=[40,50], fill=(1,0,1))\n    line = gizeh.polyline(points=[(0,0), (20,30), (40,40), (0,10)], stroke_width=3,\n                         stroke=(1,0,0), fill=(0,1,0))\n\nFill and stroke\n----------------\n\nWhen you make a shape, the ``fill`` and ``stroke`` parameters can be one of the following:\n\n- A RGB color of the form (r,g,b) where each element is comprised between 0 and 1 (1 is 100%).\n- A RGBA color of the form (r,g,b,a), where ``a`` is comprised between 0 (totally transparent) and 1 (totally opaque).\n- A gizeh.ColorGradient (see the docstring).\n- A gizeh.ImagePattern, i.e. an image (see the docstring).\n- A numpy array representing a RGB or RGBA image (not implemented yet).\n- A PNG image file (not implemented yet).\n\n\nTransformations\n~~~~~~~~~~~~~~~~\n\nAny element can be transformed (translated, rotated or scaled). All transformations are *outplace*: they do not modify the original element, they create a modified version of it.\n\nExamples:\n\n.. code:: python\n\n    square_1 = gizeh.square(l=20, xy = [30,35], fill=(1,0,0))\n    square_2 = square_1.rotate(Pi/8) # rotation around [0,0] by default\n    square_3 = square_2.rotate(Pi/4, center=[10,15]) # rotation around a center\n    square_4 = square_1.scale(2) # two times bigger\n    square_5 = square1.scale(sx=2, sy=3) # width times 2, height times 3\n    square_6 = square_1.scale(2, center=[30,30]) # zoom: scales around a center\n    square_7 = square_1.translate(xy=[5,15]) # translation\n\n\nGroups\n~~~~~~~\n\nA Group is a collection of elements which will be transformed and drawn together. The elements can be a basic element (square, circle...) or even groups.\n\nExamples:\n\n.. code:: python\n\n    square = gizeh.square(l=20, fill=(1,0,0), xy=(40,40))\n    circle = gizeh.circle(r=20, fill=(1,2,0), xy=(50,30))\n    group_1 = gizeh.Group([square, circle])\n    group_2 = group.translate(xy=[30,30]).rotate(Pi/4)\n    group_3 = gizeh.Group([circle, group_1])\n\n    surface = gizeh.Surface(width=300,height=200)\n    group.draw(surface)\n    group_1.draw(surface)\n    group_2.draw(surface)\n    group_3.draw(surface)\n    surface.write_to_png(\"my_masterwork.png\")\n\n\nThat's all folks !\n~~~~~~~~~~~~~~~~~~~\n\nThat's about all there is to know.\nTo go further, see the examples in the ``examples`` folder or the documentation\ndirectly in the code.\n\n\nInstallation support\n---------------------\n\nSometimes the installation through `pip` fails because\n\nSome people have had problems to install ``cairocffi``, Here is how they solved\ntheir problem:\n\nOn Debian/Ubuntu ::\n\n    sudo apt-get install python-dev python-pip ffmpeg libffi-dev\n    sudo pip install gizeh\n\nOn macOSX ::\n\n    pip install ez_setup\n\n\n    brew install pkg-config libffi\n    export PKG_CONFIG_PATH=/usr/local/Cellar/libffi/3.0.13/lib/pkgconfig/\n\n    # go to https://xquartz.macosforge.org and download and install XQuartz,\n    # which is needed for cairo, then...\n    brew install cairo\n\n    pip install gizeh\n\n.. _Zulko : https://github.com/Zulko\n.. _Github: https://github.com/Zulko/gizeh\n.. _Cairo:  http://cairographics.org/\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "Cairo vector graphics", "license": "see LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "gizeh", "package_url": "https://pypi.org/project/gizeh/", "platform": "", "project_url": "https://pypi.org/project/gizeh/", "project_urls": null, "release_url": "https://pypi.org/project/gizeh/0.1.11/", "requires_dist": null, "requires_python": "", "summary": "Simple vector graphics in Python", "version": "0.1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"[logo]\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4230e9ebf8715a333c0712b430d49a60c385b13b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5a756c6b6f2f67697a65682f6d61737465722f6c6f676f2e6a706567\">\n<div id=\"gizeh-cairo-for-tourists\">\n<h2>Gizeh - Cairo for tourists</h2>\n<p>Gizeh is a Python library for vector graphics:</p>\n<pre><span class=\"c1\"># Let's draw a red circle !</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gizeh</span>\n<span class=\"n\">surface</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">Surface</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">320</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">260</span><span class=\"p\">)</span> <span class=\"c1\"># in pixels</span>\n<span class=\"n\">circle</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">],</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">circle</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span> <span class=\"c1\"># draw the circle on the surface</span>\n<span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">write_to_png</span><span class=\"p\">(</span><span class=\"s2\">\"circle.png\"</span><span class=\"p\">)</span> <span class=\"c1\"># export the surface as a PNG</span>\n</pre>\n<p>You can see examples of Gizeh in action (combined with MoviePy to make animations) in <a href=\"http://zulko.github.io/blog/2014/09/20/vector-animations-with-python/\" rel=\"nofollow\">this blog post</a>.</p>\n<p>Gizeh is written on top of the module <tt>cairocffi</tt>, which is a Python binding of the popular C library <a href=\"http://cairographics.org/\" rel=\"nofollow\">Cairo</a>. Cairo is powerful, but difficult to learn and use. Gizeh implements a few classes on top of Cairo that make it more intuitive.</p>\n<p>Gizeh should work on any platform and with python 2 and 3.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To use Gizeh you must first install <a href=\"http://cairographics.org/\" rel=\"nofollow\">Cairo</a> on your computer (see their website).</p>\n<p>Gizeh depends on the Python packages <tt>cairocffi</tt> and <tt>Numpy</tt>. They will both be automatically installed (if they aren\u2019t already) during the installation of Gizeh. If you have trouble with the installation, head to the last section of this README for troubleshooting. If it doesn\u2019t help, you can ask for help on Github.</p>\n<p><strong>Installation from the sources:</strong> Gizeh can be installed by unzipping the source code in some directory and using this command in the same directory:</p>\n<pre>(sudo) python setup.py install\n</pre>\n<p><strong>Installation with pip:</strong> Alternatively, you can install Gizeh directly from the Python Package Index with this command:</p>\n<pre>(sudo) pip install gizeh\n</pre>\n<p>This method may fail if <tt>ez_setup</tt> is not installed on your computer. In this case install <tt>ez_setup</tt> first, with</p>\n<pre>(sudo) pip install ez_setup\n</pre>\n</div>\n<div id=\"contribute\">\n<h3>Contribute !</h3>\n<p>Gizeh is an open-source software written by <a href=\"https://github.com/Zulko\" rel=\"nofollow\">Zulko</a> and released under the MIT licence. The project is hosted on <a href=\"https://github.com/Zulko/gizeh\" rel=\"nofollow\">Github</a>.\nEveryone is welcome to contribute !</p>\n</div>\n<div id=\"user-guide\">\n<h3>User Guide</h3>\n<p>This guide, along with the examples in the <tt>gizeh/examples</tt> folder, should give you everything you need to get started. To go further, read the function docstrings.</p>\n<div id=\"surfaces\">\n<h4>Surfaces</h4>\n<p>A Surface is a rectangle of fixed dimensions (in pixels), on which you will draw elements, and that you can save or export as an image:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gizeh</span>\n\n<span class=\"c1\"># initialize surface</span>\n<span class=\"n\">surface</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">Surface</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">320</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">260</span><span class=\"p\">)</span> <span class=\"c1\"># in pixels</span>\n\n<span class=\"c1\"># Now make a shape and draw it on the surface</span>\n<span class=\"n\">circle</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">xy</span><span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">],</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">circle</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now export the surface</span>\n<span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">get_npimage</span><span class=\"p\">()</span> <span class=\"c1\"># returns a (width x height x 3) numpy array</span>\n<span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">write_to_png</span><span class=\"p\">(</span><span class=\"s2\">\"circle.png\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"elements\">\n<h4>Elements</h4>\n<p>Basic elements are circles, rectangles, lines, texts, etc., that you can draw on a surface using <tt>my_element.draw(surface)</tt>. You can specify the properties and coordinates of these elements at creation time:</p>\n<ul>\n<li><tt>xy</tt> : coordinates of the center of the object. At rendering time (in function <tt>surface.write_to_png</tt>) you can set the parameter <tt>y_origin</tt> to <tt>top</tt> (default) or <tt>bottom</tt>. If you leave it to <tt>top</tt>, (0,0) corresponds to the upper left corner of the final picture, and the bottom right corner has coordinates (width, height). If you choose <tt>y_origin=bottom</tt>, (0,0) will be at the bottom left of the picture (like in a standard plot) and (width, height) will be at the upper right corner.</li>\n<li><tt>angle</tt> : angle (in radians) of the rotation of the element around its center <tt>xy</tt>.</li>\n<li><tt>fill</tt> : what will fill the element (default is no fill). Can be a color (R,G,B), a color gradient, an image, etc. See section below.</li>\n<li><tt>stroke</tt> : What will fill the element\u2019s contour. Same rules as for <tt>fill</tt>.</li>\n<li><tt>stroke_width</tt> : the width (in pixels) of the element\u2019s contour. Default is 0 (no stroke).</li>\n</ul>\n<p>Examples of elements:</p>\n<pre><span class=\"n\">Pi</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span>\n<span class=\"n\">circ</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">rectangle</span><span class=\"p\">(</span><span class=\"n\">lx</span><span class=\"o\">=</span><span class=\"mf\">60.3</span><span class=\"p\">,</span> <span class=\"n\">ly</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"mi\">70</span><span class=\"p\">),</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"n\">sqr</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">square</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">stroke</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">stroke_width</span><span class=\"o\">=</span> <span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">arc</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">arc</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">a1</span><span class=\"o\">=</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">a2</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">\"Hello world\"</span><span class=\"p\">,</span> <span class=\"n\">fontfamily</span><span class=\"o\">=</span><span class=\"s2\">\"Impact\"</span><span class=\"p\">,</span>  <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n                  <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">polygon</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">regular_polygon</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">],</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">polyline</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)],</span> <span class=\"n\">stroke_width</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                     <span class=\"n\">stroke</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"fill-and-stroke\">\n<h3>Fill and stroke</h3>\n<p>When you make a shape, the <tt>fill</tt> and <tt>stroke</tt> parameters can be one of the following:</p>\n<ul>\n<li>A RGB color of the form (r,g,b) where each element is comprised between 0 and 1 (1 is 100%).</li>\n<li>A RGBA color of the form (r,g,b,a), where <tt>a</tt> is comprised between 0 (totally transparent) and 1 (totally opaque).</li>\n<li>A gizeh.ColorGradient (see the docstring).</li>\n<li>A gizeh.ImagePattern, i.e. an image (see the docstring).</li>\n<li>A numpy array representing a RGB or RGBA image (not implemented yet).</li>\n<li>A PNG image file (not implemented yet).</li>\n</ul>\n<div id=\"transformations\">\n<h4>Transformations</h4>\n<p>Any element can be transformed (translated, rotated or scaled). All transformations are <em>outplace</em>: they do not modify the original element, they create a modified version of it.</p>\n<p>Examples:</p>\n<pre><span class=\"n\">square_1</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">square</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">xy</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">35</span><span class=\"p\">],</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">square_2</span> <span class=\"o\">=</span> <span class=\"n\">square_1</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"c1\"># rotation around [0,0] by default</span>\n<span class=\"n\">square_3</span> <span class=\"o\">=</span> <span class=\"n\">square_2</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">15</span><span class=\"p\">])</span> <span class=\"c1\"># rotation around a center</span>\n<span class=\"n\">square_4</span> <span class=\"o\">=</span> <span class=\"n\">square_1</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\"># two times bigger</span>\n<span class=\"n\">square_5</span> <span class=\"o\">=</span> <span class=\"n\">square1</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"n\">sx</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sy</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"c1\"># width times 2, height times 3</span>\n<span class=\"n\">square_6</span> <span class=\"o\">=</span> <span class=\"n\">square_1</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">])</span> <span class=\"c1\"># zoom: scales around a center</span>\n<span class=\"n\">square_7</span> <span class=\"o\">=</span> <span class=\"n\">square_1</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">15</span><span class=\"p\">])</span> <span class=\"c1\"># translation</span>\n</pre>\n</div>\n<div id=\"groups\">\n<h4>Groups</h4>\n<p>A Group is a collection of elements which will be transformed and drawn together. The elements can be a basic element (square, circle\u2026) or even groups.</p>\n<p>Examples:</p>\n<pre><span class=\"n\">square</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">square</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">))</span>\n<span class=\"n\">circle</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n<span class=\"n\">group_1</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">([</span><span class=\"n\">square</span><span class=\"p\">,</span> <span class=\"n\">circle</span><span class=\"p\">])</span>\n<span class=\"n\">group_2</span> <span class=\"o\">=</span> <span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">xy</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">Pi</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">group_3</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">([</span><span class=\"n\">circle</span><span class=\"p\">,</span> <span class=\"n\">group_1</span><span class=\"p\">])</span>\n\n<span class=\"n\">surface</span> <span class=\"o\">=</span> <span class=\"n\">gizeh</span><span class=\"o\">.</span><span class=\"n\">Surface</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span><span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n<span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n<span class=\"n\">group_1</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n<span class=\"n\">group_2</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n<span class=\"n\">group_3</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n<span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">write_to_png</span><span class=\"p\">(</span><span class=\"s2\">\"my_masterwork.png\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"that-s-all-folks\">\n<h4>That\u2019s all folks !</h4>\n<p>That\u2019s about all there is to know.\nTo go further, see the examples in the <tt>examples</tt> folder or the documentation\ndirectly in the code.</p>\n</div>\n</div>\n<div id=\"installation-support\">\n<h3>Installation support</h3>\n<p>Sometimes the installation through <cite>pip</cite> fails because</p>\n<p>Some people have had problems to install <tt>cairocffi</tt>, Here is how they solved\ntheir problem:</p>\n<p>On Debian/Ubuntu</p>\n<pre>sudo apt-get install python-dev python-pip ffmpeg libffi-dev\nsudo pip install gizeh\n</pre>\n<p>On macOSX</p>\n<pre>pip install ez_setup\n\n\nbrew install pkg-config libffi\nexport PKG_CONFIG_PATH=/usr/local/Cellar/libffi/3.0.13/lib/pkgconfig/\n\n# go to https://xquartz.macosforge.org and download and install XQuartz,\n# which is needed for cairo, then...\nbrew install cairo\n\npip install gizeh\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4448343, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1702206a13dbe1528f074e5bb83261ff", "sha256": "95ba30e703f180bac968f8851bfb897bac2fc2d5ffe115bf2094c451bddf4036"}, "downloads": -1, "filename": "gizeh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1702206a13dbe1528f074e5bb83261ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5136, "upload_time": "2014-09-05T20:14:49", "upload_time_iso_8601": "2014-09-05T20:14:49.991490Z", "url": "https://files.pythonhosted.org/packages/fb/1d/ce74bf1c0179fdc108e7e3fb13d8a7f2c921ba08194b955b0f0f29e997cb/gizeh-0.1.0.tar.gz", "yanked": false}], "0.1.01": [{"comment_text": "", "digests": {"md5": "3f0fce9550ecc8d436c394927082472c", "sha256": "02ed0822331bfa79ee86e803041d15a1e5586a2473b619c7d1935a9d5c850126"}, "downloads": -1, "filename": "gizeh-0.1.01.tar.gz", "has_sig": false, "md5_digest": "3f0fce9550ecc8d436c394927082472c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5200, "upload_time": "2014-09-05T20:20:50", "upload_time_iso_8601": "2014-09-05T20:20:50.968465Z", "url": "https://files.pythonhosted.org/packages/af/f2/67ed11259d87a737154d0cdb549454c41d85243ba66d9849b00971e64ecf/gizeh-0.1.01.tar.gz", "yanked": false}], "0.1.02": [{"comment_text": "", "digests": {"md5": "b87f2d61303217b5387145fdebd6c40a", "sha256": "5fafc9f4976a29a9556c18ebd6b557c83ce02115ad18e65ffac3132948b06e27"}, "downloads": -1, "filename": "gizeh-0.1.02.tar.gz", "has_sig": false, "md5_digest": "b87f2d61303217b5387145fdebd6c40a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9523, "upload_time": "2014-09-20T17:52:32", "upload_time_iso_8601": "2014-09-20T17:52:32.132601Z", "url": "https://files.pythonhosted.org/packages/d4/5f/aaafcf5cb471b23ea698bc61fefd0e2bb33b6262c3b7bd91105e013de237/gizeh-0.1.02.tar.gz", "yanked": false}], "0.1.03": [{"comment_text": "", "digests": {"md5": "a5ac3dfdf458b95e2bbc29fe855655d0", "sha256": "14c174bcd00b5674e3c1150bfd1465ecc9f48854b8733c2c0bd65ba3d7fb0129"}, "downloads": -1, "filename": "gizeh-0.1.03.tar.gz", "has_sig": false, "md5_digest": "a5ac3dfdf458b95e2bbc29fe855655d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9554, "upload_time": "2014-09-21T09:58:46", "upload_time_iso_8601": "2014-09-21T09:58:46.939220Z", "url": "https://files.pythonhosted.org/packages/a4/2a/e8a2937a21326cad5ec39c47d16f1d962cdaa0357734516012fd9dc60dba/gizeh-0.1.03.tar.gz", "yanked": false}], "0.1.04": [{"comment_text": "", "digests": {"md5": "a40d79b206ef556dda66568041fcec07", "sha256": "cfdd21c2c341f027cbdf8fad188ec4ca455a90b8816661aec2cb9510740690b3"}, "downloads": -1, "filename": "gizeh-0.1.04.tar.gz", "has_sig": false, "md5_digest": "a40d79b206ef556dda66568041fcec07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11690, "upload_time": "2014-09-21T15:21:40", "upload_time_iso_8601": "2014-09-21T15:21:40.693356Z", "url": "https://files.pythonhosted.org/packages/31/a7/00070cf616d683fe1b78daa2b3595fc74b2531e0bb56ee08c4322d02fccc/gizeh-0.1.04.tar.gz", "yanked": false}], "0.1.06": [{"comment_text": "", "digests": {"md5": "70f98b1893d141de500dc9679ef6a65b", "sha256": "6bfc089731c287fdf262aff07426217ead9ce67a70ccc4cfe38825d96dd5fc73"}, "downloads": -1, "filename": "gizeh-0.1.06.tar.gz", "has_sig": false, "md5_digest": "70f98b1893d141de500dc9679ef6a65b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12093, "upload_time": "2014-09-23T21:27:48", "upload_time_iso_8601": "2014-09-23T21:27:48.625887Z", "url": "https://files.pythonhosted.org/packages/11/53/97aee7829d42ef9e1be7cbcb56b8da7c42e49f3daed3b40089949dfa73f6/gizeh-0.1.06.tar.gz", "yanked": false}], "0.1.07": [{"comment_text": "", "digests": {"md5": "4a8c17c993ca2c6294f4136599faf667", "sha256": "8675939dc1e953ada39a88f6c22c2f225daf7723f8a82abe88b42b0a06b172ce"}, "downloads": -1, "filename": "gizeh-0.1.07.tar.gz", "has_sig": false, "md5_digest": "4a8c17c993ca2c6294f4136599faf667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12965, "upload_time": "2014-10-16T22:03:37", "upload_time_iso_8601": "2014-10-16T22:03:37.661414Z", "url": "https://files.pythonhosted.org/packages/e2/f2/6aa1bb34bdea35d4b5431746cc170f58094a470738ef61558d88bd62d0d4/gizeh-0.1.07.tar.gz", "yanked": false}], "0.1.08": [{"comment_text": "", "digests": {"md5": "7d7f3041093a00a3a4b5faac70941a3d", "sha256": "a8729829332f6c67742af824c40e47a6bbe5caa89f5d6605955e3f8193141390"}, "downloads": -1, "filename": "gizeh-0.1.08.tar.gz", "has_sig": false, "md5_digest": "7d7f3041093a00a3a4b5faac70941a3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16222, "upload_time": "2014-10-20T16:38:04", "upload_time_iso_8601": "2014-10-20T16:38:04.137050Z", "url": "https://files.pythonhosted.org/packages/db/91/104b816a2db3254fe720c30c93af731fd4f4b87ee30b943ea0303a5648d5/gizeh-0.1.08.tar.gz", "yanked": false}], "0.1.09": [{"comment_text": "", "digests": {"md5": "ad957a29eaf7bc3bca7cbaf74be3c515", "sha256": "c750ff30aa6985941339cfa9222126bb97c9bff89908916699e7effb5baae3bd"}, "downloads": -1, "filename": "gizeh-0.1.09.tar.gz", "has_sig": false, "md5_digest": "ad957a29eaf7bc3bca7cbaf74be3c515", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16220, "upload_time": "2014-11-02T21:25:48", "upload_time_iso_8601": "2014-11-02T21:25:48.529225Z", "url": "https://files.pythonhosted.org/packages/90/df/a612b7ee6e77173d09cdeb363fe06f47ef77c87f962247c91d366010fd5e/gizeh-0.1.09.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "2ecb50db9e469336a1d05f181173b4da", "sha256": "495780b00020ecb9bd70cf81461d131174020abdc3bf7447ccf137ea081a06ac"}, "downloads": -1, "filename": "gizeh-0.1.10.tar.gz", "has_sig": false, "md5_digest": "2ecb50db9e469336a1d05f181173b4da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16393, "upload_time": "2015-01-31T10:40:26", "upload_time_iso_8601": "2015-01-31T10:40:26.954324Z", "url": "https://files.pythonhosted.org/packages/9a/31/87f9f1ead2d3eff5406aed2468db08ed4a20ed166c9b3a909e6f5370005c/gizeh-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "c36642771860047284fabd6a39d49697", "sha256": "a12422d4d16e8b3dbdf2d51cb6633855c460404ace34c6509db30f7e3d55177b"}, "downloads": -1, "filename": "gizeh-0.1.11.tar.gz", "has_sig": false, "md5_digest": "c36642771860047284fabd6a39d49697", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17068, "upload_time": "2018-11-03T22:06:43", "upload_time_iso_8601": "2018-11-03T22:06:43.568493Z", "url": "https://files.pythonhosted.org/packages/28/e4/58a0811c60f72b6a4d69b780f1b7d718061170042eb112e86f7c5c4981af/gizeh-0.1.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c36642771860047284fabd6a39d49697", "sha256": "a12422d4d16e8b3dbdf2d51cb6633855c460404ace34c6509db30f7e3d55177b"}, "downloads": -1, "filename": "gizeh-0.1.11.tar.gz", "has_sig": false, "md5_digest": "c36642771860047284fabd6a39d49697", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17068, "upload_time": "2018-11-03T22:06:43", "upload_time_iso_8601": "2018-11-03T22:06:43.568493Z", "url": "https://files.pythonhosted.org/packages/28/e4/58a0811c60f72b6a4d69b780f1b7d718061170042eb112e86f7c5c4981af/gizeh-0.1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:42 2020"}