{"info": {"author": "Siddhant Chhabra <siddhant1042@gmail.com>", "author_email": "siddhant1042@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Execution-Time\n\n[![Build Status](https://travis-ci.org/siddhant-curious/Execution-Time.svg?branch=master)](https://travis-ci.org/siddhant-curious/Execution-Time)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE)\n\nThis is a tiny python package which provides you with a decorator to measure execution time (in ms) of functions. \n\n## Installation\n\nYou should be able to install using `pip` in the usual ways:\n\n```sh\n$ pip install Execution-Time\n```\n\nOr just clone this repository and run:\n\n```sh\n$ python3 setup.py install\n```\n\nOr place the `execution_time` folder that you downloaded somewhere where it can be accessed by your scripts.\n\n## Basic Usage\n\nImport the class `ExecutionTime`, instantiate it and `@obj.timeit` decorater becomes available. \n\n```python\nfrom execution_time import ExecutionTime\ne = ExecutionTime()\n\n@e.timeit\ndef foo(arg1):\n  do_something(arg1) \n  return \n\n@e.timeit\ndef bar():\n  hello_world()\n  return\n\nfoo(\"dragons\")\nbar()\nbar()\nbar()\nprint(e.logtime_data)\n\n## {'foo': {'times_called': 1, 'total_time': 0.0745, 'average_time': 0.0745}, 'bar': {'times_called': 3, 'total_time': 0.2054, 'average_time': 0.0685}}\n\n```\n`logtime_data` is a dictionary which contains the data in `methodname:time took in ms` format. \n\n## Additonal Features\n\n1. Auto-Decorate all functions in a script. \n\nThis is a shortcut if you want to auto-deocreate all function. To do so, pass the `__name__` attribute to the class instantiation as: \n\n```python\nfrom execution_time import ExecutionTime\n\ndef foo():\n  do_something()\n  return \n\ndef bar():\n  hi()\n\ne = ExecutionTime(module_name=__name__)\n\nfoo()\nbar()\n\nprint(e.logdata_time)\n```\nNote: The class instantiation must be done after functions have been defined and before they are called. This does limit where this feature can be used and the decorator approach is recommeneded in those scenarios. \n\n2. Provide console logs. \n\n```python\ne = ExecutionTime(console=True)\n```\n\nOutput the log time in console as: `2019-07-06 22:07:55,157 [INFO ]  Time take by method : foo is 0.12000000000012001 ms`\n\n## Issues\n\nYou can report the bugs at the [issue tracker](https://github.com/siddhant-curious/Execution-Time/issues)\n\n## License\n\nBuilt with \u2665 by Siddhant Chhabra([@siddhant-curious](https://github.com/siddhant-curious)) under [MIT License](https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE)\n\nYou can find a copy of the License at <https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/siddhant-curious/Python-Method-Execution-Time", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Execution-Time", "package_url": "https://pypi.org/project/Execution-Time/", "platform": "", "project_url": "https://pypi.org/project/Execution-Time/", "project_urls": {"Homepage": "https://github.com/siddhant-curious/Python-Method-Execution-Time"}, "release_url": "https://pypi.org/project/Execution-Time/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "package which provides you with a decorator to measure execution time of functions", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Execution-Time</h1>\n<p><a href=\"https://travis-ci.org/siddhant-curious/Execution-Time\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f0ce5b0c762cb00f6f163dab8a725c3fd92eae6/68747470733a2f2f7472617669732d63692e6f72672f7369646468616e742d637572696f75732f457865637574696f6e2d54696d652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<p>This is a tiny python package which provides you with a decorator to measure execution time (in ms) of functions.</p>\n<h2>Installation</h2>\n<p>You should be able to install using <code>pip</code> in the usual ways:</p>\n<pre>$ pip install Execution-Time\n</pre>\n<p>Or just clone this repository and run:</p>\n<pre>$ python3 setup.py install\n</pre>\n<p>Or place the <code>execution_time</code> folder that you downloaded somewhere where it can be accessed by your scripts.</p>\n<h2>Basic Usage</h2>\n<p>Import the class <code>ExecutionTime</code>, instantiate it and <code>@obj.timeit</code> decorater becomes available.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">execution_time</span> <span class=\"kn\">import</span> <span class=\"n\">ExecutionTime</span>\n<span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">ExecutionTime</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@e</span><span class=\"o\">.</span><span class=\"n\">timeit</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">):</span>\n  <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">)</span> \n  <span class=\"k\">return</span> \n\n<span class=\"nd\">@e</span><span class=\"o\">.</span><span class=\"n\">timeit</span>\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n  <span class=\"n\">hello_world</span><span class=\"p\">()</span>\n  <span class=\"k\">return</span>\n\n<span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"s2\">\"dragons\"</span><span class=\"p\">)</span>\n<span class=\"n\">bar</span><span class=\"p\">()</span>\n<span class=\"n\">bar</span><span class=\"p\">()</span>\n<span class=\"n\">bar</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">logtime_data</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## {'foo': {'times_called': 1, 'total_time': 0.0745, 'average_time': 0.0745}, 'bar': {'times_called': 3, 'total_time': 0.2054, 'average_time': 0.0685}}</span>\n</pre>\n<p><code>logtime_data</code> is a dictionary which contains the data in <code>methodname:time took in ms</code> format.</p>\n<h2>Additonal Features</h2>\n<ol>\n<li>Auto-Decorate all functions in a script.</li>\n</ol>\n<p>This is a shortcut if you want to auto-deocreate all function. To do so, pass the <code>__name__</code> attribute to the class instantiation as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">execution_time</span> <span class=\"kn\">import</span> <span class=\"n\">ExecutionTime</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n  <span class=\"n\">do_something</span><span class=\"p\">()</span>\n  <span class=\"k\">return</span> \n\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n  <span class=\"n\">hi</span><span class=\"p\">()</span>\n\n<span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">ExecutionTime</span><span class=\"p\">(</span><span class=\"n\">module_name</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">foo</span><span class=\"p\">()</span>\n<span class=\"n\">bar</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">logdata_time</span><span class=\"p\">)</span>\n</pre>\n<p>Note: The class instantiation must be done after functions have been defined and before they are called. This does limit where this feature can be used and the decorator approach is recommeneded in those scenarios.</p>\n<ol>\n<li>Provide console logs.</li>\n</ol>\n<pre><span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">ExecutionTime</span><span class=\"p\">(</span><span class=\"n\">console</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Output the log time in console as: <code>2019-07-06 22:07:55,157 [INFO ] Time take by method : foo is 0.12000000000012001 ms</code></p>\n<h2>Issues</h2>\n<p>You can report the bugs at the <a href=\"https://github.com/siddhant-curious/Execution-Time/issues\" rel=\"nofollow\">issue tracker</a></p>\n<h2>License</h2>\n<p>Built with \u2665 by Siddhant Chhabra(<a href=\"https://github.com/siddhant-curious\" rel=\"nofollow\">@siddhant-curious</a>) under <a href=\"https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE\" rel=\"nofollow\">MIT License</a></p>\n<p>You can find a copy of the License at <a href=\"https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE\" rel=\"nofollow\">https://github.com/siddhant-curious/Execution-Time/blob/master/LICENSE</a></p>\n\n          </div>"}, "last_serial": 6262254, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0f5a7b18ed01ff6ef9497b440c12fe83", "sha256": "502f5fd18ced0516e58f00b503f62182d1acf89d41b7232ae25bec89a63fafa0"}, "downloads": -1, "filename": "Execution_Time-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0f5a7b18ed01ff6ef9497b440c12fe83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5038, "upload_time": "2019-07-06T18:26:30", "upload_time_iso_8601": "2019-07-06T18:26:30.608952Z", "url": "https://files.pythonhosted.org/packages/ec/20/ecf62606e571461f84a40d16c519136d69e89e8b5b0f2f8857dd10247665/Execution_Time-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06f8c4c873b16cfbf2672731d5f4f2d8", "sha256": "8214330ed72fa66bed55a2c71382e619eb6043855c44412b499e984044734998"}, "downloads": -1, "filename": "Execution Time-1.0.0.tar.gz", "has_sig": false, "md5_digest": "06f8c4c873b16cfbf2672731d5f4f2d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3513, "upload_time": "2019-07-06T18:26:32", "upload_time_iso_8601": "2019-07-06T18:26:32.834417Z", "url": "https://files.pythonhosted.org/packages/c1/cd/5d46b870ceb6614fea748e0b1489bf2ad412e9296f737e2bbac510eecebb/Execution%20Time-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "69b6829eaae47196cd964ea74f8bac7e", "sha256": "79f23d2d9a4842d0093497c606137775896d47a75560a94e436b8d283858cb56"}, "downloads": -1, "filename": "Execution_Time-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "69b6829eaae47196cd964ea74f8bac7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5151, "upload_time": "2019-12-08T14:23:25", "upload_time_iso_8601": "2019-12-08T14:23:25.530450Z", "url": "https://files.pythonhosted.org/packages/ba/8a/781b4ccbf5914f5f1e167c0904c3b0bd67f95ae3fdf09f1a21ac55f1bb18/Execution_Time-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9acd64d0fb4811f15b41ac801379e2b", "sha256": "7043fac51395b303dbf00573c6c4fd1ed6cd0ce3d4bfb777efa7ce20b2961852"}, "downloads": -1, "filename": "Execution Time-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e9acd64d0fb4811f15b41ac801379e2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3552, "upload_time": "2019-12-08T14:23:27", "upload_time_iso_8601": "2019-12-08T14:23:27.150865Z", "url": "https://files.pythonhosted.org/packages/9a/53/62da411ea38981c4c4c6f6cb6d18629e91b3de086185e04465eed4bf6e35/Execution%20Time-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69b6829eaae47196cd964ea74f8bac7e", "sha256": "79f23d2d9a4842d0093497c606137775896d47a75560a94e436b8d283858cb56"}, "downloads": -1, "filename": "Execution_Time-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "69b6829eaae47196cd964ea74f8bac7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5151, "upload_time": "2019-12-08T14:23:25", "upload_time_iso_8601": "2019-12-08T14:23:25.530450Z", "url": "https://files.pythonhosted.org/packages/ba/8a/781b4ccbf5914f5f1e167c0904c3b0bd67f95ae3fdf09f1a21ac55f1bb18/Execution_Time-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9acd64d0fb4811f15b41ac801379e2b", "sha256": "7043fac51395b303dbf00573c6c4fd1ed6cd0ce3d4bfb777efa7ce20b2961852"}, "downloads": -1, "filename": "Execution Time-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e9acd64d0fb4811f15b41ac801379e2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3552, "upload_time": "2019-12-08T14:23:27", "upload_time_iso_8601": "2019-12-08T14:23:27.150865Z", "url": "https://files.pythonhosted.org/packages/9a/53/62da411ea38981c4c4c6f6cb6d18629e91b3de086185e04465eed4bf6e35/Execution%20Time-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:48 2020"}