{"info": {"author": "Thomas Minier", "author_email": "thomas.minier@univ-nantes.fr", "bugtrack_url": null, "classifiers": [], "description": "|Build Status| |Documentation Status| |PyPI version|\n\nRead and query HDT document with ease in Python\n\n`Online Documentation <https://callidon.github.io/pyHDT>`__\n\nRequirements\n============\n\n-  Python *version 3.6.4 or higher*\n-  `pip <https://pip.pypa.io/en/stable/>`__\n-  **gcc/clang** with **c++11 support**\n-  **Python Development headers** > You should have the ``Python.h``\n   header available on your system.\n   > For example, for Python 3.6, install the ``python3.6-dev`` package\n   on Debian/Ubuntu systems.\n\nThen, install the `pybind11\nlibrary <http://pybind11.readthedocs.io/en/stable/>`__\n\n::\n\n    pip install pybind11\n\nInstallation\n============\n\nInstallation in a `virtualenv <https://virtualenv.pypa.io/en/stable/>`__\nis **strongly advised!**\n\nPip install (recommended)\n-------------------------\n\n::\n\n    pip install hdt\n\nManual installation\n-------------------\n\n::\n\n    git clone https://github.com/Callidon/pyHDT\n    cd pyHDT/\n    ./install.sh\n\nGetting started\n===============\n\n.. code:: python\n\n    from hdt import HDTDocument\n\n    # Load an HDT file.\n    # Missing indexes are generated automatically, add False as the second argument to disable them\n    document = HDTDocument(\"test.hdt\")\n\n    # Display some metadata about the HDT document itself\n    print(\"nb triples: %i\" % document.total_triples)\n    print(\"nb subjects: %i\" % document.nb_subjects)\n    print(\"nb predicates: %i\" % document.nb_predicates)\n    print(\"nb objects: %i\" % document.nb_objects)\n    print(\"nb shared subject-object: %i\" % document.nb_shared)\n\n    # Fetch all triples that matches { ?s ?p ?o }\n    # Use empty strings (\"\") to indicates variables\n    triples, cardinality = document.search_triples(\"\", \"\", \"\")\n\n    print(\"cardinality of { ?s ?p ?o }: %i\" % cardinality)\n    for triple in triples:\n      print(triple)\n\n    # Search also support limit and offset\n    triples, cardinality = document.search_triples(\"\", \"\", \"\", limit=10, offset=100)\n    # etc ...\n\n.. |Build Status| image:: https://travis-ci.org/Callidon/pyHDT.svg?branch=master\n   :target: https://travis-ci.org/Callidon/pyHDT\n.. |Documentation Status| image:: https://readthedocs.org/projects/pyhdt/badge/?version=latest\n   :target: https://callidon.github.io/pyHDT\n.. |PyPI version| image:: https://badge.fury.io/py/hdt.svg\n   :target: https://badge.fury.io/py/hdt\n\nHandling non UTF-8 strings in python\n====================================\n\nIf the HDT document has been encoded with a non UTF-8 encoding the\nprevious code won\u2019t work correctly and will result in a\n``UnicodeDecodeError``. More details on how to convert string to str\nfrom c++ to python `here`_\n\nTo handle this we doubled the API of the HDT document by adding:\n\n- ``search_triples_bytes(...)`` return an iterator of triples as ``(py::bytes, py::bytes, py::bytes)``\n- ``search_join_bytes(...)`` return an iterator of sets of solutions mapping as ``py::set(py::bytes, py::bytes)``\n- ``convert_tripleid_bytes(...)`` return a triple as: ``(py::bytes, py::bytes, py::bytes)``\n- ``convert_id_bytes(...)`` return a ``py::bytes``\n\n**Parameters and documentation are the same as the standard version**\n\n.. code:: python\n\n  from hdt import HDTDocument\n\n   # Load an HDT file.\n   # Missing indexes are generated automatically, add False as the second argument to disable them\n  document = HDTDocument(\"test.hdt\")\n  it = document.search_triple_bytes(\"\", \"\", \"\")\n\n  for s, p, o in it:\n    print(s, p, o) # print b'...', b'...', b'...'\n    # now decode it, or handle any error\n    try:\n      s, p, o = s.decode('UTF-8'), p.decode('UTF-8'), o.decode('UTF-8')\n    except UnicodeDecodeError as err:\n      # try another other codecs\n      pass\n\n.. _here: https://pybind11.readthedocs.io/en/stable/advanced/cast/strings.html", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Callidon/pyHDT", "keywords": "rdflib,hdt,rdf,semantic web,search", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rdflib-hdt", "package_url": "https://pypi.org/project/rdflib-hdt/", "platform": "", "project_url": "https://pypi.org/project/rdflib-hdt/", "project_urls": {"Homepage": "https://github.com/Callidon/pyHDT"}, "release_url": "https://pypi.org/project/rdflib-hdt/1.0/", "requires_dist": null, "requires_python": "", "summary": "A Store back-end for rdflib to allow for reading and querying HDT documents", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/Callidon/pyHDT\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee29b37d3f7ca6d610fd6f53c9fb3f3a66264474/68747470733a2f2f7472617669732d63692e6f72672f43616c6c69646f6e2f70794844542e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://callidon.github.io/pyHDT\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/126ed80d4b8476af6b019ce4c25233fd9dadaef4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796864742f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://badge.fury.io/py/hdt\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a163d8d4d950449a450e96bd8eef8e6b958fa0a/68747470733a2f2f62616467652e667572792e696f2f70792f6864742e737667\"></a></p>\n<p>Read and query HDT document with ease in Python</p>\n<p><a href=\"https://callidon.github.io/pyHDT\" rel=\"nofollow\">Online Documentation</a></p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python <em>version 3.6.4 or higher</em></li>\n<li><a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a></li>\n<li><strong>gcc/clang</strong> with <strong>c++11 support</strong></li>\n<li><strong>Python Development headers</strong> &gt; You should have the <tt>Python.h</tt>\nheader available on your system.\n&gt; For example, for Python 3.6, install the <tt><span class=\"pre\">python3.6-dev</span></tt> package\non Debian/Ubuntu systems.</li>\n</ul>\n<p>Then, install the <a href=\"http://pybind11.readthedocs.io/en/stable/\" rel=\"nofollow\">pybind11\nlibrary</a></p>\n<pre>pip install pybind11\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation in a <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a>\nis <strong>strongly advised!</strong></p>\n<div id=\"pip-install-recommended\">\n<h3>Pip install (recommended)</h3>\n<pre>pip install hdt\n</pre>\n</div>\n<div id=\"manual-installation\">\n<h3>Manual installation</h3>\n<pre>git clone https://github.com/Callidon/pyHDT\ncd pyHDT/\n./install.sh\n</pre>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hdt</span> <span class=\"kn\">import</span> <span class=\"n\">HDTDocument</span>\n\n<span class=\"c1\"># Load an HDT file.</span>\n<span class=\"c1\"># Missing indexes are generated automatically, add False as the second argument to disable them</span>\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">HDTDocument</span><span class=\"p\">(</span><span class=\"s2\">\"test.hdt\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Display some metadata about the HDT document itself</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"nb triples: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">total_triples</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"nb subjects: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">nb_subjects</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"nb predicates: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">nb_predicates</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"nb objects: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">nb_objects</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"nb shared subject-object: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">nb_shared</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch all triples that matches { ?s ?p ?o }</span>\n<span class=\"c1\"># Use empty strings (\"\") to indicates variables</span>\n<span class=\"n\">triples</span><span class=\"p\">,</span> <span class=\"n\">cardinality</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">search_triples</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"cardinality of { ?s ?p ?o }: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">cardinality</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">triple</span> <span class=\"ow\">in</span> <span class=\"n\">triples</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">triple</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Search also support limit and offset</span>\n<span class=\"n\">triples</span><span class=\"p\">,</span> <span class=\"n\">cardinality</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">search_triples</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"c1\"># etc ...</span>\n</pre>\n</div>\n<div id=\"handling-non-utf-8-strings-in-python\">\n<h2>Handling non UTF-8 strings in python</h2>\n<p>If the HDT document has been encoded with a non UTF-8 encoding the\nprevious code won\u2019t work correctly and will result in a\n<tt>UnicodeDecodeError</tt>. More details on how to convert string to str\nfrom c++ to python <a href=\"https://pybind11.readthedocs.io/en/stable/advanced/cast/strings.html\" rel=\"nofollow\">here</a></p>\n<p>To handle this we doubled the API of the HDT document by adding:</p>\n<ul>\n<li><tt><span class=\"pre\">search_triples_bytes(...)</span></tt> return an iterator of triples as <tt><span class=\"pre\">(py::bytes,</span> <span class=\"pre\">py::bytes,</span> <span class=\"pre\">py::bytes)</span></tt></li>\n<li><tt><span class=\"pre\">search_join_bytes(...)</span></tt> return an iterator of sets of solutions mapping as <tt><span class=\"pre\">py::set(py::bytes,</span> <span class=\"pre\">py::bytes)</span></tt></li>\n<li><tt><span class=\"pre\">convert_tripleid_bytes(...)</span></tt> return a triple as: <tt><span class=\"pre\">(py::bytes,</span> <span class=\"pre\">py::bytes,</span> <span class=\"pre\">py::bytes)</span></tt></li>\n<li><tt><span class=\"pre\">convert_id_bytes(...)</span></tt> return a <tt><span class=\"pre\">py::bytes</span></tt></li>\n</ul>\n<p><strong>Parameters and documentation are the same as the standard version</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hdt</span> <span class=\"kn\">import</span> <span class=\"n\">HDTDocument</span>\n\n <span class=\"c1\"># Load an HDT file.</span>\n <span class=\"c1\"># Missing indexes are generated automatically, add False as the second argument to disable them</span>\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">HDTDocument</span><span class=\"p\">(</span><span class=\"s2\">\"test.hdt\"</span><span class=\"p\">)</span>\n<span class=\"n\">it</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">search_triple_bytes</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">o</span> <span class=\"ow\">in</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">)</span> <span class=\"c1\"># print b'...', b'...', b'...'</span>\n  <span class=\"c1\"># now decode it, or handle any error</span>\n  <span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'UTF-8'</span><span class=\"p\">),</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'UTF-8'</span><span class=\"p\">),</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'UTF-8'</span><span class=\"p\">)</span>\n  <span class=\"k\">except</span> <span class=\"ne\">UnicodeDecodeError</span> <span class=\"k\">as</span> <span class=\"n\">err</span><span class=\"p\">:</span>\n    <span class=\"c1\"># try another other codecs</span>\n    <span class=\"k\">pass</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7030258, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "76519fe4fcba3399c9f4d19ab1d9108e", "sha256": "b46eb4c33e6202d46449183a4226e88387ef08355b0565bcca0a586aea5d098d"}, "downloads": -1, "filename": "rdflib_hdt-1.0-py3.7-macosx-10.14-x86_64.egg", "has_sig": false, "md5_digest": "76519fe4fcba3399c9f4d19ab1d9108e", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 1029229, "upload_time": "2020-04-16T07:50:06", "upload_time_iso_8601": "2020-04-16T07:50:06.442577Z", "url": "https://files.pythonhosted.org/packages/70/4f/ef979a31a73b226d4d29e8dc8e6cf86e475ac9ebb2ec4aff912395f7897d/rdflib_hdt-1.0-py3.7-macosx-10.14-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7712def848f45e05fde1110c2acac55d", "sha256": "e93366510cbcd2edc2aad4f6827647bcc7e180417968bf8c148eccb96b728c7a"}, "downloads": -1, "filename": "rdflib_hdt-1.0.tar.gz", "has_sig": false, "md5_digest": "7712def848f45e05fde1110c2acac55d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231764, "upload_time": "2020-04-16T07:50:09", "upload_time_iso_8601": "2020-04-16T07:50:09.706071Z", "url": "https://files.pythonhosted.org/packages/a4/38/ba208c75469b58837f24e038dfdd304f99c78db6a6bcb8d1e4ccbef78ead/rdflib_hdt-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76519fe4fcba3399c9f4d19ab1d9108e", "sha256": "b46eb4c33e6202d46449183a4226e88387ef08355b0565bcca0a586aea5d098d"}, "downloads": -1, "filename": "rdflib_hdt-1.0-py3.7-macosx-10.14-x86_64.egg", "has_sig": false, "md5_digest": "76519fe4fcba3399c9f4d19ab1d9108e", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 1029229, "upload_time": "2020-04-16T07:50:06", "upload_time_iso_8601": "2020-04-16T07:50:06.442577Z", "url": "https://files.pythonhosted.org/packages/70/4f/ef979a31a73b226d4d29e8dc8e6cf86e475ac9ebb2ec4aff912395f7897d/rdflib_hdt-1.0-py3.7-macosx-10.14-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7712def848f45e05fde1110c2acac55d", "sha256": "e93366510cbcd2edc2aad4f6827647bcc7e180417968bf8c148eccb96b728c7a"}, "downloads": -1, "filename": "rdflib_hdt-1.0.tar.gz", "has_sig": false, "md5_digest": "7712def848f45e05fde1110c2acac55d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231764, "upload_time": "2020-04-16T07:50:09", "upload_time_iso_8601": "2020-04-16T07:50:09.706071Z", "url": "https://files.pythonhosted.org/packages/a4/38/ba208c75469b58837f24e038dfdd304f99c78db6a6bcb8d1e4ccbef78ead/rdflib_hdt-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:38 2020"}