{"info": {"author": "SKingori", "author_email": "samson.mwangi@cllulant.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# CELLULANT EXPRESS\n## qatingg ###\n\nPython adapter for Cellulant Tingg express checkout version 2.1\n\nTo install: `pip install qatingg`\n\nFor all calls you first have to initiate the adapter with your credentials\nYou can find your credentials over here: \n[Developer portal](https://beep2.cellulant.com:9212/checkout/v2/portal/#/home)\n\n#### Params ####\n\n| Param        | Required| Description   |\n| ------------- | -----:|---------------:|\n| client id     | True  | Used to Encrypt|\n| client secret | True  | Used to Encrypt|\n| service code  | True  | Used to Encrypt|\n| access_key    | True  | Used to Encrypt|\n| domain        | True  | specify environment: ```staging``` or ```sandbox```|\n| url           | True  | Used to pass custom url |\n| path          | True  | Used to pass custom path |\n```\nadapter = MulaAdapter(<client id>, <client secret>, <service code>, <access_key>, <domain>, <url> , <path>)\n```\n\n```domain:```  User have two options.These are cellulant's testing environments:\n\n```\nSTAGING \nor \nSANDBOX\nor\nLOCAL\n```\n\n``` json\nadapter.get_encryption(\n        msisdn='0730xxxxxxx',\n        customer_first_name='John',\n        customer_last_name='Doeh',\n        customer_email='john.doeh@jd.com',\n        transaction_id='<unique>',\n        account_number='066564ACC',\n        amount=1000,\n        currency_code='KES',\n        country_code='KE',\n        description='Air ticket',\n        due_date='2019-10-01 12:12:00', or int(30) #Minutes\n        payer_client_code='i8UytECD',\n        language_code='en',\n        success_url='http://callbackurl.com/success',\n        fail_url='http://callbackurl.com/fail',\n        callback_url='http://callbackurl.com/callback'\n)\n```\n\n```due_date:``` User can pass the number of minutes(``` int```) for the session or use cellulant data format(```''Y-m-d H:M:S''```)\nTo get the express page:\n\n```checkout_type:``` Cellulant have several ways of checkout\n```\nExample:\n-------------\nmodal\nexpress\nthemed-checkout\n---------------\n```\n\n```\nNote: Add payer client code, ONLY if you're testing single payment option' \n```\nThis will return checkout response as a url.\n```\nExample below:\n```\n[Example url](https://beep2.cellulant.com:9212/checkout/v2/express/?params=<params>&accessKey=<accesskey>&countryCode=KE)\n\n#### Code Sample ####\n````python\nimport sys\nfrom tingg.adapters import TinggAdapter\nimport random\n\n\n\ndef get_response():\n    init = TinggAdapter(iv_key=\"h3tckgMNxxxxx\",\n                        secret_key=\"Nmxx6546xxxxxx\",\n                        access_key=\"$2a$08$wQ2ghgfhgfhfghfh64564\",\n                        service_code=\"EWWW5763434\",\n                        domain=\"SANDBOX\",\n                        url=\"http://localhost:3020\",\n                        path=\"/\"\n                        )\n\n    response = init.get_encryption(msisdn='0724565xxxx',\n                                customer_first_name='John',\n                                customer_last_name='Doeh',\n                                customer_email='john.doeh@jd.com',\n                                transaction_id=random.randint(0, sys.maxunicode),\n                                account_number='3434364ACC',\n                                amount=1000,\n                                currency_code='UGX',\n                                country_code='UG',\n                                description='Air ticket',\n                                checkout_type=\"express\",\n                                due_date=30, # or \"2019-12-12 12:12:12\"\n                                payer_client_code='',\n                                language_code='en',\n                                success_url='http://callbackurl.com/success',\n                                fail_url='http://callbackurl.com/fail',\n                                callback_url='http://callbackurl.com/callback'\n                                )\n    #To see code returned\n    print(response)\n    return response\n````\n###### Tests\n\nRunning tests\n\n```\npython setup.py test\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://tingg.africa", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "qatingg", "package_url": "https://pypi.org/project/qatingg/", "platform": "", "project_url": "https://pypi.org/project/qatingg/", "project_urls": {"Homepage": "https://tingg.africa"}, "release_url": "https://pypi.org/project/qatingg/2.0.5/", "requires_dist": ["pycryptodome", "requests"], "requires_python": ">=3.7", "summary": "Cellulant QA adapter", "version": "2.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CELLULANT EXPRESS</h1>\n<h2>qatingg</h2>\n<p>Python adapter for Cellulant Tingg express checkout version 2.1</p>\n<p>To install: <code>pip install qatingg</code></p>\n<p>For all calls you first have to initiate the adapter with your credentials\nYou can find your credentials over here:\n<a href=\"https://beep2.cellulant.com:9212/checkout/v2/portal/#/home\" rel=\"nofollow\">Developer portal</a></p>\n<h4>Params</h4>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th align=\"right\">Required</th>\n<th align=\"right\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>client id</td>\n<td align=\"right\">True</td>\n<td align=\"right\">Used to Encrypt</td>\n</tr>\n<tr>\n<td>client secret</td>\n<td align=\"right\">True</td>\n<td align=\"right\">Used to Encrypt</td>\n</tr>\n<tr>\n<td>service code</td>\n<td align=\"right\">True</td>\n<td align=\"right\">Used to Encrypt</td>\n</tr>\n<tr>\n<td>access_key</td>\n<td align=\"right\">True</td>\n<td align=\"right\">Used to Encrypt</td>\n</tr>\n<tr>\n<td>domain</td>\n<td align=\"right\">True</td>\n<td align=\"right\">specify environment: <code>staging</code> or <code>sandbox</code></td>\n</tr>\n<tr>\n<td>url</td>\n<td align=\"right\">True</td>\n<td align=\"right\">Used to pass custom url</td>\n</tr>\n<tr>\n<td>path</td>\n<td align=\"right\">True</td>\n<td align=\"right\">Used to pass custom path</td>\n</tr></tbody></table>\n<pre><code>adapter = MulaAdapter(&lt;client id&gt;, &lt;client secret&gt;, &lt;service code&gt;, &lt;access_key&gt;, &lt;domain&gt;, &lt;url&gt; , &lt;path&gt;)\n</code></pre>\n<p><code>domain:</code>  User have two options.These are cellulant's testing environments:</p>\n<pre><code>STAGING \nor \nSANDBOX\nor\nLOCAL\n</code></pre>\n<pre><span class=\"err\">adapter.get_encryption(</span>\n        <span class=\"err\">msisdn='</span><span class=\"mi\">0730</span><span class=\"err\">xxxxxxx',</span>\n        <span class=\"err\">customer_first_name='John',</span>\n        <span class=\"err\">customer_last_name='Doeh',</span>\n        <span class=\"err\">customer_email='john.doeh@jd.com',</span>\n        <span class=\"err\">transaction_id='&lt;unique&gt;',</span>\n        <span class=\"err\">account_number='</span><span class=\"mi\">066564</span><span class=\"err\">ACC',</span>\n        <span class=\"err\">amount=</span><span class=\"mi\">1000</span><span class=\"err\">,</span>\n        <span class=\"err\">currency_code='KES',</span>\n        <span class=\"err\">country_code='KE',</span>\n        <span class=\"err\">description='Air</span> <span class=\"err\">ticket',</span>\n        <span class=\"err\">due_date='</span><span class=\"mi\">2019-10-01</span> <span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">12</span><span class=\"err\">:</span><span class=\"mi\">00</span><span class=\"err\">',</span> <span class=\"err\">or</span> <span class=\"err\">int(</span><span class=\"mi\">30</span><span class=\"err\">)</span> <span class=\"err\">#Minutes</span>\n        <span class=\"err\">payer_client_code='i</span><span class=\"mi\">8</span><span class=\"err\">UytECD',</span>\n        <span class=\"err\">language_code='en',</span>\n        <span class=\"err\">success_url='http://callbackurl.com/success',</span>\n        <span class=\"err\">fail_url='http://callbackurl.com/fail',</span>\n        <span class=\"err\">callback_url='http://callbackurl.com/callback'</span>\n<span class=\"err\">)</span>\n</pre>\n<p><code>due_date:</code> User can pass the number of minutes(<code>int</code>) for the session or use cellulant data format(<code>''Y-m-d H:M:S''</code>)\nTo get the express page:</p>\n<p><code>checkout_type:</code> Cellulant have several ways of checkout</p>\n<pre><code>Example:\n-------------\nmodal\nexpress\nthemed-checkout\n---------------\n</code></pre>\n<pre><code>Note: Add payer client code, ONLY if you're testing single payment option' \n</code></pre>\n<p>This will return checkout response as a url.</p>\n<pre><code>Example below:\n</code></pre>\n<p><a href=\"https://beep2.cellulant.com:9212/checkout/v2/express/?params=%3Cparams%3E&amp;accessKey=%3Caccesskey%3E&amp;countryCode=KE\" rel=\"nofollow\">Example url</a></p>\n<h4>Code Sample</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tingg.adapters</span> <span class=\"kn\">import</span> <span class=\"n\">TinggAdapter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_response</span><span class=\"p\">():</span>\n    <span class=\"n\">init</span> <span class=\"o\">=</span> <span class=\"n\">TinggAdapter</span><span class=\"p\">(</span><span class=\"n\">iv_key</span><span class=\"o\">=</span><span class=\"s2\">\"h3tckgMNxxxxx\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s2\">\"Nmxx6546xxxxxx\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">access_key</span><span class=\"o\">=</span><span class=\"s2\">\"$2a$08$wQ2ghgfhgfhfghfh64564\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">service_code</span><span class=\"o\">=</span><span class=\"s2\">\"EWWW5763434\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">\"SANDBOX\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost:3020\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/\"</span>\n                        <span class=\"p\">)</span>\n\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">init</span><span class=\"o\">.</span><span class=\"n\">get_encryption</span><span class=\"p\">(</span><span class=\"n\">msisdn</span><span class=\"o\">=</span><span class=\"s1\">'0724565xxxx'</span><span class=\"p\">,</span>\n                                <span class=\"n\">customer_first_name</span><span class=\"o\">=</span><span class=\"s1\">'John'</span><span class=\"p\">,</span>\n                                <span class=\"n\">customer_last_name</span><span class=\"o\">=</span><span class=\"s1\">'Doeh'</span><span class=\"p\">,</span>\n                                <span class=\"n\">customer_email</span><span class=\"o\">=</span><span class=\"s1\">'john.doeh@jd.com'</span><span class=\"p\">,</span>\n                                <span class=\"n\">transaction_id</span><span class=\"o\">=</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">maxunicode</span><span class=\"p\">),</span>\n                                <span class=\"n\">account_number</span><span class=\"o\">=</span><span class=\"s1\">'3434364ACC'</span><span class=\"p\">,</span>\n                                <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span>\n                                <span class=\"n\">currency_code</span><span class=\"o\">=</span><span class=\"s1\">'UGX'</span><span class=\"p\">,</span>\n                                <span class=\"n\">country_code</span><span class=\"o\">=</span><span class=\"s1\">'UG'</span><span class=\"p\">,</span>\n                                <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Air ticket'</span><span class=\"p\">,</span>\n                                <span class=\"n\">checkout_type</span><span class=\"o\">=</span><span class=\"s2\">\"express\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">due_date</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"c1\"># or \"2019-12-12 12:12:12\"</span>\n                                <span class=\"n\">payer_client_code</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                                <span class=\"n\">language_code</span><span class=\"o\">=</span><span class=\"s1\">'en'</span><span class=\"p\">,</span>\n                                <span class=\"n\">success_url</span><span class=\"o\">=</span><span class=\"s1\">'http://callbackurl.com/success'</span><span class=\"p\">,</span>\n                                <span class=\"n\">fail_url</span><span class=\"o\">=</span><span class=\"s1\">'http://callbackurl.com/fail'</span><span class=\"p\">,</span>\n                                <span class=\"n\">callback_url</span><span class=\"o\">=</span><span class=\"s1\">'http://callbackurl.com/callback'</span>\n                                <span class=\"p\">)</span>\n    <span class=\"c1\">#To see code returned</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre>\n<h6>Tests</h6>\n<p>Running tests</p>\n<pre><code>python setup.py test\n</code></pre>\n\n          </div>"}, "last_serial": 6640644, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "c9227cf055163e924d0b24d8ee6655e1", "sha256": "82a56fd1df3059e1d0c5c944e39e335ad13ae44f95cd111f2e84eb037fb1028b"}, "downloads": -1, "filename": "qatingg-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9227cf055163e924d0b24d8ee6655e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6821, "upload_time": "2019-10-23T12:30:13", "upload_time_iso_8601": "2019-10-23T12:30:13.754845Z", "url": "https://files.pythonhosted.org/packages/67/69/0d5665ff9e2c588ad2fafaec0a5778363f45cd10197e773888402d00466e/qatingg-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b397f6ed711c5383b94636871a8a3c3", "sha256": "346a59b5c1dca57b74a54b03e162bd3e62fc544e2664ac5f2b4621df1c965e34"}, "downloads": -1, "filename": "qatingg-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3b397f6ed711c5383b94636871a8a3c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4854, "upload_time": "2019-10-23T12:30:16", "upload_time_iso_8601": "2019-10-23T12:30:16.570778Z", "url": "https://files.pythonhosted.org/packages/31/ca/6fc518f5f9375e4eb1c913bdff81e20b837bdbd8d12c946875818e957691/qatingg-2.0.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "13a4dc2552d11ec2dd1035df4d45257f", "sha256": "dffde7d80dd0b138a461600e9c9810741e7dd46aabba3faae3e6684f86be455b"}, "downloads": -1, "filename": "qatingg-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "13a4dc2552d11ec2dd1035df4d45257f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7308, "upload_time": "2019-10-24T13:27:27", "upload_time_iso_8601": "2019-10-24T13:27:27.707493Z", "url": "https://files.pythonhosted.org/packages/b8/23/b8a8df753765f06d351fe1e813ec79867b782cb13f1d5bda1e355a822dd4/qatingg-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eeb965e12bddc899a9b64661fb6e0dda", "sha256": "f6d855a1b29f5f58e6455232f84f5ca36cb7dcc33087a0589619fafa78a41e69"}, "downloads": -1, "filename": "qatingg-2.0.2.tar.gz", "has_sig": false, "md5_digest": "eeb965e12bddc899a9b64661fb6e0dda", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5535, "upload_time": "2019-10-24T13:27:29", "upload_time_iso_8601": "2019-10-24T13:27:29.303018Z", "url": "https://files.pythonhosted.org/packages/35/d0/c56a54932fb00d67edcfd62a61d9b9fe5974732675d0b73336fed052c238/qatingg-2.0.2.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "8d3caedea2ba2fc66ccde04386b166ca", "sha256": "c7cad927c12b9113525def55a391283449a8e07269d82b24e2c3bb1997c6dfa3"}, "downloads": -1, "filename": "qatingg-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8d3caedea2ba2fc66ccde04386b166ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7526, "upload_time": "2020-02-16T14:47:29", "upload_time_iso_8601": "2020-02-16T14:47:29.250278Z", "url": "https://files.pythonhosted.org/packages/29/ff/60f4673e54330539200281737fb0d8691d99f190b687c02d9d235e80f6ec/qatingg-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a549711e42f8912e748ad523668eabd0", "sha256": "be28e923d4bd954262a7f7a7093f76403654ef5f8879045cd6d198670dddac0a"}, "downloads": -1, "filename": "qatingg-2.0.4.tar.gz", "has_sig": false, "md5_digest": "a549711e42f8912e748ad523668eabd0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5766, "upload_time": "2020-02-16T14:47:31", "upload_time_iso_8601": "2020-02-16T14:47:31.046784Z", "url": "https://files.pythonhosted.org/packages/49/86/3c2f08acc9fef06d6890d4b4b6408e6066982045b4b73e27301c10f439e5/qatingg-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "61e1efe3d637a5f39bf933a6e8a7e053", "sha256": "88a1803d4968e0b4c9eaf266ab9802ba60b013e3a65129dd5d2d6809500ddbd0"}, "downloads": -1, "filename": "qatingg-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "61e1efe3d637a5f39bf933a6e8a7e053", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7523, "upload_time": "2020-02-16T14:51:21", "upload_time_iso_8601": "2020-02-16T14:51:21.640351Z", "url": "https://files.pythonhosted.org/packages/73/89/64203e949f721ceaabb799223aca380d79f164fa434fea609e1a24dfe4fa/qatingg-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3071d863aff217c4e7bde6348c9ac521", "sha256": "a00adfd9768348456526098e467fb1c026cc671f4773aee1ca961ef347864213"}, "downloads": -1, "filename": "qatingg-2.0.5.tar.gz", "has_sig": false, "md5_digest": "3071d863aff217c4e7bde6348c9ac521", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5761, "upload_time": "2020-02-16T14:51:23", "upload_time_iso_8601": "2020-02-16T14:51:23.791006Z", "url": "https://files.pythonhosted.org/packages/3e/fe/adc450bb29d0c6806986552bc0805e89f22ef8437bcdc46269c00dcc0c2d/qatingg-2.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61e1efe3d637a5f39bf933a6e8a7e053", "sha256": "88a1803d4968e0b4c9eaf266ab9802ba60b013e3a65129dd5d2d6809500ddbd0"}, "downloads": -1, "filename": "qatingg-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "61e1efe3d637a5f39bf933a6e8a7e053", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7523, "upload_time": "2020-02-16T14:51:21", "upload_time_iso_8601": "2020-02-16T14:51:21.640351Z", "url": "https://files.pythonhosted.org/packages/73/89/64203e949f721ceaabb799223aca380d79f164fa434fea609e1a24dfe4fa/qatingg-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3071d863aff217c4e7bde6348c9ac521", "sha256": "a00adfd9768348456526098e467fb1c026cc671f4773aee1ca961ef347864213"}, "downloads": -1, "filename": "qatingg-2.0.5.tar.gz", "has_sig": false, "md5_digest": "3071d863aff217c4e7bde6348c9ac521", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5761, "upload_time": "2020-02-16T14:51:23", "upload_time_iso_8601": "2020-02-16T14:51:23.791006Z", "url": "https://files.pythonhosted.org/packages/3e/fe/adc450bb29d0c6806986552bc0805e89f22ef8437bcdc46269c00dcc0c2d/qatingg-2.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:12 2020"}