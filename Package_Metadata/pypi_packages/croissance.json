{"info": {"author": "Lars Sch\u00f6ning", "author_email": "lays@biosustain.dtu.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "==========\nCroissance\n==========\n\n.. image:: https://img.shields.io/travis/biosustain/croissance/master.svg?style=flat-square\n    :target: https://travis-ci.org/biosustain/croissance\n\n.. image:: https://img.shields.io/pypi/v/croissance.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/croissance\n\n.. image:: https://img.shields.io/pypi/l/croissance.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/croissance\n\nDescription\n===========\n\nA tool for estimating growth rates in growth curves. The tool fits \u03bb \u22c5 e :sup:`\u03bc\u22c5x` + N :sub:`0` to any candidate growth phases of the growth curve that have increasing growth, i.e. where both the first and second derivative of the growth function are positive. To identify these phases reliably, the tool utilizes a custom smoothing function that addresses problems other smoothing methods have with growth curves that have regions with varying levels of noise (e.g. lots of noise in the beginning, then less noise after growth starts, then more noise in the stationary phase). \n\nThe parameter N :sub:`0` of the model can optionally be constrained. This is recommended if the value is known. The growth rate in calculated growth phases can only be properly compared if their N :sub:`0` (baseline OD; when the organism is at its initial population) points to a similar stage of actual growth.\n\nInstallation\n============\n\nTo install ``croissance``, use Python 3.x `pip`:\n\n::\n\n    pip3 install croissance\n\n\nUsage\n=====\n\nCroissance can be used from command-line or as a Python library. The input to the command-line tool is generally one or more `*.tsv` files (tab-separated values) with the following format:\n\n===== ===== ===== =====\ntime  A1    A2    ...\n===== ===== ===== =====\n0.0   0.0   0.01  ...\n0.17  0.14  0.06  ...\n...   ...   ...   ...\n===== ===== ===== =====\n\nEach sample should be recorded in its own column with the sample name in the header row. The time unit is hours and the value unit should be OD or some value correlating with OD.\n\nTo process this file, enter:\n\n::\n\n    croissance example.tsv \n    \nThe output will be generated at ``example.output.tsv``. The output is formatted with column headers: ``name`` (sample name), ``phase`` (nth growth phase), ``start`` (start time), ``end`` (end time),  ``slope`` (\u03bc), ``intercept`` (\u03bb), ``n0`` (N :sub:`0`) and a few others. By default, each sample is represented by at least one row, containing phase \"0\". This is simply the highest ranking phase if one was found for this curve; otherwise the remaining columns are empty. \n\n----\n\nTo also output a PDF files with figures (``example.output.pdf``), enter:\n\n::\n\n    croissance --figures example.tsv \n\n\n.. image:: https://cloud.githubusercontent.com/assets/74085/21225960/abfa9a4a-c2d3-11e6-85c6-88b1db24723c.png\n    :target: #\n    :align: center\n    \n----\n\nTo see a description of all the command-line options available, enter ``croissance --help``.\n\nFor use from Python, provide your growth curve as a ``pandas.Series`` object. The growth rates are estimated using ``croissance.process_curve(curve)``. The return value is a ``namedtuple`` object with attributes ``series``, ``outliers`` and ``growth_phases`` . Each growth phase has the attributes ``start`` (start time), ``end`` (end time), ``slope`` (\u03bc), ``intercept`` (\u03bb), ``n0`` (N :sub:`0`), as well as other attributes such as ``SNR`` (signal-to-noise ratio of the fit) and ``rank``.\n\n::\n\n    from croissance import process_curve\n\n    result = process_curve(my_curve)\n    print(result.growth_phases)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/biosustain/croissance", "keywords": null, "license": "Apache License Version 2.0", "maintainer": null, "maintainer_email": null, "name": "croissance", "package_url": "https://pypi.org/project/croissance/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/croissance/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/biosustain/croissance"}, "release_url": "https://pypi.org/project/croissance/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "A tool for estimating growth rates in growth curves.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/biosustain/croissance\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/biosustain/croissance/master.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa51186b1ec3f2ddbae8f0fd4e40dfff66ba207d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f62696f7375737461696e2f63726f697373616e63652f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.python.org/pypi/croissance\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/croissance.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ae760ce7d242eb375075e484124c66623c29e5a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f63726f697373616e63652e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.python.org/pypi/croissance\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/croissance.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57efa4321b4c9ecfbfd4a2d9e2c9a6f42c4dc380/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f63726f697373616e63652e7376673f7374796c653d666c61742d737175617265\"></a>\n<div id=\"description\">\n<h2>Description</h2>\n<p>A tool for estimating growth rates in growth curves. The tool fits \u03bb \u22c5 e <sup>\u03bc\u22c5x</sup> + N <sub>0</sub> to any candidate growth phases of the growth curve that have increasing growth, i.e. where both the first and second derivative of the growth function are positive. To identify these phases reliably, the tool utilizes a custom smoothing function that addresses problems other smoothing methods have with growth curves that have regions with varying levels of noise (e.g. lots of noise in the beginning, then less noise after growth starts, then more noise in the stationary phase).</p>\n<p>The parameter N <sub>0</sub> of the model can optionally be constrained. This is recommended if the value is known. The growth rate in calculated growth phases can only be properly compared if their N <sub>0</sub> (baseline OD; when the organism is at its initial population) points to a similar stage of actual growth.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <tt>croissance</tt>, use Python 3.x <cite>pip</cite>:</p>\n<pre>pip3 install croissance\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Croissance can be used from command-line or as a Python library. The input to the command-line tool is generally one or more <cite>*.tsv</cite> files (tab-separated values) with the following format:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>time</th>\n<th>A1</th>\n<th>A2</th>\n<th>\u2026</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>0.0</td>\n<td>0.0</td>\n<td>0.01</td>\n<td>\u2026</td>\n</tr>\n<tr><td>0.17</td>\n<td>0.14</td>\n<td>0.06</td>\n<td>\u2026</td>\n</tr>\n<tr><td>\u2026</td>\n<td>\u2026</td>\n<td>\u2026</td>\n<td>\u2026</td>\n</tr>\n</tbody>\n</table>\n<p>Each sample should be recorded in its own column with the sample name in the header row. The time unit is hours and the value unit should be OD or some value correlating with OD.</p>\n<p>To process this file, enter:</p>\n<pre>croissance example.tsv\n</pre>\n<p>The output will be generated at <tt>example.output.tsv</tt>. The output is formatted with column headers: <tt>name</tt> (sample name), <tt>phase</tt> (nth growth phase), <tt>start</tt> (start time), <tt>end</tt> (end time),  <tt>slope</tt> (\u03bc), <tt>intercept</tt> (\u03bb), <tt>n0</tt> (N <sub>0</sub>) and a few others. By default, each sample is represented by at least one row, containing phase \u201c0\u201d. This is simply the highest ranking phase if one was found for this curve; otherwise the remaining columns are empty.</p>\n<hr class=\"docutils\">\n<p>To also output a PDF files with figures (<tt>example.output.pdf</tt>), enter:</p>\n<pre>croissance --figures example.tsv\n</pre>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"https://cloud.githubusercontent.com/assets/74085/21225960/abfa9a4a-c2d3-11e6-85c6-88b1db24723c.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e51f8ebe069475f4ab8c771a07ffcca62a3b6c9f/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f37343038352f32313232353936302f61626661396134612d633264332d313165362d383563362d3838623164623234373233632e706e67\"></a>\n<hr class=\"docutils\">\n<p>To see a description of all the command-line options available, enter <tt>croissance <span class=\"pre\">--help</span></tt>.</p>\n<p>For use from Python, provide your growth curve as a <tt>pandas.Series</tt> object. The growth rates are estimated using <tt>croissance.process_curve(curve)</tt>. The return value is a <tt>namedtuple</tt> object with attributes <tt>series</tt>, <tt>outliers</tt> and <tt>growth_phases</tt> . Each growth phase has the attributes <tt>start</tt> (start time), <tt>end</tt> (end time), <tt>slope</tt> (\u03bc), <tt>intercept</tt> (\u03bb), <tt>n0</tt> (N <sub>0</sub>), as well as other attributes such as <tt>SNR</tt> (signal-to-noise ratio of the fit) and <tt>rank</tt>.</p>\n<pre>from croissance import process_curve\n\nresult = process_curve(my_curve)\nprint(result.growth_phases)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4735482, "releases": {"0.0.0": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "a2b45d024c677d433732ee22aa4f3c70", "sha256": "4be25050edb7b5223894db7e1bf826a99f0f42ef04d4e00dbfe90094d3400079"}, "downloads": -1, "filename": "croissance-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a2b45d024c677d433732ee22aa4f3c70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9520, "upload_time": "2016-10-10T10:43:03", "upload_time_iso_8601": "2016-10-10T10:43:03.972760Z", "url": "https://files.pythonhosted.org/packages/cb/bd/be6fb2789414e00899bf63e7b908472e4affa357c186df8ff0d9c94baa67/croissance-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "959bdaa7d841f0011baa601a530fea9d", "sha256": "d544cc38e2a8fd8de1b1cd7652b0c9b26b00e5ec2368ffbcb377eed911bba2be"}, "downloads": -1, "filename": "croissance-1.1.0.tar.gz", "has_sig": false, "md5_digest": "959bdaa7d841f0011baa601a530fea9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10127, "upload_time": "2016-12-15T13:37:16", "upload_time_iso_8601": "2016-12-15T13:37:16.191330Z", "url": "https://files.pythonhosted.org/packages/5f/8c/36b8f53f0c98d0c668365d3ed61999739d8c5e915342d654bdc4c4840e2b/croissance-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "959bdaa7d841f0011baa601a530fea9d", "sha256": "d544cc38e2a8fd8de1b1cd7652b0c9b26b00e5ec2368ffbcb377eed911bba2be"}, "downloads": -1, "filename": "croissance-1.1.0.tar.gz", "has_sig": false, "md5_digest": "959bdaa7d841f0011baa601a530fea9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10127, "upload_time": "2016-12-15T13:37:16", "upload_time_iso_8601": "2016-12-15T13:37:16.191330Z", "url": "https://files.pythonhosted.org/packages/5f/8c/36b8f53f0c98d0c668365d3ed61999739d8c5e915342d654bdc4c4840e2b/croissance-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:15 2020"}