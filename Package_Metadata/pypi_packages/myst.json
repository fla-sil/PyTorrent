{"info": {"author": "Myst AI, Inc.", "author_email": "support@myst.ai", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# Myst Python Library\n\nThis is the official Python client library for the Myst Platform.\n\n### Requirements\n\n- Python 2.7+ or Python 3.4+\n\n### Installation\n\nTo install the package from PyPI:\n\n    $ pip install --upgrade myst\n\n### Authentication\n\nThe Myst API uses JSON Web Tokens (JWTs) to authenticate requests. The Myst Python library handles the sending of JWTs to the API automatically and\ncurrently supports two ways to authenticate to obtain a JWT: through your Google user account or a Myst service account.\n\n#### Authenticating using your user account\n\nIf you don't yet have a Google account, you can create one on the [Google Account Signup](https://accounts.google.com/signup) page.\n\nOnce you have access to a Google account, send an email to `support@myst.ai` with your email so we can authorize you to use the Myst Platform.\n\nUse the following code snippet to authenticate using your user account:\n\n```python\nimport myst\n\nmyst.authenticate()\n```\n\nThe first time you run this, you'll be presented with a web browser and asked to authorize the Myst Python library to make requests on behalf of your Google user account.\n\n#### Authenticating using a service account\n\nYou can also authenticate using a Myst service account. To request a service account, email `support@myst.ai`.\n\nTo authenticate using a service account, set the `MYST_APPLICATION_CREDENTIALS` environment variable to the path to your service account\nkey file and specify `use_service_account=True`:\n\n```sh\n$ export MYST_APPLICATION_CREDENTIALS=</path/to/key/file.json>\n```\n\n```python\nimport myst\n\nmyst.authenticate(use_service_account=True)\n```\n\nYou can also explicitly pass the path to your service account key when authenticating:\n\n```python\nimport myst\n\nmyst.authenticate(\n    use_service_account=True,\n    service_account_key_file_path='/path/to/key/file.json',\n)\n```\n\n### Working with time series\n\nThe Myst python library currently supports listing, getting, and fetching data for time series.\n\n#### Listing time series\n\n```python\nimport myst\n\nmyst.authenticate()\n\nall_time_series = myst.TimeSeries.list()\n```\n\n#### Getting a time series\n\n```python\nimport myst\n\nmyst.authenticate()\n\ntime_series = myst.TimeSeries.get('fc84...')\n```\n\n#### Fetching data from a time series\n\nYou can either fetch data by specifying absolute start and end times, or offsets relative to the `as_of_time`. If no `as_of_time` is given,\nit is assumed to mean \"as of now\":\n\n```python\nimport datetime\nimport pytz\n\nimport myst\n\nmyst.authenticate(...)\n\ntime_series = myst.TimeSeries.get('fc84...')\n\n# Fetching data using absolute start and end times.\ndata_series = time_series.fetch_data_series(\n    start_time=datetime.datetime(2019, 1, 1),\n    end_time=datetime.datetime(2019, 1, 2),\n)\n\n# Fetching data specifying an as of time.\ndata_series = time_series.fetch_data_series(\n    start_time=datetime.datetime(2019, 1, 1),\n    end_time=datetime.datetime(2019, 1, 2),\n    as_of_time=datetime.datetime(2019, 1, 1, 12),\n)\n\n# Fetching data using offsets relative to now.\ndata_series = time_series.fetch_data_series(\n    start_offset=datetime.timedelta(hours=-12),\n    end_offset=datetime.timedelta(hours=12),\n)\n\n# Fetching data specifying a combination of relative offsets and absolute timestamps.\ndata_series = time_series.fetch_data_series(\n    start_offset=datetime.timedelta(hours=-12),\n    end_time=datetime.datetime(2019, 1, 2),\n)\n```\n\n## Support\n\nFor questions or just to say hi, reach out to `support@myst.ai`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "myst", "package_url": "https://pypi.org/project/myst/", "platform": "", "project_url": "https://pypi.org/project/myst/", "project_urls": null, "release_url": "https://pypi.org/project/myst/1.0.2/", "requires_dist": ["google-auth (==1.11.0)", "google-auth-oauthlib (==0.4.1)", "pytz (==2019.1)", "requests (==2.21.0)", "urllib3 (==1.24.3)", "tenacity (==6.0.0)", "coverage (==4.5.2) ; extra == 'dev'", "mock (==3.0.5) ; extra == 'dev'", "responses (==0.10.6) ; extra == 'dev'", "tox (>=3.13.1) ; extra == 'dev'", "readme-renderer (==24.0) ; extra == 'dev'", "twine (>=1.13.0) ; extra == 'dev'", "check-manifest (>=0.37) ; extra == 'dev'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "This is the official Python library for the Myst Platform.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Myst Python Library</h1>\n<p>This is the official Python client library for the Myst Platform.</p>\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.7+ or Python 3.4+</li>\n</ul>\n<h3>Installation</h3>\n<p>To install the package from PyPI:</p>\n<pre><code>$ pip install --upgrade myst\n</code></pre>\n<h3>Authentication</h3>\n<p>The Myst API uses JSON Web Tokens (JWTs) to authenticate requests. The Myst Python library handles the sending of JWTs to the API automatically and\ncurrently supports two ways to authenticate to obtain a JWT: through your Google user account or a Myst service account.</p>\n<h4>Authenticating using your user account</h4>\n<p>If you don't yet have a Google account, you can create one on the <a href=\"https://accounts.google.com/signup\" rel=\"nofollow\">Google Account Signup</a> page.</p>\n<p>Once you have access to a Google account, send an email to <code>support@myst.ai</code> with your email so we can authorize you to use the Myst Platform.</p>\n<p>Use the following code snippet to authenticate using your user account:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">myst</span>\n\n<span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">()</span>\n</pre>\n<p>The first time you run this, you'll be presented with a web browser and asked to authorize the Myst Python library to make requests on behalf of your Google user account.</p>\n<h4>Authenticating using a service account</h4>\n<p>You can also authenticate using a Myst service account. To request a service account, email <code>support@myst.ai</code>.</p>\n<p>To authenticate using a service account, set the <code>MYST_APPLICATION_CREDENTIALS</code> environment variable to the path to your service account\nkey file and specify <code>use_service_account=True</code>:</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">MYST_APPLICATION_CREDENTIALS</span><span class=\"o\">=</span>&lt;/path/to/key/file.json&gt;\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">myst</span>\n\n<span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">use_service_account</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>You can also explicitly pass the path to your service account key when authenticating:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">myst</span>\n\n<span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span>\n    <span class=\"n\">use_service_account</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">service_account_key_file_path</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/key/file.json'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Working with time series</h3>\n<p>The Myst python library currently supports listing, getting, and fetching data for time series.</p>\n<h4>Listing time series</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">myst</span>\n\n<span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">()</span>\n\n<span class=\"n\">all_time_series</span> <span class=\"o\">=</span> <span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">TimeSeries</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<h4>Getting a time series</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">myst</span>\n\n<span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">()</span>\n\n<span class=\"n\">time_series</span> <span class=\"o\">=</span> <span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">TimeSeries</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'fc84...'</span><span class=\"p\">)</span>\n</pre>\n<h4>Fetching data from a time series</h4>\n<p>You can either fetch data by specifying absolute start and end times, or offsets relative to the <code>as_of_time</code>. If no <code>as_of_time</code> is given,\nit is assumed to mean \"as of now\":</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytz</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">myst</span>\n\n<span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">time_series</span> <span class=\"o\">=</span> <span class=\"n\">myst</span><span class=\"o\">.</span><span class=\"n\">TimeSeries</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'fc84...'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetching data using absolute start and end times.</span>\n<span class=\"n\">data_series</span> <span class=\"o\">=</span> <span class=\"n\">time_series</span><span class=\"o\">.</span><span class=\"n\">fetch_data_series</span><span class=\"p\">(</span>\n    <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">end_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetching data specifying an as of time.</span>\n<span class=\"n\">data_series</span> <span class=\"o\">=</span> <span class=\"n\">time_series</span><span class=\"o\">.</span><span class=\"n\">fetch_data_series</span><span class=\"p\">(</span>\n    <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">end_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n    <span class=\"n\">as_of_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetching data using offsets relative to now.</span>\n<span class=\"n\">data_series</span> <span class=\"o\">=</span> <span class=\"n\">time_series</span><span class=\"o\">.</span><span class=\"n\">fetch_data_series</span><span class=\"p\">(</span>\n    <span class=\"n\">start_offset</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=-</span><span class=\"mi\">12</span><span class=\"p\">),</span>\n    <span class=\"n\">end_offset</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetching data specifying a combination of relative offsets and absolute timestamps.</span>\n<span class=\"n\">data_series</span> <span class=\"o\">=</span> <span class=\"n\">time_series</span><span class=\"o\">.</span><span class=\"n\">fetch_data_series</span><span class=\"p\">(</span>\n    <span class=\"n\">start_offset</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=-</span><span class=\"mi\">12</span><span class=\"p\">),</span>\n    <span class=\"n\">end_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Support</h2>\n<p>For questions or just to say hi, reach out to <code>support@myst.ai</code>.</p>\n\n          </div>"}, "last_serial": 6916849, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b159398974bbb9c27901faee58ed2652", "sha256": "8978f904f1f5f6cd601a183bcd56391387a93da50ed3232ba95a97cf656dc567"}, "downloads": -1, "filename": "myst-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b159398974bbb9c27901faee58ed2652", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1419, "upload_time": "2019-05-01T21:27:43", "upload_time_iso_8601": "2019-05-01T21:27:43.366606Z", "url": "https://files.pythonhosted.org/packages/b3/35/ad72bcc14168fd636bbc7f866774ee629d36283521a7906d8b0af185c166/myst-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e85775eb4ec938a233c6f5b4b8f95d21", "sha256": "9108fa438a3186a43255c639ad7fb1f970fe33130b826d5d50044e4fddb45c39"}, "downloads": -1, "filename": "myst-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e85775eb4ec938a233c6f5b4b8f95d21", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 35409, "upload_time": "2019-09-17T22:35:04", "upload_time_iso_8601": "2019-09-17T22:35:04.341401Z", "url": "https://files.pythonhosted.org/packages/9e/41/05b6906aeee999ca7e04a80f5119e55a93361b886d70a03002fc4750d9f8/myst-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "059f507bdbbe9cf66dd0a3bb8e22e179", "sha256": "4c3e1fb75c6ecc338f7737ce0c38c4e96eaa94ff7fbf9e1f5588c2c9e0afe9f2"}, "downloads": -1, "filename": "myst-0.1.1.tar.gz", "has_sig": false, "md5_digest": "059f507bdbbe9cf66dd0a3bb8e22e179", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 26492, "upload_time": "2019-09-17T22:35:05", "upload_time_iso_8601": "2019-09-17T22:35:05.787405Z", "url": "https://files.pythonhosted.org/packages/b7/70/bda4670fb9b3788b89604e07d7a11755f3a8dafb89ef32389d57e6201fc1/myst-0.1.1.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "250b89a468d7f36ca4cc4f037516c188", "sha256": "c070f765e096addd7bef000fc477edf2164403afb8300cd946d0f114ea50d04b"}, "downloads": -1, "filename": "myst-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "250b89a468d7f36ca4cc4f037516c188", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 37703, "upload_time": "2020-01-06T22:51:24", "upload_time_iso_8601": "2020-01-06T22:51:24.374886Z", "url": "https://files.pythonhosted.org/packages/e0/8b/0c0e59cb54da90ab234060a1a9d5df6cc07660a841d40d14c5ca16f3d662/myst-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c7b4d9b1c45847eeb6faa85711a8c21", "sha256": "77b477ad2b8aaae0b8ed5af6193bfd0265fe942d058308a46f411c54d521e9e4"}, "downloads": -1, "filename": "myst-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4c7b4d9b1c45847eeb6faa85711a8c21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29084, "upload_time": "2020-01-06T22:51:25", "upload_time_iso_8601": "2020-01-06T22:51:25.786632Z", "url": "https://files.pythonhosted.org/packages/f4/c3/90d4195b4b000c3e7f4559cffaf6409fe3aadab96de04a30e28423b497c3/myst-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "88201ccd77f1e30a71ede100eec79eef", "sha256": "540693e107756675372441f1013e38f9e8ac27f29881c9d39f59cd918acd3ffa"}, "downloads": -1, "filename": "myst-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "88201ccd77f1e30a71ede100eec79eef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 39697, "upload_time": "2020-03-30T23:26:08", "upload_time_iso_8601": "2020-03-30T23:26:08.643276Z", "url": "https://files.pythonhosted.org/packages/89/a5/8db1802bbb2d08c8eb31401f8a286a8c6726a927db7cd5f4ea1bffe09a7d/myst-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "490c7f77495d8ac28bee3d08562f293b", "sha256": "49c6724f5886eb2d9239c93b32fbd99da00f83e9dcdd9c59da4b9e868c5d23f2"}, "downloads": -1, "filename": "myst-1.0.2.tar.gz", "has_sig": false, "md5_digest": "490c7f77495d8ac28bee3d08562f293b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 30398, "upload_time": "2020-03-30T23:26:09", "upload_time_iso_8601": "2020-03-30T23:26:09.819669Z", "url": "https://files.pythonhosted.org/packages/12/d7/a7f0b25906a1a1e076a71ec5a82ef790f781604de5f32582adc089c92f5f/myst-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88201ccd77f1e30a71ede100eec79eef", "sha256": "540693e107756675372441f1013e38f9e8ac27f29881c9d39f59cd918acd3ffa"}, "downloads": -1, "filename": "myst-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "88201ccd77f1e30a71ede100eec79eef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 39697, "upload_time": "2020-03-30T23:26:08", "upload_time_iso_8601": "2020-03-30T23:26:08.643276Z", "url": "https://files.pythonhosted.org/packages/89/a5/8db1802bbb2d08c8eb31401f8a286a8c6726a927db7cd5f4ea1bffe09a7d/myst-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "490c7f77495d8ac28bee3d08562f293b", "sha256": "49c6724f5886eb2d9239c93b32fbd99da00f83e9dcdd9c59da4b9e868c5d23f2"}, "downloads": -1, "filename": "myst-1.0.2.tar.gz", "has_sig": false, "md5_digest": "490c7f77495d8ac28bee3d08562f293b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 30398, "upload_time": "2020-03-30T23:26:09", "upload_time_iso_8601": "2020-03-30T23:26:09.819669Z", "url": "https://files.pythonhosted.org/packages/12/d7/a7f0b25906a1a1e076a71ec5a82ef790f781604de5f32582adc089c92f5f/myst-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:00 2020"}