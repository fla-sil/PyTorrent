{"info": {"author": "Abe", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# fBrowser | Quick-start Your Selenium Project\n\nThis library was created in order to help users quick-start their webscraping project. It includes several useful functions including a browser handler, new tab functionality, and more.\n\n## Installation\n\n```\n$ pip3 install fBrowser\n```\n\n## Usage\n\n### Browser Handler\n\nYou can decorate your function with a browserHandler. This will create the driver and properly quit it if an exception occurs or when the program ends.\n\n```python\nfrom time import sleep\nfrom fBrowser import browserHandler\n\n\n@browserHandler()\ndef main(driver):\n    driver.get('https://www.google.com')\n    sleep(5)\n\n\nmain()\n```\n\nYou can also pass in these optional arguments:\n\n```python\n@browserHandler(path='', firefox=False, proxy='<host/ip>:<port>',\n                headless=True, implicitWaitTime=60, incognito=True)\n```\n\n### New Tab\n\nRun a function in a new tab of Chrome. It will automatically close and switch contexts when it finishes executing.\n\nYou can use the `newTab` function to decorate your selenium functions. Doing so will execute your function in a new tab of the browser. Your decorated function must have its first parameter for the webdriver.\n\n```python\nfrom time import sleep\nfrom fBrowser import browserHandler, newTab\n\n\n@newTab\ndef loadTheVerge(driver):\n    driver.get('https://www.theverge.com')\n    sleep(2)\n\n\n@browserHandler()\ndef main(driver):\n    driver.get('https://www.google.com')\n    sleep(2)\n    loadTheVerge(driver)\n\n\nmain()\n```\n\n### Login\n\nUse this helper function to login into a site. Simply pass in your email / username and your password. (This function assumes that the input tags in the form have attributes @type=username, @type=email, or @type=password).\n\n```python\nimport fBrowser\nfrom fBrowser import browserHandler\n\n\n@browserHandler()\ndef main(driver):\n    driver.get(\n        'https://stackoverflow.com/users/login')\n    fBrowser.login(driver, email='testing@gmail.com', password='abc123')\n\n\nmain()\n```\n\n### Fill Inputs\n\nQuickly fill multiple inputs with either a single value or multiple values.\n\n```python\nimport fBrowser\nfrom fBrowser import browserHandler\n\n\n@browserHandler()\ndef main(driver):\n    driver.get('example.com')\n    # A list of xpaths to the inputs\n    xpaths = ['//*[@name=\"foo\"]', '//*[@name=\"bar\"]', '//@name=\"fooBar\"']\n\n    # Fill with multiple values\n    fBrowser.fillInputs(driver, xpaths, ['value1', 'value2', 'value3'])\n\n    # Or pass in one value\n    fBrowser.fillInputs(driver, xpaths, 'hello world')\n\n\nmain()\n```\n\n### Human Type\n\nDon't want to get flagged as a bot? Fill your inputs using a human-like typing speed.\n\n```python\nimport fBrowser\nfrom time import sleep\nfrom fBrowser import browserHandler\n\n\n@browserHandler()\ndef main(driver):\n    driver.get('https://www.google.com')\n    chatInput = driver.find_element_by_xpath('//*[@name=\"q\"]')\n    # Will input the string at a human-like typing speed\n    fBrowser.humanType(driver, chatInput, 'Hello world!')\n    sleep(5)\n\n\nmain()\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/FastestMolasses/fBrowser/fork>)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FastestMolasses/fBrowser", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fBrowser", "package_url": "https://pypi.org/project/fBrowser/", "platform": "", "project_url": "https://pypi.org/project/fBrowser/", "project_urls": {"Homepage": "https://github.com/FastestMolasses/fBrowser"}, "release_url": "https://pypi.org/project/fBrowser/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "Python3 library to make selenium webscraping easier", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fBrowser | Quick-start Your Selenium Project</h1>\n<p>This library was created in order to help users quick-start their webscraping project. It includes several useful functions including a browser handler, new tab functionality, and more.</p>\n<h2>Installation</h2>\n<pre><code>$ pip3 install fBrowser\n</code></pre>\n<h2>Usage</h2>\n<h3>Browser Handler</h3>\n<p>You can decorate your function with a browserHandler. This will create the driver and properly quit it if an exception occurs or when the program ends.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fBrowser</span> <span class=\"kn\">import</span> <span class=\"n\">browserHandler</span>\n\n\n<span class=\"nd\">@browserHandler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://www.google.com'</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>You can also pass in these optional arguments:</p>\n<pre><span class=\"nd\">@browserHandler</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">firefox</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">proxy</span><span class=\"o\">=</span><span class=\"s1\">'&lt;host/ip&gt;:&lt;port&gt;'</span><span class=\"p\">,</span>\n                <span class=\"n\">headless</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">implicitWaitTime</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">incognito</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h3>New Tab</h3>\n<p>Run a function in a new tab of Chrome. It will automatically close and switch contexts when it finishes executing.</p>\n<p>You can use the <code>newTab</code> function to decorate your selenium functions. Doing so will execute your function in a new tab of the browser. Your decorated function must have its first parameter for the webdriver.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fBrowser</span> <span class=\"kn\">import</span> <span class=\"n\">browserHandler</span><span class=\"p\">,</span> <span class=\"n\">newTab</span>\n\n\n<span class=\"nd\">@newTab</span>\n<span class=\"k\">def</span> <span class=\"nf\">loadTheVerge</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://www.theverge.com'</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@browserHandler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://www.google.com'</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">loadTheVerge</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h3>Login</h3>\n<p>Use this helper function to login into a site. Simply pass in your email / username and your password. (This function assumes that the input tags in the form have attributes @type=username, @type=email, or @type=password).</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fBrowser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fBrowser</span> <span class=\"kn\">import</span> <span class=\"n\">browserHandler</span>\n\n\n<span class=\"nd\">@browserHandler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"s1\">'https://stackoverflow.com/users/login'</span><span class=\"p\">)</span>\n    <span class=\"n\">fBrowser</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'testing@gmail.com'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'abc123'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h3>Fill Inputs</h3>\n<p>Quickly fill multiple inputs with either a single value or multiple values.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fBrowser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fBrowser</span> <span class=\"kn\">import</span> <span class=\"n\">browserHandler</span>\n\n\n<span class=\"nd\">@browserHandler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'example.com'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># A list of xpaths to the inputs</span>\n    <span class=\"n\">xpaths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'//*[@name=\"foo\"]'</span><span class=\"p\">,</span> <span class=\"s1\">'//*[@name=\"bar\"]'</span><span class=\"p\">,</span> <span class=\"s1\">'//@name=\"fooBar\"'</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Fill with multiple values</span>\n    <span class=\"n\">fBrowser</span><span class=\"o\">.</span><span class=\"n\">fillInputs</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">xpaths</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">,</span> <span class=\"s1\">'value3'</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># Or pass in one value</span>\n    <span class=\"n\">fBrowser</span><span class=\"o\">.</span><span class=\"n\">fillInputs</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">xpaths</span><span class=\"p\">,</span> <span class=\"s1\">'hello world'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h3>Human Type</h3>\n<p>Don't want to get flagged as a bot? Fill your inputs using a human-like typing speed.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fBrowser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fBrowser</span> <span class=\"kn\">import</span> <span class=\"n\">browserHandler</span>\n\n\n<span class=\"nd\">@browserHandler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://www.google.com'</span><span class=\"p\">)</span>\n    <span class=\"n\">chatInput</span> <span class=\"o\">=</span> <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">find_element_by_xpath</span><span class=\"p\">(</span><span class=\"s1\">'//*[@name=\"q\"]'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Will input the string at a human-like typing speed</span>\n    <span class=\"n\">fBrowser</span><span class=\"o\">.</span><span class=\"n\">humanType</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">chatInput</span><span class=\"p\">,</span> <span class=\"s1\">'Hello world!'</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h2>Contributing</h2>\n<ol>\n<li>Fork it (<a href=\"https://github.com/FastestMolasses/fBrowser/fork\" rel=\"nofollow\">https://github.com/FastestMolasses/fBrowser/fork</a>)</li>\n<li>Create your feature branch (<code>git checkout -b feature/fooBar</code>)</li>\n<li>Commit your changes (<code>git commit -am 'Add some fooBar'</code>)</li>\n<li>Push to the branch (<code>git push origin feature/fooBar</code>)</li>\n<li>Create a new Pull Request</li>\n</ol>\n\n          </div>"}, "last_serial": 5932223, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dffb8a3243422ef30052376e8c5d84cb", "sha256": "0ad2d2c7c670fe94c203d90543fdc2ba965b59504592a0b8745940ef9874d207"}, "downloads": -1, "filename": "fBrowser-0.1.tar.gz", "has_sig": false, "md5_digest": "dffb8a3243422ef30052376e8c5d84cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3370, "upload_time": "2018-10-11T13:04:21", "upload_time_iso_8601": "2018-10-11T13:04:21.777410Z", "url": "https://files.pythonhosted.org/packages/20/76/4db07da12c7734b07014e047cd38cfb8b7a4bf9e5329d39c6ce217a97c43/fBrowser-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "76af284d3de56d9c3a0a7ab856b71f55", "sha256": "ee5120c31a3f42969479555b030268e290bc88131213d5c83f5942433512bab5"}, "downloads": -1, "filename": "fBrowser-0.2.tar.gz", "has_sig": false, "md5_digest": "76af284d3de56d9c3a0a7ab856b71f55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4161, "upload_time": "2018-10-13T08:06:09", "upload_time_iso_8601": "2018-10-13T08:06:09.314390Z", "url": "https://files.pythonhosted.org/packages/98/a8/8bd32331017a7bcad25040699505d0fbb46bc592f29ec981a4c2166e4e49/fBrowser-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "385ab006bbedf47d52108f0c19dc6092", "sha256": "cfc82559d1877699d5307df502415fdb14fd6d722e9a984c2c9c2a07bd4dd4d7"}, "downloads": -1, "filename": "fBrowser-0.2.1.tar.gz", "has_sig": false, "md5_digest": "385ab006bbedf47d52108f0c19dc6092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4136, "upload_time": "2018-10-13T22:19:09", "upload_time_iso_8601": "2018-10-13T22:19:09.997241Z", "url": "https://files.pythonhosted.org/packages/51/35/5fe17c0a6d21120063a760e7f8656c902a563c5e89ef3ded4ca127542b3f/fBrowser-0.2.1.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "3fcf8af70e301495d38ebe9f55cb2c7e", "sha256": "43432e13fc2505ce01b83d1571572a07a62131e778c4844bb0e198043c63e9f8"}, "downloads": -1, "filename": "fBrowser-0.2.5.tar.gz", "has_sig": false, "md5_digest": "3fcf8af70e301495d38ebe9f55cb2c7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4142, "upload_time": "2018-10-13T22:24:34", "upload_time_iso_8601": "2018-10-13T22:24:34.889884Z", "url": "https://files.pythonhosted.org/packages/c2/55/e551043ebed39592ca6396a6c33760f004f694536c73916f342c06da0fb6/fBrowser-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "a389795a0367d3098153f0a0b0bc2758", "sha256": "765da5c83896c94763a071ed758df7eb48af5bd27db19b18480ea0cfb55a1497"}, "downloads": -1, "filename": "fBrowser-0.2.6.tar.gz", "has_sig": false, "md5_digest": "a389795a0367d3098153f0a0b0bc2758", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4152, "upload_time": "2018-10-14T01:44:50", "upload_time_iso_8601": "2018-10-14T01:44:50.005598Z", "url": "https://files.pythonhosted.org/packages/66/e5/e2d30737a1db5f499e4933d7c7a7e660fe00cb0c3b1c0c90962a054dbfcd/fBrowser-0.2.6.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "8ddea4c67a6d381672d7e171c3b1f062", "sha256": "57b22faa245d86076e7d10b5bfd49e4c3afc0d5bbde2715ff4151a00bb03cf36"}, "downloads": -1, "filename": "fBrowser-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8ddea4c67a6d381672d7e171c3b1f062", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5585, "upload_time": "2019-10-05T14:54:53", "upload_time_iso_8601": "2019-10-05T14:54:53.227563Z", "url": "https://files.pythonhosted.org/packages/1b/dc/3954ef04593db7a54ec84a4fa62ed2bcb9c4828e5667c3bca67bc0234910/fBrowser-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54132cf56302f351e523bc70a7cd76f4", "sha256": "19f73fb6e958713362783409c45e64bc6ea7a7451ca9fc76429ca282e3fd1506"}, "downloads": -1, "filename": "fBrowser-0.3.1.tar.gz", "has_sig": false, "md5_digest": "54132cf56302f351e523bc70a7cd76f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4557, "upload_time": "2019-10-05T14:54:56", "upload_time_iso_8601": "2019-10-05T14:54:56.949081Z", "url": "https://files.pythonhosted.org/packages/e2/9c/8710a94af6918721482c9e2f8cc07073305dc4d63501cbb8b163265817b4/fBrowser-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ddea4c67a6d381672d7e171c3b1f062", "sha256": "57b22faa245d86076e7d10b5bfd49e4c3afc0d5bbde2715ff4151a00bb03cf36"}, "downloads": -1, "filename": "fBrowser-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8ddea4c67a6d381672d7e171c3b1f062", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5585, "upload_time": "2019-10-05T14:54:53", "upload_time_iso_8601": "2019-10-05T14:54:53.227563Z", "url": "https://files.pythonhosted.org/packages/1b/dc/3954ef04593db7a54ec84a4fa62ed2bcb9c4828e5667c3bca67bc0234910/fBrowser-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54132cf56302f351e523bc70a7cd76f4", "sha256": "19f73fb6e958713362783409c45e64bc6ea7a7451ca9fc76429ca282e3fd1506"}, "downloads": -1, "filename": "fBrowser-0.3.1.tar.gz", "has_sig": false, "md5_digest": "54132cf56302f351e523bc70a7cd76f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4557, "upload_time": "2019-10-05T14:54:56", "upload_time_iso_8601": "2019-10-05T14:54:56.949081Z", "url": "https://files.pythonhosted.org/packages/e2/9c/8710a94af6918721482c9e2f8cc07073305dc4d63501cbb8b163265817b4/fBrowser-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:14 2020"}