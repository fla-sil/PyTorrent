{"info": {"author": "Kitware Inc., Jon Crall", "author_email": "kitware@kitware.com, jon.crall@kitware.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "ScriptConfig\n============\n\n.. # TODO Get CI services running on gitlab \n.. #|CircleCI| |Travis| |Codecov| |ReadTheDocs|\n\n|GitlabCIPipeline| |GitlabCICoverage| |Appveyor| |Pypi| |Downloads| \n\n\nWrite simple configs and update from CLI, kwargs, and/or json.\n\nThe ``scriptconfig`` provides a simple way to make configurable scripts using a\ncombination of config files, command line arguments, and simple Python keyword\narguments. A script config object is defined by creating a subclass of\n``Config`` with a ``default`` dict class attribute. An instance of a custom\n``Config`` object will behave similar a dictionary, but with a few\nconveniences.\n\nTo get started lets consider some example usage:\n\n.. code-block:: python\n\n    >>> import scriptconfig as scfg\n    >>> # In its simplest incarnation, the config class specifies default values.\n    >>> # For each configuration parameter.\n    >>> class ExampleConfig(scfg.Config):\n    >>>     default = {\n    >>>         'num': 1,\n    >>>         'mode': 'bar',\n    >>>         'ignore': ['baz', 'biz'],\n    >>>     }\n    >>> # Creating an instance, starts using the defaults\n    >>> config = ExampleConfig()\n    >>> # Typically you will want to update default from a dict or file.  By\n    >>> # specifying cmdline=True you denote that it is ok for the contents of\n    >>> # `sys.argv` to override config values. Here we pass a dict to `load`.\n    >>> kwargs = {'num': 2}\n    >>> config.load(kwargs, cmdline=False)\n    >>> assert config['num'] == 2\n    >>> # The `load` method can also be passed a json/yaml file/path.\n    >>> config_fpath = '/tmp/foo'\n    >>> open(config_fpath, 'w').write('{\"num\": 3}')\n    >>> config.load(config_fpath, cmdline=False)\n    >>> assert config['num'] == 3\n    >>> # It is possbile to load only from CLI by setting cmdline=True\n    >>> # or by setting it to a custom sys.argv\n    >>> config.load(cmdline=['--num=4'])\n    >>> assert config['num'] == 4\n    >>> # Note that using `config.load(cmdline=True)` will just use the\n    >>> # contents of sys.argv\n\n\nFeatures\n--------\n\n- Serializes to json\n\n- Dict-like interface. By default a ``Config`` object operates independent of config files or the command line.\n\n- Can create command line interfaces\n\n  - Can directly create an independent argparse object \n\n  - Can use special command line loading using ``self.load(cmdline=True)``. This extends the basic argparse interface with:\n   \n      - Can specify options as either ``--option value`` or ``--option=value``\n\n      - Default config options allow for \"smartcasting\" values like lists and paths\n\n      - Automatically add ``--config``, ``--dumps``, and ``--dump`` CLI options\n        when reading cmdline via ``load``.\n\n\n\n.. |GitlabCIPipeline| image:: https://gitlab.kitware.com/utils/scriptconfig/badges/master/pipeline.svg\n   :target: https://gitlab.kitware.com/utils/scriptconfig/-/jobs\n\n.. |GitlabCICoverage| image:: https://gitlab.kitware.com/utils/scriptconfig/badges/master/coverage.svg?job=coverage\n    :target: https://gitlab.kitware.com/utils/scriptconfig/commits/master\n\n.. # See: https://ci.appveyor.com/project/jon.crall/scriptconfig/settings/badges\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/br3p8lkuvol2vas4/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/jon.crall/scriptconfig/branch/master\n\n.. |Codecov| image:: https://codecov.io/github/Erotemic/scriptconfig/badge.svg?branch=master&service=github\n   :target: https://codecov.io/github/Erotemic/scriptconfig?branch=master\n\n.. |Pypi| image:: https://img.shields.io/pypi/v/scriptconfig.svg\n   :target: https://pypi.python.org/pypi/scriptconfig\n\n.. |Downloads| image:: https://img.shields.io/pypi/dm/scriptconfig.svg\n   :target: https://pypistats.org/packages/scriptconfig\n\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/scriptconfig/badge/?version=latest\n    :target: http://scriptconfig.readthedocs.io/en/latest/", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "scriptconfig", "package_url": "https://pypi.org/project/scriptconfig/", "platform": "", "project_url": "https://pypi.org/project/scriptconfig/", "project_urls": null, "release_url": "https://pypi.org/project/scriptconfig/0.5.5/", "requires_dist": null, "requires_python": "", "summary": "Easy dict-based script configuration with CLI support", "version": "0.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitlab.kitware.com/utils/scriptconfig/-/jobs\" rel=\"nofollow\"><img alt=\"GitlabCIPipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf267178dfffe7d4e4e152524218ce646979869a/68747470733a2f2f6769746c61622e6b6974776172652e636f6d2f7574696c732f736372697074636f6e6669672f6261646765732f6d61737465722f706970656c696e652e737667\"></a> <a href=\"https://gitlab.kitware.com/utils/scriptconfig/commits/master\" rel=\"nofollow\"><img alt=\"GitlabCICoverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ae8ac53ce84c1789a7f4d4c4cd5c1d36974c282/68747470733a2f2f6769746c61622e6b6974776172652e636f6d2f7574696c732f736372697074636f6e6669672f6261646765732f6d61737465722f636f7665726167652e7376673f6a6f623d636f766572616765\"></a> <a href=\"https://ci.appveyor.com/project/jon.crall/scriptconfig/branch/master\" rel=\"nofollow\"><img alt=\"Appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ee8ecae4c9fa5c40347baaa23e2dca43013e70f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f62723370386c6b75766f6c32766173342f6272616e63682f6d61737465723f7376673d74727565\"></a> <a href=\"https://pypi.python.org/pypi/scriptconfig\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/013a80b5f3ebf8ec616eca5bccba8b662d7d69d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736372697074636f6e6669672e737667\"></a> <a href=\"https://pypistats.org/packages/scriptconfig\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab5a32be320b2914293612fd7dd26b89b4e5e1ad/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f736372697074636f6e6669672e737667\"></a></p>\n<p>Write simple configs and update from CLI, kwargs, and/or json.</p>\n<p>The <tt>scriptconfig</tt> provides a simple way to make configurable scripts using a\ncombination of config files, command line arguments, and simple Python keyword\narguments. A script config object is defined by creating a subclass of\n<tt>Config</tt> with a <tt>default</tt> dict class attribute. An instance of a custom\n<tt>Config</tt> object will behave similar a dictionary, but with a few\nconveniences.</p>\n<p>To get started lets consider some example usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">scriptconfig</span> <span class=\"k\">as</span> <span class=\"nn\">scfg</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># In its simplest incarnation, the config class specifies default values.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># For each configuration parameter.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">ExampleConfig</span><span class=\"p\">(</span><span class=\"n\">scfg</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"s1\">'num'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"s1\">'mode'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">,</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"s1\">'ignore'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"s1\">'biz'</span><span class=\"p\">],</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Creating an instance, starts using the defaults</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ExampleConfig</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Typically you will want to update default from a dict or file.  By</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># specifying cmdline=True you denote that it is ok for the contents of</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># `sys.argv` to override config values. Here we pass a dict to `load`.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'num'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">,</span> <span class=\"n\">cmdline</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'num'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The `load` method can also be passed a json/yaml file/path.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">config_fpath</span> <span class=\"o\">=</span> <span class=\"s1\">'/tmp/foo'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_fpath</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'{\"num\": 3}'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">config_fpath</span><span class=\"p\">,</span> <span class=\"n\">cmdline</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'num'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># It is possbile to load only from CLI by setting cmdline=True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># or by setting it to a custom sys.argv</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">cmdline</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'--num=4'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'num'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Note that using `config.load(cmdline=True)` will just use the</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># contents of sys.argv</span>\n</pre>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Serializes to json</p>\n</li>\n<li><p>Dict-like interface. By default a <tt>Config</tt> object operates independent of config files or the command line.</p>\n</li>\n<li><p>Can create command line interfaces</p>\n<ul>\n<li><p>Can directly create an independent argparse object</p>\n</li>\n<li><p>Can use special command line loading using <tt>self.load(cmdline=True)</tt>. This extends the basic argparse interface with:</p>\n<blockquote>\n<ul>\n<li>Can specify options as either <tt><span class=\"pre\">--option</span> value</tt> or <tt><span class=\"pre\">--option=value</span></tt></li>\n<li>Default config options allow for \u201csmartcasting\u201d values like lists and paths</li>\n<li>Automatically add <tt><span class=\"pre\">--config</span></tt>, <tt><span class=\"pre\">--dumps</span></tt>, and <tt><span class=\"pre\">--dump</span></tt> CLI options\nwhen reading cmdline via <tt>load</tt>.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6978234, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "3a29eb8e5c5daa94910ff2757c2b7b00", "sha256": "8535d9c0d33ff6402f5263f05776f0c55c9c1fba10a24fc38f0e87542d2190a0"}, "downloads": -1, "filename": "scriptconfig-0.5.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3a29eb8e5c5daa94910ff2757c2b7b00", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13078, "upload_time": "2019-11-05T22:45:41", "upload_time_iso_8601": "2019-11-05T22:45:41.851344Z", "url": "https://files.pythonhosted.org/packages/20/10/adfe289b42e9c08de92f1c3069660305097d8b4839b0a3386aeabdda5ad1/scriptconfig-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0db439137d5f48a222dc1efc6e4b466c", "sha256": "b94f38d794df4618849e653a485476c03366bc19f2feccb4ac9ff1266aa3cdac"}, "downloads": -1, "filename": "scriptconfig-0.5.0.tar.gz", "has_sig": true, "md5_digest": "0db439137d5f48a222dc1efc6e4b466c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20884, "upload_time": "2019-11-05T22:45:45", "upload_time_iso_8601": "2019-11-05T22:45:45.790313Z", "url": "https://files.pythonhosted.org/packages/5f/fa/68acf8d223621d8ed487359dae266db851010c6e434e14fd47a4020adf72/scriptconfig-0.5.0.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "92738e1a112cd554eb856efc4d3e8ce9", "sha256": "1ab1c9d4a7aceaa91edec6a57c43f86d127506a4911af7c8b51c7ba664c92cba"}, "downloads": -1, "filename": "scriptconfig-0.5.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "92738e1a112cd554eb856efc4d3e8ce9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13882, "upload_time": "2020-01-02T22:05:18", "upload_time_iso_8601": "2020-01-02T22:05:18.997638Z", "url": "https://files.pythonhosted.org/packages/7e/86/ce73c2c74bd08130c552daa5cd3e0e878d922ae54d709bd7456a271bcc24/scriptconfig-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0e3825dc4a7359ae96171c786ab74c1", "sha256": "9d914b091d7f019517bf2d51d15aab22c4c777c4f7e9113a3c4b752ba7c63e95"}, "downloads": -1, "filename": "scriptconfig-0.5.2.tar.gz", "has_sig": true, "md5_digest": "c0e3825dc4a7359ae96171c786ab74c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13932, "upload_time": "2020-01-02T22:05:16", "upload_time_iso_8601": "2020-01-02T22:05:16.549962Z", "url": "https://files.pythonhosted.org/packages/1a/d8/5348e4fb47953f47e34b47b5f640ce633cd51c0046ef2bcbd810b2605b90/scriptconfig-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "868016952cbf4e4e5f6c0974b2797b35", "sha256": "481ca1748f3b4bb85c6b8aa96fade5145ef3b8cb698476722b11ff2ff5b4fc5d"}, "downloads": -1, "filename": "scriptconfig-0.5.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "868016952cbf4e4e5f6c0974b2797b35", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13921, "upload_time": "2020-01-31T01:59:42", "upload_time_iso_8601": "2020-01-31T01:59:42.592947Z", "url": "https://files.pythonhosted.org/packages/e5/9e/eb14de70d266c2e22fae110cfe96b6b8a47be2402fc00e8c32cebddab31c/scriptconfig-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83281dfda2399289e9a202688a5114bf", "sha256": "9d4ede4fe407bfd4509ad6d7f23644a308c05928c932550d6a4ec227b783885e"}, "downloads": -1, "filename": "scriptconfig-0.5.3.tar.gz", "has_sig": true, "md5_digest": "83281dfda2399289e9a202688a5114bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14113, "upload_time": "2020-01-31T01:59:40", "upload_time_iso_8601": "2020-01-31T01:59:40.550507Z", "url": "https://files.pythonhosted.org/packages/56/38/2dd61ec8a91c6cdf473b4f73b8f917f18bfd4de6163bb6c6fa5f1da5da54/scriptconfig-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "1db8daa694ad76db638b163a2cffa71e", "sha256": "4f8004da0d39729350585496a0b15632757dd690bfe736809522aa3fd165f88c"}, "downloads": -1, "filename": "scriptconfig-0.5.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "1db8daa694ad76db638b163a2cffa71e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14668, "upload_time": "2020-03-26T20:41:34", "upload_time_iso_8601": "2020-03-26T20:41:34.662782Z", "url": "https://files.pythonhosted.org/packages/ae/96/2bd4f3dbbe7e1055a40a0f407e0411084c11b2ef49fec5d2fecd6cac04ad/scriptconfig-0.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e363eb012d803782fafe0f3dc09bdff1", "sha256": "2dd83de536b9797136d59172f5cebf30e0d6fe780c35968246068532bfb3315c"}, "downloads": -1, "filename": "scriptconfig-0.5.4.tar.gz", "has_sig": true, "md5_digest": "e363eb012d803782fafe0f3dc09bdff1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15352, "upload_time": "2020-03-26T20:41:32", "upload_time_iso_8601": "2020-03-26T20:41:32.576134Z", "url": "https://files.pythonhosted.org/packages/6f/20/2ec8a509abe9ae4d1df1984f64b007faef0f0ad4ef69953bae5871e2b489/scriptconfig-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "07ae27d9427f184178a1d476a59010cc", "sha256": "6272603c1f6c7bf9a87b0786de0a99788b0757ad81b83e6ef1bfc5e98f7ff00a"}, "downloads": -1, "filename": "scriptconfig-0.5.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "07ae27d9427f184178a1d476a59010cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14778, "upload_time": "2020-04-08T14:42:28", "upload_time_iso_8601": "2020-04-08T14:42:28.903309Z", "url": "https://files.pythonhosted.org/packages/1a/2f/35cef08aa43817138bb26d8973a4aae534c8e57463ae3a24be8e7c684cc5/scriptconfig-0.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f9bbb910d0f662e2248d3112e9ca67b", "sha256": "988378a7c22cfe9d887cd2d8809a3755f8bb80baaa24a1de137edd503b6ec408"}, "downloads": -1, "filename": "scriptconfig-0.5.5.tar.gz", "has_sig": true, "md5_digest": "0f9bbb910d0f662e2248d3112e9ca67b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15443, "upload_time": "2020-04-08T14:42:26", "upload_time_iso_8601": "2020-04-08T14:42:26.942137Z", "url": "https://files.pythonhosted.org/packages/de/3e/3bedd794964a6d140d2e849ad54efc9e24b3458530ab719d72d3e44d01f9/scriptconfig-0.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "07ae27d9427f184178a1d476a59010cc", "sha256": "6272603c1f6c7bf9a87b0786de0a99788b0757ad81b83e6ef1bfc5e98f7ff00a"}, "downloads": -1, "filename": "scriptconfig-0.5.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "07ae27d9427f184178a1d476a59010cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14778, "upload_time": "2020-04-08T14:42:28", "upload_time_iso_8601": "2020-04-08T14:42:28.903309Z", "url": "https://files.pythonhosted.org/packages/1a/2f/35cef08aa43817138bb26d8973a4aae534c8e57463ae3a24be8e7c684cc5/scriptconfig-0.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f9bbb910d0f662e2248d3112e9ca67b", "sha256": "988378a7c22cfe9d887cd2d8809a3755f8bb80baaa24a1de137edd503b6ec408"}, "downloads": -1, "filename": "scriptconfig-0.5.5.tar.gz", "has_sig": true, "md5_digest": "0f9bbb910d0f662e2248d3112e9ca67b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15443, "upload_time": "2020-04-08T14:42:26", "upload_time_iso_8601": "2020-04-08T14:42:26.942137Z", "url": "https://files.pythonhosted.org/packages/de/3e/3bedd794964a6d140d2e849ad54efc9e24b3458530ab719d72d3e44d01f9/scriptconfig-0.5.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:33 2020"}