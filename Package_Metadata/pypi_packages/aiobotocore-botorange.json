{"info": {"author": "Nikolay Novik", "author_email": "nickolainovik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "aiobotocore\n===========\n.. image:: https://travis-ci.org/aio-libs/aiobotocore.svg?branch=master\n    :target: https://travis-ci.org/aio-libs/aiobotocore\n.. image:: https://codecov.io/gh/aio-libs/aiobotocore/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/aio-libs/aiobotocore\n.. image:: https://img.shields.io/pypi/v/aiobotocore.svg\n    :target: https://pypi.python.org/pypi/aiobotocore\n\nAsync client for amazon services using botocore_ and aiohttp_/asyncio_.\n\nMain purpose of this library to support amazon s3 api, but other services\nshould work (may be with minor fixes). For now we have tested\nonly upload/download api for s3, other users report that SQS and Dynamo\nservices work also. More tests coming soon.\n\n\nInstall\n-------\n::\n\n    $ pip install aiobotocore\n\n\nBasic Example\n-------------\n\n.. code:: python\n\n    import asyncio\n    import aiobotocore\n\n    AWS_ACCESS_KEY_ID = \"xxx\"\n    AWS_SECRET_ACCESS_KEY = \"xxx\"\n\n\n    async def go(loop):\n        bucket = 'dataintake'\n        filename = 'dummy.bin'\n        folder = 'aiobotocore'\n        key = '{}/{}'.format(folder, filename)\n\n        session = aiobotocore.get_session(loop=loop)\n        async with session.create_client('s3', region_name='us-west-2',\n                                       aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\n                                       aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\n            # upload object to amazon s3\n            data = b'\\x01'*1024\n            resp = await client.put_object(Bucket=bucket,\n                                                Key=key,\n                                                Body=data)\n            print(resp)\n\n            # getting s3 object properties of file we just uploaded\n            resp = await client.get_object_acl(Bucket=bucket, Key=key)\n            print(resp)\n\n            # delete object from s3\n            resp = await client.delete_object(Bucket=bucket, Key=key)\n            print(resp)\n\n            # list s3 objects using paginator\n            paginator = client.get_paginator('list_objects')\n            async for result in paginator.paginate(Bucket=bucket, Prefix=folder):\n                for c in result.get('Contents', []):\n                    print(c)\n\n            # get object from s3\n            response = await client.get_object(Bucket=bucket, key=key)\n            # this will ensure the connection is correctly re-used/closed\n            async with response['Body'] as stream:\n                bytes = await stream.read()\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(go(loop))\n\n\nRun Tests\n---------\n\nMake sure you have development requirements installed and your amazon key and\nsecret accessible via environment variables:\n\n::\n\n    $ cd aiobotocore\n    $ export AWS_ACCESS_KEY_ID=xxx\n    $ export AWS_SECRET_ACCESS_KEY=xxx\n    $ pip install -Ur requirements-dev.txt\n\nExecute tests suite:\n\n::\n\n    $ py.test -v tests\n\n\nMailing List\n------------\n\nhttps://groups.google.com/forum/#!forum/aio-libs\n\n\nRequirements\n------------\n* Python_ 3.4+\n* aiohttp_\n* botocore_\n\n.. _Python: https://www.python.org\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\n.. _botocore: https://github.com/boto/botocore\n.. _aiohttp: https://github.com/KeepSafe/aiohttp\n\nChanges\n-------\n0.2.3 (XXXX-XX-XX)\n^^^^^^^^^^^^^^^^^^\n\n0.2.2 (2017-03-07)\n^^^^^^^^^^^^^^^^^^\n* set aiobotocore.__all__ for * imports #121 (thanks @graingert)\n* fix ETag in head_object response #132\n\n0.2.1 (2017-02-01)\n^^^^^^^^^^^^^^^^^^\n* Normalize headers and handle redirection by botocore #115 (thanks @Fedorof)\n\n0.2.0 (2017-01-30)\n^^^^^^^^^^^^^^^^^^\n* add support for proxies (thanks @jjonek)\n* remove AioConfig verify_ssl connector_arg as this is handled by the\n  create_client verify param\n* remove AioConfig limit connector_arg as this is now handled by\n  by the Config `max_pool_connections` property (note default is 10)\n\n0.1.1 (2017-01-16)\n^^^^^^^^^^^^^^^^^^\n* botocore updated to version 1.5.0\n\n0.1.0 (2017-01-12)\n^^^^^^^^^^^^^^^^^^\n* Pass timeout to aiohttp.request to enforce read_timeout #86 (thanks @vharitonsky)\n  (bumped up to next semantic version due to read_timeout enabling change)\n\n0.0.6 (2016-11-19)\n^^^^^^^^^^^^^^^^^^\n\n* Added enforcement of plain response #57 (thanks @rymir)\n* botocore updated to version 1.4.73 #74 (thanks @vas3k)\n\n\n0.0.5 (2016-06-01)\n^^^^^^^^^^^^^^^^^^\n\n* Initial alpha release", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi/aiobotocore", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aio-libs/aiobotocore", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "aiobotocore-botorange", "package_url": "https://pypi.org/project/aiobotocore-botorange/", "platform": "", "project_url": "https://pypi.org/project/aiobotocore-botorange/", "project_urls": {"Download": "https://pypi.python.org/pypi/aiobotocore", "Homepage": "https://github.com/aio-libs/aiobotocore"}, "release_url": "https://pypi.org/project/aiobotocore-botorange/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Async client for aws services using botocore and aiohttp", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/aio-libs/aiobotocore\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/aio-libs/aiobotocore.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5949201c7cf293233827075fcc84e7015cadddc8/68747470733a2f2f7472617669732d63692e6f72672f61696f2d6c6962732f61696f626f746f636f72652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/aio-libs/aiobotocore\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/aio-libs/aiobotocore/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38ee5ecf08d8c2d205458a0e9a25d857ca03c044/68747470733a2f2f636f6465636f762e696f2f67682f61696f2d6c6962732f61696f626f746f636f72652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aiobotocore\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aiobotocore.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/098d6f2338929e32cf335ce42a880090e1e1edab/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f626f746f636f72652e737667\"></a>\n<p>Async client for amazon services using <a href=\"https://github.com/boto/botocore\" rel=\"nofollow\">botocore</a> and <a href=\"https://github.com/KeepSafe/aiohttp\" rel=\"nofollow\">aiohttp</a>/<a href=\"http://docs.python.org/3.4/library/asyncio.html\" rel=\"nofollow\">asyncio</a>.</p>\n<p>Main purpose of this library to support amazon s3 api, but other services\nshould work (may be with minor fixes). For now we have tested\nonly upload/download api for s3, other users report that SQS and Dynamo\nservices work also. More tests coming soon.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install aiobotocore\n</pre>\n</div>\n<div id=\"basic-example\">\n<h2>Basic Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiobotocore</span>\n\n<span class=\"n\">AWS_ACCESS_KEY_ID</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx\"</span>\n<span class=\"n\">AWS_SECRET_ACCESS_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx\"</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">go</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"s1\">'dataintake'</span>\n    <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s1\">'dummy.bin'</span>\n    <span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"s1\">'aiobotocore'</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">/</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiobotocore</span><span class=\"o\">.</span><span class=\"n\">get_session</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">create_client</span><span class=\"p\">(</span><span class=\"s1\">'s3'</span><span class=\"p\">,</span> <span class=\"n\">region_name</span><span class=\"o\">=</span><span class=\"s1\">'us-west-2'</span><span class=\"p\">,</span>\n                                   <span class=\"n\">aws_secret_access_key</span><span class=\"o\">=</span><span class=\"n\">AWS_SECRET_ACCESS_KEY</span><span class=\"p\">,</span>\n                                   <span class=\"n\">aws_access_key_id</span><span class=\"o\">=</span><span class=\"n\">AWS_ACCESS_KEY_ID</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"c1\"># upload object to amazon s3</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x01</span><span class=\"s1\">'</span><span class=\"o\">*</span><span class=\"mi\">1024</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">put_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span>\n                                            <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">,</span>\n                                            <span class=\"n\">Body</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># getting s3 object properties of file we just uploaded</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_object_acl</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># delete object from s3</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">delete_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># list s3 objects using paginator</span>\n        <span class=\"n\">paginator</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_paginator</span><span class=\"p\">(</span><span class=\"s1\">'list_objects'</span><span class=\"p\">)</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">paginate</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">Prefix</span><span class=\"o\">=</span><span class=\"n\">folder</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'Contents'</span><span class=\"p\">,</span> <span class=\"p\">[]):</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># get object from s3</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"c1\"># this will ensure the connection is correctly re-used/closed</span>\n        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'Body'</span><span class=\"p\">]</span> <span class=\"k\">as</span> <span class=\"n\">stream</span><span class=\"p\">:</span>\n            <span class=\"nb\">bytes</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">go</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"run-tests\">\n<h2>Run Tests</h2>\n<p>Make sure you have development requirements installed and your amazon key and\nsecret accessible via environment variables:</p>\n<pre>$ cd aiobotocore\n$ export AWS_ACCESS_KEY_ID=xxx\n$ export AWS_SECRET_ACCESS_KEY=xxx\n$ pip install -Ur requirements-dev.txt\n</pre>\n<p>Execute tests suite:</p>\n<pre>$ py.test -v tests\n</pre>\n</div>\n<div id=\"mailing-list\">\n<h2>Mailing List</h2>\n<p><a href=\"https://groups.google.com/forum/#!forum/aio-libs\" rel=\"nofollow\">https://groups.google.com/forum/#!forum/aio-libs</a></p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.python.org\" rel=\"nofollow\">Python</a> 3.4+</li>\n<li><a href=\"https://github.com/KeepSafe/aiohttp\" rel=\"nofollow\">aiohttp</a></li>\n<li><a href=\"https://github.com/boto/botocore\" rel=\"nofollow\">botocore</a></li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"xxxx-xx-xx\">\n<h3>0.2.3 (XXXX-XX-XX)</h3>\n</div>\n<div id=\"id1\">\n<h3>0.2.2 (2017-03-07)</h3>\n<ul>\n<li>set aiobotocore.__all__ for * imports #121 (thanks @graingert)</li>\n<li>fix ETag in head_object response #132</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.1 (2017-02-01)</h3>\n<ul>\n<li>Normalize headers and handle redirection by botocore #115 (thanks @Fedorof)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.0 (2017-01-30)</h3>\n<ul>\n<li>add support for proxies (thanks @jjonek)</li>\n<li>remove AioConfig verify_ssl connector_arg as this is handled by the\ncreate_client verify param</li>\n<li>remove AioConfig limit connector_arg as this is now handled by\nby the Config <cite>max_pool_connections</cite> property (note default is 10)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.1 (2017-01-16)</h3>\n<ul>\n<li>botocore updated to version 1.5.0</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.0 (2017-01-12)</h3>\n<ul>\n<li>Pass timeout to aiohttp.request to enforce read_timeout #86 (thanks @vharitonsky)\n(bumped up to next semantic version due to read_timeout enabling change)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.0.6 (2016-11-19)</h3>\n<ul>\n<li>Added enforcement of plain response #57 (thanks @rymir)</li>\n<li>botocore updated to version 1.4.73 #74 (thanks @vas3k)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.0.5 (2016-06-01)</h3>\n<ul>\n<li>Initial alpha release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2722681, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ec0658d813864985596c3dba1c0b73ba", "sha256": "7ffbbe13606152b7fa22be5a2817fe791a335b93c17b9babc9f0cb0d16fe6f23"}, "downloads": -1, "filename": "aiobotocore_botorange-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec0658d813864985596c3dba1c0b73ba", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 17265, "upload_time": "2017-03-22T10:15:34", "upload_time_iso_8601": "2017-03-22T10:15:34.486335Z", "url": "https://files.pythonhosted.org/packages/ec/f4/3dc639b6b6d1175f22b15e66c91d525de1774df7d1ed4a76cd3ba5ba0515/aiobotocore_botorange-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3d5afaff140ee2f3bacb5362ec321cd", "sha256": "62312ea3482bbb38b35a5a7a6a7e71bb3565d6758e839bc638d84e6811dda9e6"}, "downloads": -1, "filename": "aiobotocore-botorange-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f3d5afaff140ee2f3bacb5362ec321cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16525, "upload_time": "2017-03-22T10:15:33", "upload_time_iso_8601": "2017-03-22T10:15:33.251487Z", "url": "https://files.pythonhosted.org/packages/0b/89/065ec21b57987daa3a71b3ebe3d96173fe5a6eb082730ce78f60cad1fff4/aiobotocore-botorange-0.1.0.tar.gz", "yanked": false}], "0.2.3a0": [{"comment_text": "", "digests": {"md5": "0ae72e6c84642bf7936bf3d60f1a20f4", "sha256": "cfbf9eb97276985dad1b0e872e21af37dbcb22e9b0e55317d2c1c010d7bf96b8"}, "downloads": -1, "filename": "aiobotocore_botorange-0.2.3a0-py3-none-any.whl", "has_sig": false, "md5_digest": "0ae72e6c84642bf7936bf3d60f1a20f4", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 17288, "upload_time": "2017-03-22T10:15:07", "upload_time_iso_8601": "2017-03-22T10:15:07.104678Z", "url": "https://files.pythonhosted.org/packages/ef/49/d4676a429c9fbb2a09962b84ef56ab164b49d48dc9360b30ea8313af7b58/aiobotocore_botorange-0.2.3a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48d9d0b648843c5a00f014a4efe3f85c", "sha256": "9cbc563b566535af879055dd2f4bfaca07779b79cab98ec1f45d6063654a3f64"}, "downloads": -1, "filename": "aiobotocore-botorange-0.2.3a0.tar.gz", "has_sig": false, "md5_digest": "48d9d0b648843c5a00f014a4efe3f85c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16517, "upload_time": "2017-03-22T10:15:04", "upload_time_iso_8601": "2017-03-22T10:15:04.850500Z", "url": "https://files.pythonhosted.org/packages/8e/c1/a0a2e3f3a23eab0b6bafc4446209464482e3c16f2bbc98ec8bb43c00dc53/aiobotocore-botorange-0.2.3a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec0658d813864985596c3dba1c0b73ba", "sha256": "7ffbbe13606152b7fa22be5a2817fe791a335b93c17b9babc9f0cb0d16fe6f23"}, "downloads": -1, "filename": "aiobotocore_botorange-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec0658d813864985596c3dba1c0b73ba", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 17265, "upload_time": "2017-03-22T10:15:34", "upload_time_iso_8601": "2017-03-22T10:15:34.486335Z", "url": "https://files.pythonhosted.org/packages/ec/f4/3dc639b6b6d1175f22b15e66c91d525de1774df7d1ed4a76cd3ba5ba0515/aiobotocore_botorange-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3d5afaff140ee2f3bacb5362ec321cd", "sha256": "62312ea3482bbb38b35a5a7a6a7e71bb3565d6758e839bc638d84e6811dda9e6"}, "downloads": -1, "filename": "aiobotocore-botorange-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f3d5afaff140ee2f3bacb5362ec321cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16525, "upload_time": "2017-03-22T10:15:33", "upload_time_iso_8601": "2017-03-22T10:15:33.251487Z", "url": "https://files.pythonhosted.org/packages/0b/89/065ec21b57987daa3a71b3ebe3d96173fe5a6eb082730ce78f60cad1fff4/aiobotocore-botorange-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:45 2020"}