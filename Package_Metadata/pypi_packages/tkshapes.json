{"info": {"author": "Mark Bentley", "author_email": "bentlema@yahoo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "\ufeff\n# Tkinter Canvas Shapes\n\n**Note:**  This is a Python 3.6+ module.\n\nThe tkshapes module adds a GCanvas widget which can contain user-configurable shapes.\nThe GCanvas widget supports the standard Tk canvas shapes, as well as some others\nuseful in diagrams. (Not all implemented yet.)\n\n  * GObjects can be constructed from GItems\n  * GObjects are displayed on the GCanvas\n  * GObjects can be dragged around individually, or selected and dragged together\n  * GObjects can have GNodes\n  * GNodes can be connected by a GConnection (visualized by a GWire)\n\n## Controls\n\nThe GCanvas Keyboard and Mouse controls are as follows:\n\n  * Control + MouseClickHold-and-Drag or Two-finger swipe to Pan the canvas\n  * Control + MouseWheel or Control + Two-finger Vertical swipe to Zoom In/Out\n  * Click-Drag a single shape to move it around on the canvas\n  * Command + Click to toggle selection of a single shape\n\n  * Click-Drag on the canvas to mark out a Selection Box\n    - Selected shapes can highlight themselves if configured to do so (default)\n    - Click-Drag one of the selected shapes to move them all together\n    - Click anywhere on the canvas to de-select all shapes\n    - Command + Click individual shapes to add/remove shapes from the selected set (toggle)\n\n  * To make a connection between two \"Connectable\" shapes:\n    - Click and Hold on an \"Output\" Node of a shape (such as one of the Logic Gates in the Demo)\n    - Begin to Drag and a wire will appear\n    - Drag the wire to an \"Input\" Node of another shape and release to complete the connection\n\n## Installation\n\nCreate your Python 3.6+ virtual environment\n\n```\npython3.6 -m venv env\n```\n\nActivate your virtual env\n\n```\nsource env/bin/activate\n```\n\nInstall tkapp and tkshapes (The demo.py depends on the tkapp module as well.)\n\n```\npip install tkapp tkshapes\n```\n\n## Alpha - In-Development\n\nThis library is being developed so that I can use it to build a Digital Logic\nSimulator app.  I wasn't able to find a Tkinter library that did what I need,\nso decided to try and write one from scratch.\n\nAt this time, the only documentation is this README, the code itself, as well\nas a demo.py which shows the basic usage.\n\nI'm developing and testing **ONLY** on macOS.\n\n## Known Issues\n\n - when the Tkinter window is put in full-screen mode using the full-screen\n   green dot button at the top left of the window, mouse position is incorrectly\n   calculated.  You'll notice that the calculated mouse position on the GCanvas\n   is slightly off.  This appears to be a Tkinter bug, but I'm not 100% sure.\n   Instead of using full-screen mode, you may click Option-GreenDot to maximize\n   the window to use the full screen without actually entering full-screen mode.\n\n   **FIXED:** this issue has been fixed with Python 3.7 releases.  I've tested both\n   the standard CPython and Anaconda distributions, and this issue is no longer\n   present.  It appears that \"Fullscreen Mode\" simply does a window maximize now,\n   automatically accomplishing the workaround mentioned above.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bentlema/tkshapes", "keywords": "tkinter", "license": "", "maintainer": "", "maintainer_email": "", "name": "tkshapes", "package_url": "https://pypi.org/project/tkshapes/", "platform": "", "project_url": "https://pypi.org/project/tkshapes/", "project_urls": {"Bug Reports": "https://github.com/bentlema/tkshapes/issues", "Homepage": "https://github.com/bentlema/tkshapes", "Source": "https://github.com/bentlema/tkshapes/"}, "release_url": "https://pypi.org/project/tkshapes/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Draw and interact with shapes on the Tkinter canvas", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tkinter Canvas Shapes</h1>\n<p><strong>Note:</strong>  This is a Python 3.6+ module.</p>\n<p>The tkshapes module adds a GCanvas widget which can contain user-configurable shapes.\nThe GCanvas widget supports the standard Tk canvas shapes, as well as some others\nuseful in diagrams. (Not all implemented yet.)</p>\n<ul>\n<li>GObjects can be constructed from GItems</li>\n<li>GObjects are displayed on the GCanvas</li>\n<li>GObjects can be dragged around individually, or selected and dragged together</li>\n<li>GObjects can have GNodes</li>\n<li>GNodes can be connected by a GConnection (visualized by a GWire)</li>\n</ul>\n<h2>Controls</h2>\n<p>The GCanvas Keyboard and Mouse controls are as follows:</p>\n<ul>\n<li>\n<p>Control + MouseClickHold-and-Drag or Two-finger swipe to Pan the canvas</p>\n</li>\n<li>\n<p>Control + MouseWheel or Control + Two-finger Vertical swipe to Zoom In/Out</p>\n</li>\n<li>\n<p>Click-Drag a single shape to move it around on the canvas</p>\n</li>\n<li>\n<p>Command + Click to toggle selection of a single shape</p>\n</li>\n<li>\n<p>Click-Drag on the canvas to mark out a Selection Box</p>\n<ul>\n<li>Selected shapes can highlight themselves if configured to do so (default)</li>\n<li>Click-Drag one of the selected shapes to move them all together</li>\n<li>Click anywhere on the canvas to de-select all shapes</li>\n<li>Command + Click individual shapes to add/remove shapes from the selected set (toggle)</li>\n</ul>\n</li>\n<li>\n<p>To make a connection between two \"Connectable\" shapes:</p>\n<ul>\n<li>Click and Hold on an \"Output\" Node of a shape (such as one of the Logic Gates in the Demo)</li>\n<li>Begin to Drag and a wire will appear</li>\n<li>Drag the wire to an \"Input\" Node of another shape and release to complete the connection</li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>Create your Python 3.6+ virtual environment</p>\n<pre><code>python3.6 -m venv env\n</code></pre>\n<p>Activate your virtual env</p>\n<pre><code>source env/bin/activate\n</code></pre>\n<p>Install tkapp and tkshapes (The demo.py depends on the tkapp module as well.)</p>\n<pre><code>pip install tkapp tkshapes\n</code></pre>\n<h2>Alpha - In-Development</h2>\n<p>This library is being developed so that I can use it to build a Digital Logic\nSimulator app.  I wasn't able to find a Tkinter library that did what I need,\nso decided to try and write one from scratch.</p>\n<p>At this time, the only documentation is this README, the code itself, as well\nas a demo.py which shows the basic usage.</p>\n<p>I'm developing and testing <strong>ONLY</strong> on macOS.</p>\n<h2>Known Issues</h2>\n<ul>\n<li>\n<p>when the Tkinter window is put in full-screen mode using the full-screen\ngreen dot button at the top left of the window, mouse position is incorrectly\ncalculated.  You'll notice that the calculated mouse position on the GCanvas\nis slightly off.  This appears to be a Tkinter bug, but I'm not 100% sure.\nInstead of using full-screen mode, you may click Option-GreenDot to maximize\nthe window to use the full screen without actually entering full-screen mode.</p>\n<p><strong>FIXED:</strong> this issue has been fixed with Python 3.7 releases.  I've tested both\nthe standard CPython and Anaconda distributions, and this issue is no longer\npresent.  It appears that \"Fullscreen Mode\" simply does a window maximize now,\nautomatically accomplishing the workaround mentioned above.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4522046, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bfbc533b273b559a119bf3c72c6c7a94", "sha256": "2aebd5971e15a8e8d0e01c5b33fa8b0c66d509fa07f19ac16a18e9537e6dfa5b"}, "downloads": -1, "filename": "tkshapes-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bfbc533b273b559a119bf3c72c6c7a94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25159, "upload_time": "2018-10-16T23:46:10", "upload_time_iso_8601": "2018-10-16T23:46:10.275164Z", "url": "https://files.pythonhosted.org/packages/c8/ce/2996491cbafd431c8f38633053365320a4ebcec412cfa2f876bf572c468c/tkshapes-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c472ee5480f6000f4e9413bc3104f5e", "sha256": "0c73e22079ef6933b81d295e10132f67ed69c51f225facb3e61132b0f16bb842"}, "downloads": -1, "filename": "tkshapes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0c472ee5480f6000f4e9413bc3104f5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13491, "upload_time": "2018-10-16T23:46:11", "upload_time_iso_8601": "2018-10-16T23:46:11.617059Z", "url": "https://files.pythonhosted.org/packages/13/41/975141b7ff3ba0abfe614cb3c086ff6d83d320da1ea970c3c549e07b2166/tkshapes-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "98b5fb172a705129f7894a9e1293428f", "sha256": "b1ad89a9edc14abbf7bbf045f95ba712278af678558560b09ffe0daaac91d6b6"}, "downloads": -1, "filename": "tkshapes-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "98b5fb172a705129f7894a9e1293428f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28426, "upload_time": "2018-10-23T03:45:26", "upload_time_iso_8601": "2018-10-23T03:45:26.248309Z", "url": "https://files.pythonhosted.org/packages/1d/fa/680dc36659bb1676ec9a664090b3a557ad1f81c34a7f4587b34f316cdce3/tkshapes-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b581a596a48a07da2a7747e847b2521", "sha256": "89c25fbbe14b7fb4ca90c5a1401710c238b01d6187a4132a317dc3638ebf0726"}, "downloads": -1, "filename": "tkshapes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1b581a596a48a07da2a7747e847b2521", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17467, "upload_time": "2018-10-23T03:45:28", "upload_time_iso_8601": "2018-10-23T03:45:28.332096Z", "url": "https://files.pythonhosted.org/packages/40/83/08dd5395220c86649be769dd951c8f399d50247c58042cb80aae14a3185a/tkshapes-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "515b71f9ac83201f773fec999903efc9", "sha256": "de69c3a3bf76bcc724f6b5908f39b0db9026bace71065b4c6aec328b66041e70"}, "downloads": -1, "filename": "tkshapes-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "515b71f9ac83201f773fec999903efc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44723, "upload_time": "2018-11-05T04:08:42", "upload_time_iso_8601": "2018-11-05T04:08:42.400109Z", "url": "https://files.pythonhosted.org/packages/6f/f4/e69681708089fd9416aa56656d1093c0a7acef622fca1a3d631c2d11082f/tkshapes-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cb6abeec6dadbef020e56adf0125d21", "sha256": "5f0e4132edd30a44b21a6c82fffcc33e1ba196e3d18661249fbc8640ac9347b6"}, "downloads": -1, "filename": "tkshapes-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9cb6abeec6dadbef020e56adf0125d21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22949, "upload_time": "2018-11-05T04:08:45", "upload_time_iso_8601": "2018-11-05T04:08:45.191319Z", "url": "https://files.pythonhosted.org/packages/6b/59/559910bad1b667d26b6d4b4b19101fedac0475702bf097abab3fac5f9485/tkshapes-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a6797ece66c975c61449041596e231fd", "sha256": "74b67d3505c866a7589c1f64417a6a65b0128aff99b68382ebdc2c8e4c8c88f0"}, "downloads": -1, "filename": "tkshapes-0.0.4-py36-none-any.whl", "has_sig": false, "md5_digest": "a6797ece66c975c61449041596e231fd", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 50368, "upload_time": "2018-11-24T00:13:16", "upload_time_iso_8601": "2018-11-24T00:13:16.476985Z", "url": "https://files.pythonhosted.org/packages/67/4d/6f8df1497a8d98b8fdc39b567f5f6534293451c5e08b00d9dd6da6872e6e/tkshapes-0.0.4-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "680b16e2d7393e333495b108bb855d6c", "sha256": "207a7375ed5e4f76a868c9612eb215a7e81c97201036e3577e988b3a7370c719"}, "downloads": -1, "filename": "tkshapes-0.0.4.tar.gz", "has_sig": false, "md5_digest": "680b16e2d7393e333495b108bb855d6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27247, "upload_time": "2018-11-24T00:13:18", "upload_time_iso_8601": "2018-11-24T00:13:18.403872Z", "url": "https://files.pythonhosted.org/packages/ca/ad/9e02dee252680e55c96e3e5d6f8b43cc5e18a42b801b5817a3a953a3294b/tkshapes-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6797ece66c975c61449041596e231fd", "sha256": "74b67d3505c866a7589c1f64417a6a65b0128aff99b68382ebdc2c8e4c8c88f0"}, "downloads": -1, "filename": "tkshapes-0.0.4-py36-none-any.whl", "has_sig": false, "md5_digest": "a6797ece66c975c61449041596e231fd", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 50368, "upload_time": "2018-11-24T00:13:16", "upload_time_iso_8601": "2018-11-24T00:13:16.476985Z", "url": "https://files.pythonhosted.org/packages/67/4d/6f8df1497a8d98b8fdc39b567f5f6534293451c5e08b00d9dd6da6872e6e/tkshapes-0.0.4-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "680b16e2d7393e333495b108bb855d6c", "sha256": "207a7375ed5e4f76a868c9612eb215a7e81c97201036e3577e988b3a7370c719"}, "downloads": -1, "filename": "tkshapes-0.0.4.tar.gz", "has_sig": false, "md5_digest": "680b16e2d7393e333495b108bb855d6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27247, "upload_time": "2018-11-24T00:13:18", "upload_time_iso_8601": "2018-11-24T00:13:18.403872Z", "url": "https://files.pythonhosted.org/packages/ca/ad/9e02dee252680e55c96e3e5d6f8b43cc5e18a42b801b5817a3a953a3294b/tkshapes-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:32 2020"}