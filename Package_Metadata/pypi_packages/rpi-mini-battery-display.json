{"info": {"author": "Koen Vervloesem", "author_email": "koen@vervloesem.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# RPi Mini Battery Display\n\n[![Continous Integration](https://github.com/koenvervloesem/rpi-mini-battery-display/workflows/Tests/badge.svg)](https://github.com/koenvervloesem/rpi-mini-battery-display/actions)\n[![PyPI package version](https://img.shields.io/pypi/v/rpi-mini-battery-display.svg)](https://pypi.org/project/rpi-mini-battery-display)\n[![Python versions](https://img.shields.io/pypi/pyversions/rpi-mini-battery-display.svg)](https://www.python.org)\n[![GitHub license](https://img.shields.io/github/license/koenvervloesem/rpi-mini-battery-display.svg)](https://github.com/koenvervloesem/rpi-mini-battery-display/blob/master/LICENSE)\n\nLibrary and command-line program to control 10-segment mini battery displays based on the TM1651 chip, such as [the ones from Open-Smart](https://aliexpress.com/item/32789343210.html), on a Raspberry Pi.\n\n## System requirements\n\nThe rpi-mini-battery-display library is written to run on a Raspberry Pi. It has been tested on Raspbian Buster (10) with Python 3.7.\n\nIf you don't have pip, install it first with:\n\n```shell\nsudo apt install python3-pip\n```\n\nThis library uses the [RPi.GPIO](https://pypi.org/project/RPi.GPIO/) library to communicate with the TM1651 chip. The default user `pi` in Raspbian has already the right permissions for GPIO access. If you want to use the library as another user, the user needs to be in the `gpio` group to have the right permissions. This can be done with:\n\n```shell\nsudo adduser $USER gpio\n```\n\n## Installation\n\n```shell\nsudo pip3 install rpi-mini-battery-display\n```\n\n## Connections\n\nThe mini battery display should be connected like this to the Raspberry Pi's GPIO header:\n\nMini Battery Display | Raspberry Pi\n-------------------- | ------------\nCLK                  | BCM24\nDIO                  | BCM23\nVCC                  | 5 V\nGND                  | GND\n\nSee [pinout.xyz](https://pinout.xyz/) for the Raspberry Pi GPIO pinout.\n\nThe CLK and DIO pin can be connected to other pins on the Raspberry Pi, but these are the default values used by the code. If you change the connections, you have to supply the other pin values as parameters to the software.\n\n## Usage\n\nYou can use the `rpi-mini-battery-display` program to set the level of the battery display from 0 to 7 or to let it show the CPU percentage as a level from 0 (less than 12.5%) to 7 (more than 87.5%):\n\n```shell\nusage: rpi-mini-battery-display [-h] [-c CLOCK_PIN] [-d DATA_PIN]\n                                [-b BRIGHTNESS] (-l LEVEL | -p)\n\nControl a 10 LED mini battery display with TM1651 chip\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CLOCK_PIN, --clock-pin CLOCK_PIN\n                        Clock pin in BCM notation (default: 24, range: 0-27)\n  -d DATA_PIN, --data-pin DATA_PIN\n                        Data pin in BCM notation (default: 23, range: 0-27)\n  -b BRIGHTNESS, --brightness BRIGHTNESS\n                        Brightness (default: 2, range: 0-7)\n  -l LEVEL, --level LEVEL\n                        Set battery level (range: 0-7)\n  -p, --processor       Show CPU percentage\n```\n\n## Use cases\n\nThese displays are handy in every situation where you want to show a status on a Raspberry Pi on a low budget. For instance, I'm using them to show the CPU load of every Raspberry Pi in my six-node cluster:\n\n![Six displays](six-displays.jpg)\n\nThis was actually my motivation to develop the rpi-mini-battery-display library.\n\n## Changelog\n\n* 0.3.0 (2020-02-28): Refactored code from rather C++/Arduino-like to something more Pythonic\n* 0.2.0 (2020-01-27): Added option to show the CPU percentage\n* 0.1.0 (2020-01-26): Initial version\n\n## TODO\n\n* Individually address the LED segments instead of only using them as a LED bar (fairly trivial, I already played with it but haven't implemented the necessary method yet).\n* Add the possibility to switch the direction of the LED bar.\n* Add static typing with [mypy](http://mypy-lang.org/).\n* Support other versions of the mini battery displays based on the TM1651 chip, for instance [the 5-segment one](https://aliexpress.com/item/2025558433.html).\n* Support other mini battery displays, such as the [Grove LED Bar](https://wiki.seeedstudio.com/Grove-LED_Bar/), which uses the MY9221 chip.\n\n## Developer notes\n\n* The TM1651 is one of a series of LED driver control chips by Titan Micro Electronics. Other popular similar chips of the same manufacturer are the TM1637 and TM1640.\n* [English datasheet of the TM1651](http://aitendo3.sakura.ne.jp/aitendo_data/product_img/ic/LED-driver/TM1651_%20V1.2/TM1651_V1.1_EN.pdf)\n\n## License\n\nThis project is provided by [Koen Vervloesem](mailto:koen@vervloesem.eu) as open source software with the MIT license. See the LICENSE file for more information.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/koenvervloesem/rpi-mini-battery-display", "keywords": "tm1651,raspberry-pi,rpi,rpi-gpio,display,gpio,led", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rpi-mini-battery-display", "package_url": "https://pypi.org/project/rpi-mini-battery-display/", "platform": "", "project_url": "https://pypi.org/project/rpi-mini-battery-display/", "project_urls": {"Documentation": "https://github.com/koenvervloesem/rpi-mini-battery-display", "Homepage": "https://github.com/koenvervloesem/rpi-mini-battery-display", "Source": "https://github.com/koenvervloesem/rpi-mini-battery-display", "Tracker": "https://github.com/koenvervloesem/rpi-mini-battery-display/issues"}, "release_url": "https://pypi.org/project/rpi-mini-battery-display/0.3.0/", "requires_dist": ["RPi.GPIO", "psutil"], "requires_python": ">=3", "summary": "Control 10-segment mini battery displays on a Raspberry Pi", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RPi Mini Battery Display</h1>\n<p><a href=\"https://github.com/koenvervloesem/rpi-mini-battery-display/actions\" rel=\"nofollow\"><img alt=\"Continous Integration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2662ecc0fd079e7c27879c2f9370f3a941c3f437/68747470733a2f2f6769746875622e636f6d2f6b6f656e766572766c6f6573656d2f7270692d6d696e692d626174746572792d646973706c61792f776f726b666c6f77732f54657374732f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/rpi-mini-battery-display\" rel=\"nofollow\"><img alt=\"PyPI package version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c8e96bbe84773ed739b8decfd35772352b179e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7270692d6d696e692d626174746572792d646973706c61792e737667\"></a>\n<a href=\"https://www.python.org\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ebfd783489ae6ec7dd0ae41c959d5e8d2dff24a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7270692d6d696e692d626174746572792d646973706c61792e737667\"></a>\n<a href=\"https://github.com/koenvervloesem/rpi-mini-battery-display/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b64e83408f7e2aec0c583ffbd55f181a806ad92/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6b6f656e766572766c6f6573656d2f7270692d6d696e692d626174746572792d646973706c61792e737667\"></a></p>\n<p>Library and command-line program to control 10-segment mini battery displays based on the TM1651 chip, such as <a href=\"https://aliexpress.com/item/32789343210.html\" rel=\"nofollow\">the ones from Open-Smart</a>, on a Raspberry Pi.</p>\n<h2>System requirements</h2>\n<p>The rpi-mini-battery-display library is written to run on a Raspberry Pi. It has been tested on Raspbian Buster (10) with Python 3.7.</p>\n<p>If you don't have pip, install it first with:</p>\n<pre>sudo apt install python3-pip\n</pre>\n<p>This library uses the <a href=\"https://pypi.org/project/RPi.GPIO/\" rel=\"nofollow\">RPi.GPIO</a> library to communicate with the TM1651 chip. The default user <code>pi</code> in Raspbian has already the right permissions for GPIO access. If you want to use the library as another user, the user needs to be in the <code>gpio</code> group to have the right permissions. This can be done with:</p>\n<pre>sudo adduser <span class=\"nv\">$USER</span> gpio\n</pre>\n<h2>Installation</h2>\n<pre>sudo pip3 install rpi-mini-battery-display\n</pre>\n<h2>Connections</h2>\n<p>The mini battery display should be connected like this to the Raspberry Pi's GPIO header:</p>\n<table>\n<thead>\n<tr>\n<th>Mini Battery Display</th>\n<th>Raspberry Pi</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CLK</td>\n<td>BCM24</td>\n</tr>\n<tr>\n<td>DIO</td>\n<td>BCM23</td>\n</tr>\n<tr>\n<td>VCC</td>\n<td>5 V</td>\n</tr>\n<tr>\n<td>GND</td>\n<td>GND</td>\n</tr></tbody></table>\n<p>See <a href=\"https://pinout.xyz/\" rel=\"nofollow\">pinout.xyz</a> for the Raspberry Pi GPIO pinout.</p>\n<p>The CLK and DIO pin can be connected to other pins on the Raspberry Pi, but these are the default values used by the code. If you change the connections, you have to supply the other pin values as parameters to the software.</p>\n<h2>Usage</h2>\n<p>You can use the <code>rpi-mini-battery-display</code> program to set the level of the battery display from 0 to 7 or to let it show the CPU percentage as a level from 0 (less than 12.5%) to 7 (more than 87.5%):</p>\n<pre>usage: rpi-mini-battery-display <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-c CLOCK_PIN<span class=\"o\">]</span> <span class=\"o\">[</span>-d DATA_PIN<span class=\"o\">]</span>\n                                <span class=\"o\">[</span>-b BRIGHTNESS<span class=\"o\">]</span> <span class=\"o\">(</span>-l LEVEL <span class=\"p\">|</span> -p<span class=\"o\">)</span>\n\nControl a <span class=\"m\">10</span> LED mini battery display with TM1651 chip\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -c CLOCK_PIN, --clock-pin CLOCK_PIN\n                        Clock pin in BCM notation <span class=\"o\">(</span>default: <span class=\"m\">24</span>, range: <span class=\"m\">0</span>-27<span class=\"o\">)</span>\n  -d DATA_PIN, --data-pin DATA_PIN\n                        Data pin in BCM notation <span class=\"o\">(</span>default: <span class=\"m\">23</span>, range: <span class=\"m\">0</span>-27<span class=\"o\">)</span>\n  -b BRIGHTNESS, --brightness BRIGHTNESS\n                        Brightness <span class=\"o\">(</span>default: <span class=\"m\">2</span>, range: <span class=\"m\">0</span>-7<span class=\"o\">)</span>\n  -l LEVEL, --level LEVEL\n                        Set battery level <span class=\"o\">(</span>range: <span class=\"m\">0</span>-7<span class=\"o\">)</span>\n  -p, --processor       Show CPU percentage\n</pre>\n<h2>Use cases</h2>\n<p>These displays are handy in every situation where you want to show a status on a Raspberry Pi on a low budget. For instance, I'm using them to show the CPU load of every Raspberry Pi in my six-node cluster:</p>\n<p><img alt=\"Six displays\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8afd93556ba8995f95e47f2d7a7b35fe8497bbbd/7369782d646973706c6179732e6a7067\"></p>\n<p>This was actually my motivation to develop the rpi-mini-battery-display library.</p>\n<h2>Changelog</h2>\n<ul>\n<li>0.3.0 (2020-02-28): Refactored code from rather C++/Arduino-like to something more Pythonic</li>\n<li>0.2.0 (2020-01-27): Added option to show the CPU percentage</li>\n<li>0.1.0 (2020-01-26): Initial version</li>\n</ul>\n<h2>TODO</h2>\n<ul>\n<li>Individually address the LED segments instead of only using them as a LED bar (fairly trivial, I already played with it but haven't implemented the necessary method yet).</li>\n<li>Add the possibility to switch the direction of the LED bar.</li>\n<li>Add static typing with <a href=\"http://mypy-lang.org/\" rel=\"nofollow\">mypy</a>.</li>\n<li>Support other versions of the mini battery displays based on the TM1651 chip, for instance <a href=\"https://aliexpress.com/item/2025558433.html\" rel=\"nofollow\">the 5-segment one</a>.</li>\n<li>Support other mini battery displays, such as the <a href=\"https://wiki.seeedstudio.com/Grove-LED_Bar/\" rel=\"nofollow\">Grove LED Bar</a>, which uses the MY9221 chip.</li>\n</ul>\n<h2>Developer notes</h2>\n<ul>\n<li>The TM1651 is one of a series of LED driver control chips by Titan Micro Electronics. Other popular similar chips of the same manufacturer are the TM1637 and TM1640.</li>\n<li><a href=\"http://aitendo3.sakura.ne.jp/aitendo_data/product_img/ic/LED-driver/TM1651_%20V1.2/TM1651_V1.1_EN.pdf\" rel=\"nofollow\">English datasheet of the TM1651</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is provided by <a href=\"mailto:koen@vervloesem.eu\">Koen Vervloesem</a> as open source software with the MIT license. See the LICENSE file for more information.</p>\n\n          </div>"}, "last_serial": 6720277, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0dcbb35f1d1ad11a6c947e76740afec1", "sha256": "aceccb62c06600c2df0530d12629ee011bd559bac70c56eaf0f815707bd0c113"}, "downloads": -1, "filename": "rpi_mini_battery_display-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0dcbb35f1d1ad11a6c947e76740afec1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 6287, "upload_time": "2020-01-26T14:10:33", "upload_time_iso_8601": "2020-01-26T14:10:33.114866Z", "url": "https://files.pythonhosted.org/packages/91/ee/d3b4a498f7417096a4a446d1cc64a91c1e3ab60826e5a87381cf13a02dd3/rpi_mini_battery_display-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16c0235be32590da28dd3aee4efc2e17", "sha256": "c6385d7d63d8bdb47b853f35f7c464a8187fafe99ce2bf3a0e4e819a1bf3dbae"}, "downloads": -1, "filename": "rpi-mini-battery-display-0.1.0.tar.gz", "has_sig": false, "md5_digest": "16c0235be32590da28dd3aee4efc2e17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4818, "upload_time": "2020-01-26T14:10:35", "upload_time_iso_8601": "2020-01-26T14:10:35.194837Z", "url": "https://files.pythonhosted.org/packages/21/ad/daafa3ef84e0c904faeadb4ce7c683a4ff04dcb78c02a558b9d71e1718a6/rpi-mini-battery-display-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6b6c566bd51f810ed7e5c445c19e200a", "sha256": "d31f04d58d3c95b5b1d47ff2d990872dcbc228d27757a04a72a51e36c96b4ccb"}, "downloads": -1, "filename": "rpi_mini_battery_display-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b6c566bd51f810ed7e5c445c19e200a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 6801, "upload_time": "2020-01-27T11:39:50", "upload_time_iso_8601": "2020-01-27T11:39:50.074631Z", "url": "https://files.pythonhosted.org/packages/a4/ee/29b3af99b17214d03fc627ef2bc0b34655e10d3ef3b9ec9800642fd817b6/rpi_mini_battery_display-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d293d7738b12896527eaef48e0110823", "sha256": "cbfebdc8b03904f5a785d3695b66e36602a8669e0f0360cfb22b8a8f1a36b8e2"}, "downloads": -1, "filename": "rpi-mini-battery-display-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d293d7738b12896527eaef48e0110823", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5317, "upload_time": "2020-01-27T11:39:52", "upload_time_iso_8601": "2020-01-27T11:39:52.141197Z", "url": "https://files.pythonhosted.org/packages/3c/09/6bbbddba6283280eb74d522d5fab34e61dbb4db178cf670096de73b1e0ce/rpi-mini-battery-display-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "adc04ca9c1216c2fd02b52c51be82448", "sha256": "29edcbb3eb64ff63524fd778723cfe83f316d3d518427c2b7015f4a71f9c1313"}, "downloads": -1, "filename": "rpi_mini_battery_display-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "adc04ca9c1216c2fd02b52c51be82448", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8826, "upload_time": "2020-02-28T20:32:55", "upload_time_iso_8601": "2020-02-28T20:32:55.888902Z", "url": "https://files.pythonhosted.org/packages/6e/dc/17cbeb671fe7e02c397190b15cae2b35b0d20c819be874bd7ef22795e5c0/rpi_mini_battery_display-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a468e45dcdde1a5edb57ea2be7169a2", "sha256": "23ff6d086b4c951b63d7d5e5517fc794dc44126f79f351f72c1a7f0e03b18dcf"}, "downloads": -1, "filename": "rpi-mini-battery-display-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2a468e45dcdde1a5edb57ea2be7169a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6851, "upload_time": "2020-02-28T20:32:57", "upload_time_iso_8601": "2020-02-28T20:32:57.423275Z", "url": "https://files.pythonhosted.org/packages/6d/2e/54c688b00c0badf8f4800550167b54fd3470b1654ef116ce2fc890b3493f/rpi-mini-battery-display-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "adc04ca9c1216c2fd02b52c51be82448", "sha256": "29edcbb3eb64ff63524fd778723cfe83f316d3d518427c2b7015f4a71f9c1313"}, "downloads": -1, "filename": "rpi_mini_battery_display-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "adc04ca9c1216c2fd02b52c51be82448", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8826, "upload_time": "2020-02-28T20:32:55", "upload_time_iso_8601": "2020-02-28T20:32:55.888902Z", "url": "https://files.pythonhosted.org/packages/6e/dc/17cbeb671fe7e02c397190b15cae2b35b0d20c819be874bd7ef22795e5c0/rpi_mini_battery_display-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a468e45dcdde1a5edb57ea2be7169a2", "sha256": "23ff6d086b4c951b63d7d5e5517fc794dc44126f79f351f72c1a7f0e03b18dcf"}, "downloads": -1, "filename": "rpi-mini-battery-display-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2a468e45dcdde1a5edb57ea2be7169a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6851, "upload_time": "2020-02-28T20:32:57", "upload_time_iso_8601": "2020-02-28T20:32:57.423275Z", "url": "https://files.pythonhosted.org/packages/6d/2e/54c688b00c0badf8f4800550167b54fd3470b1654ef116ce2fc890b3493f/rpi-mini-battery-display-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:55 2020"}