{"info": {"author": "Pedro Buteri Gonring", "author_email": "pedro@bigode.net", "bugtrack_url": null, "classifiers": [], "description": "|Downloads|\n\npapir\n=====\n\nPapir is an acronym for \"Python API Requests\".\n\nThe main purpose is to make custom http requests to json APIs, prettify and\ncolorize the full response (headers + json content).\n\nJson is used to post, put, patch or delete and to customize the http\nheaders.\n\nBasic http authentication and gzip compression are supported.\n\nSimple example::\n\n    $ papir httpbin.org/get\n\n.. image:: https://raw.githubusercontent.com/pdrb/papir/master/papir.png\n\n\nNotes\n=====\n\n- Works on Python 3.3+\n- Uses only Python standard library for maximum compatibility\n- Small and simple source code that can be read in a few minutes\n\n\nInstall\n=======\n\nInstall using pip::\n\n    pip install papir\n\nor\n\nDownload and set executable permission on the script file::\n\n    chmod +x papir.py\n\nor\n\nDownload and run using the python interpreter::\n\n    python3 papir.py\n\n\nUsage\n=====\n\n::\n\n    Usage: papir url [options] [method]\n\n    make http requests to json apis\n\n    Options:\n      --version        show program's version number and exit\n      -d DATA_FILE     json file to post, put, patch or delete\n      -h HEADERS_FILE  json file containing additional headers\n      -j JSON_DATA     json string to post, put, patch or delete\n      -e JSON_HEADERS  json string containing additional headers\n      -t TIMEOUT       timeout in seconds to wait for response (default: 10)\n      -a AUTH          basic http authentication in the format username:password\n      -f, --follow     follow redirects (default: disabled)\n      -v, --verbose    show request headers (default: disabled)\n\n\nExamples\n========\n\nAssuming the file \"data.json\" exists containing::\n\n    {\n        \"name\": \"Bob\",\n        \"age\": 30\n    }\n\nMake a post request using that data::\n\n    $ papir example.org -d data.json\n\nThe json data can also be passed directly from cli::\n\n    $ papir example.org -j '{\"name\": \"Bob\", \"age\": 30}'\n\nTo use a different http method just inform it::\n\n    $ papir example.org -d data.json put\n\nTo customize the request headers, create a json file like::\n\n    {\n        \"Auth-User\": \"user\",\n        \"Auth-Token\": \"1234\",\n        \"User-Agent\": \"myagent\"\n    }\n\nAnd add it to the request::\n\n    $ papir example.org -h headers.json\n\nHeaders can also be customized directly from cli::\n\n    $ papir example.org -e '{\"custom-header\": \"foobar\", \"user-agent\": \"myagent\"}'\n\nObviously, you can mix it with all kinds of http methods::\n\n    $ papir example.org -h headers.json -d data.json patch\n\nSimple basic auth::\n\n    $ papir example.org -a user:pass\n\n\n.. |Downloads| image:: https://pepy.tech/badge/papir", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pdrb/papir", "keywords": "http api json requests", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "papir", "package_url": "https://pypi.org/project/papir/", "platform": "", "project_url": "https://pypi.org/project/papir/", "project_urls": {"Homepage": "https://github.com/pdrb/papir"}, "release_url": "https://pypi.org/project/papir/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Make http requests to json apis", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6f85ffd7cf1f1cdb2ce2304962a72861071d1e3/68747470733a2f2f706570792e746563682f62616467652f7061706972\"></p>\n<div id=\"papir\">\n<h2>papir</h2>\n<p>Papir is an acronym for \u201cPython API Requests\u201d.</p>\n<p>The main purpose is to make custom http requests to json APIs, prettify and\ncolorize the full response (headers + json content).</p>\n<p>Json is used to post, put, patch or delete and to customize the http\nheaders.</p>\n<p>Basic http authentication and gzip compression are supported.</p>\n<p>Simple example:</p>\n<pre>$ papir httpbin.org/get\n</pre>\n<img alt=\"https://raw.githubusercontent.com/pdrb/papir/master/papir.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41313ef384318eaa1c27698b4045b6443561f2c3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706472622f70617069722f6d61737465722f70617069722e706e67\">\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>Works on Python 3.3+</li>\n<li>Uses only Python standard library for maximum compatibility</li>\n<li>Small and simple source code that can be read in a few minutes</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install using pip:</p>\n<pre>pip install papir\n</pre>\n<p>or</p>\n<p>Download and set executable permission on the script file:</p>\n<pre>chmod +x papir.py\n</pre>\n<p>or</p>\n<p>Download and run using the python interpreter:</p>\n<pre>python3 papir.py\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage: papir url [options] [method]\n\nmake http requests to json apis\n\nOptions:\n  --version        show program's version number and exit\n  -d DATA_FILE     json file to post, put, patch or delete\n  -h HEADERS_FILE  json file containing additional headers\n  -j JSON_DATA     json string to post, put, patch or delete\n  -e JSON_HEADERS  json string containing additional headers\n  -t TIMEOUT       timeout in seconds to wait for response (default: 10)\n  -a AUTH          basic http authentication in the format username:password\n  -f, --follow     follow redirects (default: disabled)\n  -v, --verbose    show request headers (default: disabled)\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Assuming the file \u201cdata.json\u201d exists containing:</p>\n<pre>{\n    \"name\": \"Bob\",\n    \"age\": 30\n}\n</pre>\n<p>Make a post request using that data:</p>\n<pre>$ papir example.org -d data.json\n</pre>\n<p>The json data can also be passed directly from cli:</p>\n<pre>$ papir example.org -j '{\"name\": \"Bob\", \"age\": 30}'\n</pre>\n<p>To use a different http method just inform it:</p>\n<pre>$ papir example.org -d data.json put\n</pre>\n<p>To customize the request headers, create a json file like:</p>\n<pre>{\n    \"Auth-User\": \"user\",\n    \"Auth-Token\": \"1234\",\n    \"User-Agent\": \"myagent\"\n}\n</pre>\n<p>And add it to the request:</p>\n<pre>$ papir example.org -h headers.json\n</pre>\n<p>Headers can also be customized directly from cli:</p>\n<pre>$ papir example.org -e '{\"custom-header\": \"foobar\", \"user-agent\": \"myagent\"}'\n</pre>\n<p>Obviously, you can mix it with all kinds of http methods:</p>\n<pre>$ papir example.org -h headers.json -d data.json patch\n</pre>\n<p>Simple basic auth:</p>\n<pre>$ papir example.org -a user:pass\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4755199, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b6f181fe185d6045da20c62eda0099bb", "sha256": "0bcfbe88949d9810c0a599d5e1f58c1c80cc4921ab476130fa01a51805d6d996"}, "downloads": -1, "filename": "papir-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b6f181fe185d6045da20c62eda0099bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4924, "upload_time": "2018-12-26T20:09:43", "upload_time_iso_8601": "2018-12-26T20:09:43.553426Z", "url": "https://files.pythonhosted.org/packages/be/3d/c05c08640f2e1788a9d7c90b1cd9fbc46c09f8e0bd94de923ab8646dbe97/papir-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "de0b830a03b65e76410b50e7821d574b", "sha256": "94f12017a34219b4fc83e3ec532b0ba5434b39a62b550bd9b7184358dcadb19e"}, "downloads": -1, "filename": "papir-0.1.1.tar.gz", "has_sig": false, "md5_digest": "de0b830a03b65e76410b50e7821d574b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4997, "upload_time": "2018-12-27T00:52:55", "upload_time_iso_8601": "2018-12-27T00:52:55.936740Z", "url": "https://files.pythonhosted.org/packages/1c/81/038bfea73c210901f1268cec68a8f8bd3eacd620b53cb5d2f2880886541b/papir-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "67461f8260f7bff4fad6d1f665793db4", "sha256": "95c3857106eace66dc10006a7d1995f7a6879087efc1123f545051c2f7ef1e48"}, "downloads": -1, "filename": "papir-0.1.2.tar.gz", "has_sig": false, "md5_digest": "67461f8260f7bff4fad6d1f665793db4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5153, "upload_time": "2018-12-27T03:45:04", "upload_time_iso_8601": "2018-12-27T03:45:04.011111Z", "url": "https://files.pythonhosted.org/packages/b7/1c/5afa48a84929625fe957f1d40755c3e85a122d60cb2fed53b4181cbe972a/papir-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e700a42654c60c27fe199a4f45e6f3bc", "sha256": "9ffc4b290f57edc11f65499c127a3a5bbeb4bf282a00670a2ba49c6307373249"}, "downloads": -1, "filename": "papir-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e700a42654c60c27fe199a4f45e6f3bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5181, "upload_time": "2018-12-28T21:21:04", "upload_time_iso_8601": "2018-12-28T21:21:04.574301Z", "url": "https://files.pythonhosted.org/packages/52/23/fabb642a0e2e3035a85eb89f371241fad3632779bb999f21ffba603db0de/papir-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b5cf6aa07f533557bc1fda122a23f2cf", "sha256": "6397e99d4e2fdae0decc3207e09b6cf24aa3dc81cb27f13e8525b3d0c319f535"}, "downloads": -1, "filename": "papir-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b5cf6aa07f533557bc1fda122a23f2cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5277, "upload_time": "2019-01-03T19:27:28", "upload_time_iso_8601": "2019-01-03T19:27:28.598847Z", "url": "https://files.pythonhosted.org/packages/68/9e/a7e7082f0d9a44b4b30909dc08768aad610001f346012bab8d6cd0f3953a/papir-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "353ca590c19f28717721514b888a4a00", "sha256": "08f376d342592f5c926b79a3f264942843258a299998150d399fc56f6622820e"}, "downloads": -1, "filename": "papir-0.1.5.tar.gz", "has_sig": false, "md5_digest": "353ca590c19f28717721514b888a4a00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5393, "upload_time": "2019-01-17T16:36:58", "upload_time_iso_8601": "2019-01-17T16:36:58.857641Z", "url": "https://files.pythonhosted.org/packages/84/9b/675f1399eb6b2cd5eca774c797d5a8f252c11a9adb9857b6364eb77bb7df/papir-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "64d65b34ba2d6391ebed79f5c0f84369", "sha256": "6c57157b20c30ebcdc186476394f4e3069316009d30e0c59d6a0e0fc0025ab77"}, "downloads": -1, "filename": "papir-0.2.0.tar.gz", "has_sig": false, "md5_digest": "64d65b34ba2d6391ebed79f5c0f84369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5765, "upload_time": "2019-01-29T14:42:21", "upload_time_iso_8601": "2019-01-29T14:42:21.639121Z", "url": "https://files.pythonhosted.org/packages/33/a7/7e7803d16615f00adbfda0866ad5b741ad6a51a0b5e3d0d2334d9d35c0cd/papir-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "64d65b34ba2d6391ebed79f5c0f84369", "sha256": "6c57157b20c30ebcdc186476394f4e3069316009d30e0c59d6a0e0fc0025ab77"}, "downloads": -1, "filename": "papir-0.2.0.tar.gz", "has_sig": false, "md5_digest": "64d65b34ba2d6391ebed79f5c0f84369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5765, "upload_time": "2019-01-29T14:42:21", "upload_time_iso_8601": "2019-01-29T14:42:21.639121Z", "url": "https://files.pythonhosted.org/packages/33/a7/7e7803d16615f00adbfda0866ad5b741ad6a51a0b5e3d0d2334d9d35c0cd/papir-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:45 2020"}