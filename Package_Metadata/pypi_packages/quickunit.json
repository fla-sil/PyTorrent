{"info": {"author": "David Cramer", "author_email": "dcramer@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "quickunit\n=========\n\nGiven standard test setup, will determine which tests need to run against a given diff.\n\nFor example, say you're working in your branch called my-new-sexy-feature, which modifies the following files:\n\n::\n\n    src/foo/bar/__init__.py\n    src/foo/bar/baz.py\n    src/foo/biz.py\n\nIf you're using a traditional test layout, we'll automatically add the following rule for you:\n\n::\n\n    tests/{path}/test_{filename}\n\nOtherwise you can add rules using regular expression syntax in combination with the path and filename formatters.\n\nNow if we run with the default options, ``nosetests --with-quickunit``, it will look for tests (by default) in\nthe following base directories:\n\n::\n\n    tests/src/foo/bar/test_baz.py\n    tests/src/foo/test_biz.py\n\n(It does this by analyzing the diff against master, and determining which files you've changed\nare tests, including them, and which files containing test coverage in a parallel directory.)\n\nConfig\n------\n\nIf you want to support multiple directories for searching (let's say you break up unittests from integration tests)\nyou can do that as well:\n\n::\n    --quickunit-rule=tests/{path}/test_{filename} --quickunit-rule=tests/{path}/{basename}/tests.py\n\nOr, if you'd prefer, via ``setup.cfg``:\n\n::\n\n    quickunit-rule = tests/{path}/test_{filename}\n                     tests/{path}/{basename}/tests.py\n\nRules\n-----\n\nRules are a combination of simple formatting a regular expressions.\n\nThe following formatted variables are available within a rule:\n\n{path}\n  The base path of the filename (e.g. foo/bar)\n{filename}\n  The filename excluding the path (e.g. baz.py)\n{basename}\n  The filename excluding the extension (e.g. baz)\n\nA rule is first formatted (using ``.format(params)``) and then compiled into a regular expression on top of each changed file.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/dcramer/quickunit", "keywords": null, "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "quickunit", "package_url": "https://pypi.org/project/quickunit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/quickunit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/dcramer/quickunit"}, "release_url": "https://pypi.org/project/quickunit/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "A discovery plugin for Nose which relies on sane structure.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Given standard test setup, will determine which tests need to run against a given diff.</p>\n<p>For example, say you\u2019re working in your branch called my-new-sexy-feature, which modifies the following files:</p>\n<pre>src/foo/bar/__init__.py\nsrc/foo/bar/baz.py\nsrc/foo/biz.py\n</pre>\n<p>If you\u2019re using a traditional test layout, we\u2019ll automatically add the following rule for you:</p>\n<pre>tests/{path}/test_{filename}\n</pre>\n<p>Otherwise you can add rules using regular expression syntax in combination with the path and filename formatters.</p>\n<p>Now if we run with the default options, <tt>nosetests <span class=\"pre\">--with-quickunit</span></tt>, it will look for tests (by default) in\nthe following base directories:</p>\n<pre>tests/src/foo/bar/test_baz.py\ntests/src/foo/test_biz.py\n</pre>\n<p>(It does this by analyzing the diff against master, and determining which files you\u2019ve changed\nare tests, including them, and which files containing test coverage in a parallel directory.)</p>\n<div id=\"config\">\n<h2>Config</h2>\n<p>If you want to support multiple directories for searching (let\u2019s say you break up unittests from integration tests)\nyou can do that as well:</p>\n<dl>\n<dt>::</dt>\n<dd>\u2013quickunit-rule=tests/{path}/test_{filename} \u2013quickunit-rule=tests/{path}/{basename}/tests.py</dd>\n</dl>\n<p>Or, if you\u2019d prefer, via <tt>setup.cfg</tt>:</p>\n<pre>quickunit-rule = tests/{path}/test_{filename}\n                 tests/{path}/{basename}/tests.py\n</pre>\n</div>\n<div id=\"rules\">\n<h2>Rules</h2>\n<p>Rules are a combination of simple formatting a regular expressions.</p>\n<p>The following formatted variables are available within a rule:</p>\n<dl>\n<dt>{path}</dt>\n<dd>The base path of the filename (e.g. foo/bar)</dd>\n<dt>{filename}</dt>\n<dd>The filename excluding the path (e.g. baz.py)</dd>\n<dt>{basename}</dt>\n<dd>The filename excluding the extension (e.g. baz)</dd>\n</dl>\n<p>A rule is first formatted (using <tt>.format(params)</tt>) and then compiled into a regular expression on top of each changed file.</p>\n</div>\n\n          </div>"}, "last_serial": 825914, "releases": {"0.5.4": [], "0.6.0": [{"comment_text": "", "digests": {"md5": "bd6e3abe24d9bb91f6331cc3a5e0b345", "sha256": "7bf39b90bb009dd63970a6bbfe5d9a9c3d9b305a4282a0dec80439c863129530"}, "downloads": -1, "filename": "quickunit-0.6.0.tar.gz", "has_sig": false, "md5_digest": "bd6e3abe24d9bb91f6331cc3a5e0b345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6500, "upload_time": "2013-07-26T22:56:56", "upload_time_iso_8601": "2013-07-26T22:56:56.778206Z", "url": "https://files.pythonhosted.org/packages/f2/0a/abc1782b20e896eb9f8449a8619f06a5df0ebd3d2726502f4577710d0084/quickunit-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd6e3abe24d9bb91f6331cc3a5e0b345", "sha256": "7bf39b90bb009dd63970a6bbfe5d9a9c3d9b305a4282a0dec80439c863129530"}, "downloads": -1, "filename": "quickunit-0.6.0.tar.gz", "has_sig": false, "md5_digest": "bd6e3abe24d9bb91f6331cc3a5e0b345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6500, "upload_time": "2013-07-26T22:56:56", "upload_time_iso_8601": "2013-07-26T22:56:56.778206Z", "url": "https://files.pythonhosted.org/packages/f2/0a/abc1782b20e896eb9f8449a8619f06a5df0ebd3d2726502f4577710d0084/quickunit-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:25 2020"}