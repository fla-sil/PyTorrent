{"info": {"author": "Peter Volf", "author_email": "do.volfp@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup", "Topic :: Utilities", "Typing :: Typed"], "description": "[![Build Status](https://travis-ci.org/volfpeter/markyp.svg?branch=master)](https://travis-ci.org/volfpeter/markyp)\n[![Downloads](https://pepy.tech/badge/markyp)](https://pepy.tech/project/markyp)\n[![Downloads](https://pepy.tech/badge/markyp/month)](https://pepy.tech/project/markyp/month)\n[![Downloads](https://pepy.tech/badge/markyp/week)](https://pepy.tech/project/markyp/week)\n\n# markyp\n\nPython 3 tools for creating markup documents.\n\n## Installation\n\nThe project is listed on the Python Package Index, it can be installed simply by executing `pip install markyp`.\n\n## General concepts\n\nElement creation in `markyp` and its derivates usually works as follows:\n\n- If an element can have children, then the positional arguments passed to the component become the children of the created element.\n- If an element can have attributes, then keyword arguments that are not listed explicitly on the argument list (i.e. `**kwargs`) are turned into element attributes.\n- Explicitly declared keyword arguments work as documented.\n\nThe markup defined by the created elements can be obtained by converting to root element to string (`str()`) or by using the root element's `markup` property.\n\n## Getting started\n\nCreating new `markyp` element types is typically as simple as deriving new classes with the right name from the base elements that are provided by the project. The following example shows the creation of some HTML elements:\n\n```Python\nfrom markyp import ElementType\nfrom markyp.elements import Element, StringElement\n\nclass html(Element):\n    __slots__ = ()\n\n    def __str__(self) -> str:\n        return f\"<!DOCTYPE html>\\n{(super().__str__())}\"\n\nclass head(Element):\n    __slots__ = ()\n\nclass body(Element):\n    __slots__ = ()\n\nclass title(StringElement):\n    __slots__ = ()\n\nclass p(Element):\n    __slots__ = ()\n\n    @property\n    def inline_children(self) -> bool:\n        return True\n\nclass code(StringElement):\n    __slots__ = ()\n\nclass ul(Element):\n    __slots__ = ()\n\nclass li(Element):\n    __slots__ = ()\n```\n\nOnce you have defined the basic components that are required by your project, you can make document creation easier by creating higher order functions that convert your data into markup elements.\n\n```Python\ndef create_unordered_list(*items: ElementType) -> ul:\n    \"\"\"Creates an unordered list from the received arguments.\"\"\"\n    return ul(\n        *(li(item, class_=\"fancy-list-item\", style=\"color:blue;\") for item in items),\n        class_=\"fancy-list\"\n    )\n```\n\nWhen everything is in place, a document can be created simply by instantiating the elements that make up the document. Notice that during element construction, positional arguments are treated as children elements and keyword arguments are treated as element attributes, allowing you to create documents using a markup-like syntax.\n\n```Python\ndocument = html(\n    head(title(\"Hello World!\")),\n    body(\n        p(code(\"markyp\"), \"HTML example.\", style=\"font-weight:bold;\"),\n        p(\"Creating lists is easy as\", style=\"color:blue;\"),\n        create_unordered_list(\"One\", p(\"Two\", style=\"font-style:italic;\"), \"Three\"),\n        style=\"font-size:20px\"\n    )\n)\n```\n\nAt this point, you have a Python object representing your document. The actual markup is created only when you convert this object into a string using either the `str()` method or the `markup` property of the element.\n\n```Python\nprint(document)\n```\n\n## Domain-specific `markyp` extensions\n\n`markyp` extensions should follow the `markyp-{domain-or-extension-name}` naming convention. Here is a list of domain-specific extensions:\n\n- `markyp-rss`: RSS 2 implementation at https://github.com/volfpeter/markyp-rss, contribution is welcome.\n- `markyp-html`: HTML implementation at https://github.com/volfpeter/markyp-html, contribution is welcome.\n- `markyp-highlightjs`: HTML code highlighting using `highlight.js` at https://github.com/volfpeter/markyp-highlightjs, contribution is welcome.markyp-highlightjs\n- `markyp-bootstrap4`: Bootstrap 4 implementation at https://github.com/volfpeter/markyp-bootstrap4, contribution is welcome.\n\nIf you have created an open source `markyp` extension, please let us know and we will include your project in this list.\n\n## Community guidelines\n\nIn general, please treat each other with respect and follow the below guidelines to interact with the project:\n\n- _Questions, feedback_: Open an issue with a `[Question] <issue-title>` title.\n- _Bug reports_: Open an issue with a `[Bug] <issue-title>` title, an adequate description of the bug, and a code snippet that reproduces the issue if possible.\n- _Feature requests and ideas_: Open an issue with an `[Enhancement] <issue-title>` title and a clear description of the enhancement proposal.\n\n## Contribution guidelines\n\nEvery form of contribution is welcome, including documentation improvements, tests, bug fixes, and feature implementations.\n\nPlease follow these guidelines to contribute to the project:\n\n- Make sure your changes match the documentation and coding style of the project, including [PEP 484](https://www.python.org/dev/peps/pep-0484/) type annotations.\n- `mypy` is used to type-check the codebase, submitted code should not produce typing errors. See [this page](http://mypy-lang.org/) for more information on `mypy`.\n- _Small_ fixes can be submitted simply by creating a pull request.\n- Non-trivial changes should have an associated [issue](#community-guidelines) in the issue tracker that commits must reference (typically by adding `#refs <issue-id>` to the end of commit messages).\n- Please write [tests](#testing) for the changes you make (if applicable).\n\nIf you have any questions about contributing to the project, please contact the project owner.\n\n## Testing\n\nAs mentioned in the [contribution guidelines](#contribution-guidelines), the project is type-checked using `mypy`, so first of all, the project must pass `mypy`'s static code analysis.\n\nThe project is tested using `pytest`. The chosen test layout is that tests are outside the application code, see [this page](https://docs.pytest.org/en/latest/goodpractices.html#tests-outside-application-code) for details on what it means in practice.\n\nIf `pytest` is installed, the test set can be executed using the `pytest test` command from within the project directory.\n\nIf `pytest-cov` is also installed, a test coverage report can be generated by executing `pytest test --cov markyp` from the root directory of the project.\n\n## License - MIT\n\nThe library is open-sourced under the conditions of the MIT [license](https://choosealicense.com/licenses/mit/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/volfpeter/markyp", "keywords": "markup generator utility xml html rss", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "markyp", "package_url": "https://pypi.org/project/markyp/", "platform": "", "project_url": "https://pypi.org/project/markyp/", "project_urls": {"Homepage": "https://github.com/volfpeter/markyp"}, "release_url": "https://pypi.org/project/markyp/0.1910.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python 3 tools for creating markup documents.", "version": "0.1910.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/volfpeter/markyp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3268e9e62d5913182443cef39747d9bb498edb14/68747470733a2f2f7472617669732d63692e6f72672f766f6c6670657465722f6d61726b79702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pepy.tech/project/markyp\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/928705050af3c167b21175a22810152569a9a325/68747470733a2f2f706570792e746563682f62616467652f6d61726b7970\"></a>\n<a href=\"https://pepy.tech/project/markyp/month\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/954ae76216ce0463455c45ef648f25fcc57dc55a/68747470733a2f2f706570792e746563682f62616467652f6d61726b79702f6d6f6e7468\"></a>\n<a href=\"https://pepy.tech/project/markyp/week\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba4dc69832b564a715d9bff5dd89956692c1d3c3/68747470733a2f2f706570792e746563682f62616467652f6d61726b79702f7765656b\"></a></p>\n<h1>markyp</h1>\n<p>Python 3 tools for creating markup documents.</p>\n<h2>Installation</h2>\n<p>The project is listed on the Python Package Index, it can be installed simply by executing <code>pip install markyp</code>.</p>\n<h2>General concepts</h2>\n<p>Element creation in <code>markyp</code> and its derivates usually works as follows:</p>\n<ul>\n<li>If an element can have children, then the positional arguments passed to the component become the children of the created element.</li>\n<li>If an element can have attributes, then keyword arguments that are not listed explicitly on the argument list (i.e. <code>**kwargs</code>) are turned into element attributes.</li>\n<li>Explicitly declared keyword arguments work as documented.</li>\n</ul>\n<p>The markup defined by the created elements can be obtained by converting to root element to string (<code>str()</code>) or by using the root element's <code>markup</code> property.</p>\n<h2>Getting started</h2>\n<p>Creating new <code>markyp</code> element types is typically as simple as deriving new classes with the right name from the base elements that are provided by the project. The following example shows the creation of some HTML elements:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">markyp</span> <span class=\"kn\">import</span> <span class=\"n\">ElementType</span>\n<span class=\"kn\">from</span> <span class=\"nn\">markyp.elements</span> <span class=\"kn\">import</span> <span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">StringElement</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">html</span><span class=\"p\">(</span><span class=\"n\">Element</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"&lt;!DOCTYPE html&gt;</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__str__</span><span class=\"p\">())</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">head</span><span class=\"p\">(</span><span class=\"n\">Element</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">body</span><span class=\"p\">(</span><span class=\"n\">Element</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">title</span><span class=\"p\">(</span><span class=\"n\">StringElement</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">p</span><span class=\"p\">(</span><span class=\"n\">Element</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">inline_children</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">code</span><span class=\"p\">(</span><span class=\"n\">StringElement</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ul</span><span class=\"p\">(</span><span class=\"n\">Element</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">li</span><span class=\"p\">(</span><span class=\"n\">Element</span><span class=\"p\">):</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n</pre>\n<p>Once you have defined the basic components that are required by your project, you can make document creation easier by creating higher order functions that convert your data into markup elements.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">create_unordered_list</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">ElementType</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ul</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Creates an unordered list from the received arguments.\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">ul</span><span class=\"p\">(</span>\n        <span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">\"fancy-list-item\"</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"color:blue;\"</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">),</span>\n        <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">\"fancy-list\"</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>When everything is in place, a document can be created simply by instantiating the elements that make up the document. Notice that during element construction, positional arguments are treated as children elements and keyword arguments are treated as element attributes, allowing you to create documents using a markup-like syntax.</p>\n<pre><span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"p\">(</span>\n    <span class=\"n\">head</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World!\"</span><span class=\"p\">)),</span>\n    <span class=\"n\">body</span><span class=\"p\">(</span>\n        <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">(</span><span class=\"s2\">\"markyp\"</span><span class=\"p\">),</span> <span class=\"s2\">\"HTML example.\"</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"font-weight:bold;\"</span><span class=\"p\">),</span>\n        <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s2\">\"Creating lists is easy as\"</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"color:blue;\"</span><span class=\"p\">),</span>\n        <span class=\"n\">create_unordered_list</span><span class=\"p\">(</span><span class=\"s2\">\"One\"</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s2\">\"Two\"</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"font-style:italic;\"</span><span class=\"p\">),</span> <span class=\"s2\">\"Three\"</span><span class=\"p\">),</span>\n        <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"font-size:20px\"</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p>At this point, you have a Python object representing your document. The actual markup is created only when you convert this object into a string using either the <code>str()</code> method or the <code>markup</code> property of the element.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span>\n</pre>\n<h2>Domain-specific <code>markyp</code> extensions</h2>\n<p><code>markyp</code> extensions should follow the <code>markyp-{domain-or-extension-name}</code> naming convention. Here is a list of domain-specific extensions:</p>\n<ul>\n<li><code>markyp-rss</code>: RSS 2 implementation at <a href=\"https://github.com/volfpeter/markyp-rss\" rel=\"nofollow\">https://github.com/volfpeter/markyp-rss</a>, contribution is welcome.</li>\n<li><code>markyp-html</code>: HTML implementation at <a href=\"https://github.com/volfpeter/markyp-html\" rel=\"nofollow\">https://github.com/volfpeter/markyp-html</a>, contribution is welcome.</li>\n<li><code>markyp-highlightjs</code>: HTML code highlighting using <code>highlight.js</code> at <a href=\"https://github.com/volfpeter/markyp-highlightjs\" rel=\"nofollow\">https://github.com/volfpeter/markyp-highlightjs</a>, contribution is welcome.markyp-highlightjs</li>\n<li><code>markyp-bootstrap4</code>: Bootstrap 4 implementation at <a href=\"https://github.com/volfpeter/markyp-bootstrap4\" rel=\"nofollow\">https://github.com/volfpeter/markyp-bootstrap4</a>, contribution is welcome.</li>\n</ul>\n<p>If you have created an open source <code>markyp</code> extension, please let us know and we will include your project in this list.</p>\n<h2>Community guidelines</h2>\n<p>In general, please treat each other with respect and follow the below guidelines to interact with the project:</p>\n<ul>\n<li><em>Questions, feedback</em>: Open an issue with a <code>[Question] &lt;issue-title&gt;</code> title.</li>\n<li><em>Bug reports</em>: Open an issue with a <code>[Bug] &lt;issue-title&gt;</code> title, an adequate description of the bug, and a code snippet that reproduces the issue if possible.</li>\n<li><em>Feature requests and ideas</em>: Open an issue with an <code>[Enhancement] &lt;issue-title&gt;</code> title and a clear description of the enhancement proposal.</li>\n</ul>\n<h2>Contribution guidelines</h2>\n<p>Every form of contribution is welcome, including documentation improvements, tests, bug fixes, and feature implementations.</p>\n<p>Please follow these guidelines to contribute to the project:</p>\n<ul>\n<li>Make sure your changes match the documentation and coding style of the project, including <a href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"nofollow\">PEP 484</a> type annotations.</li>\n<li><code>mypy</code> is used to type-check the codebase, submitted code should not produce typing errors. See <a href=\"http://mypy-lang.org/\" rel=\"nofollow\">this page</a> for more information on <code>mypy</code>.</li>\n<li><em>Small</em> fixes can be submitted simply by creating a pull request.</li>\n<li>Non-trivial changes should have an associated <a href=\"#community-guidelines\" rel=\"nofollow\">issue</a> in the issue tracker that commits must reference (typically by adding <code>#refs &lt;issue-id&gt;</code> to the end of commit messages).</li>\n<li>Please write <a href=\"#testing\" rel=\"nofollow\">tests</a> for the changes you make (if applicable).</li>\n</ul>\n<p>If you have any questions about contributing to the project, please contact the project owner.</p>\n<h2>Testing</h2>\n<p>As mentioned in the <a href=\"#contribution-guidelines\" rel=\"nofollow\">contribution guidelines</a>, the project is type-checked using <code>mypy</code>, so first of all, the project must pass <code>mypy</code>'s static code analysis.</p>\n<p>The project is tested using <code>pytest</code>. The chosen test layout is that tests are outside the application code, see <a href=\"https://docs.pytest.org/en/latest/goodpractices.html#tests-outside-application-code\" rel=\"nofollow\">this page</a> for details on what it means in practice.</p>\n<p>If <code>pytest</code> is installed, the test set can be executed using the <code>pytest test</code> command from within the project directory.</p>\n<p>If <code>pytest-cov</code> is also installed, a test coverage report can be generated by executing <code>pytest test --cov markyp</code> from the root directory of the project.</p>\n<h2>License - MIT</h2>\n<p>The library is open-sourced under the conditions of the MIT <a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">license</a>.</p>\n\n          </div>"}, "last_serial": 5972530, "releases": {"0.1904.0": [{"comment_text": "", "digests": {"md5": "9758ce4fc49c970cab731dca28a0378a", "sha256": "2462f536f39a5e41811cb3560150a30b4b618c311e010d692eb9c79b6085bef2"}, "downloads": -1, "filename": "markyp-0.1904.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9758ce4fc49c970cab731dca28a0378a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7817, "upload_time": "2019-04-15T20:34:33", "upload_time_iso_8601": "2019-04-15T20:34:33.531506Z", "url": "https://files.pythonhosted.org/packages/30/08/8b9be6ebbe3917047d69058d4fd66bebc6b931feb72684422f547e4964d3/markyp-0.1904.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86b04f97d92d6b8703e1e4d1c2fd8c38", "sha256": "a712be80334a6c880213ca4a11219720757a7e0905052008d430b91ecc940ab3"}, "downloads": -1, "filename": "markyp-0.1904.0.tar.gz", "has_sig": false, "md5_digest": "86b04f97d92d6b8703e1e4d1c2fd8c38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9179, "upload_time": "2019-04-15T20:34:35", "upload_time_iso_8601": "2019-04-15T20:34:35.672168Z", "url": "https://files.pythonhosted.org/packages/b8/39/36b2faf702c3554f784a10c7c07df59adf9a5f3b41de6b7565d73d3c14de/markyp-0.1904.0.tar.gz", "yanked": false}], "0.1905.0": [{"comment_text": "", "digests": {"md5": "a8236072e92bc02c50eac3bb39c99a16", "sha256": "0b9c0d08034f490708116d3524785ba129fc8fa3cbf7fec84c063e5712cb1117"}, "downloads": -1, "filename": "markyp-0.1905.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a8236072e92bc02c50eac3bb39c99a16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8160, "upload_time": "2019-05-06T21:12:26", "upload_time_iso_8601": "2019-05-06T21:12:26.757806Z", "url": "https://files.pythonhosted.org/packages/4c/3c/6a418accbe29f29fd190966df2f2a4497d6ddfcac9308e71f8b66cef40ab/markyp-0.1905.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10f60b32deb3d4369d99309456c2657d", "sha256": "e646c965a755ea9fc423e839a442272ccfe1ca23fe1f2ec29aab7349ec6a8af3"}, "downloads": -1, "filename": "markyp-0.1905.0.tar.gz", "has_sig": false, "md5_digest": "10f60b32deb3d4369d99309456c2657d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10310, "upload_time": "2019-05-06T21:12:29", "upload_time_iso_8601": "2019-05-06T21:12:29.219152Z", "url": "https://files.pythonhosted.org/packages/73/0b/6272c598892affcf516ce70a3e4ddc7dee6e8b85bf2e73f6f8c9a0077802/markyp-0.1905.0.tar.gz", "yanked": false}], "0.1905.1": [{"comment_text": "", "digests": {"md5": "7e09ee28a28f62908db3758017218a03", "sha256": "ef5204ee2cc24596f8d1395bb23f528772bd54908085422c0ebf3ac2e6afd32a"}, "downloads": -1, "filename": "markyp-0.1905.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e09ee28a28f62908db3758017218a03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8174, "upload_time": "2019-05-08T08:58:06", "upload_time_iso_8601": "2019-05-08T08:58:06.842405Z", "url": "https://files.pythonhosted.org/packages/83/3a/e49e180950bd7b6318e0c1f770cbb7fbb07bcd62dd6ebd18aadf6783e00f/markyp-0.1905.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a904d1cc91ec459529a628e68f14e55b", "sha256": "a74770cf7cbb795e482b76cc55ff95088f51e8bf5552a0edbcb8fc7c44e9d0ab"}, "downloads": -1, "filename": "markyp-0.1905.1.tar.gz", "has_sig": false, "md5_digest": "a904d1cc91ec459529a628e68f14e55b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10336, "upload_time": "2019-05-08T08:58:08", "upload_time_iso_8601": "2019-05-08T08:58:08.426781Z", "url": "https://files.pythonhosted.org/packages/ff/2c/f71311b84cf6946c2a1f85b6a10ceae42c449bcb58fc31bdf96a3c78f135/markyp-0.1905.1.tar.gz", "yanked": false}], "0.1906.0": [{"comment_text": "", "digests": {"md5": "f3a21d40a3d5248a55a66d574502ed75", "sha256": "54d6fc22a9d07f9e4d76e45ee68e2e05e82a5073f895721034add62388952153"}, "downloads": -1, "filename": "markyp-0.1906.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3a21d40a3d5248a55a66d574502ed75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8233, "upload_time": "2019-06-08T07:38:54", "upload_time_iso_8601": "2019-06-08T07:38:54.595734Z", "url": "https://files.pythonhosted.org/packages/c4/c0/c7f0708c0d7cde6b2cc9ef8d0d8c30df4613e7b13fefbb2b71c479c697f7/markyp-0.1906.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60cbf9efbb096cfaaef282f9eac4f71b", "sha256": "0d2f8557ef01833daf9ea030424fd5177b0706dd9dca48878e6d71c158fd0794"}, "downloads": -1, "filename": "markyp-0.1906.0.tar.gz", "has_sig": false, "md5_digest": "60cbf9efbb096cfaaef282f9eac4f71b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10424, "upload_time": "2019-06-08T07:39:16", "upload_time_iso_8601": "2019-06-08T07:39:16.214650Z", "url": "https://files.pythonhosted.org/packages/c2/19/57b1dfd0badd5cea8174ca29bbc85d2708a78b2a8508e695448c8a535b84/markyp-0.1906.0.tar.gz", "yanked": false}], "0.1909.0": [{"comment_text": "", "digests": {"md5": "63aa455833fde5ae095a2433222df046", "sha256": "8c548f90dd8ac75394b53ac7633ec08a41ff59365fb5171de10e0baf44aa9f43"}, "downloads": -1, "filename": "markyp-0.1909.0-py3-none-any.whl", "has_sig": false, "md5_digest": "63aa455833fde5ae095a2433222df046", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11091, "upload_time": "2019-09-16T08:30:42", "upload_time_iso_8601": "2019-09-16T08:30:42.024890Z", "url": "https://files.pythonhosted.org/packages/b1/cc/5296b0e508d3d6a94dcbfe0b14ef480d062bab9f941b4698cb3c15e5a232/markyp-0.1909.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc1aea9df01db2d96e786ad886439a86", "sha256": "1b41508bdb201ed670e70468fa3116e37398189ce11752df021c9a80300606b6"}, "downloads": -1, "filename": "markyp-0.1909.0.tar.gz", "has_sig": false, "md5_digest": "dc1aea9df01db2d96e786ad886439a86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15748, "upload_time": "2019-09-16T08:30:44", "upload_time_iso_8601": "2019-09-16T08:30:44.262868Z", "url": "https://files.pythonhosted.org/packages/73/38/66b626a6d03b02fd5155adff54fc3942636b212614a0f668195955b755f4/markyp-0.1909.0.tar.gz", "yanked": false}], "0.1910.0": [{"comment_text": "", "digests": {"md5": "e7b5e09ba72bf37db84c85885b1b6333", "sha256": "d36a0680507adbbb3a50a48204aca94ee04352b7bee1c9d2dda09130081fda05"}, "downloads": -1, "filename": "markyp-0.1910.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e7b5e09ba72bf37db84c85885b1b6333", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11091, "upload_time": "2019-10-14T17:47:35", "upload_time_iso_8601": "2019-10-14T17:47:35.360583Z", "url": "https://files.pythonhosted.org/packages/23/c5/8fee9b0179f86af98d2246035a4bc47cdd888c46657830656d324c51e275/markyp-0.1910.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "979466166a6ac08829162cd30a8410f3", "sha256": "f2073ad8bb550aadf81dc8473bbd5599748324c6a5be0ac95f00f7b21da49e2e"}, "downloads": -1, "filename": "markyp-0.1910.0.tar.gz", "has_sig": false, "md5_digest": "979466166a6ac08829162cd30a8410f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15751, "upload_time": "2019-10-14T17:47:37", "upload_time_iso_8601": "2019-10-14T17:47:37.554778Z", "url": "https://files.pythonhosted.org/packages/72/7a/9a3ddaec81ec4af2e24226c86629d32a79e0fc6c53174f5ed853848eedcf/markyp-0.1910.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7b5e09ba72bf37db84c85885b1b6333", "sha256": "d36a0680507adbbb3a50a48204aca94ee04352b7bee1c9d2dda09130081fda05"}, "downloads": -1, "filename": "markyp-0.1910.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e7b5e09ba72bf37db84c85885b1b6333", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11091, "upload_time": "2019-10-14T17:47:35", "upload_time_iso_8601": "2019-10-14T17:47:35.360583Z", "url": "https://files.pythonhosted.org/packages/23/c5/8fee9b0179f86af98d2246035a4bc47cdd888c46657830656d324c51e275/markyp-0.1910.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "979466166a6ac08829162cd30a8410f3", "sha256": "f2073ad8bb550aadf81dc8473bbd5599748324c6a5be0ac95f00f7b21da49e2e"}, "downloads": -1, "filename": "markyp-0.1910.0.tar.gz", "has_sig": false, "md5_digest": "979466166a6ac08829162cd30a8410f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15751, "upload_time": "2019-10-14T17:47:37", "upload_time_iso_8601": "2019-10-14T17:47:37.554778Z", "url": "https://files.pythonhosted.org/packages/72/7a/9a3ddaec81ec4af2e24226c86629d32a79e0fc6c53174f5ed853848eedcf/markyp-0.1910.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:39 2020"}