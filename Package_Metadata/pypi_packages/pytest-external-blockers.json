{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "pytest-external-blockers\r\n========================\r\n\r\n a pytest outcome for tests you\r\n dont run for external/environmental reason\r\n\r\n\r\nexamples of such reasons reasons are\r\n\r\n* lack of access to a bugtracker telling you what tests apply\r\n  for the current version of software under test\r\n* lack of access to a backend service providing essential details for the tests in question \r\n* issue in a bugtracker is unresolved\r\n* failure of the internet connection\r\n\r\n\r\n\r\n\r\ninstall\r\n-------\r\n\r\n::\r\n    $ pip install pytest-external-blockers\r\n\r\n\r\nuse\r\n---\r\n\r\n::\r\n    import os\r\n    import pytest\r\n    from .issues import get_tracker\r\n\r\n    pytestmark = pytest.mark.skipifif(\r\n        \"BUGTRACKER\" in os.environ,\r\n        reason=\"no bugtracker configured\")\r\n\r\n    @pytest.fixture(scope=\"session\")\r\n    def bugtracker():\r\n        try:\r\n            return get_tracker():\r\n        except Exception:\r\n            pytest.block(\"bugtracker unavailiable\")\r\n\r\n\r\n    @pytest.fixture(autouse=True)\r\n    def _block_unresolved(request, bugtracker):\r\n        issue = request.node.getmarker('issue')\r\n        if issue is not None:\r\n            for issue_id in issue.args:\r\n                if bugtracker.is_unresolved(issue_id)\r\n                    pytest.block(\r\n                        \"{issue_id} was not resolved\".format(issue_id))", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "pytest-external-blockers", "package_url": "https://pypi.org/project/pytest-external-blockers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pytest-external-blockers/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/pytest-external-blockers/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "a special outcome for tests that are blocked for external reasons", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            pytest-external-blockers\n<br>========================\n<br>\n<br> a pytest outcome for tests you\n<br> dont run for external/environmental reason\n<br>\n<br>\n<br>examples of such reasons reasons are\n<br>\n<br>* lack of access to a bugtracker telling you what tests apply\n<br>  for the current version of software under test\n<br>* lack of access to a backend service providing essential details for the tests in question \n<br>* issue in a bugtracker is unresolved\n<br>* failure of the internet connection\n<br>\n<br>\n<br>\n<br>\n<br>install\n<br>-------\n<br>\n<br>::\n<br>    $ pip install pytest-external-blockers\n<br>\n<br>\n<br>use\n<br>---\n<br>\n<br>::\n<br>    import os\n<br>    import pytest\n<br>    from .issues import get_tracker\n<br>\n<br>    pytestmark = pytest.mark.skipifif(\n<br>        \"BUGTRACKER\" in os.environ,\n<br>        reason=\"no bugtracker configured\")\n<br>\n<br>    @pytest.fixture(scope=\"session\")\n<br>    def bugtracker():\n<br>        try:\n<br>            return get_tracker():\n<br>        except Exception:\n<br>            pytest.block(\"bugtracker unavailiable\")\n<br>\n<br>\n<br>    @pytest.fixture(autouse=True)\n<br>    def _block_unresolved(request, bugtracker):\n<br>        issue = request.node.getmarker('issue')\n<br>        if issue is not None:\n<br>            for issue_id in issue.args:\n<br>                if bugtracker.is_unresolved(issue_id)\n<br>                    pytest.block(\n<br>                        \"{issue_id} was not resolved\".format(issue_id))\n          </div>"}, "last_serial": 2380161, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fef16a8dcf13ddee24510aadef6dbd82", "sha256": "c740732681de8cbc882c15b61550aeecc474d1a3d5efcaffda4ebcbe1cfd9cf0"}, "downloads": -1, "filename": "pytest-external-blockers-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fef16a8dcf13ddee24510aadef6dbd82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4894, "upload_time": "2016-10-04T16:56:46", "upload_time_iso_8601": "2016-10-04T16:56:46.791502Z", "url": "https://files.pythonhosted.org/packages/6f/ca/bbf2561fa4f2dfab2e549da48aaee83e386c0500288bee34392d3ad722b2/pytest-external-blockers-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fef16a8dcf13ddee24510aadef6dbd82", "sha256": "c740732681de8cbc882c15b61550aeecc474d1a3d5efcaffda4ebcbe1cfd9cf0"}, "downloads": -1, "filename": "pytest-external-blockers-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fef16a8dcf13ddee24510aadef6dbd82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4894, "upload_time": "2016-10-04T16:56:46", "upload_time_iso_8601": "2016-10-04T16:56:46.791502Z", "url": "https://files.pythonhosted.org/packages/6f/ca/bbf2561fa4f2dfab2e549da48aaee83e386c0500288bee34392d3ad722b2/pytest-external-blockers-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:10 2020"}