{"info": {"author": "Ilya Semenov", "author_email": "ilya@semenov.co", "bugtrack_url": null, "classifiers": [], "description": "django-multiforeignkey\n======================\n\nDjango ForeignKey that links to one of several specified models:\n\n.. code:: python\n\n\tclass Comment(models.Model):\n\t\tuser = models.ForeignKey(User)\n\t\ttext = models.TextField()\n\n\t\t# users may leave comments for blog posts, articles or votings\n\t\tobject = MultiForeignKey(Post, Article, Voting)\n\n\nUnlike ``GenericForeignKey``, the field uses native database foreign keys and provides maximum speed and reliability.\n\n\nWARNING\n=======\n\n**This is a preliminary alpha version which most probably doesn't fully work as advertised. I had to publish it unfinished because I had to use it in my project.**\n\n\nInstallation\n============\n\n::\n\n\tpip install django-multiforeignkey\n\n\nUsage\n=====\n\nAdd ``multiforeignkey`` to ``INSTALLED_APPS``:\n\n.. code:: python\n\n\t# settings.py\n\n\tINSTALLED_APPS = [\n\t\t...\n\t\t'multiforeignkey',\n\t]\n\n\nAdd a field to your models:\n\n.. code:: python\n\n\t# comments/models.py\n\n\tfrom multiforeignkey.models import MultiForeignKey\n\n\tclass Comment(models.Model):\n\t\tuser = models.ForeignKey(User)\n\t\ttext = models.TextField()\n\n\t\t# users may leave comments for blog posts, articles or votings\n\t\tobject = MultiForeignKey(Post, Article, Voting)\n\n\nCreate the corresponding database tables:\n\n.. code:: bash\n\n\t./manage.py makemigrations && ./manage.py migrate\n\n\nUse the new field as if it were a real database field:\n\n.. code:: python\n\n\tcomment = Comment.objects.filter(object=post)\n\tassert comment.object is post\n\tcomment.object = voting\n\tassert comment.object is voting\n\tcomment.save()\n\n\nor use specific subfields:\n\n.. code:: python\n\n\tcomment = Comment.objects.filter(post=post)\n\tassert comment.post is post\n\tassert comment.article is None\n\tassert comment.voting is None\n\tcomment.voting = voting\n\tassert comment.post is None\n\tassert comment.article is None\n\tassert comment.voting is voting\n\tcomment.save()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/IlyaSemenov/django-multiforeignkey", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-multiforeignkey", "package_url": "https://pypi.org/project/django-multiforeignkey/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-multiforeignkey/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/IlyaSemenov/django-multiforeignkey"}, "release_url": "https://pypi.org/project/django-multiforeignkey/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Django ForeignKey that links to one of several specified models", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-multiforeignkey\">\n<h2>django-multiforeignkey</h2>\n<p>Django ForeignKey that links to one of several specified models:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Comment</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># users may leave comments for blog posts, articles or votings</span>\n        <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"n\">MultiForeignKey</span><span class=\"p\">(</span><span class=\"n\">Post</span><span class=\"p\">,</span> <span class=\"n\">Article</span><span class=\"p\">,</span> <span class=\"n\">Voting</span><span class=\"p\">)</span>\n</pre>\n<p>Unlike <tt>GenericForeignKey</tt>, the field uses native database foreign keys and provides maximum speed and reliability.</p>\n</div>\n<div id=\"warning\">\n<h2>WARNING</h2>\n<p><strong>This is a preliminary alpha version which most probably doesn\u2019t fully work as advertised. I had to publish it unfinished because I had to use it in my project.</strong></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-multiforeignkey\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Add <tt>multiforeignkey</tt> to <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"c1\"># settings.py</span>\n\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"o\">...</span>\n        <span class=\"s1\">'multiforeignkey'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Add a field to your models:</p>\n<pre><span class=\"c1\"># comments/models.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">multiforeignkey.models</span> <span class=\"kn\">import</span> <span class=\"n\">MultiForeignKey</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Comment</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># users may leave comments for blog posts, articles or votings</span>\n        <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"n\">MultiForeignKey</span><span class=\"p\">(</span><span class=\"n\">Post</span><span class=\"p\">,</span> <span class=\"n\">Article</span><span class=\"p\">,</span> <span class=\"n\">Voting</span><span class=\"p\">)</span>\n</pre>\n<p>Create the corresponding database tables:</p>\n<pre>./manage.py makemigrations <span class=\"o\">&amp;&amp;</span> ./manage.py migrate\n</pre>\n<p>Use the new field as if it were a real database field:</p>\n<pre><span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"o\">=</span><span class=\"n\">post</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">object</span> <span class=\"ow\">is</span> <span class=\"n\">post</span>\n<span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">object</span> <span class=\"o\">=</span> <span class=\"n\">voting</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">object</span> <span class=\"ow\">is</span> <span class=\"n\">voting</span>\n<span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>or use specific subfields:</p>\n<pre><span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">post</span><span class=\"o\">=</span><span class=\"n\">post</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">post</span> <span class=\"ow\">is</span> <span class=\"n\">post</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">article</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">voting</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n<span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">voting</span> <span class=\"o\">=</span> <span class=\"n\">voting</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">post</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">article</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">voting</span> <span class=\"ow\">is</span> <span class=\"n\">voting</span>\n<span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2344322, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4fcd25f22b0b09606fe8b64d28d1d576", "sha256": "dd30324a8d65afa5e7d760d2af099f8d7d438fbe3840850642f36b231b9d40cf"}, "downloads": -1, "filename": "django-multiforeignkey-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4fcd25f22b0b09606fe8b64d28d1d576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3096, "upload_time": "2016-08-10T14:31:58", "upload_time_iso_8601": "2016-08-10T14:31:58.827729Z", "url": "https://files.pythonhosted.org/packages/dc/95/ac1d40b2485ceac2b394f78c8dd0302994989456e5a1e1b99d5965715240/django-multiforeignkey-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "634c8e009305adae2caca7b2f26d90cf", "sha256": "930d4c22dac2ae5bc0bf2e99d072d0039834e4e0c750463e29f35a7f792d3ee9"}, "downloads": -1, "filename": "django-multiforeignkey-0.0.2.tar.gz", "has_sig": false, "md5_digest": "634c8e009305adae2caca7b2f26d90cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3175, "upload_time": "2016-09-15T14:05:47", "upload_time_iso_8601": "2016-09-15T14:05:47.700879Z", "url": "https://files.pythonhosted.org/packages/9b/67/104c1b431a1b6b813ed78c343097261d4052700b6804efa57f18cec9e594/django-multiforeignkey-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "634c8e009305adae2caca7b2f26d90cf", "sha256": "930d4c22dac2ae5bc0bf2e99d072d0039834e4e0c750463e29f35a7f792d3ee9"}, "downloads": -1, "filename": "django-multiforeignkey-0.0.2.tar.gz", "has_sig": false, "md5_digest": "634c8e009305adae2caca7b2f26d90cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3175, "upload_time": "2016-09-15T14:05:47", "upload_time_iso_8601": "2016-09-15T14:05:47.700879Z", "url": "https://files.pythonhosted.org/packages/9b/67/104c1b431a1b6b813ed78c343097261d4052700b6804efa57f18cec9e594/django-multiforeignkey-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:49 2020"}