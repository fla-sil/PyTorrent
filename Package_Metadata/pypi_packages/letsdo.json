{"info": {"author": "Carlo Lobrano", "author_email": "c.lobrano@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Topic :: Utilities"], "description": "[![Snap Status](https://build.snapcraft.io/badge/clobrano/letsdo.svg)](https://build.snapcraft.io/user/clobrano/letsdo)\n[![PyPI version](https://badge.fury.io/py/letsdo.svg)](https://badge.fury.io/py/letsdo)\n[![Build Status](https://travis-ci.org/clobrano/letsdo.svg?branch=master)](https://travis-ci.org/clobrano/letsdo)\n# Letsdo, the CLI time-tracker\n\nLetsdo helps you to be more focused and productive, tracking your TODO and the time you spend working on them.\n\n# Features\n\nHave a look at the **help** message:\n\n```\n$ letsdo\nUsage:\n    lets see    [todo|all|today|yesterday] [--detailed|--day-by-day] [--ascii] [<pattern>] [--no-color]\n    lets do     [--time=<time>] [<name>...] [--no-color]\n    lets stop   [--time=<time>] [--no-color]\n    lets goto   [<newtask>...] [--no-color]\n    lets cancel [--no-color]\n    lets edit\n    lets config data.directory <fullpath>\n    lets config todo.file      <fullpath>\n    lets config todo.start     <tag>\n    lets config todo.stop      <tag>\n    lets config autocomplete\n```\n\nFirst of all, we do not want to waste time typing too much. **Letsdo is the name of the package** and you can use it as well **as command line interface**, but all the interface is designed to be as informal as possible, so **you are encouraged to use lets instead**. Said that, when you do not know what to do, just write **lets see**, this command shows the current status of your task, whether you're doing something or not\n\n```\n$ lets see\n```\n\nWhen you're ready to start with something just type **lets do** followed by a short description. **Contexts**, and **Projects** are supported in form of words starting with **@** sign, or **+** sign respectively. With this configuration there isn't much difference between contexts and projects and other words, but if you're keen to install another package named **Raffaello**, we can then enable **colors**\n\n```\n$ pip install raffaello\n$ export LETSDO_COLOR=1\n$ lets see\n```\n\nYou can **edit** the current task's name or starting time, **cancel** it or **stop** it. Once stopped, the task is saved in your **history**, that by default is located under your HOME directory in a file called 'letsdo-data'.\n\nDon't you like the default location, let's have a look at the **config** sub-command:\n\n- **data.directory** is the preferred location for both history and current task's data. You can share your work using a file sharing service.\n\ne.g.\n\n```\n$ lets config data.directory ~/Dropbox\n```\n\nLet's see now the history: you can rapidly have a look at **today** and **yesterday** work done by typing:\n\n```\n$ lets see today\n$ lets see yesterday\n```\n\nIf you want to see the work done in another date, just write the date:\n\n```\nlets see 2017-07-13\n```\n\na partial date will do as well, just keep the same order: Year first, then Month and Day\n\n```\nlets see 17-07-13\n```\n\nyou can even use only '07-13' if you have not yet tracked data in different years.\n\nThe same way, you can look at all the work done in a particular month:\n\ne.g in July 2017\n\n```\nlets see 17-07\n```\n\nor **all** your tasks:\n\n```\nlets see all\n```\n\nor again, a specific project or all the tasks that share a pattern:\n\n```\nlets see +letsdo\n```\n\nAs you can see, tasks are reported along with an ID. That's because I'm not happy with typing too much.\nTo start again an older task, use the ID:\n\n```\nlets do 10\n```\n\nor if you just one to start again the **last** task you stopped\n\n```\nlets do last\n```\n\nDo you switch often among tasks? Do not need to stop and start again, just **goto** using description or ID again:\n\n```\nlets goto new project\nlets goto 3\n```\n\nFinally, you can configure **autocompletion** to let Letsdo suggest your flags, contexts and projects' names, type **lets config autocomplete** and follow the instructions.\n\n# Advanced usage\n\nWell, not that advanced. Everybody has a todo list, so letsdo can read it\n\n```\nlets config todo.file ~/todo.txt\nlets see todo\n```\n\nIf you have different stuff in your todo.txt file, just provide an header to the list and configure letsdo to look for it\n\n```\nlets config todo.start todos\nlets see todo\n```\n\nif you don't provide a todo.stop, Letsdo will stop reading at the first blank line.\n\n# Licence\nLetsdo is release under the [MIT](https://opensource.org/licenses/MIT) license. See LICENSE file for more details.\n\n\n# Contributions\nI am really happy to consider any PR that can make Letsdo better.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/clobrano/letsdo", "keywords": "productivity,GTD,time tracker", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "letsdo", "package_url": "https://pypi.org/project/letsdo/", "platform": "", "project_url": "https://pypi.org/project/letsdo/", "project_urls": {"Homepage": "https://github.com/clobrano/letsdo"}, "release_url": "https://pypi.org/project/letsdo/0.6.2/", "requires_dist": ["docopt", "PyYaml", "terminaltables", "parsedatetime"], "requires_python": "", "summary": "Time tracker for Command Line", "version": "0.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Snap Status](https://build.snapcraft.io/badge/clobrano/letsdo.svg)](https://build.snapcraft.io/user/clobrano/letsdo)<br>[![PyPI version](https://badge.fury.io/py/letsdo.svg)](https://badge.fury.io/py/letsdo)<br>[![Build Status](https://travis-ci.org/clobrano/letsdo.svg?branch=master)](https://travis-ci.org/clobrano/letsdo)<br># Letsdo, the CLI time-tracker<br><br>Letsdo helps you to be more focused and productive, tracking your TODO and the time you spend working on them.<br><br># Features<br><br>Have a look at the **help** message:<br><br>```<br>$ letsdo<br>Usage:<br>    lets see    [todo|all|today|yesterday] [--detailed|--day-by-day] [--ascii] [&lt;pattern&gt;] [--no-color]<br>    lets do     [--time=&lt;time&gt;] [&lt;name&gt;...] [--no-color]<br>    lets stop   [--time=&lt;time&gt;] [--no-color]<br>    lets goto   [&lt;newtask&gt;...] [--no-color]<br>    lets cancel [--no-color]<br>    lets edit<br>    lets config data.directory &lt;fullpath&gt;<br>    lets config todo.file      &lt;fullpath&gt;<br>    lets config todo.start     &lt;tag&gt;<br>    lets config todo.stop      &lt;tag&gt;<br>    lets config autocomplete<br>```<br><br>First of all, we do not want to waste time typing too much. **Letsdo is the name of the package** and you can use it as well **as command line interface**, but all the interface is designed to be as informal as possible, so **you are encouraged to use lets instead**. Said that, when you do not know what to do, just write **lets see**, this command shows the current status of your task, whether you're doing something or not<br><br>```<br>$ lets see<br>```<br><br>When you're ready to start with something just type **lets do** followed by a short description. **Contexts**, and **Projects** are supported in form of words starting with **@** sign, or **+** sign respectively. With this configuration there isn't much difference between contexts and projects and other words, but if you're keen to install another package named **Raffaello**, we can then enable **colors**<br><br>```<br>$ pip install raffaello<br>$ export LETSDO_COLOR=1<br>$ lets see<br>```<br><br>You can **edit** the current task's name or starting time, **cancel** it or **stop** it. Once stopped, the task is saved in your **history**, that by default is located under your HOME directory in a file called 'letsdo-data'.<br><br>Don't you like the default location, let's have a look at the **config** sub-command:<br><br>- **data.directory** is the preferred location for both history and current task's data. You can share your work using a file sharing service.<br><br>e.g.<br><br>```<br>$ lets config data.directory ~/Dropbox<br>```<br><br>Let's see now the history: you can rapidly have a look at **today** and **yesterday** work done by typing:<br><br>```<br>$ lets see today<br>$ lets see yesterday<br>```<br><br>If you want to see the work done in another date, just write the date:<br><br>```<br>lets see 2017-07-13<br>```<br><br>a partial date will do as well, just keep the same order: Year first, then Month and Day<br><br>```<br>lets see 17-07-13<br>```<br><br>you can even use only '07-13' if you have not yet tracked data in different years.<br><br>The same way, you can look at all the work done in a particular month:<br><br>e.g in July 2017<br><br>```<br>lets see 17-07<br>```<br><br>or **all** your tasks:<br><br>```<br>lets see all<br>```<br><br>or again, a specific project or all the tasks that share a pattern:<br><br>```<br>lets see +letsdo<br>```<br><br>As you can see, tasks are reported along with an ID. That's because I'm not happy with typing too much.<br>To start again an older task, use the ID:<br><br>```<br>lets do 10<br>```<br><br>or if you just one to start again the **last** task you stopped<br><br>```<br>lets do last<br>```<br><br>Do you switch often among tasks? Do not need to stop and start again, just **goto** using description or ID again:<br><br>```<br>lets goto new project<br>lets goto 3<br>```<br><br>Finally, you can configure **autocompletion** to let Letsdo suggest your flags, contexts and projects' names, type **lets config autocomplete** and follow the instructions.<br><br># Advanced usage<br><br>Well, not that advanced. Everybody has a todo list, so letsdo can read it<br><br>```<br>lets config todo.file ~/todo.txt<br>lets see todo<br>```<br><br>If you have different stuff in your todo.txt file, just provide an header to the list and configure letsdo to look for it<br><br>```<br>lets config todo.start todos<br>lets see todo<br>```<br><br>if you don't provide a todo.stop, Letsdo will stop reading at the first blank line.<br><br># Licence<br>Letsdo is release under the [MIT](https://opensource.org/licenses/MIT) license. See LICENSE file for more details.<br><br><br># Contributions<br>I am really happy to consider any PR that can make Letsdo better.<br><br><br>\n          </div>"}, "last_serial": 4947423, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "84665c1834f982315a3da71ffcce70cd", "sha256": "8d1976b8c464b14e6ef34c7aaa0b2d650312f0a12b4c5c1c0aa6c1ae359b7962"}, "downloads": -1, "filename": "letsdo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "84665c1834f982315a3da71ffcce70cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3401, "upload_time": "2016-11-04T11:34:03", "upload_time_iso_8601": "2016-11-04T11:34:03.314147Z", "url": "https://files.pythonhosted.org/packages/d9/d0/8d14f59f4b862a85b04f6808a813707b8a57402e5daaa987314da715fbe0/letsdo-0.1.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "a619950d6c6a6a9b1c95ee642809be01", "sha256": "5afdb9295ed60bb65776dd60b4fe97647198b1d31b5554ad3e392f0931e663aa"}, "downloads": -1, "filename": "letsdo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a619950d6c6a6a9b1c95ee642809be01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3911, "upload_time": "2016-11-07T13:38:35", "upload_time_iso_8601": "2016-11-07T13:38:35.350599Z", "url": "https://files.pythonhosted.org/packages/d5/51/4b659b198bff542eef48ce80f4430285802b3192615d6072d74b44afaffe/letsdo-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d96c1e66ceab5d56ce873474a5cb8dc2", "sha256": "3cc0196027420b908eb458842aecd04b8ec48b5becb1c27ca72131e2bc9c3966"}, "downloads": -1, "filename": "letsdo-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d96c1e66ceab5d56ce873474a5cb8dc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6141, "upload_time": "2016-11-14T16:24:29", "upload_time_iso_8601": "2016-11-14T16:24:29.625572Z", "url": "https://files.pythonhosted.org/packages/e7/f0/a7257f18f9cac2cfcab5e56d60d808bb3c8092723bbbae5ced6dbf0db6fd/letsdo-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "fcff0dfda30fc8195ac9d6fe94dd4192", "sha256": "e1c85dbfbcf0afea3377347c6484c0818e8afd73057ed1788824e7fd7ba4618f"}, "downloads": -1, "filename": "letsdo-0.3.1.tar.gz", "has_sig": false, "md5_digest": "fcff0dfda30fc8195ac9d6fe94dd4192", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6779, "upload_time": "2016-11-15T11:04:39", "upload_time_iso_8601": "2016-11-15T11:04:39.662183Z", "url": "https://files.pythonhosted.org/packages/d2/40/635f9ec7f0ae63e62b71c24ed5b1d682b648cb94e7d88a534860590f403b/letsdo-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "5ae42eda6ab4c2bb4989162bf041641c", "sha256": "bd05f56aeef5ab293a33b0893c4e9fcd75942bf62c6ab3e3989ef56604eca6a2"}, "downloads": -1, "filename": "letsdo-0.3.2.tar.gz", "has_sig": false, "md5_digest": "5ae42eda6ab4c2bb4989162bf041641c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6735, "upload_time": "2016-11-15T12:53:49", "upload_time_iso_8601": "2016-11-15T12:53:49.338485Z", "url": "https://files.pythonhosted.org/packages/a6/78/086fb5665661f8d5f6be4b07980ad1c24f28e6dbe73382205a3a08838253/letsdo-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "1c7763c558673dd9b0d87db2577a3a83", "sha256": "b23d708b49098e2f22107dd6af623d8cfa4175663ee1502c0bd8bb312267ad79"}, "downloads": -1, "filename": "letsdo-0.3.3.tar.gz", "has_sig": false, "md5_digest": "1c7763c558673dd9b0d87db2577a3a83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7088, "upload_time": "2016-11-22T13:22:00", "upload_time_iso_8601": "2016-11-22T13:22:00.702527Z", "url": "https://files.pythonhosted.org/packages/d8/64/ecf28b247980aa13558321d710de7a6186234d7b46b9130e06cb1ec7dbe2/letsdo-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "425739a318dbc091d59490ed65afdc95", "sha256": "f07eb7fb8856032be835c9ee55339a6cf1adb4ea203f341b23c3daefd2660ff8"}, "downloads": -1, "filename": "letsdo-0.3.4.tar.gz", "has_sig": false, "md5_digest": "425739a318dbc091d59490ed65afdc95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7076, "upload_time": "2016-11-24T09:06:12", "upload_time_iso_8601": "2016-11-24T09:06:12.442766Z", "url": "https://files.pythonhosted.org/packages/ad/4d/90a632d94b9ceed85fd08e35b9540258df13f52ece8422834ed40f11aa94/letsdo-0.3.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "bd752e185c7e1eff08949a15de507d2d", "sha256": "01e78aa714192a7bcae8cca4cec29f3ec9304717af39943da716f9f03cc61274"}, "downloads": -1, "filename": "letsdo-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd752e185c7e1eff08949a15de507d2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25651, "upload_time": "2019-02-27T11:53:22", "upload_time_iso_8601": "2019-02-27T11:53:22.376244Z", "url": "https://files.pythonhosted.org/packages/db/0b/d10a7c775764b784fcb59ed0bba8a2f9cd77c7647efc5c13fe64cd996747/letsdo-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cb562b141a5000ee03e7919cc2449d7", "sha256": "dc9e6d25fcc5316294c20148aa06d12d3ddc3eefeb395d7f12dac4ae8963b202"}, "downloads": -1, "filename": "letsdo-0.6.0.tar.gz", "has_sig": false, "md5_digest": "5cb562b141a5000ee03e7919cc2449d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14283, "upload_time": "2019-02-27T11:53:23", "upload_time_iso_8601": "2019-02-27T11:53:23.733763Z", "url": "https://files.pythonhosted.org/packages/4e/49/1d45baf2f86c2e9627de87b9c067ca6f0c173373033857e43e36cebd253c/letsdo-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "aa2dfbc3dad1d7979dac176bedf297a5", "sha256": "f5072f142aa5c4b129edf7a1e94eeac017710ee8722ffe5f6e200624a31e1769"}, "downloads": -1, "filename": "letsdo-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa2dfbc3dad1d7979dac176bedf297a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25653, "upload_time": "2019-03-13T13:19:44", "upload_time_iso_8601": "2019-03-13T13:19:44.407415Z", "url": "https://files.pythonhosted.org/packages/e3/15/a3c267a6f390b8263632625ae928465f4886c16d211a31ab709cbf55dad3/letsdo-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99f04e60f1fcc3bbe81597e7c4f6a691", "sha256": "bcf49a45ef35e0a631c5794e52d6a38ce8e660adde0c1da2bd214d4555204edc"}, "downloads": -1, "filename": "letsdo-0.6.1.tar.gz", "has_sig": false, "md5_digest": "99f04e60f1fcc3bbe81597e7c4f6a691", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14304, "upload_time": "2019-03-13T13:19:46", "upload_time_iso_8601": "2019-03-13T13:19:46.034277Z", "url": "https://files.pythonhosted.org/packages/5f/52/107217dc43466957889267e865d89f2e58a07263b7d9043bb79282186d07/letsdo-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "35942f029ae181998ac3c0e50e2de8f6", "sha256": "93466843f22922f4bf1ab62460cb1fe8de7c76ffb9d5323ae6c44209bb8bc6b3"}, "downloads": -1, "filename": "letsdo-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "35942f029ae181998ac3c0e50e2de8f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25659, "upload_time": "2019-03-16T11:58:11", "upload_time_iso_8601": "2019-03-16T11:58:11.424000Z", "url": "https://files.pythonhosted.org/packages/03/b0/6ec7382201aa4702bb29fca1b3a827e1f6ae220072872f370b564b655c09/letsdo-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df4eedb6de93adf72a3b84c23e333408", "sha256": "d8b0bf620428165fe164259151c7e72343c12306e505d6fb4e3bd2ab55be942d"}, "downloads": -1, "filename": "letsdo-0.6.2.tar.gz", "has_sig": false, "md5_digest": "df4eedb6de93adf72a3b84c23e333408", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14350, "upload_time": "2019-03-16T11:58:13", "upload_time_iso_8601": "2019-03-16T11:58:13.049570Z", "url": "https://files.pythonhosted.org/packages/bb/aa/6d1d0c480866a08b12832ce3c64875031351777d7c41dcbb8847cd7e6334/letsdo-0.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35942f029ae181998ac3c0e50e2de8f6", "sha256": "93466843f22922f4bf1ab62460cb1fe8de7c76ffb9d5323ae6c44209bb8bc6b3"}, "downloads": -1, "filename": "letsdo-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "35942f029ae181998ac3c0e50e2de8f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25659, "upload_time": "2019-03-16T11:58:11", "upload_time_iso_8601": "2019-03-16T11:58:11.424000Z", "url": "https://files.pythonhosted.org/packages/03/b0/6ec7382201aa4702bb29fca1b3a827e1f6ae220072872f370b564b655c09/letsdo-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df4eedb6de93adf72a3b84c23e333408", "sha256": "d8b0bf620428165fe164259151c7e72343c12306e505d6fb4e3bd2ab55be942d"}, "downloads": -1, "filename": "letsdo-0.6.2.tar.gz", "has_sig": false, "md5_digest": "df4eedb6de93adf72a3b84c23e333408", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14350, "upload_time": "2019-03-16T11:58:13", "upload_time_iso_8601": "2019-03-16T11:58:13.049570Z", "url": "https://files.pythonhosted.org/packages/bb/aa/6d1d0c480866a08b12832ce3c64875031351777d7c41dcbb8847cd7e6334/letsdo-0.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:54 2020"}