{"info": {"author": "James Mills", "author_email": "James Mills, prologic at shortcircuit dot net dot au", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": ".. _docker: http://docker.com/\n.. _dotCloud: http://dotcloud.com/\n.. _hipache: https://github.com/hipache/hipache\n.. _autodock: https://github.com/prologic/autodock\n.. _autodock-cron: https://github.com/prologic/autodock\n.. _autodock-logger: https://github.com/prologic/autodock-logger\n.. _autodock-hipache: https://github.com/prologic/autodock-hipache\n\n\nautodock\n========\n\n`autodock`_ is a Daemon for Docker Automation.\n\nautodock is MIT licensed.\n\nInstallation\n------------\n\nEither pull the automatically updated `Docker`_ image::\n    \n    $ docker pull prologic/autodock\n\nOr install from the development repository::\n    \n    $ git clone https://github.com/prologic/autodock.git\n    $ cd autodock\n    $ pip install -r requirements.txt\n\n\nPlugins\n-------\n\nautodock comes with a number of plugins where each piece of functionality is\nprovided by a separate plugin. Each plugin is \"linked\" to autodock to receive\nDocker events and issue new Docker API commands. The following list is a list\nof the currently available plugins for production use:\n\n- `autodock-cron`_      -- Provides a Cron-like scheduler for Containers\n- `autodock-logger`_    -- Logs Dockers Events\n- `autodock-hipache`_   -- Automatically registers virtualhosts with `hipache`_\n\n\nExample #1 -- Logging Docker Events\n-----------------------------------\n\n.. note:: See: `autodock Logger plugin <http://github.com/prologic/autodock-logger>`_\n\nStart the daemon::\n    \n    $ docker run -d -v /var/run/docker.sock:/var/run/docker.sock --name autodock:autodock prologic/autodock\n\nLink and start an autodock plugin::\n    \n    $ docker run -i -t --link autodock prologic/autodock-logger\n\nNow whenever you start a new container autodock will listen for Docker events.\nThe ``autodock-logger`` plugin will log all Docker Events received by autodock.\n\n\nExample #2 -- Automatic Virtual Hosting with hipache\n----------------------------------------------------\n\n.. note:: See `autodock Hipache plugin <http://github.com/prologic/autodock-hipache>`_\n\nStart the daemon::\n    \n    $ docker run -d --name autodock prologic/autodock\n\nLink and start an autodock plugin::\n    \n    $ docker run -d --link autodock prologic/autodock-hipache\n\nNow whenever you start a new container autodock will listen for Docker events\nand discover containers that have been started. The ``autodock-hipache`` plugin\nwill specifically listen for starting containers that have a ``VIRTUALHOST``\nenvironment variable and reconfigure the running ``hipache`` container.\n\nStart a \"Hello World\" Web Application::\n    \n    $ docker run -d -e VIRTUALHOST=hello.local prologic/hello\n\nNow assuming you had ``hello.local`` configured in your ``/etc/hosts``\npointing to your ``hipache`` container you can now visit http://hello.local/\n\n::\n    \n    echo \"127.0.0.1 hello.local\" >> /etc/hosts\n    curl -q -o - http://hello.local/\n    Hello World!\n\n.. note:: This method of hosting and managing webapps and websites is in production deployments and talked about in more detail in the post `A Docker-based mini-PaaS <http://shortcircuit.net.au/~prologic/blog/article/2015/03/24/a-docker-based-mini-paas/>`_.\n\n\nExample #3 -- Cron-like Scheduling of Containers\n------------------------------------------------\n\n.. note:: See `autodock Cron plugin <http://github.com/prologic/autodock-cron>`_\n\nStart the daemon::\n    \n    $ docker run -d --name autodock prologic/autodock\n\nLink and start an autodock plugin::\n    \n    $ docker run -d --link autodock prologic/autodock-cron\n\nNow whenever you create a new container autodock will listen for Docker events\nand discover containers that have been created. The ``autodock-cron`` plugin\nwill specifically listen for created containers that have a ``CRON``\nenvironment variable and schedule a job based on the cron expression supplied\nand re-run that container when its scheduled has triggered.\n\nStart a \"Hello\" Busybox Container::\n    \n    $ docker run -i -t --name hello busybox sh -c \"echo Hello\"\n\nAfter about three minutes or so you should see the following in the logs::\n    \n    $ docker logs hello\n    Hello\n    Hello\n    Hello", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/prologic/autodock/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/prologic/autodock", "keywords": "docker automation daemon", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "autodock", "package_url": "https://pypi.org/project/autodock/", "platform": "POSIX", "project_url": "https://pypi.org/project/autodock/", "project_urls": {"Download": "https://github.com/prologic/autodock/archive/master.zip", "Homepage": "https://github.com/prologic/autodock"}, "release_url": "https://pypi.org/project/autodock/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Daemon for Docker Automation", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/prologic/autodock\" rel=\"nofollow\">autodock</a> is a Daemon for Docker Automation.</p>\n<p>autodock is MIT licensed.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Either pull the automatically updated <a href=\"http://docker.com/\" rel=\"nofollow\">Docker</a> image:</p>\n<pre>$ docker pull prologic/autodock\n</pre>\n<p>Or install from the development repository:</p>\n<pre>$ git clone https://github.com/prologic/autodock.git\n$ cd autodock\n$ pip install -r requirements.txt\n</pre>\n</div>\n<div id=\"plugins\">\n<h2>Plugins</h2>\n<p>autodock comes with a number of plugins where each piece of functionality is\nprovided by a separate plugin. Each plugin is \u201clinked\u201d to autodock to receive\nDocker events and issue new Docker API commands. The following list is a list\nof the currently available plugins for production use:</p>\n<ul>\n<li><a href=\"https://github.com/prologic/autodock\" rel=\"nofollow\">autodock-cron</a>      \u2013 Provides a Cron-like scheduler for Containers</li>\n<li><a href=\"https://github.com/prologic/autodock-logger\" rel=\"nofollow\">autodock-logger</a>    \u2013 Logs Dockers Events</li>\n<li><a href=\"https://github.com/prologic/autodock-hipache\" rel=\"nofollow\">autodock-hipache</a>   \u2013 Automatically registers virtualhosts with <a href=\"https://github.com/hipache/hipache\" rel=\"nofollow\">hipache</a></li>\n</ul>\n</div>\n<div id=\"example-1-logging-docker-events\">\n<h2>Example #1 \u2013 Logging Docker Events</h2>\n<div>\n<p>Note</p>\n<p>See: <a href=\"http://github.com/prologic/autodock-logger\" rel=\"nofollow\">autodock Logger plugin</a></p>\n</div>\n<p>Start the daemon:</p>\n<pre>$ docker run -d -v /var/run/docker.sock:/var/run/docker.sock --name autodock:autodock prologic/autodock\n</pre>\n<p>Link and start an autodock plugin:</p>\n<pre>$ docker run -i -t --link autodock prologic/autodock-logger\n</pre>\n<p>Now whenever you start a new container autodock will listen for Docker events.\nThe <tt><span class=\"pre\">autodock-logger</span></tt> plugin will log all Docker Events received by autodock.</p>\n</div>\n<div id=\"example-2-automatic-virtual-hosting-with-hipache\">\n<h2>Example #2 \u2013 Automatic Virtual Hosting with hipache</h2>\n<div>\n<p>Note</p>\n<p>See <a href=\"http://github.com/prologic/autodock-hipache\" rel=\"nofollow\">autodock Hipache plugin</a></p>\n</div>\n<p>Start the daemon:</p>\n<pre>$ docker run -d --name autodock prologic/autodock\n</pre>\n<p>Link and start an autodock plugin:</p>\n<pre>$ docker run -d --link autodock prologic/autodock-hipache\n</pre>\n<p>Now whenever you start a new container autodock will listen for Docker events\nand discover containers that have been started. The <tt><span class=\"pre\">autodock-hipache</span></tt> plugin\nwill specifically listen for starting containers that have a <tt>VIRTUALHOST</tt>\nenvironment variable and reconfigure the running <tt>hipache</tt> container.</p>\n<p>Start a \u201cHello World\u201d Web Application:</p>\n<pre>$ docker run -d -e VIRTUALHOST=hello.local prologic/hello\n</pre>\n<p>Now assuming you had <tt>hello.local</tt> configured in your <tt>/etc/hosts</tt>\npointing to your <tt>hipache</tt> container you can now visit <a href=\"http://hello.local/\" rel=\"nofollow\">http://hello.local/</a></p>\n<pre>echo \"127.0.0.1 hello.local\" &gt;&gt; /etc/hosts\ncurl -q -o - http://hello.local/\nHello World!\n</pre>\n<div>\n<p>Note</p>\n<p>This method of hosting and managing webapps and websites is in production deployments and talked about in more detail in the post <a href=\"http://shortcircuit.net.au/~prologic/blog/article/2015/03/24/a-docker-based-mini-paas/\" rel=\"nofollow\">A Docker-based mini-PaaS</a>.</p>\n</div>\n</div>\n<div id=\"example-3-cron-like-scheduling-of-containers\">\n<h2>Example #3 \u2013 Cron-like Scheduling of Containers</h2>\n<div>\n<p>Note</p>\n<p>See <a href=\"http://github.com/prologic/autodock-cron\" rel=\"nofollow\">autodock Cron plugin</a></p>\n</div>\n<p>Start the daemon:</p>\n<pre>$ docker run -d --name autodock prologic/autodock\n</pre>\n<p>Link and start an autodock plugin:</p>\n<pre>$ docker run -d --link autodock prologic/autodock-cron\n</pre>\n<p>Now whenever you create a new container autodock will listen for Docker events\nand discover containers that have been created. The <tt><span class=\"pre\">autodock-cron</span></tt> plugin\nwill specifically listen for created containers that have a <tt>CRON</tt>\nenvironment variable and schedule a job based on the cron expression supplied\nand re-run that container when its scheduled has triggered.</p>\n<p>Start a \u201cHello\u201d Busybox Container:</p>\n<pre>$ docker run -i -t --name hello busybox sh -c \"echo Hello\"\n</pre>\n<p>After about three minutes or so you should see the following in the logs:</p>\n<pre>$ docker logs hello\nHello\nHello\nHello\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1877803, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "91553035ac1c69e6e531ef0a6a913031", "sha256": "6e7a8e4be823f68fe4e617c5567d1f265230888e6dc6d2559764385186cafb35"}, "downloads": -1, "filename": "autodock-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "91553035ac1c69e6e531ef0a6a913031", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10958, "upload_time": "2015-05-25T23:29:27", "upload_time_iso_8601": "2015-05-25T23:29:27.791698Z", "url": "https://files.pythonhosted.org/packages/a8/d0/9757aa5805c01b4223cb0fb1e328a13a1b92b7692f96cc3bf21e9718798e/autodock-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2500e4ba45669afaea163db1a70db3d7", "sha256": "826eebcf33d6e526dde2fce16732d428700922c4adabec99c1bc1f0b3fe04f1f"}, "downloads": -1, "filename": "autodock-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2500e4ba45669afaea163db1a70db3d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8406, "upload_time": "2015-12-26T04:26:56", "upload_time_iso_8601": "2015-12-26T04:26:56.084998Z", "url": "https://files.pythonhosted.org/packages/26/3d/31385f8c04d09c1d1cefc14c7813c041d5ecfd0d5ac2355ff074794b5372/autodock-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fd95530ec951cdb8c9cf30f0ce7fe425", "sha256": "397f62ea60c45da2ea3e075ef536f218e676a84df1ca2a1c37b311383dab154c"}, "downloads": -1, "filename": "autodock-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "fd95530ec951cdb8c9cf30f0ce7fe425", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11962, "upload_time": "2015-12-26T04:28:27", "upload_time_iso_8601": "2015-12-26T04:28:27.432880Z", "url": "https://files.pythonhosted.org/packages/90/df/cfd2ce1344f47266ee1f46a3f7319f819d03f8655fee2fc7eb80ca77a8a1/autodock-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fa45cac7bac3ac3fe5076af8c109a5b", "sha256": "eae631ac3fca190f24fca80132a5312cf108f8c0c7ea174f1b3a52f8b7c3c714"}, "downloads": -1, "filename": "autodock-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8fa45cac7bac3ac3fe5076af8c109a5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8414, "upload_time": "2015-12-26T04:28:22", "upload_time_iso_8601": "2015-12-26T04:28:22.169960Z", "url": "https://files.pythonhosted.org/packages/41/6a/f044707f9e86635e3af54719999def12816972cd27cd68dc2af8df85d0ed/autodock-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd95530ec951cdb8c9cf30f0ce7fe425", "sha256": "397f62ea60c45da2ea3e075ef536f218e676a84df1ca2a1c37b311383dab154c"}, "downloads": -1, "filename": "autodock-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "fd95530ec951cdb8c9cf30f0ce7fe425", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11962, "upload_time": "2015-12-26T04:28:27", "upload_time_iso_8601": "2015-12-26T04:28:27.432880Z", "url": "https://files.pythonhosted.org/packages/90/df/cfd2ce1344f47266ee1f46a3f7319f819d03f8655fee2fc7eb80ca77a8a1/autodock-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fa45cac7bac3ac3fe5076af8c109a5b", "sha256": "eae631ac3fca190f24fca80132a5312cf108f8c0c7ea174f1b3a52f8b7c3c714"}, "downloads": -1, "filename": "autodock-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8fa45cac7bac3ac3fe5076af8c109a5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8414, "upload_time": "2015-12-26T04:28:22", "upload_time_iso_8601": "2015-12-26T04:28:22.169960Z", "url": "https://files.pythonhosted.org/packages/41/6a/f044707f9e86635e3af54719999def12816972cd27cd68dc2af8df85d0ed/autodock-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:18 2020"}