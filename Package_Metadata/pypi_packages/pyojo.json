{"info": {"author": "Txema Vicente", "author_email": "txema@nabla.net", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "About 'pyojo' app development\n----------------------------- \n\nThis is yet another framework to help develop web applicattions \nwith python. The difference is that it is oriented to create \napplications with The Dojo Toolkit, trying to facilitate a set\nof wrappers to generate the javascript sent to the client and \nproviding help to work with the AMD loader. \n\nPyojo provides decorators to set up the route map and assign\nsome functions or classes to certain URLs, but it also can be \nused creating python modules in a folder structure, where the\nname of the module defines the content type, and the returned\nvalue of a function named GET, POST, PUT or DELETE is the\nresponse.\n\nThe minimal \"Hello World\":\n\n    import pyojo\n    from pyojo import server\n\n    @pyojo.route(\"/\")\n    def Home():\n        return \"Hello World!\"\n\n    server.main()\n\n\nA basic example with javascript:\n\n    import pyojo\n\n    #Redirect to index.html\n    @pyojo.route(\"/\")\n    def Home(request):\n       return request.static(\"index.html\")\n\nAnd then a couple of modules at ./srv (the default folder) will\nhandle this request:\n\nsrv/index_html.py:\n\n    def GET(request):\n\t   return '''<html>\n                   <body><script src='main.js'></body>\n                  </html>'''\n        \nsrv/main_js.py:\n\n    def GET(request):\n\t   return \"alert('Hello World!');\"\n\nBut the real power is in the pyojo.js modules, offering a set \nof code generation utilities for your Dojo application.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.pyojo.com", "keywords": "WSGI dojo", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pyojo", "package_url": "https://pypi.org/project/pyojo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyojo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.pyojo.com"}, "release_url": "https://pypi.org/project/pyojo/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Web framework to create Dojo apps.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            About 'pyojo' app development<br>----------------------------- <br><br>This is yet another framework to help develop web applicattions <br>with python. The difference is that it is oriented to create <br>applications with The Dojo Toolkit, trying to facilitate a set<br>of wrappers to generate the javascript sent to the client and <br>providing help to work with the AMD loader. <br><br>Pyojo provides decorators to set up the route map and assign<br>some functions or classes to certain URLs, but it also can be <br>used creating python modules in a folder structure, where the<br>name of the module defines the content type, and the returned<br>value of a function named GET, POST, PUT or DELETE is the<br>response.<br><br>The minimal \"Hello World\":<br><br>    import pyojo<br>    from pyojo import server<br><br>    @pyojo.route(\"/\")<br>    def Home():<br>        return \"Hello World!\"<br><br>    server.main()<br><br><br>A basic example with javascript:<br><br>    import pyojo<br><br>    #Redirect to index.html<br>    @pyojo.route(\"/\")<br>    def Home(request):<br>       return request.static(\"index.html\")<br><br>And then a couple of modules at ./srv (the default folder) will<br>handle this request:<br><br>srv/index_html.py:<br><br>    def GET(request):<br>\t   return '''&lt;html&gt;<br>                   &lt;body&gt;&lt;script src='main.js'&gt;&lt;/body&gt;<br>                  &lt;/html&gt;'''<br>        <br>srv/main_js.py:<br><br>    def GET(request):<br>\t   return \"alert('Hello World!');\"<br><br>But the real power is in the pyojo.js modules, offering a set <br>of code generation utilities for your Dojo application.\n          </div>"}, "last_serial": 764524, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f481fea8d51ba188691079c07c89b92d", "sha256": "ddfbe058092fa581f78a99376fd977522eca9e119e8156001f2000f75c10e6d4"}, "downloads": -1, "filename": "pyojo-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "f481fea8d51ba188691079c07c89b92d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 229722, "upload_time": "2013-06-09T21:20:01", "upload_time_iso_8601": "2013-06-09T21:20:01.637770Z", "url": "https://files.pythonhosted.org/packages/48/c4/3dad17e995f21969144f1a889725427ea12a331d5cacd03356e70a54bca4/pyojo-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e27da2f8122ff1434b0f5a9d70a96502", "sha256": "d6fe9da2f46d3132dc6bca5a2fb81f1525f2ebd2213e4b80c8ab4456e467a11a"}, "downloads": -1, "filename": "pyojo-0.0.1.zip", "has_sig": false, "md5_digest": "e27da2f8122ff1434b0f5a9d70a96502", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203136, "upload_time": "2013-06-09T21:19:55", "upload_time_iso_8601": "2013-06-09T21:19:55.387365Z", "url": "https://files.pythonhosted.org/packages/89/28/7b0e03656e7f5dfc51cc814fd9c36d7225c9338a03e2cc14eb4dadd5894b/pyojo-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "71b726144f4b5d067fceca8ddef42f70", "sha256": "443b2d2ee5086e206ffd0ca489238220d5f18f044df451503a43acb151077934"}, "downloads": -1, "filename": "pyojo-0.0.2-py2.7.egg", "has_sig": false, "md5_digest": "71b726144f4b5d067fceca8ddef42f70", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 229729, "upload_time": "2013-06-09T21:34:55", "upload_time_iso_8601": "2013-06-09T21:34:55.357314Z", "url": "https://files.pythonhosted.org/packages/4c/74/c2d530d737b6ba3d8d0c2c4e3407430df9d55e59cfab1d3e0173469e3b4d/pyojo-0.0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e71f11b899f5f2b8299ba1e32425585", "sha256": "9257563431d117cf3be4cb4dfa7976cc0cefaf70d465a2009e016b01ded631ac"}, "downloads": -1, "filename": "pyojo-0.0.2.zip", "has_sig": false, "md5_digest": "3e71f11b899f5f2b8299ba1e32425585", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203410, "upload_time": "2013-06-09T21:34:48", "upload_time_iso_8601": "2013-06-09T21:34:48.221972Z", "url": "https://files.pythonhosted.org/packages/52/2b/6c3c6c2352b15054c3f3fbdfcaf0027ba6a9467aa8c931c98a1cf758e2ca/pyojo-0.0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71b726144f4b5d067fceca8ddef42f70", "sha256": "443b2d2ee5086e206ffd0ca489238220d5f18f044df451503a43acb151077934"}, "downloads": -1, "filename": "pyojo-0.0.2-py2.7.egg", "has_sig": false, "md5_digest": "71b726144f4b5d067fceca8ddef42f70", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 229729, "upload_time": "2013-06-09T21:34:55", "upload_time_iso_8601": "2013-06-09T21:34:55.357314Z", "url": "https://files.pythonhosted.org/packages/4c/74/c2d530d737b6ba3d8d0c2c4e3407430df9d55e59cfab1d3e0173469e3b4d/pyojo-0.0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e71f11b899f5f2b8299ba1e32425585", "sha256": "9257563431d117cf3be4cb4dfa7976cc0cefaf70d465a2009e016b01ded631ac"}, "downloads": -1, "filename": "pyojo-0.0.2.zip", "has_sig": false, "md5_digest": "3e71f11b899f5f2b8299ba1e32425585", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203410, "upload_time": "2013-06-09T21:34:48", "upload_time_iso_8601": "2013-06-09T21:34:48.221972Z", "url": "https://files.pythonhosted.org/packages/52/2b/6c3c6c2352b15054c3f3fbdfcaf0027ba6a9467aa8c931c98a1cf758e2ca/pyojo-0.0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:00:19 2020"}