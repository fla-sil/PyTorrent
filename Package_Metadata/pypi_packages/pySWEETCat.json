{"info": {"author": "Jo\u00e3o Faria", "author_email": "joao.faria@astro.up.pt", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "pySWEETCat\n==========\n\nA pure-Python package to download data from SWEET-Cat_.\n\nThis small package was developed as an exercise in a Python course (see CONTRIBUTORS_).\nIt downloads all the data from the SWEET-Cat online catalogue of stellar parameters \nand builds a (custom) dictionary with each column. \nIt is a pure-Python package with no extra dependencies (see below).\n\n\n|License MIT| |Travis build| |PyPI version|\n\nHow to use\n----------\n\nInstall it from pip (**pySWEETCat** has no extra depencies)\n\n::\n\n    pip install pySWEETCat\n\nand it's ready to use from Python\n\n.. code:: python\n\n    import pysweetcat\n\n\n**pySWEETCat** has one simple function, ``get_data()``,\nwhich downloads the data from the online archive and returns it in a dictionary.\n\n.. code:: python\n\n    >>> data = pysweetcat.get_data()\n\n.. code::\n\n    Downloading SWEET-Cat data\n    Saved SWEET-Cat data to $HOME/.pysweetcat/SWEET_cat.tsv\n    Data in `SWEET_cat.tsv` is recent.\n    There are 25 columns with 2627 entries each in `SWEET_cat.tsv`\n\nwhere ``$HOME`` will  be your home directory.\nThe second time you call ``get_data()`` it will check if the data was downloaded recently, \nand only conditionally download it again.\n\n.. code:: python\n\n    >>> data = pysweetcat.get_data()\n\n.. code::\n\n    Data in `SWEET_cat.tsv` is recent.\n    There are 25 columns with 2627 entries each in `SWEET_cat.tsv`\n\nNow, `data` is (basically) a Python dictionary with the each column as keys.\nBut it has a couple extra methods and properties. For example\n\n.. code:: python\n\n    data.size\n    2627\n\nreturns the number of values in each column.\n\nThe columns can be accessed as in a normal dictionary,\nas in \n\n.. code:: python\n\n    data['feh']   # stellar metallicity\n    data['name']  # name of the star\n\n\nand both of these will work\n\n.. code:: python\n\n    data['\u03c3_vmag']   \n    data['sigma_vmag']\n\nAlso, to drop the NaN values in a column (for some columns there will be quite a few)\nwe can use\n\n.. code:: python\n\n    data['teff_nonan']\n\n    np.isnan(data['teff']).any()       # True\n    np.isnan(data['teff_nonan']).any() # False\n\n\nwhich allows us to more easily do histograms of the values.\n\nFinnally, the ``.to_numpy(inplace=True)`` method converts all the columns to numpy arrays, either in place or not\n(this is the only function in **pySWEETCat** that requires numpy).\n\n\nLicense\n-------\n\nCopyright 2018 Jo\u00e3o Faria.\n\n**pySWEETCat** is free software made available under the MIT License. For\ndetails see the LICENSE_ file.\n\n.. _SWEET-Cat: https://www.astro.up.pt/resources/sweet-cat/\n.. _CONTRIBUTORS: https://github.com/j-faria/pySWEETCat/blob/master/CONTRIBUTORS.md\n.. _License: https://github.com/j-faria/pySWEETCat/blob/master/LICENSE\n.. |License MIT| image:: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n   :target: https://github.com/j-faria/pySWEETCat/blob/master/LICENSE\n.. |Travis build| image:: https://travis-ci.org/j-faria/pySWEETCat.svg?branch=master\n    :target: https://travis-ci.org/j-faria/pySWEETCat\n.. |PyPI version| image:: https://badge.fury.io/py/pySWEETCat.svg\n    :target: https://badge.fury.io/py/pySWEETCat\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/j-faria/pySWEETCat", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pySWEETCat", "package_url": "https://pypi.org/project/pySWEETCat/", "platform": "", "project_url": "https://pypi.org/project/pySWEETCat/", "project_urls": {"Homepage": "https://github.com/j-faria/pySWEETCat"}, "release_url": "https://pypi.org/project/pySWEETCat/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "A pure-Python package to download data from SWEET-Cat", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A pure-Python package to download data from <a href=\"https://www.astro.up.pt/resources/sweet-cat/\" rel=\"nofollow\">SWEET-Cat</a>.</p>\n<p>This small package was developed as an exercise in a Python course (see <a href=\"https://github.com/j-faria/pySWEETCat/blob/master/CONTRIBUTORS.md\" rel=\"nofollow\">CONTRIBUTORS</a>).\nIt downloads all the data from the SWEET-Cat online catalogue of stellar parameters\nand builds a (custom) dictionary with each column.\nIt is a pure-Python package with no extra dependencies (see below).</p>\n<p><a href=\"https://github.com/j-faria/pySWEETCat/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9f8168092fab8a1e348f4b089c1ff9cc0c137bf/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174\"></a> <a href=\"https://travis-ci.org/j-faria/pySWEETCat\" rel=\"nofollow\"><img alt=\"Travis build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62e2625ff979ca481647945c55d060f2bdfd7129/68747470733a2f2f7472617669732d63692e6f72672f6a2d66617269612f707953574545544361742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/pySWEETCat\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c872591f9db400a653bc4addcc8034a237d248e/68747470733a2f2f62616467652e667572792e696f2f70792f707953574545544361742e737667\"></a></p>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Install it from pip (<strong>pySWEETCat</strong> has no extra depencies)</p>\n<pre>pip install pySWEETCat\n</pre>\n<p>and it\u2019s ready to use from Python</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pysweetcat</span>\n</pre>\n<p><strong>pySWEETCat</strong> has one simple function, <tt>get_data()</tt>,\nwhich downloads the data from the online archive and returns it in a dictionary.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pysweetcat</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre>\n<pre>Downloading SWEET-Cat data\nSaved SWEET-Cat data to $HOME/.pysweetcat/SWEET_cat.tsv\nData in `SWEET_cat.tsv` is recent.\nThere are 25 columns with 2627 entries each in `SWEET_cat.tsv`\n</pre>\n<p>where <tt>$HOME</tt> will  be your home directory.\nThe second time you call <tt>get_data()</tt> it will check if the data was downloaded recently,\nand only conditionally download it again.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pysweetcat</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre>\n<pre>Data in `SWEET_cat.tsv` is recent.\nThere are 25 columns with 2627 entries each in `SWEET_cat.tsv`\n</pre>\n<p>Now, <cite>data</cite> is (basically) a Python dictionary with the each column as keys.\nBut it has a couple extra methods and properties. For example</p>\n<pre><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"mi\">2627</span>\n</pre>\n<p>returns the number of values in each column.</p>\n<p>The columns can be accessed as in a normal dictionary,\nas in</p>\n<pre><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'feh'</span><span class=\"p\">]</span>   <span class=\"c1\"># stellar metallicity</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>  <span class=\"c1\"># name of the star</span>\n</pre>\n<p>and both of these will work</p>\n<pre><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'\u03c3_vmag'</span><span class=\"p\">]</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'sigma_vmag'</span><span class=\"p\">]</span>\n</pre>\n<p>Also, to drop the NaN values in a column (for some columns there will be quite a few)\nwe can use</p>\n<pre><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'teff_nonan'</span><span class=\"p\">]</span>\n\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'teff'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">()</span>       <span class=\"c1\"># True</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'teff_nonan'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">()</span> <span class=\"c1\"># False</span>\n</pre>\n<p>which allows us to more easily do histograms of the values.</p>\n<p>Finnally, the <tt>.to_numpy(inplace=True)</tt> method converts all the columns to numpy arrays, either in place or not\n(this is the only function in <strong>pySWEETCat</strong> that requires numpy).</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2018 Jo\u00e3o Faria.</p>\n<p><strong>pySWEETCat</strong> is free software made available under the MIT License. For\ndetails see the <a href=\"https://github.com/j-faria/pySWEETCat/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n</div>\n\n          </div>"}, "last_serial": 4418904, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "ac561158d9334f0b411316730063dd71", "sha256": "1d66f8d1bf08e2ce3bb34989220de03662e52c0cd1af071da9b8ed919bfea8f9"}, "downloads": -1, "filename": "pySWEETCat-1.0.1-py3.6.egg", "has_sig": false, "md5_digest": "ac561158d9334f0b411316730063dd71", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 8591, "upload_time": "2018-10-26T10:49:29", "upload_time_iso_8601": "2018-10-26T10:49:29.367655Z", "url": "https://files.pythonhosted.org/packages/01/f2/11ceb4c840f7e13fdcaaf85f0053a60ea4d86b0d6d9de494b65cfb91e26b/pySWEETCat-1.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "87326738baa093199a86780b6762d540", "sha256": "a4f18b67692448000dbcacfda6ef74478954a249d919fd938f0946f1cf3b2131"}, "downloads": -1, "filename": "pySWEETCat-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "87326738baa093199a86780b6762d540", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6954, "upload_time": "2018-05-25T16:13:08", "upload_time_iso_8601": "2018-05-25T16:13:08.989438Z", "url": "https://files.pythonhosted.org/packages/99/f7/9491599a874a405792c91a137899d59c936f4354f0d4721b138b7ed523b8/pySWEETCat-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf4cc4f5328e4d1323e6dcee46302c38", "sha256": "fcc6f2b1a36a169c4a5d0eb447625408e57d0add1b1636d13710987491d0089a"}, "downloads": -1, "filename": "pySWEETCat-1.0.1.tar.gz", "has_sig": false, "md5_digest": "bf4cc4f5328e4d1323e6dcee46302c38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4377, "upload_time": "2018-05-25T16:13:10", "upload_time_iso_8601": "2018-05-25T16:13:10.371526Z", "url": "https://files.pythonhosted.org/packages/21/37/16e75ed415c2f05279c18898752ef9ae11de4ccf9acacdb6d9fa84222402/pySWEETCat-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d3c26feb2c53f8ce7414df3a44500a96", "sha256": "ac1fb287f32b0e4871204d574f8464f17459ec2672d3e2489b5b3ada7aaa09b8"}, "downloads": -1, "filename": "pySWEETCat-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d3c26feb2c53f8ce7414df3a44500a96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7074, "upload_time": "2018-10-26T10:49:28", "upload_time_iso_8601": "2018-10-26T10:49:28.136694Z", "url": "https://files.pythonhosted.org/packages/fd/9d/80a9047eceed9589329a3abd4e0d6a094b2fa49f07f643a08194481b5bc7/pySWEETCat-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5b8c112d89a1c63dcd9fea135b8af5f", "sha256": "d9a72df2376dfac6987892e99d33d91c13a4481366d2cf8d88f15fc3865e69e7"}, "downloads": -1, "filename": "pySWEETCat-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f5b8c112d89a1c63dcd9fea135b8af5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4500, "upload_time": "2018-10-26T10:49:30", "upload_time_iso_8601": "2018-10-26T10:49:30.459782Z", "url": "https://files.pythonhosted.org/packages/9e/b7/b99d398f3636f48a7992f6a665c80ca1b4afd24ff8f095ea49deb095c8e4/pySWEETCat-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3c26feb2c53f8ce7414df3a44500a96", "sha256": "ac1fb287f32b0e4871204d574f8464f17459ec2672d3e2489b5b3ada7aaa09b8"}, "downloads": -1, "filename": "pySWEETCat-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d3c26feb2c53f8ce7414df3a44500a96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7074, "upload_time": "2018-10-26T10:49:28", "upload_time_iso_8601": "2018-10-26T10:49:28.136694Z", "url": "https://files.pythonhosted.org/packages/fd/9d/80a9047eceed9589329a3abd4e0d6a094b2fa49f07f643a08194481b5bc7/pySWEETCat-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5b8c112d89a1c63dcd9fea135b8af5f", "sha256": "d9a72df2376dfac6987892e99d33d91c13a4481366d2cf8d88f15fc3865e69e7"}, "downloads": -1, "filename": "pySWEETCat-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f5b8c112d89a1c63dcd9fea135b8af5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4500, "upload_time": "2018-10-26T10:49:30", "upload_time_iso_8601": "2018-10-26T10:49:30.459782Z", "url": "https://files.pythonhosted.org/packages/9e/b7/b99d398f3636f48a7992f6a665c80ca1b4afd24ff8f095ea49deb095c8e4/pySWEETCat-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:47 2020"}