{"info": {"author": "CyberZHG", "author_email": "CyberZHG@gmail.com", "bugtrack_url": null, "classifiers": ["License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6"], "description": "# MXNet Octave Conv\n\n[![Travis](https://travis-ci.org/CyberZHG/mxnet-octave-conv.svg)](https://travis-ci.org/CyberZHG/mxnet-octave-conv)\n[![Coverage](https://coveralls.io/repos/github/CyberZHG/mxnet-octave-conv/badge.svg?branch=master)](https://coveralls.io/github/CyberZHG/mxnet-octave-conv)\n[![996.ICU](https://img.shields.io/badge/license-Anti%20996-blue.svg)](https://996.icu) \n\nUnofficial implementation of [Drop an Octave: Reducing Spatial Redundancy in\nConvolutional Neural Networks with Octave Convolution](https://arxiv.org/pdf/1904.05049.pdf).\n\n## Install\n\n```bash\npip install mxnet-octave-conv\n```\n\n## Usage\n\n```python\nimport mxnet as mx\nfrom mxnet_octave_conv import octave_conv, octave_dual\n\nmx.symbol.Variable(name='data')\nconv = octave_conv(x, num_filter=7, kernel=(3, 3))\npool = octave_dual(conv, lambda data: mx.symbol.Pooling(data, kernel=(2, 2), stride=(2, 2), pool_type='max'))\nconv = octave_conv(pool, num_filter=5, kernel=3, stride=1, dilate=(2, 3), name='Mid')\npool = octave_dual(conv, lambda data: mx.symbol.Pooling(data, kernel=(2, 2), stride=(2, 2), pool_type='max'))\nconv = octave_conv(pool, num_filter=3, kernel=3, stride=(1, 1), dilate=1, ratio_out=0.0)\npool = octave_dual(conv, lambda data: mx.symbol.Pooling(data, kernel=(2, 2), stride=(2, 2), pool_type='max'))\nflatten = mx.symbol.Flatten(pool)\ndense = mx.symbol.FullyConnected(flatten, num_hidden=2)\nmodel = mx.symbol.SoftmaxOutput(dense, name='softmax')\nprint(mx.visualization.print_summary(model, shape={'data': (2, 3, 32, 32)}))\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CyberZHG/mxnet-octave-conv", "keywords": "", "license": "Anti 996", "maintainer": "", "maintainer_email": "", "name": "mxnet-octave-conv", "package_url": "https://pypi.org/project/mxnet-octave-conv/", "platform": "", "project_url": "https://pypi.org/project/mxnet-octave-conv/", "project_urls": {"Homepage": "https://github.com/CyberZHG/mxnet-octave-conv"}, "release_url": "https://pypi.org/project/mxnet-octave-conv/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Octave convolution", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MXNet Octave Conv</h1>\n<p><a href=\"https://travis-ci.org/CyberZHG/mxnet-octave-conv\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0833000c11b354f15eb3f8822a09c6469bbb9f6f/68747470733a2f2f7472617669732d63692e6f72672f43796265725a48472f6d786e65742d6f63746176652d636f6e762e737667\"></a>\n<a href=\"https://coveralls.io/github/CyberZHG/mxnet-octave-conv\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fec52cb9196ee67cb1a8819fb07eede39d1dd117/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f43796265725a48472f6d786e65742d6f63746176652d636f6e762f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://996.icu\" rel=\"nofollow\"><img alt=\"996.ICU\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/497459f5647e21d9f1011ef127da39a0f90d936f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d416e74692532303939362d626c75652e737667\"></a></p>\n<p>Unofficial implementation of <a href=\"https://arxiv.org/pdf/1904.05049.pdf\" rel=\"nofollow\">Drop an Octave: Reducing Spatial Redundancy in\nConvolutional Neural Networks with Octave Convolution</a>.</p>\n<h2>Install</h2>\n<pre>pip install mxnet-octave-conv\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mxnet</span> <span class=\"k\">as</span> <span class=\"nn\">mx</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mxnet_octave_conv</span> <span class=\"kn\">import</span> <span class=\"n\">octave_conv</span><span class=\"p\">,</span> <span class=\"n\">octave_dual</span>\n\n<span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'data'</span><span class=\"p\">)</span>\n<span class=\"n\">conv</span> <span class=\"o\">=</span> <span class=\"n\">octave_conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">num_filter</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">octave_dual</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Pooling</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">pool_type</span><span class=\"o\">=</span><span class=\"s1\">'max'</span><span class=\"p\">))</span>\n<span class=\"n\">conv</span> <span class=\"o\">=</span> <span class=\"n\">octave_conv</span><span class=\"p\">(</span><span class=\"n\">pool</span><span class=\"p\">,</span> <span class=\"n\">num_filter</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">dilate</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Mid'</span><span class=\"p\">)</span>\n<span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">octave_dual</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Pooling</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">pool_type</span><span class=\"o\">=</span><span class=\"s1\">'max'</span><span class=\"p\">))</span>\n<span class=\"n\">conv</span> <span class=\"o\">=</span> <span class=\"n\">octave_conv</span><span class=\"p\">(</span><span class=\"n\">pool</span><span class=\"p\">,</span> <span class=\"n\">num_filter</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">dilate</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">ratio_out</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">octave_dual</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Pooling</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">pool_type</span><span class=\"o\">=</span><span class=\"s1\">'max'</span><span class=\"p\">))</span>\n<span class=\"n\">flatten</span> <span class=\"o\">=</span> <span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Flatten</span><span class=\"p\">(</span><span class=\"n\">pool</span><span class=\"p\">)</span>\n<span class=\"n\">dense</span> <span class=\"o\">=</span> <span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">FullyConnected</span><span class=\"p\">(</span><span class=\"n\">flatten</span><span class=\"p\">,</span> <span class=\"n\">num_hidden</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">SoftmaxOutput</span><span class=\"p\">(</span><span class=\"n\">dense</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'softmax'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mx</span><span class=\"o\">.</span><span class=\"n\">visualization</span><span class=\"o\">.</span><span class=\"n\">print_summary</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)}))</span>\n</pre>\n\n          </div>"}, "last_serial": 5164537, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4668570982bf5e278da85ed654f46301", "sha256": "cf971c94e90669f582e37024af16347492893321ad7c2da260bd2d48fd2050b1"}, "downloads": -1, "filename": "mxnet-octave-conv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4668570982bf5e278da85ed654f46301", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4959, "upload_time": "2019-04-19T11:36:16", "upload_time_iso_8601": "2019-04-19T11:36:16.964098Z", "url": "https://files.pythonhosted.org/packages/bf/b9/37cbfcc147a7f9419e2734d322dc78edc59b96036aa0abffacb39ffea4ae/mxnet-octave-conv-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4668570982bf5e278da85ed654f46301", "sha256": "cf971c94e90669f582e37024af16347492893321ad7c2da260bd2d48fd2050b1"}, "downloads": -1, "filename": "mxnet-octave-conv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4668570982bf5e278da85ed654f46301", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4959, "upload_time": "2019-04-19T11:36:16", "upload_time_iso_8601": "2019-04-19T11:36:16.964098Z", "url": "https://files.pythonhosted.org/packages/bf/b9/37cbfcc147a7f9419e2734d322dc78edc59b96036aa0abffacb39ffea4ae/mxnet-octave-conv-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:39 2020"}