{"info": {"author": "Michael Pyrcz", "author_email": "mpyrcz@austin.utexas.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n<p>\n    <img src=\"https://github.com/GeostatsGuy/GeostatsPy/blob/master/geostatspy_logo.png?raw=true\" width=\"200\" height=\"200\" />\n</p>\n\n[![Documentation Status](https://readthedocs.org/projects/geostatspy/badge/?version=latest)](https://geostatspy.readthedocs.io/en/latest/?badge=latest)\n\n## GeostatsPy Package \n\nThe GeostatsPy Package brings GSLIB: Geostatistical Library (Deutsch and Journel, 1998) functions to Python. GSLIB is extremely robust and practical set of code for building spatial modeling workflows. I need it in Python to support my students in my **Data Analytics**, **Geostatistics** and **Machine Learning** courses. \n\nI find my students benefit from hands-on opportunities, in fact it is hard to imagine teaching these topics without providing the opportunity to handle the numerical methods and build workflows. I tried to have the use the original FORTRAN executables last year and even with support and worked out examples, it was an uphill battle.\n\nIn addition, all my students and I are now working in Python for our research. Having geostatistical methods in Python directly impact the research of my group. Finally, I like to code. I have over 25 years of experience in FORTRAN, C++ and Visual Basic programing. This includes frontend (Qt interfaces in C++) and backend development with small and at times very large engineering and geoscience projects. \n\nThis package includes 2 parts:\n\n1. geostatspy.geostats includes GSLIB functions rewritten in Python. This currently includes all the variogram, distribution transformations, and spatial estimation and simulation (SGSIM soon) methods. I will continue adding functions to support modeling operations for practical subsurface model cosntruction. \n\n2. geostatspy.GSLIB includes reimplimentation of the GSLIB visualizations and low tech wrappers of the numerical methods  (note: the low-tech wrapper require access to GSLIB executables).\n\n<p>\n    <img src=\"https://github.com/GeostatsGuy/GeostatsPy/blob/master/TCG_color_logo.png\" width=\"220\" height=\"200\" />\n</p>\n\n### The Authors\n\nThis package is being developed at the University of Texas in the Texas Center for Geostatistics.\n\n* **Michael J. Pyrcz, Ph.D., P.Eng.** - associate professor with the University of Texas at Austin. Primary author of the package.\n\n* **Anton Kupenko** - bug fixes, added docstrings, code refractory for PEP8, removed duplicated functions and variables.  Thank you Anton!\n\n* **Wendi Liu** - Ph.D. student working with Michael Pyrcz at the University of Texas at Austin. GSLIB compiles in Mac OSX, 3D variogram calculation low-tech wrapper.\n\n* **Alex E. Gigliotti** - undergraduate student working with Michael Pyrcz at the University of Texas at Austin. Established unit testing.\n\n\n### Package Inventory\n\nHere's a list and some details on each of the functions available.\n\n#### geostatspy.GSLIB Functions\n\nUtilities to support moving between Python DataFrames and ndarrays, and Data Tables, Gridded Data and Models in Geo-EAS file format (standard to GSLIB):\n\n1. **ndarray2GSLIB** - utility to convert 1D or 2D numpy ndarray to a GSLIB Geo-EAS file for use with GSLIB methods \n2. **GSLIB2ndarray** - utility to convert GSLIB Geo-EAS files to a 1D or 2D numpy ndarray for use with Python methods\n3. **Dataframe2GSLIB(data_file,df)** - utility to convert pandas DataFrame to a GSLIB Geo-EAS file for use with GSLIB methods\n4. **GSLIB2Dataframe** - utility to convert GSLIB Geo-EAS files to a pandas DataFrame for use with Python methods\n5. **DataFrame2ndarray** - take spatial data from a DataFrame and make a sparse 2D ndarray (NaN where no data in cell)\n\nVisualization functions with the same parameterization as GSLIB using matplotlib:\n\n6. **pixelplt** - reimplemention in Python of GSLIB pixelplt with matplotlib methods\n7. **pixelplt_st** - reimplemention in Python of GSLIB pixelplt with matplotlib methods with support for sub plots\n8. **pixelplt_log_st** - reimplemention in Python of GSLIB pixelplt with matplotlib methods with support for sub plots and log color bar\n9. **locpix** - pixel plot and location map, reimplementation in Python of a GSLIB MOD with MatPlotLib methods\n10. **locpix_st** - pixel plot and location map, reimplementation in Python of a GSLIB MOD with MatPlotLib methods with support for sub plots\n11. **locpix_log_st** - pixel plot and location map, reimplementation in Python of a GSLIB MOD with MatPlotLib methods with support for sub plots and log color bar\n12. **hist** - histograms reimplemented in Python of GSLIB hist with MatPlotLib methods\n13. **hist_st** - histograms reimplemented in Python of GSLIB hist with MatPlotLib methods with support for sub plots\n\nData transformations\n\n14. **affine** - affine distribution transformation to correct feature mean and standard deviation\n15. **nscore** - normal score transform, wrapper for nscore from GSLIB (GSLIB's nscore.exe must be in working directory)\n16. **declus** - cell-based declustering, 2D wrapper for declus from GSLIB (GSLIB's declus.exe must be in working directory)\n\nSpatial Continuity\n\n17. **make_variogram** - make a dictionary of variogram parameters to for application with spatial estimation and simulation \n18. **gamv** - irregularly sampled variogram, 2D wrapper for gam from GSLIB (.exe must be in working directory)\n19. **varmap** - regular spaced data, 2D wrapper for varmap from GSLIB (.exe must be in working directory)\n20. **varmapv** - irregular spaced data, 2D wrapper for varmap from GSLIB (.exe must be in working directory)\n21. **vmodel** - variogram model, 2D wrapper for vmodel from GSLIB (.exe must be in working directory)\n\nSpatial Modeling\n\n22. **kb2d** - kriging estimation, 2D wrapper for kb2d from GSLIB (GSLIB's kb2d.exe must be in working directory)\n23. **sgsim_uncond** - sequential Gaussian simulation, 2D unconditional wrapper for sgsim from GSLIB (GSLIB's sgsim.exe must be in working directory)\n24. **sgsim** - sequential Gaussian simulation, 2D wrapper for sgsim from GSLIB (GSLIB's sgsim.exe must be in working directory)\n25. **cosgsim_uncond** - sequential Gaussian simulation, 2D unconditional wrapper for sgsim from GSLIB (GSLIB's sgsim.exe must be in working directory)\n\nSpatial Model Resampling\n\n26. **sample** - sample 2D model with provided X and Y and append to DataFrame\n27. **gkern** - make a Gaussian kernel for convolution, moving window averaging (from Teddy Hartano, Stack Overflow)\n28. **regular_sample** - extract regular spaced samples from a 2D spatial model \n29. **random_sample** - extract random samples from a 2D spatial model  \n30. **DataFrame2ndarray** - convent spatial point data in a DataFrame to a sparse ndarray grid\n\n#### geostatspy.geostats Functions\n\nNumerical methods in GSLIB (Deutsch and Journel, 1998) translated to Python:\n\n30. **correct_trend** - correct the order relations of an indicator-based trend model\n30. **backtr** - GSLIB's backtr function  to transform a distribution\n30. **declus** - GSLIB's DECLUS program reimplimented for cell-based declustering in 2D\n31. **gam** - GSLIB's GAM program reimplimented for variogram calculation with regular data in 2D\n32. **gamv** - GSLIB's GAMV program reimplimented for variogram calculation with iregular data in 2D \n33. **varmapv** - GSLIB's VARMAP program reimplimented for irregularly spaced spatial data in 2D \n33. **vmodel** - GSLIB's VMODEL program reimplimented for visualization of nested variogram models in 2D\n33. **nscore** - GSLIB's NSCORE program reimplimented for normal score distribution transformation\n34. **kb2d** - GSLIB's KB2D program reimplimented for 2D spaitial estimation\n34. **ik2d** - GSLIB's IK3D program reimplimented for 2D indicator-based kriging estimation\n\nMore functionality will be added soon.\n\n### Package Dependencies\n\nThe functions rely on the following packages:\n\n1. **numpy** - for ndarrays\n2. **pandas** - for DataFrames\n3. **numpy.linalg** - for linear algebra\n4. **numba** - for numerical speed up\n5. **scipy** - for fast nearest neighbor search\n6. **matplotlib.pyplot** - for plotting\t                          \n\nThese packages should be available with any modern Python distribution (e.g. https://www.anaconda.com/download/).\n\nIf you get a package import error, you may have to first install some of these packages. This can usually be accomplished by opening up a command window on Windows and then typing 'python -m pip install [package-name]'. More assistance is available with the respective package docs.  \n\n### Explanation of GeostatsPy\n\nGeostatsPy includes functions that run 2D workflows in GSLIB from Python (i.e. low tech wrappers), Python translations and reimplementations of GSLIB methods, along with utilities to move between GSLIB's Geo-EAS data sets and Pandas DataFrames, and grids and 2D NumPy ndarrays respectively and other useful operations such as resampling from regular datasets and rescaling distributions.  \n\nThe reimplementations as of now include NSCORE, GAM, GAMV, VMODEL, DECLUS, KB2D, IK2D and SGSIM etc. and most of the visualizations using the standard GSLIB parametric inputs and matplotlib back end. The low tech wrappers simply write the GSLIB parameters, run the GSLIB executables and then read in the GSLIB output. This allows for construction of Python workflows with the very robust GSLIB programs.\n\n#### Why make this package? \n\nI wanted a set of functions for working with the very robust and numerically efficient GSLIB: Geostatistical Library (Deutsch and Journel, 1998) in Python.  While there are other current solutions in Python.  I found that these solutions are either proprietary (not open source), not maintained or missing vital functionality; therefore, I have not been able to use these other solutions to teach modeling workflows to students with little or no programming experience.  Imagine getting 55 undergraduate students to role back to a previous version on Python because a single dependency of an available package is not available in a current Python version.  Image a student about to submit an assignment, and the code won't run immediately before submission because of an update to a dependency. I need methods for my students that just work, are reliable and do not require students to complete a more complicated environment setup.\n\nDeutsch and Journel (1998) gave the community GSLIB, an extremely robust and flexible set of tools to build spatial modeling workflows.  I have spent almost 20 years working with GSLIB along with a wide variety of subsurface modeling software. The powerful flexibility of GSLIB may be lost in methods that attempt to 'can' the inputs and parameters into complicated and hard to work with objects or attempt to combine the programs into a single program.  I love open source for teaching the theory, because students must see under the hood!  The concept of basic building blocks and simple, common inputs is essential to GSLIB.  I tried to preserve this by putting together functions with the same conventions as GSLIB, the result is a set of functions that (1) are practical for my students to use and (2) will move the GSLIB veterans into Python workflow construction. Honestly, I did nothing original, but that was my intention.  \n\nI'm a very busy new professor, I'll keep adding more functionality as I have time.\n\n#### More on GSLIB\n\nThe GSLIB source is available from GSLIB.com. If you would like to get the executables, ready to use without any need to compile them, go to GSLIB.com for Windows and Linux. I failed to find any Mac OS X executables so my Ph.D. student Wendi Liu compiled them for us (thank you Wendi!) and we have posted them here https://github.com/GeostatsGuy/GSLIB_MacOS. If folks on Windows are encountering missing DLL's, I could post static builds. Wendi provided instructions to help Mac users with missing DLL issues at that same location above.\n\n#### Making Images \n\nThe graphical / visualization methods have 2 variants. '_ST' specifies that function is suitable for building subplots (stacked / combined images) while those without '_ST' are for stand-alone images (an image is returned with the function call and an image file is saved in the working directory). The resolution and image file type are specified at the top of the GeostatPy.GSLIB functions.   \n\n#### Assistance Welcome\n\nFound an issue (I'm sure there are issues!)? Got a new idea? Want to work on this? Let me know, submit revisions, I'm happy to collaborate.\n\n### Package Examples\n\nThere are many example workflow examples available on my GitHub account at https://github.com/GeostatsGuy/, specifically the GeostatsPy https://github.com/GeostatsGuy/GeostatsPy and PythonNumericalDemos  https://github.com/GeostatsGuy/PythonNumericalDemos repositories. Most of these examples simply placed the code for the required functions directly in the Jupyter notebook. These were made before this Package was made as I was developing all the functions individually. To use these examples just make these modifications:\n\n1. install geostatspy with the command *pip install geostatspy*. I used the terminal Anaconda Navigator under the environments tab to make sure the package was accessible to Jupyter Notebooks.  \n2. add *import geostatspy.GSLIB as GSLIB* and *import geostatspy.geostats as geostats* to the top of the workflow \n3. add *GSLIB.* or *geostats.* as a 'prefex to the GeostatsPy functions based on which set they belong to.\n\nOver the next month I will update all workflows to use the geostatspy package instead of pasting code into the workflows. \n\nHere's a simple exaple of declustering with the geostatspy package.  It looks long because we include making a synthetic dataset, dropping samples to impose a sampling bias, declustering and all the visualization and diagnostics.\n\n```python\nimport geostatspy.GSLIB as GSLIB                          # GSLIB utilities, viz and wrapped functions\nimport geostatspy.geostats as geostats                    # GSLIB converted to Python\nimport matplotlib.pyplot as plt                           # plotting\nimport scipy.stats                                        # summary stats of ndarrays\n\n# Make a 2d simulation\nnx = 100; ny = 100; cell_size = 10                        # grid number of cells and cell size\nxmin = 0.0; ymin = 0.0;                                   # grid origin\nxmax = xmin + nx * cell_size; ymax = ymin + ny * cell_size# calculate the extent of model\nseed = 74073                                              # random number seed  for stochastic simulation    \nrange_max = 1800; range_min = 500; azimuth = 65           # Porosity variogram ranges and azimuth\nvario = GSLIB.make_variogram(0.0,nst=1,it1=1,cc1=1.0,azi1=65,hmaj1=1800,hmin1=500) # assume variogram model\nmean = 10.0; stdev = 2.0                                  # Porosity mean and standard deviation\nvmin = 4; vmax = 16; cmap = plt.cm.plasma                 # color min and max and using the plasma color map\n\n# calculate a stochastic realization with standard normal distribution\nsim = GSLIB.sgsim_uncond(1,nx,ny,cell_size,seed,vario,\"simulation\") # 2d unconditional simulation\nsim = GSLIB.affine(sim,mean,stdev)                        # correct the distribution to a target mean and standard deviation\n\n# extract samples from the 2D realization \nsampling_ncell = 10  # sample every 10th node from the model\nsamples = GSLIB.regular_sample(sim,xmin,xmax,ymin,ymax,sampling_ncell,10,10,nx,ny,'Realization')\n\n# remove samples to create a sample bias (preferentially removed low values to bias high)\nsamples_cluster = samples.drop([80,79,78,73,72,71,70,65,64,63,61,57,56,54,53,47,45,42]) # this removes specific rows (samples)\nsamples_cluster = samples_cluster.reset_index(drop=True)  # we reset and remove the index (it is not sequential anymore)\nGSLIB.locpix(sim,xmin,xmax,ymin,ymax,cell_size,vmin,vmax,samples_cluster,'X','Y','Realization','Porosity Realization and Regular Samples','X(m)','Y(m)','Porosity (%)',cmap,\"Por_Samples\")\n\n# apply the declus program convert to Python\nwts,cell_sizes,averages = geostats.declus(samples_cluster,'X','Y','Realization',iminmax=1,noff=5,ncell=100,cmin=1,cmax=2000)\nsamples_cluster['wts'] = wts            # add the weights to the sample data\nsamples_cluster.head()\n\n# plot the results and diagnostics for the declustering\nplt.subplot(321)\nGSLIB.locmap_st(samples_cluster,'X','Y','wts',xmin,xmax,ymin,ymax,0.0,2.0,'Declustering Weights','X (m)','Y (m)','Weights',cmap)\n\nplt.subplot(322)\nGSLIB.hist_st(samples_cluster['wts'],0.0,2.0,log=False,cumul=False,bins=20,weights=None,xlabel=\"Weights\",title=\"Declustering Weights\")\nplt.ylim(0.0,20)\n\nplt.subplot(323)\nGSLIB.hist_st(samples_cluster['Realization'],0.0,20.0,log=False,cumul=False,bins=20,weights=None,xlabel=\"Porosity\",title=\"Naive Porosity\")\nplt.ylim(0.0,20)\n\nplt.subplot(324)\nGSLIB.hist_st(samples_cluster['Realization'],0.0,20.0,log=False,cumul=False,bins=20,weights=samples_cluster['wts'],xlabel=\"Porosity\",title=\"Naive Porosity\")\nplt.ylim(0.0,20)\n\n# Plot the declustered mean vs. cell size to check the cell size selection\nplt.subplot(325)\nplt.scatter(cell_sizes,averages, c = \"black\", marker='o', alpha = 0.2, edgecolors = \"none\")\nplt.xlabel('Cell Size (m)')\nplt.ylabel('Porosity Average (%)')\nplt.title('Porosity Average vs. Cell Size')\nplt.ylim(8,12)\nplt.xlim(0,2000)\n\nprint(scipy.stats.describe(wts))\n\nplt.subplots_adjust(left=0.0, bottom=0.0, right=2.0, top=3.5, wspace=0.2, hspace=0.2)\nplt.show()\n\n```\nI also have various lecture notes, demonstrations and example workflows on GitHub (see link below), and some tutorials on my YouTube channel (see link below). I will continue to add more.  I'm just getting started,\n\n*Michael*\n\nMichael Pyrcz, Ph.D., P.Eng. Associate Professor The Hildebrand Department of Petroleum and Geosystems Engineering, Bureau of Economic Geology, The Jackson School of Geosciences, The University of Texas at Austin\n\n#### More Resources Available at: [Twitter](https://twitter.com/geostatsguy) | [GitHub](https://github.com/GeostatsGuy) | [Website](http://michaelpyrcz.com) | [GoogleScholar](https://scholar.google.com/citations?user=QVZ20eQAAAAJ&hl=en&oi=ao) | [Book](https://www.amazon.com/Geostatistical-Reservoir-Modeling-Michael-Pyrcz/dp/0199731446) | [YouTube](https://www.youtube.com/channel/UCLqEr-xV-ceHdXXXrTId5ig)  | [LinkedIn](https://www.linkedin.com/in/michael-pyrcz-61a648a1)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GeostatsGuy/GeostatsPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "geostatspy", "package_url": "https://pypi.org/project/geostatspy/", "platform": "", "project_url": "https://pypi.org/project/geostatspy/", "project_urls": {"Homepage": "https://github.com/GeostatsGuy/GeostatsPy"}, "release_url": "https://pypi.org/project/geostatspy/0.0.19/", "requires_dist": null, "requires_python": "", "summary": "Geostatistical methods from GSLIB: Geostatistical Library translated and reimplemented in Python", "version": "0.0.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\n    <img height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abdf50ba3ce82ca91985c20538a4183ae4f7934e/68747470733a2f2f6769746875622e636f6d2f47656f73746174734775792f47656f737461747350792f626c6f622f6d61737465722f67656f737461747370795f6c6f676f2e706e673f7261773d74727565\" width=\"200\">\n</p>\n<p><a href=\"https://geostatspy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e80237add0b0660ac17b6975de2651d0c2e8c4a7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f67656f737461747370792f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h2>GeostatsPy Package</h2>\n<p>The GeostatsPy Package brings GSLIB: Geostatistical Library (Deutsch and Journel, 1998) functions to Python. GSLIB is extremely robust and practical set of code for building spatial modeling workflows. I need it in Python to support my students in my <strong>Data Analytics</strong>, <strong>Geostatistics</strong> and <strong>Machine Learning</strong> courses.</p>\n<p>I find my students benefit from hands-on opportunities, in fact it is hard to imagine teaching these topics without providing the opportunity to handle the numerical methods and build workflows. I tried to have the use the original FORTRAN executables last year and even with support and worked out examples, it was an uphill battle.</p>\n<p>In addition, all my students and I are now working in Python for our research. Having geostatistical methods in Python directly impact the research of my group. Finally, I like to code. I have over 25 years of experience in FORTRAN, C++ and Visual Basic programing. This includes frontend (Qt interfaces in C++) and backend development with small and at times very large engineering and geoscience projects.</p>\n<p>This package includes 2 parts:</p>\n<ol>\n<li>\n<p>geostatspy.geostats includes GSLIB functions rewritten in Python. This currently includes all the variogram, distribution transformations, and spatial estimation and simulation (SGSIM soon) methods. I will continue adding functions to support modeling operations for practical subsurface model cosntruction.</p>\n</li>\n<li>\n<p>geostatspy.GSLIB includes reimplimentation of the GSLIB visualizations and low tech wrappers of the numerical methods  (note: the low-tech wrapper require access to GSLIB executables).</p>\n</li>\n</ol>\n<p>\n    <img height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/494d9f0f19cb46c70ce51f975a266662bbefb54f/68747470733a2f2f6769746875622e636f6d2f47656f73746174734775792f47656f737461747350792f626c6f622f6d61737465722f5443475f636f6c6f725f6c6f676f2e706e67\" width=\"220\">\n</p>\n<h3>The Authors</h3>\n<p>This package is being developed at the University of Texas in the Texas Center for Geostatistics.</p>\n<ul>\n<li>\n<p><strong>Michael J. Pyrcz, Ph.D., P.Eng.</strong> - associate professor with the University of Texas at Austin. Primary author of the package.</p>\n</li>\n<li>\n<p><strong>Anton Kupenko</strong> - bug fixes, added docstrings, code refractory for PEP8, removed duplicated functions and variables.  Thank you Anton!</p>\n</li>\n<li>\n<p><strong>Wendi Liu</strong> - Ph.D. student working with Michael Pyrcz at the University of Texas at Austin. GSLIB compiles in Mac OSX, 3D variogram calculation low-tech wrapper.</p>\n</li>\n<li>\n<p><strong>Alex E. Gigliotti</strong> - undergraduate student working with Michael Pyrcz at the University of Texas at Austin. Established unit testing.</p>\n</li>\n</ul>\n<h3>Package Inventory</h3>\n<p>Here's a list and some details on each of the functions available.</p>\n<h4>geostatspy.GSLIB Functions</h4>\n<p>Utilities to support moving between Python DataFrames and ndarrays, and Data Tables, Gridded Data and Models in Geo-EAS file format (standard to GSLIB):</p>\n<ol>\n<li><strong>ndarray2GSLIB</strong> - utility to convert 1D or 2D numpy ndarray to a GSLIB Geo-EAS file for use with GSLIB methods</li>\n<li><strong>GSLIB2ndarray</strong> - utility to convert GSLIB Geo-EAS files to a 1D or 2D numpy ndarray for use with Python methods</li>\n<li><strong>Dataframe2GSLIB(data_file,df)</strong> - utility to convert pandas DataFrame to a GSLIB Geo-EAS file for use with GSLIB methods</li>\n<li><strong>GSLIB2Dataframe</strong> - utility to convert GSLIB Geo-EAS files to a pandas DataFrame for use with Python methods</li>\n<li><strong>DataFrame2ndarray</strong> - take spatial data from a DataFrame and make a sparse 2D ndarray (NaN where no data in cell)</li>\n</ol>\n<p>Visualization functions with the same parameterization as GSLIB using matplotlib:</p>\n<ol>\n<li><strong>pixelplt</strong> - reimplemention in Python of GSLIB pixelplt with matplotlib methods</li>\n<li><strong>pixelplt_st</strong> - reimplemention in Python of GSLIB pixelplt with matplotlib methods with support for sub plots</li>\n<li><strong>pixelplt_log_st</strong> - reimplemention in Python of GSLIB pixelplt with matplotlib methods with support for sub plots and log color bar</li>\n<li><strong>locpix</strong> - pixel plot and location map, reimplementation in Python of a GSLIB MOD with MatPlotLib methods</li>\n<li><strong>locpix_st</strong> - pixel plot and location map, reimplementation in Python of a GSLIB MOD with MatPlotLib methods with support for sub plots</li>\n<li><strong>locpix_log_st</strong> - pixel plot and location map, reimplementation in Python of a GSLIB MOD with MatPlotLib methods with support for sub plots and log color bar</li>\n<li><strong>hist</strong> - histograms reimplemented in Python of GSLIB hist with MatPlotLib methods</li>\n<li><strong>hist_st</strong> - histograms reimplemented in Python of GSLIB hist with MatPlotLib methods with support for sub plots</li>\n</ol>\n<p>Data transformations</p>\n<ol>\n<li><strong>affine</strong> - affine distribution transformation to correct feature mean and standard deviation</li>\n<li><strong>nscore</strong> - normal score transform, wrapper for nscore from GSLIB (GSLIB's nscore.exe must be in working directory)</li>\n<li><strong>declus</strong> - cell-based declustering, 2D wrapper for declus from GSLIB (GSLIB's declus.exe must be in working directory)</li>\n</ol>\n<p>Spatial Continuity</p>\n<ol>\n<li><strong>make_variogram</strong> - make a dictionary of variogram parameters to for application with spatial estimation and simulation</li>\n<li><strong>gamv</strong> - irregularly sampled variogram, 2D wrapper for gam from GSLIB (.exe must be in working directory)</li>\n<li><strong>varmap</strong> - regular spaced data, 2D wrapper for varmap from GSLIB (.exe must be in working directory)</li>\n<li><strong>varmapv</strong> - irregular spaced data, 2D wrapper for varmap from GSLIB (.exe must be in working directory)</li>\n<li><strong>vmodel</strong> - variogram model, 2D wrapper for vmodel from GSLIB (.exe must be in working directory)</li>\n</ol>\n<p>Spatial Modeling</p>\n<ol>\n<li><strong>kb2d</strong> - kriging estimation, 2D wrapper for kb2d from GSLIB (GSLIB's kb2d.exe must be in working directory)</li>\n<li><strong>sgsim_uncond</strong> - sequential Gaussian simulation, 2D unconditional wrapper for sgsim from GSLIB (GSLIB's sgsim.exe must be in working directory)</li>\n<li><strong>sgsim</strong> - sequential Gaussian simulation, 2D wrapper for sgsim from GSLIB (GSLIB's sgsim.exe must be in working directory)</li>\n<li><strong>cosgsim_uncond</strong> - sequential Gaussian simulation, 2D unconditional wrapper for sgsim from GSLIB (GSLIB's sgsim.exe must be in working directory)</li>\n</ol>\n<p>Spatial Model Resampling</p>\n<ol>\n<li><strong>sample</strong> - sample 2D model with provided X and Y and append to DataFrame</li>\n<li><strong>gkern</strong> - make a Gaussian kernel for convolution, moving window averaging (from Teddy Hartano, Stack Overflow)</li>\n<li><strong>regular_sample</strong> - extract regular spaced samples from a 2D spatial model</li>\n<li><strong>random_sample</strong> - extract random samples from a 2D spatial model</li>\n<li><strong>DataFrame2ndarray</strong> - convent spatial point data in a DataFrame to a sparse ndarray grid</li>\n</ol>\n<h4>geostatspy.geostats Functions</h4>\n<p>Numerical methods in GSLIB (Deutsch and Journel, 1998) translated to Python:</p>\n<ol>\n<li><strong>correct_trend</strong> - correct the order relations of an indicator-based trend model</li>\n<li><strong>backtr</strong> - GSLIB's backtr function  to transform a distribution</li>\n<li><strong>declus</strong> - GSLIB's DECLUS program reimplimented for cell-based declustering in 2D</li>\n<li><strong>gam</strong> - GSLIB's GAM program reimplimented for variogram calculation with regular data in 2D</li>\n<li><strong>gamv</strong> - GSLIB's GAMV program reimplimented for variogram calculation with iregular data in 2D</li>\n<li><strong>varmapv</strong> - GSLIB's VARMAP program reimplimented for irregularly spaced spatial data in 2D</li>\n<li><strong>vmodel</strong> - GSLIB's VMODEL program reimplimented for visualization of nested variogram models in 2D</li>\n<li><strong>nscore</strong> - GSLIB's NSCORE program reimplimented for normal score distribution transformation</li>\n<li><strong>kb2d</strong> - GSLIB's KB2D program reimplimented for 2D spaitial estimation</li>\n<li><strong>ik2d</strong> - GSLIB's IK3D program reimplimented for 2D indicator-based kriging estimation</li>\n</ol>\n<p>More functionality will be added soon.</p>\n<h3>Package Dependencies</h3>\n<p>The functions rely on the following packages:</p>\n<ol>\n<li><strong>numpy</strong> - for ndarrays</li>\n<li><strong>pandas</strong> - for DataFrames</li>\n<li><strong>numpy.linalg</strong> - for linear algebra</li>\n<li><strong>numba</strong> - for numerical speed up</li>\n<li><strong>scipy</strong> - for fast nearest neighbor search</li>\n<li><strong>matplotlib.pyplot</strong> - for plotting</li>\n</ol>\n<p>These packages should be available with any modern Python distribution (e.g. <a href=\"https://www.anaconda.com/download/\" rel=\"nofollow\">https://www.anaconda.com/download/</a>).</p>\n<p>If you get a package import error, you may have to first install some of these packages. This can usually be accomplished by opening up a command window on Windows and then typing 'python -m pip install [package-name]'. More assistance is available with the respective package docs.</p>\n<h3>Explanation of GeostatsPy</h3>\n<p>GeostatsPy includes functions that run 2D workflows in GSLIB from Python (i.e. low tech wrappers), Python translations and reimplementations of GSLIB methods, along with utilities to move between GSLIB's Geo-EAS data sets and Pandas DataFrames, and grids and 2D NumPy ndarrays respectively and other useful operations such as resampling from regular datasets and rescaling distributions.</p>\n<p>The reimplementations as of now include NSCORE, GAM, GAMV, VMODEL, DECLUS, KB2D, IK2D and SGSIM etc. and most of the visualizations using the standard GSLIB parametric inputs and matplotlib back end. The low tech wrappers simply write the GSLIB parameters, run the GSLIB executables and then read in the GSLIB output. This allows for construction of Python workflows with the very robust GSLIB programs.</p>\n<h4>Why make this package?</h4>\n<p>I wanted a set of functions for working with the very robust and numerically efficient GSLIB: Geostatistical Library (Deutsch and Journel, 1998) in Python.  While there are other current solutions in Python.  I found that these solutions are either proprietary (not open source), not maintained or missing vital functionality; therefore, I have not been able to use these other solutions to teach modeling workflows to students with little or no programming experience.  Imagine getting 55 undergraduate students to role back to a previous version on Python because a single dependency of an available package is not available in a current Python version.  Image a student about to submit an assignment, and the code won't run immediately before submission because of an update to a dependency. I need methods for my students that just work, are reliable and do not require students to complete a more complicated environment setup.</p>\n<p>Deutsch and Journel (1998) gave the community GSLIB, an extremely robust and flexible set of tools to build spatial modeling workflows.  I have spent almost 20 years working with GSLIB along with a wide variety of subsurface modeling software. The powerful flexibility of GSLIB may be lost in methods that attempt to 'can' the inputs and parameters into complicated and hard to work with objects or attempt to combine the programs into a single program.  I love open source for teaching the theory, because students must see under the hood!  The concept of basic building blocks and simple, common inputs is essential to GSLIB.  I tried to preserve this by putting together functions with the same conventions as GSLIB, the result is a set of functions that (1) are practical for my students to use and (2) will move the GSLIB veterans into Python workflow construction. Honestly, I did nothing original, but that was my intention.</p>\n<p>I'm a very busy new professor, I'll keep adding more functionality as I have time.</p>\n<h4>More on GSLIB</h4>\n<p>The GSLIB source is available from GSLIB.com. If you would like to get the executables, ready to use without any need to compile them, go to GSLIB.com for Windows and Linux. I failed to find any Mac OS X executables so my Ph.D. student Wendi Liu compiled them for us (thank you Wendi!) and we have posted them here <a href=\"https://github.com/GeostatsGuy/GSLIB_MacOS\" rel=\"nofollow\">https://github.com/GeostatsGuy/GSLIB_MacOS</a>. If folks on Windows are encountering missing DLL's, I could post static builds. Wendi provided instructions to help Mac users with missing DLL issues at that same location above.</p>\n<h4>Making Images</h4>\n<p>The graphical / visualization methods have 2 variants. '_ST' specifies that function is suitable for building subplots (stacked / combined images) while those without '_ST' are for stand-alone images (an image is returned with the function call and an image file is saved in the working directory). The resolution and image file type are specified at the top of the GeostatPy.GSLIB functions.</p>\n<h4>Assistance Welcome</h4>\n<p>Found an issue (I'm sure there are issues!)? Got a new idea? Want to work on this? Let me know, submit revisions, I'm happy to collaborate.</p>\n<h3>Package Examples</h3>\n<p>There are many example workflow examples available on my GitHub account at <a href=\"https://github.com/GeostatsGuy/\" rel=\"nofollow\">https://github.com/GeostatsGuy/</a>, specifically the GeostatsPy <a href=\"https://github.com/GeostatsGuy/GeostatsPy\" rel=\"nofollow\">https://github.com/GeostatsGuy/GeostatsPy</a> and PythonNumericalDemos  <a href=\"https://github.com/GeostatsGuy/PythonNumericalDemos\" rel=\"nofollow\">https://github.com/GeostatsGuy/PythonNumericalDemos</a> repositories. Most of these examples simply placed the code for the required functions directly in the Jupyter notebook. These were made before this Package was made as I was developing all the functions individually. To use these examples just make these modifications:</p>\n<ol>\n<li>install geostatspy with the command <em>pip install geostatspy</em>. I used the terminal Anaconda Navigator under the environments tab to make sure the package was accessible to Jupyter Notebooks.</li>\n<li>add <em>import geostatspy.GSLIB as GSLIB</em> and <em>import geostatspy.geostats as geostats</em> to the top of the workflow</li>\n<li>add <em>GSLIB.</em> or <em>geostats.</em> as a 'prefex to the GeostatsPy functions based on which set they belong to.</li>\n</ol>\n<p>Over the next month I will update all workflows to use the geostatspy package instead of pasting code into the workflows.</p>\n<p>Here's a simple exaple of declustering with the geostatspy package.  It looks long because we include making a synthetic dataset, dropping samples to impose a sampling bias, declustering and all the visualization and diagnostics.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">geostatspy.GSLIB</span> <span class=\"k\">as</span> <span class=\"nn\">GSLIB</span>                          <span class=\"c1\"># GSLIB utilities, viz and wrapped functions</span>\n<span class=\"kn\">import</span> <span class=\"nn\">geostatspy.geostats</span> <span class=\"k\">as</span> <span class=\"nn\">geostats</span>                    <span class=\"c1\"># GSLIB converted to Python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>                           <span class=\"c1\"># plotting</span>\n<span class=\"kn\">import</span> <span class=\"nn\">scipy.stats</span>                                        <span class=\"c1\"># summary stats of ndarrays</span>\n\n<span class=\"c1\"># Make a 2d simulation</span>\n<span class=\"n\">nx</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"p\">;</span> <span class=\"n\">ny</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"p\">;</span> <span class=\"n\">cell_size</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>                        <span class=\"c1\"># grid number of cells and cell size</span>\n<span class=\"n\">xmin</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span><span class=\"p\">;</span> <span class=\"n\">ymin</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span><span class=\"p\">;</span>                                   <span class=\"c1\"># grid origin</span>\n<span class=\"n\">xmax</span> <span class=\"o\">=</span> <span class=\"n\">xmin</span> <span class=\"o\">+</span> <span class=\"n\">nx</span> <span class=\"o\">*</span> <span class=\"n\">cell_size</span><span class=\"p\">;</span> <span class=\"n\">ymax</span> <span class=\"o\">=</span> <span class=\"n\">ymin</span> <span class=\"o\">+</span> <span class=\"n\">ny</span> <span class=\"o\">*</span> <span class=\"n\">cell_size</span><span class=\"c1\"># calculate the extent of model</span>\n<span class=\"n\">seed</span> <span class=\"o\">=</span> <span class=\"mi\">74073</span>                                              <span class=\"c1\"># random number seed  for stochastic simulation    </span>\n<span class=\"n\">range_max</span> <span class=\"o\">=</span> <span class=\"mi\">1800</span><span class=\"p\">;</span> <span class=\"n\">range_min</span> <span class=\"o\">=</span> <span class=\"mi\">500</span><span class=\"p\">;</span> <span class=\"n\">azimuth</span> <span class=\"o\">=</span> <span class=\"mi\">65</span>           <span class=\"c1\"># Porosity variogram ranges and azimuth</span>\n<span class=\"n\">vario</span> <span class=\"o\">=</span> <span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">make_variogram</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"n\">nst</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">it1</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">cc1</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"n\">azi1</span><span class=\"o\">=</span><span class=\"mi\">65</span><span class=\"p\">,</span><span class=\"n\">hmaj1</span><span class=\"o\">=</span><span class=\"mi\">1800</span><span class=\"p\">,</span><span class=\"n\">hmin1</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span> <span class=\"c1\"># assume variogram model</span>\n<span class=\"n\">mean</span> <span class=\"o\">=</span> <span class=\"mf\">10.0</span><span class=\"p\">;</span> <span class=\"n\">stdev</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>                                  <span class=\"c1\"># Porosity mean and standard deviation</span>\n<span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">16</span><span class=\"p\">;</span> <span class=\"n\">cmap</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">plasma</span>                 <span class=\"c1\"># color min and max and using the plasma color map</span>\n\n<span class=\"c1\"># calculate a stochastic realization with standard normal distribution</span>\n<span class=\"n\">sim</span> <span class=\"o\">=</span> <span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">sgsim_uncond</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">nx</span><span class=\"p\">,</span><span class=\"n\">ny</span><span class=\"p\">,</span><span class=\"n\">cell_size</span><span class=\"p\">,</span><span class=\"n\">seed</span><span class=\"p\">,</span><span class=\"n\">vario</span><span class=\"p\">,</span><span class=\"s2\">\"simulation\"</span><span class=\"p\">)</span> <span class=\"c1\"># 2d unconditional simulation</span>\n<span class=\"n\">sim</span> <span class=\"o\">=</span> <span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">affine</span><span class=\"p\">(</span><span class=\"n\">sim</span><span class=\"p\">,</span><span class=\"n\">mean</span><span class=\"p\">,</span><span class=\"n\">stdev</span><span class=\"p\">)</span>                        <span class=\"c1\"># correct the distribution to a target mean and standard deviation</span>\n\n<span class=\"c1\"># extract samples from the 2D realization </span>\n<span class=\"n\">sampling_ncell</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>  <span class=\"c1\"># sample every 10th node from the model</span>\n<span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">regular_sample</span><span class=\"p\">(</span><span class=\"n\">sim</span><span class=\"p\">,</span><span class=\"n\">xmin</span><span class=\"p\">,</span><span class=\"n\">xmax</span><span class=\"p\">,</span><span class=\"n\">ymin</span><span class=\"p\">,</span><span class=\"n\">ymax</span><span class=\"p\">,</span><span class=\"n\">sampling_ncell</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">nx</span><span class=\"p\">,</span><span class=\"n\">ny</span><span class=\"p\">,</span><span class=\"s1\">'Realization'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># remove samples to create a sample bias (preferentially removed low values to bias high)</span>\n<span class=\"n\">samples_cluster</span> <span class=\"o\">=</span> <span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">drop</span><span class=\"p\">([</span><span class=\"mi\">80</span><span class=\"p\">,</span><span class=\"mi\">79</span><span class=\"p\">,</span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"mi\">73</span><span class=\"p\">,</span><span class=\"mi\">72</span><span class=\"p\">,</span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"mi\">70</span><span class=\"p\">,</span><span class=\"mi\">65</span><span class=\"p\">,</span><span class=\"mi\">64</span><span class=\"p\">,</span><span class=\"mi\">63</span><span class=\"p\">,</span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"mi\">57</span><span class=\"p\">,</span><span class=\"mi\">56</span><span class=\"p\">,</span><span class=\"mi\">54</span><span class=\"p\">,</span><span class=\"mi\">53</span><span class=\"p\">,</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">45</span><span class=\"p\">,</span><span class=\"mi\">42</span><span class=\"p\">])</span> <span class=\"c1\"># this removes specific rows (samples)</span>\n<span class=\"n\">samples_cluster</span> <span class=\"o\">=</span> <span class=\"n\">samples_cluster</span><span class=\"o\">.</span><span class=\"n\">reset_index</span><span class=\"p\">(</span><span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># we reset and remove the index (it is not sequential anymore)</span>\n<span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">locpix</span><span class=\"p\">(</span><span class=\"n\">sim</span><span class=\"p\">,</span><span class=\"n\">xmin</span><span class=\"p\">,</span><span class=\"n\">xmax</span><span class=\"p\">,</span><span class=\"n\">ymin</span><span class=\"p\">,</span><span class=\"n\">ymax</span><span class=\"p\">,</span><span class=\"n\">cell_size</span><span class=\"p\">,</span><span class=\"n\">vmin</span><span class=\"p\">,</span><span class=\"n\">vmax</span><span class=\"p\">,</span><span class=\"n\">samples_cluster</span><span class=\"p\">,</span><span class=\"s1\">'X'</span><span class=\"p\">,</span><span class=\"s1\">'Y'</span><span class=\"p\">,</span><span class=\"s1\">'Realization'</span><span class=\"p\">,</span><span class=\"s1\">'Porosity Realization and Regular Samples'</span><span class=\"p\">,</span><span class=\"s1\">'X(m)'</span><span class=\"p\">,</span><span class=\"s1\">'Y(m)'</span><span class=\"p\">,</span><span class=\"s1\">'Porosity (%)'</span><span class=\"p\">,</span><span class=\"n\">cmap</span><span class=\"p\">,</span><span class=\"s2\">\"Por_Samples\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># apply the declus program convert to Python</span>\n<span class=\"n\">wts</span><span class=\"p\">,</span><span class=\"n\">cell_sizes</span><span class=\"p\">,</span><span class=\"n\">averages</span> <span class=\"o\">=</span> <span class=\"n\">geostats</span><span class=\"o\">.</span><span class=\"n\">declus</span><span class=\"p\">(</span><span class=\"n\">samples_cluster</span><span class=\"p\">,</span><span class=\"s1\">'X'</span><span class=\"p\">,</span><span class=\"s1\">'Y'</span><span class=\"p\">,</span><span class=\"s1\">'Realization'</span><span class=\"p\">,</span><span class=\"n\">iminmax</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">noff</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"n\">ncell</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"n\">cmin</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">cmax</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">)</span>\n<span class=\"n\">samples_cluster</span><span class=\"p\">[</span><span class=\"s1\">'wts'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">wts</span>            <span class=\"c1\"># add the weights to the sample data</span>\n<span class=\"n\">samples_cluster</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># plot the results and diagnostics for the declustering</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">321</span><span class=\"p\">)</span>\n<span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">locmap_st</span><span class=\"p\">(</span><span class=\"n\">samples_cluster</span><span class=\"p\">,</span><span class=\"s1\">'X'</span><span class=\"p\">,</span><span class=\"s1\">'Y'</span><span class=\"p\">,</span><span class=\"s1\">'wts'</span><span class=\"p\">,</span><span class=\"n\">xmin</span><span class=\"p\">,</span><span class=\"n\">xmax</span><span class=\"p\">,</span><span class=\"n\">ymin</span><span class=\"p\">,</span><span class=\"n\">ymax</span><span class=\"p\">,</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">2.0</span><span class=\"p\">,</span><span class=\"s1\">'Declustering Weights'</span><span class=\"p\">,</span><span class=\"s1\">'X (m)'</span><span class=\"p\">,</span><span class=\"s1\">'Y (m)'</span><span class=\"p\">,</span><span class=\"s1\">'Weights'</span><span class=\"p\">,</span><span class=\"n\">cmap</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">322</span><span class=\"p\">)</span>\n<span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">hist_st</span><span class=\"p\">(</span><span class=\"n\">samples_cluster</span><span class=\"p\">[</span><span class=\"s1\">'wts'</span><span class=\"p\">],</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">2.0</span><span class=\"p\">,</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">cumul</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">bins</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">\"Weights\"</span><span class=\"p\">,</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Declustering Weights\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylim</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">323</span><span class=\"p\">)</span>\n<span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">hist_st</span><span class=\"p\">(</span><span class=\"n\">samples_cluster</span><span class=\"p\">[</span><span class=\"s1\">'Realization'</span><span class=\"p\">],</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">20.0</span><span class=\"p\">,</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">cumul</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">bins</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">\"Porosity\"</span><span class=\"p\">,</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Naive Porosity\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylim</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">324</span><span class=\"p\">)</span>\n<span class=\"n\">GSLIB</span><span class=\"o\">.</span><span class=\"n\">hist_st</span><span class=\"p\">(</span><span class=\"n\">samples_cluster</span><span class=\"p\">[</span><span class=\"s1\">'Realization'</span><span class=\"p\">],</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">20.0</span><span class=\"p\">,</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">cumul</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">bins</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"n\">samples_cluster</span><span class=\"p\">[</span><span class=\"s1\">'wts'</span><span class=\"p\">],</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">\"Porosity\"</span><span class=\"p\">,</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Naive Porosity\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylim</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot the declustered mean vs. cell size to check the cell size selection</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">325</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">cell_sizes</span><span class=\"p\">,</span><span class=\"n\">averages</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s2\">\"black\"</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">'o'</span><span class=\"p\">,</span> <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">'Cell Size (m)'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Porosity Average (%)'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Porosity Average vs. Cell Size'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylim</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlim</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2000</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">scipy</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"n\">wts</span><span class=\"p\">))</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots_adjust</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">top</span><span class=\"o\">=</span><span class=\"mf\">3.5</span><span class=\"p\">,</span> <span class=\"n\">wspace</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">hspace</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>I also have various lecture notes, demonstrations and example workflows on GitHub (see link below), and some tutorials on my YouTube channel (see link below). I will continue to add more.  I'm just getting started,</p>\n<p><em>Michael</em></p>\n<p>Michael Pyrcz, Ph.D., P.Eng. Associate Professor The Hildebrand Department of Petroleum and Geosystems Engineering, Bureau of Economic Geology, The Jackson School of Geosciences, The University of Texas at Austin</p>\n<h4>More Resources Available at: <a href=\"https://twitter.com/geostatsguy\" rel=\"nofollow\">Twitter</a> | <a href=\"https://github.com/GeostatsGuy\" rel=\"nofollow\">GitHub</a> | <a href=\"http://michaelpyrcz.com\" rel=\"nofollow\">Website</a> | <a href=\"https://scholar.google.com/citations?user=QVZ20eQAAAAJ&amp;hl=en&amp;oi=ao\" rel=\"nofollow\">GoogleScholar</a> | <a href=\"https://www.amazon.com/Geostatistical-Reservoir-Modeling-Michael-Pyrcz/dp/0199731446\" rel=\"nofollow\">Book</a> | <a href=\"https://www.youtube.com/channel/UCLqEr-xV-ceHdXXXrTId5ig\" rel=\"nofollow\">YouTube</a>  | <a href=\"https://www.linkedin.com/in/michael-pyrcz-61a648a1\" rel=\"nofollow\">LinkedIn</a></h4>\n\n          </div>"}, "last_serial": 6445539, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a2b6ebef4a282a191dd5b6c5e62d4bf2", "sha256": "ad277c37076611fd30f1c38ce3cb8aa846af1e733e353c789ec7d3d89345a73a"}, "downloads": -1, "filename": "geostatspy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a2b6ebef4a282a191dd5b6c5e62d4bf2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4998, "upload_time": "2019-01-12T00:50:37", "upload_time_iso_8601": "2019-01-12T00:50:37.705483Z", "url": "https://files.pythonhosted.org/packages/37/19/71c75dcc528a11e4cf704e572acadd7bc1b94e89246666ee3cb3391a0877/geostatspy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a40b3d7dc62ac821e84259c46b9b4b99", "sha256": "f1f1531667ef7893139a831cdc948258031c41cf22401b96958790a1b25f87ac"}, "downloads": -1, "filename": "geostatspy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a40b3d7dc62ac821e84259c46b9b4b99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4187, "upload_time": "2019-01-12T00:50:39", "upload_time_iso_8601": "2019-01-12T00:50:39.500784Z", "url": "https://files.pythonhosted.org/packages/9d/c3/8588849a5a20613770b0a45b5d17cda08683bf3ea2bce9f549f193807cdd/geostatspy-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "68fb947a7c30aac63588771ddcf10ede", "sha256": "15ff79c4b3dae9a88ee36bbc52d75fa4c367b6b4710a69ed53a46712f780da6c"}, "downloads": -1, "filename": "geostatspy-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "68fb947a7c30aac63588771ddcf10ede", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42067, "upload_time": "2019-03-25T23:21:01", "upload_time_iso_8601": "2019-03-25T23:21:01.494032Z", "url": "https://files.pythonhosted.org/packages/9a/a0/49e97a2eb6cfa63d86a76ca6d4fb7833d8ec9ca192531a84a485151ae5cc/geostatspy-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c7f7ef4508668d75ec7e74b83fcceaa", "sha256": "320074b45fe49fd5eef1285944654495bb1d22cd801fd11a8959ebdcc5f8b1f9"}, "downloads": -1, "filename": "geostatspy-0.0.10.tar.gz", "has_sig": false, "md5_digest": "0c7f7ef4508668d75ec7e74b83fcceaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41028, "upload_time": "2019-03-25T23:21:02", "upload_time_iso_8601": "2019-03-25T23:21:02.997290Z", "url": "https://files.pythonhosted.org/packages/cf/0b/e4c3b93df7c16926f10269ab524c8e060f3865916715b71cda107db489ea/geostatspy-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "386e952232d739dfa9b53c16e1292df0", "sha256": "04995f2126defb1b63c6cf29ada2c0d17e88ad1f94560eacff01a040d9d43e04"}, "downloads": -1, "filename": "geostatspy-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "386e952232d739dfa9b53c16e1292df0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42077, "upload_time": "2019-03-25T23:36:20", "upload_time_iso_8601": "2019-03-25T23:36:20.854928Z", "url": "https://files.pythonhosted.org/packages/cf/7f/6b79bd894c1846f54739dcdd4d850206abd36ae7ed88fa64d81e06c18cce/geostatspy-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "045700840e6c3253c656f07f68f4726d", "sha256": "d40389bc3e74acc2f0dc8697e399681746a121f9de6386475b4dadc9b2b9de80"}, "downloads": -1, "filename": "geostatspy-0.0.11.tar.gz", "has_sig": false, "md5_digest": "045700840e6c3253c656f07f68f4726d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41038, "upload_time": "2019-03-25T23:36:22", "upload_time_iso_8601": "2019-03-25T23:36:22.276008Z", "url": "https://files.pythonhosted.org/packages/4f/28/0810b4229a9fbf9acb3bd11684afed42e23a99edd37b4a1494239105955f/geostatspy-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "b9383c340be920a87da8a6d5da26dd27", "sha256": "017d30dc52e2aaaeff51bb1091e9f7dcb63da5f86a7bf945253c49c16290803a"}, "downloads": -1, "filename": "geostatspy-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "b9383c340be920a87da8a6d5da26dd27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42081, "upload_time": "2019-03-25T23:42:08", "upload_time_iso_8601": "2019-03-25T23:42:08.843690Z", "url": "https://files.pythonhosted.org/packages/81/5a/55de97a671d5b3e83ba0efe09d99642a25c4e5e3bcdbd7dba473e31aae15/geostatspy-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ab700fae4ba1cab31bae653fb2b3aff", "sha256": "6d3fb1dc255ad5cc25bc3153812f32b70c9925ab83a8e2f2ea9cb8da08d10e96"}, "downloads": -1, "filename": "geostatspy-0.0.12.tar.gz", "has_sig": false, "md5_digest": "5ab700fae4ba1cab31bae653fb2b3aff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41037, "upload_time": "2019-03-25T23:42:10", "upload_time_iso_8601": "2019-03-25T23:42:10.240550Z", "url": "https://files.pythonhosted.org/packages/ac/da/839f804f7314e9e40a823d54ae0ecd085bd25ddded33eae0995cee68caed/geostatspy-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "00c5d29e5646ffab04e7817ea2c05528", "sha256": "97183ec6cb559a20bfb63269af2ceef607a86a9e47bea10b5c5220eace397541"}, "downloads": -1, "filename": "geostatspy-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "00c5d29e5646ffab04e7817ea2c05528", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42081, "upload_time": "2019-03-25T23:46:22", "upload_time_iso_8601": "2019-03-25T23:46:22.197717Z", "url": "https://files.pythonhosted.org/packages/51/d6/509270d351252357d56c8dd6454e2b210f9cf38281094a41548479837381/geostatspy-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77a5207a13d5f051a83237b1ab4550b4", "sha256": "f27698bd28667c2f0da342f001cdb402728e69a1c57f2b0a2fc632d28a92abd0"}, "downloads": -1, "filename": "geostatspy-0.0.13.tar.gz", "has_sig": false, "md5_digest": "77a5207a13d5f051a83237b1ab4550b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41035, "upload_time": "2019-03-25T23:46:23", "upload_time_iso_8601": "2019-03-25T23:46:23.354191Z", "url": "https://files.pythonhosted.org/packages/7f/7d/632c180998a9d7674f03b7165ce9a12a36a5ed2cc2c48ac4a0619b4e2de1/geostatspy-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "351876d2d39b13d2c70195f14609607a", "sha256": "e50b123f30d9caa5d9c5cac217a6f361b4e386cb170b47e251dc438b6b4ee70f"}, "downloads": -1, "filename": "geostatspy-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "351876d2d39b13d2c70195f14609607a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42091, "upload_time": "2019-03-25T23:50:09", "upload_time_iso_8601": "2019-03-25T23:50:09.598145Z", "url": "https://files.pythonhosted.org/packages/d8/aa/9b74d7b20c2156bebc3f7fc42d4ced51c8ce0bc7d83fae29b58677cf784f/geostatspy-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6856b110ab3949767eafbcddd096123a", "sha256": "1c62611c0292533c694cd15dc03770a2569fc2c0332739c3585652cbd8cd22db"}, "downloads": -1, "filename": "geostatspy-0.0.14.tar.gz", "has_sig": false, "md5_digest": "6856b110ab3949767eafbcddd096123a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41042, "upload_time": "2019-03-25T23:50:11", "upload_time_iso_8601": "2019-03-25T23:50:11.019422Z", "url": "https://files.pythonhosted.org/packages/a8/0d/7778457d62aa692df1c0bc797cf3d33048862138058c010e66b1a338579a/geostatspy-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "3d2c6da5cb7763dbafff21ff1a3f2752", "sha256": "18a11b7fe28507e539364fde056272c4838a6af2a7a81c67cc453accb039881e"}, "downloads": -1, "filename": "geostatspy-0.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "3d2c6da5cb7763dbafff21ff1a3f2752", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42099, "upload_time": "2019-03-25T23:53:17", "upload_time_iso_8601": "2019-03-25T23:53:17.382944Z", "url": "https://files.pythonhosted.org/packages/b3/3d/58ec6ef9a081d1889f7a442592edc2db97d57a1acd1e5b39d000636b4b8d/geostatspy-0.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c7f53226e57c0f824f43255c7ba688d", "sha256": "6e18e15eac8c7619fb910c4a08d8b657f288a83c31c140cb47b223a64fcdb073"}, "downloads": -1, "filename": "geostatspy-0.0.15.tar.gz", "has_sig": false, "md5_digest": "6c7f53226e57c0f824f43255c7ba688d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41054, "upload_time": "2019-03-25T23:53:18", "upload_time_iso_8601": "2019-03-25T23:53:18.757033Z", "url": "https://files.pythonhosted.org/packages/8d/04/8a65c5b5639cc61c765fe4a203b535ad0d774e8acc933bc94cb331f48566/geostatspy-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "ffe46d5d9e978d94e73335d75aa9d812", "sha256": "347fa5b148cd13587c6c028398b6052059061e2d3ebd4f4adef0374dd2698cc4"}, "downloads": -1, "filename": "geostatspy-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "ffe46d5d9e978d94e73335d75aa9d812", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46439, "upload_time": "2019-03-29T22:41:08", "upload_time_iso_8601": "2019-03-29T22:41:08.827121Z", "url": "https://files.pythonhosted.org/packages/ad/f5/7d17edf2a31cd35930a5a4f50d707e1a849cae22e3a26315d68254523201/geostatspy-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4ddf410f25f47612511f8da3d69e6c6", "sha256": "5729c0a939c0fce4edb98be62860672f5401b82e2a4f577cb97508a306e6ab88"}, "downloads": -1, "filename": "geostatspy-0.0.16.tar.gz", "has_sig": false, "md5_digest": "e4ddf410f25f47612511f8da3d69e6c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45264, "upload_time": "2019-03-29T22:41:10", "upload_time_iso_8601": "2019-03-29T22:41:10.798170Z", "url": "https://files.pythonhosted.org/packages/be/38/6c6386bb8ad3add825cb8590393c00f1cf764e9ae961392c2ceb2c7a90e2/geostatspy-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "f77a06cede3de4429560328de3aaf9b0", "sha256": "b58a3b32a80c3f7b32ab17b8323a60564f6a0e203dd13864049211f14d66f0e3"}, "downloads": -1, "filename": "geostatspy-0.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "f77a06cede3de4429560328de3aaf9b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46440, "upload_time": "2019-04-29T23:33:27", "upload_time_iso_8601": "2019-04-29T23:33:27.830397Z", "url": "https://files.pythonhosted.org/packages/9d/18/eb0f7c84659760761b755b1b0842adf1f0a892312c995a89bbe663020dd7/geostatspy-0.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a417f9a89ad4cacbb2ca3af7a841996", "sha256": "04f63dfdf0f9b384804fab0f97847957e672da021dd9052b7f01eda5cd929671"}, "downloads": -1, "filename": "geostatspy-0.0.17.tar.gz", "has_sig": false, "md5_digest": "1a417f9a89ad4cacbb2ca3af7a841996", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45267, "upload_time": "2019-04-29T23:33:31", "upload_time_iso_8601": "2019-04-29T23:33:31.382983Z", "url": "https://files.pythonhosted.org/packages/5f/1f/16405f43237a1f7a43d795e8285c8f08384259fa75ddbbef4d0dcb8a6359/geostatspy-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "ca53c8fbab86160f3d697f09919ebb8b", "sha256": "85213427e54febb45f2edbfa83429f4a1fa585eff389dba1d0996639a98fe3ac"}, "downloads": -1, "filename": "geostatspy-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "ca53c8fbab86160f3d697f09919ebb8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49181, "upload_time": "2019-07-30T21:40:00", "upload_time_iso_8601": "2019-07-30T21:40:00.358363Z", "url": "https://files.pythonhosted.org/packages/63/59/d82eab4fe30ac18de82a3eea1e0bf063b2493295ba5f1b9a8e39b8bc9d0b/geostatspy-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cae1e5ef1925fa58456927a97a522b33", "sha256": "5d69b1cad1df4376d59424671c40670d722db69488c45fb3868041f6c8b01df9"}, "downloads": -1, "filename": "geostatspy-0.0.18.tar.gz", "has_sig": false, "md5_digest": "cae1e5ef1925fa58456927a97a522b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47920, "upload_time": "2019-07-30T21:40:02", "upload_time_iso_8601": "2019-07-30T21:40:02.650156Z", "url": "https://files.pythonhosted.org/packages/53/96/c90a29336ea95cfef4c8ce4d641fe81fef45f42dd53d4aef32275c4aa384/geostatspy-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "e4032df3b11043e01e5931d9ec299d1d", "sha256": "c8fd673382358b2c551621ac3294d464d362ac048b365d978e25bc9b187dbca0"}, "downloads": -1, "filename": "geostatspy-0.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "e4032df3b11043e01e5931d9ec299d1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56855, "upload_time": "2020-01-13T16:53:12", "upload_time_iso_8601": "2020-01-13T16:53:12.093205Z", "url": "https://files.pythonhosted.org/packages/45/a3/82b1561e9b46576252cfb9670e23682123485641e9d5a017b7a912695e39/geostatspy-0.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94dc7d19575d8187b668a5682984c240", "sha256": "29c4e59c9b5bca65e64e767744364b2006d114299fc99e0a6d081bbe86c3c711"}, "downloads": -1, "filename": "geostatspy-0.0.19.tar.gz", "has_sig": false, "md5_digest": "94dc7d19575d8187b668a5682984c240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55442, "upload_time": "2020-01-13T16:53:14", "upload_time_iso_8601": "2020-01-13T16:53:14.002330Z", "url": "https://files.pythonhosted.org/packages/ce/05/50cf032882b45d5e9fea57d479e172781c08b94bc24987f5093d7a932f27/geostatspy-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "af8a6cf86be278309a46b5adb225fc37", "sha256": "67d2063474e3b6905ceee8aaece8c4e0624a4060b68c872aa0ef7e0579e21f3d"}, "downloads": -1, "filename": "geostatspy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af8a6cf86be278309a46b5adb225fc37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20280, "upload_time": "2019-01-14T20:41:26", "upload_time_iso_8601": "2019-01-14T20:41:26.545558Z", "url": "https://files.pythonhosted.org/packages/11/9e/031b234725afa6e651bab0b8b8a8f728179751d98c89fceabd52a371e8c0/geostatspy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5342454927ab23a1d4b5f6e529149ca", "sha256": "0d81c2d195c75a0566977c7cd07ed9cfd74d930043c6e047d54609da3cb006c5"}, "downloads": -1, "filename": "geostatspy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e5342454927ab23a1d4b5f6e529149ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17046, "upload_time": "2019-01-14T20:41:27", "upload_time_iso_8601": "2019-01-14T20:41:27.888460Z", "url": "https://files.pythonhosted.org/packages/26/8d/cea8c60be0a88881a6aa61a7fd926be405737ce633f7ad5d9e50567e851a/geostatspy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6e005e2de825b80f3c037cc0c5d3ebc9", "sha256": "0fb4011663a23eee0701489f6f7d264ae1437ab862763e880f11366ca00104ee"}, "downloads": -1, "filename": "geostatspy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6e005e2de825b80f3c037cc0c5d3ebc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25537, "upload_time": "2019-01-15T01:14:37", "upload_time_iso_8601": "2019-01-15T01:14:37.512013Z", "url": "https://files.pythonhosted.org/packages/47/8f/e5382f58d8c0eb31067ed2855ce45b02ffd73ba033c98755437aea7301d0/geostatspy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c76328fa761742b25771ed371cd7bac9", "sha256": "5663cf14ba1ad8213ab13edb4120e37a2e96e145b04ffadf1ac6cd15cddd2a11"}, "downloads": -1, "filename": "geostatspy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c76328fa761742b25771ed371cd7bac9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24380, "upload_time": "2019-01-15T01:14:38", "upload_time_iso_8601": "2019-01-15T01:14:38.934437Z", "url": "https://files.pythonhosted.org/packages/81/53/2c3c9ace173e7067dc76af4e5500c2c76dd9ec3c99513d32d30424920e00/geostatspy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fd18b129d9bd83d88eff86966f0b9a05", "sha256": "d4d84a476d59a3fabccb5027734ab749bd05b9fec78698a1209cbb84762ebaf0"}, "downloads": -1, "filename": "geostatspy-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd18b129d9bd83d88eff86966f0b9a05", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25865, "upload_time": "2019-02-22T21:45:18", "upload_time_iso_8601": "2019-02-22T21:45:18.417411Z", "url": "https://files.pythonhosted.org/packages/36/48/87b8592135521e308f7abb0c03227c9c7676731403530df8be5daf1c1a86/geostatspy-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb0bd69be761b2678a3f62df397fed11", "sha256": "37d2957453e02644fb60802d3997e1f5ef93a43061d635beb6808ac5e609c835"}, "downloads": -1, "filename": "geostatspy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "eb0bd69be761b2678a3f62df397fed11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25860, "upload_time": "2019-01-15T16:42:13", "upload_time_iso_8601": "2019-01-15T16:42:13.787332Z", "url": "https://files.pythonhosted.org/packages/c5/77/c3e5f659a43c41bbc950376a35c2dc374db0adacafab8af6dbd116164a8e/geostatspy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e89cc1a52f395009a2d0834f6781c53", "sha256": "8c837bf5ccaec1130e79b0514c0041cdd5602cdc9370a1dfeefc1fa19e1889db"}, "downloads": -1, "filename": "geostatspy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0e89cc1a52f395009a2d0834f6781c53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24720, "upload_time": "2019-01-15T16:42:14", "upload_time_iso_8601": "2019-01-15T16:42:14.836796Z", "url": "https://files.pythonhosted.org/packages/4b/fe/7c4ab2203ab1ddef682901b651bf8bd9255bd0e629969cd7c591349be763/geostatspy-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "e5dcf858bef58b13f28164785915f8d0", "sha256": "cac4b954f6796463197a83f3d259d35b8183bdc08d257dd9c48901c701a47638"}, "downloads": -1, "filename": "geostatspy-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e5dcf858bef58b13f28164785915f8d0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25863, "upload_time": "2019-02-22T21:47:33", "upload_time_iso_8601": "2019-02-22T21:47:33.876452Z", "url": "https://files.pythonhosted.org/packages/ff/27/c8e1953e75e499a21a9100d3a5ee35e80ec7bc2213ecb080be87ae8cb84e/geostatspy-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a7102f58504badd41e1df7c3ba182c6", "sha256": "ed1e5c188b63a2ece391b8f246d687b20ddd0c196fc41f2eb0e4f303a3cf20e3"}, "downloads": -1, "filename": "geostatspy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5a7102f58504badd41e1df7c3ba182c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24713, "upload_time": "2019-02-22T21:47:35", "upload_time_iso_8601": "2019-02-22T21:47:35.050258Z", "url": "https://files.pythonhosted.org/packages/66/15/c54aa66278f3a007eab1b42de5ab6472fc87adb3edbb98ffe5770cc3a9a9/geostatspy-0.0.5.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "df3cd1e12dc828460cf08b2d95935ec4", "sha256": "9e9be071dcf747ac5f53a8e5cc3b258eb493ba33234253955b450520eb8d8257"}, "downloads": -1, "filename": "geostatspy-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "df3cd1e12dc828460cf08b2d95935ec4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32497, "upload_time": "2019-03-11T18:56:11", "upload_time_iso_8601": "2019-03-11T18:56:11.562048Z", "url": "https://files.pythonhosted.org/packages/7e/5b/d653598845e098bbd5a480bd5042bf8f764c488904b582fe03e941700b6f/geostatspy-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a533ccdb63356459e4f6cd1cf7657a76", "sha256": "3eee796e73525b147267e4653eda8b06a1980ec255c690a69a846eb6333c0e5a"}, "downloads": -1, "filename": "geostatspy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a533ccdb63356459e4f6cd1cf7657a76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31351, "upload_time": "2019-03-11T18:56:12", "upload_time_iso_8601": "2019-03-11T18:56:12.959323Z", "url": "https://files.pythonhosted.org/packages/18/b0/4e33e465b631e0c760ff6ef4036a57ce3eb502abf174b26fd90c4751bd92/geostatspy-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "71b038dc50351cead683781fbeb0e0db", "sha256": "65c0e7f22b72ae50e1a96450d40609d4871194be8ce1ff4eddd829192f261674"}, "downloads": -1, "filename": "geostatspy-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "71b038dc50351cead683781fbeb0e0db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33254, "upload_time": "2019-03-11T20:03:25", "upload_time_iso_8601": "2019-03-11T20:03:25.432023Z", "url": "https://files.pythonhosted.org/packages/64/2d/eebf4030e21e527c677820e8afe119e69af9bdf467225b3ce64fdd35f8e5/geostatspy-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6262a760a2d70d84589c7bd48196f404", "sha256": "bae9efcb944fc1bfb916ade150e33a05524d4225535171753f0f0867c73b0eb2"}, "downloads": -1, "filename": "geostatspy-0.0.8.tar.gz", "has_sig": false, "md5_digest": "6262a760a2d70d84589c7bd48196f404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32192, "upload_time": "2019-03-11T20:03:26", "upload_time_iso_8601": "2019-03-11T20:03:26.787612Z", "url": "https://files.pythonhosted.org/packages/03/42/fa692cb88b4dd963f1d605c271b2fb5ebbfe04d5059cd7e7e1419231465c/geostatspy-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "e63a55f31f74e508515af0452ee3d970", "sha256": "bb35edbf411aee21f00e28a269283d1653d2d9a382c91d6cd874b2ddaa186c22"}, "downloads": -1, "filename": "geostatspy-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e63a55f31f74e508515af0452ee3d970", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33248, "upload_time": "2019-03-12T14:21:44", "upload_time_iso_8601": "2019-03-12T14:21:44.105823Z", "url": "https://files.pythonhosted.org/packages/e8/14/c38e047859e4c4f6dbadffcaae6d6a6b9ce4a97d19cead82f3e510af89bd/geostatspy-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f3f8f6dc70f8a37627bfcff90158fe9", "sha256": "3a7cd47cfa5117765a8b5d2574fd0df2cfbeb807bc07c8094f0b526bf94588d2"}, "downloads": -1, "filename": "geostatspy-0.0.9.tar.gz", "has_sig": false, "md5_digest": "4f3f8f6dc70f8a37627bfcff90158fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32199, "upload_time": "2019-03-12T14:21:45", "upload_time_iso_8601": "2019-03-12T14:21:45.446152Z", "url": "https://files.pythonhosted.org/packages/da/b7/25777a8011dad2aa4fdeee0aee0e5f1a97c7791ffc9a375e1d211d78cd17/geostatspy-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4032df3b11043e01e5931d9ec299d1d", "sha256": "c8fd673382358b2c551621ac3294d464d362ac048b365d978e25bc9b187dbca0"}, "downloads": -1, "filename": "geostatspy-0.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "e4032df3b11043e01e5931d9ec299d1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56855, "upload_time": "2020-01-13T16:53:12", "upload_time_iso_8601": "2020-01-13T16:53:12.093205Z", "url": "https://files.pythonhosted.org/packages/45/a3/82b1561e9b46576252cfb9670e23682123485641e9d5a017b7a912695e39/geostatspy-0.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94dc7d19575d8187b668a5682984c240", "sha256": "29c4e59c9b5bca65e64e767744364b2006d114299fc99e0a6d081bbe86c3c711"}, "downloads": -1, "filename": "geostatspy-0.0.19.tar.gz", "has_sig": false, "md5_digest": "94dc7d19575d8187b668a5682984c240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55442, "upload_time": "2020-01-13T16:53:14", "upload_time_iso_8601": "2020-01-13T16:53:14.002330Z", "url": "https://files.pythonhosted.org/packages/ce/05/50cf032882b45d5e9fea57d479e172781c08b94bc24987f5093d7a932f27/geostatspy-0.0.19.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:54 2020"}