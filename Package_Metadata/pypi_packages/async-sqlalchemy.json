{"info": {"author": "aohan237", "author_email": "aohan237@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Software Development", "Topic :: Software Development :: Libraries"], "description": "# asyncnsq\n[![Downloads](https://pepy.tech/badge/async-sqlalchemy)](https://pepy.tech/project/async-sqlalchemy)\n[![PyPI version](https://badge.fury.io/py/async-sqlalchemy.svg)](https://badge.fury.io/py/async-sqlalchemy)\n\n## asyncio sqlalchemy support,with async/await\n\nadd asyncio sqlalchemy support\n\n## Install\n\n--------------\n\npip install async-sqlalchemy\n\n## Usage examples\n\n--------------\n\n\n```python\nimport asyncio\nfrom sqlalchemy import Integer, Column, String, ForeignKey\nfrom async_sqlalchemy.manager.async_pg import PostgresManager\nfrom async_sqlalchemy.model.mixin import Mixin\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import relationship\nfrom sqlalchemy.sql import select\n\ndsn = \"postgres://postgres:test@localhost:2345/test\"\n\nconf = {'dsn': dsn}\n\nBase = declarative_base()\n\n\nManager = PostgresManager(conf=conf)\n\n\nclass User(Mixin, Base):\n\n    _manager = Manager\n\n    __tablename__ = 'test'\n    id = Column(Integer, autoincrement=True,  primary_key=True)\n    name = Column(String(50))\n\n    def __repr__(self):\n        return \"<User(name='%s', id='%s')>\" % (\n            self.name, self.id)\n\n\nclass Parent(Mixin, Base):\n    __tablename__ = 'parent'\n    _manager = Manager\n    id = Column(Integer, primary_key=True)\n    child = relationship(\"Child\", lazy='joined')\n\n\nclass Child(Mixin, Base):\n    _manager = Manager\n    __tablename__ = 'child'\n    id = Column(Integer, primary_key=True)\n    parent_id = Column(Integer, ForeignKey('parent.id'))\n    parent = relationship(\"Parent\", back_populates=\"child\")\n\n\nif __name__ == '__main__':\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(Manager.connect())\n\n    result = loop.run_until_complete(Manager.get(\n        User.objects([User.id]).join(\n            Parent.__table__,\n            Parent.id == User.id)))\n    print(result)\n\n    # result = loop.run_until_complete(Child.create_table())\n    # print(result)\n    # u = loop.run_until_complete(User.create(name='test'))\n    # print('create', u)\n    # print('get', loop.run_until_complete(User.get(name='test')))\n    # print('all', loop.run_until_complete(User.all()))\n    # u.name = 'aaa'\n    # print('save', loop.run_until_complete(u.save()))\n\n```\n\nLicense\n-------\n\nThe asyncnsq is offered under MIT license.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aohan237/async-sqlalchemy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "async-sqlalchemy", "package_url": "https://pypi.org/project/async-sqlalchemy/", "platform": "POSIX", "project_url": "https://pypi.org/project/async-sqlalchemy/", "project_urls": {"Homepage": "https://github.com/aohan237/async-sqlalchemy"}, "release_url": "https://pypi.org/project/async-sqlalchemy/1.0.0/", "requires_dist": ["sqlalchemy", "asyncpg", "aiomysql"], "requires_python": "", "summary": "asyncio sqlalchemy support", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>asyncnsq</h1>\n<p><a href=\"https://pepy.tech/project/async-sqlalchemy\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/934fc4854a59fde6ecb16f97b2098852a9a8073f/68747470733a2f2f706570792e746563682f62616467652f6173796e632d73716c616c6368656d79\"></a>\n<a href=\"https://badge.fury.io/py/async-sqlalchemy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7dbe7195f21293779be5d17fdb6d244a4e8d50d/68747470733a2f2f62616467652e667572792e696f2f70792f6173796e632d73716c616c6368656d792e737667\"></a></p>\n<h2>asyncio sqlalchemy support,with async/await</h2>\n<p>add asyncio sqlalchemy support</p>\n<h2>Install</h2>\n<hr>\n<p>pip install async-sqlalchemy</p>\n<h2>Usage examples</h2>\n<hr>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span>\n<span class=\"kn\">from</span> <span class=\"nn\">async_sqlalchemy.manager.async_pg</span> <span class=\"kn\">import</span> <span class=\"n\">PostgresManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">async_sqlalchemy.model.mixin</span> <span class=\"kn\">import</span> <span class=\"n\">Mixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.ext.declarative</span> <span class=\"kn\">import</span> <span class=\"n\">declarative_base</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.orm</span> <span class=\"kn\">import</span> <span class=\"n\">relationship</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.sql</span> <span class=\"kn\">import</span> <span class=\"n\">select</span>\n\n<span class=\"n\">dsn</span> <span class=\"o\">=</span> <span class=\"s2\">\"postgres://postgres:test@localhost:2345/test\"</span>\n\n<span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'dsn'</span><span class=\"p\">:</span> <span class=\"n\">dsn</span><span class=\"p\">}</span>\n\n<span class=\"n\">Base</span> <span class=\"o\">=</span> <span class=\"n\">declarative_base</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">Manager</span> <span class=\"o\">=</span> <span class=\"n\">PostgresManager</span><span class=\"p\">(</span><span class=\"n\">conf</span><span class=\"o\">=</span><span class=\"n\">conf</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">,</span> <span class=\"n\">Base</span><span class=\"p\">):</span>\n\n    <span class=\"n\">_manager</span> <span class=\"o\">=</span> <span class=\"n\">Manager</span>\n\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'test'</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">autoincrement</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"&lt;User(name='</span><span class=\"si\">%s</span><span class=\"s2\">', id='</span><span class=\"si\">%s</span><span class=\"s2\">')&gt;\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Parent</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">,</span> <span class=\"n\">Base</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'parent'</span>\n    <span class=\"n\">_manager</span> <span class=\"o\">=</span> <span class=\"n\">Manager</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">child</span> <span class=\"o\">=</span> <span class=\"n\">relationship</span><span class=\"p\">(</span><span class=\"s2\">\"Child\"</span><span class=\"p\">,</span> <span class=\"n\">lazy</span><span class=\"o\">=</span><span class=\"s1\">'joined'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Child</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">,</span> <span class=\"n\">Base</span><span class=\"p\">):</span>\n    <span class=\"n\">_manager</span> <span class=\"o\">=</span> <span class=\"n\">Manager</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'child'</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">parent_id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'parent.id'</span><span class=\"p\">))</span>\n    <span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">relationship</span><span class=\"p\">(</span><span class=\"s2\">\"Parent\"</span><span class=\"p\">,</span> <span class=\"n\">back_populates</span><span class=\"o\">=</span><span class=\"s2\">\"child\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">Manager</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">())</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">Manager</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">([</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">Parent</span><span class=\"o\">.</span><span class=\"n\">__table__</span><span class=\"p\">,</span>\n            <span class=\"n\">Parent</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">==</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># result = loop.run_until_complete(Child.create_table())</span>\n    <span class=\"c1\"># print(result)</span>\n    <span class=\"c1\"># u = loop.run_until_complete(User.create(name='test'))</span>\n    <span class=\"c1\"># print('create', u)</span>\n    <span class=\"c1\"># print('get', loop.run_until_complete(User.get(name='test')))</span>\n    <span class=\"c1\"># print('all', loop.run_until_complete(User.all()))</span>\n    <span class=\"c1\"># u.name = 'aaa'</span>\n    <span class=\"c1\"># print('save', loop.run_until_complete(u.save()))</span>\n</pre>\n<h2>License</h2>\n<p>The asyncnsq is offered under MIT license.</p>\n\n          </div>"}, "last_serial": 5095634, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9c55c9dfd44fbc0ffedef977e797b82e", "sha256": "211c923ff3a0f885357496c3902ef1bd03af4e74c43758688321cb1a03f44a8e"}, "downloads": -1, "filename": "async_sqlalchemy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c55c9dfd44fbc0ffedef977e797b82e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2145, "upload_time": "2019-04-04T08:59:13", "upload_time_iso_8601": "2019-04-04T08:59:13.849477Z", "url": "https://files.pythonhosted.org/packages/72/6f/f06aed37c5b3eb8fc4f820f2a08b588cd39ec8f2a800b2eb499d5e657439/async_sqlalchemy-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c55c9dfd44fbc0ffedef977e797b82e", "sha256": "211c923ff3a0f885357496c3902ef1bd03af4e74c43758688321cb1a03f44a8e"}, "downloads": -1, "filename": "async_sqlalchemy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c55c9dfd44fbc0ffedef977e797b82e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2145, "upload_time": "2019-04-04T08:59:13", "upload_time_iso_8601": "2019-04-04T08:59:13.849477Z", "url": "https://files.pythonhosted.org/packages/72/6f/f06aed37c5b3eb8fc4f820f2a08b588cd39ec8f2a800b2eb499d5e657439/async_sqlalchemy-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:16:40 2020"}