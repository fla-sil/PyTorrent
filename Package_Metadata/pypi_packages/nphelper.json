{"info": {"author": "Stefan Otte", "author_email": "stefan.otte@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "############################################\nnphelper - convenient numpy helper functions\n############################################\n\n|docs| |travis|\n\nThis package contains some convenient helper function for numpy.  Nothing\nfancy, but quite useful.\nIt works with python 2.7, 3.4, and 3.5.\n\n\nInstall\n============\n\nSimply install via ``pip``::\n\n    pip install nphelper\n\n``nphelper`` only depends on ``numpy``.\n\n\nUsage / Features\n================\n\nCreate block arrays (in matlabs's ``[A A; B B]`` spirit):\n\n.. code:: python\n\n    >>> from nphelper import block\n    >>> A = np.array([[1, 2, 3]])\n    >>> B = np.array([[2, 3, 4]])\n    >>> C = np.ones((2, 6))\n    >>> block([[A, B], [C]])\n    array([[1, 2, 3, 2, 3, 4],\n          [[1, 1, 1, 1, 1, 1],\n          [[1, 1, 1, 1, 1, 1]])\n\nCompute the cartesian product (similar to ``itertools.product``):\n\n.. code:: python\n\n    >>> from nphelper import cartesian_product\n    >>> cartesian_product([[1, 2], [3, 4]])\n    array([[1, 3],\n           [1, 4],\n           [2, 3],\n           [2, 4]])\n\nEasily multiply many arrays without the cubersome ``dot`` syntax. It's also\nmuch faster than dot because it selects the fastest evaluation order.\n(This is part of numpy 1.10.0.)\n\n.. code:: python\n\n    >>> from nphelper import multi_dot\n    >>> A = np.random.random((10000, 100))\n    >>> B = np.random.random((100, 1000))\n    >>> C = np.random.random((1000, 5))\n    >>> D = np.random.random((5, 333))\n    >>> # Sick of this?\n    >>> np.dot(np.dot(np.dot(A, B), C), D)  # doctest: +SKIP\n    >>> # Or this?\n    >>> A.dot(B).dot(C).dot(D)  # doctest: +SKIP\n    >>> # Use multi_dot\n    >>> multi_dot([A, B, C, D])  # doctest: +SKIP\n\n- TODO along, maxalong, minalong, sumalong, meanalong, stdalong, varalong\n\n\nDev\n===\n\nRun the tests\n-------------\n\nRun ``tox`` to run the tests for python 2.7, 3.4, and 3.5::\n\n    tox\n\nYou might have to install addiotional dependencies to run the tests::\n\n- ``py.test``,\n- ``nose``,\n- ``python2.7-dev``,\n- ``python3.4-dev``, and\n- ``python3.5-dev``.\n\nBuild the Docs\n--------------\n\n::\n\n    cd doc\n    make html\n\nYou might have to install addiotional dependencies::\n\n    pip install sphinx sphinx_rtd_theme\n\n\n\n.. ============================================================================\n.. Links\n\n.. |docs| image:: https://readthedocs.org/projects/nphelper/badge/?version=latest\n    :target: http://nphelper.readthedocs.org/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. |travis| image:: https://travis-ci.org/sotte/nphelper.svg?branch=master\n    :target: https://travis-ci.org/sotte/nphelper", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/sotte/nphelper", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sotte/nphelper", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "nphelper", "package_url": "https://pypi.org/project/nphelper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nphelper/", "project_urls": {"Download": "https://github.com/sotte/nphelper", "Homepage": "https://github.com/sotte/nphelper"}, "release_url": "https://pypi.org/project/nphelper/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "nphelper - convenient numpy helper functions", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://nphelper.readthedocs.org/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1c0e22060e25b839ca59ce4ccdf14387e78a72a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e7068656c7065722f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://travis-ci.org/sotte/nphelper\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ba9b70c19f9a0c380126c6f8d8c5838bfc11094/68747470733a2f2f7472617669732d63692e6f72672f736f7474652f6e7068656c7065722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This package contains some convenient helper function for numpy.  Nothing\nfancy, but quite useful.\nIt works with python 2.7, 3.4, and 3.5.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Simply install via <tt>pip</tt>:</p>\n<pre>pip install nphelper\n</pre>\n<p><tt>nphelper</tt> only depends on <tt>numpy</tt>.</p>\n</div>\n<div id=\"usage-features\">\n<h2>Usage / Features</h2>\n<p>Create block arrays (in matlabs\u2019s <tt>[A A; B B]</tt> spirit):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nphelper</span> <span class=\"kn\">import</span> <span class=\"n\">block</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">block</span><span class=\"p\">([[</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]])</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n      <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n      <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n</pre>\n<p>Compute the cartesian product (similar to <tt>itertools.product</tt>):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nphelper</span> <span class=\"kn\">import</span> <span class=\"n\">cartesian_product</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cartesian_product</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n</pre>\n<p>Easily multiply many arrays without the cubersome <tt>dot</tt> syntax. It\u2019s also\nmuch faster than dot because it selects the fastest evaluation order.\n(This is part of numpy 1.10.0.)</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nphelper</span> <span class=\"kn\">import</span> <span class=\"n\">multi_dot</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">333</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Sick of this?</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">),</span> <span class=\"n\">C</span><span class=\"p\">),</span> <span class=\"n\">D</span><span class=\"p\">)</span>  <span class=\"c1\"># doctest: +SKIP</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Or this?</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">)</span>  <span class=\"c1\"># doctest: +SKIP</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use multi_dot</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">multi_dot</span><span class=\"p\">([</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">])</span>  <span class=\"c1\"># doctest: +SKIP</span>\n</pre>\n<ul>\n<li>TODO along, maxalong, minalong, sumalong, meanalong, stdalong, varalong</li>\n</ul>\n</div>\n<div id=\"dev\">\n<h2>Dev</h2>\n<div id=\"run-the-tests\">\n<h3>Run the tests</h3>\n<p>Run <tt>tox</tt> to run the tests for python 2.7, 3.4, and 3.5:</p>\n<pre>tox\n</pre>\n<p>You might have to install addiotional dependencies to run the tests:</p>\n<pre>- ``py.test``,\n- ``nose``,\n- ``python2.7-dev``,\n- ``python3.4-dev``, and\n- ``python3.5-dev``.\n</pre>\n</div>\n<div id=\"build-the-docs\">\n<h3>Build the Docs</h3>\n<pre>cd doc\nmake html\n</pre>\n<p>You might have to install addiotional dependencies:</p>\n<pre>pip install sphinx sphinx_rtd_theme\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1888088, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "bbf695c32b99636ed6a0fcf46df9d001", "sha256": "a69b6882cbe0b101e34ffeb04e454edd710294f5eee4c84f2ee4c21640c3dc07"}, "downloads": -1, "filename": "nphelper-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bbf695c32b99636ed6a0fcf46df9d001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7553, "upload_time": "2016-01-04T19:44:08", "upload_time_iso_8601": "2016-01-04T19:44:08.083582Z", "url": "https://files.pythonhosted.org/packages/d4/e7/cf2db92e4de44006734fb442a0dbc7cb4fc217325ec7bb96f06c43ba5480/nphelper-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bbf695c32b99636ed6a0fcf46df9d001", "sha256": "a69b6882cbe0b101e34ffeb04e454edd710294f5eee4c84f2ee4c21640c3dc07"}, "downloads": -1, "filename": "nphelper-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bbf695c32b99636ed6a0fcf46df9d001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7553, "upload_time": "2016-01-04T19:44:08", "upload_time_iso_8601": "2016-01-04T19:44:08.083582Z", "url": "https://files.pythonhosted.org/packages/d4/e7/cf2db92e4de44006734fb442a0dbc7cb4fc217325ec7bb96f06c43ba5480/nphelper-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:32 2020"}