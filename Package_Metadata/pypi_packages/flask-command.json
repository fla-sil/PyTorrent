{"info": {"author": "Reuven V. Gonzales", "author_email": "reuven@tobetter.us", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "flask-command - A tool to use a flask+gunicorn app from the command line\n========================================================================\n\nflask-command is a simple tool that allows you to call your flask application\nfrom the command line after wrapping through gunicorn. This is useful if you'd\nlike to create a ``console_script`` entry point for your flask application.\n\nIntended Use Case\n-----------------\n\nLet's assume your project is called myproject. A flask app exists or is\naccessible from myproject/__init__.py. The following shows how you'd use\nflask-command.\n\nIn a file called myproject/main.py::\n    \n    from flaskcommand import flask_command\n    from myproject import app\n\n    main = flask_command(app)\n\nIn your setup.py file::\n    \n    setup(name='myproject',\n        version='0.0.1',\n        description=\"myproject - is awesome\",\n        long_description=\"myproject - is really awesome\",\n        keywords='',\n        author='Reuven V. Gonzales',\n        author_email='reuven@tobetter.us',\n        packages=['myproject'],\n        include_package_data=True,\n        zip_safe=False,\n        install_requires=[\n            'flask-command',\n            'flask',\n        ],\n        entry_points={\n            'console_scripts': [\n                # WITH FLASK-COMMAND YOU CAN\n                # DEFINE YOUR SCRIPT HERE :-)\n                'myproject-web = myproject.main:main', \n            ]\n        },\n        classifiers=[\n            'License :: OSI Approved :: MIT License',\n            'Intended Audience :: Developers',\n            'Programming Language :: Python',\n            'Topic :: Internet :: WWW/HTTP :: WSGI :: Application',\n        ],\n    )\n\nNow, after installing your project you can start your flask server like this::\n    \n    $ myproject-web -b 127.0.0.1:8000 -w 4 some_config_path\n\nAt this time specifying a path to a configuration file is required, but this\nprobably won't be so in the future.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ravenac95/flask-command", "keywords": "", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "flask-command", "package_url": "https://pypi.org/project/flask-command/", "platform": "*nix", "project_url": "https://pypi.org/project/flask-command/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ravenac95/flask-command"}, "release_url": "https://pypi.org/project/flask-command/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "flask-command - Run you flask+gunicorn app as a command", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>flask-command is a simple tool that allows you to call your flask application\nfrom the command line after wrapping through gunicorn. This is useful if you\u2019d\nlike to create a <tt>console_script</tt> entry point for your flask application.</p>\n<div id=\"intended-use-case\">\n<h2>Intended Use Case</h2>\n<p>Let\u2019s assume your project is called myproject. A flask app exists or is\naccessible from myproject/__init__.py. The following shows how you\u2019d use\nflask-command.</p>\n<p>In a file called myproject/main.py:</p>\n<pre>from flaskcommand import flask_command\nfrom myproject import app\n\nmain = flask_command(app)\n</pre>\n<p>In your setup.py file:</p>\n<pre>setup(name='myproject',\n    version='0.0.1',\n    description=\"myproject - is awesome\",\n    long_description=\"myproject - is really awesome\",\n    keywords='',\n    author='Reuven V. Gonzales',\n    author_email='reuven@tobetter.us',\n    packages=['myproject'],\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'flask-command',\n        'flask',\n    ],\n    entry_points={\n        'console_scripts': [\n            # WITH FLASK-COMMAND YOU CAN\n            # DEFINE YOUR SCRIPT HERE :-)\n            'myproject-web = myproject.main:main',\n        ]\n    },\n    classifiers=[\n        'License :: OSI Approved :: MIT License',\n        'Intended Audience :: Developers',\n        'Programming Language :: Python',\n        'Topic :: Internet :: WWW/HTTP :: WSGI :: Application',\n    ],\n)\n</pre>\n<p>Now, after installing your project you can start your flask server like this:</p>\n<pre>$ myproject-web -b 127.0.0.1:8000 -w 4 some_config_path\n</pre>\n<p>At this time specifying a path to a configuration file is required, but this\nprobably won\u2019t be so in the future.</p>\n</div>\n\n          </div>"}, "last_serial": 792026, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7977d9a8c9b0baa7a142e11fcb7ac118", "sha256": "45e92b34510bd118796bfd74b25fa3b7a1aa43c0ebf1b782f10e6572ddb79e14"}, "downloads": -1, "filename": "flask-command-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7977d9a8c9b0baa7a142e11fcb7ac118", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3265, "upload_time": "2012-08-03T00:43:13", "upload_time_iso_8601": "2012-08-03T00:43:13.647147Z", "url": "https://files.pythonhosted.org/packages/61/ab/0ab2d1d89567957d11379dcbee9453e4ed47c98db877973cb4cecea3d2ff/flask-command-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c863b09958aafa4102920cabbd675100", "sha256": "73d1123bed5c931cfa28ec396a071dadb3c2c1a8e42c0bfc9e44668e0ed1d01c"}, "downloads": -1, "filename": "flask-command-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c863b09958aafa4102920cabbd675100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3309, "upload_time": "2012-08-10T23:58:24", "upload_time_iso_8601": "2012-08-10T23:58:24.233650Z", "url": "https://files.pythonhosted.org/packages/f6/0b/4bda37204956967085752da9d0d10511559044decea341cacadd0454c0ea/flask-command-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ec70b38673064dd613e06e7b04487a71", "sha256": "4fb1d40722c0b9c4cfd7660ddb088ef62a84648f18c75ee3d63565244631a420"}, "downloads": -1, "filename": "flask-command-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ec70b38673064dd613e06e7b04487a71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3261, "upload_time": "2012-08-27T19:13:53", "upload_time_iso_8601": "2012-08-27T19:13:53.147594Z", "url": "https://files.pythonhosted.org/packages/83/aa/a272cb527210789985593726114ca0eced01959e2417876b02d5723a6959/flask-command-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec70b38673064dd613e06e7b04487a71", "sha256": "4fb1d40722c0b9c4cfd7660ddb088ef62a84648f18c75ee3d63565244631a420"}, "downloads": -1, "filename": "flask-command-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ec70b38673064dd613e06e7b04487a71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3261, "upload_time": "2012-08-27T19:13:53", "upload_time_iso_8601": "2012-08-27T19:13:53.147594Z", "url": "https://files.pythonhosted.org/packages/83/aa/a272cb527210789985593726114ca0eced01959e2417876b02d5723a6959/flask-command-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:00 2020"}