{"info": {"author": "Jessie Morris", "author_email": "jessie.m@midigator.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![PyPI version][pypi-img]][pypi] [![Python versions][pyver-img]][pypi] [![Pypi Downloads][pydl-img]][pypi] [![Build Status][ci-img]][ci] [![Coverage Status][cov-img]][cov]\n\n\n# python-opentracing-async-instrumentation\n\nA collection of asyncio instrumentation tools to enable tracing with [OpenTracing API](http://opentracing.io).\n\n## Module\n\nMake sure you are running recent enough versions of `pip` and `setuptools`, e.g. before installing your project requirements execute this:\n\n```\npip install --upgrade \"setuptools>=29\" \"pip>=9\"\n```\n\nThe module name is `opentracing_async_instrumentation`.\n\n## What's inside\n\n### Supported client frameworks\n\nThe following libraries are instrumented for tracing in this module:\n * [aiobotocore](https://github.com/aio-libs/aiobotocore) \u2014 Asyncio AWS SDK for Python\n * [aioboto3](https://github.com/terrycain/aioboto3) \u2014 Asyncio AWS SDK for Python (uses aiobotocore under the hood)\n * [aiohttp](https://github.com/aio-libs/aiohttp/) - Asyncio HTTP server and client\n * [aiomysql](https://github.com/aio-libs/aiomysql)\n\n#### Limitations\n\n * Only Python 3.5+ is currently supported.\n\n### Server instrumentation\n\nFor inbound requests a helper function `before_request` is provided for creating middleware for frameworks like aiohttp and possibly Tornado.\n\nA middleware is provided for `aiohttp`.\n\n### In-process Context Propagation\n\nAs part of the OpenTracing 2.0 API, in-process `Span` propagation happens through the newly defined\n[ScopeManager](https://opentracing-python.readthedocs.io/en/latest/api.html#scope-managers)\ninterface.\n\n## Usage\n\nThis library provides two types of instrumentation, explicit instrumentation\nfor server endpoints, and implicit instrumentation for client call sites.\n\n### Server\n\nServer endpoints are instrumented by creating a (or using a provided) middleware class that:\n\n 1. initializes the specific tracer implementation\n 2. wraps incoming request handlers into a method that reads the incoming\n    tracing info from the request and creates a new tracing Span\n\n```python\nfrom aiohttp import web\nfrom opentracing_async_instrumentation.client_hooks import aiohttpserver\n\nasync def handler(request):\n    return web.Response(body='Hello World')\n\napp = web.Application()\napp.router.add_get('/', handler)\napp.middlewares.append(aiohttpserver.enable_tracing)\n\nif __name__ == '__main__':\n    web.run_app(app)\n```\n\n### Client\n\nClient call sites are instrumented implicitly by executing a set of\navailable `client_hooks` that monkey-patch some API points in several\ncommon libraries like `aiohttp` and `aiobotocore`. The initialization of\nthose hooks is usually also done from the middleware class's `__init__` method.\n\nUsage is via the `client_hooks` interface.\n\n```python\nfrom opentracing_async_instrumentation import client_hooks\n\nclient_hooks.install_all_patches()\n```\n\n### Customization\n\nFor the `aiohttp` library, in case you want to set custom tags\nto spans depending on content or some metadata of responses,\nyou can set `response_handler_hook`.\nThe hook must be a method with a signature `(response, span)`,\nwhere `response` and `span` are positional arguments,\nso you can use different names for them if needed.\n\n```python\nfrom opentracing_async_instrumentation.client_hooks.aiohttpclient import patcher\n\n\ndef hook(response, span):\n    if not response.ok:\n        span.set_tag('error', 'true')\n\n\npatcher.set_response_handler_hook(hook)\n```\n\n## Development\n\nTo prepare a development environment please execute the following commands.\n```bash\nvirtualenv env\nsource env/bin/activate\nmake bootstrap\nmake test\n```\n\nYou can use [tox](https://tox.readthedocs.io) to run tests as well.\n```bash\ntox\n```\n\n[ci-img]: https://gitlab.com/midigator/python_opentracing_async_instrumentation/badges/master/pipeline.svg\n[ci]: https://gitlab.com/midigator/python_opentracing_async_instrumentation\n[pypi-img]: https://img.shields.io/pypi/v/opentracing_async_instrumentation.svg\n[pypi]: https://pypi.python.org/pypi/opentracing_async_instrumentation\n[cov-img]: https://gitlab.com/midigator/python_opentracing_async_instrumentation/badges/master/coverage.svg\n[cov]: https://gitlab.com/midigator/python_opentracing_async_instrumentation/badges/master/coverage.svg\n[pyver-img]: https://img.shields.io/pypi/pyversions/opentracing-async-instrumentation.svg\n[pydl-img]: https://img.shields.io/pypi/dm/opentracing-async-instrumentation.svg\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/midigator/python_opentracing_async_instrumentation/", "keywords": "opentracing,async,asyncio", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "opentracing-async-instrumentation", "package_url": "https://pypi.org/project/opentracing-async-instrumentation/", "platform": "any", "project_url": "https://pypi.org/project/opentracing-async-instrumentation/", "project_urls": {"Homepage": "https://gitlab.com/midigator/python_opentracing_async_instrumentation/"}, "release_url": "https://pypi.org/project/opentracing-async-instrumentation/0.2.0/", "requires_dist": ["future", "wrapt", "contextlib2", "opentracing (<3,>=2)", "six", "aiohttp ; extra == 'tests'", "aiobotocore ; extra == 'tests'", "aioboto3 ; extra == 'tests'", "aiomysql ; extra == 'tests'", "basictracer (<4,>=3) ; extra == 'tests'", "flake8 ; extra == 'tests'", "mock ; extra == 'tests'", "moto[server] ; extra == 'tests'", "pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'", "pytest-localserver ; extra == 'tests'", "pytest-mock ; extra == 'tests'", "pytest-asyncio ; extra == 'tests'", "pytest-aiohttp ; extra == 'tests'", "testfixtures ; extra == 'tests'", "tox ; extra == 'tests'"], "requires_python": ">=3.5", "summary": "Async Tracing Instrumentation using OpenTracing API (http://opentracing.io)", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/opentracing_async_instrumentation\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db243a550858d2f0cbd23bcf3f92a563a8372b3c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f70656e74726163696e675f6173796e635f696e737472756d656e746174696f6e2e737667\"></a> <a href=\"https://pypi.python.org/pypi/opentracing_async_instrumentation\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6a59c0b09095148b27ce9a15ba19a88d4496a31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f70656e74726163696e672d6173796e632d696e737472756d656e746174696f6e2e737667\"></a> <a href=\"https://pypi.python.org/pypi/opentracing_async_instrumentation\" rel=\"nofollow\"><img alt=\"Pypi Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/affbb459edec0811f0d910603c8a8b8991485d07/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6f70656e74726163696e672d6173796e632d696e737472756d656e746174696f6e2e737667\"></a> <a href=\"https://gitlab.com/midigator/python_opentracing_async_instrumentation\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52f369d37c9c835d212baabcfe13d5065576ddc8/68747470733a2f2f6769746c61622e636f6d2f6d6964696761746f722f707974686f6e5f6f70656e74726163696e675f6173796e635f696e737472756d656e746174696f6e2f6261646765732f6d61737465722f706970656c696e652e737667\"></a> <a href=\"https://gitlab.com/midigator/python_opentracing_async_instrumentation/badges/master/coverage.svg\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c8ed278e1950e8f24a3b5c7723aaca83bbea434/68747470733a2f2f6769746c61622e636f6d2f6d6964696761746f722f707974686f6e5f6f70656e74726163696e675f6173796e635f696e737472756d656e746174696f6e2f6261646765732f6d61737465722f636f7665726167652e737667\"></a></p>\n<h1>python-opentracing-async-instrumentation</h1>\n<p>A collection of asyncio instrumentation tools to enable tracing with <a href=\"http://opentracing.io\" rel=\"nofollow\">OpenTracing API</a>.</p>\n<h2>Module</h2>\n<p>Make sure you are running recent enough versions of <code>pip</code> and <code>setuptools</code>, e.g. before installing your project requirements execute this:</p>\n<pre><code>pip install --upgrade \"setuptools&gt;=29\" \"pip&gt;=9\"\n</code></pre>\n<p>The module name is <code>opentracing_async_instrumentation</code>.</p>\n<h2>What's inside</h2>\n<h3>Supported client frameworks</h3>\n<p>The following libraries are instrumented for tracing in this module:</p>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiobotocore\" rel=\"nofollow\">aiobotocore</a> \u2014 Asyncio AWS SDK for Python</li>\n<li><a href=\"https://github.com/terrycain/aioboto3\" rel=\"nofollow\">aioboto3</a> \u2014 Asyncio AWS SDK for Python (uses aiobotocore under the hood)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/\" rel=\"nofollow\">aiohttp</a> - Asyncio HTTP server and client</li>\n<li><a href=\"https://github.com/aio-libs/aiomysql\" rel=\"nofollow\">aiomysql</a></li>\n</ul>\n<h4>Limitations</h4>\n<ul>\n<li>Only Python 3.5+ is currently supported.</li>\n</ul>\n<h3>Server instrumentation</h3>\n<p>For inbound requests a helper function <code>before_request</code> is provided for creating middleware for frameworks like aiohttp and possibly Tornado.</p>\n<p>A middleware is provided for <code>aiohttp</code>.</p>\n<h3>In-process Context Propagation</h3>\n<p>As part of the OpenTracing 2.0 API, in-process <code>Span</code> propagation happens through the newly defined\n<a href=\"https://opentracing-python.readthedocs.io/en/latest/api.html#scope-managers\" rel=\"nofollow\">ScopeManager</a>\ninterface.</p>\n<h2>Usage</h2>\n<p>This library provides two types of instrumentation, explicit instrumentation\nfor server endpoints, and implicit instrumentation for client call sites.</p>\n<h3>Server</h3>\n<p>Server endpoints are instrumented by creating a (or using a provided) middleware class that:</p>\n<ol>\n<li>initializes the specific tracer implementation</li>\n<li>wraps incoming request handlers into a method that reads the incoming\ntracing info from the request and creates a new tracing Span</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">opentracing_async_instrumentation.client_hooks</span> <span class=\"kn\">import</span> <span class=\"n\">aiohttpserver</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">()</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">add_get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">middlewares</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">aiohttpserver</span><span class=\"o\">.</span><span class=\"n\">enable_tracing</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h3>Client</h3>\n<p>Client call sites are instrumented implicitly by executing a set of\navailable <code>client_hooks</code> that monkey-patch some API points in several\ncommon libraries like <code>aiohttp</code> and <code>aiobotocore</code>. The initialization of\nthose hooks is usually also done from the middleware class's <code>__init__</code> method.</p>\n<p>Usage is via the <code>client_hooks</code> interface.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">opentracing_async_instrumentation</span> <span class=\"kn\">import</span> <span class=\"n\">client_hooks</span>\n\n<span class=\"n\">client_hooks</span><span class=\"o\">.</span><span class=\"n\">install_all_patches</span><span class=\"p\">()</span>\n</pre>\n<h3>Customization</h3>\n<p>For the <code>aiohttp</code> library, in case you want to set custom tags\nto spans depending on content or some metadata of responses,\nyou can set <code>response_handler_hook</code>.\nThe hook must be a method with a signature <code>(response, span)</code>,\nwhere <code>response</code> and <code>span</code> are positional arguments,\nso you can use different names for them if needed.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">opentracing_async_instrumentation.client_hooks.aiohttpclient</span> <span class=\"kn\">import</span> <span class=\"n\">patcher</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">hook</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">span</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">set_tag</span><span class=\"p\">(</span><span class=\"s1\">'error'</span><span class=\"p\">,</span> <span class=\"s1\">'true'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">patcher</span><span class=\"o\">.</span><span class=\"n\">set_response_handler_hook</span><span class=\"p\">(</span><span class=\"n\">hook</span><span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<p>To prepare a development environment please execute the following commands.</p>\n<pre>virtualenv env\n<span class=\"nb\">source</span> env/bin/activate\nmake bootstrap\nmake <span class=\"nb\">test</span>\n</pre>\n<p>You can use <a href=\"https://tox.readthedocs.io\" rel=\"nofollow\">tox</a> to run tests as well.</p>\n<pre>tox\n</pre>\n\n          </div>"}, "last_serial": 7101915, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c317f95eec3db01d6417c5e47ef722d5", "sha256": "9a095178ce98c3df71b8f042d5f41f0294ee89604ea85fcaa9138cb54f02bd32"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c317f95eec3db01d6417c5e47ef722d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.4", "size": 16428, "upload_time": "2019-12-09T22:45:40", "upload_time_iso_8601": "2019-12-09T22:45:40.128752Z", "url": "https://files.pythonhosted.org/packages/88/ca/36ed1c4e5bcb08dff524be5836edd12a52604c782e5730c11aed21d78c5a/opentracing_async_instrumentation-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49e419ba149af6796dd733d927c9dd9a", "sha256": "dea3d55d19c91e5e200b84c8e9a86b8a593ef710ddb300ef3cd121a67a035737"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.0.tar.gz", "has_sig": false, "md5_digest": "49e419ba149af6796dd733d927c9dd9a", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.4", "size": 11972, "upload_time": "2019-12-09T22:45:42", "upload_time_iso_8601": "2019-12-09T22:45:42.562920Z", "url": "https://files.pythonhosted.org/packages/ae/14/0019d80bb1cefcd00da70d3c93e360b1748f959081494b29af3c62c91926/opentracing_async_instrumentation-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a567a3fd0aef1f6dda04af5fcd5230c7", "sha256": "d856495dab9ca55e39cc6ba9e9a08ddc128a9d38273515d983a1fa01eb919800"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a567a3fd0aef1f6dda04af5fcd5230c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16464, "upload_time": "2019-12-10T18:03:24", "upload_time_iso_8601": "2019-12-10T18:03:24.494740Z", "url": "https://files.pythonhosted.org/packages/72/56/228bbb4889f2529e32b7af3dda84b2548a4fe51ec6f3a8a9b17234cf8e84/opentracing_async_instrumentation-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e8ee0a5aff30405a3fbb2834d812dbf", "sha256": "da63e915410a03603dd56c58077495d7c4fcf8c91c572dc66dd3b553399c9679"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5e8ee0a5aff30405a3fbb2834d812dbf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11999, "upload_time": "2019-12-10T18:03:26", "upload_time_iso_8601": "2019-12-10T18:03:26.202635Z", "url": "https://files.pythonhosted.org/packages/3e/d4/ddc0a9d0a45004b7c72dda015e2b0ef785dc35b344714d1455241be5bf3f/opentracing_async_instrumentation-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b4f1345aafa149f09d030d38ab9082eb", "sha256": "ac9cbd15d4675d9d70e3dad0ab81731d6c85895a558a8339e6d09258b43b372a"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4f1345aafa149f09d030d38ab9082eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16415, "upload_time": "2019-12-11T16:39:52", "upload_time_iso_8601": "2019-12-11T16:39:52.307702Z", "url": "https://files.pythonhosted.org/packages/57/87/f9cd979d56bff4cd365f32067c93b78195cbf36c12c1de6b62bd07b72dec/opentracing_async_instrumentation-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4599d21bb0238bc996a9db7db46ebae", "sha256": "4ba9fc1d7d593ac9efb96c8760d0c77ee7aac1ae3bd2c3dea1545ec2f3dfec8c"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f4599d21bb0238bc996a9db7db46ebae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11890, "upload_time": "2019-12-11T16:39:54", "upload_time_iso_8601": "2019-12-11T16:39:54.178783Z", "url": "https://files.pythonhosted.org/packages/a4/a2/b969b7d1098b117fb6915c419a09e74993b35c0c68bc79eb0e8bf550169f/opentracing_async_instrumentation-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "199d2493e515f0b0a18bae705ac374cb", "sha256": "8b4132c9d766de5a1e2b75d71f39524e31880f30858cb7e855db8294968aed98"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "199d2493e515f0b0a18bae705ac374cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16426, "upload_time": "2019-12-12T19:23:06", "upload_time_iso_8601": "2019-12-12T19:23:06.206741Z", "url": "https://files.pythonhosted.org/packages/92/2a/7fe49f5516e30a9985f800c1e6b2f6d001b4ae7def9c8057f6500c5726cf/opentracing_async_instrumentation-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ab6b42e9a505f2e615c2adcd2f82093", "sha256": "cfd96b971f1ee9b87a981f3adecd4e8238fd956ab4ac63b529fd952ff7f6c6d4"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2ab6b42e9a505f2e615c2adcd2f82093", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11904, "upload_time": "2019-12-12T19:23:08", "upload_time_iso_8601": "2019-12-12T19:23:08.121270Z", "url": "https://files.pythonhosted.org/packages/6e/e7/683c52fd954c61bb56a2bbc4d12390babacd4fd581a4bdaaee353623c8a1/opentracing_async_instrumentation-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "338544848a7cec98ace1bea5e774fb33", "sha256": "b3301701f1f871a663f511318810b98011075a4224f12b9a361e4e80d0f6ea0a"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "338544848a7cec98ace1bea5e774fb33", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5", "size": 20521, "upload_time": "2020-04-26T00:05:42", "upload_time_iso_8601": "2020-04-26T00:05:42.927392Z", "url": "https://files.pythonhosted.org/packages/49/e9/268eb64ff2bb149f00fb9c7f8503da0bb978983a0d2b40c1ee2e785247d2/opentracing_async_instrumentation-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8696bb7a4e1c24e61ff71dbbdf2dbefa", "sha256": "4902b681472da4e481ecfed76bce0a6fba89f0ecf0c1c4f4bc8df5d21d41837a"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8696bb7a4e1c24e61ff71dbbdf2dbefa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13915, "upload_time": "2020-04-26T00:05:44", "upload_time_iso_8601": "2020-04-26T00:05:44.334765Z", "url": "https://files.pythonhosted.org/packages/fb/4e/196511a29587b0b1aa32885b94bc2a55257faf1133f6b0a29f0f040e29f7/opentracing_async_instrumentation-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "338544848a7cec98ace1bea5e774fb33", "sha256": "b3301701f1f871a663f511318810b98011075a4224f12b9a361e4e80d0f6ea0a"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "338544848a7cec98ace1bea5e774fb33", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5", "size": 20521, "upload_time": "2020-04-26T00:05:42", "upload_time_iso_8601": "2020-04-26T00:05:42.927392Z", "url": "https://files.pythonhosted.org/packages/49/e9/268eb64ff2bb149f00fb9c7f8503da0bb978983a0d2b40c1ee2e785247d2/opentracing_async_instrumentation-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8696bb7a4e1c24e61ff71dbbdf2dbefa", "sha256": "4902b681472da4e481ecfed76bce0a6fba89f0ecf0c1c4f4bc8df5d21d41837a"}, "downloads": -1, "filename": "opentracing_async_instrumentation-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8696bb7a4e1c24e61ff71dbbdf2dbefa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13915, "upload_time": "2020-04-26T00:05:44", "upload_time_iso_8601": "2020-04-26T00:05:44.334765Z", "url": "https://files.pythonhosted.org/packages/fb/4e/196511a29587b0b1aa32885b94bc2a55257faf1133f6b0a29f0f040e29f7/opentracing_async_instrumentation-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:23 2020"}