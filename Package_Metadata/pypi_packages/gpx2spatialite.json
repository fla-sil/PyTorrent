{"info": {"author": "Peter Vasil, Daniel Belasco Rogers", "author_email": "mail@petervasil.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Scientific/Engineering :: GIS"], "description": "==============\ngpx2spatialite\n==============\n:Author: Daniel Belasco Rogers <dan@planbperformance.net>,\n         Peter Vasil <mail@petervasil.net>\n\n.. image:: https://travis-ci.org/ptrv/gpx2spatialite.svg?branch=master\n   :target: https://travis-ci.org/ptrv/gpx2spatialite\n\n.. image:: https://img.shields.io/pypi/v/gpx2spatialite.svg\n   :target: https://pypi.python.org/pypi/gpx2spatialite/\n   :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/gpx2spatialite.svg\n   :target: https://pypi.python.org/pypi/gpx2spatialite/\n   :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/l/gpx2spatialite.svg\n   :target: https://pypi.python.org/pypi/gpx2spatialite/\n   :alt: License\n\nA script for importing GPX files into a SpatiaLite database.\n\nUses Tomo Krajina's gpx module. gpx2spatialite takes a single or\nfolder full of gpx files and imports them into a spatialite spatial\ndatabase. On importing, a file is hashed and entered into a table\nto make sure that a file with identical contents is not added\ntwice. The spatial information from trackpoints is stored in two\ntables in the spatialite database, trackpoints and tracklines which\nare related. You can read more detail about the reason to represent\ndata from a GPX file like this here:\n<http://planbperformance.net/dan/blog/?p=984>\n\nThe compulsory 'user' argument is to import gpx files from\ndifferent users into the same database. This is because\ngpx2spatialite was written as an importer for DrawingLife\n<https://github.com/ptrv/drawinglife> which is a visualisation\nsoftware written by Peter Vasil for Daniel Belasco Rogers' and\nSophia New's art project of recording everywhere they go with a GPS\nsince 2003 and 2007 respectively (<http://belasconew.com/works/lifedrawing/>)\n\nIf you only have one user to enter, just pick any name and import\nall files under this name.\n\nBecause DrawingLife has text at the top of the screen which shows\nthe current location of the animation screen, this information is\nprovided by the citydef_uid column in the trackpoints table which\npoints to the citydefs table. This column is also populated on\nimport by default. If you do not require this, you can set the\noption -s --skip-locations which will speed up importing\nconsiderably.\n\nDependencies\n------------\n\nLinux and Mac\n^^^^^^^^^^^^^\n\n* Python:\n\n  * gpxpy\n  * pyspatialite, pysqlite2 (with support for loading extensions)\n\n* Other libraries:\n\n  * libspatialite\n  * libsqlite\n\n\nInstallation\n------------\n\nLinux and Mac\n^^^^^^^^^^^^^\n\ngpx2spatialite is available via pip.\nYou can simply run::\n\n  pip install gpx2spatialite\n\nOr to install it with user scope run the following command::\n\n  pip install gpx2spatialite --user\n\nMake sure that ``$HOME/.local/bin`` is available in your ``PATH`` environment variable.\nOtherwise the gpx2spatialite executable will not be found when you run it from the shell::\n\n  PATH=$PATH:$HOME/.local/bin\n\n\nWindows\n^^^^^^^\n\n* Download python 2.7 32bit for windows\n* Install pip. (See instructions `here <https://pip.pypa.io/en/latest/installing.html>`_)\n* Install gpxpy with ``pip install gpxpy``\n* Download mod_spatialte from http://www.gaia-gis.it/gaia-sins/windows-bin-x86/\n  and extract all dlls to ``C:\\Python27\\Scripts``\n* Download sqlite3.dll from `sqlite website <http://www.sqlite.org/download.html>`_\n  (something like 'sqlite-dll-win32-x86-3080704.zip')\n  and overwrite ``sqlite3.dll`` in ``C:\\Python27\\Scripts\\DLLs`` with the downloaded version\n  (This ensures that ``sqlite3.dll`` is capable of loading extensions)\n* Install gpx2spatialite with ``pip install gpx2spatialite``\n\n\nUsage\n-----\n\nIt is possible to read in single files::\n\n  gpx2spatialite import -d <path/to/database> -u <user_id> <path/to/gpx>\n\nOr multiple folders::\n\n  gpx2spatialite import -d <path/to/database> -u <user_id> <path/to/folder1> <path/to/folder2>\n\nFiles and folders can be specified both at the same time::\n\n  gpx2spatialite import -d <path/to/database> -u <user_id> <path/to/folder1> <path/to/gpx>\n\n\nCreate a new database\n---------------------\n\nRun script with subcommand to create a new database and initialize it::\n\n  gpx2spatialite create_db <path/to/new/database>\n\n\nCityDefs\n--------\n\nEach trackpoint has a location assigned to it which is used for the\n`drawinglife <https://github.com/ptrv/drawinglife>`_ animation.\n\nThese are defined at import time unless the option `-s` or\n`--skip-locations` is passed.\n\nLocations are defined in the `citydefs` table in the database, created\nand populated automatically by running 'gpx2spatialite create_db'.\n\nImport citydefs into existing database::\n\n  gpx2spatialite citydefs -i <path/to/input.sql> <path/to/database>\n\nExport citydefs table::\n\n  gpx2spatialite citydefs -e <path/to/output.sql> <path/to/database>\n\nAfter adding new locations to the citydefs table, you can look for\ncurrently unknown trackpoints and assign them to any relevant,\nnewly defined locations with::\n\n  gpx2spatialite update_locs <path/to/database>\n\nIf you have redefined currently assigned locations or completely\nchanged the citydefs table, you will want to redefine every\ntrackpoint in the database, for which you use the `-a` or\n`-all-locations` option to the above script::\n\n  gpx2spatialite update_locs -a <path/to/database>\n\n\nUnit tests\n----------\n\nThe repository contains the standalone py.test (version 2.5.2) script\n`runtests.py`.\n\nRun the following command to run the tests::\n\n  python setup.py test\n\n\n..\n\n   Local Variables:\n   mode: rst\n   End:", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/ptrv/gpx2spatialite", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ptrv/gpx2spatialite", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "gpx2spatialite", "package_url": "https://pypi.org/project/gpx2spatialite/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gpx2spatialite/", "project_urls": {"Download": "https://github.com/ptrv/gpx2spatialite", "Homepage": "https://github.com/ptrv/gpx2spatialite"}, "release_url": "https://pypi.org/project/gpx2spatialite/0.8.2/", "requires_dist": null, "requires_python": null, "summary": "gpx2spatialite", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Daniel Belasco Rogers &lt;<a href=\"mailto:dan%40planbperformance.net\">dan<span>@</span>planbperformance<span>.</span>net</a>&gt;,\nPeter Vasil &lt;<a href=\"mailto:mail%40petervasil.net\">mail<span>@</span>petervasil<span>.</span>net</a>&gt;</td></tr>\n</tbody>\n</table>\n<a href=\"https://travis-ci.org/ptrv/gpx2spatialite\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/ptrv/gpx2spatialite.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/974588444e46ec742dfb7fa32862f040408f8a0c/68747470733a2f2f7472617669732d63692e6f72672f707472762f677078327370617469616c6974652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/gpx2spatialite/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0189bcde777c63946d18f1fa8e91d1f9d66eb94e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f677078327370617469616c6974652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/gpx2spatialite/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b08fab165bfd9ffb0fab20be5db45ef995fafd13/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f677078327370617469616c6974652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/gpx2spatialite/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51bd61ad223a03ceb777487fedcae9de0c5060fa/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f677078327370617469616c6974652e737667\"></a>\n<p>A script for importing GPX files into a SpatiaLite database.</p>\n<p>Uses Tomo Krajina\u2019s gpx module. gpx2spatialite takes a single or\nfolder full of gpx files and imports them into a spatialite spatial\ndatabase. On importing, a file is hashed and entered into a table\nto make sure that a file with identical contents is not added\ntwice. The spatial information from trackpoints is stored in two\ntables in the spatialite database, trackpoints and tracklines which\nare related. You can read more detail about the reason to represent\ndata from a GPX file like this here:\n&lt;<a href=\"http://planbperformance.net/dan/blog/?p=984\" rel=\"nofollow\">http://planbperformance.net/dan/blog/?p=984</a>&gt;</p>\n<p>The compulsory \u2018user\u2019 argument is to import gpx files from\ndifferent users into the same database. This is because\ngpx2spatialite was written as an importer for DrawingLife\n&lt;<a href=\"https://github.com/ptrv/drawinglife\" rel=\"nofollow\">https://github.com/ptrv/drawinglife</a>&gt; which is a visualisation\nsoftware written by Peter Vasil for Daniel Belasco Rogers\u2019 and\nSophia New\u2019s art project of recording everywhere they go with a GPS\nsince 2003 and 2007 respectively (&lt;<a href=\"http://belasconew.com/works/lifedrawing/\" rel=\"nofollow\">http://belasconew.com/works/lifedrawing/</a>&gt;)</p>\n<p>If you only have one user to enter, just pick any name and import\nall files under this name.</p>\n<p>Because DrawingLife has text at the top of the screen which shows\nthe current location of the animation screen, this information is\nprovided by the citydef_uid column in the trackpoints table which\npoints to the citydefs table. This column is also populated on\nimport by default. If you do not require this, you can set the\noption -s \u2013skip-locations which will speed up importing\nconsiderably.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<h2 id=\"linux-and-mac\"><span class=\"section-subtitle\">Linux and Mac</span></h2>\n<ul>\n<li>Python:<ul>\n<li>gpxpy</li>\n<li>pyspatialite, pysqlite2 (with support for loading extensions)</li>\n</ul>\n</li>\n<li>Other libraries:<ul>\n<li>libspatialite</li>\n<li>libsqlite</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"id1\">\n<h3>Linux and Mac</h3>\n<p>gpx2spatialite is available via pip.\nYou can simply run:</p>\n<pre>pip install gpx2spatialite\n</pre>\n<p>Or to install it with user scope run the following command:</p>\n<pre>pip install gpx2spatialite --user\n</pre>\n<p>Make sure that <tt><span class=\"pre\">$HOME/.local/bin</span></tt> is available in your <tt>PATH</tt> environment variable.\nOtherwise the gpx2spatialite executable will not be found when you run it from the shell:</p>\n<pre>PATH=$PATH:$HOME/.local/bin\n</pre>\n</div>\n<div id=\"windows\">\n<h3>Windows</h3>\n<ul>\n<li>Download python 2.7 32bit for windows</li>\n<li>Install pip. (See instructions <a href=\"https://pip.pypa.io/en/latest/installing.html\" rel=\"nofollow\">here</a>)</li>\n<li>Install gpxpy with <tt>pip install gpxpy</tt></li>\n<li>Download mod_spatialte from <a href=\"http://www.gaia-gis.it/gaia-sins/windows-bin-x86/\" rel=\"nofollow\">http://www.gaia-gis.it/gaia-sins/windows-bin-x86/</a>\nand extract all dlls to <tt><span class=\"pre\">C:\\Python27\\Scripts</span></tt></li>\n<li>Download sqlite3.dll from <a href=\"http://www.sqlite.org/download.html\" rel=\"nofollow\">sqlite website</a>\n(something like \u2018sqlite-dll-win32-x86-3080704.zip\u2019)\nand overwrite <tt>sqlite3.dll</tt> in <tt><span class=\"pre\">C:\\Python27\\Scripts\\DLLs</span></tt> with the downloaded version\n(This ensures that <tt>sqlite3.dll</tt> is capable of loading extensions)</li>\n<li>Install gpx2spatialite with <tt>pip install gpx2spatialite</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>It is possible to read in single files:</p>\n<pre>gpx2spatialite import -d &lt;path/to/database&gt; -u &lt;user_id&gt; &lt;path/to/gpx&gt;\n</pre>\n<p>Or multiple folders:</p>\n<pre>gpx2spatialite import -d &lt;path/to/database&gt; -u &lt;user_id&gt; &lt;path/to/folder1&gt; &lt;path/to/folder2&gt;\n</pre>\n<p>Files and folders can be specified both at the same time:</p>\n<pre>gpx2spatialite import -d &lt;path/to/database&gt; -u &lt;user_id&gt; &lt;path/to/folder1&gt; &lt;path/to/gpx&gt;\n</pre>\n</div>\n<div id=\"create-a-new-database\">\n<h2>Create a new database</h2>\n<p>Run script with subcommand to create a new database and initialize it:</p>\n<pre>gpx2spatialite create_db &lt;path/to/new/database&gt;\n</pre>\n</div>\n<div id=\"citydefs\">\n<h2>CityDefs</h2>\n<p>Each trackpoint has a location assigned to it which is used for the\n<a href=\"https://github.com/ptrv/drawinglife\" rel=\"nofollow\">drawinglife</a> animation.</p>\n<p>These are defined at import time unless the option <cite>-s</cite> or\n<cite>\u2013skip-locations</cite> is passed.</p>\n<p>Locations are defined in the <cite>citydefs</cite> table in the database, created\nand populated automatically by running \u2018gpx2spatialite create_db\u2019.</p>\n<p>Import citydefs into existing database:</p>\n<pre>gpx2spatialite citydefs -i &lt;path/to/input.sql&gt; &lt;path/to/database&gt;\n</pre>\n<p>Export citydefs table:</p>\n<pre>gpx2spatialite citydefs -e &lt;path/to/output.sql&gt; &lt;path/to/database&gt;\n</pre>\n<p>After adding new locations to the citydefs table, you can look for\ncurrently unknown trackpoints and assign them to any relevant,\nnewly defined locations with:</p>\n<pre>gpx2spatialite update_locs &lt;path/to/database&gt;\n</pre>\n<p>If you have redefined currently assigned locations or completely\nchanged the citydefs table, you will want to redefine every\ntrackpoint in the database, for which you use the <cite>-a</cite> or\n<cite>-all-locations</cite> option to the above script:</p>\n<pre>gpx2spatialite update_locs -a &lt;path/to/database&gt;\n</pre>\n</div>\n<div id=\"unit-tests\">\n<h2>Unit tests</h2>\n<p>The repository contains the standalone py.test (version 2.5.2) script\n<cite>runtests.py</cite>.</p>\n<p>Run the following command to run the tests:</p>\n<pre>python setup.py test\n</pre>\n<blockquote>\nLocal Variables:\nmode: rst\nEnd:</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1931022, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "8436507684af40c3168857a48c537ca5", "sha256": "27a0f9c35af2b4e319495ecd34802b9f483031c551c2ef5de7545c55a7c1c20a"}, "downloads": -1, "filename": "gpx2spatialite-0.5.tar.gz", "has_sig": false, "md5_digest": "8436507684af40c3168857a48c537ca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36909, "upload_time": "2014-01-05T21:29:04", "upload_time_iso_8601": "2014-01-05T21:29:04.122867Z", "url": "https://files.pythonhosted.org/packages/8a/a7/f7d48c5138f4bbe551f542f27484be7b87478a94557f49b1d697530cd032/gpx2spatialite-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "62a3c9564918c9e75cc629f3f528cb1a", "sha256": "96fe008f062ce652e3726af9de43cc08560947d3476ac51a61537a3f9ad10f25"}, "downloads": -1, "filename": "gpx2spatialite-0.6.tar.gz", "has_sig": false, "md5_digest": "62a3c9564918c9e75cc629f3f528cb1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39486, "upload_time": "2014-10-11T10:48:23", "upload_time_iso_8601": "2014-10-11T10:48:23.142477Z", "url": "https://files.pythonhosted.org/packages/d8/ca/c2b2f195747348fa47aca5f531829d0d3f7cc6ca6a76d05fd481db989ba9/gpx2spatialite-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "2ab58535055bff594f0fb77d1b805942", "sha256": "06f78eefe77571c3301ebcd0898d731e0fc3b5ea67689aafd610e434a8517cb1"}, "downloads": -1, "filename": "gpx2spatialite-0.6.1.tar.gz", "has_sig": false, "md5_digest": "2ab58535055bff594f0fb77d1b805942", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39728, "upload_time": "2014-10-12T10:33:37", "upload_time_iso_8601": "2014-10-12T10:33:37.070636Z", "url": "https://files.pythonhosted.org/packages/e5/1b/e96b46071c18ec9ecb1130fdcef01083036498f75685e857dd3ba5b73ab2/gpx2spatialite-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "6f50f38351101fe38e3d634a8a222cd5", "sha256": "e51f1b9ae7b1bbe5a7031a504c89445a3059da335dde36cdde4d5b4cd95d9930"}, "downloads": -1, "filename": "gpx2spatialite-0.7.0.tar.gz", "has_sig": false, "md5_digest": "6f50f38351101fe38e3d634a8a222cd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38805, "upload_time": "2014-12-22T17:08:34", "upload_time_iso_8601": "2014-12-22T17:08:34.745661Z", "url": "https://files.pythonhosted.org/packages/48/11/296567ce70107e77135b6b6b6907ce171af1fbaf9247fdb6a75f69d61129/gpx2spatialite-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "7a958ee2c70055c328188cdc69d19b3c", "sha256": "a419b1fbeb6e075368b8f32c430e775ee54b755c287fac9ed2d4118d5a964dfe"}, "downloads": -1, "filename": "gpx2spatialite-0.8.0.tar.gz", "has_sig": false, "md5_digest": "7a958ee2c70055c328188cdc69d19b3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38828, "upload_time": "2015-05-21T07:01:39", "upload_time_iso_8601": "2015-05-21T07:01:39.594413Z", "url": "https://files.pythonhosted.org/packages/b5/39/8646ae127da20375b13fa9929211a53c078fef5d6c8b844da30bc8588903/gpx2spatialite-0.8.0.tar.gz", "yanked": false}], "0.8.1": [], "0.8.2": [{"comment_text": "", "digests": {"md5": "89b0f558d6990c04e8f28b3a274b2ae4", "sha256": "d25f5d1646897901d3231c96e2344fba6d5644cd20a9b1049dbe806b9c493ab5"}, "downloads": -1, "filename": "gpx2spatialite-0.8.2.tar.gz", "has_sig": false, "md5_digest": "89b0f558d6990c04e8f28b3a274b2ae4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38793, "upload_time": "2016-01-30T14:55:24", "upload_time_iso_8601": "2016-01-30T14:55:24.107328Z", "url": "https://files.pythonhosted.org/packages/40/e6/9fc36cdadc349624888103e7bbcbb8ec2f232b417a571012197966de0782/gpx2spatialite-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89b0f558d6990c04e8f28b3a274b2ae4", "sha256": "d25f5d1646897901d3231c96e2344fba6d5644cd20a9b1049dbe806b9c493ab5"}, "downloads": -1, "filename": "gpx2spatialite-0.8.2.tar.gz", "has_sig": false, "md5_digest": "89b0f558d6990c04e8f28b3a274b2ae4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38793, "upload_time": "2016-01-30T14:55:24", "upload_time_iso_8601": "2016-01-30T14:55:24.107328Z", "url": "https://files.pythonhosted.org/packages/40/e6/9fc36cdadc349624888103e7bbcbb8ec2f232b417a571012197966de0782/gpx2spatialite-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:06 2020"}