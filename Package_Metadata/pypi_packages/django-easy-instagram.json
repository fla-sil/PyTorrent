{"info": {"author": "Tom Anthony, Marco Pompili", "author_email": "django@tomanthony.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.6", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# django-easy-instagram\n\nA Django application that provides a template tag for displaying content from a public Instagram profile. Has ability to cache files locally.\n\nThis is derived from [Marco Pompili's version](https://github.com/marcopompili/django-instagram), which has different requirements and options. Thanks to Marco for doing all the hard work.\n\n## Requirements\n\n*   [Django >= 1.6](https://www.djangoproject.com/)\n*   [html5lib](https://pypi.python.org/pypi/lxml/3.6.4)\n*   [requests](https://pypi.python.org/pypi/requests/2.11.1)\n*   [sorl-thumbnail](https://github.com/mariocesar/sorl-thumbnail)\n*   [Pillow](https://pypi.python.org/pypi/Pillow/3.3.1)\n\n## Installation\n\nInstall Django with your favourite Linux packaging system or you can use pip for installing python packages, if Django is not an official package for your distribution:\n\n```bash\npip install django\n```\n\nUse pip to install Django Easy Instagram:\n\n```bash\npip install django-easy-instagram\n```\n\nPip should take care of the package dependencies for Django Easy Instagram.\n\n## Configuration\n\nAdd the application to INSTALLED_APPS:\n\n```python\n  INSTALLED_APPS = (\n    ...\n    'sorl.thumbnail', # required for thumbnail support\n    'django_easy_instagram',)\n```\n\nRebuild your application database, this command depends on which version of Django you are using.\n\nIn Django 2.0 (recommended):\n\n```bash\npython manage.py makemigrations django_easy_instagram\n```\n\nThem migrate the db:\n\n```bash\npython manage.py migrate\n```\n\n## Usage\n\nThe `instagram_user_recent_media` brings into context two objects:\n  - `profile`: Contains the who scraped object.\n  - `recent_media`: Contains the recent media, like 10 or 12 entries or so.\n\nYou can display the data contained in `recent_media` list like this:\n\n```html\n<!DOCTYPE html>\n\n{% load instagram_client %}\n\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>{{ instagram_profile_name|capfirst }} Instagram feed</title>\n</head>\n<body>\n<h1>{{ instagram_profile_name|capfirst }} Instagram Feed</h1>\n<div id=\"django_recent_media_wall\">\n    {% instagram_user_recent_media instagram_profile_name %}\n    {% for media in recent_media %}\n        <div class=\"django_easy_instagram_media_wall_item\">\n            <a href=\"//instagram.com/p/{{ media.shortcode }}\" target=\"_blank\">\n                <img src=\"{{ media.thumbnail_src }}\"/>\n                <span>{{ media.edge_media_to_caption.edges.0.node.text }}</span>\n            </a>\n        </div>\n    {% endfor %}\n</div>\n<p>Got from instagram</p>\n</body>\n</html>\n```\n\n## Resizing and Caching Images\n\nYou are able to resize images, which will also mean they are cached locally rather than being loaded from Instagram's servers.\n\nTo enable this, ensure you have `sorl.thumbnail` in the INSTALLED_APPS, and that you have setup [Django caching](https://docs.djangoproject.com/en/2.2/topics/cache/).\n\nIn order for requests to Instagram to work properly, you will need to ensure you set the `sorl.thumbail` setting:\n\n```bash\nTHUMBNAIL_REMOVE_URL_ARGS = False\n```\n\nYou can then use the `local_cache` template filter and specify a size:\n\n```html\n{% for media in recent_media %}\n...\n<img src=\"{{ media.thumbnail_src|local_cache:'332x332' }}\"/>\n...\n{% endfor %}\n```\n\nThe images will be saved locally in a cache.\n\nBy default images will be resized and saved at 80% JPG quality, to\noverride this you can use this setting in your Django settings file:\n\n```bash\nINSTAGRAM_QUALITY = 90\n```\n\n## Thanks\n\nThe original version and most of the actual work was done by Marco Pompili in the version [available here](https://github.com/marcopompili/django-instagram).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TomAnthony/django-easy-instagram/", "keywords": "", "license": "BSD-3 License", "maintainer": "", "maintainer_email": "", "name": "django-easy-instagram", "package_url": "https://pypi.org/project/django-easy-instagram/", "platform": "any", "project_url": "https://pypi.org/project/django-easy-instagram/", "project_urls": {"Homepage": "https://github.com/TomAnthony/django-easy-instagram/"}, "release_url": "https://pypi.org/project/django-easy-instagram/0.3.3/", "requires_dist": null, "requires_python": "", "summary": "Instagram client for Django.", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-easy-instagram</h1>\n<p>A Django application that provides a template tag for displaying content from a public Instagram profile. Has ability to cache files locally.</p>\n<p>This is derived from <a href=\"https://github.com/marcopompili/django-instagram\" rel=\"nofollow\">Marco Pompili's version</a>, which has different requirements and options. Thanks to Marco for doing all the hard work.</p>\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django &gt;= 1.6</a></li>\n<li><a href=\"https://pypi.python.org/pypi/lxml/3.6.4\" rel=\"nofollow\">html5lib</a></li>\n<li><a href=\"https://pypi.python.org/pypi/requests/2.11.1\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"https://github.com/mariocesar/sorl-thumbnail\" rel=\"nofollow\">sorl-thumbnail</a></li>\n<li><a href=\"https://pypi.python.org/pypi/Pillow/3.3.1\" rel=\"nofollow\">Pillow</a></li>\n</ul>\n<h2>Installation</h2>\n<p>Install Django with your favourite Linux packaging system or you can use pip for installing python packages, if Django is not an official package for your distribution:</p>\n<pre>pip install django\n</pre>\n<p>Use pip to install Django Easy Instagram:</p>\n<pre>pip install django-easy-instagram\n</pre>\n<p>Pip should take care of the package dependencies for Django Easy Instagram.</p>\n<h2>Configuration</h2>\n<p>Add the application to INSTALLED_APPS:</p>\n<pre>  <span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'sorl.thumbnail'</span><span class=\"p\">,</span> <span class=\"c1\"># required for thumbnail support</span>\n    <span class=\"s1\">'django_easy_instagram'</span><span class=\"p\">,)</span>\n</pre>\n<p>Rebuild your application database, this command depends on which version of Django you are using.</p>\n<p>In Django 2.0 (recommended):</p>\n<pre>python manage.py makemigrations django_easy_instagram\n</pre>\n<p>Them migrate the db:</p>\n<pre>python manage.py migrate\n</pre>\n<h2>Usage</h2>\n<p>The <code>instagram_user_recent_media</code> brings into context two objects:</p>\n<ul>\n<li><code>profile</code>: Contains the who scraped object.</li>\n<li><code>recent_media</code>: Contains the recent media, like 10 or 12 entries or so.</li>\n</ul>\n<p>You can display the data contained in <code>recent_media</code> list like this:</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n\n{% load instagram_client %}\n\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">lang</span><span class=\"o\">=</span><span class=\"s\">\"en\"</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">\"UTF-8\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>{{ instagram_profile_name|capfirst }} Instagram feed<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>{{ instagram_profile_name|capfirst }} Instagram Feed<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"django_recent_media_wall\"</span><span class=\"p\">&gt;</span>\n    {% instagram_user_recent_media instagram_profile_name %}\n    {% for media in recent_media %}\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"django_easy_instagram_media_wall_item\"</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"//instagram.com/p/{{ media.shortcode }}\"</span> <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">\"_blank\"</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{{ media.thumbnail_src }}\"</span><span class=\"p\">/&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>{{ media.edge_media_to_caption.edges.0.node.text }}<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    {% endfor %}\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Got from instagram<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Resizing and Caching Images</h2>\n<p>You are able to resize images, which will also mean they are cached locally rather than being loaded from Instagram's servers.</p>\n<p>To enable this, ensure you have <code>sorl.thumbnail</code> in the INSTALLED_APPS, and that you have setup <a href=\"https://docs.djangoproject.com/en/2.2/topics/cache/\" rel=\"nofollow\">Django caching</a>.</p>\n<p>In order for requests to Instagram to work properly, you will need to ensure you set the <code>sorl.thumbail</code> setting:</p>\n<pre><span class=\"nv\">THUMBNAIL_REMOVE_URL_ARGS</span> <span class=\"o\">=</span> False\n</pre>\n<p>You can then use the <code>local_cache</code> template filter and specify a size:</p>\n<pre>{% for media in recent_media %}\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{{ media.thumbnail_src|local_cache:'332x332' }}\"</span><span class=\"p\">/&gt;</span>\n...\n{% endfor %}\n</pre>\n<p>The images will be saved locally in a cache.</p>\n<p>By default images will be resized and saved at 80% JPG quality, to\noverride this you can use this setting in your Django settings file:</p>\n<pre><span class=\"nv\">INSTAGRAM_QUALITY</span> <span class=\"o\">=</span> <span class=\"m\">90</span>\n</pre>\n<h2>Thanks</h2>\n<p>The original version and most of the actual work was done by Marco Pompili in the version <a href=\"https://github.com/marcopompili/django-instagram\" rel=\"nofollow\">available here</a>.</p>\n\n          </div>"}, "last_serial": 6955732, "releases": {"0.3.2": [{"comment_text": "", "digests": {"md5": "6416363e0fbd3015187ad2b7b3d9200d", "sha256": "437cd98ab7e8984a4f52dc89d6535879a19a831201697c9ef3255c2c2aead09c"}, "downloads": -1, "filename": "django-easy-instagram-0.3.2.tar.gz", "has_sig": false, "md5_digest": "6416363e0fbd3015187ad2b7b3d9200d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6205, "upload_time": "2020-04-05T13:20:36", "upload_time_iso_8601": "2020-04-05T13:20:36.351024Z", "url": "https://files.pythonhosted.org/packages/d5/ad/e4ac1bbad78f437bb081513db714e79166bfd079d41d6e5a83b6d1b9c70b/django-easy-instagram-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "2ece4abcab874553508344b86ff84007", "sha256": "ba01192993c5a767d2fb9af2d3ea224d03e06236919dba24e9d38516fb6d8aa7"}, "downloads": -1, "filename": "django-easy-instagram-0.3.3.tar.gz", "has_sig": false, "md5_digest": "2ece4abcab874553508344b86ff84007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6113, "upload_time": "2020-04-05T13:25:02", "upload_time_iso_8601": "2020-04-05T13:25:02.260815Z", "url": "https://files.pythonhosted.org/packages/c7/ab/1a9316eb601d8dbe96a730865a5fab88ee0cf90b879ab7cbdcfaae77a7c7/django-easy-instagram-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ece4abcab874553508344b86ff84007", "sha256": "ba01192993c5a767d2fb9af2d3ea224d03e06236919dba24e9d38516fb6d8aa7"}, "downloads": -1, "filename": "django-easy-instagram-0.3.3.tar.gz", "has_sig": false, "md5_digest": "2ece4abcab874553508344b86ff84007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6113, "upload_time": "2020-04-05T13:25:02", "upload_time_iso_8601": "2020-04-05T13:25:02.260815Z", "url": "https://files.pythonhosted.org/packages/c7/ab/1a9316eb601d8dbe96a730865a5fab88ee0cf90b879ab7cbdcfaae77a7c7/django-easy-instagram-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:27 2020"}