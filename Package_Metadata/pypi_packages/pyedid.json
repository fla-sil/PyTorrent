{"info": {"author": "Jonas Lieb", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "# pyEDID\nThis is a python library to parse extended display identification data (EDID)\n\n## EDID data format\nThe EDID data frame format is described in detail on its [Wikipedia page](https://en.wikipedia.org/wiki/Extended_Display_Identification_Data).\n\n# Getting started\n\n## Setup\nFrom pypi\n```bash\n>>> pip install pyedid\n```\nor from github\n```bash\n>>> git clone https://github.com/dadmoscow/pyedid\n>>> python pyedid/setup.py install\n```\n\n## Features\n* Receive and decrypt EDID data\n* Online converting manufacturer id, dumping registry to local csv\n* Works as a shell utility\n* Without third-party dependencies\n\n## Use\n### As a library\n\n```python\nfrom pyedid.edid import Edid\nfrom pyedid.helpers.edid_helper import EdidHelper\nfrom pyedid.helpers.registry import Registry\n\n#### Step 1: loading registry\n# load pnp registry from http://www.uefi.org/pnp_id_list\nregistry = Registry.from_web()\n\n# or loading from local csv file\nregistry = Registry.from_csv('/tmp/foo.csv')\n\n# load from web and dump to csv\nregistry = Registry.from_web().to_csv('/tmp/bar.csv')\n\n# only update\nRegistry.from_web().to_csv('/tmp/bar.csv')\n\n#### Step 2: loading edid data\n\n# loading list with edid data\nedid_bs = EdidHelper.get_edids()[0]\n\n# convert exist edid hex string from xrandr\nedid_bs = EdidHelper.hex2bytes(\"hex string from xrandr...\")\n\n#### Step 3: create instance\n\n# create Edid instance for fisrt edid data\nedid = Edid(edid_bs, registry)\nprint(edid)\n\n# Edid(\n# \tdpms_activeoff=True,\n# \tdpms_standby=True,\n# \tdpms_suspend=True,\n# \tedid_version=1.3,\n# \tgamma=2.2,\n# \theight=30.0,\n# \tmanufacturer=Ancor Communications Inc,\n# \tmanufacturer_id=1129,\n# \tname=VS248,\n# \tproduct=38948,\n# \traw=b'\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x04i\\x98$\\x01\\x01\\x01\\x01\\x1e\\x1b\\x01\\x03\\x1e5\\x1ex\\xea\\x92e\\xa6UU\\x9f(\\rPT\\xbf\\xef\\x00qO\\x81\\x80\\x81@\\x95\\x00\\xa9@\\xb3\\x00\\xd1\\xc0\\x01\\x01\\x02:\\x80\\x18q8-@X,E\\x00\\x13+!\\x00\\x00\\x1e\\x00\\x00\\x00\\xfd\\x002L\\x1eS\\x11\\x00\\n      \\x00\\x00\\x00\\xfc\\x00VS248\\n       \\x00\\x00\\x00\\xff\\x00H7LMQS122161\\n\\x00\\x00',\n# \tresolutions=[(720, 400, 70.0), (720, 400, 88.0), (640, 480, 60.0), (640, 480, 67.0), (640, 480, 72.0), (640, 480, 75.0), (800, 600, 56.0), (800, 600, 60.0), (800, 600, 70.0), (800, 600, 75.0), (832, 624, 75.0), (1024, 768, 87.0), (1024, 768, 60.0), (1024, 768, 72.0), (1024, 768, 75.0), (1152, 864, 75.0), (1280, 1024, 60.0), (1280, 960, 60.0), (1440, 900, 60.0), (1600, 1200, 60.0), (1680, 1050, 60.0), (1920, 1080, 60.0)],\n# \tserial=H7LMQS123181,\n# \ttype=digital,\n# \twidth=53.0,\n# \tyear=2017\n# )\n```\n\n### As a system utility\n```bash\n>>> pyedid\n\n# Loading registry from web...\n# Done!\n\n# Edid(\n# \tdpms_activeoff=True,\n# \tdpms_standby=True,\n# \tdpms_suspend=True,\n# \tedid_version=1.3,\n# \tgamma=2.2,\n# \theight=30.0,\n# \tmanufacturer=Ancor Communications Inc,\n# \tmanufacturer_id=1129,\n# \tname=VS248,\n# \tproduct=38948,\n# \traw=b'\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x04i\\x98$\\x01\\x01\\x01\\x01\\x1e\\x1b\\x01\\x03\\x1e5\\x1ex\\xea\\x92e\\xa6UU\\x9f(\\rPT\\xbf\\xef\\x00qO\\x81\\x80\\x81@\\x95\\x00\\xa9@\\xb3\\x00\\xd1\\xc0\\x01\\x01\\x02:\\x80\\x18q8-@X,E\\x00\\x13+!\\x00\\x00\\x1e\\x00\\x00\\x00\\xfd\\x002L\\x1eS\\x11\\x00\\n      \\x00\\x00\\x00\\xfc\\x00VS248\\n       \\x00\\x00\\x00\\xff\\x00H7LMQS122161\\n\\x00\\x00',\n# \tresolutions=[(720, 400, 70.0), (720, 400, 88.0), (640, 480, 60.0), (640, 480, 67.0), (640, 480, 72.0), (640, 480, 75.0), (800, 600, 56.0), (800, 600, 60.0), (800, 600, 70.0), (800, 600, 75.0), (832, 624, 75.0), (1024, 768, 87.0), (1024, 768, 60.0), (1024, 768, 72.0), (1024, 768, 75.0), (1152, 864, 75.0), (1280, 1024, 60.0), (1280, 960, 60.0), (1440, 900, 60.0), (1600, 1200, 60.0), (1680, 1050, 60.0), (1920, 1080, 60.0)],\n# \tserial=H7LMQS123181,\n# \ttype=digital,\n# \twidth=53.0,\n# \tyear=2017\n# )\n```\n\n## Licensing\nSee LICENSE", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dadmoscow/pyedid", "keywords": "edid xrandr display", "license": "", "maintainer": "Davydov Denis", "maintainer_email": "dadmoscow@gmail.com", "name": "pyedid", "package_url": "https://pypi.org/project/pyedid/", "platform": "", "project_url": "https://pypi.org/project/pyedid/", "project_urls": {"Homepage": "https://github.com/dadmoscow/pyedid"}, "release_url": "https://pypi.org/project/pyedid/0.1/", "requires_dist": null, "requires_python": "", "summary": "This is a python library to parse extended display identification data (EDID)", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyEDID</h1>\n<p>This is a python library to parse extended display identification data (EDID)</p>\n<h2>EDID data format</h2>\n<p>The EDID data frame format is described in detail on its <a href=\"https://en.wikipedia.org/wiki/Extended_Display_Identification_Data\" rel=\"nofollow\">Wikipedia page</a>.</p>\n<h1>Getting started</h1>\n<h2>Setup</h2>\n<p>From pypi</p>\n<pre>&gt;&gt;&gt; pip install pyedid\n</pre>\n<p>or from github</p>\n<pre>&gt;&gt;&gt; git clone https://github.com/dadmoscow/pyedid\n&gt;&gt;&gt; python pyedid/setup.py install\n</pre>\n<h2>Features</h2>\n<ul>\n<li>Receive and decrypt EDID data</li>\n<li>Online converting manufacturer id, dumping registry to local csv</li>\n<li>Works as a shell utility</li>\n<li>Without third-party dependencies</li>\n</ul>\n<h2>Use</h2>\n<h3>As a library</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyedid.edid</span> <span class=\"kn\">import</span> <span class=\"n\">Edid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyedid.helpers.edid_helper</span> <span class=\"kn\">import</span> <span class=\"n\">EdidHelper</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyedid.helpers.registry</span> <span class=\"kn\">import</span> <span class=\"n\">Registry</span>\n\n<span class=\"c1\">#### Step 1: loading registry</span>\n<span class=\"c1\"># load pnp registry from http://www.uefi.org/pnp_id_list</span>\n<span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"n\">Registry</span><span class=\"o\">.</span><span class=\"n\">from_web</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># or loading from local csv file</span>\n<span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"n\">Registry</span><span class=\"o\">.</span><span class=\"n\">from_csv</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/foo.csv'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># load from web and dump to csv</span>\n<span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"n\">Registry</span><span class=\"o\">.</span><span class=\"n\">from_web</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/bar.csv'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># only update</span>\n<span class=\"n\">Registry</span><span class=\"o\">.</span><span class=\"n\">from_web</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/bar.csv'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#### Step 2: loading edid data</span>\n\n<span class=\"c1\"># loading list with edid data</span>\n<span class=\"n\">edid_bs</span> <span class=\"o\">=</span> <span class=\"n\">EdidHelper</span><span class=\"o\">.</span><span class=\"n\">get_edids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># convert exist edid hex string from xrandr</span>\n<span class=\"n\">edid_bs</span> <span class=\"o\">=</span> <span class=\"n\">EdidHelper</span><span class=\"o\">.</span><span class=\"n\">hex2bytes</span><span class=\"p\">(</span><span class=\"s2\">\"hex string from xrandr...\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#### Step 3: create instance</span>\n\n<span class=\"c1\"># create Edid instance for fisrt edid data</span>\n<span class=\"n\">edid</span> <span class=\"o\">=</span> <span class=\"n\">Edid</span><span class=\"p\">(</span><span class=\"n\">edid_bs</span><span class=\"p\">,</span> <span class=\"n\">registry</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">edid</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Edid(</span>\n<span class=\"c1\"># \tdpms_activeoff=True,</span>\n<span class=\"c1\"># \tdpms_standby=True,</span>\n<span class=\"c1\"># \tdpms_suspend=True,</span>\n<span class=\"c1\"># \tedid_version=1.3,</span>\n<span class=\"c1\"># \tgamma=2.2,</span>\n<span class=\"c1\"># \theight=30.0,</span>\n<span class=\"c1\"># \tmanufacturer=Ancor Communications Inc,</span>\n<span class=\"c1\"># \tmanufacturer_id=1129,</span>\n<span class=\"c1\"># \tname=VS248,</span>\n<span class=\"c1\"># \tproduct=38948,</span>\n<span class=\"c1\"># \traw=b'\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x04i\\x98$\\x01\\x01\\x01\\x01\\x1e\\x1b\\x01\\x03\\x1e5\\x1ex\\xea\\x92e\\xa6UU\\x9f(\\rPT\\xbf\\xef\\x00qO\\x81\\x80\\x81@\\x95\\x00\\xa9@\\xb3\\x00\\xd1\\xc0\\x01\\x01\\x02:\\x80\\x18q8-@X,E\\x00\\x13+!\\x00\\x00\\x1e\\x00\\x00\\x00\\xfd\\x002L\\x1eS\\x11\\x00\\n      \\x00\\x00\\x00\\xfc\\x00VS248\\n       \\x00\\x00\\x00\\xff\\x00H7LMQS122161\\n\\x00\\x00',</span>\n<span class=\"c1\"># \tresolutions=[(720, 400, 70.0), (720, 400, 88.0), (640, 480, 60.0), (640, 480, 67.0), (640, 480, 72.0), (640, 480, 75.0), (800, 600, 56.0), (800, 600, 60.0), (800, 600, 70.0), (800, 600, 75.0), (832, 624, 75.0), (1024, 768, 87.0), (1024, 768, 60.0), (1024, 768, 72.0), (1024, 768, 75.0), (1152, 864, 75.0), (1280, 1024, 60.0), (1280, 960, 60.0), (1440, 900, 60.0), (1600, 1200, 60.0), (1680, 1050, 60.0), (1920, 1080, 60.0)],</span>\n<span class=\"c1\"># \tserial=H7LMQS123181,</span>\n<span class=\"c1\"># \ttype=digital,</span>\n<span class=\"c1\"># \twidth=53.0,</span>\n<span class=\"c1\"># \tyear=2017</span>\n<span class=\"c1\"># )</span>\n</pre>\n<h3>As a system utility</h3>\n<pre>&gt;&gt;&gt; pyedid\n\n<span class=\"c1\"># Loading registry from web...</span>\n<span class=\"c1\"># Done!</span>\n\n<span class=\"c1\"># Edid(</span>\n<span class=\"c1\"># \tdpms_activeoff=True,</span>\n<span class=\"c1\"># \tdpms_standby=True,</span>\n<span class=\"c1\"># \tdpms_suspend=True,</span>\n<span class=\"c1\"># \tedid_version=1.3,</span>\n<span class=\"c1\"># \tgamma=2.2,</span>\n<span class=\"c1\"># \theight=30.0,</span>\n<span class=\"c1\"># \tmanufacturer=Ancor Communications Inc,</span>\n<span class=\"c1\"># \tmanufacturer_id=1129,</span>\n<span class=\"c1\"># \tname=VS248,</span>\n<span class=\"c1\"># \tproduct=38948,</span>\n<span class=\"c1\"># \traw=b'\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x04i\\x98$\\x01\\x01\\x01\\x01\\x1e\\x1b\\x01\\x03\\x1e5\\x1ex\\xea\\x92e\\xa6UU\\x9f(\\rPT\\xbf\\xef\\x00qO\\x81\\x80\\x81@\\x95\\x00\\xa9@\\xb3\\x00\\xd1\\xc0\\x01\\x01\\x02:\\x80\\x18q8-@X,E\\x00\\x13+!\\x00\\x00\\x1e\\x00\\x00\\x00\\xfd\\x002L\\x1eS\\x11\\x00\\n      \\x00\\x00\\x00\\xfc\\x00VS248\\n       \\x00\\x00\\x00\\xff\\x00H7LMQS122161\\n\\x00\\x00',</span>\n<span class=\"c1\"># \tresolutions=[(720, 400, 70.0), (720, 400, 88.0), (640, 480, 60.0), (640, 480, 67.0), (640, 480, 72.0), (640, 480, 75.0), (800, 600, 56.0), (800, 600, 60.0), (800, 600, 70.0), (800, 600, 75.0), (832, 624, 75.0), (1024, 768, 87.0), (1024, 768, 60.0), (1024, 768, 72.0), (1024, 768, 75.0), (1152, 864, 75.0), (1280, 1024, 60.0), (1280, 960, 60.0), (1440, 900, 60.0), (1600, 1200, 60.0), (1680, 1050, 60.0), (1920, 1080, 60.0)],</span>\n<span class=\"c1\"># \tserial=H7LMQS123181,</span>\n<span class=\"c1\"># \ttype=digital,</span>\n<span class=\"c1\"># \twidth=53.0,</span>\n<span class=\"c1\"># \tyear=2017</span>\n<span class=\"c1\"># )</span>\n</pre>\n<h2>Licensing</h2>\n<p>See LICENSE</p>\n\n          </div>"}, "last_serial": 5583517, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c7aa3d0be07063e872b48340ff5eb069", "sha256": "bda39542cd61af769cb7a748800b50bbab76ffa211e4b82dc9f2036b2367e504"}, "downloads": -1, "filename": "pyedid-0.1.tar.gz", "has_sig": false, "md5_digest": "c7aa3d0be07063e872b48340ff5eb069", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7352, "upload_time": "2019-07-25T14:20:26", "upload_time_iso_8601": "2019-07-25T14:20:26.090536Z", "url": "https://files.pythonhosted.org/packages/ef/ed/e11c5c73a3cbc257c914c0fb0b80c86de54a8f6f408618f310ed31efff6e/pyedid-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7aa3d0be07063e872b48340ff5eb069", "sha256": "bda39542cd61af769cb7a748800b50bbab76ffa211e4b82dc9f2036b2367e504"}, "downloads": -1, "filename": "pyedid-0.1.tar.gz", "has_sig": false, "md5_digest": "c7aa3d0be07063e872b48340ff5eb069", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7352, "upload_time": "2019-07-25T14:20:26", "upload_time_iso_8601": "2019-07-25T14:20:26.090536Z", "url": "https://files.pythonhosted.org/packages/ef/ed/e11c5c73a3cbc257c914c0fb0b80c86de54a8f6f408618f310ed31efff6e/pyedid-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:31 2020"}