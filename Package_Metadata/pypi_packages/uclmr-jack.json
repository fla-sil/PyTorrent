{"info": {"author": "UCL Machine Reading", "author_email": "s.riedel@cs.ucl.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Jack the Reader [![Wercker build badge][wercker_badge]][wercker] [![codecov](https://codecov.io/gh/uclmr/jack/branch/master/graph/badge.svg?token=jbZrj9oSmi)](https://codecov.io/gh/uclmr/jack) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/jack-the-reader/Lobby?source=orgpage) [![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/uclmr/jack/blob/master/LICENSE)\n\n##### A Machine Reading Comprehension framework.\n\n* All work and no play makes Jack a great frame*work*!\n* All work and no play makes Jack a great frame*work*!\n* All work and no play makes Jack a great frame*work*!\n\n[wercker_badge]: https://app.wercker.com/status/8ed61192a5b16769a41dc24c30a3bc6a/s/master\n[wercker]: https://app.wercker.com/project/byKey/8ed61192a5b16769a41dc24c30a3bc6a\n[heres_johnny]: https://upload.wikimedia.org/wikipedia/en/b/bb/The_shining_heres_johnny.jpg\n\n**Jack the Reader** - or **jack**, for short - is a framework for building and using models on a variety of tasks that require *reading comprehension*. For more informations about the overall architecture, we refer to [Jack the Reader \u2013 A Machine Reading Framework](https://arxiv.org/abs/1806.08727) (ACL 2018).\n\n## Installation\nTo install Jack, install requirements and [TensorFlow](http://tensorflow.org/). In case you want to use PyTorch for writing models, please install [PyTorch](http://pytorch.org/) as well.\n\n## Supported ML Backends\n\nWe currently support [TensorFlow](http://tensorflow.org/) and [PyTorch](http://pytorch.org/).\nReaders can be implemented using both. Input and output modules (i.e., pre- and post-processing) are independent of the\nML backend and can thus be reused for model modules that either backend.\nThough most models are implemented in TensorFlow by reusing the cumbersome pre- and post-processing it is easy to\nquickly build new readers in PyTorch as well.\n\n## Pre-trained Models\n\nFind pre-trained models [here](https://www.dropbox.com/sh/vnmc9pq4yrgl1sr/AAD7HVhGdpof2IgIifSZ6PEUa?dl=0).\n\n## Code Structure\n\n* `jack.core` - core abstractions used\n* `jack.readers` - implementations of models\n* `jack.eval` - task evaluation code\n* `jack.util` - utility code that is used throughout the framework, including shared ML code\n* `jack.io` - IO related code, including loading and dataset conversion scripts\n\n\n## Projects\n\n* [Integration of Knowledge into neural NLU systems](/projects/knowledge_integration)\n\n## Quickstart\n\n### Coding Tutorials - Notebooks & CLI\nWe provide ipython notebooks with tutorials on Jack. For the quickest start, you can begin [here][quickstart]. If you're interested in training a model yourself from code, see [this tutorial][model_training] (we recommend the command-line, see below), and if you'd like to implement a new model yourself, [this notebook][implementation] gives you a tutorial that explains this process in more detail.\n\nThere is documentation on our [command-line interface][cli] for actually **training and evaluating models**.\nFor a high-level explanation of the ideas and vision, see [Understanding Jack the Reader][understanding].\n\n[quickstart]: notebooks/quick_start.ipynb\n[model_training]: notebooks/model_training.ipynb\n[implementation]: notebooks/model_implementation.ipynb\n[install]: docs/How_to_install_and_run.md\n[api]: https://uclmr.github.io/jack/\n[notebooks]: notebooks/\n[understanding]: docs/Understanding_Jack_the_Reader.md\n[cli]: docs/CLI.md\n\n### Command-line Training and Usage of a QA System\nTo illustrate how jack works, we will show how to train a question answering\nmodel using our [command-line interface][cli] which is analoguous for other tasks (browse [conf/](./conf/) for existing task-dataset configurations).\nIt is probably best to setup a [virtual environment](https://docs.python.org/3/library/venv.html) to avoid\nclashes with system wide python library versions.\n\nFirst, install the framework:\n\n```bash\n$ python3 -m pip install -e .[tf]\n```\n\nThen, download the SQuAD dataset, and the GloVe word embeddings:\n\n```bash\n$ ./data/SQuAD/download.sh\n$ ./data/GloVe/download.sh\n```\n\nTrain a [FastQA][fastqa] model:\n\n```bash\n$ python3 bin/jack-train.py with train='data/SQuAD/train-v1.1.json' dev='data/SQuAD/dev-v1.1.json' reader='fastqa_reader' \\\n> repr_dim=300 dropout=0.5 batch_size=64 seed=1337 loader='squad' save_dir='./fastqa_reader' epochs=20 \\\n> with_char_embeddings=True embedding_format='memory_map_dir' embedding_file='data/GloVe/glove.840B.300d.memory_map_dir' vocab_from_embeddings=True\n```\n\nor shorter, using our prepared config:\n\n```bash\n$ python3 bin/jack-train.py with config='./conf/qa/squad/fastqa.yaml'\n```\n\nA copy of the model is written into the `save_dir` directory after each\ntraining epoch when performance improves. These can be loaded using the commands below or see e.g.\n[quickstart].\n\nYou want to train another model? No problem, we have a fairly modular QAModel implementation which allows you to stick\ntogether your own model. There are examples in `conf/qa/squad/` (e.g., `bidaf.yaml` or our own creation `jack_qa.yaml`).\nThese models are defined solely in the configs, i.e., there is not implementation in code.\nThis is possible through our `ModularQAModel`.\n\nIf all of that is too cumbersome for you and you just want to play, why not downloading a pretrained model:\n\n```bash\n$ # we still need GloVe in memory mapped format, ignore the next 2 commands if already downloaded and transformed\n$ data/GloVe/download.sh\n$ wget -O fastqa.zip https://www.dropbox.com/s/qb796uljoqj0lvo/fastqa.zip?dl=1\n$ unzip fastqa.zip && mv fastqa fastqa_reader\n```\n\n```python\nfrom jack import readers\nfrom jack.core import QASetting\n\nfastqa_reader = readers.reader_from_file(\"./fastqa_reader\")\n\nsupport = \"\"\"\"It is a replica of the grotto at Lourdes,\nFrance where the Virgin Mary reputedly appeared to Saint Bernadette Soubirous in 1858.\nAt the end of the main drive (and in a direct line that connects through 3 statues and the Gold Dome),\nis a simple, modern stone statue of Mary.\"\"\"\n\nanswers = fastqa_reader([QASetting(\n    question=\"To whom did the Virgin Mary allegedly appear in 1858 in Lourdes France?\",\n    support=[support]\n)])\n\nprint(answers[0][0].text)\n```\n[fastqa]: https://arxiv.org/abs/1703.04816\n[tf_summaries]: https://www.tensorflow.org/get_started/summaries_and_tensorboard\n[quick_start]: notebooks/quick_start.ipynb\n[cli]: docs/CLI.md\n\n## Support\nWe are thankful for support from:\n\n<a href=\"http://mr.cs.ucl.ac.uk/\"><img src=\"http://mr.cs.ucl.ac.uk/images/uclmr_logo_round.png\" width=\"100px\"></a>\n<a href=\"http://www.softwarecampus.de/start/df\"><img src=\"https://idw-online.de/de/newsimage?id=186901&size=screen\" width=\"100px\"></a>\n<a href=\"http://ec.europa.eu/research/mariecurieactions/funded-projects/career-integration-grants_en\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/European_Commission.svg/2000px-European_Commission.svg.png\" width=\"100px\"></a>\n\n<a href=\"http://bloomsbury.ai/\"><img src=\"https://www.dropbox.com/s/7hdb42azs03hbve/logo_text_square.png?raw=1\" width=\"100px\"></a>\n<a href=\"https://www.dfki.de/web\"><img src=\"https://www.dfki.de/web/presse/bildmaterial/dfki-logo-e-schrift.jpg\" width=\"100px\"></a>\n<a href=\"http://www.pgafamilyfoundation.org\"><img src=\"https://portlandmercado.files.wordpress.com/2013/02/pgaff_pms.jpg\" width=\"100px\"></a>\n<a href=\"http://summa-project.eu/\"><img src=\"http://summa-project.eu/wp-content/uploads/2017/04/summalogofinal.png\" width=\"100px\"></a>\n\n## Developer guidelines\n\n- [Comply with the PEP 8 Style Guide][pep8]\n- Make sure all your code runs from the top level directory, e.g.:\n\n```shell\n$ pwd\n/home/pasquale/workspace/jack\n$ python3 bin/jack-train.py [..]\n```\n\n[pep8]: https://www.python.org/dev/peps/pep-0008/\n\n## Citing\n\n```\n@InProceedings{weissenborn2018jack,\nauthor    = {Dirk Weissenborn, Pasquale Minervini, Tim Dettmers, Isabelle Augenstein, Johannes Welbl, Tim Rockta\u0308schel, Matko Bos\u030cnjak, Jeff Mitchell, Thomas Demeester, Pontus Stenetorp, Sebastian Riedel},\ntitle     = {{Jack the Reader \u2013 A Machine Reading Framework}},\nbooktitle = {{Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (ACL) System Demonstrations}},\nMonth     = {July},\nyear      = {2018},\nurl       = {https://arxiv.org/abs/1806.08727}\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uclmr/jack", "keywords": "tensorflow machine learning natural language processing question answering", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "uclmr-jack", "package_url": "https://pypi.org/project/uclmr-jack/", "platform": "", "project_url": "https://pypi.org/project/uclmr-jack/", "project_urls": {"Homepage": "https://github.com/uclmr/jack"}, "release_url": "https://pypi.org/project/uclmr-jack/0.2.1/", "requires_dist": ["jsonschema", "numpy", "parse", "scipy", "sklearn", "typing", "sacred (==0.7.2)", "sqlalchemy", "pyyaml", "progressbar2", "spacy (==1.9)", "diskcache", "pytest", "pytest-runner", "pytest-xdist", "pytest-pep8", "pytest-xdist", "pytest-cov", "codecov", "tensorflow (==1.8.0); extra == 'tf'", "tensorflow-gpu (==1.8.0); extra == 'tf_gpu'", "torch; extra == 'torch'"], "requires_python": "", "summary": "Jack the Reader is a Python framework for Machine Reading", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Jack the Reader <a href=\"https://app.wercker.com/project/byKey/8ed61192a5b16769a41dc24c30a3bc6a\" rel=\"nofollow\"><img alt=\"Wercker build badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abadc06850ad25ec73d796ed10b69596458d794b/68747470733a2f2f6170702e776572636b65722e636f6d2f7374617475732f38656436313139326135623136373639613431646332346333306133626336612f732f6d6173746572\"></a> <a href=\"https://codecov.io/gh/uclmr/jack\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f68e302607e3c6f947a2d6ed8861fd2d82efac52/68747470733a2f2f636f6465636f762e696f2f67682f75636c6d722f6a61636b2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d6a625a726a396f536d69\"></a> <a href=\"https://gitter.im/jack-the-reader/Lobby?source=orgpage\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a> <a href=\"https://github.com/uclmr/jack/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae646c9f8bcc796bfc74debf7ac2c93ee374c6ef/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e7376673f6d61784167653d32353932303030\"></a></h1>\n<h5>A Machine Reading Comprehension framework.</h5>\n<ul>\n<li>All work and no play makes Jack a great frame<em>work</em>!</li>\n<li>All work and no play makes Jack a great frame<em>work</em>!</li>\n<li>All work and no play makes Jack a great frame<em>work</em>!</li>\n</ul>\n<p><strong>Jack the Reader</strong> - or <strong>jack</strong>, for short - is a framework for building and using models on a variety of tasks that require <em>reading comprehension</em>. For more informations about the overall architecture, we refer to <a href=\"https://arxiv.org/abs/1806.08727\" rel=\"nofollow\">Jack the Reader \u2013 A Machine Reading Framework</a> (ACL 2018).</p>\n<h2>Installation</h2>\n<p>To install Jack, install requirements and <a href=\"http://tensorflow.org/\" rel=\"nofollow\">TensorFlow</a>. In case you want to use PyTorch for writing models, please install <a href=\"http://pytorch.org/\" rel=\"nofollow\">PyTorch</a> as well.</p>\n<h2>Supported ML Backends</h2>\n<p>We currently support <a href=\"http://tensorflow.org/\" rel=\"nofollow\">TensorFlow</a> and <a href=\"http://pytorch.org/\" rel=\"nofollow\">PyTorch</a>.\nReaders can be implemented using both. Input and output modules (i.e., pre- and post-processing) are independent of the\nML backend and can thus be reused for model modules that either backend.\nThough most models are implemented in TensorFlow by reusing the cumbersome pre- and post-processing it is easy to\nquickly build new readers in PyTorch as well.</p>\n<h2>Pre-trained Models</h2>\n<p>Find pre-trained models <a href=\"https://www.dropbox.com/sh/vnmc9pq4yrgl1sr/AAD7HVhGdpof2IgIifSZ6PEUa?dl=0\" rel=\"nofollow\">here</a>.</p>\n<h2>Code Structure</h2>\n<ul>\n<li><code>jack.core</code> - core abstractions used</li>\n<li><code>jack.readers</code> - implementations of models</li>\n<li><code>jack.eval</code> - task evaluation code</li>\n<li><code>jack.util</code> - utility code that is used throughout the framework, including shared ML code</li>\n<li><code>jack.io</code> - IO related code, including loading and dataset conversion scripts</li>\n</ul>\n<h2>Projects</h2>\n<ul>\n<li><a href=\"/projects/knowledge_integration\" rel=\"nofollow\">Integration of Knowledge into neural NLU systems</a></li>\n</ul>\n<h2>Quickstart</h2>\n<h3>Coding Tutorials - Notebooks &amp; CLI</h3>\n<p>We provide ipython notebooks with tutorials on Jack. For the quickest start, you can begin <a href=\"notebooks/quick_start.ipynb\" rel=\"nofollow\">here</a>. If you're interested in training a model yourself from code, see <a href=\"notebooks/model_training.ipynb\" rel=\"nofollow\">this tutorial</a> (we recommend the command-line, see below), and if you'd like to implement a new model yourself, <a href=\"notebooks/model_implementation.ipynb\" rel=\"nofollow\">this notebook</a> gives you a tutorial that explains this process in more detail.</p>\n<p>There is documentation on our <a href=\"docs/CLI.md\" rel=\"nofollow\">command-line interface</a> for actually <strong>training and evaluating models</strong>.\nFor a high-level explanation of the ideas and vision, see <a href=\"docs/Understanding_Jack_the_Reader.md\" rel=\"nofollow\">Understanding Jack the Reader</a>.</p>\n<h3>Command-line Training and Usage of a QA System</h3>\n<p>To illustrate how jack works, we will show how to train a question answering\nmodel using our <a href=\"docs/CLI.md\" rel=\"nofollow\">command-line interface</a> which is analoguous for other tasks (browse <a href=\"./conf/\" rel=\"nofollow\">conf/</a> for existing task-dataset configurations).\nIt is probably best to setup a <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">virtual environment</a> to avoid\nclashes with system wide python library versions.</p>\n<p>First, install the framework:</p>\n<pre>$ python3 -m pip install -e .<span class=\"o\">[</span>tf<span class=\"o\">]</span>\n</pre>\n<p>Then, download the SQuAD dataset, and the GloVe word embeddings:</p>\n<pre>$ ./data/SQuAD/download.sh\n$ ./data/GloVe/download.sh\n</pre>\n<p>Train a <a href=\"https://arxiv.org/abs/1703.04816\" rel=\"nofollow\">FastQA</a> model:</p>\n<pre>$ python3 bin/jack-train.py with <span class=\"nv\">train</span><span class=\"o\">=</span><span class=\"s1\">'data/SQuAD/train-v1.1.json'</span> <span class=\"nv\">dev</span><span class=\"o\">=</span><span class=\"s1\">'data/SQuAD/dev-v1.1.json'</span> <span class=\"nv\">reader</span><span class=\"o\">=</span><span class=\"s1\">'fastqa_reader'</span> <span class=\"se\">\\</span>\n&gt; <span class=\"nv\">repr_dim</span><span class=\"o\">=</span><span class=\"m\">300</span> <span class=\"nv\">dropout</span><span class=\"o\">=</span><span class=\"m\">0</span>.5 <span class=\"nv\">batch_size</span><span class=\"o\">=</span><span class=\"m\">64</span> <span class=\"nv\">seed</span><span class=\"o\">=</span><span class=\"m\">1337</span> <span class=\"nv\">loader</span><span class=\"o\">=</span><span class=\"s1\">'squad'</span> <span class=\"nv\">save_dir</span><span class=\"o\">=</span><span class=\"s1\">'./fastqa_reader'</span> <span class=\"nv\">epochs</span><span class=\"o\">=</span><span class=\"m\">20</span> <span class=\"se\">\\</span>\n&gt; <span class=\"nv\">with_char_embeddings</span><span class=\"o\">=</span>True <span class=\"nv\">embedding_format</span><span class=\"o\">=</span><span class=\"s1\">'memory_map_dir'</span> <span class=\"nv\">embedding_file</span><span class=\"o\">=</span><span class=\"s1\">'data/GloVe/glove.840B.300d.memory_map_dir'</span> <span class=\"nv\">vocab_from_embeddings</span><span class=\"o\">=</span>True\n</pre>\n<p>or shorter, using our prepared config:</p>\n<pre>$ python3 bin/jack-train.py with <span class=\"nv\">config</span><span class=\"o\">=</span><span class=\"s1\">'./conf/qa/squad/fastqa.yaml'</span>\n</pre>\n<p>A copy of the model is written into the <code>save_dir</code> directory after each\ntraining epoch when performance improves. These can be loaded using the commands below or see e.g.\n<a href=\"notebooks/quick_start.ipynb\" rel=\"nofollow\">quickstart</a>.</p>\n<p>You want to train another model? No problem, we have a fairly modular QAModel implementation which allows you to stick\ntogether your own model. There are examples in <code>conf/qa/squad/</code> (e.g., <code>bidaf.yaml</code> or our own creation <code>jack_qa.yaml</code>).\nThese models are defined solely in the configs, i.e., there is not implementation in code.\nThis is possible through our <code>ModularQAModel</code>.</p>\n<p>If all of that is too cumbersome for you and you just want to play, why not downloading a pretrained model:</p>\n<pre>$ <span class=\"c1\"># we still need GloVe in memory mapped format, ignore the next 2 commands if already downloaded and transformed</span>\n$ data/GloVe/download.sh\n$ wget -O fastqa.zip https://www.dropbox.com/s/qb796uljoqj0lvo/fastqa.zip?dl<span class=\"o\">=</span><span class=\"m\">1</span>\n$ unzip fastqa.zip <span class=\"o\">&amp;&amp;</span> mv fastqa fastqa_reader\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jack</span> <span class=\"kn\">import</span> <span class=\"n\">readers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jack.core</span> <span class=\"kn\">import</span> <span class=\"n\">QASetting</span>\n\n<span class=\"n\">fastqa_reader</span> <span class=\"o\">=</span> <span class=\"n\">readers</span><span class=\"o\">.</span><span class=\"n\">reader_from_file</span><span class=\"p\">(</span><span class=\"s2\">\"./fastqa_reader\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">support</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\"It is a replica of the grotto at Lourdes,</span>\n<span class=\"s2\">France where the Virgin Mary reputedly appeared to Saint Bernadette Soubirous in 1858.</span>\n<span class=\"s2\">At the end of the main drive (and in a direct line that connects through 3 statues and the Gold Dome),</span>\n<span class=\"s2\">is a simple, modern stone statue of Mary.\"\"\"</span>\n\n<span class=\"n\">answers</span> <span class=\"o\">=</span> <span class=\"n\">fastqa_reader</span><span class=\"p\">([</span><span class=\"n\">QASetting</span><span class=\"p\">(</span>\n    <span class=\"n\">question</span><span class=\"o\">=</span><span class=\"s2\">\"To whom did the Virgin Mary allegedly appear in 1858 in Lourdes France?\"</span><span class=\"p\">,</span>\n    <span class=\"n\">support</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">support</span><span class=\"p\">]</span>\n<span class=\"p\">)])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">answers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n<h2>Support</h2>\n<p>We are thankful for support from:</p>\n<p><a href=\"http://mr.cs.ucl.ac.uk/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70258d4c6e5f54f95885843c77cc7d190b4c20f5/687474703a2f2f6d722e63732e75636c2e61632e756b2f696d616765732f75636c6d725f6c6f676f5f726f756e642e706e67\" width=\"100px\"></a>\n<a href=\"http://www.softwarecampus.de/start/df\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73fa0d253fc0aff584364ed9c3970e70c8bbc4f6/68747470733a2f2f6964772d6f6e6c696e652e64652f64652f6e657773696d6167653f69643d3138363930312673697a653d73637265656e\" width=\"100px\"></a>\n<a href=\"http://ec.europa.eu/research/mariecurieactions/funded-projects/career-integration-grants_en\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ad81a482b7be6f48b80bf918d711a1a764bd187/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f382f38342f4575726f7065616e5f436f6d6d697373696f6e2e7376672f3230303070782d4575726f7065616e5f436f6d6d697373696f6e2e7376672e706e67\" width=\"100px\"></a></p>\n<p><a href=\"http://bloomsbury.ai/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c705dd3bbf1e9dda9cbb47cb6ea94e5df3ea78c1/68747470733a2f2f7777772e64726f70626f782e636f6d2f732f376864623432617a733033686276652f6c6f676f5f746578745f7371756172652e706e673f7261773d31\" width=\"100px\"></a>\n<a href=\"https://www.dfki.de/web\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da7656ad2a3f6fced02832b2fda1ccc7c036b920/68747470733a2f2f7777772e64666b692e64652f7765622f7072657373652f62696c646d6174657269616c2f64666b692d6c6f676f2d652d736368726966742e6a7067\" width=\"100px\"></a>\n<a href=\"http://www.pgafamilyfoundation.org\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64f5823d9d9f0aa6bd32631db784e7c58adaf563/68747470733a2f2f706f72746c616e646d65726361646f2e66696c65732e776f726470726573732e636f6d2f323031332f30322f70676166665f706d732e6a7067\" width=\"100px\"></a>\n<a href=\"http://summa-project.eu/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4bfdba2225abeb8bf4c8f5c92dada5f353a5ec9/687474703a2f2f73756d6d612d70726f6a6563742e65752f77702d636f6e74656e742f75706c6f6164732f323031372f30342f73756d6d616c6f676f66696e616c2e706e67\" width=\"100px\"></a></p>\n<h2>Developer guidelines</h2>\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">Comply with the PEP 8 Style Guide</a></li>\n<li>Make sure all your code runs from the top level directory, e.g.:</li>\n</ul>\n<pre>$ <span class=\"nb\">pwd</span>\n/home/pasquale/workspace/jack\n$ python3 bin/jack-train.py <span class=\"o\">[</span>..<span class=\"o\">]</span>\n</pre>\n<h2>Citing</h2>\n<pre><code>@InProceedings{weissenborn2018jack,\nauthor    = {Dirk Weissenborn, Pasquale Minervini, Tim Dettmers, Isabelle Augenstein, Johannes Welbl, Tim Rockta\u0308schel, Matko Bos\u030cnjak, Jeff Mitchell, Thomas Demeester, Pontus Stenetorp, Sebastian Riedel},\ntitle     = {{Jack the Reader \u2013 A Machine Reading Framework}},\nbooktitle = {{Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (ACL) System Demonstrations}},\nMonth     = {July},\nyear      = {2018},\nurl       = {https://arxiv.org/abs/1806.08727}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 4097747, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "4a731d970d253fe6480e7a1b4650a7a4", "sha256": "d9e640dfca8453bd570ac49e28bf1a3c7de1a0d3cdecbea596fdfb025f50da09"}, "downloads": -1, "filename": "uclmr_jack-0.2.0-py3.6.egg", "has_sig": false, "md5_digest": "4a731d970d253fe6480e7a1b4650a7a4", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 125393, "upload_time": "2018-07-24T13:31:41", "upload_time_iso_8601": "2018-07-24T13:31:41.776521Z", "url": "https://files.pythonhosted.org/packages/a2/35/159ff9511e34d22996dba3e7530f2ace6826013c63f58a3394eb521e4783/uclmr_jack-0.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f26554aceb194fd3f42a9ce82d18672", "sha256": "43ced8c327d4fc2685d10b92c8e06508bdae1b5864b9da33cfcd22609a9f934d"}, "downloads": -1, "filename": "uclmr_jack-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7f26554aceb194fd3f42a9ce82d18672", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 129119, "upload_time": "2018-07-24T13:31:38", "upload_time_iso_8601": "2018-07-24T13:31:38.862857Z", "url": "https://files.pythonhosted.org/packages/bb/c1/403ac902b815737ce1c5b69e151abad70d2cad67e94c6d88375f9a8523e5/uclmr_jack-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "679898e85d0d005faa8acba93c84cbe2", "sha256": "3d853921838a7e71b5a7d3dd6218713570733a80a919c0b3fbd9146eef47bceb"}, "downloads": -1, "filename": "uclmr-jack-0.2.0.tar.gz", "has_sig": false, "md5_digest": "679898e85d0d005faa8acba93c84cbe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92875, "upload_time": "2018-07-24T13:31:40", "upload_time_iso_8601": "2018-07-24T13:31:40.330106Z", "url": "https://files.pythonhosted.org/packages/ce/2d/1bdc96292e5ae22f8666a468b2b656f64d58924d62b2bdda82ce4320eb31/uclmr-jack-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a3889ddb760f67677104ced28e1507c8", "sha256": "d974ec89345a44a6ed3f1e3e5ee1e8d95e008a401c4f1ee20eade6a4f5d18aef"}, "downloads": -1, "filename": "uclmr_jack-0.2.1-py3.6.egg", "has_sig": false, "md5_digest": "a3889ddb760f67677104ced28e1507c8", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 129157, "upload_time": "2018-07-24T17:16:50", "upload_time_iso_8601": "2018-07-24T17:16:50.279611Z", "url": "https://files.pythonhosted.org/packages/70/e3/8b86a42bf0928ca59534c2ce1be44c1b1c2e958585f194a7cc6f6a0e5817/uclmr_jack-0.2.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "36d2d41ff7ec6a5646bb6f96c6b36c9d", "sha256": "ae268c5e15c05652639a641fd3e43bdcb0e0af59088345e5a55120168e25a08a"}, "downloads": -1, "filename": "uclmr_jack-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "36d2d41ff7ec6a5646bb6f96c6b36c9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 135262, "upload_time": "2018-07-24T17:16:48", "upload_time_iso_8601": "2018-07-24T17:16:48.417487Z", "url": "https://files.pythonhosted.org/packages/5c/a0/3943928dd77b2d622f8d033a99394aecc686485606f771ce7310e1e92978/uclmr_jack-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9210a888a4fe683ead044e8856e38fa5", "sha256": "4cd2b4efcec044d75f5dc196679604df8dc05c19f2a475115c9cded826365282"}, "downloads": -1, "filename": "uclmr-jack-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9210a888a4fe683ead044e8856e38fa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93168, "upload_time": "2018-07-24T17:16:51", "upload_time_iso_8601": "2018-07-24T17:16:51.815320Z", "url": "https://files.pythonhosted.org/packages/38/cd/c798267e9e7f9f73d95ac3c7fe2210fc9ccd5807f15c90040891c7e6cbdb/uclmr-jack-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3889ddb760f67677104ced28e1507c8", "sha256": "d974ec89345a44a6ed3f1e3e5ee1e8d95e008a401c4f1ee20eade6a4f5d18aef"}, "downloads": -1, "filename": "uclmr_jack-0.2.1-py3.6.egg", "has_sig": false, "md5_digest": "a3889ddb760f67677104ced28e1507c8", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 129157, "upload_time": "2018-07-24T17:16:50", "upload_time_iso_8601": "2018-07-24T17:16:50.279611Z", "url": "https://files.pythonhosted.org/packages/70/e3/8b86a42bf0928ca59534c2ce1be44c1b1c2e958585f194a7cc6f6a0e5817/uclmr_jack-0.2.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "36d2d41ff7ec6a5646bb6f96c6b36c9d", "sha256": "ae268c5e15c05652639a641fd3e43bdcb0e0af59088345e5a55120168e25a08a"}, "downloads": -1, "filename": "uclmr_jack-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "36d2d41ff7ec6a5646bb6f96c6b36c9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 135262, "upload_time": "2018-07-24T17:16:48", "upload_time_iso_8601": "2018-07-24T17:16:48.417487Z", "url": "https://files.pythonhosted.org/packages/5c/a0/3943928dd77b2d622f8d033a99394aecc686485606f771ce7310e1e92978/uclmr_jack-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9210a888a4fe683ead044e8856e38fa5", "sha256": "4cd2b4efcec044d75f5dc196679604df8dc05c19f2a475115c9cded826365282"}, "downloads": -1, "filename": "uclmr-jack-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9210a888a4fe683ead044e8856e38fa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93168, "upload_time": "2018-07-24T17:16:51", "upload_time_iso_8601": "2018-07-24T17:16:51.815320Z", "url": "https://files.pythonhosted.org/packages/38/cd/c798267e9e7f9f73d95ac3c7fe2210fc9ccd5807f15c90040891c7e6cbdb/uclmr-jack-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:09 2020"}