{"info": {"author": "Philipp Metsch", "author_email": "philipp.metsch@tu-dresden.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "gmshModel\n=========\n`Gmsh <https://gmsh.info/>`_ is a powerful tool for the generation of meshes for\nnumerical simulations but the built-in scripting language makes the meshing\nprocedure and especially an automatization really hard. Luckily, Gmsh provides\na Python-API with which all the capabilites of Gmsh can be used within Python.\n\nGmshModel is intended to be an extendable tool that facilitates the mesh generation\nby interfacing the Gmsh-Python-API: it provides a basic framework for an automated\nmesh generation for self-defined model types and, with that, allows to automate the\ngeneration of complex models as, e.g., representative volume elements. To this\nend, gmshModel divides the mesh modeling procedure into basic steps:\n\n1. Setting up a geometry using basic geometric entities and boolean operations.\n2. Adding the geometric objects to Gmsh, performing boolean operations and defining physical groups.\n3. Creating a mesh with user-defined refinement fields.\n4. Saving the mesh to various output formats.\n5. Visualizing the resulting mesh.\n\nSo far, gmshModel is especially designed to automate the generation of representative\nvolume elements that contain multiple inclusion objects. An extension of gmshModel\nis however possible by adding new geometric objects and model types to the framework.\n\nIt is not the purpose of gmshModel to replace the Gmsh scripting language or other\ngreat tools such as `pygmsh <https://github.com/nschloe/pygmsh>`_  for the generation\nof meshes. GmshModel rather tries to function as an interface to Gmsh to facilitate\nthe automation of recurring, complex meshing tasks that require the full functionality\nof Gmsh within a nice and easy to use environment such as Python.\n\n\nInstallation\n************\nGmshModel is available from the `Python Package Index <https://pypi.org/>`_ and\ncan be installed using one of the following commands:\n\n.. code-block:: python\n\n   # for a basic installation of gmshModel\n   python3 -m pip install gmshModel\n\n   # for additional export and visualization features\n   python3 -m pip install gmshModel[all]\n\nIt is also possible to download the source code from `GitHub <https://github.com/NEFM-TUDresden/GmshModel/>`_\nor `PyPi <https://pypi.org/project/gmshModel/>`_ and install gmshModel manually. For more details, check\nthe `Installation <https://gmshmodel.readthedocs.io/en/latest/gettingStarted/installation.html/>`_ page\nof the documentation.\n\n\nDependencies\n************\nGmshModel is an interface tool and makes use of many great contributions of other\npeople. To experience the full functionality of Gmsh model, the following (non-standard)\nsoftware packages are required:\n\n1. a `dynamically built Gmsh <https://gitlab.onelab.info/gmsh/gmsh/-/wikis/Gmsh-compilation/>`_  to use the Gmsh-Python-API\n2. `meshio <https://github.com/nschloe/meshio/>`_  for the conversion of meshes to various output formats\n3. `pyvista <https://www.pyvista.org/>`_ for the visualization of meshes\n4. `pythonocc <https://github.com/tpaviot/pythonocc-core/>`_ for the visualization of the model geometry\n\nIf the visualization functionality is not required and meshes exported in the\nGmsh-internal ``.msh`` format are sufficient, a working installation of Gmsh and\nits Python-API is enough.\n\n\nGetting Started\n***************\n\n.. image:: https://github.com/NEFM-TUDresden/gmshModel/raw/master/docs/images/GettingStarted.png\n   :alt: Sample Geometry and Mesh\n\nTo generate the above periodic box in a ``[20x20x20]`` domain which contains ``200`` spherical\ninclusions of radius ``1``, simply type:\n\n.. code-block:: python\n\n   # import required model type\n   from gmshModel.Model import RandomInclusionRVE as RVE\n\n   # initialize new RVE\n   myRVE=RVE(size=[20,20,20], inclusionType=\"Sphere\", inclusionSets=[1, 200])\n\n   # create Gmsh model\n   myRVE.createGmshModel()\n\n   # generate mesh\n   myRVE.createMesh()\n\n   # save resulting mesh to vtk\n   myRVE.saveMesh(\"myRVE.vtk\")\n\n   # visualize result\n   myRVE.visualizeMesh()\n\n   # finalize Gmsh-Python-API\n   myRVE.close()\n\n\nDocumentation\n*************\n\nThe gmshModel documentation is available `here <https://gmshmodel.readthedocs.io/en/latest/>`_.\n\n\nLicense\n*******\nGmshModel is published under the `MIT-License <https://opensource.org/licenses/MIT/>`_\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NEFM-TUDresden/GmshModel", "keywords": "Gmsh mesh preprocessing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gmshModel", "package_url": "https://pypi.org/project/gmshModel/", "platform": "", "project_url": "https://pypi.org/project/gmshModel/", "project_urls": {"Homepage": "https://github.com/NEFM-TUDresden/GmshModel"}, "release_url": "https://pypi.org/project/gmshModel/1.0.2/", "requires_dist": ["numpy", "meshio (>=4) ; extra == 'all'", "pyvista (>=0.24.1) ; extra == 'all'"], "requires_python": ">=3.5, <3.8", "summary": "A mesh modeling interface to the Gmsh-Python-API", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gmsh.info/\" rel=\"nofollow\">Gmsh</a> is a powerful tool for the generation of meshes for\nnumerical simulations but the built-in scripting language makes the meshing\nprocedure and especially an automatization really hard. Luckily, Gmsh provides\na Python-API with which all the capabilites of Gmsh can be used within Python.</p>\n<p>GmshModel is intended to be an extendable tool that facilitates the mesh generation\nby interfacing the Gmsh-Python-API: it provides a basic framework for an automated\nmesh generation for self-defined model types and, with that, allows to automate the\ngeneration of complex models as, e.g., representative volume elements. To this\nend, gmshModel divides the mesh modeling procedure into basic steps:</p>\n<ol>\n<li>Setting up a geometry using basic geometric entities and boolean operations.</li>\n<li>Adding the geometric objects to Gmsh, performing boolean operations and defining physical groups.</li>\n<li>Creating a mesh with user-defined refinement fields.</li>\n<li>Saving the mesh to various output formats.</li>\n<li>Visualizing the resulting mesh.</li>\n</ol>\n<p>So far, gmshModel is especially designed to automate the generation of representative\nvolume elements that contain multiple inclusion objects. An extension of gmshModel\nis however possible by adding new geometric objects and model types to the framework.</p>\n<p>It is not the purpose of gmshModel to replace the Gmsh scripting language or other\ngreat tools such as <a href=\"https://github.com/nschloe/pygmsh\" rel=\"nofollow\">pygmsh</a>  for the generation\nof meshes. GmshModel rather tries to function as an interface to Gmsh to facilitate\nthe automation of recurring, complex meshing tasks that require the full functionality\nof Gmsh within a nice and easy to use environment such as Python.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>GmshModel is available from the <a href=\"https://pypi.org/\" rel=\"nofollow\">Python Package Index</a> and\ncan be installed using one of the following commands:</p>\n<pre><span class=\"c1\"># for a basic installation of gmshModel</span>\n<span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">gmshModel</span>\n\n<span class=\"c1\"># for additional export and visualization features</span>\n<span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">gmshModel</span><span class=\"p\">[</span><span class=\"nb\">all</span><span class=\"p\">]</span>\n</pre>\n<p>It is also possible to download the source code from <a href=\"https://github.com/NEFM-TUDresden/GmshModel/\" rel=\"nofollow\">GitHub</a>\nor <a href=\"https://pypi.org/project/gmshModel/\" rel=\"nofollow\">PyPi</a> and install gmshModel manually. For more details, check\nthe <a href=\"https://gmshmodel.readthedocs.io/en/latest/gettingStarted/installation.html/\" rel=\"nofollow\">Installation</a> page\nof the documentation.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>GmshModel is an interface tool and makes use of many great contributions of other\npeople. To experience the full functionality of Gmsh model, the following (non-standard)\nsoftware packages are required:</p>\n<ol>\n<li>a <a href=\"https://gitlab.onelab.info/gmsh/gmsh/-/wikis/Gmsh-compilation/\" rel=\"nofollow\">dynamically built Gmsh</a>  to use the Gmsh-Python-API</li>\n<li><a href=\"https://github.com/nschloe/meshio/\" rel=\"nofollow\">meshio</a>  for the conversion of meshes to various output formats</li>\n<li><a href=\"https://www.pyvista.org/\" rel=\"nofollow\">pyvista</a> for the visualization of meshes</li>\n<li><a href=\"https://github.com/tpaviot/pythonocc-core/\" rel=\"nofollow\">pythonocc</a> for the visualization of the model geometry</li>\n</ol>\n<p>If the visualization functionality is not required and meshes exported in the\nGmsh-internal <tt>.msh</tt> format are sufficient, a working installation of Gmsh and\nits Python-API is enough.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<img alt=\"Sample Geometry and Mesh\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de2c7902c1ba750be2e36497c279de5c4b3781d0/68747470733a2f2f6769746875622e636f6d2f4e45464d2d54554472657364656e2f676d73684d6f64656c2f7261772f6d61737465722f646f63732f696d616765732f47657474696e67537461727465642e706e67\">\n<p>To generate the above periodic box in a <tt>[20x20x20]</tt> domain which contains <tt>200</tt> spherical\ninclusions of radius <tt>1</tt>, simply type:</p>\n<pre><span class=\"c1\"># import required model type</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gmshModel.Model</span> <span class=\"kn\">import</span> <span class=\"n\">RandomInclusionRVE</span> <span class=\"k\">as</span> <span class=\"n\">RVE</span>\n\n<span class=\"c1\"># initialize new RVE</span>\n<span class=\"n\">myRVE</span><span class=\"o\">=</span><span class=\"n\">RVE</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">],</span> <span class=\"n\">inclusionType</span><span class=\"o\">=</span><span class=\"s2\">\"Sphere\"</span><span class=\"p\">,</span> <span class=\"n\">inclusionSets</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># create Gmsh model</span>\n<span class=\"n\">myRVE</span><span class=\"o\">.</span><span class=\"n\">createGmshModel</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># generate mesh</span>\n<span class=\"n\">myRVE</span><span class=\"o\">.</span><span class=\"n\">createMesh</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># save resulting mesh to vtk</span>\n<span class=\"n\">myRVE</span><span class=\"o\">.</span><span class=\"n\">saveMesh</span><span class=\"p\">(</span><span class=\"s2\">\"myRVE.vtk\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># visualize result</span>\n<span class=\"n\">myRVE</span><span class=\"o\">.</span><span class=\"n\">visualizeMesh</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># finalize Gmsh-Python-API</span>\n<span class=\"n\">myRVE</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The gmshModel documentation is available <a href=\"https://gmshmodel.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>GmshModel is published under the <a href=\"https://opensource.org/licenses/MIT/\" rel=\"nofollow\">MIT-License</a></p>\n</div>\n\n          </div>"}, "last_serial": 7096836, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ea60d5ff8e6f9e0c5a3fcc817e852df3", "sha256": "18a0da3679f91127ae85117ab1c9b049b55c0143135f640280930c5ea697f4e9"}, "downloads": -1, "filename": "gmshModel-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ea60d5ff8e6f9e0c5a3fcc817e852df3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.8", "size": 44721, "upload_time": "2020-04-23T17:41:45", "upload_time_iso_8601": "2020-04-23T17:41:45.072211Z", "url": "https://files.pythonhosted.org/packages/38/a4/0c3b841709a5d3e2e36bacfa0efd38010c80c68c2f8a7baa72ea1d73677d/gmshModel-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e31030df859b2bd87b5d4a32d460ed5", "sha256": "5015b886d51a0c40ccb3f886d057784e2a106397b7ebdf126086d9e42ec49c7e"}, "downloads": -1, "filename": "gmshModel-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9e31030df859b2bd87b5d4a32d460ed5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 39316, "upload_time": "2020-04-23T17:41:47", "upload_time_iso_8601": "2020-04-23T17:41:47.355298Z", "url": "https://files.pythonhosted.org/packages/97/f1/337cf1a496bc2c41f0ed2ee7a7dd1760694c8c45ab3c5fc72ba7d22105a1/gmshModel-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "759b4f566ed2c2cd7e91a7b030383a3b", "sha256": "01116f09475b6341b159145e133a6d905928ae47bcb9c1f5873bee8569863b9b"}, "downloads": -1, "filename": "gmshModel-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "759b4f566ed2c2cd7e91a7b030383a3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.8", "size": 44762, "upload_time": "2020-04-23T18:14:48", "upload_time_iso_8601": "2020-04-23T18:14:48.263888Z", "url": "https://files.pythonhosted.org/packages/ae/96/fa52563a8fe01542eb1605ee1f188a1f3562f0603e7dbaf0c0431ebf6a6a/gmshModel-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3da7ddd87528b97e4d23a12fdfb96aa5", "sha256": "b66229daea371347803337a52c968b5a4a2d41ea18b257a9a63e5d0c9714bf46"}, "downloads": -1, "filename": "gmshModel-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3da7ddd87528b97e4d23a12fdfb96aa5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 39404, "upload_time": "2020-04-23T18:14:50", "upload_time_iso_8601": "2020-04-23T18:14:50.852529Z", "url": "https://files.pythonhosted.org/packages/88/22/4f324b80300f9e500692663f10c22482c983d8de3876b2a0fe05a2258627/gmshModel-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "e3c6e75669ca9c30f4a597bf647fcfaf", "sha256": "a7e99d88f0b1dff43f13c1c2454b05c967696944d9060737c118750f445ac441"}, "downloads": -1, "filename": "gmshModel-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e3c6e75669ca9c30f4a597bf647fcfaf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.8", "size": 44965, "upload_time": "2020-04-24T22:45:12", "upload_time_iso_8601": "2020-04-24T22:45:12.854213Z", "url": "https://files.pythonhosted.org/packages/a7/47/b0000487a3396e268f3d5246ef73b4f666af0814ec57afe14345c69059ac/gmshModel-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8c19b77c481eb4816c919b6be145b0d", "sha256": "5489911e82413352fb0bb54121874b2970a01339e87048d65092aad69fe37145"}, "downloads": -1, "filename": "gmshModel-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b8c19b77c481eb4816c919b6be145b0d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 40333, "upload_time": "2020-04-24T22:45:14", "upload_time_iso_8601": "2020-04-24T22:45:14.533270Z", "url": "https://files.pythonhosted.org/packages/12/c4/d94c4679692a93f3019d157342f718c1f9191266c37a2c7fda1cb0ac17a0/gmshModel-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3c6e75669ca9c30f4a597bf647fcfaf", "sha256": "a7e99d88f0b1dff43f13c1c2454b05c967696944d9060737c118750f445ac441"}, "downloads": -1, "filename": "gmshModel-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e3c6e75669ca9c30f4a597bf647fcfaf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.8", "size": 44965, "upload_time": "2020-04-24T22:45:12", "upload_time_iso_8601": "2020-04-24T22:45:12.854213Z", "url": "https://files.pythonhosted.org/packages/a7/47/b0000487a3396e268f3d5246ef73b4f666af0814ec57afe14345c69059ac/gmshModel-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8c19b77c481eb4816c919b6be145b0d", "sha256": "5489911e82413352fb0bb54121874b2970a01339e87048d65092aad69fe37145"}, "downloads": -1, "filename": "gmshModel-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b8c19b77c481eb4816c919b6be145b0d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 40333, "upload_time": "2020-04-24T22:45:14", "upload_time_iso_8601": "2020-04-24T22:45:14.533270Z", "url": "https://files.pythonhosted.org/packages/12/c4/d94c4679692a93f3019d157342f718c1f9191266c37a2c7fda1cb0ac17a0/gmshModel-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:16 2020"}