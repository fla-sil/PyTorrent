{"info": {"author": "Caleb Hattingh", "author_email": "caleb.hattingh@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. image:: https://travis-ci.org/cjrh/cjrh_math.svg?branch=master\n    :target: https://travis-ci.org/cjrh/cjrh_math\n\n.. image:: https://coveralls.io/repos/github/cjrh/cjrh_math/badge.svg?branch=master\n    :target: https://coveralls.io/github/cjrh/cjrh_math?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/cjrh_math.svg\n    :target: https://pypi.python.org/pypi/cjrh_math\n\n.. image:: https://img.shields.io/github/tag/cjrh/cjrh_math.svg\n    :target: https://img.shields.io/github/tag/cjrh/cjrh_math.svg\n\n.. image:: https://img.shields.io/badge/install-pip%20install%20cjrh_math-ff69b4.svg\n    :target: https://img.shields.io/badge/install-pip%20install%20cjrh_math-ff69b4.svg\n\n.. image:: https://img.shields.io/pypi/v/cjrh_math.svg\n    :target: https://img.shields.io/pypi/v/cjrh_math.svg\n\n.. image:: https://img.shields.io/badge/calver-YYYY.MM.MINOR-22bfda.svg\n    :target: http://calver.org/\n\n\ncjrh_math\n======================\n\nA collection of handy maths functions.\n\nStreaming mean and variance\n---------------------------\n\nSometimes it can be very useful to update an *existing* mean and variance\nwith new data, rather than have to calculate it again over the whole set.\nThe functions below implement one of the algorithms described\nin `Wikipedia <https://en.wikipedia.org/wiki/Standard_deviation#Rapid_calculation_methods>`_.\n\n.. code-block:: python\n\n    def update_mean(n: int, mean: float, value: float) -> float\n\nGiven a new ``value``, calculate a new mean using the existing ``mean`` and\nthe size of data, ``n``, seen so far.\n\n.. code-block:: python\n\n    def update_pvariance(n: int, mean: float, var: float, value: float) -> float\n    def update_variance(n: int, mean: float, var: float, value: float) -> float\n\nGiven a new ``value``, calculate a new variance using the existing ``mean``,\nexisting variance ``var``, and the size of data, ``n``, seen so far.\n\nNote that ``update_variance()`` is for *sample* variance while\n``update_pvariance()`` is for *population* variance.\n\nAll functions are pure and therefore thread-safe.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cjrh/cjrh_math", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cjrh_math", "package_url": "https://pypi.org/project/cjrh_math/", "platform": "", "project_url": "https://pypi.org/project/cjrh_math/", "project_urls": {"Homepage": "https://github.com/cjrh/cjrh_math"}, "release_url": "https://pypi.org/project/cjrh_math/2017.11.1/", "requires_dist": null, "requires_python": "", "summary": "Maths functions", "version": "2017.11.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/cjrh/cjrh_math\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cjrh/cjrh_math.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51904736def2b5d054af32ac8134ed745d82f408/68747470733a2f2f7472617669732d63692e6f72672f636a72682f636a72685f6d6174682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/cjrh/cjrh_math?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/cjrh/cjrh_math/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9adb1b19ca1b93e381f10d6c0418af794d7a5b9b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f636a72682f636a72685f6d6174682f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/cjrh_math\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/cjrh_math.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65e40b093e708abd9bd25b992bb14fcded5141cc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636a72685f6d6174682e737667\"></a>\n<a href=\"https://img.shields.io/github/tag/cjrh/cjrh_math.svg\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/tag/cjrh/cjrh_math.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ae8cc68ecd84abaab44812367d137848393da4a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f636a72682f636a72685f6d6174682e737667\"></a>\n<a href=\"https://img.shields.io/badge/install-pip%20install%20cjrh_math-ff69b4.svg\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/install-pip%20install%20cjrh_math-ff69b4.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/466ad8bc20d7db303b2911c67d96e0185f32fa6d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f696e7374616c6c2d706970253230696e7374616c6c253230636a72685f6d6174682d6666363962342e737667\"></a>\n<a href=\"https://img.shields.io/pypi/v/cjrh_math.svg\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/cjrh_math.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2a8015c9f4e58d7b295068a954fa0396fa26063/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636a72685f6d6174682e737667\"></a>\n<a href=\"http://calver.org/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/calver-YYYY.MM.MINOR-22bfda.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/957cdcd66ebe5225fea6bbf83a04bc66a232ab1c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f63616c7665722d595959592e4d4d2e4d494e4f522d3232626664612e737667\"></a>\n<div id=\"cjrh-math\">\n<h2>cjrh_math</h2>\n<p>A collection of handy maths functions.</p>\n<div id=\"streaming-mean-and-variance\">\n<h3>Streaming mean and variance</h3>\n<p>Sometimes it can be very useful to update an <em>existing</em> mean and variance\nwith new data, rather than have to calculate it again over the whole set.\nThe functions below implement one of the algorithms described\nin <a href=\"https://en.wikipedia.org/wiki/Standard_deviation#Rapid_calculation_methods\" rel=\"nofollow\">Wikipedia</a>.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">update_mean</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span>\n</pre>\n<p>Given a new <tt>value</tt>, calculate a new mean using the existing <tt>mean</tt> and\nthe size of data, <tt>n</tt>, seen so far.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">update_pvariance</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_variance</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span>\n</pre>\n<p>Given a new <tt>value</tt>, calculate a new variance using the existing <tt>mean</tt>,\nexisting variance <tt>var</tt>, and the size of data, <tt>n</tt>, seen so far.</p>\n<p>Note that <tt>update_variance()</tt> is for <em>sample</em> variance while\n<tt>update_pvariance()</tt> is for <em>population</em> variance.</p>\n<p>All functions are pure and therefore thread-safe.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3322407, "releases": {"2017.11.1": [{"comment_text": "", "digests": {"md5": "4ed4cf27fc09a1b44c2574be90ec96b6", "sha256": "690e585cf87c578c538ca0964b36010f336940cd324a2f46fe0841274744952d"}, "downloads": -1, "filename": "cjrh_math-2017.11.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4ed4cf27fc09a1b44c2574be90ec96b6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13906, "upload_time": "2017-11-10T15:13:05", "upload_time_iso_8601": "2017-11-10T15:13:05.365071Z", "url": "https://files.pythonhosted.org/packages/95/0d/be5b26ae3a546838604bcb112ecd7f7e5013d9d3dfb3f5cdad970a4301c3/cjrh_math-2017.11.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d6c9161a21da119cd933254a740d13f", "sha256": "60a3b9d1f4a42e937aa97d2d2a14f21db13822794aaf261a4ccb321574b4d3f1"}, "downloads": -1, "filename": "cjrh_math-2017.11.1.tar.gz", "has_sig": false, "md5_digest": "5d6c9161a21da119cd933254a740d13f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6319, "upload_time": "2017-11-10T15:13:08", "upload_time_iso_8601": "2017-11-10T15:13:08.760332Z", "url": "https://files.pythonhosted.org/packages/55/e8/6d12983dd31a8b79982d1bf1ea5e660f524271dd33e3671962a8cd306764/cjrh_math-2017.11.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ed4cf27fc09a1b44c2574be90ec96b6", "sha256": "690e585cf87c578c538ca0964b36010f336940cd324a2f46fe0841274744952d"}, "downloads": -1, "filename": "cjrh_math-2017.11.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4ed4cf27fc09a1b44c2574be90ec96b6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13906, "upload_time": "2017-11-10T15:13:05", "upload_time_iso_8601": "2017-11-10T15:13:05.365071Z", "url": "https://files.pythonhosted.org/packages/95/0d/be5b26ae3a546838604bcb112ecd7f7e5013d9d3dfb3f5cdad970a4301c3/cjrh_math-2017.11.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d6c9161a21da119cd933254a740d13f", "sha256": "60a3b9d1f4a42e937aa97d2d2a14f21db13822794aaf261a4ccb321574b4d3f1"}, "downloads": -1, "filename": "cjrh_math-2017.11.1.tar.gz", "has_sig": false, "md5_digest": "5d6c9161a21da119cd933254a740d13f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6319, "upload_time": "2017-11-10T15:13:08", "upload_time_iso_8601": "2017-11-10T15:13:08.760332Z", "url": "https://files.pythonhosted.org/packages/55/e8/6d12983dd31a8b79982d1bf1ea5e660f524271dd33e3671962a8cd306764/cjrh_math-2017.11.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:15 2020"}