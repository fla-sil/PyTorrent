{"info": {"author": "Konstantin Nazarov", "author_email": "knazarov@parallels.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries", "Topic :: System :: Filesystems"], "description": "Python interface library for Jfrog Artifactory\n==============================================\n\n|Build Status|\n\nThis module is intended to serve as a logical descendant of\n`pathlib <https://docs.python.org/3/library/pathlib.html>`__, a Python 3\nmodule for object-oriented path manipulations. As such, it implements\neverything as closely as possible to the origin with few exceptions,\nsuch as stat().\n\nUsage Examples\n==============\n\nWalking Directory Tree\n----------------------\n\nGetting directory listing:\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://repo.jfrog.org/artifactory/gradle-ivy-local\")\n    for p in path:\n        print p\n\nFind all .gz files in current dir, recursively:\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://repo.jfrog.org/artifactory/distributions/org/\")\n\n    for p in path.glob(\"**/*.gz\"):\n        print p\n\nDownloading Artifacts\n---------------------\n\nDownload artifact to a local filesystem:\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\")\n        \n    with path.open() as fd:\n        with open(\"tomcat.tar.gz\", \"wb\") as out:\n            out.write(fd.read())\n\nUploading Artifacts\n-------------------\n\nDeploy a regular file ``myapp-1.0.tar.gz``\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\")\n    path.mkdir()\n\n    path.deploy_file('./myapp-1.0.tar.gz')\n\nDeploy a debian package ``myapp-1.0.deb``\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/ubuntu-local/pool\")\n    path.deploy_deb('./myapp-1.0.deb', \n                    distribution='trusty',\n                    component='main',\n                    architecture='amd64')\n\nAuthentication\n--------------\n\nTo provide username and password to access restricted resources, you can\npass ``auth`` parameter to ArtifactoryPath:\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/myrepo/restricted-path\",\n        auth=('admin', 'ilikerandompasswords'))\n    path.touch()\n\nSSL Cert Verification Options\n-----------------------------\n\nSee `Requests - SSL\nverification <http://docs.python-requests.org/en/latest/user/advanced/#ssl-cert-verification>`__\nfor more details.\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\")\n\n... is the same as\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\", \n        verify=True)\n\nSpecify a local cert to use as client side certificate\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\",\n        cert=\"/path_to_file/server.pem\")\n\nDisable host cert verification\n\n::\n\n    from artifactory import ArtifactoryPath\n    path = ArtifactoryPath(\n        \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\",\n        verify=False)\n\n| **Note:** If host cert verification is disabled urllib3 will throw a\n  `InsecureRequestWarning <https://urllib3.readthedocs.org/en/latest/security.html#insecurerequestwarning>`__.\n| To disable these warning, one needs to call\n  urllib3.disable\\_warnings().\n\n::\n\n    import requests.packages.urllib3 as urllib3\n    urllib3.disable_warnings()\n\nGlobal Configuration File\n-------------------------\n\nArtifactory Python module also has a way to specify all\nconnection-related settings in a central file,\n``~/.artifactory_python.cfg`` that is read upon the creation of first\n``ArtifactoryPath`` object and is stored globally. For instance, you can\nspecify per-instance settings of authentication tokens, so that you\nwon't need to explicitly pass ``auth`` parameter to ``ArtifactoryPath``.\n\nExample:\n\n::\n\n    [http://artifactory-instance.com/artifactory]\n    username = deployer\n    password = ilikerandompasswords\n    verify = false\n\n    [another-artifactory-instance.com/artifactory]\n    username = foo\n    password = @dmin\n    cert = ~/mycert\n\nWhether or not you specify ``http://`` or ``https://`` prefix is not\nessential. The module will first try to locate the best match and then\ntry to match URLs without prefixes. So if in the config you specify\n``https://my-instance.local`` and call ``ArtifactoryPath`` with\n``http://my-instance.local``, it will still do the right thing.\n\n.. |Build Status| image:: https://travis-ci.org/Parallels/artifactory.svg?branch=develop\n   :target: https://travis-ci.org/Parallels/artifactory", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/parallels/artifactory", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/parallels/artifactory", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "artifactory", "package_url": "https://pypi.org/project/artifactory/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/artifactory/", "project_urls": {"Download": "http://github.com/parallels/artifactory", "Homepage": "http://github.com/parallels/artifactory"}, "release_url": "https://pypi.org/project/artifactory/0.1.17/", "requires_dist": null, "requires_python": null, "summary": "A Python to Artifactory interface", "version": "0.1.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-interface-library-for-jfrog-artifactory\">\n<h2>Python interface library for Jfrog Artifactory</h2>\n<p><a href=\"https://travis-ci.org/Parallels/artifactory\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ce3112506ea171471d527415cd272d2c15b1ff4/68747470733a2f2f7472617669732d63692e6f72672f506172616c6c656c732f61727469666163746f72792e7376673f6272616e63683d646576656c6f70\"></a></p>\n<p>This module is intended to serve as a logical descendant of\n<a href=\"https://docs.python.org/3/library/pathlib.html\" rel=\"nofollow\">pathlib</a>, a Python 3\nmodule for object-oriented path manipulations. As such, it implements\neverything as closely as possible to the origin with few exceptions,\nsuch as stat().</p>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage Examples</h2>\n<div id=\"walking-directory-tree\">\n<h3>Walking Directory Tree</h3>\n<p>Getting directory listing:</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://repo.jfrog.org/artifactory/gradle-ivy-local\")\nfor p in path:\n    print p\n</pre>\n<p>Find all .gz files in current dir, recursively:</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://repo.jfrog.org/artifactory/distributions/org/\")\n\nfor p in path.glob(\"**/*.gz\"):\n    print p\n</pre>\n</div>\n<div id=\"downloading-artifacts\">\n<h3>Downloading Artifacts</h3>\n<p>Download artifact to a local filesystem:</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\")\n\nwith path.open() as fd:\n    with open(\"tomcat.tar.gz\", \"wb\") as out:\n        out.write(fd.read())\n</pre>\n</div>\n<div id=\"uploading-artifacts\">\n<h3>Uploading Artifacts</h3>\n<p>Deploy a regular file <tt><span class=\"pre\">myapp-1.0.tar.gz</span></tt></p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\")\npath.mkdir()\n\npath.deploy_file('./myapp-1.0.tar.gz')\n</pre>\n<p>Deploy a debian package <tt><span class=\"pre\">myapp-1.0.deb</span></tt></p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/ubuntu-local/pool\")\npath.deploy_deb('./myapp-1.0.deb',\n                distribution='trusty',\n                component='main',\n                architecture='amd64')\n</pre>\n</div>\n<div id=\"authentication\">\n<h3>Authentication</h3>\n<p>To provide username and password to access restricted resources, you can\npass <tt>auth</tt> parameter to ArtifactoryPath:</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/myrepo/restricted-path\",\n    auth=('admin', 'ilikerandompasswords'))\npath.touch()\n</pre>\n</div>\n<div id=\"ssl-cert-verification-options\">\n<h3>SSL Cert Verification Options</h3>\n<p>See <a href=\"http://docs.python-requests.org/en/latest/user/advanced/#ssl-cert-verification\" rel=\"nofollow\">Requests - SSL\nverification</a>\nfor more details.</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\")\n</pre>\n<p>\u2026 is the same as</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\",\n    verify=True)\n</pre>\n<p>Specify a local cert to use as client side certificate</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\",\n    cert=\"/path_to_file/server.pem\")\n</pre>\n<p>Disable host cert verification</p>\n<pre>from artifactory import ArtifactoryPath\npath = ArtifactoryPath(\n    \"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\",\n    verify=False)\n</pre>\n<div>\n<div><strong>Note:</strong> If host cert verification is disabled urllib3 will throw a\n<a href=\"https://urllib3.readthedocs.org/en/latest/security.html#insecurerequestwarning\" rel=\"nofollow\">InsecureRequestWarning</a>.</div>\n<div>To disable these warning, one needs to call\nurllib3.disable_warnings().</div>\n</div>\n<pre>import requests.packages.urllib3 as urllib3\nurllib3.disable_warnings()\n</pre>\n</div>\n<div id=\"global-configuration-file\">\n<h3>Global Configuration File</h3>\n<p>Artifactory Python module also has a way to specify all\nconnection-related settings in a central file,\n<tt><span class=\"pre\">~/.artifactory_python.cfg</span></tt> that is read upon the creation of first\n<tt>ArtifactoryPath</tt> object and is stored globally. For instance, you can\nspecify per-instance settings of authentication tokens, so that you\nwon\u2019t need to explicitly pass <tt>auth</tt> parameter to <tt>ArtifactoryPath</tt>.</p>\n<p>Example:</p>\n<pre>[http://artifactory-instance.com/artifactory]\nusername = deployer\npassword = ilikerandompasswords\nverify = false\n\n[another-artifactory-instance.com/artifactory]\nusername = foo\npassword = @dmin\ncert = ~/mycert\n</pre>\n<p>Whether or not you specify <tt><span class=\"pre\">http://</span></tt> or <tt><span class=\"pre\">https://</span></tt> prefix is not\nessential. The module will first try to locate the best match and then\ntry to match URLs without prefixes. So if in the config you specify\n<tt><span class=\"pre\">https://my-instance.local</span></tt> and call <tt>ArtifactoryPath</tt> with\n<tt><span class=\"pre\">http://my-instance.local</span></tt>, it will still do the right thing.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4500789, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5cdb26f51ce64b34a3793dac2f42182a", "sha256": "32659bd527583f9fc77c004ffa4825d9d9e8ed279adfe66f7141ea4da00e02ec"}, "downloads": -1, "filename": "artifactory-0.1.tar.gz", "has_sig": false, "md5_digest": "5cdb26f51ce64b34a3793dac2f42182a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6802, "upload_time": "2014-07-24T10:15:02", "upload_time_iso_8601": "2014-07-24T10:15:02.957539Z", "url": "https://files.pythonhosted.org/packages/e8/b1/d2d89f8285fb9554b51782360116fa9b00240886c439051a25c990317d6e/artifactory-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e04b359054c3b770b60ac2097de093c4", "sha256": "878761ce1a14c4614976ade6689314664d98fc8895f35c8e25cea5690946dcdc"}, "downloads": -1, "filename": "artifactory-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e04b359054c3b770b60ac2097de093c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6876, "upload_time": "2014-07-24T11:49:01", "upload_time_iso_8601": "2014-07-24T11:49:01.621851Z", "url": "https://files.pythonhosted.org/packages/5a/ef/406e1b3270efd1a71726ed1995cafb947696f4a6e96a782653b8ed8d8d0c/artifactory-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "df824bf92658888272f295d468cad21f", "sha256": "c5ad11a153a566189ee1579c3e2ea520d92c9ce92f2b3589b4559e6b9b069d5c"}, "downloads": -1, "filename": "artifactory-0.1.10.tar.gz", "has_sig": false, "md5_digest": "df824bf92658888272f295d468cad21f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14253, "upload_time": "2014-11-21T22:39:23", "upload_time_iso_8601": "2014-11-21T22:39:23.298844Z", "url": "https://files.pythonhosted.org/packages/2a/b0/dcf484e6032421f3b2b10492262c87f836f644a652262c125c6aa576cab5/artifactory-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "4e041fdd10a292df211ef6b3fbe45156", "sha256": "b3ba6d0c3b47cfbd7d236e63e9bad33d1bccebdbe6e14b3139ba99f8aae9f1ad"}, "downloads": -1, "filename": "artifactory-0.1.11.tar.gz", "has_sig": false, "md5_digest": "4e041fdd10a292df211ef6b3fbe45156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14198, "upload_time": "2014-11-21T23:16:31", "upload_time_iso_8601": "2014-11-21T23:16:31.570277Z", "url": "https://files.pythonhosted.org/packages/79/84/ea9e059a2f5f041aa8b226b4b9b06b45164eabff7820fcd0c2cc5e243023/artifactory-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "7fabb2ed32e948d7590844474b2aa9d2", "sha256": "86af9070f3fd67bba6db1ab33dfe2bfbe908c8e2d70f0ac59ffda78aee69f0c0"}, "downloads": -1, "filename": "artifactory-0.1.12.tar.gz", "has_sig": false, "md5_digest": "7fabb2ed32e948d7590844474b2aa9d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14233, "upload_time": "2015-04-02T19:11:17", "upload_time_iso_8601": "2015-04-02T19:11:17.642918Z", "url": "https://files.pythonhosted.org/packages/4b/ce/1774c1225167668df0fbaa852dcb22d9b4c4e69b0e3771cb094088789a69/artifactory-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "911ad0a692c063846ca9af2ebe0d7559", "sha256": "0c8db3b69435db1ceb3f2c07fe392669db1ea90bc26f2832384956a21521587c"}, "downloads": -1, "filename": "artifactory-0.1.13.tar.gz", "has_sig": false, "md5_digest": "911ad0a692c063846ca9af2ebe0d7559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14235, "upload_time": "2015-07-08T22:30:15", "upload_time_iso_8601": "2015-07-08T22:30:15.982991Z", "url": "https://files.pythonhosted.org/packages/5a/42/98bb932aaf03a39d8e7bc3201abd9edd53ac4d3c88dcaa4a076702586cf2/artifactory-0.1.13.tar.gz", "yanked": false}], "0.1.14": [], "0.1.15": [{"comment_text": "", "digests": {"md5": "1e5b424a58a4917bce992440fe143ad1", "sha256": "0ec207103b6d0590df52360c78d0fe1081318e9da39ae1eee654395ed9ea4579"}, "downloads": -1, "filename": "artifactory-0.1.15.tar.gz", "has_sig": false, "md5_digest": "1e5b424a58a4917bce992440fe143ad1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13931, "upload_time": "2016-03-12T16:57:52", "upload_time_iso_8601": "2016-03-12T16:57:52.275705Z", "url": "https://files.pythonhosted.org/packages/9a/aa/17a3b553740294c060b6a974f721b185ff3e41c8ee1b91f16dbb692ac6c0/artifactory-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "74f570413294719ee2fc3e570f478c46", "sha256": "69f45c3c91826e33be5a1008efbe3d9e3475ea993ecf553429d9c58f7f2f5286"}, "downloads": -1, "filename": "artifactory-0.1.16.tar.gz", "has_sig": false, "md5_digest": "74f570413294719ee2fc3e570f478c46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13959, "upload_time": "2016-03-12T17:09:16", "upload_time_iso_8601": "2016-03-12T17:09:16.839422Z", "url": "https://files.pythonhosted.org/packages/b2/b7/e581ba39cad52b0a7cdaeaa1febe2d7bb55037a3be8dd3efbab0eafb5855/artifactory-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "f792d46bc0c8bdf691cad1daef878c79", "sha256": "7d50a725b080a68adbba499d66fe2c1a54134cba22a4d3fd7ae978cfe933d5d6"}, "downloads": -1, "filename": "artifactory-0.1.17.tar.gz", "has_sig": false, "md5_digest": "f792d46bc0c8bdf691cad1daef878c79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14508, "upload_time": "2016-03-12T17:36:33", "upload_time_iso_8601": "2016-03-12T17:36:33.761197Z", "url": "https://files.pythonhosted.org/packages/4a/98/c1cbe7276a2ffa2a69cd4b1310d6b142e9fbfb4991b441d4e4257273703f/artifactory-0.1.17.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fc3fb1f58488ed2b57e5bfa9f1f5224e", "sha256": "dc05e0bc410a1b6396c7348d97a0cbeae5688a0472a3de3f3a792490cc864dba"}, "downloads": -1, "filename": "artifactory-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fc3fb1f58488ed2b57e5bfa9f1f5224e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6898, "upload_time": "2014-07-24T11:56:29", "upload_time_iso_8601": "2014-07-24T11:56:29.493214Z", "url": "https://files.pythonhosted.org/packages/e9/5f/9a4298cda4d712e2ed4324d34fbb90f192554681bddaa6912c845331ac35/artifactory-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "07acdfbd029a2fd652421d456bc20f46", "sha256": "67f9b203968bac62558165bf4051ce4931d19f4f09591f3260537287077002e9"}, "downloads": -1, "filename": "artifactory-0.1.3.tar.gz", "has_sig": false, "md5_digest": "07acdfbd029a2fd652421d456bc20f46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7047, "upload_time": "2014-07-24T12:05:52", "upload_time_iso_8601": "2014-07-24T12:05:52.178036Z", "url": "https://files.pythonhosted.org/packages/82/6b/f9a605cd09eacf4565aec4620549ed1c130687b954d95e14c647e6d8bb7a/artifactory-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "7247be506f5a6e80f3dae1ab8ea5ee75", "sha256": "16f7367c856633e12cec2c26040d144c8e53f6c6c946add8db35a658f46b591d"}, "downloads": -1, "filename": "artifactory-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7247be506f5a6e80f3dae1ab8ea5ee75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8614, "upload_time": "2014-07-29T12:04:52", "upload_time_iso_8601": "2014-07-29T12:04:52.427149Z", "url": "https://files.pythonhosted.org/packages/d9/0f/0a0f13d5f1d2173679108e9ad940d1d67b1f8c8d1fae31cb1f6ef4c2b1c4/artifactory-0.1.4.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "b0a8fff5a848b0a6d32404650d03739f", "sha256": "89a47114493b1829c8709976acd2a17b055973d51d966eb95f59708588948dc6"}, "downloads": -1, "filename": "artifactory-0.1.6.tar.gz", "has_sig": false, "md5_digest": "b0a8fff5a848b0a6d32404650d03739f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9132, "upload_time": "2014-08-04T18:49:52", "upload_time_iso_8601": "2014-08-04T18:49:52.554286Z", "url": "https://files.pythonhosted.org/packages/01/91/67b4df7af4ffae871303661863bf358618c557334a0c3aeaca8a01f04522/artifactory-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "a99e537a02fd7fe6710ff80378c94d22", "sha256": "9f53f3c77d78fbd6af54601f924d4ec17f645b46f395235ea5339ed46c059098"}, "downloads": -1, "filename": "artifactory-0.1.7.tar.gz", "has_sig": false, "md5_digest": "a99e537a02fd7fe6710ff80378c94d22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10416, "upload_time": "2014-09-03T18:15:32", "upload_time_iso_8601": "2014-09-03T18:15:32.434692Z", "url": "https://files.pythonhosted.org/packages/d4/02/6ce44cb4045b096f63c36aab0bfa901ecf2f8ab1ce04a3ca5ff82e8cbf57/artifactory-0.1.7.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "6700a5098e718db4fd08a5aafc41feae", "sha256": "2e40e6f6a71ca15a3ba0c2bb3cfb78adc1de8ee78f77f0ae94c908c260785676"}, "downloads": -1, "filename": "artifactory-0.1.9.tar.gz", "has_sig": false, "md5_digest": "6700a5098e718db4fd08a5aafc41feae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12589, "upload_time": "2014-11-11T20:13:25", "upload_time_iso_8601": "2014-11-11T20:13:25.824548Z", "url": "https://files.pythonhosted.org/packages/72/86/28975f071163f80e6a4778c73686354cef61f633760555a8afceb80b19b6/artifactory-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f792d46bc0c8bdf691cad1daef878c79", "sha256": "7d50a725b080a68adbba499d66fe2c1a54134cba22a4d3fd7ae978cfe933d5d6"}, "downloads": -1, "filename": "artifactory-0.1.17.tar.gz", "has_sig": false, "md5_digest": "f792d46bc0c8bdf691cad1daef878c79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14508, "upload_time": "2016-03-12T17:36:33", "upload_time_iso_8601": "2016-03-12T17:36:33.761197Z", "url": "https://files.pythonhosted.org/packages/4a/98/c1cbe7276a2ffa2a69cd4b1310d6b142e9fbfb4991b441d4e4257273703f/artifactory-0.1.17.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:08 2020"}