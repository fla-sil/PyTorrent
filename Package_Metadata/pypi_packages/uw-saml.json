{"info": {"author": "UW-IT Identity and Access Management", "author_email": "help@uw.edu", "bugtrack_url": null, "classifiers": [], "description": "# uw-saml\n\n[![Build Status](https://travis-ci.org/UWIT-IAM/uw-saml-python.svg?branch=master)](https://travis-ci.org/UWIT-IAM/uw-saml-python)\n[![Coverage Status](https://coveralls.io/repos/github/UWIT-IAM/uw-saml-python/badge.svg?branch=master)](https://coveralls.io/github/UWIT-IAM/uw-saml-python?branch=master)\n\nA UW-specific adapter to the\n[python3-saml](https://github.com/onelogin/python3-saml) package. This package\nwas built to federate with other IdPs, but the default case is to use the UW\nIdentity Provider. It can be used against any framework. For a django-specific\npackage, also consider\n[uw-django-saml2](https://github.com/uw-it-aca/uw-django-saml2).\n\n## Installation\n\n```bash\npip install uw-saml[python3-saml]\n```\n\nThe extra `[python3-saml]` is because the SAML package can be cumbersome to\ninstall in a workstation environment, on account of needing the libxmlsec1-dev\nlibrary. Therefore, it's an optional requirement, causing a runtime error\ninstead of an install-time error. Alternatively, you can use a mock\ninterface by setting `uw_saml2.python3_saml.MOCK = True`.\n\n## Example login endpoint using flask\n\nIn this example you've gone to\n[SP Registry](https://iam-tools.u.washington.edu/spreg) and registered an\nEntity ID of https://samldemo.iamdev.s.uw.edu/saml, with an ACS endpoint of\nhttps://samldemo.iamdev.s.uw.edu/saml/login. GETs will return a\nredirect to the IdP for authentication, and POSTs will try to process a SAML\nResponse.\n\n```python\nfrom flask import request, session, redirect\nimport uw_saml2\n\n@app.route('/saml/login', methods=['GET', 'POST'])\ndef login():\n    session.clear()\n    args = {\n        'entity_id': 'https://samldemo.iamdev.s.uw.edu/saml',\n        'acs_url': 'https://samldemo.iamdev.s.uw.edu/saml/login'\n    }\n    if request.method == 'GET':\n        args['return_to'] = request.args.get('url', None)\n        return redirect(uw_saml2.login_redirect(**args))\n\n    attributes = uw_saml2.process_response(request.form, **args)\n    session['userid'] = attributes['uwnetid']\n    session['groups'] = attributes.get('groups', [])\n\n    relay_state = request.form.get('RelayState')\n    if relay_state and relay_state.startswith('/'):\n        return redirect(urljoin(request.url_root, request.form['RelayState']))\n\n    return 'Welcome ' + session['userid']\n```\n\n## Considerations\n\n### Sessions\n\nGive some consideration to session lifetime. The session in this example lives as a\nsigned cookie. Ideally the cookie would expire at browser close, along with\nsome time limit appropriate for your application. An example again with flask\nfor a ten minute limit...\n\n```python\nfrom datetime import timedelta\n\napp.config.update(\n    PERMANENT_SESSION_LIFETIME=timedelta(minutes=10)\n)\n```\n\n### Replay attack prevention\n\nBy default this package uses an in-memory cache to check for replay attacks.\nTo use a distributed cache such as redis or memcached you would inject a\ncache object into `uw_saml2.auth.CACHE`. Here's an example of how to do it...\n\n```python\nimport werkzeug.contrib.cache\nimport uw_saml2.auth\n\nuw_saml2.auth.CACHE = werkzeug.contrib.cache.RedisCache()\n```\n\nDjango's cache backend uses the same methods so that could be injected as well.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/UWIT-IAM/uw-saml-python", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "uw-saml", "package_url": "https://pypi.org/project/uw-saml/", "platform": "", "project_url": "https://pypi.org/project/uw-saml/", "project_urls": {"Homepage": "https://github.com/UWIT-IAM/uw-saml-python"}, "release_url": "https://pypi.org/project/uw-saml/1.0.12/", "requires_dist": null, "requires_python": "", "summary": "A UW-specific adapter to the python3-saml package.", "version": "1.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>uw-saml</h1>\n<p><a href=\"https://travis-ci.org/UWIT-IAM/uw-saml-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b8f3a65cdede10e85423d0247e9af096baacec1/68747470733a2f2f7472617669732d63692e6f72672f555749542d49414d2f75772d73616d6c2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/UWIT-IAM/uw-saml-python?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f70e5e2e39abd0f0edde40d2d09acd0b8529eba2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f555749542d49414d2f75772d73616d6c2d707974686f6e2f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A UW-specific adapter to the\n<a href=\"https://github.com/onelogin/python3-saml\" rel=\"nofollow\">python3-saml</a> package. This package\nwas built to federate with other IdPs, but the default case is to use the UW\nIdentity Provider. It can be used against any framework. For a django-specific\npackage, also consider\n<a href=\"https://github.com/uw-it-aca/uw-django-saml2\" rel=\"nofollow\">uw-django-saml2</a>.</p>\n<h2>Installation</h2>\n<pre>pip install uw-saml<span class=\"o\">[</span>python3-saml<span class=\"o\">]</span>\n</pre>\n<p>The extra <code>[python3-saml]</code> is because the SAML package can be cumbersome to\ninstall in a workstation environment, on account of needing the libxmlsec1-dev\nlibrary. Therefore, it's an optional requirement, causing a runtime error\ninstead of an install-time error. Alternatively, you can use a mock\ninterface by setting <code>uw_saml2.python3_saml.MOCK = True</code>.</p>\n<h2>Example login endpoint using flask</h2>\n<p>In this example you've gone to\n<a href=\"https://iam-tools.u.washington.edu/spreg\" rel=\"nofollow\">SP Registry</a> and registered an\nEntity ID of <a href=\"https://samldemo.iamdev.s.uw.edu/saml\" rel=\"nofollow\">https://samldemo.iamdev.s.uw.edu/saml</a>, with an ACS endpoint of\n<a href=\"https://samldemo.iamdev.s.uw.edu/saml/login\" rel=\"nofollow\">https://samldemo.iamdev.s.uw.edu/saml/login</a>. GETs will return a\nredirect to the IdP for authentication, and POSTs will try to process a SAML\nResponse.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">redirect</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uw_saml2</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/saml/login'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">():</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'entity_id'</span><span class=\"p\">:</span> <span class=\"s1\">'https://samldemo.iamdev.s.uw.edu/saml'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'acs_url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://samldemo.iamdev.s.uw.edu/saml/login'</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s1\">'GET'</span><span class=\"p\">:</span>\n        <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">'return_to'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'url'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"n\">uw_saml2</span><span class=\"o\">.</span><span class=\"n\">login_redirect</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">args</span><span class=\"p\">))</span>\n\n    <span class=\"n\">attributes</span> <span class=\"o\">=</span> <span class=\"n\">uw_saml2</span><span class=\"o\">.</span><span class=\"n\">process_response</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">'userid'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">attributes</span><span class=\"p\">[</span><span class=\"s1\">'uwnetid'</span><span class=\"p\">]</span>\n    <span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">'groups'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">attributes</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'groups'</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n    <span class=\"n\">relay_state</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'RelayState'</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">relay_state</span> <span class=\"ow\">and</span> <span class=\"n\">relay_state</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"n\">urljoin</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">url_root</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"p\">[</span><span class=\"s1\">'RelayState'</span><span class=\"p\">]))</span>\n\n    <span class=\"k\">return</span> <span class=\"s1\">'Welcome '</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">'userid'</span><span class=\"p\">]</span>\n</pre>\n<h2>Considerations</h2>\n<h3>Sessions</h3>\n<p>Give some consideration to session lifetime. The session in this example lives as a\nsigned cookie. Ideally the cookie would expire at browser close, along with\nsome time limit appropriate for your application. An example again with flask\nfor a ten minute limit...</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">timedelta</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n    <span class=\"n\">PERMANENT_SESSION_LIFETIME</span><span class=\"o\">=</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">minutes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Replay attack prevention</h3>\n<p>By default this package uses an in-memory cache to check for replay attacks.\nTo use a distributed cache such as redis or memcached you would inject a\ncache object into <code>uw_saml2.auth.CACHE</code>. Here's an example of how to do it...</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">werkzeug.contrib.cache</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uw_saml2.auth</span>\n\n<span class=\"n\">uw_saml2</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">CACHE</span> <span class=\"o\">=</span> <span class=\"n\">werkzeug</span><span class=\"o\">.</span><span class=\"n\">contrib</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">RedisCache</span><span class=\"p\">()</span>\n</pre>\n<p>Django's cache backend uses the same methods so that could be injected as well.</p>\n\n          </div>"}, "last_serial": 6824117, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7ed697c203827ac00e23a883935b5144", "sha256": "b4c78a8ab288f6dfc6b308239d712ddf13f62f6b5ac97ea30560f2abb08042c9"}, "downloads": -1, "filename": "uw-saml-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7ed697c203827ac00e23a883935b5144", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11500, "upload_time": "2019-02-04T19:52:15", "upload_time_iso_8601": "2019-02-04T19:52:15.471790Z", "url": "https://files.pythonhosted.org/packages/f6/97/2b3d6c8a61a3e8323d6785199e0f68959d1ece3acf9baf7b2a233524e802/uw-saml-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "09e067395fa7810452ceff387f88ba3c", "sha256": "7cd545f936ebe304a798ecfa85fc03878317bccb4dcbf95dbd964e38cfd13eff"}, "downloads": -1, "filename": "uw-saml-1.0.0.tar.gz", "has_sig": false, "md5_digest": "09e067395fa7810452ceff387f88ba3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11591, "upload_time": "2019-02-04T20:17:11", "upload_time_iso_8601": "2019-02-04T20:17:11.751122Z", "url": "https://files.pythonhosted.org/packages/39/83/01f25ab15f465b78488a1496b90f268017e9103b62e104079b0779ba16ab/uw-saml-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2728c602e309d83e9f4d7825a2f1b2dc", "sha256": "effd58eea5cab29d9e500b74faab1bcf6207303456812af480ae619372e44007"}, "downloads": -1, "filename": "uw-saml-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2728c602e309d83e9f4d7825a2f1b2dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12265, "upload_time": "2019-02-05T00:44:50", "upload_time_iso_8601": "2019-02-05T00:44:50.460166Z", "url": "https://files.pythonhosted.org/packages/a2/60/4978476f7aa1afd28995f3a4d110c99278d23bc79c4ace7ffaf8a31b20e4/uw-saml-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "ab71374f523e9e45fd995aab21d32f52", "sha256": "d24a6a7617f4486f30c5215f7dc50fe7125143647e873b563401bac8cc1db1ee"}, "downloads": -1, "filename": "uw-saml-1.0.10.tar.gz", "has_sig": false, "md5_digest": "ab71374f523e9e45fd995aab21d32f52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14844, "upload_time": "2020-02-18T15:56:35", "upload_time_iso_8601": "2020-02-18T15:56:35.698772Z", "url": "https://files.pythonhosted.org/packages/f5/61/517436d92c364f208c8ebd94dbd00355587dfd102b2f6dea801cb60376f5/uw-saml-1.0.10.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "23f3c8632f87366e78e58665f50c1ca6", "sha256": "adfb4eb885e7e8a1c6a995a4a1b67641339e61d03c804e7e1a1739b684a6f09b"}, "downloads": -1, "filename": "uw-saml-1.0.12.tar.gz", "has_sig": false, "md5_digest": "23f3c8632f87366e78e58665f50c1ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14939, "upload_time": "2020-03-16T20:36:28", "upload_time_iso_8601": "2020-03-16T20:36:28.803851Z", "url": "https://files.pythonhosted.org/packages/a7/e6/d344433145e4b9898d27a4acb9e4b46b5afbefa276222350ff92457b7b38/uw-saml-1.0.12.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "2b4fb638954f83afd08d599372bbf303", "sha256": "929eedc58d1fbd24a3d7163e35952e0ab29db97c39cd41cfef43494d4a0db266"}, "downloads": -1, "filename": "uw-saml-1.0.2.tar.gz", "has_sig": false, "md5_digest": "2b4fb638954f83afd08d599372bbf303", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12393, "upload_time": "2019-02-05T23:46:25", "upload_time_iso_8601": "2019-02-05T23:46:25.397108Z", "url": "https://files.pythonhosted.org/packages/53/f7/0ee1d1de4b24c2c59b8922224471ac45d36ec2404b2dc72ebd2e82c821f9/uw-saml-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "9c06284bd8b287344bd1a5031ceaf822", "sha256": "2fcbd1232a1a986cc78e5a1c0c2095f2edb81812ef9b36ec9131bde653b717bb"}, "downloads": -1, "filename": "uw-saml-1.0.3.tar.gz", "has_sig": false, "md5_digest": "9c06284bd8b287344bd1a5031ceaf822", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12829, "upload_time": "2019-02-16T00:53:15", "upload_time_iso_8601": "2019-02-16T00:53:15.801097Z", "url": "https://files.pythonhosted.org/packages/91/f4/bdffae2694bb2603897c38fc9df7d347e03d029b54e0ab7d4e732c36a38e/uw-saml-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "d09b5dbe5d2e97fe7adad9a7a6a4e6d9", "sha256": "baef8e13de6742762d1eb9bf0a7dd92ac7d57bb7e8d585cc3706a390dbdcbfb2"}, "downloads": -1, "filename": "uw-saml-1.0.4.tar.gz", "has_sig": false, "md5_digest": "d09b5dbe5d2e97fe7adad9a7a6a4e6d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12841, "upload_time": "2019-03-01T23:06:17", "upload_time_iso_8601": "2019-03-01T23:06:17.671879Z", "url": "https://files.pythonhosted.org/packages/38/34/3117fd77a524dfec21c82a74122a8b2f12ef306d0d3412017db95f89e2fc/uw-saml-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "13a3cdd0498158a51e47afadab319903", "sha256": "65abf7594743eb96f031441ad20f693ebcd0043e37e775d64e123e4c034fefd0"}, "downloads": -1, "filename": "uw-saml-1.0.5.tar.gz", "has_sig": false, "md5_digest": "13a3cdd0498158a51e47afadab319903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12837, "upload_time": "2019-03-05T00:32:48", "upload_time_iso_8601": "2019-03-05T00:32:48.291242Z", "url": "https://files.pythonhosted.org/packages/70/8c/45270ab06a7829c86e5dc98587fb0e56b0a008f688db43139b7855bb3617/uw-saml-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "e83b879ddf906f16c695e9977b6c1565", "sha256": "80aa9eab9de7e11403c012af463a64d9d496b884e0269898146d9e86c73549f7"}, "downloads": -1, "filename": "uw-saml-1.0.6.tar.gz", "has_sig": false, "md5_digest": "e83b879ddf906f16c695e9977b6c1565", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13886, "upload_time": "2019-08-23T00:43:51", "upload_time_iso_8601": "2019-08-23T00:43:51.869978Z", "url": "https://files.pythonhosted.org/packages/c6/d5/461ae15338b4547b7da827237d9886ae5ddfc276724cb7948d074dd3e66f/uw-saml-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "4264c94af2453ffdf7782660251431c2", "sha256": "6ba23705f1e8d1913edce66a3c52b84534755343a4dd6563861587d94f74702c"}, "downloads": -1, "filename": "uw-saml-1.0.7.tar.gz", "has_sig": false, "md5_digest": "4264c94af2453ffdf7782660251431c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13884, "upload_time": "2019-08-23T01:59:46", "upload_time_iso_8601": "2019-08-23T01:59:46.133506Z", "url": "https://files.pythonhosted.org/packages/dd/47/ced66d42e8cfa76ec0876a8c51a1c844b57c955337f4ac85cc91d8da2be0/uw-saml-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "a8ffb28db41aec614ec46dc34badc62b", "sha256": "96ee20e4f46ab9a11c47570b1b630781226afd56c0299e8615b1f3e3c3e13b9c"}, "downloads": -1, "filename": "uw-saml-1.0.8.tar.gz", "has_sig": false, "md5_digest": "a8ffb28db41aec614ec46dc34badc62b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14818, "upload_time": "2020-01-21T19:48:30", "upload_time_iso_8601": "2020-01-21T19:48:30.955993Z", "url": "https://files.pythonhosted.org/packages/de/b0/c74586836262aa886e966696ef36d679ddfe23331be60eaa05f4b407cf01/uw-saml-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "3fc002ff0dc15f8f34bac1bb833471f0", "sha256": "2be8df928ebf236e6fb20ef091191d3c39d05d90a4e0f3c213854bd5c9153585"}, "downloads": -1, "filename": "uw-saml-1.0.9.tar.gz", "has_sig": false, "md5_digest": "3fc002ff0dc15f8f34bac1bb833471f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14817, "upload_time": "2020-01-21T20:01:40", "upload_time_iso_8601": "2020-01-21T20:01:40.641299Z", "url": "https://files.pythonhosted.org/packages/7b/ff/6b3740ba24b68e14f8887b2b2e476563e6fe7b9976e69bf27773e3232ab8/uw-saml-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23f3c8632f87366e78e58665f50c1ca6", "sha256": "adfb4eb885e7e8a1c6a995a4a1b67641339e61d03c804e7e1a1739b684a6f09b"}, "downloads": -1, "filename": "uw-saml-1.0.12.tar.gz", "has_sig": false, "md5_digest": "23f3c8632f87366e78e58665f50c1ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14939, "upload_time": "2020-03-16T20:36:28", "upload_time_iso_8601": "2020-03-16T20:36:28.803851Z", "url": "https://files.pythonhosted.org/packages/a7/e6/d344433145e4b9898d27a4acb9e4b46b5afbefa276222350ff92457b7b38/uw-saml-1.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:31 2020"}