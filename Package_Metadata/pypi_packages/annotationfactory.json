{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Introduction \n\n[![Build Status](https://dev.azure.com/aussiedevcrew/Annotation-Factory/_apis/build/status/Microsoft.Annotation-Factory?branchName=master)](https://dev.azure.com/aussiedevcrew/Annotation-Factory/_build/latest?definitionId=9&branchName=master)\n[![GitHub](https://img.shields.io/github/license/Microsoft/Annotation-Factory.svg?color=blue&label=License)](https://github.com/Microsoft/Annotation-Factory/blob/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/annotationfactory.svg?label=PyPi)](https://pypi.org/project/annotationfactory/)\n![Python Version](https://img.shields.io/pypi/pyversions/annotationfactory.svg?label=Python)\n\nAnnotation-Factory Python SDK. This package works specifically with Microsoft Cognitive Services detection results. `AnnotationWriter` takes a JSON object received from Cognitive Services and produces annotation files in both VOC and YOLO formats for use in training machine learning models.\n\n# Getting Started\n\n1. Install `annotationfactory` package via pip:\n\n    ```\n    pip install annotationfactory\n    ```\n\n# Sample to use\n\n```python\nfrom annotationfactory.annotationwriter import AnnotationWriter\nimport annotationfactory.annotationconverter as converter\n\nexample = {\n    'tagId': 0,\n    'tagName': 'Apples',\n    'region': {\n        'left': 0.288039029,\n        'top': 0.411838,\n        'width': 0.291451037,\n        'height': 0.4237842\n    }\n}\n\n# Initialise AnnotationWriter.\nwriter = AnnotationWriter()\n\n# Initialise annotation handlers.\nwriter.initVoc(\"test.jpg\", 608, 608)\nwriter.initYolo()\n\n# Add VOC object to writer.\nwriter.addVocObject(example)\nwriter.addVocObject(example)\n\n# Add YOLO object to writer.\nwriter.addYoloObject(example)\nwriter.addYoloObject(example)\n\n# Output VOC annotations to file.\nwriter.saveVoc(\"myannotation.xml\")\n\n# Output YOLO annotations to file.\nwriter.saveYolo(\"myannotation.txt\")\n\n# Converts VOC annotations back to CustomVision annotation format.\nvoc2cv = converter.convertVocFromPath(\"myannotation.xml\")\n\n# Converts YOLO annotations back to CustomVision annotation format.\n# Requires a txt file with list of label names as an input.\nyolo2cv = converter.convertYoloFromPath(\"myannotation.txt\", \"class.names\")\n\n```\n\n# Run locally\n\n``` \npip install -r requirements.txt \npython example/test.py\n```\n\n# Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Microsoft/Annotation-Factory", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "annotationfactory", "package_url": "https://pypi.org/project/annotationfactory/", "platform": "", "project_url": "https://pypi.org/project/annotationfactory/", "project_urls": {"Homepage": "https://github.com/Microsoft/Annotation-Factory"}, "release_url": "https://pypi.org/project/annotationfactory/0.0.1.dev304/", "requires_dist": ["jinja2", "jsonschema", "xmltodict"], "requires_python": "", "summary": "annotation factory python sdk", "version": "0.0.1.dev304", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Introduction</h1>\n<p><a href=\"https://dev.azure.com/aussiedevcrew/Annotation-Factory/_build/latest?definitionId=9&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c91e62af70d5701f99dfad4e448498690d9ebb15/68747470733a2f2f6465762e617a7572652e636f6d2f617573736965646576637265772f416e6e6f746174696f6e2d466163746f72792f5f617069732f6275696c642f7374617475732f4d6963726f736f66742e416e6e6f746174696f6e2d466163746f72793f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://github.com/Microsoft/Annotation-Factory/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bca9ba5dada0bf2c908a3fbf57dab6493194a3b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4d6963726f736f66742f416e6e6f746174696f6e2d466163746f72792e7376673f636f6c6f723d626c7565266c6162656c3d4c6963656e7365\"></a>\n<a href=\"https://pypi.org/project/annotationfactory/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9e42e23b7da77f65b2221f61c138b3fb52c45b0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616e6e6f746174696f6e666163746f72792e7376673f6c6162656c3d50795069\"></a>\n<img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0711a43ce1689817a05645efeddd58664bff5a45/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616e6e6f746174696f6e666163746f72792e7376673f6c6162656c3d507974686f6e\"></p>\n<p>Annotation-Factory Python SDK. This package works specifically with Microsoft Cognitive Services detection results. <code>AnnotationWriter</code> takes a JSON object received from Cognitive Services and produces annotation files in both VOC and YOLO formats for use in training machine learning models.</p>\n<h1>Getting Started</h1>\n<ol>\n<li>\n<p>Install <code>annotationfactory</code> package via pip:</p>\n<pre><code>pip install annotationfactory\n</code></pre>\n</li>\n</ol>\n<h1>Sample to use</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">annotationfactory.annotationwriter</span> <span class=\"kn\">import</span> <span class=\"n\">AnnotationWriter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">annotationfactory.annotationconverter</span> <span class=\"k\">as</span> <span class=\"nn\">converter</span>\n\n<span class=\"n\">example</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'tagId'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'tagName'</span><span class=\"p\">:</span> <span class=\"s1\">'Apples'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'region'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'left'</span><span class=\"p\">:</span> <span class=\"mf\">0.288039029</span><span class=\"p\">,</span>\n        <span class=\"s1\">'top'</span><span class=\"p\">:</span> <span class=\"mf\">0.411838</span><span class=\"p\">,</span>\n        <span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"mf\">0.291451037</span><span class=\"p\">,</span>\n        <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"mf\">0.4237842</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Initialise AnnotationWriter.</span>\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">AnnotationWriter</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Initialise annotation handlers.</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">initVoc</span><span class=\"p\">(</span><span class=\"s2\">\"test.jpg\"</span><span class=\"p\">,</span> <span class=\"mi\">608</span><span class=\"p\">,</span> <span class=\"mi\">608</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">initYolo</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add VOC object to writer.</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">addVocObject</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">addVocObject</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add YOLO object to writer.</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">addYoloObject</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">addYoloObject</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Output VOC annotations to file.</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">saveVoc</span><span class=\"p\">(</span><span class=\"s2\">\"myannotation.xml\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Output YOLO annotations to file.</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">saveYolo</span><span class=\"p\">(</span><span class=\"s2\">\"myannotation.txt\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Converts VOC annotations back to CustomVision annotation format.</span>\n<span class=\"n\">voc2cv</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">convertVocFromPath</span><span class=\"p\">(</span><span class=\"s2\">\"myannotation.xml\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Converts YOLO annotations back to CustomVision annotation format.</span>\n<span class=\"c1\"># Requires a txt file with list of label names as an input.</span>\n<span class=\"n\">yolo2cv</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">convertYoloFromPath</span><span class=\"p\">(</span><span class=\"s2\">\"myannotation.txt\"</span><span class=\"p\">,</span> <span class=\"s2\">\"class.names\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Run locally</h1>\n<pre><code>pip install -r requirements.txt \npython example/test.py\n</code></pre>\n<h1>Contributing</h1>\n<p>This project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">https://cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.</p>\n<p>This project has adopted the <a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>.\nFor more information see the <a href=\"https://opensource.microsoft.com/codeofconduct/faq/\" rel=\"nofollow\">Code of Conduct FAQ</a> or\ncontact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any additional questions or comments.</p>\n\n          </div>"}, "last_serial": 5318002, "releases": {"0.0.1.dev123": [{"comment_text": "", "digests": {"md5": "db21b299c8c4f45716445d6752940225", "sha256": "3a525676486ea2b7822cf80b515e7e78410847ba2db620f54a7d516131696441"}, "downloads": -1, "filename": "annotationfactory-0.0.1.dev123-py3-none-any.whl", "has_sig": false, "md5_digest": "db21b299c8c4f45716445d6752940225", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7360, "upload_time": "2019-03-01T01:47:04", "upload_time_iso_8601": "2019-03-01T01:47:04.641278Z", "url": "https://files.pythonhosted.org/packages/24/86/1fd1cd61a4c4144bf7dfd0b9c0f91f8da4ebb293df16c20edfb1b951e76a/annotationfactory-0.0.1.dev123-py3-none-any.whl", "yanked": false}], "0.0.1.dev126": [{"comment_text": "", "digests": {"md5": "24f48d0505307bc4ae92a2dba7d553fd", "sha256": "3e6979741a2dfb0e4820627de2ae16dfcd91d2b638e6e1d224da9d1e1078f634"}, "downloads": -1, "filename": "annotationfactory-0.0.1.dev126-py3-none-any.whl", "has_sig": false, "md5_digest": "24f48d0505307bc4ae92a2dba7d553fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7703, "upload_time": "2019-03-03T04:13:04", "upload_time_iso_8601": "2019-03-03T04:13:04.260080Z", "url": "https://files.pythonhosted.org/packages/71/d5/4b666bf4772f71c1b1bbb3eb5263de438c01bf6b782f9b74842ca641d39d/annotationfactory-0.0.1.dev126-py3-none-any.whl", "yanked": false}], "0.0.1.dev127": [{"comment_text": "", "digests": {"md5": "1c00683f49f040cbe5e4d06fe27387d1", "sha256": "dabe1aeb3ad48b4d2e3431c87720dc0659de915c4936f5edcecb35afc158cf5a"}, "downloads": -1, "filename": "annotationfactory-0.0.1.dev127-py3-none-any.whl", "has_sig": false, "md5_digest": "1c00683f49f040cbe5e4d06fe27387d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8011, "upload_time": "2019-03-03T23:29:01", "upload_time_iso_8601": "2019-03-03T23:29:01.323984Z", "url": "https://files.pythonhosted.org/packages/d3/7b/0a17ca93e355acee23665d0700a615f600123defb9600997810d26d14b2b/annotationfactory-0.0.1.dev127-py3-none-any.whl", "yanked": false}], "0.0.1.dev176": [{"comment_text": "", "digests": {"md5": "df0ce53b9543292d4c9fb6e21c64b08b", "sha256": "515afdba2a35752851011810463bc29caccc34bcd8fa3cfee52d7437821f28ff"}, "downloads": -1, "filename": "annotationfactory-0.0.1.dev176-py3-none-any.whl", "has_sig": false, "md5_digest": "df0ce53b9543292d4c9fb6e21c64b08b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8105, "upload_time": "2019-03-27T03:27:47", "upload_time_iso_8601": "2019-03-27T03:27:47.846081Z", "url": "https://files.pythonhosted.org/packages/3f/78/40a1fcab2943683f8526528fa8ab6e22747a0f341755d4c5dd0e2a2677ac/annotationfactory-0.0.1.dev176-py3-none-any.whl", "yanked": false}], "0.0.1.dev304": [{"comment_text": "", "digests": {"md5": "11a88d8887dcce77fb4005ef4a92724c", "sha256": "9ee86eaf600bc3e4effb3bbacd6e3d994503548c2be2f6caf83246328a05a1e0"}, "downloads": -1, "filename": "annotationfactory-0.0.1.dev304-py3-none-any.whl", "has_sig": false, "md5_digest": "11a88d8887dcce77fb4005ef4a92724c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8135, "upload_time": "2019-05-26T05:45:57", "upload_time_iso_8601": "2019-05-26T05:45:57.454347Z", "url": "https://files.pythonhosted.org/packages/2b/a5/acb28475be576f40014fd4987b79fb6e3881d78b83ec9ad9fdbd9e7809a9/annotationfactory-0.0.1.dev304-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11a88d8887dcce77fb4005ef4a92724c", "sha256": "9ee86eaf600bc3e4effb3bbacd6e3d994503548c2be2f6caf83246328a05a1e0"}, "downloads": -1, "filename": "annotationfactory-0.0.1.dev304-py3-none-any.whl", "has_sig": false, "md5_digest": "11a88d8887dcce77fb4005ef4a92724c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8135, "upload_time": "2019-05-26T05:45:57", "upload_time_iso_8601": "2019-05-26T05:45:57.454347Z", "url": "https://files.pythonhosted.org/packages/2b/a5/acb28475be576f40014fd4987b79fb6e3881d78b83ec9ad9fdbd9e7809a9/annotationfactory-0.0.1.dev304-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:18:07 2020"}