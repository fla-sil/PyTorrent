{"info": {"author": "Alen Mujezinovic", "author_email": "alen@caffeinehit.com", "bugtrack_url": null, "classifiers": [], "description": "dendrite, social connectivity as a library\n==========================================\n\nBarebones social connection library. Tries to not do everything so you\ncan do anything. Only OAuth1 and OAuth2 currently. Python 3 compatible.\n\nUsage\n-----\n\nDendrite doesn't give you any models, URLS or finished views. It's up to\nyou to define the behaviour, URLs and models. An example using Instagram\nfollows.\n\n**``models.py``**\n\nWe copy the full Instagram profile. If you don't want the full profile,\nyou can change the behaviour of ``OAuth2CallbackView.create_profile`` in\nyour views.\n\n.. code:: python\n\n    class InstagramProfile(models.Model):\n        id              = models.CharField(max_length=255, primary_key=True)\n        username        = models.CharField(max_length=255, blank=True)\n        full_name       = models.CharField(max_length=255, blank=True)\n        profile_picture = models.URLField(blank=True)\n        bio             = models.TextField(blank=True)\n        website         = models.URLField(blank=True)\n        user            = models.ForeignKey(settings.AUTH_USER_MODEL, related_name='instagram_profiles')\n        access_token    = models.CharField(max_length=255, blank=True)\n\n        def __unicode__(self):\n            return self.full_name\n\n**``views.py``**\n\nCreate views to handle connection. You can customize the views to behave\ndifferently.\n\n.. code:: python\n\n    from dendrite.views import OAuth2Mixin, OAuth2ConnectView, OAuth2CallbackView\n\n    from .models import InstagramProfile\n\n    class InstagramMixin(OAuth2Mixin):\n        client_id         = settings.INSTAGRAM_CLIENT_ID\n        client_secret     = settings.INSTAGRAM_CLIENT_SECRET\n        site              = 'https://api.instagram.com'\n        authorization_url = 'https://api.instagram.com/oauth/authorize/'\n        token_url         = 'https://api.instagram.com/oauth/access_token'\n        redirect_uri      = 'callback' # Name or full URL\n\n        profile_class     = InstagramProfile\n        scope             = \"basic\"\n\n        \n    class InstagramConnectView(InstagramMixin, OAuth2ConnectView):\n        pass\n\n    class InstagramCallbackView(InstagramMixin, OAuth2CallbackView):\n        def get_remote_profile(self, request, token):\n            return token[\"user\"]\n\n**``urls.py``**\n\nInclude *your* social views into your urls.\n\n.. code:: python\n\n    urlpatterns = patterns(\n        '',\n        url('^social/instagram/connect/$', InstagramConnectView.as_view(), name='connect'),\n        url('^social/instagram/callback/$', InstagramCallbackView.as_view(), name='callback'),\n    )\n\n**``backends.py``**\n\nCreate an additional `authentication\nbackend <https://docs.djangoproject.com/en/1.5/topics/auth/customizing/#other-authentication-sources>`__\nthat uses ``InstagramProfile``.\n\n``DendriteBackend`` objects receive the profile class and the full\nprofile information returned by\n``InstagramCallbackView.get_remote_profile``.\n\n.. code:: python\n\n    from dendrite.backends import DendriteBackend\n\n    from .models import InstagramProfile\n\n    class InstagramBackend(DendriteBackend):\n        profile_class = InstagramProfile\n\n**``settings.py``**\n\nAdding API keys and authentication backend.\n\n.. code:: python\n\n    AUTHENTICATION_BACKENDS = (\n        'django.contrib.auth.backends.ModelBackend',\n        'app.InstagramBackend',\n\n    )\n\n    INSTAGRAM_CLIENT_ID = os.environ.get('INSTAGRAM_CLIENT_ID', '')\n    INSTAGRAM_CLIENT_SECRET = os.environ.get('INSTAGRAM_CLIENT_SECRET, '')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caffeinehit/dendrite", "keywords": "django social login registration oauth2", "license": "Copyright (c) 2013, Caffeinehit Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "dendrite", "package_url": "https://pypi.org/project/dendrite/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dendrite/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/caffeinehit/dendrite"}, "release_url": "https://pypi.org/project/dendrite/1.1.3/", "requires_dist": null, "requires_python": null, "summary": "Social connectivitiy as a library", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Barebones social connection library. Tries to not do everything so you\ncan do anything. Only OAuth1 and OAuth2 currently. Python 3 compatible.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Dendrite doesn\u2019t give you any models, URLS or finished views. It\u2019s up to\nyou to define the behaviour, URLs and models. An example using Instagram\nfollows.</p>\n<p><strong>``models.py``</strong></p>\n<p>We copy the full Instagram profile. If you don\u2019t want the full profile,\nyou can change the behaviour of <tt>OAuth2CallbackView.create_profile</tt> in\nyour views.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">InstagramProfile</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span>              <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span>        <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">full_name</span>       <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">profile_picture</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">bio</span>             <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">website</span>         <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">user</span>            <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTH_USER_MODEL</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">'instagram_profiles'</span><span class=\"p\">)</span>\n    <span class=\"n\">access_token</span>    <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__unicode__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">full_name</span>\n</pre>\n<p><strong>``views.py``</strong></p>\n<p>Create views to handle connection. You can customize the views to behave\ndifferently.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dendrite.views</span> <span class=\"kn\">import</span> <span class=\"n\">OAuth2Mixin</span><span class=\"p\">,</span> <span class=\"n\">OAuth2ConnectView</span><span class=\"p\">,</span> <span class=\"n\">OAuth2CallbackView</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">InstagramProfile</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">InstagramMixin</span><span class=\"p\">(</span><span class=\"n\">OAuth2Mixin</span><span class=\"p\">):</span>\n    <span class=\"n\">client_id</span>         <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">INSTAGRAM_CLIENT_ID</span>\n    <span class=\"n\">client_secret</span>     <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">INSTAGRAM_CLIENT_SECRET</span>\n    <span class=\"n\">site</span>              <span class=\"o\">=</span> <span class=\"s1\">'https://api.instagram.com'</span>\n    <span class=\"n\">authorization_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://api.instagram.com/oauth/authorize/'</span>\n    <span class=\"n\">token_url</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://api.instagram.com/oauth/access_token'</span>\n    <span class=\"n\">redirect_uri</span>      <span class=\"o\">=</span> <span class=\"s1\">'callback'</span> <span class=\"c1\"># Name or full URL</span>\n\n    <span class=\"n\">profile_class</span>     <span class=\"o\">=</span> <span class=\"n\">InstagramProfile</span>\n    <span class=\"n\">scope</span>             <span class=\"o\">=</span> <span class=\"s2\">\"basic\"</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">InstagramConnectView</span><span class=\"p\">(</span><span class=\"n\">InstagramMixin</span><span class=\"p\">,</span> <span class=\"n\">OAuth2ConnectView</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">InstagramCallbackView</span><span class=\"p\">(</span><span class=\"n\">InstagramMixin</span><span class=\"p\">,</span> <span class=\"n\">OAuth2CallbackView</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_remote_profile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">token</span><span class=\"p\">[</span><span class=\"s2\">\"user\"</span><span class=\"p\">]</span>\n</pre>\n<p><strong>``urls.py``</strong></p>\n<p>Include <em>your</em> social views into your urls.</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span>\n    <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s1\">'^social/instagram/connect/$'</span><span class=\"p\">,</span> <span class=\"n\">InstagramConnectView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'connect'</span><span class=\"p\">),</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s1\">'^social/instagram/callback/$'</span><span class=\"p\">,</span> <span class=\"n\">InstagramCallbackView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'callback'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>``backends.py``</strong></p>\n<p>Create an additional <a href=\"https://docs.djangoproject.com/en/1.5/topics/auth/customizing/#other-authentication-sources\" rel=\"nofollow\">authentication\nbackend</a>\nthat uses <tt>InstagramProfile</tt>.</p>\n<p><tt>DendriteBackend</tt> objects receive the profile class and the full\nprofile information returned by\n<tt>InstagramCallbackView.get_remote_profile</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dendrite.backends</span> <span class=\"kn\">import</span> <span class=\"n\">DendriteBackend</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">InstagramProfile</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">InstagramBackend</span><span class=\"p\">(</span><span class=\"n\">DendriteBackend</span><span class=\"p\">):</span>\n    <span class=\"n\">profile_class</span> <span class=\"o\">=</span> <span class=\"n\">InstagramProfile</span>\n</pre>\n<p><strong>``settings.py``</strong></p>\n<p>Adding API keys and authentication backend.</p>\n<pre><span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'django.contrib.auth.backends.ModelBackend'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'app.InstagramBackend'</span><span class=\"p\">,</span>\n\n<span class=\"p\">)</span>\n\n<span class=\"n\">INSTAGRAM_CLIENT_ID</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'INSTAGRAM_CLIENT_ID'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"n\">INSTAGRAM_CLIENT_SECRET</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'INSTAGRAM_CLIENT_SECRET, '')</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 930436, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c833770155760a0af6a2ebe98b239bea", "sha256": "1ab5df4802698a037abcc8878b8346598e059395d08fd8510b18a8d18c62a1c2"}, "downloads": -1, "filename": "dendrite-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c833770155760a0af6a2ebe98b239bea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8221, "upload_time": "2013-09-04T11:21:53", "upload_time_iso_8601": "2013-09-04T11:21:53.443970Z", "url": "https://files.pythonhosted.org/packages/34/4d/825e2612a343f87d9b952a49d27815d53bd9834dad9453aec0233d7033b2/dendrite-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6357c4a95e55cc283034b1e569aa2cc1", "sha256": "8c47dce2efe66a72c25a697d15e47b69cf6f9f8db39f9ea2745e6b65c3a9adab"}, "downloads": -1, "filename": "dendrite-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6357c4a95e55cc283034b1e569aa2cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11326, "upload_time": "2013-09-13T10:16:22", "upload_time_iso_8601": "2013-09-13T10:16:22.810381Z", "url": "https://files.pythonhosted.org/packages/8f/72/18532b01e23ffdada1b0c865eb39baef610985d1690691fd93a390a07d5b/dendrite-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "adabb22007c191cc8ac855e6ea910d9d", "sha256": "80aae0d34ee3252839955f165aabff2ea4a54c16e5a5df0fbbca86bd067db4ca"}, "downloads": -1, "filename": "dendrite-1.1.1.tar.gz", "has_sig": false, "md5_digest": "adabb22007c191cc8ac855e6ea910d9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9213, "upload_time": "2013-09-13T14:31:44", "upload_time_iso_8601": "2013-09-13T14:31:44.759118Z", "url": "https://files.pythonhosted.org/packages/82/96/9512d0ebede520ee1107152f8232b2525ecf9a8e4b23fa3ef5d32766537c/dendrite-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "997efa23305cdce71bf1bb34ebaacbfc", "sha256": "764928296004b7723a411756c361d2211658d559db493564832005ae52cb774b"}, "downloads": -1, "filename": "dendrite-1.1.2.tar.gz", "has_sig": false, "md5_digest": "997efa23305cdce71bf1bb34ebaacbfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9382, "upload_time": "2013-09-27T11:47:00", "upload_time_iso_8601": "2013-09-27T11:47:00.403711Z", "url": "https://files.pythonhosted.org/packages/1d/5f/748131b2fbeb3a82fbde30abb2214b874d1763419d6fc1c4532a20cf9d44/dendrite-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "076b3853c2a7a2cbf6968fc0f3f71c01", "sha256": "c11fa737575f02f52fed3a5e535f3c8e551360f0e46fd2e8d0a5461aa325688e"}, "downloads": -1, "filename": "dendrite-1.1.3.tar.gz", "has_sig": false, "md5_digest": "076b3853c2a7a2cbf6968fc0f3f71c01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9482, "upload_time": "2013-11-27T13:38:30", "upload_time_iso_8601": "2013-11-27T13:38:30.462990Z", "url": "https://files.pythonhosted.org/packages/38/6f/b840c4d0477f1c61bfe7787a27b7460711faca5e0e80992d529186841d17/dendrite-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "076b3853c2a7a2cbf6968fc0f3f71c01", "sha256": "c11fa737575f02f52fed3a5e535f3c8e551360f0e46fd2e8d0a5461aa325688e"}, "downloads": -1, "filename": "dendrite-1.1.3.tar.gz", "has_sig": false, "md5_digest": "076b3853c2a7a2cbf6968fc0f3f71c01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9482, "upload_time": "2013-11-27T13:38:30", "upload_time_iso_8601": "2013-11-27T13:38:30.462990Z", "url": "https://files.pythonhosted.org/packages/38/6f/b840c4d0477f1c61bfe7787a27b7460711faca5e0e80992d529186841d17/dendrite-1.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:07 2020"}