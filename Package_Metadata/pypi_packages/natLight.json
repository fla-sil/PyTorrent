{"info": {"author": "Melvin Strobl", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "## Description\n\nThis small python script outputs an 'white' RGB/ HSV value which varies depending on sunrise and sunset at your location as well on\nyour personal preferences regarding sleep and wake up times.\n\nThe project is intended to be used in a custom environment acting as \"white light value provider\".\nIn my case it's used to modify the RGB value of my room light to a more eye-friendly, warmer light.\nIt's compareable to any blue-light filter for Displays but implemts only the color changes.\n\nYou can modify transition time as well as your personal color temperature limits and other preferences in a config file.\n\n\n## Requirements\n\nRequires Python >=3.6\n\nRequires ConfigParser:\n\n```\n$ pip install ConfigParser\n```\n\n## Installation\n\nEither directly via pip:\n\n```\n$ pip install natLight\n```\n\n... or ...\n\nDowload Zip, extract and install via pip:\n\n```\n$ pip install .\n```\n\nUpgrade via pip:\n\n```\n$ pip install . --upgrade\n```\n\nCopy the config.cfg file to the folder where your script using natLight is located.\n\n\n## Usage\n\nYou can run the main method of the script (which displays Sunrise, Sunset, Time and RGB Value as well as a plot) via:\n\npython natLight.py\n\n\nIn your python script, you can get the RGB or HSV values as Array using:\n\n```python\nimport natLight\n\nprint natLight.getColor('rgb')\nprint natLight.getColor('hsv')\n```\n\nE.g. you can acces the values via:\n\n```python\nimport natLight\n\nrgb = natLight.getColor('rgb')\n\nred = rgb['r']\ngreen = rgb['g']\nblue = rgb['b']\n```\n\n## Configuration\n\nTo adapt the behavior to your personal needs, edit the config.txt file.\nThe parameters will be read on every request made to the API, so make sure you don't send requests permanently.\n\n\nCOORDS\t\t\t\t(Float): The location provided here will be used to calculate sunrise and sunset.\n\nEARLIESTWAKEUPTIME\t(Integer): Specify your earliest wake-up time as hour and minute.\nEARLIESTSLEEPTIME\t(Integer): Specify your earliest sleep time as hour and minute.\n\nCOLORLIMITS\t\t\t(Integer): Specify the color limits for day and nighttime.\n\nMORNINGTRANSTIME\t(Intger): Increasing this value will increase the transition time frome Nightimecolor to Daytimecolor.\nEVENINGTRANSTIME\t(Integer): Increasing this value will increase the transition time frim Daytimecolor to Nightimecolor.\n\nSUNEFFECT\t\t\t(Float: (0..1)): Increasing these values will stretch the transition curve towards the sunrise/ sunset.\n\nDRIVERPARAMETERS\t(Float: (0..1)): Adapt theses values to your application to match specific driver behaviors. Decreasing the values will decrease the intensity of the specific color.\n\nPLOTPARAMETERS\t\t(Integer): Adapt these values to your cmd-line size for correct virtualization of the color curve\n\n\nIf not otherwise specified, the valid range of the parameters is the common range e.g. hour between 0..24 and m between 0..60.\nYou can play with these values to match your favourite behavior, but they are already set to the most common color curve per default.\nPay attention when adjusting these values: There is not always a fallback or recheck of the valid range.\nIt is therefore recommended to plot the color curve before firing this on a standalone system.\n\n\n## Contributing\n\nCredits go to Carlos Platoni (2015) for the Sunset and Sunrise calculation (http://thorpesoftware.com/calculating-sunrise-and-sunset/)\nas well as to ShawnF (2014) for the Color Temp to RGB Conversion (http://www.tannerhelland.com/4435/convert-temperature-rgb-algorithm-code/)\n\n## Licensing\n\nThis is intended to be used in custom environment and therefore can be modified, and used without any\nrestrictations.\nThere is absolutely no warrenty for any results when using this project.\n\n## Documentation\n\nRefer to this README\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/stroblme/naturalLight.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "natLight", "package_url": "https://pypi.org/project/natLight/", "platform": "", "project_url": "https://pypi.org/project/natLight/", "project_urls": {"Homepage": "https://gitlab.com/stroblme/naturalLight.git"}, "release_url": "https://pypi.org/project/natLight/0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Natural Ligth to RGB Converter", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Description</h2>\n<p>This small python script outputs an 'white' RGB/ HSV value which varies depending on sunrise and sunset at your location as well on\nyour personal preferences regarding sleep and wake up times.</p>\n<p>The project is intended to be used in a custom environment acting as \"white light value provider\".\nIn my case it's used to modify the RGB value of my room light to a more eye-friendly, warmer light.\nIt's compareable to any blue-light filter for Displays but implemts only the color changes.</p>\n<p>You can modify transition time as well as your personal color temperature limits and other preferences in a config file.</p>\n<h2>Requirements</h2>\n<p>Requires Python &gt;=3.6</p>\n<p>Requires ConfigParser:</p>\n<pre><code>$ pip install ConfigParser\n</code></pre>\n<h2>Installation</h2>\n<p>Either directly via pip:</p>\n<pre><code>$ pip install natLight\n</code></pre>\n<p>... or ...</p>\n<p>Dowload Zip, extract and install via pip:</p>\n<pre><code>$ pip install .\n</code></pre>\n<p>Upgrade via pip:</p>\n<pre><code>$ pip install . --upgrade\n</code></pre>\n<p>Copy the config.cfg file to the folder where your script using natLight is located.</p>\n<h2>Usage</h2>\n<p>You can run the main method of the script (which displays Sunrise, Sunset, Time and RGB Value as well as a plot) via:</p>\n<p>python natLight.py</p>\n<p>In your python script, you can get the RGB or HSV values as Array using:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">natLight</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">natLight</span><span class=\"o\">.</span><span class=\"n\">getColor</span><span class=\"p\">(</span><span class=\"s1\">'rgb'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">natLight</span><span class=\"o\">.</span><span class=\"n\">getColor</span><span class=\"p\">(</span><span class=\"s1\">'hsv'</span><span class=\"p\">)</span>\n</pre>\n<p>E.g. you can acces the values via:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">natLight</span>\n\n<span class=\"n\">rgb</span> <span class=\"o\">=</span> <span class=\"n\">natLight</span><span class=\"o\">.</span><span class=\"n\">getColor</span><span class=\"p\">(</span><span class=\"s1\">'rgb'</span><span class=\"p\">)</span>\n\n<span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"s1\">'r'</span><span class=\"p\">]</span>\n<span class=\"n\">green</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"s1\">'g'</span><span class=\"p\">]</span>\n<span class=\"n\">blue</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"s1\">'b'</span><span class=\"p\">]</span>\n</pre>\n<h2>Configuration</h2>\n<p>To adapt the behavior to your personal needs, edit the config.txt file.\nThe parameters will be read on every request made to the API, so make sure you don't send requests permanently.</p>\n<p>COORDS\t\t\t\t(Float): The location provided here will be used to calculate sunrise and sunset.</p>\n<p>EARLIESTWAKEUPTIME\t(Integer): Specify your earliest wake-up time as hour and minute.\nEARLIESTSLEEPTIME\t(Integer): Specify your earliest sleep time as hour and minute.</p>\n<p>COLORLIMITS\t\t\t(Integer): Specify the color limits for day and nighttime.</p>\n<p>MORNINGTRANSTIME\t(Intger): Increasing this value will increase the transition time frome Nightimecolor to Daytimecolor.\nEVENINGTRANSTIME\t(Integer): Increasing this value will increase the transition time frim Daytimecolor to Nightimecolor.</p>\n<p>SUNEFFECT\t\t\t(Float: (0..1)): Increasing these values will stretch the transition curve towards the sunrise/ sunset.</p>\n<p>DRIVERPARAMETERS\t(Float: (0..1)): Adapt theses values to your application to match specific driver behaviors. Decreasing the values will decrease the intensity of the specific color.</p>\n<p>PLOTPARAMETERS\t\t(Integer): Adapt these values to your cmd-line size for correct virtualization of the color curve</p>\n<p>If not otherwise specified, the valid range of the parameters is the common range e.g. hour between 0..24 and m between 0..60.\nYou can play with these values to match your favourite behavior, but they are already set to the most common color curve per default.\nPay attention when adjusting these values: There is not always a fallback or recheck of the valid range.\nIt is therefore recommended to plot the color curve before firing this on a standalone system.</p>\n<h2>Contributing</h2>\n<p>Credits go to Carlos Platoni (2015) for the Sunset and Sunrise calculation (<a href=\"http://thorpesoftware.com/calculating-sunrise-and-sunset/\" rel=\"nofollow\">http://thorpesoftware.com/calculating-sunrise-and-sunset/</a>)\nas well as to ShawnF (2014) for the Color Temp to RGB Conversion (<a href=\"http://www.tannerhelland.com/4435/convert-temperature-rgb-algorithm-code/\" rel=\"nofollow\">http://www.tannerhelland.com/4435/convert-temperature-rgb-algorithm-code/</a>)</p>\n<h2>Licensing</h2>\n<p>This is intended to be used in custom environment and therefore can be modified, and used without any\nrestrictations.\nThere is absolutely no warrenty for any results when using this project.</p>\n<h2>Documentation</h2>\n<p>Refer to this README</p>\n\n          </div>"}, "last_serial": 7005774, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "45eb29de2a06c11c8e9084f189a2eb90", "sha256": "37209ce1b8c3ffa09c7b91882b592578189685e9c1afbf821dc91a33bb71ea16"}, "downloads": -1, "filename": "natLight-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "45eb29de2a06c11c8e9084f189a2eb90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5579, "upload_time": "2018-08-07T20:40:43", "upload_time_iso_8601": "2018-08-07T20:40:43.887807Z", "url": "https://files.pythonhosted.org/packages/88/aa/f71c9487386caa45fcfbc52a1c5789b475b2196cf2d695381e2017f5d9c2/natLight-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bf928de1c0deb5d8a7290f58ade631a", "sha256": "86376ea7e3cd749a3862ab5c5cb240a7555b6969b355a9355544555f6b00626f"}, "downloads": -1, "filename": "natLight-0.1.tar.gz", "has_sig": false, "md5_digest": "1bf928de1c0deb5d8a7290f58ade631a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6460, "upload_time": "2018-08-07T20:40:44", "upload_time_iso_8601": "2018-08-07T20:40:44.943042Z", "url": "https://files.pythonhosted.org/packages/72/4e/db7a371d709abae9077f8b4451f51dafac3c22758e90003b46b25d54176d/natLight-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b356723057cc57da6de5285bd27dc343", "sha256": "1c3cbffb69f1b619ad00c81c678d60f035ee5735e911650672a7c1afddecf434"}, "downloads": -1, "filename": "natLight-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b356723057cc57da6de5285bd27dc343", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8034, "upload_time": "2020-04-12T18:34:51", "upload_time_iso_8601": "2020-04-12T18:34:51.304050Z", "url": "https://files.pythonhosted.org/packages/3e/56/7313bc0e0cb34d20cc7ec8266b0822c30f86d0b3272e3ccef18a1ca8b245/natLight-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a221ae8e81c35dd6876e164037c2bd85", "sha256": "da272da82484322f08a619a22de65e35fe1dd985a9944bbcc30d3319cc8c63c9"}, "downloads": -1, "filename": "natLight-0.2.tar.gz", "has_sig": false, "md5_digest": "a221ae8e81c35dd6876e164037c2bd85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6862, "upload_time": "2020-04-12T18:34:52", "upload_time_iso_8601": "2020-04-12T18:34:52.467041Z", "url": "https://files.pythonhosted.org/packages/05/ab/08f8417045dbebce1a0f0a0e647d813a6598384621a96475b624c4e6b2f7/natLight-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "92d0ed1ed12b9519860137ede990eca1", "sha256": "7276391e97939de3860dda58f6fccf81211260e297a34be275cc20c8302a5c0b"}, "downloads": -1, "filename": "natLight-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "92d0ed1ed12b9519860137ede990eca1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8037, "upload_time": "2020-04-12T18:47:25", "upload_time_iso_8601": "2020-04-12T18:47:25.131155Z", "url": "https://files.pythonhosted.org/packages/89/88/aa8b6bc2571e4940f420821cb87ba23c7c01def1b8748b7c1f9bb27cd573/natLight-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae7bd0748c7f1e737e5ca43ef05d2d6e", "sha256": "35c0a3b78c0e18e0ab983ecc68d6c1147df0886bb01057e902d830d34aa6c1b1"}, "downloads": -1, "filename": "natLight-0.3.tar.gz", "has_sig": false, "md5_digest": "ae7bd0748c7f1e737e5ca43ef05d2d6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6869, "upload_time": "2020-04-12T18:47:26", "upload_time_iso_8601": "2020-04-12T18:47:26.441517Z", "url": "https://files.pythonhosted.org/packages/ec/6b/6da7672b7aa73d7cdaee9fee7dcba4b6c6c2820b4f900315b6b598ec032a/natLight-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92d0ed1ed12b9519860137ede990eca1", "sha256": "7276391e97939de3860dda58f6fccf81211260e297a34be275cc20c8302a5c0b"}, "downloads": -1, "filename": "natLight-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "92d0ed1ed12b9519860137ede990eca1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8037, "upload_time": "2020-04-12T18:47:25", "upload_time_iso_8601": "2020-04-12T18:47:25.131155Z", "url": "https://files.pythonhosted.org/packages/89/88/aa8b6bc2571e4940f420821cb87ba23c7c01def1b8748b7c1f9bb27cd573/natLight-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae7bd0748c7f1e737e5ca43ef05d2d6e", "sha256": "35c0a3b78c0e18e0ab983ecc68d6c1147df0886bb01057e902d830d34aa6c1b1"}, "downloads": -1, "filename": "natLight-0.3.tar.gz", "has_sig": false, "md5_digest": "ae7bd0748c7f1e737e5ca43ef05d2d6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6869, "upload_time": "2020-04-12T18:47:26", "upload_time_iso_8601": "2020-04-12T18:47:26.441517Z", "url": "https://files.pythonhosted.org/packages/ec/6b/6da7672b7aa73d7cdaee9fee7dcba4b6c6c2820b4f900315b6b598ec032a/natLight-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:20 2020"}