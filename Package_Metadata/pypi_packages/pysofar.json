{"info": {"author": "Rufus Sofar", "author_email": "sofaroceangithubbot@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Sofar Ocean API Python Client\nPython Client for the Sofar Ocean Spotter API\n\n### Requirements\n- Python3 (Preferably 3.7) and pip\n- python-dotenv\n- requests\n- Pytest (If developing/Contributing)\n- Setuptools (If developing/Contributing)\n\n### Installation\n1. Make sure that you have the requirements listed above\n2. `pip install pysofar` to your desired python environment\n3. Create a file in your home directory (on unix `~/`) called `sofar_api.env`.\n    Put your API token and key inside in the format `WF_API_TOKEN=<token>` \n    We have included an example file named [ex.sofar_api.env](ex.sofar_api.env) in the\n    repository which you can copy (Just make sure to change the name and update the token\n    to match yours). If you do not currently have an API token, log into your sofar account \n    [here](https://spotter.sofarocean.com). Open the sidebar and click `api`. You should \n    see a section called `Authentication` which will have a button to generate a token. \n    You can also use this to update your token to a new one, should you desire.\n3. Test with `python3 -c 'import pysofar''`. If this runs successfully, chances are everything worked.\n4. If you wish to develop/contribute to this project see [contributing](contributing.md).\n\n### Basic Classes\nIncluded here are basic descriptions of some of the classes. Further documentation is provided\nwithin each function itself.\n\n## Sofar.py\n1. SofarApi: Initialize to get access most of the api endpoints\n- Properties:\n    - Devices (Spotters that belong to this account). List of Dictionaries of Id and Name\n    - Device Ids. List of the id's of the devices\n- Methods\n    - get_device_location_data: Most recent location data of the devices\n    - get_latest_data: Use to grab the latest data from a specific spotter\n    - update_spotter_name: Update the name of a specific spotter\n    - get_wave_data: Gets all of the wave data for all of the spotters in a date range\n    - get_wind_data: Same as above but for wind\n    - get_frequency_data: Same as above but for frequency\n    - get_track_data: Same as above but for tracking data\n    - get_all_data: Returns all of wave, wind, frequency, track for all spotters in a date range\n    - get_spotters: Returns Spotter objects updated with data values\n\n2. WaveDataQuery: Use for more fine tuned querying for a specific spotter\n- Methods:\n    - execute: Runs the query with the set parameters\n    - limit: Limit of how many results to return\n    - waves: Input True to include wave data in results\n    - wind: ^ but for winds\n    - track: ^ but for track\n    - frequency: ^ but for frequency\n    - directional_moments: Input true to include directional moments if frequency data is also included\n    - set_start_date: Set the start date of the data to be queried\n    - clear_start_date: No lower bound on the dates for the spotter data requested \n    - set_end_date: Sets the end date of data to be queried\n    - clear_end_date: No upper bound on the dates for the spotter data requested\n\n3. Miscellaneous Functions\n- get_and_update_spotters: Same as SofarApi.get_spotters but can be used standalone\n\n## Spotter.py\n1. Spotter: Class representing a spotter and its properties\n- Properties:\n    - id\n    - name\n    - mode\n    - lat\n    - lon\n    - battery_power\n    - battery_voltage\n    - solar_voltage\n    - humidity\n    - timestamp\n\n- Methods:\n    - change_name: Updates the spotters name\n    - update: Updates the spotters attributes with the latest data values\n    - latest_data: Gets latest_data from this spotter\n    - grab_data: More fine tuned data querying for this spotter\n\n\n### A small example\n```python\nfrom pysofar.sofar import SofarApi\nfrom pysofar.spotter import Spotter\n\n# init the api\napi = SofarApi()\n# get the devices belonging to you\ndevices = api.devices\nprint(devices)\n\n# grab spotter objects for the devices\nspotter_grid = api.get_spotters()\n# each array value is a spotter object\nspt_0 = spotter_grid[0]\nprint(spt_0.mode)\nprint(spt_0.lat)\nprint(spt_0.lon)\nprint(spt_0.timestamp)\n\n# Get most recent data from the above spotter with waves\nspt_0_dat = spt_0.latest_data()\nprint(spt_0_dat)\n\n# what if we want frequency data with directional moments as well\nspt_0_dat_freq = spt_0.latest_data(include_directional_moments=True)\nprint(spt_0_dat_freq)\n\n# What about a specific range of time with waves and track data\nspt_0_query = spt_0.grab_data(\n    limit=100,\n    start_date='2019-01-01',\n    end_date='2019-06-30',\n    include_track=True\n)\nprint(spt_0_query)\n\n# What if we want all data from all spotters over all time\n# this will take a few seconds\nall_dat = api.get_all_data()\nprint(all_dat.keys())\nprint(all_dat)\n```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wavespotter/wavefleet-client-python", "keywords": "", "license": "Apache 2 Licesnse", "maintainer": "", "maintainer_email": "", "name": "pysofar", "package_url": "https://pypi.org/project/pysofar/", "platform": "", "project_url": "https://pypi.org/project/pysofar/", "project_urls": {"Homepage": "https://github.com/wavespotter/wavefleet-client-python", "Sofar Api FAQ": "https://spotter.sofarocean.com/api", "Sofar Dashboard": "https://spotter.sofarocean.com/", "Sofar Ocean Site": "https://www.sofarocean.com", "Spotter About": "https://www.sofarocean.com/products/spotter", "Spotter Data FAQ": "https://www.sofarocean.com/posts/spotter-data-subscription-and-storage"}, "release_url": "https://pypi.org/project/pysofar/0.1.7/", "requires_dist": ["requests", "python-dotenv"], "requires_python": "", "summary": "Python client for interfacing with the Sofar Wavefleet API to access Spotter Data", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sofar Ocean API Python Client</h1>\n<p>Python Client for the Sofar Ocean Spotter API</p>\n<h3>Requirements</h3>\n<ul>\n<li>Python3 (Preferably 3.7) and pip</li>\n<li>python-dotenv</li>\n<li>requests</li>\n<li>Pytest (If developing/Contributing)</li>\n<li>Setuptools (If developing/Contributing)</li>\n</ul>\n<h3>Installation</h3>\n<ol>\n<li>Make sure that you have the requirements listed above</li>\n<li><code>pip install pysofar</code> to your desired python environment</li>\n<li>Create a file in your home directory (on unix <code>~/</code>) called <code>sofar_api.env</code>.\nPut your API token and key inside in the format <code>WF_API_TOKEN=&lt;token&gt;</code>\nWe have included an example file named <a href=\"ex.sofar_api.env\" rel=\"nofollow\">ex.sofar_api.env</a> in the\nrepository which you can copy (Just make sure to change the name and update the token\nto match yours). If you do not currently have an API token, log into your sofar account\n<a href=\"https://spotter.sofarocean.com\" rel=\"nofollow\">here</a>. Open the sidebar and click <code>api</code>. You should\nsee a section called <code>Authentication</code> which will have a button to generate a token.\nYou can also use this to update your token to a new one, should you desire.</li>\n<li>Test with <code>python3 -c 'import pysofar''</code>. If this runs successfully, chances are everything worked.</li>\n<li>If you wish to develop/contribute to this project see <a href=\"contributing.md\" rel=\"nofollow\">contributing</a>.</li>\n</ol>\n<h3>Basic Classes</h3>\n<p>Included here are basic descriptions of some of the classes. Further documentation is provided\nwithin each function itself.</p>\n<h2>Sofar.py</h2>\n<ol>\n<li>SofarApi: Initialize to get access most of the api endpoints</li>\n</ol>\n<ul>\n<li>Properties:\n<ul>\n<li>Devices (Spotters that belong to this account). List of Dictionaries of Id and Name</li>\n<li>Device Ids. List of the id's of the devices</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>get_device_location_data: Most recent location data of the devices</li>\n<li>get_latest_data: Use to grab the latest data from a specific spotter</li>\n<li>update_spotter_name: Update the name of a specific spotter</li>\n<li>get_wave_data: Gets all of the wave data for all of the spotters in a date range</li>\n<li>get_wind_data: Same as above but for wind</li>\n<li>get_frequency_data: Same as above but for frequency</li>\n<li>get_track_data: Same as above but for tracking data</li>\n<li>get_all_data: Returns all of wave, wind, frequency, track for all spotters in a date range</li>\n<li>get_spotters: Returns Spotter objects updated with data values</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>WaveDataQuery: Use for more fine tuned querying for a specific spotter</li>\n</ol>\n<ul>\n<li>Methods:\n<ul>\n<li>execute: Runs the query with the set parameters</li>\n<li>limit: Limit of how many results to return</li>\n<li>waves: Input True to include wave data in results</li>\n<li>wind: ^ but for winds</li>\n<li>track: ^ but for track</li>\n<li>frequency: ^ but for frequency</li>\n<li>directional_moments: Input true to include directional moments if frequency data is also included</li>\n<li>set_start_date: Set the start date of the data to be queried</li>\n<li>clear_start_date: No lower bound on the dates for the spotter data requested</li>\n<li>set_end_date: Sets the end date of data to be queried</li>\n<li>clear_end_date: No upper bound on the dates for the spotter data requested</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Miscellaneous Functions</li>\n</ol>\n<ul>\n<li>get_and_update_spotters: Same as SofarApi.get_spotters but can be used standalone</li>\n</ul>\n<h2>Spotter.py</h2>\n<ol>\n<li>Spotter: Class representing a spotter and its properties</li>\n</ol>\n<ul>\n<li>\n<p>Properties:</p>\n<ul>\n<li>id</li>\n<li>name</li>\n<li>mode</li>\n<li>lat</li>\n<li>lon</li>\n<li>battery_power</li>\n<li>battery_voltage</li>\n<li>solar_voltage</li>\n<li>humidity</li>\n<li>timestamp</li>\n</ul>\n</li>\n<li>\n<p>Methods:</p>\n<ul>\n<li>change_name: Updates the spotters name</li>\n<li>update: Updates the spotters attributes with the latest data values</li>\n<li>latest_data: Gets latest_data from this spotter</li>\n<li>grab_data: More fine tuned data querying for this spotter</li>\n</ul>\n</li>\n</ul>\n<h3>A small example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysofar.sofar</span> <span class=\"kn\">import</span> <span class=\"n\">SofarApi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pysofar.spotter</span> <span class=\"kn\">import</span> <span class=\"n\">Spotter</span>\n\n<span class=\"c1\"># init the api</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">SofarApi</span><span class=\"p\">()</span>\n<span class=\"c1\"># get the devices belonging to you</span>\n<span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">devices</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">devices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># grab spotter objects for the devices</span>\n<span class=\"n\">spotter_grid</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_spotters</span><span class=\"p\">()</span>\n<span class=\"c1\"># each array value is a spotter object</span>\n<span class=\"n\">spt_0</span> <span class=\"o\">=</span> <span class=\"n\">spotter_grid</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">mode</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">lat</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">lon</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get most recent data from the above spotter with waves</span>\n<span class=\"n\">spt_0_dat</span> <span class=\"o\">=</span> <span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">latest_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0_dat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># what if we want frequency data with directional moments as well</span>\n<span class=\"n\">spt_0_dat_freq</span> <span class=\"o\">=</span> <span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">latest_data</span><span class=\"p\">(</span><span class=\"n\">include_directional_moments</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0_dat_freq</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># What about a specific range of time with waves and track data</span>\n<span class=\"n\">spt_0_query</span> <span class=\"o\">=</span> <span class=\"n\">spt_0</span><span class=\"o\">.</span><span class=\"n\">grab_data</span><span class=\"p\">(</span>\n    <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">,</span>\n    <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-06-30'</span><span class=\"p\">,</span>\n    <span class=\"n\">include_track</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spt_0_query</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># What if we want all data from all spotters over all time</span>\n<span class=\"c1\"># this will take a few seconds</span>\n<span class=\"n\">all_dat</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">all_dat</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">all_dat</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6707040, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "194245996302e04b49a97088271f7e19", "sha256": "be099e0384fadb20073b618865023fe56b5b5b008915e7616b298d0418330e44"}, "downloads": -1, "filename": "pysofar-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "194245996302e04b49a97088271f7e19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15986, "upload_time": "2019-12-17T18:38:44", "upload_time_iso_8601": "2019-12-17T18:38:44.522881Z", "url": "https://files.pythonhosted.org/packages/ac/26/7cf8fc2468118895b268e59e790525e70f4605e3819d129dd9f1da3322c4/pysofar-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17b8dd10ce5939f2678986e791d8cae6", "sha256": "c5c799673eb011ef006f507f1556d96c96fb48cb1b780394d2c7cc8479f69c6b"}, "downloads": -1, "filename": "pysofar-0.1.2.tar.gz", "has_sig": false, "md5_digest": "17b8dd10ce5939f2678986e791d8cae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12148, "upload_time": "2019-12-17T18:38:46", "upload_time_iso_8601": "2019-12-17T18:38:46.781189Z", "url": "https://files.pythonhosted.org/packages/89/9a/64af40251e1ddef82a6a941cb5180244e4380a4627760768b7c27efae198/pysofar-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7888314c8bd7d158942583aa03cf5f8a", "sha256": "76b4abc7b7e40ebe2cc4b5e7862efe13121c0bd19ed1b5213f0e13700f5ba777"}, "downloads": -1, "filename": "pysofar-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7888314c8bd7d158942583aa03cf5f8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15974, "upload_time": "2020-01-08T20:34:50", "upload_time_iso_8601": "2020-01-08T20:34:50.260856Z", "url": "https://files.pythonhosted.org/packages/a8/c1/4e5430328f4be29fdea4143c2f2e0b32ab24851fe69356aa197c151029d3/pysofar-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bea811dae29851272a4b88096a811c1", "sha256": "6b9d67249b2b7ddd229c685d968aa3e052d3a19e94a587991dce9df05792e912"}, "downloads": -1, "filename": "pysofar-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2bea811dae29851272a4b88096a811c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12115, "upload_time": "2020-01-08T20:34:53", "upload_time_iso_8601": "2020-01-08T20:34:53.327476Z", "url": "https://files.pythonhosted.org/packages/c0/9b/9b584ba42c45f3b667f16547dfd68e1991549ce0e4fd5c3d7034a77cff23/pysofar-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e303eb0ff130b57c61414f907b2778e2", "sha256": "d66424207958c0594350053d31aa5a3ebe22eed13511159bfe0619e5551c6fa4"}, "downloads": -1, "filename": "pysofar-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e303eb0ff130b57c61414f907b2778e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16136, "upload_time": "2020-02-01T02:20:36", "upload_time_iso_8601": "2020-02-01T02:20:36.142776Z", "url": "https://files.pythonhosted.org/packages/f2/18/98543e2337bd482922824094616aefcd9870816a81c993f7112127a52d06/pysofar-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce229f0959a811de1fc329e4b8cf9be6", "sha256": "0fbc0151dd62633c43d630b1e472bd71be573254444a6ed0e041df52c94ddd57"}, "downloads": -1, "filename": "pysofar-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ce229f0959a811de1fc329e4b8cf9be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12271, "upload_time": "2020-02-01T02:20:38", "upload_time_iso_8601": "2020-02-01T02:20:38.571287Z", "url": "https://files.pythonhosted.org/packages/90/09/d47d8e189594b3f799bb13de1a062417913ee1b5ea2104a9c0e4035c4cc8/pysofar-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "cd4b4a742d182b501935163d4e7ee119", "sha256": "0b9b6135bdb315bf1dadac3fbded2bad60198098c50639d6c582a0542bf05d70"}, "downloads": -1, "filename": "pysofar-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "cd4b4a742d182b501935163d4e7ee119", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16133, "upload_time": "2020-02-06T00:13:23", "upload_time_iso_8601": "2020-02-06T00:13:23.999579Z", "url": "https://files.pythonhosted.org/packages/cf/d0/04a7f6f464221f5017f0b9c1e2a4b319459da39b282c5a6d8dc1c9ccf682/pysofar-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3405c67581c3bd830c2f46dbf7a20ba9", "sha256": "95b7921d4d9c65aec3afb7ff9ebabe4892697285c92b969c42113966ccb25116"}, "downloads": -1, "filename": "pysofar-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3405c67581c3bd830c2f46dbf7a20ba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12262, "upload_time": "2020-02-06T00:13:26", "upload_time_iso_8601": "2020-02-06T00:13:26.861609Z", "url": "https://files.pythonhosted.org/packages/1d/84/d77c416b9da02462411be773123b02d155e27ef55077be67fbc2cf33f32b/pysofar-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6f0008f0715cc28757f8d304ce262045", "sha256": "21a3e5d644f4afbcaf16548145cc23c2d24b1466192262cbb3e33f2bd6611e55"}, "downloads": -1, "filename": "pysofar-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6f0008f0715cc28757f8d304ce262045", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16179, "upload_time": "2020-02-11T17:50:00", "upload_time_iso_8601": "2020-02-11T17:50:00.688910Z", "url": "https://files.pythonhosted.org/packages/4f/6b/ddd3d80955131002943b39a2f8624af9e83150db2e16fec3d10df3c6c264/pysofar-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6aeb8b8b188e29ad4bb9fbb7aa28a0f", "sha256": "bdeb1d70e91458a49c380621bf00541e4c11ef6d6d2f1ef28d1f4fa2cc0b9a20"}, "downloads": -1, "filename": "pysofar-0.1.6.tar.gz", "has_sig": false, "md5_digest": "a6aeb8b8b188e29ad4bb9fbb7aa28a0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12307, "upload_time": "2020-02-11T17:50:02", "upload_time_iso_8601": "2020-02-11T17:50:02.014591Z", "url": "https://files.pythonhosted.org/packages/92/1e/58f3b46634f7c2aa5f960912edec58f3d6362895d353218721fd90fa7f59/pysofar-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2f9d6c9523e7dffe5db38c34f333e969", "sha256": "e330e2905ecb5893b58ede97c1a640e4dd6cc15a6f2d0c3562c2bebbd24d158c"}, "downloads": -1, "filename": "pysofar-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2f9d6c9523e7dffe5db38c34f333e969", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16513, "upload_time": "2020-02-26T22:40:00", "upload_time_iso_8601": "2020-02-26T22:40:00.314254Z", "url": "https://files.pythonhosted.org/packages/40/3c/77d1be4a4e48297dc45bbd355ff8b5edbb81acbbecdc6527982c21729412/pysofar-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8f00f3b0ca646ab5b53ebddc843fac0", "sha256": "52c4cfc1982936f1e7d83ec83ef5b1d6c901f9e00d979568b1bd10332bfb82c0"}, "downloads": -1, "filename": "pysofar-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d8f00f3b0ca646ab5b53ebddc843fac0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12565, "upload_time": "2020-02-26T22:40:01", "upload_time_iso_8601": "2020-02-26T22:40:01.742134Z", "url": "https://files.pythonhosted.org/packages/36/cf/95d34d7249a4558ddd991d540ce9e562514d762b879c9327d33ec940ac2c/pysofar-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f9d6c9523e7dffe5db38c34f333e969", "sha256": "e330e2905ecb5893b58ede97c1a640e4dd6cc15a6f2d0c3562c2bebbd24d158c"}, "downloads": -1, "filename": "pysofar-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2f9d6c9523e7dffe5db38c34f333e969", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16513, "upload_time": "2020-02-26T22:40:00", "upload_time_iso_8601": "2020-02-26T22:40:00.314254Z", "url": "https://files.pythonhosted.org/packages/40/3c/77d1be4a4e48297dc45bbd355ff8b5edbb81acbbecdc6527982c21729412/pysofar-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8f00f3b0ca646ab5b53ebddc843fac0", "sha256": "52c4cfc1982936f1e7d83ec83ef5b1d6c901f9e00d979568b1bd10332bfb82c0"}, "downloads": -1, "filename": "pysofar-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d8f00f3b0ca646ab5b53ebddc843fac0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12565, "upload_time": "2020-02-26T22:40:01", "upload_time_iso_8601": "2020-02-26T22:40:01.742134Z", "url": "https://files.pythonhosted.org/packages/36/cf/95d34d7249a4558ddd991d540ce9e562514d762b879c9327d33ec940ac2c/pysofar-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:25 2020"}