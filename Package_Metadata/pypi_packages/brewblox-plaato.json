{"info": {"author": "BrewPi", "author_email": "Development@brewpi.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 3.7", "Topic :: System :: Hardware"], "description": "# Boilerplate code for BrewBlox Service implementations\n\nThere is some boilerplate code involved when creating a Brewblox service. This repository can be forked to avoid having to do the boring configuration.\n\nEverything listed under **Required Changes** must be done before the package works as intended.\n\n## How to use\n\n* Fork this repository to your own Github account or project.\n* Follow all steps outlined under the various **Required Changes**.\n* Start coding your service =)\n    * To test, run `pipenv run pytest`\n\n\n## Files\n\n---\n### [setup.py](./setup.py)\nUsed to create a distributable and installable Python package. See https://docs.python.org/3.6/distutils/setupscript.html for more information.\n\n**Required Changes:**\n* Change the `name` variable to your project name. This is generally the same as the repository name. This name is used when installing the package through Pip. </br> It is common for this name to equal the package name, but using \"`-`\" as separator instead of \"`_`\".\n* Change the `url` parameter to the url of your repository.\n* Change the `author` parameter to your name.\n* Change the `author_email` parameter to your email.\n\n\n---\n### [tox.ini](./tox.ini)\nDeveloper tools such as [Tox](http://tox.readthedocs.io/en/latest/index.html), [Pytest](https://docs.pytest.org/en/latest/), [Flake8](http://flake8.pycqa.org/en/latest/), and [Autopep8](https://github.com/hhatto/autopep8) use this file to find configuration options.\n\n**Required Changes:**\n* Change `--cov=YOUR_PACKAGE` to refer to your module name.\n* The `--cov-fail-under=100` makes the build fail if code coverage is less than 100%. It is optional, but recommended. Remove the `#` comment character to enable it.\n\n\n---\n### [.env](./.env)\nProject-specific environment variables can be stored here. `Pipenv` will automatically load it when executing a command in `pipenv run`.\n\nBy default, the names of the Docker and Github repositories are stored here. They are read during the CI build.\n\n---\n### [Pipfile](./Pipfile)\n[Pipenv](https://docs.pipenv.org/) is used to streamline development. It manages dependencies and virtual environments. It also automatically loads environment variables declared in `.env`.\n\n`Pipfile` lists all dependencies. Everything under [packages] is needed for the package to run, while everything under [dev-packages] is needed to run the tests.\n\nYou can use `pipenv install <package name>` or `pipenv install --dev <package name>` to add dependencies.\n\n**Note:** There is overlap between the [packages] section in `Pipfile`, and the `install_requires=[]` list in `setup.py`. The rule of thumb is that if you need an external package to run, you should add it to both.\n\n**Required Changes:**\n* Install pipenv (run `sudo pip3 install pipenv`)\n* Update the `Pipfile.lock` file (run `pipenv lock`)\n* Install all packages (run `pipenv sync -d`)\n\n\n---\n### [MANIFEST.in](./MANIFEST.in)\nThis file lists all non-code files that should be part of the package.\nSee https://docs.python.org/3.6/distutils/sourcedist.html#specifying-the-files-to-distribute for more info.\n\nFor a basic service, you do not need to change anything in this file.\n\n\n---\n### [.editorconfig](./.editorconfig)\nThis file contains [EditorConfig](https://editorconfig.org/) configuration for this project. </br>\nAmong other things, it describes per file type whether it uses tabs or spaces.\n\nFor a basic service, you do not need to change anything in this file.\nHowever, it is recommended to use an editor that recognizes and uses `.editorconfig` files.\n\n\n---\n### [README.md](./README.md)\nYour module readme (this file). It will be the package description on Pypi.org, and automatically be displayed in Github.\n\n**Required Changes:**\n* Add all important info about your package here. What does your package do? How do you use it? What is your favorite color?\n\n\n---\n### [YOUR_PACKAGE/](./YOUR_PACKAGE/)\nYour module. This name is used when importing your code in Python.\n\n**Required Changes:**\n* Rename to the desired module name. This name can't include \"`-`\" characters. </br>\nIt is common for single-module projects to use \"`-`\" as a separator for the project name, and \"`_`\" for the module. </br>\nFor example: `your-package` and `your_package`.\n\n\n---\n### [test/conftest.py](./test/conftest.py)\nProject-level pytest fixtures. Some useful fixtures for testing any brewblox_service implementation are defined here. See tests in https://github.com/BrewBlox/brewblox-service/tree/develop/test for examples on how to use.\n\nFor a basic implementation, you do not need to change anything in this file.\n\n\n---\n### [test/test_hello.py](./test/test_hello.py)\nAn example on how to test aiohttp endpoints you added. Feel free to remove this once you no longer need it.\n\n\n---\n### [docker/amd/Dockerfile](./docker/amd/Dockerfile)\nA docker file for running your package. To build, you need to copy the local version of your python package to `docker/dist/` first.\n\nThe Dockerfiles are set up so both the AMD (desktop) and ARM variants can use the same input files.\n\nExample:\n```bash\npython3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements > docker/requirements.txt\n\ndocker build \\\n    --tag your-package:your-version \\\n    --file docker/amd/Dockerfile \\\n    docker/\n\n# run it\ndocker run your-package:your-version\n```\n\nTo cover the most common use cases, the `brewblox-tools` dependency defines the `bbt-localbuild` script.\n\nIt will read your .env file, run sdist, copy configuration to the docker directory, and build an image. Example:\n\n```bash\nbbt-localbuild\ndocker run your-package:local\n```\n\nExplore its other arguments with `bbt-localbuild --help`\n\n**Required Changes:**\n* Rename instances of `YOUR-PACKAGE` and `YOUR_PACKAGE` in the docker file to desired project and package names.\n\n\n---\n### [docker/arm/Dockerfile](./docker/arm/Dockerfile)\nThe same as for `docker/amd/Dockerfile`, but for Raspberry Pi targets.\n\nIn order to build for Raspberry, you must also first enable the ARM compiler.\n\nExample:\n```bash\npython3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements > docker/requirements.txt\n\n# Enable ARM compiler\ndocker run --rm --privileged multiarch/qemu-user-static:register --reset\n\n# Build the Raspberry Pi version\ndocker build \\\n    --tag your-package:rpi-your-version \\\n    --file docker/arm/Dockerfile \\\n    docker/\n\n# Try to run Raspberry version\n# On the desktop, this will fail with \"standard_init_linux.go:190: exec user process caused \"exec format error\"\"\ndocker run --detach your-package:rpi-your-version\n```\n\n`bbt-localbuild` can also generate ARM images. It will automatically enable the QEMU compiler, and prefix the tag with `rpi-`. To use:\n\n```\nbbt-localbuild --arch arm\ndocker run your-package:rpi-local\n```\n\n**Required Changes:**\n* Rename instances of `YOUR-PACKAGE` and `YOUR_PACKAGE` in the docker file to desired project and package names.\n\n\n---\n### [azure-pipelines.yml](./azure-pipelines.yml)\n[Azure](https://dev.azure.com) can automatically test and deploy all commits you push to GitHub. If you haven't enabled Azure Pipelines for your repository: don't worry, it won't do anything.\n\nTo deploy your software, you will also need [PyPi](https://pypi.org/) and [Docker Hub](https://hub.docker.com/) accounts.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BrewBlox/brewblox-plaato", "keywords": "brewing brewpi brewblox embedded plugin service", "license": "", "maintainer": "", "maintainer_email": "", "name": "brewblox-plaato", "package_url": "https://pypi.org/project/brewblox-plaato/", "platform": "", "project_url": "https://pypi.org/project/brewblox-plaato/", "project_urls": {"Homepage": "https://github.com/BrewBlox/brewblox-plaato"}, "release_url": "https://pypi.org/project/brewblox-plaato/0.1.0/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Integration with the Plaato airlock", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Boilerplate code for BrewBlox Service implementations</h1>\n<p>There is some boilerplate code involved when creating a Brewblox service. This repository can be forked to avoid having to do the boring configuration.</p>\n<p>Everything listed under <strong>Required Changes</strong> must be done before the package works as intended.</p>\n<h2>How to use</h2>\n<ul>\n<li>Fork this repository to your own Github account or project.</li>\n<li>Follow all steps outlined under the various <strong>Required Changes</strong>.</li>\n<li>Start coding your service =)\n<ul>\n<li>To test, run <code>pipenv run pytest</code></li>\n</ul>\n</li>\n</ul>\n<h2>Files</h2>\n<hr>\n<h3><a href=\"./setup.py\" rel=\"nofollow\">setup.py</a></h3>\n<p>Used to create a distributable and installable Python package. See <a href=\"https://docs.python.org/3.6/distutils/setupscript.html\" rel=\"nofollow\">https://docs.python.org/3.6/distutils/setupscript.html</a> for more information.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Change the <code>name</code> variable to your project name. This is generally the same as the repository name. This name is used when installing the package through Pip. <br> It is common for this name to equal the package name, but using \"<code>-</code>\" as separator instead of \"<code>_</code>\".</li>\n<li>Change the <code>url</code> parameter to the url of your repository.</li>\n<li>Change the <code>author</code> parameter to your name.</li>\n<li>Change the <code>author_email</code> parameter to your email.</li>\n</ul>\n<hr>\n<h3><a href=\"./tox.ini\" rel=\"nofollow\">tox.ini</a></h3>\n<p>Developer tools such as <a href=\"http://tox.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">Tox</a>, <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">Pytest</a>, <a href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\">Flake8</a>, and <a href=\"https://github.com/hhatto/autopep8\" rel=\"nofollow\">Autopep8</a> use this file to find configuration options.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Change <code>--cov=YOUR_PACKAGE</code> to refer to your module name.</li>\n<li>The <code>--cov-fail-under=100</code> makes the build fail if code coverage is less than 100%. It is optional, but recommended. Remove the <code>#</code> comment character to enable it.</li>\n</ul>\n<hr>\n<h3><a href=\"./.env\" rel=\"nofollow\">.env</a></h3>\n<p>Project-specific environment variables can be stored here. <code>Pipenv</code> will automatically load it when executing a command in <code>pipenv run</code>.</p>\n<p>By default, the names of the Docker and Github repositories are stored here. They are read during the CI build.</p>\n<hr>\n<h3><a href=\"./Pipfile\" rel=\"nofollow\">Pipfile</a></h3>\n<p><a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">Pipenv</a> is used to streamline development. It manages dependencies and virtual environments. It also automatically loads environment variables declared in <code>.env</code>.</p>\n<p><code>Pipfile</code> lists all dependencies. Everything under [packages] is needed for the package to run, while everything under [dev-packages] is needed to run the tests.</p>\n<p>You can use <code>pipenv install &lt;package name&gt;</code> or <code>pipenv install --dev &lt;package name&gt;</code> to add dependencies.</p>\n<p><strong>Note:</strong> There is overlap between the [packages] section in <code>Pipfile</code>, and the <code>install_requires=[]</code> list in <code>setup.py</code>. The rule of thumb is that if you need an external package to run, you should add it to both.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Install pipenv (run <code>sudo pip3 install pipenv</code>)</li>\n<li>Update the <code>Pipfile.lock</code> file (run <code>pipenv lock</code>)</li>\n<li>Install all packages (run <code>pipenv sync -d</code>)</li>\n</ul>\n<hr>\n<h3><a href=\"./MANIFEST.in\" rel=\"nofollow\">MANIFEST.in</a></h3>\n<p>This file lists all non-code files that should be part of the package.\nSee <a href=\"https://docs.python.org/3.6/distutils/sourcedist.html#specifying-the-files-to-distribute\" rel=\"nofollow\">https://docs.python.org/3.6/distutils/sourcedist.html#specifying-the-files-to-distribute</a> for more info.</p>\n<p>For a basic service, you do not need to change anything in this file.</p>\n<hr>\n<h3><a href=\"./.editorconfig\" rel=\"nofollow\">.editorconfig</a></h3>\n<p>This file contains <a href=\"https://editorconfig.org/\" rel=\"nofollow\">EditorConfig</a> configuration for this project. <br>\nAmong other things, it describes per file type whether it uses tabs or spaces.</p>\n<p>For a basic service, you do not need to change anything in this file.\nHowever, it is recommended to use an editor that recognizes and uses <code>.editorconfig</code> files.</p>\n<hr>\n<h3><a href=\"./README.md\" rel=\"nofollow\">README.md</a></h3>\n<p>Your module readme (this file). It will be the package description on Pypi.org, and automatically be displayed in Github.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Add all important info about your package here. What does your package do? How do you use it? What is your favorite color?</li>\n</ul>\n<hr>\n<h3><a href=\"./YOUR_PACKAGE/\" rel=\"nofollow\">YOUR_PACKAGE/</a></h3>\n<p>Your module. This name is used when importing your code in Python.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Rename to the desired module name. This name can't include \"<code>-</code>\" characters. <br>\nIt is common for single-module projects to use \"<code>-</code>\" as a separator for the project name, and \"<code>_</code>\" for the module. <br>\nFor example: <code>your-package</code> and <code>your_package</code>.</li>\n</ul>\n<hr>\n<h3><a href=\"./test/conftest.py\" rel=\"nofollow\">test/conftest.py</a></h3>\n<p>Project-level pytest fixtures. Some useful fixtures for testing any brewblox_service implementation are defined here. See tests in <a href=\"https://github.com/BrewBlox/brewblox-service/tree/develop/test\" rel=\"nofollow\">https://github.com/BrewBlox/brewblox-service/tree/develop/test</a> for examples on how to use.</p>\n<p>For a basic implementation, you do not need to change anything in this file.</p>\n<hr>\n<h3><a href=\"./test/test_hello.py\" rel=\"nofollow\">test/test_hello.py</a></h3>\n<p>An example on how to test aiohttp endpoints you added. Feel free to remove this once you no longer need it.</p>\n<hr>\n<h3><a href=\"./docker/amd/Dockerfile\" rel=\"nofollow\">docker/amd/Dockerfile</a></h3>\n<p>A docker file for running your package. To build, you need to copy the local version of your python package to <code>docker/dist/</code> first.</p>\n<p>The Dockerfiles are set up so both the AMD (desktop) and ARM variants can use the same input files.</p>\n<p>Example:</p>\n<pre>python3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements &gt; docker/requirements.txt\n\ndocker build <span class=\"se\">\\</span>\n    --tag your-package:your-version <span class=\"se\">\\</span>\n    --file docker/amd/Dockerfile <span class=\"se\">\\</span>\n    docker/\n\n<span class=\"c1\"># run it</span>\ndocker run your-package:your-version\n</pre>\n<p>To cover the most common use cases, the <code>brewblox-tools</code> dependency defines the <code>bbt-localbuild</code> script.</p>\n<p>It will read your .env file, run sdist, copy configuration to the docker directory, and build an image. Example:</p>\n<pre>bbt-localbuild\ndocker run your-package:local\n</pre>\n<p>Explore its other arguments with <code>bbt-localbuild --help</code></p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Rename instances of <code>YOUR-PACKAGE</code> and <code>YOUR_PACKAGE</code> in the docker file to desired project and package names.</li>\n</ul>\n<hr>\n<h3><a href=\"./docker/arm/Dockerfile\" rel=\"nofollow\">docker/arm/Dockerfile</a></h3>\n<p>The same as for <code>docker/amd/Dockerfile</code>, but for Raspberry Pi targets.</p>\n<p>In order to build for Raspberry, you must also first enable the ARM compiler.</p>\n<p>Example:</p>\n<pre>python3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements &gt; docker/requirements.txt\n\n<span class=\"c1\"># Enable ARM compiler</span>\ndocker run --rm --privileged multiarch/qemu-user-static:register --reset\n\n<span class=\"c1\"># Build the Raspberry Pi version</span>\ndocker build <span class=\"se\">\\</span>\n    --tag your-package:rpi-your-version <span class=\"se\">\\</span>\n    --file docker/arm/Dockerfile <span class=\"se\">\\</span>\n    docker/\n\n<span class=\"c1\"># Try to run Raspberry version</span>\n<span class=\"c1\"># On the desktop, this will fail with \"standard_init_linux.go:190: exec user process caused \"exec format error\"\"</span>\ndocker run --detach your-package:rpi-your-version\n</pre>\n<p><code>bbt-localbuild</code> can also generate ARM images. It will automatically enable the QEMU compiler, and prefix the tag with <code>rpi-</code>. To use:</p>\n<pre><code>bbt-localbuild --arch arm\ndocker run your-package:rpi-local\n</code></pre>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Rename instances of <code>YOUR-PACKAGE</code> and <code>YOUR_PACKAGE</code> in the docker file to desired project and package names.</li>\n</ul>\n<hr>\n<h3><a href=\"./azure-pipelines.yml\" rel=\"nofollow\">azure-pipelines.yml</a></h3>\n<p><a href=\"https://dev.azure.com\" rel=\"nofollow\">Azure</a> can automatically test and deploy all commits you push to GitHub. If you haven't enabled Azure Pipelines for your repository: don't worry, it won't do anything.</p>\n<p>To deploy your software, you will also need <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a> and <a href=\"https://hub.docker.com/\" rel=\"nofollow\">Docker Hub</a> accounts.</p>\n\n          </div>"}, "last_serial": 6836600, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1ec5689a1c80be538db13001e1dd7a9b", "sha256": "41dc2a2ee1803e9b3e1b30598bc978910ac3b383fda37589c00d774a7c58b99b"}, "downloads": -1, "filename": "brewblox-plaato-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1ec5689a1c80be538db13001e1dd7a9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 35772, "upload_time": "2019-09-19T08:24:27", "upload_time_iso_8601": "2019-09-19T08:24:27.342794Z", "url": "https://files.pythonhosted.org/packages/72/18/3e0e02726ddcd35601f41e6b5d8dd1ed568a82c40338d0613c4fcdb58f1d/brewblox-plaato-0.1.0.tar.gz", "yanked": false}], "0.1.1.dev1": [{"comment_text": "", "digests": {"md5": "b8e4377ce68f3a1850a0874abae425fb", "sha256": "602478ea3fb4130498890e515bc67580fdf38a1d3235832df8d31b958f0d0751"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev1.tar.gz", "has_sig": false, "md5_digest": "b8e4377ce68f3a1850a0874abae425fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 29890, "upload_time": "2019-09-19T09:17:35", "upload_time_iso_8601": "2019-09-19T09:17:35.860891Z", "url": "https://files.pythonhosted.org/packages/7d/df/3665a3abcb2183bd6261406400986b116870e2be0cd7e25e3152403ee3b4/brewblox-plaato-0.1.1.dev1.tar.gz", "yanked": false}], "0.1.1.dev10": [{"comment_text": "", "digests": {"md5": "254b219854f3c12947fe9fe3f30b7b8b", "sha256": "b06bd0ed578fd9c146e17953ccf95966bddad21af3a96fe8e4f61b5e202312f0"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev10.tar.gz", "has_sig": false, "md5_digest": "254b219854f3c12947fe9fe3f30b7b8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 31576, "upload_time": "2019-11-27T15:38:56", "upload_time_iso_8601": "2019-11-27T15:38:56.214014Z", "url": "https://files.pythonhosted.org/packages/41/33/b595e7ca03410e1b6f3d2785ebc837749f3407f9bcbdf34bb99a2d1230f0/brewblox-plaato-0.1.1.dev10.tar.gz", "yanked": false}], "0.1.1.dev12": [{"comment_text": "", "digests": {"md5": "98729a654c5e0d11c08115177f14a044", "sha256": "159d5dafa42382fc88846b752f67d4b2b842e12d41a5e0afd3875f786087010c"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev12.tar.gz", "has_sig": false, "md5_digest": "98729a654c5e0d11c08115177f14a044", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 31579, "upload_time": "2019-12-03T16:28:22", "upload_time_iso_8601": "2019-12-03T16:28:22.551260Z", "url": "https://files.pythonhosted.org/packages/66/c2/bf1878c2f927986242a863b33ab1981acbfe9b3e45ecfd314ba795cc57d3/brewblox-plaato-0.1.1.dev12.tar.gz", "yanked": false}], "0.1.1.dev14": [{"comment_text": "", "digests": {"md5": "7e5d93aefdb6d63b61c8f4375e595592", "sha256": "c334d33a0752035121dee43f47380ba0883abba4b2e15fe60ad50e5b82a36358"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev14.tar.gz", "has_sig": false, "md5_digest": "7e5d93aefdb6d63b61c8f4375e595592", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 32553, "upload_time": "2019-12-11T14:13:25", "upload_time_iso_8601": "2019-12-11T14:13:25.534238Z", "url": "https://files.pythonhosted.org/packages/95/e1/7f37c72a44f382b2d17354cde59b9fb98daa1170c27131a91d941d45e314/brewblox-plaato-0.1.1.dev14.tar.gz", "yanked": false}], "0.1.1.dev15": [{"comment_text": "", "digests": {"md5": "31e389cca0cfe74c28f08f6374ae3de6", "sha256": "960370b7bfe507c065f791458c88948b043af3253f80bfef856cd38ad0fcc210"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev15.tar.gz", "has_sig": false, "md5_digest": "31e389cca0cfe74c28f08f6374ae3de6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 32527, "upload_time": "2019-12-06T16:41:55", "upload_time_iso_8601": "2019-12-06T16:41:55.430210Z", "url": "https://files.pythonhosted.org/packages/bf/0d/1fe51de43c5942a891fea1e5ab03061b7e06a1105f34548cc6cdda8fd4e9/brewblox-plaato-0.1.1.dev15.tar.gz", "yanked": false}], "0.1.1.dev18": [{"comment_text": "", "digests": {"md5": "8c96b57e04c8ddecd7a2b45cbbaed418", "sha256": "2cb5e59d74e6a58b5aa3d421397574c98e48f992ff099bd1b74ad7a0e73b5e60"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev18.tar.gz", "has_sig": false, "md5_digest": "8c96b57e04c8ddecd7a2b45cbbaed418", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 32891, "upload_time": "2020-01-31T17:41:07", "upload_time_iso_8601": "2020-01-31T17:41:07.559221Z", "url": "https://files.pythonhosted.org/packages/66/d5/cc639ac059daecf6736965e054d65ee43437df5d95609e12584909ac747f/brewblox-plaato-0.1.1.dev18.tar.gz", "yanked": false}], "0.1.1.dev19": [{"comment_text": "", "digests": {"md5": "1d9054f9da314b13a6731f132bd68d95", "sha256": "ae77f0efffa30c9a54e358fad3d1d7609efa89d69d71db490357bf43e7bbe123"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev19.tar.gz", "has_sig": false, "md5_digest": "1d9054f9da314b13a6731f132bd68d95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 32577, "upload_time": "2019-12-11T14:45:19", "upload_time_iso_8601": "2019-12-11T14:45:19.323862Z", "url": "https://files.pythonhosted.org/packages/1f/cf/6dfef733e9814202e99b7a3f08e284a60a2cb883ef5b6390d163c2d8b532/brewblox-plaato-0.1.1.dev19.tar.gz", "yanked": false}], "0.1.1.dev20": [{"comment_text": "", "digests": {"md5": "9caca54e5bbdb02ebb2e778e49aebcfa", "sha256": "52dd2f5da6df9d65dd0909dd1f60d2a4576a13e306466983dba0bd74502704cf"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev20.tar.gz", "has_sig": false, "md5_digest": "9caca54e5bbdb02ebb2e778e49aebcfa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 32891, "upload_time": "2020-02-11T16:10:18", "upload_time_iso_8601": "2020-02-11T16:10:18.232945Z", "url": "https://files.pythonhosted.org/packages/bd/2d/d7c7f9e628fc86f5ae5a3b55f641572ccfcc3c1b6e9bd884a87ee314c098/brewblox-plaato-0.1.1.dev20.tar.gz", "yanked": false}], "0.1.1.dev22": [{"comment_text": "", "digests": {"md5": "cd6c4e99ac1a3c9ffb234431a7d19375", "sha256": "c1e6debb5faa63763850548970972bbcafe8f5b6349fc2f196bcfbc27fb70e2a"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev22.tar.gz", "has_sig": false, "md5_digest": "cd6c4e99ac1a3c9ffb234431a7d19375", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 33064, "upload_time": "2020-02-16T23:50:49", "upload_time_iso_8601": "2020-02-16T23:50:49.538383Z", "url": "https://files.pythonhosted.org/packages/5e/57/5a42257df2f2ef2aa91b0f5486e35fc053a4816651074f1876b4bd8dd0c8/brewblox-plaato-0.1.1.dev22.tar.gz", "yanked": false}], "0.1.1.dev24": [{"comment_text": "", "digests": {"md5": "e0316c62f32371378cd8166ffb0f0ed3", "sha256": "42e3f12b766a0b7ca8c7524b62815f04e9d627009876cea8114a5fdfb4940a5d"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev24.tar.gz", "has_sig": false, "md5_digest": "e0316c62f32371378cd8166ffb0f0ed3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 33061, "upload_time": "2020-03-09T14:38:49", "upload_time_iso_8601": "2020-03-09T14:38:49.077450Z", "url": "https://files.pythonhosted.org/packages/20/90/388fd7fc9870a6dba60e573f01795fc620f77499cf94d111f1a045b2a619/brewblox-plaato-0.1.1.dev24.tar.gz", "yanked": false}], "0.1.1.dev25": [{"comment_text": "", "digests": {"md5": "ded964767b55b20f4f9e294a57ecac73", "sha256": "a671b217684d67064e08bfd40859e30538258a28bccb7bd0e6ee766b393cb5ed"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev25.tar.gz", "has_sig": false, "md5_digest": "ded964767b55b20f4f9e294a57ecac73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 32882, "upload_time": "2020-02-12T18:09:01", "upload_time_iso_8601": "2020-02-12T18:09:01.768636Z", "url": "https://files.pythonhosted.org/packages/5b/68/58a49a7275f7c19221f47ac1dbf8cd92dc64ac0972ccc7965410a62974ba/brewblox-plaato-0.1.1.dev25.tar.gz", "yanked": false}], "0.1.1.dev28": [{"comment_text": "", "digests": {"md5": "9c3df3384f3cbb1e8573179263c5c848", "sha256": "c036d73d250d6c39ac87118445a23d208bfdd4b3f683e337967310d38756cd9a"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev28.tar.gz", "has_sig": false, "md5_digest": "9c3df3384f3cbb1e8573179263c5c848", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 33066, "upload_time": "2020-03-02T15:43:10", "upload_time_iso_8601": "2020-03-02T15:43:10.926909Z", "url": "https://files.pythonhosted.org/packages/71/1a/ffa0c7986a29a91fd3544d84a935afc3ee83d252e6e81b98b74de19f6430/brewblox-plaato-0.1.1.dev28.tar.gz", "yanked": false}], "0.1.1.dev3": [{"comment_text": "", "digests": {"md5": "7f1b327e92dd61f383642688ab944456", "sha256": "489be7872a34087785f65c40482b7e498e833cc863c61591aa5152f963a407ea"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev3.tar.gz", "has_sig": false, "md5_digest": "7f1b327e92dd61f383642688ab944456", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 30306, "upload_time": "2019-09-19T10:03:32", "upload_time_iso_8601": "2019-09-19T10:03:32.448642Z", "url": "https://files.pythonhosted.org/packages/21/48/2d622b14e5629fa4ce56a88e54c33a6b287bde7de64d041a53638490f176/brewblox-plaato-0.1.1.dev3.tar.gz", "yanked": false}], "0.1.1.dev31": [{"comment_text": "", "digests": {"md5": "254651313774c366c96234acb29726e0", "sha256": "143e2455e37f4fb5a87c18bb1a1d0d2f88e77c51703b4be321d9e2e1bf4aef47"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev31.tar.gz", "has_sig": false, "md5_digest": "254651313774c366c96234acb29726e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 33064, "upload_time": "2020-03-18T14:42:36", "upload_time_iso_8601": "2020-03-18T14:42:36.160342Z", "url": "https://files.pythonhosted.org/packages/78/24/cea0a2adf86bc9096caa2a023acaacadd3d151af2282d8e0a470921fa4e7/brewblox-plaato-0.1.1.dev31.tar.gz", "yanked": false}], "0.1.1.dev5": [{"comment_text": "", "digests": {"md5": "0a2701b0ee324d16464eebcea684e016", "sha256": "a3de1c7968ee78a57c181c1d8a82b24e769c3a9fc94053e179b64cc586ad0a2c"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev5.tar.gz", "has_sig": false, "md5_digest": "0a2701b0ee324d16464eebcea684e016", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 31105, "upload_time": "2019-09-19T17:09:49", "upload_time_iso_8601": "2019-09-19T17:09:49.000310Z", "url": "https://files.pythonhosted.org/packages/aa/4f/b73ff56251dbf15233b5050d8ce4bd826d39df67f231f3afaf521b4c7d8f/brewblox-plaato-0.1.1.dev5.tar.gz", "yanked": false}], "0.1.1.dev6": [{"comment_text": "", "digests": {"md5": "0088027e26ddbccb2ea59b908b3393b0", "sha256": "45219eae21190ce487fb8283628744317151ec539285f7946b6e6e05b3b1718f"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev6.tar.gz", "has_sig": false, "md5_digest": "0088027e26ddbccb2ea59b908b3393b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 31107, "upload_time": "2019-09-19T19:37:44", "upload_time_iso_8601": "2019-09-19T19:37:44.157107Z", "url": "https://files.pythonhosted.org/packages/e1/97/ec39d769f639a10ca12750ddb24f34dfa3af124c66bf9c287d5c908398c0/brewblox-plaato-0.1.1.dev6.tar.gz", "yanked": false}], "0.1.1.dev8": [{"comment_text": "", "digests": {"md5": "cd179c36af462af0ac7a583d41a1ce08", "sha256": "e415b104f841959bda9692999b184198b511f44028061adcc37b1460976fbb61"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev8.tar.gz", "has_sig": false, "md5_digest": "cd179c36af462af0ac7a583d41a1ce08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 32243, "upload_time": "2019-09-20T09:31:20", "upload_time_iso_8601": "2019-09-20T09:31:20.428164Z", "url": "https://files.pythonhosted.org/packages/9d/db/621fe789f6cf84a24b42a745666a265b6c159c281258ca2e11eac581258d/brewblox-plaato-0.1.1.dev8.tar.gz", "yanked": false}], "0.1.1.dev9": [{"comment_text": "", "digests": {"md5": "dbf4762cf97fa453b230bde589b89b85", "sha256": "3ba33da6c340ec678f0ad6d5e8934a7e99fa10811f08fab33003d79086fdec88"}, "downloads": -1, "filename": "brewblox-plaato-0.1.1.dev9.tar.gz", "has_sig": false, "md5_digest": "dbf4762cf97fa453b230bde589b89b85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 32245, "upload_time": "2019-10-01T13:57:15", "upload_time_iso_8601": "2019-10-01T13:57:15.222068Z", "url": "https://files.pythonhosted.org/packages/95/53/e1b87b4b0ba4bc2c124ba7c4536ca522fee23c9dcf7866d09a26d4f3ae5c/brewblox-plaato-0.1.1.dev9.tar.gz", "yanked": false}], "0.1.dev68": [{"comment_text": "", "digests": {"md5": "cc63fa646ea331297899813cda6e01cb", "sha256": "2152e9a03bae4fa240764b631bba59938ce928482c7bf7d611b472d34778ac95"}, "downloads": -1, "filename": "brewblox-plaato-0.1.dev68.tar.gz", "has_sig": false, "md5_digest": "cc63fa646ea331297899813cda6e01cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 35791, "upload_time": "2019-09-19T08:11:30", "upload_time_iso_8601": "2019-09-19T08:11:30.559233Z", "url": "https://files.pythonhosted.org/packages/92/3a/d88a1c567cb47f552535dfe1e1f208bd0b504a1086b0a43b98e85b270742/brewblox-plaato-0.1.dev68.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ec5689a1c80be538db13001e1dd7a9b", "sha256": "41dc2a2ee1803e9b3e1b30598bc978910ac3b383fda37589c00d774a7c58b99b"}, "downloads": -1, "filename": "brewblox-plaato-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1ec5689a1c80be538db13001e1dd7a9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 35772, "upload_time": "2019-09-19T08:24:27", "upload_time_iso_8601": "2019-09-19T08:24:27.342794Z", "url": "https://files.pythonhosted.org/packages/72/18/3e0e02726ddcd35601f41e6b5d8dd1ed568a82c40338d0613c4fcdb58f1d/brewblox-plaato-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:20 2020"}