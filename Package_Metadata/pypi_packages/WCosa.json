{"info": {"author": "Deep Dhillon, Jeff Niu", "author_email": "deep@deepdhillon.com, jeffniu22@gmail.com, ambareeshbalaji@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta"], "description": "Waterloop Cosa\n==============\n\nWaterloop Cosa is a commandline tool used to help create, build, and\nupload AVR projects built using Cosa, an object-oriented platform for\nArduino. This project is built on top of\n`arduino-cmake <https://github.com/arduino-cmake/arduino-cmake>`__ to\nprovide a CMake toolchain for Cosa, and wrapped in a Python script.\n\nCosa\n----\n\n`Cosa <https://github.com/mikaelpatel/Cosa>`__ boasts better performance\nand lower power consumption, while more powerful but complex than\nstandard Arduino libraries. Cosa, being object oriented integrates well\nwith other C++ program written in OOP style.\n\nWCosa\n-----\n\nThis project provides ``wcosa``, a build script written in Python. The\nscript allows user to ``create``, ``build``, ``upload``, and ``monitor``\nAVR projects. This tool uses the ``cmake`` toolchain behind the scenes.\nRunning the creation scripts generates a project with the structure\n\n::\n\n    project/\n        lib/\n        src/\n        wcosa/\n            bin/\n            CMakeLists.txt\n        .gitignore\n        config.json\n        CMakeLists.txt\n        CMakeListsPrivate.txt\n\nSources files should be placed in the ``src`` directory, and libraries\nshould be placed in folders inside the ``lib`` directory. Build files\nare contained in ``wcosa`` and needs to be generated for each\nenvironment that is running the WCosa project.\n\nCommands and Usage\n------------------\n\nUsing commands has the format ``wcosa [action]`` where ``[action]`` is\none of ``create``, ``update``, ``build``, ``clean``, ``upload``.\n\nHere is an example of creating a project:\n\n.. code:: bash\n\n    mkdir wcosa-project\n    cd wcosa-project\n    wcosa create --board uno --ide clion\n\nThe ``--board`` flag specifies the desired target board for project\nbuild, and ``--ide clion`` tells WCosa to generate files to enable\nproject import into ``CLion`` for code suggestion and completion. Use\n``wcosa boards`` to see the list of available boards, supported Cosa.\nThis command will generate environment-specific files such as\n``CMakeListsPrivate.txt`` and the ``wcosa`` folder.\n\nTo build the project, creating uploadable binaries, use ``wcosa build``,\nand to clean the project, run ``wcosa clean``. If a microcontroller is\nplugged into your PC, running ``wcosa upload`` will attempt to\nautodetect the port and upload the program. If you have multiple\nmicrocontrollers or if WCosa cannot detect the port, use\n``wcosa upload --port [port_name]`` to specify the desired upload port.\n\nThe command ``wcosa update`` can be used to update the target board with\n``wcosa update --board [new_board]`` or if ``config.json`` is modified.\nTo add build definitions to the main project or to submodules, modify\n``build-flags`` to something as\n\n.. code:: json\n\n    {\n        \"build-flags\": \"MAX_ALLOCATORS=4u STATIC_MEMORY\"\n    }\n\nTo specify definitions for modules added under ``lib``,\n\n.. code:: json\n\n    {\n        \"build-flags\": \"...\",\n        \"module-flags\": {\n            \"wlib\": \"BLOCK_SIZE=64u NUM_BLOCKS=400u\"\n        }\n    }\n\nThen run ``wcosa update`` to update the internal config.\n\nThe command ``wcosa update`` should also be called when checking out a\nproject from source control to create the environment files. For\nexample,\n\n.. code:: bash\n\n    git clone --recursive https://github.com/teamwaterloop/goose-sensors.git\n    cd goose-sensors\n    wcosa update\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install wcosa\n\nWCosa requires either ``gcc-avr`` or the Arduino SDK to be installed.\n**CMake** is also required to build projects.\n\nWindows\n~~~~~~~\n\nWe recommend installing the Arduino SDK. 1. Download and install the\n`Arduino IDE <https://www.arduino.cc/en/Main/Software>`__ 2. Add the\nArduino installation directory and the subdirectory\n``\\hardware\\tools\\avr\\bin`` to your System PATH; these may look like \\*\n``C:\\Program Files (x86)\\Arduino`` \\*\n``C:\\Program Files (x86)\\Arduino\\hardware\\tools\\bin``\n\nThere are some `avr-gcc <http://blog.zakkemble.co.uk/avr-gcc-builds/>`__\nbuilds available for Windows but these are untested.\n\nLinux\n~~~~~\n\nYou may choose to install the Arduino SDK or the required tools and\nbinaries from the commandline.\n\n**Ubuntu**\n\n.. code:: bash\n\n    sudo apt-get install gcc-avr avr-libc avrdude\n\n**Arch**\n\n.. code:: bash\n\n    sudo pacman -S avr-gcc avr-libc avrdude\n\nMacOS\n~~~~~\n\nYou may install the Arduino SDK or build ``avr-gcc`` using ``brew``.\nKeep in mind that building ``avr-gcc`` may take some time.\n\n.. code:: bash\n\n    xcode-select --install\n    brew tap osx-cross/avr\n    brew install avr-gcc\n    brew install avrdude\n\nCommitters\n----------\n\nDeep Dhillon (@dhillondeep) Jeff Niu (@mogball)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "iot", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "WCosa", "package_url": "https://pypi.org/project/WCosa/", "platform": "", "project_url": "https://pypi.org/project/WCosa/", "project_urls": null, "release_url": "https://pypi.org/project/WCosa/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Create, Build, Upload and Monitor AVR Cosa Projects", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Waterloop Cosa is a commandline tool used to help create, build, and\nupload AVR projects built using Cosa, an object-oriented platform for\nArduino. This project is built on top of\n<a href=\"https://github.com/arduino-cmake/arduino-cmake\" rel=\"nofollow\">arduino-cmake</a> to\nprovide a CMake toolchain for Cosa, and wrapped in a Python script.</p>\n<div id=\"cosa\">\n<h2>Cosa</h2>\n<p><a href=\"https://github.com/mikaelpatel/Cosa\" rel=\"nofollow\">Cosa</a> boasts better performance\nand lower power consumption, while more powerful but complex than\nstandard Arduino libraries. Cosa, being object oriented integrates well\nwith other C++ program written in OOP style.</p>\n</div>\n<div id=\"wcosa\">\n<h2>WCosa</h2>\n<p>This project provides <tt>wcosa</tt>, a build script written in Python. The\nscript allows user to <tt>create</tt>, <tt>build</tt>, <tt>upload</tt>, and <tt>monitor</tt>\nAVR projects. This tool uses the <tt>cmake</tt> toolchain behind the scenes.\nRunning the creation scripts generates a project with the structure</p>\n<pre>project/\n    lib/\n    src/\n    wcosa/\n        bin/\n        CMakeLists.txt\n    .gitignore\n    config.json\n    CMakeLists.txt\n    CMakeListsPrivate.txt\n</pre>\n<p>Sources files should be placed in the <tt>src</tt> directory, and libraries\nshould be placed in folders inside the <tt>lib</tt> directory. Build files\nare contained in <tt>wcosa</tt> and needs to be generated for each\nenvironment that is running the WCosa project.</p>\n</div>\n<div id=\"commands-and-usage\">\n<h2>Commands and Usage</h2>\n<p>Using commands has the format <tt>wcosa [action]</tt> where <tt>[action]</tt> is\none of <tt>create</tt>, <tt>update</tt>, <tt>build</tt>, <tt>clean</tt>, <tt>upload</tt>.</p>\n<p>Here is an example of creating a project:</p>\n<pre>mkdir wcosa-project\n<span class=\"nb\">cd</span> wcosa-project\nwcosa create --board uno --ide clion\n</pre>\n<p>The <tt><span class=\"pre\">--board</span></tt> flag specifies the desired target board for project\nbuild, and <tt><span class=\"pre\">--ide</span> clion</tt> tells WCosa to generate files to enable\nproject import into <tt>CLion</tt> for code suggestion and completion. Use\n<tt>wcosa boards</tt> to see the list of available boards, supported Cosa.\nThis command will generate environment-specific files such as\n<tt>CMakeListsPrivate.txt</tt> and the <tt>wcosa</tt> folder.</p>\n<p>To build the project, creating uploadable binaries, use <tt>wcosa build</tt>,\nand to clean the project, run <tt>wcosa clean</tt>. If a microcontroller is\nplugged into your PC, running <tt>wcosa upload</tt> will attempt to\nautodetect the port and upload the program. If you have multiple\nmicrocontrollers or if WCosa cannot detect the port, use\n<tt>wcosa upload <span class=\"pre\">--port</span> [port_name]</tt> to specify the desired upload port.</p>\n<p>The command <tt>wcosa update</tt> can be used to update the target board with\n<tt>wcosa update <span class=\"pre\">--board</span> [new_board]</tt> or if <tt>config.json</tt> is modified.\nTo add build definitions to the main project or to submodules, modify\n<tt><span class=\"pre\">build-flags</span></tt> to something as</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"build-flags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MAX_ALLOCATORS=4u STATIC_MEMORY\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To specify definitions for modules added under <tt>lib</tt>,</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"build-flags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"module-flags\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"wlib\"</span><span class=\"p\">:</span> <span class=\"s2\">\"BLOCK_SIZE=64u NUM_BLOCKS=400u\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then run <tt>wcosa update</tt> to update the internal config.</p>\n<p>The command <tt>wcosa update</tt> should also be called when checking out a\nproject from source control to create the environment files. For\nexample,</p>\n<pre>git clone --recursive https://github.com/teamwaterloop/goose-sensors.git\n<span class=\"nb\">cd</span> goose-sensors\nwcosa update\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install wcosa\n</pre>\n<p>WCosa requires either <tt><span class=\"pre\">gcc-avr</span></tt> or the Arduino SDK to be installed.\n<strong>CMake</strong> is also required to build projects.</p>\n<div id=\"windows\">\n<h3>Windows</h3>\n<p>We recommend installing the Arduino SDK. 1. Download and install the\n<a href=\"https://www.arduino.cc/en/Main/Software\" rel=\"nofollow\">Arduino IDE</a> 2. Add the\nArduino installation directory and the subdirectory\n<tt>\\hardware\\tools\\avr\\bin</tt> to your System PATH; these may look like *\n<tt><span class=\"pre\">C:\\Program</span> Files <span class=\"pre\">(x86)\\Arduino</span></tt> *\n<tt><span class=\"pre\">C:\\Program</span> Files <span class=\"pre\">(x86)\\Arduino\\hardware\\tools\\bin</span></tt></p>\n<p>There are some <a href=\"http://blog.zakkemble.co.uk/avr-gcc-builds/\" rel=\"nofollow\">avr-gcc</a>\nbuilds available for Windows but these are untested.</p>\n</div>\n<div id=\"linux\">\n<h3>Linux</h3>\n<p>You may choose to install the Arduino SDK or the required tools and\nbinaries from the commandline.</p>\n<p><strong>Ubuntu</strong></p>\n<pre>sudo apt-get install gcc-avr avr-libc avrdude\n</pre>\n<p><strong>Arch</strong></p>\n<pre>sudo pacman -S avr-gcc avr-libc avrdude\n</pre>\n</div>\n<div id=\"macos\">\n<h3>MacOS</h3>\n<p>You may install the Arduino SDK or build <tt><span class=\"pre\">avr-gcc</span></tt> using <tt>brew</tt>.\nKeep in mind that building <tt><span class=\"pre\">avr-gcc</span></tt> may take some time.</p>\n<pre>xcode-select --install\nbrew tap osx-cross/avr\nbrew install avr-gcc\nbrew install avrdude\n</pre>\n</div>\n</div>\n<div id=\"committers\">\n<h2>Committers</h2>\n<p>Deep Dhillon (@dhillondeep) Jeff Niu (@mogball)</p>\n</div>\n\n          </div>"}, "last_serial": 3673409, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "12945eebf585d1b590b8fca6022d9801", "sha256": "fe0f933753a0fdeb819f3626b27abefa43c3a8263c4f96d784c601e24cfc6282"}, "downloads": -1, "filename": "WCosa-0.1.0.tar.gz", "has_sig": false, "md5_digest": "12945eebf585d1b590b8fca6022d9801", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1590518, "upload_time": "2018-01-06T22:08:22", "upload_time_iso_8601": "2018-01-06T22:08:22.655266Z", "url": "https://files.pythonhosted.org/packages/83/1e/46a807f02b475af1aac05063322fd725df52a4da2800f7f55dbe08ed53e5/WCosa-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a035f0c84ff86c602dac930b2462d7db", "sha256": "038f906e9a8150ca30558ce1483ab2750cc3b4e20952a5f84ebf2db214dd827f"}, "downloads": -1, "filename": "WCosa-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a035f0c84ff86c602dac930b2462d7db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1590599, "upload_time": "2018-01-06T22:26:47", "upload_time_iso_8601": "2018-01-06T22:26:47.368226Z", "url": "https://files.pythonhosted.org/packages/66/81/294e5845595fbc16adf92d7e36ab4f165241f9063145a03c7ee3ff4121de/WCosa-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4c06a74753a5fc9beadb143e518085bc", "sha256": "0c7354017109efdcab7cd86a16f83404d493d6746dcf40125f5f3523471bdabe"}, "downloads": -1, "filename": "WCosa-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4c06a74753a5fc9beadb143e518085bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1590688, "upload_time": "2018-01-11T18:19:59", "upload_time_iso_8601": "2018-01-11T18:19:59.552063Z", "url": "https://files.pythonhosted.org/packages/85/17/d2475483ece4e224e99ab1aa09208cff8a386db16c108113f123a0fc54ab/WCosa-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "09aef1d08a91fccffc4b07be57cf477f", "sha256": "3914f40be457c9602e48d965afb19ff34a16711aacdd81832564bdd56756e968"}, "downloads": -1, "filename": "WCosa-1.0.3.tar.gz", "has_sig": false, "md5_digest": "09aef1d08a91fccffc4b07be57cf477f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22586, "upload_time": "2018-01-13T22:05:02", "upload_time_iso_8601": "2018-01-13T22:05:02.126654Z", "url": "https://files.pythonhosted.org/packages/be/05/f51e5444e0642221425176642c1802fb5d0e4614523dcabb7daf9032e8ac/WCosa-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "ac45c47fbc9b158d8904cfc301e951df", "sha256": "853d50fd7a4a964c6be3f2d6c58dfa5d046082419f5adb231144c69ba6062708"}, "downloads": -1, "filename": "WCosa-1.0.4.tar.gz", "has_sig": false, "md5_digest": "ac45c47fbc9b158d8904cfc301e951df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1590580, "upload_time": "2018-01-13T22:07:21", "upload_time_iso_8601": "2018-01-13T22:07:21.015468Z", "url": "https://files.pythonhosted.org/packages/e9/5d/8533b2bc5b6930d120e7c596f2e391c544c786ee643b647b592c06a236f3/WCosa-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "2e1d8bd996dd7b83ed0284df21a54625", "sha256": "38ce20e5519049a4f998fd6640513ed9ddfce6b501f345f96c056f7ee5ababe9"}, "downloads": -1, "filename": "WCosa-1.0.5.tar.gz", "has_sig": false, "md5_digest": "2e1d8bd996dd7b83ed0284df21a54625", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1590925, "upload_time": "2018-01-21T00:23:44", "upload_time_iso_8601": "2018-01-21T00:23:44.153647Z", "url": "https://files.pythonhosted.org/packages/01/57/3e7bd03abc349e1a54d56d94eba405fcc13a2da9036e6b218dc3330aadaf/WCosa-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "1be3d3a0bc75b825f693bc820fbbd723", "sha256": "9b08e9887a76e998796649a6c6df3fe1cb7d6b33a9ea9823494524a8c99750a7"}, "downloads": -1, "filename": "WCosa-1.0.6.tar.gz", "has_sig": false, "md5_digest": "1be3d3a0bc75b825f693bc820fbbd723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1592150, "upload_time": "2018-02-04T18:01:37", "upload_time_iso_8601": "2018-02-04T18:01:37.899394Z", "url": "https://files.pythonhosted.org/packages/b7/23/ab0239e43c7443bbc647f488cf470a889cd12ed0ebf1598e6738305190ed/WCosa-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "bfa2fc8e3be0feb45ba8ff912b7478b3", "sha256": "5d8d84f97534f85464ec34b8ecef17b5c407c2ed6824fc284021aea8c02a7749"}, "downloads": -1, "filename": "WCosa-1.0.7.tar.gz", "has_sig": false, "md5_digest": "bfa2fc8e3be0feb45ba8ff912b7478b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1592633, "upload_time": "2018-02-04T18:08:04", "upload_time_iso_8601": "2018-02-04T18:08:04.058720Z", "url": "https://files.pythonhosted.org/packages/4b/a3/697209e4e2748bb5bccbc462347810c194c82568b99a83a668ab1c375c45/WCosa-1.0.7.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "be0ced7a32627b065f0fe5a88d1dda7d", "sha256": "313247a524fdfe1e89e3c04f747c300ed6efc4a1672bee38324fe1b501b4cef3"}, "downloads": -1, "filename": "WCosa-1.1.0.tar.gz", "has_sig": false, "md5_digest": "be0ced7a32627b065f0fe5a88d1dda7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1595479, "upload_time": "2018-03-06T02:40:16", "upload_time_iso_8601": "2018-03-06T02:40:16.336460Z", "url": "https://files.pythonhosted.org/packages/62/5f/6fa188f5d6b342c1879dabbc6d44f0903e7ee34615f7102d731ab05f25e9/WCosa-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "27fd138b58e38713bdba7040822be283", "sha256": "c478a3123baca0ff88f062eb915628ee12f1dd0edae4606ef33aa45db4b6f802"}, "downloads": -1, "filename": "WCosa-1.1.1.tar.gz", "has_sig": false, "md5_digest": "27fd138b58e38713bdba7040822be283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1596037, "upload_time": "2018-03-15T17:22:38", "upload_time_iso_8601": "2018-03-15T17:22:38.179569Z", "url": "https://files.pythonhosted.org/packages/b4/20/e50576f233feb22c1c10d88dd33ab55b6c473148c39222182a87d653e8e1/WCosa-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27fd138b58e38713bdba7040822be283", "sha256": "c478a3123baca0ff88f062eb915628ee12f1dd0edae4606ef33aa45db4b6f802"}, "downloads": -1, "filename": "WCosa-1.1.1.tar.gz", "has_sig": false, "md5_digest": "27fd138b58e38713bdba7040822be283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1596037, "upload_time": "2018-03-15T17:22:38", "upload_time_iso_8601": "2018-03-15T17:22:38.179569Z", "url": "https://files.pythonhosted.org/packages/b4/20/e50576f233feb22c1c10d88dd33ab55b6c473148c39222182a87d653e8e1/WCosa-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:45 2020"}