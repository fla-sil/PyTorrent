{"info": {"author": "Netherlands eScience Center", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "# Python software for image processing\n[![Build Status](https://travis-ci.org/NLeSC/SalientDetector-python.svg?branch=master)](https://travis-ci.org/NLeSC/SalientDetector-python) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/1c9f59fcbc6d48bbb35addc7d51e0bf1)](https://www.codacy.com/app/d-vankuppevelt/SalientDetector-python?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=NLeSC/SalientDetector-python&amp;utm_campaign=Badge_Grade) [![Codacy Badge](https://api.codacy.com/project/badge/Coverage/1c9f59fcbc6d48bbb35addc7d51e0bf1)](https://www.codacy.com/app/d-vankuppevelt/SalientDetector-python?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=NLeSC/SalientDetector-python&amp;utm_campaign=Badge_Coverage)\n\nThis folder contains a Python  implementation of the Salient Region Detector code as part of the [image processing part of eStep](https://www.esciencecenter.nl/technology/expertise/computer-vision). The software conforms with the [eStep standards](https://github.com/NLeSC/estep-checklist).\n\nThe original MATLAB implementation can be found at [this repository](https://github.com/NLeSC/SalientDetector-matlab)\n\nDocumentation can be found on [Read the Docs](http://salientdetector-python.readthedocs.io/).\n\nThe repository contains the following sub-folders:\n\n## Notebooks\nSeveral iPython notebooks testing and illustrating major functionality.\n\n## salientregions\nThe module for salient region detection functionality.\n\n## tests\nUnit tests for the code in salientregions.\n\n# Installation\n## Prerequisites\n* Python 2.7 or 3.5\n* pip (8.1.2)\n\n## Installing the package (via pip)\n\n`pip install -e git://github.com/c-martinez/SalientDetector-python.git@pip#egg=salientregions`\n\nAfterwards you can import it in Python:\n\n```python\nimport salientregions as sr\n```\n\n## Installing the package manually\nClone or download repo. Install requirements from requirements.txt file:\n\n`pip install -r requirements.txt`\n\nInstall the package itself:\n\n`pip install .`\n\nTo perform tests:\n\n`nosetests test`\n\n## Manually install OpenCV\nOpenCV should be installed via pip, but if you have an older version of pip, you might need to  install it manually. There is two ways to install OpenCV:\n  * If you're using Conda, you can install OpenCV with the following command:\n\n  `conda install -c https://conda.anaconda.org/menpo opencv3`\n\n  * Otherwise, follow the instructions to [install OpenCV 3.1.0 manually](http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_setup/py_table_of_contents_setup/py_table_of_contents_setup.html#py-table-of-content-setup)\n\n\n# Getting started\nThe source code documentation can be found [here](http://salientdetector-python.readthedocs.io/)\n\nThis code makes heavily use of the OpenCV library, so in order to understand how the code works, it helps to have a look at the [OpenCV Documentation](http://docs.opencv.org/3.1.0/).\n\n## Images\nIn OpenCV, images are represented as numpy arrays. Grayscale images are represented by a 2-dimensional array. Color images have a third dimension for the color channel. The Salient Region Detector has a few simplifying assumptions:\n* Color images have BGR channels\n* Images are assumed to be 8-bit. This is also the case for binary images, so they only have values of 0 and 255.\n\n## Detector object\nThe complete functionality of the salient region detectors are found in the Detector object. The SalientDetector implements DMSR detection, and MSSRDetector implements MSSR detection (see referred papers for more information about these algorithms).\nAn example of how to use the Detector can be found in [this iPython Notebook](https://github.com/NLeSC/SalientDetector-python/blob/master/Notebooks/DetectorExample.ipynb).\n\n# Contributing\nIf you want to contribute to the code, please have a look at the [eStep standarts](https://github.com/NLeSC/estep-checklist).\n\nWe use numpy-style code documentation.\n\n# References\nRanguelova, E.B. - Pauwels, E.J.\nMorphology-based Stable Salient Regions Detector\nProceedings of International Conference on Image and Vision Computing New Zealand 2006 , Great Barrier Island, New Zealand, p.97\u2013102\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/NLeSC/SalientDetector-python/tarball/v1.0.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NLeSC/SalientRegions-python", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "salientregions", "package_url": "https://pypi.org/project/salientregions/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/salientregions/", "project_urls": {"Download": "https://github.com/NLeSC/SalientDetector-python/tarball/v1.0.3", "Homepage": "https://github.com/NLeSC/SalientRegions-python"}, "release_url": "https://pypi.org/project/salientregions/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "Package for finding salient regions in images", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Python software for image processing<br>[![Build Status](https://travis-ci.org/NLeSC/SalientDetector-python.svg?branch=master)](https://travis-ci.org/NLeSC/SalientDetector-python) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/1c9f59fcbc6d48bbb35addc7d51e0bf1)](https://www.codacy.com/app/d-vankuppevelt/SalientDetector-python?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=NLeSC/SalientDetector-python&amp;amp;utm_campaign=Badge_Grade) [![Codacy Badge](https://api.codacy.com/project/badge/Coverage/1c9f59fcbc6d48bbb35addc7d51e0bf1)](https://www.codacy.com/app/d-vankuppevelt/SalientDetector-python?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=NLeSC/SalientDetector-python&amp;amp;utm_campaign=Badge_Coverage)<br><br>This folder contains a Python  implementation of the Salient Region Detector code as part of the [image processing part of eStep](https://www.esciencecenter.nl/technology/expertise/computer-vision). The software conforms with the [eStep standards](https://github.com/NLeSC/estep-checklist).<br><br>The original MATLAB implementation can be found at [this repository](https://github.com/NLeSC/SalientDetector-matlab)<br><br>Documentation can be found on [Read the Docs](http://salientdetector-python.readthedocs.io/).<br><br>The repository contains the following sub-folders:<br><br>## Notebooks<br>Several iPython notebooks testing and illustrating major functionality.<br><br>## salientregions<br>The module for salient region detection functionality.<br><br>## tests<br>Unit tests for the code in salientregions.<br><br># Installation<br>## Prerequisites<br>* Python 2.7 or 3.5<br>* pip (8.1.2)<br><br>## Installing the package (via pip)<br><br>`pip install -e git://github.com/c-martinez/SalientDetector-python.git@pip#egg=salientregions`<br><br>Afterwards you can import it in Python:<br><br>```python<br>import salientregions as sr<br>```<br><br>## Installing the package manually<br>Clone or download repo. Install requirements from requirements.txt file:<br><br>`pip install -r requirements.txt`<br><br>Install the package itself:<br><br>`pip install .`<br><br>To perform tests:<br><br>`nosetests test`<br><br>## Manually install OpenCV<br>OpenCV should be installed via pip, but if you have an older version of pip, you might need to  install it manually. There is two ways to install OpenCV:<br>  * If you're using Conda, you can install OpenCV with the following command:<br><br>  `conda install -c https://conda.anaconda.org/menpo opencv3`<br><br>  * Otherwise, follow the instructions to [install OpenCV 3.1.0 manually](http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_setup/py_table_of_contents_setup/py_table_of_contents_setup.html#py-table-of-content-setup)<br><br><br># Getting started<br>The source code documentation can be found [here](http://salientdetector-python.readthedocs.io/)<br><br>This code makes heavily use of the OpenCV library, so in order to understand how the code works, it helps to have a look at the [OpenCV Documentation](http://docs.opencv.org/3.1.0/).<br><br>## Images<br>In OpenCV, images are represented as numpy arrays. Grayscale images are represented by a 2-dimensional array. Color images have a third dimension for the color channel. The Salient Region Detector has a few simplifying assumptions:<br>* Color images have BGR channels<br>* Images are assumed to be 8-bit. This is also the case for binary images, so they only have values of 0 and 255.<br><br>## Detector object<br>The complete functionality of the salient region detectors are found in the Detector object. The SalientDetector implements DMSR detection, and MSSRDetector implements MSSR detection (see referred papers for more information about these algorithms).<br>An example of how to use the Detector can be found in [this iPython Notebook](https://github.com/NLeSC/SalientDetector-python/blob/master/Notebooks/DetectorExample.ipynb).<br><br># Contributing<br>If you want to contribute to the code, please have a look at the [eStep standarts](https://github.com/NLeSC/estep-checklist).<br><br>We use numpy-style code documentation.<br><br># References<br>Ranguelova, E.B. - Pauwels, E.J.<br>Morphology-based Stable Salient Regions Detector<br>Proceedings of International Conference on Image and Vision Computing New Zealand 2006 , Great Barrier Island, New Zealand, p.97\u2013102<br>\n          </div>"}, "last_serial": 2368132, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "75fcd2392e130300ae7eb0b243fb25d1", "sha256": "d10a5aa73222c81d5aa5986baef5ab64863c949b582bb1ae2da2ef791884d6dd"}, "downloads": -1, "filename": "salientregions-1.0.0.tar.gz", "has_sig": false, "md5_digest": "75fcd2392e130300ae7eb0b243fb25d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17123, "upload_time": "2016-07-15T09:05:39", "upload_time_iso_8601": "2016-07-15T09:05:39.401566Z", "url": "https://files.pythonhosted.org/packages/65/3f/28d0235b0ca63de3be882880d512edd500e6420dd919adc69df5df23ca42/salientregions-1.0.0.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "30db8771e9a0a6326e8b289e7ccab7fb", "sha256": "d62f400e4ed7d98f56e7c067282939e02f3087888e751f9468aa8b02a6913908"}, "downloads": -1, "filename": "salientregions-1.0.3.tar.gz", "has_sig": false, "md5_digest": "30db8771e9a0a6326e8b289e7ccab7fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37562, "upload_time": "2016-09-28T09:02:20", "upload_time_iso_8601": "2016-09-28T09:02:20.355262Z", "url": "https://files.pythonhosted.org/packages/d6/db/537f89d0317c9b4d2080eec7f935f85a983d21ad152f048a03eb340a2d4c/salientregions-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30db8771e9a0a6326e8b289e7ccab7fb", "sha256": "d62f400e4ed7d98f56e7c067282939e02f3087888e751f9468aa8b02a6913908"}, "downloads": -1, "filename": "salientregions-1.0.3.tar.gz", "has_sig": false, "md5_digest": "30db8771e9a0a6326e8b289e7ccab7fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37562, "upload_time": "2016-09-28T09:02:20", "upload_time_iso_8601": "2016-09-28T09:02:20.355262Z", "url": "https://files.pythonhosted.org/packages/d6/db/537f89d0317c9b4d2080eec7f935f85a983d21ad152f048a03eb340a2d4c/salientregions-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:06 2020"}