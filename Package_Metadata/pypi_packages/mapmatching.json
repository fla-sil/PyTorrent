{"info": {"author": "Abraham Toriz Cruz", "author_email": "categulario@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: GIS", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Map-Matching Algorithm\n######################\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/map_matching/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n   :alt: Gitter\n\n.. image:: https://img.shields.io/github/stars/categulario/map_matching.svg\n   :target: https://github.com/categulario/map_matching\n   :alt: GitHub stars\n\n.. image:: https://img.shields.io/github/contributors/categulario/map_matching.svg?color=red\n   :target: https://github.com/categulario/map_matching/graphs/contributors\n   :alt: GitHub contributors\n\n.. image:: https://img.shields.io/github/license/categulario/map_matching.svg?color=blue\n   :target: https://github.com/categulario/map_matching/blob/master/LICENSE.txt\n   :alt: GNU GPL v3\n\n.. image:: https://gitlab.com/categulario/map_matching/badges/master/pipeline.svg\n   :target: https://gitlab.com/categulario/map_matching/pipelines\n   :alt: Build Status\n\n\nMy implementation of the map matching algorithm from `this article <https://www.researchgate.net/publication/308856380_Fast_Hidden_Markov_Model_Map-Matching_for_Sparse_and_Noisy_Trajectories>`_ (Althought with some modifications). The goal is to get the streets from a gps track.\n\nThis is how it looks like:\n\n.. image:: https://categulario.tk/map_matching_result.png\n   :target: https://categulario.tk/map_matching_result.png\n   :alt: Output of the example run\n\nThe gray line is the gps trace and the colored lines describe the map-matched most-likely route in the streets for the vehicle.\n\nFor reference read `the resulting article <https://categulario.tk/mapmatching.pdf>`_.\n\nSetup\n-----\n\nYou'll need python 3.5+ and a redis server running. The usage of a virtual environment is recommended.\n\nInstall from pypi:\n\n.. code:: bash\n\n   $ pip install mapmatching\n\nOr install from source:\n\n.. code:: bash\n\n   $ cd mapmatching\n   $ python setup.py install\n\nUsage\n-----\n\nDownload data from OpenStreetMaps:\n\n.. code:: bash\n\n   $ mapmatching download -h\n   $ mapmatching download -96.99107360839844 19.441181182861328 -96.846435546875 19.59616470336914 -o streets.json\n\nAnd load it to redis, by default it loads it to database 1 instead of redis default of 0.\n\n.. code:: bash\n\n   $ mapmatching load streets.json\n\nThe two previous commands can be chained:\n\n.. code:: bash\n\n   $ mapmatching download -96.99107360839844 19.441181182861328 -96.846435546875 19.59616470336914 | mapmatching load\n\nThen run the match task with a geojson file with a single gps track. A sample track that works with the sample bounding box is contained in the ``data/`` directory of the repository.\n\n.. code:: bash\n\n   $ mapmatching match -h\n   $ mapmatching match data/route.geojson -o output.json\n\nOptionally visualize it in the browser:\n\n.. code:: bash\n\n   $ pip install geojsonio\n   $ geojsonio output.json\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/categulairo/map_matching", "keywords": "mapmatching algorithm gps", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mapmatching", "package_url": "https://pypi.org/project/mapmatching/", "platform": "", "project_url": "https://pypi.org/project/mapmatching/", "project_urls": {"Homepage": "https://github.com/categulairo/map_matching"}, "release_url": "https://pypi.org/project/mapmatching/0.1.5/", "requires_dist": ["redis", "requests"], "requires_python": "", "summary": "A map matching library", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://gitter.im/map_matching/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a>\n<a href=\"https://github.com/categulario/map_matching\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2510871c42a0c30c27306a840c151d8ffb07c92b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6361746567756c6172696f2f6d61705f6d61746368696e672e737667\"></a>\n<a href=\"https://github.com/categulario/map_matching/graphs/contributors\" rel=\"nofollow\"><img alt=\"GitHub contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/518cacc0ce4b9a15350abcd3707841343162a70c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6361746567756c6172696f2f6d61705f6d61746368696e672e7376673f636f6c6f723d726564\"></a>\n<a href=\"https://github.com/categulario/map_matching/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"GNU GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abd053a467879d5cb9842d25ba5dbca487bef35b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6361746567756c6172696f2f6d61705f6d61746368696e672e7376673f636f6c6f723d626c7565\"></a>\n<a href=\"https://gitlab.com/categulario/map_matching/pipelines\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5553371addea906d5eb77276a1f2cf40575b7b57/68747470733a2f2f6769746c61622e636f6d2f6361746567756c6172696f2f6d61705f6d61746368696e672f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<p>My implementation of the map matching algorithm from <a href=\"https://www.researchgate.net/publication/308856380_Fast_Hidden_Markov_Model_Map-Matching_for_Sparse_and_Noisy_Trajectories\" rel=\"nofollow\">this article</a> (Althought with some modifications). The goal is to get the streets from a gps track.</p>\n<p>This is how it looks like:</p>\n<a href=\"https://categulario.tk/map_matching_result.png\" rel=\"nofollow\"><img alt=\"Output of the example run\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/907b2be8698d32696d2cb9a2c8e6325866d5b54f/68747470733a2f2f6361746567756c6172696f2e746b2f6d61705f6d61746368696e675f726573756c742e706e67\"></a>\n<p>The gray line is the gps trace and the colored lines describe the map-matched most-likely route in the streets for the vehicle.</p>\n<p>For reference read <a href=\"https://categulario.tk/mapmatching.pdf\" rel=\"nofollow\">the resulting article</a>.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>You\u2019ll need python 3.5+ and a redis server running. The usage of a virtual environment is recommended.</p>\n<p>Install from pypi:</p>\n<pre>$ pip install mapmatching\n</pre>\n<p>Or install from source:</p>\n<pre>$ <span class=\"nb\">cd</span> mapmatching\n$ python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Download data from OpenStreetMaps:</p>\n<pre>$ mapmatching download -h\n$ mapmatching download -96.99107360839844 <span class=\"m\">19</span>.441181182861328 -96.846435546875 <span class=\"m\">19</span>.59616470336914 -o streets.json\n</pre>\n<p>And load it to redis, by default it loads it to database 1 instead of redis default of 0.</p>\n<pre>$ mapmatching load streets.json\n</pre>\n<p>The two previous commands can be chained:</p>\n<pre>$ mapmatching download -96.99107360839844 <span class=\"m\">19</span>.441181182861328 -96.846435546875 <span class=\"m\">19</span>.59616470336914 <span class=\"p\">|</span> mapmatching load\n</pre>\n<p>Then run the match task with a geojson file with a single gps track. A sample track that works with the sample bounding box is contained in the <tt>data/</tt> directory of the repository.</p>\n<pre>$ mapmatching match -h\n$ mapmatching match data/route.geojson -o output.json\n</pre>\n<p>Optionally visualize it in the browser:</p>\n<pre>$ pip install geojsonio\n$ geojsonio output.json\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6474693, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "54f1c596e291c3572c2387a09d6f5304", "sha256": "f0c63a976deba4b70dedd69078b4a8e585020fd91870c4f8a93760b26d7b8cab"}, "downloads": -1, "filename": "mapmatching-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "54f1c596e291c3572c2387a09d6f5304", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14572, "upload_time": "2019-12-30T15:29:33", "upload_time_iso_8601": "2019-12-30T15:29:33.649218Z", "url": "https://files.pythonhosted.org/packages/13/95/2c08e51e599dcfe6a9f3ab29810cd63b50722bd0bc77881af973753588ab/mapmatching-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1a968b2d3e2564b0b67a21884b8ca34", "sha256": "320e0007817720053a01abc2b4b4607ad6c6961fd4a5b02e0285e152848996a6"}, "downloads": -1, "filename": "mapmatching-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e1a968b2d3e2564b0b67a21884b8ca34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12023, "upload_time": "2019-12-30T15:29:35", "upload_time_iso_8601": "2019-12-30T15:29:35.818613Z", "url": "https://files.pythonhosted.org/packages/15/3a/5c028c56bc71943ceb61cfaf8122137ac37f7a196181cf3ef978796da3fb/mapmatching-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "fb28cc6294de1b457ec302f1a3e53f3b", "sha256": "3c2e60e8e17afdcdc304d45d562c77ef8d4a0e837a9bcde1184e1819552f3557"}, "downloads": -1, "filename": "mapmatching-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "fb28cc6294de1b457ec302f1a3e53f3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27066, "upload_time": "2020-01-17T19:00:13", "upload_time_iso_8601": "2020-01-17T19:00:13.530515Z", "url": "https://files.pythonhosted.org/packages/6a/eb/331f085d0fb3056d5e83b33d0e8bb527d693aa1e0eff86e36e07ab68d756/mapmatching-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7f6db21dc9203dd0ab58fc2ab67ec7a", "sha256": "6e19fa2d78d4aa54b73f951891236edd1b940113492e350c42d137e6f6b8af26"}, "downloads": -1, "filename": "mapmatching-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f7f6db21dc9203dd0ab58fc2ab67ec7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12077, "upload_time": "2020-01-17T19:00:15", "upload_time_iso_8601": "2020-01-17T19:00:15.090024Z", "url": "https://files.pythonhosted.org/packages/76/04/ca36dc30bbf2e6f4355d10cfdc7ed77c83c1f05ce4d104ab8d3bd154bf00/mapmatching-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb28cc6294de1b457ec302f1a3e53f3b", "sha256": "3c2e60e8e17afdcdc304d45d562c77ef8d4a0e837a9bcde1184e1819552f3557"}, "downloads": -1, "filename": "mapmatching-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "fb28cc6294de1b457ec302f1a3e53f3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27066, "upload_time": "2020-01-17T19:00:13", "upload_time_iso_8601": "2020-01-17T19:00:13.530515Z", "url": "https://files.pythonhosted.org/packages/6a/eb/331f085d0fb3056d5e83b33d0e8bb527d693aa1e0eff86e36e07ab68d756/mapmatching-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7f6db21dc9203dd0ab58fc2ab67ec7a", "sha256": "6e19fa2d78d4aa54b73f951891236edd1b940113492e350c42d137e6f6b8af26"}, "downloads": -1, "filename": "mapmatching-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f7f6db21dc9203dd0ab58fc2ab67ec7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12077, "upload_time": "2020-01-17T19:00:15", "upload_time_iso_8601": "2020-01-17T19:00:15.090024Z", "url": "https://files.pythonhosted.org/packages/76/04/ca36dc30bbf2e6f4355d10cfdc7ed77c83c1f05ce4d104ab8d3bd154bf00/mapmatching-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:54 2020"}