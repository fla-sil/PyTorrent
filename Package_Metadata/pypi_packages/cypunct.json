{"info": {"author": "James Mishra", "author_email": "j@jamesmishra.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Cython", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "cypunct: Fast-ish unicode string splitting\n******************************************\nCypunct is designed to solve the problem of quickly splitting a Unicode\nstring based on a set of characters.\n\nCypunct is designed to work on Python 2.6, 2.7, and 3.3+. Because\nCypunct is a Cython extension, it will (probably) only work in the CPython\nruntime.\n\nFor Python versions 2.6 and 2.7, Cypunct will only run if these\nCPython runtimes are compiled with the flag\n``--enable-unicode=ucs4``. Cypunct will throw an exception\nif your Python 2 runtime was not compiled with UCS-4.\n\nInstallation\n============\nInstallation is easiest with pip. Just run\n\n.. code:: bash\n\n    pip install cypunct\n\n\nUsage\n=====\nCypunct takes a Unicode string and a ``frozenset`` of delimiter characters,\nand splits the string based on that set. Every delimiter character\nshould be a single Unicode code point -- ``len(char)`` should be 1.\n\nA simple example, where we provide a small ``frozenset`` is below.\n\n.. code:: python\n\n    >>> from cypunct import split\n    >>> split(\"James Mishra is the... best human ever, or so I think.\", frozenset({' ', '.', ','}))\n    ['James', 'Mishra', 'is', 'the', 'best', 'human', 'ever', 'or', 'so', 'I', 'think', '']\n\nHowever, if you only need to split on whitespace characters, ``str.split()`` much\nbetter performance. If you only need to split on one character, ``str.split(char)``\nwill also be much faster.\n\nCypunct really shines when you need to split on many possible characters,\nsuch as an entire `Unicode character category <http://www.fileformat.info/info/unicode/category/index.htm>`_.\n\nThe below example splits on all Unicode punctuation, and nothing else.\n\n.. code:: python\n\n    >>> from cypunct.unicode_classes import P\n    >>> split(\"James Mishra is the... best human ever, or so I think.\", P)\n    ['James Mishra is the', ' best human ever', ' or so I think', '']\n \nThe following Unicode classes are available as sets:\n\n\n========  ===========\nCategory  Description\n========  ===========\n**C**     **Other**\nCc        Other, Format\nCf        Other, Not Assigned\nCo        Other, Private Use\nCs        Other, Surrogate\n**L**     **Letter**\nLl        Letter, Lowercase\nLm        Letter, Modifier\nLo        Letter, Other\nLt        Letter, Titlecase\nLu        Letter, Uppercase\n**M**     **Mark**\nMc        Mark, Space Combining\nMe        Mark, Enclosing\nMn        Mark, Nonspacing\nN         **Number**\nNd        Number, Decimal Digit\nNl        Number, Letter\nNo        Number, Other\n**P**     **Punctuation**\nPc        Punctuation, Connector\nPd        Punctuation, Dash\nPe        Punctuation, Close\nPf        Punctuation, Final Quote\nPi        Punctuation, Initial Quote\nPo        Punctuation, Other\nPs        Punctuation, Open\n**S**     **Symbol**\nSc        Symbol, Currency\nSk        Symbol, Modifier\nSm        Symbol, Math\nSo        Symbol, Other\n**Z**     **Separator**\nZl        Separator, Line\nZp        Separator, Paragraph\nZs        Separator, Space\n========  ===========\n\n\n``cypunct.unicode_classes.COMMON_SEPARATORS`` is the union of the ``C``, ``P``, ``S``, and ``Z``\n``frozensets``. I have found it personally useful when splitting text for natural\nlanguage processing applications.\n\nIf you don't specify a ``frozenset`` for Cypunct to use, then Cypunct will\ndefault to ``COMMON_SEPARATORS``.\n \nUpdating Unicode data\n=====================\nCurrently, ``cypunct.unicode_classes`` is a Python module autogenerated from a\n``UnicodeData.txt`` file. The autogeneration script exists in\n`make_punctuation_file.py <https://github.com/jamesmishra/cypunct/blob/master/make_punctuation_file.py>`_.\n\nMost Cypunct users will not need to concern themselves with this, but this is important\nto know if you are experiencing Unicode bugs or want to contribute to Cypunct.\n\nThe current ``UnicodeData.txt`` is from ftp://ftp.unicode.org/Public/10.0.0/ucd/UnicodeData.txt.\n\nFrequently Asked Questions (FAQ)\n================================\n**Q: I got an installation error involving\n\"pkg_resources.VersionConflict (setuptools xx.xx.xx\".\nHow do I fix this?**\n\nYou have a very old version of setuptools, and we won't be able to\ncompile our Cython extension with it. Run\n``pip install --upgrade setuptools`` and try installing Cypunct again.\n\n**Q: Wouldn't this be way faster if it were written in Pure C?**\n\nYes, it would. I'm too lazy to hand-code a C CPython extension, but it's on my todo list.\nRight now, Cypunct is *\"fast enough\"*, and I can move onto other things in my\ndaily life.\n\nHowever, if you want to take on the challenge of rewriting Cypunct in C and having\nthe exact same functionality as the current Cython version, I'll send you $100 USD.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jamesmishra/cypunct", "keywords": "unicode string splitting", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cypunct", "package_url": "https://pypi.org/project/cypunct/", "platform": "", "project_url": "https://pypi.org/project/cypunct/", "project_urls": {"Homepage": "https://github.com/jamesmishra/cypunct"}, "release_url": "https://pypi.org/project/cypunct/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Cypunct is a Cython package to split Unicode strings based on a given frozenset of Unicode code points.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Cypunct is designed to solve the problem of quickly splitting a Unicode\nstring based on a set of characters.</p>\n<p>Cypunct is designed to work on Python 2.6, 2.7, and 3.3+. Because\nCypunct is a Cython extension, it will (probably) only work in the CPython\nruntime.</p>\n<p>For Python versions 2.6 and 2.7, Cypunct will only run if these\nCPython runtimes are compiled with the flag\n<tt><span class=\"pre\">--enable-unicode=ucs4</span></tt>. Cypunct will throw an exception\nif your Python 2 runtime was not compiled with UCS-4.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation is easiest with pip. Just run</p>\n<pre>pip install cypunct\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Cypunct takes a Unicode string and a <tt>frozenset</tt> of delimiter characters,\nand splits the string based on that set. Every delimiter character\nshould be a single Unicode code point \u2013 <tt>len(char)</tt> should be 1.</p>\n<p>A simple example, where we provide a small <tt>frozenset</tt> is below.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cypunct</span> <span class=\"kn\">import</span> <span class=\"n\">split</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\"James Mishra is the... best human ever, or so I think.\"</span><span class=\"p\">,</span> <span class=\"nb\">frozenset</span><span class=\"p\">({</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"s1\">','</span><span class=\"p\">}))</span>\n<span class=\"p\">[</span><span class=\"s1\">'James'</span><span class=\"p\">,</span> <span class=\"s1\">'Mishra'</span><span class=\"p\">,</span> <span class=\"s1\">'is'</span><span class=\"p\">,</span> <span class=\"s1\">'the'</span><span class=\"p\">,</span> <span class=\"s1\">'best'</span><span class=\"p\">,</span> <span class=\"s1\">'human'</span><span class=\"p\">,</span> <span class=\"s1\">'ever'</span><span class=\"p\">,</span> <span class=\"s1\">'or'</span><span class=\"p\">,</span> <span class=\"s1\">'so'</span><span class=\"p\">,</span> <span class=\"s1\">'I'</span><span class=\"p\">,</span> <span class=\"s1\">'think'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">]</span>\n</pre>\n<p>However, if you only need to split on whitespace characters, <tt>str.split()</tt> much\nbetter performance. If you only need to split on one character, <tt>str.split(char)</tt>\nwill also be much faster.</p>\n<p>Cypunct really shines when you need to split on many possible characters,\nsuch as an entire <a href=\"http://www.fileformat.info/info/unicode/category/index.htm\" rel=\"nofollow\">Unicode character category</a>.</p>\n<p>The below example splits on all Unicode punctuation, and nothing else.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cypunct.unicode_classes</span> <span class=\"kn\">import</span> <span class=\"n\">P</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\"James Mishra is the... best human ever, or so I think.\"</span><span class=\"p\">,</span> <span class=\"n\">P</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'James Mishra is the'</span><span class=\"p\">,</span> <span class=\"s1\">' best human ever'</span><span class=\"p\">,</span> <span class=\"s1\">' or so I think'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">]</span>\n</pre>\n<p>The following Unicode classes are available as sets:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Category</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><strong>C</strong></td>\n<td><strong>Other</strong></td>\n</tr>\n<tr><td>Cc</td>\n<td>Other, Format</td>\n</tr>\n<tr><td>Cf</td>\n<td>Other, Not Assigned</td>\n</tr>\n<tr><td>Co</td>\n<td>Other, Private Use</td>\n</tr>\n<tr><td>Cs</td>\n<td>Other, Surrogate</td>\n</tr>\n<tr><td><strong>L</strong></td>\n<td><strong>Letter</strong></td>\n</tr>\n<tr><td>Ll</td>\n<td>Letter, Lowercase</td>\n</tr>\n<tr><td>Lm</td>\n<td>Letter, Modifier</td>\n</tr>\n<tr><td>Lo</td>\n<td>Letter, Other</td>\n</tr>\n<tr><td>Lt</td>\n<td>Letter, Titlecase</td>\n</tr>\n<tr><td>Lu</td>\n<td>Letter, Uppercase</td>\n</tr>\n<tr><td><strong>M</strong></td>\n<td><strong>Mark</strong></td>\n</tr>\n<tr><td>Mc</td>\n<td>Mark, Space Combining</td>\n</tr>\n<tr><td>Me</td>\n<td>Mark, Enclosing</td>\n</tr>\n<tr><td>Mn</td>\n<td>Mark, Nonspacing</td>\n</tr>\n<tr><td>N</td>\n<td><strong>Number</strong></td>\n</tr>\n<tr><td>Nd</td>\n<td>Number, Decimal Digit</td>\n</tr>\n<tr><td>Nl</td>\n<td>Number, Letter</td>\n</tr>\n<tr><td>No</td>\n<td>Number, Other</td>\n</tr>\n<tr><td><strong>P</strong></td>\n<td><strong>Punctuation</strong></td>\n</tr>\n<tr><td>Pc</td>\n<td>Punctuation, Connector</td>\n</tr>\n<tr><td>Pd</td>\n<td>Punctuation, Dash</td>\n</tr>\n<tr><td>Pe</td>\n<td>Punctuation, Close</td>\n</tr>\n<tr><td>Pf</td>\n<td>Punctuation, Final Quote</td>\n</tr>\n<tr><td>Pi</td>\n<td>Punctuation, Initial Quote</td>\n</tr>\n<tr><td>Po</td>\n<td>Punctuation, Other</td>\n</tr>\n<tr><td>Ps</td>\n<td>Punctuation, Open</td>\n</tr>\n<tr><td><strong>S</strong></td>\n<td><strong>Symbol</strong></td>\n</tr>\n<tr><td>Sc</td>\n<td>Symbol, Currency</td>\n</tr>\n<tr><td>Sk</td>\n<td>Symbol, Modifier</td>\n</tr>\n<tr><td>Sm</td>\n<td>Symbol, Math</td>\n</tr>\n<tr><td>So</td>\n<td>Symbol, Other</td>\n</tr>\n<tr><td><strong>Z</strong></td>\n<td><strong>Separator</strong></td>\n</tr>\n<tr><td>Zl</td>\n<td>Separator, Line</td>\n</tr>\n<tr><td>Zp</td>\n<td>Separator, Paragraph</td>\n</tr>\n<tr><td>Zs</td>\n<td>Separator, Space</td>\n</tr>\n</tbody>\n</table>\n<p><tt>cypunct.unicode_classes.COMMON_SEPARATORS</tt> is the union of the <tt>C</tt>, <tt>P</tt>, <tt>S</tt>, and <tt>Z</tt>\n<tt>frozensets</tt>. I have found it personally useful when splitting text for natural\nlanguage processing applications.</p>\n<p>If you don\u2019t specify a <tt>frozenset</tt> for Cypunct to use, then Cypunct will\ndefault to <tt>COMMON_SEPARATORS</tt>.</p>\n</div>\n<div id=\"updating-unicode-data\">\n<h2>Updating Unicode data</h2>\n<p>Currently, <tt>cypunct.unicode_classes</tt> is a Python module autogenerated from a\n<tt>UnicodeData.txt</tt> file. The autogeneration script exists in\n<a href=\"https://github.com/jamesmishra/cypunct/blob/master/make_punctuation_file.py\" rel=\"nofollow\">make_punctuation_file.py</a>.</p>\n<p>Most Cypunct users will not need to concern themselves with this, but this is important\nto know if you are experiencing Unicode bugs or want to contribute to Cypunct.</p>\n<p>The current <tt>UnicodeData.txt</tt> is from <a>ftp://ftp.unicode.org/Public/10.0.0/ucd/UnicodeData.txt</a>.</p>\n</div>\n<div id=\"frequently-asked-questions-faq\">\n<h2>Frequently Asked Questions (FAQ)</h2>\n<p><strong>Q: I got an installation error involving\n\u201cpkg_resources.VersionConflict (setuptools xx.xx.xx\u201d.\nHow do I fix this?</strong></p>\n<p>You have a very old version of setuptools, and we won\u2019t be able to\ncompile our Cython extension with it. Run\n<tt>pip install <span class=\"pre\">--upgrade</span> setuptools</tt> and try installing Cypunct again.</p>\n<p><strong>Q: Wouldn\u2019t this be way faster if it were written in Pure C?</strong></p>\n<p>Yes, it would. I\u2019m too lazy to hand-code a C CPython extension, but it\u2019s on my todo list.\nRight now, Cypunct is <em>\u201cfast enough\u201d</em>, and I can move onto other things in my\ndaily life.</p>\n<p>However, if you want to take on the challenge of rewriting Cypunct in C and having\nthe exact same functionality as the current Cython version, I\u2019ll send you $100 USD.</p>\n</div>\n\n          </div>"}, "last_serial": 2998004, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "70463a1222548a58f851c38debb1f325", "sha256": "df23f7c8b176b23d833445ceac91ad882c1366f6dea84679270f57d8ce835901"}, "downloads": -1, "filename": "cypunct-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70463a1222548a58f851c38debb1f325", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 185555, "upload_time": "2017-07-03T22:52:38", "upload_time_iso_8601": "2017-07-03T22:52:38.161321Z", "url": "https://files.pythonhosted.org/packages/ea/fa/dee18d5e00eb55b842fd24f79f8960e98aa84afb57a1e333382191857e7f/cypunct-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "16121e30b3385ed5135dbd68f2eda173", "sha256": "6f3999419b1a6541c223991b64f7255e3c519e568aaf93cd04109c1df3240056"}, "downloads": -1, "filename": "cypunct-0.1.1.tar.gz", "has_sig": false, "md5_digest": "16121e30b3385ed5135dbd68f2eda173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 185556, "upload_time": "2017-07-03T23:03:44", "upload_time_iso_8601": "2017-07-03T23:03:44.923330Z", "url": "https://files.pythonhosted.org/packages/e3/26/23e1e676fc8b1c86cdf5360969942cd1bbd2ad86606fee1911d5b4edcdfc/cypunct-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16121e30b3385ed5135dbd68f2eda173", "sha256": "6f3999419b1a6541c223991b64f7255e3c519e568aaf93cd04109c1df3240056"}, "downloads": -1, "filename": "cypunct-0.1.1.tar.gz", "has_sig": false, "md5_digest": "16121e30b3385ed5135dbd68f2eda173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 185556, "upload_time": "2017-07-03T23:03:44", "upload_time_iso_8601": "2017-07-03T23:03:44.923330Z", "url": "https://files.pythonhosted.org/packages/e3/26/23e1e676fc8b1c86cdf5360969942cd1bbd2ad86606fee1911d5b4edcdfc/cypunct-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:04 2020"}