{"info": {"author": "Tyler Gubala", "author_email": "gubalatyler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Win32 (MS Windows)", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: Microsoft :: Windows :: Windows 10", "Programming Language :: C", "Programming Language :: C++", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Artistic Software", "Topic :: Education", "Topic :: Games/Entertainment", "Topic :: Multimedia", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: 3D Modeling", "Topic :: Multimedia :: Graphics :: 3D Rendering"], "description": "# blenderpy\nBlender as a python module with easy-install\n\n## About\n\nMeant for installation into a virtualenv or wherever, for unit testing of Blender extensions being authored, or developement of a Blender 3d-enabled Python application.\n\nDepends upon the `bpy-build` module to make sure the Blender `bpy` module environment is correct.\n\nFor more information, please see:\n\n[bpy-build repository](https://github.com/TylerGubala/bpy-build)\n\n## Getting Started\n\nPrebuilt wheels are provided for popular Platforms (MacOS, Windows, and Ubuntu). Prebuilds include \"normal\" installation (`bpy`), CUDA (`bpy-cuda`) and Optix (`bpy-optix`). Choosing the correct version depends on your use-case and hardware but in general `bpy` should be just fine for non-rendering automation tasks while `bpy-optix` has the best performance but requires a NVIDIA RTX Card and up to date drivers.\n\n### Installing\n\nInstalling a prebuilt on these platforms is simple.\n\n#### Windows\n\n`py -m pip install bpy && bpy_post_install`\n\n#### MacOS\n\n`python3 -m pip install bpy && bpy_post_install`\n\n#### Other\n\n`python3 -m pip install bpy`\n\n### Self Building\n\nBuilding the Blender API for your own platform can be difficult, however this repo should make it easy enough for you to create your own builds by hand.\n\n#### Build from `sdist`\n\nYou can build from a source distribution using `pip`.\n\n##### Prerequisites\n\n**Windows**\n```bash\npy -3.7-64 -m pip install --upgrade pip wheel future-fstrings\n```\n\n**Other**\n```bash\npython3.7 -m pip install --upgrade pip wheel future-fstrings\n```\n\n##### Build\n\n**Windows**\n```bash\npy -3.7-64 -m pip install bpy --no-binary\n```\n\n**Other**\n```bash\npython3.7 -m pip install bpy --no-binary\n```\n\n#### Build from repo\n\nYou can also build after cloning the repository, this is helpful during development.\n\n##### Prerequisites\n\n```bash\npython3 -m pip install --upgrade pip wheel future-fstrings\ngit clone https://github.com/TylerGubala/blenderpy.git\n```\n\n##### Build\n\nIf you have a specific version of `bpy` you want, you have to change the `VERSION` string at the beginning of the `bpy_<optional extra>_setup.py` file.\n\nTo build, run the below command.\n\n**Windows**\n`py bpy_setup.py sdist bdist_wheel`\n**Other**\n`python3 bpy_setup.py sdist bdist_wheel`\n\nThe resultant wheel in the dist folder can be installed using pip.\n\nPost any errors you have as an issue.\n\n## FAQ\n\n### Q. I am getting `failed to find 'bpy_types' module`\n\nA. Please see [issue #13](https://github.com/TylerGubala/blenderpy/issues/13)\n\n### Q. I am getting `ImportError: DLL load failed: The specified module could not be found`\n\nA. Please see [issue #15](https://github.com/TylerGubala/blenderpy/issues/15)\n\n### Q. How do I import addons?\n\nA. Addons (Blender internal and third party) can be imported using the code [referenced here](https://github.com/TylerGubala/blenderpy/wiki/Caveat---Importing-Addons).\n\n### Q. How can I use Blender in `multiprocessing`?\n\nA. Blender runtime usage and compatibility with `multiprocessing` is limited, see [the documentation](https://github.com/TylerGubala/blenderpy/wiki/Caveat---Usage-with-multiprocessing).\n\n### Q. What about my operating system of choice?\n\nA. [MacOS support is on its way](https://github.com/TylerGubala/blenderpy/wiki/Platform---MacoOS#build-script). After that is Ubuntu.\n\n### Q. What about my Python version of choice?\n\nA. Some builds you will have to make yourself if you have a specific version of the API you want. Likewise, if you are contrained to a specific Python version (especially those that aren't shipped by python.org) then you may have to try and build yourself.\n\n## Gotchas\n\nI have not tested this for platforms other than Windows Python 3.6.x at the moment. More to come soon.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TylerGubala/blenderpy", "keywords": "Blender,3D,Animation,Renderer,Rendering", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "bpy", "package_url": "https://pypi.org/project/bpy/", "platform": "", "project_url": "https://pypi.org/project/bpy/", "project_urls": {"Homepage": "https://github.com/TylerGubala/blenderpy"}, "release_url": "https://pypi.org/project/bpy/0.0.0a0/", "requires_dist": null, "requires_python": ">=3.4.0", "summary": "Blender as a python module", "version": "0.0.0a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>blenderpy</h1>\n<p>Blender as a python module with easy-install</p>\n<h2>About</h2>\n<p>Meant for installation into a virtualenv or wherever, for unit testing of Blender extensions being authored, or developement of a Blender 3d-enabled Python application.</p>\n<p>Depends upon the <code>bpy-build</code> module to make sure the Blender <code>bpy</code> module environment is correct.</p>\n<p>For more information, please see:</p>\n<p><a href=\"https://github.com/TylerGubala/bpy-build\" rel=\"nofollow\">bpy-build repository</a></p>\n<h2>Getting Started</h2>\n<p>Prebuilt wheels are provided for popular Platforms (MacOS, Windows, and Ubuntu). Prebuilds include \"normal\" installation (<code>bpy</code>), CUDA (<code>bpy-cuda</code>) and Optix (<code>bpy-optix</code>). Choosing the correct version depends on your use-case and hardware but in general <code>bpy</code> should be just fine for non-rendering automation tasks while <code>bpy-optix</code> has the best performance but requires a NVIDIA RTX Card and up to date drivers.</p>\n<h3>Installing</h3>\n<p>Installing a prebuilt on these platforms is simple.</p>\n<h4>Windows</h4>\n<p><code>py -m pip install bpy &amp;&amp; bpy_post_install</code></p>\n<h4>MacOS</h4>\n<p><code>python3 -m pip install bpy &amp;&amp; bpy_post_install</code></p>\n<h4>Other</h4>\n<p><code>python3 -m pip install bpy</code></p>\n<h3>Self Building</h3>\n<p>Building the Blender API for your own platform can be difficult, however this repo should make it easy enough for you to create your own builds by hand.</p>\n<h4>Build from <code>sdist</code></h4>\n<p>You can build from a source distribution using <code>pip</code>.</p>\n<h5>Prerequisites</h5>\n<p><strong>Windows</strong></p>\n<pre>py -3.7-64 -m pip install --upgrade pip wheel future-fstrings\n</pre>\n<p><strong>Other</strong></p>\n<pre>python3.7 -m pip install --upgrade pip wheel future-fstrings\n</pre>\n<h5>Build</h5>\n<p><strong>Windows</strong></p>\n<pre>py -3.7-64 -m pip install bpy --no-binary\n</pre>\n<p><strong>Other</strong></p>\n<pre>python3.7 -m pip install bpy --no-binary\n</pre>\n<h4>Build from repo</h4>\n<p>You can also build after cloning the repository, this is helpful during development.</p>\n<h5>Prerequisites</h5>\n<pre>python3 -m pip install --upgrade pip wheel future-fstrings\ngit clone https://github.com/TylerGubala/blenderpy.git\n</pre>\n<h5>Build</h5>\n<p>If you have a specific version of <code>bpy</code> you want, you have to change the <code>VERSION</code> string at the beginning of the <code>bpy_&lt;optional extra&gt;_setup.py</code> file.</p>\n<p>To build, run the below command.</p>\n<p><strong>Windows</strong>\n<code>py bpy_setup.py sdist bdist_wheel</code>\n<strong>Other</strong>\n<code>python3 bpy_setup.py sdist bdist_wheel</code></p>\n<p>The resultant wheel in the dist folder can be installed using pip.</p>\n<p>Post any errors you have as an issue.</p>\n<h2>FAQ</h2>\n<h3>Q. I am getting <code>failed to find 'bpy_types' module</code></h3>\n<p>A. Please see <a href=\"https://github.com/TylerGubala/blenderpy/issues/13\" rel=\"nofollow\">issue #13</a></p>\n<h3>Q. I am getting <code>ImportError: DLL load failed: The specified module could not be found</code></h3>\n<p>A. Please see <a href=\"https://github.com/TylerGubala/blenderpy/issues/15\" rel=\"nofollow\">issue #15</a></p>\n<h3>Q. How do I import addons?</h3>\n<p>A. Addons (Blender internal and third party) can be imported using the code <a href=\"https://github.com/TylerGubala/blenderpy/wiki/Caveat---Importing-Addons\" rel=\"nofollow\">referenced here</a>.</p>\n<h3>Q. How can I use Blender in <code>multiprocessing</code>?</h3>\n<p>A. Blender runtime usage and compatibility with <code>multiprocessing</code> is limited, see <a href=\"https://github.com/TylerGubala/blenderpy/wiki/Caveat---Usage-with-multiprocessing\" rel=\"nofollow\">the documentation</a>.</p>\n<h3>Q. What about my operating system of choice?</h3>\n<p>A. <a href=\"https://github.com/TylerGubala/blenderpy/wiki/Platform---MacoOS#build-script\" rel=\"nofollow\">MacOS support is on its way</a>. After that is Ubuntu.</p>\n<h3>Q. What about my Python version of choice?</h3>\n<p>A. Some builds you will have to make yourself if you have a specific version of the API you want. Likewise, if you are contrained to a specific Python version (especially those that aren't shipped by python.org) then you may have to try and build yourself.</p>\n<h2>Gotchas</h2>\n<p>I have not tested this for platforms other than Windows Python 3.6.x at the moment. More to come soon.</p>\n\n          </div>"}, "last_serial": 7171196, "releases": {"0.0.0a0": [{"comment_text": "", "digests": {"md5": "086e48baa7bf5f9501bf717316b28ffe", "sha256": "b48c0348cccaf9ad316bccd3dc65fdc8422e4c310c79c85448b01ae7feb7f02e"}, "downloads": -1, "filename": "bpy-0.0.0a0.tar.gz", "has_sig": false, "md5_digest": "086e48baa7bf5f9501bf717316b28ffe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 19228, "upload_time": "2020-05-05T11:01:38", "upload_time_iso_8601": "2020-05-05T11:01:38.673044Z", "url": "https://files.pythonhosted.org/packages/bc/e2/20c6d56f1143e13c0fc24a7d987ee28e4949b8edbbbb1b66f705d129bdc5/bpy-0.0.0a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "086e48baa7bf5f9501bf717316b28ffe", "sha256": "b48c0348cccaf9ad316bccd3dc65fdc8422e4c310c79c85448b01ae7feb7f02e"}, "downloads": -1, "filename": "bpy-0.0.0a0.tar.gz", "has_sig": false, "md5_digest": "086e48baa7bf5f9501bf717316b28ffe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 19228, "upload_time": "2020-05-05T11:01:38", "upload_time_iso_8601": "2020-05-05T11:01:38.673044Z", "url": "https://files.pythonhosted.org/packages/bc/e2/20c6d56f1143e13c0fc24a7d987ee28e4949b8edbbbb1b66f705d129bdc5/bpy-0.0.0a0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:27 2020"}