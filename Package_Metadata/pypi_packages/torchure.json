{"info": {"author": "CHEN Si Yu", "author_email": "sychen@zju.edu.cn", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# TorchFun (originally Torchure)\n\n##for those who expect more convenient features from torch\n<!-- ### -- for those who suffer from torch -->\n\n### Functionality\n\n* flatten(tensor)\n* imshow(tensor_batch)\n* load\n\n## Install TorchFun\n\n```bash\npip install torchfun\n```\n\n## API\n\n### Flatten (Module)\nused to reshape outputs\n\nUsage:\n\n    flat = Flatten()\n    out = flat(x)\n\n\n### flatten (function)\n\nUsage:\n\n    out = flatten(x)\n\n\n### imshow (function)\n\nonly deal with torch channel-first image batch,\n\nArguements:\n\n* x: input data cube, torch tensor or numpy array.\n* title: add title to plot. (Default None)\n    * title can be string, or any string-able object.\n* auto_close: (default True) \n    * Close the pyplot session afterwards. \n    * Clean the environment just like you had never used matplotlib here.\n    * if set to False, the plot will remain in the memory for further drawings.\n\nUsage:\n\nimshow(batch)\nimshow(batch,title=[a,b,c])\nimshow(batch,title='title')\nimshow(batch,auto_close=False) \n\n### load (function)\nArguements:\n* arbitrary arguemnts named : `a` and `b`\nLoad weight `a` into model `b`, or load model `b` using weight `a`\nThe order of the arguments doesn't matter.\nExample:\n\n    >load('weights.pts',model)\n\nor\n\n    >load(model,'weights.pts')\n\nor\n\n    >f = open('weight.pts')\n    >load(f,model)\n\nor\n\n    >load(model,f)\n\nReturn value:\n* None\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sorenchiron/torchfun", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "torchure", "package_url": "https://pypi.org/project/torchure/", "platform": "", "project_url": "https://pypi.org/project/torchure/", "project_urls": {"Homepage": "https://github.com/sorenchiron/torchfun"}, "release_url": "https://pypi.org/project/torchure/0.0.14/", "requires_dist": ["numpy", "torch", "torchvision", "matplotlib"], "requires_python": "", "summary": "A collection of small functions that supplements torch functionality", "version": "0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TorchFun (originally Torchure)</h1>\n<p>##for those who expect more convenient features from torch</p>\n\n<h3>Functionality</h3>\n<ul>\n<li>flatten(tensor)</li>\n<li>imshow(tensor_batch)</li>\n<li>load</li>\n</ul>\n<h2>Install TorchFun</h2>\n<pre>pip install torchfun\n</pre>\n<h2>API</h2>\n<h3>Flatten (Module)</h3>\n<p>used to reshape outputs</p>\n<p>Usage:</p>\n<pre><code>flat = Flatten()\nout = flat(x)\n</code></pre>\n<h3>flatten (function)</h3>\n<p>Usage:</p>\n<pre><code>out = flatten(x)\n</code></pre>\n<h3>imshow (function)</h3>\n<p>only deal with torch channel-first image batch,</p>\n<p>Arguements:</p>\n<ul>\n<li>x: input data cube, torch tensor or numpy array.</li>\n<li>title: add title to plot. (Default None)\n<ul>\n<li>title can be string, or any string-able object.</li>\n</ul>\n</li>\n<li>auto_close: (default True)\n<ul>\n<li>Close the pyplot session afterwards.</li>\n<li>Clean the environment just like you had never used matplotlib here.</li>\n<li>if set to False, the plot will remain in the memory for further drawings.</li>\n</ul>\n</li>\n</ul>\n<p>Usage:</p>\n<p>imshow(batch)\nimshow(batch,title=[a,b,c])\nimshow(batch,title='title')\nimshow(batch,auto_close=False)</p>\n<h3>load (function)</h3>\n<p>Arguements:</p>\n<ul>\n<li>\n<p>arbitrary arguemnts named : <code>a</code> and <code>b</code>\nLoad weight <code>a</code> into model <code>b</code>, or load model <code>b</code> using weight <code>a</code>\nThe order of the arguments doesn't matter.\nExample:</p>\n<blockquote>\n<p>load('weights.pts',model)</p>\n</blockquote>\n</li>\n</ul>\n<p>or</p>\n<pre><code>&gt;load(model,'weights.pts')\n</code></pre>\n<p>or</p>\n<pre><code>&gt;f = open('weight.pts')\n&gt;load(f,model)\n</code></pre>\n<p>or</p>\n<pre><code>&gt;load(model,f)\n</code></pre>\n<p>Return value:</p>\n<ul>\n<li>None</li>\n</ul>\n\n          </div>"}, "last_serial": 4007387, "releases": {"0.0.14": [{"comment_text": "", "digests": {"md5": "fcb2d7ea345d441c5f406830a38f61d8", "sha256": "470532be49d0b0caf95dd037566e4574f16d208f9752f7fb2dcd2fc68ddba5b0"}, "downloads": -1, "filename": "torchure-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "fcb2d7ea345d441c5f406830a38f61d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3418, "upload_time": "2018-06-27T13:16:05", "upload_time_iso_8601": "2018-06-27T13:16:05.114538Z", "url": "https://files.pythonhosted.org/packages/5a/7b/c956f56f8a6d27a1b7ae43e6f696579e7888018b5f5959620e2aac897b1b/torchure-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2daa09bd1e897d788a2090b06ccf53ca", "sha256": "b03b594fcbe225f734e6b920a2bf8d1778aba40e3736e8209138158753b5ab68"}, "downloads": -1, "filename": "torchure-0.0.14.tar.gz", "has_sig": false, "md5_digest": "2daa09bd1e897d788a2090b06ccf53ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2906, "upload_time": "2018-06-27T13:16:06", "upload_time_iso_8601": "2018-06-27T13:16:06.411476Z", "url": "https://files.pythonhosted.org/packages/13/2e/59b35ba8bd0bdfd57c8cb445730c1cfa5ed2b76f965836dfb37713907fc1/torchure-0.0.14.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fcb2d7ea345d441c5f406830a38f61d8", "sha256": "470532be49d0b0caf95dd037566e4574f16d208f9752f7fb2dcd2fc68ddba5b0"}, "downloads": -1, "filename": "torchure-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "fcb2d7ea345d441c5f406830a38f61d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3418, "upload_time": "2018-06-27T13:16:05", "upload_time_iso_8601": "2018-06-27T13:16:05.114538Z", "url": "https://files.pythonhosted.org/packages/5a/7b/c956f56f8a6d27a1b7ae43e6f696579e7888018b5f5959620e2aac897b1b/torchure-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2daa09bd1e897d788a2090b06ccf53ca", "sha256": "b03b594fcbe225f734e6b920a2bf8d1778aba40e3736e8209138158753b5ab68"}, "downloads": -1, "filename": "torchure-0.0.14.tar.gz", "has_sig": false, "md5_digest": "2daa09bd1e897d788a2090b06ccf53ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2906, "upload_time": "2018-06-27T13:16:06", "upload_time_iso_8601": "2018-06-27T13:16:06.411476Z", "url": "https://files.pythonhosted.org/packages/13/2e/59b35ba8bd0bdfd57c8cb445730c1cfa5ed2b76f965836dfb37713907fc1/torchure-0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:04 2020"}