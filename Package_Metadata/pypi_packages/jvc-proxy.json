{"info": {"author": "Dermot Duffy", "author_email": "dermot.duffy@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Home Automation"], "description": "Overview of JVC Proxy\n=====================\n\nA tiny server that acts as a proxy between a client and a JVC projector such a\nprojector. JVC projectors insist on an additional 3-way handshake (PJ_OK,\nPJREQ, PJACK) in addition to the normal TCP 3-way handshake. This means that\ncertain home automation appliances may have timing difficulties communicating\nwith the projector as they lack the protocol knowledge to implement the\nadditional handshake.\n\nSee `JVC Projector Control codes\n<http://support.jvc.com/consumer/support/documents/DILAremoteControlGuide.pdf>`_\nfor the actual codes to effectively manage a JVC projector.\n\nUsing the server\n----------------\n\nStart the server, proxy between localhost and 'my-projector' on the usual JVC\ncontrol port number (20554).\n\n::\n\n    $ jvc_proxy -l DEBUG -r 2 -t 1 my-projector\n\nBinds the server to an IP address / hostname that is accessible external to the\nmachine (i.e. not localhost). Set logging level to DEBUG (will log the actual\nbytes proxied). Will retry failed connections to the projector twice. Allows 1\nsecond timeout on network operations.\n\n::\n\n    $ jvc_proxy --proxy_host my-pc -l DEBUG -r 2 -t 1 my-projector\n\nAvailable arguments:\n\n::\n\n    usage: jvc_proxy.py [-h] [--jvc_port JVC_PORT] [--proxy_host PROXY_HOST]\n                        [--proxy_port PROXY_PORT] [-t TIMEOUT] [-v VERBOSE]\n                        [-l {ERROR,WARNING,INFO,DEBUG}] [-r RETRIES]\n                        [-w RETRY_WAIT]\n                        jvc_host\n\n    positional arguments:\n      jvc_host              JVC host to proxy to. Default: 20554.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --jvc_port JVC_PORT   JVC port number to connect to.\n      --proxy_host PROXY_HOST\n                            Proxy server host/IP to bind to. Default: localhost.\n      --proxy_port PROXY_PORT\n                            Proxy server port number to listen on. Default: 20554.\n      -t TIMEOUT, --timeout TIMEOUT\n                            Timeout for network operations (seconds). Default: 2.\n      -v VERBOSE, --verbose VERBOSE\n                            Whether or not to output proxied data. Default: False.\n      -l {ERROR,WARNING,INFO,DEBUG}, --loglevel {ERROR,WARNING,INFO,DEBUG}\n                            Logging level. Default: ERROR.\n      -r RETRIES, --retries RETRIES\n                            Number of retries to allow in connection to the JVC\n                            host. Default: 0\n      -w RETRY_WAIT, --retry_wait RETRY_WAIT\n                            Seconds to wait between connection retries. Default:\n                            5.\n\n\nStarting the server by default\n------------------------------\n\nUse the included jvc_proxy.service to start the server as a systemd\nunit.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dermotduffy/jvc_proxy", "keywords": "jvc proxy projector", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "jvc-proxy", "package_url": "https://pypi.org/project/jvc-proxy/", "platform": "any", "project_url": "https://pypi.org/project/jvc-proxy/", "project_urls": {"Homepage": "https://github.com/dermotduffy/jvc_proxy"}, "release_url": "https://pypi.org/project/jvc-proxy/0.0.1/", "requires_dist": ["future"], "requires_python": "", "summary": "Simple Python server to proxy commands to a JVC projector.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A tiny server that acts as a proxy between a client and a JVC projector such a\nprojector. JVC projectors insist on an additional 3-way handshake (PJ_OK,\nPJREQ, PJACK) in addition to the normal TCP 3-way handshake. This means that\ncertain home automation appliances may have timing difficulties communicating\nwith the projector as they lack the protocol knowledge to implement the\nadditional handshake.</p>\n<p>See <a href=\"http://support.jvc.com/consumer/support/documents/DILAremoteControlGuide.pdf\" rel=\"nofollow\">JVC Projector Control codes</a>\nfor the actual codes to effectively manage a JVC projector.</p>\n<div id=\"using-the-server\">\n<h2>Using the server</h2>\n<p>Start the server, proxy between localhost and \u2018my-projector\u2019 on the usual JVC\ncontrol port number (20554).</p>\n<pre>$ jvc_proxy -l DEBUG -r 2 -t 1 my-projector\n</pre>\n<p>Binds the server to an IP address / hostname that is accessible external to the\nmachine (i.e. not localhost). Set logging level to DEBUG (will log the actual\nbytes proxied). Will retry failed connections to the projector twice. Allows 1\nsecond timeout on network operations.</p>\n<pre>$ jvc_proxy --proxy_host my-pc -l DEBUG -r 2 -t 1 my-projector\n</pre>\n<p>Available arguments:</p>\n<pre>usage: jvc_proxy.py [-h] [--jvc_port JVC_PORT] [--proxy_host PROXY_HOST]\n                    [--proxy_port PROXY_PORT] [-t TIMEOUT] [-v VERBOSE]\n                    [-l {ERROR,WARNING,INFO,DEBUG}] [-r RETRIES]\n                    [-w RETRY_WAIT]\n                    jvc_host\n\npositional arguments:\n  jvc_host              JVC host to proxy to. Default: 20554.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --jvc_port JVC_PORT   JVC port number to connect to.\n  --proxy_host PROXY_HOST\n                        Proxy server host/IP to bind to. Default: localhost.\n  --proxy_port PROXY_PORT\n                        Proxy server port number to listen on. Default: 20554.\n  -t TIMEOUT, --timeout TIMEOUT\n                        Timeout for network operations (seconds). Default: 2.\n  -v VERBOSE, --verbose VERBOSE\n                        Whether or not to output proxied data. Default: False.\n  -l {ERROR,WARNING,INFO,DEBUG}, --loglevel {ERROR,WARNING,INFO,DEBUG}\n                        Logging level. Default: ERROR.\n  -r RETRIES, --retries RETRIES\n                        Number of retries to allow in connection to the JVC\n                        host. Default: 0\n  -w RETRY_WAIT, --retry_wait RETRY_WAIT\n                        Seconds to wait between connection retries. Default:\n                        5.\n</pre>\n</div>\n<div id=\"starting-the-server-by-default\">\n<h2>Starting the server by default</h2>\n<p>Use the included jvc_proxy.service to start the server as a systemd\nunit.</p>\n</div>\n\n          </div>"}, "last_serial": 3063772, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7d0a066fd6c64242193ba5a9069d1122", "sha256": "d903e3e4d109fc52295cb1628fe48a0b7faf15c6b8a02050f419cbf8a794a028"}, "downloads": -1, "filename": "jvc_proxy-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d0a066fd6c64242193ba5a9069d1122", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7034, "upload_time": "2017-08-01T09:02:20", "upload_time_iso_8601": "2017-08-01T09:02:20.235922Z", "url": "https://files.pythonhosted.org/packages/ca/7a/f130f65935413a60994fff57567ed4c525af80b4524375bcad6ca8ba24e6/jvc_proxy-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db2d2a7c19a4de3bd50acee860ffebaf", "sha256": "76cab61a4dbe3382fbab0bf8b83ecefce54184f61c19c58b08604d3981d52799"}, "downloads": -1, "filename": "jvc_proxy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "db2d2a7c19a4de3bd50acee860ffebaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8619, "upload_time": "2017-08-01T09:02:21", "upload_time_iso_8601": "2017-08-01T09:02:21.243006Z", "url": "https://files.pythonhosted.org/packages/05/c2/bf4313315a57045bd908dd6b4088ceff98113daa0e8189584087d6310a3d/jvc_proxy-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d0a066fd6c64242193ba5a9069d1122", "sha256": "d903e3e4d109fc52295cb1628fe48a0b7faf15c6b8a02050f419cbf8a794a028"}, "downloads": -1, "filename": "jvc_proxy-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d0a066fd6c64242193ba5a9069d1122", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7034, "upload_time": "2017-08-01T09:02:20", "upload_time_iso_8601": "2017-08-01T09:02:20.235922Z", "url": "https://files.pythonhosted.org/packages/ca/7a/f130f65935413a60994fff57567ed4c525af80b4524375bcad6ca8ba24e6/jvc_proxy-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db2d2a7c19a4de3bd50acee860ffebaf", "sha256": "76cab61a4dbe3382fbab0bf8b83ecefce54184f61c19c58b08604d3981d52799"}, "downloads": -1, "filename": "jvc_proxy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "db2d2a7c19a4de3bd50acee860ffebaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8619, "upload_time": "2017-08-01T09:02:21", "upload_time_iso_8601": "2017-08-01T09:02:21.243006Z", "url": "https://files.pythonhosted.org/packages/05/c2/bf4313315a57045bd908dd6b4088ceff98113daa0e8189584087d6310a3d/jvc_proxy-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:01 2020"}