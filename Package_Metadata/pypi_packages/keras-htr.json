{"info": {"author": "Evgenii Dolotov", "author_email": "supernovaprotocol@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# A toolkit for developing handwritten text recognition (HTR) pipelines\n\nEasy to use toolkit for the rapid development of offline handwritten text recognition (HTR) system. \nThe toolkit provides a set of useful utilities and scripts for training and evaluating \nmodels and performing recognition. It is shipped with ready-to-train model \nimplementations for HTR tasks.\n\n## Key features\n- built-in model implementations\n- automatic data pre-processing\n- built-in performance metrics: LER (label error rate)\n- data-set independence\n- handwriting language independence\n\n## Built-in models\n- 1D-LSTM [1] by Joan Puigcerver\n\n# Quick start\n\nCreate working HTR system in just 4 steps:\n- Subclass Source class representing raw data examples\n- Use the data source to build a dataset\n- Train model with a particular architecture on the dataset\n- Take trained model and use it to perform recognition\n\nYou only need to focus on the first step. Once you implement a class \nfor a data source, the steps that follow will automatically pre-process \nthe data,  train a neural network and save it.\n\nBelow is example of training 1D-LSTM model on synthetic images using SyntheticSource class. \n\n## Build a dataset using synthetic words data source, store it in temp_ds folder\n```\npython build_lines_dataset.py --source='keras_htr.data_source.synthetic.SyntheticSource' --destination=temp_ds\n```\nNote that the source argument expects a fully-qualified name of a class representing a data source.\n\n## Train a model\n```\npython train.py temp_ds --units=32 --epochs=35 --model_path=conv_lstm_model.h5\n```\n## Run demo script\n```\npython demo.py conv_lstm_model.h5 temp_ds/test\n```\n## Recognize handwriting\n```\npython htr.py conv_lstm_model.h5 temp_ds/character_table.txt temp_ds/test/0.png\n```\n\n# Data sources\n\nA data source is a Python generator that yields raw examples in the form of tuples \n(text, line_image). The Keras-HTR toolkit uses data sources to construct a train/val/test split, \nbuild a character table, collect useful meta-information about the data set such as \naverage image height, width and more.\n\nTo train a model on your data, you need to create your subclass of Source class and \nimplement an iterator method that yields a pair (line_image, text) at each step.\nHere line_image is either a path to an image file or Pillow image object, the text \nis a corresponding transcription.\n\n## SyntheticSource\n\nIt is generator of printed text examples\n\n## IAMSource\nIt is generator of handwritings taken from IAM handwriting database.\nBefore you can use this source, you have to download the actual database:\nhttp://www.fki.inf.unibe.ch/databases/iam-handwriting-database.\n\n# References\n\n[1] [Joan Puigcerver. Are Multidimensional Recurrent Layers Really Necessary for Handwritten Text Recognition?](http://www.jpuigcerver.net/pubs/jpuigcerver_icdar2017.pdf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/X-rayLaser/Keras-HTR", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "keras-htr", "package_url": "https://pypi.org/project/keras-htr/", "platform": "", "project_url": "https://pypi.org/project/keras-htr/", "project_urls": {"Homepage": "https://github.com/X-rayLaser/Keras-HTR"}, "release_url": "https://pypi.org/project/keras-htr/0.1.0.post1/", "requires_dist": ["numpy", "tensorflow (>=2)", "Pillow", "scipy"], "requires_python": "", "summary": "A toolkit for developing handwritten text recognition (HTR) pipelines", "version": "0.1.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>A toolkit for developing handwritten text recognition (HTR) pipelines</h1>\n<p>Easy to use toolkit for the rapid development of offline handwritten text recognition (HTR) system.\nThe toolkit provides a set of useful utilities and scripts for training and evaluating\nmodels and performing recognition. It is shipped with ready-to-train model\nimplementations for HTR tasks.</p>\n<h2>Key features</h2>\n<ul>\n<li>built-in model implementations</li>\n<li>automatic data pre-processing</li>\n<li>built-in performance metrics: LER (label error rate)</li>\n<li>data-set independence</li>\n<li>handwriting language independence</li>\n</ul>\n<h2>Built-in models</h2>\n<ul>\n<li>1D-LSTM [1] by Joan Puigcerver</li>\n</ul>\n<h1>Quick start</h1>\n<p>Create working HTR system in just 4 steps:</p>\n<ul>\n<li>Subclass Source class representing raw data examples</li>\n<li>Use the data source to build a dataset</li>\n<li>Train model with a particular architecture on the dataset</li>\n<li>Take trained model and use it to perform recognition</li>\n</ul>\n<p>You only need to focus on the first step. Once you implement a class\nfor a data source, the steps that follow will automatically pre-process\nthe data,  train a neural network and save it.</p>\n<p>Below is example of training 1D-LSTM model on synthetic images using SyntheticSource class.</p>\n<h2>Build a dataset using synthetic words data source, store it in temp_ds folder</h2>\n<pre><code>python build_lines_dataset.py --source='keras_htr.data_source.synthetic.SyntheticSource' --destination=temp_ds\n</code></pre>\n<p>Note that the source argument expects a fully-qualified name of a class representing a data source.</p>\n<h2>Train a model</h2>\n<pre><code>python train.py temp_ds --units=32 --epochs=35 --model_path=conv_lstm_model.h5\n</code></pre>\n<h2>Run demo script</h2>\n<pre><code>python demo.py conv_lstm_model.h5 temp_ds/test\n</code></pre>\n<h2>Recognize handwriting</h2>\n<pre><code>python htr.py conv_lstm_model.h5 temp_ds/character_table.txt temp_ds/test/0.png\n</code></pre>\n<h1>Data sources</h1>\n<p>A data source is a Python generator that yields raw examples in the form of tuples\n(text, line_image). The Keras-HTR toolkit uses data sources to construct a train/val/test split,\nbuild a character table, collect useful meta-information about the data set such as\naverage image height, width and more.</p>\n<p>To train a model on your data, you need to create your subclass of Source class and\nimplement an iterator method that yields a pair (line_image, text) at each step.\nHere line_image is either a path to an image file or Pillow image object, the text\nis a corresponding transcription.</p>\n<h2>SyntheticSource</h2>\n<p>It is generator of printed text examples</p>\n<h2>IAMSource</h2>\n<p>It is generator of handwritings taken from IAM handwriting database.\nBefore you can use this source, you have to download the actual database:\n<a href=\"http://www.fki.inf.unibe.ch/databases/iam-handwriting-database\" rel=\"nofollow\">http://www.fki.inf.unibe.ch/databases/iam-handwriting-database</a>.</p>\n<h1>References</h1>\n<p>[1] <a href=\"http://www.jpuigcerver.net/pubs/jpuigcerver_icdar2017.pdf\" rel=\"nofollow\">Joan Puigcerver. Are Multidimensional Recurrent Layers Really Necessary for Handwritten Text Recognition?</a></p>\n\n          </div>"}, "last_serial": 6959078, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4e4c9a240c689acb78fdfd3529899d4e", "sha256": "b83d434c9d71677c14d15247c7b26155dcc873a6e0eb132cec0a670402daf2dc"}, "downloads": -1, "filename": "keras_htr-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4e4c9a240c689acb78fdfd3529899d4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10876, "upload_time": "2020-03-27T14:36:05", "upload_time_iso_8601": "2020-03-27T14:36:05.813811Z", "url": "https://files.pythonhosted.org/packages/7f/d2/097eb972a2197020b5676deae944154f23691bb94d82467724808664710b/keras_htr-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aa7a950e17c79b2be0febe7574ac3d7", "sha256": "872e0c1c73687939cf19044352cd75db00bde5642ff6cc037ac3cd688cf39946"}, "downloads": -1, "filename": "keras_htr-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3aa7a950e17c79b2be0febe7574ac3d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8121, "upload_time": "2020-03-27T14:36:08", "upload_time_iso_8601": "2020-03-27T14:36:08.284992Z", "url": "https://files.pythonhosted.org/packages/79/76/8530c1cdef2a82432eab4dbdca8c615c60107fcb4d13cb31f3dc178854cb/keras_htr-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8890b8a9900fc8d2d52bb33771bcacdf", "sha256": "2efc704c24c219dd07e2c9b42e5f681382d1798301231226e12e3ef5b5c7d014"}, "downloads": -1, "filename": "keras_htr-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8890b8a9900fc8d2d52bb33771bcacdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14107, "upload_time": "2020-04-06T04:25:00", "upload_time_iso_8601": "2020-04-06T04:25:00.089476Z", "url": "https://files.pythonhosted.org/packages/3f/74/cbc1e9d32aa1af7d2c516aa74977f2d45cc64dd1f02f177af8ab8dff2b13/keras_htr-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a139632ed98752269ffd7a4932c5403", "sha256": "8d5c9b14828dc64ff76053f96cd6aab06ed8375f02b4ba6e9046b83cdf50685a"}, "downloads": -1, "filename": "keras_htr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8a139632ed98752269ffd7a4932c5403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10952, "upload_time": "2020-04-06T04:25:01", "upload_time_iso_8601": "2020-04-06T04:25:01.794338Z", "url": "https://files.pythonhosted.org/packages/bf/f7/1ca9ebf4c31bf61d7930d84a714f78e818219e2fec010a9772e93982c157/keras_htr-0.1.0.tar.gz", "yanked": false}], "0.1.0.post1": [{"comment_text": "", "digests": {"md5": "8c0a6511172bcb01dc09bdaf00ce63dd", "sha256": "a5f4bff999c2d0e7a62ad007253595e1e4b5cd4993884e1b2e8e8a8a575f2f32"}, "downloads": -1, "filename": "keras_htr-0.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "8c0a6511172bcb01dc09bdaf00ce63dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14233, "upload_time": "2020-04-06T04:30:31", "upload_time_iso_8601": "2020-04-06T04:30:31.926865Z", "url": "https://files.pythonhosted.org/packages/a2/ba/4b6488b3fea13255bf52364755917b89e24cc7f03afd7f107b1840330331/keras_htr-0.1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7611c6193d694f38dccb5d47cc601dc0", "sha256": "6a1d651dbf7eeb6e813c5e112d44158fb5a8139f952c04dcac9a1b9be85fb405"}, "downloads": -1, "filename": "keras_htr-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "7611c6193d694f38dccb5d47cc601dc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10990, "upload_time": "2020-04-06T04:30:33", "upload_time_iso_8601": "2020-04-06T04:30:33.512284Z", "url": "https://files.pythonhosted.org/packages/23/a6/d4e6a072db8605778c553f5b761251cf0af1cdad12061a5e43a5dd0e4676/keras_htr-0.1.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c0a6511172bcb01dc09bdaf00ce63dd", "sha256": "a5f4bff999c2d0e7a62ad007253595e1e4b5cd4993884e1b2e8e8a8a575f2f32"}, "downloads": -1, "filename": "keras_htr-0.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "8c0a6511172bcb01dc09bdaf00ce63dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14233, "upload_time": "2020-04-06T04:30:31", "upload_time_iso_8601": "2020-04-06T04:30:31.926865Z", "url": "https://files.pythonhosted.org/packages/a2/ba/4b6488b3fea13255bf52364755917b89e24cc7f03afd7f107b1840330331/keras_htr-0.1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7611c6193d694f38dccb5d47cc601dc0", "sha256": "6a1d651dbf7eeb6e813c5e112d44158fb5a8139f952c04dcac9a1b9be85fb405"}, "downloads": -1, "filename": "keras_htr-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "7611c6193d694f38dccb5d47cc601dc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10990, "upload_time": "2020-04-06T04:30:33", "upload_time_iso_8601": "2020-04-06T04:30:33.512284Z", "url": "https://files.pythonhosted.org/packages/23/a6/d4e6a072db8605778c553f5b761251cf0af1cdad12061a5e43a5dd0e4676/keras_htr-0.1.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:12 2020"}