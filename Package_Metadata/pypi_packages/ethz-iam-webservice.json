{"info": {"author": "Swen Vermeul |  ID SIS | ETH Z\u00fcrich", "author_email": "swen@ethz.ch", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# ETHZ IAM Webservice\n\nManage users, groups and services of the ETH Identity and Access Management system (IAM)\n\n## Synopsis\n\n### Beginning\n```\nimport ethz_iam_webservice\nimport getpass\n\ne = ethz_iam_webservice.login('admin4iam', getpass.getpass())\n```\n\n### Person\n```\nperson = e.get_person('name@example.com')\nperson = e.get_person('some_username')\nperson = e.get_person(123456)             # npid (internal Person identifier)\n\nperson.usernames                          # an array of dicts of usernames\nperson.data                               # raw webservice response\nperson.firstname\nperson.familyname\nperson.email\n# etc.\n```\n\n### User\n\n```\nuser = person.new_user('username', 'password', 'description')\nuser = e.get_user('username')\nuser.services                             # an array of dicts of services\n\nuser.grant_service(\"LDAPS\")\nuser.grant_service(\"Active Directory\")\nuser.grant_service(\"WLAN_VPN\")\n\nuser.revoke_service(\"LDAP\")\n\nuser.delete() \nuser.add_to_group('groupname')\nuser.remove_from_group('groupname')\n```\n\n### Group and Group Members\n\n**get single group** - returns a Group object or throws a ValueError if group is not found\n\n```\ngroup = e.get_group('groupname')\ngroup = e.get_group(123456)        # gidNumber\ngroup.data                         # all data received from webservice\ngroup.members                      # returns array of usernames or group-names\ngroup.gidNumber\ngroup.<attribute>\n```\n\n**add/remove group members**\n\n```\ngroup.add_members('some', 'new', 'members')\ngroup.set_members('just', 'these')\ngroup.del_members('remove', 'these', 'members')\n```\n\n**search for groups** - Result is always a list of groups or an empty list\n\n```\ngroups = e.get_groups(agroup='ID SIS')\ngroups = e.get_groups(name='starts_with*')\ngroups = e.get_groups(agroup='ID SIS', name='starts_with*')\n```\n\n### Mailinglists\n\n```\nml = e.get_mailinglist('ID.SIS.SSDM')\nml = e.get_mailinglist('sis@id.ethz.ch')\nml.name\nml.mail\nml.gidNumber\nml.groupType\nml.displayName\n...\n\nml.members        # returns all (direct) members of that list\nml.add_members('user1', 'user2')\nml.del_members('user3, 'user4')\n```\n\nSee also [FAQ](https://gitlab.ethz.ch/vermeul/ethz-iam-webservice/-/wikis/FAQ)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.ethz.ch/vermeul/ethz-iam-webservice", "keywords": "", "license": "Apache Software License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "ethz-iam-webservice", "package_url": "https://pypi.org/project/ethz-iam-webservice/", "platform": "", "project_url": "https://pypi.org/project/ethz-iam-webservice/", "project_urls": {"Homepage": "https://gitlab.ethz.ch/vermeul/ethz-iam-webservice"}, "release_url": "https://pypi.org/project/ethz-iam-webservice/0.1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Manage users, groups and services of the ETH Identity and Access Management system (IAM)", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ETHZ IAM Webservice</h1>\n<p>Manage users, groups and services of the ETH Identity and Access Management system (IAM)</p>\n<h2>Synopsis</h2>\n<h3>Beginning</h3>\n<pre><code>import ethz_iam_webservice\nimport getpass\n\ne = ethz_iam_webservice.login('admin4iam', getpass.getpass())\n</code></pre>\n<h3>Person</h3>\n<pre><code>person = e.get_person('name@example.com')\nperson = e.get_person('some_username')\nperson = e.get_person(123456)             # npid (internal Person identifier)\n\nperson.usernames                          # an array of dicts of usernames\nperson.data                               # raw webservice response\nperson.firstname\nperson.familyname\nperson.email\n# etc.\n</code></pre>\n<h3>User</h3>\n<pre><code>user = person.new_user('username', 'password', 'description')\nuser = e.get_user('username')\nuser.services                             # an array of dicts of services\n\nuser.grant_service(\"LDAPS\")\nuser.grant_service(\"Active Directory\")\nuser.grant_service(\"WLAN_VPN\")\n\nuser.revoke_service(\"LDAP\")\n\nuser.delete() \nuser.add_to_group('groupname')\nuser.remove_from_group('groupname')\n</code></pre>\n<h3>Group and Group Members</h3>\n<p><strong>get single group</strong> - returns a Group object or throws a ValueError if group is not found</p>\n<pre><code>group = e.get_group('groupname')\ngroup = e.get_group(123456)        # gidNumber\ngroup.data                         # all data received from webservice\ngroup.members                      # returns array of usernames or group-names\ngroup.gidNumber\ngroup.&lt;attribute&gt;\n</code></pre>\n<p><strong>add/remove group members</strong></p>\n<pre><code>group.add_members('some', 'new', 'members')\ngroup.set_members('just', 'these')\ngroup.del_members('remove', 'these', 'members')\n</code></pre>\n<p><strong>search for groups</strong> - Result is always a list of groups or an empty list</p>\n<pre><code>groups = e.get_groups(agroup='ID SIS')\ngroups = e.get_groups(name='starts_with*')\ngroups = e.get_groups(agroup='ID SIS', name='starts_with*')\n</code></pre>\n<h3>Mailinglists</h3>\n<pre><code>ml = e.get_mailinglist('ID.SIS.SSDM')\nml = e.get_mailinglist('sis@id.ethz.ch')\nml.name\nml.mail\nml.gidNumber\nml.groupType\nml.displayName\n...\n\nml.members        # returns all (direct) members of that list\nml.add_members('user1', 'user2')\nml.del_members('user3, 'user4')\n</code></pre>\n<p>See also <a href=\"https://gitlab.ethz.ch/vermeul/ethz-iam-webservice/-/wikis/FAQ\" rel=\"nofollow\">FAQ</a></p>\n\n          </div>"}, "last_serial": 6792598, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "2e23dff9c3c165a81854b51c3e2d4a57", "sha256": "6b390d8359c87a68b3fc9c50dadc5c9aa7b1b00845fdd33e6dbbcf3cb7e01eb3"}, "downloads": -1, "filename": "ethz_iam_webservice-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2e23dff9c3c165a81854b51c3e2d4a57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4206, "upload_time": "2020-02-16T00:26:08", "upload_time_iso_8601": "2020-02-16T00:26:08.041083Z", "url": "https://files.pythonhosted.org/packages/30/82/1870c2dd252e8377ebbf5c888a2a2bbe7df5ec0a3152cec0f165081aa8b2/ethz_iam_webservice-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "cf6ab45110dee5d9093dc06e6e490803", "sha256": "e6eb18704157209a69ae2301a39548ba34244c01c2c4bca59af114f93fcbf2cc"}, "downloads": -1, "filename": "ethz_iam_webservice-0.0.4.tar.gz", "has_sig": false, "md5_digest": "cf6ab45110dee5d9093dc06e6e490803", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4247, "upload_time": "2020-02-16T01:26:59", "upload_time_iso_8601": "2020-02-16T01:26:59.508295Z", "url": "https://files.pythonhosted.org/packages/3a/a9/9e2a0fdd3adef8759d3dadecb25687f4dce650c885ea8931e887f4bbe0e7/ethz_iam_webservice-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6c9e33ecf04e489b828f02f232551322", "sha256": "9d754b10bd4c453d201ede091b6c2364fb5f78f175e0b2a75e037a448b19d5a4"}, "downloads": -1, "filename": "ethz_iam_webservice-0.0.5.tar.gz", "has_sig": false, "md5_digest": "6c9e33ecf04e489b828f02f232551322", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4850, "upload_time": "2020-02-25T14:26:32", "upload_time_iso_8601": "2020-02-25T14:26:32.969765Z", "url": "https://files.pythonhosted.org/packages/41/41/5978b460a1f5f66f161516a0584c4aa084bec5759107023af15cbdc10499/ethz_iam_webservice-0.0.5.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4a1a31d838f630bd15fd3c5488be12da", "sha256": "93860ddffd2662d4a7a44c32598f118393b2ffa3f082f39ab5a6d0e1f6f6ec2f"}, "downloads": -1, "filename": "ethz_iam_webservice-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4a1a31d838f630bd15fd3c5488be12da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5057, "upload_time": "2020-03-11T14:24:34", "upload_time_iso_8601": "2020-03-11T14:24:34.642781Z", "url": "https://files.pythonhosted.org/packages/8c/cf/3c6372d8416e3f13fd648872678a6cc55e44fe035aaf8ff51b7f7911b697/ethz_iam_webservice-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a1a31d838f630bd15fd3c5488be12da", "sha256": "93860ddffd2662d4a7a44c32598f118393b2ffa3f082f39ab5a6d0e1f6f6ec2f"}, "downloads": -1, "filename": "ethz_iam_webservice-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4a1a31d838f630bd15fd3c5488be12da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5057, "upload_time": "2020-03-11T14:24:34", "upload_time_iso_8601": "2020-03-11T14:24:34.642781Z", "url": "https://files.pythonhosted.org/packages/8c/cf/3c6372d8416e3f13fd648872678a6cc55e44fe035aaf8ff51b7f7911b697/ethz_iam_webservice-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:25 2020"}