{"info": {"author": "Johannes Valbj\u00f8rn", "author_email": "jgv@trustpilot.com", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# lambdarest\n\n[![Build Status](https://travis-ci.org/trustpilot/python-lambdarest.svg?branch=master)](https://travis-ci.org/trustpilot/python-lambdarest) [![Latest Version](https://img.shields.io/pypi/v/lambdarest.svg)](https://pypi.python.org/pypi/lambdarest) [![Python Support](https://img.shields.io/pypi/pyversions/lambdarest.svg)](https://pypi.python.org/pypi/lambdarest) [![Examples tested with pytest-readme](http://img.shields.io/badge/readme-tested-brightgreen.svg)](https://github.com/boxed/pytest-readme)\n\n\nPython routing mini-framework for [AWS Lambda](https://aws.amazon.com/lambda/) with optional JSON-schema validation.\n\n### Features\n\n* `lambda_handler` function constructor with built-in dispatcher\n* Decorator to register functions to handle HTTP methods\n* Optional JSON-schema input validation using same decorator\n\n### External articles / tutorials\n\n* [devgrok.com: Create a Private Microservice Using an Application Load Balancer](http://www.devgrok.com/2019/03/create-private-microservice-using.html)\n\n  Article about how to use **lambdarest** with **AWS Application Load Balancer**\n\n* [rockset.com: Building a Serverless Microservice Using Rockset and AWS Lambda](https://rockset.com/blog/building-a-serverless-microservice-using-rockset-and-aws-lambda/)\n\n  Article about how to set up **lambdarest** in AWS infrastructure\n\n**Other articles? add them [here](https://github.com/trustpilot/python-lambdarest/issues/55)**\n\n## Installation\n\nInstall the package from [PyPI](http://pypi.python.org/pypi/) using [pip](https://pip.pypa.io/):\n\n```bash\n$ pip install lambdarest\n```\n\n## Getting Started\n\nThis module helps you to handle different HTTP methods in your AWS Lambda.\n\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\")\ndef my_own_get(event):\n    return {\"this\": \"will be json dumped\"}\n\n\n##### TEST #####\n\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/\"\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '{\"this\": \"will be json dumped\"}', \"statusCode\": 200, \"headers\":{}}\n```\n\n## Advanced Usage\n\nOptionally you can validate an incoming JSON body against a JSON schema:\n\n```python\nfrom lambdarest import lambda_handler\n\nmy_schema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"body\":{\n            \"type\": \"object\",\n            \"properties\": {\n                \"foo\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}\n\n@lambda_handler.handle(\"get\", path=\"/with-schema/\", schema=my_schema)\ndef my_own_get(event):\n    return {\"this\": \"will be json dumped\"}\n\n\n##### TEST #####\n\n\nvalid_input_event = {\n    \"body\": '{\"foo\":\"bar\"}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/with-schema/\"\n}\nresult = lambda_handler(event=valid_input_event)\nassert result == {\"body\": '{\"this\": \"will be json dumped\"}', \"statusCode\": 200, \"headers\":{}}\n\n\ninvalid_input_event = {\n    \"body\": '{\"foo\":666}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/with-schema/\"\n}\nresult = lambda_handler(event=invalid_input_event)\nassert result == {\"body\": 'Validation Error', \"statusCode\": 400, \"headers\":{}}\n```\n\n### Query Params\n\nQuery parameters are also analyzed and validatable with JSON schemas.\nQuery arrays are expected to be comma separated, all numbers are converted to floats.\n\n```python\nfrom lambdarest import lambda_handler\n\nmy_schema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"query\":{\n            \"type\": \"object\",\n            \"properties\": {\n                \"foo\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n@lambda_handler.handle(\"get\", path=\"/with-params/\", schema=my_schema)\ndef my_own_get(event):\n    return event[\"json\"][\"query\"]\n\n\n##### TEST #####\n\n\nvalid_input_event = {\n    \"queryStringParameters\": {\n        \"foo\": \"1, 2.2, 3\"\n    },\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/with-params/\"\n}\nresult = lambda_handler(event=valid_input_event)\nassert result == {\"body\": '{\"foo\": [1.0, 2.2, 3.0]}', \"statusCode\": 200, \"headers\":{}}\n```\n\n### Routing\n\nYou can also specify which path to react on for individual handlers using the `path` param:\n\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\", path=\"/foo/bar/baz\")\ndef my_own_get(event):\n    return {\"this\": \"will be json dumped\"}\n\n\n##### TEST #####\n\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/foo/bar/baz\"\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '{\"this\": \"will be json dumped\"}', \"statusCode\": 200, \"headers\":{}}\n```\n\nAnd you can specify path parameters as well, which will be passed as keyword arguments:\n\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\", path=\"/foo/<int:id>/\")\ndef my_own_get(event, id):\n    return {\"my-id\": id}\n\n\n##### TEST #####\n\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/foo/1234/\"\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '{\"my-id\": 1234}', \"statusCode\": 200, \"headers\":{}}\n```\n\nOr you can specify more complex parametrized resource path and get parameteres as arguments:\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\", path=\"/object/<int:object_id>/props/<string:foo>/get\")\ndef my_own_get(event, object_id, foo):\n    return [{\"object_id\": int(object_id)}, {\"foo\": foo}]\n\n\n##### TEST #####\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"path\": \"/v1/object/777/props/bar/get\",\n    \"resource\": \"/object/{object_id}/props/{foo}/get\",\n    \"pathParameters\": {\n      \"object_id\": \"777\",\n      \"foo\":\"bar\"\n    }\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '[{\"object_id\": 777}, {\"foo\": \"bar\"}]', \"statusCode\": 200, \"headers\":{}}\n\n```\nOr use the Proxy APIGateway magic endpoint:\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\", path=\"/bar/<path:path>\")\ndef my_own_get(event, path):\n    return {\"path\": path}\n\n\n##### TEST #####\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"path\": \"/v1/bar/baz\",\n    \"resource\": \"/bar/{proxy+}\",\n    \"pathParameters\": {\n      \"proxy\": \"bar/baz\"\n    }\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '{\"path\": \"bar/baz\"}', \"statusCode\": 200, \"headers\":{}}\n```\n\n### Scopes\n\nIf you're using a Lambda authorizer, you can pass authorization scopes as input into your Lambda function.\n\nThis is useful when using the API Gateway with a Lambda authorizer and have the Lambda authorizer return in a scopes json object the permissions (scopes) the caller has access to. In your Lambda function you can specify what scopes the caller should have to call that function. If the requested scope was not provided by the Lambda authorizer, a 403 error code is given.\n\nThe API gateway has the limitation it can only pass primitive data types from a Lambda authorizer function. The scopes list therefore needs to be json encoded by the authorizer function.\n\nTo use this, add a scopes attribute to the handler with the list of scopes your function requires. They will be verified from the requestContext.authorizer.scopes attribute from the Lambda authorizer.\n\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\", path=\"/private1\", scopes=[\"myresource.read\"])\ndef my_own_get(event):\n    return {\"this\": \"will be json dumped\"}\n\n##### TEST #####\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/private1\",\n    \"requestContext\": {\n        \"authorizer\": {\n            \"scopes\": '[\"myresource.read\"]'\n        }\n    }\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '{\"this\": \"will be json dumped\"}', \"statusCode\": 200, \"headers\":{}}\n```\nWhen no scopes are provided by the authorizer but are still requested by your function, a permission denied error is returned.\n```python\nfrom lambdarest import lambda_handler\n\n@lambda_handler.handle(\"get\", path=\"/private2\", scopes=[\"myresource.read\"])\ndef my_own_get(event):\n    return {\"this\": \"will be json dumped\"}\n\n##### TEST #####\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/private2\"\n}\nresult = lambda_handler(event=input_event)\nprint(result)\nassert result == {\"body\": \"Permission denied\", \"statusCode\": 403, \"headers\":{}}\n```\n\n## Use it with AWS Application Load Balancer\n\nIn order to use it with Application Load Balancer you need to create your own lambda_handler and not use the singleton:\n\n```python\nfrom lambdarest import create_lambda_handler\n\nlambda_handler = create_lambda_handler(application_load_balancer=True)\n\n@lambda_handler.handle(\"get\", path=\"/foo/<int:id>/\")\ndef my_own_get(event, id):\n    return {\"my-id\": id}\n\n\n##### TEST #####\n\n\ninput_event = {\n    \"body\": '{}',\n    \"httpMethod\": \"GET\",\n    \"resource\": \"/foo/1234/\"\n}\nresult = lambda_handler(event=input_event)\nassert result == {\"body\": '{\"my-id\": 1234}', \"statusCode\": 200, \"headers\":{}, \"statusDescription\": \"HTTP OK\", \"isBase64Encoded\": False}\n```\n\n## Anormal unittest behaviour with `lambda_handler` singleton\n\nBecause of python unittests leaky test-cases it seems like you shall beware of [this issue](https://github.com/trustpilot/python-lambdarest/issues/16) when using the singleton `lambda_handler` in a multiple test-case scenario.\n\n## Tests\n\nThis package uses [Poetry](https://python-poetry.org/docs/) to install requirements and run tests.\n\nUse the following commands to install requirements and run test-suite:\n\n```bash\n$ poetry install\n$ poetry run task test\n```\n\nFor more info see [Contributing...](./CONTRIBUTING.md)\n\n## Changelog\n\nSee [HISTORY.md](https://github.com/trustpilot/python-lambdarest/blob/master/HISTORY.md)\n\n## Contributors\n\n@mkreg @aphexer @nabrosimoff, @elviejokike, @eduardomourar, @devgrok, @AlbertoTrindade, @paddie, @svdgraaf, @simongarnier, @martinbuberl, @adamelmore, @sloev\n\n[Wanna contribute?](./CONTRIBUTING.md)\n\nAnd by the way, we have a [Code Of Friendlyhood!](./CODE_OF_CONDUCT.md)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/trustpilot/python-lambdarest", "keywords": "lambda,aws,awslambda,flask,web,jsonschema,werkzeug", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lambdarest", "package_url": "https://pypi.org/project/lambdarest/", "platform": "", "project_url": "https://pypi.org/project/lambdarest/", "project_urls": {"Homepage": "https://github.com/trustpilot/python-lambdarest", "Repository": "https://github.com/trustpilot/python-lambdarest"}, "release_url": "https://pypi.org/project/lambdarest/9.1.1/", "requires_dist": ["jsonschema (>=3.2.0,<4.0.0)", "strict_rfc3339 (>=0.7,<0.8)", "werkzeug (==0.16.1)"], "requires_python": ">=3.6,<4.0", "summary": "flask like web framework for AWS Lambda", "version": "9.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lambdarest</h1>\n<p><a href=\"https://travis-ci.org/trustpilot/python-lambdarest\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25015973ddb9fc8045fda83dd817eef6769ae536/68747470733a2f2f7472617669732d63692e6f72672f747275737470696c6f742f707974686f6e2d6c616d626461726573742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/lambdarest\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/702a9c412a89f45cbd1554e21a29fa126daaf00a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c616d626461726573742e737667\"></a> <a href=\"https://pypi.python.org/pypi/lambdarest\" rel=\"nofollow\"><img alt=\"Python Support\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05afe13348255d69fe06052497629fc676a8999d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c616d626461726573742e737667\"></a> <a href=\"https://github.com/boxed/pytest-readme\" rel=\"nofollow\"><img alt=\"Examples tested with pytest-readme\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f383ec26d7de8ebe4e4066de3f394faa52e78b78/687474703a2f2f696d672e736869656c64732e696f2f62616467652f726561646d652d7465737465642d627269676874677265656e2e737667\"></a></p>\n<p>Python routing mini-framework for <a href=\"https://aws.amazon.com/lambda/\" rel=\"nofollow\">AWS Lambda</a> with optional JSON-schema validation.</p>\n<h3>Features</h3>\n<ul>\n<li><code>lambda_handler</code> function constructor with built-in dispatcher</li>\n<li>Decorator to register functions to handle HTTP methods</li>\n<li>Optional JSON-schema input validation using same decorator</li>\n</ul>\n<h3>External articles / tutorials</h3>\n<ul>\n<li>\n<p><a href=\"http://www.devgrok.com/2019/03/create-private-microservice-using.html\" rel=\"nofollow\">devgrok.com: Create a Private Microservice Using an Application Load Balancer</a></p>\n<p>Article about how to use <strong>lambdarest</strong> with <strong>AWS Application Load Balancer</strong></p>\n</li>\n<li>\n<p><a href=\"https://rockset.com/blog/building-a-serverless-microservice-using-rockset-and-aws-lambda/\" rel=\"nofollow\">rockset.com: Building a Serverless Microservice Using Rockset and AWS Lambda</a></p>\n<p>Article about how to set up <strong>lambdarest</strong> in AWS infrastructure</p>\n</li>\n</ul>\n<p><strong>Other articles? add them <a href=\"https://github.com/trustpilot/python-lambdarest/issues/55\" rel=\"nofollow\">here</a></strong></p>\n<h2>Installation</h2>\n<p>Install the package from <a href=\"http://pypi.python.org/pypi/\" rel=\"nofollow\">PyPI</a> using <a href=\"https://pip.pypa.io/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install lambdarest\n</pre>\n<h2>Getting Started</h2>\n<p>This module helps you to handle different HTTP methods in your AWS Lambda.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"this\"</span><span class=\"p\">:</span> <span class=\"s2\">\"will be json dumped\"</span><span class=\"p\">}</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"this\": \"will be json dumped\"}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<h2>Advanced Usage</h2>\n<p>Optionally you can validate an incoming JSON body against a JSON schema:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"n\">my_schema</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"$schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://json-schema.org/draft-04/schema#\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"body\"</span><span class=\"p\">:{</span>\n            <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/with-schema/\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">my_schema</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"this\"</span><span class=\"p\">:</span> <span class=\"s2\">\"will be json dumped\"</span><span class=\"p\">}</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n\n<span class=\"n\">valid_input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"foo\":\"bar\"}'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/with-schema/\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">valid_input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"this\": \"will be json dumped\"}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n\n\n<span class=\"n\">invalid_input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"foo\":666}'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/with-schema/\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">invalid_input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'Validation Error'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<h3>Query Params</h3>\n<p>Query parameters are also analyzed and validatable with JSON schemas.\nQuery arrays are expected to be comma separated, all numbers are converted to floats.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"n\">my_schema</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"$schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://json-schema.org/draft-04/schema#\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"query\"</span><span class=\"p\">:{</span>\n            <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"array\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"items\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/with-params/\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">my_schema</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"json\"</span><span class=\"p\">][</span><span class=\"s2\">\"query\"</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n\n<span class=\"n\">valid_input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"queryStringParameters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1, 2.2, 3\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/with-params/\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">valid_input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"foo\": [1.0, 2.2, 3.0]}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<h3>Routing</h3>\n<p>You can also specify which path to react on for individual handlers using the <code>path</code> param:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/foo/bar/baz\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"this\"</span><span class=\"p\">:</span> <span class=\"s2\">\"will be json dumped\"</span><span class=\"p\">}</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/foo/bar/baz\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"this\": \"will be json dumped\"}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<p>And you can specify path parameters as well, which will be passed as keyword arguments:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/foo/&lt;int:id&gt;/\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"my-id\"</span><span class=\"p\">:</span> <span class=\"nb\">id</span><span class=\"p\">}</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/foo/1234/\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"my-id\": 1234}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<p>Or you can specify more complex parametrized resource path and get parameteres as arguments:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/object/&lt;int:object_id&gt;/props/&lt;string:foo&gt;/get\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">object_id</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[{</span><span class=\"s2\">\"object_id\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">object_id</span><span class=\"p\">)},</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"n\">foo</span><span class=\"p\">}]</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/v1/object/777/props/bar/get\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/object/</span><span class=\"si\">{object_id}</span><span class=\"s2\">/props/</span><span class=\"si\">{foo}</span><span class=\"s2\">/get\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"pathParameters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s2\">\"object_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"777\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span><span class=\"s2\">\"bar\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'[{\"object_id\": 777}, {\"foo\": \"bar\"}]'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<p>Or use the Proxy APIGateway magic endpoint:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/bar/&lt;path:path&gt;\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"path\"</span><span class=\"p\">:</span> <span class=\"n\">path</span><span class=\"p\">}</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/v1/bar/baz\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/bar/{proxy+}\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"pathParameters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s2\">\"proxy\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar/baz\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"path\": \"bar/baz\"}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<h3>Scopes</h3>\n<p>If you're using a Lambda authorizer, you can pass authorization scopes as input into your Lambda function.</p>\n<p>This is useful when using the API Gateway with a Lambda authorizer and have the Lambda authorizer return in a scopes json object the permissions (scopes) the caller has access to. In your Lambda function you can specify what scopes the caller should have to call that function. If the requested scope was not provided by the Lambda authorizer, a 403 error code is given.</p>\n<p>The API gateway has the limitation it can only pass primitive data types from a Lambda authorizer function. The scopes list therefore needs to be json encoded by the authorizer function.</p>\n<p>To use this, add a scopes attribute to the handler with the list of scopes your function requires. They will be verified from the requestContext.authorizer.scopes attribute from the Lambda authorizer.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/private1\"</span><span class=\"p\">,</span> <span class=\"n\">scopes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"myresource.read\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"this\"</span><span class=\"p\">:</span> <span class=\"s2\">\"will be json dumped\"</span><span class=\"p\">}</span>\n\n<span class=\"c1\">##### TEST #####</span>\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/private1\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"requestContext\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"authorizer\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"scopes\"</span><span class=\"p\">:</span> <span class=\"s1\">'[\"myresource.read\"]'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"this\": \"will be json dumped\"}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<p>When no scopes are provided by the authorizer but are still requested by your function, a permission denied error is returned.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">lambda_handler</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/private2\"</span><span class=\"p\">,</span> <span class=\"n\">scopes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"myresource.read\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"this\"</span><span class=\"p\">:</span> <span class=\"s2\">\"will be json dumped\"</span><span class=\"p\">}</span>\n\n<span class=\"c1\">##### TEST #####</span>\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/private2\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Permission denied\"</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">403</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{}}</span>\n</pre>\n<h2>Use it with AWS Application Load Balancer</h2>\n<p>In order to use it with Application Load Balancer you need to create your own lambda_handler and not use the singleton:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdarest</span> <span class=\"kn\">import</span> <span class=\"n\">create_lambda_handler</span>\n\n<span class=\"n\">lambda_handler</span> <span class=\"o\">=</span> <span class=\"n\">create_lambda_handler</span><span class=\"p\">(</span><span class=\"n\">application_load_balancer</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@lambda_handler</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s2\">\"get\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/foo/&lt;int:id&gt;/\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_own_get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"my-id\"</span><span class=\"p\">:</span> <span class=\"nb\">id</span><span class=\"p\">}</span>\n\n\n<span class=\"c1\">##### TEST #####</span>\n\n\n<span class=\"n\">input_event</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/foo/1234/\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">=</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">\"body\"</span><span class=\"p\">:</span> <span class=\"s1\">'{\"my-id\": 1234}'</span><span class=\"p\">,</span> <span class=\"s2\">\"statusCode\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"headers\"</span><span class=\"p\">:{},</span> <span class=\"s2\">\"statusDescription\"</span><span class=\"p\">:</span> <span class=\"s2\">\"HTTP OK\"</span><span class=\"p\">,</span> <span class=\"s2\">\"isBase64Encoded\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}</span>\n</pre>\n<h2>Anormal unittest behaviour with <code>lambda_handler</code> singleton</h2>\n<p>Because of python unittests leaky test-cases it seems like you shall beware of <a href=\"https://github.com/trustpilot/python-lambdarest/issues/16\" rel=\"nofollow\">this issue</a> when using the singleton <code>lambda_handler</code> in a multiple test-case scenario.</p>\n<h2>Tests</h2>\n<p>This package uses <a href=\"https://python-poetry.org/docs/\" rel=\"nofollow\">Poetry</a> to install requirements and run tests.</p>\n<p>Use the following commands to install requirements and run test-suite:</p>\n<pre>$ poetry install\n$ poetry run task <span class=\"nb\">test</span>\n</pre>\n<p>For more info see <a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">Contributing...</a></p>\n<h2>Changelog</h2>\n<p>See <a href=\"https://github.com/trustpilot/python-lambdarest/blob/master/HISTORY.md\" rel=\"nofollow\">HISTORY.md</a></p>\n<h2>Contributors</h2>\n<p>@mkreg @aphexer @nabrosimoff, @elviejokike, @eduardomourar, @devgrok, @AlbertoTrindade, @paddie, @svdgraaf, @simongarnier, @martinbuberl, @adamelmore, @sloev</p>\n<p><a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">Wanna contribute?</a></p>\n<p>And by the way, we have a <a href=\"./CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code Of Friendlyhood!</a></p>\n\n          </div>"}, "last_serial": 7032963, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "848702aa4263175026e901018e200a00", "sha256": "a3d3aee26cb28ec178b6a21e7ca15bede9b367084c9603e6b41cdef19e414c92"}, "downloads": -1, "filename": "lambdarest-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "848702aa4263175026e901018e200a00", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6256, "upload_time": "2017-02-08T15:18:54", "upload_time_iso_8601": "2017-02-08T15:18:54.821743Z", "url": "https://files.pythonhosted.org/packages/41/11/ed36794e884a8af5f909046ac91042cdddc42e5bb846010f87e27c0afa61/lambdarest-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7174ab01d4a44ed7751fc1638e8827af", "sha256": "c6f9ffd24c899cd91ded16e0b31a661493254aed77acfc51122ff7e14289fd87"}, "downloads": -1, "filename": "lambdarest-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7174ab01d4a44ed7751fc1638e8827af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5734, "upload_time": "2017-02-08T15:18:52", "upload_time_iso_8601": "2017-02-08T15:18:52.690432Z", "url": "https://files.pythonhosted.org/packages/15/7e/654739cce88e11eead2989651008ae18a169d8f8b9d6e0fc267d835d5580/lambdarest-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "246d804dbef9ecf32df9fd7e8d333b30", "sha256": "b12819ce07504f7dcf83d48d73f5d4f1f59bf797621b041ae5e8f4260ce3cdce"}, "downloads": -1, "filename": "lambdarest-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "246d804dbef9ecf32df9fd7e8d333b30", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6256, "upload_time": "2017-02-08T15:25:55", "upload_time_iso_8601": "2017-02-08T15:25:55.805970Z", "url": "https://files.pythonhosted.org/packages/19/99/a68266bc163fffb29be3206fc68b389a0a4580d666ec3b1f6f6961e7575c/lambdarest-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6bff81db03202044d70aab63c106573", "sha256": "3297be1e924b4487cbbad82ddbe3192278220e7d94b671455f086b2efcb7ea58"}, "downloads": -1, "filename": "lambdarest-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c6bff81db03202044d70aab63c106573", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5733, "upload_time": "2017-02-08T15:25:53", "upload_time_iso_8601": "2017-02-08T15:25:53.480357Z", "url": "https://files.pythonhosted.org/packages/62/2c/70ff9ccbd68a564e72c55a336ed24a882ba79d2d1200875c2ccd45b1c6ab/lambdarest-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b94b8d68730f33580b4c72601afe33e3", "sha256": "30b95d9f7fd75690835a17768e1177553e9ee4b68f7d4456ce105ec1aa2881fe"}, "downloads": -1, "filename": "lambdarest-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b94b8d68730f33580b4c72601afe33e3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6240, "upload_time": "2017-02-08T17:26:31", "upload_time_iso_8601": "2017-02-08T17:26:31.857015Z", "url": "https://files.pythonhosted.org/packages/8f/4a/55afdeca8a5ff10db49e510b410c0e15e97533bb03dd85cb463c11f2746e/lambdarest-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "352f76a561c42d1e7524474f7b76358a", "sha256": "4241e248112bfbf28f805bf62f16b40e51cce7e519a463eee1ac5b0af158da3c"}, "downloads": -1, "filename": "lambdarest-0.0.4.tar.gz", "has_sig": false, "md5_digest": "352f76a561c42d1e7524474f7b76358a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5712, "upload_time": "2017-02-08T17:26:29", "upload_time_iso_8601": "2017-02-08T17:26:29.054472Z", "url": "https://files.pythonhosted.org/packages/39/f2/bc55a4c45c932fd7af194adac64c0bf5259efd08711036ac2a4d13df53cb/lambdarest-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3e04e76e0a12a07453c9bcac30d986b0", "sha256": "d8b64ba41d5a8b2e964658d39dc43ca96f9bf56c2818354301048a6aa8d10c66"}, "downloads": -1, "filename": "lambdarest-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e04e76e0a12a07453c9bcac30d986b0", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6106, "upload_time": "2017-02-09T09:23:22", "upload_time_iso_8601": "2017-02-09T09:23:22.601216Z", "url": "https://files.pythonhosted.org/packages/93/ce/223f7f3a44ee0378a254c0674a4bfcfb48f4552fa0560a633c7841afbd39/lambdarest-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8959a124b5cb2738624c163726a7022", "sha256": "be42debd376ae115242ded83b420930a1c73429d266624b0b1e913141755c290"}, "downloads": -1, "filename": "lambdarest-0.0.5.tar.gz", "has_sig": false, "md5_digest": "a8959a124b5cb2738624c163726a7022", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5524, "upload_time": "2017-02-09T09:23:19", "upload_time_iso_8601": "2017-02-09T09:23:19.353660Z", "url": "https://files.pythonhosted.org/packages/0a/79/a65f859846bccff088f6fbfd7e2ad49f39278df66d25957d4045e7a5fbea/lambdarest-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "9d19938648d16e7871acd73d888ff75a", "sha256": "1b354b4cf7f4c7ddd3385fe696a8e0044c45970a2236662519c049f6d69fad7d"}, "downloads": -1, "filename": "lambdarest-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d19938648d16e7871acd73d888ff75a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6240, "upload_time": "2017-02-09T10:07:53", "upload_time_iso_8601": "2017-02-09T10:07:53.871305Z", "url": "https://files.pythonhosted.org/packages/1b/45/1da33241aec6453192bbe687bb2e0359cf2b543a6d8ef3fb9034454510a9/lambdarest-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6991f63344a42937549af05594162a8e", "sha256": "5c3eacc6cdc3e1f8afae6e680f420dfc0a28107efec15d895510c9f04955c760"}, "downloads": -1, "filename": "lambdarest-0.0.6.tar.gz", "has_sig": false, "md5_digest": "6991f63344a42937549af05594162a8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5671, "upload_time": "2017-02-09T10:07:51", "upload_time_iso_8601": "2017-02-09T10:07:51.640967Z", "url": "https://files.pythonhosted.org/packages/10/dc/731df437fab6354fada2513df808caacf2bb5e3df74f4c187950720efb28/lambdarest-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "e52d155e9c5c12bbf3e5ac158d918774", "sha256": "fb38b161e981a7a3c510bb492b659d506483a9d4f9290ca7bb1bc7dfd6cb2fb8"}, "downloads": -1, "filename": "lambdarest-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e52d155e9c5c12bbf3e5ac158d918774", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 5916, "upload_time": "2017-02-13T14:17:22", "upload_time_iso_8601": "2017-02-13T14:17:22.419561Z", "url": "https://files.pythonhosted.org/packages/4b/ef/6a26413dc9e7bf25ea00a633c43bf01196a2add28e7f92cdc2bff1f68e57/lambdarest-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9a43622f502faec1888584fca16d936", "sha256": "406ec4aea91174b0262531061cbb30c1b4df5a06b17c0ec872affd0925c87f84"}, "downloads": -1, "filename": "lambdarest-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b9a43622f502faec1888584fca16d936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5388, "upload_time": "2017-02-13T14:17:20", "upload_time_iso_8601": "2017-02-13T14:17:20.320342Z", "url": "https://files.pythonhosted.org/packages/c3/b3/419b622d205f6dce64f4a3ad40116dcc5d8a66d821f9661ae69afbbf37e8/lambdarest-0.0.7.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "dc2562d99f8a8a89310007f71efd4b7b", "sha256": "d1168a303a5ccadaf662c107a55b55d9d82e51fe572ae83e791c90ec67a1d384"}, "downloads": -1, "filename": "lambdarest-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dc2562d99f8a8a89310007f71efd4b7b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6038, "upload_time": "2017-02-13T14:20:30", "upload_time_iso_8601": "2017-02-13T14:20:30.975780Z", "url": "https://files.pythonhosted.org/packages/6c/ff/c730eec78c73e1427580c18848fb00434c03dfff89dade0fdb4c262d57a3/lambdarest-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d52897cf7e9553dd1c6399d6cfd2fe6", "sha256": "e458c394f7ae259338e01721ff2105ec31300c2c6d47801d077373dd8920d1f1"}, "downloads": -1, "filename": "lambdarest-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0d52897cf7e9553dd1c6399d6cfd2fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5598, "upload_time": "2017-02-13T14:20:28", "upload_time_iso_8601": "2017-02-13T14:20:28.509423Z", "url": "https://files.pythonhosted.org/packages/43/20/e44728f70f100a88b054c311cf9f0e0133f207669fc672bb27586d315817/lambdarest-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2f62548d64e053dfab298fdbe88c7884", "sha256": "8e07595d4ee7df61ca6008cee8a03cd4b2fb0d8ed6c7f64563727cbd21bc0a3b"}, "downloads": -1, "filename": "lambdarest-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2f62548d64e053dfab298fdbe88c7884", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 5826, "upload_time": "2017-02-14T11:18:56", "upload_time_iso_8601": "2017-02-14T11:18:56.991242Z", "url": "https://files.pythonhosted.org/packages/6a/d8/e6ce178f70cd0826a78ce22dc945b5550c84162ee75b4fe0a29a691f7685/lambdarest-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c96f272ef97efe87f519596f8922dae3", "sha256": "f66ee8bb7aac38875c3dd6fcfced6b139711037f9c3046b73d6f20f6690f2a54"}, "downloads": -1, "filename": "lambdarest-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c96f272ef97efe87f519596f8922dae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5458, "upload_time": "2017-02-14T11:18:54", "upload_time_iso_8601": "2017-02-14T11:18:54.834982Z", "url": "https://files.pythonhosted.org/packages/cb/bd/dd4fa060527b8b1cce28d9214bd8fc18f56d58f48a3d3fc8680a53415771/lambdarest-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c07b0fd65b4218d3c3c064bbf68de82a", "sha256": "b6e4451cdf72772d14a1a25b36fff171dfade90bfa86bf5ffdf4cb0a34dd8a5a"}, "downloads": -1, "filename": "lambdarest-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c07b0fd65b4218d3c3c064bbf68de82a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5859, "upload_time": "2017-02-28T13:29:18", "upload_time_iso_8601": "2017-02-28T13:29:18.914314Z", "url": "https://files.pythonhosted.org/packages/c0/0f/ab08438ee4b48947e6bb939be12071f6758fed51b2a22488699d60183db8/lambdarest-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a507534ad891378cbd5dd6c881cc326f", "sha256": "64e18b10b4939a8d43fbcb1f39f77f8906a6ec0577d71867c12e79aeaf252ca2"}, "downloads": -1, "filename": "lambdarest-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a507534ad891378cbd5dd6c881cc326f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5470, "upload_time": "2017-02-28T13:29:16", "upload_time_iso_8601": "2017-02-28T13:29:16.996579Z", "url": "https://files.pythonhosted.org/packages/cc/21/1a8c260d94f2d046d0f9ab9bc945011b5d07f02b7d319e8e5793183cda83/lambdarest-1.0.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "0457105d85a608f28cfd7172de67cfac", "sha256": "d0f58e15c57f8ba2dff280c24d6560cdbb3d13fcf9fe8d10c3b38e893b5e4d93"}, "downloads": -1, "filename": "lambdarest-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0457105d85a608f28cfd7172de67cfac", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6506, "upload_time": "2017-03-03T14:49:39", "upload_time_iso_8601": "2017-03-03T14:49:39.379769Z", "url": "https://files.pythonhosted.org/packages/05/41/64e83cff693473fb0e28192e89edf463d9d6c0d1719aabc38d9c9232921f/lambdarest-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0be340911c1219e458888af26394147b", "sha256": "fc0765d8a9fef5a74f49923c6f1777af6fbeb789d33dff5e58fdbd2f22f55a9f"}, "downloads": -1, "filename": "lambdarest-2.0.0.tar.gz", "has_sig": false, "md5_digest": "0be340911c1219e458888af26394147b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6198, "upload_time": "2017-03-03T14:49:37", "upload_time_iso_8601": "2017-03-03T14:49:37.281003Z", "url": "https://files.pythonhosted.org/packages/5c/da/8e1505821bdd83a1ae26a5d789e22ced33e92ea88833cff7c45fde370a65/lambdarest-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "c30d2739c5ed2dfc75f38f8e3f60ce39", "sha256": "241e42b42d465c33684177ffd515d3d053d71fec5ea4c2b4387cf41dfc961faf"}, "downloads": -1, "filename": "lambdarest-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c30d2739c5ed2dfc75f38f8e3f60ce39", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6641, "upload_time": "2017-03-03T14:52:02", "upload_time_iso_8601": "2017-03-03T14:52:02.477946Z", "url": "https://files.pythonhosted.org/packages/54/80/d1390288cc9aee20543fa561d029e7fd635d419b1573ddfa8cbc267caedd/lambdarest-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1497b9a9762f5a0c277835338462a125", "sha256": "3bd4a39c19218396ce99ff53aa2b343387de02b29e157d571d76a5e5ef78aaee"}, "downloads": -1, "filename": "lambdarest-2.0.1.tar.gz", "has_sig": false, "md5_digest": "1497b9a9762f5a0c277835338462a125", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6414, "upload_time": "2017-03-03T14:52:00", "upload_time_iso_8601": "2017-03-03T14:52:00.209077Z", "url": "https://files.pythonhosted.org/packages/42/8d/c2498433a47fc271f825a9414d45f999eb99bcb7db0e2f5c6842f32cb350/lambdarest-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "34144dc2e4a449471a1cc4091e0ad35e", "sha256": "3c2ba1524dcaa6bf43d7af8baa91a43cf155e207805bd1c022a67f8820344bc4"}, "downloads": -1, "filename": "lambdarest-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "34144dc2e4a449471a1cc4091e0ad35e", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 7352, "upload_time": "2017-03-06T14:53:16", "upload_time_iso_8601": "2017-03-06T14:53:16.324403Z", "url": "https://files.pythonhosted.org/packages/55/a1/eb7279d04be3c80ffe5168391d19d6b3444111b40f6a0ef4862bb2c8c6d5/lambdarest-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b00e9ebf330d69fa91743e7e1377ca3", "sha256": "06ba290a270f6ba2c81ef543686ef282cc28a1eb51df329bd7be0c4b64972e1f"}, "downloads": -1, "filename": "lambdarest-2.1.0.tar.gz", "has_sig": false, "md5_digest": "6b00e9ebf330d69fa91743e7e1377ca3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2017-03-06T14:53:13", "upload_time_iso_8601": "2017-03-06T14:53:13.265536Z", "url": "https://files.pythonhosted.org/packages/20/78/72265d0d7360b3ae04a9e9875941d0d9f2aa4804482cbcef437491ada25f/lambdarest-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "f3c54b79c5a87d9bea5ceafc76624569", "sha256": "d9592b1d8b761b1ae0e2650072aa081ca532c5c56dfcd96df5e34d0055eea88b"}, "downloads": -1, "filename": "lambdarest-2.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f3c54b79c5a87d9bea5ceafc76624569", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 7554, "upload_time": "2017-03-10T12:42:21", "upload_time_iso_8601": "2017-03-10T12:42:21.361100Z", "url": "https://files.pythonhosted.org/packages/da/cb/39e8b59f1eaf60162009803576a9fe0de912679146d06071a4d07ff89714/lambdarest-2.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "084b9360ae0f9348e6f416546bee2861", "sha256": "86a643b5262d80b1ccca8a86348539c4d959f36500599a8bf872e54fb7167b41"}, "downloads": -1, "filename": "lambdarest-2.2.0.tar.gz", "has_sig": false, "md5_digest": "084b9360ae0f9348e6f416546bee2861", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7330, "upload_time": "2017-03-10T12:42:18", "upload_time_iso_8601": "2017-03-10T12:42:18.225910Z", "url": "https://files.pythonhosted.org/packages/a3/ea/3501b155fd42a362d7e7d788225f0e20521e5d6b5e582a5541bfbffacdcc/lambdarest-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "efdf39ab33ddc6c471c60eb0c2baefb9", "sha256": "41ac4d3e34ca767ccfc3e2c9107603a1c862410f1cdf6b3e8d34b3c8a388a908"}, "downloads": -1, "filename": "lambdarest-2.2.1.tar.gz", "has_sig": false, "md5_digest": "efdf39ab33ddc6c471c60eb0c2baefb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8110, "upload_time": "2017-10-03T11:28:29", "upload_time_iso_8601": "2017-10-03T11:28:29.973288Z", "url": "https://files.pythonhosted.org/packages/b2/90/2ae01e9f0880651c69d52ba1f745230233d68eb6d8cc385a4c45026cbee4/lambdarest-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "5b958e59e3495cc991be556ce6a3b7f3", "sha256": "38debb25072cac1d5db7b4518b3f1eae8a9703306a00bceff415ae7b586c8d7e"}, "downloads": -1, "filename": "lambdarest-2.2.2.tar.gz", "has_sig": false, "md5_digest": "5b958e59e3495cc991be556ce6a3b7f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8113, "upload_time": "2017-10-03T11:54:09", "upload_time_iso_8601": "2017-10-03T11:54:09.428863Z", "url": "https://files.pythonhosted.org/packages/ad/cf/15b088bbb45cbc8e7e92c093bbff6cf63ab9846da414929234e49112ee4e/lambdarest-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "7485c681011500c999ef098dbc4e801c", "sha256": "6ede9c9444f64855211004b49c5326ce421b784b56f7581859310c8719c5b912"}, "downloads": -1, "filename": "lambdarest-2.2.3.tar.gz", "has_sig": false, "md5_digest": "7485c681011500c999ef098dbc4e801c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8113, "upload_time": "2017-10-03T12:08:12", "upload_time_iso_8601": "2017-10-03T12:08:12.718644Z", "url": "https://files.pythonhosted.org/packages/43/cc/d0853597b0a464b74ba8d4ea7ccd15df83c2734ca6df02116a9ff0134b83/lambdarest-2.2.3.tar.gz", "yanked": false}], "2.2.4": [{"comment_text": "", "digests": {"md5": "09804a44a67c50dd2ab209cf9457459c", "sha256": "80e2ba3f328940d4bd4edf754ad6d0d93aebf62554499a1e325565c7e62ec1af"}, "downloads": -1, "filename": "lambdarest-2.2.4.tar.gz", "has_sig": false, "md5_digest": "09804a44a67c50dd2ab209cf9457459c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8700, "upload_time": "2017-10-03T12:18:50", "upload_time_iso_8601": "2017-10-03T12:18:50.557239Z", "url": "https://files.pythonhosted.org/packages/4f/35/7685ac266c687cdabc53a2bd0f3b0c4952dcd0a29011a49b82e3fc55c87a/lambdarest-2.2.4.tar.gz", "yanked": false}], "2.2.5": [{"comment_text": "", "digests": {"md5": "97332751bcc28d8a27f7aac9a7b00f66", "sha256": "0b0337969c5ecd194b67b352562824b187c24ededb37bd1906e86fd9b7f37995"}, "downloads": -1, "filename": "lambdarest-2.2.5.tar.gz", "has_sig": false, "md5_digest": "97332751bcc28d8a27f7aac9a7b00f66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8871, "upload_time": "2017-12-08T11:49:31", "upload_time_iso_8601": "2017-12-08T11:49:31.276179Z", "url": "https://files.pythonhosted.org/packages/1f/15/f7d50a90497ce94c4cb73f159030dc92986fbcfa13a0e64b448bb0b9ea5b/lambdarest-2.2.5.tar.gz", "yanked": false}], "2.2.6": [{"comment_text": "", "digests": {"md5": "3c33eca16309710743b75bd27d0b5b7e", "sha256": "9303bba8a6d07d1b3a5eb3e347ba3e821c589bbf2be99c0ffb670f113d050af2"}, "downloads": -1, "filename": "lambdarest-2.2.6.tar.gz", "has_sig": false, "md5_digest": "3c33eca16309710743b75bd27d0b5b7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8887, "upload_time": "2017-12-13T18:20:00", "upload_time_iso_8601": "2017-12-13T18:20:00.306004Z", "url": "https://files.pythonhosted.org/packages/6c/3f/2d8bd0926ffa2b1501771986b07d4b7f047cf684311ea362ffd8dcd61ad5/lambdarest-2.2.6.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "52952ce2c58f5452b6322394df53c8e4", "sha256": "59ec59fd7c78086bb0ef9a4efaa6a3512611b510af33d177495f5adec1da9ffe"}, "downloads": -1, "filename": "lambdarest-3.0.0.tar.gz", "has_sig": false, "md5_digest": "52952ce2c58f5452b6322394df53c8e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8887, "upload_time": "2017-12-21T13:38:16", "upload_time_iso_8601": "2017-12-21T13:38:16.095586Z", "url": "https://files.pythonhosted.org/packages/81/d4/bfb25bb3f4f6366445a250564f3ce9e894a1c063b2883d61362d8d023b69/lambdarest-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "faa3d3825d14e243065805209ddc3e2c", "sha256": "7dcb23811ddac93d4ecf61f7db7961f3e605d3a2b5b1450782fa2af71f6b79e1"}, "downloads": -1, "filename": "lambdarest-3.0.1.tar.gz", "has_sig": false, "md5_digest": "faa3d3825d14e243065805209ddc3e2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8890, "upload_time": "2017-12-21T16:56:57", "upload_time_iso_8601": "2017-12-21T16:56:57.102516Z", "url": "https://files.pythonhosted.org/packages/86/92/09a825e3dd43ed110fdd633bdfac9fa91b8ee96b73c40b2c248d4a0ed083/lambdarest-3.0.1.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "c8d8c200653dbd3b52f42a0eb18203c2", "sha256": "65cbab1ca6df1299fd9e3c308dda5e6c56337986060686c5b9a0884d3cb2d9bb"}, "downloads": -1, "filename": "lambdarest-4.0.0.tar.gz", "has_sig": false, "md5_digest": "c8d8c200653dbd3b52f42a0eb18203c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9407, "upload_time": "2018-04-06T06:35:36", "upload_time_iso_8601": "2018-04-06T06:35:36.933004Z", "url": "https://files.pythonhosted.org/packages/e2/c0/9e6238060007b501768440e7ad93ba01e4556812c2c29b74e3dd812ed0a0/lambdarest-4.0.0.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "82eb390c1ed823b91018fa72ef01741c", "sha256": "c4e41a3f0f1506609407f665ad88da4d4fc798aff1da42cf8bbb4d9e6bed896b"}, "downloads": -1, "filename": "lambdarest-4.1.0.tar.gz", "has_sig": false, "md5_digest": "82eb390c1ed823b91018fa72ef01741c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9992, "upload_time": "2018-04-12T12:15:35", "upload_time_iso_8601": "2018-04-12T12:15:35.944053Z", "url": "https://files.pythonhosted.org/packages/80/de/8205c9bf68f217ebb7a8ea506c1011ffa1a346b8d8e9bbc8d1b0a58ea654/lambdarest-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "f83ad2c0bf2580376e354395608b545d", "sha256": "2d7d084199e21ca37f547628965d576638d1fdfc3cb01c30e07d096205f94f42"}, "downloads": -1, "filename": "lambdarest-4.1.1.tar.gz", "has_sig": false, "md5_digest": "f83ad2c0bf2580376e354395608b545d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9996, "upload_time": "2018-04-12T12:28:04", "upload_time_iso_8601": "2018-04-12T12:28:04.807627Z", "url": "https://files.pythonhosted.org/packages/03/53/12cf13a635f52ab8abb2694347920b7d3ea6e9e3d1630ac0c363c2922bab/lambdarest-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "b51f6595f534e7dced5bfd7ab4c4e3bd", "sha256": "ca1c80afbdc5cb1d6ea16c19320a84e6bff6d70d624ef0a87113f6068f813d88"}, "downloads": -1, "filename": "lambdarest-4.1.2.tar.gz", "has_sig": false, "md5_digest": "b51f6595f534e7dced5bfd7ab4c4e3bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10064, "upload_time": "2018-04-20T13:42:26", "upload_time_iso_8601": "2018-04-20T13:42:26.032566Z", "url": "https://files.pythonhosted.org/packages/15/23/9502da6e97e4e2acd0a2cc8516c9f64e65ba08ab1387c0c6fb34e8febd4b/lambdarest-4.1.2.tar.gz", "yanked": false}], "5.0.0": [{"comment_text": "", "digests": {"md5": "304c04c2b96772e0155fd3cd00c6096f", "sha256": "f52fe8ebd90c24dcefbed6031016a6520fcdf0b4d570d734f7a3c1f029349a2d"}, "downloads": -1, "filename": "lambdarest-5.0.0.tar.gz", "has_sig": false, "md5_digest": "304c04c2b96772e0155fd3cd00c6096f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10226, "upload_time": "2018-06-07T07:28:58", "upload_time_iso_8601": "2018-06-07T07:28:58.957628Z", "url": "https://files.pythonhosted.org/packages/71/6d/e4c1dddc302dbb4682ea39a83e4e8b647a383cdd7b3a71359a0507573815/lambdarest-5.0.0.tar.gz", "yanked": false}], "5.0.1": [{"comment_text": "", "digests": {"md5": "96cef50b9670e6025b4d546b377423fa", "sha256": "663e4a0d26f4f0910fefc9c2edf7b67be5f2eb3455b82699c044e9c270212490"}, "downloads": -1, "filename": "lambdarest-5.0.1.tar.gz", "has_sig": false, "md5_digest": "96cef50b9670e6025b4d546b377423fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10568, "upload_time": "2018-06-14T13:28:45", "upload_time_iso_8601": "2018-06-14T13:28:45.068608Z", "url": "https://files.pythonhosted.org/packages/09/1f/9b1b9e1227c985310c0c0f411f53452497e9b168d74c7959dffc5d35a04a/lambdarest-5.0.1.tar.gz", "yanked": false}], "5.1.0": [{"comment_text": "", "digests": {"md5": "27e3fbbb1811d325ff6aab3bc6e6a7f0", "sha256": "2660023e506d79e478e934cdeb26d125a2216e3f6736364f8cd02ff4a446854e"}, "downloads": -1, "filename": "lambdarest-5.1.0.tar.gz", "has_sig": false, "md5_digest": "27e3fbbb1811d325ff6aab3bc6e6a7f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10701, "upload_time": "2018-11-01T07:29:29", "upload_time_iso_8601": "2018-11-01T07:29:29.432026Z", "url": "https://files.pythonhosted.org/packages/7e/e3/92446d5e4d9c15de7ee910cc70df99a2abb314f3063f3f45fe3d5d44cf52/lambdarest-5.1.0.tar.gz", "yanked": false}], "5.2.0": [{"comment_text": "", "digests": {"md5": "9edcecc20a14d372cffb19a65e4c7722", "sha256": "a1d10773836b403aafce31cc7149bd56f8ab7d9acb75ca7ef17953e2fe30901b"}, "downloads": -1, "filename": "lambdarest-5.2.0.tar.gz", "has_sig": false, "md5_digest": "9edcecc20a14d372cffb19a65e4c7722", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11169, "upload_time": "2019-03-06T12:42:40", "upload_time_iso_8601": "2019-03-06T12:42:40.288787Z", "url": "https://files.pythonhosted.org/packages/1e/47/9cfc7d6cd249b6186296a9c51185d357b44dc86898a3b0113fccdb3e6cae/lambdarest-5.2.0.tar.gz", "yanked": false}], "5.3.0": [{"comment_text": "", "digests": {"md5": "f1a38bf1e62c17dee1cd9c0e4baa0e21", "sha256": "c50a1ff83822916a969a3ce3d489822e523ec08d807a05a7e4be194e94cdafd5"}, "downloads": -1, "filename": "lambdarest-5.3.0.tar.gz", "has_sig": false, "md5_digest": "f1a38bf1e62c17dee1cd9c0e4baa0e21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11467, "upload_time": "2019-03-06T12:56:42", "upload_time_iso_8601": "2019-03-06T12:56:42.269788Z", "url": "https://files.pythonhosted.org/packages/68/51/b75baf79c939baaa98b610c3410f3b5da281ffa8ef40ae394fb4326bc69b/lambdarest-5.3.0.tar.gz", "yanked": false}], "5.4.0": [{"comment_text": "", "digests": {"md5": "67fea444d32c4758f72b247b5a2daf15", "sha256": "a6dbed3cf85e6bc3d6e7b29cc088a21813ecc6655d6f0b3fb21958841cdea58a"}, "downloads": -1, "filename": "lambdarest-5.4.0.tar.gz", "has_sig": false, "md5_digest": "67fea444d32c4758f72b247b5a2daf15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11679, "upload_time": "2019-03-06T14:45:30", "upload_time_iso_8601": "2019-03-06T14:45:30.243361Z", "url": "https://files.pythonhosted.org/packages/82/9b/7fae64b6676d07bff4c05d4567d3e34894199f4e0b21efeaefdafa0c27ac/lambdarest-5.4.0.tar.gz", "yanked": false}], "5.5.0": [{"comment_text": "", "digests": {"md5": "4acfde9f12e862f91c5168f23d505c61", "sha256": "ad19b33a0519fe64e27d98bd2c5b0f67ed916b31d963bd2a9497a52caec87b3d"}, "downloads": -1, "filename": "lambdarest-5.5.0.tar.gz", "has_sig": false, "md5_digest": "4acfde9f12e862f91c5168f23d505c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12780, "upload_time": "2019-08-17T15:37:10", "upload_time_iso_8601": "2019-08-17T15:37:10.970979Z", "url": "https://files.pythonhosted.org/packages/2a/c6/a5ec7631666acc7a9cdf04cbeec0cfe6b495e57f5710601d53278f42799e/lambdarest-5.5.0.tar.gz", "yanked": false}], "6.0.1": [{"comment_text": "", "digests": {"md5": "5a3a1839a7b455f9a7cf4a926d4fd4df", "sha256": "dca2a001198ead7ea208187d0c87af408c82a412984db4c9fcc2af93360651f0"}, "downloads": -1, "filename": "lambdarest-6.0.1.tar.gz", "has_sig": false, "md5_digest": "5a3a1839a7b455f9a7cf4a926d4fd4df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12806, "upload_time": "2020-01-28T17:07:19", "upload_time_iso_8601": "2020-01-28T17:07:19.948681Z", "url": "https://files.pythonhosted.org/packages/82/46/bcd1c03eb31e25ad35c681a38626618cb63a114bc5a25b97f4da8d12bda6/lambdarest-6.0.1.tar.gz", "yanked": false}], "6.0.2": [{"comment_text": "", "digests": {"md5": "506f72c55c7ddc6fb56ca7b715942c24", "sha256": "37cd25acbf488eda4fc48d2e075d73ed5676a7c73a817409ca5ca409a14e258c"}, "downloads": -1, "filename": "lambdarest-6.0.2.tar.gz", "has_sig": false, "md5_digest": "506f72c55c7ddc6fb56ca7b715942c24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12777, "upload_time": "2020-01-31T14:44:44", "upload_time_iso_8601": "2020-01-31T14:44:44.964065Z", "url": "https://files.pythonhosted.org/packages/a7/64/5e9577b93845855d2656f7f32af62cda4a333e9c6c86387cf58087edc54e/lambdarest-6.0.2.tar.gz", "yanked": false}], "7.0.0": [{"comment_text": "", "digests": {"md5": "e9538d02c6a273872e51bbc1b19dacf4", "sha256": "7dca29b3c34303934281267c12593dc308bc268d06cb237989ec8740383a709b"}, "downloads": -1, "filename": "lambdarest-7.0.0.tar.gz", "has_sig": false, "md5_digest": "e9538d02c6a273872e51bbc1b19dacf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12957, "upload_time": "2020-02-12T17:53:03", "upload_time_iso_8601": "2020-02-12T17:53:03.947833Z", "url": "https://files.pythonhosted.org/packages/23/e0/2d5bd444e1e237adc64ad8a91f569dd74b7866d6d38f701062edc27aa69b/lambdarest-7.0.0.tar.gz", "yanked": false}], "8.0.0": [{"comment_text": "", "digests": {"md5": "27eaed5fe0160351e1735223d4919412", "sha256": "22e2900fc2b2abefcfb88462fc1add237e7f429f36cbdc5b2251d4843b9dd9cb"}, "downloads": -1, "filename": "lambdarest-8.0.0.tar.gz", "has_sig": false, "md5_digest": "27eaed5fe0160351e1735223d4919412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13702, "upload_time": "2020-02-14T19:53:20", "upload_time_iso_8601": "2020-02-14T19:53:20.133443Z", "url": "https://files.pythonhosted.org/packages/46/45/b76b66f186e7c8952dfb76e1382adf886e8e9147fc1f04e0cf9695334962/lambdarest-8.0.0.tar.gz", "yanked": false}], "9.0.0": [{"comment_text": "", "digests": {"md5": "d9818a7bed08c3bd64a4ca4a7fe2a629", "sha256": "8e836f8bf1bad31847dc331b1265522876406a1d0700cb6eba752cb857b4e9fc"}, "downloads": -1, "filename": "lambdarest-9.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9818a7bed08c3bd64a4ca4a7fe2a629", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8801, "upload_time": "2020-04-14T09:58:55", "upload_time_iso_8601": "2020-04-14T09:58:55.493098Z", "url": "https://files.pythonhosted.org/packages/6b/a8/6856aae3e8ac3f057de5571f2a5ab9ee645d8774805de63d0b82d30dcf46/lambdarest-9.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d6849c09767688a6bfcde58f3156b0e", "sha256": "7aa801ee33cc6b58ab1900b8123292114e6f9d0ece9a779c7ef679abb4fec446"}, "downloads": -1, "filename": "lambdarest-9.0.0.tar.gz", "has_sig": false, "md5_digest": "8d6849c09767688a6bfcde58f3156b0e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9966, "upload_time": "2020-04-14T09:58:57", "upload_time_iso_8601": "2020-04-14T09:58:57.186297Z", "url": "https://files.pythonhosted.org/packages/60/e6/0bc0788a39f3ad9c18e71144ac226b97c91992ae2084ac253e21b033ab2c/lambdarest-9.0.0.tar.gz", "yanked": false}], "9.1.0": [{"comment_text": "", "digests": {"md5": "ee9b8c44820a6319b85d6a9b5eee4b38", "sha256": "20124c01b14dc553f93a97cd9b302f4a3ae84f8c15f2a0c17fcc993e8be66c23"}, "downloads": -1, "filename": "lambdarest-9.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ee9b8c44820a6319b85d6a9b5eee4b38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8803, "upload_time": "2020-04-16T15:27:48", "upload_time_iso_8601": "2020-04-16T15:27:48.798712Z", "url": "https://files.pythonhosted.org/packages/52/19/4bed80d34fc267eb2640ce4a38e4e3a884f206d4a8e821bfa65f11a9bb77/lambdarest-9.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e177ab12fb797eedb47d66f7b82a735", "sha256": "5223ed081d156b1dab89ddf78c8203a639b2c918ad03487210edcc037c8a7651"}, "downloads": -1, "filename": "lambdarest-9.1.0.tar.gz", "has_sig": false, "md5_digest": "2e177ab12fb797eedb47d66f7b82a735", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9993, "upload_time": "2020-04-16T15:27:50", "upload_time_iso_8601": "2020-04-16T15:27:50.276934Z", "url": "https://files.pythonhosted.org/packages/c1/6f/c4288d09e90c0eea4e048a71bf07265c2c7755c2ea5201ec38695738c55d/lambdarest-9.1.0.tar.gz", "yanked": false}], "9.1.1": [{"comment_text": "", "digests": {"md5": "9ec116fd8f04c9c9e60d1dc4e7009332", "sha256": "d3eb88004d04f69b791ff4f4cd0931141b4eab103e99c1fb817d88b8f40c48db"}, "downloads": -1, "filename": "lambdarest-9.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9ec116fd8f04c9c9e60d1dc4e7009332", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8799, "upload_time": "2020-04-16T15:32:37", "upload_time_iso_8601": "2020-04-16T15:32:37.125306Z", "url": "https://files.pythonhosted.org/packages/03/8c/3b843778be3a9c2a8238a5b8e19304aff565cdf8eca9aa2f56835ef8b752/lambdarest-9.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6834fb72b7d53b1200d01d5d25f8d47d", "sha256": "01dd28fc0d2dd97d353a29dca9461db1f15dc97c22a15c6742606c041271c6d9"}, "downloads": -1, "filename": "lambdarest-9.1.1.tar.gz", "has_sig": false, "md5_digest": "6834fb72b7d53b1200d01d5d25f8d47d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9969, "upload_time": "2020-04-16T15:32:39", "upload_time_iso_8601": "2020-04-16T15:32:39.020884Z", "url": "https://files.pythonhosted.org/packages/a4/d3/407aac00e7ac3039d04277347a591b1b2ebc33dcd6760e73c9c7b763e7e5/lambdarest-9.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ec116fd8f04c9c9e60d1dc4e7009332", "sha256": "d3eb88004d04f69b791ff4f4cd0931141b4eab103e99c1fb817d88b8f40c48db"}, "downloads": -1, "filename": "lambdarest-9.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9ec116fd8f04c9c9e60d1dc4e7009332", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8799, "upload_time": "2020-04-16T15:32:37", "upload_time_iso_8601": "2020-04-16T15:32:37.125306Z", "url": "https://files.pythonhosted.org/packages/03/8c/3b843778be3a9c2a8238a5b8e19304aff565cdf8eca9aa2f56835ef8b752/lambdarest-9.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6834fb72b7d53b1200d01d5d25f8d47d", "sha256": "01dd28fc0d2dd97d353a29dca9461db1f15dc97c22a15c6742606c041271c6d9"}, "downloads": -1, "filename": "lambdarest-9.1.1.tar.gz", "has_sig": false, "md5_digest": "6834fb72b7d53b1200d01d5d25f8d47d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9969, "upload_time": "2020-04-16T15:32:39", "upload_time_iso_8601": "2020-04-16T15:32:39.020884Z", "url": "https://files.pythonhosted.org/packages/a4/d3/407aac00e7ac3039d04277347a591b1b2ebc33dcd6760e73c9c7b763e7e5/lambdarest-9.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:04 2020"}