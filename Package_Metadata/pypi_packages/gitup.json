{"info": {"author": "Ben Kurtovic", "author_email": "ben.kurtovic@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Version Control :: Git"], "description": "__gitup__ (the _git-repo-updater_)\n\ngitup is a tool for updating multiple git repositories at once. It is smart\nenough to handle several remotes, dirty working directories, diverged local\nbranches, detached HEADs, and more. It was originally created to manage a large\ncollection of projects and deal with sporadic internet access.\n\ngitup should work on macOS, Linux, and Windows. You should have the latest\nversion of git and either Python 2.7 or Python 3 installed.\n\n# Installation\n\nWith [pip](https://github.com/pypa/pip/):\n\n    pip install gitup\n\nWith [Homebrew](http://brew.sh/):\n\n    brew install gitup\n\n## From source\n\nFirst:\n\n    git clone git://github.com/earwig/git-repo-updater.git\n    cd git-repo-updater\n\nThen, to install for everyone:\n\n    sudo python setup.py install\n\nor for just yourself (make sure you have `~/.local/bin` in your PATH):\n\n    python setup.py install --user\n\nFinally, simply delete the `git-repo-updater` directory, and you're done!\n\n__Note:__ If you are using Windows, you may wish to add a macro so you can\ninvoke gitup in any directory. Note that `C:\\python27\\` refers to the\ndirectory where Python is installed:\n\n    DOSKEY gitup=c:\\python27\\python.exe c:\\python27\\Scripts\\gitup $*\n\n# Usage\n\nThere are two ways to update repos: you can pass them as command arguments,\nor save them as \"bookmarks\".\n\nFor example:\n\n    gitup ~/repos/foo ~/repos/bar ~/repos/baz\n\nwill automatically pull to the `foo`, `bar`, and `baz` git repositories.\nAdditionally, you can just type:\n\n    gitup ~/repos\n\nto automatically update all git repositories in that directory.\n\nTo add bookmarks, either of these will work:\n\n    gitup --add ~/repos/foo ~/repos/bar ~/repos/baz\n    gitup --add ~/repos\n\nThen, to update all of your bookmarks, just run gitup without args:\n\n    gitup\n\nDelete a bookmark:\n\n    gitup --delete ~/repos\n\nView your current bookmarks:\n\n    gitup --list\n\nYou can mix and match bookmarks and command arguments:\n\n    gitup --add ~/repos/foo ~/repos/bar\n    gitup ~/repos/baz            # update 'baz' only\n    gitup                        # update 'foo' and 'bar' only\n    gitup ~/repos/baz --update   # update all three!\n\nUpdate all git repositories in your current directory:\n\n    gitup .\n\nYou can control how deep gitup will look for repositories in a given directory,\nif that directory is not a git repo by itself, with the `--depth` (or `-t`)\noption. `--depth 0` will disable recursion entirely, meaning the provided paths\nmust be repos by themselves. `--depth 1` will descend one level (this is the\nold behavior from pre-0.5 gitup). `--depth -1` will recurse indefinitely,\nwhich is not recommended. The default is `--depth 3`.\n\nBy default, gitup will fetch all remotes in a repository. Pass `--current-only`\n(or `-c`) to make it fetch only the remote tracked by the current branch.\n\nAlso by default, gitup will try to fast-forward all branches that have\nupstreams configured. It will always skip branches where this is not possible\n(e.g. dirty working directory or a merge/rebase is required). Pass\n`--fetch-only` (or `-f`) to skip this step and only fetch remotes.\n\nAfter fetching, gitup will _keep_ remote-tracking branches that no longer exist\nupstream. Pass `--prune` (or `-p`) to delete them, or set `fetch.prune` or\n`remote.<name>.prune` in your git config to do this by default.\n\nFor a full list of all command arguments and abbreviations:\n\n    gitup --help\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/earwig/git-repo-updater", "keywords": "git repository pull update", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "gitup", "package_url": "https://pypi.org/project/gitup/", "platform": "", "project_url": "https://pypi.org/project/gitup/", "project_urls": {"Homepage": "https://github.com/earwig/git-repo-updater"}, "release_url": "https://pypi.org/project/gitup/0.5.1/", "requires_dist": ["GitPython (>=2.1.8)", "colorama (>=0.3.9)"], "requires_python": "", "summary": "Easily update multiple git repositories at once", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>gitup</strong> (the <em>git-repo-updater</em>)</p>\n<p>gitup is a tool for updating multiple git repositories at once. It is smart\nenough to handle several remotes, dirty working directories, diverged local\nbranches, detached HEADs, and more. It was originally created to manage a large\ncollection of projects and deal with sporadic internet access.</p>\n<p>gitup should work on macOS, Linux, and Windows. You should have the latest\nversion of git and either Python 2.7 or Python 3 installed.</p>\n<h1>Installation</h1>\n<p>With <a href=\"https://github.com/pypa/pip/\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>pip install gitup\n</code></pre>\n<p>With <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a>:</p>\n<pre><code>brew install gitup\n</code></pre>\n<h2>From source</h2>\n<p>First:</p>\n<pre><code>git clone git://github.com/earwig/git-repo-updater.git\ncd git-repo-updater\n</code></pre>\n<p>Then, to install for everyone:</p>\n<pre><code>sudo python setup.py install\n</code></pre>\n<p>or for just yourself (make sure you have <code>~/.local/bin</code> in your PATH):</p>\n<pre><code>python setup.py install --user\n</code></pre>\n<p>Finally, simply delete the <code>git-repo-updater</code> directory, and you're done!</p>\n<p><strong>Note:</strong> If you are using Windows, you may wish to add a macro so you can\ninvoke gitup in any directory. Note that <code>C:\\python27\\</code> refers to the\ndirectory where Python is installed:</p>\n<pre><code>DOSKEY gitup=c:\\python27\\python.exe c:\\python27\\Scripts\\gitup $*\n</code></pre>\n<h1>Usage</h1>\n<p>There are two ways to update repos: you can pass them as command arguments,\nor save them as \"bookmarks\".</p>\n<p>For example:</p>\n<pre><code>gitup ~/repos/foo ~/repos/bar ~/repos/baz\n</code></pre>\n<p>will automatically pull to the <code>foo</code>, <code>bar</code>, and <code>baz</code> git repositories.\nAdditionally, you can just type:</p>\n<pre><code>gitup ~/repos\n</code></pre>\n<p>to automatically update all git repositories in that directory.</p>\n<p>To add bookmarks, either of these will work:</p>\n<pre><code>gitup --add ~/repos/foo ~/repos/bar ~/repos/baz\ngitup --add ~/repos\n</code></pre>\n<p>Then, to update all of your bookmarks, just run gitup without args:</p>\n<pre><code>gitup\n</code></pre>\n<p>Delete a bookmark:</p>\n<pre><code>gitup --delete ~/repos\n</code></pre>\n<p>View your current bookmarks:</p>\n<pre><code>gitup --list\n</code></pre>\n<p>You can mix and match bookmarks and command arguments:</p>\n<pre><code>gitup --add ~/repos/foo ~/repos/bar\ngitup ~/repos/baz            # update 'baz' only\ngitup                        # update 'foo' and 'bar' only\ngitup ~/repos/baz --update   # update all three!\n</code></pre>\n<p>Update all git repositories in your current directory:</p>\n<pre><code>gitup .\n</code></pre>\n<p>You can control how deep gitup will look for repositories in a given directory,\nif that directory is not a git repo by itself, with the <code>--depth</code> (or <code>-t</code>)\noption. <code>--depth 0</code> will disable recursion entirely, meaning the provided paths\nmust be repos by themselves. <code>--depth 1</code> will descend one level (this is the\nold behavior from pre-0.5 gitup). <code>--depth -1</code> will recurse indefinitely,\nwhich is not recommended. The default is <code>--depth 3</code>.</p>\n<p>By default, gitup will fetch all remotes in a repository. Pass <code>--current-only</code>\n(or <code>-c</code>) to make it fetch only the remote tracked by the current branch.</p>\n<p>Also by default, gitup will try to fast-forward all branches that have\nupstreams configured. It will always skip branches where this is not possible\n(e.g. dirty working directory or a merge/rebase is required). Pass\n<code>--fetch-only</code> (or <code>-f</code>) to skip this step and only fetch remotes.</p>\n<p>After fetching, gitup will <em>keep</em> remote-tracking branches that no longer exist\nupstream. Pass <code>--prune</code> (or <code>-p</code>) to delete them, or set <code>fetch.prune</code> or\n<code>remote.&lt;name&gt;.prune</code> in your git config to do this by default.</p>\n<p>For a full list of all command arguments and abbreviations:</p>\n<pre><code>gitup --help\n</code></pre>\n\n          </div>"}, "last_serial": 5860113, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "543db9052a5cd64fc9f9d1ae0d4dbe3a", "sha256": "c3705804a7ca8d3cb9a3c832bb7578c786935040a912c4d116bae55e50faa4d2"}, "downloads": -1, "filename": "gitup-0.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "543db9052a5cd64fc9f9d1ae0d4dbe3a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11951, "upload_time": "2018-08-28T04:45:13", "upload_time_iso_8601": "2018-08-28T04:45:13.341541Z", "url": "https://files.pythonhosted.org/packages/04/fa/949ae90fb5b007cbfd6239e484cecb09ddc5751987ec2d05c12f2ceb69ab/gitup-0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23eb2d09078fff1fc663719b34a6e704", "sha256": "eedd461b5ef0ee288151a16d7887cd93a79edb91d3dd2ffd8d2b772f62fa3486"}, "downloads": -1, "filename": "gitup-0.5.tar.gz", "has_sig": true, "md5_digest": "23eb2d09078fff1fc663719b34a6e704", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11346, "upload_time": "2018-08-28T04:45:15", "upload_time_iso_8601": "2018-08-28T04:45:15.163373Z", "url": "https://files.pythonhosted.org/packages/80/50/e7fefec98fc82b053088e2871611e0f66dddf1d0118076d355f4422be709/gitup-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "e6fe116391e547e7025c8daf59bb66b9", "sha256": "ee5b0314062edbccee900b851c030233378613256c141422a22a831c6201d8f8"}, "downloads": -1, "filename": "gitup-0.5.1-py3-none-any.whl", "has_sig": true, "md5_digest": "e6fe116391e547e7025c8daf59bb66b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14269, "upload_time": "2019-09-20T04:38:09", "upload_time_iso_8601": "2019-09-20T04:38:09.532849Z", "url": "https://files.pythonhosted.org/packages/69/0a/b9045df7b1f97050cf85bc98670a7f5779fb39191b628b1a3f8b656ec6ad/gitup-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56a062e56f954e23e86c24db1739ecbe", "sha256": "4f787079cd65d8f60c5842181204635e1b72d3533ae91f0c619624c6b20846dd"}, "downloads": -1, "filename": "gitup-0.5.1.tar.gz", "has_sig": true, "md5_digest": "56a062e56f954e23e86c24db1739ecbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11819, "upload_time": "2019-09-20T04:38:11", "upload_time_iso_8601": "2019-09-20T04:38:11.478490Z", "url": "https://files.pythonhosted.org/packages/7f/07/4835f8f4de5924b5f38b816c648bde284f0cec9a9ae65bd7e5b7f5867638/gitup-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6fe116391e547e7025c8daf59bb66b9", "sha256": "ee5b0314062edbccee900b851c030233378613256c141422a22a831c6201d8f8"}, "downloads": -1, "filename": "gitup-0.5.1-py3-none-any.whl", "has_sig": true, "md5_digest": "e6fe116391e547e7025c8daf59bb66b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14269, "upload_time": "2019-09-20T04:38:09", "upload_time_iso_8601": "2019-09-20T04:38:09.532849Z", "url": "https://files.pythonhosted.org/packages/69/0a/b9045df7b1f97050cf85bc98670a7f5779fb39191b628b1a3f8b656ec6ad/gitup-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56a062e56f954e23e86c24db1739ecbe", "sha256": "4f787079cd65d8f60c5842181204635e1b72d3533ae91f0c619624c6b20846dd"}, "downloads": -1, "filename": "gitup-0.5.1.tar.gz", "has_sig": true, "md5_digest": "56a062e56f954e23e86c24db1739ecbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11819, "upload_time": "2019-09-20T04:38:11", "upload_time_iso_8601": "2019-09-20T04:38:11.478490Z", "url": "https://files.pythonhosted.org/packages/7f/07/4835f8f4de5924b5f38b816c648bde284f0cec9a9ae65bd7e5b7f5867638/gitup-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:44 2020"}