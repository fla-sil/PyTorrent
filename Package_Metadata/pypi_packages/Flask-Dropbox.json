{"info": {"author": "Igor Davydenko", "author_email": "playpauseandstop@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "=============\nFlask-Dropbox\n=============\n\n.. image:: https://travis-ci.org/playpauseandstop/Flask-Dropbox.png?branch=master\n    :target: https://travis-ci.org/playpauseandstop/Flask-Dropbox\n\n.. image:: https://pypip.in/v/Flask-Dropbox/badge.png\n    :target: https://crate.io/packages/Flask-Dropbox\n\n\nDropbox Python SDK support for Flask applications.\n\nRequirements\n============\n\n* `Python <http://www.python.org/>`_ 2.6 or 2.7\n* `Flask <http://flask.pocoo.org/>`_ 0.8 or higher\n* `Dropbox Python SDK <http://pypi.python.org/pypi/dropbox>`_ 1.4 or higher\n\nInstallation\n============\n\n::\n\n    $ pip install Flask-Dropbox\n\nLicense\n=======\n\n``Flask-Dropbox`` is licensed under the `BSD License\n<https://github.com/playpauseandstop/Flask-Dropbox/blob/master/LICENSE>`_.\n\nConfiguration\n=============\n\nSECRET_KEY\n----------\n\n**REQUIRED.** As token would be stored in Flask's `session\n<http://flask.pocoo.org/docs/quickstart/#sessions>`_ instance, you need to\nconfigure secret key for your application.\n\nDROPBOX_KEY\n-----------\n\n**REQUIRED.** App key from Dropbox developer site.\n\nDROPBOX_SECRET\n--------------\n\n**REQUIRED.** Secret key from Dropbox developer site.\n\nDROPBOX_ACCESS_TYPE\n-------------------\n\n**REQUIRED.** Should be ``'dropbox'`` or ``'app_folder'`` as configured for\nyour app.\n\nDROPBOX_CALLBACK_URL\n--------------------\n\nBy default, you don't need to provide this setting, cause ``Flask-Dropbox``\nwill setup callback URL automaticly usign current host and type of request,\nbut if you don't trust us, you could to rewrite this setting manually.\n\nDROPBOX_CALLBACK_TEMPLATE\n-------------------------\n\nTemplate to be used for showing errors while trying to process oAuth callback\nfrom Dropbox API. By default: ``'dropbox/callback.html'``.\n\nNext boolean vars could be sent to the template:\n\n* ``error_oauth_token`` - Dropbox API didn't return oAuth token.\n* ``error_not_equal_tokens`` - oAuth token from Dropbox API is not equal to\n  request token stored in Flask session.\n* ``error_response`` - Dropbox API returns ``ErrorResponse`` instance. Also\n  actual exception as ``error`` var would be sent to the template too.\n\nDROPBOX_LOGIN_REDIRECT\n----------------------\n\nPage to redirect to after user successfully logged in with Dropbox account. By\ndefault: ``/``.\n\nDROPBOX_LOGOUT_REDIRECT\n-----------------------\n\nPage to redirect to after user logged out from authenticated Dropbox session.\nBy default: ``/``.\n\nDROPBOX_CACHE_STORAGE\n---------------------\n\n.. versionadded:: 0.3\n\nWhere to place account info, Dropbox client and Dropbox session instances. In\n0.2 and lower all this info stored in ``flask_dropbox.Dropbox`` instance, which\nisn't thread safe, but from 0.3 all these values stored to ``flask.g``. If you\nneed custom storage you can override this setting with object or string which\nwould be imported.\n\nUsage\n=====\n\n``app.py``::\n\n    from flask import Flask\n    from flask.ext.dropbox import Dropbox, DropboxBlueprint\n\n    import settings\n\n\n    app = Flask(__name__)\n    app.config.from_object(settings)\n\n    dropbox = Dropbox(app)\n    dropbox.register_blueprint(url_prefix='/dropbox')\n\n``settings.py``::\n\n    SECRET_KEY = 'some-secret-key'\n    DROPBOX_KEY = 'dropbox-app-key'\n    DROPBOX_SECRET = 'dropbox-app-secret'\n    DROPBOX_ACCESS_TYPE = 'app_folder'\n\n``views.py``::\n\n    from flask import url_for, redirect, request\n    from werkzeug import secure_filename\n\n    from app import app, dropbox\n\n\n    @app.route('/')\n    def home():\n        return u'Click <a href=\"%s\">here</a> to login with Dropbox.' % \\\n               dropbox.login_url\n\n\n    @app.route('/success/<path:filename>')\n    def success(filename):\n        return u'File successfully uploaded as /%s' % filename\n\n\n    @app.route('/upload', methods=('GET', 'POST'))\n    def upload():\n        if not dropbox.is_authenticated:\n            return redirect(url_for('home'))\n\n        if request.method == 'POST':\n            file_obj = request.files['file']\n\n            if file_obj:\n                client = dropbox.client\n                filename = secure_filename(file.filename)\n\n                # Actual uploading process\n                result = client.put_file('/' + filename, file_obj.read())\n\n                path = result['path'].lstrip('/')\n                return redirect(url_for('success', filename=path))\n\n        return u'<form action=\"\" method=\"post\">' \\\n               u'<input name=\"file\" type=\"file\">' \\\n               u'<input type=\"submit\" value=\"Upload\">' \\\n               u'</form>'\n\nBugs, feature requests?\n=======================\n\nIf you found some bug in ``Flask-Dropbox`` library, please, add new issue to\nthe project's `GitHub issues\n<https://github.com/playpauseandstop/Flask-Dropbox/issues>`_.\n\nChangeLog\n=========\n\n0.3\n---\n\n+ Flask 0.10 support\n+ Store account info, Dropbox client and session in thread-safe ``flask.g``\n  storage instead of ``flask_dropbox.Dropbox`` instance\n+ Introduce ``DROPBOX_CACHE_STORAGE`` setting\n\n0.2\n---\n\n+ Add ``init_app`` method to ``Dropbox`` extension class.\n+ Do not send ``dropbox`` instance for initialization of ``DropboxBlueprint``\n  class.\n+ Use ``current_app.extensions['dropbox']`` statement in views for getting\n  initialized ``Dropbox`` instance.\n\n0.1.5\n-----\n\n+ Add ``register_blueprint`` shortcut to initialize ``DropboxBlueprint`` with\n  default values in one line.\n+ Move ``Dropbox`` class from ``flask.ext.dropbox.utils`` to\n  ``flask.ext.dropbox.extension`` module. But mainly, it wouldn't affected to\n  your code if you used ``from flask.ext.dropbox import Dropbox`` statements.\n\n0.1.4\n-----\n\n+ Add ``dropbox`` library as install requirement in ``setup.py``.\n+ Update project short description.\n\n0.1.3\n-----\n\n+ Fix handling templates while installing via setup.py\n\n0.1.2\n-----\n\n+ Add support of Dropbox SDK 1.4.1\n\n0.1.1\n-----\n\n+ Check that access token is the instance of ``oauth.OAuthToken`` class if it\n  exists in session.\n\n0.1\n---\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/playpauseandstop/Flask-Dropbox", "keywords": "flask dropbox", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "Flask-Dropbox", "package_url": "https://pypi.org/project/Flask-Dropbox/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Dropbox/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/playpauseandstop/Flask-Dropbox"}, "release_url": "https://pypi.org/project/Flask-Dropbox/0.3/", "requires_dist": null, "requires_python": null, "summary": "Dropbox Python SDK support for Flask applications.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            =============<br>Flask-Dropbox<br>=============<br><br>.. image:: https://travis-ci.org/playpauseandstop/Flask-Dropbox.png?branch=master<br>    :target: https://travis-ci.org/playpauseandstop/Flask-Dropbox<br><br>.. image:: https://pypip.in/v/Flask-Dropbox/badge.png<br>    :target: https://crate.io/packages/Flask-Dropbox<br><br><br>Dropbox Python SDK support for Flask applications.<br><br>Requirements<br>============<br><br>* `Python &lt;http://www.python.org/&gt;`_ 2.6 or 2.7<br>* `Flask &lt;http://flask.pocoo.org/&gt;`_ 0.8 or higher<br>* `Dropbox Python SDK &lt;http://pypi.python.org/pypi/dropbox&gt;`_ 1.4 or higher<br><br>Installation<br>============<br><br>::<br><br>    $ pip install Flask-Dropbox<br><br>License<br>=======<br><br>``Flask-Dropbox`` is licensed under the `BSD License<br>&lt;https://github.com/playpauseandstop/Flask-Dropbox/blob/master/LICENSE&gt;`_.<br><br>Configuration<br>=============<br><br>SECRET_KEY<br>----------<br><br>**REQUIRED.** As token would be stored in Flask's `session<br>&lt;http://flask.pocoo.org/docs/quickstart/#sessions&gt;`_ instance, you need to<br>configure secret key for your application.<br><br>DROPBOX_KEY<br>-----------<br><br>**REQUIRED.** App key from Dropbox developer site.<br><br>DROPBOX_SECRET<br>--------------<br><br>**REQUIRED.** Secret key from Dropbox developer site.<br><br>DROPBOX_ACCESS_TYPE<br>-------------------<br><br>**REQUIRED.** Should be ``'dropbox'`` or ``'app_folder'`` as configured for<br>your app.<br><br>DROPBOX_CALLBACK_URL<br>--------------------<br><br>By default, you don't need to provide this setting, cause ``Flask-Dropbox``<br>will setup callback URL automaticly usign current host and type of request,<br>but if you don't trust us, you could to rewrite this setting manually.<br><br>DROPBOX_CALLBACK_TEMPLATE<br>-------------------------<br><br>Template to be used for showing errors while trying to process oAuth callback<br>from Dropbox API. By default: ``'dropbox/callback.html'``.<br><br>Next boolean vars could be sent to the template:<br><br>* ``error_oauth_token`` - Dropbox API didn't return oAuth token.<br>* ``error_not_equal_tokens`` - oAuth token from Dropbox API is not equal to<br>  request token stored in Flask session.<br>* ``error_response`` - Dropbox API returns ``ErrorResponse`` instance. Also<br>  actual exception as ``error`` var would be sent to the template too.<br><br>DROPBOX_LOGIN_REDIRECT<br>----------------------<br><br>Page to redirect to after user successfully logged in with Dropbox account. By<br>default: ``/``.<br><br>DROPBOX_LOGOUT_REDIRECT<br>-----------------------<br><br>Page to redirect to after user logged out from authenticated Dropbox session.<br>By default: ``/``.<br><br>DROPBOX_CACHE_STORAGE<br>---------------------<br><br>.. versionadded:: 0.3<br><br>Where to place account info, Dropbox client and Dropbox session instances. In<br>0.2 and lower all this info stored in ``flask_dropbox.Dropbox`` instance, which<br>isn't thread safe, but from 0.3 all these values stored to ``flask.g``. If you<br>need custom storage you can override this setting with object or string which<br>would be imported.<br><br>Usage<br>=====<br><br>``app.py``::<br><br>    from flask import Flask<br>    from flask.ext.dropbox import Dropbox, DropboxBlueprint<br><br>    import settings<br><br><br>    app = Flask(__name__)<br>    app.config.from_object(settings)<br><br>    dropbox = Dropbox(app)<br>    dropbox.register_blueprint(url_prefix='/dropbox')<br><br>``settings.py``::<br><br>    SECRET_KEY = 'some-secret-key'<br>    DROPBOX_KEY = 'dropbox-app-key'<br>    DROPBOX_SECRET = 'dropbox-app-secret'<br>    DROPBOX_ACCESS_TYPE = 'app_folder'<br><br>``views.py``::<br><br>    from flask import url_for, redirect, request<br>    from werkzeug import secure_filename<br><br>    from app import app, dropbox<br><br><br>    @app.route('/')<br>    def home():<br>        return u'Click &lt;a href=\"%s\"&gt;here&lt;/a&gt; to login with Dropbox.' % \\<br>               dropbox.login_url<br><br><br>    @app.route('/success/&lt;path:filename&gt;')<br>    def success(filename):<br>        return u'File successfully uploaded as /%s' % filename<br><br><br>    @app.route('/upload', methods=('GET', 'POST'))<br>    def upload():<br>        if not dropbox.is_authenticated:<br>            return redirect(url_for('home'))<br><br>        if request.method == 'POST':<br>            file_obj = request.files['file']<br><br>            if file_obj:<br>                client = dropbox.client<br>                filename = secure_filename(file.filename)<br><br>                # Actual uploading process<br>                result = client.put_file('/' + filename, file_obj.read())<br><br>                path = result['path'].lstrip('/')<br>                return redirect(url_for('success', filename=path))<br><br>        return u'&lt;form action=\"\" method=\"post\"&gt;' \\<br>               u'&lt;input name=\"file\" type=\"file\"&gt;' \\<br>               u'&lt;input type=\"submit\" value=\"Upload\"&gt;' \\<br>               u'&lt;/form&gt;'<br><br>Bugs, feature requests?<br>=======================<br><br>If you found some bug in ``Flask-Dropbox`` library, please, add new issue to<br>the project's `GitHub issues<br>&lt;https://github.com/playpauseandstop/Flask-Dropbox/issues&gt;`_.<br><br>ChangeLog<br>=========<br><br>0.3<br>---<br><br>+ Flask 0.10 support<br>+ Store account info, Dropbox client and session in thread-safe ``flask.g``<br>  storage instead of ``flask_dropbox.Dropbox`` instance<br>+ Introduce ``DROPBOX_CACHE_STORAGE`` setting<br><br>0.2<br>---<br><br>+ Add ``init_app`` method to ``Dropbox`` extension class.<br>+ Do not send ``dropbox`` instance for initialization of ``DropboxBlueprint``<br>  class.<br>+ Use ``current_app.extensions['dropbox']`` statement in views for getting<br>  initialized ``Dropbox`` instance.<br><br>0.1.5<br>-----<br><br>+ Add ``register_blueprint`` shortcut to initialize ``DropboxBlueprint`` with<br>  default values in one line.<br>+ Move ``Dropbox`` class from ``flask.ext.dropbox.utils`` to<br>  ``flask.ext.dropbox.extension`` module. But mainly, it wouldn't affected to<br>  your code if you used ``from flask.ext.dropbox import Dropbox`` statements.<br><br>0.1.4<br>-----<br><br>+ Add ``dropbox`` library as install requirement in ``setup.py``.<br>+ Update project short description.<br><br>0.1.3<br>-----<br><br>+ Fix handling templates while installing via setup.py<br><br>0.1.2<br>-----<br><br>+ Add support of Dropbox SDK 1.4.1<br><br>0.1.1<br>-----<br><br>+ Check that access token is the instance of ``oauth.OAuthToken`` class if it<br>  exists in session.<br><br>0.1<br>---<br><br>* Initial release.\n          </div>"}, "last_serial": 774550, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "db1f842999c99470d9262b69e2e1656c", "sha256": "fc159f0453e6cd66330a7a4fe7c455c0ed330e3663b8d35d074a0da4c2e1a6db"}, "downloads": -1, "filename": "Flask-Dropbox-0.1.tar.gz", "has_sig": false, "md5_digest": "db1f842999c99470d9262b69e2e1656c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6400, "upload_time": "2012-04-21T11:14:55", "upload_time_iso_8601": "2012-04-21T11:14:55.467087Z", "url": "https://files.pythonhosted.org/packages/e4/00/6c3fbbe87eb976d272285cfbb5b4d888cac95cd152da2c1e3e6698facf19/Flask-Dropbox-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "547ddce4d8275e13e4d6e15805bf1024", "sha256": "72d50855b1b2f97bfae5cd6145a258312bc207ecfaaec48c878c3c194e6356c6"}, "downloads": -1, "filename": "Flask-Dropbox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "547ddce4d8275e13e4d6e15805bf1024", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6497, "upload_time": "2012-04-21T12:30:51", "upload_time_iso_8601": "2012-04-21T12:30:51.716649Z", "url": "https://files.pythonhosted.org/packages/35/05/e9a2e195e8ebd3ef6fb4f5338ac164b8352894535354cf325b252cb19041/Flask-Dropbox-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d3a80b642eb883515e894a9722ae2c23", "sha256": "ba6929b5f98762cf247d5e5411acbe89f8d2229d2ecfb542c03065fd2a6cabcd"}, "downloads": -1, "filename": "Flask-Dropbox-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d3a80b642eb883515e894a9722ae2c23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6774, "upload_time": "2012-07-11T11:38:33", "upload_time_iso_8601": "2012-07-11T11:38:33.242984Z", "url": "https://files.pythonhosted.org/packages/fa/b1/52877d33eb935c738fdf82197407154f6ac648531c130383d8d55f3a3544/Flask-Dropbox-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7ff8c4ebe0e3bbd6ebbff0d14be8ea13", "sha256": "3f83fd500ec973cd462a6890ae0744955599369c848afdf39db5d40d17eb3f20"}, "downloads": -1, "filename": "Flask-Dropbox-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7ff8c4ebe0e3bbd6ebbff0d14be8ea13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6837, "upload_time": "2012-07-11T18:23:50", "upload_time_iso_8601": "2012-07-11T18:23:50.242615Z", "url": "https://files.pythonhosted.org/packages/03/73/34ac6953a2dc0f4269e4fa620ebe64bfb065ff174dfd4d0fec82dbcc277f/Flask-Dropbox-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "cde0bcaeee3459d9dcf17bac9d2f0679", "sha256": "dfc47d0e7b9fa511b33d0ee3df4bb0bd17e2fa93e294ecae8e7c2f796ff3e0be"}, "downloads": -1, "filename": "Flask-Dropbox-0.1.4.tar.gz", "has_sig": false, "md5_digest": "cde0bcaeee3459d9dcf17bac9d2f0679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6886, "upload_time": "2012-08-15T11:46:10", "upload_time_iso_8601": "2012-08-15T11:46:10.904111Z", "url": "https://files.pythonhosted.org/packages/9b/25/4ee8f276f6e51510e757982fab8c7a884bf5090e239f58a649c515b16105/Flask-Dropbox-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "8929a65486081c4cdafae5580d3cd3ab", "sha256": "ce6408fd5c597e02d9522cab96db1a31a325d418297a266f57724edc0bb94b59"}, "downloads": -1, "filename": "Flask-Dropbox-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8929a65486081c4cdafae5580d3cd3ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7103, "upload_time": "2012-08-17T10:19:07", "upload_time_iso_8601": "2012-08-17T10:19:07.692661Z", "url": "https://files.pythonhosted.org/packages/3d/c7/e2ee8c6fbfcb7f80778fb8ccf01f8fbae9af195fe1e1a4b04cea453d57cb/Flask-Dropbox-0.1.5.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4fa5fd63e7948da567eced50a32b630e", "sha256": "175e3f802099c99c89e9ddee544b7418c864c6b6d81702a1e9ad8d4b394c7106"}, "downloads": -1, "filename": "Flask-Dropbox-0.2.tar.gz", "has_sig": false, "md5_digest": "4fa5fd63e7948da567eced50a32b630e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7274, "upload_time": "2012-10-05T09:26:45", "upload_time_iso_8601": "2012-10-05T09:26:45.193123Z", "url": "https://files.pythonhosted.org/packages/fa/5a/ab38d44124449da6917df7decef11a0261f33d6d985b3ca2f5b86246d5a2/Flask-Dropbox-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1033c2302cb5c49e74bef6d248cc925d", "sha256": "4cc3538459e8d0284ee35526178d7afaf2bba859dce7b52fe3a200e3a11c2f9d"}, "downloads": -1, "filename": "Flask-Dropbox-0.3.tar.gz", "has_sig": false, "md5_digest": "1033c2302cb5c49e74bef6d248cc925d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8182, "upload_time": "2013-06-19T12:37:36", "upload_time_iso_8601": "2013-06-19T12:37:36.420277Z", "url": "https://files.pythonhosted.org/packages/97/68/b00b0de974290e03827e8b984513199c9c4887906b5b16e90f7990c24f01/Flask-Dropbox-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1033c2302cb5c49e74bef6d248cc925d", "sha256": "4cc3538459e8d0284ee35526178d7afaf2bba859dce7b52fe3a200e3a11c2f9d"}, "downloads": -1, "filename": "Flask-Dropbox-0.3.tar.gz", "has_sig": false, "md5_digest": "1033c2302cb5c49e74bef6d248cc925d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8182, "upload_time": "2013-06-19T12:37:36", "upload_time_iso_8601": "2013-06-19T12:37:36.420277Z", "url": "https://files.pythonhosted.org/packages/97/68/b00b0de974290e03827e8b984513199c9c4887906b5b16e90f7990c24f01/Flask-Dropbox-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:56 2020"}