{"info": {"author": "Isaac To", "author_email": "isaac.to@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "# HTML Table Extractor\n[![Build Status](https://travis-ci.org/yuanxu-li/html-table-extractor.svg?branch=master)](https://travis-ci.org/yuanxu-li/html-table-extractor)\n\nNote: This is a re-release of html-table-extractor of yuanxu-li,\nexisting just because I've been waiting for too long for an actual\nrelease to fix the incorrect dependency (pipenv would refuse to\ninstall new version of BeautifulSoup using the original version\n1.4.0).  I've kept changes to a minimum, just to add this notice, fix\nsetup.py to make it PyPI friendly, and change the PyPI package name.\n\n_HTML Table Extractor is a python library that uses [Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/) to extract data from complicated and messy html table_\n\n## Important links\n* Repository: https://github.com/yuanxu-li/html-table-extractor\n* Issues: https://github.com/yuanxu-li/html-table-extractor/issues\n\n## Installation\n\n```bash\npip install 'beautifulsoup4==4.5.3'\npip install html-table-extractor\n```\n\n## Usage\n\n### Example 1 - Simple\n\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\n```python\nfrom html_table_extractor.extractor import Extractor\ntable_doc = \"\"\"\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\"\"\"\nextractor = Extractor(table_doc)\nextractor.parse()\nextractor.return_list()\n```\nIt will print out:\n```python\n[[u'1', u'2'], [u'3', u'4']]\n```\n\n### Example 2 - Transformer\n\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\n```python\nfrom html_table_extractor.extractor import Extractor\ntable_doc = \"\"\"\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\"\"\"\nextractor = Extractor(table_doc, transformer=int)\nextractor.parse()\nextractor.return_list()\n```\nIt will print out:\n```python\n[[1, 2], [3, 4]]\n```\n\n### Example 3 - Pass BS4 Tag\n\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\n```python\nfrom html_table_extractor.extractor import Extractor\nfrom bs4 import BeautifulSoup\ntable_doc = \"\"\"\n<html><table id='wanted'><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table><table id='unwanted'><tr><td>not wanted</td></tr></table></html>\n\"\"\"\nsoup = BeautifulSoup(table_doc, 'html.parser')\nextractor = Extractor(soup, id_='wanted')\nextractor.parse()\nextractor.return_list()\n```\nIt will print out:\n```python\n[[u'1', u'2'], [u'3', u'4']]\n```\n\n### Example 4 - Complex\n\n<table>\n    <tr>\n        <td rowspan=2>1</td>\n        <td>2</td>\n        <td>3</td>\n    </tr>\n    <tr>\n        <td colspan=2>4</td>\n    </tr>\n    <tr>\n        <td colspan=3>5</td>\n    </tr>\n</table>\n\n```python\nfrom html_table_extractor.extractor import Extractor\ntable_doc = \"\"\"\n<table>\n  <tr>\n    <td rowspan=2>1</td>\n    <td>2</td>\n    <td>3</td>\n  </tr>\n  <tr>\n    <td colspan=2>4</td>\n  </tr>\n  <tr>\n    <td colspan=3>5</td>\n  </tr>\n</table>\n\"\"\"\nextractor = Extractor(table_doc)\nextractor.parse()\nextractor.return_list()\n```\nIt will print out:\n```python\n[[u'1', u'2', u'3'], [u'1', u'4', u'4'], [u'5', u'5', u'5']]\n```\n\n### Example 5 - Conflicted\n\n<table>\n    <tr>\n        <td rowspan=2>1</td>\n        <td>2</td>\n        <td rowspan=3>3</td>\n    </tr>\n    <tr>\n        <td colspan=2>4</td>\n    </tr>\n    <tr>\n        <td colspan=2>5</td>\n    </tr>\n</table>\n\n```python\nfrom html_table_extractor.extractor import Extractor\ntable_doc = \"\"\"\n<table>\n    <tr>\n        <td rowspan=2>1</td>\n        <td>2</td>\n        <td rowspan=3>3</td>\n    </tr>\n    <tr>\n        <td colspan=2>4</td>\n    </tr>\n    <tr>\n        <td colspan=2>5</td>\n    </tr>\n</table>\n\"\"\"\nextractor = Extractor(table_doc)\nextractor.parse()\nextractor.return_list()\n```\nIt will print out:\n```python\n[[u'1', u'2', u'3'], [u'1', u'4', u'3'], [u'5', u'5', u'3']]\n```\n\n### Example 6 - Write to file\n\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\n```python\nfrom html_table_extractor.extractor import Extractor\ntable_doc = \"\"\"\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n\"\"\"\nextractor = Extractor(table_doc).parse()\nextractor.write_to_csv(path='.')\n```\nIt will write to a given path and create a new csv file called `output.csv`:\n```\n1,2\n3,4\n\n```\n\n## Team\n\n* [@yuanxu-li](https://github.com/yuanxu-li)\n\n## Errors/ Bugs\n\nIf something is not working correctly, or if you have any suggestion on improvements, [report it here](https://github.com/yuanxu-li/table-extractor/issues)\n\n## Copyright\n\nCopyright (c) 2017 Justin Li. Released under the [MIT License](https://github.com/yuanxu-li/html-table-extractor/blob/master/README.md)\n\nThird-party copyright in this distribution is noted where applicable.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isaacto/html-table-extractor", "keywords": "html table beautifulsoup crawler scrape", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "isaacto-html-table-extractor", "package_url": "https://pypi.org/project/isaacto-html-table-extractor/", "platform": "", "project_url": "https://pypi.org/project/isaacto-html-table-extractor/", "project_urls": {"Homepage": "https://github.com/isaacto/html-table-extractor"}, "release_url": "https://pypi.org/project/isaacto-html-table-extractor/1.4.0.1/", "requires_dist": ["beautifulsoup4 (>=4.0.0)"], "requires_python": "", "summary": "A python library for extracting data from html table", "version": "1.4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HTML Table Extractor</h1>\n<p><a href=\"https://travis-ci.org/yuanxu-li/html-table-extractor\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/042ce6983daec6a11bdd22d62460543a4faa4883/68747470733a2f2f7472617669732d63692e6f72672f7975616e78752d6c692f68746d6c2d7461626c652d657874726163746f722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Note: This is a re-release of html-table-extractor of yuanxu-li,\nexisting just because I've been waiting for too long for an actual\nrelease to fix the incorrect dependency (pipenv would refuse to\ninstall new version of BeautifulSoup using the original version\n1.4.0).  I've kept changes to a minimum, just to add this notice, fix\nsetup.py to make it PyPI friendly, and change the PyPI package name.</p>\n<p><em>HTML Table Extractor is a python library that uses <a href=\"https://www.crummy.com/software/BeautifulSoup/\" rel=\"nofollow\">Beautiful Soup</a> to extract data from complicated and messy html table</em></p>\n<h2>Important links</h2>\n<ul>\n<li>Repository: <a href=\"https://github.com/yuanxu-li/html-table-extractor\" rel=\"nofollow\">https://github.com/yuanxu-li/html-table-extractor</a></li>\n<li>Issues: <a href=\"https://github.com/yuanxu-li/html-table-extractor/issues\" rel=\"nofollow\">https://github.com/yuanxu-li/html-table-extractor/issues</a></li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install <span class=\"s1\">'beautifulsoup4==4.5.3'</span>\npip install html-table-extractor\n</pre>\n<h2>Usage</h2>\n<h3>Example 1 - Simple</h3>\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_table_extractor.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">Extractor</span>\n<span class=\"n\">table_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;table&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">Extractor</span><span class=\"p\">(</span><span class=\"n\">table_doc</span><span class=\"p\">)</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">return_list</span><span class=\"p\">()</span>\n</pre>\n<p>It will print out:</p>\n<pre><span class=\"p\">[[</span><span class=\"sa\">u</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'2'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'3'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'4'</span><span class=\"p\">]]</span>\n</pre>\n<h3>Example 2 - Transformer</h3>\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_table_extractor.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">Extractor</span>\n<span class=\"n\">table_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;table&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">Extractor</span><span class=\"p\">(</span><span class=\"n\">table_doc</span><span class=\"p\">,</span> <span class=\"n\">transformer</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">return_list</span><span class=\"p\">()</span>\n</pre>\n<p>It will print out:</p>\n<pre><span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]]</span>\n</pre>\n<h3>Example 3 - Pass BS4 Tag</h3>\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_table_extractor.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">Extractor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bs4</span> <span class=\"kn\">import</span> <span class=\"n\">BeautifulSoup</span>\n<span class=\"n\">table_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;html&gt;&lt;table id='wanted'&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table id='unwanted'&gt;&lt;tr&gt;&lt;td&gt;not wanted&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/html&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">table_doc</span><span class=\"p\">,</span> <span class=\"s1\">'html.parser'</span><span class=\"p\">)</span>\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">Extractor</span><span class=\"p\">(</span><span class=\"n\">soup</span><span class=\"p\">,</span> <span class=\"n\">id_</span><span class=\"o\">=</span><span class=\"s1\">'wanted'</span><span class=\"p\">)</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">return_list</span><span class=\"p\">()</span>\n</pre>\n<p>It will print out:</p>\n<pre><span class=\"p\">[[</span><span class=\"sa\">u</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'2'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'3'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'4'</span><span class=\"p\">]]</span>\n</pre>\n<h3>Example 4 - Complex</h3>\n<table>\n    <tr>\n        <td>1</td>\n        <td>2</td>\n        <td>3</td>\n    </tr>\n    <tr>\n        <td>4</td>\n    </tr>\n    <tr>\n        <td>5</td>\n    </tr>\n</table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_table_extractor.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">Extractor</span>\n<span class=\"n\">table_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;table&gt;</span>\n<span class=\"s2\">  &lt;tr&gt;</span>\n<span class=\"s2\">    &lt;td rowspan=2&gt;1&lt;/td&gt;</span>\n<span class=\"s2\">    &lt;td&gt;2&lt;/td&gt;</span>\n<span class=\"s2\">    &lt;td&gt;3&lt;/td&gt;</span>\n<span class=\"s2\">  &lt;/tr&gt;</span>\n<span class=\"s2\">  &lt;tr&gt;</span>\n<span class=\"s2\">    &lt;td colspan=2&gt;4&lt;/td&gt;</span>\n<span class=\"s2\">  &lt;/tr&gt;</span>\n<span class=\"s2\">  &lt;tr&gt;</span>\n<span class=\"s2\">    &lt;td colspan=3&gt;5&lt;/td&gt;</span>\n<span class=\"s2\">  &lt;/tr&gt;</span>\n<span class=\"s2\">&lt;/table&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">Extractor</span><span class=\"p\">(</span><span class=\"n\">table_doc</span><span class=\"p\">)</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">return_list</span><span class=\"p\">()</span>\n</pre>\n<p>It will print out:</p>\n<pre><span class=\"p\">[[</span><span class=\"sa\">u</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'3'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'4'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'4'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'5'</span><span class=\"p\">]]</span>\n</pre>\n<h3>Example 5 - Conflicted</h3>\n<table>\n    <tr>\n        <td>1</td>\n        <td>2</td>\n        <td>3</td>\n    </tr>\n    <tr>\n        <td>4</td>\n    </tr>\n    <tr>\n        <td>5</td>\n    </tr>\n</table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_table_extractor.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">Extractor</span>\n<span class=\"n\">table_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;table&gt;</span>\n<span class=\"s2\">    &lt;tr&gt;</span>\n<span class=\"s2\">        &lt;td rowspan=2&gt;1&lt;/td&gt;</span>\n<span class=\"s2\">        &lt;td&gt;2&lt;/td&gt;</span>\n<span class=\"s2\">        &lt;td rowspan=3&gt;3&lt;/td&gt;</span>\n<span class=\"s2\">    &lt;/tr&gt;</span>\n<span class=\"s2\">    &lt;tr&gt;</span>\n<span class=\"s2\">        &lt;td colspan=2&gt;4&lt;/td&gt;</span>\n<span class=\"s2\">    &lt;/tr&gt;</span>\n<span class=\"s2\">    &lt;tr&gt;</span>\n<span class=\"s2\">        &lt;td colspan=2&gt;5&lt;/td&gt;</span>\n<span class=\"s2\">    &lt;/tr&gt;</span>\n<span class=\"s2\">&lt;/table&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">Extractor</span><span class=\"p\">(</span><span class=\"n\">table_doc</span><span class=\"p\">)</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">return_list</span><span class=\"p\">()</span>\n</pre>\n<p>It will print out:</p>\n<pre><span class=\"p\">[[</span><span class=\"sa\">u</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'3'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'4'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'3'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'3'</span><span class=\"p\">]]</span>\n</pre>\n<h3>Example 6 - Write to file</h3>\n<table><tr><td>1</td><td>2</td></tr><tr><td>3</td><td>4</td></tr></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_table_extractor.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">Extractor</span>\n<span class=\"n\">table_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;table&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">extractor</span> <span class=\"o\">=</span> <span class=\"n\">Extractor</span><span class=\"p\">(</span><span class=\"n\">table_doc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">extractor</span><span class=\"o\">.</span><span class=\"n\">write_to_csv</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n</pre>\n<p>It will write to a given path and create a new csv file called <code>output.csv</code>:</p>\n<pre><code>1,2\n3,4\n\n</code></pre>\n<h2>Team</h2>\n<ul>\n<li><a href=\"https://github.com/yuanxu-li\" rel=\"nofollow\">@yuanxu-li</a></li>\n</ul>\n<h2>Errors/ Bugs</h2>\n<p>If something is not working correctly, or if you have any suggestion on improvements, <a href=\"https://github.com/yuanxu-li/table-extractor/issues\" rel=\"nofollow\">report it here</a></p>\n<h2>Copyright</h2>\n<p>Copyright (c) 2017 Justin Li. Released under the <a href=\"https://github.com/yuanxu-li/html-table-extractor/blob/master/README.md\" rel=\"nofollow\">MIT License</a></p>\n<p>Third-party copyright in this distribution is noted where applicable.</p>\n\n          </div>"}, "last_serial": 6297908, "releases": {"1.4.0.1": [{"comment_text": "", "digests": {"md5": "d04ec3e6556f2f30a7b687f982d32c88", "sha256": "1388a02354d7b15d27e495864e49c504dc28707ee0a9f1621c636502b9e1f890"}, "downloads": -1, "filename": "isaacto_html_table_extractor-1.4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d04ec3e6556f2f30a7b687f982d32c88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5098, "upload_time": "2019-12-14T03:32:30", "upload_time_iso_8601": "2019-12-14T03:32:30.711735Z", "url": "https://files.pythonhosted.org/packages/87/25/e64c1beb6ad194485adcd3447366816537797dbe331e89ac1868dcb1ddf6/isaacto_html_table_extractor-1.4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c99896daead890070e55bd2801a38122", "sha256": "d4bb3711118c2bee561b4e52ea3b0795eee9985894c826587d0e87dfd00dae5e"}, "downloads": -1, "filename": "isaacto-html-table-extractor-1.4.0.1.tar.gz", "has_sig": false, "md5_digest": "c99896daead890070e55bd2801a38122", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3980, "upload_time": "2019-12-14T03:32:33", "upload_time_iso_8601": "2019-12-14T03:32:33.357238Z", "url": "https://files.pythonhosted.org/packages/6f/7f/067d4740f75b8146161c01d96bcc3b0fce888c9143abb6fd8d9eb9b9c17f/isaacto-html-table-extractor-1.4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d04ec3e6556f2f30a7b687f982d32c88", "sha256": "1388a02354d7b15d27e495864e49c504dc28707ee0a9f1621c636502b9e1f890"}, "downloads": -1, "filename": "isaacto_html_table_extractor-1.4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d04ec3e6556f2f30a7b687f982d32c88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5098, "upload_time": "2019-12-14T03:32:30", "upload_time_iso_8601": "2019-12-14T03:32:30.711735Z", "url": "https://files.pythonhosted.org/packages/87/25/e64c1beb6ad194485adcd3447366816537797dbe331e89ac1868dcb1ddf6/isaacto_html_table_extractor-1.4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c99896daead890070e55bd2801a38122", "sha256": "d4bb3711118c2bee561b4e52ea3b0795eee9985894c826587d0e87dfd00dae5e"}, "downloads": -1, "filename": "isaacto-html-table-extractor-1.4.0.1.tar.gz", "has_sig": false, "md5_digest": "c99896daead890070e55bd2801a38122", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3980, "upload_time": "2019-12-14T03:32:33", "upload_time_iso_8601": "2019-12-14T03:32:33.357238Z", "url": "https://files.pythonhosted.org/packages/6f/7f/067d4740f75b8146161c01d96bcc3b0fce888c9143abb6fd8d9eb9b9c17f/isaacto-html-table-extractor-1.4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:11 2020"}