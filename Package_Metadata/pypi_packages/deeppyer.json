{"info": {"author": "Ovyerus", "author_email": "iamovyerus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Multimedia :: Graphics", "Typing :: Typed"], "description": "# deeppyer\n![banner image](./banner.jpg)\n\ndeeppyer is an image deepfryer written in Python using [Pillow](https://python-pillow.org/)\nand [OpenCV](https://pypi.org/project/opencv-python/).\n\nNOTE: This *requires* at least Python v3.6 in order to run.\n\n## How to use\nYou can either use deeppyer as a module, or straight from the command line.\n\n### Command line usage\n```\n$ python deeppyer.py -h\n\nusage: deeppyer.py [-h] [-v] [-o OUTPUT] [-f] FILE\n\nDeepfry an image.\n\npositional arguments:\n  FILE                  File to deepfry.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         Display program version.\n  -o OUTPUT, --output OUTPUT\n                        Filename to output to.\n  -f, --flares          Try and detected faces for adding lens flares.\n```\n\nBy default, flares will try to be added to the image, unless you're using the CLI script,\nin which case it is off by default.\n\n### Program usage\n```py\nfrom PIL import Image\nimport deeppyer, asyncio\n\nasync def main():\n    img = Image.open('./foo.jpg')\n    img = await deeppyer.deepfry(img)\n    img.save('./bar.jpg')\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## API Documentation\n#### `async deepfry(img: Image, type=DeepfryTypes.RED, *, flares: bool = True)`\nDeepfry a given image.\n\n**Arguments**\n - *img* (PIL.Image) - Image to apply the deepfry effect on.\n - *[type]* (DeepfryTypes) - Colours to apply on the image.\n - *[flares] (bool) - Whether or not to try and detect faces for applying lens flares.\n\nReturns:\n  `PIL.Image` - Deepfried image.\n\n## Why?\n\u00c2\u00af\\\\\\_(\u00e3\u0192\u201e)_/\u00c2\u00af Why not\n\n## Contributing\nIf you wish to contribute something to this, go ahead! Just please make sure to format it with flake8 + isort, and that the test(s) pass fine.\n\n## Testing\nSimply run `tests/test.py` and make sure that all the images output properly.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ovyerus/deeppyer", "keywords": "image manipulation deepfry meme", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "deeppyer", "package_url": "https://pypi.org/project/deeppyer/", "platform": "", "project_url": "https://pypi.org/project/deeppyer/", "project_urls": {"Homepage": "https://github.com/Ovyerus/deeppyer"}, "release_url": "https://pypi.org/project/deeppyer/1.0.1/", "requires_dist": ["Pillow (>=4.2.0)", "opencv-python (>=4.1.0.25)", "numpy (>=1.16.3)"], "requires_python": ">=3.6", "summary": "Deepfry images in Python.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>deeppyer</h1>\n<p><img alt=\"banner image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2987f6c5ac94ad46de3d1b1a7da6f4d117e40126/2e2f62616e6e65722e6a7067\"></p>\n<p>deeppyer is an image deepfryer written in Python using <a href=\"https://python-pillow.org/\" rel=\"nofollow\">Pillow</a>\nand <a href=\"https://pypi.org/project/opencv-python/\" rel=\"nofollow\">OpenCV</a>.</p>\n<p>NOTE: This <em>requires</em> at least Python v3.6 in order to run.</p>\n<h2>How to use</h2>\n<p>You can either use deeppyer as a module, or straight from the command line.</p>\n<h3>Command line usage</h3>\n<pre><code>$ python deeppyer.py -h\n\nusage: deeppyer.py [-h] [-v] [-o OUTPUT] [-f] FILE\n\nDeepfry an image.\n\npositional arguments:\n  FILE                  File to deepfry.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         Display program version.\n  -o OUTPUT, --output OUTPUT\n                        Filename to output to.\n  -f, --flares          Try and detected faces for adding lens flares.\n</code></pre>\n<p>By default, flares will try to be added to the image, unless you're using the CLI script,\nin which case it is off by default.</p>\n<h3>Program usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n<span class=\"kn\">import</span> <span class=\"nn\">deeppyer</span><span class=\"o\">,</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'./foo.jpg'</span><span class=\"p\">)</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">deeppyer</span><span class=\"o\">.</span><span class=\"n\">deepfry</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n    <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'./bar.jpg'</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>API Documentation</h2>\n<h4><code>async deepfry(img: Image, type=DeepfryTypes.RED, *, flares: bool = True)</code></h4>\n<p>Deepfry a given image.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><em>img</em> (PIL.Image) - Image to apply the deepfry effect on.</li>\n<li><em>[type]</em> (DeepfryTypes) - Colours to apply on the image.</li>\n<li>*[flares] (bool) - Whether or not to try and detect faces for applying lens flares.</li>\n</ul>\n<p>Returns:\n<code>PIL.Image</code> - Deepfried image.</p>\n<h2>Why?</h2>\n<p>\u00c2\u00af\\_(\u00e3\u0192\u201e)_/\u00c2\u00af Why not</p>\n<h2>Contributing</h2>\n<p>If you wish to contribute something to this, go ahead! Just please make sure to format it with flake8 + isort, and that the test(s) pass fine.</p>\n<h2>Testing</h2>\n<p>Simply run <code>tests/test.py</code> and make sure that all the images output properly.</p>\n\n          </div>"}, "last_serial": 5297454, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "e5423d5c3d4934fe49804e404c45dce8", "sha256": "28a0e5b1dd73a8dd9271d3bf023333ca0df8ca38a27079d30c0a2e2c8f0d0758"}, "downloads": -1, "filename": "deeppyer-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5423d5c3d4934fe49804e404c45dce8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 55257, "upload_time": "2019-05-21T11:34:25", "upload_time_iso_8601": "2019-05-21T11:34:25.392274Z", "url": "https://files.pythonhosted.org/packages/ed/2e/b097ca617eae4dbc52032810ea7e5442b1b850f3058283fe4cdd50f93457/deeppyer-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4dca11d1d877f8aa2ad8407e693be5c", "sha256": "c70721790968eaa5cf1e6bbd2504f4f25e1696346eaa0f81628d41684def14ec"}, "downloads": -1, "filename": "deeppyer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e4dca11d1d877f8aa2ad8407e693be5c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 56275, "upload_time": "2019-05-21T11:34:27", "upload_time_iso_8601": "2019-05-21T11:34:27.150256Z", "url": "https://files.pythonhosted.org/packages/86/5b/c8214f60dbbdfad65a3e635c78d6f7b49a996232f69cd10dcd9cdc87a566/deeppyer-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5423d5c3d4934fe49804e404c45dce8", "sha256": "28a0e5b1dd73a8dd9271d3bf023333ca0df8ca38a27079d30c0a2e2c8f0d0758"}, "downloads": -1, "filename": "deeppyer-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5423d5c3d4934fe49804e404c45dce8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 55257, "upload_time": "2019-05-21T11:34:25", "upload_time_iso_8601": "2019-05-21T11:34:25.392274Z", "url": "https://files.pythonhosted.org/packages/ed/2e/b097ca617eae4dbc52032810ea7e5442b1b850f3058283fe4cdd50f93457/deeppyer-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4dca11d1d877f8aa2ad8407e693be5c", "sha256": "c70721790968eaa5cf1e6bbd2504f4f25e1696346eaa0f81628d41684def14ec"}, "downloads": -1, "filename": "deeppyer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e4dca11d1d877f8aa2ad8407e693be5c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 56275, "upload_time": "2019-05-21T11:34:27", "upload_time_iso_8601": "2019-05-21T11:34:27.150256Z", "url": "https://files.pythonhosted.org/packages/86/5b/c8214f60dbbdfad65a3e635c78d6f7b49a996232f69cd10dcd9cdc87a566/deeppyer-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:22 2020"}