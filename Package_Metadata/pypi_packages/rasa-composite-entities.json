{"info": {"author": "Benjamin Weigang", "author_email": "Benjamin.Weigang@mailbox.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# rasa_composite_entities\n\nA Rasa NLU component for composite entities, developed to be used in the\nDialogue Engine of [Dialogue Technologies](https://www.dialogue-technologies.com).\n\nSee also [my blog post](https://www.benjaminweigang.com/rasa-nlu-composite-entities/).\n\n**Works with rasa 1.x!**\n\n## Changelog\n\n* 2020-02-26: Entities are now being sorted by their `start` value before being processed. This prevents problems with other entity extractors like the duckling extractor which might change the entity order.\n* 2020-01-10: The sub-entities contained in a composite entity are now found under a key named `value` instead of `contained_entities`. This change makes the output of the composite entity extractor consistent with other extractors. The major version has been bumped to mark this as a breaking change.\n\n## Installation\n\n```bash\n$ pip install rasa_composite_entities\n```\n\nThe only external dependency is Rasa NLU itself, which should be installed\nanyway when you want to use this component.\n\nAfter installation, the component can be added your pipeline like any other\ncomponent:\n\n```yaml\nlanguage: \"en_core_web_md\"\n\npipeline:\n- name: \"SpacyNLP\"\n- name: \"SpacyTokenizer\"\n- name: \"SpacyFeaturizer\"\n- name: \"CRFEntityExtractor\"\n- name: \"SklearnIntentClassifier\"\n- name: \"rasa_composite_entities.CompositeEntityExtractor\"\n```\n\n## Usage\n\nThere are two ways to add composite entity definitions to your training data.\nThe first (and prefered!) way is to create a JSON file containing the following\nexample structure:\n```json\n{\n \"composite_entities\": [\n   {\n     \"name\": \"product_with_attributes\",\n     \"patterns\": [\n       \"@color @product with @pattern\",\n       \"@pattern @color @product\"\n     ]\n   }\n ]\n}\n```\nYou can then specify the path to this variable in you pipeline like this:\n```yaml\nlanguage: \"en_core_web_md\"\n\npipeline:\n- name: \"SpacyNLP\"\n- name: \"SpacyTokenizer\"\n- name: \"SpacyFeaturizer\"\n- name: \"CRFEntityExtractor\"\n- name: \"SklearnIntentClassifier\"\n- name: \"rasa_composite_entities.CompositeEntityExtractor\"\n  composite_patterns_path: \"path/to/composite_entity_patterns.json\"\n```\n\nAlternatively, you can add this object directly to the json file that contains\nyour common examples:\n```json\n\"composite_entities\": [\n  {\n    \"name\": \"product_with_attributes\",\n    \"patterns\": [\n      \"@color @product with @pattern\",\n      \"@pattern @color @product\"\n    ]\n  }\n],\n\"common_examples\": [\n    ...\n]\n```\nUsing a separate file for composite entity patterns is preferred, as rasa\nsometimes strips extra fields from training files (e.g. when training via the\npython API).\n\nEvery word starting with a \"@\" will be considered a placeholder for an entity\nwith that name. The component is agnostic to the origin of entities, you can\nuse anything that Rasa NLU returns as the \"entity\" field in its messages. This\nmeans that you can not only use the entities defined in your common examples,\nbut also numerical entities from duckling etc.\n\nLonger patterns always take precedence over shorter patterns. If a shorter\npattern matches entities that would also be matched by a longer pattern, the\nshorter pattern is ignored.\n\nPatterns are regular expressions! You can use patterns like\n```\n\"composite_entities\": [\n  {\n    \"name\": \"product_with_attributes\",\n    \"patterns\": [\n      \"(?:@pattern\\\\s+)?(?:@color\\\\s+)?@product(?:\\\\s+with @[A-Z,a-z]+)?\"\n    ]\n  }\n]\n```\nto match different variations of entity combinations. Be aware that you may\nneed to properly escape your regexes to produce valid JSON files (in case of\nthis example, you have to escape the backslashes with another backslash).\n\n## Explanation\n\nComposite entities act as containers that group several entities into logical\nunits. Consider the following example phrase:\n```\nI am looking for a red shirt with stripes and checkered blue shoes.\n```\nProperly trained, Rasa NLU could return entities like this:\n```json\n\"entities\": [\n  {\n    \"start\": 19,\n    \"end\": 22,\n    \"value\": \"red\",\n    \"entity\": \"color\",\n    \"confidence\": 0.9419322376955782,\n    \"extractor\": \"CRFEntityExtractor\"\n  },\n  {\n    \"start\": 23,\n    \"end\": 28,\n    \"value\": \"shirt\",\n    \"entity\": \"product\",\n    \"confidence\": 0.9435936216683031,\n    \"extractor\": \"CRFEntityExtractor\"\n  },\n  {\n    \"start\": 34,\n    \"end\": 41,\n    \"value\": \"stripes\",\n    \"entity\": \"pattern\",\n    \"confidence\": 0.9233923349716401,\n    \"extractor\": \"CRFEntityExtractor\"\n  },\n  {\n    \"start\": 46,\n    \"end\": 55,\n    \"value\": \"checkered\",\n    \"entity\": \"pattern\",\n    \"confidence\": 0.8877627536275875,\n    \"extractor\": \"CRFEntityExtractor\"\n  },\n  {\n    \"start\": 56,\n    \"end\": 60,\n    \"value\": \"blue\",\n    \"entity\": \"color\",\n    \"confidence\": 0.6778344517453893,\n    \"extractor\": \"CRFEntityExtractor\"\n  },\n  {\n    \"start\": 61,\n    \"end\": 66,\n    \"value\": \"shoes\",\n    \"entity\": \"product\",\n    \"confidence\": 0.536797743231954,\n    \"extractor\": \"CRFEntityExtractor\"\n  }\n]\n```\n\nIt's hard to infer exactly what the user is looking for from this output alone.\nIs he looking for a striped and checkered shirt? Striped and checkered shoes?\nOr a striped shirt and checkered shoes?\n\nBy defining common patterns of entity combinations, we can automatically create\nentity groups. If we add the composite entity patterns as in the usage example\nabove, the output will be changed to this:\n```json\n\"entities\": [\n  {\n    \"start\": 19,\n    \"end\": 41,\n    \"confidence\": 1.0,\n    \"entity\": \"product_with_attributes\",\n    \"extractor\": \"composite\",\n    \"value\": [\n      {\n        \"start\": 19,\n        \"end\": 22,\n        \"value\": \"red\",\n        \"entity\": \"color\",\n        \"confidence\": 0.9419322376955782,\n        \"extractor\": \"CRFEntityExtractor\"\n      },\n      {\n        \"start\": 23,\n        \"end\": 28,\n        \"value\": \"shirt\",\n        \"entity\": \"product\",\n        \"confidence\": 0.9435936216683031,\n        \"extractor\": \"CRFEntityExtractor\"\n      },\n      {\n        \"start\": 34,\n        \"end\": 41,\n        \"value\": \"stripes\",\n        \"entity\": \"pattern\",\n        \"confidence\": 0.9233923349716401,\n        \"extractor\": \"CRFEntityExtractor\"\n      }\n    ]\n  },\n  {\n    \"start\": 46,\n    \"end\": 66,\n    \"confidence\": 1.0,\n    \"entity\": \"product_with_attributes\",\n    \"extractor\": \"composite\",\n    \"value\": [\n      {\n        \"start\": 46,\n        \"end\": 55,\n        \"value\": \"checkered\",\n        \"entity\": \"pattern\",\n        \"confidence\": 0.8877627536275875,\n        \"extractor\": \"CRFEntityExtractor\"\n      },\n      {\n        \"start\": 56,\n        \"end\": 60,\n        \"value\": \"blue\",\n        \"entity\": \"color\",\n        \"confidence\": 0.6778344517453893,\n        \"extractor\": \"CRFEntityExtractor\"\n      },\n      {\n        \"start\": 61,\n        \"end\": 66,\n        \"value\": \"shoes\",\n        \"entity\": \"product\",\n        \"confidence\": 0.536797743231954,\n        \"extractor\": \"CRFEntityExtractor\"\n      }\n    ]\n  }\n]\n```\n\n## Example\n\nSee the `example` folder for a minimal example that can be trained and tested.\nTo get the output from above, run:\n```bash\n$ cd example\n$ rasa train nlu --out . --nlu train.json --config config_with_composite.yml\n$ rasa run --enable-api --model .\n$ curl -XPOST localhost:5005/model/parse -d '{\"text\": \"I am looking for a red shirt with stripes and checkered blue shoes\"}'\n```\nIf you want to compare this output to the normal Rasa NLU output, use the\nalternative `config_without_composite.yml` config file.\n\nThe component also works when training using the server API:\n\n**HTTP training is currently broken because of API changes in rasa 1.x.\nHopefully, this will soon be fixed!**\n```bash\n$ cd example\n$ rasa run --enable-api --model .\n$ curl --request POST --header 'content-type: application/x-yml' --data-binary @train_http.yml --url 'localhost:5000/train?project=test_project'\n$ curl -XPOST localhost:5005/model/parse -d '{\"text\": \"I am looking for a red shirt with stripes and checkered blue shoes\", \"project\": \"test_project\"}'\n```\n\n## Caveats (does not apply when composite patterns are defined in a separate file)\n\nRasa NLU strips training files of any custom fields, including our\n\"composite_entities\" field. For our component to access this information, we\nhave to circumenvent Rasa's train file loading process and get direct access to\nthe raw data.\n\nWhen training through rasa's train script, the train file paths are fetched\nthrough the command line arguments. When training NLU only, the paths defined\nby the `--nlu` argument are used, otherwise the paths will be taken from the\n`--data` argument.\n\nWhen training through the HTTP server, we exploit the fact that Rasa NLU\ncreates temporary files containing the raw train data. Be aware that this\ncreates a possible race condition when multiple training processes are executed\nsimultaneously. If a new train process is started before the previous process\nhas reached the CompositeEntityExtractor, there is a chance that the wrong\ntrain data will be picked up.\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE.md file for\ndetails.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BeWe11/rasa_composite_entities", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rasa-composite-entities", "package_url": "https://pypi.org/project/rasa-composite-entities/", "platform": "", "project_url": "https://pypi.org/project/rasa-composite-entities/", "project_urls": {"Homepage": "https://github.com/BeWe11/rasa_composite_entities"}, "release_url": "https://pypi.org/project/rasa-composite-entities/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "A Rasa NLU component for composite entities", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rasa_composite_entities</h1>\n<p>A Rasa NLU component for composite entities, developed to be used in the\nDialogue Engine of <a href=\"https://www.dialogue-technologies.com\" rel=\"nofollow\">Dialogue Technologies</a>.</p>\n<p>See also <a href=\"https://www.benjaminweigang.com/rasa-nlu-composite-entities/\" rel=\"nofollow\">my blog post</a>.</p>\n<p><strong>Works with rasa 1.x!</strong></p>\n<h2>Changelog</h2>\n<ul>\n<li>2020-02-26: Entities are now being sorted by their <code>start</code> value before being processed. This prevents problems with other entity extractors like the duckling extractor which might change the entity order.</li>\n<li>2020-01-10: The sub-entities contained in a composite entity are now found under a key named <code>value</code> instead of <code>contained_entities</code>. This change makes the output of the composite entity extractor consistent with other extractors. The major version has been bumped to mark this as a breaking change.</li>\n</ul>\n<h2>Installation</h2>\n<pre>$ pip install rasa_composite_entities\n</pre>\n<p>The only external dependency is Rasa NLU itself, which should be installed\nanyway when you want to use this component.</p>\n<p>After installation, the component can be added your pipeline like any other\ncomponent:</p>\n<pre><span class=\"nt\">language</span><span class=\"p\">:</span> <span class=\"s\">\"en_core_web_md\"</span>\n\n<span class=\"nt\">pipeline</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SpacyNLP\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SpacyTokenizer\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SpacyFeaturizer\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"CRFEntityExtractor\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SklearnIntentClassifier\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"rasa_composite_entities.CompositeEntityExtractor\"</span>\n</pre>\n<h2>Usage</h2>\n<p>There are two ways to add composite entity definitions to your training data.\nThe first (and prefered!) way is to create a JSON file containing the following\nexample structure:</p>\n<pre><span class=\"p\">{</span>\n <span class=\"nt\">\"composite_entities\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n   <span class=\"p\">{</span>\n     <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product_with_attributes\"</span><span class=\"p\">,</span>\n     <span class=\"nt\">\"patterns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n       <span class=\"s2\">\"@color @product with @pattern\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"@pattern @color @product\"</span>\n     <span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>You can then specify the path to this variable in you pipeline like this:</p>\n<pre><span class=\"nt\">language</span><span class=\"p\">:</span> <span class=\"s\">\"en_core_web_md\"</span>\n\n<span class=\"nt\">pipeline</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SpacyNLP\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SpacyTokenizer\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SpacyFeaturizer\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"CRFEntityExtractor\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"SklearnIntentClassifier\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"rasa_composite_entities.CompositeEntityExtractor\"</span>\n  <span class=\"nt\">composite_patterns_path</span><span class=\"p\">:</span> <span class=\"s\">\"path/to/composite_entity_patterns.json\"</span>\n</pre>\n<p>Alternatively, you can add this object directly to the json file that contains\nyour common examples:</p>\n<pre><span class=\"s2\">\"composite_entities\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product_with_attributes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"patterns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"@color @product with @pattern\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"@pattern @color @product\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span><span class=\"err\">,</span>\n<span class=\"s2\">\"common_examples\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n    <span class=\"err\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Using a separate file for composite entity patterns is preferred, as rasa\nsometimes strips extra fields from training files (e.g. when training via the\npython API).</p>\n<p>Every word starting with a \"@\" will be considered a placeholder for an entity\nwith that name. The component is agnostic to the origin of entities, you can\nuse anything that Rasa NLU returns as the \"entity\" field in its messages. This\nmeans that you can not only use the entities defined in your common examples,\nbut also numerical entities from duckling etc.</p>\n<p>Longer patterns always take precedence over shorter patterns. If a shorter\npattern matches entities that would also be matched by a longer pattern, the\nshorter pattern is ignored.</p>\n<p>Patterns are regular expressions! You can use patterns like</p>\n<pre><code>\"composite_entities\": [\n  {\n    \"name\": \"product_with_attributes\",\n    \"patterns\": [\n      \"(?:@pattern\\\\s+)?(?:@color\\\\s+)?@product(?:\\\\s+with @[A-Z,a-z]+)?\"\n    ]\n  }\n]\n</code></pre>\n<p>to match different variations of entity combinations. Be aware that you may\nneed to properly escape your regexes to produce valid JSON files (in case of\nthis example, you have to escape the backslashes with another backslash).</p>\n<h2>Explanation</h2>\n<p>Composite entities act as containers that group several entities into logical\nunits. Consider the following example phrase:</p>\n<pre><code>I am looking for a red shirt with stripes and checkered blue shoes.\n</code></pre>\n<p>Properly trained, Rasa NLU could return entities like this:</p>\n<pre><span class=\"s2\">\"entities\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">19</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">22</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"red\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"color\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9419322376955782</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">23</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">28</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"shirt\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9435936216683031</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">34</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">41</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stripes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pattern\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9233923349716401</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">46</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">55</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"checkered\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pattern\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.8877627536275875</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">56</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"color\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.6778344517453893</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">61</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">66</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"shoes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.536797743231954</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>It's hard to infer exactly what the user is looking for from this output alone.\nIs he looking for a striped and checkered shirt? Striped and checkered shoes?\nOr a striped shirt and checkered shoes?</p>\n<p>By defining common patterns of entity combinations, we can automatically create\nentity groups. If we add the composite entity patterns as in the usage example\nabove, the output will be changed to this:</p>\n<pre><span class=\"s2\">\"entities\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">19</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">41</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product_with_attributes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"composite\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">19</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">22</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"red\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"color\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9419322376955782</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">23</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">28</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"shirt\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9435936216683031</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">34</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">41</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stripes\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pattern\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9233923349716401</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">46</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">66</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product_with_attributes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"composite\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">46</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">55</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"checkered\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pattern\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.8877627536275875</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">56</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"color\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.6778344517453893</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"mi\">61</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"mi\">66</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"shoes\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"product\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"confidence\"</span><span class=\"p\">:</span> <span class=\"mf\">0.536797743231954</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extractor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CRFEntityExtractor\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<h2>Example</h2>\n<p>See the <code>example</code> folder for a minimal example that can be trained and tested.\nTo get the output from above, run:</p>\n<pre>$ <span class=\"nb\">cd</span> example\n$ rasa train nlu --out . --nlu train.json --config config_with_composite.yml\n$ rasa run --enable-api --model .\n$ curl -XPOST localhost:5005/model/parse -d <span class=\"s1\">'{\"text\": \"I am looking for a red shirt with stripes and checkered blue shoes\"}'</span>\n</pre>\n<p>If you want to compare this output to the normal Rasa NLU output, use the\nalternative <code>config_without_composite.yml</code> config file.</p>\n<p>The component also works when training using the server API:</p>\n<p><strong>HTTP training is currently broken because of API changes in rasa 1.x.\nHopefully, this will soon be fixed!</strong></p>\n<pre>$ <span class=\"nb\">cd</span> example\n$ rasa run --enable-api --model .\n$ curl --request POST --header <span class=\"s1\">'content-type: application/x-yml'</span> --data-binary @train_http.yml --url <span class=\"s1\">'localhost:5000/train?project=test_project'</span>\n$ curl -XPOST localhost:5005/model/parse -d <span class=\"s1\">'{\"text\": \"I am looking for a red shirt with stripes and checkered blue shoes\", \"project\": \"test_project\"}'</span>\n</pre>\n<h2>Caveats (does not apply when composite patterns are defined in a separate file)</h2>\n<p>Rasa NLU strips training files of any custom fields, including our\n\"composite_entities\" field. For our component to access this information, we\nhave to circumenvent Rasa's train file loading process and get direct access to\nthe raw data.</p>\n<p>When training through rasa's train script, the train file paths are fetched\nthrough the command line arguments. When training NLU only, the paths defined\nby the <code>--nlu</code> argument are used, otherwise the paths will be taken from the\n<code>--data</code> argument.</p>\n<p>When training through the HTTP server, we exploit the fact that Rasa NLU\ncreates temporary files containing the raw train data. Be aware that this\ncreates a possible race condition when multiple training processes are executed\nsimultaneously. If a new train process is started before the previous process\nhas reached the CompositeEntityExtractor, there is a chance that the wrong\ntrain data will be picked up.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the LICENSE.md file for\ndetails.</p>\n\n          </div>"}, "last_serial": 7077276, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5da360143150c2f14da92f7c962917ce", "sha256": "ab1221fd692c6346d2910e51c5c79881855bab58ff452001737793bbf2239f59"}, "downloads": -1, "filename": "rasa_composite_entities-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5da360143150c2f14da92f7c962917ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5341, "upload_time": "2019-01-17T16:57:11", "upload_time_iso_8601": "2019-01-17T16:57:11.511022Z", "url": "https://files.pythonhosted.org/packages/f7/18/4148ad1759345bfa5deb189084c336baa48ae7b807da6b896fabf74d8db0/rasa_composite_entities-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d9d7eb9245653a0258e12c3ef5ab6e74", "sha256": "5a3cf45f1c207c929b5670ceeb3602f8ff78befb861fff930015d2331da3991c"}, "downloads": -1, "filename": "rasa_composite_entities-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d9d7eb9245653a0258e12c3ef5ab6e74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5864, "upload_time": "2019-01-18T16:20:05", "upload_time_iso_8601": "2019-01-18T16:20:05.377131Z", "url": "https://files.pythonhosted.org/packages/a1/00/2f18e588f40fa1ccc5f1890174ec718629725a50b5c353e328a2ff879bb8/rasa_composite_entities-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "dcb9133c8b211d2aef7dd85de6747a0a", "sha256": "16a1ac464ad6bcc0ce76f1c844126ab8ce8a96497f96b16be61443163275da8f"}, "downloads": -1, "filename": "rasa_composite_entities-0.2.1.tar.gz", "has_sig": false, "md5_digest": "dcb9133c8b211d2aef7dd85de6747a0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5846, "upload_time": "2019-01-19T00:56:09", "upload_time_iso_8601": "2019-01-19T00:56:09.460856Z", "url": "https://files.pythonhosted.org/packages/1d/58/c2f8d2e6d755f743beb3af72d301dabffbe1292ee8a7cc78189068939d8c/rasa_composite_entities-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "05f1f180b47b8fa5418d5a791615f518", "sha256": "fbb7d4509a92ced1b5e2390b5b46c043e57943ab01f08e2fe41bdc92b07f8944"}, "downloads": -1, "filename": "rasa_composite_entities-0.2.2.tar.gz", "has_sig": false, "md5_digest": "05f1f180b47b8fa5418d5a791615f518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6487, "upload_time": "2019-01-25T09:49:36", "upload_time_iso_8601": "2019-01-25T09:49:36.670780Z", "url": "https://files.pythonhosted.org/packages/9d/52/e5e6359c9ce6d636afe98323949d041ac263f5b48aabc599ef6f174edf7d/rasa_composite_entities-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "0dc0bf57a2c2d7efc5be161e96479211", "sha256": "195e808a3bb7a93bf61728bfecb18d01910d3fe1d3c899de69778758f75c82fd"}, "downloads": -1, "filename": "rasa_composite_entities-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0dc0bf57a2c2d7efc5be161e96479211", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6300, "upload_time": "2019-01-25T11:09:49", "upload_time_iso_8601": "2019-01-25T11:09:49.670157Z", "url": "https://files.pythonhosted.org/packages/32/ef/cc4b5933f18447cedfd5833fd55d65996a23c0c92c4eab943286dad811ae/rasa_composite_entities-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "5b71c5da21f1d61e36132c09a09b90a0", "sha256": "d35f8b4a811964b9d8ad1aa5423b02361d3808ad35cdcfe7a6df8eb410e65213"}, "downloads": -1, "filename": "rasa_composite_entities-0.2.4.tar.gz", "has_sig": false, "md5_digest": "5b71c5da21f1d61e36132c09a09b90a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6338, "upload_time": "2019-03-15T11:53:25", "upload_time_iso_8601": "2019-03-15T11:53:25.998324Z", "url": "https://files.pythonhosted.org/packages/82/7b/1d7e9552b01bf2d5e526548ba95660161672e3b8acc12b2de4e063acc222/rasa_composite_entities-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "30e53af0a2a33b883871f0de664787a1", "sha256": "a4f861dbf1cfc429b8108498646e54541c06c3e0333c7dbd6a828caaa56c491f"}, "downloads": -1, "filename": "rasa_composite_entities-0.3.0.tar.gz", "has_sig": false, "md5_digest": "30e53af0a2a33b883871f0de664787a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6263, "upload_time": "2019-05-02T14:52:01", "upload_time_iso_8601": "2019-05-02T14:52:01.756820Z", "url": "https://files.pythonhosted.org/packages/9d/64/033e0b058a957bb9ff067a4d32b0b9a29424eb15fbbcc0dcd7b1f3c89782/rasa_composite_entities-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "30a8c8f51b71f653736c6fcc4dd7a802", "sha256": "3782ea649644bae453e7f8500b7328751c76fd5e47ca6f43d4c1ffbf02c81d94"}, "downloads": -1, "filename": "rasa_composite_entities-0.4.0.tar.gz", "has_sig": false, "md5_digest": "30a8c8f51b71f653736c6fcc4dd7a802", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6470, "upload_time": "2019-06-04T11:51:50", "upload_time_iso_8601": "2019-06-04T11:51:50.948218Z", "url": "https://files.pythonhosted.org/packages/59/86/64de94c45bcf974e77a0900d508acf09a324e70bc933b576af6207e6ae98/rasa_composite_entities-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "10339ab7b20cdfeac3452c8638b2de5c", "sha256": "6d78171e75d722293036e92f3ea85db1d51d609aebaae98a31eb578f6520c477"}, "downloads": -1, "filename": "rasa_composite_entities-0.4.1.tar.gz", "has_sig": false, "md5_digest": "10339ab7b20cdfeac3452c8638b2de5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6476, "upload_time": "2019-06-05T15:08:29", "upload_time_iso_8601": "2019-06-05T15:08:29.496398Z", "url": "https://files.pythonhosted.org/packages/8b/87/f4d6606894cc551f701f042da5527bb50e6a915b59e7d2abaf38749a0e28/rasa_composite_entities-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "28578bf111b75b7396b4613612226bd2", "sha256": "9aa5456a22d40c393c4fab2247613319e03dd5b3ee868fff85be95d90ad081d8"}, "downloads": -1, "filename": "rasa_composite_entities-0.4.2.tar.gz", "has_sig": false, "md5_digest": "28578bf111b75b7396b4613612226bd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7668, "upload_time": "2019-06-07T15:25:12", "upload_time_iso_8601": "2019-06-07T15:25:12.022442Z", "url": "https://files.pythonhosted.org/packages/47/ec/f4d8da7131d719348b4005e8b7371d86ce79ff6894ce7d360ff464d59f56/rasa_composite_entities-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "9447199dd6b99911b84fa3ec7051ccf1", "sha256": "62afef4be4a453a94bf0f4fccd33e61bfbfa0757ce06228faf2218246782cbcd"}, "downloads": -1, "filename": "rasa_composite_entities-0.4.3.tar.gz", "has_sig": false, "md5_digest": "9447199dd6b99911b84fa3ec7051ccf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7660, "upload_time": "2019-07-02T10:07:29", "upload_time_iso_8601": "2019-07-02T10:07:29.102965Z", "url": "https://files.pythonhosted.org/packages/4c/57/26cfa53922e4f9138f540e3b81dae2a39e40dea1881f48ed7e56c1d4d990/rasa_composite_entities-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "8126dc57bc1c8b013371b64c9e6b975e", "sha256": "2565e8f7006928ea26bb2f7e271ec50b57de10aff258195fe2c8a4281365af51"}, "downloads": -1, "filename": "rasa_composite_entities-0.4.4.tar.gz", "has_sig": false, "md5_digest": "8126dc57bc1c8b013371b64c9e6b975e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7487, "upload_time": "2019-07-02T10:16:42", "upload_time_iso_8601": "2019-07-02T10:16:42.038807Z", "url": "https://files.pythonhosted.org/packages/06/d1/4793ec70bdc249b22e60151f6b93ccc4220eb6f67406c876355680fb69ea/rasa_composite_entities-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "ce8c6f683171f44caa61f2004ffc5555", "sha256": "b6d3b13cb5d9821c2b0d0c332391731d027d66fc789693940f0e6325fe831051"}, "downloads": -1, "filename": "rasa_composite_entities-0.4.5.tar.gz", "has_sig": false, "md5_digest": "ce8c6f683171f44caa61f2004ffc5555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7497, "upload_time": "2019-11-26T11:24:36", "upload_time_iso_8601": "2019-11-26T11:24:36.260375Z", "url": "https://files.pythonhosted.org/packages/29/9b/d1a699671d2532d627afe3f8f6f80871271bc6dbb20e1547bade4356af1f/rasa_composite_entities-0.4.5.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c45181ad729c4b27d3542129270fb210", "sha256": "5eba2fc7516c447e19dde41995a779060d6100d54bb58ce0bf42563687d2927d"}, "downloads": -1, "filename": "rasa_composite_entities-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c45181ad729c4b27d3542129270fb210", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8048, "upload_time": "2020-01-10T12:48:52", "upload_time_iso_8601": "2020-01-10T12:48:52.482399Z", "url": "https://files.pythonhosted.org/packages/26/3d/e318cbd9ca0d56efe884416900d74fb65b9ca733892c2a287b0ee407a856/rasa_composite_entities-0.5.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "922b316b6fb56754c0b5a51279a1e6a6", "sha256": "e4227c70d0ac853f80196ec55210b8371a070220c8662d4f6d28b77779a91f17"}, "downloads": -1, "filename": "rasa_composite_entities-1.0.0.tar.gz", "has_sig": false, "md5_digest": "922b316b6fb56754c0b5a51279a1e6a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8267, "upload_time": "2020-01-10T13:05:20", "upload_time_iso_8601": "2020-01-10T13:05:20.292047Z", "url": "https://files.pythonhosted.org/packages/ff/a7/50a562344293907b53be0ad8a6f6a1ec4788d2499c388ddd920483e002c2/rasa_composite_entities-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a558d167ea351a966f35fa15146858c7", "sha256": "a4b0ab5850fed690f1e648476b65abbd3d7e01ba286030f63cc67e85f2e1d799"}, "downloads": -1, "filename": "rasa_composite_entities-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a558d167ea351a966f35fa15146858c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8370, "upload_time": "2020-02-26T09:57:02", "upload_time_iso_8601": "2020-02-26T09:57:02.594328Z", "url": "https://files.pythonhosted.org/packages/5a/47/d55dc90a772cbe1ae412c6226ca857a6f4afef23eaf37c1f08831b87520d/rasa_composite_entities-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "dd571df6b94d51de782905175133cf99", "sha256": "7518dc6a96abfbed71ff4fc50acb13cfb9fd6c412aabb90732d0b4fb88e8b274"}, "downloads": -1, "filename": "rasa_composite_entities-1.0.2.tar.gz", "has_sig": false, "md5_digest": "dd571df6b94d51de782905175133cf99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8458, "upload_time": "2020-02-26T10:03:19", "upload_time_iso_8601": "2020-02-26T10:03:19.629548Z", "url": "https://files.pythonhosted.org/packages/ce/c9/9c52b4bf9e556d21fdefd0fd47ec21e0823276225e58a428ce04e523fa35/rasa_composite_entities-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "df51a1f146664cb442c2e25b73af7220", "sha256": "e02eb3488da3c5b4c90feee8b8698c467d50331c53c4f87e8f1631520670096c"}, "downloads": -1, "filename": "rasa_composite_entities-1.0.3.tar.gz", "has_sig": false, "md5_digest": "df51a1f146664cb442c2e25b73af7220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8462, "upload_time": "2020-04-22T15:14:01", "upload_time_iso_8601": "2020-04-22T15:14:01.050090Z", "url": "https://files.pythonhosted.org/packages/3b/ef/16b33575717703263777b400b798f34a9e97fd7b3f76e9fda0eeeec4c8b7/rasa_composite_entities-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df51a1f146664cb442c2e25b73af7220", "sha256": "e02eb3488da3c5b4c90feee8b8698c467d50331c53c4f87e8f1631520670096c"}, "downloads": -1, "filename": "rasa_composite_entities-1.0.3.tar.gz", "has_sig": false, "md5_digest": "df51a1f146664cb442c2e25b73af7220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8462, "upload_time": "2020-04-22T15:14:01", "upload_time_iso_8601": "2020-04-22T15:14:01.050090Z", "url": "https://files.pythonhosted.org/packages/3b/ef/16b33575717703263777b400b798f34a9e97fd7b3f76e9fda0eeeec4c8b7/rasa_composite_entities-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:17 2020"}