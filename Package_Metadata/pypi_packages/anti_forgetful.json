{"info": {"author": "T. Ben Thompson", "author_email": "t.ben.thompson@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Never forget your AWS instances!\n================================\n\n``anti_forgetful`` is a simple and handy tool for launch a single AWS\ninstance from the terminal and tying it's lifetime to the lifetime of\nthe process on your machine that launched it. This helps to avoid\nsituations where you forget your instance and leave it running for a\nmonth. That could be thousands of dollars!\n\nPlease let me know if you have issues!\n\nJust tell me how to use it!\n===========================\n\nFirst, if you haven't used AWS before:\n\n1) Set up your AWS account.\n2) Follow the first two steps (\"Install the AWS CLI\" and \"Configure the\n   AWS CLI\")\n   `here <https://docs.aws.amazon.com/cli/latest/userguide/tutorial-ec2-ubuntu.html>`__.\n\nNext, install ``anti_forgetful``:\n\n::\n\n    pip install anti_forgetful\n\nNow, check out the ``example`` folder for an example of how to launch a\nJupyter notebook server. To start building your instance, move to that\ndirectory and run:\n\n::\n\n    anti_forgetful awscfg\n\nThis tells the launcher to use ``awscfg.py`` as your configuration file\nand starts to build your instance. It'll take a few minutes on a free\n``t2.micro`` instance. After a few\n\nSo how do I write on of these configuration files!\n==================================================\n\nThe configuration is specified as a Python file:\n\n.. code:: python\n\n    # The name of the public/private key pair and the security group created for\n    # your instance. If this key already exists, it won't be recreated.\n    key_pair_name = 'tutorial_key_pair' \n    group_name = 'tutorial_group'\n\n    # What instance type do you want? https://aws.amazon.com/ec2/instance-types/\n    instance_type = 't2.micro'\n\n    # This option turns off strict host checking in SSH. This can be handy if you\n    # aren't worried about security and want to avoid some manual interaction \n    # launching your instance.\n    no_strict_host_checking = True\n\n    # The base image to build from. You probably shouldn't change this. \n    base_image_id = 'ami-428aa838'\n\n    # The disk size requested from AWS EBS. In GB.\n    root_volume_size = 30  \n\n    # Your instance will be given a name so that it can be started and stopped!\n    # Two instances with the same name could get messy... You've been warned.\n    instance_name = 'tutorial_instance'\n\n    # This function is run once when your instance is built. Build your docker\n    # images here or install any packages you might want.\n    def setup_images(s):\n        # Copy a file from the local machine to the instance. Accepts an optional\n        # parameter \"dest_filepath\" for remote destination.\n        s.copy_to_remote('docker-compose.yml')\n        # Run a shell command on the remote instance.\n        s.run_cmd('docker-compose pull')\n\n    # This function is run every time your instance boots up. \n    def start_containers(s):\n        # Forward a port from the remote machine to the local machine through an\n        # ssh tunnel.\n        s.ssh_port_forward(8888, 8888)\n        # Star the docker containers!\n        s.run_cmd('docker-compose up')\n\nJust in case you still need to terminate some instances.\n========================================================\n\nThe ``awsterminate`` command will list all the instances you currently\nhave running and give you the option of terminating them.\n\nMiscellaneous\n=============\n\nAt the moment, this is pretty completely integrated with Docker. That\ncould easily be changed.\n\nI've only tried this on Ubuntu with Python 3.5 and Python 3.6.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tbenthompson/anti_forgetful", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "anti_forgetful", "package_url": "https://pypi.org/project/anti_forgetful/", "platform": "any", "project_url": "https://pypi.org/project/anti_forgetful/", "project_urls": {"Homepage": "https://github.com/tbenthompson/anti_forgetful"}, "release_url": "https://pypi.org/project/anti_forgetful/18.4.24.4/", "requires_dist": null, "requires_python": "", "summary": "", "version": "18.4.24.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"never-forget-your-aws-instances\">\n<h2>Never forget your AWS instances!</h2>\n<p><tt>anti_forgetful</tt> is a simple and handy tool for launch a single AWS\ninstance from the terminal and tying it\u2019s lifetime to the lifetime of\nthe process on your machine that launched it. This helps to avoid\nsituations where you forget your instance and leave it running for a\nmonth. That could be thousands of dollars!</p>\n<p>Please let me know if you have issues!</p>\n</div>\n<div id=\"just-tell-me-how-to-use-it\">\n<h2>Just tell me how to use it!</h2>\n<p>First, if you haven\u2019t used AWS before:</p>\n<ol>\n<li>Set up your AWS account.</li>\n<li>Follow the first two steps (\u201cInstall the AWS CLI\u201d and \u201cConfigure the\nAWS CLI\u201d)\n<a href=\"https://docs.aws.amazon.com/cli/latest/userguide/tutorial-ec2-ubuntu.html\" rel=\"nofollow\">here</a>.</li>\n</ol>\n<p>Next, install <tt>anti_forgetful</tt>:</p>\n<pre>pip install anti_forgetful\n</pre>\n<p>Now, check out the <tt>example</tt> folder for an example of how to launch a\nJupyter notebook server. To start building your instance, move to that\ndirectory and run:</p>\n<pre>anti_forgetful awscfg\n</pre>\n<p>This tells the launcher to use <tt>awscfg.py</tt> as your configuration file\nand starts to build your instance. It\u2019ll take a few minutes on a free\n<tt>t2.micro</tt> instance. After a few</p>\n</div>\n<div id=\"so-how-do-i-write-on-of-these-configuration-files\">\n<h2>So how do I write on of these configuration files!</h2>\n<p>The configuration is specified as a Python file:</p>\n<pre><span class=\"c1\"># The name of the public/private key pair and the security group created for</span>\n<span class=\"c1\"># your instance. If this key already exists, it won't be recreated.</span>\n<span class=\"n\">key_pair_name</span> <span class=\"o\">=</span> <span class=\"s1\">'tutorial_key_pair'</span>\n<span class=\"n\">group_name</span> <span class=\"o\">=</span> <span class=\"s1\">'tutorial_group'</span>\n\n<span class=\"c1\"># What instance type do you want? https://aws.amazon.com/ec2/instance-types/</span>\n<span class=\"n\">instance_type</span> <span class=\"o\">=</span> <span class=\"s1\">'t2.micro'</span>\n\n<span class=\"c1\"># This option turns off strict host checking in SSH. This can be handy if you</span>\n<span class=\"c1\"># aren't worried about security and want to avoid some manual interaction</span>\n<span class=\"c1\"># launching your instance.</span>\n<span class=\"n\">no_strict_host_checking</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\"># The base image to build from. You probably shouldn't change this.</span>\n<span class=\"n\">base_image_id</span> <span class=\"o\">=</span> <span class=\"s1\">'ami-428aa838'</span>\n\n<span class=\"c1\"># The disk size requested from AWS EBS. In GB.</span>\n<span class=\"n\">root_volume_size</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n\n<span class=\"c1\"># Your instance will be given a name so that it can be started and stopped!</span>\n<span class=\"c1\"># Two instances with the same name could get messy... You've been warned.</span>\n<span class=\"n\">instance_name</span> <span class=\"o\">=</span> <span class=\"s1\">'tutorial_instance'</span>\n\n<span class=\"c1\"># This function is run once when your instance is built. Build your docker</span>\n<span class=\"c1\"># images here or install any packages you might want.</span>\n<span class=\"k\">def</span> <span class=\"nf\">setup_images</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Copy a file from the local machine to the instance. Accepts an optional</span>\n    <span class=\"c1\"># parameter \"dest_filepath\" for remote destination.</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">copy_to_remote</span><span class=\"p\">(</span><span class=\"s1\">'docker-compose.yml'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Run a shell command on the remote instance.</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">run_cmd</span><span class=\"p\">(</span><span class=\"s1\">'docker-compose pull'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This function is run every time your instance boots up.</span>\n<span class=\"k\">def</span> <span class=\"nf\">start_containers</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Forward a port from the remote machine to the local machine through an</span>\n    <span class=\"c1\"># ssh tunnel.</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">ssh_port_forward</span><span class=\"p\">(</span><span class=\"mi\">8888</span><span class=\"p\">,</span> <span class=\"mi\">8888</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Star the docker containers!</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">run_cmd</span><span class=\"p\">(</span><span class=\"s1\">'docker-compose up'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"just-in-case-you-still-need-to-terminate-some-instances\">\n<h2>Just in case you still need to terminate some instances.</h2>\n<p>The <tt>awsterminate</tt> command will list all the instances you currently\nhave running and give you the option of terminating them.</p>\n</div>\n<div id=\"miscellaneous\">\n<h2>Miscellaneous</h2>\n<p>At the moment, this is pretty completely integrated with Docker. That\ncould easily be changed.</p>\n<p>I\u2019ve only tried this on Ubuntu with Python 3.5 and Python 3.6.</p>\n</div>\n\n          </div>"}, "last_serial": 3804444, "releases": {"18.4.24": [{"comment_text": "", "digests": {"md5": "67103087428e17808a0f2bd695d8f3c5", "sha256": "257516c3913f677edd82c9f83f7c3f759c062c4aa6ee2fae118c50126530e1e7"}, "downloads": -1, "filename": "anti_forgetful-18.4.24.tar.gz", "has_sig": false, "md5_digest": "67103087428e17808a0f2bd695d8f3c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3700, "upload_time": "2018-04-24T19:42:52", "upload_time_iso_8601": "2018-04-24T19:42:52.894186Z", "url": "https://files.pythonhosted.org/packages/8e/46/3c35878e6d7fa173026964c7fdc01dc202260806461fe58028396d25df0c/anti_forgetful-18.4.24.tar.gz", "yanked": false}], "18.4.24.1": [{"comment_text": "", "digests": {"md5": "4511339c646944eff52e1725149ed75c", "sha256": "dd994f02a1d0d14b3abf557e44e60743d8a19bf1e752d05d726b1809d74b2daa"}, "downloads": -1, "filename": "anti_forgetful-18.4.24.1.tar.gz", "has_sig": false, "md5_digest": "4511339c646944eff52e1725149ed75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3703, "upload_time": "2018-04-24T19:43:38", "upload_time_iso_8601": "2018-04-24T19:43:38.440317Z", "url": "https://files.pythonhosted.org/packages/56/94/1056c249889882055bd5fdfa9e51ae230d7b3f0758025a44024fa358d604/anti_forgetful-18.4.24.1.tar.gz", "yanked": false}], "18.4.24.2": [{"comment_text": "", "digests": {"md5": "04e76b310329f2d1be55bfb73fe20150", "sha256": "8daefcdf9704ed23ecadd765e03f1550d12a9c203a80327542c5870ea2e89e46"}, "downloads": -1, "filename": "anti_forgetful-18.4.24.2.tar.gz", "has_sig": false, "md5_digest": "04e76b310329f2d1be55bfb73fe20150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5305, "upload_time": "2018-04-24T20:13:08", "upload_time_iso_8601": "2018-04-24T20:13:08.991680Z", "url": "https://files.pythonhosted.org/packages/ba/ca/59f172323b8638aab7346467b0bf72a446869ef493eea8a20cac3cd86797/anti_forgetful-18.4.24.2.tar.gz", "yanked": false}], "18.4.24.3": [{"comment_text": "", "digests": {"md5": "677ac860e2c72ac0de794617b8a58317", "sha256": "2b82eb165fd4a822390f0285c59f5285362a267ef3d15b93e34225193b12db7d"}, "downloads": -1, "filename": "anti_forgetful-18.4.24.3.tar.gz", "has_sig": false, "md5_digest": "677ac860e2c72ac0de794617b8a58317", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5506, "upload_time": "2018-04-24T20:18:01", "upload_time_iso_8601": "2018-04-24T20:18:01.359949Z", "url": "https://files.pythonhosted.org/packages/43/4f/5be19bb8591f20f27ac81bcf97a678cdefd03cdd5480c80635ce8d39b2d3/anti_forgetful-18.4.24.3.tar.gz", "yanked": false}], "18.4.24.4": [{"comment_text": "", "digests": {"md5": "34768a7b7124629f4731179a4cd4b04c", "sha256": "b08279c637f2dafd657e05865ca593a869d70e805855f3c4075d137579bce40c"}, "downloads": -1, "filename": "anti_forgetful-18.4.24.4.tar.gz", "has_sig": false, "md5_digest": "34768a7b7124629f4731179a4cd4b04c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5596, "upload_time": "2018-04-24T20:19:27", "upload_time_iso_8601": "2018-04-24T20:19:27.177324Z", "url": "https://files.pythonhosted.org/packages/ed/fd/76fbecdc2c827270c5614fc777848592a3dead18703d62b6b01c9d23c612/anti_forgetful-18.4.24.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34768a7b7124629f4731179a4cd4b04c", "sha256": "b08279c637f2dafd657e05865ca593a869d70e805855f3c4075d137579bce40c"}, "downloads": -1, "filename": "anti_forgetful-18.4.24.4.tar.gz", "has_sig": false, "md5_digest": "34768a7b7124629f4731179a4cd4b04c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5596, "upload_time": "2018-04-24T20:19:27", "upload_time_iso_8601": "2018-04-24T20:19:27.177324Z", "url": "https://files.pythonhosted.org/packages/ed/fd/76fbecdc2c827270c5614fc777848592a3dead18703d62b6b01c9d23c612/anti_forgetful-18.4.24.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:00 2020"}