{"info": {"author": "Martin Aspeli", "author_email": "optilude@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "wsdl2interface\n==============\n\n.. contents::\n\nThis package provides a simple script to generate the code for\n`zope.interface`_ style interfaces based on a WSDL file. It relies on `suds`_\nto perform the conversion.\n\nInstallation\n------------\n\nTo install the package, use easy_install, buildout or some other mechanism to\ninstall Python eggs, e.g.::\n\n    $ easy_install -U wsdl2interface\n\nYou can also install it as a dependency of another package, e.g. by listing it\nin that package's ``setup.py`` ``install_requires`` line.\n\nUsage\n-----\n\nBy default, ``wsdl2interface``` installs a console script of the same name,\nwhich you can use to print the generated code to the screen. Pass the URL\nof a WSDL file (which could be a ``file://`` URL for a local file) as the\nonly argument::\n\n    $ wsdl2interface http://www.xignite.com/xIndexComponents.asmx?WSDL\n\nThe output will look something like this::\n\n    \"\"\"SOAP web services generated from:\n    http://www.xignite.com/xIndexComponents.asmx?WSDL.\n    \"\"\"\n\n    from zope.interface import Interface, Attribute\n    from zope import schema\n\n\n    class IArrayOfComponent(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}ArrayOfComponent``\n        \"\"\"\n\n        Component = Attribute('Type: IComponent[]. Required: False')\n\n\n    class IArrayOfPricedComponent(Interface):\n        \"\"\"SOAP complex type\n        ``{http://www.xignite.com/services/}ArrayOfPricedComponent``\n        \"\"\"\n\n        PricedComponent = Attribute('Type: IPricedComponent[]. Required: False')\n\n\n    class ICommon(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Common``\n        \"\"\"\n\n        Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n        Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n\n\n    class IComponent(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Component``\n        \"\"\"\n\n        Security = Attribute('Type: ISecurity. Required: False')\n        Weight = schema.Float(description=u\"WSDL type: double\", required=True)\n        AdjustmentFactor = schema.Float(description=u\"WSDL type: double\", required=True)\n        IndexComponentWeightType = Attribute('Type: IIndexComponentWeightTypes. Required: True')\n\n\n    class IComponents(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Components``\n        \"\"\"\n\n        Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n        Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n        Security = Attribute('Type: ISecurity. Required: False')\n        Count = schema.Int(description=u\"WSDL type: int\", required=True)\n        Components = Attribute('Type: IArrayOfComponent. Required: False')\n\n\n    class IHeader(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Header``\n        \"\"\"\n\n        Username = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Password = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Tracer = schema.TextLine(description=u\"WSDL type: string\", required=False)\n\n\n    class IIdentifierTypes(Interface):\n        \"\"\"SOAP enumeration ``{http://www.xignite.com/services/}IdentifierTypes``\n        \"\"\"\n\n        Symbol = Attribute('Enumeration value')\n        CIK = Attribute('Enumeration value')\n        CUSIP = Attribute('Enumeration value')\n        ISIN = Attribute('Enumeration value')\n        Valoren = Attribute('Enumeration value')\n        SEDOL = Attribute('Enumeration value')\n\n\n    class IIndexComponentWeightTypes(Interface):\n        \"\"\"SOAP enumeration\n        ``{http://www.xignite.com/services/}IndexComponentWeightTypes``\n        \"\"\"\n\n        Unknown = Attribute('Enumeration value')\n        MarketCapitalizationWeighted = Attribute('Enumeration value')\n        EqualWeighted = Attribute('Enumeration value')\n        PriceWeighted = Attribute('Enumeration value')\n        MarketCapitalizationWeightedWithLimits = Attribute('Enumeration value')\n        OtherWeighting = Attribute('Enumeration value')\n\n\n    class IOutcomeTypes(Interface):\n        \"\"\"SOAP enumeration ``{http://www.xignite.com/services/}OutcomeTypes``\n        \"\"\"\n\n        Success = Attribute('Enumeration value')\n        SystemError = Attribute('Enumeration value')\n        RequestError = Attribute('Enumeration value')\n        RegistrationError = Attribute('Enumeration value')\n\n\n    class IPricedComponent(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}PricedComponent``\n        \"\"\"\n\n        Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n        Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n        Symbol = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Name = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Exchange = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        CIK = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Cusip = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        ISIN = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        SEDOL = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Valoren = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Sector = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Class = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        IndustryGroup = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Industry = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Country = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Currency = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Style = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Price = schema.Float(description=u\"WSDL type: double\", required=True)\n        Weight = schema.Float(description=u\"WSDL type: double\", required=True)\n        Value = schema.Float(description=u\"WSDL type: double\", required=True)\n        MarketCapitalization = schema.Float(description=u\"WSDL type: double\", required=True)\n        AdjustmentFactor = schema.Float(description=u\"WSDL type: double\", required=True)\n        IndexComponentWeightType = Attribute('Type: IIndexComponentWeightTypes. Required: True')\n\n\n    class IPricedComponents(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}PricedComponents``\n        \"\"\"\n\n        Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n        Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n        Security = Attribute('Type: ISecurity. Required: False')\n        Count = schema.Int(description=u\"WSDL type: int\", required=True)\n        AsOfDate = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Price = schema.Float(description=u\"WSDL type: double\", required=True)\n        Divisor = schema.Float(description=u\"WSDL type: double\", required=True)\n        DivisorDate = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        PricedComponents = Attribute('Type: IArrayOfPricedComponent. Required: False')\n\n\n    class ISecurity(Interface):\n        \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Security``\n        \"\"\"\n\n        Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n        Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n        CIK = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Cusip = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Symbol = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        ISIN = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Valoren = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Name = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        Market = schema.TextLine(description=u\"WSDL type: string\", required=False)\n        CategoryOrIndustry = schema.TextLine(description=u\"WSDL type: string\", required=False)\n\n\n    class IXigniteIndexComponents(Interface):\n        \"\"\"SOAP service ``XigniteIndexComponents`` with target namespace\n        http://www.xignite.com/services/.\n        \"\"\"\n\n        def GetIndexComponents(Identifier, IdentifierType):\n            \"\"\"Parameters:\n        \n            ``Identifier`` -- string (optional)\n            ``IdentifierType`` -- IIdentifierTypes\n        \n            Returns: GetIndexComponentsResponse\n            \"\"\"\n\n\n        def GetPricedIndexComponents(Identifier, IdentifierType, AsOfDate):\n            \"\"\"Parameters:\n        \n            ``Identifier`` -- string (optional)\n            ``IdentifierType`` -- IIdentifierTypes\n            ``AsOfDate`` -- string (optional)\n        \n            Returns: GetPricedIndexComponentsResponse\n            \"\"\"\n\n\n        def GetPricedIndexComponentsSubset(Identifier, IdentifierType, AsOfDate, StartIndex, EndIndex):\n            \"\"\"Parameters:\n        \n            ``Identifier`` -- string (optional)\n            ``IdentifierType`` -- IIdentifierTypes\n            ``AsOfDate`` -- string (optional)\n            ``StartIndex`` -- int\n            ``EndIndex`` -- int\n        \n            Returns: GetPricedIndexComponentsSubsetResponse\n            \"\"\"\n\n\n\n    WSDL_TYPES = {\n        'ArrayOfComponent': IArrayOfComponent,\n        'ArrayOfPricedComponent': IArrayOfPricedComponent,\n        'Common': ICommon,\n        'Component': IComponent,\n        'Components': IComponents,\n        'Header': IHeader,\n        'IdentifierTypes': IIdentifierTypes,\n        'IndexComponentWeightTypes': IIndexComponentWeightTypes,\n        'OutcomeTypes': IOutcomeTypes,\n        'PricedComponent': IPricedComponent,\n        'PricedComponents': IPricedComponents,\n        'Security': ISecurity\n    }\n\n\n\nIf you want to use the generator from Python, you can do::\n\n    >>> from suds.client import Client\n    >>> client = Client(wsdlURL)\n    \n    >>> from wsdl2interface import generate\n    >>> generated = generate(client, wsdlURL)\n\nCaveats\n-------\n\nThis package is not guaranteed to produce 100% correct code. In most cases,\nyou will need to perform some manual cleanup afterwards. It is also not\nterribly well tested. Patches welcome!\n\nPlease note:\n\n* WSDL allows identifiers that are not valid in Python. Thus, you could end\n  up with attributes or method which are not valid Python. The script will\n  convert spaces to underscores, but will not handle things like names\n  starting with a digit.\n* WSDL files with multiple service definitions and/or ports will be flattened.\n* Complex types and enumerations specifies in the WSDL file will be output\n  first, as individual interfaces.\n* The namespace and original type name are both output in the docstring of\n  the generated interface for a complex type or enumeration. However, it is\n  possible that the same name will be output.\n* Types in the following namespaces are not output as complex type interfaces,\n  and are referenced as primitives when used in attributes or method\n  arguments:\n  \n  * http://schemas.xmlsoap.org/soap/encoding/\n  * http://schemas.xmlsoap.org/wsdl/\n  * http://www.w3.org/2001/XMLSchema\n\n.. _zope.interface: http://pypi.python.org/pypi/zope.interface\n.. _suds: http://pypi.python.org/pypi/suds\n\nChangelog\n=========\n\n1.0b2 - 2010-05-31\n------------------\n\n* Basic support for inheritance (extension) of complex types\n\n1.0b1 - 2010-05-07\n------------------\n\n* Indicate whether a given field in a complex type is required (must be set)\n  or not.\n\n1.0a5 - 2010-03-22\n------------------\n\n* Don't include input/output message types in the list of complex types.\n\n* Unwrap the return type to display the actual object that will be returned\n  by Suds, if possible.\n\n1.0a4 - 2010-03-22\n------------------\n\n* Display a return type for each method based on the SOAP output message.\n  Note that this isn't perfect - it assumes the response type is in the main\n  target namespace and unambiguous.\n\n1.0a3 - 2010-03-18\n------------------\n\n* Use zope.schema fields for common attribute types in complex types.\n\n* Mangle identifiers to ensure they are valid Python\n\n1.0a2 - 2010-03-17\n------------------\n\n* Fix broken release\n\n1.0a1 - 2010-02-12\n------------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/wsdl2interface", "keywords": null, "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "wsdl2interface", "package_url": "https://pypi.org/project/wsdl2interface/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wsdl2interface/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/wsdl2interface"}, "release_url": "https://pypi.org/project/wsdl2interface/1.0b2/", "requires_dist": null, "requires_python": null, "summary": "Create zope.interface style interfaces from a WSDL file", "version": "1.0b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"wsdl2interface\">\n<h2><a href=\"#id1\" rel=\"nofollow\">wsdl2interface</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#wsdl2interface\" id=\"id1\" rel=\"nofollow\">wsdl2interface</a><ul>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id3\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#caveats\" id=\"id4\" rel=\"nofollow\">Caveats</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id5\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#b2-2010-05-31\" id=\"id6\" rel=\"nofollow\">1.0b2 - 2010-05-31</a></li>\n<li><a href=\"#b1-2010-05-07\" id=\"id7\" rel=\"nofollow\">1.0b1 - 2010-05-07</a></li>\n<li><a href=\"#a5-2010-03-22\" id=\"id8\" rel=\"nofollow\">1.0a5 - 2010-03-22</a></li>\n<li><a href=\"#a4-2010-03-22\" id=\"id9\" rel=\"nofollow\">1.0a4 - 2010-03-22</a></li>\n<li><a href=\"#a3-2010-03-18\" id=\"id10\" rel=\"nofollow\">1.0a3 - 2010-03-18</a></li>\n<li><a href=\"#a2-2010-03-17\" id=\"id11\" rel=\"nofollow\">1.0a2 - 2010-03-17</a></li>\n<li><a href=\"#a1-2010-02-12\" id=\"id12\" rel=\"nofollow\">1.0a1 - 2010-02-12</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p>This package provides a simple script to generate the code for\n<a href=\"http://pypi.python.org/pypi/zope.interface\" rel=\"nofollow\">zope.interface</a> style interfaces based on a WSDL file. It relies on <a href=\"http://pypi.python.org/pypi/suds\" rel=\"nofollow\">suds</a>\nto perform the conversion.</p>\n<div id=\"installation\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Installation</a></h3>\n<p>To install the package, use easy_install, buildout or some other mechanism to\ninstall Python eggs, e.g.:</p>\n<pre>$ easy_install -U wsdl2interface\n</pre>\n<p>You can also install it as a dependency of another package, e.g. by listing it\nin that package\u2019s <tt>setup.py</tt> <tt>install_requires</tt> line.</p>\n</div>\n<div id=\"usage\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Usage</a></h3>\n<p>By default, <tt>wsdl2interface`</tt> installs a console script of the same name,\nwhich you can use to print the generated code to the screen. Pass the URL\nof a WSDL file (which could be a <tt><span class=\"pre\">file://</span></tt> URL for a local file) as the\nonly argument:</p>\n<pre>$ wsdl2interface http://www.xignite.com/xIndexComponents.asmx?WSDL\n</pre>\n<p>The output will look something like this:</p>\n<pre>\"\"\"SOAP web services generated from:\nhttp://www.xignite.com/xIndexComponents.asmx?WSDL.\n\"\"\"\n\nfrom zope.interface import Interface, Attribute\nfrom zope import schema\n\n\nclass IArrayOfComponent(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}ArrayOfComponent``\n    \"\"\"\n\n    Component = Attribute('Type: IComponent[]. Required: False')\n\n\nclass IArrayOfPricedComponent(Interface):\n    \"\"\"SOAP complex type\n    ``{http://www.xignite.com/services/}ArrayOfPricedComponent``\n    \"\"\"\n\n    PricedComponent = Attribute('Type: IPricedComponent[]. Required: False')\n\n\nclass ICommon(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Common``\n    \"\"\"\n\n    Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n    Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n\n\nclass IComponent(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Component``\n    \"\"\"\n\n    Security = Attribute('Type: ISecurity. Required: False')\n    Weight = schema.Float(description=u\"WSDL type: double\", required=True)\n    AdjustmentFactor = schema.Float(description=u\"WSDL type: double\", required=True)\n    IndexComponentWeightType = Attribute('Type: IIndexComponentWeightTypes. Required: True')\n\n\nclass IComponents(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Components``\n    \"\"\"\n\n    Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n    Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n    Security = Attribute('Type: ISecurity. Required: False')\n    Count = schema.Int(description=u\"WSDL type: int\", required=True)\n    Components = Attribute('Type: IArrayOfComponent. Required: False')\n\n\nclass IHeader(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Header``\n    \"\"\"\n\n    Username = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Password = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Tracer = schema.TextLine(description=u\"WSDL type: string\", required=False)\n\n\nclass IIdentifierTypes(Interface):\n    \"\"\"SOAP enumeration ``{http://www.xignite.com/services/}IdentifierTypes``\n    \"\"\"\n\n    Symbol = Attribute('Enumeration value')\n    CIK = Attribute('Enumeration value')\n    CUSIP = Attribute('Enumeration value')\n    ISIN = Attribute('Enumeration value')\n    Valoren = Attribute('Enumeration value')\n    SEDOL = Attribute('Enumeration value')\n\n\nclass IIndexComponentWeightTypes(Interface):\n    \"\"\"SOAP enumeration\n    ``{http://www.xignite.com/services/}IndexComponentWeightTypes``\n    \"\"\"\n\n    Unknown = Attribute('Enumeration value')\n    MarketCapitalizationWeighted = Attribute('Enumeration value')\n    EqualWeighted = Attribute('Enumeration value')\n    PriceWeighted = Attribute('Enumeration value')\n    MarketCapitalizationWeightedWithLimits = Attribute('Enumeration value')\n    OtherWeighting = Attribute('Enumeration value')\n\n\nclass IOutcomeTypes(Interface):\n    \"\"\"SOAP enumeration ``{http://www.xignite.com/services/}OutcomeTypes``\n    \"\"\"\n\n    Success = Attribute('Enumeration value')\n    SystemError = Attribute('Enumeration value')\n    RequestError = Attribute('Enumeration value')\n    RegistrationError = Attribute('Enumeration value')\n\n\nclass IPricedComponent(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}PricedComponent``\n    \"\"\"\n\n    Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n    Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n    Symbol = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Name = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Exchange = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    CIK = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Cusip = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    ISIN = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    SEDOL = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Valoren = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Sector = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Class = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    IndustryGroup = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Industry = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Country = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Currency = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Style = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Price = schema.Float(description=u\"WSDL type: double\", required=True)\n    Weight = schema.Float(description=u\"WSDL type: double\", required=True)\n    Value = schema.Float(description=u\"WSDL type: double\", required=True)\n    MarketCapitalization = schema.Float(description=u\"WSDL type: double\", required=True)\n    AdjustmentFactor = schema.Float(description=u\"WSDL type: double\", required=True)\n    IndexComponentWeightType = Attribute('Type: IIndexComponentWeightTypes. Required: True')\n\n\nclass IPricedComponents(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}PricedComponents``\n    \"\"\"\n\n    Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n    Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n    Security = Attribute('Type: ISecurity. Required: False')\n    Count = schema.Int(description=u\"WSDL type: int\", required=True)\n    AsOfDate = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Price = schema.Float(description=u\"WSDL type: double\", required=True)\n    Divisor = schema.Float(description=u\"WSDL type: double\", required=True)\n    DivisorDate = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    PricedComponents = Attribute('Type: IArrayOfPricedComponent. Required: False')\n\n\nclass ISecurity(Interface):\n    \"\"\"SOAP complex type ``{http://www.xignite.com/services/}Security``\n    \"\"\"\n\n    Outcome = Attribute('Type: IOutcomeTypes. Required: True')\n    Message = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Identity = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Delay = schema.Float(description=u\"WSDL type: double\", required=True)\n    CIK = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Cusip = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Symbol = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    ISIN = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Valoren = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Name = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    Market = schema.TextLine(description=u\"WSDL type: string\", required=False)\n    CategoryOrIndustry = schema.TextLine(description=u\"WSDL type: string\", required=False)\n\n\nclass IXigniteIndexComponents(Interface):\n    \"\"\"SOAP service ``XigniteIndexComponents`` with target namespace\n    http://www.xignite.com/services/.\n    \"\"\"\n\n    def GetIndexComponents(Identifier, IdentifierType):\n        \"\"\"Parameters:\n\n        ``Identifier`` -- string (optional)\n        ``IdentifierType`` -- IIdentifierTypes\n\n        Returns: GetIndexComponentsResponse\n        \"\"\"\n\n\n    def GetPricedIndexComponents(Identifier, IdentifierType, AsOfDate):\n        \"\"\"Parameters:\n\n        ``Identifier`` -- string (optional)\n        ``IdentifierType`` -- IIdentifierTypes\n        ``AsOfDate`` -- string (optional)\n\n        Returns: GetPricedIndexComponentsResponse\n        \"\"\"\n\n\n    def GetPricedIndexComponentsSubset(Identifier, IdentifierType, AsOfDate, StartIndex, EndIndex):\n        \"\"\"Parameters:\n\n        ``Identifier`` -- string (optional)\n        ``IdentifierType`` -- IIdentifierTypes\n        ``AsOfDate`` -- string (optional)\n        ``StartIndex`` -- int\n        ``EndIndex`` -- int\n\n        Returns: GetPricedIndexComponentsSubsetResponse\n        \"\"\"\n\n\n\nWSDL_TYPES = {\n    'ArrayOfComponent': IArrayOfComponent,\n    'ArrayOfPricedComponent': IArrayOfPricedComponent,\n    'Common': ICommon,\n    'Component': IComponent,\n    'Components': IComponents,\n    'Header': IHeader,\n    'IdentifierTypes': IIdentifierTypes,\n    'IndexComponentWeightTypes': IIndexComponentWeightTypes,\n    'OutcomeTypes': IOutcomeTypes,\n    'PricedComponent': IPricedComponent,\n    'PricedComponents': IPricedComponents,\n    'Security': ISecurity\n}\n</pre>\n<p>If you want to use the generator from Python, you can do:</p>\n<pre>&gt;&gt;&gt; from suds.client import Client\n&gt;&gt;&gt; client = Client(wsdlURL)\n\n&gt;&gt;&gt; from wsdl2interface import generate\n&gt;&gt;&gt; generated = generate(client, wsdlURL)\n</pre>\n</div>\n<div id=\"caveats\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Caveats</a></h3>\n<p>This package is not guaranteed to produce 100% correct code. In most cases,\nyou will need to perform some manual cleanup afterwards. It is also not\nterribly well tested. Patches welcome!</p>\n<p>Please note:</p>\n<ul>\n<li>WSDL allows identifiers that are not valid in Python. Thus, you could end\nup with attributes or method which are not valid Python. The script will\nconvert spaces to underscores, but will not handle things like names\nstarting with a digit.</li>\n<li>WSDL files with multiple service definitions and/or ports will be flattened.</li>\n<li>Complex types and enumerations specifies in the WSDL file will be output\nfirst, as individual interfaces.</li>\n<li>The namespace and original type name are both output in the docstring of\nthe generated interface for a complex type or enumeration. However, it is\npossible that the same name will be output.</li>\n<li>Types in the following namespaces are not output as complex type interfaces,\nand are referenced as primitives when used in attributes or method\narguments:<ul>\n<li><a href=\"http://schemas.xmlsoap.org/soap/encoding/\" rel=\"nofollow\">http://schemas.xmlsoap.org/soap/encoding/</a></li>\n<li><a href=\"http://schemas.xmlsoap.org/wsdl/\" rel=\"nofollow\">http://schemas.xmlsoap.org/wsdl/</a></li>\n<li><a href=\"http://www.w3.org/2001/XMLSchema\" rel=\"nofollow\">http://www.w3.org/2001/XMLSchema</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"b2-2010-05-31\">\n<h3><a href=\"#id6\" rel=\"nofollow\">1.0b2 - 2010-05-31</a></h3>\n<ul>\n<li>Basic support for inheritance (extension) of complex types</li>\n</ul>\n</div>\n<div id=\"b1-2010-05-07\">\n<h3><a href=\"#id7\" rel=\"nofollow\">1.0b1 - 2010-05-07</a></h3>\n<ul>\n<li>Indicate whether a given field in a complex type is required (must be set)\nor not.</li>\n</ul>\n</div>\n<div id=\"a5-2010-03-22\">\n<h3><a href=\"#id8\" rel=\"nofollow\">1.0a5 - 2010-03-22</a></h3>\n<ul>\n<li>Don\u2019t include input/output message types in the list of complex types.</li>\n<li>Unwrap the return type to display the actual object that will be returned\nby Suds, if possible.</li>\n</ul>\n</div>\n<div id=\"a4-2010-03-22\">\n<h3><a href=\"#id9\" rel=\"nofollow\">1.0a4 - 2010-03-22</a></h3>\n<ul>\n<li>Display a return type for each method based on the SOAP output message.\nNote that this isn\u2019t perfect - it assumes the response type is in the main\ntarget namespace and unambiguous.</li>\n</ul>\n</div>\n<div id=\"a3-2010-03-18\">\n<h3><a href=\"#id10\" rel=\"nofollow\">1.0a3 - 2010-03-18</a></h3>\n<ul>\n<li>Use zope.schema fields for common attribute types in complex types.</li>\n<li>Mangle identifiers to ensure they are valid Python</li>\n</ul>\n</div>\n<div id=\"a2-2010-03-17\">\n<h3><a href=\"#id11\" rel=\"nofollow\">1.0a2 - 2010-03-17</a></h3>\n<ul>\n<li>Fix broken release</li>\n</ul>\n</div>\n<div id=\"a1-2010-02-12\">\n<h3><a href=\"#id12\" rel=\"nofollow\">1.0a1 - 2010-02-12</a></h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 801740, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "87a8fc2fe40cf7c5cc88ccc03da81d95", "sha256": "b694a2f4474ebc4c2adb995b676f478c00634e5a91558c5c78e7e8d3470cd537"}, "downloads": -1, "filename": "wsdl2interface-1.0a1.tar.gz", "has_sig": false, "md5_digest": "87a8fc2fe40cf7c5cc88ccc03da81d95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3417, "upload_time": "2010-02-12T10:43:06", "upload_time_iso_8601": "2010-02-12T10:43:06.200519Z", "url": "https://files.pythonhosted.org/packages/95/0a/2b468b1d00b659d3eb9bd0de3ef14c66f7c280ad6caf64b72b394e61146c/wsdl2interface-1.0a1.tar.gz", "yanked": false}], "1.0a2-20100317": [{"comment_text": "", "digests": {"md5": "f3c2edf1ba1d33a95ca3d368541e5f56", "sha256": "7fece34b7a878016265a3ece38a8c53d670054302793e30d1dc3e21c8363d5d4"}, "downloads": -1, "filename": "wsdl2interface-1.0a2-20100317.tar.gz", "has_sig": false, "md5_digest": "f3c2edf1ba1d33a95ca3d368541e5f56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5400, "upload_time": "2010-03-17T10:30:56", "upload_time_iso_8601": "2010-03-17T10:30:56.586846Z", "url": "https://files.pythonhosted.org/packages/8c/a4/b5af1af2f78b0f325ed31f9b2123d54d67243a60d0f140a4caa9787323ce/wsdl2interface-1.0a2-20100317.tar.gz", "yanked": false}], "1.0a3-20100317": [{"comment_text": "", "digests": {"md5": "87519e9a45a29047c6af6a193f39e2d2", "sha256": "1cbd269cd0c5fc796e663820b38f32abc095d94cee4642f5ead7cdf9a72ec343"}, "downloads": -1, "filename": "wsdl2interface-1.0a3-20100317.tar.gz", "has_sig": false, "md5_digest": "87519e9a45a29047c6af6a193f39e2d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6230, "upload_time": "2010-03-17T16:31:59", "upload_time_iso_8601": "2010-03-17T16:31:59.456997Z", "url": "https://files.pythonhosted.org/packages/aa/2b/289b0a421e3114d15497fe2706e80a64547b8684a14180a23f2a64b8d7b6/wsdl2interface-1.0a3-20100317.tar.gz", "yanked": false}], "1.0a3-20100322": [{"comment_text": "", "digests": {"md5": "6a871e51a6282b6dbbd25be82f4e81d2", "sha256": "f0d2cbc7f89e0ca68d62570b82983c45efe7d9d61ac6ae114fbd153079b0f569"}, "downloads": -1, "filename": "wsdl2interface-1.0a3-20100322.tar.gz", "has_sig": false, "md5_digest": "6a871e51a6282b6dbbd25be82f4e81d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6579, "upload_time": "2010-03-22T07:04:09", "upload_time_iso_8601": "2010-03-22T07:04:09.566105Z", "url": "https://files.pythonhosted.org/packages/53/81/bcc1f57849d20c4422cf5650057aae6b463e678041a87f122c7df58e42aa/wsdl2interface-1.0a3-20100322.tar.gz", "yanked": false}], "1.0a5": [{"comment_text": "", "digests": {"md5": "3a1801ace98026c984c0ceb6d2d8c163", "sha256": "627f91525faff7ec48c4a956e3e4c0637cb29731986eb3518014671ae70d88f2"}, "downloads": -1, "filename": "wsdl2interface-1.0a5.tar.gz", "has_sig": false, "md5_digest": "3a1801ace98026c984c0ceb6d2d8c163", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8228, "upload_time": "2010-04-19T05:05:53", "upload_time_iso_8601": "2010-04-19T05:05:53.007839Z", "url": "https://files.pythonhosted.org/packages/72/d1/3484c04bdf1144f9074a980e2ee3268d7579a34dc767d1a1b54059474b85/wsdl2interface-1.0a5.tar.gz", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "c50f809191bebeec0bb74f3c1ec3e156", "sha256": "806e2d775c2859439f232ae67d33f49b6d17353babc46106d8bdd7c2ed3eb018"}, "downloads": -1, "filename": "wsdl2interface-1.0b1.tar.gz", "has_sig": false, "md5_digest": "c50f809191bebeec0bb74f3c1ec3e156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8940, "upload_time": "2010-05-07T04:46:16", "upload_time_iso_8601": "2010-05-07T04:46:16.147610Z", "url": "https://files.pythonhosted.org/packages/b7/db/63cc6987549ddd95cab04ead81fb8de38c848b649d6dfd27e8b3f4edd648/wsdl2interface-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "28513f69c8142b9f3ec6db19b98ab425", "sha256": "a69bceeca8a69822d79a98b40df63c23dc68bc5646dc4c643f615806e71e44a5"}, "downloads": -1, "filename": "wsdl2interface-1.0b2.tar.gz", "has_sig": false, "md5_digest": "28513f69c8142b9f3ec6db19b98ab425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9201, "upload_time": "2010-05-31T08:37:41", "upload_time_iso_8601": "2010-05-31T08:37:41.142511Z", "url": "https://files.pythonhosted.org/packages/f3/4a/9fd2ce78beddc012d5dbfe7341e87b4536826a9cbd48eb3f07afaa726458/wsdl2interface-1.0b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28513f69c8142b9f3ec6db19b98ab425", "sha256": "a69bceeca8a69822d79a98b40df63c23dc68bc5646dc4c643f615806e71e44a5"}, "downloads": -1, "filename": "wsdl2interface-1.0b2.tar.gz", "has_sig": false, "md5_digest": "28513f69c8142b9f3ec6db19b98ab425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9201, "upload_time": "2010-05-31T08:37:41", "upload_time_iso_8601": "2010-05-31T08:37:41.142511Z", "url": "https://files.pythonhosted.org/packages/f3/4a/9fd2ce78beddc012d5dbfe7341e87b4536826a9cbd48eb3f07afaa726458/wsdl2interface-1.0b2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:10 2020"}