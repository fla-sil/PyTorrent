{"info": {"author": "Paolo Marcatili, Tobias Olsen, Egon Hansen", "author_email": "pamar@dtu.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# EmulsiPred\nPrediction of Emulsifying Peptides, based on protein sequences (in fasta format) and\ntheir corresponding results from NetSurfP-2 (http://www.cbs.dtu.dk/services/NetSurfP/).\nThe NetSurfP-2 file should be in the NetSurfP-1 Format (retrieved when clicking 'Export All'\nin the upper right side of NetSurfP's 'Server Output' window).\n\n\n#### Prerequisites and installation\n\nThe package can either be cloned from github and installed \nlocally or installed with pip. In both cases, python-3.6 or \nhigher needs to be installed on your PC. Additionally, it is \nrecommended to install the package in a new environment.\n\nThe following commands are run in the command line.\n\n1: Set up a new environment.\n~~~.sh  \n    python3 -m venv EmulsiPred_env\n~~~\n2: Enter (activate) the environment.\n~~~.sh\n    source EmulsiPred_env/bin/activate\n~~~\n3a: Install EmulsiPred within the activated environment with pip.\n~~~.sh\n    pip install EmulsiPred\n~~~\n\n3b: Install EmulsiPred by installing from github with pip.\n\n~~~.sh\n    pip install \"git+https://github.com/MarcatiliLab/EmulsiPred.git\"\n~~~ \n\nAfter either running 3a or 3b EmulsiPred is installed within the\nactivated environment (in our case EmulsiPred_env).\n\n---\n#### Running EmulsiPred\n\nAfter installation, EmulsiPred can be run from the terminal or\nwithin a python script.\n\nAs mentioned above, EmulsiPred requires 2 inputs.\n1) A fasta file containing the protein sequences to check for emulsifiers (termed sequence.fsa).\n2) A NetSurfP file containing secondary structure information of the sequences in sequence.fsa (termed netsurfp.txt)  \n\nAdditionally, there are also 3 variable parameters. \n1) o (out_dir): Output directory (default is the current directory).\n2) nr_seq: Results will only include peptides present in this number of sequences or higher (default 1).\n3) ls (lower score): Results will only include peptides with a score higher than this score (default 2).  \n\nEmulsiPred can be run directly in the terminal with the following\ncommand.\n~~~.sh\n    python -m EmulsiPred -s path/to/sequence.fsa -n path/to/netsurfp.txt -o path/to/out_dir --nr_seq 1 --ls 2\n~~~ \nFurthermore, it can be imported and run in a python script.\n\n~~~~~~~~~~~~~~~~~~~~~python\nimport EmulsiPred as ep\n\nep.EmulsiPred(sequences='path/to/sequence.fsa', netsurfp_results='path/to/netsurfp.txt', out_dir='path/to/out_dir', nr_seq=1, lower_score=2)\n~~~~~~~~~~~~~~~~~~~~~\n\n#### Interpretation of predictions\n\nThe predicted values are a relative ordering \nof the peptides by chance of being an emulsifier. \nIn other words, a higher score implies a higher chance \nof being an emulsifier. \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MarcatiliLab/EmulsiPred", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "EmulsiPred", "package_url": "https://pypi.org/project/EmulsiPred/", "platform": "", "project_url": "https://pypi.org/project/EmulsiPred/", "project_urls": {"Homepage": "https://github.com/MarcatiliLab/EmulsiPred"}, "release_url": "https://pypi.org/project/EmulsiPred/0.0.1.1/", "requires_dist": ["numpy (==1.17.4)", "pandas (==0.25.3)", "python-dateutil (==2.8.1)", "pytz (==2019.3)", "six (==1.13.0)"], "requires_python": ">=3.6", "summary": "A package to predict emulsifying potential of peptides", "version": "0.0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>EmulsiPred</h1>\n<p>Prediction of Emulsifying Peptides, based on protein sequences (in fasta format) and\ntheir corresponding results from NetSurfP-2 (<a href=\"http://www.cbs.dtu.dk/services/NetSurfP/\" rel=\"nofollow\">http://www.cbs.dtu.dk/services/NetSurfP/</a>).\nThe NetSurfP-2 file should be in the NetSurfP-1 Format (retrieved when clicking 'Export All'\nin the upper right side of NetSurfP's 'Server Output' window).</p>\n<h4>Prerequisites and installation</h4>\n<p>The package can either be cloned from github and installed\nlocally or installed with pip. In both cases, python-3.6 or\nhigher needs to be installed on your PC. Additionally, it is\nrecommended to install the package in a new environment.</p>\n<p>The following commands are run in the command line.</p>\n<p>1: Set up a new environment.</p>\n<pre>    python3 -m venv EmulsiPred_env\n</pre>\n<p>2: Enter (activate) the environment.</p>\n<pre>    source EmulsiPred_env/bin/activate\n</pre>\n<p>3a: Install EmulsiPred within the activated environment with pip.</p>\n<pre>    pip install EmulsiPred\n</pre>\n<p>3b: Install EmulsiPred by installing from github with pip.</p>\n<pre>    pip install \"git+https://github.com/MarcatiliLab/EmulsiPred.git\"\n</pre>\n<p>After either running 3a or 3b EmulsiPred is installed within the\nactivated environment (in our case EmulsiPred_env).</p>\n<hr>\n<h4>Running EmulsiPred</h4>\n<p>After installation, EmulsiPred can be run from the terminal or\nwithin a python script.</p>\n<p>As mentioned above, EmulsiPred requires 2 inputs.</p>\n<ol>\n<li>A fasta file containing the protein sequences to check for emulsifiers (termed sequence.fsa).</li>\n<li>A NetSurfP file containing secondary structure information of the sequences in sequence.fsa (termed netsurfp.txt)</li>\n</ol>\n<p>Additionally, there are also 3 variable parameters.</p>\n<ol>\n<li>o (out_dir): Output directory (default is the current directory).</li>\n<li>nr_seq: Results will only include peptides present in this number of sequences or higher (default 1).</li>\n<li>ls (lower score): Results will only include peptides with a score higher than this score (default 2).</li>\n</ol>\n<p>EmulsiPred can be run directly in the terminal with the following\ncommand.</p>\n<pre>    python -m EmulsiPred -s path/to/sequence.fsa -n path/to/netsurfp.txt -o path/to/out_dir --nr_seq 1 --ls 2\n</pre>\n<p>Furthermore, it can be imported and run in a python script.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">EmulsiPred</span> <span class=\"k\">as</span> <span class=\"nn\">ep</span>\n\n<span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">EmulsiPred</span><span class=\"p\">(</span><span class=\"n\">sequences</span><span class=\"o\">=</span><span class=\"s1\">'path/to/sequence.fsa'</span><span class=\"p\">,</span> <span class=\"n\">netsurfp_results</span><span class=\"o\">=</span><span class=\"s1\">'path/to/netsurfp.txt'</span><span class=\"p\">,</span> <span class=\"n\">out_dir</span><span class=\"o\">=</span><span class=\"s1\">'path/to/out_dir'</span><span class=\"p\">,</span> <span class=\"n\">nr_seq</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lower_score</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<h4>Interpretation of predictions</h4>\n<p>The predicted values are a relative ordering\nof the peptides by chance of being an emulsifier.\nIn other words, a higher score implies a higher chance\nof being an emulsifier.</p>\n\n          </div>"}, "last_serial": 6433908, "releases": {"0.0.1.1": [{"comment_text": "", "digests": {"md5": "2396df49361978ea64026cc24b4bb720", "sha256": "2fd13305ba5b8309e04c8a44d7d30f6bad14bd165dddf45d14c651a75d4b3eed"}, "downloads": -1, "filename": "EmulsiPred-0.0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2396df49361978ea64026cc24b4bb720", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24936, "upload_time": "2020-01-10T22:49:53", "upload_time_iso_8601": "2020-01-10T22:49:53.150815Z", "url": "https://files.pythonhosted.org/packages/94/8b/823308f519f8e887b234febc85e0563ca5f0262d31103b4bb7ee49633be5/EmulsiPred-0.0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b6e40353aa107f11c9769d4f2ffc559", "sha256": "782746f3010aae7459f9e158c6c0b7fde904d480afcd1592c0f479fec0d3ab41"}, "downloads": -1, "filename": "EmulsiPred-0.0.1.1.tar.gz", "has_sig": false, "md5_digest": "4b6e40353aa107f11c9769d4f2ffc559", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6750, "upload_time": "2020-01-10T22:49:56", "upload_time_iso_8601": "2020-01-10T22:49:56.383232Z", "url": "https://files.pythonhosted.org/packages/96/83/3cd029dcefad5c8ec4f3b68c5fc7903185224968da3cdbca6d2bfa5aff62/EmulsiPred-0.0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2396df49361978ea64026cc24b4bb720", "sha256": "2fd13305ba5b8309e04c8a44d7d30f6bad14bd165dddf45d14c651a75d4b3eed"}, "downloads": -1, "filename": "EmulsiPred-0.0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2396df49361978ea64026cc24b4bb720", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24936, "upload_time": "2020-01-10T22:49:53", "upload_time_iso_8601": "2020-01-10T22:49:53.150815Z", "url": "https://files.pythonhosted.org/packages/94/8b/823308f519f8e887b234febc85e0563ca5f0262d31103b4bb7ee49633be5/EmulsiPred-0.0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b6e40353aa107f11c9769d4f2ffc559", "sha256": "782746f3010aae7459f9e158c6c0b7fde904d480afcd1592c0f479fec0d3ab41"}, "downloads": -1, "filename": "EmulsiPred-0.0.1.1.tar.gz", "has_sig": false, "md5_digest": "4b6e40353aa107f11c9769d4f2ffc559", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6750, "upload_time": "2020-01-10T22:49:56", "upload_time_iso_8601": "2020-01-10T22:49:56.383232Z", "url": "https://files.pythonhosted.org/packages/96/83/3cd029dcefad5c8ec4f3b68c5fc7903185224968da3cdbca6d2bfa5aff62/EmulsiPred-0.0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:29 2020"}