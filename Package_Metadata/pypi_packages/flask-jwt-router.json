{"info": {"author": "Joe Gasewicz", "author_email": "joegasewicz@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![PyPI version](https://badge.fury.io/py/flask-jwt-router.svg)](https://badge.fury.io/py/flask-jwt-router)\n[![Build Status](https://travis-ci.org/joegasewicz/Flask-JWT-Router.svg?branch=master)](https://travis-ci.org/joegasewicz/Flask-JWT-Router)\n[![codecov](https://codecov.io/gh/joegasewicz/Flask-JWT-Router/branch/master/graph/badge.svg)](https://codecov.io/gh/joegasewicz/Flask-JWT-Router)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c15de26af47d48448392eaa5e0e41bcf)](https://www.codacy.com/manual/joegasewicz/Flask-JWT-Router?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=joegasewicz/Flask-JWT-Router&amp;utm_campaign=Badge_Grade)\n[![Documentation Status](https://readthedocs.org/projects/flask-jwt-router/badge/?version=latest)](https://flask-jwt-router.readthedocs.io/en/latest/?badge=latest)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/flask-jwt-router)\n![PyPI - License](https://img.shields.io/pypi/l/flask-jwt-router?color=pink)\n\n![Greenprint](logo.png?raw=true \"Title\")\n\n# Flask JWT Router\n\nFlask JWT Router is a Python library that adds authorised routes to a Flask app.\n\nRead the Documentation here: [Flask-JWT-Router](https://flask-jwt-router.readthedocs.io/en/latest/) \n\n## Installation\n\n```bash\npip install flask-jwt-router\n```\n\n## Basic Usage\n ```python\nfrom flask import Flask\nfrom flask_jwt_router import JwtRoutes\n\napp = Flask(__name__)\n\nJwtRoutes(app)\n\n# If you're using the Flask factory pattern:\njwt_routes = JwtRoutes()  # Example with *entity_model - see below\n\ndef create_app(config):\n    ...\n    jwt_routes.init_app(app)\n\n```\n\n## Whitelist Routes\n```python\napp.config[\"WHITE_LIST_ROUTES\"] = [\n    (\"POST\", \"/register\"),\n]\n\n@app.route(\"/register\", methods=[\"POST\"])\ndef register():\n    return \"I don't need authorizing!\"\n```\n\n## Prefix your api name to whitelisted routes\n```python\n    # All routes will\napp.config[\"JWT_ROUTER_API_NAME\"] = \"/api/v1\"\napp.config[\"WHITE_LIST_ROUTES\"] = [\n    (\"POST\", \"/register\"),\n]\n\n@app.route(\"/api/v1/register\", methods=[\"POST\"])\ndef register():\n    return \"I don't need authorizing!\"\n   \n```\n\n## Bypass Flask-JWT-Router on specified routes\n```python\n    # Define homepage template routes for example on JWT_IGNORE_ROUTES \n    # & still get to use the api name on request handlers returning resources\n    app.config[\"IGNORED_ROUTES\"] = [\n        (\"GET\", \"/\")\n    ]\n```\n\n## Declare an entity model\n```python\n# Create your entity model (example uses Flask-SqlAlchemy)\nclass UserModel(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String)\n    \n# You can define the primary key name with `ENTITY_KEY` on Flask's config\napp.config[\"ENTITY_KEY\"] = \"user_id\"\n\n# (`id` is used by default)\nJwtRoutes(app, entity_models=[UserModel, TeacherModel, ...etc])\n\n# Or pass later with `init_app`\ndef create_app(config):\n    ...\n    jwt_routes.init_app(app, entity_models=[UserModel, TeacherModel, ...etc])\n\n```\n\n## Authorization\n```python\nfrom your_app import jwt_routes\n\n# white list the routes\napp.config[\"WHITE_LIST_ROUTES\"] = [\n    (\"POST\", \"/register\"),\n    (\"POST\", \"/login\"),\n]\n\n@app.route(\"/register\", methods=[\"POST\"])\ndef register():\n    \"\"\"I'm registering a new user & returning a token!\"\"\"\n    return jsonify({\n        \"token\": jwt_routes.create_token(entity_id=1, table_name='users')\n    })\n\n@app.route(\"/login\", methods=[\"POST\"])\ndef login():\n    \"\"\"I'm authorized & updating my token!\"\"\"\n    return jsonify({\n        \"token\": jwt_routes.update_token(entity_id=1)\n    })\n```\n\n*Warning: The `table_name` must be the same as your tablename or `__tablename__` attribute's value.\n(With SqlAlchemy, you can define a `__tablename__` attribute directly or else\nthe name is derived from your entity\u2019s database table name).\n\n# Create & update Tokens on Routes\nCreate a new entity & return a new token\n```python\n@app.route(\"/register\", methods=[\"POST\"])\n    def register():\n        user_data = request.get_json()\n        try:\n            user = UserModel(**user_data)\n            user.create_user() # your entity creation logic\n\n            # Here we pass the id as a kwarg to `create_token`\n            token: str = jwt_routes.create_token(entity_id=user.id, table_name=\"users\")\n\n            # Now we can return a new token!\n            return {\n                \"message\": \"User successfully created.\",\n                \"token\": str(token),  # casting is optional\n            }, 200\n```\nAccess entity on Flask's global context\n```python\n    from app import app, jwt_routes\n\n    # Example uses Marshmallow to serialize entity object\n    class EntitySchema(Schema):\n        id = fields.Integer()\n        name = fields.String()\n\n    @app.route(\"/login\", methods=[\"GET\"])\n    def login():\n        user_data = g.get(\"user\")\n        try:\n            user_dumped = UserSchema().dump(user_data)\n        except ValidationError as _:\n           return {\n                       \"error\": \"User requested does not exist.\"\n                   }, 401\n        return {\n            \"data\": user_dumped,\n            \"token\": jwt_routes.update_token(entity_id=user_data.id),\n        }, 200\n        \n```\nIf you are handling a request with a token in the headers you can call::\n```python\n    jwt_routes.update_token(entity_id=user_data.id)\n```\n\nIf you are handling a request without a token in the headers you can call::\n\n```python\n    jwt_routes.create_token(entity_id=user_data.id, table_name=\"users\")\n```\n\n\nAn Example configuration for registering & logging in users of different types:\n```python\n    app.config[\"IGNORED_ROUTES\"] = [(\"GET\", \"/\")]\n    app.config[\"JWT_ROUTER_API_NAME\"] = \"/api/v1\"\n    app.config[\"WHITE_LIST_ROUTES\"] = [\n        (\"POST\", \"/auth/user\"), (\"POST\", \"/auth/user/login\"),\n        (\"POST\", \"/auth/teacher\"), (\"POST\", \"/auth/teacher/login\"),\n    ]\n    \n    # Optionally, you can pass your models to Flask's config:\n    app.config[\"ENTITY_MODELS\"] = [ UserModel, TeacherModel, ...etc ]\n```\n## Authors\n\n* **joegasewicz** - *Initial work* - [@joegasewicz](https://twitter.com/joegasewicz)\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\nMake sure you have Python versions: `3.6`,  `3.7`,  `3.8`\nThen run:\n```python\n    tox\n```\n\nTo check the docs look good locally you can run:\n```bash\n    make html\n```\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joegasewicz/Flask-JWT-Router", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-jwt-router", "package_url": "https://pypi.org/project/flask-jwt-router/", "platform": "", "project_url": "https://pypi.org/project/flask-jwt-router/", "project_urls": {"Homepage": "https://github.com/joegasewicz/Flask-JWT-Router"}, "release_url": "https://pypi.org/project/flask-jwt-router/0.0.26/", "requires_dist": null, "requires_python": "", "summary": "Flask JWT Router is a Python library that adds authorised routes to a Flask app", "version": "0.0.26", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/flask-jwt-router\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24b219412f637fa552a5e5b5540413d67e62fd0c/68747470733a2f2f62616467652e667572792e696f2f70792f666c61736b2d6a77742d726f757465722e737667\"></a>\n<a href=\"https://travis-ci.org/joegasewicz/Flask-JWT-Router\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2be1c937e303a68f34ba4a80b4dfba4e61ddd62a/68747470733a2f2f7472617669732d63692e6f72672f6a6f65676173657769637a2f466c61736b2d4a57542d526f757465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/joegasewicz/Flask-JWT-Router\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0289ef34176d7ee2653bd138c51190adb9a7236d/68747470733a2f2f636f6465636f762e696f2f67682f6a6f65676173657769637a2f466c61736b2d4a57542d526f757465722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.codacy.com/manual/joegasewicz/Flask-JWT-Router?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=joegasewicz/Flask-JWT-Router&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47906959a98aaf21bd56f38b7e93e4b9298f2ba9/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6331356465323661663437643438343438333932656161356530653431626366\"></a>\n<a href=\"https://flask-jwt-router.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c04fe09716cca0ca6f2f444d2370cf06d88e55b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f666c61736b2d6a77742d726f757465722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b98ffb92ac4121b709d922b75dfe6e20fc90b29a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f666c61736b2d6a77742d726f75746572\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/702624b793a530b2878b0522bcd3db76eadb1e94/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f666c61736b2d6a77742d726f757465723f636f6c6f723d70696e6b\"></p>\n<p><img alt=\"Greenprint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d44e267c6f2bf87c958c53008d72f6c08f67674/6c6f676f2e706e673f7261773d74727565\"></p>\n<h1>Flask JWT Router</h1>\n<p>Flask JWT Router is a Python library that adds authorised routes to a Flask app.</p>\n<p>Read the Documentation here: <a href=\"https://flask-jwt-router.readthedocs.io/en/latest/\" rel=\"nofollow\">Flask-JWT-Router</a></p>\n<h2>Installation</h2>\n<pre>pip install flask-jwt-router\n</pre>\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_jwt_router</span> <span class=\"kn\">import</span> <span class=\"n\">JwtRoutes</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">JwtRoutes</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you're using the Flask factory pattern:</span>\n<span class=\"n\">jwt_routes</span> <span class=\"o\">=</span> <span class=\"n\">JwtRoutes</span><span class=\"p\">()</span>  <span class=\"c1\"># Example with *entity_model - see below</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n   <span class=\"o\">...</span>\n   <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h2>Whitelist Routes</h2>\n<pre><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"WHITE_LIST_ROUTES\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/register\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/register\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"I don't need authorizing!\"</span>\n</pre>\n<h2>Prefix your api name to whitelisted routes</h2>\n<pre>    <span class=\"c1\"># All routes will</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"JWT_ROUTER_API_NAME\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"/api/v1\"</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"WHITE_LIST_ROUTES\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/register\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/api/v1/register\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"I don't need authorizing!\"</span>\n   \n</pre>\n<h2>Bypass Flask-JWT-Router on specified routes</h2>\n<pre>    <span class=\"c1\"># Define homepage template routes for example on JWT_IGNORE_ROUTES </span>\n    <span class=\"c1\"># &amp; still get to use the api name on request handlers returning resources</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"IGNORED_ROUTES\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n</pre>\n<h2>Declare an entity model</h2>\n<pre><span class=\"c1\"># Create your entity model (example uses Flask-SqlAlchemy)</span>\n<span class=\"k\">class</span> <span class=\"nc\">UserModel</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">)</span>\n    \n<span class=\"c1\"># You can define the primary key name with `ENTITY_KEY` on Flask's config</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"ENTITY_KEY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"user_id\"</span>\n\n<span class=\"c1\"># (`id` is used by default)</span>\n<span class=\"n\">JwtRoutes</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">entity_models</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">UserModel</span><span class=\"p\">,</span> <span class=\"n\">TeacherModel</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Or pass later with `init_app`</span>\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">entity_models</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">UserModel</span><span class=\"p\">,</span> <span class=\"n\">TeacherModel</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"p\">])</span>\n</pre>\n<h2>Authorization</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">your_app</span> <span class=\"kn\">import</span> <span class=\"n\">jwt_routes</span>\n\n<span class=\"c1\"># white list the routes</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"WHITE_LIST_ROUTES\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/register\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/login\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/register\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"I'm registering a new user &amp; returning a token!\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"token\"</span><span class=\"p\">:</span> <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">create_token</span><span class=\"p\">(</span><span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s1\">'users'</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"I'm authorized &amp; updating my token!\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"token\"</span><span class=\"p\">:</span> <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">update_token</span><span class=\"p\">(</span><span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n</pre>\n<p>*Warning: The <code>table_name</code> must be the same as your tablename or <code>__tablename__</code> attribute's value.\n(With SqlAlchemy, you can define a <code>__tablename__</code> attribute directly or else\nthe name is derived from your entity\u2019s database table name).</p>\n<h1>Create &amp; update Tokens on Routes</h1>\n<p>Create a new entity &amp; return a new token</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/register\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">():</span>\n        <span class=\"n\">user_data</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">()</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">UserModel</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">user_data</span><span class=\"p\">)</span>\n            <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">create_user</span><span class=\"p\">()</span> <span class=\"c1\"># your entity creation logic</span>\n\n            <span class=\"c1\"># Here we pass the id as a kwarg to `create_token`</span>\n            <span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">create_token</span><span class=\"p\">(</span><span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"users\"</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># Now we can return a new token!</span>\n            <span class=\"k\">return</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"User successfully created.\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"token\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">),</span>  <span class=\"c1\"># casting is optional</span>\n            <span class=\"p\">},</span> <span class=\"mi\">200</span>\n</pre>\n<p>Access entity on Flask's global context</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">app</span> <span class=\"kn\">import</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">jwt_routes</span>\n\n    <span class=\"c1\"># Example uses Marshmallow to serialize entity object</span>\n    <span class=\"k\">class</span> <span class=\"nc\">EntitySchema</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">()</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"GET\"</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">():</span>\n        <span class=\"n\">user_data</span> <span class=\"o\">=</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"user\"</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">user_dumped</span> <span class=\"o\">=</span> <span class=\"n\">UserSchema</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">user_data</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">_</span><span class=\"p\">:</span>\n           <span class=\"k\">return</span> <span class=\"p\">{</span>\n                       <span class=\"s2\">\"error\"</span><span class=\"p\">:</span> <span class=\"s2\">\"User requested does not exist.\"</span>\n                   <span class=\"p\">},</span> <span class=\"mi\">401</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"data\"</span><span class=\"p\">:</span> <span class=\"n\">user_dumped</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"token\"</span><span class=\"p\">:</span> <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">update_token</span><span class=\"p\">(</span><span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"n\">user_data</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">),</span>\n        <span class=\"p\">},</span> <span class=\"mi\">200</span>\n        \n</pre>\n<p>If you are handling a request with a token in the headers you can call::</p>\n<pre>    <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">update_token</span><span class=\"p\">(</span><span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"n\">user_data</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<p>If you are handling a request without a token in the headers you can call::</p>\n<pre>    <span class=\"n\">jwt_routes</span><span class=\"o\">.</span><span class=\"n\">create_token</span><span class=\"p\">(</span><span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"n\">user_data</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"users\"</span><span class=\"p\">)</span>\n</pre>\n<p>An Example configuration for registering &amp; logging in users of different types:</p>\n<pre>    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"IGNORED_ROUTES\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">)]</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"JWT_ROUTER_API_NAME\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"/api/v1\"</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"WHITE_LIST_ROUTES\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/auth/user\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/auth/user/login\"</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/auth/teacher\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"POST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/auth/teacher/login\"</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n    \n    <span class=\"c1\"># Optionally, you can pass your models to Flask's config:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"ENTITY_MODELS\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">UserModel</span><span class=\"p\">,</span> <span class=\"n\">TeacherModel</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"n\">etc</span> <span class=\"p\">]</span>\n</pre>\n<h2>Authors</h2>\n<ul>\n<li><strong>joegasewicz</strong> - <em>Initial work</em> - <a href=\"https://twitter.com/joegasewicz\" rel=\"nofollow\">@joegasewicz</a></li>\n</ul>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<p>Make sure you have Python versions: <code>3.6</code>,  <code>3.7</code>,  <code>3.8</code>\nThen run:</p>\n<pre>    <span class=\"n\">tox</span>\n</pre>\n<p>To check the docs look good locally you can run:</p>\n<pre>    make html\n</pre>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6279817, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6e99c66af5c24caa453fcb36034ac00b", "sha256": "0febbe2666d9360af57a28d2a4bf381bbd6496428952c32b998bd617c6ae6aae"}, "downloads": -1, "filename": "flask_jwt_router-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e99c66af5c24caa453fcb36034ac00b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17833, "upload_time": "2019-06-09T16:00:58", "upload_time_iso_8601": "2019-06-09T16:00:58.477890Z", "url": "https://files.pythonhosted.org/packages/e1/d4/5a4831cfabc2075b537bdabdb277a81697970e2b91b1106041720b0d775e/flask_jwt_router-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f31dbfe8991566b3cf668555f80c9b9", "sha256": "4eff9af9f46685c42260dcfbcd4e9922784392bded286a0127b32dbd317d9f49"}, "downloads": -1, "filename": "flask-jwt-router-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4f31dbfe8991566b3cf668555f80c9b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25092, "upload_time": "2019-06-09T16:01:01", "upload_time_iso_8601": "2019-06-09T16:01:01.266595Z", "url": "https://files.pythonhosted.org/packages/cc/b7/676208c4543ea4eacdefb3b5a43793b69363fafbdc14dbad101f4e8628ec/flask-jwt-router-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "8f57e1c5a249d65e06612bf86a7b5d13", "sha256": "96e7ee1fca6820a4cbe096b1279f318b199fd59f8852536f4abfa8504d29b921"}, "downloads": -1, "filename": "flask-jwt-router-0.0.10.tar.gz", "has_sig": false, "md5_digest": "8f57e1c5a249d65e06612bf86a7b5d13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27501, "upload_time": "2019-11-10T13:40:18", "upload_time_iso_8601": "2019-11-10T13:40:18.433979Z", "url": "https://files.pythonhosted.org/packages/6c/67/3c9d57cce88db2fe85f6d0b27ba575ee45ef8fd9275e7694c9a1e33cdb84/flask-jwt-router-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "73275d2ccd74ad5d1aa1294c5a11dc66", "sha256": "c9d3746fdfff2f1200997871c50f43cd047db3bf1b6baaf1e272034690839bae"}, "downloads": -1, "filename": "flask-jwt-router-0.0.11.tar.gz", "has_sig": false, "md5_digest": "73275d2ccd74ad5d1aa1294c5a11dc66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27773, "upload_time": "2019-11-13T01:38:19", "upload_time_iso_8601": "2019-11-13T01:38:19.887079Z", "url": "https://files.pythonhosted.org/packages/00/b4/93e76f7f5d922d060cd77e76d05a2774c0df579b8b12ca5bd21bf4789b7a/flask-jwt-router-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "fe3a5c68a14526658135871b85818b74", "sha256": "5742cf81787b569fee18c9ecf2b87dba1f84ca2b4a857068b35ce3d4abc81972"}, "downloads": -1, "filename": "flask-jwt-router-0.0.12.tar.gz", "has_sig": false, "md5_digest": "fe3a5c68a14526658135871b85818b74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27760, "upload_time": "2019-11-13T03:06:49", "upload_time_iso_8601": "2019-11-13T03:06:49.686143Z", "url": "https://files.pythonhosted.org/packages/17/cb/09d6755ffdc79ad7c16d7cf5fc00e6fa6652eb7256228bdad60ba8568db0/flask-jwt-router-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "ae0d4b060c776a98a220c54a4c8d3195", "sha256": "c3a2aef45499d64bdd5340cae69f561e7773c2fb2b2bad266ff856857dd6dd5d"}, "downloads": -1, "filename": "flask-jwt-router-0.0.13.tar.gz", "has_sig": false, "md5_digest": "ae0d4b060c776a98a220c54a4c8d3195", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27835, "upload_time": "2019-11-13T18:03:46", "upload_time_iso_8601": "2019-11-13T18:03:46.551089Z", "url": "https://files.pythonhosted.org/packages/a7/d1/e3ec39f0a0f174c98dd439b8bc9779b9b8519dae7ad0712fb334c10206e3/flask-jwt-router-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "5d52dbaaa45c600fa78581025dfc5c6d", "sha256": "5d8ef99444ae0384607ab3103768cc74adff47256152b770e9377cd5e01fa33d"}, "downloads": -1, "filename": "flask-jwt-router-0.0.14.tar.gz", "has_sig": false, "md5_digest": "5d52dbaaa45c600fa78581025dfc5c6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28139, "upload_time": "2019-11-13T19:58:38", "upload_time_iso_8601": "2019-11-13T19:58:38.295631Z", "url": "https://files.pythonhosted.org/packages/7d/2d/d8b64557231a1d1415509640e129f3deb57a8fa034991c1bf3ae7493f307/flask-jwt-router-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "434179496fa307399550e3575d7f805b", "sha256": "3e15b72449ac368d7c6e5063d02633a03dd57669106c5be2a0c30291afc69666"}, "downloads": -1, "filename": "flask-jwt-router-0.0.15.tar.gz", "has_sig": false, "md5_digest": "434179496fa307399550e3575d7f805b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29605, "upload_time": "2019-11-18T13:54:26", "upload_time_iso_8601": "2019-11-18T13:54:26.424493Z", "url": "https://files.pythonhosted.org/packages/2c/5e/0456171c4090d1c0f38e591606f23ad75e1dbe6537d0dd432d39aeba205f/flask-jwt-router-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "173a6d15b9d6b6dff05703ab24a2303b", "sha256": "4cf3adaa554e6f0c0a1dcb6a8b1946458715297cbdc3df412fd3741c25478a22"}, "downloads": -1, "filename": "flask-jwt-router-0.0.16.tar.gz", "has_sig": false, "md5_digest": "173a6d15b9d6b6dff05703ab24a2303b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29593, "upload_time": "2019-11-18T17:29:39", "upload_time_iso_8601": "2019-11-18T17:29:39.678409Z", "url": "https://files.pythonhosted.org/packages/91/93/fea8e0df9f3cd8b91ca661a470ecae49436b9f6d392cc4d41a5032a7d57d/flask-jwt-router-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "a441257251514a37552211e72172a669", "sha256": "6d468df9a08ad96eeacb59f5a749c7c7a10adfd04e97c736c5797bf690c12501"}, "downloads": -1, "filename": "flask-jwt-router-0.0.17.tar.gz", "has_sig": false, "md5_digest": "a441257251514a37552211e72172a669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29981, "upload_time": "2019-11-22T18:24:49", "upload_time_iso_8601": "2019-11-22T18:24:49.829369Z", "url": "https://files.pythonhosted.org/packages/28/08/6400563d2eccf883d9962e8731c15a4670c572aef3b880c8d17cd384b2cc/flask-jwt-router-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "34709edca0efbc92330535d164fe4b68", "sha256": "3e8e7dc7125d5b4e4eeadbb61fa102b6bdac9b036c6c3aef8b29e5d2c0d80a05"}, "downloads": -1, "filename": "flask-jwt-router-0.0.18.tar.gz", "has_sig": false, "md5_digest": "34709edca0efbc92330535d164fe4b68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29907, "upload_time": "2019-11-22T18:49:50", "upload_time_iso_8601": "2019-11-22T18:49:50.066484Z", "url": "https://files.pythonhosted.org/packages/f0/10/809284b7f0ffc22e504e1ad15df79841b54eff48c257f3f1382975ce8578/flask-jwt-router-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "9cc69522f71ccd036862594442773b44", "sha256": "c091abfad4709c0c7469ed89bed104abe06bd2f853a5ba33cab20c56274fb3ad"}, "downloads": -1, "filename": "flask-jwt-router-0.0.19.tar.gz", "has_sig": false, "md5_digest": "9cc69522f71ccd036862594442773b44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28722, "upload_time": "2019-11-24T18:00:42", "upload_time_iso_8601": "2019-11-24T18:00:42.430107Z", "url": "https://files.pythonhosted.org/packages/91/20/a740ba1b6fc837e3812d04f49e0d51aa170588f3a27127d5a11dc8f53d45/flask-jwt-router-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e2ddb6be3bd868d4bb53a056a4e4532f", "sha256": "9f2629df9aa878a8b2619f78d11561763705c41cae0132b9be3235a1ca0b4f98"}, "downloads": -1, "filename": "flask_jwt_router-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e2ddb6be3bd868d4bb53a056a4e4532f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17833, "upload_time": "2019-06-09T16:22:15", "upload_time_iso_8601": "2019-06-09T16:22:15.918767Z", "url": "https://files.pythonhosted.org/packages/bb/88/0002c7bd0de37b59c3d667ca40a9b0b0068ed42f747e317f23d21fd3093e/flask_jwt_router-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c36eeb7e3dacdb26757ed21c3c3b9688", "sha256": "f77e555cae029a5dc00d413fd9b4b79acb09c5bb74e7f16cef46c69818e24529"}, "downloads": -1, "filename": "flask-jwt-router-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c36eeb7e3dacdb26757ed21c3c3b9688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25888, "upload_time": "2019-06-09T16:22:17", "upload_time_iso_8601": "2019-06-09T16:22:17.541943Z", "url": "https://files.pythonhosted.org/packages/e2/c8/481da1ad970241dcbdae049994edf6ef5783a8a468688834ce7fbef5ae4f/flask-jwt-router-0.0.2.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "b12ed9f516773486dbf3c427b8efb2e4", "sha256": "ed480e46ddfcd8fe9f81c76881a13e812fe3d3c290d56629de772cbee3d604de"}, "downloads": -1, "filename": "flask-jwt-router-0.0.20.tar.gz", "has_sig": false, "md5_digest": "b12ed9f516773486dbf3c427b8efb2e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29879, "upload_time": "2019-11-26T17:20:31", "upload_time_iso_8601": "2019-11-26T17:20:31.058282Z", "url": "https://files.pythonhosted.org/packages/9c/81/ef04e631648c27a19cadbadd2cd0d39324b6d0435c4eb3921037aa4cfcb9/flask-jwt-router-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "14719ad81908676c9218b4b958fad719", "sha256": "175f7bf2c67c96c8f4bec4a0f2cf60115ac78d2fdcaac7eeac9385c91a8546ce"}, "downloads": -1, "filename": "flask-jwt-router-0.0.21.tar.gz", "has_sig": false, "md5_digest": "14719ad81908676c9218b4b958fad719", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30023, "upload_time": "2019-11-26T17:46:16", "upload_time_iso_8601": "2019-11-26T17:46:16.494555Z", "url": "https://files.pythonhosted.org/packages/f5/6e/5f507a51a4ee50c1a7d79312f5fdf383a65f447c1885803befc6ad2850d2/flask-jwt-router-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "14fcdf8718ba80600971133909af64d8", "sha256": "7654749791a921140f8d2e7ef9f8469a4c3824ae7802387cded33433a9eef54a"}, "downloads": -1, "filename": "flask-jwt-router-0.0.22.tar.gz", "has_sig": false, "md5_digest": "14fcdf8718ba80600971133909af64d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30596, "upload_time": "2019-11-26T18:51:08", "upload_time_iso_8601": "2019-11-26T18:51:08.195575Z", "url": "https://files.pythonhosted.org/packages/c6/42/289b472d2ad58f99cc0111917e9ff81165c809cae7f1892c41df796f00e9/flask-jwt-router-0.0.22.tar.gz", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "6263ce57a12b6725954a6673901a3668", "sha256": "de737595475071ea507739001a5a3acdcf5d3e728246a1232eff0b09c10f4919"}, "downloads": -1, "filename": "flask-jwt-router-0.0.23.tar.gz", "has_sig": false, "md5_digest": "6263ce57a12b6725954a6673901a3668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32706, "upload_time": "2019-11-28T02:26:38", "upload_time_iso_8601": "2019-11-28T02:26:38.737697Z", "url": "https://files.pythonhosted.org/packages/e6/e1/3bd3a82bf507eb14ae1972943719704a63c8844f961f0835048eef9509ee/flask-jwt-router-0.0.23.tar.gz", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "7fd57ad61cc02a3766a905fd473a87fb", "sha256": "8967ee539045bfb38b3bc3581414f59b7c5894a3a291438ed1967a23e5845b67"}, "downloads": -1, "filename": "flask-jwt-router-0.0.24.tar.gz", "has_sig": false, "md5_digest": "7fd57ad61cc02a3766a905fd473a87fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31195, "upload_time": "2019-12-03T10:52:17", "upload_time_iso_8601": "2019-12-03T10:52:17.011327Z", "url": "https://files.pythonhosted.org/packages/ce/62/374d7fd46f3f4122412a336cb22a8d28d758949cb7f1e38974631c985ea2/flask-jwt-router-0.0.24.tar.gz", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "9aac2e80c14219c2a857c021bf935d19", "sha256": "41e34959d9f762e4592cdb702e948256ba8509eac12722030c0eed7731632ceb"}, "downloads": -1, "filename": "flask-jwt-router-0.0.25.tar.gz", "has_sig": false, "md5_digest": "9aac2e80c14219c2a857c021bf935d19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34770, "upload_time": "2019-12-10T11:48:18", "upload_time_iso_8601": "2019-12-10T11:48:18.007345Z", "url": "https://files.pythonhosted.org/packages/69/34/4494007869df7d9d743215bda8e61d2f0a470d0b25c4dee80adbcf88742f/flask-jwt-router-0.0.25.tar.gz", "yanked": false}], "0.0.26": [{"comment_text": "", "digests": {"md5": "12246d8d056ea12e236dae5b64622fee", "sha256": "f9d1d8d1b4260007c1ecb9256ef2c41fc2d7861ffe1a7d602515a9aeb1324f82"}, "downloads": -1, "filename": "flask-jwt-router-0.0.26.tar.gz", "has_sig": false, "md5_digest": "12246d8d056ea12e236dae5b64622fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34680, "upload_time": "2019-12-11T15:43:35", "upload_time_iso_8601": "2019-12-11T15:43:35.997533Z", "url": "https://files.pythonhosted.org/packages/c1/a0/03293c1b4aa6a2fe5a5c38c894d98fd7a2221514133f7bf469661798dd57/flask-jwt-router-0.0.26.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "212c96c502469a430218721eda1f3c2f", "sha256": "7021cb6aaab4c3893d4b33e0a3409ece08570ef2159d490ebd6595fdafc547d7"}, "downloads": -1, "filename": "flask_jwt_router-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "212c96c502469a430218721eda1f3c2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17885, "upload_time": "2019-07-02T00:03:57", "upload_time_iso_8601": "2019-07-02T00:03:57.805170Z", "url": "https://files.pythonhosted.org/packages/b8/31/ac3e7d14c9d77e21f325187c4ec906ecc45a47c725ae934bad76f653d19b/flask_jwt_router-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "245b99faf088dc0061ec0792fd90467d", "sha256": "76b5788ebc26e8099122f0e35212149142bb87f634cf47b3eed9bcec20fc2c80"}, "downloads": -1, "filename": "flask-jwt-router-0.0.4.tar.gz", "has_sig": false, "md5_digest": "245b99faf088dc0061ec0792fd90467d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25897, "upload_time": "2019-07-02T00:03:59", "upload_time_iso_8601": "2019-07-02T00:03:59.080493Z", "url": "https://files.pythonhosted.org/packages/5a/1e/6598716d9c6f0f99ef4bf2c990b79c4e3a812115ccc25ccf2781b71d2812/flask-jwt-router-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "b0c26ece977748c4e30c21b5714c639a", "sha256": "6a7fa26655391df34898588a064723ed0248697b8249c252b7ce78747ba4d80e"}, "downloads": -1, "filename": "flask-jwt-router-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b0c26ece977748c4e30c21b5714c639a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26742, "upload_time": "2019-11-04T17:45:11", "upload_time_iso_8601": "2019-11-04T17:45:11.306658Z", "url": "https://files.pythonhosted.org/packages/90/bd/ac104eb300246419e1e635d2815d6423568ccd4007f8b33fce6cf31d7c27/flask-jwt-router-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "2c7cae2dd05d6fd902cdb535631dde54", "sha256": "89be1d83f4407bd8f3499014ce6e5d6e6959cbc59a7eb1c5c1509792e07dcd43"}, "downloads": -1, "filename": "flask-jwt-router-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2c7cae2dd05d6fd902cdb535631dde54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26756, "upload_time": "2019-11-04T18:16:02", "upload_time_iso_8601": "2019-11-04T18:16:02.812669Z", "url": "https://files.pythonhosted.org/packages/04/bb/c974206407fc65976b2423815f104c622f51ff4444199e3d7ee23f5752d8/flask-jwt-router-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ff7de1ab2588673e7375cb4bc7b06e8f", "sha256": "10ac2cc7c33b1efc32bec6c06e2ca5529c3fe021c147f785cf59e0c25ba9001f"}, "downloads": -1, "filename": "flask-jwt-router-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ff7de1ab2588673e7375cb4bc7b06e8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26739, "upload_time": "2019-11-04T18:38:38", "upload_time_iso_8601": "2019-11-04T18:38:38.308218Z", "url": "https://files.pythonhosted.org/packages/a8/b3/19b08d34e12cdc766ccd2d809107c9ff23741055b86368e67a6fa04ab36a/flask-jwt-router-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5a3310e3cd6f4d0fee08a1fad462a0c6", "sha256": "fc5423b6303888b3444397066551884cf384e7eec3ef71278e1b55a0c77bea26"}, "downloads": -1, "filename": "flask-jwt-router-0.0.8.tar.gz", "has_sig": false, "md5_digest": "5a3310e3cd6f4d0fee08a1fad462a0c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27408, "upload_time": "2019-11-04T22:41:39", "upload_time_iso_8601": "2019-11-04T22:41:39.546783Z", "url": "https://files.pythonhosted.org/packages/25/b0/36dc885c71efe1de9e6e80f315daf04e2dbc9ef86a0837d1356df45e1501/flask-jwt-router-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "298d1c6db349f27b4a8e330038d6949d", "sha256": "b3ef4aecc7f0253b4f24463405bc5f6bacbe9d1f3518c1ef9ac6d6dc8b2d1dd0"}, "downloads": -1, "filename": "flask-jwt-router-0.0.9.tar.gz", "has_sig": false, "md5_digest": "298d1c6db349f27b4a8e330038d6949d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27498, "upload_time": "2019-11-10T13:38:01", "upload_time_iso_8601": "2019-11-10T13:38:01.967523Z", "url": "https://files.pythonhosted.org/packages/33/68/f28017b75d07a5e8118d65e0f9301b49b88bee734404f14f8be07bf54490/flask-jwt-router-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12246d8d056ea12e236dae5b64622fee", "sha256": "f9d1d8d1b4260007c1ecb9256ef2c41fc2d7861ffe1a7d602515a9aeb1324f82"}, "downloads": -1, "filename": "flask-jwt-router-0.0.26.tar.gz", "has_sig": false, "md5_digest": "12246d8d056ea12e236dae5b64622fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34680, "upload_time": "2019-12-11T15:43:35", "upload_time_iso_8601": "2019-12-11T15:43:35.997533Z", "url": "https://files.pythonhosted.org/packages/c1/a0/03293c1b4aa6a2fe5a5c38c894d98fd7a2221514133f7bf469661798dd57/flask-jwt-router-0.0.26.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:42 2020"}