{"info": {"author": "UIS Infrastructure Servers and Storage, University of Cambridge", "author_email": "wh330@cam.ac.uk", "bugtrack_url": null, "classifiers": [], "description": "# Dell SC\n\n## Introduction\n\nInteracting with Dell SCs via REST API.\n\nThe project provides a command line interface (CLI) to connect to Dell Storage Manager and run basic operations, e.g., get list of volumes, servers, snapshots. It is a reimplementation of the developed functions in Shell to clone and recycle volumes, and handle filesystem devices (mount, unmount, update multipah, update fstab), etc. The original Shell implementation is on the Git repository https://git.uis.cam.ac.uk/i/uis/infra/dellsc.git.\n\n## Running the Application\n### Prerequisites\n- [requests 2.22.0](https://pypi.org/project/requests/2.22.0/)\n- [Python 3.6](https://www.python.org/downloads/release/python-360/)\n\n### Installation\nAs `root`, run:\n```bash\npip3 install ucamdsm\n```\n### CLI\nFor example, to show command help:\n```bash\nusage: ucamdsm [-h] [--dsm_host DSM_HOST] [--dsm_port DSM_PORT]\n               [--dsm_user DSM_USER] [--dsm_password DSM_PASSWORD]\n               [--is_secure IS_SECURE] [--record_config RECORD_CONFIG]\n               [--file FILE]\n               {list,delete_volume,replace_volume,clone_volume,create_snapshot,delete_recycled_vols,map_volume,unmap_volume}\n               ...\n\nManage Dell Storage Manager objects via REST API.\n\npositional arguments:\n  {list,delete_volume,replace_volume,clone_volume,create_snapshot,delete_recycled_vols,map_volume,unmap_volume}\n    list                List Dell SC objects. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 list --object scs\n    delete_volume       Delete Dell SC Volume. Example: ucamdsm --dsm_user\n                        user --dsm_password abc123 delete_volume --vol_wwn\n                        12345\n    replace_volume      Clone the volume mounted on source mountpoint and\n                        mount it on destination mountpoint. Then, delete the\n                        volume was initially mounted on destination\n                        mountpoint. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 replace_volume --src_mp /src\n                        --dst_mp /dst\n    clone_volume        Create a snapshot with label of a volume with WWN,\n                        create a view volume from the snapshot, then, map the\n                        view volume to local server and mount it on target\n                        mountpoint. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 clone_volume --vol_wwn 12345\n                        --replay_label test1 --target_mp /target\n    create_snapshot     Create a snapshot of the volume mounted on a given\n                        mountpoint. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 create_snapshot --mp /mp\n                        --replay_label test1 --retention 5\n    delete_recycled_vols\n                        Delete recycled volumes whose WWNs are listed in a\n                        file. Example: ucamdsm --dsm_user user --dsm_password\n                        abc123 delete_recycled_vols --wwns_file\n                        /tmp/recycled_vols_wwns.txt\n    map_volume          Maps the volume to local server and mounts it on the\n                        specified mount point. Example: ucamdsm --dsm_user\n                        user --dsm_password abc123 map_volume --wwn vol_wwn\n                        --mp /d10\n    unmap_volume        Unmaps the volume from local server. Volume must be\n                        unmounted. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 create_snapshot --wwn vol_wwn\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --dsm_host DSM_HOST   DSM hostname. Default: sc-data-ma.admin.cam.ac.uk\n  --dsm_port DSM_PORT   DSM port. Default: 3033\n  --dsm_user DSM_USER   DSM Data Collector username\n  --dsm_password DSM_PASSWORD\n                        DSM Data Collector password\n  --is_secure IS_SECURE\n                        Secure connection. Default: False\n  --record_config RECORD_CONFIG\n                        Record multipath and file system config details.\n                        Default: False (do not record system config details)\n  --file FILE           Read arguments from json file\n```\n\nOr, to get the list of Storage Centers:\n```bash\n$ ucamdsm --dsm_host host --dsm_user user --dsm_password password list --object scs --output json\n07/10/2019 04:24:32 PM INFO Connected to DSM. API Version: 3.5, Connection ID: 0\n07/10/2019 04:24:32 PM INFO API call ApiConnection/ApiConnection/0/StorageCenterList succeeded.\n07/10/2019 04:24:32 PM INFO List of scs:\n{\n    \"SB Storage Center\": {\n        \"instanceId\": \"000\",\n        \"hostOrIP\": \"x.x.x.x\"\n    },\n    \"WCDC Storage Center\": {\n        \"instanceId\": \"000\",\n        \"hostOrIP\": \"y.y.y.y\"\n    }\n}\n07/10/2019 04:24:32 PM INFO Logout of DSM: True.\n```\nYou can get prompted for `user` and `password` if they are not specified in the command.\n```bash\n$ ucamdsm --dsm_host host list --object scs --output json\nUsername: user\nPassword: \n07/16/2019 04:59:53 PM INFO Connected to DSM. API Version: 3.5, Connection ID: 0\n07/16/2019 04:59:53 PM INFO API call ApiConnection/ApiConnection/0/StorageCenterList succeeded.\n07/16/2019 04:59:53 PM INFO List of scs:\n{\n    \"SB Storage Center\": {\n        \"instanceId\": \"000\",\n        \"hostOrIP\": \"x.x.x.x\"\n    },\n    \"WCDC Storage Center\": {\n        \"instanceId\": \"000\",\n        \"hostOrIP\": \"y.y.y.y\"\n    }\n}\n07/16/2019 04:59:53 PM INFO Logout of DSM: True.\n```\nThe command can also read arguments from a `json` file.\n\nExample of a `json` file, `args.json`:\n```bash\n{\n    \"dsm_host\": \"abc\",\n    \"dsm_port\": 3033,\n    \"dsm_user\": \"user\",\n    \"dsm_password\": \"password\",\n    \"is_secure\": false,\n    \"record_config\": false,\n    \"subparser\": \"list\",\n    \"object\": \"scs\",\n    \"output\": \"json\"\n}\n```\nTo read arguments from `args.json`:\n```bash\n$ ucamdsm --file args.json\n07/16/2019 05:05:57 PM INFO Connected to DSM. API Version: 3.5, Connection ID: 0\n07/16/2019 05:05:58 PM INFO API call ApiConnection/ApiConnection/0/StorageCenterList succeeded.\n07/16/2019 05:05:58 PM INFO List of scs:\n{\n    \"SB Storage Center\": {\n        \"instanceId\": \"000\",\n        \"hostOrIP\": \"x.x.x.x\"\n    },\n    \"WCDC Storage Center\": {\n        \"instanceId\": \"000\",\n        \"hostOrIP\": \"y.y.y.y\"\n    }\n}\n07/16/2019 05:05:58 PM INFO Logout of DSM: True.\n```\n### Application logging\nAll the log files related to the tasks executed with the CLI are stored in `/var/log/ucamdsm/`.\n\n## Acknowledgments\n\n- Project structure is mainly based on https://github.com/mrako/python-example-project \n- Some functions implementation was inspired from https://github.com/openstack/cinder", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.developers.cam.ac.uk/uis/infra/dell-sc", "keywords": "", "license": "MIT License (MIT)", "maintainer": "", "maintainer_email": "", "name": "ucamdsm", "package_url": "https://pypi.org/project/ucamdsm/", "platform": "", "project_url": "https://pypi.org/project/ucamdsm/", "project_urls": {"Homepage": "https://gitlab.developers.cam.ac.uk/uis/infra/dell-sc"}, "release_url": "https://pypi.org/project/ucamdsm/1.3.4/", "requires_dist": null, "requires_python": "", "summary": "A Dell SC tasks automation using REST API", "version": "1.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dell SC</h1>\n<h2>Introduction</h2>\n<p>Interacting with Dell SCs via REST API.</p>\n<p>The project provides a command line interface (CLI) to connect to Dell Storage Manager and run basic operations, e.g., get list of volumes, servers, snapshots. It is a reimplementation of the developed functions in Shell to clone and recycle volumes, and handle filesystem devices (mount, unmount, update multipah, update fstab), etc. The original Shell implementation is on the Git repository <a href=\"https://git.uis.cam.ac.uk/i/uis/infra/dellsc.git\" rel=\"nofollow\">https://git.uis.cam.ac.uk/i/uis/infra/dellsc.git</a>.</p>\n<h2>Running the Application</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href=\"https://pypi.org/project/requests/2.22.0/\" rel=\"nofollow\">requests 2.22.0</a></li>\n<li><a href=\"https://www.python.org/downloads/release/python-360/\" rel=\"nofollow\">Python 3.6</a></li>\n</ul>\n<h3>Installation</h3>\n<p>As <code>root</code>, run:</p>\n<pre>pip3 install ucamdsm\n</pre>\n<h3>CLI</h3>\n<p>For example, to show command help:</p>\n<pre>usage: ucamdsm <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--dsm_host DSM_HOST<span class=\"o\">]</span> <span class=\"o\">[</span>--dsm_port DSM_PORT<span class=\"o\">]</span>\n               <span class=\"o\">[</span>--dsm_user DSM_USER<span class=\"o\">]</span> <span class=\"o\">[</span>--dsm_password DSM_PASSWORD<span class=\"o\">]</span>\n               <span class=\"o\">[</span>--is_secure IS_SECURE<span class=\"o\">]</span> <span class=\"o\">[</span>--record_config RECORD_CONFIG<span class=\"o\">]</span>\n               <span class=\"o\">[</span>--file FILE<span class=\"o\">]</span>\n               <span class=\"o\">{</span>list,delete_volume,replace_volume,clone_volume,create_snapshot,delete_recycled_vols,map_volume,unmap_volume<span class=\"o\">}</span>\n               ...\n\nManage Dell Storage Manager objects via REST API.\n\npositional arguments:\n  <span class=\"o\">{</span>list,delete_volume,replace_volume,clone_volume,create_snapshot,delete_recycled_vols,map_volume,unmap_volume<span class=\"o\">}</span>\n    list                List Dell SC objects. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 list --object scs\n    delete_volume       Delete Dell SC Volume. Example: ucamdsm --dsm_user\n                        user --dsm_password abc123 delete_volume --vol_wwn\n                        <span class=\"m\">12345</span>\n    replace_volume      Clone the volume mounted on <span class=\"nb\">source</span> mountpoint and\n                        mount it on destination mountpoint. Then, delete the\n                        volume was initially mounted on destination\n                        mountpoint. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 replace_volume --src_mp /src\n                        --dst_mp /dst\n    clone_volume        Create a snapshot with label of a volume with WWN,\n                        create a view volume from the snapshot, <span class=\"k\">then</span>, map the\n                        view volume to <span class=\"nb\">local</span> server and mount it on target\n                        mountpoint. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 clone_volume --vol_wwn <span class=\"m\">12345</span>\n                        --replay_label test1 --target_mp /target\n    create_snapshot     Create a snapshot of the volume mounted on a given\n                        mountpoint. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 create_snapshot --mp /mp\n                        --replay_label test1 --retention <span class=\"m\">5</span>\n    delete_recycled_vols\n                        Delete recycled volumes whose WWNs are listed in a\n                        file. Example: ucamdsm --dsm_user user --dsm_password\n                        abc123 delete_recycled_vols --wwns_file\n                        /tmp/recycled_vols_wwns.txt\n    map_volume          Maps the volume to <span class=\"nb\">local</span> server and mounts it on the\n                        specified mount point. Example: ucamdsm --dsm_user\n                        user --dsm_password abc123 map_volume --wwn vol_wwn\n                        --mp /d10\n    unmap_volume        Unmaps the volume from <span class=\"nb\">local</span> server. Volume must be\n                        unmounted. Example: ucamdsm --dsm_user user\n                        --dsm_password abc123 create_snapshot --wwn vol_wwn\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --dsm_host DSM_HOST   DSM hostname. Default: sc-data-ma.admin.cam.ac.uk\n  --dsm_port DSM_PORT   DSM port. Default: <span class=\"m\">3033</span>\n  --dsm_user DSM_USER   DSM Data Collector username\n  --dsm_password DSM_PASSWORD\n                        DSM Data Collector password\n  --is_secure IS_SECURE\n                        Secure connection. Default: False\n  --record_config RECORD_CONFIG\n                        Record multipath and file system config details.\n                        Default: False <span class=\"o\">(</span><span class=\"k\">do</span> not record system config details<span class=\"o\">)</span>\n  --file FILE           Read arguments from json file\n</pre>\n<p>Or, to get the list of Storage Centers:</p>\n<pre>$ ucamdsm --dsm_host host --dsm_user user --dsm_password password list --object scs --output json\n<span class=\"m\">07</span>/10/2019 <span class=\"m\">04</span>:24:32 PM INFO Connected to DSM. API Version: <span class=\"m\">3</span>.5, Connection ID: <span class=\"m\">0</span>\n<span class=\"m\">07</span>/10/2019 <span class=\"m\">04</span>:24:32 PM INFO API call ApiConnection/ApiConnection/0/StorageCenterList succeeded.\n<span class=\"m\">07</span>/10/2019 <span class=\"m\">04</span>:24:32 PM INFO List of scs:\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"SB Storage Center\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"instanceId\"</span>: <span class=\"s2\">\"000\"</span>,\n        <span class=\"s2\">\"hostOrIP\"</span>: <span class=\"s2\">\"x.x.x.x\"</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"WCDC Storage Center\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"instanceId\"</span>: <span class=\"s2\">\"000\"</span>,\n        <span class=\"s2\">\"hostOrIP\"</span>: <span class=\"s2\">\"y.y.y.y\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n<span class=\"m\">07</span>/10/2019 <span class=\"m\">04</span>:24:32 PM INFO Logout of DSM: True.\n</pre>\n<p>You can get prompted for <code>user</code> and <code>password</code> if they are not specified in the command.</p>\n<pre>$ ucamdsm --dsm_host host list --object scs --output json\nUsername: user\nPassword: \n<span class=\"m\">07</span>/16/2019 <span class=\"m\">04</span>:59:53 PM INFO Connected to DSM. API Version: <span class=\"m\">3</span>.5, Connection ID: <span class=\"m\">0</span>\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">04</span>:59:53 PM INFO API call ApiConnection/ApiConnection/0/StorageCenterList succeeded.\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">04</span>:59:53 PM INFO List of scs:\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"SB Storage Center\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"instanceId\"</span>: <span class=\"s2\">\"000\"</span>,\n        <span class=\"s2\">\"hostOrIP\"</span>: <span class=\"s2\">\"x.x.x.x\"</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"WCDC Storage Center\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"instanceId\"</span>: <span class=\"s2\">\"000\"</span>,\n        <span class=\"s2\">\"hostOrIP\"</span>: <span class=\"s2\">\"y.y.y.y\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">04</span>:59:53 PM INFO Logout of DSM: True.\n</pre>\n<p>The command can also read arguments from a <code>json</code> file.</p>\n<p>Example of a <code>json</code> file, <code>args.json</code>:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"dsm_host\"</span>: <span class=\"s2\">\"abc\"</span>,\n    <span class=\"s2\">\"dsm_port\"</span>: <span class=\"m\">3033</span>,\n    <span class=\"s2\">\"dsm_user\"</span>: <span class=\"s2\">\"user\"</span>,\n    <span class=\"s2\">\"dsm_password\"</span>: <span class=\"s2\">\"password\"</span>,\n    <span class=\"s2\">\"is_secure\"</span>: false,\n    <span class=\"s2\">\"record_config\"</span>: false,\n    <span class=\"s2\">\"subparser\"</span>: <span class=\"s2\">\"list\"</span>,\n    <span class=\"s2\">\"object\"</span>: <span class=\"s2\">\"scs\"</span>,\n    <span class=\"s2\">\"output\"</span>: <span class=\"s2\">\"json\"</span>\n<span class=\"o\">}</span>\n</pre>\n<p>To read arguments from <code>args.json</code>:</p>\n<pre>$ ucamdsm --file args.json\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">05</span>:05:57 PM INFO Connected to DSM. API Version: <span class=\"m\">3</span>.5, Connection ID: <span class=\"m\">0</span>\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">05</span>:05:58 PM INFO API call ApiConnection/ApiConnection/0/StorageCenterList succeeded.\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">05</span>:05:58 PM INFO List of scs:\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"SB Storage Center\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"instanceId\"</span>: <span class=\"s2\">\"000\"</span>,\n        <span class=\"s2\">\"hostOrIP\"</span>: <span class=\"s2\">\"x.x.x.x\"</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"WCDC Storage Center\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"instanceId\"</span>: <span class=\"s2\">\"000\"</span>,\n        <span class=\"s2\">\"hostOrIP\"</span>: <span class=\"s2\">\"y.y.y.y\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n<span class=\"m\">07</span>/16/2019 <span class=\"m\">05</span>:05:58 PM INFO Logout of DSM: True.\n</pre>\n<h3>Application logging</h3>\n<p>All the log files related to the tasks executed with the CLI are stored in <code>/var/log/ucamdsm/</code>.</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>Project structure is mainly based on <a href=\"https://github.com/mrako/python-example-project\" rel=\"nofollow\">https://github.com/mrako/python-example-project</a></li>\n<li>Some functions implementation was inspired from <a href=\"https://github.com/openstack/cinder\" rel=\"nofollow\">https://github.com/openstack/cinder</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7111193, "releases": {"1.2.10": [{"comment_text": "", "digests": {"md5": "47db7c4fa4067b2b9911b9a1daaa21b6", "sha256": "7b3b27e3cec241b465af987b8776abd0050c7b0609e6fec212db2704c7d96ad5"}, "downloads": -1, "filename": "ucamdsm-1.2.10.tar.gz", "has_sig": false, "md5_digest": "47db7c4fa4067b2b9911b9a1daaa21b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23877, "upload_time": "2019-10-18T10:24:56", "upload_time_iso_8601": "2019-10-18T10:24:56.793284Z", "url": "https://files.pythonhosted.org/packages/d5/68/df9d0c166bfc83fa1c6e4a301119f5e9f09843431365c161d624e5ca5b03/ucamdsm-1.2.10.tar.gz", "yanked": false}], "1.2.11": [{"comment_text": "", "digests": {"md5": "3e0427fd9fd5e736debc4359d50a21ce", "sha256": "e8f3fa8f2bb9d4c72274592b5d06cb662b8299c6589244fd0f1fbcf488021f1c"}, "downloads": -1, "filename": "ucamdsm-1.2.11.tar.gz", "has_sig": false, "md5_digest": "3e0427fd9fd5e736debc4359d50a21ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23933, "upload_time": "2020-02-12T15:50:55", "upload_time_iso_8601": "2020-02-12T15:50:55.462762Z", "url": "https://files.pythonhosted.org/packages/b1/1b/c9cd60f1f93e17e16270c171d986a42512784444cc18de71fcb23347696c/ucamdsm-1.2.11.tar.gz", "yanked": false}], "1.2.15": [{"comment_text": "", "digests": {"md5": "ed81f292e5a2cbf36b612f4c224089c5", "sha256": "0aca2d99f7b5fee1fdbbc59d8310634a359d2e140afc812789dc04e0c222ef74"}, "downloads": -1, "filename": "ucamdsm-1.2.15.tar.gz", "has_sig": false, "md5_digest": "ed81f292e5a2cbf36b612f4c224089c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24705, "upload_time": "2020-03-03T17:31:37", "upload_time_iso_8601": "2020-03-03T17:31:37.790630Z", "url": "https://files.pythonhosted.org/packages/07/d6/0a389f57b6967d1f4aa11c9783a2e15f1fe6c17d986ca6293fb0e0478017/ucamdsm-1.2.15.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "9c9837c50197fe4f5a841736c1796516", "sha256": "613d076ee83f3a44178f40b745e1f01887f23a8e44d46a94af5dabb7c3b6fb00"}, "downloads": -1, "filename": "ucamdsm-1.2.8.tar.gz", "has_sig": false, "md5_digest": "9c9837c50197fe4f5a841736c1796516", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23849, "upload_time": "2019-10-17T18:49:31", "upload_time_iso_8601": "2019-10-17T18:49:31.756149Z", "url": "https://files.pythonhosted.org/packages/f1/17/6fe1daf2b7a3d0248c6b7cb36b70734903720077572b0adc246f339542a0/ucamdsm-1.2.8.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "74711b357782745841983d3dadb3d851", "sha256": "38eb8078f5ed03eef68e0644685c1654f7b543f8c7610f13ab56202ff879ac33"}, "downloads": -1, "filename": "ucamdsm-1.2.9.tar.gz", "has_sig": false, "md5_digest": "74711b357782745841983d3dadb3d851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23872, "upload_time": "2019-10-18T10:22:46", "upload_time_iso_8601": "2019-10-18T10:22:46.552238Z", "url": "https://files.pythonhosted.org/packages/bb/53/4160c5b91fe5d2d555eb8e25f3e7a42fcb69da9d3f3baa2c3a18e25003f9/ucamdsm-1.2.9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "1d5dea201e5b0d0bf74bc14b56c8b5ad", "sha256": "5f667b627a2486790d037cb512fe1be496a6d646e7aa64c4a413f2c086ad9f98"}, "downloads": -1, "filename": "ucamdsm-1.3.0.tar.gz", "has_sig": false, "md5_digest": "1d5dea201e5b0d0bf74bc14b56c8b5ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24580, "upload_time": "2020-03-05T10:42:41", "upload_time_iso_8601": "2020-03-05T10:42:41.271485Z", "url": "https://files.pythonhosted.org/packages/41/4e/d3a7d88bfb8a18a07230d03d5dc4c684ab33971b021e34417e42110434a0/ucamdsm-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "907562ebca8c3825a4fa400357abb74e", "sha256": "14e6a6e053da5e7efcc00dc24331b656db0b9b77fdd321c03d4ff4ffa0641dc4"}, "downloads": -1, "filename": "ucamdsm-1.3.1.tar.gz", "has_sig": false, "md5_digest": "907562ebca8c3825a4fa400357abb74e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24704, "upload_time": "2020-03-05T16:01:17", "upload_time_iso_8601": "2020-03-05T16:01:17.182257Z", "url": "https://files.pythonhosted.org/packages/4a/9c/b37f4cc47f13d355399ab292ac23ec76b90a190d02a8207b0c20fce76b8f/ucamdsm-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "19c618123316abdb76638fb2bb6a8ea8", "sha256": "96a5e801b10b577a1b150624a261cd44da3385a887a3454ced3f4f0256e9ba49"}, "downloads": -1, "filename": "ucamdsm-1.3.2.tar.gz", "has_sig": false, "md5_digest": "19c618123316abdb76638fb2bb6a8ea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24749, "upload_time": "2020-03-05T16:47:46", "upload_time_iso_8601": "2020-03-05T16:47:46.404639Z", "url": "https://files.pythonhosted.org/packages/d5/c8/b54f467acc3b340d9742369feb720f0672dbf97a43326bd9977da81090da/ucamdsm-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "9e80debe41290b4f0481247ff8952f42", "sha256": "77b8934cdbb43529db89bad86de21b7a95d27ccd8faa0910b787da01bcd65d88"}, "downloads": -1, "filename": "ucamdsm-1.3.3.tar.gz", "has_sig": false, "md5_digest": "9e80debe41290b4f0481247ff8952f42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24925, "upload_time": "2020-03-16T14:36:11", "upload_time_iso_8601": "2020-03-16T14:36:11.046790Z", "url": "https://files.pythonhosted.org/packages/d4/70/cfa70e6538ed9c8fbdc3585d84c0845ee7d3e501ae62139a33b4dddc1130/ucamdsm-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "cb90bd41ed98c5c5a6b1792728e965e7", "sha256": "0199cd4a48025d0d16b8e230a0cd6ac0ae1b5db69ed78a03a8b2602fdff8ee0e"}, "downloads": -1, "filename": "ucamdsm-1.3.4.tar.gz", "has_sig": false, "md5_digest": "cb90bd41ed98c5c5a6b1792728e965e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24931, "upload_time": "2020-04-27T12:04:13", "upload_time_iso_8601": "2020-04-27T12:04:13.226055Z", "url": "https://files.pythonhosted.org/packages/62/78/9e0f8194dc6b832fa85b3ea0fb3dd0e7db6ecf4a6f79da31b36aa50eebf8/ucamdsm-1.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb90bd41ed98c5c5a6b1792728e965e7", "sha256": "0199cd4a48025d0d16b8e230a0cd6ac0ae1b5db69ed78a03a8b2602fdff8ee0e"}, "downloads": -1, "filename": "ucamdsm-1.3.4.tar.gz", "has_sig": false, "md5_digest": "cb90bd41ed98c5c5a6b1792728e965e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24931, "upload_time": "2020-04-27T12:04:13", "upload_time_iso_8601": "2020-04-27T12:04:13.226055Z", "url": "https://files.pythonhosted.org/packages/62/78/9e0f8194dc6b832fa85b3ea0fb3dd0e7db6ecf4a6f79da31b36aa50eebf8/ucamdsm-1.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:13 2020"}