{"info": {"author": "Jeremy McRae", "author_email": "jmcrae@illumina.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "## ld_estimator: A package to estimate linkage disequilibrium\nComputes linkage disequilibrium in python. This uses the maximum-likelihood of\n[Excoffier & Slatkin](https://doi.org/10.1093/oxfordjournals.molbev.a040269),\njust converted from [HaploView](https://github.com/jazzywhit/Haploview) to c++\n, with python bindings. It's not too slow, can calculate ~1500 pairs per\nsecond from the HapMap Phase 3 VCFs.\n\n### Installation\nThe simplest way to install ld_estimator is through pip:\n```sh\npip install ld_estimator\n```\n\n### Usage\nUse ld_estimator within a python environment\n```python\nfrom ld_estimator import pairwise_ld\n\nvar1 = [(0, 0), (0, 0), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 0), (1, 1)]\nvar2 = [(0, 0), (0, 0), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (1, 1)]\nis_haploid = [False, False, False, False, False, False, False, True, True, True]\nld = pairwise_ld(var1, var2, is_haploid)\nprint(ld.dprime)\nprint(ld.r_squared)\n\n# or calculate LD for all pairs of variants in a region in a VCF:\nfrom ld_estimator import region_ld\nvcf_path = 'PATH_TO_VCF'\nld = region_ld(vcf_path, chrom, start, end)\n\n# or calculate LD to a site within a region in a VCF. This defaults to checking\n# variants within a 100 kb window of the specified site.\nfrom ld_estimator import site_ld\nvcf_path = 'PATH_TO_VCF'\nld = site_ld(vcf_path, chrom, pos, window=200000)\n\n# can pass in multiple positions in the same region at once\nld = site_ld(vcf_path, chrom, [pos2, pos2, pos3], window=200000)\n\n# both region_ld() and site_ld() can take a list of sample IDs to subset the\n# samples used for calculating LD. For example:\nld = site_ld(vcf_path, chrom, pos, subset=['sample1', 'sample2'])\n\n# if the variant is on a sex chromosome, you'll have to pass in a list of sample\n# sexes (matching order of the subset IDs if present, otherwise the VCF samples)\nld = site_ld(vcf_path, 'X', 20000000, sexes=['male', 'female'])\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeremymcrae/ld_estimator", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ld-estimator", "package_url": "https://pypi.org/project/ld-estimator/", "platform": "", "project_url": "https://pypi.org/project/ld-estimator/", "project_urls": {"Homepage": "https://github.com/jeremymcrae/ld_estimator"}, "release_url": "https://pypi.org/project/ld-estimator/1.0.8/", "requires_dist": null, "requires_python": ">3.6.0", "summary": "Package for estimating linkage disequilibrium", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>ld_estimator: A package to estimate linkage disequilibrium</h2>\n<p>Computes linkage disequilibrium in python. This uses the maximum-likelihood of\n<a href=\"https://doi.org/10.1093/oxfordjournals.molbev.a040269\" rel=\"nofollow\">Excoffier &amp; Slatkin</a>,\njust converted from <a href=\"https://github.com/jazzywhit/Haploview\" rel=\"nofollow\">HaploView</a> to c++\n, with python bindings. It's not too slow, can calculate ~1500 pairs per\nsecond from the HapMap Phase 3 VCFs.</p>\n<h3>Installation</h3>\n<p>The simplest way to install ld_estimator is through pip:</p>\n<pre>pip install ld_estimator\n</pre>\n<h3>Usage</h3>\n<p>Use ld_estimator within a python environment</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ld_estimator</span> <span class=\"kn\">import</span> <span class=\"n\">pairwise_ld</span>\n\n<span class=\"n\">var1</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">var2</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">is_haploid</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">pairwise_ld</span><span class=\"p\">(</span><span class=\"n\">var1</span><span class=\"p\">,</span> <span class=\"n\">var2</span><span class=\"p\">,</span> <span class=\"n\">is_haploid</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ld</span><span class=\"o\">.</span><span class=\"n\">dprime</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ld</span><span class=\"o\">.</span><span class=\"n\">r_squared</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or calculate LD for all pairs of variants in a region in a VCF:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ld_estimator</span> <span class=\"kn\">import</span> <span class=\"n\">region_ld</span>\n<span class=\"n\">vcf_path</span> <span class=\"o\">=</span> <span class=\"s1\">'PATH_TO_VCF'</span>\n<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">region_ld</span><span class=\"p\">(</span><span class=\"n\">vcf_path</span><span class=\"p\">,</span> <span class=\"n\">chrom</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or calculate LD to a site within a region in a VCF. This defaults to checking</span>\n<span class=\"c1\"># variants within a 100 kb window of the specified site.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ld_estimator</span> <span class=\"kn\">import</span> <span class=\"n\">site_ld</span>\n<span class=\"n\">vcf_path</span> <span class=\"o\">=</span> <span class=\"s1\">'PATH_TO_VCF'</span>\n<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">site_ld</span><span class=\"p\">(</span><span class=\"n\">vcf_path</span><span class=\"p\">,</span> <span class=\"n\">chrom</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">200000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># can pass in multiple positions in the same region at once</span>\n<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">site_ld</span><span class=\"p\">(</span><span class=\"n\">vcf_path</span><span class=\"p\">,</span> <span class=\"n\">chrom</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pos2</span><span class=\"p\">,</span> <span class=\"n\">pos2</span><span class=\"p\">,</span> <span class=\"n\">pos3</span><span class=\"p\">],</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">200000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># both region_ld() and site_ld() can take a list of sample IDs to subset the</span>\n<span class=\"c1\"># samples used for calculating LD. For example:</span>\n<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">site_ld</span><span class=\"p\">(</span><span class=\"n\">vcf_path</span><span class=\"p\">,</span> <span class=\"n\">chrom</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">,</span> <span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'sample1'</span><span class=\"p\">,</span> <span class=\"s1\">'sample2'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># if the variant is on a sex chromosome, you'll have to pass in a list of sample</span>\n<span class=\"c1\"># sexes (matching order of the subset IDs if present, otherwise the VCF samples)</span>\n<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">site_ld</span><span class=\"p\">(</span><span class=\"n\">vcf_path</span><span class=\"p\">,</span> <span class=\"s1\">'X'</span><span class=\"p\">,</span> <span class=\"mi\">20000000</span><span class=\"p\">,</span> <span class=\"n\">sexes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'male'</span><span class=\"p\">,</span> <span class=\"s1\">'female'</span><span class=\"p\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 6914744, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "51c689c1378beb148f9130fade6eba32", "sha256": "4bccee9d0ee071c93251c9cf83f49c3fd694a54e614b324e579eaea623544b0f"}, "downloads": -1, "filename": "ld_estimator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "51c689c1378beb148f9130fade6eba32", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 94867, "upload_time": "2019-05-03T23:04:48", "upload_time_iso_8601": "2019-05-03T23:04:48.190085Z", "url": "https://files.pythonhosted.org/packages/ec/08/e7efe451732eb38f0df979b779d57b0f9f2d65ae3a5c54d91b8ef1f00155/ld_estimator-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ab6faa5cd45a4d9987aacc439ca5d5fd", "sha256": "3c4756f950490fe16082a1d6755fe4ff15db7d16e66a397304a51f18f639066c"}, "downloads": -1, "filename": "ld_estimator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ab6faa5cd45a4d9987aacc439ca5d5fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 96538, "upload_time": "2019-05-09T18:16:28", "upload_time_iso_8601": "2019-05-09T18:16:28.096197Z", "url": "https://files.pythonhosted.org/packages/68/de/dd32c64d0155b2adcad94aaea5e9a18a509be7bc0cb2e0b25e143b5b67f0/ld_estimator-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c27e031e977e115b45c63d1fa54f9cf6", "sha256": "a1847a727c7092a7932086a8b4d45cd7440160b4c506f27de3fcd89e4df98c7e"}, "downloads": -1, "filename": "ld_estimator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c27e031e977e115b45c63d1fa54f9cf6", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 96580, "upload_time": "2019-05-09T18:32:04", "upload_time_iso_8601": "2019-05-09T18:32:04.222991Z", "url": "https://files.pythonhosted.org/packages/49/b9/a5da72cf83f50a32ae15e2356358d3e454b8095a9d252d9bda83a3e2eb2b/ld_estimator-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "36a61371f73d00b0f1039f8b8eb17e7e", "sha256": "4c7ff2b9f8cc628a08f377e72e65db8988db1b7a81f06a3423532046aca3b491"}, "downloads": -1, "filename": "ld_estimator-1.0.3.tar.gz", "has_sig": false, "md5_digest": "36a61371f73d00b0f1039f8b8eb17e7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 96591, "upload_time": "2019-05-09T18:37:31", "upload_time_iso_8601": "2019-05-09T18:37:31.797092Z", "url": "https://files.pythonhosted.org/packages/29/65/065f3eca02028744bcdd8446abeb88ab1287c738062d25b759259bc5502c/ld_estimator-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b8cb0b8d0d93c06d1f5f7f1d87d37e46", "sha256": "de1543ca307e011819237e81ac2d41de49d28cd94ca2e1a896f87de62853cac7"}, "downloads": -1, "filename": "ld_estimator-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b8cb0b8d0d93c06d1f5f7f1d87d37e46", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 96706, "upload_time": "2019-05-13T18:34:54", "upload_time_iso_8601": "2019-05-13T18:34:54.690632Z", "url": "https://files.pythonhosted.org/packages/8a/d1/564412c4454fa8127bea8b86a55200d6ba4d6b55839d85a78a8c55828b12/ld_estimator-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "1c9766d94ca16c0e1e0ca90f8094732c", "sha256": "8da7cd1c368ed7feb18acb6a41f748db0dd1cba4d126f3848e1bfd12301bd445"}, "downloads": -1, "filename": "ld_estimator-1.0.5.tar.gz", "has_sig": false, "md5_digest": "1c9766d94ca16c0e1e0ca90f8094732c", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 96840, "upload_time": "2019-05-29T18:36:14", "upload_time_iso_8601": "2019-05-29T18:36:14.474738Z", "url": "https://files.pythonhosted.org/packages/ec/e0/94c5050125b17473f953fe2c922e7fc6693ab3a12e3197ea6487e694f36a/ld_estimator-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "257b0efcd875194022ffce27c89f9a88", "sha256": "385ae75a757f0bbb38a5e44e384fbc00bca4cd75a60b909305bb5dc2e95e1210"}, "downloads": -1, "filename": "ld_estimator-1.0.6.tar.gz", "has_sig": false, "md5_digest": "257b0efcd875194022ffce27c89f9a88", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 98905, "upload_time": "2020-02-05T22:38:29", "upload_time_iso_8601": "2020-02-05T22:38:29.033367Z", "url": "https://files.pythonhosted.org/packages/66/da/79e2ea9ef3cc62bffa1c104986e2e9ab85443e7d5602b7f300945dd553ae/ld_estimator-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "a8085a398080a6a6c6ef6e0f726d1bb0", "sha256": "af80477ec12d58eb5d0c2ffc59ecd015db1f5c57354cae0a72cb2a073ed932e9"}, "downloads": -1, "filename": "ld_estimator-1.0.7.tar.gz", "has_sig": false, "md5_digest": "a8085a398080a6a6c6ef6e0f726d1bb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 98909, "upload_time": "2020-02-10T19:32:59", "upload_time_iso_8601": "2020-02-10T19:32:59.187924Z", "url": "https://files.pythonhosted.org/packages/6a/33/e77d7a9197170c9073ea6812aff02b1030a28be9de6ceca09991f0aa4cad/ld_estimator-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "7241b07584efd02a6456cb9e579c7621", "sha256": "b4e906d63472de92251cb1b6ff695c09f631df6f949a9632bce458eb994b0ea5"}, "downloads": -1, "filename": "ld_estimator-1.0.8.tar.gz", "has_sig": false, "md5_digest": "7241b07584efd02a6456cb9e579c7621", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 45236, "upload_time": "2020-03-30T18:26:43", "upload_time_iso_8601": "2020-03-30T18:26:43.135257Z", "url": "https://files.pythonhosted.org/packages/c0/73/12a9786bfd2351c722acff0b0c355387bbe52a0ca2c295e1d89ffd595019/ld_estimator-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7241b07584efd02a6456cb9e579c7621", "sha256": "b4e906d63472de92251cb1b6ff695c09f631df6f949a9632bce458eb994b0ea5"}, "downloads": -1, "filename": "ld_estimator-1.0.8.tar.gz", "has_sig": false, "md5_digest": "7241b07584efd02a6456cb9e579c7621", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 45236, "upload_time": "2020-03-30T18:26:43", "upload_time_iso_8601": "2020-03-30T18:26:43.135257Z", "url": "https://files.pythonhosted.org/packages/c0/73/12a9786bfd2351c722acff0b0c355387bbe52a0ca2c295e1d89ffd595019/ld_estimator-1.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:24 2020"}