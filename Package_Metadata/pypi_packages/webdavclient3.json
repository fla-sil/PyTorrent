{"info": {"author": "Evgeny Ezhov", "author_email": "ezhov.evgeny@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Environment :: Web Environment", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft", "Operating System :: Unix", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Python WebDAV Client 3\n=========\n[![Build Status](https://travis-ci.com/ezhov-evgeny/webdav-client-python-3.svg?branch=develop)](https://travis-ci.com/ezhov-evgeny/webdav-client-python-3)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=ezhov-evgeny_webdav-client-python-3&metric=alert_status)](https://sonarcloud.io/dashboard?id=ezhov-evgeny_webdav-client-python-3)\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=ezhov-evgeny_webdav-client-python-3&metric=coverage)](https://sonarcloud.io/dashboard?id=ezhov-evgeny_webdav-client-python-3)\n[![PyPI](https://img.shields.io/pypi/v/webdavclient3)](https://pypi.org/project/webdavclient3/) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/webdavclient3)  \n\nPackage webdavclient3 based on https://github.com/designerror/webdav-client-python but uses `requests` instead of `PyCURL`.\nIt provides easy way to work with WebDAV-servers.\n\nInstallation\n------------\n```bash\n$ pip install webdavclient3\n```\n\nSample Usage\n------------\n```python\nfrom webdav3.client import Client\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login':    \"login\",\n 'webdav_password': \"password\"\n}\nclient = Client(options)\nclient.verify = False # To not check SSL certificates (Default = True)\nclient.session.proxies(...) # To set proxy directly into the session (Optional)\nclient.session.auth(...) # To set proxy auth directly into the session (Optional)\nclient.execute_request(\"mkdir\", 'directory_name')\n```\n\nWebdav API\n==========\n\nWebdav API is a set of webdav actions of work with cloud storage. This set includes the following actions:\n`check`, `free`, `info`, `list`, `mkdir`, `clean`, `copy`, `move`, `download`, `upload`, `publish` and `unpublish`.\n\n**Configuring the client**\n\nRequired keys for configuring client connection with WevDAV-server are `webdav_hostname` and `webdav_login`, `webdav_password`.\n\n```python\nfrom webdav3.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login':    \"login\",\n 'webdav_password': \"password\"\n}\nclient = Client(options)\n```\n\nIf your server does not support `HEAD` method or there are other reasons to override default WebDAV methods for actions use a dictionary option `webdav_override_methods`. \nThe key should be in the following list: `check`, `free`, `info`, `list`, `mkdir`, `clean`, `copy`, `move`, `download`, `upload`,\n `publish` and `unpublish`. The value should a string name of WebDAV method, for example `GET`.\n \n```python\nfrom webdav3.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login':    \"login\",\n 'webdav_password': \"password\",\n 'webdav_override_methods': {\n            'check': 'GET'\n        }\n\n}\nclient = Client(options)\n```\n\nWhen a proxy server you need to specify settings to connect through it.\n\n```python\nfrom webdav3.client import Client\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login':    \"w_login\",\n 'webdav_password': \"w_password\", \n 'proxy_hostname':  \"http://127.0.0.1:8080\",\n 'proxy_login':     \"p_login\",\n 'proxy_password':  \"p_password\"\n}\nclient = Client(options)\n```\n\nIf you want to use the certificate path to certificate and private key is defined as follows:\n\n```python\nfrom webdav3.client import Client\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login':    \"w_login\",\n 'webdav_password': \"w_password\",\n 'cert_path':       \"/etc/ssl/certs/certificate.crt\",\n 'key_path':        \"/etc/ssl/private/certificate.key\"\n}\nclient = Client(options)\n```\n\nOr you want to limit the speed or turn on verbose mode:\n\n```python\noptions = {\n ...\n 'recv_speed' : 3000000,\n 'send_speed' : 3000000,\n 'verbose'    : True\n}\nclient = Client(options)\n```\n\nrecv_speed: rate limit data download speed in Bytes per second. Defaults to unlimited speed.  \nsend_speed: rate limit data upload speed in Bytes per second. Defaults to unlimited speed.  \nverbose:    set verbose mode on/off. By default verbose mode is off.\n\nAlso if your server does not support `check` it is possible to disable it:\n\n```python\noptions = {\n ...\n 'disable_check': True\n}\nclient = Client(options)\n```\n\nBy default checking of remote resources is enabled.\n\n**Synchronous methods**\n\n```python\n# Checking existence of the resource\n\nclient.check(\"dir1/file1\")\nclient.check(\"dir1\")\n```\n\n```python\n# Get information about the resource\n\nclient.info(\"dir1/file1\")\nclient.info(\"dir1/\")\n```\n\n```python\n# Check free space\n\nfree_size = client.free()\n```\n\n```python\n# Get a list of resources\n\nfiles1 = client.list()\nfiles2 = client.list(\"dir1\")\n```\n\n```python\n# Create directory\n\nclient.mkdir(\"dir1/dir2\")\n```\n\n```python\n# Delete resource\n\nclient.clean(\"dir1/dir2\")\n```\n\n```python\n# Copy resource\n\nclient.copy(remote_path_from=\"dir1/file1\", remote_path_to=\"dir2/file1\")\nclient.copy(remote_path_from=\"dir2\", remote_path_to=\"dir3\")\n```\n\n```python\n# Move resource\n\nclient.move(remote_path_from=\"dir1/file1\", remote_path_to=\"dir2/file1\")\nclient.move(remote_path_from=\"dir2\", remote_path_to=\"dir3\")\n```\n\n```python\n# Move resource\n\nclient.download_sync(remote_path=\"dir1/file1\", local_path=\"~/Downloads/file1\")\nclient.download_sync(remote_path=\"dir1/dir2/\", local_path=\"~/Downloads/dir2/\")\n```\n\n```python\n# Unload resource\n\nclient.upload_sync(remote_path=\"dir1/file1\", local_path=\"~/Documents/file1\")\nclient.upload_sync(remote_path=\"dir1/dir2/\", local_path=\"~/Documents/dir2/\")\n```\n\n```python\n# Publish the resource\n\nlink = client.publish(\"dir1/file1\")\nlink = client.publish(\"dir2\")\n```\n\n```python\n# Unpublish resource\n\nclient.unpublish(\"dir1/file1\")\nclient.unpublish(\"dir2\")\n```\n\n```python\n# Exception handling\n\nfrom webdav3.client import WebDavException\ntry:\n...\nexcept WebDavException as exception:\n...\n```\n\n```python\n# Get the missing files\n\nclient.pull(remote_directory='dir1', local_directory='~/Documents/dir1')\n```\n\n```python\n# Send missing files\n\nclient.push(remote_directory='dir1', local_directory='~/Documents/dir1')\n```\n\n**Asynchronous methods**\n\n```python\n# Load resource\n\nkwargs = {\n 'remote_path': \"dir1/file1\",\n 'local_path':  \"~/Downloads/file1\",\n 'callback':    callback\n}\nclient.download_async(**kwargs)\n\nkwargs = {\n 'remote_path': \"dir1/dir2/\",\n 'local_path':  \"~/Downloads/dir2/\",\n 'callback':    callback\n}\nclient.download_async(**kwargs)\n```\n\n```python\n# Unload resource\n\nkwargs = {\n 'remote_path': \"dir1/file1\",\n 'local_path':  \"~/Downloads/file1\",\n 'callback':    callback\n}\nclient.upload_async(**kwargs)\n\nkwargs = {\n 'remote_path': \"dir1/dir2/\",\n 'local_path':  \"~/Downloads/dir2/\",\n 'callback':    callback\n}\nclient.upload_async(**kwargs)\n```\n\nResource API\n============\n\nResource API using the concept of OOP that enables cloud-level resources.\n\n```python\n# Get a resource\n\nres1 = client.resource(\"dir1/file1\")\n```\n\n```python\n# Work with the resource\n\nres1.rename(\"file2\")\nres1.move(\"dir1/file2\")\nres1.copy(\"dir2/file1\")\ninfo = res1.info()\nres1.read_from(buffer)\nres1.read(local_path=\"~/Documents/file1\")\nres1.read_async(local_path=\"~/Documents/file1\", callback)\nres1.write_to(buffer)\nres1.write(local_path=\"~/Downloads/file1\")\nres1.write_async(local_path=\"~/Downloads/file1\", callback)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ezhov-evgeny/webdav-client-python-3", "keywords": "webdav,client,python,module,library,packet,Yandex.Disk,Dropbox,Google Disk,Box,4shared", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "webdavclient3", "package_url": "https://pypi.org/project/webdavclient3/", "platform": "", "project_url": "https://pypi.org/project/webdavclient3/", "project_urls": {"Homepage": "https://github.com/ezhov-evgeny/webdav-client-python-3"}, "release_url": "https://pypi.org/project/webdavclient3/3.14.4/", "requires_dist": null, "requires_python": "", "summary": "WebDAV client, based on original package https://github.com/designerror/webdav-client-python but uses requests instead of PyCURL", "version": "3.14.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python WebDAV Client 3</h1>\n<p><a href=\"https://travis-ci.com/ezhov-evgeny/webdav-client-python-3\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4def855675bb623a651afebfe9ab3d01722ecef3/68747470733a2f2f7472617669732d63692e636f6d2f657a686f762d657667656e792f7765626461762d636c69656e742d707974686f6e2d332e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=ezhov-evgeny_webdav-client-python-3\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8b07f7515c87aa4aac8c99f471f7c69c5deccc6/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d657a686f762d657667656e795f7765626461762d636c69656e742d707974686f6e2d33266d65747269633d616c6572745f737461747573\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=ezhov-evgeny_webdav-client-python-3\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a7d66f90818c0f56b75628098efeb0086092a58/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d657a686f762d657667656e795f7765626461762d636c69656e742d707974686f6e2d33266d65747269633d636f766572616765\"></a>\n<a href=\"https://pypi.org/project/webdavclient3/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff8c954842fc835451663388b9454d39ea30f9e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776562646176636c69656e7433\"></a> <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c168f616c49aa83593f78bb6daadd0268ddf252f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f776562646176636c69656e7433\"></p>\n<p>Package webdavclient3 based on <a href=\"https://github.com/designerror/webdav-client-python\" rel=\"nofollow\">https://github.com/designerror/webdav-client-python</a> but uses <code>requests</code> instead of <code>PyCURL</code>.\nIt provides easy way to work with WebDAV-servers.</p>\n<h2>Installation</h2>\n<pre>$ pip install webdavclient3\n</pre>\n<h2>Sample Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdav3.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'webdav_hostname'</span><span class=\"p\">:</span> <span class=\"s2\">\"https://webdav.server.ru\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_login'</span><span class=\"p\">:</span>    <span class=\"s2\">\"login\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_password'</span><span class=\"p\">:</span> <span class=\"s2\">\"password\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">verify</span> <span class=\"o\">=</span> <span class=\"kc\">False</span> <span class=\"c1\"># To not check SSL certificates (Default = True)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">proxies</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c1\"># To set proxy directly into the session (Optional)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c1\"># To set proxy auth directly into the session (Optional)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute_request</span><span class=\"p\">(</span><span class=\"s2\">\"mkdir\"</span><span class=\"p\">,</span> <span class=\"s1\">'directory_name'</span><span class=\"p\">)</span>\n</pre>\n<h1>Webdav API</h1>\n<p>Webdav API is a set of webdav actions of work with cloud storage. This set includes the following actions:\n<code>check</code>, <code>free</code>, <code>info</code>, <code>list</code>, <code>mkdir</code>, <code>clean</code>, <code>copy</code>, <code>move</code>, <code>download</code>, <code>upload</code>, <code>publish</code> and <code>unpublish</code>.</p>\n<p><strong>Configuring the client</strong></p>\n<p>Required keys for configuring client connection with WevDAV-server are <code>webdav_hostname</code> and <code>webdav_login</code>, <code>webdav_password</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdav3.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'webdav_hostname'</span><span class=\"p\">:</span> <span class=\"s2\">\"https://webdav.server.ru\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_login'</span><span class=\"p\">:</span>    <span class=\"s2\">\"login\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_password'</span><span class=\"p\">:</span> <span class=\"s2\">\"password\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>If your server does not support <code>HEAD</code> method or there are other reasons to override default WebDAV methods for actions use a dictionary option <code>webdav_override_methods</code>.\nThe key should be in the following list: <code>check</code>, <code>free</code>, <code>info</code>, <code>list</code>, <code>mkdir</code>, <code>clean</code>, <code>copy</code>, <code>move</code>, <code>download</code>, <code>upload</code>,\n<code>publish</code> and <code>unpublish</code>. The value should a string name of WebDAV method, for example <code>GET</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdav3.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'webdav_hostname'</span><span class=\"p\">:</span> <span class=\"s2\">\"https://webdav.server.ru\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_login'</span><span class=\"p\">:</span>    <span class=\"s2\">\"login\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_password'</span><span class=\"p\">:</span> <span class=\"s2\">\"password\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_override_methods'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'check'</span><span class=\"p\">:</span> <span class=\"s1\">'GET'</span>\n        <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>When a proxy server you need to specify settings to connect through it.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdav3.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'webdav_hostname'</span><span class=\"p\">:</span> <span class=\"s2\">\"https://webdav.server.ru\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_login'</span><span class=\"p\">:</span>    <span class=\"s2\">\"w_login\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_password'</span><span class=\"p\">:</span> <span class=\"s2\">\"w_password\"</span><span class=\"p\">,</span> \n <span class=\"s1\">'proxy_hostname'</span><span class=\"p\">:</span>  <span class=\"s2\">\"http://127.0.0.1:8080\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'proxy_login'</span><span class=\"p\">:</span>     <span class=\"s2\">\"p_login\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'proxy_password'</span><span class=\"p\">:</span>  <span class=\"s2\">\"p_password\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>If you want to use the certificate path to certificate and private key is defined as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdav3.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'webdav_hostname'</span><span class=\"p\">:</span> <span class=\"s2\">\"https://webdav.server.ru\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_login'</span><span class=\"p\">:</span>    <span class=\"s2\">\"w_login\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'webdav_password'</span><span class=\"p\">:</span> <span class=\"s2\">\"w_password\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'cert_path'</span><span class=\"p\">:</span>       <span class=\"s2\">\"/etc/ssl/certs/certificate.crt\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'key_path'</span><span class=\"p\">:</span>        <span class=\"s2\">\"/etc/ssl/private/certificate.key\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Or you want to limit the speed or turn on verbose mode:</p>\n<pre><span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"o\">...</span>\n <span class=\"s1\">'recv_speed'</span> <span class=\"p\">:</span> <span class=\"mi\">3000000</span><span class=\"p\">,</span>\n <span class=\"s1\">'send_speed'</span> <span class=\"p\">:</span> <span class=\"mi\">3000000</span><span class=\"p\">,</span>\n <span class=\"s1\">'verbose'</span>    <span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>recv_speed: rate limit data download speed in Bytes per second. Defaults to unlimited speed.<br>\nsend_speed: rate limit data upload speed in Bytes per second. Defaults to unlimited speed.<br>\nverbose:    set verbose mode on/off. By default verbose mode is off.</p>\n<p>Also if your server does not support <code>check</code> it is possible to disable it:</p>\n<pre><span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"o\">...</span>\n <span class=\"s1\">'disable_check'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>By default checking of remote resources is enabled.</p>\n<p><strong>Synchronous methods</strong></p>\n<pre><span class=\"c1\"># Checking existence of the resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"s2\">\"dir1\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Get information about the resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Check free space</span>\n\n<span class=\"n\">free_size</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">free</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"c1\"># Get a list of resources</span>\n\n<span class=\"n\">files1</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n<span class=\"n\">files2</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"s2\">\"dir1\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Create directory</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/dir2\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Delete resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/dir2\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Copy resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">remote_path_from</span><span class=\"o\">=</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">,</span> <span class=\"n\">remote_path_to</span><span class=\"o\">=</span><span class=\"s2\">\"dir2/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">remote_path_from</span><span class=\"o\">=</span><span class=\"s2\">\"dir2\"</span><span class=\"p\">,</span> <span class=\"n\">remote_path_to</span><span class=\"o\">=</span><span class=\"s2\">\"dir3\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Move resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">remote_path_from</span><span class=\"o\">=</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">,</span> <span class=\"n\">remote_path_to</span><span class=\"o\">=</span><span class=\"s2\">\"dir2/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">remote_path_from</span><span class=\"o\">=</span><span class=\"s2\">\"dir2\"</span><span class=\"p\">,</span> <span class=\"n\">remote_path_to</span><span class=\"o\">=</span><span class=\"s2\">\"dir3\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Move resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">download_sync</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">,</span> <span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Downloads/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">download_sync</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"s2\">\"dir1/dir2/\"</span><span class=\"p\">,</span> <span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Downloads/dir2/\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Unload resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload_sync</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">,</span> <span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Documents/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload_sync</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"s2\">\"dir1/dir2/\"</span><span class=\"p\">,</span> <span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Documents/dir2/\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Publish the resource</span>\n\n<span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s2\">\"dir2\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Unpublish resource</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">unpublish</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">unpublish</span><span class=\"p\">(</span><span class=\"s2\">\"dir2\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Exception handling</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">webdav3.client</span> <span class=\"kn\">import</span> <span class=\"n\">WebDavException</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n<span class=\"k\">except</span> <span class=\"n\">WebDavException</span> <span class=\"k\">as</span> <span class=\"n\">exception</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n</pre>\n<pre><span class=\"c1\"># Get the missing files</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"n\">remote_directory</span><span class=\"o\">=</span><span class=\"s1\">'dir1'</span><span class=\"p\">,</span> <span class=\"n\">local_directory</span><span class=\"o\">=</span><span class=\"s1\">'~/Documents/dir1'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Send missing files</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">remote_directory</span><span class=\"o\">=</span><span class=\"s1\">'dir1'</span><span class=\"p\">,</span> <span class=\"n\">local_directory</span><span class=\"o\">=</span><span class=\"s1\">'~/Documents/dir1'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Asynchronous methods</strong></p>\n<pre><span class=\"c1\"># Load resource</span>\n\n<span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'remote_path'</span><span class=\"p\">:</span> <span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'local_path'</span><span class=\"p\">:</span>  <span class=\"s2\">\"~/Downloads/file1\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'callback'</span><span class=\"p\">:</span>    <span class=\"n\">callback</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">download_async</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'remote_path'</span><span class=\"p\">:</span> <span class=\"s2\">\"dir1/dir2/\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'local_path'</span><span class=\"p\">:</span>  <span class=\"s2\">\"~/Downloads/dir2/\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'callback'</span><span class=\"p\">:</span>    <span class=\"n\">callback</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">download_async</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Unload resource</span>\n\n<span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'remote_path'</span><span class=\"p\">:</span> <span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'local_path'</span><span class=\"p\">:</span>  <span class=\"s2\">\"~/Downloads/file1\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'callback'</span><span class=\"p\">:</span>    <span class=\"n\">callback</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload_async</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"s1\">'remote_path'</span><span class=\"p\">:</span> <span class=\"s2\">\"dir1/dir2/\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'local_path'</span><span class=\"p\">:</span>  <span class=\"s2\">\"~/Downloads/dir2/\"</span><span class=\"p\">,</span>\n <span class=\"s1\">'callback'</span><span class=\"p\">:</span>    <span class=\"n\">callback</span>\n<span class=\"p\">}</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload_async</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<h1>Resource API</h1>\n<p>Resource API using the concept of OOP that enables cloud-level resources.</p>\n<pre><span class=\"c1\"># Get a resource</span>\n\n<span class=\"n\">res1</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/file1\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Work with the resource</span>\n\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"s2\">\"file2\"</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"s2\">\"dir1/file2\"</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s2\">\"dir2/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">read_from</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Documents/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">read_async</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Documents/file1\"</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">write_to</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Downloads/file1\"</span><span class=\"p\">)</span>\n<span class=\"n\">res1</span><span class=\"o\">.</span><span class=\"n\">write_async</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"~/Downloads/file1\"</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7194156, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "93e7680450ff718d6ceba826539cddf4", "sha256": "d8e67fe91bb84d98806e7efa7655e50406fca0e4cf527f3d2583cf1fbea54d0a"}, "downloads": -1, "filename": "webdavclient3-0.10.tar.gz", "has_sig": false, "md5_digest": "93e7680450ff718d6ceba826539cddf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17006, "upload_time": "2019-01-31T12:57:30", "upload_time_iso_8601": "2019-01-31T12:57:30.746801Z", "url": "https://files.pythonhosted.org/packages/7f/88/480049d09338e1bd0381fa3afd9a9cb8ede1eca9e9d62eb5490e5cd6735f/webdavclient3-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "ffb839209d6ca57722933c9804231ba3", "sha256": "9daeab25662a6f65054db0514cbb22f3ed9da2c0cb2c44e2bcb29bf27c04ede6"}, "downloads": -1, "filename": "webdavclient3-0.11.tar.gz", "has_sig": false, "md5_digest": "ffb839209d6ca57722933c9804231ba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17295, "upload_time": "2019-04-02T07:09:25", "upload_time_iso_8601": "2019-04-02T07:09:25.426208Z", "url": "https://files.pythonhosted.org/packages/11/f2/cf616eb4caaed0e2c0c540d165b3dde0e9a0bca51cd5d6b3460c05b6ce9e/webdavclient3-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "5ebc8d4047ddd14b6e7dc611803b7963", "sha256": "57f6201d8a285b8aad8788e1e78328f79be9ab8730e8a3f4db340d1b9a0425c2"}, "downloads": -1, "filename": "webdavclient3-0.12.tar.gz", "has_sig": false, "md5_digest": "5ebc8d4047ddd14b6e7dc611803b7963", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17518, "upload_time": "2019-06-21T12:22:17", "upload_time_iso_8601": "2019-06-21T12:22:17.360820Z", "url": "https://files.pythonhosted.org/packages/31/ef/d5f4dd20727069dcd4a6a16e40488703cb6a53c4a5a68036fc991c9a09fb/webdavclient3-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "768c671e26874b5fbb2a02fc38112e35", "sha256": "f0f0e287eaf7a2ce9dce3156dec84271e2ed395f99036074956a7734827af093"}, "downloads": -1, "filename": "webdavclient3-0.13.tar.gz", "has_sig": false, "md5_digest": "768c671e26874b5fbb2a02fc38112e35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19582, "upload_time": "2019-11-27T19:58:02", "upload_time_iso_8601": "2019-11-27T19:58:02.252260Z", "url": "https://files.pythonhosted.org/packages/fa/45/9b305b8701b4e14e380baa589307b5c2bbdb7646dab0d84f5f55c4335b22/webdavclient3-0.13.tar.gz", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "c31c93449c414067b0027e5a082c294e", "sha256": "41ab02912062acc5db83571ad29aba10c959eb269c6ce37359ba2fdf13f903ae"}, "downloads": -1, "filename": "webdavclient3-0.14.tar.gz", "has_sig": false, "md5_digest": "c31c93449c414067b0027e5a082c294e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27788, "upload_time": "2019-12-17T10:53:51", "upload_time_iso_8601": "2019-12-17T10:53:51.329052Z", "url": "https://files.pythonhosted.org/packages/78/02/2247a9d1cffd3966d9ba15f586dbdff468cc1daf6bddea5263a484d5a398/webdavclient3-0.14.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "40ca0450532aa3425695c44a57f721ad", "sha256": "79b87b30bab8eff99a110399e38dcda7f650002660b9ed450c1325db237be7b1"}, "downloads": -1, "filename": "webdavclient3-0.2.tar.gz", "has_sig": false, "md5_digest": "40ca0450532aa3425695c44a57f721ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14455, "upload_time": "2017-09-11T17:01:14", "upload_time_iso_8601": "2017-09-11T17:01:14.679546Z", "url": "https://files.pythonhosted.org/packages/62/f1/c4e770a220b8438e77198e41d334cf2d168213aabb26f8f8d821ac2ed77f/webdavclient3-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c113c8a606ec7c73c97947e6f255259a", "sha256": "79342cd7aecb3a52bc949458ab49a801008a4c8f7f9187e95694790384da3229"}, "downloads": -1, "filename": "webdavclient3-0.3.tar.gz", "has_sig": false, "md5_digest": "c113c8a606ec7c73c97947e6f255259a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15750, "upload_time": "2017-10-18T18:46:57", "upload_time_iso_8601": "2017-10-18T18:46:57.769502Z", "url": "https://files.pythonhosted.org/packages/50/80/6e65a9fc6295eaa697314bba018415f52fcb7c45ed5b5dde1e3427d88030/webdavclient3-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "e03c1c29e69d985cc3f40bed21873983", "sha256": "f997a2fee95874bd7e99ff6aec187ac8d9f7c666c2eaf767ccc2512a32a2578c"}, "downloads": -1, "filename": "webdavclient3-0.4.tar.gz", "has_sig": false, "md5_digest": "e03c1c29e69d985cc3f40bed21873983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16087, "upload_time": "2017-11-27T19:17:30", "upload_time_iso_8601": "2017-11-27T19:17:30.294265Z", "url": "https://files.pythonhosted.org/packages/22/d3/f68665bbad899a3b630ac45bd9e24443f51b729c44ca8d0cf80659ae7d77/webdavclient3-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "ca98541ef3d3561e50020911c0fc61c2", "sha256": "5849da7ad3e3d773daa4cc7f6b949a5352f3e0a1d08b5492a921049282b161ae"}, "downloads": -1, "filename": "webdavclient3-0.5.tar.gz", "has_sig": false, "md5_digest": "ca98541ef3d3561e50020911c0fc61c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16209, "upload_time": "2017-12-03T06:43:27", "upload_time_iso_8601": "2017-12-03T06:43:27.086745Z", "url": "https://files.pythonhosted.org/packages/7e/57/6a95136f814ed96b0617fbcb3b45f2c35aa05b9e30a7741b0d858f0d6731/webdavclient3-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "ae98c6622cef85e078c7c6d1faa1a7fe", "sha256": "706877b206f376396a65bb4d0b9c92666bfa0f4a2960ba3bb53eeda7463188cb"}, "downloads": -1, "filename": "webdavclient3-0.6.tar.gz", "has_sig": false, "md5_digest": "ae98c6622cef85e078c7c6d1faa1a7fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16337, "upload_time": "2018-02-21T07:13:58", "upload_time_iso_8601": "2018-02-21T07:13:58.521635Z", "url": "https://files.pythonhosted.org/packages/bb/4a/493c1eb20051c781a3452b26e17ce342f0a2bf7d5d2406190d4149fd4057/webdavclient3-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "56afb9cdf7a3a8b6319c51cdf8423765", "sha256": "9250abb5303bbd5b58405e8d0ff8f785d3f644bc2772b71df94964726c876a80"}, "downloads": -1, "filename": "webdavclient3-0.6.1.tar.gz", "has_sig": false, "md5_digest": "56afb9cdf7a3a8b6319c51cdf8423765", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16453, "upload_time": "2018-03-16T06:26:13", "upload_time_iso_8601": "2018-03-16T06:26:13.444670Z", "url": "https://files.pythonhosted.org/packages/8a/0a/1a391ca75d219358e5352f013903a6f1dd24a0e6122dfdf7e9605074ff1e/webdavclient3-0.6.1.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "b6cbfe26663fa61ce0794285cd036e0b", "sha256": "6fd6f0923db2b0ac4b57c590679a7a085c1a189e1d939dff3e629973b2f996b6"}, "downloads": -1, "filename": "webdavclient3-0.7.tar.gz", "has_sig": false, "md5_digest": "b6cbfe26663fa61ce0794285cd036e0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16449, "upload_time": "2018-03-16T06:44:06", "upload_time_iso_8601": "2018-03-16T06:44:06.427164Z", "url": "https://files.pythonhosted.org/packages/eb/a4/ce230720c1d1c981b5c47f80e81965a861e29754f321153fcf587cabe4a3/webdavclient3-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "86ed5004c6aa591d7be019cb65a4dbce", "sha256": "e4ac05a6ab0bfd4ab6dd152f7c4c24e69a7753707d7f9f3192fcc236492fbb5e"}, "downloads": -1, "filename": "webdavclient3-0.8.tar.gz", "has_sig": false, "md5_digest": "86ed5004c6aa591d7be019cb65a4dbce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16564, "upload_time": "2018-05-07T08:12:39", "upload_time_iso_8601": "2018-05-07T08:12:39.473964Z", "url": "https://files.pythonhosted.org/packages/f1/6a/f304fff055d11fc32c6f88dd25156a36515de87051da745617ddb0919a81/webdavclient3-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "c8b3945221c249c5a501fce2137e05d8", "sha256": "3c32bb6395b6b5f5d945883c6d7871d675b444a2bdf8bf88e79a82ff6c1d1659"}, "downloads": -1, "filename": "webdavclient3-0.9.tar.gz", "has_sig": false, "md5_digest": "c8b3945221c249c5a501fce2137e05d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17026, "upload_time": "2018-05-10T11:56:54", "upload_time_iso_8601": "2018-05-10T11:56:54.588641Z", "url": "https://files.pythonhosted.org/packages/98/84/77be5659a6a5451762e55b66c2e70128a0f769a878ac974ce1d0d2d22d5b/webdavclient3-0.9.tar.gz", "yanked": false}], "3.14": [{"comment_text": "", "digests": {"md5": "4c15242519706c38290b3cacd1f8e185", "sha256": "00974d7f2fa0164dbd141903dc834d8a6fa42781ce98d3c7e4ab273d8bfbb7fb"}, "downloads": -1, "filename": "webdavclient3-3.14.tar.gz", "has_sig": false, "md5_digest": "4c15242519706c38290b3cacd1f8e185", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27621, "upload_time": "2020-02-01T05:04:12", "upload_time_iso_8601": "2020-02-01T05:04:12.021385Z", "url": "https://files.pythonhosted.org/packages/40/f5/114950591ec8d90818fe8dab4d01fbf1d833cdeeaab56c714e8f72045863/webdavclient3-3.14.tar.gz", "yanked": false}], "3.14.1": [{"comment_text": "", "digests": {"md5": "5e671a02561b5b3fa36eb25e33bb5a7b", "sha256": "c419de76e47211b34330d76c080c55829511a9fbdc84657fbbb5907ac874d4fc"}, "downloads": -1, "filename": "webdavclient3-3.14.1.tar.gz", "has_sig": false, "md5_digest": "5e671a02561b5b3fa36eb25e33bb5a7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28009, "upload_time": "2020-02-24T01:44:52", "upload_time_iso_8601": "2020-02-24T01:44:52.494810Z", "url": "https://files.pythonhosted.org/packages/22/af/1416091f475aacb52d61c707f7f9e9901e2a9cd556cc5a95379125d8776d/webdavclient3-3.14.1.tar.gz", "yanked": false}], "3.14.2": [{"comment_text": "", "digests": {"md5": "9d4b58b64267e7885065137c2f933f5b", "sha256": "771b17ec75a78af932203e588986e314ee0d725168c37ccdb9020f918b450d6e"}, "downloads": -1, "filename": "webdavclient3-3.14.2.tar.gz", "has_sig": false, "md5_digest": "9d4b58b64267e7885065137c2f933f5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25366, "upload_time": "2020-04-11T00:36:23", "upload_time_iso_8601": "2020-04-11T00:36:23.731308Z", "url": "https://files.pythonhosted.org/packages/30/24/311138cafbc68ed781138a6eb1e82fdc161e994d360b1ceca622d9fc1e70/webdavclient3-3.14.2.tar.gz", "yanked": false}], "3.14.3": [{"comment_text": "", "digests": {"md5": "caebc72bcebb2ff23e89b4a7414bf2d3", "sha256": "3ae3287f84921031dc99ebea2dd4a3fd236843b381bbf3dbab7d30f1629c501a"}, "downloads": -1, "filename": "webdavclient3-3.14.3.tar.gz", "has_sig": false, "md5_digest": "caebc72bcebb2ff23e89b4a7414bf2d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25387, "upload_time": "2020-04-16T21:25:20", "upload_time_iso_8601": "2020-04-16T21:25:20.880226Z", "url": "https://files.pythonhosted.org/packages/fc/37/90b8e8330c85c40a76c661904cff157cf4b4d4658bfa65a088f6d7693858/webdavclient3-3.14.3.tar.gz", "yanked": false}], "3.14.4": [{"comment_text": "", "digests": {"md5": "0a9abf04e7ec81c5d76160f8fd566a46", "sha256": "a7fa7e74b8a3fbc025e4089168c6601f9603265861ce5213d5b66feb515bdc69"}, "downloads": -1, "filename": "webdavclient3-3.14.4.tar.gz", "has_sig": false, "md5_digest": "0a9abf04e7ec81c5d76160f8fd566a46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25604, "upload_time": "2020-05-08T04:59:57", "upload_time_iso_8601": "2020-05-08T04:59:57.489808Z", "url": "https://files.pythonhosted.org/packages/2a/64/02b7b151f8e9c1aeeb14c566196ddb6567c3ec74e5535f209fe92675070e/webdavclient3-3.14.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a9abf04e7ec81c5d76160f8fd566a46", "sha256": "a7fa7e74b8a3fbc025e4089168c6601f9603265861ce5213d5b66feb515bdc69"}, "downloads": -1, "filename": "webdavclient3-3.14.4.tar.gz", "has_sig": false, "md5_digest": "0a9abf04e7ec81c5d76160f8fd566a46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25604, "upload_time": "2020-05-08T04:59:57", "upload_time_iso_8601": "2020-05-08T04:59:57.489808Z", "url": "https://files.pythonhosted.org/packages/2a/64/02b7b151f8e9c1aeeb14c566196ddb6567c3ec74e5535f209fe92675070e/webdavclient3-3.14.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:19 2020"}