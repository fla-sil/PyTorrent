{"info": {"author": "Andreas Schreiner", "author_email": "andreas.schreiner@sonnenmulde.at", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "`tootgroup.py` - emulate group accounts on Mastodon\n=================================================\n\nWhat is this?\n-------------\n\nSome social media platforms allow groups of users to post into a unified \"group\"\ntimeline/instance/whatever you want to call it. This is currently not possible\non Mastodon without giving all members full login credentials to a group.\n`tootgroup.py` is an attempt to solve this specific use case.\n\nHow does it work?\n-----------------\n\n`tootgroup.py` has to be set up on a computer and run periodically. It reads the\nnotifications from the Mastodon account it is connected to and filters them for\nmessages to repost. There are two methods of creating a group post. One or both\nof them can be enabled during the setup procedure.\n\n1. Public mentions of group members are boosted if they preceed the group's\n   name with an Exclamation Mark like \"!@mastodon\"\n\n2. `tootgroup.py` can also look for direct messages from group members. If the\n   group is @mentioned at the very beginning, The message will be reposted as\n   a new public toot originating directly from the group account. The status\n   text as well as media files are included. The originating user will not be\n   shown publicly. (It can still be seen by all group and instance\n   administrators tough!)\n\nIf both repost methods are disabled, `tootgroup.py` will still run but not repost\nanything.\n\nBut how to simply use it?\n-------------------------\n\n1. Write a message that should be boosted by the group: Just inlude\n   \"!@group_name\" wherever you want.\n\n2. Write a message that should appear as a new post from the group:\n   Put \"!@group_name\" at the very beginning of a direct/private message.\n   EXAMPLE: \"!@mastodon HERE BE THE MESSAGE TEXT\"\n\nHow to set up?\n--------------\n\nThe easiest way to install `tootgroup.py` is via PyPI, the Python Package Index.\nUse `pip3 install tootgroup.py` to install it as well as all its dependencies.\n\nIt is also possible to download the script manually from the GitHub repository at\n<https://github.com/oe4dns/tootgroup.py> In that case the necessary dependencies\nhave to be provided too:\n\n`tootgroup.py` requires <https://github.com/halcy/Mastodon.py> as well as\n<https://github.com/ActiveState/appdirs> to run. Install them via your\noperating system's package manager, pip or even manually.\n\n`tootgroup.py` will guide you through setup by asking all information it needs\nwhen you run it from the commandline for the first time. Being somewhat\ncomfortable with Python scripting and the commandline in general might help\nif difficulties should appear.\n\n1. You need an account on any Mastodon instance/server that will act as your\n   group account. Think about if you should mark it as a \"Bot\".\n\n2. Run `tootgroup.py` from the command line.\n\n3. `tootgroup.py` will ask you for all needed setup data and try to get them\n   right by connecting to the Mastodon server. If it cannot do so, it will\n   tell you and you can retry. When successful, `tootgroup.py` will write the\n   configuration to its tootgroup.conf file and read it from there next time\n   you run the script.\n\n   The place for storing configuration is operating system dependent but will be\n   shown during the first-run/setup phase. A local tootgroup.conf file placed\n   next to the `tootgroup.py` script will override these settings though and can\n   be used for development or testing purposes.\n\n4. If you want to set up `tootgroup.py` for more than one group, you can run it\n   again while specifying the \"--group GROUP_HANDLE\" flag. This will then\n   generate an independent configuration that will be read each time you call\n   `tootgroup.py` using this name. If you don't specify any group name, the\n   handle \"default\" is created and used automatically\n\n5. Test the funcionality by sending direct messages and \"!@mentions\" to your\n   group while running `tootgroup.py` manually. See if things work as expected.\n   The script will print an according message after each successful run.\n   If everything works, run the script periodically via cron and enjoy\n   groop-tooting!\n\n   Here is an example for a crontab entry that runs `tootgroup.py` every two minutes:\n\n   `*/2 * * * * /path/to/tootgroup.py --group default`\n\n6. There is also the \"-d\" or \"--dry-run\" commandline flag that prevents any toots.\n   You can use it to test what would be posted by the script.\n\n   Use \"-h\" or \"--help\" for more information about all available options\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oe4dns/tootgroup.py", "keywords": "mastodon toot group fediverse", "license": "", "maintainer": "", "maintainer_email": "", "name": "tootgroup.py", "package_url": "https://pypi.org/project/tootgroup.py/", "platform": "", "project_url": "https://pypi.org/project/tootgroup.py/", "project_urls": {"Homepage": "https://github.com/oe4dns/tootgroup.py"}, "release_url": "https://pypi.org/project/tootgroup.py/1.1.0/", "requires_dist": ["Mastodon.py", "appdirs"], "requires_python": "", "summary": "Emulate group accounts on Mastodon", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>tootgroup.py</code> - emulate group accounts on Mastodon</h1>\n<h2>What is this?</h2>\n<p>Some social media platforms allow groups of users to post into a unified \"group\"\ntimeline/instance/whatever you want to call it. This is currently not possible\non Mastodon without giving all members full login credentials to a group.\n<code>tootgroup.py</code> is an attempt to solve this specific use case.</p>\n<h2>How does it work?</h2>\n<p><code>tootgroup.py</code> has to be set up on a computer and run periodically. It reads the\nnotifications from the Mastodon account it is connected to and filters them for\nmessages to repost. There are two methods of creating a group post. One or both\nof them can be enabled during the setup procedure.</p>\n<ol>\n<li>\n<p>Public mentions of group members are boosted if they preceed the group's\nname with an Exclamation Mark like \"!@mastodon\"</p>\n</li>\n<li>\n<p><code>tootgroup.py</code> can also look for direct messages from group members. If the\ngroup is @mentioned at the very beginning, The message will be reposted as\na new public toot originating directly from the group account. The status\ntext as well as media files are included. The originating user will not be\nshown publicly. (It can still be seen by all group and instance\nadministrators tough!)</p>\n</li>\n</ol>\n<p>If both repost methods are disabled, <code>tootgroup.py</code> will still run but not repost\nanything.</p>\n<h2>But how to simply use it?</h2>\n<ol>\n<li>\n<p>Write a message that should be boosted by the group: Just inlude\n\"!@group_name\" wherever you want.</p>\n</li>\n<li>\n<p>Write a message that should appear as a new post from the group:\nPut \"!@group_name\" at the very beginning of a direct/private message.\nEXAMPLE: \"!@mastodon HERE BE THE MESSAGE TEXT\"</p>\n</li>\n</ol>\n<h2>How to set up?</h2>\n<p>The easiest way to install <code>tootgroup.py</code> is via PyPI, the Python Package Index.\nUse <code>pip3 install tootgroup.py</code> to install it as well as all its dependencies.</p>\n<p>It is also possible to download the script manually from the GitHub repository at\n<a href=\"https://github.com/oe4dns/tootgroup.py\" rel=\"nofollow\">https://github.com/oe4dns/tootgroup.py</a> In that case the necessary dependencies\nhave to be provided too:</p>\n<p><code>tootgroup.py</code> requires <a href=\"https://github.com/halcy/Mastodon.py\" rel=\"nofollow\">https://github.com/halcy/Mastodon.py</a> as well as\n<a href=\"https://github.com/ActiveState/appdirs\" rel=\"nofollow\">https://github.com/ActiveState/appdirs</a> to run. Install them via your\noperating system's package manager, pip or even manually.</p>\n<p><code>tootgroup.py</code> will guide you through setup by asking all information it needs\nwhen you run it from the commandline for the first time. Being somewhat\ncomfortable with Python scripting and the commandline in general might help\nif difficulties should appear.</p>\n<ol>\n<li>\n<p>You need an account on any Mastodon instance/server that will act as your\ngroup account. Think about if you should mark it as a \"Bot\".</p>\n</li>\n<li>\n<p>Run <code>tootgroup.py</code> from the command line.</p>\n</li>\n<li>\n<p><code>tootgroup.py</code> will ask you for all needed setup data and try to get them\nright by connecting to the Mastodon server. If it cannot do so, it will\ntell you and you can retry. When successful, <code>tootgroup.py</code> will write the\nconfiguration to its tootgroup.conf file and read it from there next time\nyou run the script.</p>\n<p>The place for storing configuration is operating system dependent but will be\nshown during the first-run/setup phase. A local tootgroup.conf file placed\nnext to the <code>tootgroup.py</code> script will override these settings though and can\nbe used for development or testing purposes.</p>\n</li>\n<li>\n<p>If you want to set up <code>tootgroup.py</code> for more than one group, you can run it\nagain while specifying the \"--group GROUP_HANDLE\" flag. This will then\ngenerate an independent configuration that will be read each time you call\n<code>tootgroup.py</code> using this name. If you don't specify any group name, the\nhandle \"default\" is created and used automatically</p>\n</li>\n<li>\n<p>Test the funcionality by sending direct messages and \"!@mentions\" to your\ngroup while running <code>tootgroup.py</code> manually. See if things work as expected.\nThe script will print an according message after each successful run.\nIf everything works, run the script periodically via cron and enjoy\ngroop-tooting!</p>\n<p>Here is an example for a crontab entry that runs <code>tootgroup.py</code> every two minutes:</p>\n<p><code>*/2 * * * * /path/to/tootgroup.py --group default</code></p>\n</li>\n<li>\n<p>There is also the \"-d\" or \"--dry-run\" commandline flag that prevents any toots.\nYou can use it to test what would be posted by the script.</p>\n<p>Use \"-h\" or \"--help\" for more information about all available options</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6979824, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0ac50a5debdc62274dfd9571bcb945ab", "sha256": "1643f4b370fcc89cb37e8e97d0ca31522917c7bc39dbf4ca0a2e66a54aa4cde3"}, "downloads": -1, "filename": "tootgroup.py-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0ac50a5debdc62274dfd9571bcb945ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22213, "upload_time": "2019-04-25T22:42:37", "upload_time_iso_8601": "2019-04-25T22:42:37.254871Z", "url": "https://files.pythonhosted.org/packages/73/89/c9440992de9d0ff2af361452365e613ade59d300a209fe9c0ec86c7bfbff/tootgroup.py-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e88270f9b5b89df9871d0c678b91467", "sha256": "71c385009276d949cfa11bf374fe1d3a6b461fabe3d9ec3507caded1de79f921"}, "downloads": -1, "filename": "tootgroup.py-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3e88270f9b5b89df9871d0c678b91467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11125, "upload_time": "2019-04-25T22:42:42", "upload_time_iso_8601": "2019-04-25T22:42:42.015001Z", "url": "https://files.pythonhosted.org/packages/0b/0f/d19640f833bba19eb4b0818fa44d08ba5dbe6ad014bfc105fd2fd8360d47/tootgroup.py-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7497d6d8da5edfb5bd798162f53c8ab4", "sha256": "44962350a9069fec34d784d5b8a278997a36049b48046186a0b0b85b9e9ce139"}, "downloads": -1, "filename": "tootgroup.py-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7497d6d8da5edfb5bd798162f53c8ab4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22725, "upload_time": "2020-04-08T18:45:05", "upload_time_iso_8601": "2020-04-08T18:45:05.512400Z", "url": "https://files.pythonhosted.org/packages/ab/b1/97d2557b256b20b561ffc6c94c04638ca47aa62afe135747f3e755b1396b/tootgroup.py-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebf1b73db0202c57bd95461c9d8d5f50", "sha256": "a9cefcbfce93cc4c9089642e3c9f0424fb5cd2d9c9e6e5cdf8b2fbc0390cf828"}, "downloads": -1, "filename": "tootgroup.py-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ebf1b73db0202c57bd95461c9d8d5f50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12267, "upload_time": "2020-04-08T18:45:12", "upload_time_iso_8601": "2020-04-08T18:45:12.367562Z", "url": "https://files.pythonhosted.org/packages/0c/0b/72c4ff776fad74371ddf9b257cc990c871dc2a53845f81cbee77f9b67f8b/tootgroup.py-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7497d6d8da5edfb5bd798162f53c8ab4", "sha256": "44962350a9069fec34d784d5b8a278997a36049b48046186a0b0b85b9e9ce139"}, "downloads": -1, "filename": "tootgroup.py-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7497d6d8da5edfb5bd798162f53c8ab4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22725, "upload_time": "2020-04-08T18:45:05", "upload_time_iso_8601": "2020-04-08T18:45:05.512400Z", "url": "https://files.pythonhosted.org/packages/ab/b1/97d2557b256b20b561ffc6c94c04638ca47aa62afe135747f3e755b1396b/tootgroup.py-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebf1b73db0202c57bd95461c9d8d5f50", "sha256": "a9cefcbfce93cc4c9089642e3c9f0424fb5cd2d9c9e6e5cdf8b2fbc0390cf828"}, "downloads": -1, "filename": "tootgroup.py-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ebf1b73db0202c57bd95461c9d8d5f50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12267, "upload_time": "2020-04-08T18:45:12", "upload_time_iso_8601": "2020-04-08T18:45:12.367562Z", "url": "https://files.pythonhosted.org/packages/0c/0b/72c4ff776fad74371ddf9b257cc990c871dc2a53845f81cbee77f9b67f8b/tootgroup.py-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:59 2020"}