{"info": {"author": "Yuvi Panda", "author_email": "yuvipanda@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Python Mediawiki API\n====================\n\nA very simple and direct wrapper around the Mediawiki API\n\nIntroduction\n------------\n\nThis library provides a very simple convenience wrapper around the `Mediawiki API <http://www.mediawiki.org/wiki/API>`_. It is meant to closely mirror the interface provided by `mw.Api <http://www.mediawiki.org/wiki/ResourceLoader/Default_modules#mediaWiki.Api>`_\n \nFeatures\n--------\n\nThe library allows you to call Mediawiki APIs without having to deal without dealing with network calls. It also has authentication support and a few convenience methods. \n\nNon Features\n------------\n\nThis is the anti-`mwclient <http://sourceforge.net/projects/mwclient/>`_. It does not add another layer for you to understand over the well `documented <http://en.wikipedia.org/w/api.php>`_ Mediawiki API, and it never will :)\n\nDocumentation\n-------------\n    MWApi\n    \n    class MWApi\n     |  Class representing a single API Session, with a single authenticated user.\n     |  \n     |  Useful Attributes:\n     |  tokens              - Contains an edittoken & watchtoken (if populateTokens() has been called)\n     |  is_authenticated    - Boolean indicating if the MWApi is sending authenticated requests\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, host, api_path='/w/api.php')\n     |      Create a MWApi instance\n     |      \n     |      Arguments:\n     |      host        - Host to which to connect to. Must include http:// or https:// and no trailing slash\n     |      api_path    - Url to api.php on the host. Must start with /\n     |  \n     |  get(self, params)\n     |      Makes an API request with the GET method\n     |      \n     |      Arguments:\n     |      params - Parameters to send to the API. Varies depending on the action to be performed.\n     |  \n     |  login(self, username, password)\n     |      Authenticates with the given credentials and logs in the user for the session. \n     |      All further requests sent from this MWApi object will be signed as said user.\n     |      \n     |      Arguments:\n     |      username - The username of the user to be authenticated\n     |      password - The password of the user to be authenticated\n     |      \n     |      Throws:\n     |      Throws an exception with (Message, Response) if Authentication fails\n     |      \n     |      Note: \n     |      Passwords are sent as plaintext. This is a limitation of the Mediawiki API.\n     |      Use a https host if you want your password to be secure\n     |  \n     |  populateTokens(self)\n     |      Populates the `tokens` attribute of the object with `edittoken` and `watchtoken`.\n     |      Requires that authentication has been performed already with `login()`\n     |  \n     |  post(self, params)\n     |      Makes an API request with the POST method\n     |      \n     |      Arguments:\n     |      params - Parameters to send to the API. Varies depending on the action to be performed.\n     |  \n     |  request(self, method, params)\n     |      Makes a request to the API and returns a dictionary containing the results\n     |      \n     |      Arguments:\n     |      method - GET or POST, depending on which API is being called\n     |      params - Parameters to send to the API. Varies depending on the action to be performed.\n     |  \n\n\nContact\n-------\n\nSupport requests and flames can be sent to me via several means.\n\nEmail: yuvipanda@gmail.com. Twitter: @yuvipanda. IRC: yuvipanda on FreeNode\n\nYou can file bugs `on Github <https://github.com/yuvipanda/python-mwapi/issues>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/yuvipanda/python-mwapi", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "python-mwapi", "package_url": "https://pypi.org/project/python-mwapi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-mwapi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/yuvipanda/python-mwapi"}, "release_url": "https://pypi.org/project/python-mwapi/0.2/", "requires_dist": null, "requires_python": null, "summary": "Simple wrapper for the Mediawiki API", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A very simple and direct wrapper around the Mediawiki API</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This library provides a very simple convenience wrapper around the <a href=\"http://www.mediawiki.org/wiki/API\" rel=\"nofollow\">Mediawiki API</a>. It is meant to closely mirror the interface provided by <a href=\"http://www.mediawiki.org/wiki/ResourceLoader/Default_modules#mediaWiki.Api\" rel=\"nofollow\">mw.Api</a></p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>The library allows you to call Mediawiki APIs without having to deal without dealing with network calls. It also has authentication support and a few convenience methods.</p>\n</div>\n<div id=\"non-features\">\n<h2>Non Features</h2>\n<p>This is the anti-<a href=\"http://sourceforge.net/projects/mwclient/\" rel=\"nofollow\">mwclient</a>. It does not add another layer for you to understand over the well <a href=\"http://en.wikipedia.org/w/api.php\" rel=\"nofollow\">documented</a> Mediawiki API, and it never will :)</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<blockquote>\n<p>MWApi</p>\n<dl>\n<dt>class MWApi</dt>\n<dd><div>\n<div>Class representing a single API Session, with a single authenticated user.</div>\n<div><br></div>\n<div>Useful Attributes:</div>\n<div>tokens              - Contains an edittoken &amp; watchtoken (if populateTokens() has been called)</div>\n<div>is_authenticated    - Boolean indicating if the MWApi is sending authenticated requests</div>\n<div><br></div>\n<div>Methods defined here:</div>\n<div><br></div>\n<div>__init__(self, host, api_path=\u2019/w/api.php\u2019)</div>\n<div>\n<div>Create a MWApi instance</div>\n<div><br></div>\n<div>Arguments:</div>\n<div>host        - Host to which to connect to. Must include <a href=\"http://\" rel=\"nofollow\">http://</a> or <a href=\"https://\" rel=\"nofollow\">https://</a> and no trailing slash</div>\n<div>api_path    - Url to api.php on the host. Must start with /</div>\n<div><br></div>\n</div>\n<div>get(self, params)</div>\n<div>\n<div>Makes an API request with the GET method</div>\n<div><br></div>\n<div>Arguments:</div>\n<div>params - Parameters to send to the API. Varies depending on the action to be performed.</div>\n<div><br></div>\n</div>\n<div>login(self, username, password)</div>\n<div>\n<div>Authenticates with the given credentials and logs in the user for the session.</div>\n<div>All further requests sent from this MWApi object will be signed as said user.</div>\n<div><br></div>\n<div>Arguments:</div>\n<div>username - The username of the user to be authenticated</div>\n<div>password - The password of the user to be authenticated</div>\n<div><br></div>\n<div>Throws:</div>\n<div>Throws an exception with (Message, Response) if Authentication fails</div>\n<div><br></div>\n<div>Note:</div>\n<div>Passwords are sent as plaintext. This is a limitation of the Mediawiki API.</div>\n<div>Use a https host if you want your password to be secure</div>\n<div><br></div>\n</div>\n<div>populateTokens(self)</div>\n<div>\n<div>Populates the <cite>tokens</cite> attribute of the object with <cite>edittoken</cite> and <cite>watchtoken</cite>.</div>\n<div>Requires that authentication has been performed already with <cite>login()</cite></div>\n<div><br></div>\n</div>\n<div>post(self, params)</div>\n<div>\n<div>Makes an API request with the POST method</div>\n<div><br></div>\n<div>Arguments:</div>\n<div>params - Parameters to send to the API. Varies depending on the action to be performed.</div>\n<div><br></div>\n</div>\n<div>request(self, method, params)</div>\n<div>\n<div>Makes a request to the API and returns a dictionary containing the results</div>\n<div><br></div>\n<div>Arguments:</div>\n<div>method - GET or POST, depending on which API is being called</div>\n<div>params - Parameters to send to the API. Varies depending on the action to be performed.</div>\n<div><br></div>\n</div>\n</div>\n</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Support requests and flames can be sent to me via several means.</p>\n<p>Email: <a href=\"mailto:yuvipanda%40gmail.com\">yuvipanda<span>@</span>gmail<span>.</span>com</a>. Twitter: @yuvipanda. IRC: yuvipanda on FreeNode</p>\n<p>You can file bugs <a href=\"https://github.com/yuvipanda/python-mwapi/issues\" rel=\"nofollow\">on Github</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6446475, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2959085002ef9d4dfbf4978dbba544c7", "sha256": "5788825cc5cfb9ed843176545a6547584796d7ace4e9e9cb3362cfc4412223db"}, "downloads": -1, "filename": "python-mwapi-0.1.tar.gz", "has_sig": false, "md5_digest": "2959085002ef9d4dfbf4978dbba544c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3728, "upload_time": "2012-04-02T03:01:33", "upload_time_iso_8601": "2012-04-02T03:01:33.180034Z", "url": "https://files.pythonhosted.org/packages/6e/97/ff67c14190b115ef17756270c2b4c1ee1ed307bdcd2bbaf620ab7b3627a3/python-mwapi-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "11ae02e3b9adbaaf74624e663dee1397", "sha256": "b69b7b397b67fb59e10238233c932c9eb435f4db24ab51dca45ceed396344f33"}, "downloads": -1, "filename": "python-mwapi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "11ae02e3b9adbaaf74624e663dee1397", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3792, "upload_time": "2012-04-02T05:58:17", "upload_time_iso_8601": "2012-04-02T05:58:17.261887Z", "url": "https://files.pythonhosted.org/packages/f1/02/6aa1c3d55fe955fc78ae4759e32f9a715e049a0f46eeff5a4b697e01eb02/python-mwapi-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e5bd81b38c974efcb4f2b05a100430bf", "sha256": "4655aad95430b54c22a3219716813130e01740eb4454df0851d6c4040a7acf46"}, "downloads": -1, "filename": "python-mwapi-0.2.tar.gz", "has_sig": false, "md5_digest": "e5bd81b38c974efcb4f2b05a100430bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4282, "upload_time": "2013-01-07T02:18:08", "upload_time_iso_8601": "2013-01-07T02:18:08.573932Z", "url": "https://files.pythonhosted.org/packages/46/55/fe6245d77fb2dba4db3c3b6c57ffd35a63edef4b928fdf2ddd163c72e30b/python-mwapi-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5bd81b38c974efcb4f2b05a100430bf", "sha256": "4655aad95430b54c22a3219716813130e01740eb4454df0851d6c4040a7acf46"}, "downloads": -1, "filename": "python-mwapi-0.2.tar.gz", "has_sig": false, "md5_digest": "e5bd81b38c974efcb4f2b05a100430bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4282, "upload_time": "2013-01-07T02:18:08", "upload_time_iso_8601": "2013-01-07T02:18:08.573932Z", "url": "https://files.pythonhosted.org/packages/46/55/fe6245d77fb2dba4db3c3b6c57ffd35a63edef4b928fdf2ddd163c72e30b/python-mwapi-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:26 2020"}