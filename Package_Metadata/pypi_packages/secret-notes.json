{"info": {"author": "Alice Pote", "author_email": "alice.writes.wrongs@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "#Secrets\n\n```\n  _________                            __\n /   _____/ ____   ___________   _____/  |_  ______\n \\_____  \\_/ __ \\_/ ___\\_  __ \\_/ __ \\   __\\/  ___/\n /        \\  ___/\\  \\___|  | \\/\\  ___/|  |  \\___ \\\n/_______  /\\___  >\\___  >__|    \\___  >__| /____  >\n        \\/     \\/     \\/            \\/          \\/\n```\n\n\nSecrets is a little Python wrapper around gpg to automate encrypted\nnotekeeping. You need to already have a gpg key (I wrote a [guide to\ngpg](https://github.com/aliceriot/gpg_workshop/blob/master/gpg.markdown)\nif you haven't got one) and you need to have your gpg configured to use\ngpg-agent (allows the key to be unlocked and stay open for a bit).\n\n##Installing\n\nThere's only one dependency right now, the\n[python-gnupg](https://pythonhosted.org/python-gnupg/) module. If you're\nnot on Debian or Ubuntu do this:\n\n```\npip install -r requirements.txt\n```\n\nand then add `secrets.py` to your path somehow (you'll also need to add\n`#!/usr/bin/python` to the top). If you're a Debian user you can do\n\n```\nsudo apt-get install dh-virtualenv\nsudo dpkg-buildpackage -us -uc\n```\n\nin the directory into which you cloned this repo, and you'll get a nice\ntasty Debian package you can install! Great! As a reminder you can then\ndo:\n\n```\nsudo dpkg --install ../secrets_0.1_amd64.deb\n```\n\nand that's it!\n\n##Keeping super secret notes!\n\nTo start off you should do\n\n```\nsecrets init\n```\n\nto configure the program. Then to list your notes:\n\n```\nsecrets list\n```\n\nto see your secrets (titles only).\n\nTo start a new note called foo:\n\n```\nsecrets new foo\n```\n\nSecrets will open the notes in your `$EDITOR`. If you haven't set that\nbefore it's probably Vim or nano?\n\n\nTo get rid of useless secrets (like foo) do:\n\n```\nsecrets delete foo\n```\n\nTo put the contents of foo on `stdout` try:\n\n```\nsecrets echo foo\n```\n\nand finally, do:\n\n```\nsecrets foo\n```\n\nto edit an existing note foo. Nice!\n\n##Warnings and disclaimers and blah\n\nI'm not a cryptographer or security expert. This program certainly has\nsome security flaws. Don't use it if you adversary is more technically\nsophisticated than 'your roommate snooping through your recent documents'.\n\nIn particular I made several decisions which are not secure - the contents\nof the notes live in files in `/tmp` in plaintext while you're editing\nthem. The whole notes database is also in memory when the program is\nrunning. Oops!\n\nHappy secreting!\n\n\n###TODO", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aliceriot/secrets", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "secret-notes", "package_url": "https://pypi.org/project/secret-notes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/secret-notes/", "project_urls": {"Homepage": "https://github.com/aliceriot/secrets"}, "release_url": "https://pypi.org/project/secret-notes/0.1/", "requires_dist": null, "requires_python": null, "summary": "store your secrets using GPG!", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            #Secrets<br><br>```<br>  _________                            __<br> /   _____/ ____   ___________   _____/  |_  ______<br> \\_____  \\_/ __ \\_/ ___\\_  __ \\_/ __ \\   __\\/  ___/<br> /        \\  ___/\\  \\___|  | \\/\\  ___/|  |  \\___ \\<br>/_______  /\\___  &gt;\\___  &gt;__|    \\___  &gt;__| /____  &gt;<br>        \\/     \\/     \\/            \\/          \\/<br>```<br><br><br>Secrets is a little Python wrapper around gpg to automate encrypted<br>notekeeping. You need to already have a gpg key (I wrote a [guide to<br>gpg](https://github.com/aliceriot/gpg_workshop/blob/master/gpg.markdown)<br>if you haven't got one) and you need to have your gpg configured to use<br>gpg-agent (allows the key to be unlocked and stay open for a bit).<br><br>##Installing<br><br>There's only one dependency right now, the<br>[python-gnupg](https://pythonhosted.org/python-gnupg/) module. If you're<br>not on Debian or Ubuntu do this:<br><br>```<br>pip install -r requirements.txt<br>```<br><br>and then add `secrets.py` to your path somehow (you'll also need to add<br>`#!/usr/bin/python` to the top). If you're a Debian user you can do<br><br>```<br>sudo apt-get install dh-virtualenv<br>sudo dpkg-buildpackage -us -uc<br>```<br><br>in the directory into which you cloned this repo, and you'll get a nice<br>tasty Debian package you can install! Great! As a reminder you can then<br>do:<br><br>```<br>sudo dpkg --install ../secrets_0.1_amd64.deb<br>```<br><br>and that's it!<br><br>##Keeping super secret notes!<br><br>To start off you should do<br><br>```<br>secrets init<br>```<br><br>to configure the program. Then to list your notes:<br><br>```<br>secrets list<br>```<br><br>to see your secrets (titles only).<br><br>To start a new note called foo:<br><br>```<br>secrets new foo<br>```<br><br>Secrets will open the notes in your `$EDITOR`. If you haven't set that<br>before it's probably Vim or nano?<br><br><br>To get rid of useless secrets (like foo) do:<br><br>```<br>secrets delete foo<br>```<br><br>To put the contents of foo on `stdout` try:<br><br>```<br>secrets echo foo<br>```<br><br>and finally, do:<br><br>```<br>secrets foo<br>```<br><br>to edit an existing note foo. Nice!<br><br>##Warnings and disclaimers and blah<br><br>I'm not a cryptographer or security expert. This program certainly has<br>some security flaws. Don't use it if you adversary is more technically<br>sophisticated than 'your roommate snooping through your recent documents'.<br><br>In particular I made several decisions which are not secure - the contents<br>of the notes live in files in `/tmp` in plaintext while you're editing<br>them. The whole notes database is also in memory when the program is<br>running. Oops!<br><br>Happy secreting!<br><br><br>###TODO\n          </div>"}, "last_serial": 1656874, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e8aa2978908a5cf4e3cbda2beeb84d62", "sha256": "f50398bf270efb9ff87f62833ce7b90cd501121f71d2ddffc5ec9beaf77c58de"}, "downloads": -1, "filename": "secret_notes-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e8aa2978908a5cf4e3cbda2beeb84d62", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6127, "upload_time": "2015-07-30T15:07:29", "upload_time_iso_8601": "2015-07-30T15:07:29.434562Z", "url": "https://files.pythonhosted.org/packages/c9/18/93eb193cc1073b9c8e762b077c521e7e32fef1be352b9d1953fbcdf08830/secret_notes-0.1-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8aa2978908a5cf4e3cbda2beeb84d62", "sha256": "f50398bf270efb9ff87f62833ce7b90cd501121f71d2ddffc5ec9beaf77c58de"}, "downloads": -1, "filename": "secret_notes-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e8aa2978908a5cf4e3cbda2beeb84d62", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6127, "upload_time": "2015-07-30T15:07:29", "upload_time_iso_8601": "2015-07-30T15:07:29.434562Z", "url": "https://files.pythonhosted.org/packages/c9/18/93eb193cc1073b9c8e762b077c521e7e32fef1be352b9d1953fbcdf08830/secret_notes-0.1-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:58 2020"}