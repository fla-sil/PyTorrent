{"info": {"author": "Patrick Ancillotti", "author_email": "patrick@eefy.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Logging"], "description": "Project JSONkLog\n================\n\nThe goal of this library is to provide a simple formatter, and handlers for\nstandard python logging libraries to deal with JSON output in a sort of\n\"set it and forget it\" methodology that python logging currently provides.\n\nFormatters :\n++++++++++++\n\nCurrently there are two formatters:\n\n        * JSONFormatter\n        * JSONFormatterSimple\n\nEach of the formatters processes the standard python logging messages into JSON\nhowever the \"Simple\" library provides a limited output including only 3 key elements\nand the mysterious 4th element \"Extras\"\n\nPlease note that \"extras\" as a dictionary requires the content to be nested under\nthe \"extra\" key within the dictionary\n\nFor examples, please see example_formatter.py within the source tree at:\n\n        * http://www.github.com/neogenix/jsonklog/examples\n\nHandlers :\n++++++++++\n\nCurrently there are two handlers, which require JSONFormatter, or JSONFormatterSimple\nto have been used :\n\n    * MongoDBHandler\n    * ElasticSearchHandler\n\nEach of the handlers can process the standard JSON messages from the included JSON\nformatting libraries, and can have different destinations specified as follows:\n\nMongoDBHandler :\n----------------\n\nThis handler speaks MongoDB (using 'pymongo'), and can take the following arguments:\n\n    * host - The destination host / ip of the MongoDB server\n    * port - The destination port of the MongoDB server\n    * db - The destination database to send messages to\n    * collection - The destination collection to send messages to\n\n* for more on MongoDB see the following URL: http://www.mongodb.org/\n\nElasticSearchHandler :\n----------------------\n\nThis handler speaks ElasticSearch (using 'requests'), and can take the following arguments:\n\n    * host - The destination host / ip of the ElasticSearch server\n    * port - The destination port of the ElasticSearch server\n    * index - The destination index to send messages to\n    * doc_type - The destination doc_type to send messages to\n\n* for more on ElasticSearch see the following URL: http://www.elasticsearch.org/\n\nNote :\n++++++\n\nTo format your JSON into \"human readable whatsits\" ensure your handler outputs\nto stdout, and then pipe through the node-json library ('json'), installed as per:\n\n    * npm install -g json\n\nThis is not a requirement, but rather what I'm using to do my testing ;)\n\n\nHistory\n=========\n\n0.15.0 (2012-06-25)\n+++++++++++++++++++\n* Added additional examples, and moved them to /examples\n* Added more documentation\n* Reformatted handlers to make them easier to work with\n* Made handlers depend on json formatters\n\n0.10.0 (2012-06-19)\n+++++++++++++++++++\n* Initial release of MongoDBHandler, and ElasticSearchHandler\n* Initial documentation around Handlers.\n* Example code added for handler.py\n\n0.05.0 (2012-06-14)\n+++++++++++++++++++\n* Initial release of JSONFormatter, and JSONFormatterSimple\n* Initial documentation added\n* Example code added for formatter.py\n\n0.01.0 (2012-06-10)\n+++++++++++++++++++\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/neogenix/jsonklog", "keywords": "json logging", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "jsonklog", "package_url": "https://pypi.org/project/jsonklog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jsonklog/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.github.com/neogenix/jsonklog"}, "release_url": "https://pypi.org/project/jsonklog/0.15.0/", "requires_dist": null, "requires_python": null, "summary": "JSON Logging Library with Python", "version": "0.15.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"project-jsonklog\">\n<h2>Project JSONkLog</h2>\n<p>The goal of this library is to provide a simple formatter, and handlers for\nstandard python logging libraries to deal with JSON output in a sort of\n\u201cset it and forget it\u201d methodology that python logging currently provides.</p>\n<div id=\"formatters\">\n<h3>Formatters :</h3>\n<p>Currently there are two formatters:</p>\n<blockquote>\n<ul>\n<li>JSONFormatter</li>\n<li>JSONFormatterSimple</li>\n</ul>\n</blockquote>\n<p>Each of the formatters processes the standard python logging messages into JSON\nhowever the \u201cSimple\u201d library provides a limited output including only 3 key elements\nand the mysterious 4th element \u201cExtras\u201d</p>\n<p>Please note that \u201cextras\u201d as a dictionary requires the content to be nested under\nthe \u201cextra\u201d key within the dictionary</p>\n<p>For examples, please see example_formatter.py within the source tree at:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.github.com/neogenix/jsonklog/examples\" rel=\"nofollow\">http://www.github.com/neogenix/jsonklog/examples</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"handlers\">\n<h3>Handlers :</h3>\n<p>Currently there are two handlers, which require JSONFormatter, or JSONFormatterSimple\nto have been used :</p>\n<blockquote>\n<ul>\n<li>MongoDBHandler</li>\n<li>ElasticSearchHandler</li>\n</ul>\n</blockquote>\n<p>Each of the handlers can process the standard JSON messages from the included JSON\nformatting libraries, and can have different destinations specified as follows:</p>\n<div id=\"mongodbhandler\">\n<h4>MongoDBHandler :</h4>\n<p>This handler speaks MongoDB (using \u2018pymongo\u2019), and can take the following arguments:</p>\n<blockquote>\n<ul>\n<li>host - The destination host / ip of the MongoDB server</li>\n<li>port - The destination port of the MongoDB server</li>\n<li>db - The destination database to send messages to</li>\n<li>collection - The destination collection to send messages to</li>\n</ul>\n</blockquote>\n<ul>\n<li>for more on MongoDB see the following URL: <a href=\"http://www.mongodb.org/\" rel=\"nofollow\">http://www.mongodb.org/</a></li>\n</ul>\n</div>\n<div id=\"elasticsearchhandler\">\n<h4>ElasticSearchHandler :</h4>\n<p>This handler speaks ElasticSearch (using \u2018requests\u2019), and can take the following arguments:</p>\n<blockquote>\n<ul>\n<li>host - The destination host / ip of the ElasticSearch server</li>\n<li>port - The destination port of the ElasticSearch server</li>\n<li>index - The destination index to send messages to</li>\n<li>doc_type - The destination doc_type to send messages to</li>\n</ul>\n</blockquote>\n<ul>\n<li>for more on ElasticSearch see the following URL: <a href=\"http://www.elasticsearch.org/\" rel=\"nofollow\">http://www.elasticsearch.org/</a></li>\n</ul>\n</div>\n</div>\n<div id=\"note\">\n<h3>Note :</h3>\n<p>To format your JSON into \u201chuman readable whatsits\u201d ensure your handler outputs\nto stdout, and then pipe through the node-json library (\u2018json\u2019), installed as per:</p>\n<blockquote>\n<ul>\n<li>npm install -g json</li>\n</ul>\n</blockquote>\n<p>This is not a requirement, but rather what I\u2019m using to do my testing ;)</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.15.0 (2012-06-25)</h3>\n<ul>\n<li>Added additional examples, and moved them to /examples</li>\n<li>Added more documentation</li>\n<li>Reformatted handlers to make them easier to work with</li>\n<li>Made handlers depend on json formatters</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.10.0 (2012-06-19)</h3>\n<ul>\n<li>Initial release of MongoDBHandler, and ElasticSearchHandler</li>\n<li>Initial documentation around Handlers.</li>\n<li>Example code added for handler.py</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.05.0 (2012-06-14)</h3>\n<ul>\n<li>Initial release of JSONFormatter, and JSONFormatterSimple</li>\n<li>Initial documentation added</li>\n<li>Example code added for formatter.py</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.01.0 (2012-06-10)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 793824, "releases": {"0.15.0": [{"comment_text": "", "digests": {"md5": "9a9632a1d897ebab52327cf47bd3cba6", "sha256": "86eaaac485663c4c99f02cac6a173df5b1174e1cefd7d6d71c1617591afed86d"}, "downloads": -1, "filename": "jsonklog-0.15.0.tar.gz", "has_sig": false, "md5_digest": "9a9632a1d897ebab52327cf47bd3cba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8390, "upload_time": "2012-06-26T06:52:19", "upload_time_iso_8601": "2012-06-26T06:52:19.353062Z", "url": "https://files.pythonhosted.org/packages/83/c6/8456795bbf9c5ba830b55de0755c19a5f8814966dc33d429f504961b7fc4/jsonklog-0.15.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a9632a1d897ebab52327cf47bd3cba6", "sha256": "86eaaac485663c4c99f02cac6a173df5b1174e1cefd7d6d71c1617591afed86d"}, "downloads": -1, "filename": "jsonklog-0.15.0.tar.gz", "has_sig": false, "md5_digest": "9a9632a1d897ebab52327cf47bd3cba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8390, "upload_time": "2012-06-26T06:52:19", "upload_time_iso_8601": "2012-06-26T06:52:19.353062Z", "url": "https://files.pythonhosted.org/packages/83/c6/8456795bbf9c5ba830b55de0755c19a5f8814966dc33d429f504961b7fc4/jsonklog-0.15.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:46 2020"}