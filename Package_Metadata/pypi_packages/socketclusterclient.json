{"info": {"author": "Sachin Shinde", "author_email": "sachinshinde7676@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# socketcluster-client-python\nRefer examples for more details :\n\nOverview\n--------\nThis client provides following functionality\n\n- Easy to setup and use\n- Can be used for extensive unit-testing of all server side functions\n- Support for emitting and listening to remote events\n- Automatic reconnection\n- Pub/sub\n- Authentication (JWT)\n- Support for python2.x.x / python3.x.x\n\nTo install use\n```python\n    sudo pip install socketclusterclient\n```\n\nDescription\n-----------\nCreate instance of `Socket` class by passing url of socketcluster-server end-point \n\n```python\n    //Create a socket instance\n    socket = Socketcluster.socket(\"ws://localhost:8000/socketcluster/\") \n\n```\n**Important Note** : Default url to socketcluster end-point is always *ws://somedomainname.com/socketcluster/*.\n\n#### Registering basic listeners\n\nDifferent functions are given as an argument to register listeners\n\n```python\n        from socketclusterclient import Socketcluster\n        import logging\n\n        logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)\n\n\n        def onconnect(socket):\n            logging.info(\"on connect got called\")\n\n\n        def ondisconnect(socket):\n            logging.info(\"on disconnect got called\")\n\n\n        def onConnectError(socket, error):\n            logging.info(\"On connect error got called\")\n\n\n        def onSetAuthentication(socket, token):\n            logging.info(\"Token received \" + token)\n            socket.setAuthtoken(token)\n\n\n        def onAuthentication(socket, isauthenticated):\n            logging.info(\"Authenticated is \" + str(isauthenticated))\n\n\n        if __name__ == \"__main__\":\n            socket = Socketcluster.socket(\"ws://localhost:8000/socketcluster/\")\n            socket.setBasicListener(onconnect, ondisconnect, onConnectError)\n            socket.setAuthenticationListener(onSetAuthentication, onAuthentication)\n            socket.connect()\n```\n\n#### Connecting to server\n\n- For connecting to server:\n\n```python\n    //This will send websocket handshake request to socketcluster-server\n    socket.connect();\n```\n\n\n- By default reconnection to server is disabled (since latest release) , to enable it and configure delay for connection\n\n```python\n    //This will set automatic-reconnection to server with delay of 2 seconds and repeating it for infinitely\n   socket.setdelay(2)\n   socket.setreconnection(True)\n   socket.connect();\n```\n\n- By default logging of messages in disabled (since latest release), to enable it\n\n```python\n   socket.enablelogger(True)\n```\n\nEmitting and listening to events\n--------------------------------\n#### Event emitter\n\n- eventname is name of event and message can be String, boolean, int or JSON-object\n\n```python\n\n    socket.emit(eventname,message);\n\n    # socket.emit(\"chat\", \"Hi\")\n```\n\n- To send event with acknowledgement\n\n```python\n\n    socket.emitack(\"chat\", \"Hi\", ack)  \n\n    def ack(eventname, error, object):\n        print \"Got ack data \" + object + \" and error \" + error + \" and eventname is \" + eventname\n```\n\n#### Event Listener\n\n- For listening to events :\n\nThe object received can be String, Boolean, Long or JSONObject.\n\n```python\n     # Receiver code without sending acknowledgement back\n     socket.on(\"ping\", message)\n\n     def message(eventname, object):\n         print \"Got data \" + object + \" from eventname \" + eventname\n```\n\n- To send acknowledgement back to server\n\n```python\n    # Receiver code with ack\n    socket.onack(\"ping\", messsageack)\n\n    def messsageack(eventname, object, ackmessage):\n        print \"Got data \" + object + \" from eventname \" + eventname\n        ackmessage(\"this is error\", \"this is data\")\n\n```\n\nImplementing Pub-Sub via channels\n---------------------------------\n\n#### Creating channel\n\n- For creating and subscribing to channels:\n\n```python\n\n    # without acknowledgement\n    socket.subscribe('yell')\n\n    #with acknowledgement\n    socket.subscribeack('yell', suback)\n\n    def suback(channel, error, object):\n        if error is '':\n            print \"Subscribed successfully to channel \" + channel\n```\n\n- For getting list of created channels :\n\n```python\n        channels = socket.getsubscribedchannels()\n\n``` \n\n\n\n\n\n#### Publishing event on channel\n\n- For publishing event :\n\n```python\n\n       # without acknowledgement\n       socket.publish('yell', 'Hi dudies')\n\n       #with acknowledgement\n       socket.publishack('yell', 'Hi dudies', puback)\n\n       def puback(channel, error, object):\n           if error is '':\n               print \"Publish sent successfully to channel \" + channel\n``` \n\n#### Listening to channel\n\n- For listening to channel event :\n\n```python\n\n        socket.onchannel('yell', channelmessage)\n\n        def channelmessage(key, object):\n            print \"Got data \" + object + \" from key \" + key\n\n``` \n\n#### Un-subscribing to channel\n\n```python\n         # without acknowledgement\n         socket.unsubscribe('yell')\n\n         # with acknowledgement\n         socket.unsubscribeack('yell', unsuback) \n\n         def unsuback(channel, error, object):\n              if error is '':\n                   print \"Unsubscribed to channel \" + channel \n```\n\n#### Disable SSL Certificate Verification\n\n```python\n        socket = Socketcluster.socket(\"wss://localhost:8000/socketcluster/\")\n        socket.connect(sslopt={\"cert_reqs\": ssl.CERT_NONE})\n```\n\n#### HTTP proxy\n\nSupport websocket access via http proxy. The proxy server must allow \"CONNECT\" method to websocket port. Default squid setting is \"ALLOWED TO CONNECT ONLY HTTPS PORT\".\n\n```python\n        socket = Socketcluster.socket(\"wss://localhost:8000/socketcluster/\")\n        socket.connect(http_proxy_host=\"proxy_host_name\", http_proxy_port=3128)\n```\n\n- To have custom settings over internal logger, you can get logger instance and apply necessary settings over it.\n```python\n        sclogger = socket.getlogger()\n```\nPlease follow logging tutorial over here : https://docs.python.org/3/howto/logging-cookbook.html\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/sacOO7/socketcluster-client-python/tarball/v1.3.6", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sacOO7/socketcluster-client-python", "keywords": "websocket,socketcluster,nodejs,client,socketclusterclient", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "socketclusterclient", "package_url": "https://pypi.org/project/socketclusterclient/", "platform": "", "project_url": "https://pypi.org/project/socketclusterclient/", "project_urls": {"Download": "https://github.com/sacOO7/socketcluster-client-python/tarball/v1.3.6", "Homepage": "https://github.com/sacOO7/socketcluster-client-python"}, "release_url": "https://pypi.org/project/socketclusterclient/1.3.6/", "requires_dist": ["websocket-client (<=0.48)"], "requires_python": ">=2.7", "summary": "Client library for socketcluster framework in nodejs", "version": "1.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>socketcluster-client-python</h1>\n<p>Refer examples for more details :</p>\n<h2>Overview</h2>\n<p>This client provides following functionality</p>\n<ul>\n<li>Easy to setup and use</li>\n<li>Can be used for extensive unit-testing of all server side functions</li>\n<li>Support for emitting and listening to remote events</li>\n<li>Automatic reconnection</li>\n<li>Pub/sub</li>\n<li>Authentication (JWT)</li>\n<li>Support for python2.x.x / python3.x.x</li>\n</ul>\n<p>To install use</p>\n<pre>    <span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">socketclusterclient</span>\n</pre>\n<h2>Description</h2>\n<p>Create instance of <code>Socket</code> class by passing url of socketcluster-server end-point</p>\n<pre>    <span class=\"o\">//</span><span class=\"n\">Create</span> <span class=\"n\">a</span> <span class=\"n\">socket</span> <span class=\"n\">instance</span>\n    <span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">Socketcluster</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"s2\">\"ws://localhost:8000/socketcluster/\"</span><span class=\"p\">)</span> \n</pre>\n<p><strong>Important Note</strong> : Default url to socketcluster end-point is always <em>ws://somedomainname.com/socketcluster/</em>.</p>\n<h4>Registering basic listeners</h4>\n<p>Different functions are given as an argument to register listeners</p>\n<pre>        <span class=\"kn\">from</span> <span class=\"nn\">socketclusterclient</span> <span class=\"kn\">import</span> <span class=\"n\">Socketcluster</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"si\">%(levelname)s</span><span class=\"s1\">:</span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n\n        <span class=\"k\">def</span> <span class=\"nf\">onconnect</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">):</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"on connect got called\"</span><span class=\"p\">)</span>\n\n\n        <span class=\"k\">def</span> <span class=\"nf\">ondisconnect</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">):</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"on disconnect got called\"</span><span class=\"p\">)</span>\n\n\n        <span class=\"k\">def</span> <span class=\"nf\">onConnectError</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">):</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"On connect error got called\"</span><span class=\"p\">)</span>\n\n\n        <span class=\"k\">def</span> <span class=\"nf\">onSetAuthentication</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">):</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Token received \"</span> <span class=\"o\">+</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n            <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">setAuthtoken</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n\n\n        <span class=\"k\">def</span> <span class=\"nf\">onAuthentication</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span> <span class=\"n\">isauthenticated</span><span class=\"p\">):</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Authenticated is \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">isauthenticated</span><span class=\"p\">))</span>\n\n\n        <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n            <span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">Socketcluster</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"s2\">\"ws://localhost:8000/socketcluster/\"</span><span class=\"p\">)</span>\n            <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">setBasicListener</span><span class=\"p\">(</span><span class=\"n\">onconnect</span><span class=\"p\">,</span> <span class=\"n\">ondisconnect</span><span class=\"p\">,</span> <span class=\"n\">onConnectError</span><span class=\"p\">)</span>\n            <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">setAuthenticationListener</span><span class=\"p\">(</span><span class=\"n\">onSetAuthentication</span><span class=\"p\">,</span> <span class=\"n\">onAuthentication</span><span class=\"p\">)</span>\n            <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n</pre>\n<h4>Connecting to server</h4>\n<ul>\n<li>For connecting to server:</li>\n</ul>\n<pre>    <span class=\"o\">//</span><span class=\"n\">This</span> <span class=\"n\">will</span> <span class=\"n\">send</span> <span class=\"n\">websocket</span> <span class=\"n\">handshake</span> <span class=\"n\">request</span> <span class=\"n\">to</span> <span class=\"n\">socketcluster</span><span class=\"o\">-</span><span class=\"n\">server</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">();</span>\n</pre>\n<ul>\n<li>By default reconnection to server is disabled (since latest release) , to enable it and configure delay for connection</li>\n</ul>\n<pre>    <span class=\"o\">//</span><span class=\"n\">This</span> <span class=\"n\">will</span> <span class=\"nb\">set</span> <span class=\"n\">automatic</span><span class=\"o\">-</span><span class=\"n\">reconnection</span> <span class=\"n\">to</span> <span class=\"n\">server</span> <span class=\"k\">with</span> <span class=\"n\">delay</span> <span class=\"n\">of</span> <span class=\"mi\">2</span> <span class=\"n\">seconds</span> <span class=\"ow\">and</span> <span class=\"n\">repeating</span> <span class=\"n\">it</span> <span class=\"k\">for</span> <span class=\"n\">infinitely</span>\n   <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">setdelay</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n   <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">setreconnection</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n   <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">();</span>\n</pre>\n<ul>\n<li>By default logging of messages in disabled (since latest release), to enable it</li>\n</ul>\n<pre>   <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">enablelogger</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Emitting and listening to events</h2>\n<h4>Event emitter</h4>\n<ul>\n<li>eventname is name of event and message can be String, boolean, int or JSON-object</li>\n</ul>\n<pre>    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"n\">eventname</span><span class=\"p\">,</span><span class=\"n\">message</span><span class=\"p\">);</span>\n\n    <span class=\"c1\"># socket.emit(\"chat\", \"Hi\")</span>\n</pre>\n<ul>\n<li>To send event with acknowledgement</li>\n</ul>\n<pre>    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">emitack</span><span class=\"p\">(</span><span class=\"s2\">\"chat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Hi\"</span><span class=\"p\">,</span> <span class=\"n\">ack</span><span class=\"p\">)</span>  \n\n    <span class=\"k\">def</span> <span class=\"nf\">ack</span><span class=\"p\">(</span><span class=\"n\">eventname</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"Got ack data \"</span> <span class=\"o\">+</span> <span class=\"nb\">object</span> <span class=\"o\">+</span> <span class=\"s2\">\" and error \"</span> <span class=\"o\">+</span> <span class=\"n\">error</span> <span class=\"o\">+</span> <span class=\"s2\">\" and eventname is \"</span> <span class=\"o\">+</span> <span class=\"n\">eventname</span>\n</pre>\n<h4>Event Listener</h4>\n<ul>\n<li>For listening to events :</li>\n</ul>\n<p>The object received can be String, Boolean, Long or JSONObject.</p>\n<pre>     <span class=\"c1\"># Receiver code without sending acknowledgement back</span>\n     <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"ping\"</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n\n     <span class=\"k\">def</span> <span class=\"nf\">message</span><span class=\"p\">(</span><span class=\"n\">eventname</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n         <span class=\"nb\">print</span> <span class=\"s2\">\"Got data \"</span> <span class=\"o\">+</span> <span class=\"nb\">object</span> <span class=\"o\">+</span> <span class=\"s2\">\" from eventname \"</span> <span class=\"o\">+</span> <span class=\"n\">eventname</span>\n</pre>\n<ul>\n<li>To send acknowledgement back to server</li>\n</ul>\n<pre>    <span class=\"c1\"># Receiver code with ack</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">onack</span><span class=\"p\">(</span><span class=\"s2\">\"ping\"</span><span class=\"p\">,</span> <span class=\"n\">messsageack</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">messsageack</span><span class=\"p\">(</span><span class=\"n\">eventname</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"n\">ackmessage</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"Got data \"</span> <span class=\"o\">+</span> <span class=\"nb\">object</span> <span class=\"o\">+</span> <span class=\"s2\">\" from eventname \"</span> <span class=\"o\">+</span> <span class=\"n\">eventname</span>\n        <span class=\"n\">ackmessage</span><span class=\"p\">(</span><span class=\"s2\">\"this is error\"</span><span class=\"p\">,</span> <span class=\"s2\">\"this is data\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Implementing Pub-Sub via channels</h2>\n<h4>Creating channel</h4>\n<ul>\n<li>For creating and subscribing to channels:</li>\n</ul>\n<pre>    <span class=\"c1\"># without acknowledgement</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#with acknowledgement</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">subscribeack</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">,</span> <span class=\"n\">suback</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">suback</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">error</span> <span class=\"ow\">is</span> <span class=\"s1\">''</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span> <span class=\"s2\">\"Subscribed successfully to channel \"</span> <span class=\"o\">+</span> <span class=\"n\">channel</span>\n</pre>\n<ul>\n<li>For getting list of created channels :</li>\n</ul>\n<pre>        <span class=\"n\">channels</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">getsubscribedchannels</span><span class=\"p\">()</span>\n</pre>\n<h4>Publishing event on channel</h4>\n<ul>\n<li>For publishing event :</li>\n</ul>\n<pre>       <span class=\"c1\"># without acknowledgement</span>\n       <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">,</span> <span class=\"s1\">'Hi dudies'</span><span class=\"p\">)</span>\n\n       <span class=\"c1\">#with acknowledgement</span>\n       <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">publishack</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">,</span> <span class=\"s1\">'Hi dudies'</span><span class=\"p\">,</span> <span class=\"n\">puback</span><span class=\"p\">)</span>\n\n       <span class=\"k\">def</span> <span class=\"nf\">puback</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n           <span class=\"k\">if</span> <span class=\"n\">error</span> <span class=\"ow\">is</span> <span class=\"s1\">''</span><span class=\"p\">:</span>\n               <span class=\"nb\">print</span> <span class=\"s2\">\"Publish sent successfully to channel \"</span> <span class=\"o\">+</span> <span class=\"n\">channel</span>\n</pre>\n<h4>Listening to channel</h4>\n<ul>\n<li>For listening to channel event :</li>\n</ul>\n<pre>        <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">onchannel</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">,</span> <span class=\"n\">channelmessage</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">channelmessage</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n            <span class=\"nb\">print</span> <span class=\"s2\">\"Got data \"</span> <span class=\"o\">+</span> <span class=\"nb\">object</span> <span class=\"o\">+</span> <span class=\"s2\">\" from key \"</span> <span class=\"o\">+</span> <span class=\"n\">key</span>\n</pre>\n<h4>Un-subscribing to channel</h4>\n<pre>         <span class=\"c1\"># without acknowledgement</span>\n         <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">unsubscribe</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">)</span>\n\n         <span class=\"c1\"># with acknowledgement</span>\n         <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">unsubscribeack</span><span class=\"p\">(</span><span class=\"s1\">'yell'</span><span class=\"p\">,</span> <span class=\"n\">unsuback</span><span class=\"p\">)</span> \n\n         <span class=\"k\">def</span> <span class=\"nf\">unsuback</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n              <span class=\"k\">if</span> <span class=\"n\">error</span> <span class=\"ow\">is</span> <span class=\"s1\">''</span><span class=\"p\">:</span>\n                   <span class=\"nb\">print</span> <span class=\"s2\">\"Unsubscribed to channel \"</span> <span class=\"o\">+</span> <span class=\"n\">channel</span> \n</pre>\n<h4>Disable SSL Certificate Verification</h4>\n<pre>        <span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">Socketcluster</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"s2\">\"wss://localhost:8000/socketcluster/\"</span><span class=\"p\">)</span>\n        <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">sslopt</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"cert_reqs\"</span><span class=\"p\">:</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">CERT_NONE</span><span class=\"p\">})</span>\n</pre>\n<h4>HTTP proxy</h4>\n<p>Support websocket access via http proxy. The proxy server must allow \"CONNECT\" method to websocket port. Default squid setting is \"ALLOWED TO CONNECT ONLY HTTPS PORT\".</p>\n<pre>        <span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">Socketcluster</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"s2\">\"wss://localhost:8000/socketcluster/\"</span><span class=\"p\">)</span>\n        <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">http_proxy_host</span><span class=\"o\">=</span><span class=\"s2\">\"proxy_host_name\"</span><span class=\"p\">,</span> <span class=\"n\">http_proxy_port</span><span class=\"o\">=</span><span class=\"mi\">3128</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>To have custom settings over internal logger, you can get logger instance and apply necessary settings over it.</li>\n</ul>\n<pre>        <span class=\"n\">sclogger</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">getlogger</span><span class=\"p\">()</span>\n</pre>\n<p>Please follow logging tutorial over here : <a href=\"https://docs.python.org/3/howto/logging-cookbook.html\" rel=\"nofollow\">https://docs.python.org/3/howto/logging-cookbook.html</a></p>\n\n          </div>"}, "last_serial": 6723851, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "400ebbe6b4a85f4e634d2d27dbdc159c", "sha256": "890bdb134c5d5f1940b759df5004534f86c923b025a67d210202948f25933dcf"}, "downloads": -1, "filename": "socketclusterclient-0.1.tar.gz", "has_sig": false, "md5_digest": "400ebbe6b4a85f4e634d2d27dbdc159c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2838, "upload_time": "2016-11-24T14:43:05", "upload_time_iso_8601": "2016-11-24T14:43:05.194485Z", "url": "https://files.pythonhosted.org/packages/13/c7/21a06e16cce280d4bf39b59879fa456f8641fb907709454e6e40334fa1e2/socketclusterclient-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f847dd515b33f4011165a4dfa2003f48", "sha256": "d8bc0e203716d7001fb424934b34e60b1e780bea476607d7a172badfc3148b03"}, "downloads": -1, "filename": "socketclusterclient-0.2.tar.gz", "has_sig": false, "md5_digest": "f847dd515b33f4011165a4dfa2003f48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3139, "upload_time": "2016-11-26T18:05:45", "upload_time_iso_8601": "2016-11-26T18:05:45.128192Z", "url": "https://files.pythonhosted.org/packages/e9/10/cd0dc7222e7ac2b0d6aeaeec36c5f6395cb4fd95eb6216056d307d5100f3/socketclusterclient-0.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "f25ab0063c3c082fc0c0d39f56cd328d", "sha256": "75da7f23792b331aa434c2e38bad49d713302e4ed77f2ca0e6bcb89fc522a7f2"}, "downloads": -1, "filename": "socketclusterclient-1.0.tar.gz", "has_sig": false, "md5_digest": "f25ab0063c3c082fc0c0d39f56cd328d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3195, "upload_time": "2016-12-02T13:15:10", "upload_time_iso_8601": "2016-12-02T13:15:10.751439Z", "url": "https://files.pythonhosted.org/packages/1c/8a/fd38899e2977c010de1b4de2eb72b536036a11665388a9b53c92a364a01b/socketclusterclient-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "ec5a5c138e3d8217d9015a5087cb940b", "sha256": "b197ea74fc261b3597b75510439609b63b55d865af05df14cedeaeef762eb9cb"}, "downloads": -1, "filename": "socketclusterclient-1.1.tar.gz", "has_sig": false, "md5_digest": "ec5a5c138e3d8217d9015a5087cb940b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3226, "upload_time": "2016-12-04T06:47:05", "upload_time_iso_8601": "2016-12-04T06:47:05.715643Z", "url": "https://files.pythonhosted.org/packages/65/e1/acc46c86faaccf3d2c529ba83554562755caf6d16f5e5e0e0394cc7f1069/socketclusterclient-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "ed9fc5566951bb50a47a0de281529004", "sha256": "e900dde716757413916d452d4e9e57e2686113274e4bb68fc0e6a5244261efa5"}, "downloads": -1, "filename": "socketclusterclient-1.2.tar.gz", "has_sig": false, "md5_digest": "ed9fc5566951bb50a47a0de281529004", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3270, "upload_time": "2016-12-05T08:09:58", "upload_time_iso_8601": "2016-12-05T08:09:58.574907Z", "url": "https://files.pythonhosted.org/packages/de/fb/869447b4dc8a798ece0b8a1c8c001f89cf5c30b3eac79cd668e984fc9814/socketclusterclient-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "0c5f2bd48ff5165bf3ee15285b441bfb", "sha256": "711b9b9d576003d17bc6b263b7929d3cb3e4462432964ab233e7d2bf00c1a288"}, "downloads": -1, "filename": "socketclusterclient-1.2.1.tar.gz", "has_sig": false, "md5_digest": "0c5f2bd48ff5165bf3ee15285b441bfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3338, "upload_time": "2017-01-03T19:09:20", "upload_time_iso_8601": "2017-01-03T19:09:20.047666Z", "url": "https://files.pythonhosted.org/packages/04/9c/73b877ea7500e015d872547634e58e0f0ed688e8b0cd231c92c44574376c/socketclusterclient-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "202e819313f76e49d5539b99214d8896", "sha256": "ec7a76fd0031a9b2fc86d594172525fe825bd6bfa2ac64d52988e2a5366d33a1"}, "downloads": -1, "filename": "socketclusterclient-1.2.2.tar.gz", "has_sig": false, "md5_digest": "202e819313f76e49d5539b99214d8896", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3332, "upload_time": "2017-07-27T06:10:22", "upload_time_iso_8601": "2017-07-27T06:10:22.868937Z", "url": "https://files.pythonhosted.org/packages/19/f7/dfe10c0a21656f65c5fb6912bcda52cbda9926a4ffd86249b22da6706486/socketclusterclient-1.2.2.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "462d5545b353b28d1c6394a402a817ce", "sha256": "7c1aa7748603d926f30abcdce703602203faa0c83561a97f92fa60da3f1fbbdd"}, "downloads": -1, "filename": "socketclusterclient-1.3.0.tar.gz", "has_sig": false, "md5_digest": "462d5545b353b28d1c6394a402a817ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3104, "upload_time": "2018-05-19T12:15:21", "upload_time_iso_8601": "2018-05-19T12:15:21.526936Z", "url": "https://files.pythonhosted.org/packages/fd/c2/e6b95067c979cc08c3e3e70de726ddb1748627dce62998924524bb36387a/socketclusterclient-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "52f8742dcbb68f70d03b2e53728ec827", "sha256": "f49a107e4ed0ad3883fe3c2198e4f373e229b632ac7a93c72e2e9f25e703e58c"}, "downloads": -1, "filename": "socketclusterclient-1.3.1.tar.gz", "has_sig": false, "md5_digest": "52f8742dcbb68f70d03b2e53728ec827", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4885, "upload_time": "2018-05-19T15:52:05", "upload_time_iso_8601": "2018-05-19T15:52:05.628725Z", "url": "https://files.pythonhosted.org/packages/45/df/c1722d2117c07c931c719bc22d107f2a5ffff4404c6d74763c256ae5dc11/socketclusterclient-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "44e778807d9c7f6786b7d3d002244bf1", "sha256": "12a177058892e58e861792322c065007a1641f000303c31f9db5d1d0f36682c2"}, "downloads": -1, "filename": "socketclusterclient-1.3.2.tar.gz", "has_sig": false, "md5_digest": "44e778807d9c7f6786b7d3d002244bf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4930, "upload_time": "2018-05-21T19:04:27", "upload_time_iso_8601": "2018-05-21T19:04:27.259637Z", "url": "https://files.pythonhosted.org/packages/8a/f9/815a84141b80c6e431e9bedf4cf9eb591b5e7cbdffa9ecba802b5f793810/socketclusterclient-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "5b1bf13e8149ad43774d619dfdbf4134", "sha256": "61f8d4da0e88b1c19e9266626db9d45d42cba336ab2731cdd4e1bb584837bff2"}, "downloads": -1, "filename": "socketclusterclient-1.3.3.tar.gz", "has_sig": false, "md5_digest": "5b1bf13e8149ad43774d619dfdbf4134", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5077, "upload_time": "2018-07-17T14:10:20", "upload_time_iso_8601": "2018-07-17T14:10:20.236541Z", "url": "https://files.pythonhosted.org/packages/91/2d/770766ea70233cce44af18ae80ec6030ff2428c5fb640686a23ca4ac99d2/socketclusterclient-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "86114e7ebbb95dac9cbb6250a10c1f25", "sha256": "7afcc2e909907a053f708fe1ee5b7226d97d59066b5995d13e55b13982aa2c56"}, "downloads": -1, "filename": "socketclusterclient-1.3.4.tar.gz", "has_sig": false, "md5_digest": "86114e7ebbb95dac9cbb6250a10c1f25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5084, "upload_time": "2018-09-25T15:09:28", "upload_time_iso_8601": "2018-09-25T15:09:28.513668Z", "url": "https://files.pythonhosted.org/packages/6d/9a/c91f50544c2f3b0e44b4b818a07fd42a13d62595b0add33d1665d2fcfdbf/socketclusterclient-1.3.4.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "382128b55c440ddcf0956a2802b96fd6", "sha256": "0c20e53d07532dc9e5b6ddd9d92e1f6c94ba9b032d14d96590f8ed342a9a389d"}, "downloads": -1, "filename": "socketclusterclient-1.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "382128b55c440ddcf0956a2802b96fd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 7072, "upload_time": "2020-02-29T09:55:51", "upload_time_iso_8601": "2020-02-29T09:55:51.843912Z", "url": "https://files.pythonhosted.org/packages/6b/20/1b7cad6e6db394d68c22a1c3c680030241f6b0bc3aa35f7089a83e7a9631/socketclusterclient-1.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a66bcb10be9bc6120a201c2ef3bdcdc", "sha256": "8f09b48bdc5e5f7e3aa074e25dba5ebb98377f466851c944aec8fd57f329ea40"}, "downloads": -1, "filename": "socketclusterclient-1.3.6.tar.gz", "has_sig": false, "md5_digest": "6a66bcb10be9bc6120a201c2ef3bdcdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6190, "upload_time": "2020-02-29T09:55:53", "upload_time_iso_8601": "2020-02-29T09:55:53.868670Z", "url": "https://files.pythonhosted.org/packages/3d/c0/04758c00c591ecb2c97fc485975d652a33714be4da2305a212b26ca58d2b/socketclusterclient-1.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "382128b55c440ddcf0956a2802b96fd6", "sha256": "0c20e53d07532dc9e5b6ddd9d92e1f6c94ba9b032d14d96590f8ed342a9a389d"}, "downloads": -1, "filename": "socketclusterclient-1.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "382128b55c440ddcf0956a2802b96fd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 7072, "upload_time": "2020-02-29T09:55:51", "upload_time_iso_8601": "2020-02-29T09:55:51.843912Z", "url": "https://files.pythonhosted.org/packages/6b/20/1b7cad6e6db394d68c22a1c3c680030241f6b0bc3aa35f7089a83e7a9631/socketclusterclient-1.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a66bcb10be9bc6120a201c2ef3bdcdc", "sha256": "8f09b48bdc5e5f7e3aa074e25dba5ebb98377f466851c944aec8fd57f329ea40"}, "downloads": -1, "filename": "socketclusterclient-1.3.6.tar.gz", "has_sig": false, "md5_digest": "6a66bcb10be9bc6120a201c2ef3bdcdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6190, "upload_time": "2020-02-29T09:55:53", "upload_time_iso_8601": "2020-02-29T09:55:53.868670Z", "url": "https://files.pythonhosted.org/packages/3d/c0/04758c00c591ecb2c97fc485975d652a33714be4da2305a212b26ca58d2b/socketclusterclient-1.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:02 2020"}