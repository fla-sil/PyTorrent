{"info": {"author": "David Scheliga", "author_email": "david.scheliga@ivw.uni-kl.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# augmentedtree\n\n![augmentedtree icon](https://gitlab.com/david.scheliga/augmentedtree/raw/dev/docs/resources/augmentedtree-icon.png \"Circle, square, triangle and lines.\")\n\n`augmentedtree` enhances mappings and sequences (targeted for python\ndictionaries and lists) preserving their native behavior and access.\nThe enhancement comes with getting values by single keys, human readable\nviewing, selecting and setting multiple values/items within the nested\ndata at once, *or*-conditional selection of values/items. Also this package\nintends to prepare the nested data for pyQt. The augmentation provides\nmethods and properties to be used for a `QAbstractItemModel` showing\nthe nested data within a `QTreeView`.\n\n## Installation\n\nInstalling the latest release using pip is recommended.\n\n```` shell script\n    $ pip install augmentedtree\n````\n\nThe latest development state can be obtained from gitlab using pip.\n\n```` shell script\n    $ pip install git+https://gitlab.com/david.scheliga/augmentedtree.git@dev\n````\n\n## Basic Usage\nThe major purpose of augmentedtree is to retrieve quickly specific value(s) from a deep\nnested data featuring:\n\n- unix filename pattern\n- regular expressions\n- *or*-conditional selection\n\nThe targeted usage is to be able to write the following kind of code\n\n````\n# code where the nested data comes from\n...\n\n# gathering parameters\nwith AugmentedTree(nested_data) as tree:\n    # simple selection\n    first_value = tree.select(\"something\", \"here\")[0]\n    last_value = tree.select(\"something\", \"there\")[-1]\n    a_slice_of_values = tree.select(\"a\", \"l?t\", \"of\")[3:6]\n\n    # selection with refinement\n    selection_of_values = tree.select(\"also/a\", \"lot\", \"of\")\n    narrowed_down = selection_of_values.where(\"this\", \"or\", \"that\")[ALL_ITEMS]\n    ...\n\n\nif not tree.all_selections_succeeded:\n    # break, exit or reacting to some value are not there\n    ...\n\n# code which is working with requested parameters       \n...\n````\n\n[Read-the-docs](https://augmentedtree.readthedocs.io/en/latest/) for a detailed \nexplanation on how to use augmented tree.\n\n## Contribution\n\nAny contribution by reporting a bug or desired changes are welcomed. The preferred \nway is to create an issue on the gitlab's project page, to keep track of everything \nregarding this project.\n\n### Contribution of Source Code\n#### Code style\nThis project follows the recommendations of [PEP8](https://www.python.org/dev/peps/pep-0008/).\nThe project is using [black](https://github.com/psf/black) as the code formatter.\n\n#### Workflow\n\n1. Fork the project on Gitlab.\n2. Commit changes to your own branch.\n3. Submit a **pull request** from your fork's branch to our branch *'dev'*.\n\n## Authors\n\n* **David Scheliga** \n    [@gitlab](https://gitlab.com/david.scheliga)\n    [@Linkedin](https://www.linkedin.com/in/david-scheliga-576984171/)\n    - Initial work\n    - Maintainer\n\n## License\n\nThis project is licensed under the GNU GENERAL PUBLIC LICENSE - see the\n[LICENSE](LICENSE) file for details\n\n## Acknowledge\n\n- [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/david.scheliga/augmentedtree", "keywords": "dictionary,mapping,list,sequence,nested,handling,navigation,selection", "license": "GNU General Public License v3 (GPLv3)", "maintainer": "", "maintainer_email": "", "name": "augmentedtree", "package_url": "https://pypi.org/project/augmentedtree/", "platform": "", "project_url": "https://pypi.org/project/augmentedtree/", "project_urls": {"Documentation": "https://augmentedtree.readthedocs.io/en/latest/", "Homepage": "https://gitlab.com/david.scheliga/augmentedtree", "Source Code Repository": "https://gitlab.com/david.scheliga/augmentedtree"}, "release_url": "https://pypi.org/project/augmentedtree/0.1a0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Easy navigation within nested data of mappings (dict, ...) and sequences (list, ...). Easy access of values via single keys within these nested data structures. Enables different (human accessable) representation of nested data structures.", "version": "0.1a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>augmentedtree</h1>\n<p><img alt=\"augmentedtree icon\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0565c504c44e4634a34dc58f061f7b8ed1701a3/68747470733a2f2f6769746c61622e636f6d2f64617669642e736368656c6967612f6175676d656e746564747265652f7261772f6465762f646f63732f7265736f75726365732f6175676d656e746564747265652d69636f6e2e706e67\"></p>\n<p><code>augmentedtree</code> enhances mappings and sequences (targeted for python\ndictionaries and lists) preserving their native behavior and access.\nThe enhancement comes with getting values by single keys, human readable\nviewing, selecting and setting multiple values/items within the nested\ndata at once, <em>or</em>-conditional selection of values/items. Also this package\nintends to prepare the nested data for pyQt. The augmentation provides\nmethods and properties to be used for a <code>QAbstractItemModel</code> showing\nthe nested data within a <code>QTreeView</code>.</p>\n<h2>Installation</h2>\n<p>Installing the latest release using pip is recommended.</p>\n<pre>    $ pip install augmentedtree\n</pre>\n<p>The latest development state can be obtained from gitlab using pip.</p>\n<pre>    $ pip install git+https://gitlab.com/david.scheliga/augmentedtree.git@dev\n</pre>\n<h2>Basic Usage</h2>\n<p>The major purpose of augmentedtree is to retrieve quickly specific value(s) from a deep\nnested data featuring:</p>\n<ul>\n<li>unix filename pattern</li>\n<li>regular expressions</li>\n<li><em>or</em>-conditional selection</li>\n</ul>\n<p>The targeted usage is to be able to write the following kind of code</p>\n<pre><code># code where the nested data comes from\n...\n\n# gathering parameters\nwith AugmentedTree(nested_data) as tree:\n    # simple selection\n    first_value = tree.select(\"something\", \"here\")[0]\n    last_value = tree.select(\"something\", \"there\")[-1]\n    a_slice_of_values = tree.select(\"a\", \"l?t\", \"of\")[3:6]\n\n    # selection with refinement\n    selection_of_values = tree.select(\"also/a\", \"lot\", \"of\")\n    narrowed_down = selection_of_values.where(\"this\", \"or\", \"that\")[ALL_ITEMS]\n    ...\n\n\nif not tree.all_selections_succeeded:\n    # break, exit or reacting to some value are not there\n    ...\n\n# code which is working with requested parameters       \n...\n</code></pre>\n<p><a href=\"https://augmentedtree.readthedocs.io/en/latest/\" rel=\"nofollow\">Read-the-docs</a> for a detailed\nexplanation on how to use augmented tree.</p>\n<h2>Contribution</h2>\n<p>Any contribution by reporting a bug or desired changes are welcomed. The preferred\nway is to create an issue on the gitlab's project page, to keep track of everything\nregarding this project.</p>\n<h3>Contribution of Source Code</h3>\n<h4>Code style</h4>\n<p>This project follows the recommendations of <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a>.\nThe project is using <a href=\"https://github.com/psf/black\" rel=\"nofollow\">black</a> as the code formatter.</p>\n<h4>Workflow</h4>\n<ol>\n<li>Fork the project on Gitlab.</li>\n<li>Commit changes to your own branch.</li>\n<li>Submit a <strong>pull request</strong> from your fork's branch to our branch <em>'dev'</em>.</li>\n</ol>\n<h2>Authors</h2>\n<ul>\n<li><strong>David Scheliga</strong>\n<a href=\"https://gitlab.com/david.scheliga\" rel=\"nofollow\">@gitlab</a>\n<a href=\"https://www.linkedin.com/in/david-scheliga-576984171/\" rel=\"nofollow\">@Linkedin</a>\n<ul>\n<li>Initial work</li>\n<li>Maintainer</li>\n</ul>\n</li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the GNU GENERAL PUBLIC LICENSE - see the\n<a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n<h2>Acknowledge</h2>\n<ul>\n<li><a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></li>\n</ul>\n\n          </div>"}, "last_serial": 6751592, "releases": {"0.0a1": [{"comment_text": "", "digests": {"md5": "8bfd528cec33242afb3a1d7d11269e06", "sha256": "f955a8a92c72747a4f56e4cd2aa881f1463905279faf9ab5eeb1b11e4af189f9"}, "downloads": -1, "filename": "augmentedtree-0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "8bfd528cec33242afb3a1d7d11269e06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45109, "upload_time": "2020-02-02T10:36:05", "upload_time_iso_8601": "2020-02-02T10:36:05.230840Z", "url": "https://files.pythonhosted.org/packages/fa/dc/5bd7809821015abbdb62abb1ae47c0d7e7d00fb0a9e0d917ff5cad84e97c/augmentedtree-0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5935d47559be8103af88504a8f3afd71", "sha256": "95ce7318d9762eab0c4d5a41ab2eb04e7f90edb95d38a0a5148753489a049376"}, "downloads": -1, "filename": "augmentedtree-0.0a1.tar.gz", "has_sig": false, "md5_digest": "5935d47559be8103af88504a8f3afd71", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 50489, "upload_time": "2020-02-02T10:36:07", "upload_time_iso_8601": "2020-02-02T10:36:07.715216Z", "url": "https://files.pythonhosted.org/packages/45/c4/1990bc29042fb559a2c2ea8ba6518fc3cb691388c2b4b69ea1fe8c67be1a/augmentedtree-0.0a1.tar.gz", "yanked": false}], "0.0a1.post1": [{"comment_text": "", "digests": {"md5": "c4ac1f910393cf1455e5c9147d37c382", "sha256": "8824398369b690eee73339eb442bb9fbfc60b73311980f131a046f8a51caffbf"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "c4ac1f910393cf1455e5c9147d37c382", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38380, "upload_time": "2020-02-02T11:15:51", "upload_time_iso_8601": "2020-02-02T11:15:51.891463Z", "url": "https://files.pythonhosted.org/packages/32/83/5092d7f5267d576f9ae0de1ccfdbea104765516978851157f8b4abcd9ad9/augmentedtree-0.0a1.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30aa427b8b935160b4fb08034e230151", "sha256": "c3dc0ae44819b4ddfef346135297e0abd0af9bff2d1b9893b182b45adea335b1"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post1.tar.gz", "has_sig": false, "md5_digest": "30aa427b8b935160b4fb08034e230151", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 50418, "upload_time": "2020-02-02T11:15:53", "upload_time_iso_8601": "2020-02-02T11:15:53.550782Z", "url": "https://files.pythonhosted.org/packages/11/13/f4e01c8c609207e2a55bcb2f40c61a9f41b3d60b957acba6deddafc4e486/augmentedtree-0.0a1.post1.tar.gz", "yanked": false}], "0.0a1.post2": [{"comment_text": "", "digests": {"md5": "07dad7824bb5650a978ba988d0f18376", "sha256": "35d54522f8fddc2695f94d1be188c77937feaec12fb54fc65c51cfc0ea94002a"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "07dad7824bb5650a978ba988d0f18376", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38392, "upload_time": "2020-02-02T11:17:45", "upload_time_iso_8601": "2020-02-02T11:17:45.887314Z", "url": "https://files.pythonhosted.org/packages/1a/83/402cf926fd7732e8be4775de2d9ffb911c78c228de811cc1a3df9a579919/augmentedtree-0.0a1.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "726c755238fc7040d0e95bc309606dd9", "sha256": "54aed260d9e1df29db70c885ac95c534a110a20807acd4b40dd4da5f0ae7b7bd"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post2.tar.gz", "has_sig": false, "md5_digest": "726c755238fc7040d0e95bc309606dd9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 50458, "upload_time": "2020-02-02T11:17:48", "upload_time_iso_8601": "2020-02-02T11:17:48.294775Z", "url": "https://files.pythonhosted.org/packages/74/f6/7ba296d8657be2545e364e9bdf96a52fbdd99516e00b5227070d7b5f7c97/augmentedtree-0.0a1.post2.tar.gz", "yanked": false}], "0.0a1.post3": [{"comment_text": "", "digests": {"md5": "a714ec6e9c5ba3f70011af1c266f06bb", "sha256": "bc3aadb98198174e7da7037886406f6272214438ffc75d11e9dfcac4854b87ad"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "a714ec6e9c5ba3f70011af1c266f06bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38402, "upload_time": "2020-02-02T15:04:40", "upload_time_iso_8601": "2020-02-02T15:04:40.034789Z", "url": "https://files.pythonhosted.org/packages/65/5b/c12ecf61a41da28a8d70dd389a4cf02ef687e85279a912ab489fd03a16ad/augmentedtree-0.0a1.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd1168e352a8d046e4ed27baff3ca389", "sha256": "7f05a58df1c943e7d6888f95ff0c0ec873c0e15c8c6154b0c80a6c9a8cdaa405"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post3.tar.gz", "has_sig": false, "md5_digest": "fd1168e352a8d046e4ed27baff3ca389", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 50461, "upload_time": "2020-02-02T15:04:42", "upload_time_iso_8601": "2020-02-02T15:04:42.616375Z", "url": "https://files.pythonhosted.org/packages/1e/ba/7db8d7a2e941b66a9d5d267f89384013924ed3277e8612261bf862bfcc94/augmentedtree-0.0a1.post3.tar.gz", "yanked": false}], "0.0a1.post4": [{"comment_text": "", "digests": {"md5": "a00a5639b40c9c9ea269530357f302f5", "sha256": "161c577d121a5aef2d834b093c128081156b30894b4cf16fd2dd97a0526e8c7b"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post4-py3-none-any.whl", "has_sig": false, "md5_digest": "a00a5639b40c9c9ea269530357f302f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38436, "upload_time": "2020-02-03T20:57:39", "upload_time_iso_8601": "2020-02-03T20:57:39.863548Z", "url": "https://files.pythonhosted.org/packages/50/15/c9fe0317d1bf8d158367a67701fb4b0bfa34871f8fc43c640b17a8ebd8cb/augmentedtree-0.0a1.post4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37d8dd65e17b82eab6d1f902c210473f", "sha256": "b7d02ded897bba8a602860e0e9835a8a5d9b0e8b01544e963eb278fd99d0062e"}, "downloads": -1, "filename": "augmentedtree-0.0a1.post4.tar.gz", "has_sig": false, "md5_digest": "37d8dd65e17b82eab6d1f902c210473f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49643, "upload_time": "2020-02-03T20:57:41", "upload_time_iso_8601": "2020-02-03T20:57:41.154381Z", "url": "https://files.pythonhosted.org/packages/15/6b/e414922fcaa126c3fffaeb828d87602bf75907c9e1088959a264fd233215/augmentedtree-0.0a1.post4.tar.gz", "yanked": false}], "0.0a2": [{"comment_text": "", "digests": {"md5": "8fb43507de45329cfddd71dbcd2e2e5a", "sha256": "9190edc7231ab772426b725ad6b43c4ae19f6d132ae34875de1672b9b9a2e365"}, "downloads": -1, "filename": "augmentedtree-0.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "8fb43507de45329cfddd71dbcd2e2e5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38520, "upload_time": "2020-02-06T23:27:20", "upload_time_iso_8601": "2020-02-06T23:27:20.807814Z", "url": "https://files.pythonhosted.org/packages/d2/e6/1b58a1831b8613f210c20deab815060698bba3e4594a7845d2be74dcf0dd/augmentedtree-0.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a17c7166c03660c0a4b8611115f1f22", "sha256": "49585bf9bb697285c2d4ccb5ed71d2883b029b3b9c593d13ddb790496067f26d"}, "downloads": -1, "filename": "augmentedtree-0.0a2.tar.gz", "has_sig": false, "md5_digest": "8a17c7166c03660c0a4b8611115f1f22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25449, "upload_time": "2020-02-06T23:27:22", "upload_time_iso_8601": "2020-02-06T23:27:22.252452Z", "url": "https://files.pythonhosted.org/packages/09/4d/7470b75c2ec0f63f3510a5b4e995986fb70fa66071f6758684a02f1ccf1c/augmentedtree-0.0a2.tar.gz", "yanked": false}], "0.1a0": [{"comment_text": "", "digests": {"md5": "2c4b371c5c3da2889d410fcb5b057828", "sha256": "32bd939218564df83eb58148d28fdab01e47457fa2768b2408d2eb10a24c7388"}, "downloads": -1, "filename": "augmentedtree-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "2c4b371c5c3da2889d410fcb5b057828", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45271, "upload_time": "2020-03-04T23:20:25", "upload_time_iso_8601": "2020-03-04T23:20:25.987449Z", "url": "https://files.pythonhosted.org/packages/d9/61/3edf8f0af5b56b5c8855364ce92b1ba4307911d1a18b9d1588ec7717dc4b/augmentedtree-0.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9d89930698fe203474331042960cbc9", "sha256": "0f5bf8b5d1c4c706bd63d97c1a3c92a6b577bda9cbcf4414a77dd1e50619d914"}, "downloads": -1, "filename": "augmentedtree-0.1a0.tar.gz", "has_sig": false, "md5_digest": "c9d89930698fe203474331042960cbc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 30235, "upload_time": "2020-03-04T23:20:27", "upload_time_iso_8601": "2020-03-04T23:20:27.525984Z", "url": "https://files.pythonhosted.org/packages/de/37/c36ca97f80381b0cb1fa0338c13f1e3c3efa5b73546ceed0e750da9e8d28/augmentedtree-0.1a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c4b371c5c3da2889d410fcb5b057828", "sha256": "32bd939218564df83eb58148d28fdab01e47457fa2768b2408d2eb10a24c7388"}, "downloads": -1, "filename": "augmentedtree-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "2c4b371c5c3da2889d410fcb5b057828", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45271, "upload_time": "2020-03-04T23:20:25", "upload_time_iso_8601": "2020-03-04T23:20:25.987449Z", "url": "https://files.pythonhosted.org/packages/d9/61/3edf8f0af5b56b5c8855364ce92b1ba4307911d1a18b9d1588ec7717dc4b/augmentedtree-0.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9d89930698fe203474331042960cbc9", "sha256": "0f5bf8b5d1c4c706bd63d97c1a3c92a6b577bda9cbcf4414a77dd1e50619d914"}, "downloads": -1, "filename": "augmentedtree-0.1a0.tar.gz", "has_sig": false, "md5_digest": "c9d89930698fe203474331042960cbc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 30235, "upload_time": "2020-03-04T23:20:27", "upload_time_iso_8601": "2020-03-04T23:20:27.525984Z", "url": "https://files.pythonhosted.org/packages/de/37/c36ca97f80381b0cb1fa0338c13f1e3c3efa5b73546ceed0e750da9e8d28/augmentedtree-0.1a0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:26 2020"}