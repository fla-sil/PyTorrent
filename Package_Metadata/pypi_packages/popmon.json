{"info": {"author": "ING Wholesale Banking Advanced Analytics", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "===========================\nPopulation Shift Monitoring\n===========================\n\n|build| |docs|\n\n* Version: 0.3.3. Released: April 2020\n* Documentation: https://popmon.readthedocs.io\n* Repository: https://github.com/ing-bank/popmon\n* Authors: ING Wholesale Banking Advanced Analytics\n\n|\n\n|logo|\n\n`popmon` is a package that allows one to check the stability of a dataset.\n`popmon` works with both pandas and spark datasets.\n\n`popmon` creates histograms of features binned in time-slices,\nand compares the stability of the profiles and distributions of\nthose histograms using statistical tests, both over time and with respect to a reference.\nIt works with numerical, ordinal, categorical features, and the histograms can be higher-dimensional,\ne.g. it can also track correlations between any two features.\n`popmon` can automatically flag and alert on changes observed over time, such\nas trends, shifts, peaks, outliers, anomalies, changing correlations, etc,\nusing monitoring business rules.\n\nDocumentation\n=============\n\nThe entire `popmon` documentation including tutorials can be found at `read-the-docs <https://popmon.readthedocs.io>`_.\n\n\nExamples\n========\n\n- `Flight Delays and Cancellations Kaggle data <http://crclz.com/popmon/reports/flight_delays_report.html>`_\n- `Synthetic data (code example below) <http://crclz.com/popmon/reports/test_data_report.html>`_\n\nCheck it out\n============\n\nThe `popmon` library requires Python 3.6 and is pip friendly. To get started, simply do:\n\n.. code-block:: bash\n\n  $ pip install popmon\n\nor check out the code from our GitHub repository:\n\n.. code-block:: bash\n\n  $ git clone https://github.com/ing-bank/popmon.git\n  $ pip install -e popmon\n\nwhere in this example the code is installed in edit mode (option -e).\n\nYou can now use the package in Python with:\n\n.. code-block:: python\n\n  import popmon\n\n**Congratulations, you are now ready to use the popmon library!**\n\nQuick run\n=========\n\nAs a quick example, you can do:\n\n.. code-block:: python\n\n  import pandas as pd\n  import popmon\n  from popmon import resources\n\n  # open synthetic data\n  df = pd.read_csv(resources.data('test.csv.gz'))\n  df['date'] = pd.to_datetime(df['date'])\n  df.head()\n\n  # generate stability report using automatic binning of all encountered features\n  report = df.pm_stability_report(time_axis='date')\n\n  # to show the output of the report in a Jupyter notebook you can simply run:\n  report\n\n  # or save the report to file and open in a browser\n  report.to_file(\"monitoring_report.html\")\n\nTo specify your own binning specifications and features you want to report on, you do:\n\n.. code-block:: python\n\n  # time-axis specifications alone; all other features are auto-binned.\n  report = df.pm_stability_report(time_axis='date', time_width='1w', time_offset='2020-1-6')\n\n  # histogram selections. Here 'date' is the first axis of each histogram.\n  features=[\n      'date:isActive', 'date:age', 'date:eyeColor', 'date:gender',\n      'date:latitude', 'date:longitude', 'date:isActive:age'\n  ]\n\n  # Specify your own binning specifications for individual features or combinations thereof.\n  # This bin specification uses open-ended (\"sparse\") histograms; unspecified features get\n  # auto-binned. The time-axis binning, when specified here, needs to be in nanoseconds.\n  bin_specs={\n      'longitude': {'bin_width': 5.0, 'bin_offset': 0.0},\n      'latitude': {'bin_width': 5.0, 'bin_offset': 0.0},\n      'age': {'bin_width': 10.0, 'bin_offset': 0.0},\n      'date': {'bin_width': pd.Timedelta('4w').value,\n               'bin_offset': pd.Timestamp('2015-1-1').value}\n  }\n\n  # generate stability report\n  report = df.pm_stability_report(features=features, bin_specs=bin_specs, time_axis=True)\n\nThese examples also work with spark dataframes.\nYou can see the output of such example notebook code `here <http://crclz.com/popmon/reports/test_data_report.html>`_.\nFor all available examples, please see the `tutorials <https://popmon.readthedocs.io/en/latest/tutorials.html>`_ at read-the-docs.\n\nContact and support\n===================\n\n* Issues & Ideas & Support: https://github.com/ing-bank/popmon/issues\n\nPlease note that ING WBAA provides support only on a best-effort basis.\n\nLicense\n=======\nCopyright ING WBAA. `popmon` is completely free, open-source and licensed under the `MIT license <https://en.wikipedia.org/wiki/MIT_License>`_.\n\n.. |logo| image:: https://raw.githubusercontent.com/ing-bank/popmon/master/docs/source/assets/popmon-logo.png\n    :alt: POPMON logo\n    :target: https://github.com/ing-bank/popmon\n.. |build| image:: https://github.com/ing-bank/popmon/workflows/build/badge.svg\n    :alt: Build status\n.. |docs| image:: https://readthedocs.org/projects/popmon/badge/?version=latest\n    :alt: Package docs status\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ing-bank/popmon", "keywords": "pandas spark data-science data-analysis monitoring statistics python jupyter ipython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "popmon", "package_url": "https://pypi.org/project/popmon/", "platform": "", "project_url": "https://pypi.org/project/popmon/", "project_urls": {"Homepage": "https://github.com/ing-bank/popmon"}, "release_url": "https://pypi.org/project/popmon/0.3.3/", "requires_dist": ["numpy", "pandas (>=0.25.1)", "scipy (>=1.1.0)", "histogrammar (>=1.0.12)", "phik", "jinja2", "tqdm", "matplotlib (>=2.2.3)", "joblib (>=0.14.0)", "pybase64 (>=1.0.1)", "htmlmin"], "requires_python": ">=3.6", "summary": "Monitor the stability of a pandas or spark dataset", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/530a3d2cb0d90ed135d3884414e049609b9e2446/68747470733a2f2f6769746875622e636f6d2f696e672d62616e6b2f706f706d6f6e2f776f726b666c6f77732f6275696c642f62616467652e737667\"> <img alt=\"Package docs status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/258d0ed24672ea4a4bc4efe28b6022fff666173d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706f706d6f6e2f62616467652f3f76657273696f6e3d6c6174657374\"></p>\n<ul>\n<li>Version: 0.3.3. Released: April 2020</li>\n<li>Documentation: <a href=\"https://popmon.readthedocs.io\" rel=\"nofollow\">https://popmon.readthedocs.io</a></li>\n<li>Repository: <a href=\"https://github.com/ing-bank/popmon\" rel=\"nofollow\">https://github.com/ing-bank/popmon</a></li>\n<li>Authors: ING Wholesale Banking Advanced Analytics</li>\n</ul>\n<div>\n<div><br></div>\n</div>\n<p><a href=\"https://github.com/ing-bank/popmon\" rel=\"nofollow\"><img alt=\"POPMON logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a99f608665e4c7a29064b57010ff1db82edcdf50/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f696e672d62616e6b2f706f706d6f6e2f6d61737465722f646f63732f736f757263652f6173736574732f706f706d6f6e2d6c6f676f2e706e67\"></a></p>\n<p><cite>popmon</cite> is a package that allows one to check the stability of a dataset.\n<cite>popmon</cite> works with both pandas and spark datasets.</p>\n<p><cite>popmon</cite> creates histograms of features binned in time-slices,\nand compares the stability of the profiles and distributions of\nthose histograms using statistical tests, both over time and with respect to a reference.\nIt works with numerical, ordinal, categorical features, and the histograms can be higher-dimensional,\ne.g. it can also track correlations between any two features.\n<cite>popmon</cite> can automatically flag and alert on changes observed over time, such\nas trends, shifts, peaks, outliers, anomalies, changing correlations, etc,\nusing monitoring business rules.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The entire <cite>popmon</cite> documentation including tutorials can be found at <a href=\"https://popmon.readthedocs.io\" rel=\"nofollow\">read-the-docs</a>.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<ul>\n<li><a href=\"http://crclz.com/popmon/reports/flight_delays_report.html\" rel=\"nofollow\">Flight Delays and Cancellations Kaggle data</a></li>\n<li><a href=\"http://crclz.com/popmon/reports/test_data_report.html\" rel=\"nofollow\">Synthetic data (code example below)</a></li>\n</ul>\n</div>\n<div id=\"check-it-out\">\n<h2>Check it out</h2>\n<p>The <cite>popmon</cite> library requires Python 3.6 and is pip friendly. To get started, simply do:</p>\n<pre>$ pip install popmon\n</pre>\n<p>or check out the code from our GitHub repository:</p>\n<pre>$ git clone https://github.com/ing-bank/popmon.git\n$ pip install -e popmon\n</pre>\n<p>where in this example the code is installed in edit mode (option -e).</p>\n<p>You can now use the package in Python with:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">popmon</span>\n</pre>\n<p><strong>Congratulations, you are now ready to use the popmon library!</strong></p>\n</div>\n<div id=\"quick-run\">\n<h2>Quick run</h2>\n<p>As a quick example, you can do:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">popmon</span>\n<span class=\"kn\">from</span> <span class=\"nn\">popmon</span> <span class=\"kn\">import</span> <span class=\"n\">resources</span>\n\n<span class=\"c1\"># open synthetic data</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"s1\">'test.csv.gz'</span><span class=\"p\">))</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'date'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'date'</span><span class=\"p\">])</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># generate stability report using automatic binning of all encountered features</span>\n<span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">pm_stability_report</span><span class=\"p\">(</span><span class=\"n\">time_axis</span><span class=\"o\">=</span><span class=\"s1\">'date'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># to show the output of the report in a Jupyter notebook you can simply run:</span>\n<span class=\"n\">report</span>\n\n<span class=\"c1\"># or save the report to file and open in a browser</span>\n<span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">to_file</span><span class=\"p\">(</span><span class=\"s2\">\"monitoring_report.html\"</span><span class=\"p\">)</span>\n</pre>\n<p>To specify your own binning specifications and features you want to report on, you do:</p>\n<pre><span class=\"c1\"># time-axis specifications alone; all other features are auto-binned.</span>\n<span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">pm_stability_report</span><span class=\"p\">(</span><span class=\"n\">time_axis</span><span class=\"o\">=</span><span class=\"s1\">'date'</span><span class=\"p\">,</span> <span class=\"n\">time_width</span><span class=\"o\">=</span><span class=\"s1\">'1w'</span><span class=\"p\">,</span> <span class=\"n\">time_offset</span><span class=\"o\">=</span><span class=\"s1\">'2020-1-6'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># histogram selections. Here 'date' is the first axis of each histogram.</span>\n<span class=\"n\">features</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"s1\">'date:isActive'</span><span class=\"p\">,</span> <span class=\"s1\">'date:age'</span><span class=\"p\">,</span> <span class=\"s1\">'date:eyeColor'</span><span class=\"p\">,</span> <span class=\"s1\">'date:gender'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'date:latitude'</span><span class=\"p\">,</span> <span class=\"s1\">'date:longitude'</span><span class=\"p\">,</span> <span class=\"s1\">'date:isActive:age'</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># Specify your own binning specifications for individual features or combinations thereof.</span>\n<span class=\"c1\"># This bin specification uses open-ended (\"sparse\") histograms; unspecified features get</span>\n<span class=\"c1\"># auto-binned. The time-axis binning, when specified here, needs to be in nanoseconds.</span>\n<span class=\"n\">bin_specs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'longitude'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'bin_width'</span><span class=\"p\">:</span> <span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"s1\">'bin_offset'</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">},</span>\n    <span class=\"s1\">'latitude'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'bin_width'</span><span class=\"p\">:</span> <span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"s1\">'bin_offset'</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">},</span>\n    <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'bin_width'</span><span class=\"p\">:</span> <span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"s1\">'bin_offset'</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">},</span>\n    <span class=\"s1\">'date'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'bin_width'</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timedelta</span><span class=\"p\">(</span><span class=\"s1\">'4w'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n             <span class=\"s1\">'bin_offset'</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">'2015-1-1'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># generate stability report</span>\n<span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">pm_stability_report</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"o\">=</span><span class=\"n\">features</span><span class=\"p\">,</span> <span class=\"n\">bin_specs</span><span class=\"o\">=</span><span class=\"n\">bin_specs</span><span class=\"p\">,</span> <span class=\"n\">time_axis</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>These examples also work with spark dataframes.\nYou can see the output of such example notebook code <a href=\"http://crclz.com/popmon/reports/test_data_report.html\" rel=\"nofollow\">here</a>.\nFor all available examples, please see the <a href=\"https://popmon.readthedocs.io/en/latest/tutorials.html\" rel=\"nofollow\">tutorials</a> at read-the-docs.</p>\n</div>\n<div id=\"contact-and-support\">\n<h2>Contact and support</h2>\n<ul>\n<li>Issues &amp; Ideas &amp; Support: <a href=\"https://github.com/ing-bank/popmon/issues\" rel=\"nofollow\">https://github.com/ing-bank/popmon/issues</a></li>\n</ul>\n<p>Please note that ING WBAA provides support only on a best-effort basis.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright ING WBAA. <cite>popmon</cite> is completely free, open-source and licensed under the <a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7138789, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "2b6b0230505dcf6e5719a5684d2db118", "sha256": "3f76a6bb90c4f5800ec52ebad490c4569ebc671573533b12d616e9ee497467dd"}, "downloads": -1, "filename": "popmon-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b6b0230505dcf6e5719a5684d2db118", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 333974, "upload_time": "2020-04-29T17:43:05", "upload_time_iso_8601": "2020-04-29T17:43:05.643947Z", "url": "https://files.pythonhosted.org/packages/ea/6d/76ec0007b83324f053d23c738221437854455040ba531cad4c48732abca5/popmon-0.3.1-py3-none-any.whl", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0dde570c4365cab350a46a21d670713b", "sha256": "e6e47cf0eb4bef76321f1111324c203866ed25bcd94d0e3f3073e61f7dc71f29"}, "downloads": -1, "filename": "popmon-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0dde570c4365cab350a46a21d670713b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 334902, "upload_time": "2020-04-30T14:05:01", "upload_time_iso_8601": "2020-04-30T14:05:01.883036Z", "url": "https://files.pythonhosted.org/packages/4b/32/6ba1c2b453aa293432997f86f24aa5ebf2f8496a3e0272cc94785344d21e/popmon-0.3.2-py3-none-any.whl", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "2cf65c767ebd61e507d39a9237642e07", "sha256": "af408e5c237f3c19b0627e9d16bb0c5639e5ca00800c1ae132c7d56f69d4ccab"}, "downloads": -1, "filename": "popmon-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2cf65c767ebd61e507d39a9237642e07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 335991, "upload_time": "2020-04-30T16:55:41", "upload_time_iso_8601": "2020-04-30T16:55:41.904557Z", "url": "https://files.pythonhosted.org/packages/51/81/06fb2e14fe9d8747308f1c82e90147d8192c6ee2c09d99311658f58c97ee/popmon-0.3.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2cf65c767ebd61e507d39a9237642e07", "sha256": "af408e5c237f3c19b0627e9d16bb0c5639e5ca00800c1ae132c7d56f69d4ccab"}, "downloads": -1, "filename": "popmon-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2cf65c767ebd61e507d39a9237642e07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 335991, "upload_time": "2020-04-30T16:55:41", "upload_time_iso_8601": "2020-04-30T16:55:41.904557Z", "url": "https://files.pythonhosted.org/packages/51/81/06fb2e14fe9d8747308f1c82e90147d8192c6ee2c09d99311658f58c97ee/popmon-0.3.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:51:34 2020"}