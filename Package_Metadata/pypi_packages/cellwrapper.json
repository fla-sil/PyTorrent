{"info": {"author": "Scott Furlan", "author_email": "scottfurlan@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# cellwrapper\n==========\n\n\n\n\ncellwrapper is a wrapper around the cellranger product from 10X genomics that automates all processing of multiple samples from flowcell to matrix.\n\nDocumentation can be accessed using:\n```\ncellwrapper --help\n```\n\nIMPORTANT: Only cellranger 2.X versions are supported for current version. A tag for cellranger1.X\nis made within the repo and may be used as needed:\n```\ngit checkout tags/cellranger1.X\n```\n\n## Basic Usage\n```\ncellwrapper sample_sheet.txt --samplelimit 4\n```\n\nSee section below for sample\\_sheet.txt format. `--samplelimit` controls the number of samples that can be processed simultaneously (to keep IT and your disk quota happy).\n\nAll `cellranger demux` and `cellranger run` (or count for cellranger 1.2+) processes will run automatically and logging info will be displayed. Final output will be located in folders named after their sample ID (see below).\n\n## Samplesheet\nA few basic details are provided for each sample in a tab-delimited text file called a sample sheet. For example:\n```\ntest_sample1    SI-P03-A3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample2    SI-P03-B3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample3    SI-P03-C3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample4    SI-P03-D3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample5    SI-P03-E3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample6    SI-P03-F3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\n```\n\nUsers must define 5 columns:\n- `sample ID`: name of sample; used as output directory for sample\n- `sample index`: ID or sequence of barcode used to index sample\n- `flowcell`: path of BCL directory for sequencing run.\n\t- **May be comma separated list of flowcells and runs will automatically be combined**\n- `reference`: id of reference to use for sample (see default install section)\n- `cell count`: approximate cell count for the sample\n- `pipeline`: versioned name of the pipeline you want to use (see default install section).\n\nEach sample is entirely independent and may have different flow cells, etc. Note that when using the --aggregate option all samples must have the same reference and pipeline version.\n\n### Note on Excel\nIf you make sample sheets in Excel and save as tab-delimited text, the pipeline with automatically deal with the windows-style newline characters that curse Excel.\n\n## Requirements\n- You must have read access to Trapnell Lab filesystem (by default will use our common installation) **or** you may specify your own installation directory (the parent directory containing both the refdata and pipeline folders).\n\n- For us, it helps to specify a default queue for SGE. Put `-q trapnell-long.q` (or your queue instead) in a file called ~/.sge\\_request.\n\n- You must `module load python/2.7.3` or any `2.7+` or 3.X version of python to run `cellwrapper`.\n\n- `cellranger` has other requirements, but the software ones are dealt with automatically (see [10X documentation](http://software.10xgenomics.com/single-cell/overview/system-requirements)).\n\n## Default Install\nThe Trapnell Lab maintains a group-wide install for general use. Additional custom references can be added on request.\n\n(Updated September 29, 2017)\nCurrently maintained at `/net/trapnell/vol1/tenx_software`\n\nSupported pipeline/reference combinations in common install:\n```\ncellranger-1.0.0\n\t- ercc92\n\t- hg19\n\t- hg19_and_mm10\n\t- mm10\n\ncellranger-1.1.0\n\t- ercc92\n\t- hg19\n\t- hg19_and_mm10\n\t- mm10\n\t- mm10_rc (Raghav Chawla, 07/28/2016)\n\t\t- mm10 + CARD11-GFP and MYD88-BFP transgenes\n\t- mm12_rc (Raghav Chawla, 12/12/2016)\n\t\t- New custom mouse reference based on M12 GTF and GRCm38.p5 FASTA\n\t\t- GTF filtered to include IG and TCR genes\n\t\t- + CARD11-GFP and MYD88-BFP transgenes as above\n\t- mm12_rc_vs2 (Raghav Chawla, 12/14/2016)\n\t\t- mm12_rc modified so Ighm and Ighg1 transcripts are recognized as separate genes\n\t\t- Edited transgenes annotations\n\ncellranger-1.2.1\n\t- ercc92\n\t- GRCh38\n\t- hg19\n\t- hg19_and_mm10\n\t- mm10\n\ncellranger-1.3.0\n        - ercc92\n        - GRCh38\n        - hg19\n        - hg19_and_mm10\n        - mm10\n        - mm12_rc_vs2 (same as above)\n\ncellranger-1.3.1\n        - ercc92\n        - GRCh38\n        - hg19\n        - hg19_and_mm10\n\t- hg19_mg_transgenes (from Molly Gasperini, adds Cas9, mCherry, etc.)\n        - mm10\n        - mm12_rc_vs2 (same as above)\n\t- zg10 (from Lauren Saunders, Zebrafish)\n\t- zg10-plus (from Lauren Saunders, Zebrafish plus transgenes)\n\ncellranger-2.0.2\n        - ercc92\n        - GRCh38\n        - hg19\n        - hg19_and_mm10\n        - hg19_mg_transgenes (from Molly Gasperini, adds Cas9, mCherry, etc.)\n        - mm10\n        - mm12_rc_vs2 (same as above)\n        - zg10 (from Lauren Saunders, Zebrafish)\n        - zg10-plus (from Lauren Saunders, Zebrafish plus transgenes)\n\ncellranger-latest (symbolic link to latest version)\n```\n\nIMPORTANT: Only cellranger 2.X versions are supported for current version. A tag for cellranger1.X is made within the repo and may be used as needed:\n```\ngit checkout tags/cellranger1.X\n```\n\n## Custom Installs\nYou may also choose to download and install cellranger yourself and point to this installation using the `--installation` argument.\n\nPlease consider that we have encountered Trapnell Lab specific discrepancies between what 10X software expects as behavior from SGE and what it actually does in our setup, particularly with respect to transmission of environment variables. Please see our installation job templates for strategies we have used to combat these problems (`/net/trapnell/vol1/tenx_software/cellranger-1.1.0/martian-cs/2.0.0/jobmanagers/sge.template`, for example).\n\nThis is not true of all clusters within UW GS and certainly not all SGE clusters more generally; in almost all cases simpler job templates work fine...\n\n## Putting cellwrapper on your PATH\nYou can also put cellwrapper somewhere (such as `~/bin/cellwrapper`) and put it on your path: `PATH=~/bin/:$PATH; export PATH`, or point to it with an absolute path. Add exports to your `~/.bashrc` to make this happen automatically every time you log in.\n\n## Logging\nOutput from `cellranger` is logged in a file called `cellranger.log` (or a file of your choosing with `--cellranger_log` option). `cellwrapper` will log its own progress in stdout. For example:\n```\n[CELLWRAPPER]: 2016-07-10 03:30:07,547: At job limit (4). Holding test_sample3_SI-P03-C3. [4 queued; 0 completed; 0 failed] [UI ports: 36889, 39518, 41749, 60420]\n```\n\nThese messages will continue to refresh as jobs complete.\n\n## Note on Demux\nDemultiplexing will be carried out for any flow cell where the demux output is not already detected in the current working directory.\n\n## Archived Runs\nThere are some BCL directories that get archived eventually. This means that some of the BCL directory contents needed for cellwrapper are no longer present (RunInfo.xml, for example). For NextSeq runs, you may add the `--archived` flag and cellwrapper will attempt to make things work without the original files. Original demux output must be in place for this to work.\n\n## Aggregation\ncellranger 1.2+ support a pipeline called [aggr](https://support.10xgenomics.com/single-cell/software/pipelines/latest/using/aggregate) that allows automatic combination and sequencing depth normalization of many samples into a single dataset. It will also re-perform all secondary analysis etc. -- all done efficiently from the molecule_h5 files rather than re-aligning, etc.\n\nThis can be done automatically for all samples in the sample sheet by specifying an output directory name with the `--aggregate` command line argument. For example:\n\n```\ncellwrapper [other options] --aggregate aggregated_samples\n```\n\nThis is only valid for sample with identical reference genomes that are run using the same version of cellranger 1.2+.\n\nIf you want to alter which samples are aggregated, you may want to run cellranger aggr manually, please use the automatically generated aggr sample sheet `[aggregation output directory].aggregation.csv` as a starting point and see aggr documentation for instructions.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scfurl/cellwrapper.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cellwrapper", "package_url": "https://pypi.org/project/cellwrapper/", "platform": "", "project_url": "https://pypi.org/project/cellwrapper/", "project_urls": {"Homepage": "https://github.com/scfurl/cellwrapper.git"}, "release_url": "https://pypi.org/project/cellwrapper/0.1.4/", "requires_dist": ["six (>=1)"], "requires_python": ">=2.5", "summary": "A python wrapper for fast and parallel processing of cellranger runs", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cellwrapper</h1>\n<p>==========</p>\n<p>cellwrapper is a wrapper around the cellranger product from 10X genomics that automates all processing of multiple samples from flowcell to matrix.</p>\n<p>Documentation can be accessed using:</p>\n<pre><code>cellwrapper --help\n</code></pre>\n<p>IMPORTANT: Only cellranger 2.X versions are supported for current version. A tag for cellranger1.X\nis made within the repo and may be used as needed:</p>\n<pre><code>git checkout tags/cellranger1.X\n</code></pre>\n<h2>Basic Usage</h2>\n<pre><code>cellwrapper sample_sheet.txt --samplelimit 4\n</code></pre>\n<p>See section below for sample_sheet.txt format. <code>--samplelimit</code> controls the number of samples that can be processed simultaneously (to keep IT and your disk quota happy).</p>\n<p>All <code>cellranger demux</code> and <code>cellranger run</code> (or count for cellranger 1.2+) processes will run automatically and logging info will be displayed. Final output will be located in folders named after their sample ID (see below).</p>\n<h2>Samplesheet</h2>\n<p>A few basic details are provided for each sample in a tab-delimited text file called a sample sheet. For example:</p>\n<pre><code>test_sample1    SI-P03-A3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample2    SI-P03-B3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample3    SI-P03-C3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample4    SI-P03-D3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample5    SI-P03-E3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\ntest_sample6    SI-P03-F3       /net/shendure/vol9/seq/NEXTSEQ/160708_NS500488_0197_AHN3FKBGXX  hg19  4000\tcellranger-2.0.2\n</code></pre>\n<p>Users must define 5 columns:</p>\n<ul>\n<li><code>sample ID</code>: name of sample; used as output directory for sample</li>\n<li><code>sample index</code>: ID or sequence of barcode used to index sample</li>\n<li><code>flowcell</code>: path of BCL directory for sequencing run.\n<ul>\n<li><strong>May be comma separated list of flowcells and runs will automatically be combined</strong></li>\n</ul>\n</li>\n<li><code>reference</code>: id of reference to use for sample (see default install section)</li>\n<li><code>cell count</code>: approximate cell count for the sample</li>\n<li><code>pipeline</code>: versioned name of the pipeline you want to use (see default install section).</li>\n</ul>\n<p>Each sample is entirely independent and may have different flow cells, etc. Note that when using the --aggregate option all samples must have the same reference and pipeline version.</p>\n<h3>Note on Excel</h3>\n<p>If you make sample sheets in Excel and save as tab-delimited text, the pipeline with automatically deal with the windows-style newline characters that curse Excel.</p>\n<h2>Requirements</h2>\n<ul>\n<li>\n<p>You must have read access to Trapnell Lab filesystem (by default will use our common installation) <strong>or</strong> you may specify your own installation directory (the parent directory containing both the refdata and pipeline folders).</p>\n</li>\n<li>\n<p>For us, it helps to specify a default queue for SGE. Put <code>-q trapnell-long.q</code> (or your queue instead) in a file called ~/.sge_request.</p>\n</li>\n<li>\n<p>You must <code>module load python/2.7.3</code> or any <code>2.7+</code> or 3.X version of python to run <code>cellwrapper</code>.</p>\n</li>\n<li>\n<p><code>cellranger</code> has other requirements, but the software ones are dealt with automatically (see <a href=\"http://software.10xgenomics.com/single-cell/overview/system-requirements\" rel=\"nofollow\">10X documentation</a>).</p>\n</li>\n</ul>\n<h2>Default Install</h2>\n<p>The Trapnell Lab maintains a group-wide install for general use. Additional custom references can be added on request.</p>\n<p>(Updated September 29, 2017)\nCurrently maintained at <code>/net/trapnell/vol1/tenx_software</code></p>\n<p>Supported pipeline/reference combinations in common install:</p>\n<pre><code>cellranger-1.0.0\n\t- ercc92\n\t- hg19\n\t- hg19_and_mm10\n\t- mm10\n\ncellranger-1.1.0\n\t- ercc92\n\t- hg19\n\t- hg19_and_mm10\n\t- mm10\n\t- mm10_rc (Raghav Chawla, 07/28/2016)\n\t\t- mm10 + CARD11-GFP and MYD88-BFP transgenes\n\t- mm12_rc (Raghav Chawla, 12/12/2016)\n\t\t- New custom mouse reference based on M12 GTF and GRCm38.p5 FASTA\n\t\t- GTF filtered to include IG and TCR genes\n\t\t- + CARD11-GFP and MYD88-BFP transgenes as above\n\t- mm12_rc_vs2 (Raghav Chawla, 12/14/2016)\n\t\t- mm12_rc modified so Ighm and Ighg1 transcripts are recognized as separate genes\n\t\t- Edited transgenes annotations\n\ncellranger-1.2.1\n\t- ercc92\n\t- GRCh38\n\t- hg19\n\t- hg19_and_mm10\n\t- mm10\n\ncellranger-1.3.0\n        - ercc92\n        - GRCh38\n        - hg19\n        - hg19_and_mm10\n        - mm10\n        - mm12_rc_vs2 (same as above)\n\ncellranger-1.3.1\n        - ercc92\n        - GRCh38\n        - hg19\n        - hg19_and_mm10\n\t- hg19_mg_transgenes (from Molly Gasperini, adds Cas9, mCherry, etc.)\n        - mm10\n        - mm12_rc_vs2 (same as above)\n\t- zg10 (from Lauren Saunders, Zebrafish)\n\t- zg10-plus (from Lauren Saunders, Zebrafish plus transgenes)\n\ncellranger-2.0.2\n        - ercc92\n        - GRCh38\n        - hg19\n        - hg19_and_mm10\n        - hg19_mg_transgenes (from Molly Gasperini, adds Cas9, mCherry, etc.)\n        - mm10\n        - mm12_rc_vs2 (same as above)\n        - zg10 (from Lauren Saunders, Zebrafish)\n        - zg10-plus (from Lauren Saunders, Zebrafish plus transgenes)\n\ncellranger-latest (symbolic link to latest version)\n</code></pre>\n<p>IMPORTANT: Only cellranger 2.X versions are supported for current version. A tag for cellranger1.X is made within the repo and may be used as needed:</p>\n<pre><code>git checkout tags/cellranger1.X\n</code></pre>\n<h2>Custom Installs</h2>\n<p>You may also choose to download and install cellranger yourself and point to this installation using the <code>--installation</code> argument.</p>\n<p>Please consider that we have encountered Trapnell Lab specific discrepancies between what 10X software expects as behavior from SGE and what it actually does in our setup, particularly with respect to transmission of environment variables. Please see our installation job templates for strategies we have used to combat these problems (<code>/net/trapnell/vol1/tenx_software/cellranger-1.1.0/martian-cs/2.0.0/jobmanagers/sge.template</code>, for example).</p>\n<p>This is not true of all clusters within UW GS and certainly not all SGE clusters more generally; in almost all cases simpler job templates work fine...</p>\n<h2>Putting cellwrapper on your PATH</h2>\n<p>You can also put cellwrapper somewhere (such as <code>~/bin/cellwrapper</code>) and put it on your path: <code>PATH=~/bin/:$PATH; export PATH</code>, or point to it with an absolute path. Add exports to your <code>~/.bashrc</code> to make this happen automatically every time you log in.</p>\n<h2>Logging</h2>\n<p>Output from <code>cellranger</code> is logged in a file called <code>cellranger.log</code> (or a file of your choosing with <code>--cellranger_log</code> option). <code>cellwrapper</code> will log its own progress in stdout. For example:</p>\n<pre><code>[CELLWRAPPER]: 2016-07-10 03:30:07,547: At job limit (4). Holding test_sample3_SI-P03-C3. [4 queued; 0 completed; 0 failed] [UI ports: 36889, 39518, 41749, 60420]\n</code></pre>\n<p>These messages will continue to refresh as jobs complete.</p>\n<h2>Note on Demux</h2>\n<p>Demultiplexing will be carried out for any flow cell where the demux output is not already detected in the current working directory.</p>\n<h2>Archived Runs</h2>\n<p>There are some BCL directories that get archived eventually. This means that some of the BCL directory contents needed for cellwrapper are no longer present (RunInfo.xml, for example). For NextSeq runs, you may add the <code>--archived</code> flag and cellwrapper will attempt to make things work without the original files. Original demux output must be in place for this to work.</p>\n<h2>Aggregation</h2>\n<p>cellranger 1.2+ support a pipeline called <a href=\"https://support.10xgenomics.com/single-cell/software/pipelines/latest/using/aggregate\" rel=\"nofollow\">aggr</a> that allows automatic combination and sequencing depth normalization of many samples into a single dataset. It will also re-perform all secondary analysis etc. -- all done efficiently from the molecule_h5 files rather than re-aligning, etc.</p>\n<p>This can be done automatically for all samples in the sample sheet by specifying an output directory name with the <code>--aggregate</code> command line argument. For example:</p>\n<pre><code>cellwrapper [other options] --aggregate aggregated_samples\n</code></pre>\n<p>This is only valid for sample with identical reference genomes that are run using the same version of cellranger 1.2+.</p>\n<p>If you want to alter which samples are aggregated, you may want to run cellranger aggr manually, please use the automatically generated aggr sample sheet <code>[aggregation output directory].aggregation.csv</code> as a starting point and see aggr documentation for instructions.</p>\n\n          </div>"}, "last_serial": 6596286, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "58499ed67ac08b1178b28f2bdd1fdaac", "sha256": "e63e3ed6bc8d700a54ed3c8b484e243f36f597a3fb43c504e0eb3261cff65b05"}, "downloads": -1, "filename": "cellwrapper-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "58499ed67ac08b1178b28f2bdd1fdaac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16837, "upload_time": "2020-02-09T03:27:09", "upload_time_iso_8601": "2020-02-09T03:27:09.704870Z", "url": "https://files.pythonhosted.org/packages/c8/09/d0d03af0e7ec1222ec1915fa3bb5e867a67ff26b35d521a5f59312ee8d5a/cellwrapper-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9177743c2c92018d53991f5cb9c7ee8f", "sha256": "edab39f70409b5acd580707d46139532f873bdbd723902a4cae9bc1e58cacae4"}, "downloads": -1, "filename": "cellwrapper-0.1.tar.gz", "has_sig": false, "md5_digest": "9177743c2c92018d53991f5cb9c7ee8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 17827, "upload_time": "2020-02-09T03:27:12", "upload_time_iso_8601": "2020-02-09T03:27:12.341003Z", "url": "https://files.pythonhosted.org/packages/cd/86/6032814cb68333c6235d22ad4dbabbaaadd95892f9f496280cea7e0de2ab/cellwrapper-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "873bc19da7291bc23cc41490079c8feb", "sha256": "f3b3a8ab84b32000cba52b1d4ab522690fa0d85a4b039f67938f2096db9a76d6"}, "downloads": -1, "filename": "cellwrapper-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "873bc19da7291bc23cc41490079c8feb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16854, "upload_time": "2020-02-09T03:29:38", "upload_time_iso_8601": "2020-02-09T03:29:38.193763Z", "url": "https://files.pythonhosted.org/packages/43/c6/29fa178cbdf8316e5daac26972db404cbeea15960299427136bb2318c866/cellwrapper-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9530e0b351195905d9b5f2cb75ab5e2c", "sha256": "8b8748b78971a65060e96d16f3d45e5fada2e6136b5676cbd62fd5399ad8f0e4"}, "downloads": -1, "filename": "cellwrapper-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9530e0b351195905d9b5f2cb75ab5e2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 17813, "upload_time": "2020-02-09T03:29:39", "upload_time_iso_8601": "2020-02-09T03:29:39.726151Z", "url": "https://files.pythonhosted.org/packages/f9/1b/30372e2df6414e0149e3de737c5fe8d08608264357f7044644e1485c0381/cellwrapper-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9efd959383e1864c9ab3c5a326b3a3fd", "sha256": "9a1d31c3b696d03382a03d2507bfb93957430d0001efa8521285f5bf3c46881b"}, "downloads": -1, "filename": "cellwrapper-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9efd959383e1864c9ab3c5a326b3a3fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16859, "upload_time": "2020-02-09T03:32:58", "upload_time_iso_8601": "2020-02-09T03:32:58.955651Z", "url": "https://files.pythonhosted.org/packages/44/74/efbd480fbc1d1e2a4a37806f4f1285558eaf710808eb1d3b268dc737d696/cellwrapper-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7d6093b010a79044db7f91a2aa1a398", "sha256": "2ad523748b8167ed75ed1e6967b35a400a5a3d93c9d94b16e727291567452e42"}, "downloads": -1, "filename": "cellwrapper-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b7d6093b010a79044db7f91a2aa1a398", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 17822, "upload_time": "2020-02-09T03:33:00", "upload_time_iso_8601": "2020-02-09T03:33:00.525140Z", "url": "https://files.pythonhosted.org/packages/25/5b/5e3af4d1263956059b132562c04a4917ca17f2356e3173a1c1c30477b9a7/cellwrapper-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b613a73872f7602c6f46c7e5f3f64977", "sha256": "d89e1c62706f18ce2076205f214d3254e83185a0d8e31df4ec04e11a41ec0ac2"}, "downloads": -1, "filename": "cellwrapper-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b613a73872f7602c6f46c7e5f3f64977", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16864, "upload_time": "2020-02-09T03:38:50", "upload_time_iso_8601": "2020-02-09T03:38:50.084585Z", "url": "https://files.pythonhosted.org/packages/60/c8/2d87eccd403926a3974bc2bff1d554329403f138946d946e381cc62bd217/cellwrapper-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95ae8219d064f4127cc28c494357def4", "sha256": "444fb3ac09e59f7f117d56e0111470263720f1478b0d212957c3e81b44aff032"}, "downloads": -1, "filename": "cellwrapper-0.1.3.tar.gz", "has_sig": false, "md5_digest": "95ae8219d064f4127cc28c494357def4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 17824, "upload_time": "2020-02-09T03:38:51", "upload_time_iso_8601": "2020-02-09T03:38:51.691934Z", "url": "https://files.pythonhosted.org/packages/62/b0/dd46d60e7e392cc821649c36e5b410c6133f3ac1a9de5b65ed0bb8f6d7e7/cellwrapper-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "44b24f0abd48d5bb5c915eb6f764e6cd", "sha256": "6acebc9d6cb92cadbed34faadba3855a011746a91b5048bb28474a5d7dfbf1bc"}, "downloads": -1, "filename": "cellwrapper-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "44b24f0abd48d5bb5c915eb6f764e6cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16863, "upload_time": "2020-02-09T03:46:26", "upload_time_iso_8601": "2020-02-09T03:46:26.757230Z", "url": "https://files.pythonhosted.org/packages/01/7f/0e59549c645df2230e77dbddcfdcdcbaae34c004f7407d1a8beb9ac88620/cellwrapper-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e438c988959ad4d10b9e25bb807cfac2", "sha256": "1a2c70a518f667f035afe658c100baf85e72c36545ff3ee51ab6f4ca4797a94f"}, "downloads": -1, "filename": "cellwrapper-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e438c988959ad4d10b9e25bb807cfac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 17830, "upload_time": "2020-02-09T03:46:28", "upload_time_iso_8601": "2020-02-09T03:46:28.346098Z", "url": "https://files.pythonhosted.org/packages/1d/c9/855f04885479927388be1994ea08abd70b4b0a0c7c53474ee8cef0046646/cellwrapper-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44b24f0abd48d5bb5c915eb6f764e6cd", "sha256": "6acebc9d6cb92cadbed34faadba3855a011746a91b5048bb28474a5d7dfbf1bc"}, "downloads": -1, "filename": "cellwrapper-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "44b24f0abd48d5bb5c915eb6f764e6cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16863, "upload_time": "2020-02-09T03:46:26", "upload_time_iso_8601": "2020-02-09T03:46:26.757230Z", "url": "https://files.pythonhosted.org/packages/01/7f/0e59549c645df2230e77dbddcfdcdcbaae34c004f7407d1a8beb9ac88620/cellwrapper-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e438c988959ad4d10b9e25bb807cfac2", "sha256": "1a2c70a518f667f035afe658c100baf85e72c36545ff3ee51ab6f4ca4797a94f"}, "downloads": -1, "filename": "cellwrapper-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e438c988959ad4d10b9e25bb807cfac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 17830, "upload_time": "2020-02-09T03:46:28", "upload_time_iso_8601": "2020-02-09T03:46:28.346098Z", "url": "https://files.pythonhosted.org/packages/1d/c9/855f04885479927388be1994ea08abd70b4b0a0c7c53474ee8cef0046646/cellwrapper-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:49 2020"}