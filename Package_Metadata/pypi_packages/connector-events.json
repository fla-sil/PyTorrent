{"info": {"author": "Ben Lopatin", "author_email": "ben@wellfire.co", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "================\nconnector-events\n================\n\n.. image:: https://badge.fury.io/py/connector-events.png\n    :target: https://badge.fury.io/py/connector-events\n\n.. image:: https://travis-ci.org/rva-data/connector-events.png?branch=master\n    :target: https://travis-ci.org/rva-data/connector-events\n\n.. image:: https://coveralls.io/repos/rva-data/connector-events/badge.png?branch=master\n    :target: https://coveralls.io/r/rva-data/connector-events?branch=master\n\nConnector events is a Django application for tracking events. It has\nthe typical list and detail views you expect and an iCal feed for\neasily sharing event data.\n\nIt was designed as a component for a 'connector' project, tracking\nevents for a community from multiple sources. However it can also be\nused on it's own.\n\n.. Documentation\n.. -------------\n\n.. The full documentation is at https://connector-events.readthedocs.org.\n\nQuickstart\n----------\n\nInstall connector-events::\n\n    pip install connector-events\n\nThen add events to your project's `INSTALLED_APPS`::\n\n    INSTALLED_APPS = (\n        'events',\n    )\n\nAnd into your URL configuration::\n\n    urlpatterns = patterns('',\n        url(r'^events/', include('events.urls')),\n    )\n\nOverview\n--------\n\nYou can store and display information about events, including start and end\ntimes, descriptions written in Markdown, and location. Locations can be stored\nin both plain form, e.g.\n\n    100 Main St, Richmond, VA, USA\n\nand in basic geocoded format. The *current* format for storing geographic\nlocation uses two separate decimal database fields for latitude and longitude\nrespectively. This is suboptimal compared to using a `single point field\n<https://docs.djangoproject.com/en/1.6/ref/contrib/gis/model-api/#pointfield>`_\nbut does not entail any special database requirements.\n\nThe feed is available via the URL `/ical/`, relative to the root URL where you\nhave configured the event URLs.\n\nSettings\n--------\n\nThree settings are worth calling out.\n\n`TIME_ZONE`\n~~~~~~~~~~~\n\nThis is a `default Django setting\n<https://docs.djangoproject.com/en/1.6/ref/settings/#time-zone>`_ that\nyou should pay attention to, as the ics feed makes uses of this.\n\n`EVENTS_UID_STRING`\n~~~~~~~~~~~~~~~~~~~\n\nThis is a string that will be formatted with a keyword argument named `pk`. It\nused to provide a default `UID` value for an event if none is otherwise\nprovided (e.g. through a calendar import, which is beyond the scope of this\napplication itself).\n\nThe default value is::\n\n    \"event_{pk}\"\n\nA replacement might be::\n\n    \"event_{pk}@mydomain.com\"\n\nThe `iCalendar specification <http://www.kanzaki.com/docs/ical/uid.html>`_\nrequires that this be a *globally unique* identifier which is why it's a good\nidea to use your site name/domain in conjunction with the event primary key\n(unique on your site).\n\n`EVENTS_PRODUCT_ID`\n~~~~~~~~~~~~~~~~~~~\n\nThis is a string that identifies the product generating the iCalendar feed. It\npopulates the `PRODID` field in the feed.\n\nThe default is::\n\n    \"-//django-connector//connector-events//EN\"\n\nSee the `iCalendar specification\n<http://www.kanzaki.com/docs/ical/prodid.html>`_ for more information about\nthis field.\n\n\n\n\nHistory\n-------\n\n0.1.0 (2014-09-01)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rva-data/connector-events", "keywords": "connector-events", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "connector-events", "package_url": "https://pypi.org/project/connector-events/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/connector-events/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rva-data/connector-events"}, "release_url": "https://pypi.org/project/connector-events/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Events app primarily for the 'connector' events & community aggregator", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ================<br>connector-events<br>================<br><br>.. image:: https://badge.fury.io/py/connector-events.png<br>    :target: https://badge.fury.io/py/connector-events<br><br>.. image:: https://travis-ci.org/rva-data/connector-events.png?branch=master<br>    :target: https://travis-ci.org/rva-data/connector-events<br><br>.. image:: https://coveralls.io/repos/rva-data/connector-events/badge.png?branch=master<br>    :target: https://coveralls.io/r/rva-data/connector-events?branch=master<br><br>Connector events is a Django application for tracking events. It has<br>the typical list and detail views you expect and an iCal feed for<br>easily sharing event data.<br><br>It was designed as a component for a 'connector' project, tracking<br>events for a community from multiple sources. However it can also be<br>used on it's own.<br><br>.. Documentation<br>.. -------------<br><br>.. The full documentation is at https://connector-events.readthedocs.org.<br><br>Quickstart<br>----------<br><br>Install connector-events::<br><br>    pip install connector-events<br><br>Then add events to your project's `INSTALLED_APPS`::<br><br>    INSTALLED_APPS = (<br>        'events',<br>    )<br><br>And into your URL configuration::<br><br>    urlpatterns = patterns('',<br>        url(r'^events/', include('events.urls')),<br>    )<br><br>Overview<br>--------<br><br>You can store and display information about events, including start and end<br>times, descriptions written in Markdown, and location. Locations can be stored<br>in both plain form, e.g.<br><br>    100 Main St, Richmond, VA, USA<br><br>and in basic geocoded format. The *current* format for storing geographic<br>location uses two separate decimal database fields for latitude and longitude<br>respectively. This is suboptimal compared to using a `single point field<br>&lt;https://docs.djangoproject.com/en/1.6/ref/contrib/gis/model-api/#pointfield&gt;`_<br>but does not entail any special database requirements.<br><br>The feed is available via the URL `/ical/`, relative to the root URL where you<br>have configured the event URLs.<br><br>Settings<br>--------<br><br>Three settings are worth calling out.<br><br>`TIME_ZONE`<br>~~~~~~~~~~~<br><br>This is a `default Django setting<br>&lt;https://docs.djangoproject.com/en/1.6/ref/settings/#time-zone&gt;`_ that<br>you should pay attention to, as the ics feed makes uses of this.<br><br>`EVENTS_UID_STRING`<br>~~~~~~~~~~~~~~~~~~~<br><br>This is a string that will be formatted with a keyword argument named `pk`. It<br>used to provide a default `UID` value for an event if none is otherwise<br>provided (e.g. through a calendar import, which is beyond the scope of this<br>application itself).<br><br>The default value is::<br><br>    \"event_{pk}\"<br><br>A replacement might be::<br><br>    \"event_{pk}@mydomain.com\"<br><br>The `iCalendar specification &lt;http://www.kanzaki.com/docs/ical/uid.html&gt;`_<br>requires that this be a *globally unique* identifier which is why it's a good<br>idea to use your site name/domain in conjunction with the event primary key<br>(unique on your site).<br><br>`EVENTS_PRODUCT_ID`<br>~~~~~~~~~~~~~~~~~~~<br><br>This is a string that identifies the product generating the iCalendar feed. It<br>populates the `PRODID` field in the feed.<br><br>The default is::<br><br>    \"-//django-connector//connector-events//EN\"<br><br>See the `iCalendar specification<br>&lt;http://www.kanzaki.com/docs/ical/prodid.html&gt;`_ for more information about<br>this field.<br><br><br><br><br>History<br>-------<br><br>0.1.0 (2014-09-01)<br>++++++++++++++++++<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 1179654, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5779298e0412b88f95c5a69aea659796", "sha256": "f68e2576808c99b875d3642325e21fbd6d8905854dd042505b99e5cd33cb82cf"}, "downloads": -1, "filename": "connector-events-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5779298e0412b88f95c5a69aea659796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12114, "upload_time": "2014-08-04T18:11:07", "upload_time_iso_8601": "2014-08-04T18:11:07.151903Z", "url": "https://files.pythonhosted.org/packages/2d/de/4c9306259c78db87fe8098e24ad16806dc80ea5760586285499844705822/connector-events-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5779298e0412b88f95c5a69aea659796", "sha256": "f68e2576808c99b875d3642325e21fbd6d8905854dd042505b99e5cd33cb82cf"}, "downloads": -1, "filename": "connector-events-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5779298e0412b88f95c5a69aea659796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12114, "upload_time": "2014-08-04T18:11:07", "upload_time_iso_8601": "2014-08-04T18:11:07.151903Z", "url": "https://files.pythonhosted.org/packages/2d/de/4c9306259c78db87fe8098e24ad16806dc80ea5760586285499844705822/connector-events-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:44 2020"}