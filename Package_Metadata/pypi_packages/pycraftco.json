{"info": {"author": "Craft Machine Inc", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "## PYCRAFTCO\n\n[![CircleCI](https://circleci.com/gh/craft-machine/pycraftco.svg?style=svg)](https://circleci.com/gh/craft-machine/pycraftco)\n\n**pycraftco** is a Python library that serves as a convenient wrapper for [Craft API](https://api.craft.co/docs/v1).\n\n### Installation\n\nYou can install package via `pip`:\n\n    $ pip install pycraftco\n\n### Usage\n\nThe snippet below will retrieve name and offices of Facebook. For all available information\nplease refer to https://api.craft.co/docs/v1/reference/company.doc.html. However, please note\nthat the API documentation have all fields in camel case but the lib have them\nunderscore-separated.\n\n```python\nfrom pycraftco import get_company\n\napi_key = 'qfNfdijpFhbhPhA7j2ZxvtEGkfv8DftTtmTEbnWN'\n\n# specify what data to load in the callback\ndef company_query(company):\n    company.display_name()\n    company.locations.city()\n    company.locations.hq()\n\n# You can use duns, name_constains or domain to search for companies\nc = get_company(company_query, name_contains='Facebook', api_key=os.environ['API_KEY'])\n```\n\nThe code uses the test key that allows access to Facebook data only. Please, visit\nhttps://craft.co/business#business-form to request more permissive key.\n\n### Contributing\n\nBug reports and pull requests are welcome on GitHub at https://github.com/craft-machine/pycraftco .\n\n### License\n\nThe pip package is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/craft-machine/pycraftco", "keywords": "SDK,API", "license": "", "maintainer": "", "maintainer_email": "", "name": "pycraftco", "package_url": "https://pypi.org/project/pycraftco/", "platform": "", "project_url": "https://pypi.org/project/pycraftco/", "project_urls": {"Homepage": "https://github.com/craft-machine/pycraftco"}, "release_url": "https://pypi.org/project/pycraftco/0.1/", "requires_dist": null, "requires_python": "", "summary": "pycraftco is a Python library that serves as a convenient wrapper for Craft API (https://api.craft.co/docs/v1)", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>PYCRAFTCO</h2>\n<p><a href=\"https://circleci.com/gh/craft-machine/pycraftco\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58f154742e085d87a17cb625dcc7dc36fe460dfd/68747470733a2f2f636972636c6563692e636f6d2f67682f63726166742d6d616368696e652f70796372616674636f2e7376673f7374796c653d737667\"></a></p>\n<p><strong>pycraftco</strong> is a Python library that serves as a convenient wrapper for <a href=\"https://api.craft.co/docs/v1\" rel=\"nofollow\">Craft API</a>.</p>\n<h3>Installation</h3>\n<p>You can install package via <code>pip</code>:</p>\n<pre><code>$ pip install pycraftco\n</code></pre>\n<h3>Usage</h3>\n<p>The snippet below will retrieve name and offices of Facebook. For all available information\nplease refer to <a href=\"https://api.craft.co/docs/v1/reference/company.doc.html\" rel=\"nofollow\">https://api.craft.co/docs/v1/reference/company.doc.html</a>. However, please note\nthat the API documentation have all fields in camel case but the lib have them\nunderscore-separated.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycraftco</span> <span class=\"kn\">import</span> <span class=\"n\">get_company</span>\n\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'qfNfdijpFhbhPhA7j2ZxvtEGkfv8DftTtmTEbnWN'</span>\n\n<span class=\"c1\"># specify what data to load in the callback</span>\n<span class=\"k\">def</span> <span class=\"nf\">company_query</span><span class=\"p\">(</span><span class=\"n\">company</span><span class=\"p\">):</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"n\">display_name</span><span class=\"p\">()</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"n\">locations</span><span class=\"o\">.</span><span class=\"n\">city</span><span class=\"p\">()</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"n\">locations</span><span class=\"o\">.</span><span class=\"n\">hq</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># You can use duns, name_constains or domain to search for companies</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">get_company</span><span class=\"p\">(</span><span class=\"n\">company_query</span><span class=\"p\">,</span> <span class=\"n\">name_contains</span><span class=\"o\">=</span><span class=\"s1\">'Facebook'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'API_KEY'</span><span class=\"p\">])</span>\n</pre>\n<p>The code uses the test key that allows access to Facebook data only. Please, visit\n<a href=\"https://craft.co/business#business-form\" rel=\"nofollow\">https://craft.co/business#business-form</a> to request more permissive key.</p>\n<h3>Contributing</h3>\n<p>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/craft-machine/pycraftco\" rel=\"nofollow\">https://github.com/craft-machine/pycraftco</a> .</p>\n<h3>License</h3>\n<p>The pip package is available as open source under the terms of the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>.</p>\n\n          </div>"}, "last_serial": 4507806, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ba66ef849a0914969f869544f267b867", "sha256": "7bb499dced9b4a39e9271067253c5f5d3e19bd411e0946621a34c2c22534609c"}, "downloads": -1, "filename": "pycraftco-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ba66ef849a0914969f869544f267b867", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6827, "upload_time": "2018-11-20T13:42:55", "upload_time_iso_8601": "2018-11-20T13:42:55.813097Z", "url": "https://files.pythonhosted.org/packages/28/95/82d246e1f3fec503c8e1af7361c4791c55429b3f789d617cb7aad27c06bb/pycraftco-0.0.1.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "952a069a441bb7257cb8564962c35af6", "sha256": "7dd079c26a99e6a31d67475989e80534147060f1bc1b3f4b74e2f39da776f02d"}, "downloads": -1, "filename": "pycraftco-0.1.tar.gz", "has_sig": false, "md5_digest": "952a069a441bb7257cb8564962c35af6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2018-11-20T14:55:19", "upload_time_iso_8601": "2018-11-20T14:55:19.564772Z", "url": "https://files.pythonhosted.org/packages/e2/e5/6362dac4972068771aaf77c65667d76e5ab9736d4d4b527416404ba33047/pycraftco-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "952a069a441bb7257cb8564962c35af6", "sha256": "7dd079c26a99e6a31d67475989e80534147060f1bc1b3f4b74e2f39da776f02d"}, "downloads": -1, "filename": "pycraftco-0.1.tar.gz", "has_sig": false, "md5_digest": "952a069a441bb7257cb8564962c35af6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2018-11-20T14:55:19", "upload_time_iso_8601": "2018-11-20T14:55:19.564772Z", "url": "https://files.pythonhosted.org/packages/e2/e5/6362dac4972068771aaf77c65667d76e5ab9736d4d4b527416404ba33047/pycraftco-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:49 2020"}