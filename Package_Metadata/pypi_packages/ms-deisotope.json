{"info": {"author": "Joshua Klein", "author_email": "jaklein@bu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": ".. image:: https://raw.githubusercontent.com/mobiusklein/ms_deisotope/master/docs/_static/logo.png\n\nA Library for Deisotoping and Charge State Deconvolution For Mass Spectrometry\n------------------------------------------------------------------------------\n\nThis library combines `brainpy` and `ms_peak_picker` to build a toolkit for\nMS and MS/MS data. The goal of these libraries is to provide pieces of the puzzle\nfor evaluating MS data modularly. The goal of this library is to combine the modules\nto streamline processing raw data.\n\n\nInstalling\n----------\n\nBuilding C extensions from source requires a version of Cython >= 0.27.0\n\nCompiling C extensions requires that ``numpy``, ``brain-isotopic-distribution``, and ``ms_peak_picker``\nbe compiled and installed prior to installing ``ms_deisotope``:\n\n.. code:: bash\n\n    pip install numpy\n    pip install -v brain-isotopic-distribution ms_peak_picker\n    pip install -v ms_deisotope\n\nIf these libraries are not installed, ``ms_deisotope`` will fall back to using pure Python implementations,\nwhich are much slower.\n\n\nAPI\n---\n\n\nData Access\n===========\n\n``ms_deisotope`` can read from mzML, mzXML and MGF files directly, using the ``pyteomics`` library.\nOn Windows, it can also use ``comtypes`` to access Thermo's MSFileReader.dll to read RAW files and\nAgilent's MassSpecDataReader.dll to read .d directories. Whenever possible, the library provides a\ncommon interface to all supported formats. With Thermo's pure .NET library, it can use ``pythonnet``\nto read Thermo RAW files on Windows and Linux (and presumably Mac, too).\n\n.. code:: python\n\n    from ms_deisotope import MSFileReader\n    from ms_deisotope.data_source import mzxml\n\n    # open a file, selecting the appropriate reader automatically\n    reader = MSFileReader(\"path/to/data.mzML\")\n\n    # or specify the reader type directly\n    reader = mzxml.MzXMLLoader(\"path/to/data.mzXML\")\n\n\nAll supported readers provide fast random access for uncompressed files, and support the Iterator\ninterface.\n\n.. code:: python\n\n    # jump the iterator to the MS1 scan nearest to 30 minutes into the run\n    reader.start_from_scan(rt=30)\n\n    # read out the next MS1 scans and all associated MSn scans\n    scan_bunch = next(reader)\n    print(scan_bunch.precursor, len(scan_bunch.products))\n\n\nAveragine\n=========\n\nAn \"Averagine\" model is used to describe the composition of an \"average amino acid\",\nwhich can then be used to approximate the composition and isotopic abundance of a\ncombination of specific amino acids. Given that often the only solution available is\nto guess at the composition of a particular *m/z* because there are too many possible\nelemental compositions, this is the only tractable solution.\n\nThis library supports arbitrary Averagine formulae, but the Senko Averagine is provided\nby default: `{\"C\": 4.9384, \"H\": 7.7583, \"N\": 1.3577, \"O\": 1.4773, \"S\": 0.0417}`\n\n.. code:: python\n\n    from ms_deisotope import Averagine\n    from ms_deisotope import plot\n\n    peptide_averagine = Averagine({\"C\": 4.9384, \"H\": 7.7583, \"N\": 1.3577, \"O\": 1.4773, \"S\": 0.0417})\n\n    plot.draw_peaklist(peptide_averagine.isotopic_cluster(1266.321, charge=1))\n\n\n`ms_deisotope` includes several pre-defined averagines (or \"averagoses\" as may be more appropriate):\n    1. Senko's peptide - `ms_deisotope.peptide`\n    2. Native *N*- and *O*-glycan - `ms_deisotope.glycan`\n    3. Permethylated glycan - `ms_deisotope.permethylated_glycan`\n    4. Glycopeptide - `ms_deisotope.glycopeptide`\n    5. Sulfated Glycosaminoglycan - `ms_deisotope.heparan_sulfate`\n    6. Unsulfated Glycosaminoglycan - `ms_deisotope.heparin`\n\nDeconvolution\n=============\n\nThe general-purpose averagine-based deconvolution procedure can be called by using the high level\nAPI function `deconvolute_peaks`, which takes a sequence of peaks, an averagine model, and a isotopic\ngoodness-of-fit scorer:\n\n.. code:: python\n\n    import ms_deisotope\n\n    deconvoluted_peaks, _ = ms_deisotope.deconvolute_peaks(peaks, averagine=ms_deisotope.peptide,\n                                                           scorer=ms_deisotope.MSDeconVFitter(10.))\n\nThe result is a deisotoped and charge state deconvoluted peak list where each peak's neutral mass is known\nand the fitted charge state is recorded along with the isotopic peaks that gave rise to the fit.\n\nRefer to the documentation for a deeper description of isotopic pattern fitting.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ms-deisotope", "package_url": "https://pypi.org/project/ms-deisotope/", "platform": "", "project_url": "https://pypi.org/project/ms-deisotope/", "project_urls": null, "release_url": "https://pypi.org/project/ms-deisotope/0.0.14/", "requires_dist": ["numpy", "scipy", "six", "dill", "ms-peak-picker", "brain-isotopic-distribution", "pyteomics (>=4.0)", "lxml", "psims (>=0.1.28)", "comtypes ; extra == 'all'", "matplotlib ; extra == 'all'", "pythonnet ; extra == 'all'", "comtypes ; extra == 'com'", "pythonnet ; extra == 'net'", "matplotlib ; extra == 'plot'"], "requires_python": "", "summary": "Access, Deisotope, and Charge Deconvolute Mass Spectra", "version": "0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://raw.githubusercontent.com/mobiusklein/ms_deisotope/master/docs/_static/logo.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0ee2f7692296a4540b6a9f3d2559e08d2bd1308/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6f626975736b6c65696e2f6d735f646569736f746f70652f6d61737465722f646f63732f5f7374617469632f6c6f676f2e706e67\">\n<div id=\"a-library-for-deisotoping-and-charge-state-deconvolution-for-mass-spectrometry\">\n<h2>A Library for Deisotoping and Charge State Deconvolution For Mass Spectrometry</h2>\n<p>This library combines <cite>brainpy</cite> and <cite>ms_peak_picker</cite> to build a toolkit for\nMS and MS/MS data. The goal of these libraries is to provide pieces of the puzzle\nfor evaluating MS data modularly. The goal of this library is to combine the modules\nto streamline processing raw data.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Building C extensions from source requires a version of Cython &gt;= 0.27.0</p>\n<p>Compiling C extensions requires that <tt>numpy</tt>, <tt><span class=\"pre\">brain-isotopic-distribution</span></tt>, and <tt>ms_peak_picker</tt>\nbe compiled and installed prior to installing <tt>ms_deisotope</tt>:</p>\n<pre>pip install numpy\npip install -v brain-isotopic-distribution ms_peak_picker\npip install -v ms_deisotope\n</pre>\n<p>If these libraries are not installed, <tt>ms_deisotope</tt> will fall back to using pure Python implementations,\nwhich are much slower.</p>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<div id=\"data-access\">\n<h3>Data Access</h3>\n<p><tt>ms_deisotope</tt> can read from mzML, mzXML and MGF files directly, using the <tt>pyteomics</tt> library.\nOn Windows, it can also use <tt>comtypes</tt> to access Thermo\u2019s MSFileReader.dll to read RAW files and\nAgilent\u2019s MassSpecDataReader.dll to read .d directories. Whenever possible, the library provides a\ncommon interface to all supported formats. With Thermo\u2019s pure .NET library, it can use <tt>pythonnet</tt>\nto read Thermo RAW files on Windows and Linux (and presumably Mac, too).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ms_deisotope</span> <span class=\"kn\">import</span> <span class=\"n\">MSFileReader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ms_deisotope.data_source</span> <span class=\"kn\">import</span> <span class=\"n\">mzxml</span>\n\n<span class=\"c1\"># open a file, selecting the appropriate reader automatically</span>\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">MSFileReader</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/data.mzML\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or specify the reader type directly</span>\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">mzxml</span><span class=\"o\">.</span><span class=\"n\">MzXMLLoader</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/data.mzXML\"</span><span class=\"p\">)</span>\n</pre>\n<p>All supported readers provide fast random access for uncompressed files, and support the Iterator\ninterface.</p>\n<pre><span class=\"c1\"># jump the iterator to the MS1 scan nearest to 30 minutes into the run</span>\n<span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">start_from_scan</span><span class=\"p\">(</span><span class=\"n\">rt</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># read out the next MS1 scans and all associated MSn scans</span>\n<span class=\"n\">scan_bunch</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">scan_bunch</span><span class=\"o\">.</span><span class=\"n\">precursor</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">scan_bunch</span><span class=\"o\">.</span><span class=\"n\">products</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"averagine\">\n<h3>Averagine</h3>\n<p>An \u201cAveragine\u201d model is used to describe the composition of an \u201caverage amino acid\u201d,\nwhich can then be used to approximate the composition and isotopic abundance of a\ncombination of specific amino acids. Given that often the only solution available is\nto guess at the composition of a particular <em>m/z</em> because there are too many possible\nelemental compositions, this is the only tractable solution.</p>\n<p>This library supports arbitrary Averagine formulae, but the Senko Averagine is provided\nby default: <cite>{\u201cC\u201d: 4.9384, \u201cH\u201d: 7.7583, \u201cN\u201d: 1.3577, \u201cO\u201d: 1.4773, \u201cS\u201d: 0.0417}</cite></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ms_deisotope</span> <span class=\"kn\">import</span> <span class=\"n\">Averagine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ms_deisotope</span> <span class=\"kn\">import</span> <span class=\"n\">plot</span>\n\n<span class=\"n\">peptide_averagine</span> <span class=\"o\">=</span> <span class=\"n\">Averagine</span><span class=\"p\">({</span><span class=\"s2\">\"C\"</span><span class=\"p\">:</span> <span class=\"mf\">4.9384</span><span class=\"p\">,</span> <span class=\"s2\">\"H\"</span><span class=\"p\">:</span> <span class=\"mf\">7.7583</span><span class=\"p\">,</span> <span class=\"s2\">\"N\"</span><span class=\"p\">:</span> <span class=\"mf\">1.3577</span><span class=\"p\">,</span> <span class=\"s2\">\"O\"</span><span class=\"p\">:</span> <span class=\"mf\">1.4773</span><span class=\"p\">,</span> <span class=\"s2\">\"S\"</span><span class=\"p\">:</span> <span class=\"mf\">0.0417</span><span class=\"p\">})</span>\n\n<span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">draw_peaklist</span><span class=\"p\">(</span><span class=\"n\">peptide_averagine</span><span class=\"o\">.</span><span class=\"n\">isotopic_cluster</span><span class=\"p\">(</span><span class=\"mf\">1266.321</span><span class=\"p\">,</span> <span class=\"n\">charge</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<dl>\n<dt><cite>ms_deisotope</cite> includes several pre-defined averagines (or \u201caveragoses\u201d as may be more appropriate):</dt>\n<dd><ol>\n<li>Senko\u2019s peptide - <cite>ms_deisotope.peptide</cite></li>\n<li>Native <em>N</em>- and <em>O</em>-glycan - <cite>ms_deisotope.glycan</cite></li>\n<li>Permethylated glycan - <cite>ms_deisotope.permethylated_glycan</cite></li>\n<li>Glycopeptide - <cite>ms_deisotope.glycopeptide</cite></li>\n<li>Sulfated Glycosaminoglycan - <cite>ms_deisotope.heparan_sulfate</cite></li>\n<li>Unsulfated Glycosaminoglycan - <cite>ms_deisotope.heparin</cite></li>\n</ol>\n</dd>\n</dl>\n</div>\n<div id=\"deconvolution\">\n<h3>Deconvolution</h3>\n<p>The general-purpose averagine-based deconvolution procedure can be called by using the high level\nAPI function <cite>deconvolute_peaks</cite>, which takes a sequence of peaks, an averagine model, and a isotopic\ngoodness-of-fit scorer:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ms_deisotope</span>\n\n<span class=\"n\">deconvoluted_peaks</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">ms_deisotope</span><span class=\"o\">.</span><span class=\"n\">deconvolute_peaks</span><span class=\"p\">(</span><span class=\"n\">peaks</span><span class=\"p\">,</span> <span class=\"n\">averagine</span><span class=\"o\">=</span><span class=\"n\">ms_deisotope</span><span class=\"o\">.</span><span class=\"n\">peptide</span><span class=\"p\">,</span>\n                                                       <span class=\"n\">scorer</span><span class=\"o\">=</span><span class=\"n\">ms_deisotope</span><span class=\"o\">.</span><span class=\"n\">MSDeconVFitter</span><span class=\"p\">(</span><span class=\"mf\">10.</span><span class=\"p\">))</span>\n</pre>\n<p>The result is a deisotoped and charge state deconvoluted peak list where each peak\u2019s neutral mass is known\nand the fitted charge state is recorded along with the isotopic peaks that gave rise to the fit.</p>\n<p>Refer to the documentation for a deeper description of isotopic pattern fitting.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6782167, "releases": {"0.0.12": [{"comment_text": "", "digests": {"md5": "c9c9477bd68a2af88ba17fcd2719fc74", "sha256": "922a2b5f953749e3130ff371d326d250d23d6af7a940b783d5a740d092d486f1"}, "downloads": -1, "filename": "ms_deisotope-0.0.12-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "c9c9477bd68a2af88ba17fcd2719fc74", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 4393416, "upload_time": "2020-02-13T23:19:20", "upload_time_iso_8601": "2020-02-13T23:19:20.028566Z", "url": "https://files.pythonhosted.org/packages/a4/a2/9ad149a08e65a563560ff083fc6af1c6c96f57b76a4c274aadb9c50017ef/ms_deisotope-0.0.12-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbdb4924576ff8ec85523d0eca1ffdaa", "sha256": "2cf1d7f7a48c612fe24a4970ff0e16ecc52b8530b296081c2babc812d01a3c09"}, "downloads": -1, "filename": "ms_deisotope-0.0.12-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "cbdb4924576ff8ec85523d0eca1ffdaa", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4440321, "upload_time": "2020-02-13T23:19:22", "upload_time_iso_8601": "2020-02-13T23:19:22.791132Z", "url": "https://files.pythonhosted.org/packages/0b/72/95b4cc726a82ec02daccd43bae449e331e7b3636555bdfe926744ec03d11/ms_deisotope-0.0.12-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5dcfc6adf991159330d04d8c55250684", "sha256": "0b2ba31f98a0b4d824ded8df8998d17a65c579eee3da7da992b0c506f28843e5"}, "downloads": -1, "filename": "ms_deisotope-0.0.12.tar.gz", "has_sig": false, "md5_digest": "5dcfc6adf991159330d04d8c55250684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2946334, "upload_time": "2020-02-13T23:19:25", "upload_time_iso_8601": "2020-02-13T23:19:25.350137Z", "url": "https://files.pythonhosted.org/packages/df/ce/452a1fdafaa1d9f2c75ead883347daf819bfe7c72263f4566c146766e474/ms_deisotope-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "da19564df0d462a0066c2ee9eee4be2f", "sha256": "348b2165b926df4cae3204c4c842d4778ace6da7cc76feec0cdf49430aceb6f9"}, "downloads": -1, "filename": "ms_deisotope-0.0.13-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "da19564df0d462a0066c2ee9eee4be2f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 4341025, "upload_time": "2020-03-04T02:45:10", "upload_time_iso_8601": "2020-03-04T02:45:10.081406Z", "url": "https://files.pythonhosted.org/packages/d3/5e/c53804468c91f53c7a9849e75bc1b7da9946baa585ec28028cd323fb87cd/ms_deisotope-0.0.13-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1417b76d54d0cbd88318c20b986832a7", "sha256": "7975110558ecdb387a82172c9b899a9681ca05c161d0022d7278674a7879d3f2"}, "downloads": -1, "filename": "ms_deisotope-0.0.13-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "1417b76d54d0cbd88318c20b986832a7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4384115, "upload_time": "2020-03-04T02:45:12", "upload_time_iso_8601": "2020-03-04T02:45:12.298095Z", "url": "https://files.pythonhosted.org/packages/e1/c6/db0cf3f644ebc1a06a8c5a944f12eb4cfa82ed2a571290606739be2f991d/ms_deisotope-0.0.13-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "304e9aa2c433ec272e4b773a3d908470", "sha256": "3cf73cabbc2275ddea3fd2ce6cf7542f690b8e9f56a34652ddee4cdf6dc2ff7f"}, "downloads": -1, "filename": "ms_deisotope-0.0.13.tar.gz", "has_sig": false, "md5_digest": "304e9aa2c433ec272e4b773a3d908470", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2906045, "upload_time": "2020-03-04T02:45:14", "upload_time_iso_8601": "2020-03-04T02:45:14.378512Z", "url": "https://files.pythonhosted.org/packages/d0/17/a845fb8c4df93a740b91a3d880905df5aae68efa6149005a67f8669afe05/ms_deisotope-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "953463383b4a98035102cdaefb1bd5b2", "sha256": "ca73b4a0941e168ad98d3ee0137eae78131fffdd789422424b76af152ce74f34"}, "downloads": -1, "filename": "ms_deisotope-0.0.14-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "953463383b4a98035102cdaefb1bd5b2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 4174784, "upload_time": "2020-03-10T02:20:18", "upload_time_iso_8601": "2020-03-10T02:20:18.941637Z", "url": "https://files.pythonhosted.org/packages/75/5a/8f79f897f3fa55162f176b9980816b203a882b0c8c991002f8fb904ab580/ms_deisotope-0.0.14-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d787501a600d7c1490732b04fea90c11", "sha256": "5305329cab9c752f42dccc862705b447ac96bd5c702320d4589407d59f76e74f"}, "downloads": -1, "filename": "ms_deisotope-0.0.14-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "d787501a600d7c1490732b04fea90c11", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4292613, "upload_time": "2020-03-10T02:20:21", "upload_time_iso_8601": "2020-03-10T02:20:21.259209Z", "url": "https://files.pythonhosted.org/packages/81/4c/09d0cf76023f429c19e4b53702fd511b5e78ae7e5f55749b76ceb7c241f3/ms_deisotope-0.0.14-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4d257bda91c858dd35a4d6252228c05", "sha256": "18ec6218af1a1a0d8c8284cf9c69a895101a37230530f8d62b547ba4bdc12fe4"}, "downloads": -1, "filename": "ms_deisotope-0.0.14-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f4d257bda91c858dd35a4d6252228c05", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4292225, "upload_time": "2020-03-10T02:20:23", "upload_time_iso_8601": "2020-03-10T02:20:23.359430Z", "url": "https://files.pythonhosted.org/packages/41/dd/fe61b929dbcf4a30f73768988935e1f7deff78614cedc86c8ba3b8182c15/ms_deisotope-0.0.14-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ecdaf506828b3d80f85249e2a342d1e", "sha256": "a0d6c62371658e1426ddce61b49c0c6d166150e7431593d196d00608cffc583e"}, "downloads": -1, "filename": "ms_deisotope-0.0.14.tar.gz", "has_sig": false, "md5_digest": "6ecdaf506828b3d80f85249e2a342d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2815819, "upload_time": "2020-03-10T02:20:25", "upload_time_iso_8601": "2020-03-10T02:20:25.513841Z", "url": "https://files.pythonhosted.org/packages/a2/dc/f52887d1a87d55b42d47e4e072a2b81e3b8e98456d3458eeeb4c65d686ae/ms_deisotope-0.0.14.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "7a30f8ff0fe7d8845714e1abd850740e", "sha256": "7df2feba965bdf9173fa6dab64b36c5c48b33a9a7ba4ce2c99f267736e168854"}, "downloads": -1, "filename": "ms_deisotope-0.0.9-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "7a30f8ff0fe7d8845714e1abd850740e", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 4229243, "upload_time": "2019-08-05T00:43:56", "upload_time_iso_8601": "2019-08-05T00:43:56.139770Z", "url": "https://files.pythonhosted.org/packages/35/59/2def4425b988e03adf60050d5367ea13a28cdc5c8b41244fd6e21f4bfefa/ms_deisotope-0.0.9-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1ca2517c0908742808445094e5edc66", "sha256": "92999422e0f4e3d92a74bc95db51e233b1aa60c7cb87e42a9a244de41f176bc2"}, "downloads": -1, "filename": "ms_deisotope-0.0.9-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "f1ca2517c0908742808445094e5edc66", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 4306001, "upload_time": "2019-08-05T00:51:49", "upload_time_iso_8601": "2019-08-05T00:51:49.817715Z", "url": "https://files.pythonhosted.org/packages/ce/31/c7f3ce4ffa388ff10b2dd53da9e18ea4af2e930cac2ad501925dd94a4a9b/ms_deisotope-0.0.9-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8927498f508cc944f66ef6a6d6cdc87", "sha256": "db7041a3758b1f0c14c93eafbac474e6e71acca951e8914f48b3fb54163501f8"}, "downloads": -1, "filename": "ms_deisotope-0.0.9-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "e8927498f508cc944f66ef6a6d6cdc87", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4267679, "upload_time": "2019-08-05T00:45:47", "upload_time_iso_8601": "2019-08-05T00:45:47.904504Z", "url": "https://files.pythonhosted.org/packages/41/57/4af5d7f685a003b413da74554378cf94c0edb6725da75f743d8cc8bf989d/ms_deisotope-0.0.9-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15716a980bfe82ab2b162d609023bb56", "sha256": "d714f0801019f564f50f8bab3ffecf384fddab826e07bb49bab17dfdad9ede88"}, "downloads": -1, "filename": "ms_deisotope-0.0.9-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "15716a980bfe82ab2b162d609023bb56", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4268940, "upload_time": "2019-08-05T00:46:00", "upload_time_iso_8601": "2019-08-05T00:46:00.413927Z", "url": "https://files.pythonhosted.org/packages/38/ab/8b5c6ff114a8c5f2cdd0208f3d23005000f20c21cc55d17c0b2a8c809d54/ms_deisotope-0.0.9-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21aa63d2cd52aeaa6ed7b4b410e9d25a", "sha256": "ed68a15439c9802cf7b834f82942192c20ca9aae800f7f112f50780de8ee601c"}, "downloads": -1, "filename": "ms_deisotope-0.0.9.tar.gz", "has_sig": false, "md5_digest": "21aa63d2cd52aeaa6ed7b4b410e9d25a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2832920, "upload_time": "2019-08-05T00:44:02", "upload_time_iso_8601": "2019-08-05T00:44:02.423526Z", "url": "https://files.pythonhosted.org/packages/d0/ab/1e1aed9c2f0d137be5ed884f3fdcff9744df1b613aeb56108104c28d4b36/ms_deisotope-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "953463383b4a98035102cdaefb1bd5b2", "sha256": "ca73b4a0941e168ad98d3ee0137eae78131fffdd789422424b76af152ce74f34"}, "downloads": -1, "filename": "ms_deisotope-0.0.14-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "953463383b4a98035102cdaefb1bd5b2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 4174784, "upload_time": "2020-03-10T02:20:18", "upload_time_iso_8601": "2020-03-10T02:20:18.941637Z", "url": "https://files.pythonhosted.org/packages/75/5a/8f79f897f3fa55162f176b9980816b203a882b0c8c991002f8fb904ab580/ms_deisotope-0.0.14-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d787501a600d7c1490732b04fea90c11", "sha256": "5305329cab9c752f42dccc862705b447ac96bd5c702320d4589407d59f76e74f"}, "downloads": -1, "filename": "ms_deisotope-0.0.14-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "d787501a600d7c1490732b04fea90c11", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4292613, "upload_time": "2020-03-10T02:20:21", "upload_time_iso_8601": "2020-03-10T02:20:21.259209Z", "url": "https://files.pythonhosted.org/packages/81/4c/09d0cf76023f429c19e4b53702fd511b5e78ae7e5f55749b76ceb7c241f3/ms_deisotope-0.0.14-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4d257bda91c858dd35a4d6252228c05", "sha256": "18ec6218af1a1a0d8c8284cf9c69a895101a37230530f8d62b547ba4bdc12fe4"}, "downloads": -1, "filename": "ms_deisotope-0.0.14-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f4d257bda91c858dd35a4d6252228c05", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4292225, "upload_time": "2020-03-10T02:20:23", "upload_time_iso_8601": "2020-03-10T02:20:23.359430Z", "url": "https://files.pythonhosted.org/packages/41/dd/fe61b929dbcf4a30f73768988935e1f7deff78614cedc86c8ba3b8182c15/ms_deisotope-0.0.14-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ecdaf506828b3d80f85249e2a342d1e", "sha256": "a0d6c62371658e1426ddce61b49c0c6d166150e7431593d196d00608cffc583e"}, "downloads": -1, "filename": "ms_deisotope-0.0.14.tar.gz", "has_sig": false, "md5_digest": "6ecdaf506828b3d80f85249e2a342d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2815819, "upload_time": "2020-03-10T02:20:25", "upload_time_iso_8601": "2020-03-10T02:20:25.513841Z", "url": "https://files.pythonhosted.org/packages/a2/dc/f52887d1a87d55b42d47e4e072a2b81e3b8e98456d3458eeeb4c65d686ae/ms_deisotope-0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:55 2020"}