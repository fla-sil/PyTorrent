{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Introduction\n============\n\nCrFinder searches a given directory containing camera raw files for pictures of a color reference such as the X-Rite Color Checker Passpoert. It then prepares the images so so argyll can create a color profile from that image and invokes argyll to create color profiles. \n\nCurrently supported color references include the X-Rite Color Checker Passport Photo and similar color references. However, the script was designed to allow the use of other types of references too, so it shouldn't be to difficult to adapt it to other types of color reference.\n\nThe script is reasonably fast and detection is reliable. On my laptop (6-core Coffelake) it processes approx 30 images per minute (Images taken with a Sony Alpha 7R2 at full resolution, 6% of the images contain a color reference). Among 97 images of color references tested only one was not correctly identified. In the image where the color reference was not detected the color reference was too small to be detected.\n\nInstallation\n============\n\nYou need argyll cms installed. On Debian based distros:\n\nsudo apt install argyll\n\nInstall crfinder via pip:\n\npip3 install CrFinder\n\nUsage\n=====\n\ncrfinder [directory]\n\n[directory] contains the raw images to search for color references.\n\nPrinciple of Operation\n======================\n\nAssumptions\n-----------\n\nThis script relies on the following properties of the Color Checker (and similar color references):\n* Patches are surrounded by a balck or white background: This allows to get a black and white image with nicely delineated patches by appying a simple threshold.\n* Patches are uniform and have no pattering in them.\n* Patches are squares. All other shapes can be ignored.\n* Patches are on a rectangular grid. Each patch has a neighbour within a certain distance. Further, the position of patches with insufficient contrast to the background can be inferred from the position of other patches.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/Unkraut/crfinder", "keywords": "", "license": "GNU GENERAL PUBLIC LICENSE Version 3", "maintainer": "", "maintainer_email": "", "name": "CrFinder", "package_url": "https://pypi.org/project/CrFinder/", "platform": "", "project_url": "https://pypi.org/project/CrFinder/", "project_urls": {"Homepage": "https://gitlab.com/Unkraut/crfinder"}, "release_url": "https://pypi.org/project/CrFinder/0.4.7/", "requires_dist": null, "requires_python": "", "summary": "Utility for finding color references in a collection RAW photgraphs and creating .icc profiles.", "version": "0.4.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>CrFinder searches a given directory containing camera raw files for pictures of a color reference such as the X-Rite Color Checker Passpoert. It then prepares the images so so argyll can create a color profile from that image and invokes argyll to create color profiles.</p>\n<p>Currently supported color references include the X-Rite Color Checker Passport Photo and similar color references. However, the script was designed to allow the use of other types of references too, so it shouldn\u2019t be to difficult to adapt it to other types of color reference.</p>\n<p>The script is reasonably fast and detection is reliable. On my laptop (6-core Coffelake) it processes approx 30 images per minute (Images taken with a Sony Alpha 7R2 at full resolution, 6% of the images contain a color reference). Among 97 images of color references tested only one was not correctly identified. In the image where the color reference was not detected the color reference was too small to be detected.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You need argyll cms installed. On Debian based distros:</p>\n<p>sudo apt install argyll</p>\n<p>Install crfinder via pip:</p>\n<p>pip3 install CrFinder</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>crfinder [directory]</p>\n<p>[directory] contains the raw images to search for color references.</p>\n</div>\n<div id=\"principle-of-operation\">\n<h2>Principle of Operation</h2>\n<h2 id=\"assumptions\"><span class=\"section-subtitle\">Assumptions</span></h2>\n<p>This script relies on the following properties of the Color Checker (and similar color references):\n* Patches are surrounded by a balck or white background: This allows to get a black and white image with nicely delineated patches by appying a simple threshold.\n* Patches are uniform and have no pattering in them.\n* Patches are squares. All other shapes can be ignored.\n* Patches are on a rectangular grid. Each patch has a neighbour within a certain distance. Further, the position of patches with insufficient contrast to the background can be inferred from the position of other patches.</p>\n</div>\n\n          </div>"}, "last_serial": 4642601, "releases": {"0.4.5": [{"comment_text": "", "digests": {"md5": "c8959398eaa2bbc8015eea267d975995", "sha256": "0ba150cd4a3c18493e87cef68d241ebc5928f8a15379326bf8e56b09212c84f8"}, "downloads": -1, "filename": "CrFinder-0.4.5.tar.gz", "has_sig": false, "md5_digest": "c8959398eaa2bbc8015eea267d975995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24468, "upload_time": "2018-12-22T18:29:01", "upload_time_iso_8601": "2018-12-22T18:29:01.142586Z", "url": "https://files.pythonhosted.org/packages/9e/1d/1c4bc0eb0d1a0ec949b9447ea0e48ad550fdbb1d9e5be2b2492ddb049cc4/CrFinder-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "4205d0c55711efcf314143ca00407dd2", "sha256": "81fc55bb927fb80a33bca962186c108e137f884f209e43a5622e0417dc260738"}, "downloads": -1, "filename": "CrFinder-0.4.6.tar.gz", "has_sig": false, "md5_digest": "4205d0c55711efcf314143ca00407dd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24467, "upload_time": "2018-12-22T18:42:49", "upload_time_iso_8601": "2018-12-22T18:42:49.451910Z", "url": "https://files.pythonhosted.org/packages/45/2e/c177e0adfd861b953d241a591c37a1163cfea87192062c3e28cb083008fc/CrFinder-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "8988e070f10a9845d629f94d9b45b7b5", "sha256": "3212f883e393e42b3ea54d865bd25ddd2b0f409a9909278371ac3e2aee7cb2df"}, "downloads": -1, "filename": "CrFinder-0.4.7.tar.gz", "has_sig": false, "md5_digest": "8988e070f10a9845d629f94d9b45b7b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24489, "upload_time": "2018-12-28T22:22:56", "upload_time_iso_8601": "2018-12-28T22:22:56.356591Z", "url": "https://files.pythonhosted.org/packages/9b/42/d3c7c581ec02c55479b206d4265dc20676564b586e1eb5eb528cc1799cb3/CrFinder-0.4.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8988e070f10a9845d629f94d9b45b7b5", "sha256": "3212f883e393e42b3ea54d865bd25ddd2b0f409a9909278371ac3e2aee7cb2df"}, "downloads": -1, "filename": "CrFinder-0.4.7.tar.gz", "has_sig": false, "md5_digest": "8988e070f10a9845d629f94d9b45b7b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24489, "upload_time": "2018-12-28T22:22:56", "upload_time_iso_8601": "2018-12-28T22:22:56.356591Z", "url": "https://files.pythonhosted.org/packages/9b/42/d3c7c581ec02c55479b206d4265dc20676564b586e1eb5eb528cc1799cb3/CrFinder-0.4.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:19 2020"}