{"info": {"author": "Evgeny Lychkovsky", "author_email": "miphreal@gamil.com", "bugtrack_url": null, "classifiers": [], "description": "python-logdog\n-------------\n\ndistributed log tail viewer\n\nWhy?\n\n- tail log files and forward them to web in runtime\n- dynamically parse and (pre)process logs\n- aggregate and collect logs\n- alerting\n\n\nQuick start\n===========\n\nRunning a simple one-host configuration.\n\n.. code-block:: bash\n\n    $ pip install logdog\n\nHelp output:\n\n.. code-block:: bash\n\n    $ \u00a0logdog --help\u00a0\n    logdog command line interface\n\n    Usage:\n      logdog [<pipe-namespace>...] [options]\n      logdog (-h | --help)\n      logdog --version\n\n    Arguments:\n      <pipe-namespace>          One or more pipe namespaces to be run\n\n    Options:\n      -h --help                 Show this screen\n      --version                 Show version\n      -v --verbose              Run in verbose mode\n      -l --log-level=<level>    Set internal logging level [default: INFO]\n      -f --log-format=<format>  Set internal logging format [default: quiet]\n      -c --config=<config>      Configuration file (yaml config)\n      -s --sources=<file:...>   Force specify files to be watched\n      -H --handler=<handler>    Force set handler for all sources\n                                (e.g. --handler=viewers.console)\n      --reset-indices           Remove current indices (will reset watching state)\n\n\nPrepare config file:\n\n.. code-block:: yaml\n\n    # config.yml\n    ---\n    sources:\n      - /var/log/*.log\n      - /var/log/*/*.log\n      - /var/log/syslog\n\nPlease, see `default_config.py`_\n\n.. _default_config.py: logdog/default_config.py\n\nStart watching:\n\n.. code-block:: bash\n\n    $ logdog --config=config.yml\n\nYou can run watching and viewing parts separately:\n\n.. code-block:: bash\n\n    $ logdog watch --config=config.yml\n    # another console\n    $ logdog view --config=config.yml\n\n\nConfig\n======\n\nYAML is used as a main format for writing configuration.\n\nDefault config:\n\n.. code-block:: yaml\n\n    ---\n    sources:\n      # <path-to-file>\n      - /var/log/*.log\n      - /var/log/*/*.log\n      - /var/log/syslog\n\n``sources`` is a list of target files/logs. Alternatively, this section can be re-written the following way:\n\n.. code-block:: yaml\n\n    ---\n    sources:\n      - /var/log/*.log: pipes.to-web\n      - /var/log/*/*.log:\n          handler: pipes.to-web\n      # ^ note. 4 spaces\n      # in case of 2 spaces it will be a key in the list object\n      # {'/var/log/*/*.log': None,\n      #  'handler': 'pipes.to-web'}\n      # but must be {'/var/log/*/*.log': {'handler': 'pipes.to-web'}}\n      - /var/log/syslog: {handler: pipes.to-web}\n\n\nPipe is a sequence of steps to process / parse / forward / collect log messages.\n``pipes.to-web`` is a predefined pipe (see `default_config.py`_).\n\n\nFull ``sources`` format:\n\n.. code-block:: none\n\n    ---\n    sources:\n      - (path | search pattern)\n      # or (`handler`, `watcher`, `meta` are optional)\n      - (path | search pattern):\n          handler: handler-name # default pipes.to-web\n          watcher: watcher-name # default pollers.file-watcher\n          meta: a-dictionary-containing-any-meta-info # e.g. {tags: [tag1, tag2]}\n      # or\n      - (path | search pattern): handler-name\n      # or\n      - (path | search pattern): {handler: pipes.to-web}\n      # or\n      - (path | search pattern): {watcher: poller.custom-file-poller}\n      # or\n      - (path | search pattern): {meta: {tags: [log]}}\n\n\nExample 1:\n\n.. code-block:: yaml\n\n    ---\n    sources:\n      - /var/log/syslog: {handler: pipes.to-web, meta: {tags: [syslog]}\n      # or\n      - /var/log/syslog2:\n          handler: pipes.to-web\n          meta:\n            tags:\n              - syslog\n\n\nBuiltins\n========\n\nPredefined configs:\n\n``pipes``:\n\n- `pipes.to-web` - defines a simple flow (strip -> zmq localhost:7789 -> zmq *:7789 -> webui)\n\n``viewers``:\n\n- `viewers.null` - does nothing with incoming data\n- `viewers.console` - print incoming log messages into stdout\n- `viewers.webui` - forward all incoming messages to all connected clients using websockets\n\n``connectors``:\n\n- `connectors.zmq-tunnel` - allows to create any zmq sockets to push/pull data\n\nFor more details see `default_config.py`_.\n\nScreenshots\n===========\n\n.. image:: http://i.imgur.com/B4JQ57T.png\n\n\nTODO\n====\n\n- cover with tests\n- detecting new files\n- colorize logs\n- add documentation\n- zmq connectors\n- mongodb collector\n- webui storages\n- webui filtering / searching\n- implement `--validate-config`\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miphreal/python-logdog/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "logdog", "package_url": "https://pypi.org/project/logdog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/logdog/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/miphreal/python-logdog/"}, "release_url": "https://pypi.org/project/logdog/0.2.11/", "requires_dist": null, "requires_python": null, "summary": "logs watching + webui", "version": "0.2.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            python-logdog<br>-------------<br><br>distributed log tail viewer<br><br>Why?<br><br>- tail log files and forward them to web in runtime<br>- dynamically parse and (pre)process logs<br>- aggregate and collect logs<br>- alerting<br><br><br>Quick start<br>===========<br><br>Running a simple one-host configuration.<br><br>.. code-block:: bash<br><br>    $ pip install logdog<br><br>Help output:<br><br>.. code-block:: bash<br><br>    $ \u00a0logdog --help\u00a0<br>    logdog command line interface<br><br>    Usage:<br>      logdog [&lt;pipe-namespace&gt;...] [options]<br>      logdog (-h | --help)<br>      logdog --version<br><br>    Arguments:<br>      &lt;pipe-namespace&gt;          One or more pipe namespaces to be run<br><br>    Options:<br>      -h --help                 Show this screen<br>      --version                 Show version<br>      -v --verbose              Run in verbose mode<br>      -l --log-level=&lt;level&gt;    Set internal logging level [default: INFO]<br>      -f --log-format=&lt;format&gt;  Set internal logging format [default: quiet]<br>      -c --config=&lt;config&gt;      Configuration file (yaml config)<br>      -s --sources=&lt;file:...&gt;   Force specify files to be watched<br>      -H --handler=&lt;handler&gt;    Force set handler for all sources<br>                                (e.g. --handler=viewers.console)<br>      --reset-indices           Remove current indices (will reset watching state)<br><br><br>Prepare config file:<br><br>.. code-block:: yaml<br><br>    # config.yml<br>    ---<br>    sources:<br>      - /var/log/*.log<br>      - /var/log/*/*.log<br>      - /var/log/syslog<br><br>Please, see `default_config.py`_<br><br>.. _default_config.py: logdog/default_config.py<br><br>Start watching:<br><br>.. code-block:: bash<br><br>    $ logdog --config=config.yml<br><br>You can run watching and viewing parts separately:<br><br>.. code-block:: bash<br><br>    $ logdog watch --config=config.yml<br>    # another console<br>    $ logdog view --config=config.yml<br><br><br>Config<br>======<br><br>YAML is used as a main format for writing configuration.<br><br>Default config:<br><br>.. code-block:: yaml<br><br>    ---<br>    sources:<br>      # &lt;path-to-file&gt;<br>      - /var/log/*.log<br>      - /var/log/*/*.log<br>      - /var/log/syslog<br><br>``sources`` is a list of target files/logs. Alternatively, this section can be re-written the following way:<br><br>.. code-block:: yaml<br><br>    ---<br>    sources:<br>      - /var/log/*.log: pipes.to-web<br>      - /var/log/*/*.log:<br>          handler: pipes.to-web<br>      # ^ note. 4 spaces<br>      # in case of 2 spaces it will be a key in the list object<br>      # {'/var/log/*/*.log': None,<br>      #  'handler': 'pipes.to-web'}<br>      # but must be {'/var/log/*/*.log': {'handler': 'pipes.to-web'}}<br>      - /var/log/syslog: {handler: pipes.to-web}<br><br><br>Pipe is a sequence of steps to process / parse / forward / collect log messages.<br>``pipes.to-web`` is a predefined pipe (see `default_config.py`_).<br><br><br>Full ``sources`` format:<br><br>.. code-block:: none<br><br>    ---<br>    sources:<br>      - (path | search pattern)<br>      # or (`handler`, `watcher`, `meta` are optional)<br>      - (path | search pattern):<br>          handler: handler-name # default pipes.to-web<br>          watcher: watcher-name # default pollers.file-watcher<br>          meta: a-dictionary-containing-any-meta-info # e.g. {tags: [tag1, tag2]}<br>      # or<br>      - (path | search pattern): handler-name<br>      # or<br>      - (path | search pattern): {handler: pipes.to-web}<br>      # or<br>      - (path | search pattern): {watcher: poller.custom-file-poller}<br>      # or<br>      - (path | search pattern): {meta: {tags: [log]}}<br><br><br>Example 1:<br><br>.. code-block:: yaml<br><br>    ---<br>    sources:<br>      - /var/log/syslog: {handler: pipes.to-web, meta: {tags: [syslog]}<br>      # or<br>      - /var/log/syslog2:<br>          handler: pipes.to-web<br>          meta:<br>            tags:<br>              - syslog<br><br><br>Builtins<br>========<br><br>Predefined configs:<br><br>``pipes``:<br><br>- `pipes.to-web` - defines a simple flow (strip -&gt; zmq localhost:7789 -&gt; zmq *:7789 -&gt; webui)<br><br>``viewers``:<br><br>- `viewers.null` - does nothing with incoming data<br>- `viewers.console` - print incoming log messages into stdout<br>- `viewers.webui` - forward all incoming messages to all connected clients using websockets<br><br>``connectors``:<br><br>- `connectors.zmq-tunnel` - allows to create any zmq sockets to push/pull data<br><br>For more details see `default_config.py`_.<br><br>Screenshots<br>===========<br><br>.. image:: http://i.imgur.com/B4JQ57T.png<br><br><br>TODO<br>====<br><br>- cover with tests<br>- detecting new files<br>- colorize logs<br>- add documentation<br>- zmq connectors<br>- mongodb collector<br>- webui storages<br>- webui filtering / searching<br>- implement `--validate-config`<br>\n          </div>"}, "last_serial": 1619685, "releases": {"0.2.0": [], "0.2.1": [{"comment_text": "", "digests": {"md5": "62d6e6c7d234baa6dfa6666b79e39499", "sha256": "e01622cf54ed8f150a1b000857f7f8d4f2b4d3392d4a3b78bdfa01bf573b117a"}, "downloads": -1, "filename": "logdog-0.2.1.tar.gz", "has_sig": false, "md5_digest": "62d6e6c7d234baa6dfa6666b79e39499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13748, "upload_time": "2015-03-22T21:03:30", "upload_time_iso_8601": "2015-03-22T21:03:30.142605Z", "url": "https://files.pythonhosted.org/packages/e6/42/b7e30ee110958fb39b7660dba702f10322835dcaaceaf0dacf5dd0ad9b52/logdog-0.2.1.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "67bae97fd356c0b7efd08f2fe26e1404", "sha256": "4d397b8b51ddc341adcaee116555a97e9306660f21d6e9e25e93b1408beb62b6"}, "downloads": -1, "filename": "logdog-0.2.11.tar.gz", "has_sig": false, "md5_digest": "67bae97fd356c0b7efd08f2fe26e1404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212971, "upload_time": "2015-07-04T23:12:34", "upload_time_iso_8601": "2015-07-04T23:12:34.154275Z", "url": "https://files.pythonhosted.org/packages/20/25/5fc7ff9dad8cfc63ab21699b82305580fcb55759e1cdc518a6bd412ac409/logdog-0.2.11.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "60e02e4d1887174bd184afe86d276647", "sha256": "6fe12c72e95c9525427eb04ce902a50fb278bca328122e84709487697529dcbb"}, "downloads": -1, "filename": "logdog-0.2.2.tar.gz", "has_sig": false, "md5_digest": "60e02e4d1887174bd184afe86d276647", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14010, "upload_time": "2015-03-22T21:05:58", "upload_time_iso_8601": "2015-03-22T21:05:58.787133Z", "url": "https://files.pythonhosted.org/packages/9c/90/db49c2278f6a5614474e705350cde64709bc30de2504ef33940c47447424/logdog-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "13096852c48c31812b2f1a4185671d00", "sha256": "a63018ef1115bdf439e37b5170831e04b9b782469c89b1edcecb077e34ad8928"}, "downloads": -1, "filename": "logdog-0.2.3.tar.gz", "has_sig": false, "md5_digest": "13096852c48c31812b2f1a4185671d00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14742, "upload_time": "2015-03-22T21:10:20", "upload_time_iso_8601": "2015-03-22T21:10:20.054238Z", "url": "https://files.pythonhosted.org/packages/06/ba/53e23b33991600aaea1c19a123abfee0a8bc4b91974a320beac51ee8eabe/logdog-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "5f9c7c1c48c497fb9e3798a78d075988", "sha256": "84f91b55457028b2fa4dd704739f7369518e72780624105d3b0a5035ad5fdc01"}, "downloads": -1, "filename": "logdog-0.2.4.tar.gz", "has_sig": false, "md5_digest": "5f9c7c1c48c497fb9e3798a78d075988", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14855, "upload_time": "2015-03-22T21:35:24", "upload_time_iso_8601": "2015-03-22T21:35:24.453362Z", "url": "https://files.pythonhosted.org/packages/6e/04/3030194cdff5e3f90fa572b02b83cb866bc99e1ec88176de2c64d79dc5fc/logdog-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "208f9a86ae46212071360cb9a9d55d0f", "sha256": "87f34427c10d2628c28b97d1b821b10573ecada91041a813fb3b951e3236c15e"}, "downloads": -1, "filename": "logdog-0.2.5.tar.gz", "has_sig": false, "md5_digest": "208f9a86ae46212071360cb9a9d55d0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7496500, "upload_time": "2015-03-22T21:38:48", "upload_time_iso_8601": "2015-03-22T21:38:48.929890Z", "url": "https://files.pythonhosted.org/packages/10/e6/11b942225f15f4d13746606bb1cc4d7c79134800db43dfda78ff3c5acf67/logdog-0.2.5.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "11632296c9b95fbdb5ca0459a01a367f", "sha256": "c18102aa0f04d900c12916e486e63eddf3b3cf8d6a059e51be91f7556af6672c"}, "downloads": -1, "filename": "logdog-0.2.7.tar.gz", "has_sig": false, "md5_digest": "11632296c9b95fbdb5ca0459a01a367f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 624042, "upload_time": "2015-03-22T22:15:59", "upload_time_iso_8601": "2015-03-22T22:15:59.561623Z", "url": "https://files.pythonhosted.org/packages/f7/3c/e11945f2f296c92d958e3a519a95a0b940bb5770dda548e349c0e9ba777b/logdog-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "1078284f5d81ce6caee772f93d4e12e8", "sha256": "bddb3d412bc2a6251f52b7a85b313748346ff608e3cac8a7c13d355d763e7851"}, "downloads": -1, "filename": "logdog-0.2.8.tar.gz", "has_sig": false, "md5_digest": "1078284f5d81ce6caee772f93d4e12e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7653575, "upload_time": "2015-03-29T21:56:22", "upload_time_iso_8601": "2015-03-29T21:56:22.164255Z", "url": "https://files.pythonhosted.org/packages/f4/e5/9081830642bacc9a79d77d12a01cd9164e2e1c95b5837b1dede44cb1d07c/logdog-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "6b134db2bf656bd92e42979ef3e5f706", "sha256": "5178397f174937bca9780f4ee84aaccb19556fc0f1025601afef17cebff3867a"}, "downloads": -1, "filename": "logdog-0.2.9.tar.gz", "has_sig": false, "md5_digest": "6b134db2bf656bd92e42979ef3e5f706", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7653490, "upload_time": "2015-03-29T22:05:00", "upload_time_iso_8601": "2015-03-29T22:05:00.806060Z", "url": "https://files.pythonhosted.org/packages/81/75/586ba4c745bc4a64f96e6435276b89c2335759b827106895ebb64a62348f/logdog-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67bae97fd356c0b7efd08f2fe26e1404", "sha256": "4d397b8b51ddc341adcaee116555a97e9306660f21d6e9e25e93b1408beb62b6"}, "downloads": -1, "filename": "logdog-0.2.11.tar.gz", "has_sig": false, "md5_digest": "67bae97fd356c0b7efd08f2fe26e1404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212971, "upload_time": "2015-07-04T23:12:34", "upload_time_iso_8601": "2015-07-04T23:12:34.154275Z", "url": "https://files.pythonhosted.org/packages/20/25/5fc7ff9dad8cfc63ab21699b82305580fcb55759e1cdc518a6bd412ac409/logdog-0.2.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:23 2020"}