{"info": {"author": "Diagnostic Robotics", "author_email": "admin@diagnosticrobotics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha"], "description": "# json-config-expander\n\nExpand **multi optional** configuration to **multiple configurations**.\n\n### Example 1\n```\nbase_config = {'param_1*': [12, 13]}\nexpand_configs(base_config)\n```\nReturns:\n```\n[{'param_1': 12}, {'param_1': 13})\n```\n\n### Example 2\n```\nbase_config = {'param_1': {'param_2*': [12, 13]}}\nexpand_configs(base_config)\n```\nReturns:\n```\n[\n    {'param_1': {'param_2': 12}}, \n    {'param_1': {'param_2': 13}}\n]\n```\n\n### Example 3\n```\nbase_config = {'param_1*': [12, 13], 'param_2*': ['a', 'b']}\nexpand_configs(base_config)\n```\nReturns:\n```\n[\n    {'param_1': 12, 'param_2': 'a'}, \n    {'param_1': 12, 'param_2': 'b'}, \n    {'param_1': 13, 'param_2': 'a'}, \n    {'param_1': 13, 'param_2': 'b'}\n]\n```\n\n### Example 4\n```\nbase_config = {\n    'param_1*': [\n        {'param_2*': [20, 30, 50]},\n        {'param_3*': ['Big', 'Small']}\n    ]\n}\nexpand_configs(base_config)\n```\nReturns:\n```\n[\n    {'param_1': {'param_2': 20}}, \n    {'param_1': {'param_2': 30}},\n    {'param_1': {'param_2': 50}},  \n    {'param_1': {'param_3': 'Big'}},\n    {'param_1': {'param_3': 'Small'}}\n]\n```\n\n### Motivation Scenario\n##### You would like to  run a classification task on multiple parameters of multiple classifier types, and see which one performs better:\n```\nbase_config = {\n    'classifier*': [\n        {'name': 'logistic_regression', 'max_iter*': [100, 200, 300]},\n        {'name': 'xgboost', 'n_estimators*': [50, 100, 200], 'max_depth*': [3,4,5]}\n    ]\n}\n```\n\n\n\nTo returns all the possible configurations of your setting:\n```\nexpand_configs(base_config)\n```\nReturns:\n```\n[\n    {'classifier': {'name': 'logistic_regression', 'max_iter': 100}}, \n    {'classifier': {'name': 'logistic_regression', 'max_iter': 200}}, \n    {'classifier': {'name': 'logistic_regression', 'max_iter': 300}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 50, 'max_depth': 3}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 50, 'max_depth': 4}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 50, 'max_depth': 5}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 100, 'max_depth': 3}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 100, 'max_depth': 4}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 100, 'max_depth': 5}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 200, 'max_depth': 3}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 200, 'max_depth': 4}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 200, 'max_depth': 5}}\n]\n```\n\nIf you want to run evaluation on each configuration, you need to pass evaluation_function:\n```\ndef evaluation_function(config):\n    ...\n```\n\n```\nresults = expand_configs(base_config, evaluation_function)\n```\n\nThe results list would have all the evaluation results on each config, then you can select the best result for your needs.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DiagnosticRobotics/json-config-expander", "keywords": "multiple json config", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "json-config-expander", "package_url": "https://pypi.org/project/json-config-expander/", "platform": "", "project_url": "https://pypi.org/project/json-config-expander/", "project_urls": {"Homepage": "https://github.com/DiagnosticRobotics/json-config-expander"}, "release_url": "https://pypi.org/project/json-config-expander/0.6/", "requires_dist": null, "requires_python": "", "summary": "Expand multi optional configuration to multiple configurations.", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>json-config-expander</h1>\n<p>Expand <strong>multi optional</strong> configuration to <strong>multiple configurations</strong>.</p>\n<h3>Example 1</h3>\n<pre><code>base_config = {'param_1*': [12, 13]}\nexpand_configs(base_config)\n</code></pre>\n<p>Returns:</p>\n<pre><code>[{'param_1': 12}, {'param_1': 13})\n</code></pre>\n<h3>Example 2</h3>\n<pre><code>base_config = {'param_1': {'param_2*': [12, 13]}}\nexpand_configs(base_config)\n</code></pre>\n<p>Returns:</p>\n<pre><code>[\n    {'param_1': {'param_2': 12}}, \n    {'param_1': {'param_2': 13}}\n]\n</code></pre>\n<h3>Example 3</h3>\n<pre><code>base_config = {'param_1*': [12, 13], 'param_2*': ['a', 'b']}\nexpand_configs(base_config)\n</code></pre>\n<p>Returns:</p>\n<pre><code>[\n    {'param_1': 12, 'param_2': 'a'}, \n    {'param_1': 12, 'param_2': 'b'}, \n    {'param_1': 13, 'param_2': 'a'}, \n    {'param_1': 13, 'param_2': 'b'}\n]\n</code></pre>\n<h3>Example 4</h3>\n<pre><code>base_config = {\n    'param_1*': [\n        {'param_2*': [20, 30, 50]},\n        {'param_3*': ['Big', 'Small']}\n    ]\n}\nexpand_configs(base_config)\n</code></pre>\n<p>Returns:</p>\n<pre><code>[\n    {'param_1': {'param_2': 20}}, \n    {'param_1': {'param_2': 30}},\n    {'param_1': {'param_2': 50}},  \n    {'param_1': {'param_3': 'Big'}},\n    {'param_1': {'param_3': 'Small'}}\n]\n</code></pre>\n<h3>Motivation Scenario</h3>\n<h5>You would like to  run a classification task on multiple parameters of multiple classifier types, and see which one performs better:</h5>\n<pre><code>base_config = {\n    'classifier*': [\n        {'name': 'logistic_regression', 'max_iter*': [100, 200, 300]},\n        {'name': 'xgboost', 'n_estimators*': [50, 100, 200], 'max_depth*': [3,4,5]}\n    ]\n}\n</code></pre>\n<p>To returns all the possible configurations of your setting:</p>\n<pre><code>expand_configs(base_config)\n</code></pre>\n<p>Returns:</p>\n<pre><code>[\n    {'classifier': {'name': 'logistic_regression', 'max_iter': 100}}, \n    {'classifier': {'name': 'logistic_regression', 'max_iter': 200}}, \n    {'classifier': {'name': 'logistic_regression', 'max_iter': 300}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 50, 'max_depth': 3}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 50, 'max_depth': 4}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 50, 'max_depth': 5}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 100, 'max_depth': 3}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 100, 'max_depth': 4}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 100, 'max_depth': 5}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 200, 'max_depth': 3}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 200, 'max_depth': 4}}, \n    {'classifier': {'name': 'xgboost', 'n_estimators': 200, 'max_depth': 5}}\n]\n</code></pre>\n<p>If you want to run evaluation on each configuration, you need to pass evaluation_function:</p>\n<pre><code>def evaluation_function(config):\n    ...\n</code></pre>\n<pre><code>results = expand_configs(base_config, evaluation_function)\n</code></pre>\n<p>The results list would have all the evaluation results on each config, then you can select the best result for your needs.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n\n          </div>"}, "last_serial": 6397465, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "937d11dfcc59c9cea885a6af11f9e8fc", "sha256": "5e1a62253bc66661acafed2d6b943988ada5356e3497eb9bc462e7205de87480"}, "downloads": -1, "filename": "json_config_expander-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "937d11dfcc59c9cea885a6af11f9e8fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5341, "upload_time": "2019-12-29T08:27:52", "upload_time_iso_8601": "2019-12-29T08:27:52.882751Z", "url": "https://files.pythonhosted.org/packages/ac/bd/df86ea2ecca531a7f2fe2e537a885101856bbfe57d13a9070dfbc2482f87/json_config_expander-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddd3f575524359a3ff0f75e83b44c812", "sha256": "605e447066eebcb6d3f918ea8a2f7b92590a082390764f6674a317cdf5e2cd8a"}, "downloads": -1, "filename": "json-config-expander-0.1.tar.gz", "has_sig": false, "md5_digest": "ddd3f575524359a3ff0f75e83b44c812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3578, "upload_time": "2019-12-29T08:27:55", "upload_time_iso_8601": "2019-12-29T08:27:55.217887Z", "url": "https://files.pythonhosted.org/packages/de/0d/5e9568f1b874f896515f10a0ce14e658b62264f6ad941b4e640d6b5796a0/json-config-expander-0.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6d9f92cbb35295f8777632d52da2d681", "sha256": "07d22663019ab7e259fb554e4371f6bb91fb549377993cacbf4f63c602397beb"}, "downloads": -1, "filename": "json_config_expander-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6d9f92cbb35295f8777632d52da2d681", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5340, "upload_time": "2019-12-29T09:10:15", "upload_time_iso_8601": "2019-12-29T09:10:15.686329Z", "url": "https://files.pythonhosted.org/packages/7f/12/b13ba9b04ad5f1a87a2ac0172362e11d728dc1c162ddf82e50ee63bdcf8d/json_config_expander-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9691215ccdf00470f18ad3ed1df2cb87", "sha256": "e2bfefb5dbb5e8a2df7a05673b7200b8c1b9a1d423d2b56fbbcb24854c41b98e"}, "downloads": -1, "filename": "json-config-expander-0.4.tar.gz", "has_sig": false, "md5_digest": "9691215ccdf00470f18ad3ed1df2cb87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3832, "upload_time": "2019-12-29T09:10:17", "upload_time_iso_8601": "2019-12-29T09:10:17.058650Z", "url": "https://files.pythonhosted.org/packages/78/32/463b928a32d586e93c3ad729e27ad8f07a3115241a81f69f710df82c9519/json-config-expander-0.4.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "0cb1e2b83fac17c11d8679e68ef58296", "sha256": "abcd3e0b8ea28a515f4a3253d2c88aef22f54bda85572696ca6e184b9c3d07b2"}, "downloads": -1, "filename": "json_config_expander-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0cb1e2b83fac17c11d8679e68ef58296", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5389, "upload_time": "2020-01-05T07:10:18", "upload_time_iso_8601": "2020-01-05T07:10:18.097793Z", "url": "https://files.pythonhosted.org/packages/16/d5/24a05d14a76a471f4a5bbd77789593fde5224b1da7b46c2b01024156ec2b/json_config_expander-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5257e4c5217438740fb95b586095db0e", "sha256": "43a8f05a767711c01e6b931cb181b3248099e0de3798bf8c05e946da6a16dc0d"}, "downloads": -1, "filename": "json-config-expander-0.6.tar.gz", "has_sig": false, "md5_digest": "5257e4c5217438740fb95b586095db0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3845, "upload_time": "2020-01-05T07:10:19", "upload_time_iso_8601": "2020-01-05T07:10:19.516041Z", "url": "https://files.pythonhosted.org/packages/e0/c4/ff131b7b468001c4aff29d72c2f93ad32fcf7cb6d91a6a6e807e05e40178/json-config-expander-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cb1e2b83fac17c11d8679e68ef58296", "sha256": "abcd3e0b8ea28a515f4a3253d2c88aef22f54bda85572696ca6e184b9c3d07b2"}, "downloads": -1, "filename": "json_config_expander-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0cb1e2b83fac17c11d8679e68ef58296", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5389, "upload_time": "2020-01-05T07:10:18", "upload_time_iso_8601": "2020-01-05T07:10:18.097793Z", "url": "https://files.pythonhosted.org/packages/16/d5/24a05d14a76a471f4a5bbd77789593fde5224b1da7b46c2b01024156ec2b/json_config_expander-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5257e4c5217438740fb95b586095db0e", "sha256": "43a8f05a767711c01e6b931cb181b3248099e0de3798bf8c05e946da6a16dc0d"}, "downloads": -1, "filename": "json-config-expander-0.6.tar.gz", "has_sig": false, "md5_digest": "5257e4c5217438740fb95b586095db0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3845, "upload_time": "2020-01-05T07:10:19", "upload_time_iso_8601": "2020-01-05T07:10:19.516041Z", "url": "https://files.pythonhosted.org/packages/e0/c4/ff131b7b468001c4aff29d72c2f93ad32fcf7cb6d91a6a6e807e05e40178/json-config-expander-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:51 2020"}