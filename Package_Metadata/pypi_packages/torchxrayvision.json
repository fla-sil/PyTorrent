{"info": {"author": "Joseph Paul Cohen", "author_email": "joseph@josephpcohen.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "# torchxrayvision\n\nA library for chest X-ray datasets and models. Including pre-trainined models.\n\nThis code is still under development\n\n## Getting started\n\n```\npip install torchxrayvision\n\nimport torchxrayvision as xrv\n```\n\nThese are default pathologies:\n```\nxrv.datasets.default_pathologies \n\n['Atelectasis',\n 'Consolidation',\n 'Infiltration',\n 'Pneumothorax',\n 'Edema',\n 'Emphysema',\n 'Fibrosis',\n 'Effusion',\n 'Pneumonia',\n 'Pleural_Thickening',\n 'Cardiomegaly',\n 'Nodule',\n 'Mass',\n 'Hernia',\n 'Lung Lesion',\n 'Fracture',\n 'Lung Opacity',\n 'Enlarged Cardiomediastinum']\n```\n\n## models\n\nSpecify weights for pretrained models (currently all DenseNet121)\nNote: Each pretrained model has 18 outputs. The `all` model has every output trained. However, for the other weights some targets are not trained and will predict randomly becuase they do not exist in the training dataset. The only valid outputs are listed in the field `{dataset}.pathologies` on the dataset that corresponds to the weights. \n\n```\nmodel = xrv.models.DenseNet(weights=\"all\")\nmodel = xrv.models.DenseNet(weights=\"kaggle\")\nmodel = xrv.models.DenseNet(weights=\"nih\")\nmodel = xrv.models.DenseNet(weights=\"chex\")\nmodel = xrv.models.DenseNet(weights=\"minix_nb\")\nmodel = xrv.models.DenseNet(weights=\"minix_ch\")\n\n```\n\n\n## datasets\n\n```\ntransform = torchvision.transforms.Compose([xrv.datasets.XRayCenterCrop(),\n                                            xrv.datasets.XRayResizer(224)])\n\nd_kaggle = xrv.datasets.Kaggle_Dataset(imgpath=\"path to stage_2_train_images_jpg\",\n                                       transform=transform)\n\nd_chex = xrv.datasets.CheX_Dataset(imgpath=\"path to CheXpert-v1.0-small\",\n                                   csvpath=\"path to CheXpert-v1.0-small/train.csv\",\n                                   transform=transform)\n\nd_nih = xrv.datasets.NIH_Dataset(imgpath=\"path to NIH images\")\n\nd_nih2 = xrv.datasets.NIH_Google_Dataset(imgpath=\"path to NIH images\")\n\nd_pc = xrv.datasets.PC_Dataset(imgpath=\"path to image folder\")\n\n\nd_covid19 = xrv.datasets.COVID19_Dataset() # specify imgpath and csvpath for the dataset\n```\n\n## dataset tools\n\nrelabel_dataset will align labels to have the same order as the pathologies argument.\n```\nxrv.datasets.relabel_dataset(xrv.datasets.default_pathologies , d_nih) # has side effects\n```\n\n## Citation\n\n```\nJoseph Paul Cohen, Joseph Viviano, Mohammad Hashir, and Hadrien Bertrand. \nTorchXrayVision: A library of chest X-ray datasets and models. \nhttps://github.com/mlmed/torchxrayvision, 2020\n```\nand\n```\nCohen, J. P., Hashir, M., Brooks, R., & Bertrand, H. \nOn the limits of cross-domain generalization in automated X-ray prediction. \nMedical Imaging with Deep Learning 2020 (Online: [https://arxiv.org/abs/2002.02497](https://arxiv.org/abs/2002.02497))\n\n@inproceedings{cohen2020limits,\n  title={On the limits of cross-domain generalization in automated X-ray prediction},\n  author={Cohen, Joseph Paul and Hashir, Mohammad and Brooks, Rupert and Bertrand, Hadrien},\n  booktitle={Medical Imaging with Deep Learning}\n  year={2020}\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mlmed/torchxrayvision", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "torchxrayvision", "package_url": "https://pypi.org/project/torchxrayvision/", "platform": "", "project_url": "https://pypi.org/project/torchxrayvision/", "project_urls": {"Homepage": "https://github.com/mlmed/torchxrayvision"}, "release_url": "https://pypi.org/project/torchxrayvision/0.0.7/", "requires_dist": ["torch (>=1)", "torchvision (>=0.5)", "scikit-image (>=0.16)", "tqdm (>=4)", "numpy (>=1)", "pandas (>=1)"], "requires_python": ">=3.6", "summary": "A small example package", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>torchxrayvision</h1>\n<p>A library for chest X-ray datasets and models. Including pre-trainined models.</p>\n<p>This code is still under development</p>\n<h2>Getting started</h2>\n<pre><code>pip install torchxrayvision\n\nimport torchxrayvision as xrv\n</code></pre>\n<p>These are default pathologies:</p>\n<pre><code>xrv.datasets.default_pathologies \n\n['Atelectasis',\n 'Consolidation',\n 'Infiltration',\n 'Pneumothorax',\n 'Edema',\n 'Emphysema',\n 'Fibrosis',\n 'Effusion',\n 'Pneumonia',\n 'Pleural_Thickening',\n 'Cardiomegaly',\n 'Nodule',\n 'Mass',\n 'Hernia',\n 'Lung Lesion',\n 'Fracture',\n 'Lung Opacity',\n 'Enlarged Cardiomediastinum']\n</code></pre>\n<h2>models</h2>\n<p>Specify weights for pretrained models (currently all DenseNet121)\nNote: Each pretrained model has 18 outputs. The <code>all</code> model has every output trained. However, for the other weights some targets are not trained and will predict randomly becuase they do not exist in the training dataset. The only valid outputs are listed in the field <code>{dataset}.pathologies</code> on the dataset that corresponds to the weights.</p>\n<pre><code>model = xrv.models.DenseNet(weights=\"all\")\nmodel = xrv.models.DenseNet(weights=\"kaggle\")\nmodel = xrv.models.DenseNet(weights=\"nih\")\nmodel = xrv.models.DenseNet(weights=\"chex\")\nmodel = xrv.models.DenseNet(weights=\"minix_nb\")\nmodel = xrv.models.DenseNet(weights=\"minix_ch\")\n\n</code></pre>\n<h2>datasets</h2>\n<pre><code>transform = torchvision.transforms.Compose([xrv.datasets.XRayCenterCrop(),\n                                            xrv.datasets.XRayResizer(224)])\n\nd_kaggle = xrv.datasets.Kaggle_Dataset(imgpath=\"path to stage_2_train_images_jpg\",\n                                       transform=transform)\n\nd_chex = xrv.datasets.CheX_Dataset(imgpath=\"path to CheXpert-v1.0-small\",\n                                   csvpath=\"path to CheXpert-v1.0-small/train.csv\",\n                                   transform=transform)\n\nd_nih = xrv.datasets.NIH_Dataset(imgpath=\"path to NIH images\")\n\nd_nih2 = xrv.datasets.NIH_Google_Dataset(imgpath=\"path to NIH images\")\n\nd_pc = xrv.datasets.PC_Dataset(imgpath=\"path to image folder\")\n\n\nd_covid19 = xrv.datasets.COVID19_Dataset() # specify imgpath and csvpath for the dataset\n</code></pre>\n<h2>dataset tools</h2>\n<p>relabel_dataset will align labels to have the same order as the pathologies argument.</p>\n<pre><code>xrv.datasets.relabel_dataset(xrv.datasets.default_pathologies , d_nih) # has side effects\n</code></pre>\n<h2>Citation</h2>\n<pre><code>Joseph Paul Cohen, Joseph Viviano, Mohammad Hashir, and Hadrien Bertrand. \nTorchXrayVision: A library of chest X-ray datasets and models. \nhttps://github.com/mlmed/torchxrayvision, 2020\n</code></pre>\n<p>and</p>\n<pre><code>Cohen, J. P., Hashir, M., Brooks, R., &amp; Bertrand, H. \nOn the limits of cross-domain generalization in automated X-ray prediction. \nMedical Imaging with Deep Learning 2020 (Online: [https://arxiv.org/abs/2002.02497](https://arxiv.org/abs/2002.02497))\n\n@inproceedings{cohen2020limits,\n  title={On the limits of cross-domain generalization in automated X-ray prediction},\n  author={Cohen, Joseph Paul and Hashir, Mohammad and Brooks, Rupert and Bertrand, Hadrien},\n  booktitle={Medical Imaging with Deep Learning}\n  year={2020}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 7191299, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e18716de932e665019e7d21056a3557a", "sha256": "0b30f60a6fe27f547f441580357e2c5e393397781609e291c20579703fe7a1d7"}, "downloads": -1, "filename": "torchxrayvision-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e18716de932e665019e7d21056a3557a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13381, "upload_time": "2020-03-14T18:31:27", "upload_time_iso_8601": "2020-03-14T18:31:27.341837Z", "url": "https://files.pythonhosted.org/packages/5c/65/bb9339f4b8d7386b7fa4f7afb1da2bf48d60f56970c6e1caad31ebbc0ee6/torchxrayvision-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de86f895d919f172d9ea52ea74a4a2dd", "sha256": "6c2c557b98f6fd966cfdaba4affbb37812ae73db37837556c8944d5341b7fbea"}, "downloads": -1, "filename": "torchxrayvision-0.0.1.tar.gz", "has_sig": false, "md5_digest": "de86f895d919f172d9ea52ea74a4a2dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8733, "upload_time": "2020-03-14T18:31:29", "upload_time_iso_8601": "2020-03-14T18:31:29.594823Z", "url": "https://files.pythonhosted.org/packages/71/f0/ade85ef153b5f872ec8e2146b8a85a1b633836da7e4a55316447672fe7c9/torchxrayvision-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3fc766d5bfff07843bd0394b7be962d3", "sha256": "c08681e44a0a1413982f89d2bdb230bca60b4ea7528ae17334384b1b11d9949b"}, "downloads": -1, "filename": "torchxrayvision-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3fc766d5bfff07843bd0394b7be962d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14671, "upload_time": "2020-03-17T02:04:53", "upload_time_iso_8601": "2020-03-17T02:04:53.795406Z", "url": "https://files.pythonhosted.org/packages/0b/ad/f5d03cf9c98f7530298e763f5a0baf078d2d0969138230888c6b09c9abbe/torchxrayvision-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59ca35abaeef1118080449f1d9f37492", "sha256": "6538f52b6d0703400c1829b082892c518eccb52d0167503b553e44d5b667d9d8"}, "downloads": -1, "filename": "torchxrayvision-0.0.2.tar.gz", "has_sig": false, "md5_digest": "59ca35abaeef1118080449f1d9f37492", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10716, "upload_time": "2020-03-17T02:04:54", "upload_time_iso_8601": "2020-03-17T02:04:54.879249Z", "url": "https://files.pythonhosted.org/packages/7d/35/8e50339ac325131aec264634d5f9aecad508027c1d51160c0afe0caa403f/torchxrayvision-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "321a3c5d6360fea7ee0f0cf6e57bb324", "sha256": "bc1eb1bd616b323265b487b70f7ccabb1f2e7d63fe7120c0f79369c6227ceadc"}, "downloads": -1, "filename": "torchxrayvision-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "321a3c5d6360fea7ee0f0cf6e57bb324", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16154, "upload_time": "2020-03-20T22:42:59", "upload_time_iso_8601": "2020-03-20T22:42:59.988709Z", "url": "https://files.pythonhosted.org/packages/5c/ad/d2b46a29dd877a51242089f3dd39e230528d2f07a597449f39f3d4110ebe/torchxrayvision-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd64627e50f57925a03e6354e985c33e", "sha256": "10084413b52ffdfb490f47ef5895fa8eb5050669f2be35de0cbaa676addbfd04"}, "downloads": -1, "filename": "torchxrayvision-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fd64627e50f57925a03e6354e985c33e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12368, "upload_time": "2020-03-20T22:43:01", "upload_time_iso_8601": "2020-03-20T22:43:01.922349Z", "url": "https://files.pythonhosted.org/packages/ee/bb/e78696d1b2fdc54b1b44a11792533e365dd61caee7a6825c03f19c844a1b/torchxrayvision-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0cbf770d1d30fa0e870ba3cfd2e1db39", "sha256": "f43151ce6bfb1ed0cd3e0b1a2ebcbe0c15ebe16af1954c5f1100bba8d00cfee9"}, "downloads": -1, "filename": "torchxrayvision-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0cbf770d1d30fa0e870ba3cfd2e1db39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16302, "upload_time": "2020-03-31T03:21:14", "upload_time_iso_8601": "2020-03-31T03:21:14.350220Z", "url": "https://files.pythonhosted.org/packages/c2/bb/28ce89898a126342f3b7570027fa77f2c86fc6118d82623442ef9b87a28a/torchxrayvision-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "beba641b87bb7cab11f4a1023330b84d", "sha256": "8593efe8c5d6754852f3f049ebeaac1ed4f98476bdfd3e05d6c9a73774a84410"}, "downloads": -1, "filename": "torchxrayvision-0.0.4.tar.gz", "has_sig": false, "md5_digest": "beba641b87bb7cab11f4a1023330b84d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12552, "upload_time": "2020-03-31T03:21:15", "upload_time_iso_8601": "2020-03-31T03:21:15.734949Z", "url": "https://files.pythonhosted.org/packages/2e/00/d7cf0d878552d23db2cae8ee68420c2c4410ec5b8738ab1d24453d04fad6/torchxrayvision-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "0d872cb7bc8b1988f660fb5ee6c943a7", "sha256": "d05f28847bbb5d2241695c852e3d1b85a5592feb945d3c2212ccf1142fc97e21"}, "downloads": -1, "filename": "torchxrayvision-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0d872cb7bc8b1988f660fb5ee6c943a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17682, "upload_time": "2020-04-26T17:39:14", "upload_time_iso_8601": "2020-04-26T17:39:14.696295Z", "url": "https://files.pythonhosted.org/packages/bc/82/be5343b9498ddee9a3d01cca214ab2162922c09d31053ab01bd153e58578/torchxrayvision-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1597966f145126b9180b8b0b3d4cf8b8", "sha256": "ccb490f3e70c0da69979ca5c6da64962ff8392cbc27893a7e3244e6c40f05098"}, "downloads": -1, "filename": "torchxrayvision-0.0.5.tar.gz", "has_sig": false, "md5_digest": "1597966f145126b9180b8b0b3d4cf8b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14174, "upload_time": "2020-04-26T17:39:15", "upload_time_iso_8601": "2020-04-26T17:39:15.575888Z", "url": "https://files.pythonhosted.org/packages/89/8e/4a24704450616ef9d2bec7e18a93aa5e1ab7175e2bfc5a8653ffd8d97298/torchxrayvision-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "794d0a100192457fac32f838db6d441f", "sha256": "79f39afc487b85049bab79c89bc5e0750fe39d2a995e3edf3f4534a8f8a46435"}, "downloads": -1, "filename": "torchxrayvision-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "794d0a100192457fac32f838db6d441f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17791, "upload_time": "2020-05-05T20:35:02", "upload_time_iso_8601": "2020-05-05T20:35:02.751688Z", "url": "https://files.pythonhosted.org/packages/9c/b1/56d9e0277fb46efeb9c920402872ec2bc6debc6a87cd2cddc1046b53bb33/torchxrayvision-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ae7b67ad5b476d0373f0fea6faafea7", "sha256": "5566fb0f6e22ac01620a3926af0c5e46535e483811a2ed7b6c114a7faf1c5c77"}, "downloads": -1, "filename": "torchxrayvision-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7ae7b67ad5b476d0373f0fea6faafea7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14268, "upload_time": "2020-05-05T20:35:04", "upload_time_iso_8601": "2020-05-05T20:35:04.542833Z", "url": "https://files.pythonhosted.org/packages/d3/50/ee7db1a186450dd1791f263e7894aec656cf5d0dcdbe5e865484d7df1e08/torchxrayvision-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ee08f19f5c0717052d32fb65beef427a", "sha256": "71a23872be2917279c335408792c6d345f1fe6d1cb9a014a6d0143c581d1c4a3"}, "downloads": -1, "filename": "torchxrayvision-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ee08f19f5c0717052d32fb65beef427a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17804, "upload_time": "2020-05-07T19:50:54", "upload_time_iso_8601": "2020-05-07T19:50:54.086695Z", "url": "https://files.pythonhosted.org/packages/d6/e6/41536b1a958edf4e4db788ead4dcdfd53a7c3fd5a67291931123d9ac4e35/torchxrayvision-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "473e816f020dce67df2c2e0e5dd4f776", "sha256": "e058d1bb4792aa843e577ad1aa1c5aeb722c88716bf4b82d29b4dc38e7c3822e"}, "downloads": -1, "filename": "torchxrayvision-0.0.7.tar.gz", "has_sig": false, "md5_digest": "473e816f020dce67df2c2e0e5dd4f776", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14287, "upload_time": "2020-05-07T19:50:55", "upload_time_iso_8601": "2020-05-07T19:50:55.377603Z", "url": "https://files.pythonhosted.org/packages/0e/31/8f97a1e0d8f74e59e801a99ad59963fadf58a80f567a324897851b326a38/torchxrayvision-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ee08f19f5c0717052d32fb65beef427a", "sha256": "71a23872be2917279c335408792c6d345f1fe6d1cb9a014a6d0143c581d1c4a3"}, "downloads": -1, "filename": "torchxrayvision-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ee08f19f5c0717052d32fb65beef427a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17804, "upload_time": "2020-05-07T19:50:54", "upload_time_iso_8601": "2020-05-07T19:50:54.086695Z", "url": "https://files.pythonhosted.org/packages/d6/e6/41536b1a958edf4e4db788ead4dcdfd53a7c3fd5a67291931123d9ac4e35/torchxrayvision-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "473e816f020dce67df2c2e0e5dd4f776", "sha256": "e058d1bb4792aa843e577ad1aa1c5aeb722c88716bf4b82d29b4dc38e7c3822e"}, "downloads": -1, "filename": "torchxrayvision-0.0.7.tar.gz", "has_sig": false, "md5_digest": "473e816f020dce67df2c2e0e5dd4f776", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14287, "upload_time": "2020-05-07T19:50:55", "upload_time_iso_8601": "2020-05-07T19:50:55.377603Z", "url": "https://files.pythonhosted.org/packages/0e/31/8f97a1e0d8f74e59e801a99ad59963fadf58a80f567a324897851b326a38/torchxrayvision-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:03 2020"}