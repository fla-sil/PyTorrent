{"info": {"author": "Zulko 2017", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Multimedia", "Topic :: Multimedia :: Sound/Audio", "Topic :: Multimedia :: Sound/Audio :: Analysis", "Topic :: Multimedia :: Video", "Topic :: Multimedia :: Video :: Capture", "Topic :: Multimedia :: Video :: Conversion"], "description": "MoviePy\n=======\n\n.. image:: https://badge.fury.io/py/moviepy.svg\n    :target: PyPI_\n    :alt: MoviePy page on the Python Package Index\n.. image:: https://badges.gitter.im/movie-py/gitter.png\n    :target: Gitter_\n    :alt: Discuss MoviePy on Gitter\n.. image:: https://travis-ci.org/Zulko/moviepy.svg?branch=master\n    :target: https://travis-ci.org/Zulko/moviepy\n    :alt: Build status on travis-ci\n.. image:: https://coveralls.io/repos/github/Zulko/moviepy/badge.svg?branch=master\n    :target: https://coveralls.io/github/Zulko/moviepy?branch=master\n    :alt: Code coverage from coveralls.io\n\nMoviePy (full documentation_) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the gallery_ for some examples of use.\n\nMoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3 (or only Python 3.4+ from v.1.0). Here it is in action in an IPython notebook:\n\n.. image:: https://raw.githubusercontent.com/Zulko/moviepy/master/docs/demo_preview.jpeg\n    :alt: [logo]\n    :align: center\n\nExample\n-------\n\nIn this example we open a video file, select the subclip between t=50s and t=60s, add a title at the center of the screen, and write the result to a new file:\n\n.. code:: python\n\n    from moviepy.editor import *\n\n    video = VideoFileClip(\"myHolidays.mp4\").subclip(50,60)\n\n    # Make the text. Many more options are available.\n    txt_clip = ( TextClip(\"My Holidays 2013\",fontsize=70,color='white')\n                 .set_position('center')\n                 .set_duration(10) )\n\n    result = CompositeVideoClip([video, txt_clip]) # Overlay text on video\n    result.write_videofile(\"myHolidays_edited.webm\",fps=25) # Many options...\n\n\nMaintainers wanted!\n-------------------\n\nAs there are more and more people seeking support (320 open issues as of Sept. 2019!) and all the MoviePy maintainers seem busy, we'd love to hear about developers interested in giving a hand and solving some of the issues (especially the ones that affect you) or reviewing pull requests. Open an issue or contact us directly if you are interested. Thanks!\n\nInstallation\n------------\n\nMoviePy depends on the Python modules Numpy_, imageio_, Decorator_, and tqdm_, which will be automatically installed during MoviePy's installation. The software FFMPEG should be automatically downloaded/installed (by imageio) during your first use of MoviePy (installation will take a few seconds). If you want to use a specific version of FFMPEG, follow the instructions in ``config_defaults.py``. In case of trouble, provide feedback.\n\n**Installation by hand:** download the sources, either from PyPI_ or, if you want the development version, from GitHub_, unzip everything into one folder, open a terminal and type:\n\n.. code:: bash\n\n    $ (sudo) python setup.py install\n\n**Installation with pip:** if you have ``pip`` installed, just type this in a terminal:\n\n.. code:: bash\n\n    $ (sudo) pip install moviepy\n\nIf you have neither ``setuptools`` nor ``ez_setup`` installed, the command above will fail. In this case type this before installing:\n\n.. code:: bash\n\n    $ (sudo) pip install ez_setup\n\n\nOptional but useful dependencies\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can install ``moviepy`` with all dependencies via:\n\n.. code:: bash\n\n    $ (sudo) pip install moviepy[optional]\n\nImageMagick_ is not strictly required, but needed if you want to incorporate texts. It can also be used as a backend for GIFs, though you can also create GIFs with MoviePy without ImageMagick.\n\nOnce you have installed ImageMagick, it will be automatically detected by MoviePy, **except on Windows!** Windows users, before installing MoviePy by hand, need to edit ``moviepy/config_defaults.py`` to provide the path to the ImageMagick binary, which is called `convert`. It should look like this:\n\n.. code:: python\n\n    IMAGEMAGICK_BINARY = \"C:\\\\Program Files\\\\ImageMagick_VERSION\\\\convert.exe\"\n\nPyGame_ is needed for video and sound previews (not relevant if you intend to work with MoviePy on a server but essential for advanced video editing by hand).\n\nFor advanced image processing, you will need one or several of the following packages:\n\n- The Python Imaging Library (PIL) or, even better, its branch Pillow_.\n- Scipy_ (for tracking, segmenting, etc.) can be used to resize video clips if PIL and OpenCV are not installed.\n- `Scikit Image`_ may be needed for some advanced image manipulation.\n- `OpenCV 2.4.6`_ or a more recent version (one that provides the package ``cv2``) may be needed for some advanced image manipulation.\n- `Matplotlib`_\n\nOnce you have installed it, ImageMagick will be automatically detected by MoviePy, (except for windows users and Ubuntu 16.04LTS users).\n\nFor Windows users, before installing MoviePy by hand, go into the ``moviepy/config_defaults.py`` file and provide the path to the ImageMagick binary called ``magick``. It should look like this:\n\n.. code:: python\n\n    IMAGEMAGICK_BINARY = \"C:\\\\Program Files\\\\ImageMagick_VERSION\\\\magick.exe\"\n\nIf you are using an older version of ImageMagick, keep in mind the name of the executable is not ``magick.exe`` but ``convert.exe``. In that case, the IMAGEMAGICK_BINARY property should be ``C:\\\\Program Files\\\\ImageMagick_VERSION\\\\convert.exe``\n\nFor Ubuntu 16.04LTS users, after installing MoviePy on the terminal, IMAGEMAGICK will not be detected by moviepy. This bug can be fixed. Modify the file in this directory: /etc/ImageMagick-6/policy.xml, comment out the statement <!-- <policy domain=\"path\" rights=\"none\" pattern=\"@*\" /> -->.\n\nPyGame_ is needed for video and sound previews (useless if you intend to work with MoviePy on a server but really essential for advanced video editing *by hand*).\n\nFor instance, using the method ``clip.resize`` requires that at least one of Scipy, PIL, Pillow or OpenCV is installed.\n\n\nDocumentation\n-------------\n\nRunning `build_docs` has additional dependencies that require installation.\n\n.. code:: bash\n\n    $ (sudo) pip install moviepy[docs]\n\nThe documentation can be generated and viewed via:\n\n.. code:: bash\n\n    $ python setup.py build_docs\n\nYou can pass additional arguments to the documentation build, such as clean build:\n\n.. code:: bash\n\n    $ python setup.py build_docs -E\n\nMore information is available from the `Sphinx`_ documentation.\n\nNew in 1.0.0: Progress bars and messages with Proglog\n-------------------------------------------------------\n\nNon-backwards-compatible changes were introduced in 1.0.0 to\nmanage progress bars and messages using\n`Proglog <https://github.com/Edinburgh-Genome-Foundry/Proglog>`_, which\nenables to display nice progress bars in the console as well as in\na Jupyter notebook or any user interface, like a website.\n\nTo display notebook friendly progress bars, first install IPyWidgets:\n\n.. code::\n\n    sudo pip install ipywidgets\n    sudo jupyter nbextension enable --py --sys-prefix widgetsnbextension\n\nThen at the beginning of your notebook enter:\n\n.. code:: python\n\n    import proglog\n    proglog.notebook()\n\nHave a look at the Proglog project page for more options.\n\nRunning Tests\n-------------\n\nThe testing suite can be executed via:\n\n.. code:: bash\n\n    $ python setup.py test\n\nRunning the test suite in this manner will install the testing dependencies.\nIf you opt to run the test suite manually, you can install the dependencies via:\n\n.. code:: bash\n\n    $ (sudo) pip install moviepy[test]\n\n\nContribute\n----------\n\nMoviePy is open-source software originally written by Zulko_ and released under the MIT licence. The project is hosted on GitHub_, where everyone is welcome to contribute, ask for help or simply give feedback. Please read our `Contributing Guidelines`_ for more information about how to contribute!\n\nYou can also discuss the project on Reddit_ or Gitter_. These are preferred over GitHub issues for usage questions and examples.\n\n\nMaintainers\n-----------\n\n- Zulko_ (owner)\n- `@tburrows13`_\n- `@earney`_\n- `@mbeacom`_\n- `@overdrivr`_\n- `@keikoro`_\n- `@ryanfox`_\n\n\n.. MoviePy links\n.. _gallery: https://zulko.github.io/moviepy/gallery.html\n.. _documentation: https://zulko.github.io/moviepy/\n.. _`download MoviePy`: https://github.com/Zulko/moviepy\n.. _`Label Wiki`: https://github.com/Zulko/moviepy/wiki/Label-Wiki\n.. _Contributing Guidelines: https://github.com/Zulko/moviepy/blob/master/CONTRIBUTING.md\n\n.. Websites, Platforms\n.. _Reddit: https://www.reddit.com/r/moviepy/\n.. _PyPI: https://pypi.python.org/pypi/moviepy\n.. _GitHub: https://github.com/Zulko/moviepy\n.. _Gitter: https://gitter.im/movie-py/Lobby\n\n.. Software, Tools, Libraries\n.. _Pillow: https://pillow.readthedocs.org/en/latest/\n.. _Scipy: https://www.scipy.org/\n.. _`OpenCV 2.4.6`: https://sourceforge.net/projects/opencvlibrary/files/\n.. _Pygame: https://www.pygame.org/download.shtml\n.. _Numpy: https://www.scipy.org/install.html\n.. _imageio: https://imageio.github.io/\n.. _`Scikit Image`: https://scikit-image.org/docs/stable/install.html\n.. _Decorator: https://pypi.python.org/pypi/decorator\n.. _tqdm: https://github.com/noamraph/tqdm\n.. _ffmpeg: https://www.ffmpeg.org/download.html\n.. _ImageMagick: https://www.imagemagick.org/script/index.php\n.. _`Matplotlib`: https://matplotlib.org/\n.. _`Sphinx`: https://www.sphinx-doc.org/en/master/setuptools.html\n\n.. People\n.. _Zulko: https://github.com/Zulko\n.. _`@tburrows13`: https://github.com/tburrows13\n.. _`@earney`: https://github.com/earney\n.. _`@mbeacom`: https://github.com/mbeacom\n.. _`@overdrivr`: https://github.com/overdrivr\n.. _`@keikoro`: https://github.com/keikoro\n.. _`@ryanfox`: https://github.com/ryanfox", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://zulko.github.io/moviepy/", "keywords": "video editing audio compositing ffmpeg", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "moviepy-patch", "package_url": "https://pypi.org/project/moviepy-patch/", "platform": "", "project_url": "https://pypi.org/project/moviepy-patch/", "project_urls": {"Homepage": "https://zulko.github.io/moviepy/"}, "release_url": "https://pypi.org/project/moviepy-patch/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Video editing with Python", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/moviepy\" rel=\"nofollow\"><img alt=\"MoviePy page on the Python Package Index\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e8d4448aa095adf5901bc70d1303448597698b7/68747470733a2f2f62616467652e667572792e696f2f70792f6d6f76696570792e737667\"></a>\n<a href=\"https://gitter.im/movie-py/Lobby\" rel=\"nofollow\"><img alt=\"Discuss MoviePy on Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae3de3d6bec7bd78a41b2a7237c962145a15d50d/68747470733a2f2f6261646765732e6769747465722e696d2f6d6f7669652d70792f6769747465722e706e67\"></a>\n<a href=\"https://travis-ci.org/Zulko/moviepy\" rel=\"nofollow\"><img alt=\"Build status on travis-ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9b0c4a340eaeaaa2367b100bbd4ebf0b09b599e/68747470733a2f2f7472617669732d63692e6f72672f5a756c6b6f2f6d6f76696570792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/Zulko/moviepy?branch=master\" rel=\"nofollow\"><img alt=\"Code coverage from coveralls.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60e0bf29d3dc70bb3c04f563af263f9bf8264352/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5a756c6b6f2f6d6f76696570792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>MoviePy (full <a href=\"https://zulko.github.io/moviepy/\" rel=\"nofollow\">documentation</a>) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the <a href=\"https://zulko.github.io/moviepy/gallery.html\" rel=\"nofollow\">gallery</a> for some examples of use.</p>\n<p>MoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3 (or only Python 3.4+ from v.1.0). Here it is in action in an IPython notebook:</p>\n<img alt=\"[logo]\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a57be65acfae8f7b32eb4428a5af911bf1ea8310/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5a756c6b6f2f6d6f76696570792f6d61737465722f646f63732f64656d6f5f707265766965772e6a706567\">\n<div id=\"example\">\n<h2>Example</h2>\n<p>In this example we open a video file, select the subclip between t=50s and t=60s, add a title at the center of the screen, and write the result to a new file:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">moviepy.editor</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">VideoFileClip</span><span class=\"p\">(</span><span class=\"s2\">\"myHolidays.mp4\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">subclip</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Make the text. Many more options are available.</span>\n<span class=\"n\">txt_clip</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"n\">TextClip</span><span class=\"p\">(</span><span class=\"s2\">\"My Holidays 2013\"</span><span class=\"p\">,</span><span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">70</span><span class=\"p\">,</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'white'</span><span class=\"p\">)</span>\n             <span class=\"o\">.</span><span class=\"n\">set_position</span><span class=\"p\">(</span><span class=\"s1\">'center'</span><span class=\"p\">)</span>\n             <span class=\"o\">.</span><span class=\"n\">set_duration</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">CompositeVideoClip</span><span class=\"p\">([</span><span class=\"n\">video</span><span class=\"p\">,</span> <span class=\"n\">txt_clip</span><span class=\"p\">])</span> <span class=\"c1\"># Overlay text on video</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">write_videofile</span><span class=\"p\">(</span><span class=\"s2\">\"myHolidays_edited.webm\"</span><span class=\"p\">,</span><span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span> <span class=\"c1\"># Many options...</span>\n</pre>\n</div>\n<div id=\"maintainers-wanted\">\n<h2>Maintainers wanted!</h2>\n<p>As there are more and more people seeking support (320 open issues as of Sept. 2019!) and all the MoviePy maintainers seem busy, we\u2019d love to hear about developers interested in giving a hand and solving some of the issues (especially the ones that affect you) or reviewing pull requests. Open an issue or contact us directly if you are interested. Thanks!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>MoviePy depends on the Python modules <a href=\"https://www.scipy.org/install.html\" rel=\"nofollow\">Numpy</a>, <a href=\"https://imageio.github.io/\" rel=\"nofollow\">imageio</a>, <a href=\"https://pypi.python.org/pypi/decorator\" rel=\"nofollow\">Decorator</a>, and <a href=\"https://github.com/noamraph/tqdm\" rel=\"nofollow\">tqdm</a>, which will be automatically installed during MoviePy\u2019s installation. The software FFMPEG should be automatically downloaded/installed (by imageio) during your first use of MoviePy (installation will take a few seconds). If you want to use a specific version of FFMPEG, follow the instructions in <tt>config_defaults.py</tt>. In case of trouble, provide feedback.</p>\n<p><strong>Installation by hand:</strong> download the sources, either from <a href=\"https://pypi.python.org/pypi/moviepy\" rel=\"nofollow\">PyPI</a> or, if you want the development version, from <a href=\"https://github.com/Zulko/moviepy\" rel=\"nofollow\">GitHub</a>, unzip everything into one folder, open a terminal and type:</p>\n<pre>$ <span class=\"o\">(</span>sudo<span class=\"o\">)</span> python setup.py install\n</pre>\n<p><strong>Installation with pip:</strong> if you have <tt>pip</tt> installed, just type this in a terminal:</p>\n<pre>$ <span class=\"o\">(</span>sudo<span class=\"o\">)</span> pip install moviepy\n</pre>\n<p>If you have neither <tt>setuptools</tt> nor <tt>ez_setup</tt> installed, the command above will fail. In this case type this before installing:</p>\n<pre>$ <span class=\"o\">(</span>sudo<span class=\"o\">)</span> pip install ez_setup\n</pre>\n<div id=\"optional-but-useful-dependencies\">\n<h3>Optional but useful dependencies</h3>\n<p>You can install <tt>moviepy</tt> with all dependencies via:</p>\n<pre>$ <span class=\"o\">(</span>sudo<span class=\"o\">)</span> pip install moviepy<span class=\"o\">[</span>optional<span class=\"o\">]</span>\n</pre>\n<p><a href=\"https://www.imagemagick.org/script/index.php\" rel=\"nofollow\">ImageMagick</a> is not strictly required, but needed if you want to incorporate texts. It can also be used as a backend for GIFs, though you can also create GIFs with MoviePy without ImageMagick.</p>\n<p>Once you have installed ImageMagick, it will be automatically detected by MoviePy, <strong>except on Windows!</strong> Windows users, before installing MoviePy by hand, need to edit <tt>moviepy/config_defaults.py</tt> to provide the path to the ImageMagick binary, which is called <cite>convert</cite>. It should look like this:</p>\n<pre><span class=\"n\">IMAGEMAGICK_BINARY</span> <span class=\"o\">=</span> <span class=\"s2\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Program Files</span><span class=\"se\">\\\\</span><span class=\"s2\">ImageMagick_VERSION</span><span class=\"se\">\\\\</span><span class=\"s2\">convert.exe\"</span>\n</pre>\n<p><a href=\"https://www.pygame.org/download.shtml\" rel=\"nofollow\">PyGame</a> is needed for video and sound previews (not relevant if you intend to work with MoviePy on a server but essential for advanced video editing by hand).</p>\n<p>For advanced image processing, you will need one or several of the following packages:</p>\n<ul>\n<li>The Python Imaging Library (PIL) or, even better, its branch <a href=\"https://pillow.readthedocs.org/en/latest/\" rel=\"nofollow\">Pillow</a>.</li>\n<li><a href=\"https://www.scipy.org/\" rel=\"nofollow\">Scipy</a> (for tracking, segmenting, etc.) can be used to resize video clips if PIL and OpenCV are not installed.</li>\n<li><a href=\"https://scikit-image.org/docs/stable/install.html\" rel=\"nofollow\">Scikit Image</a> may be needed for some advanced image manipulation.</li>\n<li><a href=\"https://sourceforge.net/projects/opencvlibrary/files/\" rel=\"nofollow\">OpenCV 2.4.6</a> or a more recent version (one that provides the package <tt>cv2</tt>) may be needed for some advanced image manipulation.</li>\n<li><a href=\"https://matplotlib.org/\" rel=\"nofollow\">Matplotlib</a></li>\n</ul>\n<p>Once you have installed it, ImageMagick will be automatically detected by MoviePy, (except for windows users and Ubuntu 16.04LTS users).</p>\n<p>For Windows users, before installing MoviePy by hand, go into the <tt>moviepy/config_defaults.py</tt> file and provide the path to the ImageMagick binary called <tt>magick</tt>. It should look like this:</p>\n<pre><span class=\"n\">IMAGEMAGICK_BINARY</span> <span class=\"o\">=</span> <span class=\"s2\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Program Files</span><span class=\"se\">\\\\</span><span class=\"s2\">ImageMagick_VERSION</span><span class=\"se\">\\\\</span><span class=\"s2\">magick.exe\"</span>\n</pre>\n<p>If you are using an older version of ImageMagick, keep in mind the name of the executable is not <tt>magick.exe</tt> but <tt>convert.exe</tt>. In that case, the IMAGEMAGICK_BINARY property should be <tt><span class=\"pre\">C:\\\\Program</span> <span class=\"pre\">Files\\\\ImageMagick_VERSION\\\\convert.exe</span></tt></p>\n<p>For Ubuntu 16.04LTS users, after installing MoviePy on the terminal, IMAGEMAGICK will not be detected by moviepy. This bug can be fixed. Modify the file in this directory: /etc/ImageMagick-6/policy.xml, comment out the statement &lt;!\u2013 &lt;policy domain=\u201dpath\u201d rights=\u201dnone\u201d pattern=\u201d@*\u201d /&gt; \u2013&gt;.</p>\n<p><a href=\"https://www.pygame.org/download.shtml\" rel=\"nofollow\">PyGame</a> is needed for video and sound previews (useless if you intend to work with MoviePy on a server but really essential for advanced video editing <em>by hand</em>).</p>\n<p>For instance, using the method <tt>clip.resize</tt> requires that at least one of Scipy, PIL, Pillow or OpenCV is installed.</p>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Running <cite>build_docs</cite> has additional dependencies that require installation.</p>\n<pre>$ <span class=\"o\">(</span>sudo<span class=\"o\">)</span> pip install moviepy<span class=\"o\">[</span>docs<span class=\"o\">]</span>\n</pre>\n<p>The documentation can be generated and viewed via:</p>\n<pre>$ python setup.py build_docs\n</pre>\n<p>You can pass additional arguments to the documentation build, such as clean build:</p>\n<pre>$ python setup.py build_docs -E\n</pre>\n<p>More information is available from the <a href=\"https://www.sphinx-doc.org/en/master/setuptools.html\" rel=\"nofollow\">Sphinx</a> documentation.</p>\n</div>\n<div id=\"new-in-1-0-0-progress-bars-and-messages-with-proglog\">\n<h2>New in 1.0.0: Progress bars and messages with Proglog</h2>\n<p>Non-backwards-compatible changes were introduced in 1.0.0 to\nmanage progress bars and messages using\n<a href=\"https://github.com/Edinburgh-Genome-Foundry/Proglog\" rel=\"nofollow\">Proglog</a>, which\nenables to display nice progress bars in the console as well as in\na Jupyter notebook or any user interface, like a website.</p>\n<p>To display notebook friendly progress bars, first install IPyWidgets:</p>\n<pre>sudo pip install ipywidgets\nsudo jupyter nbextension enable --py --sys-prefix widgetsnbextension\n</pre>\n<p>Then at the beginning of your notebook enter:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">proglog</span>\n<span class=\"n\">proglog</span><span class=\"o\">.</span><span class=\"n\">notebook</span><span class=\"p\">()</span>\n</pre>\n<p>Have a look at the Proglog project page for more options.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>The testing suite can be executed via:</p>\n<pre>$ python setup.py <span class=\"nb\">test</span>\n</pre>\n<p>Running the test suite in this manner will install the testing dependencies.\nIf you opt to run the test suite manually, you can install the dependencies via:</p>\n<pre>$ <span class=\"o\">(</span>sudo<span class=\"o\">)</span> pip install moviepy<span class=\"o\">[</span>test<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>MoviePy is open-source software originally written by <a href=\"https://github.com/Zulko\" rel=\"nofollow\">Zulko</a> and released under the MIT licence. The project is hosted on <a href=\"https://github.com/Zulko/moviepy\" rel=\"nofollow\">GitHub</a>, where everyone is welcome to contribute, ask for help or simply give feedback. Please read our <a href=\"https://github.com/Zulko/moviepy/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">Contributing Guidelines</a> for more information about how to contribute!</p>\n<p>You can also discuss the project on <a href=\"https://www.reddit.com/r/moviepy/\" rel=\"nofollow\">Reddit</a> or <a href=\"https://gitter.im/movie-py/Lobby\" rel=\"nofollow\">Gitter</a>. These are preferred over GitHub issues for usage questions and examples.</p>\n</div>\n<div id=\"maintainers\">\n<h2>Maintainers</h2>\n<ul>\n<li><a href=\"https://github.com/Zulko\" rel=\"nofollow\">Zulko</a> (owner)</li>\n<li><a href=\"https://github.com/tburrows13\" rel=\"nofollow\">@tburrows13</a></li>\n<li><a href=\"https://github.com/earney\" rel=\"nofollow\">@earney</a></li>\n<li><a href=\"https://github.com/mbeacom\" rel=\"nofollow\">@mbeacom</a></li>\n<li><a href=\"https://github.com/overdrivr\" rel=\"nofollow\">@overdrivr</a></li>\n<li><a href=\"https://github.com/keikoro\" rel=\"nofollow\">@keikoro</a></li>\n<li><a href=\"https://github.com/ryanfox\" rel=\"nofollow\">@ryanfox</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6700988, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "dc21add58af8d5e9ac177d6f1888da56", "sha256": "6cc2651d702639d8e8e12cb1be7a7b89e1b45a365280276eea9b9d26e10f21cb"}, "downloads": -1, "filename": "moviepy_patch-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dc21add58af8d5e9ac177d6f1888da56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 361762, "upload_time": "2020-02-26T04:35:31", "upload_time_iso_8601": "2020-02-26T04:35:31.358832Z", "url": "https://files.pythonhosted.org/packages/fa/c0/da7c3ea7d87ddea4ecda36082eec8bbf9c06d9301944568b480fbbe11e3a/moviepy_patch-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc21add58af8d5e9ac177d6f1888da56", "sha256": "6cc2651d702639d8e8e12cb1be7a7b89e1b45a365280276eea9b9d26e10f21cb"}, "downloads": -1, "filename": "moviepy_patch-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dc21add58af8d5e9ac177d6f1888da56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 361762, "upload_time": "2020-02-26T04:35:31", "upload_time_iso_8601": "2020-02-26T04:35:31.358832Z", "url": "https://files.pythonhosted.org/packages/fa/c0/da7c3ea7d87ddea4ecda36082eec8bbf9c06d9301944568b480fbbe11e3a/moviepy_patch-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:28 2020"}