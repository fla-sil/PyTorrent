{"info": {"author": "Ryan Byrne", "author_email": "ryanbyrne142@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python :: 3"], "description": "# Python Module for the [OpenWFOM](https://hillmanlab.zuckermaninstitute.columbia.edu/content/optical-imaging-and-microscopy-development-and-dissemination) Imaging System\n\nThe ```openwfom``` Python Package and command line tool are ways to declare camera settings, test setup, and start an acquisition on an OpenWFOM imaging system.\n\n## Getting Started\n\nThese instructions will help you get the necessary software installed.\n\n***NOTE:*** Before following this installation guide, complete the hardware assembly instructions found on [This Wiki](https://github.com/ryan-byrne/wfom/wiki)\n\n### Software Requirements\n\n* [Python](https://www.python.org/downloads/) - 3.5 and Up\n* [Java Runtime](https://java.com/en/download/) - 1.7 and Up\n* [Andor SOLIS (4.30 and up)](http://my.andor.com/login.aspx) - Registration Required\n* [PIP](https://pip.pypa.io/en/stable/installing/)\n\n### Installation\n\n#### Installing the ```openwfom``` Python Package with PIP\n\nMake sure you have [PIP](https://pip.pypa.io/en/stable/installing/) installed on your machine. Open a new instance of CMD, and enter:\n\n``` cmd\npip install openwfom\n```\n\nThe ```openwfom``` Python Package is now installed in your Python ```site-packages```. ```wfom-test``` and ```wfom-run``` have also been added to your PATH to be used as **command line tools**. More on that later. \n\n### Test the Installation\n\nWe will now test to see if ```openwfom``` and it's required files were installed correctly. Start by opening a new instance of CMD and type:\n\n``` cmd\nwfom-test -v -y\n```\n\nThe test script will run, automatically bypassing any errors it recieves, and print each message recieved to the command prompt. It will also generate a log file, whose path will be printed at the end of the script at:\n\n```\n/path/to/site-packages/openwfom/resources/logs\n```\n\n**Note:** *If any errors occur, post a screenshot of the command line and the output of ```pip freeze``` to this repository's [Issues Page](https://github.com/ryan-byrne/openwfom/issues).*\n\n## Usage\n\nThis section provides information on how to use the ```openwfom``` package, as well as the command line arguments that were installed to the path.\n\n### (Option 1) Using the Python Package\n\nUsing the ```openwfom``` Python Package simply requires importing it's ```wfom``` module. ```wfom```'s functions can now be used in your custom script.\n\n``` python\nfrom openwfom import wfom\n\nwfom.run()\n```\n\n#### Available Classes\n\nThe OpenWFOM package is comprised of three classes: **Andor, Arduino, and Webcam**, which can be imported on their own.\n\nFor example, if I simply wanted to import the Arduino class from ```wfom``` I would write:\n\n``` python\nfrom openwfom import wfom\n\n# Initiate the Arduino Class\na = wfom.Arduino(\"COM4\")\n# Call the strobe function to open the Strobe GUI\na.strobe()\n```\n\n### (Option 2) Running from the Command Line\n\nDuring the ```pip``` installation of our ```openwfom``` package, there were two executable scripts that were installed to our PATH: ```wfom-test``` and ```wfom-run```. To run either, simply enter them into CMD.\n\n```\nwfom-test\n```\n\nor\n\n```\nwfom-run\n```\n#### Command Line Arguments\n\nTo run the **command line script** with more (or less) funtionality, optional command line arguments were built in:\n\n* ```-q``` or ```--quiet``` runs the script in \"Quiet Mode\", without command line prints\n*  ```-v``` or ```--verbose``` runs the script in \"Verbose Mode\", which prints each message on a successive line, and exports the log to a file.\n*  ```-y``` or ```--auto_yes``` automatically continues whenever an error occurs\n\n**Note:** *\"Quiet\" and \"Verbose\" modes cannot be run concurrently.*\n\nFor example, the following command would run an acquisition without command line prints, and automatically continue whenever an error occurs:\n\n```\nwfom-run -q -y\n```\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/ryan-byrne/wfom/tags).\n\n## Authors\n\n* **Ryan Byrne** - *Initial work* - [ryan-byrne](https://github.com/ryan-byrne)\n\nSee also the list of [contributors](https://github.com/ryan-byrne/wfom/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Beth Hillman and the rest of the LFOI Team\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ryan-byrne/openwfom", "keywords": "wide field optical mapping", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "openwfom", "package_url": "https://pypi.org/project/openwfom/", "platform": "", "project_url": "https://pypi.org/project/openwfom/", "project_urls": {"Bug Reports": "https://github.com/ryan-byrne/wfom/issues", "Hillman Lab": "https://hillmanlab.zuckermaninstitute.columbia.edu/", "Homepage": "https://github.com/ryan-byrne/openwfom"}, "release_url": "https://pypi.org/project/openwfom/0.0.1b29/", "requires_dist": ["pywinauto", "path", "pyfiglet", "pyserial", "psutil", "colorama", "termcolor"], "requires_python": ">3.5,!=3.7.6", "summary": "", "version": "0.0.1b29", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Module for the <a href=\"https://hillmanlab.zuckermaninstitute.columbia.edu/content/optical-imaging-and-microscopy-development-and-dissemination\" rel=\"nofollow\">OpenWFOM</a> Imaging System</h1>\n<p>The <code>openwfom</code> Python Package and command line tool are ways to declare camera settings, test setup, and start an acquisition on an OpenWFOM imaging system.</p>\n<h2>Getting Started</h2>\n<p>These instructions will help you get the necessary software installed.</p>\n<p><em><strong>NOTE:</strong></em> Before following this installation guide, complete the hardware assembly instructions found on <a href=\"https://github.com/ryan-byrne/wfom/wiki\" rel=\"nofollow\">This Wiki</a></p>\n<h3>Software Requirements</h3>\n<ul>\n<li><a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python</a> - 3.5 and Up</li>\n<li><a href=\"https://java.com/en/download/\" rel=\"nofollow\">Java Runtime</a> - 1.7 and Up</li>\n<li><a href=\"http://my.andor.com/login.aspx\" rel=\"nofollow\">Andor SOLIS (4.30 and up)</a> - Registration Required</li>\n<li><a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">PIP</a></li>\n</ul>\n<h3>Installation</h3>\n<h4>Installing the <code>openwfom</code> Python Package with PIP</h4>\n<p>Make sure you have <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">PIP</a> installed on your machine. Open a new instance of CMD, and enter:</p>\n<pre>pip install openwfom\n</pre>\n<p>The <code>openwfom</code> Python Package is now installed in your Python <code>site-packages</code>. <code>wfom-test</code> and <code>wfom-run</code> have also been added to your PATH to be used as <strong>command line tools</strong>. More on that later.</p>\n<h3>Test the Installation</h3>\n<p>We will now test to see if <code>openwfom</code> and it's required files were installed correctly. Start by opening a new instance of CMD and type:</p>\n<pre>wfom-test -v -y\n</pre>\n<p>The test script will run, automatically bypassing any errors it recieves, and print each message recieved to the command prompt. It will also generate a log file, whose path will be printed at the end of the script at:</p>\n<pre><code>/path/to/site-packages/openwfom/resources/logs\n</code></pre>\n<p><strong>Note:</strong> <em>If any errors occur, post a screenshot of the command line and the output of <code>pip freeze</code> to this repository's <a href=\"https://github.com/ryan-byrne/openwfom/issues\" rel=\"nofollow\">Issues Page</a>.</em></p>\n<h2>Usage</h2>\n<p>This section provides information on how to use the <code>openwfom</code> package, as well as the command line arguments that were installed to the path.</p>\n<h3>(Option 1) Using the Python Package</h3>\n<p>Using the <code>openwfom</code> Python Package simply requires importing it's <code>wfom</code> module. <code>wfom</code>'s functions can now be used in your custom script.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openwfom</span> <span class=\"kn\">import</span> <span class=\"n\">wfom</span>\n\n<span class=\"n\">wfom</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h4>Available Classes</h4>\n<p>The OpenWFOM package is comprised of three classes: <strong>Andor, Arduino, and Webcam</strong>, which can be imported on their own.</p>\n<p>For example, if I simply wanted to import the Arduino class from <code>wfom</code> I would write:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openwfom</span> <span class=\"kn\">import</span> <span class=\"n\">wfom</span>\n\n<span class=\"c1\"># Initiate the Arduino Class</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">wfom</span><span class=\"o\">.</span><span class=\"n\">Arduino</span><span class=\"p\">(</span><span class=\"s2\">\"COM4\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Call the strobe function to open the Strobe GUI</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">strobe</span><span class=\"p\">()</span>\n</pre>\n<h3>(Option 2) Running from the Command Line</h3>\n<p>During the <code>pip</code> installation of our <code>openwfom</code> package, there were two executable scripts that were installed to our PATH: <code>wfom-test</code> and <code>wfom-run</code>. To run either, simply enter them into CMD.</p>\n<pre><code>wfom-test\n</code></pre>\n<p>or</p>\n<pre><code>wfom-run\n</code></pre>\n<h4>Command Line Arguments</h4>\n<p>To run the <strong>command line script</strong> with more (or less) funtionality, optional command line arguments were built in:</p>\n<ul>\n<li><code>-q</code> or <code>--quiet</code> runs the script in \"Quiet Mode\", without command line prints</li>\n<li><code>-v</code> or <code>--verbose</code> runs the script in \"Verbose Mode\", which prints each message on a successive line, and exports the log to a file.</li>\n<li><code>-y</code> or <code>--auto_yes</code> automatically continues whenever an error occurs</li>\n</ul>\n<p><strong>Note:</strong> <em>\"Quiet\" and \"Verbose\" modes cannot be run concurrently.</em></p>\n<p>For example, the following command would run an acquisition without command line prints, and automatically continue whenever an error occurs:</p>\n<pre><code>wfom-run -q -y\n</code></pre>\n<h2>Versioning</h2>\n<p>We use <a href=\"http://semver.org/\" rel=\"nofollow\">SemVer</a> for versioning. For the versions available, see the <a href=\"https://github.com/ryan-byrne/wfom/tags\" rel=\"nofollow\">tags on this repository</a>.</p>\n<h2>Authors</h2>\n<ul>\n<li><strong>Ryan Byrne</strong> - <em>Initial work</em> - <a href=\"https://github.com/ryan-byrne\" rel=\"nofollow\">ryan-byrne</a></li>\n</ul>\n<p>See also the list of <a href=\"https://github.com/ryan-byrne/wfom/contributors\" rel=\"nofollow\">contributors</a> who participated in this project.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>Beth Hillman and the rest of the LFOI Team</li>\n</ul>\n\n          </div>"}, "last_serial": 7182495, "releases": {"0.0.1b29": [{"comment_text": "", "digests": {"md5": "19f16e538d173e63fae4d69162184559", "sha256": "12faa55cc5ab8ce70fbd1ecae92425ee5d40b4fae72cfeb54aa968e32a7c5962"}, "downloads": -1, "filename": "openwfom-0.0.1b29-py3-none-any.whl", "has_sig": false, "md5_digest": "19f16e538d173e63fae4d69162184559", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5,!=3.7.6", "size": 4496745, "upload_time": "2020-05-06T19:06:50", "upload_time_iso_8601": "2020-05-06T19:06:50.638962Z", "url": "https://files.pythonhosted.org/packages/5f/83/27f5f4bb54a6ef67bd2e03603ea4c8cec6b11a16f3a35b482eb05b27ce6c/openwfom-0.0.1b29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "059f74a568b357c31de60bbc4392b365", "sha256": "afbc3b1832620d537f856ef61e67ddcb98e06883da21126d4580b41379554063"}, "downloads": -1, "filename": "openwfom-0.0.1b29.tar.gz", "has_sig": false, "md5_digest": "059f74a568b357c31de60bbc4392b365", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5,!=3.7.6", "size": 4495605, "upload_time": "2020-05-06T19:06:52", "upload_time_iso_8601": "2020-05-06T19:06:52.400209Z", "url": "https://files.pythonhosted.org/packages/2a/f3/c7e22002ac6afcedd32174daed638298616a032ceeb446463783a7d2fbae/openwfom-0.0.1b29.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19f16e538d173e63fae4d69162184559", "sha256": "12faa55cc5ab8ce70fbd1ecae92425ee5d40b4fae72cfeb54aa968e32a7c5962"}, "downloads": -1, "filename": "openwfom-0.0.1b29-py3-none-any.whl", "has_sig": false, "md5_digest": "19f16e538d173e63fae4d69162184559", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5,!=3.7.6", "size": 4496745, "upload_time": "2020-05-06T19:06:50", "upload_time_iso_8601": "2020-05-06T19:06:50.638962Z", "url": "https://files.pythonhosted.org/packages/5f/83/27f5f4bb54a6ef67bd2e03603ea4c8cec6b11a16f3a35b482eb05b27ce6c/openwfom-0.0.1b29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "059f74a568b357c31de60bbc4392b365", "sha256": "afbc3b1832620d537f856ef61e67ddcb98e06883da21126d4580b41379554063"}, "downloads": -1, "filename": "openwfom-0.0.1b29.tar.gz", "has_sig": false, "md5_digest": "059f74a568b357c31de60bbc4392b365", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5,!=3.7.6", "size": 4495605, "upload_time": "2020-05-06T19:06:52", "upload_time_iso_8601": "2020-05-06T19:06:52.400209Z", "url": "https://files.pythonhosted.org/packages/2a/f3/c7e22002ac6afcedd32174daed638298616a032ceeb446463783a7d2fbae/openwfom-0.0.1b29.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:16 2020"}