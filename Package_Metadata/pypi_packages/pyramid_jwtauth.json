{"info": {"author": "Alex Kavanagh (Websand)", "author_email": "alex@ajkavanagh.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pyramid", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP"], "description": "===============\npyramid_jwtauth\n===============\n\nNOTE: This is an early version of the code is the library is likely to change.\n\nThis is a Pyramid authenitcation plugin for JSON Web Token (JWT)\nAuthentication:\n\n    http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html\n\nTo access resources using JWT Access Authentication, the client must have\nobtained a JWT to make signed requests to the server.  This library also makes\nJSON Web Tokens for the client.  The Token can be opaque to client although,\nunless it is encrypted, the client can read the claims made in the token.\n\nWhen accessing a protected resource, the server will generate a 401 challenge\nresponse with the scheme \"JWT\" as follows::\n\n    > GET /protected_resource HTTP/1.1\n    > Host: example.com\n\n    < HTTP/1.1 401 Unauthorized\n    < WWW-Authenticate: JWT\n\nThe client will use their JWT to build a request signature and\ninclude it in the Authorization header like so::\n\n    > GET /protected_resource HTTP/1.1\n    > Host: example.com\n    > Authorization: JWT token=eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\n     cGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\n\n    < HTTP/1.1 200 OK\n    < Content-Type: text/plain\n    <\n    < For your eyes only:  secret data!\n\n(NB depending on the number of claims in the JWT the token can get large.\nFor all practical purposes, it should be kept short.)\n\nThis plugin uses the PyJWT library for verifying JWTs:\n\n    http://github.com/progrium/pyjwt\n\nAlso see the library for generating the JWT for the client in the first place\nalthough any language can be used to generate it.\n\n-----------\nInspiration\n-----------\n\nThis module is *heavily* based on (and copied from) the Mozilla Services\npyramid_macauth package and macauthlib package:\n\n    https://github.com/mozilla-services/pyramid_macauth\n\n    https://github.com/mozilla-services/macauthlib\n\nWithout it, I would not have been able to make the small number of\nmodifications to this package and get it to work with Pyramid.\n\n-------\nLicence\n-------\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this file,\nYou can obtain one at http://mozilla.org/MPL/2.0/.\n\n\nPENDING\n=======\n\n* Initial dev version 0.0.1.dev1.\n\nForked from https://github.com/mozilla-services/pyramid_macauth version 0.4.0-dev1\n\n0.0.1.dev5\n\nUpdated package requires to need PyJWT.\n\n0.0.1.dev4\n\nUpdated package so that it can be downloaded for use by Python 3.3/3.4\n\n0.0.1.dev3\n\nNow works properly with RSA keys and fixed issue with not doing a 401 with\nthe appropriate challenge.\nDropped support for Python 2.6 and 3.2\n\n0.1.1\n\nWorks with PyJWT 0.4.x (also unpinned).  Contributions by (Wichert Akkerman\n<wichert@wiggy.net>) that enable the auth to use a 'Bearer' header rather than\nthe custom header 'JWT'.\n\nDropped support for Python 3.3 in tox, but it should still work fine.\n\nAddition (from development) perspective of using Vagrant to develop and\ntox-test the package against python 2.7 and 3.4\n\n0.1.2\n\nAdded ability to disable various checks via the PyJWT options{} in the decode()\nmethod.  This is configured in the policy via the Pyramid setting system.\n\n0.1.3\n\nMerged PR#11 from Shadizzle to provide ability to configure 'scheme' from the\nINI file. Bumped version to 0.1.3.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ajkavanagh/pyramid_jwtauth", "keywords": "authentication token JWT JSON", "license": "MPLv2.0", "maintainer": null, "maintainer_email": null, "name": "pyramid_jwtauth", "package_url": "https://pypi.org/project/pyramid_jwtauth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyramid_jwtauth/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ajkavanagh/pyramid_jwtauth"}, "release_url": "https://pypi.org/project/pyramid_jwtauth/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "pyramid_jwtauth", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>NOTE: This is an early version of the code is the library is likely to change.</p>\n<p>This is a Pyramid authenitcation plugin for JSON Web Token (JWT)\nAuthentication:</p>\n<blockquote>\n<a href=\"http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html\" rel=\"nofollow\">http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html</a></blockquote>\n<p>To access resources using JWT Access Authentication, the client must have\nobtained a JWT to make signed requests to the server.  This library also makes\nJSON Web Tokens for the client.  The Token can be opaque to client although,\nunless it is encrypted, the client can read the claims made in the token.</p>\n<p>When accessing a protected resource, the server will generate a 401 challenge\nresponse with the scheme \u201cJWT\u201d as follows:</p>\n<pre>&gt; GET /protected_resource HTTP/1.1\n&gt; Host: example.com\n\n&lt; HTTP/1.1 401 Unauthorized\n&lt; WWW-Authenticate: JWT\n</pre>\n<p>The client will use their JWT to build a request signature and\ninclude it in the Authorization header like so:</p>\n<pre>&gt; GET /protected_resource HTTP/1.1\n&gt; Host: example.com\n&gt; Authorization: JWT token=eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\n cGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\n\n&lt; HTTP/1.1 200 OK\n&lt; Content-Type: text/plain\n&lt;\n&lt; For your eyes only:  secret data!\n</pre>\n<p>(NB depending on the number of claims in the JWT the token can get large.\nFor all practical purposes, it should be kept short.)</p>\n<p>This plugin uses the PyJWT library for verifying JWTs:</p>\n<blockquote>\n<a href=\"http://github.com/progrium/pyjwt\" rel=\"nofollow\">http://github.com/progrium/pyjwt</a></blockquote>\n<p>Also see the library for generating the JWT for the client in the first place\nalthough any language can be used to generate it.</p>\n<div id=\"inspiration\">\n<h2>Inspiration</h2>\n<p>This module is <em>heavily</em> based on (and copied from) the Mozilla Services\npyramid_macauth package and macauthlib package:</p>\n<blockquote>\n<p><a href=\"https://github.com/mozilla-services/pyramid_macauth\" rel=\"nofollow\">https://github.com/mozilla-services/pyramid_macauth</a></p>\n<p><a href=\"https://github.com/mozilla-services/macauthlib\" rel=\"nofollow\">https://github.com/mozilla-services/macauthlib</a></p>\n</blockquote>\n<p>Without it, I would not have been able to make the small number of\nmodifications to this package and get it to work with Pyramid.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>This Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this file,\nYou can obtain one at <a href=\"http://mozilla.org/MPL/2.0/\" rel=\"nofollow\">http://mozilla.org/MPL/2.0/</a>.</p>\n<div id=\"pending\">\n<h3>PENDING</h3>\n<ul>\n<li>Initial dev version 0.0.1.dev1.</li>\n</ul>\n<p>Forked from <a href=\"https://github.com/mozilla-services/pyramid_macauth\" rel=\"nofollow\">https://github.com/mozilla-services/pyramid_macauth</a> version 0.4.0-dev1</p>\n<p>0.0.1.dev5</p>\n<p>Updated package requires to need PyJWT.</p>\n<p>0.0.1.dev4</p>\n<p>Updated package so that it can be downloaded for use by Python 3.3/3.4</p>\n<p>0.0.1.dev3</p>\n<p>Now works properly with RSA keys and fixed issue with not doing a 401 with\nthe appropriate challenge.\nDropped support for Python 2.6 and 3.2</p>\n<p>0.1.1</p>\n<p>Works with PyJWT 0.4.x (also unpinned).  Contributions by (Wichert Akkerman\n&lt;<a href=\"mailto:wichert%40wiggy.net\">wichert<span>@</span>wiggy<span>.</span>net</a>&gt;) that enable the auth to use a \u2018Bearer\u2019 header rather than\nthe custom header \u2018JWT\u2019.</p>\n<p>Dropped support for Python 3.3 in tox, but it should still work fine.</p>\n<p>Addition (from development) perspective of using Vagrant to develop and\ntox-test the package against python 2.7 and 3.4</p>\n<p>0.1.2</p>\n<p>Added ability to disable various checks via the PyJWT options{} in the decode()\nmethod.  This is configured in the policy via the Pyramid setting system.</p>\n<p>0.1.3</p>\n<p>Merged PR#11 from Shadizzle to provide ability to configure \u2018scheme\u2019 from the\nINI file. Bumped version to 0.1.3.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1651894, "releases": {"0.0.1.dev5": [{"comment_text": "", "digests": {"md5": "1c7cffdffa0d868aafdc11c697b0ab32", "sha256": "537699f3d7290210e8d2a31fc7da315f35812c4346659c0f4cec91ed0b62a7ef"}, "downloads": -1, "filename": "pyramid_jwtauth-0.0.1.dev5.tar.gz", "has_sig": false, "md5_digest": "1c7cffdffa0d868aafdc11c697b0ab32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17299, "upload_time": "2014-05-02T16:29:12", "upload_time_iso_8601": "2014-05-02T16:29:12.694521Z", "url": "https://files.pythonhosted.org/packages/09/9f/12a025bb2237f9d094ecf87368d73fbc17d3e9ac729fefbe2f51e4b6eb76/pyramid_jwtauth-0.0.1.dev5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "2c16950d8333e5d4010121e84d80cf0a", "sha256": "ba0da11e74d86c1f9051bfe5117f911e1599a03b9b00d733bcd4e5d2e7224159"}, "downloads": -1, "filename": "pyramid_jwtauth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2c16950d8333e5d4010121e84d80cf0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17275, "upload_time": "2015-01-07T14:51:00", "upload_time_iso_8601": "2015-01-07T14:51:00.240607Z", "url": "https://files.pythonhosted.org/packages/e2/9d/4e8e15bb15ded149e28163646da57b7435df3584a737e41dfe990d2e321d/pyramid_jwtauth-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "0ea668798284303ef62ec96c805df671", "sha256": "6e3ae9de4140d12c178da005033f469ab7e8357a0d25a8907f46d981168b9fb2"}, "downloads": -1, "filename": "pyramid_jwtauth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0ea668798284303ef62ec96c805df671", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17813, "upload_time": "2015-06-07T20:16:07", "upload_time_iso_8601": "2015-06-07T20:16:07.045590Z", "url": "https://files.pythonhosted.org/packages/21/45/d2714a446ec3cf226a7956335032f317d38071da6e9a1c140c190b69fb01/pyramid_jwtauth-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ece46481b5396fa114f7febe1bf2e0c4", "sha256": "436bdc986b50b9f36bdb758199333a7ecb8cce477a6bb87bca82ff3ea3f02d43"}, "downloads": -1, "filename": "pyramid_jwtauth-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ece46481b5396fa114f7febe1bf2e0c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18908, "upload_time": "2015-06-08T13:54:00", "upload_time_iso_8601": "2015-06-08T13:54:00.559737Z", "url": "https://files.pythonhosted.org/packages/07/d1/4ced829e93f3823d0dc64793a1cc5e9052749784f17f80e7d8fdc3123902/pyramid_jwtauth-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e5f4eb053950c8a55c129418420d92bc", "sha256": "3dd01e3727f6bd71cac5191539095b6bc23f6e9aca1fced7bcc5ec6cf70c7737"}, "downloads": -1, "filename": "pyramid_jwtauth-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e5f4eb053950c8a55c129418420d92bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19066, "upload_time": "2015-07-27T17:27:47", "upload_time_iso_8601": "2015-07-27T17:27:47.667940Z", "url": "https://files.pythonhosted.org/packages/61/d5/fdc61a909d500b2e64ca22d0c5ba8bd6410e9a38fe6a48f2509f63bd1e57/pyramid_jwtauth-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5f4eb053950c8a55c129418420d92bc", "sha256": "3dd01e3727f6bd71cac5191539095b6bc23f6e9aca1fced7bcc5ec6cf70c7737"}, "downloads": -1, "filename": "pyramid_jwtauth-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e5f4eb053950c8a55c129418420d92bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19066, "upload_time": "2015-07-27T17:27:47", "upload_time_iso_8601": "2015-07-27T17:27:47.667940Z", "url": "https://files.pythonhosted.org/packages/61/d5/fdc61a909d500b2e64ca22d0c5ba8bd6410e9a38fe6a48f2509f63bd1e57/pyramid_jwtauth-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:24 2020"}