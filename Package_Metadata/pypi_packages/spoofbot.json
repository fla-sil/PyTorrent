{"info": {"author": "raember", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Spoofbot\nWeb bot for spoofing browser behaviour when using python requests.\nSupports Firefox and Chrome browser on most generic Windows, MacOS and Linux spoofing.\n\n## Example usage\n```py\nbrowser = Chrome()\ncache = CacheAdapter()\nbrowser.mount('https://', cache)\nbrowser.mount('http://', cache)\n\nbrowser.navigate('https://httpbin.org/')\nspec = browser.get('https://httpbin.org/spec.json').json()\nprint(spec['info']['description'])\n# A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>\nheaders = browser.navigate(\n    'https://httpbin.org/headers',\n    headers={'Accept': 'mime/type'}\n).json()\nprint(headers['headers']['Accept'])\n# mime/type\n```\n\n## Browsers\n`spoofbot` allows for useragents to be generate using information like the platform and browser version.\nCurrently, only Firefox and Chrome are supported, but through inheritance one can add more browsers.\nThe browser classes are derived from the `requests.Session` class and extend it by additional features.\n\nFirefox indicates that brotli encoding (`br`) is acceptable, but that might lead to issues when parsing the responses.\nIt is possible to change that default header:\n\n```py\nff = Firefox()\nff._accept_encoding = ['deflate', 'gzip']  # brotli (br) is cumbersome\n``` \n\nThe browsers have an automatic request delay built in which can be controlled with the `request_timeout` and `honor_timeout`.\nAfter requests have been made, `did_wait` and `waiting_period` provide further information.\n\n## File Cache\nUsing `FileCacheAdapter`, one can store responses (without metadata such as headers or cookies) in the filesystem.\nIt supports deleting the last request or a specific file from the cache.\nThe cache indicates whether the last made request got a cache hit.\nIf there is a request that should be cached that cannot be adequately stored with only hostname and path, one can specify and alternative url to use instead of the request's prior to the request using the adapter's `next_request_cache_url` property.\nThis is also supported when deleting the last request from the cache.\nBy setting the `backup_and_miss_next_request` property to `True`, the cache will backup the next cached request's result and update it with a new result.\nIf it is later determined that the backup should be restored, the `restore_backup()` method can be used.\n\n ## Har Cache\n Using `HarAdapter`, one is able to load `.har` files to use as cache.\n This cache does not make actual http requests to the net, but fails if no matching request could be found.\n It can be specified whether matching a request should be strict (must match all headers) or not.\n To clean, partly anonymize and standardize `.har` files, the `spoofbot.util.har` module provides `clean_har` and `clean_all_in` methods.\n When matching for requests, one can toggle rules to use (such as matching headers, header order or post data) when looking for a match using the adapter's properties.\n\n## Example usage\nPlease take a look at the [tests](./tests).\nTake note that the loggers provide helpful data when testing fro matches in the cache on the `DEBUG` level.\n\n### Tips\nTurn off logging of other libraries:\n```py\nlogging.getLogger('urllib3.connectionpool').setLevel(logging.INFO)\nlogging.getLogger('chardet.charsetprober').setLevel(logging.INFO)\nlogging.getLogger('chardet.universaldetector').setLevel(logging.INFO)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/raember/spoofbot", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spoofbot", "package_url": "https://pypi.org/project/spoofbot/", "platform": "", "project_url": "https://pypi.org/project/spoofbot/", "project_urls": {"Homepage": "https://github.com/raember/spoofbot"}, "release_url": "https://pypi.org/project/spoofbot/0.2.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A python requests wrapper for spoofing common browser behaviour", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Spoofbot</h1>\n<p>Web bot for spoofing browser behaviour when using python requests.\nSupports Firefox and Chrome browser on most generic Windows, MacOS and Linux spoofing.</p>\n<h2>Example usage</h2>\n<pre><span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">Chrome</span><span class=\"p\">()</span>\n<span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"n\">CacheAdapter</span><span class=\"p\">()</span>\n<span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">mount</span><span class=\"p\">(</span><span class=\"s1\">'https://'</span><span class=\"p\">,</span> <span class=\"n\">cache</span><span class=\"p\">)</span>\n<span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">mount</span><span class=\"p\">(</span><span class=\"s1\">'http://'</span><span class=\"p\">,</span> <span class=\"n\">cache</span><span class=\"p\">)</span>\n\n<span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">navigate</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/'</span><span class=\"p\">)</span>\n<span class=\"n\">spec</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/spec.json'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">'info'</span><span class=\"p\">][</span><span class=\"s1\">'description'</span><span class=\"p\">])</span>\n<span class=\"c1\"># A simple HTTP Request &amp; Response Service.&lt;br/&gt; &lt;br/&gt; &lt;b&gt;Run locally: &lt;/b&gt; &lt;code&gt;$ docker run -p 80:80 kennethreitz/httpbin&lt;/code&gt;</span>\n<span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">navigate</span><span class=\"p\">(</span>\n    <span class=\"s1\">'https://httpbin.org/headers'</span><span class=\"p\">,</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'Accept'</span><span class=\"p\">:</span> <span class=\"s1\">'mime/type'</span><span class=\"p\">}</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'headers'</span><span class=\"p\">][</span><span class=\"s1\">'Accept'</span><span class=\"p\">])</span>\n<span class=\"c1\"># mime/type</span>\n</pre>\n<h2>Browsers</h2>\n<p><code>spoofbot</code> allows for useragents to be generate using information like the platform and browser version.\nCurrently, only Firefox and Chrome are supported, but through inheritance one can add more browsers.\nThe browser classes are derived from the <code>requests.Session</code> class and extend it by additional features.</p>\n<p>Firefox indicates that brotli encoding (<code>br</code>) is acceptable, but that might lead to issues when parsing the responses.\nIt is possible to change that default header:</p>\n<pre><span class=\"n\">ff</span> <span class=\"o\">=</span> <span class=\"n\">Firefox</span><span class=\"p\">()</span>\n<span class=\"n\">ff</span><span class=\"o\">.</span><span class=\"n\">_accept_encoding</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'deflate'</span><span class=\"p\">,</span> <span class=\"s1\">'gzip'</span><span class=\"p\">]</span>  <span class=\"c1\"># brotli (br) is cumbersome</span>\n</pre>\n<p>The browsers have an automatic request delay built in which can be controlled with the <code>request_timeout</code> and <code>honor_timeout</code>.\nAfter requests have been made, <code>did_wait</code> and <code>waiting_period</code> provide further information.</p>\n<h2>File Cache</h2>\n<p>Using <code>FileCacheAdapter</code>, one can store responses (without metadata such as headers or cookies) in the filesystem.\nIt supports deleting the last request or a specific file from the cache.\nThe cache indicates whether the last made request got a cache hit.\nIf there is a request that should be cached that cannot be adequately stored with only hostname and path, one can specify and alternative url to use instead of the request's prior to the request using the adapter's <code>next_request_cache_url</code> property.\nThis is also supported when deleting the last request from the cache.\nBy setting the <code>backup_and_miss_next_request</code> property to <code>True</code>, the cache will backup the next cached request's result and update it with a new result.\nIf it is later determined that the backup should be restored, the <code>restore_backup()</code> method can be used.</p>\n<h2>Har Cache</h2>\n<p>Using <code>HarAdapter</code>, one is able to load <code>.har</code> files to use as cache.\nThis cache does not make actual http requests to the net, but fails if no matching request could be found.\nIt can be specified whether matching a request should be strict (must match all headers) or not.\nTo clean, partly anonymize and standardize <code>.har</code> files, the <code>spoofbot.util.har</code> module provides <code>clean_har</code> and <code>clean_all_in</code> methods.\nWhen matching for requests, one can toggle rules to use (such as matching headers, header order or post data) when looking for a match using the adapter's properties.</p>\n<h2>Example usage</h2>\n<p>Please take a look at the <a href=\"./tests\" rel=\"nofollow\">tests</a>.\nTake note that the loggers provide helpful data when testing fro matches in the cache on the <code>DEBUG</code> level.</p>\n<h3>Tips</h3>\n<p>Turn off logging of other libraries:</p>\n<pre><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'urllib3.connectionpool'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'chardet.charsetprober'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'chardet.universaldetector'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6558335, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "368379a10ad10872c606787c596b0d7b", "sha256": "1e95e2419b58086e8f4413c924219715867c6e2eff0cd8386b6e1f94b69cb333"}, "downloads": -1, "filename": "spoofbot-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "368379a10ad10872c606787c596b0d7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25607, "upload_time": "2020-01-06T13:34:54", "upload_time_iso_8601": "2020-01-06T13:34:54.368454Z", "url": "https://files.pythonhosted.org/packages/3a/12/c80332076bf7888d5ea4b7cd4300937ac5f93f6f786fad5a2fc81f8ee491/spoofbot-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "03c5a49ecd1facfcb68014ac5c3ff389", "sha256": "73132b64ac24a5d1cdc2e3adba17d30593da91c28843cf91079d84c26fca7060"}, "downloads": -1, "filename": "spoofbot-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "03c5a49ecd1facfcb68014ac5c3ff389", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13105, "upload_time": "2020-01-09T13:51:20", "upload_time_iso_8601": "2020-01-09T13:51:20.649645Z", "url": "https://files.pythonhosted.org/packages/3e/f2/58ff7b57aed3449a1d8bfcbf835d1cab60c7c30680c24c02ec663e0b5566/spoofbot-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d074512db412a95c01f6a4038dd8c7e5", "sha256": "dcd862d44b84455cd94c72fa2fd245c146c64abec93fc3f0c5938108e0df9707"}, "downloads": -1, "filename": "spoofbot-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d074512db412a95c01f6a4038dd8c7e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11045, "upload_time": "2020-01-09T13:51:22", "upload_time_iso_8601": "2020-01-09T13:51:22.374972Z", "url": "https://files.pythonhosted.org/packages/b3/00/be90bb6812653dfaa177cbb19db026a2b24d552622c7945ef6aa07ae9f87/spoofbot-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "aaabf6a7335783a668f4e0c0b4482015", "sha256": "738836a63f684d1dfff8d1d9663fe0d550a59d286f6fa0dfd058df3d108d6ceb"}, "downloads": -1, "filename": "spoofbot-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "aaabf6a7335783a668f4e0c0b4482015", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17172, "upload_time": "2020-01-13T11:53:57", "upload_time_iso_8601": "2020-01-13T11:53:57.427157Z", "url": "https://files.pythonhosted.org/packages/9f/f0/b8d51cea808bf8794b7c43df20a4553eeda6de1bff796d135fc24b1b9e15/spoofbot-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8750d834e3ef6c2d4f42ba63e4a7252a", "sha256": "25b8f3217b43d2c9788c958b4b114a90a53145b50cf71f039ad4cdb9ce2721c0"}, "downloads": -1, "filename": "spoofbot-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8750d834e3ef6c2d4f42ba63e4a7252a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13335, "upload_time": "2020-01-13T11:54:01", "upload_time_iso_8601": "2020-01-13T11:54:01.768078Z", "url": "https://files.pythonhosted.org/packages/73/c0/4f687b4df66e5ef834bf680838b82cf68cdaf14f71a3ba60ba31a963e151/spoofbot-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "2505e186000fa40328b63a0e009a7d52", "sha256": "57ca8fe86f105e32c0030ed690e7cb04203cb911b43353f9391c5ba144e31660"}, "downloads": -1, "filename": "spoofbot-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2505e186000fa40328b63a0e009a7d52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17173, "upload_time": "2020-01-13T11:53:59", "upload_time_iso_8601": "2020-01-13T11:53:59.233530Z", "url": "https://files.pythonhosted.org/packages/c3/a8/244b85601bb858a8149309f04061735cdcf7f390c83ee069a1d44fa48339/spoofbot-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "293905816d49a4207402f060a5629aa3", "sha256": "d63762fc55912c6534108ee9c6def422e3858b22033013907d30320c8859c990"}, "downloads": -1, "filename": "spoofbot-0.1.3.tar.gz", "has_sig": false, "md5_digest": "293905816d49a4207402f060a5629aa3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13325, "upload_time": "2020-01-13T11:54:03", "upload_time_iso_8601": "2020-01-13T11:54:03.319700Z", "url": "https://files.pythonhosted.org/packages/81/b3/47883eca384cc860e044f70ceae2c60b73b8e31ceaac39930c34454b1a3f/spoofbot-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5020e60f1b7c72fdaaa07a195d0d91c4", "sha256": "602c29cb93158c7f6e4eb30e4436f3d374ccf1fe05a6d48532c6d8c4d03b803b"}, "downloads": -1, "filename": "spoofbot-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5020e60f1b7c72fdaaa07a195d0d91c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17171, "upload_time": "2020-01-13T15:14:39", "upload_time_iso_8601": "2020-01-13T15:14:39.141725Z", "url": "https://files.pythonhosted.org/packages/b2/5c/0c0359853289fd4c8d2061e6d2c73a829c15f62ca90b9c504e7ab7c04f39/spoofbot-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c385a1706d2257672a94bafc941078be", "sha256": "b94679bb2fd39f3974c2da852695a7873a5fe530fad212af9343a8d4149bee44"}, "downloads": -1, "filename": "spoofbot-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c385a1706d2257672a94bafc941078be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13315, "upload_time": "2020-01-13T15:14:43", "upload_time_iso_8601": "2020-01-13T15:14:43.280944Z", "url": "https://files.pythonhosted.org/packages/81/7f/c9ba16acd7e82bb6811b2fe8266b6ee7b7c273783b0b6645c743ec9e634c/spoofbot-0.1.4.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e7af7233af130e3880adf50e12592da5", "sha256": "337a246a003e0ed189df8908ce6564ca6aee31520bc44fb7d03d9f6f7b9d861e"}, "downloads": -1, "filename": "spoofbot-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e7af7233af130e3880adf50e12592da5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 26874, "upload_time": "2020-01-31T17:32:05", "upload_time_iso_8601": "2020-01-31T17:32:05.929474Z", "url": "https://files.pythonhosted.org/packages/69/a2/df2557ff4f0724610adcbf404d82d82ce4e0bdeb9d0fa8e8fe43b79b05c1/spoofbot-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3faa807022df952fc85fe64af6201423", "sha256": "e8bf3f31a5e90bf4f5d044ebf2b9dd9b3b3ffae9c824f658c1549a0bef63e02b"}, "downloads": -1, "filename": "spoofbot-0.2.tar.gz", "has_sig": false, "md5_digest": "3faa807022df952fc85fe64af6201423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24572, "upload_time": "2020-01-31T17:32:07", "upload_time_iso_8601": "2020-01-31T17:32:07.572204Z", "url": "https://files.pythonhosted.org/packages/68/59/556332684bf2254e086be7f153fa4c22d5c083f75e895cd4f21300d25063/spoofbot-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8720f5f31da1db364753a6ac27a9483f", "sha256": "1855b2162edf122c5d2b03423f61b87fa67b0500b1bdf071a689f570c3f4418a"}, "downloads": -1, "filename": "spoofbot-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8720f5f31da1db364753a6ac27a9483f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27314, "upload_time": "2020-01-31T18:08:31", "upload_time_iso_8601": "2020-01-31T18:08:31.209982Z", "url": "https://files.pythonhosted.org/packages/3c/82/8632a59d13e77fb5339e3242101180d2e540a01fae9221f3a36695657f22/spoofbot-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d5d8701ae1c1a6054739aea2a3c2900", "sha256": "8f25716682ec4cfd8d10268e7a544dfec2f513997579ce73934c803ce0e58fb0"}, "downloads": -1, "filename": "spoofbot-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0d5d8701ae1c1a6054739aea2a3c2900", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24164, "upload_time": "2020-01-31T18:08:32", "upload_time_iso_8601": "2020-01-31T18:08:32.624766Z", "url": "https://files.pythonhosted.org/packages/b8/d2/ef7d7b6fe729b529a25f2cce09ff348f87d56579dc1694067bb0077a6f68/spoofbot-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "cf16dc8a27f167757d6f211dfc137439", "sha256": "fa4a87731bcbd78129e715bf6facfe285fbd344a4a7d4e1cae26e15befd6ca28"}, "downloads": -1, "filename": "spoofbot-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cf16dc8a27f167757d6f211dfc137439", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28007, "upload_time": "2020-02-02T14:50:45", "upload_time_iso_8601": "2020-02-02T14:50:45.525258Z", "url": "https://files.pythonhosted.org/packages/58/44/f0baa35e826af0c61b4a83770fbaccee55919588779bd4ee61b149119a11/spoofbot-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf8e03e9737582b40b93328da1662925", "sha256": "61fd1550991d6bb9a4cda4c20c37cf58e2841ad6ade49dae983c08fe799f18d8"}, "downloads": -1, "filename": "spoofbot-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bf8e03e9737582b40b93328da1662925", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24916, "upload_time": "2020-02-02T14:50:47", "upload_time_iso_8601": "2020-02-02T14:50:47.792743Z", "url": "https://files.pythonhosted.org/packages/aa/95/1aee46b394788c5e4f4477b486fdde7a57648f4b4f172b5095bdad45cf16/spoofbot-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf16dc8a27f167757d6f211dfc137439", "sha256": "fa4a87731bcbd78129e715bf6facfe285fbd344a4a7d4e1cae26e15befd6ca28"}, "downloads": -1, "filename": "spoofbot-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cf16dc8a27f167757d6f211dfc137439", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28007, "upload_time": "2020-02-02T14:50:45", "upload_time_iso_8601": "2020-02-02T14:50:45.525258Z", "url": "https://files.pythonhosted.org/packages/58/44/f0baa35e826af0c61b4a83770fbaccee55919588779bd4ee61b149119a11/spoofbot-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf8e03e9737582b40b93328da1662925", "sha256": "61fd1550991d6bb9a4cda4c20c37cf58e2841ad6ade49dae983c08fe799f18d8"}, "downloads": -1, "filename": "spoofbot-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bf8e03e9737582b40b93328da1662925", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24916, "upload_time": "2020-02-02T14:50:47", "upload_time_iso_8601": "2020-02-02T14:50:47.792743Z", "url": "https://files.pythonhosted.org/packages/aa/95/1aee46b394788c5e4f4477b486fdde7a57648f4b4f172b5095bdad45cf16/spoofbot-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:36 2020"}