{"info": {"author": "Cherish Chen", "author_email": "sinchb128@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "python-onvif-zeep-async\n=======================\n\nONVIF Client Implementation in Python 3\n\nDependencies\n------------\n`zeep[async] <http://docs.python-zeep.org>`_ >= 3.0.0\n`aiohttp <https://aiohttp.readthedocs.io>`_ >= 1.0\n\nInstall python-onvif-zeep-async\n-------------------------------\n**From Source**\n\nYou should clone this repository and run setup.py::\n\n    cd python-onvif-zeep-async && python setup.py install\n\nAlternatively, you can run::\n\n    pip install --upgrade onvif-zeep-async\n\n\nGetting Started\n---------------\n\nInitialize an ONVIFCamera instance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    from onvif import ONVIFCamera\n    mycam = ONVIFCamera('192.168.0.2', 80, 'user', 'passwd', '/etc/onvif/wsdl/')\n    await mycam.update_xaddrs()\n\nNow, an ONVIFCamera instance is available. By default, a devicemgmt service is also available if everything is OK.\n\nSo, all operations defined in the WSDL document::\n\n/etc/onvif/wsdl/devicemgmt.wsdl\n\nare available.\n\nGet information from your camera\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    # Get Hostname\n    resp = await mycam.devicemgmt.GetHostname()\n    print 'My camera`s hostname: ' + str(resp.Name)\n\n    # Get system date and time\n    dt = await mycam.devicemgmt.GetSystemDateAndTime()\n    tz = dt.TimeZone\n    year = dt.UTCDateTime.Date.Year\n    hour = dt.UTCDateTime.Time.Hour\n\nConfigure (Control) your camera\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo configure your camera, there are two ways to pass parameters to service methods.\n\n**Dict**\n\nThis is the simpler way::\n\n    params = {'Name': 'NewHostName'}\n    await device_service.SetHostname(params)\n\n**Type Instance**\n\nThis is the recommended way. Type instance will raise an\nexception if you set an invalid (or non-existent) parameter.\n\n::\n\n    params = mycam.devicemgmt.create_type('SetHostname')\n    params.Hostname = 'NewHostName'\n    await mycam.devicemgmt.SetHostname(params)\n\n    time_params = mycam.devicemgmt.create_type('SetSystemDateAndTime')\n    time_params.DateTimeType = 'Manual'\n    time_params.DaylightSavings = True\n    time_params.TimeZone.TZ = 'CST-8:00:00'\n    time_params.UTCDateTime.Date.Year = 2014\n    time_params.UTCDateTime.Date.Month = 12\n    time_params.UTCDateTime.Date.Day = 3\n    time_params.UTCDateTime.Time.Hour = 9\n    time_params.UTCDateTime.Time.Minute = 36\n    time_params.UTCDateTime.Time.Second = 11\n    await mycam.devicemgmt.SetSystemDateAndTime(time_params)\n\nUse other services\n~~~~~~~~~~~~~~~~~~\nONVIF protocol has defined many services.\nYou can find all the services and operations `here <http://www.onvif.org/onvif/ver20/util/operationIndex.html>`_.\nONVIFCamera has support methods to create new services::\n\n    # Create ptz service\n    ptz_service = mycam.create_ptz_service()\n    # Get ptz configuration\n    await mycam.ptz.GetConfiguration()\n    # Another way\n    # await ptz_service.GetConfiguration()\n\nOr create an unofficial service::\n\n    xaddr = 'http://192.168.0.3:8888/onvif/yourservice'\n    yourservice = mycam.create_onvif_service('service.wsdl', xaddr, 'yourservice')\n    await yourservice.SomeOperation()\n    # Another way\n    # await mycam.yourservice.SomeOperation()\n\nONVIF CLI\n---------\npython-onvif also provides a command line interactive interface: onvif-cli.\nonvif-cli is installed automatically.\n\nSingle command example\n~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ onvif-cli devicemgmt GetHostname --user 'admin' --password '12345' --host '192.168.0.112' --port 80\n    True: {'FromDHCP': True, 'Name': hision}\n    $ onvif-cli devicemgmt SetHostname \"{'Name': 'NewerHostname'}\" --user 'admin' --password '12345' --host '192.168.0.112' --port 80\n    True: {}\n\nInteractive mode\n~~~~~~~~~~~~~~~~\n\n::\n\n    $ onvif-cli -u 'admin' -a '12345' --host '192.168.0.112' --port 80 --wsdl /etc/onvif/wsdl/\n    ONVIF >>> cmd\n    analytics   devicemgmt  events      imaging     media       ptz\n    ONVIF >>> cmd devicemgmt GetWsdlUrl\n    True: http://www.onvif.org/\n    ONVIF >>> cmd devicemgmt SetHostname {'Name': 'NewHostname'}\n    ONVIF >>> cmd devicemgmt GetHostname\n    True: {'Name': 'NewHostName'}\n    ONVIF >>> cmd devicemgmt SomeOperation\n    False: No Operation: SomeOperation\n\nNOTE: Tab completion is supported for interactive mode.\n\nBatch mode\n~~~~~~~~~~\n\n::\n\n    $ vim batchcmds\n    $ cat batchcmds\n    cmd devicemgmt GetWsdlUrl\n    cmd devicemgmt SetHostname {'Name': 'NewHostname', 'FromDHCP': True}\n    cmd devicemgmt GetHostname\n    $ onvif-cli --host 192.168.0.112 -u admin -a 12345 -w /etc/onvif/wsdl/ < batchcmds\n    ONVIF >>> True: http://www.onvif.org/\n    ONVIF >>> True: {}\n    ONVIF >>> True: {'FromDHCP': False, 'Name': NewHostname}\n\nReferences\n----------\n\n* `ONVIF Offical Website <http://www.onvif.com>`_\n\n* `Operations Index <http://www.onvif.org/onvif/ver20/util/operationIndex.html>`_\n\n* `ONVIF Develop Documents <http://www.onvif.org/specs/DocMap-2.4.2.html>`_\n\n* `Foscam Python Lib <http://github.com/quatanium/foscam-python-lib>`_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/hunterjm/python-onvif-zeep-async", "keywords": "ONVIF,Camera,IPC", "license": "MIT", "maintainer": "sinchb", "maintainer_email": "sinchb128@gmail.com", "name": "onvif-zeep-async", "package_url": "https://pypi.org/project/onvif-zeep-async/", "platform": "", "project_url": "https://pypi.org/project/onvif-zeep-async/", "project_urls": {"Homepage": "http://github.com/hunterjm/python-onvif-zeep-async"}, "release_url": "https://pypi.org/project/onvif-zeep-async/0.3.0/", "requires_dist": ["zeep[async] (>=3.0.0)", "aiohttp (>=1.0)"], "requires_python": ">=3", "summary": "Async Python Client for ONVIF Camera", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ONVIF Client Implementation in Python 3</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p><a href=\"http://docs.python-zeep.org\" rel=\"nofollow\">zeep[async]</a> &gt;= 3.0.0\n<a href=\"https://aiohttp.readthedocs.io\" rel=\"nofollow\">aiohttp</a> &gt;= 1.0</p>\n</div>\n<div id=\"install-python-onvif-zeep-async\">\n<h2>Install python-onvif-zeep-async</h2>\n<p><strong>From Source</strong></p>\n<p>You should clone this repository and run setup.py:</p>\n<pre>cd python-onvif-zeep-async &amp;&amp; python setup.py install\n</pre>\n<p>Alternatively, you can run:</p>\n<pre>pip install --upgrade onvif-zeep-async\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"initialize-an-onvifcamera-instance\">\n<h3>Initialize an ONVIFCamera instance</h3>\n<pre>from onvif import ONVIFCamera\nmycam = ONVIFCamera('192.168.0.2', 80, 'user', 'passwd', '/etc/onvif/wsdl/')\nawait mycam.update_xaddrs()\n</pre>\n<p>Now, an ONVIFCamera instance is available. By default, a devicemgmt service is also available if everything is OK.</p>\n<p>So, all operations defined in the WSDL document:</p>\n<pre>/etc/onvif/wsdl/devicemgmt.wsdl\n</pre>\n<p>are available.</p>\n</div>\n<div id=\"get-information-from-your-camera\">\n<h3>Get information from your camera</h3>\n<pre># Get Hostname\nresp = await mycam.devicemgmt.GetHostname()\nprint 'My camera`s hostname: ' + str(resp.Name)\n\n# Get system date and time\ndt = await mycam.devicemgmt.GetSystemDateAndTime()\ntz = dt.TimeZone\nyear = dt.UTCDateTime.Date.Year\nhour = dt.UTCDateTime.Time.Hour\n</pre>\n</div>\n<div id=\"configure-control-your-camera\">\n<h3>Configure (Control) your camera</h3>\n<p>To configure your camera, there are two ways to pass parameters to service methods.</p>\n<p><strong>Dict</strong></p>\n<p>This is the simpler way:</p>\n<pre>params = {'Name': 'NewHostName'}\nawait device_service.SetHostname(params)\n</pre>\n<p><strong>Type Instance</strong></p>\n<p>This is the recommended way. Type instance will raise an\nexception if you set an invalid (or non-existent) parameter.</p>\n<pre>params = mycam.devicemgmt.create_type('SetHostname')\nparams.Hostname = 'NewHostName'\nawait mycam.devicemgmt.SetHostname(params)\n\ntime_params = mycam.devicemgmt.create_type('SetSystemDateAndTime')\ntime_params.DateTimeType = 'Manual'\ntime_params.DaylightSavings = True\ntime_params.TimeZone.TZ = 'CST-8:00:00'\ntime_params.UTCDateTime.Date.Year = 2014\ntime_params.UTCDateTime.Date.Month = 12\ntime_params.UTCDateTime.Date.Day = 3\ntime_params.UTCDateTime.Time.Hour = 9\ntime_params.UTCDateTime.Time.Minute = 36\ntime_params.UTCDateTime.Time.Second = 11\nawait mycam.devicemgmt.SetSystemDateAndTime(time_params)\n</pre>\n</div>\n<div id=\"use-other-services\">\n<h3>Use other services</h3>\n<p>ONVIF protocol has defined many services.\nYou can find all the services and operations <a href=\"http://www.onvif.org/onvif/ver20/util/operationIndex.html\" rel=\"nofollow\">here</a>.\nONVIFCamera has support methods to create new services:</p>\n<pre># Create ptz service\nptz_service = mycam.create_ptz_service()\n# Get ptz configuration\nawait mycam.ptz.GetConfiguration()\n# Another way\n# await ptz_service.GetConfiguration()\n</pre>\n<p>Or create an unofficial service:</p>\n<pre>xaddr = 'http://192.168.0.3:8888/onvif/yourservice'\nyourservice = mycam.create_onvif_service('service.wsdl', xaddr, 'yourservice')\nawait yourservice.SomeOperation()\n# Another way\n# await mycam.yourservice.SomeOperation()\n</pre>\n</div>\n</div>\n<div id=\"onvif-cli\">\n<h2>ONVIF CLI</h2>\n<p>python-onvif also provides a command line interactive interface: onvif-cli.\nonvif-cli is installed automatically.</p>\n<div id=\"single-command-example\">\n<h3>Single command example</h3>\n<pre>$ onvif-cli devicemgmt GetHostname --user 'admin' --password '12345' --host '192.168.0.112' --port 80\nTrue: {'FromDHCP': True, 'Name': hision}\n$ onvif-cli devicemgmt SetHostname \"{'Name': 'NewerHostname'}\" --user 'admin' --password '12345' --host '192.168.0.112' --port 80\nTrue: {}\n</pre>\n</div>\n<div id=\"interactive-mode\">\n<h3>Interactive mode</h3>\n<pre>$ onvif-cli -u 'admin' -a '12345' --host '192.168.0.112' --port 80 --wsdl /etc/onvif/wsdl/\nONVIF &gt;&gt;&gt; cmd\nanalytics   devicemgmt  events      imaging     media       ptz\nONVIF &gt;&gt;&gt; cmd devicemgmt GetWsdlUrl\nTrue: http://www.onvif.org/\nONVIF &gt;&gt;&gt; cmd devicemgmt SetHostname {'Name': 'NewHostname'}\nONVIF &gt;&gt;&gt; cmd devicemgmt GetHostname\nTrue: {'Name': 'NewHostName'}\nONVIF &gt;&gt;&gt; cmd devicemgmt SomeOperation\nFalse: No Operation: SomeOperation\n</pre>\n<p>NOTE: Tab completion is supported for interactive mode.</p>\n</div>\n<div id=\"batch-mode\">\n<h3>Batch mode</h3>\n<pre>$ vim batchcmds\n$ cat batchcmds\ncmd devicemgmt GetWsdlUrl\ncmd devicemgmt SetHostname {'Name': 'NewHostname', 'FromDHCP': True}\ncmd devicemgmt GetHostname\n$ onvif-cli --host 192.168.0.112 -u admin -a 12345 -w /etc/onvif/wsdl/ &lt; batchcmds\nONVIF &gt;&gt;&gt; True: http://www.onvif.org/\nONVIF &gt;&gt;&gt; True: {}\nONVIF &gt;&gt;&gt; True: {'FromDHCP': False, 'Name': NewHostname}\n</pre>\n</div>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"http://www.onvif.com\" rel=\"nofollow\">ONVIF Offical Website</a></li>\n<li><a href=\"http://www.onvif.org/onvif/ver20/util/operationIndex.html\" rel=\"nofollow\">Operations Index</a></li>\n<li><a href=\"http://www.onvif.org/specs/DocMap-2.4.2.html\" rel=\"nofollow\">ONVIF Develop Documents</a></li>\n<li><a href=\"http://github.com/quatanium/foscam-python-lib\" rel=\"nofollow\">Foscam Python Lib</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7191659, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4c2cb1cf08cf39f91b3a76c85a5e212e", "sha256": "4299338537257227970632ec9de565a9291f2632d7898d20b5fb1be54e2409c8"}, "downloads": -1, "filename": "onvif_zeep_async-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4c2cb1cf08cf39f91b3a76c85a5e212e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 193221, "upload_time": "2019-04-17T04:05:21", "upload_time_iso_8601": "2019-04-17T04:05:21.595089Z", "url": "https://files.pythonhosted.org/packages/0e/0b/87eb31061780e6a0c9e53f086f9f105adbd8af1d7b71bc68ec000e3bb3a7/onvif_zeep_async-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a86ea7e67fa713e44f721aa284d8b27", "sha256": "e5770dfc9d4a5be57d4612a0f67863151c22c03820b89edd68705c2abe26878c"}, "downloads": -1, "filename": "onvif-zeep-async-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8a86ea7e67fa713e44f721aa284d8b27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 168108, "upload_time": "2019-04-17T04:05:23", "upload_time_iso_8601": "2019-04-17T04:05:23.890249Z", "url": "https://files.pythonhosted.org/packages/96/e1/7b37981cfb6eadf2632888d414f954a72bb87edb6ffb21bcdf712ab71afd/onvif-zeep-async-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d899be5ffe895ae63dde758026670bec", "sha256": "e48e0927ecfd7983025a4701be1e3d41079355d721311e777447290bc0a3b3f4"}, "downloads": -1, "filename": "onvif_zeep_async-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d899be5ffe895ae63dde758026670bec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 193228, "upload_time": "2019-04-18T03:42:32", "upload_time_iso_8601": "2019-04-18T03:42:32.594735Z", "url": "https://files.pythonhosted.org/packages/8a/f7/620fa48366b80ba445d6ecd92a17f075d7aea9258dbd881a5bccf5e5562c/onvif_zeep_async-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ed33744f1cf727c669fe5634de5ed78", "sha256": "a41c3cb25f6ce9134c76954e4a05d9131e62055dc125068f48d095e12eac0bf0"}, "downloads": -1, "filename": "onvif-zeep-async-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4ed33744f1cf727c669fe5634de5ed78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 168128, "upload_time": "2019-04-18T03:42:34", "upload_time_iso_8601": "2019-04-18T03:42:34.619641Z", "url": "https://files.pythonhosted.org/packages/0b/4b/dcf8e30b30c2d12d7bfcfae7573a723c356f06a35f14caf6abdb1b79a899/onvif-zeep-async-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7181389dafce36f668e27110b0d9c13e", "sha256": "9daf6d96ac3fb3b38d368b3fe8e1b1b25a77ce63973dd78ceeaf792a43c68d3b"}, "downloads": -1, "filename": "onvif_zeep_async-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7181389dafce36f668e27110b0d9c13e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 192478, "upload_time": "2019-04-26T04:10:00", "upload_time_iso_8601": "2019-04-26T04:10:00.114429Z", "url": "https://files.pythonhosted.org/packages/25/db/302ab840500f36156bf4ddb229b90c5a8f685e7d6ef31a0c12da71dec573/onvif_zeep_async-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50bb79ec2e2e30a286741e5b7d805d2c", "sha256": "b991fd9503847748bc6532bb4e96c065fdf042b5d13996d2e4517b3211c6cd55"}, "downloads": -1, "filename": "onvif-zeep-async-0.1.2.tar.gz", "has_sig": false, "md5_digest": "50bb79ec2e2e30a286741e5b7d805d2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 168243, "upload_time": "2019-04-26T04:10:03", "upload_time_iso_8601": "2019-04-26T04:10:03.994779Z", "url": "https://files.pythonhosted.org/packages/91/10/252fdf720ab5fc637309eea4c2cdb690c1705920bdbc995f56e3c34a3ad4/onvif-zeep-async-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f7b80f2249eff64953bdbd52af8eca5b", "sha256": "8febf0eab3a0c5b9b7b4c5b233ebb356173f7451029cb4ea1e8eb14803667f3a"}, "downloads": -1, "filename": "onvif_zeep_async-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f7b80f2249eff64953bdbd52af8eca5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 193724, "upload_time": "2019-05-10T02:48:07", "upload_time_iso_8601": "2019-05-10T02:48:07.465848Z", "url": "https://files.pythonhosted.org/packages/39/18/451e628ac27c55e9bec8b4af7e17805f95a3096f4515fd3160e62cb2d058/onvif_zeep_async-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f76e43e6e8d349e22634af583c75e9bb", "sha256": "d2659ec284497be855fca5aa4eb6baae7c1f740683767a5755172d3aeb5a8afe"}, "downloads": -1, "filename": "onvif-zeep-async-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f76e43e6e8d349e22634af583c75e9bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 168243, "upload_time": "2019-05-10T02:48:09", "upload_time_iso_8601": "2019-05-10T02:48:09.143096Z", "url": "https://files.pythonhosted.org/packages/aa/2c/33d49bf7dedc4d8f6cde296ece61120a9a8455c50895543fb555850ce11e/onvif-zeep-async-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9ff6c4d0489a3fcf0c99ef7f69c732d1", "sha256": "3a95818e9733f6edccdfc467f6660daf06669142e6233385b7c7fe8b4b5d8334"}, "downloads": -1, "filename": "onvif_zeep_async-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ff6c4d0489a3fcf0c99ef7f69c732d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 189807, "upload_time": "2019-05-11T02:06:44", "upload_time_iso_8601": "2019-05-11T02:06:44.054366Z", "url": "https://files.pythonhosted.org/packages/f8/dd/77303c5ca72acdc282f67111f75f72c9c74b20116f3a11e7cab7624a38b5/onvif_zeep_async-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24d48f9655f656d0613f5a6b366368b4", "sha256": "d74c39ec9ea229bc76f3b091f22326b2ebf45c67a3b6068f0ee289f0e05f980d"}, "downloads": -1, "filename": "onvif-zeep-async-0.2.0.tar.gz", "has_sig": false, "md5_digest": "24d48f9655f656d0613f5a6b366368b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 168663, "upload_time": "2019-05-11T02:06:45", "upload_time_iso_8601": "2019-05-11T02:06:45.806572Z", "url": "https://files.pythonhosted.org/packages/d1/e6/3203adb1515d058265c16aaf8fcae5ed189af84c38dff586e270b4350445/onvif-zeep-async-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "beac7e07ac79bf7fb0f2a48719ec70f5", "sha256": "3851423de30c60ca152f24b72557114b4cba027456108ef2c34ccfa89d5afef1"}, "downloads": -1, "filename": "onvif_zeep_async-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "beac7e07ac79bf7fb0f2a48719ec70f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 189467, "upload_time": "2020-05-07T20:39:27", "upload_time_iso_8601": "2020-05-07T20:39:27.749708Z", "url": "https://files.pythonhosted.org/packages/75/3a/ad8aab2b66850b3269f389744df5888068eccddbd5e59418a800e415a46d/onvif_zeep_async-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "192cb0181fe0aaebc0f3a910e7cf38d9", "sha256": "8a15e021593f8f8d8e40624478dcaa55fb9ff9471d8070884e0b354c5ba15183"}, "downloads": -1, "filename": "onvif-zeep-async-0.3.0.tar.gz", "has_sig": false, "md5_digest": "192cb0181fe0aaebc0f3a910e7cf38d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 164945, "upload_time": "2020-05-07T20:39:28", "upload_time_iso_8601": "2020-05-07T20:39:28.901736Z", "url": "https://files.pythonhosted.org/packages/14/1c/9c50d66386acbcdfa12b4ea7482936f95bea5dbaa93bcd0494c50de2fd0d/onvif-zeep-async-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "beac7e07ac79bf7fb0f2a48719ec70f5", "sha256": "3851423de30c60ca152f24b72557114b4cba027456108ef2c34ccfa89d5afef1"}, "downloads": -1, "filename": "onvif_zeep_async-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "beac7e07ac79bf7fb0f2a48719ec70f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 189467, "upload_time": "2020-05-07T20:39:27", "upload_time_iso_8601": "2020-05-07T20:39:27.749708Z", "url": "https://files.pythonhosted.org/packages/75/3a/ad8aab2b66850b3269f389744df5888068eccddbd5e59418a800e415a46d/onvif_zeep_async-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "192cb0181fe0aaebc0f3a910e7cf38d9", "sha256": "8a15e021593f8f8d8e40624478dcaa55fb9ff9471d8070884e0b354c5ba15183"}, "downloads": -1, "filename": "onvif-zeep-async-0.3.0.tar.gz", "has_sig": false, "md5_digest": "192cb0181fe0aaebc0f3a910e7cf38d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 164945, "upload_time": "2020-05-07T20:39:28", "upload_time_iso_8601": "2020-05-07T20:39:28.901736Z", "url": "https://files.pythonhosted.org/packages/14/1c/9c50d66386acbcdfa12b4ea7482936f95bea5dbaa93bcd0494c50de2fd0d/onvif-zeep-async-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:45 2020"}