{"info": {"author": "James Hannington", "author_email": "jam.hann@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Server", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django-RT\n=========\n\n:Current version: 0.3.1 pre-alpha\n\nDjango-RT is a framework for implementing real-time APIs in Django web applications. This framework follows the traditional publish/subscribe methodology, using Redis as the pub/sub provider.\n\nDjango-RT consists of two major components:\n\n* Application API: This provides the necessary functionality to allow you to easily add a real-time API to your Django application.\n* \"Courier\" HTTP server: A lightweight, asynchronous server designed solely to deliver real-time messages to web clients.\n\n----\n\n**WARNING**: Django-RT is currently in **pre-alpha**  stages of development, and is not ready for public consumption. Expect major API changes and, potentially, security risks in pre-alpha releases. Use in production at your own risk!\n\n----\n\nUses\n====\n* Web chat\n* User notifications\n* Real-time charts (server monitoring, stock tickers, etc)\n\nFeatures\n========\n* Simple to integrate with any existing Django project\n* Trivial client-side JavaScript implementation with SSE (Server-Sent Events); no third-party libraries needed with modern browsers.\n* Asynchronous server design to handle many long-running client connections from a single thread\n* Decoupled server architecture allows for the use of blocking code (database access, cache access, etc) in callbacks, without compromising the operation of the delivery server\n* Deployable on existing Heroku apps, using uWSGI\n\nRequirements\n============\n* Django >= 1.7\n* Python >= 3.4 (2.7+ support planned)\n* A Redis server (TODO: minimum Redis version)\n\nDeployment\n==========\nCourier server\n---------------\nThere are currently 2 production servers to choose from:\n\n* aiohttp/asyncio (recommended): Python >= 3.4\n* gevent WSGI: Python >= 3.4\n\nProtocols\n---------\nSSE (Server-Sent Events) is the only delivery protocol currently supported.\n\nLimitations\n===========\n* Only one-way delivery is currently supported (server to client). Messages originating from the client should use a conventional AJAX request. This should be sufficient for the majority of applications.\n* Real-time functionality can only be added to Django Class-Based Views (CBVs). Older function-style views are not supported.\n\nHow it works\n============\nTODO\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jhannington/django-rt", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-rt", "package_url": "https://pypi.org/project/django-rt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-rt/", "project_urls": {"Homepage": "https://github.com/jhannington/django-rt"}, "release_url": "https://pypi.org/project/django-rt/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "A framework for implementing real-time APIs in Django web applications", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-rt\">\n<h2>Django-RT</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Current version:</th></tr>\n<tr><td>\u00a0</td><td>0.3.1 pre-alpha</td>\n</tr>\n</tbody>\n</table>\n<p>Django-RT is a framework for implementing real-time APIs in Django web applications. This framework follows the traditional publish/subscribe methodology, using Redis as the pub/sub provider.</p>\n<p>Django-RT consists of two major components:</p>\n<ul>\n<li>Application API: This provides the necessary functionality to allow you to easily add a real-time API to your Django application.</li>\n<li>\u201cCourier\u201d HTTP server: A lightweight, asynchronous server designed solely to deliver real-time messages to web clients.</li>\n</ul>\n<hr class=\"docutils\">\n<p><strong>WARNING</strong>: Django-RT is currently in <strong>pre-alpha</strong>  stages of development, and is not ready for public consumption. Expect major API changes and, potentially, security risks in pre-alpha releases. Use in production at your own risk!</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"uses\">\n<h2>Uses</h2>\n<ul>\n<li>Web chat</li>\n<li>User notifications</li>\n<li>Real-time charts (server monitoring, stock tickers, etc)</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Simple to integrate with any existing Django project</li>\n<li>Trivial client-side JavaScript implementation with SSE (Server-Sent Events); no third-party libraries needed with modern browsers.</li>\n<li>Asynchronous server design to handle many long-running client connections from a single thread</li>\n<li>Decoupled server architecture allows for the use of blocking code (database access, cache access, etc) in callbacks, without compromising the operation of the delivery server</li>\n<li>Deployable on existing Heroku apps, using uWSGI</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Django &gt;= 1.7</li>\n<li>Python &gt;= 3.4 (2.7+ support planned)</li>\n<li>A Redis server (TODO: minimum Redis version)</li>\n</ul>\n</div>\n<div id=\"deployment\">\n<h2>Deployment</h2>\n<div id=\"courier-server\">\n<h3>Courier server</h3>\n<p>There are currently 2 production servers to choose from:</p>\n<ul>\n<li>aiohttp/asyncio (recommended): Python &gt;= 3.4</li>\n<li>gevent WSGI: Python &gt;= 3.4</li>\n</ul>\n</div>\n<div id=\"protocols\">\n<h3>Protocols</h3>\n<p>SSE (Server-Sent Events) is the only delivery protocol currently supported.</p>\n</div>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<ul>\n<li>Only one-way delivery is currently supported (server to client). Messages originating from the client should use a conventional AJAX request. This should be sufficient for the majority of applications.</li>\n<li>Real-time functionality can only be added to Django Class-Based Views (CBVs). Older function-style views are not supported.</li>\n</ul>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>TODO</p>\n</div>\n\n          </div>"}, "last_serial": 2139596, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7b4949e5edec2bbe181a3227a6402375", "sha256": "e2665a2b27f8dfdce91173c7c4eb56b04f1966c9731a5145eb9b7030d3d78c13"}, "downloads": -1, "filename": "django-rt-0.1.tar.gz", "has_sig": false, "md5_digest": "7b4949e5edec2bbe181a3227a6402375", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12882, "upload_time": "2015-12-01T18:51:40", "upload_time_iso_8601": "2015-12-01T18:51:40.193157Z", "url": "https://files.pythonhosted.org/packages/0a/a2/6b457f858ea3b5703642984c66720ca41765cb38def3de7e0862f00a6ddd/django-rt-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d0fe7bc4e87cc8728f492a3df2ecffa3", "sha256": "b141bb8a609329701f214c403b31671cd3883bed0bfcaa7421a6888cee66d7d1"}, "downloads": -1, "filename": "django-rt-0.2.tar.gz", "has_sig": false, "md5_digest": "d0fe7bc4e87cc8728f492a3df2ecffa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13227, "upload_time": "2016-01-09T14:22:22", "upload_time_iso_8601": "2016-01-09T14:22:22.799936Z", "url": "https://files.pythonhosted.org/packages/ec/39/d5203e78883c74a153d1fdc7b7b2ec7a221b3169a5f3210e271400a7dd85/django-rt-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "7a65d6d36ba40c5c41fd88d002d3b98f", "sha256": "b0c482759d4ce1acf17b92a1c2ee639870db35b33a53815ddf7e33113f68e227"}, "downloads": -1, "filename": "django-rt-0.3.tar.gz", "has_sig": false, "md5_digest": "7a65d6d36ba40c5c41fd88d002d3b98f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13562, "upload_time": "2016-03-05T20:38:19", "upload_time_iso_8601": "2016-03-05T20:38:19.642499Z", "url": "https://files.pythonhosted.org/packages/8d/12/6c38425140e8a63b60423e67834ef2a3b18291826bba16c8b8f219883ce8/django-rt-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "bf80f7d679052f6fefbf19f49b950b42", "sha256": "183b60d130fb34c3a6fb71a594cb8abded72bf3496ce41904c3320bdfea1795b"}, "downloads": -1, "filename": "django-rt-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bf80f7d679052f6fefbf19f49b950b42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13598, "upload_time": "2016-05-29T16:58:12", "upload_time_iso_8601": "2016-05-29T16:58:12.434780Z", "url": "https://files.pythonhosted.org/packages/44/fa/4e8d88ab356999c4da5beeeed5a4386604d0161496317766864007de37a8/django-rt-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf80f7d679052f6fefbf19f49b950b42", "sha256": "183b60d130fb34c3a6fb71a594cb8abded72bf3496ce41904c3320bdfea1795b"}, "downloads": -1, "filename": "django-rt-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bf80f7d679052f6fefbf19f49b950b42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13598, "upload_time": "2016-05-29T16:58:12", "upload_time_iso_8601": "2016-05-29T16:58:12.434780Z", "url": "https://files.pythonhosted.org/packages/44/fa/4e8d88ab356999c4da5beeeed5a4386604d0161496317766864007de37a8/django-rt-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:52 2020"}