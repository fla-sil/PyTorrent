{"info": {"author": "Ivan Gromov", "author_email": "ivan.gromov@redsolution.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Natural Language :: Russian", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Site Management"], "description": "====================\ndjango-server-config\n====================\n\n- Adds management command to make configs for your project.\n  Now it can generate config for lighttpd, logrotate, monit and deploy scripts.\n- Automatically recognizes media directories in 3-party applications and takes them into account.\n\nInstallation:\n=============\n\nIn settings.py:\n---------------\n\n1. Put ``config`` to your ``INSTALLED_APPS``.\n\n2. Set domain names for your project ::\n\n    CONFIG_SITES = ['www.project-name.com', ]\n\n3. Domains for which you want redirects to your site ::\n\n    CONFIG_REDIRECTS = ['project-name.com', ]\n\n4. Serving static files\n\n    Set path to media for unusual 3-party application ::\n\n        CONFIG_APP_MEDIA = {\n            'application-name': [\n                ('media-root', 'media-url', ),\n            ]\n        }\n\n    Media folders with same name as application modulde will be added     automatically.\n    For example, in ``tinymce`` module media files ::\n\n        tinymce/\n            media/\n                tinymce/\n                    js/tinymce.js\n                    css/style.css\n    \n    will be available at url::\n\n        /media/tinymce/js/tinymce.js\n        /media/tinymce/css/style.js\n\n**Stop! Aren't Django staticfiles do that?**\n\nYes, they do. But django-servre-config is older than staticfiles and does same job. This feature will is deprecated and will not be supported since 0.2.x release. We recommend to use Django contrib application ``django.contrib.statifiles``. Read below about how to do it.\n\nIn urls.py:\n-----------\n\n5. If you use ``django-server-config`` for serving static media, add following code to the urls.py for serve static files in debug mode. Add it BEFORE ``django.views.static.serve`` ::\n\n    if settings.DEBUG:\n        urlpatterns += patterns('', (r'^', include('config.urls')))\n\n\nIn buildout.cfg:\n----------------\n\n6. If you are using zc.buildout, you can add to your parts ``make-config`` to make config files automaticaly::\n\n    [make-config]\n    recipe = iw.recipe.cmd\n    on_install = true\n    on_update = true\n    cmds = sudo rm -f bin/init.d bin/lighttpd bin/logrotate bin/monit bin/*.py\n       bin/django make_config init.d > bin/init.d\n       bin/django make_config lighttpd > bin/lighttpd\n       bin/django make_config logrotate > bin/logrotate\n       bin/django make_config monit > bin/monit\n       # Enable backups with duply & duplicity (http://duplicity.nongnu.org)\n       bin/django make_config duply_conf > bin/duply_conf\n       bin/django make_config duply_pre > bin/duply_pre\n       bin/django make_config duply_post > bin/duply_post\n       bin/django make_config duply_exclude > bin/duply_exclude \n\n       # Collect static automaticaly\n       sudo rm -Rf static\n       bin/django collectstatic -l ---noinput\n       sudo chown www-data:www-data -R static\n       \n       bin/django make_config install.py > bin/install.py\n       bin/django make_config uninstall.py > bin/uninstall.py\n       bin/django make_config enable.py > bin/enable.py\n       bin/django make_config disable.py > bin/disable.py\n       \n       sudo chown root:root bin/*\n       sudo chmod ug=rw,o=r bin/*\n       sudo chmod ug=rwx,o=rx bin/init.d bin/django bin/buildout\n       echo Configs were saved to \"bin/\"\n\n**Without bulidout**\n\nIf you are not using zc.buildlout, you can add to repository shell script with commands above, it will give same effect.\n\n\nStaticfiles support\n====================\n\nSince 0.1.1 server-config supports ``django.contrib.staticfiles`` and ``staticfiles`` apps. If one of them present in ``INSTALLED_APPS``, config for webserver will be generated with appropriate rewrite rule.\n\nIf ``staticfiles`` is used there is no need to include ``config.urls`` in ``urlconf.py``. On the other hand, probably you will want to include ``staticfiles_urlpatterns()`` from staticfiles app (see: `django documentation <https://docs.djangoproject.com/en/dev/howto/static-files/#serving-static-files-in-development>`_ about it) ::\n\n    from django.contrib.staticfiles.urls import staticfiles_urlpatterns\n    urlpatterns += staticfiles_urlpatterns()\n\nDuply/Duplicity backups\n=======================\n\nDjango-server-config can automatically create backups configuration files.\nIt supports `duply <http://duply.net/>`_ (`duplicity <http://duplicity.nongnu.org/>`_) configuration scheme.\nDuplicity is backup system written in python and using rsync algorithm and Duply is bash configuration wrapper for Duplicity.\n\nBackup settings\n----------------\n\n**Security Note**\n\nTo start using backups you should specify path to main configuration file for duply. Django-server-config expects file in ``*.ini`` format. This file  \ncan contains secret passwords, so file supposed to be located somewhere in ``/etc/duply/conf.ini`` and belongs to root (superuser).\n\nBACKUP_DUPLY_CONFIG\n    Path to duply configuration file\nBACKUP_TEMP_DIR\n    Temp directory, where database backups will be located. Database dumps will be deleted from file system after each backup session. Default value: ``'/var/backups/postgres'``\n\n**Only PostgreSQL database backups are supported!**\n\nDuply configuration file\n-------------------------\n\nIt is quite simple to configure duply.\nYou can create duply initial config simply from command line:::\n\n   duply <profile> create\n\nThen look at ~/.duply/<profile>/conf and follow comments.\n\nMoreover, you can use ours config template::\n\n    [duply]\n    GPG_PW='**********'\n    TARGET='s3+http://**********@com.mycompany.server/'\n    SOURCE='/'\n    MAX_AGE=1M\n    MAX_FULL_BACKUPS=5\n    MAX_FULLBKP_AGE=1W\n    VOLSIZE=50\n    DUPL_PARAMS=\"$DUPL_PARAMS --full-if-older-than $MAX_FULLBKP_AGE --volsize $VOLSIZE \"\n\nThis template encrypts backups with GPG and uplaod to AmazonS3 bucket ``com.mycompany.server``.\n\nPay attention to the ``TAGET`` option. Django-server-config will **automatiocally** add project_name to ``TARGET``. E.g. rendered config will contain value::\n\n    TARGET = s3+http://**********@com.mycompany.server/<myproject>\n\nConsider trailing slash in ``*.ini`` config, django-server-config adds only ``myproject`` without slash.\n\nHistory\n========\n\n* 0.1.0 - Initial commit\n* 0.1.1 - Staticfiles support added\n* 0.1.2 - Duply backups support\n* 0.1.3 - Emergency lighttpd config fix (staticfiles didn't work), don't use v0.1.1!\n* 0.1.4 - Backup config bugfixes\n\nClassifiers:\n-------------\n\n`Utilities`_\n\n.. _`Utilities`: http://www.redsolutioncms.org/classifiers/utilities", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "django config lighttpd apache monit", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "redsolutioncms.django-server-config", "package_url": "https://pypi.org/project/redsolutioncms.django-server-config/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/redsolutioncms.django-server-config/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/redsolutioncms.django-server-config/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Useful for deploy server installation. \nAdds management command to make configs for your project. \nAutomatically recognizes media directories in 3-party applications", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <ul>\n<li>Adds management command to make configs for your project.\nNow it can generate config for lighttpd, logrotate, monit and deploy scripts.</li>\n<li>Automatically recognizes media directories in 3-party applications and takes them into account.</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<div id=\"in-settings-py\">\n<h3>In settings.py:</h3>\n<ol>\n<li><p>Put <tt>config</tt> to your <tt>INSTALLED_APPS</tt>.</p>\n</li>\n<li><p>Set domain names for your project</p>\n<pre>CONFIG_SITES = ['www.project-name.com', ]\n</pre>\n</li>\n<li><p>Domains for which you want redirects to your site</p>\n<pre>CONFIG_REDIRECTS = ['project-name.com', ]\n</pre>\n</li>\n<li><p>Serving static files</p>\n<blockquote>\n<p>Set path to media for unusual 3-party application</p>\n<pre>CONFIG_APP_MEDIA = {\n    'application-name': [\n        ('media-root', 'media-url', ),\n    ]\n}\n</pre>\n<p>Media folders with same name as application modulde will be added     automatically.\nFor example, in <tt>tinymce</tt> module media files</p>\n<pre>tinymce/\n    media/\n        tinymce/\n            js/tinymce.js\n            css/style.css\n</pre>\n<p>will be available at url:</p>\n<pre>/media/tinymce/js/tinymce.js\n/media/tinymce/css/style.js\n</pre>\n</blockquote>\n</li>\n</ol>\n<p><strong>Stop! Aren\u2019t Django staticfiles do that?</strong></p>\n<p>Yes, they do. But django-servre-config is older than staticfiles and does same job. This feature will is deprecated and will not be supported since 0.2.x release. We recommend to use Django contrib application <tt>django.contrib.statifiles</tt>. Read below about how to do it.</p>\n</div>\n<div id=\"in-urls-py\">\n<h3>In urls.py:</h3>\n<ol>\n<li><p>If you use <tt><span class=\"pre\">django-server-config</span></tt> for serving static media, add following code to the urls.py for serve static files in debug mode. Add it BEFORE <tt>django.views.static.serve</tt></p>\n<pre>if settings.DEBUG:\n    urlpatterns += patterns('', (r'^', include('config.urls')))\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"in-buildout-cfg\">\n<h3>In buildout.cfg:</h3>\n<ol>\n<li><p>If you are using zc.buildout, you can add to your parts <tt><span class=\"pre\">make-config</span></tt> to make config files automaticaly:</p>\n<pre>[make-config]\nrecipe = iw.recipe.cmd\non_install = true\non_update = true\ncmds = sudo rm -f bin/init.d bin/lighttpd bin/logrotate bin/monit bin/*.py\n   bin/django make_config init.d &gt; bin/init.d\n   bin/django make_config lighttpd &gt; bin/lighttpd\n   bin/django make_config logrotate &gt; bin/logrotate\n   bin/django make_config monit &gt; bin/monit\n   # Enable backups with duply &amp; duplicity (http://duplicity.nongnu.org)\n   bin/django make_config duply_conf &gt; bin/duply_conf\n   bin/django make_config duply_pre &gt; bin/duply_pre\n   bin/django make_config duply_post &gt; bin/duply_post\n   bin/django make_config duply_exclude &gt; bin/duply_exclude\n\n   # Collect static automaticaly\n   sudo rm -Rf static\n   bin/django collectstatic -l ---noinput\n   sudo chown www-data:www-data -R static\n\n   bin/django make_config install.py &gt; bin/install.py\n   bin/django make_config uninstall.py &gt; bin/uninstall.py\n   bin/django make_config enable.py &gt; bin/enable.py\n   bin/django make_config disable.py &gt; bin/disable.py\n\n   sudo chown root:root bin/*\n   sudo chmod ug=rw,o=r bin/*\n   sudo chmod ug=rwx,o=rx bin/init.d bin/django bin/buildout\n   echo Configs were saved to \"bin/\"\n</pre>\n</li>\n</ol>\n<p><strong>Without bulidout</strong></p>\n<p>If you are not using zc.buildlout, you can add to repository shell script with commands above, it will give same effect.</p>\n</div>\n</div>\n<div id=\"staticfiles-support\">\n<h2>Staticfiles support</h2>\n<p>Since 0.1.1 server-config supports <tt>django.contrib.staticfiles</tt> and <tt>staticfiles</tt> apps. If one of them present in <tt>INSTALLED_APPS</tt>, config for webserver will be generated with appropriate rewrite rule.</p>\n<p>If <tt>staticfiles</tt> is used there is no need to include <tt>config.urls</tt> in <tt>urlconf.py</tt>. On the other hand, probably you will want to include <tt>staticfiles_urlpatterns()</tt> from staticfiles app (see: <a href=\"https://docs.djangoproject.com/en/dev/howto/static-files/#serving-static-files-in-development\" rel=\"nofollow\">django documentation</a> about it)</p>\n<pre>from django.contrib.staticfiles.urls import staticfiles_urlpatterns\nurlpatterns += staticfiles_urlpatterns()\n</pre>\n</div>\n<div id=\"duply-duplicity-backups\">\n<h2>Duply/Duplicity backups</h2>\n<p>Django-server-config can automatically create backups configuration files.\nIt supports <a href=\"http://duply.net/\" rel=\"nofollow\">duply</a> (<a href=\"http://duplicity.nongnu.org/\" rel=\"nofollow\">duplicity</a>) configuration scheme.\nDuplicity is backup system written in python and using rsync algorithm and Duply is bash configuration wrapper for Duplicity.</p>\n<div id=\"backup-settings\">\n<h3>Backup settings</h3>\n<p><strong>Security Note</strong></p>\n<p>To start using backups you should specify path to main configuration file for duply. Django-server-config expects file in <tt>*.ini</tt> format. This file\ncan contains secret passwords, so file supposed to be located somewhere in <tt>/etc/duply/conf.ini</tt> and belongs to root (superuser).</p>\n<dl>\n<dt>BACKUP_DUPLY_CONFIG</dt>\n<dd>Path to duply configuration file</dd>\n<dt>BACKUP_TEMP_DIR</dt>\n<dd>Temp directory, where database backups will be located. Database dumps will be deleted from file system after each backup session. Default value: <tt>'/var/backups/postgres'</tt></dd>\n</dl>\n<p><strong>Only PostgreSQL database backups are supported!</strong></p>\n</div>\n<div id=\"duply-configuration-file\">\n<h3>Duply configuration file</h3>\n<p>It is quite simple to configure duply.\nYou can create duply initial config simply from command line::</p>\n<pre>duply &lt;profile&gt; create\n</pre>\n<p>Then look at ~/.duply/&lt;profile&gt;/conf and follow comments.</p>\n<p>Moreover, you can use ours config template:</p>\n<pre>[duply]\nGPG_PW='**********'\nTARGET='s3+http://**********@com.mycompany.server/'\nSOURCE='/'\nMAX_AGE=1M\nMAX_FULL_BACKUPS=5\nMAX_FULLBKP_AGE=1W\nVOLSIZE=50\nDUPL_PARAMS=\"$DUPL_PARAMS --full-if-older-than $MAX_FULLBKP_AGE --volsize $VOLSIZE \"\n</pre>\n<p>This template encrypts backups with GPG and uplaod to AmazonS3 bucket <tt>com.mycompany.server</tt>.</p>\n<p>Pay attention to the <tt>TAGET</tt> option. Django-server-config will <strong>automatiocally</strong> add project_name to <tt>TARGET</tt>. E.g. rendered config will contain value:</p>\n<pre>TARGET = s3+http://**********@com.mycompany.server/&lt;myproject&gt;\n</pre>\n<p>Consider trailing slash in <tt>*.ini</tt> config, django-server-config adds only <tt>myproject</tt> without slash.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<ul>\n<li>0.1.0 - Initial commit</li>\n<li>0.1.1 - Staticfiles support added</li>\n<li>0.1.2 - Duply backups support</li>\n<li>0.1.3 - Emergency lighttpd config fix (staticfiles didn\u2019t work), don\u2019t use v0.1.1!</li>\n<li>0.1.4 - Backup config bugfixes</li>\n</ul>\n<div id=\"classifiers\">\n<h3>Classifiers:</h3>\n<p><a href=\"http://www.redsolutioncms.org/classifiers/utilities\" rel=\"nofollow\">Utilities</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 798710, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d140e233814961079b97a3c521ca6e98", "sha256": "6cc384165ee4f7a75bc8fb1859357515330143b615dbb72381dfd07ac8a5cc10"}, "downloads": -1, "filename": "redsolutioncms.django-server-config-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d140e233814961079b97a3c521ca6e98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9307, "upload_time": "2010-10-24T00:40:20", "upload_time_iso_8601": "2010-10-24T00:40:20.674387Z", "url": "https://files.pythonhosted.org/packages/ae/c9/e4c9e130c86d18edc6ec369c81ea346f4b35c54f2ce2f84a2d59c637eb19/redsolutioncms.django-server-config-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "59928638c1fb88eaa7149d02dbcb03c1", "sha256": "eacc9ec24882aadbffae5160d08c15de34e13367c25e9987e2cdd7757f28d724"}, "downloads": -1, "filename": "redsolutioncms.django-server-config-0.1.1.tar.gz", "has_sig": false, "md5_digest": "59928638c1fb88eaa7149d02dbcb03c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14123, "upload_time": "2011-07-27T14:20:15", "upload_time_iso_8601": "2011-07-27T14:20:15.499583Z", "url": "https://files.pythonhosted.org/packages/e4/86/9a66666278af666ed4f62d0f808c79d074e95f12dee2cde486a8c11304ee/redsolutioncms.django-server-config-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dc73ce1b3ceb41083233b03d430ba541", "sha256": "9e037e6ea5a3f3e37f69b7f7f7b450ab737ce9883f4d039e7ad8ad9370290a0f"}, "downloads": -1, "filename": "redsolutioncms.django-server-config-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dc73ce1b3ceb41083233b03d430ba541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17043, "upload_time": "2011-07-28T15:20:16", "upload_time_iso_8601": "2011-07-28T15:20:16.219097Z", "url": "https://files.pythonhosted.org/packages/a5/0e/42cc2ae34a698bd580a875c7702bf8de9274b6d0a78e198d784433d8eed4/redsolutioncms.django-server-config-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5a436a80a8b946a9e3a01ea42ec4b784", "sha256": "50d66439b46f934e2b551b8329c057c4bbea4ff3caf81a513604870ea3c1e1fe"}, "downloads": -1, "filename": "redsolutioncms.django-server-config-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5a436a80a8b946a9e3a01ea42ec4b784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14805, "upload_time": "2011-09-06T06:26:37", "upload_time_iso_8601": "2011-09-06T06:26:37.505304Z", "url": "https://files.pythonhosted.org/packages/4c/5c/49aecd04e81ab0f5bb43f535c1ff9592c094a5605b4efa4cb4fd0276a46c/redsolutioncms.django-server-config-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4f349591badfdee6cd9307f0874074e7", "sha256": "0984c8d3ff49ef937ebb5d3d733bae527bcf974577d88d993a490fdaa7d0c3e5"}, "downloads": -1, "filename": "redsolutioncms.django-server-config-0.1.4.tar.gz", "has_sig": false, "md5_digest": "4f349591badfdee6cd9307f0874074e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14846, "upload_time": "2011-10-17T13:15:56", "upload_time_iso_8601": "2011-10-17T13:15:56.512766Z", "url": "https://files.pythonhosted.org/packages/91/19/cb84b96066743168cd980f47093f7a626fbc75dd36c5a05372747462432a/redsolutioncms.django-server-config-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f349591badfdee6cd9307f0874074e7", "sha256": "0984c8d3ff49ef937ebb5d3d733bae527bcf974577d88d993a490fdaa7d0c3e5"}, "downloads": -1, "filename": "redsolutioncms.django-server-config-0.1.4.tar.gz", "has_sig": false, "md5_digest": "4f349591badfdee6cd9307f0874074e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14846, "upload_time": "2011-10-17T13:15:56", "upload_time_iso_8601": "2011-10-17T13:15:56.512766Z", "url": "https://files.pythonhosted.org/packages/91/19/cb84b96066743168cd980f47093f7a626fbc75dd36c5a05372747462432a/redsolutioncms.django-server-config-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:35 2020"}