{"info": {"author": "Alexandre Beelen", "author_email": "alexandre.beelen@lam.fr", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\nluigi\n=====\n\nLuigi is a simple Django app to be able to link Django to the workflow manager luigi.\n\nQuick start\n-----------\n\n1. Add 'django_luigi' to you INSTALLED_APPS settings like this::\n\n     INSTALLED_APP = [...\n     'django_luigi',\n     ]\n\n2. Create your `app` and `models` in Django as usual\n\n3. Run `python manage.py migrate` to create the models.\n\nYou can know create objects in your luigi pipeline.\n\nAssuming a django model Test in the test app with two CharField, item1, and item2, properly migrated\n\n.. code-block:: python\n    from django.db import models\n\n    class Test(models.Model):\n        item1 = models.CharField(max_length=120)\n        item2 = models.CharField(max_length=120)\n\nHere is a minimal example of a job to copy data to database using Django :\n\n.. code-block:: python\n\n    import luigi\n    from django_luigi.django import ToORM\n\n    class TestTask(ToORM):\n\n        django_root = 'path_to_your_django_root' # Where manage.py is\n        settings_path = 'my_site.settings'\n\n        model = 'Test'\n        app = 'test'\n\n        def rows(self):\n            for row in [(\"item1\", \"property1\"), (\"item2\", \"property2\")]:\n                yield row\n\n    if __name__ == '__main__':\n        task = TestTask()\n        luigi.build([task], local_scheduler=True)\n\n\nIn the above examples, the data that needs to be copied was directly provided by\noverriding the rows method. Alternately, if the data comes from another task, the\nmodified example would look as shown below:\n\n.. code-block:: python\n\n    import luigi\n    from django_luigi.django import ToORM\n    from luigi.mock import MockTarget\n\n    class BaseTask(luigi.Task):\n        def output(self):\n            return MockTarget(\"BaseTask\")\n\n        def run(self):\n            out = self.output().open(\"w\")\n            TASK_LIST = [\"item%d\\\\tproperty%d\\\\n\" % (i, i) for i in range(1,3)]\n            for task in TASK_LIST:\n                out.write(task)\n            out.close()\n\n    class TestTask(ToORM):\n\n        django_root = 'path_to_your_django_root' # Where manage.py is\n        settings_path = 'my_site.settings'\n\n        model = 'Test'\n        app = 'test'\n\n        def requires(self):\n            return BaseTask()\n\n    if __name__ == '__main__':\n        task1, task2 = TestTask(), BaseTask()\n        luigi.build([task1, task2], local_scheduler=True)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-luigi", "package_url": "https://pypi.org/project/django-luigi/", "platform": "", "project_url": "https://pypi.org/project/django-luigi/", "project_urls": null, "release_url": "https://pypi.org/project/django-luigi/0.2.5/", "requires_dist": null, "requires_python": "", "summary": "A simple Luigi app to connect django and luigi.", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>luigi<br>=====<br><br>Luigi is a simple Django app to be able to link Django to the workflow manager luigi.<br><br>Quick start<br>-----------<br><br>1. Add 'django_luigi' to you INSTALLED_APPS settings like this::<br><br>     INSTALLED_APP = [...<br>     'django_luigi',<br>     ]<br><br>2. Create your `app` and `models` in Django as usual<br><br>3. Run `python manage.py migrate` to create the models.<br><br>You can know create objects in your luigi pipeline.<br><br>Assuming a django model Test in the test app with two CharField, item1, and item2, properly migrated<br><br>.. code-block:: python<br>    from django.db import models<br><br>    class Test(models.Model):<br>        item1 = models.CharField(max_length=120)<br>        item2 = models.CharField(max_length=120)<br><br>Here is a minimal example of a job to copy data to database using Django :<br><br>.. code-block:: python<br><br>    import luigi<br>    from django_luigi.django import ToORM<br><br>    class TestTask(ToORM):<br><br>        django_root = 'path_to_your_django_root' # Where manage.py is<br>        settings_path = 'my_site.settings'<br><br>        model = 'Test'<br>        app = 'test'<br><br>        def rows(self):<br>            for row in [(\"item1\", \"property1\"), (\"item2\", \"property2\")]:<br>                yield row<br><br>    if __name__ == '__main__':<br>        task = TestTask()<br>        luigi.build([task], local_scheduler=True)<br><br><br>In the above examples, the data that needs to be copied was directly provided by<br>overriding the rows method. Alternately, if the data comes from another task, the<br>modified example would look as shown below:<br><br>.. code-block:: python<br><br>    import luigi<br>    from django_luigi.django import ToORM<br>    from luigi.mock import MockTarget<br><br>    class BaseTask(luigi.Task):<br>        def output(self):<br>            return MockTarget(\"BaseTask\")<br><br>        def run(self):<br>            out = self.output().open(\"w\")<br>            TASK_LIST = [\"item%d\\\\tproperty%d\\\\n\" % (i, i) for i in range(1,3)]<br>            for task in TASK_LIST:<br>                out.write(task)<br>            out.close()<br><br>    class TestTask(ToORM):<br><br>        django_root = 'path_to_your_django_root' # Where manage.py is<br>        settings_path = 'my_site.settings'<br><br>        model = 'Test'<br>        app = 'test'<br><br>        def requires(self):<br>            return BaseTask()<br><br>    if __name__ == '__main__':<br>        task1, task2 = TestTask(), BaseTask()<br>        luigi.build([task1, task2], local_scheduler=True)<br><br><br>\n          </div>"}, "last_serial": 4481493, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7c18826b4065c4cd46e539f20cd6f657", "sha256": "74bed09e8b7e3ffaf556beb2e8ab470b57b17272381c8956cc16beefbbe374a1"}, "downloads": -1, "filename": "django_luigi-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7c18826b4065c4cd46e539f20cd6f657", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6820, "upload_time": "2018-06-20T13:19:42", "upload_time_iso_8601": "2018-06-20T13:19:42.454650Z", "url": "https://files.pythonhosted.org/packages/49/b9/a79944e82dbd42b95c71d40179976ddca974036e177052572c06677f6d70/django_luigi-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65dbd125d4ffbf41cfa1b5300621c701", "sha256": "3ddb1cea2fe77f5b9d3121ae9c2897d875b69f057713159d94e42a8dab7d34fd"}, "downloads": -1, "filename": "django-luigi-0.1.tar.gz", "has_sig": false, "md5_digest": "65dbd125d4ffbf41cfa1b5300621c701", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5506, "upload_time": "2018-06-20T13:19:43", "upload_time_iso_8601": "2018-06-20T13:19:43.339748Z", "url": "https://files.pythonhosted.org/packages/12/64/ff2c7eb3a2382e871b51c6726853c5775ccbaac71b34010c7ae6b79cb4b4/django-luigi-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ea5a75d1b105d9ec79e94272bf965e40", "sha256": "74122a8af8324e85ac81800ff9c7d61191fe9d0ec2d60293cece7d25f14a9866"}, "downloads": -1, "filename": "django_luigi-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ea5a75d1b105d9ec79e94272bf965e40", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8602, "upload_time": "2018-11-08T15:55:04", "upload_time_iso_8601": "2018-11-08T15:55:04.001742Z", "url": "https://files.pythonhosted.org/packages/de/22/aaaf7b903dbba4f7533858be0de47e1a4f060b9665ba85cba41b9211fdc2/django_luigi-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bef260f8c5db108d80c918eafbd44740", "sha256": "5950e42c47ce3507d66194fb709836260992e5f3f6f976b13f80398b015e6bfc"}, "downloads": -1, "filename": "django-luigi-0.2.tar.gz", "has_sig": false, "md5_digest": "bef260f8c5db108d80c918eafbd44740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5518, "upload_time": "2018-11-08T15:55:05", "upload_time_iso_8601": "2018-11-08T15:55:05.498922Z", "url": "https://files.pythonhosted.org/packages/d8/41/7ef8b1472a4ba41fb7ec929d82c4975b702a8f91272ffb26c456054db136/django-luigi-0.2.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "609ede9018e3f0118f6d3113f7ee09fb", "sha256": "68f8ab85c51b0685f5fe816a01650174bf6661d0de13a31f2b57e011b5858cc8"}, "downloads": -1, "filename": "django_luigi-0.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "609ede9018e3f0118f6d3113f7ee09fb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8719, "upload_time": "2018-11-13T11:43:06", "upload_time_iso_8601": "2018-11-13T11:43:06.096402Z", "url": "https://files.pythonhosted.org/packages/d7/0b/8813ba4538dc59e0a67893bb8c8c1813c30e8e13998b0dca1f799634abe3/django_luigi-0.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c271d37d54254bbf2110908892f1620", "sha256": "f7ca58bb6b27b5488bc75356e4f4901fb3c5c1c098ccbc76d816a2ac49ab3c1b"}, "downloads": -1, "filename": "django-luigi-0.2.5.tar.gz", "has_sig": false, "md5_digest": "7c271d37d54254bbf2110908892f1620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5597, "upload_time": "2018-11-13T11:43:07", "upload_time_iso_8601": "2018-11-13T11:43:07.533155Z", "url": "https://files.pythonhosted.org/packages/a7/99/555da8988505c906fa7dcd4a06f3a136fddd03adff66498299d62e85c522/django-luigi-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "609ede9018e3f0118f6d3113f7ee09fb", "sha256": "68f8ab85c51b0685f5fe816a01650174bf6661d0de13a31f2b57e011b5858cc8"}, "downloads": -1, "filename": "django_luigi-0.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "609ede9018e3f0118f6d3113f7ee09fb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8719, "upload_time": "2018-11-13T11:43:06", "upload_time_iso_8601": "2018-11-13T11:43:06.096402Z", "url": "https://files.pythonhosted.org/packages/d7/0b/8813ba4538dc59e0a67893bb8c8c1813c30e8e13998b0dca1f799634abe3/django_luigi-0.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c271d37d54254bbf2110908892f1620", "sha256": "f7ca58bb6b27b5488bc75356e4f4901fb3c5c1c098ccbc76d816a2ac49ab3c1b"}, "downloads": -1, "filename": "django-luigi-0.2.5.tar.gz", "has_sig": false, "md5_digest": "7c271d37d54254bbf2110908892f1620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5597, "upload_time": "2018-11-13T11:43:07", "upload_time_iso_8601": "2018-11-13T11:43:07.533155Z", "url": "https://files.pythonhosted.org/packages/a7/99/555da8988505c906fa7dcd4a06f3a136fddd03adff66498299d62e85c522/django-luigi-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:15 2020"}