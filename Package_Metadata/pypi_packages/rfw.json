{"info": {"author": "SecurityKISS Ltd", "author_email": "open.source@securitykiss.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: System :: Networking :: Firewalls", "Topic :: System :: Systems Administration"], "description": "rfw - remote firewall\n=====================\n\n**Remote firewall with REST API.**\n \n``rfw`` is the RESTful server which applies iptables rules to block or allow IP addresses on request from a remote client. ``rfw`` maintains the list of blocked IP addresses which may be updated on the fly from many sources. ``rfw`` also solves the problem of concurrent modifications to iptables since the requests are serialized.\n\nTypical use cases\n-----------------\n\n1. You manage a group of machines which are deployed/controlled/monitored from a central server or admin panel. You need to react quickly/automatically to abuse/DDOS with the rules generated by the intelligence/analytics/geolocation-aware server. You push the IP blocklist updates to other machines in real time.\n\n2. You build the Peer-to-Peer network of servers or Distributed Autonomous Organization (see Ethereum). The DAO, apart from running contracts on Ethereum, may need to run a P2P network. The servers cannot rely on the centralized firewall. With rfw the peer servers can share info about botnet IP sets and current sources of abuse to more efficiently protect against DDOS and other attacks.\n\nSee the `tutorial with example <http://www.securitykiss.com/resources/tutorials/rfw_project/>`__\n\nFeatures\n--------\n\n- block/allow IP addresses with iptables on request from remote host\n- handle individual IP or CIDR ranges (xx.xx.xx.xx/mask)\n- apply action permanently or with expiry timeout\n- keep IP/range whitelist - actions related to whitelisted IPs are ignored what prevents locking out the legitmate clients\n- serialize requests to prevent concurrency issues with iptables\n- REST API\n- secured with SSL\n- authenticated with basic authentication over SSL and by client IP address\n- idempotent - actions resulting in duplicate entries are ignored\n- do not interfere with more general iptables rules\n\nExamples:\n---------\n\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n| rfw REST API                                   | iptables command                                                                        |\n+================================================+=========================================================================================+\n|                                                | Block incoming packets from 11.22.33.44 on eth0. In other words:                        |\n|                                                | Insert the DROP rule on INPUT chain to drop packets with source IP 11.22.33.44          |\n|                                                | on network interface eth0. Translates to the command::                                  | \n|                                                |                                                                                         |\n| PUT /drop/input/eth0/11.22.33.44               |     iptables -I INPUT -i eth0 -s 11.22.33.44 -j DROP                                    |\n|                                                |                                                                                         |\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n|                                                | Delete the above rule. Translates to::                                                  |\n|                                                |                                                                                         |\n| DELETE /drop/input/eth0/11.22.33.44            |     iptables -D INPUT -i eth0 -s 11.22.33.44 -j DROP                                    |\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n| PUT /accept/output/any/192.168.0.0/24          | Allow outgoing traffic to 192.168.0.0/24 subnet on any interface. Translates to::       |\n|                                                |                                                                                         |\n|                                                |     iptables -I OUTPUT -d 192.168.0.0/24 -j ACCEPT                                      |\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n| PUT /accept/forward/ppp/1.2.3.0/24/eth0/5.5.5.5| Allow forwarding packets with source address in subnet 1.2.3.0/24                       |\n|                                                | and destination address 5.5.5.5 from any ppp interface to eth0. Translates to::         |\n|                                                |                                                                                         |\n|                                                |     iptables -I FORWARD -i ppp+ -o eth0                                                 |\n|                                                |     -s 1.2.3.0/24 -d 5.5.5.5 -j ACCEPT                                                  |\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n|                                                | Block incoming packets from 11.22.33.44 on any interface for 10 minutes::               |\n|                                                |                                                                                         |\n| PUT /drop/input/any/11.22.33.44/?expire=600    |     iptables -I INPUT -s 11.22.33.44 -j DROP                                            |\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n|                                                | Return the list of existing rules in JSON format. Sample output::                       |\n|                                                |                                                                                         |\n| GET /list/input                                |    [{\"chain\": \"INPUT\", \"num\": \"1\", \"pkts\": \"0\",                                         |\n|                                                |      \"bytes\": \"0\", \"target\": \"DROP\", \"prot\": \"all\",                                     |\n|                                                |      \"opt\": \"--\", \"inp\": \"*\", \"out\": \"*\",                                               |\n|                                                |      \"source\": \"22.22.22.0/24\",                                                         |\n|                                                |      \"destination\": \"0.0.0.0/0\", \"extra\": \"\"},                                          |\n|                                                |     {\"chain\": \"INPUT\", \"num\": \"2\", \"pkts\": \"0\",                                         |\n|                                                |      \"bytes\": \"0\", \"target\": \"DROP\", \"prot\": \"all\",                                     |\n|                                                |      \"opt\": \"--\", \"inp\": \"*\", \"out\": \"*\",                                               |\n|                                                |      \"source\": \"11.22.33.44\",                                                           |\n|                                                |      \"destination\": \"0.0.0.0/0\", \"extra\": \"\"}]                                          |\n|                                                |                                                                                         |\n+------------------------------------------------+-----------------------------------------------------------------------------------------+\n\n\n\nDeployment\n----------\n\nRequires Python 2.7\n\nInstall from PyPI::\n\n    pip install rfw\n\nor from tarball::\n\n    tar xf rfw-X.X.X.tar.gz\n    cd rfw-X.X.X\n    ./setup.py install\n\n\nGenerate keys and certificates with config/deploy/rfwgen::\n\n    ./rfwgen <server_ip>\n\nSee `rfwgen README <https://github.com/securitykiss-com/rfw/blob/master/config/deploy/README.rst>`__ for more details.\n\n\nFill blanks in configuration file /etc/rfw/rfw.conf and /etc/rfw/white.list.\n\n\nRun in verbose mode with default config file::\n\n    rfw -v\n\nTest with curl::\n\n    curl -v --cacert config/deploy/client/ca.crt --user myuser:mypasswd -XPUT https://<server_ip>:7393/drop/input/eth0/1.2.3.4\n\nor when testing on localhost you can skip certificate verification::\n\n    curl -v --insecure --user myuser:mypasswd -XPUT https://127.0.0.1:7393/drop/input/eth0/1.2.3.4\n\nor when ``local.server`` enabled there is no authentication::\n\n    curl -v -XPUT http://localhost:7390/drop/input/eth0/1.2.3.4\n\nRun rfw without installing\n--------------------------\n\nYou still need to be root. Unzip tarball, cd to project folder::\n\n    sudo bin/rfw -f config/rfw.conf --logfile=rfw.log\n\n\nFAQ\n---\n\n**Q: Why not use chef/puppet/ansible/salt/fabric/ssh for remote management instead?**\n\n| For a couple of reasons:\n\n- Security, trust and permission management. The above tools require giving a remote client the ssh root acces. Often we want to allow the IP analytics server to be able to block selected IPs without giving admin rights. \n- Performance \n- Handle frequent and concurrent requests \n- No dependencies and easy to talk to from any platform and language via REST API\n- Protection against locking yourself out by applying wrong rule\n\nNote that when the rules come from variuos sources they may interact badly. For firewalls the order of rules matters. That's why the functionality of remote rfw is limited to blocking individual IPs inserted in front of the ruleset. \n\n**Q: rfw limits REST client access by IP whitelisting. What if I need to connect from dynamic IP?**\n\nrfw is intended for hosts with static IP addresses. It includes both servers and clients. For clients it is not as strong requirement as it seems since in typical rfw deployment the client is a data center collocated machine with static IP. If you really need to use REST client from various locations or from dynamic IP, you have a couple of options:\n\n-  If you have any server with static IP with SSH access use it as a gateway client to rfw.\n-  If you have dynamic IP from particular address pool assigned to your Internet Service Provider you may whitelist the entire address range.\n-  You can connect through VPN with static IP and whitelist that IP.\n\n**Q: Is it secure?**\n\nTampering with the core firewall should never be taken lightly. rfw must be run with root privileges in order to modify iptables so it requires a lot of trust in the software. Sometimes there is no choice and you have to automate firewall actions across individual boxes anyway. Then rfw makes it more secure because the remote client does not need to have full access to the host and can only block/allow IP addresses using rfw API. While rfw is designed with distributed system in mind, it may also improve security even for a single box by: \n\n- limiting iptables functionality to only simple rules\n- whitelisting selected IP addresses to prevent lock out \n- serializing iptables modifications\n\nSecurity of rfw was the primary concern from the very beginning and influenced these design decisions: \n\n- simplicity \n- no fancy features \n- no external dependencies except iptables \n- limited functionality \n- no generic rules \n- not performance-optimal but conservative choice of time-proven crypto: 2048-bit RSA based SSL with HTTP Basic Authentication\n\n\nLicense\n-------\n\nCopyrite (c) 2014 `SecurityKISS Ltd <http://www.securitykiss.com>`__,\nreleased under the `MIT License <https://github.com/securitykiss-com/rfw/blob/master/LICENSE.txt>`__\n\n| Yes, Mr patent attorney, you have nothing to do here. Find a decent job instead.\n| Fight intellectual \"property\".\n\nCHANGES\n---------------------------------\n\nv0.0.1,  2014-03-05 -- Initial release.\n\nv0.1.2,  2014-03-25 -- Deployment ready.\n\nv0.1.19, 2014-03-26 -- Multiple fixes: non-restful mode, README, PUT/DELETE actions, error handling\n\nv0.2.2,  2014-04-08 -- Fixes: umask, remove install warnings. Docs: link to the tutorial", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/securitykiss-com/rfw", "keywords": "rfw remote firewall iptables REST web service drop accept ban allow whitelist fail2ban", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "rfw", "package_url": "https://pypi.org/project/rfw/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rfw/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/securitykiss-com/rfw"}, "release_url": "https://pypi.org/project/rfw/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Remote firewall as a web service. REST API for iptables.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Remote firewall with REST API.</strong></p>\n<p><tt>rfw</tt> is the RESTful server which applies iptables rules to block or allow IP addresses on request from a remote client. <tt>rfw</tt> maintains the list of blocked IP addresses which may be updated on the fly from many sources. <tt>rfw</tt> also solves the problem of concurrent modifications to iptables since the requests are serialized.</p>\n<div id=\"typical-use-cases\">\n<h2>Typical use cases</h2>\n<ol>\n<li>You manage a group of machines which are deployed/controlled/monitored from a central server or admin panel. You need to react quickly/automatically to abuse/DDOS with the rules generated by the intelligence/analytics/geolocation-aware server. You push the IP blocklist updates to other machines in real time.</li>\n<li>You build the Peer-to-Peer network of servers or Distributed Autonomous Organization (see Ethereum). The DAO, apart from running contracts on Ethereum, may need to run a P2P network. The servers cannot rely on the centralized firewall. With rfw the peer servers can share info about botnet IP sets and current sources of abuse to more efficiently protect against DDOS and other attacks.</li>\n</ol>\n<p>See the <a href=\"http://www.securitykiss.com/resources/tutorials/rfw_project/\" rel=\"nofollow\">tutorial with example</a></p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>block/allow IP addresses with iptables on request from remote host</li>\n<li>handle individual IP or CIDR ranges (xx.xx.xx.xx/mask)</li>\n<li>apply action permanently or with expiry timeout</li>\n<li>keep IP/range whitelist - actions related to whitelisted IPs are ignored what prevents locking out the legitmate clients</li>\n<li>serialize requests to prevent concurrency issues with iptables</li>\n<li>REST API</li>\n<li>secured with SSL</li>\n<li>authenticated with basic authentication over SSL and by client IP address</li>\n<li>idempotent - actions resulting in duplicate entries are ignored</li>\n<li>do not interfere with more general iptables rules</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples:</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>rfw REST API</th>\n<th>iptables command</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>PUT /drop/input/eth0/11.22.33.44</td>\n<td><p>Block incoming packets from 11.22.33.44 on eth0. In other words:\nInsert the DROP rule on INPUT chain to drop packets with source IP 11.22.33.44\non network interface eth0. Translates to the command:</p>\n<pre>\niptables -I INPUT -i eth0 -s 11.22.33.44 -j DROP\n</pre>\n</td>\n</tr>\n<tr><td>DELETE /drop/input/eth0/11.22.33.44</td>\n<td><p>Delete the above rule. Translates to:</p>\n<pre>\niptables -D INPUT -i eth0 -s 11.22.33.44 -j DROP\n</pre>\n</td>\n</tr>\n<tr><td>PUT /accept/output/any/192.168.0.0/24</td>\n<td><p>Allow outgoing traffic to 192.168.0.0/24 subnet on any interface. Translates to:</p>\n<pre>\niptables -I OUTPUT -d 192.168.0.0/24 -j ACCEPT\n</pre>\n</td>\n</tr>\n<tr><td>PUT /accept/forward/ppp/1.2.3.0/24/eth0/5.5.5.5</td>\n<td><p>Allow forwarding packets with source address in subnet 1.2.3.0/24\nand destination address 5.5.5.5 from any ppp interface to eth0. Translates to:</p>\n<pre>\niptables -I FORWARD -i ppp+ -o eth0\n-s 1.2.3.0/24 -d 5.5.5.5 -j ACCEPT\n</pre>\n</td>\n</tr>\n<tr><td>PUT /drop/input/any/11.22.33.44/?expire=600</td>\n<td><p>Block incoming packets from 11.22.33.44 on any interface for 10 minutes:</p>\n<pre>\niptables -I INPUT -s 11.22.33.44 -j DROP\n</pre>\n</td>\n</tr>\n<tr><td>GET /list/input</td>\n<td><p>Return the list of existing rules in JSON format. Sample output:</p>\n<pre>\n[{\"chain\": \"INPUT\", \"num\": \"1\", \"pkts\": \"0\",\n  \"bytes\": \"0\", \"target\": \"DROP\", \"prot\": \"all\",\n  \"opt\": \"--\", \"inp\": \"*\", \"out\": \"*\",\n  \"source\": \"22.22.22.0/24\",\n  \"destination\": \"0.0.0.0/0\", \"extra\": \"\"},\n {\"chain\": \"INPUT\", \"num\": \"2\", \"pkts\": \"0\",\n  \"bytes\": \"0\", \"target\": \"DROP\", \"prot\": \"all\",\n  \"opt\": \"--\", \"inp\": \"*\", \"out\": \"*\",\n  \"source\": \"11.22.33.44\",\n  \"destination\": \"0.0.0.0/0\", \"extra\": \"\"}]\n</pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"deployment\">\n<h2>Deployment</h2>\n<p>Requires Python 2.7</p>\n<p>Install from PyPI:</p>\n<pre>pip install rfw\n</pre>\n<p>or from tarball:</p>\n<pre>tar xf rfw-X.X.X.tar.gz\ncd rfw-X.X.X\n./setup.py install\n</pre>\n<p>Generate keys and certificates with config/deploy/rfwgen:</p>\n<pre>./rfwgen &lt;server_ip&gt;\n</pre>\n<p>See <a href=\"https://github.com/securitykiss-com/rfw/blob/master/config/deploy/README.rst\" rel=\"nofollow\">rfwgen README</a> for more details.</p>\n<p>Fill blanks in configuration file /etc/rfw/rfw.conf and /etc/rfw/white.list.</p>\n<p>Run in verbose mode with default config file:</p>\n<pre>rfw -v\n</pre>\n<p>Test with curl:</p>\n<pre>curl -v --cacert config/deploy/client/ca.crt --user myuser:mypasswd -XPUT https://&lt;server_ip&gt;:7393/drop/input/eth0/1.2.3.4\n</pre>\n<p>or when testing on localhost you can skip certificate verification:</p>\n<pre>curl -v --insecure --user myuser:mypasswd -XPUT https://127.0.0.1:7393/drop/input/eth0/1.2.3.4\n</pre>\n<p>or when <tt>local.server</tt> enabled there is no authentication:</p>\n<pre>curl -v -XPUT http://localhost:7390/drop/input/eth0/1.2.3.4\n</pre>\n</div>\n<div id=\"run-rfw-without-installing\">\n<h2>Run rfw without installing</h2>\n<p>You still need to be root. Unzip tarball, cd to project folder:</p>\n<pre>sudo bin/rfw -f config/rfw.conf --logfile=rfw.log\n</pre>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<p><strong>Q: Why not use chef/puppet/ansible/salt/fabric/ssh for remote management instead?</strong></p>\n<div>\n<div>For a couple of reasons:</div>\n</div>\n<ul>\n<li>Security, trust and permission management. The above tools require giving a remote client the ssh root acces. Often we want to allow the IP analytics server to be able to block selected IPs without giving admin rights.</li>\n<li>Performance</li>\n<li>Handle frequent and concurrent requests</li>\n<li>No dependencies and easy to talk to from any platform and language via REST API</li>\n<li>Protection against locking yourself out by applying wrong rule</li>\n</ul>\n<p>Note that when the rules come from variuos sources they may interact badly. For firewalls the order of rules matters. That\u2019s why the functionality of remote rfw is limited to blocking individual IPs inserted in front of the ruleset.</p>\n<p><strong>Q: rfw limits REST client access by IP whitelisting. What if I need to connect from dynamic IP?</strong></p>\n<p>rfw is intended for hosts with static IP addresses. It includes both servers and clients. For clients it is not as strong requirement as it seems since in typical rfw deployment the client is a data center collocated machine with static IP. If you really need to use REST client from various locations or from dynamic IP, you have a couple of options:</p>\n<ul>\n<li>If you have any server with static IP with SSH access use it as a gateway client to rfw.</li>\n<li>If you have dynamic IP from particular address pool assigned to your Internet Service Provider you may whitelist the entire address range.</li>\n<li>You can connect through VPN with static IP and whitelist that IP.</li>\n</ul>\n<p><strong>Q: Is it secure?</strong></p>\n<p>Tampering with the core firewall should never be taken lightly. rfw must be run with root privileges in order to modify iptables so it requires a lot of trust in the software. Sometimes there is no choice and you have to automate firewall actions across individual boxes anyway. Then rfw makes it more secure because the remote client does not need to have full access to the host and can only block/allow IP addresses using rfw API. While rfw is designed with distributed system in mind, it may also improve security even for a single box by:</p>\n<ul>\n<li>limiting iptables functionality to only simple rules</li>\n<li>whitelisting selected IP addresses to prevent lock out</li>\n<li>serializing iptables modifications</li>\n</ul>\n<p>Security of rfw was the primary concern from the very beginning and influenced these design decisions:</p>\n<ul>\n<li>simplicity</li>\n<li>no fancy features</li>\n<li>no external dependencies except iptables</li>\n<li>limited functionality</li>\n<li>no generic rules</li>\n<li>not performance-optimal but conservative choice of time-proven crypto: 2048-bit RSA based SSL with HTTP Basic Authentication</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyrite (c) 2014 <a href=\"http://www.securitykiss.com\" rel=\"nofollow\">SecurityKISS Ltd</a>,\nreleased under the <a href=\"https://github.com/securitykiss-com/rfw/blob/master/LICENSE.txt\" rel=\"nofollow\">MIT License</a></p>\n<div>\n<div>Yes, Mr patent attorney, you have nothing to do here. Find a decent job instead.</div>\n<div>Fight intellectual \u201cproperty\u201d.</div>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<p>v0.0.1,  2014-03-05 \u2013 Initial release.</p>\n<p>v0.1.2,  2014-03-25 \u2013 Deployment ready.</p>\n<p>v0.1.19, 2014-03-26 \u2013 Multiple fixes: non-restful mode, README, PUT/DELETE actions, error handling</p>\n<p>v0.2.2,  2014-04-08 \u2013 Fixes: umask, remove install warnings. Docs: link to the tutorial</p>\n</div>\n\n          </div>"}, "last_serial": 1054619, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "cf3d49947fbdb34fdffa1e5e4788c339", "sha256": "5c6003d7ecdd6186ba87ac07354abfcaee30222756db436ef1ca13f44eb2f6e7"}, "downloads": -1, "filename": "rfw-0.1.10.tar.gz", "has_sig": false, "md5_digest": "cf3d49947fbdb34fdffa1e5e4788c339", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55607, "upload_time": "2014-03-26T15:23:16", "upload_time_iso_8601": "2014-03-26T15:23:16.505795Z", "url": "https://files.pythonhosted.org/packages/67/ef/3c635e91f383d8a00629730aa758ade9daea05f88fab0ce858146876a5c7/rfw-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "b817978b161bcdca58c002c2e350e708", "sha256": "0540424b970a824b51c6354c065dc236f30ab409a42089586b70918411acd5be"}, "downloads": -1, "filename": "rfw-0.1.11.tar.gz", "has_sig": false, "md5_digest": "b817978b161bcdca58c002c2e350e708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46957, "upload_time": "2014-03-26T15:36:00", "upload_time_iso_8601": "2014-03-26T15:36:00.176940Z", "url": "https://files.pythonhosted.org/packages/b2/f2/3b3bb06478ad9732b2a8a38ed91c898119b937c05dc008013c7599699784/rfw-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "4a540b9f351055bbd1c62bd8e07f9183", "sha256": "5f390eddb1403dceec7f8a40572c1bfea7c52dff9710e6d5bec273feec668f79"}, "downloads": -1, "filename": "rfw-0.1.12.tar.gz", "has_sig": false, "md5_digest": "4a540b9f351055bbd1c62bd8e07f9183", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47810, "upload_time": "2014-03-26T15:37:51", "upload_time_iso_8601": "2014-03-26T15:37:51.925767Z", "url": "https://files.pythonhosted.org/packages/96/7c/e47c774d02254435f7cfbe3258be37f45348a8216a1bdf0b3cb6b19fe62a/rfw-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "b05356df47e9d581b7226bbce8c42378", "sha256": "27778e44e5d5409465e797846fc43e0d135b10e7ea6d56b58362a9f50c6ad962"}, "downloads": -1, "filename": "rfw-0.1.13.tar.gz", "has_sig": false, "md5_digest": "b05356df47e9d581b7226bbce8c42378", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50340, "upload_time": "2014-03-26T15:39:42", "upload_time_iso_8601": "2014-03-26T15:39:42.812860Z", "url": "https://files.pythonhosted.org/packages/16/7c/1c66f0fcdbbfc4dd4131425bfe9137d3a4ba6d465660ae813218ef42780c/rfw-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "23a5bdb98c5c5af7e3aa54a888ce263e", "sha256": "0bfb0c164c8de7e141638b5ed86848d35023339234968dc3dc117564e937ca06"}, "downloads": -1, "filename": "rfw-0.1.14.tar.gz", "has_sig": false, "md5_digest": "23a5bdb98c5c5af7e3aa54a888ce263e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50759, "upload_time": "2014-03-26T15:45:01", "upload_time_iso_8601": "2014-03-26T15:45:01.553612Z", "url": "https://files.pythonhosted.org/packages/b8/5b/bb3fbce53835b32a613249a209264cfd9336b91d68a0231cb44b385bba91/rfw-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "b760f5c33f814a2a1850b4335a82df74", "sha256": "ee259d4f06b48851c66ee475e553a1a943e929c2ab4f1f406eabc46c1310670b"}, "downloads": -1, "filename": "rfw-0.1.15.tar.gz", "has_sig": false, "md5_digest": "b760f5c33f814a2a1850b4335a82df74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55650, "upload_time": "2014-03-26T15:49:17", "upload_time_iso_8601": "2014-03-26T15:49:17.796157Z", "url": "https://files.pythonhosted.org/packages/ed/ce/cfda8a90a44526ec617157b9bf448147060764480d8f1ef195c96d93b652/rfw-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "c774bb9d51de99ebe13b3362fda89e42", "sha256": "bd64b50d2a0347f5ae593d7f13c60718bbb2675e79fdcc26984c3d4a6bc8d322"}, "downloads": -1, "filename": "rfw-0.1.16.tar.gz", "has_sig": false, "md5_digest": "c774bb9d51de99ebe13b3362fda89e42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50671, "upload_time": "2014-03-26T15:51:02", "upload_time_iso_8601": "2014-03-26T15:51:02.665132Z", "url": "https://files.pythonhosted.org/packages/a5/5a/0eb598f4ad327d50f2abd1e6f1793ac2947935aea2d34d4505f2760e4765/rfw-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "0d46c3f6edf43856c6f9f3deeb8753ba", "sha256": "23212c5d429655e21239b14898f28b700087338f439f32a0f8f0c681f0ac048c"}, "downloads": -1, "filename": "rfw-0.1.17.tar.gz", "has_sig": false, "md5_digest": "0d46c3f6edf43856c6f9f3deeb8753ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50848, "upload_time": "2014-03-26T15:52:09", "upload_time_iso_8601": "2014-03-26T15:52:09.742732Z", "url": "https://files.pythonhosted.org/packages/14/6b/1e0e0016257d0bf85f2c069a55449adce3861bab5d67341eaccc61422043/rfw-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "4c21874af706387d180ff40313b8b499", "sha256": "6ae563d02f4d841fcbb919c27827106b90ff95d77e8302df2f444b2da0679c04"}, "downloads": -1, "filename": "rfw-0.1.18.tar.gz", "has_sig": false, "md5_digest": "4c21874af706387d180ff40313b8b499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50791, "upload_time": "2014-03-26T15:54:02", "upload_time_iso_8601": "2014-03-26T15:54:02.843048Z", "url": "https://files.pythonhosted.org/packages/3e/f6/1794499b3502a4e26e0340281712813e3a8570a12927bd4c2ea487d03e9a/rfw-0.1.18.tar.gz", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "3d5512390153bd640d50457fa02e83d1", "sha256": "3b517bca3f61bb102f21d71279f273199c3cf0fca87f4ab54e2f3788f4d0e863"}, "downloads": -1, "filename": "rfw-0.1.19.tar.gz", "has_sig": false, "md5_digest": "3d5512390153bd640d50457fa02e83d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55903, "upload_time": "2014-03-26T16:10:47", "upload_time_iso_8601": "2014-03-26T16:10:47.105126Z", "url": "https://files.pythonhosted.org/packages/c8/1c/462b3cf64de50d3225aec8b9c47243cd245a9e9b6affd89836191de3ee10/rfw-0.1.19.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f66d80c5d74772ecdc9f211735eb8b81", "sha256": "2c80be13b729a3df2d0b17621db2782cf98aaa4f7e610c69be9f0f676d269546"}, "downloads": -1, "filename": "rfw-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f66d80c5d74772ecdc9f211735eb8b81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34715, "upload_time": "2014-03-25T18:54:43", "upload_time_iso_8601": "2014-03-25T18:54:43.474292Z", "url": "https://files.pythonhosted.org/packages/fb/a1/b263d989e14b2ec81bbf850188f6a24393af7985649917dcf6249aeffeb0/rfw-0.1.2.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "321f1a331da087f585e06753d504f9b0", "sha256": "b980484bb177437d1f97493c35d89cd2eed9bd516da8d1d6fcf338ba81099f4b"}, "downloads": -1, "filename": "rfw-0.1.20.tar.gz", "has_sig": false, "md5_digest": "321f1a331da087f585e06753d504f9b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55964, "upload_time": "2014-03-26T16:19:19", "upload_time_iso_8601": "2014-03-26T16:19:19.202390Z", "url": "https://files.pythonhosted.org/packages/d8/ce/73a9f3bb19ddd228d15680a12b4d778dd79cd671832bde95748d0f73a0ba/rfw-0.1.20.tar.gz", "yanked": false}], "0.1.21": [{"comment_text": "", "digests": {"md5": "0b1959b1e8832668363e1a2a3dcafade", "sha256": "fe06dfce2f2c813bb4efae3544a0036fffc3e82727817e49650a4e7d90da9e11"}, "downloads": -1, "filename": "rfw-0.1.21.tar.gz", "has_sig": false, "md5_digest": "0b1959b1e8832668363e1a2a3dcafade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56128, "upload_time": "2014-03-26T16:32:56", "upload_time_iso_8601": "2014-03-26T16:32:56.198541Z", "url": "https://files.pythonhosted.org/packages/d1/b4/9dfd9c8be0d7244c751c45649bcf37f1d9c603c64399ae6779850e569c94/rfw-0.1.21.tar.gz", "yanked": false}], "0.1.3": [], "0.1.4": [], "0.1.5": [{"comment_text": "", "digests": {"md5": "3923637cf779e2858931e728aa5f878a", "sha256": "ebf4a6616966c8176c868758471cddf69c8662285016de0c1d82275f03e6e7b4"}, "downloads": -1, "filename": "rfw-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3923637cf779e2858931e728aa5f878a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34614, "upload_time": "2014-03-25T19:17:51", "upload_time_iso_8601": "2014-03-25T19:17:51.670922Z", "url": "https://files.pythonhosted.org/packages/36/55/11beea0a54261b927e8f53ea3c644b67902f227df8d2e6200b2702aa7544/rfw-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "ee4fc2bea83a989129ef3ffa6e9e9877", "sha256": "0e3aa0cf639341afe8840f49416ef12ec5fa1e8f46052107ac056eed35e7370e"}, "downloads": -1, "filename": "rfw-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ee4fc2bea83a989129ef3ffa6e9e9877", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34626, "upload_time": "2014-03-25T21:41:27", "upload_time_iso_8601": "2014-03-25T21:41:27.211629Z", "url": "https://files.pythonhosted.org/packages/00/7f/43673375514eab431efd464cc6ae988f4ed1ae73c8db2073779e5c59c4ba/rfw-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "af2937f31eb1a67a7d403f68cc24de8c", "sha256": "048442e8658d7c229f8c3121b061aedaf372ea9f6465b58cf3e2d154455bf025"}, "downloads": -1, "filename": "rfw-0.1.7.tar.gz", "has_sig": false, "md5_digest": "af2937f31eb1a67a7d403f68cc24de8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34617, "upload_time": "2014-03-25T21:51:43", "upload_time_iso_8601": "2014-03-25T21:51:43.918962Z", "url": "https://files.pythonhosted.org/packages/d7/7c/84e33b34984ffb3566dfe39756190c1c6903e12d1a4c47e63074681d6c0e/rfw-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "a80936628fe654414e1344338cb325ae", "sha256": "655d9a8e176d361e909509ed855fcb17a514ec7c7efc2ba7e32a99822f595b0b"}, "downloads": -1, "filename": "rfw-0.1.8.tar.gz", "has_sig": false, "md5_digest": "a80936628fe654414e1344338cb325ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26575, "upload_time": "2014-03-25T22:06:03", "upload_time_iso_8601": "2014-03-25T22:06:03.888310Z", "url": "https://files.pythonhosted.org/packages/76/cb/fdc341b041c66e0b045ef8f53e016475f2d8d8d89f98b7b81fed825b2623/rfw-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "cef34f04d8c3dde063530236ca3a6f83", "sha256": "d759c40dd3262383415c6a9579f39c44dca591a2ec256011c28fed9df05a69a6"}, "downloads": -1, "filename": "rfw-0.1.9.tar.gz", "has_sig": false, "md5_digest": "cef34f04d8c3dde063530236ca3a6f83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34576, "upload_time": "2014-03-25T22:11:18", "upload_time_iso_8601": "2014-03-25T22:11:18.185595Z", "url": "https://files.pythonhosted.org/packages/13/09/548480705fab09da39939d27f2e171e223f03a5021656baec1a8859b0077/rfw-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a4b884318aefd7899e17726959366825", "sha256": "1a7b17bc3ec81aa7ab01d9fab0e45ba25dd29fef6c65314ea1b09029fd87ec2f"}, "downloads": -1, "filename": "rfw-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a4b884318aefd7899e17726959366825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56125, "upload_time": "2014-03-26T23:30:58", "upload_time_iso_8601": "2014-03-26T23:30:58.614741Z", "url": "https://files.pythonhosted.org/packages/82/19/138537a738337688edbae4c012d133d7765c972986680b212d6e8f197350/rfw-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f0ea358ae7ae2aacc48da5e8f8944719", "sha256": "97a513cad0139bf6ae30acc3b9b6f57a7be245f1aa78c0519da2990d3ec97b9a"}, "downloads": -1, "filename": "rfw-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f0ea358ae7ae2aacc48da5e8f8944719", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56193, "upload_time": "2014-03-27T12:28:18", "upload_time_iso_8601": "2014-03-27T12:28:18.619793Z", "url": "https://files.pythonhosted.org/packages/31/c7/aac55b9179de8550fc68747f22f99687364681a109b345b73d8f3e144d51/rfw-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "58bc1965a5fa862398395c995d1af55c", "sha256": "3d1bdcba60ba5c73112639e3d2fc046dba5d0bbc7c350ab9f29804eccc9d2a74"}, "downloads": -1, "filename": "rfw-0.2.2.tar.gz", "has_sig": false, "md5_digest": "58bc1965a5fa862398395c995d1af55c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56452, "upload_time": "2014-04-08T08:54:35", "upload_time_iso_8601": "2014-04-08T08:54:35.184188Z", "url": "https://files.pythonhosted.org/packages/4f/e9/e247458d5eb47b22d67b5c82a880b7c93ca28bd7b63ca0bfceceb7a7a3c2/rfw-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "58bc1965a5fa862398395c995d1af55c", "sha256": "3d1bdcba60ba5c73112639e3d2fc046dba5d0bbc7c350ab9f29804eccc9d2a74"}, "downloads": -1, "filename": "rfw-0.2.2.tar.gz", "has_sig": false, "md5_digest": "58bc1965a5fa862398395c995d1af55c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56452, "upload_time": "2014-04-08T08:54:35", "upload_time_iso_8601": "2014-04-08T08:54:35.184188Z", "url": "https://files.pythonhosted.org/packages/4f/e9/e247458d5eb47b22d67b5c82a880b7c93ca28bd7b63ca0bfceceb7a7a3c2/rfw-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:05 2020"}