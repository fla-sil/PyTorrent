{"info": {"author": "Thomas FEL", "author_email": "thomas.fel@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# NumKdoc\n\nNumKdoc is a plugin for Mkdoc allowing you to automatically generate documentation from your Numpy style docstring, by making a simple call to classes.\n\nThis project is not maintained, and the parsing is not complete. It is based on the NumpyDoc parser.\n\n\n## Quick start\n\nIf you want to try this plugin as-it-is, follow these steps:\n\n1. Download this repo and (eventually) unzip it in a folder\n\n2. Inside the project folder, execute the command \n   `python setup.py develop` to install \n   the plugin on your local machine. \n\n3. Go to your mkdocs project folder, edit the `mkdocs.yml` file \n   and add these few lines at the end:\n\n   ```yaml\n   plugins:\n       - numkdoc\n   ```\n\nThat's it.\nNow you can call the parsing of a class using the tag `{{ module.ClassName }}`,\nNumkdoc will automatically substitue that tag with the class documentation.\n\n### Example\n\nFor example, you could edit the `docs/api/core.md`\nfile and insert the tag in any place, like this:\n\n````markdown\n# Core Api\n\n[...]\n\n{{ src.module.Class }}\n\n[...]\n\n````", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/napolar/numkdoc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Numkdoc", "package_url": "https://pypi.org/project/Numkdoc/", "platform": "", "project_url": "https://pypi.org/project/Numkdoc/", "project_urls": {"Homepage": "https://github.com/napolar/numkdoc"}, "release_url": "https://pypi.org/project/Numkdoc/0.2/", "requires_dist": null, "requires_python": "", "summary": "Mkdoc plugin to autodoc your numpy docstring", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NumKdoc</h1>\n<p>NumKdoc is a plugin for Mkdoc allowing you to automatically generate documentation from your Numpy style docstring, by making a simple call to classes.</p>\n<p>This project is not maintained, and the parsing is not complete. It is based on the NumpyDoc parser.</p>\n<h2>Quick start</h2>\n<p>If you want to try this plugin as-it-is, follow these steps:</p>\n<ol>\n<li>\n<p>Download this repo and (eventually) unzip it in a folder</p>\n</li>\n<li>\n<p>Inside the project folder, execute the command\n<code>python setup.py develop</code> to install\nthe plugin on your local machine.</p>\n</li>\n<li>\n<p>Go to your mkdocs project folder, edit the <code>mkdocs.yml</code> file\nand add these few lines at the end:</p>\n<pre><span class=\"nt\">plugins</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">numkdoc</span>\n</pre>\n</li>\n</ol>\n<p>That's it.\nNow you can call the parsing of a class using the tag <code>{{ module.ClassName }}</code>,\nNumkdoc will automatically substitue that tag with the class documentation.</p>\n<h3>Example</h3>\n<p>For example, you could edit the <code>docs/api/core.md</code>\nfile and insert the tag in any place, like this:</p>\n<pre># Core Api\n\n[...]\n\n{{ src.module.Class }}\n\n[...]\n</pre>\n\n          </div>"}, "last_serial": 7105761, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5ccb09921f4f1a85c67b5f958ab23735", "sha256": "d8bd7e008551246c5a119c714bf767f8c431fe497cc37997a7f5cf35cc34c0b6"}, "downloads": -1, "filename": "Numkdoc-0.1.tar.gz", "has_sig": false, "md5_digest": "5ccb09921f4f1a85c67b5f958ab23735", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3440, "upload_time": "2020-04-26T16:17:04", "upload_time_iso_8601": "2020-04-26T16:17:04.679105Z", "url": "https://files.pythonhosted.org/packages/e6/4c/acacf534991b65338dfcbce33e36a15b997552af7363bb694c6a63300ca8/Numkdoc-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d349b4a5e81048897eed8c0fa8c4ddfd", "sha256": "f823d70fecfa9cf9790e1bd2616ce534c8afe481a4dfdda27267481a54728f0d"}, "downloads": -1, "filename": "Numkdoc-0.2.tar.gz", "has_sig": false, "md5_digest": "d349b4a5e81048897eed8c0fa8c4ddfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3622, "upload_time": "2020-04-26T16:27:06", "upload_time_iso_8601": "2020-04-26T16:27:06.214665Z", "url": "https://files.pythonhosted.org/packages/f3/d6/f21965a124e5fadaf2110927200d00c5d1d906eca6c67d224297980fb69f/Numkdoc-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d349b4a5e81048897eed8c0fa8c4ddfd", "sha256": "f823d70fecfa9cf9790e1bd2616ce534c8afe481a4dfdda27267481a54728f0d"}, "downloads": -1, "filename": "Numkdoc-0.2.tar.gz", "has_sig": false, "md5_digest": "d349b4a5e81048897eed8c0fa8c4ddfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3622, "upload_time": "2020-04-26T16:27:06", "upload_time_iso_8601": "2020-04-26T16:27:06.214665Z", "url": "https://files.pythonhosted.org/packages/f3/d6/f21965a124e5fadaf2110927200d00c5d1d906eca6c67d224297980fb69f/Numkdoc-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:12 2020"}