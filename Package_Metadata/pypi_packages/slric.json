{"info": {"author": "Fuad Aleskerov, Natalia Meshcheryahkova, Sergey Shvydun(*)", "author_email": "shvydun@hse.ru", "bugtrack_url": null, "classifiers": [], "description": "# SLRIC package  <img align=\"middle\" src=\"https://www.hse.ru/data/2019/03/29/1187981536/slric.png\" alt=\"drawing\" width=\"40\"/>\n\n<p>SLRIC is a Python package for influence assessment in networks using short-range interaction centrality (SRIC) and long-range interaction centrality (LRIC) indices.</p>\n<div>\n<p>SRIC and LRIC indices take into account:</p>\n<ul>\n<li>Individual attributes of nodes: threshold of influence (quota), nodes size, etc.;</li>\n<li>Possiblity of the group influence;</li>\n<li>Indirect connections between nodes.</li>\n</ul>\n</div>\n<b>Example:</b>\n<div style=\"display: flex; justify-content: center;\">\n  <img src=\"https://www.hse.ru/data/2019/03/29/1187981382/graph.png\" alt=\"SLRIC features\" width=\"300\"/>\n<ul>\n<li>Nodes 2 and 4 have different thresholds of influence (<i>q</i>);</li>\n<li>Nodes 1 and 2 influence node 4 as a group. Even though node 3 is connected to node 4, it does not influence it directly as node 3 is not a pivotal member in any group;</li>\n<li>Node 3 influences node 4 via node 2.</li>\n</ul>\n<p>Website: <a href=\"https://github.com/SergSHV/slric\" rel=\"nofollow\">https://github.com/SergSHV/slric</a>\n<p>Authors: <a href=\"https://www.hse.ru/en/org/persons/140159\" rel=\"nofollow\">Fuad Aleskerov</a>, <a href=\"https://www.hse.ru/en/staff/natamesc\" rel=\"nofollow\">Natalia Meshcheryakova</a>, <a href=\"https://www.hse.ru/en/staff/Shv\" rel=\"nofollow\">Sergey Shvydun</a> (HSE University, ICS RAS)</div>\n\n## Installation\nInstall the package from PyPI:\n\n    $ pip install slric\n\nYou can also install the latest version from GitHub:\n\n    $ pip install git+https://github.com/SergSHV/slric.git\n\n## Load SLRIC package:\n\n\n    >>> import slric\n\n\n## SRIC/LRIC Calculation for Simple Example\n\nGenerate a network using NetworkX package \n\n\n    >>> import networkx as nx\n    >>> G = nx.DiGraph()\n    >>> G.add_edge(1, 4, weight=7)\n    >>> G.add_edge(2, 4, weight=5)\n    >>> G.add_edge(3, 4, weight=2)\n    >>> G.add_edge(3, 2, weight=6) \n\n\n**Case 1**\n- *q*=60% of weighted in-degree (in percentage);\n-  nodes have the same size (*size* = 1).\n\n[//]: # (Case 1)\n\n\n\n\n    >>> slric.sric(G, q=60, size=1) # SRIC \n    {1: 0.36363636363636365, 4: 0.0, 2: 0.09740259740259741, 3: 0.538961038961039}\n\n    >>> slric.lric(G, q=60, size=1, models='max') # LRIC (Max) \n    {1: 0.27450980392156865, 4: 0.0, 2: 0.1470588235294118, 3: 0.5784313725490197}\n\n    >>> slric.lric(G, q=60, size=1, models='maxmin') # LRIC (MaxMin)\n    {1: 0.27450980392156865, 4: 0.0, 2: 0.1470588235294118, 3: 0.5784313725490197}\n\n    >>> slric.lric(G, q=60, size=1, models='pagerank') # LRIC (PageRank)\n    {1: 0.32165639923246203, 4: 0.0, 2: 0.18808528619697315, 3: 0.49025831457056473}\n\n\n **Case 2** \n- *q*=5 for each node (defined quota, *dq*);\n- nodes have the same size (*size* = 1).\n\n[//]: # (Case 2)\n\n\n    >>> slric.sric(G, dq=5, size=1) # SRIC\n    {1: 0.21153846153846154, 4: 0.0, 2: 0.28846153846153844, 3: 0.5}\n\n    >>> slric.lric(G, dq=5, size=1, models='max') # LRIC (Max)\n    {1: 0.25, 4: 0.0, 2: 0.25, 3: 0.5}\n\n\n**Case 3** \n- *q*=5 for node 2, *q*=10 for node 4;\n- nodes have the same size (*size* = 1).\n\n[//]: # (Case 3)\n\n\n    >>> d = dict()\n    >>> d[2] = 5\n    >>> d[4] = 10\n\n    >>> slric.sric(G, dq=d, size=1) # SRIC\n    {1: 0.2916666666666667, 4: 0.0, 2: 0.20833333333333337, 3: 0.5}\n\n    >>> slric.lric(G, dq=d, size=1, models='max') # LRIC (Max)\n    {1: 0.24137931034482757, 4: 0.0, 2: 0.17241379310344826, 3: 0.5862068965517241}\n\n\n## Write LRIC results to file\n    >>> from slric import lric, GraphQW\n    >>> ranking, lric_graph = lric(G, q=60, size=1, models=['max', 'maxmin'], data=TRUE)\n    >>> GraphQW.write_centrality(lric_graph, 'output.txt', separator=';', mode='w')\n\n\n## Additional features\n1) If nodes size (*size*) is not defined, then *size* = weighted out-degree;\n2) Similarly to threshold of influence (*q*), nodes size can be of dict() type;\n3) Maximal group size can be limited using '*group_size*' parameter (by default, *group_size*=4);\n4) Maximal indirect influence limit can be defined using '*limpath*' parameter (by default, *limpath*=3);\n5) If LRIC version (*models*) is not defined, then LRIC (Max) is calculated by default (*models='max'* ).\n\n## License\n\nBSD 3-Clause License\n\nCopyright (c) 2019. Fuad Aleskerov, Natalia Meshcheryakova, Sergey Shvydun.\n\nAll rights reserved.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SergSHV/slric", "keywords": "", "license": "BSD 3-clause \"New\" or \"Revised License\"", "maintainer": "", "maintainer_email": "", "name": "slric", "package_url": "https://pypi.org/project/slric/", "platform": "", "project_url": "https://pypi.org/project/slric/", "project_urls": {"Homepage": "https://github.com/SergSHV/slric"}, "release_url": "https://pypi.org/project/slric/1.1.5.1/", "requires_dist": ["numpy", "cvxopt", "networkx (>=2.3)"], "requires_python": "", "summary": "SRIC and LRIC indices calculation", "version": "1.1.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SLRIC package  <img align=\"middle\" alt=\"drawing\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/961ae3373a81197013f90eaab3ddc51baa7f0435/68747470733a2f2f7777772e6873652e72752f646174612f323031392f30332f32392f313138373938313533362f736c7269632e706e67\" width=\"40\"></h1>\n<p>SLRIC is a Python package for influence assessment in networks using short-range interaction centrality (SRIC) and long-range interaction centrality (LRIC) indices.</p>\n<div>\n<p>SRIC and LRIC indices take into account:</p>\n<ul>\n<li>Individual attributes of nodes: threshold of influence (quota), nodes size, etc.;</li>\n<li>Possiblity of the group influence;</li>\n<li>Indirect connections between nodes.</li>\n</ul>\n</div>\n<b>Example:</b>\n<div>\n  <img alt=\"SLRIC features\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d989ce67161008ae574d650ebe73313c16708ac/68747470733a2f2f7777772e6873652e72752f646174612f323031392f30332f32392f313138373938313338322f67726170682e706e67\" width=\"300\">\n<ul>\n<li>Nodes 2 and 4 have different thresholds of influence (<i>q</i>);</li>\n<li>Nodes 1 and 2 influence node 4 as a group. Even though node 3 is connected to node 4, it does not influence it directly as node 3 is not a pivotal member in any group;</li>\n<li>Node 3 influences node 4 via node 2.</li>\n</ul>\n<p>Website: <a href=\"https://github.com/SergSHV/slric\" rel=\"nofollow\">https://github.com/SergSHV/slric</a>\n</p><p>Authors: <a href=\"https://www.hse.ru/en/org/persons/140159\" rel=\"nofollow\">Fuad Aleskerov</a>, <a href=\"https://www.hse.ru/en/staff/natamesc\" rel=\"nofollow\">Natalia Meshcheryakova</a>, <a href=\"https://www.hse.ru/en/staff/Shv\" rel=\"nofollow\">Sergey Shvydun</a> (HSE University, ICS RAS)</p></div>\n<h2>Installation</h2>\n<p>Install the package from PyPI:</p>\n<pre><code>$ pip install slric\n</code></pre>\n<p>You can also install the latest version from GitHub:</p>\n<pre><code>$ pip install git+https://github.com/SergSHV/slric.git\n</code></pre>\n<h2>Load SLRIC package:</h2>\n<pre><code>&gt;&gt;&gt; import slric\n</code></pre>\n<h2>SRIC/LRIC Calculation for Simple Example</h2>\n<p>Generate a network using NetworkX package</p>\n<pre><code>&gt;&gt;&gt; import networkx as nx\n&gt;&gt;&gt; G = nx.DiGraph()\n&gt;&gt;&gt; G.add_edge(1, 4, weight=7)\n&gt;&gt;&gt; G.add_edge(2, 4, weight=5)\n&gt;&gt;&gt; G.add_edge(3, 4, weight=2)\n&gt;&gt;&gt; G.add_edge(3, 2, weight=6) \n</code></pre>\n<p><strong>Case 1</strong></p>\n<ul>\n<li><em>q</em>=60% of weighted in-degree (in percentage);</li>\n<li>nodes have the same size (<em>size</em> = 1).</li>\n</ul>\n<pre><code>&gt;&gt;&gt; slric.sric(G, q=60, size=1) # SRIC \n{1: 0.36363636363636365, 4: 0.0, 2: 0.09740259740259741, 3: 0.538961038961039}\n\n&gt;&gt;&gt; slric.lric(G, q=60, size=1, models='max') # LRIC (Max) \n{1: 0.27450980392156865, 4: 0.0, 2: 0.1470588235294118, 3: 0.5784313725490197}\n\n&gt;&gt;&gt; slric.lric(G, q=60, size=1, models='maxmin') # LRIC (MaxMin)\n{1: 0.27450980392156865, 4: 0.0, 2: 0.1470588235294118, 3: 0.5784313725490197}\n\n&gt;&gt;&gt; slric.lric(G, q=60, size=1, models='pagerank') # LRIC (PageRank)\n{1: 0.32165639923246203, 4: 0.0, 2: 0.18808528619697315, 3: 0.49025831457056473}\n</code></pre>\n<p><strong>Case 2</strong></p>\n<ul>\n<li><em>q</em>=5 for each node (defined quota, <em>dq</em>);</li>\n<li>nodes have the same size (<em>size</em> = 1).</li>\n</ul>\n<pre><code>&gt;&gt;&gt; slric.sric(G, dq=5, size=1) # SRIC\n{1: 0.21153846153846154, 4: 0.0, 2: 0.28846153846153844, 3: 0.5}\n\n&gt;&gt;&gt; slric.lric(G, dq=5, size=1, models='max') # LRIC (Max)\n{1: 0.25, 4: 0.0, 2: 0.25, 3: 0.5}\n</code></pre>\n<p><strong>Case 3</strong></p>\n<ul>\n<li><em>q</em>=5 for node 2, <em>q</em>=10 for node 4;</li>\n<li>nodes have the same size (<em>size</em> = 1).</li>\n</ul>\n<pre><code>&gt;&gt;&gt; d = dict()\n&gt;&gt;&gt; d[2] = 5\n&gt;&gt;&gt; d[4] = 10\n\n&gt;&gt;&gt; slric.sric(G, dq=d, size=1) # SRIC\n{1: 0.2916666666666667, 4: 0.0, 2: 0.20833333333333337, 3: 0.5}\n\n&gt;&gt;&gt; slric.lric(G, dq=d, size=1, models='max') # LRIC (Max)\n{1: 0.24137931034482757, 4: 0.0, 2: 0.17241379310344826, 3: 0.5862068965517241}\n</code></pre>\n<h2>Write LRIC results to file</h2>\n<pre><code>&gt;&gt;&gt; from slric import lric, GraphQW\n&gt;&gt;&gt; ranking, lric_graph = lric(G, q=60, size=1, models=['max', 'maxmin'], data=TRUE)\n&gt;&gt;&gt; GraphQW.write_centrality(lric_graph, 'output.txt', separator=';', mode='w')\n</code></pre>\n<h2>Additional features</h2>\n<ol>\n<li>If nodes size (<em>size</em>) is not defined, then <em>size</em> = weighted out-degree;</li>\n<li>Similarly to threshold of influence (<em>q</em>), nodes size can be of dict() type;</li>\n<li>Maximal group size can be limited using '<em>group_size</em>' parameter (by default, <em>group_size</em>=4);</li>\n<li>Maximal indirect influence limit can be defined using '<em>limpath</em>' parameter (by default, <em>limpath</em>=3);</li>\n<li>If LRIC version (<em>models</em>) is not defined, then LRIC (Max) is calculated by default (<em>models='max'</em> ).</li>\n</ol>\n<h2>License</h2>\n<p>BSD 3-Clause License</p>\n<p>Copyright (c) 2019. Fuad Aleskerov, Natalia Meshcheryakova, Sergey Shvydun.</p>\n<p>All rights reserved.</p>\n\n          </div>"}, "last_serial": 6182198, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "0495a823033f1e2aec23de4fc765c9c3", "sha256": "12a53d0a23cad57a16b3ca0d758d188a9994d2984c8d2c716de0b14dbfaeea35"}, "downloads": -1, "filename": "slric-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0495a823033f1e2aec23de4fc765c9c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12619, "upload_time": "2019-06-03T21:43:05", "upload_time_iso_8601": "2019-06-03T21:43:05.541140Z", "url": "https://files.pythonhosted.org/packages/5f/b3/e7feb5ac3475343e5170b623299507a9329adf859b381f669994e0bc6616/slric-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9252cf664eaabffca88f9d49a4886dc5", "sha256": "8ecd384f3f9f653398011ed95f6f99c5c9d4e259f77bd4c9453042143faa7449"}, "downloads": -1, "filename": "slric-1.1.1.tar.gz", "has_sig": false, "md5_digest": "9252cf664eaabffca88f9d49a4886dc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11247, "upload_time": "2019-06-03T21:43:07", "upload_time_iso_8601": "2019-06-03T21:43:07.069879Z", "url": "https://files.pythonhosted.org/packages/45/36/1053bf1b6a3df95fe2919b7903e31c706b3e41e00e7052b844d97a9eef8b/slric-1.1.1.tar.gz", "yanked": false}], "1.1.5.1": [{"comment_text": "", "digests": {"md5": "2f209752f3da12df34d961b224c6d9ad", "sha256": "d1cbbcc9e26a7f9a17a9e0c0db99b6000b13fefcac716f19edeef7cba1eaa14e"}, "downloads": -1, "filename": "slric-1.1.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f209752f3da12df34d961b224c6d9ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16662, "upload_time": "2019-11-22T16:17:56", "upload_time_iso_8601": "2019-11-22T16:17:56.712010Z", "url": "https://files.pythonhosted.org/packages/f0/54/136a881284ec21a299a10c9b8efe32376c0520446a5b8f747e96eda2c722/slric-1.1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cca284960d32039aefc4861adef6317b", "sha256": "8687785d997cb5913277ad2baab743324b38e81d7d44b81de8a4b5cbc3219d84"}, "downloads": -1, "filename": "slric-1.1.5.1.tar.gz", "has_sig": false, "md5_digest": "cca284960d32039aefc4861adef6317b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14770, "upload_time": "2019-11-22T16:17:58", "upload_time_iso_8601": "2019-11-22T16:17:58.050781Z", "url": "https://files.pythonhosted.org/packages/f3/e4/edc83c7580442cd31192414428bdddb43a13a5f011ce887c2b33e3a8a19e/slric-1.1.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f209752f3da12df34d961b224c6d9ad", "sha256": "d1cbbcc9e26a7f9a17a9e0c0db99b6000b13fefcac716f19edeef7cba1eaa14e"}, "downloads": -1, "filename": "slric-1.1.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f209752f3da12df34d961b224c6d9ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16662, "upload_time": "2019-11-22T16:17:56", "upload_time_iso_8601": "2019-11-22T16:17:56.712010Z", "url": "https://files.pythonhosted.org/packages/f0/54/136a881284ec21a299a10c9b8efe32376c0520446a5b8f747e96eda2c722/slric-1.1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cca284960d32039aefc4861adef6317b", "sha256": "8687785d997cb5913277ad2baab743324b38e81d7d44b81de8a4b5cbc3219d84"}, "downloads": -1, "filename": "slric-1.1.5.1.tar.gz", "has_sig": false, "md5_digest": "cca284960d32039aefc4861adef6317b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14770, "upload_time": "2019-11-22T16:17:58", "upload_time_iso_8601": "2019-11-22T16:17:58.050781Z", "url": "https://files.pythonhosted.org/packages/f3/e4/edc83c7580442cd31192414428bdddb43a13a5f011ce887c2b33e3a8a19e/slric-1.1.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:13 2020"}