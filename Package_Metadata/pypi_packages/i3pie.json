{"info": {"author": "Giacomo Comitti", "author_email": "dev@gcomit.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# i3pie\n\ni3wm ipc library for python.\n\n## Installation\n\n```\npip install i3pie\n```\n\n## Usage\n\n```python\n>>> import i3pie\n>>> with i3pie.Connection() as i3:\n...     tree = i3.get_tree()\n...     tree._pprint()\n...\ntype='root' name='root'\n\u251c\u2500 type='output' name='HDMI-A-0'\n\u2502  \u251c\u2500 type='dockarea' name='bottomdock'\n\u2502  \u251c\u2500 type='con' name='content'\n\u2502  \u2502  \u251c\u2500 type='workspace' name='2'\n\u2502  \u2502  \u2502  \u2514\u2500 type='con'\n\u2502  \u2502  \u2502     \u2514\u2500 window=50331658 type='con' class='Nemo'\n\u2502  \u2502  \u2514\u2500 type='workspace' name='1'\n\u2502  \u2502     \u2514\u2500 type='con'\n\u2502  \u2502        \u251c\u2500 window=37748745 type='con' class='URxvt'\n\u2502  \u2502        \u2514\u2500 window=25165827 type='con' class='firefox'\n\u2502  \u2514\u2500 type='dockarea' name='topdock'\n\u2502     \u2514\u2500 window=23068674 type='con' class='Polybar'\n\u2514\u2500 type='output' name='__i3'\n   \u2514\u2500 type='con' name='content'\n      \u2514\u2500 type='workspace' name='__i3_scratch'\n         \u2514\u2500 type='floating_con'\n            \u2514\u2500 window=44040194 type='con' class='mpv'\n```\n\n### Sending commands\n```python\n>>> import i3pie\n>>> i3 = i3pie.Connection()\n>>> tree = i3.get_tree()\n\n>>> focused = tree.focused_window()\n>>> focused.command('move to workspace 2')\nCommandReply(success=True)\n\n>>> windows = list(tree.current_workspace().windows())\n>>> i3.command('kill', windows)\nCommandReply(success=True)\n```\n\n### Working with the tree\n```python\n>>> import i3pie\n>>> i3 = i3pie.Connection()\n>>> tree = i3.get_tree()\n\n>>> focused = tree.focused_window()\n>>> print(focused)\n<Container type='con' class='URxvt'>\n\n>>> focused.workspace()\nContainer(type='workspace', name='1')\n\n>>> focused.output()\nContainer(type='output', name='HDMI-A-0')\n\n>>> tree = focused.root()\n>>> print(tree)\n<Container type='root' name='root'>\n\n>>> list(tree.workspaces())\n[Container(type='workspace', name='1'), Container(type='workspace', name='2')]\n\n>>> list(tree.workspaces(scratchpad=True))\n[Container(type='workspace', name='__i3_scratch'), Container(type='workspace', name='1'), Container(type='workspace', name='2')]\n\n>>> scratchpad = tree.scratchpad()\n>>> print(scratchpad)\n<Container type='workspace' name='__i3_scratch'>\n\n>>> list(scratchpad.windows())\n[Container(window=44040194, type='con', class='mpv')]\n\n>>> print(list(scratchpad.windows()))\n[Container(window=44040194, type='con', class='mpv')]\n\n>>> list(tree.outputs())\n[Container(type='output', name='HDMI-A-0')]\n\n>>> tree.find_window(fn=lambda con: 'Firefox' in con.name)\nContainer(window=25165827, type='con', class='firefox')\n\n>>> tree.find_workspace(fn=lambda w: w.num == 2)\nContainer(type='workspace', name='2')\n\n>>> for win in tree.windows():\n...     if win.window_class == 'URxvt':\n...             print(win)\n...\n<Container type='con' class='URxvt'>\n\n>>> list(tree.filter(fn=lambda con: con.is_window and con.window_class == 'mpv'))\n[]\n\n>>> list(tree.filter(fn=lambda con: con.is_window and con.window_class == 'mpv', i3=True))\n[Container(window=44040194, type='con', class='mpv')]\n```\n\n### Getting workspaces and outputs\n```python\n>>> import i3pie\n>>> i3 = i3pie.Connection()\n>>> for workspace in i3.get_workspaces():\n...     print(workspace.name)\n...\n1\n2\n\n>>> for output in i3.get_outputs():\n...     print(output.name)\n...\nHDMI-A-0\nxroot-0\n```\n\n### Getting marks and binding modes\n```python\n>>> import i3pie\n>>> i3 = i3pie.Connection()\n\n>>> print(i3.get_marks())\n<MarksReply ['a', '_mark']>\n\n>>> print(i3.get_binding_modes())\n<BindingModesReply ['open', 'i3', 'default']>\n```\n\n### Subscribe to events\n```python\nfrom i3pie import Event, Connection\n\ndef callback(self, conn, event, data):\n    window = data['container']\n    if data['change'] != 'new' or not window:\n\t     return\n    window.command('floating enable')\n\nwith Connection() as i3:\n    i3.subscribe(Event.WINDOW, callback)\n    i3.listen()\n```\n\n### Examples\n\n#### Cycling workspaces\n```python\nimport i3pie, argparse\n\ndef main(i3):\n\n    parser = argparse.ArgumentParser(description=\"Cycle i3 workspaces\")\n    group = parser.add_mutually_exclusive_group(required=True)\n    group.add_argument(\"-next\", action=\"store_true\", help=\"focus next workspace\")\n    group.add_argument(\"-prev\", action=\"store_true\", help=\"focus previous workspace\")\n    args = parser.parse_args()\n\n    tree = i3.get_tree()\n    workspaces = list(tree.workspaces())\n    current = tree.current_workspace()\n\n    idx = workspaces.index(current)\n    direction = 1 if args.next else -1\n    target = workspaces[(idx + direction) % len(workspaces)]\n    i3.command(f'workspace \"{target.name}\"')\n\nif __name__ == \"__main__\":\n    with i3pie.Connection() as i3:\n        main(i3)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gcmt/i3pie", "keywords": "i3 i3wm", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "i3pie", "package_url": "https://pypi.org/project/i3pie/", "platform": "", "project_url": "https://pypi.org/project/i3pie/", "project_urls": {"Homepage": "https://github.com/gcmt/i3pie"}, "release_url": "https://pypi.org/project/i3pie/1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "IPC library for i3wm", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>i3pie</h1>\n<p>i3wm ipc library for python.</p>\n<h2>Installation</h2>\n<pre><code>pip install i3pie\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">i3pie</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">i3pie</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">i3</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_tree</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">_pprint</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'root'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'root'</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'output'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'HDMI-A-0'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u251c\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'dockarea'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'bottomdock'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u251c\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'content'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>  <span class=\"err\">\u251c\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'2'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>  <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>     <span class=\"err\">\u2514\u2500</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">50331658</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'Nemo'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>  <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'1'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>     <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>        <span class=\"err\">\u251c\u2500</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">37748745</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'URxvt'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2502</span>        <span class=\"err\">\u2514\u2500</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">25165827</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'firefox'</span>\n<span class=\"err\">\u2502</span>  <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'dockarea'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'topdock'</span>\n<span class=\"err\">\u2502</span>     <span class=\"err\">\u2514\u2500</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">23068674</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'Polybar'</span>\n<span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'output'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'__i3'</span>\n   <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'content'</span>\n      <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'__i3_scratch'</span>\n         <span class=\"err\">\u2514\u2500</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'floating_con'</span>\n            <span class=\"err\">\u2514\u2500</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">44040194</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'mpv'</span>\n</pre>\n<h3>Sending commands</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">i3pie</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i3</span> <span class=\"o\">=</span> <span class=\"n\">i3pie</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_tree</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">focused</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">focused_window</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">focused</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'move to workspace 2'</span><span class=\"p\">)</span>\n<span class=\"n\">CommandReply</span><span class=\"p\">(</span><span class=\"n\">success</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">windows</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">current_workspace</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">windows</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'kill'</span><span class=\"p\">,</span> <span class=\"n\">windows</span><span class=\"p\">)</span>\n<span class=\"n\">CommandReply</span><span class=\"p\">(</span><span class=\"n\">success</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h3>Working with the tree</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">i3pie</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i3</span> <span class=\"o\">=</span> <span class=\"n\">i3pie</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_tree</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">focused</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">focused_window</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">focused</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Container</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'URxvt'</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">focused</span><span class=\"o\">.</span><span class=\"n\">workspace</span><span class=\"p\">()</span>\n<span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'1'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">focused</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">()</span>\n<span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'HDMI-A-0'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">focused</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Container</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'root'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'root'</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">workspaces</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'2'</span><span class=\"p\">)]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">workspaces</span><span class=\"p\">(</span><span class=\"n\">scratchpad</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'__i3_scratch'</span><span class=\"p\">),</span> <span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'2'</span><span class=\"p\">)]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">scratchpad</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">scratchpad</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">scratchpad</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Container</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'__i3_scratch'</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">scratchpad</span><span class=\"o\">.</span><span class=\"n\">windows</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">44040194</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span><span class=\"p\">,</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'mpv'</span><span class=\"p\">)]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">scratchpad</span><span class=\"o\">.</span><span class=\"n\">windows</span><span class=\"p\">()))</span>\n<span class=\"p\">[</span><span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">44040194</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span><span class=\"p\">,</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'mpv'</span><span class=\"p\">)]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">outputs</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'HDMI-A-0'</span><span class=\"p\">)]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">find_window</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">con</span><span class=\"p\">:</span> <span class=\"s1\">'Firefox'</span> <span class=\"ow\">in</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">25165827</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span><span class=\"p\">,</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'firefox'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">find_workspace</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'workspace'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'2'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">win</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">windows</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"k\">if</span> <span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">window_class</span> <span class=\"o\">==</span> <span class=\"s1\">'URxvt'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>             <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">win</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Container</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'URxvt'</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">con</span><span class=\"p\">:</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">is_window</span> <span class=\"ow\">and</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">window_class</span> <span class=\"o\">==</span> <span class=\"s1\">'mpv'</span><span class=\"p\">))</span>\n<span class=\"p\">[]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">con</span><span class=\"p\">:</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">is_window</span> <span class=\"ow\">and</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">window_class</span> <span class=\"o\">==</span> <span class=\"s1\">'mpv'</span><span class=\"p\">,</span> <span class=\"n\">i3</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"n\">Container</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">44040194</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'con'</span><span class=\"p\">,</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s1\">'mpv'</span><span class=\"p\">)]</span>\n</pre>\n<h3>Getting workspaces and outputs</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">i3pie</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i3</span> <span class=\"o\">=</span> <span class=\"n\">i3pie</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">workspace</span> <span class=\"ow\">in</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_workspaces</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"mi\">1</span>\n<span class=\"mi\">2</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">output</span> <span class=\"ow\">in</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_outputs</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">HDMI</span><span class=\"o\">-</span><span class=\"n\">A</span><span class=\"o\">-</span><span class=\"mi\">0</span>\n<span class=\"n\">xroot</span><span class=\"o\">-</span><span class=\"mi\">0</span>\n</pre>\n<h3>Getting marks and binding modes</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">i3pie</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i3</span> <span class=\"o\">=</span> <span class=\"n\">i3pie</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_marks</span><span class=\"p\">())</span>\n<span class=\"o\">&lt;</span><span class=\"n\">MarksReply</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'_mark'</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_binding_modes</span><span class=\"p\">())</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BindingModesReply</span> <span class=\"p\">[</span><span class=\"s1\">'open'</span><span class=\"p\">,</span> <span class=\"s1\">'i3'</span><span class=\"p\">,</span> <span class=\"s1\">'default'</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Subscribe to events</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">i3pie</span> <span class=\"kn\">import</span> <span class=\"n\">Event</span><span class=\"p\">,</span> <span class=\"n\">Connection</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'container'</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'change'</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s1\">'new'</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">window</span><span class=\"p\">:</span>\n\t     <span class=\"k\">return</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'floating enable'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Connection</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">i3</span><span class=\"p\">:</span>\n    <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">WINDOW</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">)</span>\n    <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">()</span>\n</pre>\n<h3>Examples</h3>\n<h4>Cycling workspaces</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">i3pie</span><span class=\"o\">,</span> <span class=\"nn\">argparse</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">i3</span><span class=\"p\">):</span>\n\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Cycle i3 workspaces\"</span><span class=\"p\">)</span>\n    <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_mutually_exclusive_group</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"-next\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"focus next workspace\"</span><span class=\"p\">)</span>\n    <span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"-prev\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"focus previous workspace\"</span><span class=\"p\">)</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">get_tree</span><span class=\"p\">()</span>\n    <span class=\"n\">workspaces</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">workspaces</span><span class=\"p\">())</span>\n    <span class=\"n\">current</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">current_workspace</span><span class=\"p\">()</span>\n\n    <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">workspaces</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">)</span>\n    <span class=\"n\">direction</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">next</span> <span class=\"k\">else</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n    <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">workspaces</span><span class=\"p\">[(</span><span class=\"n\">idx</span> <span class=\"o\">+</span> <span class=\"n\">direction</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">workspaces</span><span class=\"p\">)]</span>\n    <span class=\"n\">i3</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'workspace \"</span><span class=\"si\">{</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">\"'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">i3pie</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">i3</span><span class=\"p\">:</span>\n        <span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">i3</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5736609, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "2e965c931ee0bf482771c1a1e69d13ca", "sha256": "107cd2bd8dbcde91964b5a701055748f53eaa5207e35fd7b95141031b7f66764"}, "downloads": -1, "filename": "i3pie-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2e965c931ee0bf482771c1a1e69d13ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16595, "upload_time": "2019-08-27T13:02:08", "upload_time_iso_8601": "2019-08-27T13:02:08.834786Z", "url": "https://files.pythonhosted.org/packages/da/6a/73a9c3ca2ef8ce1e17d0b6346202a20b233d948e33183518f48a2d0cb57c/i3pie-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a532e3e97fc22d3f16ac9a5db7654f7", "sha256": "d248df5d22ee4b06cd24ccd6088575bebd0a62be89b9bbabe1d49834ca7ef270"}, "downloads": -1, "filename": "i3pie-1.0.tar.gz", "has_sig": false, "md5_digest": "1a532e3e97fc22d3f16ac9a5db7654f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15901, "upload_time": "2019-08-27T13:02:10", "upload_time_iso_8601": "2019-08-27T13:02:10.345832Z", "url": "https://files.pythonhosted.org/packages/30/8c/65ffa589696e4f5c05fd202d513ce0445a4c05452f08fe80b482a4db2751/i3pie-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e965c931ee0bf482771c1a1e69d13ca", "sha256": "107cd2bd8dbcde91964b5a701055748f53eaa5207e35fd7b95141031b7f66764"}, "downloads": -1, "filename": "i3pie-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2e965c931ee0bf482771c1a1e69d13ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16595, "upload_time": "2019-08-27T13:02:08", "upload_time_iso_8601": "2019-08-27T13:02:08.834786Z", "url": "https://files.pythonhosted.org/packages/da/6a/73a9c3ca2ef8ce1e17d0b6346202a20b233d948e33183518f48a2d0cb57c/i3pie-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a532e3e97fc22d3f16ac9a5db7654f7", "sha256": "d248df5d22ee4b06cd24ccd6088575bebd0a62be89b9bbabe1d49834ca7ef270"}, "downloads": -1, "filename": "i3pie-1.0.tar.gz", "has_sig": false, "md5_digest": "1a532e3e97fc22d3f16ac9a5db7654f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15901, "upload_time": "2019-08-27T13:02:10", "upload_time_iso_8601": "2019-08-27T13:02:10.345832Z", "url": "https://files.pythonhosted.org/packages/30/8c/65ffa589696e4f5c05fd202d513ce0445a4c05452f08fe80b482a4db2751/i3pie-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:21 2020"}