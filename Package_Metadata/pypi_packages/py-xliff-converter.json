{"info": {"author": "Roman Miroshnychenko", "author_email": "roman1972@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Text Processing :: Linguistic"], "description": "Python XLIFF Converter\n######################\n\nThis package provides a set of utilities for converting rich-text markup files\nto `OASIS XLIFF`_ translatable format. Currently only HTML <=> XLIFF 1.2 conversion\nis supported.\n\nInstallation\n============\n\nPython XLIFF Converter can be installed using pip::\n\n  pip install py-xliff-converter\n\nUsage\n=====\n\nHTML => XLIFF\n-------------\n\nCommand line::\n\n  html2xliff <myfile>.html\n\nThis command will create ``<myfile>.xlf`` file that can be translated using most\ncommon online and offline CAT tools: Trados, memoQ, Transifex etc.\n\nAPI:\n\n.. code-block:: python\n\n  from xliff_converter.html_parser import convert_html\n  ...\n  with open(html_filename, 'r', encoding='utf-8') as fo:\n      html = fo.read()\n  xliff = convert_html(html, html_filename)\n  ...\n\nThe ``convert_html(...)`` function returns translatable XLIFF document as ``bytes``\nstring encoded in UTF-8.\n\nXLIFF => HTML\n-------------\n\nCommand line::\n\n  xliff2html <myfile>.xlf\n\nThis command will create ``<myfile>_<lang>.html`` file containing translated\ncontent of the source HTML file. ``<lang>`` is the language code of a target\nlanguage.\n\nAPI:\n\n.. code-block:: python\n\n  from xliff_converter.html_rebuilder import rebuild_html\n  ...\n  with open(xliff_filename, 'r', encoding='utf-8') as fo:\n      xliff = fo.read()\n  filename, html = rebuild_html(xliff)\n\nThe ``rebuild_html(...)`` function returns a tuple (named tuple) containing\nthe name of a translated HTML file and its contents as ``str``.\n\nNotes\n=====\n\n- Currently Python XLIFF Converter supports only English as a source language.\n- Translatable text is segmented by sentences using `NLTK`_ sentence tokenizer.\n- The HTML converter accepts partial HTML markup, e.g. ``<body>`` tag\n  contents and even plain text.\n- ``<br>`` tags are treated as translation segment delimiters.\n- ``<pre><code>...</code></pre>`` blocks are ignored.\n\nTo do\n=====\n\n- More file formats.\n- XLIFF 2.0 support.\n\n.. _OASIS XLIFF: https://en.wikipedia.org/wiki/XLIFF\n.. _NLTK: https://www.nltk.org\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/romanvm/py-xliff-converter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-xliff-converter", "package_url": "https://pypi.org/project/py-xliff-converter/", "platform": "", "project_url": "https://pypi.org/project/py-xliff-converter/", "project_urls": {"Homepage": "https://github.com/romanvm/py-xliff-converter"}, "release_url": "https://pypi.org/project/py-xliff-converter/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Utilities for converting rich text markup files to XLIFF format", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a set of utilities for converting rich-text markup files\nto <a href=\"https://en.wikipedia.org/wiki/XLIFF\" rel=\"nofollow\">OASIS XLIFF</a> translatable format. Currently only HTML &lt;=&gt; XLIFF 1.2 conversion\nis supported.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Python XLIFF Converter can be installed using pip:</p>\n<pre>pip install py-xliff-converter\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"html-xliff\">\n<h3>HTML =&gt; XLIFF</h3>\n<p>Command line:</p>\n<pre>html2xliff &lt;myfile&gt;.html\n</pre>\n<p>This command will create <tt><span class=\"pre\">&lt;myfile&gt;.xlf</span></tt> file that can be translated using most\ncommon online and offline CAT tools: Trados, memoQ, Transifex etc.</p>\n<p>API:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xliff_converter.html_parser</span> <span class=\"kn\">import</span> <span class=\"n\">convert_html</span>\n<span class=\"o\">...</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">html_filename</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">fo</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">xliff</span> <span class=\"o\">=</span> <span class=\"n\">convert_html</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">,</span> <span class=\"n\">html_filename</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<p>The <tt><span class=\"pre\">convert_html(...)</span></tt> function returns translatable XLIFF document as <tt>bytes</tt>\nstring encoded in UTF-8.</p>\n</div>\n<div id=\"xliff-html\">\n<h3>XLIFF =&gt; HTML</h3>\n<p>Command line:</p>\n<pre>xliff2html &lt;myfile&gt;.xlf\n</pre>\n<p>This command will create <tt><span class=\"pre\">&lt;myfile&gt;_&lt;lang&gt;.html</span></tt> file containing translated\ncontent of the source HTML file. <tt>&lt;lang&gt;</tt> is the language code of a target\nlanguage.</p>\n<p>API:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xliff_converter.html_rebuilder</span> <span class=\"kn\">import</span> <span class=\"n\">rebuild_html</span>\n<span class=\"o\">...</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">xliff_filename</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n    <span class=\"n\">xliff</span> <span class=\"o\">=</span> <span class=\"n\">fo</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">rebuild_html</span><span class=\"p\">(</span><span class=\"n\">xliff</span><span class=\"p\">)</span>\n</pre>\n<p>The <tt><span class=\"pre\">rebuild_html(...)</span></tt> function returns a tuple (named tuple) containing\nthe name of a translated HTML file and its contents as <tt>str</tt>.</p>\n</div>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>Currently Python XLIFF Converter supports only English as a source language.</li>\n<li>Translatable text is segmented by sentences using <a href=\"https://www.nltk.org\" rel=\"nofollow\">NLTK</a> sentence tokenizer.</li>\n<li>The HTML converter accepts partial HTML markup, e.g. <tt>&lt;body&gt;</tt> tag\ncontents and even plain text.</li>\n<li><tt>&lt;br&gt;</tt> tags are treated as translation segment delimiters.</li>\n<li><tt><span class=\"pre\">&lt;pre&gt;&lt;code&gt;...&lt;/code&gt;&lt;/pre&gt;</span></tt> blocks are ignored.</li>\n</ul>\n</div>\n<div id=\"to-do\">\n<h2>To do</h2>\n<ul>\n<li>More file formats.</li>\n<li>XLIFF 2.0 support.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4215815, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ad57bfd4dc4d7ce943fc776b82e85747", "sha256": "deb46a207f9c69bfae32c7aaaddbdc5798e334fd4c7151a759283d843ceda514"}, "downloads": -1, "filename": "py-xliff-converter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ad57bfd4dc4d7ce943fc776b82e85747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8303, "upload_time": "2018-08-28T16:43:16", "upload_time_iso_8601": "2018-08-28T16:43:16.175526Z", "url": "https://files.pythonhosted.org/packages/47/a3/11d1f99446fc9b6f3f4c9bc43bb6bde7aad414cd532259408ca53ad7b622/py-xliff-converter-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad57bfd4dc4d7ce943fc776b82e85747", "sha256": "deb46a207f9c69bfae32c7aaaddbdc5798e334fd4c7151a759283d843ceda514"}, "downloads": -1, "filename": "py-xliff-converter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ad57bfd4dc4d7ce943fc776b82e85747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8303, "upload_time": "2018-08-28T16:43:16", "upload_time_iso_8601": "2018-08-28T16:43:16.175526Z", "url": "https://files.pythonhosted.org/packages/47/a3/11d1f99446fc9b6f3f4c9bc43bb6bde7aad414cd532259408ca53ad7b622/py-xliff-converter-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:56 2020"}