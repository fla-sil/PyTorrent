{"info": {"author": "Behzad B. Mokhtari", "author_email": "behzad.public@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Framework :: AsyncIO", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Internet"], "description": "# Phlasch\n\n[![build](https://travis-ci.com/bbmokhtari/phlasch.svg?branch=master)](https://travis-ci.com/bbmokhtari/phlasch)\n[![pypi](https://img.shields.io/badge/pypi-package-f9d35f.svg)](https://pypi.org/project/phlasch/)\n[![docker](https://img.shields.io/badge/docker-image-1388e7.svg)](https://hub.docker.com/r/bbmokhtari/phlasch)\n\nA url shortener.\n\n## Support the project\n\nIf you liked this project please consider giving it a star! \u2b50\ufe0f\n\n## Goal\n\nPhlasch is a url shortener. It aims to be easy-to-use, flexible and\nperformant. As a result of this philosophy, it has been designed to be usable\nas a docker image, a program, or an aiohttp library.\n\n## Docker\n\nThere are two approaches to deploying Phlasch.\n\n### Unified\n\nAn all in one approach, which means the url shortener, redirector and\nthe stats apps are all deployed as part of one service.\n\nFor example:\n\n1. Deploy this `docker-compose.yml` file.\n\n   ``` docker-compose.yml\n   version: \"3.7\"\n\n   services:\n\n     database:\n       image: postgres\n       restart: always\n       environment:\n         POSTGRES_PASSWORD: postgres\n\n     server:\n       image: bbmokhtari/phlasch\n       restart: always\n       ports:\n         - 8080:8080\n       environment:\n         PHLASCH_DB_HOST: database\n         PHLASCH_DB_PASSWORD: postgres\n   ```\n\n2. Navigate to http://localhost:8080/api/doc to see what APIs are available.\n\n   ![image](https://raw.githubusercontent.com/bbmokhtari/phlasch/master/docs/_static/swagger_all.png)\n\n### Divided\n\nA separated approach, which means the url shortener, redirector and\nthe stats apps are all deployed separately as different services.\n\nFor example:\n\n1. Deploy this `docker-compose.yml` file.\n\n   ``` docker-compose.yml\n   version: \"3.7\"\n\n   services:\n\n     database:\n       image: postgres\n       restart: always\n       environment:\n         POSTGRES_PASSWORD: postgres\n\n     shortener:\n       image: bbmokhtari/phlasch\n       command: ./start-shortener.sh\n       restart: always\n       ports:\n         - 8080:8080\n       environment:\n         PHLASCH_DB_HOST: database\n         PHLASCH_DB_PASSWORD: postgres\n         PHLASCH_SHORTENER_ORIGIN: http://localhost:9090\n\n     redirector:\n       image: bbmokhtari/phlasch\n       command: ./start-redirector.sh\n       restart: always\n       ports:\n         - 9090:8080\n       environment:\n         PHLASCH_DB_HOST: database\n         PHLASCH_DB_PASSWORD: postgres\n\n     stats:\n       image: bbmokhtari/phlasch\n       command: ./start-stats.sh\n       restart: always\n       ports:\n         - 7070:8080\n       environment:\n         PHLASCH_DB_HOST: database\n         PHLASCH_DB_PASSWORD: postgres\n         PHLASCH_STATS_ORIGIN: http://localhost:9090\n   ```\n\n2. Navigate to http://localhost:8080/api/doc to see what APIs are available.\n\n   ![image](https://raw.githubusercontent.com/bbmokhtari/phlasch/master/docs/_static/swagger_shortener.png)\n\n3. Navigate to http://localhost:9090/api/doc to see what APIs are available.\n\n   ![image](https://raw.githubusercontent.com/bbmokhtari/phlasch/master/docs/_static/swagger_redirector.png)\n\n4. Navigate to http://localhost:7070/api/doc to see what APIs are available.\n\n   ![image](https://raw.githubusercontent.com/bbmokhtari/phlasch/master/docs/_static/swagger_stats.png)\n\n## Requirements\n\n- Python (\\>=3.7)\n\n## Installation\n\n1. Make sure the OS has the following prerequisites:\n\n   - build essentials packages (gcc, etc.)\n   - postgresql development packages (postgresql-dev, etc.)\n   - libffi development packages (libffi-dev, etc.)\n\n2. Upgrade `pip`, `setuptools` and `wheel`.\n\n   ``` bash\n   $ pip install --upgrade pip setuptools wheel\n   ```\n\n3. Install Phlasch using pip:\n\n   ``` bash\n   $ pip install phlasch\n   ```\n\n## Configuration\n\nWhen Phlasch is installed, the following apps are made available:\n\n- DB: to store the links.\n- Shortener: to shorten the links.\n- Redirector: to redirect to the links.\n- Stats: to get the stats of the links.\n\nEach app can be configured using its own special environment variables.\n\n### DB\n\nDB is the app which stores the links.\nit uses the following environment variables:\n\n- **PHLASCH_DB_BACKEND**\n\n  The database backend to use. e.g. postgresql, sqlite, etc.\n\n  Default: postgresql\n\n  *Note*: Currently only postgresql is supported due to aiopg support.\n\n- **PHLASCH_DB_DRIVER**\n\n  The database driver to use. e.g. psycopg2, pg8000, etc.\n\n  Default: psycopg2\n\n  *Note*: Currently only psycopg2 is supported due to aiopg support.\n\n- **PHLASCH_DB_USER**\n\n  The database user.\n\n  Default: postgres\n\n- **PHLASCH_DB_PASSWORD**\n\n  The database password.\n\n  Default: *nothing*\n\n- **PHLASCH_DB_HOST**\n\n  The database host.\n\n  Default: localhost\n\n- **PHLASCH_DB_PORT**\n\n  The database port.\n\n  Default: 5432\n\n- **PHLASCH_DB_NAME**\n\n  The database name.\n\n  Default: postgres\n\n- **PHLASCH_DB_URL**\n\n  The database url.\n\n  Default: *see note*\n\n  *Note*: If set, it will override all the other DB configurations, otherwise\n  it will be set automatically using the other DB configurations.\n\n- **PHLASCH_DB_ENGINE**\n\n  The aiohttp app's engine key.\n\n  Default: phlasch\n\n  If you are not using Phlasch as an aiohttp lib don't mind this, but\n  if you are, this is the app key which the database engine is set on after\n  creation.\n\n### Shortener\n\nShortener is the app which shortens the links.\nit uses the following environment variables:\n\n- **PHLASCH_SHORTENER_BASE**\n\n  The characters to use in the shortened url.\n\n  Default: 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n  Some people prefer not to use the (O, o, 0), (I, l, 1) or some\n  similar-looking characters at all.\n\n  **Warning**: ONCE SET, DO NOT CHANGE THIS! EVER!\n\n- **PHLASCH_SHORTENER_SHORTEN_URL**\n\n  The url on which the users can shorten links.\n\n  Default: shortener/shorten\n\n  *Note*: It is set as a slashed url so that it can't be mistaken with a\n  shortened url.\n\n- **PHLASCH_SHORTENER_ORIGIN**\n\n  The origin of the shortened url.\n\n  Default: *nothing*\n\n  In case the Redirector app is deployed on another host or domain, set\n  this to the origin of that host or domain.\n\n  *Note*: If empty, it will use the origin of the Shortener host or domain.\n\n### Redirector\n\nRedirector is the app which redirects to the links. it uses no\nenvironment variables.\n\n### Stats\n\nStats is the app which is used to get the stats of the links.\nit uses the following environment variables:\n\n- **PHLASCH_STATS_LIST_URL**\n\n  The url on which the users can list the stats of all links.\n\n  Default: stats/list\n\n  *Note*: It is set as a slashed url so that it can't be mistaken with a\n  shortened url.\n\n- **PHLASCH_STATS_RETRIEVE_URL**\n\n  The url on which the users can retrieve the stats of a link.\n\n  Default: stats/retrieve\n\n  *Note*: It is set as a slashed url so that it can't be mistaken with a\n  shortened url.\n\n- **PHLASCH_STATS_ORIGIN**\n\n  The origin of the shortened url.\n\n  Default: *nothing*\n\n  In case the Redirector app is deployed on another host or domain, set\n  this to the origin of that host or domain.\n\n  *Note*: If empty, it will use the origin of the Stats host or domain.\n\n## CLI: Command Line Interface\n\nWhen the configurations are in place, the command line interface can be used\neffectively.\n\nTo see what is available, run the cli with the `-h` option:\n\n``` bash\npython -m phlasch -h\n```\n\nIt will print something like this:\n\n```\nusage: phlasch [-h] {run,history,revision,upgrade,downgrade} ...\n\nA url shortener.\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAction:\n  The action to take.\n\n  {run,history,revision,upgrade,downgrade}\n    run                 Run app.\n    history             Log revisions.\n    revision            Make revision.\n    upgrade             Upgrade to revision.\n    downgrade           Downgrade to revision.\n```\n\nAs seen above, the command line interface provides some actions which can be\ntaken.\n\n### Migrators\n\nPhlasch database migrations are being tracked using revisions. Each time the\ndatabase schema is changed in any app by Phlasch developers a revision is\ncreated in that app. Revisions represent the points in which the database\nschema was changed, as a result we can upgrade or downgrade to any revision\nat any time.\n\n#### Upgrade\n\nEach time Phlasch is installed or is updated, it is a good idea to upgrade\nto the latest revision (or head) for each database-using app, in the current\ncase: only the DB app.\n\nTo upgrade the DB app to the latest revision (head), run:\n\n``` bash\npython -m phlasch upgrade db head\n```\n\nIt will print something like this:\n\n```\nINFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running upgrade  -> bfd35ebcbeb5, added link table\n```\n\n#### History\n\nTo log the revisions of the DB app, run:\n\n``` bash\npython -m phlasch history db\n```\n\nIt will print something like this:\n\n```\nRev: bfd35ebcbeb5 (head)\nParent: <base>\nPath: /app/phlasch/db/migrations/versions/bfd35ebcbeb5_added_link_table.py\n\n    added link table\n\n    Revision ID: bfd35ebcbeb5\n    Revises: \n    Create Date: 2020-01-30 21:29:35.727874+00:00\n\n```\n\n#### Downgrade\n\nIf we encounter any weird database situations after an upgrade we can always\ndowngrade to the previous revisions.\n\nTo downgrade the DB app to the none revision (base), run:\n\n``` bash\npython -m phlasch downgrade db base\n```\n\nIt will print something like this:\n\n```\nINFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running downgrade bfd35ebcbeb5 -> , added link table\n```\n\n**WARNING**: SETTING DOWNGRADE TO BASE WILL DELETE EVERYTHING AND DROP ALL TABLES!\n\n#### Revision\n\nIf you are contributing to Phlasch and happen to change database schemas,\nyou can create a revision for that change.\n\nTo create a revision for the DB app, run:\n\n``` bash\npython -m phlasch revision db \"some message\"\n```\n\nIt will print something like this:\n\n```\nINFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.ddl.postgresql] ...\n  Generating /app/phlasch/db/migrations/versions/1fb7a742b953_some_message.py ...  done\n```\n\n### Runners\n\nAfter migrating to the desired revision, either a single app or all apps can\nbe run.\n\n#### Aiohttp\n\nApps can be run using the aiohttp server.\n\nTo run all apps, run:\n\n``` bash\npython -m phlasch run all\n```\n\nIt will print something like this:\n\n```\n======== Running on http://0.0.0.0:8080 ========\n(Press CTRL+C to quit)\n```\n\nNow you can navigate to http://localhost:8080/api/doc to see what\nAPIs are available!\n\n![image](https://raw.githubusercontent.com/bbmokhtari/phlasch/master/docs/_static/swagger_all.png)\n\nTo run a single app, run:\n\n``` bash\npython -m phlasch run ${app_name}\n```\n\nIt will print something like this:\n\n```\n======== Running on http://0.0.0.0:8080 ========\n(Press CTRL+C to quit)\n```\n\n#### Gunicorn\n\nApps can be run using the Gunicorn wsgi server.\n\nTo run all apps, run:\n\n``` bash\ngunicorn phlasch.runners:get_all_runnable \\\n    --bind 0.0.0.0:8080 \\\n    --worker-class aiohttp.GunicornWebWorker\n```\n\nIt will print something like this:\n\n```\n[2020-02-03 03:59:38 +0330] [80163] [INFO] Starting gunicorn 20.0.4\n[2020-02-03 03:59:38 +0330] [80163] [INFO] Listening at: http://0.0.0.0:8080 (80163)\n[2020-02-03 03:59:38 +0330] [80163] [INFO] Using worker: aiohttp.GunicornWebWorker\n[2020-02-03 03:59:38 +0330] [80166] [INFO] Booting worker with pid: 80166\n```\n\nNow you can navigate to http://localhost:8080/api/doc to see what\nAPIs are available!\n\n![image](https://raw.githubusercontent.com/bbmokhtari/phlasch/master/docs/_static/swagger_all.png)\n\nTo run a single app, run:\n\n``` bash\ngunicorn phlasch.runners:get_${app_name}_runnable \\\n    --bind 0.0.0.0:8080 \\\n    --worker-class aiohttp.GunicornWebWorker\n```\n\nIt will print something like this:\n\n```\n[2020-02-03 04:01:13 +0330] [80251] [INFO] Starting gunicorn 20.0.4\n[2020-02-03 04:01:13 +0330] [80251] [INFO] Listening at: http://0.0.0.0:8080 (80251)\n[2020-02-03 04:01:13 +0330] [80251] [INFO] Using worker: aiohttp.GunicornWebWorker\n[2020-02-03 04:01:13 +0330] [80254] [INFO] Booting worker with pid: 80254\n```\n\n## Aiohttp library\n\nIf the configurations are set, Phlasch can also be used as an aiohttp library.\n\n1. If you are using [alembic](https://alembic.sqlalchemy.org) as your\n   migration tool add the following lines to `alembic.ini`.\n\n   ``` .ini\n   [db]\n   script_location = %(location_of_phlasch_package)s/db/migrations\n   version_locations = %(location_of_phlasch_package)s/db/migrations/versions\n   ```\n\n   If not, simply run the [upgrade](#upgrade) command described above in the\n   migrators sections.\n\n2. Configure your app using the configure functions provided by the apps.\n\n   ``` python\n   from phlasch.db.configure import configure as configure_db\n   from phlasch.shortener.configure import configure as configure_shortener\n   from phlasch.stats.configure import configure as configure_stats\n   from phlasch.redirector.configure import configure as configure_redirector\n\n   # your app\n   app = Application()\n   ...\n   # please keep this configure order intact\n   configure_db(app)\n   configure_shortener(app)\n   configure_stats(app)\n   configure_redirector(app)\n   ...\n   ```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bbmokhtari/phlasch", "keywords": "url-shortener url-shortener-microservice", "license": "", "maintainer": "", "maintainer_email": "", "name": "phlasch", "package_url": "https://pypi.org/project/phlasch/", "platform": "", "project_url": "https://pypi.org/project/phlasch/", "project_urls": {"Documentation": "https://github.com/bbmokhtari/phlasch", "Homepage": "https://github.com/bbmokhtari/phlasch", "Source": "https://github.com/bbmokhtari/phlasch", "Tracker": "https://github.com/bbmokhtari/phlasch/issues"}, "release_url": "https://pypi.org/project/phlasch/1.0.2/", "requires_dist": ["aiohttp[speedups]", "aiohttp-swagger[performance]", "aiopg[sa]", "alembic", "gunicorn"], "requires_python": ">=3.7, <4", "summary": "A url shortener.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Phlasch</h1>\n<p><a href=\"https://travis-ci.com/bbmokhtari/phlasch\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44ab93a0ef00ef0400c49b332929f59a4d988942/68747470733a2f2f7472617669732d63692e636f6d2f62626d6f6b68746172692f70686c617363682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/phlasch/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d176ef106a885f359b19f51d5d863ce3aba8b3d3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707970692d7061636b6167652d6639643335662e737667\"></a>\n<a href=\"https://hub.docker.com/r/bbmokhtari/phlasch\" rel=\"nofollow\"><img alt=\"docker\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbae3db1c502ca1458639f55494be39a91b9c2cc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f636b65722d696d6167652d3133383865372e737667\"></a></p>\n<p>A url shortener.</p>\n<h2>Support the project</h2>\n<p>If you liked this project please consider giving it a star! \u2b50\ufe0f</p>\n<h2>Goal</h2>\n<p>Phlasch is a url shortener. It aims to be easy-to-use, flexible and\nperformant. As a result of this philosophy, it has been designed to be usable\nas a docker image, a program, or an aiohttp library.</p>\n<h2>Docker</h2>\n<p>There are two approaches to deploying Phlasch.</p>\n<h3>Unified</h3>\n<p>An all in one approach, which means the url shortener, redirector and\nthe stats apps are all deployed as part of one service.</p>\n<p>For example:</p>\n<ol>\n<li>\n<p>Deploy this <code>docker-compose.yml</code> file.</p>\n<pre>version: \"3.7\"\n\nservices:\n\n  database:\n    image: postgres\n    restart: always\n    environment:\n      POSTGRES_PASSWORD: postgres\n\n  server:\n    image: bbmokhtari/phlasch\n    restart: always\n    ports:\n      - 8080:8080\n    environment:\n      PHLASCH_DB_HOST: database\n      PHLASCH_DB_PASSWORD: postgres\n</pre>\n</li>\n<li>\n<p>Navigate to <a href=\"http://localhost:8080/api/doc\" rel=\"nofollow\">http://localhost:8080/api/doc</a> to see what APIs are available.</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c295b27e7a75ac88f4ae2ae1d42a6ccc6f6b42b3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62626d6f6b68746172692f70686c617363682f6d61737465722f646f63732f5f7374617469632f737761676765725f616c6c2e706e67\"></p>\n</li>\n</ol>\n<h3>Divided</h3>\n<p>A separated approach, which means the url shortener, redirector and\nthe stats apps are all deployed separately as different services.</p>\n<p>For example:</p>\n<ol>\n<li>\n<p>Deploy this <code>docker-compose.yml</code> file.</p>\n<pre>version: \"3.7\"\n\nservices:\n\n  database:\n    image: postgres\n    restart: always\n    environment:\n      POSTGRES_PASSWORD: postgres\n\n  shortener:\n    image: bbmokhtari/phlasch\n    command: ./start-shortener.sh\n    restart: always\n    ports:\n      - 8080:8080\n    environment:\n      PHLASCH_DB_HOST: database\n      PHLASCH_DB_PASSWORD: postgres\n      PHLASCH_SHORTENER_ORIGIN: http://localhost:9090\n\n  redirector:\n    image: bbmokhtari/phlasch\n    command: ./start-redirector.sh\n    restart: always\n    ports:\n      - 9090:8080\n    environment:\n      PHLASCH_DB_HOST: database\n      PHLASCH_DB_PASSWORD: postgres\n\n  stats:\n    image: bbmokhtari/phlasch\n    command: ./start-stats.sh\n    restart: always\n    ports:\n      - 7070:8080\n    environment:\n      PHLASCH_DB_HOST: database\n      PHLASCH_DB_PASSWORD: postgres\n      PHLASCH_STATS_ORIGIN: http://localhost:9090\n</pre>\n</li>\n<li>\n<p>Navigate to <a href=\"http://localhost:8080/api/doc\" rel=\"nofollow\">http://localhost:8080/api/doc</a> to see what APIs are available.</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b44647cfa3a89c06fd19f18b7bda432b936cde3c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62626d6f6b68746172692f70686c617363682f6d61737465722f646f63732f5f7374617469632f737761676765725f73686f7274656e65722e706e67\"></p>\n</li>\n<li>\n<p>Navigate to <a href=\"http://localhost:9090/api/doc\" rel=\"nofollow\">http://localhost:9090/api/doc</a> to see what APIs are available.</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d4557cf82aabe79174930162ddbf4fe20f2c785/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62626d6f6b68746172692f70686c617363682f6d61737465722f646f63732f5f7374617469632f737761676765725f72656469726563746f722e706e67\"></p>\n</li>\n<li>\n<p>Navigate to <a href=\"http://localhost:7070/api/doc\" rel=\"nofollow\">http://localhost:7070/api/doc</a> to see what APIs are available.</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc6b529740976e0dc6fa8d8124dfd08ccf2e0661/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62626d6f6b68746172692f70686c617363682f6d61737465722f646f63732f5f7374617469632f737761676765725f73746174732e706e67\"></p>\n</li>\n</ol>\n<h2>Requirements</h2>\n<ul>\n<li>Python (&gt;=3.7)</li>\n</ul>\n<h2>Installation</h2>\n<ol>\n<li>\n<p>Make sure the OS has the following prerequisites:</p>\n<ul>\n<li>build essentials packages (gcc, etc.)</li>\n<li>postgresql development packages (postgresql-dev, etc.)</li>\n<li>libffi development packages (libffi-dev, etc.)</li>\n</ul>\n</li>\n<li>\n<p>Upgrade <code>pip</code>, <code>setuptools</code> and <code>wheel</code>.</p>\n<pre>$ pip install --upgrade pip setuptools wheel\n</pre>\n</li>\n<li>\n<p>Install Phlasch using pip:</p>\n<pre>$ pip install phlasch\n</pre>\n</li>\n</ol>\n<h2>Configuration</h2>\n<p>When Phlasch is installed, the following apps are made available:</p>\n<ul>\n<li>DB: to store the links.</li>\n<li>Shortener: to shorten the links.</li>\n<li>Redirector: to redirect to the links.</li>\n<li>Stats: to get the stats of the links.</li>\n</ul>\n<p>Each app can be configured using its own special environment variables.</p>\n<h3>DB</h3>\n<p>DB is the app which stores the links.\nit uses the following environment variables:</p>\n<ul>\n<li>\n<p><strong>PHLASCH_DB_BACKEND</strong></p>\n<p>The database backend to use. e.g. postgresql, sqlite, etc.</p>\n<p>Default: postgresql</p>\n<p><em>Note</em>: Currently only postgresql is supported due to aiopg support.</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_DRIVER</strong></p>\n<p>The database driver to use. e.g. psycopg2, pg8000, etc.</p>\n<p>Default: psycopg2</p>\n<p><em>Note</em>: Currently only psycopg2 is supported due to aiopg support.</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_USER</strong></p>\n<p>The database user.</p>\n<p>Default: postgres</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_PASSWORD</strong></p>\n<p>The database password.</p>\n<p>Default: <em>nothing</em></p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_HOST</strong></p>\n<p>The database host.</p>\n<p>Default: localhost</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_PORT</strong></p>\n<p>The database port.</p>\n<p>Default: 5432</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_NAME</strong></p>\n<p>The database name.</p>\n<p>Default: postgres</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_URL</strong></p>\n<p>The database url.</p>\n<p>Default: <em>see note</em></p>\n<p><em>Note</em>: If set, it will override all the other DB configurations, otherwise\nit will be set automatically using the other DB configurations.</p>\n</li>\n<li>\n<p><strong>PHLASCH_DB_ENGINE</strong></p>\n<p>The aiohttp app's engine key.</p>\n<p>Default: phlasch</p>\n<p>If you are not using Phlasch as an aiohttp lib don't mind this, but\nif you are, this is the app key which the database engine is set on after\ncreation.</p>\n</li>\n</ul>\n<h3>Shortener</h3>\n<p>Shortener is the app which shortens the links.\nit uses the following environment variables:</p>\n<ul>\n<li>\n<p><strong>PHLASCH_SHORTENER_BASE</strong></p>\n<p>The characters to use in the shortened url.</p>\n<p>Default: 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</p>\n<p>Some people prefer not to use the (O, o, 0), (I, l, 1) or some\nsimilar-looking characters at all.</p>\n<p><strong>Warning</strong>: ONCE SET, DO NOT CHANGE THIS! EVER!</p>\n</li>\n<li>\n<p><strong>PHLASCH_SHORTENER_SHORTEN_URL</strong></p>\n<p>The url on which the users can shorten links.</p>\n<p>Default: shortener/shorten</p>\n<p><em>Note</em>: It is set as a slashed url so that it can't be mistaken with a\nshortened url.</p>\n</li>\n<li>\n<p><strong>PHLASCH_SHORTENER_ORIGIN</strong></p>\n<p>The origin of the shortened url.</p>\n<p>Default: <em>nothing</em></p>\n<p>In case the Redirector app is deployed on another host or domain, set\nthis to the origin of that host or domain.</p>\n<p><em>Note</em>: If empty, it will use the origin of the Shortener host or domain.</p>\n</li>\n</ul>\n<h3>Redirector</h3>\n<p>Redirector is the app which redirects to the links. it uses no\nenvironment variables.</p>\n<h3>Stats</h3>\n<p>Stats is the app which is used to get the stats of the links.\nit uses the following environment variables:</p>\n<ul>\n<li>\n<p><strong>PHLASCH_STATS_LIST_URL</strong></p>\n<p>The url on which the users can list the stats of all links.</p>\n<p>Default: stats/list</p>\n<p><em>Note</em>: It is set as a slashed url so that it can't be mistaken with a\nshortened url.</p>\n</li>\n<li>\n<p><strong>PHLASCH_STATS_RETRIEVE_URL</strong></p>\n<p>The url on which the users can retrieve the stats of a link.</p>\n<p>Default: stats/retrieve</p>\n<p><em>Note</em>: It is set as a slashed url so that it can't be mistaken with a\nshortened url.</p>\n</li>\n<li>\n<p><strong>PHLASCH_STATS_ORIGIN</strong></p>\n<p>The origin of the shortened url.</p>\n<p>Default: <em>nothing</em></p>\n<p>In case the Redirector app is deployed on another host or domain, set\nthis to the origin of that host or domain.</p>\n<p><em>Note</em>: If empty, it will use the origin of the Stats host or domain.</p>\n</li>\n</ul>\n<h2>CLI: Command Line Interface</h2>\n<p>When the configurations are in place, the command line interface can be used\neffectively.</p>\n<p>To see what is available, run the cli with the <code>-h</code> option:</p>\n<pre>python -m phlasch -h\n</pre>\n<p>It will print something like this:</p>\n<pre><code>usage: phlasch [-h] {run,history,revision,upgrade,downgrade} ...\n\nA url shortener.\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAction:\n  The action to take.\n\n  {run,history,revision,upgrade,downgrade}\n    run                 Run app.\n    history             Log revisions.\n    revision            Make revision.\n    upgrade             Upgrade to revision.\n    downgrade           Downgrade to revision.\n</code></pre>\n<p>As seen above, the command line interface provides some actions which can be\ntaken.</p>\n<h3>Migrators</h3>\n<p>Phlasch database migrations are being tracked using revisions. Each time the\ndatabase schema is changed in any app by Phlasch developers a revision is\ncreated in that app. Revisions represent the points in which the database\nschema was changed, as a result we can upgrade or downgrade to any revision\nat any time.</p>\n<h4>Upgrade</h4>\n<p>Each time Phlasch is installed or is updated, it is a good idea to upgrade\nto the latest revision (or head) for each database-using app, in the current\ncase: only the DB app.</p>\n<p>To upgrade the DB app to the latest revision (head), run:</p>\n<pre>python -m phlasch upgrade db head\n</pre>\n<p>It will print something like this:</p>\n<pre><code>INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running upgrade  -&gt; bfd35ebcbeb5, added link table\n</code></pre>\n<h4>History</h4>\n<p>To log the revisions of the DB app, run:</p>\n<pre>python -m phlasch <span class=\"nb\">history</span> db\n</pre>\n<p>It will print something like this:</p>\n<pre><code>Rev: bfd35ebcbeb5 (head)\nParent: &lt;base&gt;\nPath: /app/phlasch/db/migrations/versions/bfd35ebcbeb5_added_link_table.py\n\n    added link table\n\n    Revision ID: bfd35ebcbeb5\n    Revises: \n    Create Date: 2020-01-30 21:29:35.727874+00:00\n\n</code></pre>\n<h4>Downgrade</h4>\n<p>If we encounter any weird database situations after an upgrade we can always\ndowngrade to the previous revisions.</p>\n<p>To downgrade the DB app to the none revision (base), run:</p>\n<pre>python -m phlasch downgrade db base\n</pre>\n<p>It will print something like this:</p>\n<pre><code>INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running downgrade bfd35ebcbeb5 -&gt; , added link table\n</code></pre>\n<p><strong>WARNING</strong>: SETTING DOWNGRADE TO BASE WILL DELETE EVERYTHING AND DROP ALL TABLES!</p>\n<h4>Revision</h4>\n<p>If you are contributing to Phlasch and happen to change database schemas,\nyou can create a revision for that change.</p>\n<p>To create a revision for the DB app, run:</p>\n<pre>python -m phlasch revision db <span class=\"s2\">\"some message\"</span>\n</pre>\n<p>It will print something like this:</p>\n<pre><code>INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.ddl.postgresql] ...\n  Generating /app/phlasch/db/migrations/versions/1fb7a742b953_some_message.py ...  done\n</code></pre>\n<h3>Runners</h3>\n<p>After migrating to the desired revision, either a single app or all apps can\nbe run.</p>\n<h4>Aiohttp</h4>\n<p>Apps can be run using the aiohttp server.</p>\n<p>To run all apps, run:</p>\n<pre>python -m phlasch run all\n</pre>\n<p>It will print something like this:</p>\n<pre><code>======== Running on http://0.0.0.0:8080 ========\n(Press CTRL+C to quit)\n</code></pre>\n<p>Now you can navigate to <a href=\"http://localhost:8080/api/doc\" rel=\"nofollow\">http://localhost:8080/api/doc</a> to see what\nAPIs are available!</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c295b27e7a75ac88f4ae2ae1d42a6ccc6f6b42b3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62626d6f6b68746172692f70686c617363682f6d61737465722f646f63732f5f7374617469632f737761676765725f616c6c2e706e67\"></p>\n<p>To run a single app, run:</p>\n<pre>python -m phlasch run <span class=\"si\">${</span><span class=\"nv\">app_name</span><span class=\"si\">}</span>\n</pre>\n<p>It will print something like this:</p>\n<pre><code>======== Running on http://0.0.0.0:8080 ========\n(Press CTRL+C to quit)\n</code></pre>\n<h4>Gunicorn</h4>\n<p>Apps can be run using the Gunicorn wsgi server.</p>\n<p>To run all apps, run:</p>\n<pre>gunicorn phlasch.runners:get_all_runnable <span class=\"se\">\\</span>\n    --bind <span class=\"m\">0</span>.0.0.0:8080 <span class=\"se\">\\</span>\n    --worker-class aiohttp.GunicornWebWorker\n</pre>\n<p>It will print something like this:</p>\n<pre><code>[2020-02-03 03:59:38 +0330] [80163] [INFO] Starting gunicorn 20.0.4\n[2020-02-03 03:59:38 +0330] [80163] [INFO] Listening at: http://0.0.0.0:8080 (80163)\n[2020-02-03 03:59:38 +0330] [80163] [INFO] Using worker: aiohttp.GunicornWebWorker\n[2020-02-03 03:59:38 +0330] [80166] [INFO] Booting worker with pid: 80166\n</code></pre>\n<p>Now you can navigate to <a href=\"http://localhost:8080/api/doc\" rel=\"nofollow\">http://localhost:8080/api/doc</a> to see what\nAPIs are available!</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c295b27e7a75ac88f4ae2ae1d42a6ccc6f6b42b3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62626d6f6b68746172692f70686c617363682f6d61737465722f646f63732f5f7374617469632f737761676765725f616c6c2e706e67\"></p>\n<p>To run a single app, run:</p>\n<pre>gunicorn phlasch.runners:get_<span class=\"si\">${</span><span class=\"nv\">app_name</span><span class=\"si\">}</span>_runnable <span class=\"se\">\\</span>\n    --bind <span class=\"m\">0</span>.0.0.0:8080 <span class=\"se\">\\</span>\n    --worker-class aiohttp.GunicornWebWorker\n</pre>\n<p>It will print something like this:</p>\n<pre><code>[2020-02-03 04:01:13 +0330] [80251] [INFO] Starting gunicorn 20.0.4\n[2020-02-03 04:01:13 +0330] [80251] [INFO] Listening at: http://0.0.0.0:8080 (80251)\n[2020-02-03 04:01:13 +0330] [80251] [INFO] Using worker: aiohttp.GunicornWebWorker\n[2020-02-03 04:01:13 +0330] [80254] [INFO] Booting worker with pid: 80254\n</code></pre>\n<h2>Aiohttp library</h2>\n<p>If the configurations are set, Phlasch can also be used as an aiohttp library.</p>\n<ol>\n<li>\n<p>If you are using <a href=\"https://alembic.sqlalchemy.org\" rel=\"nofollow\">alembic</a> as your\nmigration tool add the following lines to <code>alembic.ini</code>.</p>\n<pre>[db]\nscript_location = %(location_of_phlasch_package)s/db/migrations\nversion_locations = %(location_of_phlasch_package)s/db/migrations/versions\n</pre>\n<p>If not, simply run the <a href=\"#upgrade\" rel=\"nofollow\">upgrade</a> command described above in the\nmigrators sections.</p>\n</li>\n<li>\n<p>Configure your app using the configure functions provided by the apps.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">phlasch.db.configure</span> <span class=\"kn\">import</span> <span class=\"n\">configure</span> <span class=\"k\">as</span> <span class=\"n\">configure_db</span>\n<span class=\"kn\">from</span> <span class=\"nn\">phlasch.shortener.configure</span> <span class=\"kn\">import</span> <span class=\"n\">configure</span> <span class=\"k\">as</span> <span class=\"n\">configure_shortener</span>\n<span class=\"kn\">from</span> <span class=\"nn\">phlasch.stats.configure</span> <span class=\"kn\">import</span> <span class=\"n\">configure</span> <span class=\"k\">as</span> <span class=\"n\">configure_stats</span>\n<span class=\"kn\">from</span> <span class=\"nn\">phlasch.redirector.configure</span> <span class=\"kn\">import</span> <span class=\"n\">configure</span> <span class=\"k\">as</span> <span class=\"n\">configure_redirector</span>\n\n<span class=\"c1\"># your app</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"c1\"># please keep this configure order intact</span>\n<span class=\"n\">configure_db</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">configure_shortener</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">configure_stats</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">configure_redirector</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6560915, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e0f706d3e75b269ace4fc6e34e75c830", "sha256": "4eb6f28eea019fceffb4c4d70cd5f5a62ec8e6ae1dd764555842b70a284ed5ee"}, "downloads": -1, "filename": "phlasch-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e0f706d3e75b269ace4fc6e34e75c830", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 20317, "upload_time": "2020-02-03T04:29:02", "upload_time_iso_8601": "2020-02-03T04:29:02.862465Z", "url": "https://files.pythonhosted.org/packages/9d/65/eef47ed225b3bd40e8c2d4f0ca24a7376c738ab7c86c094b5d0ef2a04038/phlasch-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ef789c18d6e46d06b62edc8365afdb3", "sha256": "30bd1810afa70699eff7d7c6e8c753c47af64f64bec10f7f6d2e7bdf6e78956e"}, "downloads": -1, "filename": "phlasch-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2ef789c18d6e46d06b62edc8365afdb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 16843, "upload_time": "2020-02-03T04:29:06", "upload_time_iso_8601": "2020-02-03T04:29:06.036891Z", "url": "https://files.pythonhosted.org/packages/cd/81/1c4787e1ae64cbb65ff4d4a1f4ff1484d55ac14961420ec4494d785963f8/phlasch-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "79fa540518205fdc960f4f42275b9c88", "sha256": "d33014c539d07b2435c280c88eaf031f0a3ac8df2d9bc34504573af031a810a5"}, "downloads": -1, "filename": "phlasch-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79fa540518205fdc960f4f42275b9c88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 20317, "upload_time": "2020-02-03T04:54:13", "upload_time_iso_8601": "2020-02-03T04:54:13.213659Z", "url": "https://files.pythonhosted.org/packages/38/be/562aa861fac5613736c26b25e72eda513f4f23723b22f422aa51a283d773/phlasch-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5f4ac074224aae01d057043e564ca68", "sha256": "8ffa3cdd8ea1de1c9da0d9858c4706a05812aa2057569d56f851477c0a7999a0"}, "downloads": -1, "filename": "phlasch-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d5f4ac074224aae01d057043e564ca68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 16647, "upload_time": "2020-02-03T04:54:14", "upload_time_iso_8601": "2020-02-03T04:54:14.850903Z", "url": "https://files.pythonhosted.org/packages/39/d8/b4d98dff9276ca3c5d49dc0413c3ddbd3a5e4adf8c9facdf9980a9972c06/phlasch-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "dfe31ca32086f6522a5f6f3e40cf8219", "sha256": "121dc6afe453dce56e48a0f3b113bc48320363e9ff2e0e2cbf5113062c9ab1e9"}, "downloads": -1, "filename": "phlasch-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dfe31ca32086f6522a5f6f3e40cf8219", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 20321, "upload_time": "2020-02-03T05:17:51", "upload_time_iso_8601": "2020-02-03T05:17:51.187878Z", "url": "https://files.pythonhosted.org/packages/b2/a1/9b7ea164c1978df5e8c6ae8a23f8e16a1fd4a62092441467f0feab24c2d4/phlasch-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "151452642bfa120d592467f9b5e39ab9", "sha256": "11aff20d2ee6aff5b211fcfaae5015ee9d84b443be58ce4a0e22c6e75b1f3f2a"}, "downloads": -1, "filename": "phlasch-1.0.2.tar.gz", "has_sig": false, "md5_digest": "151452642bfa120d592467f9b5e39ab9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 16657, "upload_time": "2020-02-03T05:17:52", "upload_time_iso_8601": "2020-02-03T05:17:52.791662Z", "url": "https://files.pythonhosted.org/packages/0f/bb/fac4928b80df4dc7e38c177bd16ce42f43b9399d5882d99591803264377b/phlasch-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfe31ca32086f6522a5f6f3e40cf8219", "sha256": "121dc6afe453dce56e48a0f3b113bc48320363e9ff2e0e2cbf5113062c9ab1e9"}, "downloads": -1, "filename": "phlasch-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dfe31ca32086f6522a5f6f3e40cf8219", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 20321, "upload_time": "2020-02-03T05:17:51", "upload_time_iso_8601": "2020-02-03T05:17:51.187878Z", "url": "https://files.pythonhosted.org/packages/b2/a1/9b7ea164c1978df5e8c6ae8a23f8e16a1fd4a62092441467f0feab24c2d4/phlasch-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "151452642bfa120d592467f9b5e39ab9", "sha256": "11aff20d2ee6aff5b211fcfaae5015ee9d84b443be58ce4a0e22c6e75b1f3f2a"}, "downloads": -1, "filename": "phlasch-1.0.2.tar.gz", "has_sig": false, "md5_digest": "151452642bfa120d592467f9b5e39ab9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 16657, "upload_time": "2020-02-03T05:17:52", "upload_time_iso_8601": "2020-02-03T05:17:52.791662Z", "url": "https://files.pythonhosted.org/packages/0f/bb/fac4928b80df4dc7e38c177bd16ce42f43b9399d5882d99591803264377b/phlasch-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:29 2020"}