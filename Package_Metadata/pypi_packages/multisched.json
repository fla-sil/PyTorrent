{"info": {"author": "Adam Tauber <asciimoo>", "author_email": "asciimoo@faszkorbacs.hu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU Affero General Public License v3"], "description": "MULTISCHED\n==========\n\n### Description\n\nMultisched is a lightweight function scheduler module for python\n\n\n### Usage\n\n```python\nfrom multisched import Scheduler\nimport time\n\ns = Scheduler()\n\ndef timestamp(s):\n    print '%.2f : %s' % (time.time(), s)\n\nclass Action():\n    def __init__(self, name):\n        self.__name__       = name\n        self.call_counter   = 0\n\n    def __call__(self):\n        self.call_counter  += 1\n        print 'I am %s (%d)' % (self.__name__, self.call_counter)\n\n# ----------------------------------.\n#                                   |\n#  TASK PARAMS:                     |\n#                                   |\n#    loopdelay:   float, required   |\n#    initdelay:   float, default=0  |\n#    threads  :   int  , default=0  |\n#                                   |\n# ----------------------------------`\n@s.AddTask(loopdelay=1.3)\ndef task1():\n    timestamp('task1')\n\n@s.AddTask(loopdelay=1.0, initdelay=3)\ndef task2():\n    timestamp('task2')\n    time.sleep(1.6)\n    timestamp('task2 again')\n\n@s.AddTask(loopdelay=1.1, threads=4)\ndef task3():\n    timestamp('task3')\n    time.sleep(4.4)\n    timestamp('task3 again')\n\ns.AddTasks({'action'    : Action('Agent%03d' % n)\n           ,'loopdelay' : 0.6\n           ,'initdelay' : 1.1\n           ,'threads'   : 0\n           } for n in xrange(42))\nprint s\ns.StartAllTasks()\ntry:\n    raw_input()\nexcept:\n    pass\ns.StopAllTasks()\n\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/multisched/", "keywords": "threaded scheduler", "license": "AGPLv3+", "maintainer": null, "maintainer_email": null, "name": "multisched", "package_url": "https://pypi.org/project/multisched/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/multisched/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/multisched/"}, "release_url": "https://pypi.org/project/multisched/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            MULTISCHED<br>==========<br><br>### Description<br><br>Multisched is a lightweight function scheduler module for python<br><br><br>### Usage<br><br>```python<br>from multisched import Scheduler<br>import time<br><br>s = Scheduler()<br><br>def timestamp(s):<br>    print '%.2f : %s' % (time.time(), s)<br><br>class Action():<br>    def __init__(self, name):<br>        self.__name__       = name<br>        self.call_counter   = 0<br><br>    def __call__(self):<br>        self.call_counter  += 1<br>        print 'I am %s (%d)' % (self.__name__, self.call_counter)<br><br># ----------------------------------.<br>#                                   |<br>#  TASK PARAMS:                     |<br>#                                   |<br>#    loopdelay:   float, required   |<br>#    initdelay:   float, default=0  |<br>#    threads  :   int  , default=0  |<br>#                                   |<br># ----------------------------------`<br>@s.AddTask(loopdelay=1.3)<br>def task1():<br>    timestamp('task1')<br><br>@s.AddTask(loopdelay=1.0, initdelay=3)<br>def task2():<br>    timestamp('task2')<br>    time.sleep(1.6)<br>    timestamp('task2 again')<br><br>@s.AddTask(loopdelay=1.1, threads=4)<br>def task3():<br>    timestamp('task3')<br>    time.sleep(4.4)<br>    timestamp('task3 again')<br><br>s.AddTasks({'action'    : Action('Agent%03d' % n)<br>           ,'loopdelay' : 0.6<br>           ,'initdelay' : 1.1<br>           ,'threads'   : 0<br>           } for n in xrange(42))<br>print s<br>s.StartAllTasks()<br>try:<br>    raw_input()<br>except:<br>    pass<br>s.StopAllTasks()<br><br>```\n          </div>"}, "last_serial": 795093, "releases": {"0.1.2": [], "0.1.3": [{"comment_text": "", "digests": {"md5": "77815991f9b3a8bd09e7cf3150dc41a3", "sha256": "0a3dfcde5b3489c374d5e12fbe242c9ad07436d1e3dce9fa3dc749869ee4e0cf"}, "downloads": -1, "filename": "multisched-0.1.3.tar.gz", "has_sig": false, "md5_digest": "77815991f9b3a8bd09e7cf3150dc41a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2640, "upload_time": "2012-06-05T11:21:09", "upload_time_iso_8601": "2012-06-05T11:21:09.177628Z", "url": "https://files.pythonhosted.org/packages/22/dc/5fbf9369f47fd9c53dfb386ead35cba910e7cf45a94d21e297c8eb0b286f/multisched-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a4c04f119f27936aa5af31365eaf3b7e", "sha256": "ace5cdc9c2cdf0bbe80a79d0f03dc8740f2bdbb72abbf5095e71b606dbc437d8"}, "downloads": -1, "filename": "multisched-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a4c04f119f27936aa5af31365eaf3b7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2861, "upload_time": "2012-06-05T11:26:47", "upload_time_iso_8601": "2012-06-05T11:26:47.366761Z", "url": "https://files.pythonhosted.org/packages/46/08/60ea285dd8634f9a0da7be903cc59f0f7aa7d2d2234d602625a70799c0eb/multisched-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4c04f119f27936aa5af31365eaf3b7e", "sha256": "ace5cdc9c2cdf0bbe80a79d0f03dc8740f2bdbb72abbf5095e71b606dbc437d8"}, "downloads": -1, "filename": "multisched-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a4c04f119f27936aa5af31365eaf3b7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2861, "upload_time": "2012-06-05T11:26:47", "upload_time_iso_8601": "2012-06-05T11:26:47.366761Z", "url": "https://files.pythonhosted.org/packages/46/08/60ea285dd8634f9a0da7be903cc59f0f7aa7d2d2234d602625a70799c0eb/multisched-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:20 2020"}