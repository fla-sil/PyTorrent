{"info": {"author": "Xiang Gao", "author_email": "qasdfgtyuiop@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Install\n\n```\npip install autonvtx\n```\n\n# Usage\n\nWrite your model as usual and `autonvtx(model)` to your model:\n\n```python\nimport torch\nimport autonvtx\n\nclass Model(torch.nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.layer1 = torch.nn.Linear(5, 5)\n        self.layer2 = torch.nn.Linear(5, 5)\n    def forward(self, x):\n        x = self.layer1(x)\n        x = self.layer2(x)\n        return x\n\nm = Model().cuda()\nautonvtx(m)\ninput_ = torch.randn(1024, 5, device='cuda')\n\ntorch.cuda.profiler.start()\nfor _ in range(10):\n    output = m(input_)\ntorch.cuda.profiler.stop()\n```\n\nThe screenshot for this would be:\n\n![Screenshot 1](screenshot1.png)\n\nIt also works with existing models:\n\n```python\nimport torch\nimport torchvision\nimport autonvtx\n\nm = torchvision.models.resnet50()\nautonvtx(m)\ninput_ = torch.randn(10, 3, 224, 224)\n\ntorch.cuda.profiler.start()\nfor _ in range(10):\n    output = m(input_)\ntorch.cuda.profiler.stop()\n```\n\nThe screenshot for this would be:\n\n![Screenshot 2](screenshot2.png)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zasdfgbnm/autonvtx", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "autonvtx", "package_url": "https://pypi.org/project/autonvtx/", "platform": "", "project_url": "https://pypi.org/project/autonvtx/", "project_urls": {"Homepage": "https://github.com/zasdfgbnm/autonvtx"}, "release_url": "https://pypi.org/project/autonvtx/0.1/", "requires_dist": ["torch"], "requires_python": "", "summary": "https://github.com/zasdfgbnm/autonvtx", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Install</h1>\n<pre><code>pip install autonvtx\n</code></pre>\n<h1>Usage</h1>\n<p>Write your model as usual and <code>autonvtx(model)</code> to your model:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">import</span> <span class=\"nn\">autonvtx</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Model</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer1</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer2</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer1</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer2</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">()</span>\n<span class=\"n\">autonvtx</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span>\n<span class=\"n\">input_</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"s1\">'cuda'</span><span class=\"p\">)</span>\n\n<span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"p\">(</span><span class=\"n\">input_</span><span class=\"p\">)</span>\n<span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>The screenshot for this would be:</p>\n<p><img alt=\"Screenshot 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd83b2e3ccea8abd446d9d633aa2a7e22aa41554/73637265656e73686f74312e706e67\"></p>\n<p>It also works with existing models:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchvision</span>\n<span class=\"kn\">import</span> <span class=\"nn\">autonvtx</span>\n\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">torchvision</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">resnet50</span><span class=\"p\">()</span>\n<span class=\"n\">autonvtx</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span>\n<span class=\"n\">input_</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">224</span><span class=\"p\">,</span> <span class=\"mi\">224</span><span class=\"p\">)</span>\n\n<span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"p\">(</span><span class=\"n\">input_</span><span class=\"p\">)</span>\n<span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>The screenshot for this would be:</p>\n<p><img alt=\"Screenshot 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4598b15e028106d63dec66ba0e429ac3ac5ff82/73637265656e73686f74322e706e67\"></p>\n\n          </div>"}, "last_serial": 6321389, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "01b8c8b24c93e1fbd282606ae5bbf51b", "sha256": "25ae971a23af60f75a3eaea056434c4b7c5733124a1b2f7c6704a8dd12547e9d"}, "downloads": -1, "filename": "autonvtx-0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "01b8c8b24c93e1fbd282606ae5bbf51b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2019-12-17T23:40:46", "upload_time_iso_8601": "2019-12-17T23:40:46.190840Z", "url": "https://files.pythonhosted.org/packages/5d/b4/b176868ee80b2c47c9e4f58ffa26b764d33d74755ffebb55f237c987e23a/autonvtx-0.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5c2d6ee138ee72fe6e7e08493693edd", "sha256": "b88ec5737e9858df34cf6fcf35a5ec5d361f613c2a79e0de96ec2d3b25409ed9"}, "downloads": -1, "filename": "autonvtx-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5c2d6ee138ee72fe6e7e08493693edd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2733, "upload_time": "2019-12-17T23:40:43", "upload_time_iso_8601": "2019-12-17T23:40:43.930819Z", "url": "https://files.pythonhosted.org/packages/51/5b/b0d2236d97612c08961b9ea20d6068dd2d58f7f1beba8698b85446ff8bee/autonvtx-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "01b8c8b24c93e1fbd282606ae5bbf51b", "sha256": "25ae971a23af60f75a3eaea056434c4b7c5733124a1b2f7c6704a8dd12547e9d"}, "downloads": -1, "filename": "autonvtx-0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "01b8c8b24c93e1fbd282606ae5bbf51b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2019-12-17T23:40:46", "upload_time_iso_8601": "2019-12-17T23:40:46.190840Z", "url": "https://files.pythonhosted.org/packages/5d/b4/b176868ee80b2c47c9e4f58ffa26b764d33d74755ffebb55f237c987e23a/autonvtx-0.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5c2d6ee138ee72fe6e7e08493693edd", "sha256": "b88ec5737e9858df34cf6fcf35a5ec5d361f613c2a79e0de96ec2d3b25409ed9"}, "downloads": -1, "filename": "autonvtx-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5c2d6ee138ee72fe6e7e08493693edd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2733, "upload_time": "2019-12-17T23:40:43", "upload_time_iso_8601": "2019-12-17T23:40:43.930819Z", "url": "https://files.pythonhosted.org/packages/51/5b/b0d2236d97612c08961b9ea20d6068dd2d58f7f1beba8698b85446ff8bee/autonvtx-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:16:11 2020"}