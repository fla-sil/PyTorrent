{"info": {"author": "Shay Palachy", "author_email": "shay.palachy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "speks\n#####\n|PyPI-Status| |PyPI-Versions| |Build-Status| |Codecov| |LICENCE|\n\nA packaged version, adapted to Python 3, of the `TwitterGenderPredictor code by JT Wolohan <https://github.com/jtwool/TwitterGenderPredictor>`_, which itself is a Python 2 implementation of Sap et al.'s gender prediction algorithm for Twitter. SPEKS stands for Sap, Park, Eichstaedt, Kern and Stilwell, the first five writers of the `paper describing the algorithm <http://wwbp.org/papers/emnlp2014_developingLexica.pdf>`_ implemented here. \n\n.. code-block:: python\n\n  >>> from speks import predict_gender_by_tweets\n  >>> gender = predict_gender_by_tweets(\" \".join([\"Please Do.\", \"Join me in praying!\"]))\n\n\n.. contents::\n\n.. section-numbering::\n\n\nFeatures\n========\n\n* Supports Python 3.\n* ``pip``-installable.\n* Fully tested.\n\n\nInstallation\n============\n\n.. code-block:: bash\n\n  pip install speks\n\n\nUse\n===\n\nThis is a Python 3, packaged version of the `TwitterGenderPredictor code by JT Wolohan <https://github.com/jtwool/TwitterGenderPredictor>`_, which itself is a Python 2 implementation of Sap et al.'s gender prediction algorithm for Twitter. The algorithm should be 90% accurate given a large sample of users and a reasonable amount of data for each user.\n\n\nYou can have the package predict the gender of a Twitter user by providing the ``predict_gender_by_tweets`` function with a string containing tweets contents.\n\n.. code-block:: python\n\n  >>> from speks import predict_gender_by_tweets\n  >>> gender = predict_gender_by_tweets(\" \".join([\"No touchy\", \"Trial by fire\"]))\n\n\nLicensing\n=========\n\nMost of the code was released by `JT Wolohan`_ under the `MPL 2.0 license <https://www.mozilla.org/en-US/MPL/2.0/>`_, and thus I'm releasing my additions under the same license. However, the tokenization code - although slightly adapted - was originally written by `Christopher Potts`_ and released under the `CC BY-NC-SA 3.0 license <https://creativecommons.org/licenses/by-nc-sa/3.0/>`_, and thus remains released under this license.\n\n\nContributing\n============\n\nCurrent package maintainer and author is Shay Palachy (shay.palachy@gmail.com); You are more than welcome to approach him for help. Contributions are very welcomed.\n\nInstalling for development\n----------------------------\n\nClone:\n\n.. code-block:: bash\n\n  git clone git@github.com:shaypal5/speks.git\n\n\nInstall in development mode, including test dependencies:\n\n.. code-block:: bash\n\n  cd speks\n  pip install -e '.[test]'\n\n\n\nRunning the tests\n-----------------\n\nTo run the tests use:\n\n.. code-block:: bash\n\n  cd speks\n  pytest\n\n\nAdding documentation\n--------------------\n\nThe project is documented using the `numpy docstring conventions`_, which were chosen as they are perhaps the most widely-spread conventions that are both supported by common tools such as Sphinx and result in human-readable docstrings. When documenting code you add to this project, follow `these conventions`_.\n\n.. _`numpy docstring conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n.. _`these conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n\nAdditionally, if you update this ``README.rst`` file,  use ``python setup.py checkdocs`` to validate it compiles.\n\n\nCredits\n=======\n\nAlgorithm by `Sap et al <http://wwbp.org/papers/emnlp2014_developingLexica.pdf>`_. Original code by `JT Wolohan`_, with tokenization code by `Christopher Potts`_. Packaging and Python 3 adaptation by `Shay Palachy <shaypalachy.com>`_.\n\nOriginal paper reference:\n*Sap, M., Park, G., Eichstaedt, J., Kern, M., Stillwell, D., Kosinski, M., ... & Schwartz, H. A. (2014). Developing age and gender predictive lexica over social media. In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP) (pp. 1146-1151).*\n\n\n.. _`JT Wolohan`: https://github.com/jtwool \n.. _`Christopher Potts`: https://web.stanford.edu/~cgpotts/\n\n\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/speks.svg\n  :target: https://pypi.org/project/speks\n\n.. |PyPI-Versions| image:: https://img.shields.io/pypi/pyversions/speks.svg\n   :target: https://pypi.org/project/speks\n\n.. |Build-Status| image:: https://travis-ci.org/shaypal5/speks.svg?branch=master\n  :target: https://travis-ci.org/shaypal5/speks\n\n.. |LICENCE| image:: https://img.shields.io/badge/License-MIT-yellow.svg\n  :target: https://pypi.python.org/pypi/pdpipe\n\n.. |Codecov| image:: https://codecov.io/github/shaypal5/speks/coverage.svg?branch=master\n   :target: https://codecov.io/github/shaypal5/speks?branch=master\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shaypal5/speks", "keywords": "", "license": "MPL2.0", "maintainer": "", "maintainer_email": "", "name": "speks", "package_url": "https://pypi.org/project/speks/", "platform": "", "project_url": "https://pypi.org/project/speks/", "project_urls": {"Homepage": "https://github.com/shaypal5/speks"}, "release_url": "https://pypi.org/project/speks/0.0.1/", "requires_dist": ["pytest; extra == 'test'", "coverage; extra == 'test'", "pytest-cov; extra == 'test'", "collective.checkdocs; extra == 'test'", "pygments; extra == 'test'"], "requires_python": ">=3.4", "summary": "Text-based gender prediction for Twitter.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/speks\" rel=\"nofollow\"><img alt=\"PyPI-Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a367efc0dd28d187694492d0f1bfb8fbbb8f790e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7370656b732e737667\"></a> <a href=\"https://pypi.org/project/speks\" rel=\"nofollow\"><img alt=\"PyPI-Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1d8e69231b9301f5f10c7f644625d8bcb6ff0ae/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7370656b732e737667\"></a> <a href=\"https://travis-ci.org/shaypal5/speks\" rel=\"nofollow\"><img alt=\"Build-Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e72142c6ad604767a1994f47cdb059b6487d0fbc/68747470733a2f2f7472617669732d63692e6f72672f7368617970616c352f7370656b732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/github/shaypal5/speks?branch=master\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef2e7ed6a5ecbbf498d6ad19ee387d64028437ab/68747470733a2f2f636f6465636f762e696f2f6769746875622f7368617970616c352f7370656b732f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/pdpipe\" rel=\"nofollow\"><img alt=\"LICENCE\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>A packaged version, adapted to Python 3, of the <a href=\"https://github.com/jtwool/TwitterGenderPredictor\" rel=\"nofollow\">TwitterGenderPredictor code by JT Wolohan</a>, which itself is a Python 2 implementation of Sap et al.\u2019s gender prediction algorithm for Twitter. SPEKS stands for Sap, Park, Eichstaedt, Kern and Stilwell, the first five writers of the <a href=\"http://wwbp.org/papers/emnlp2014_developingLexica.pdf\" rel=\"nofollow\">paper describing the algorithm</a> implemented here.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">speks</span> <span class=\"kn\">import</span> <span class=\"n\">predict_gender_by_tweets</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"n\">predict_gender_by_tweets</span><span class=\"p\">(</span><span class=\"s2\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s2\">\"Please Do.\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Join me in praying!\"</span><span class=\"p\">]))</span>\n</pre>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#features\" id=\"id2\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Features</a></li>\n<li><a href=\"#installation\" id=\"id3\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Installation</a></li>\n<li><a href=\"#use\" id=\"id4\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Use</a></li>\n<li><a href=\"#licensing\" id=\"id5\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Licensing</a></li>\n<li><a href=\"#contributing\" id=\"id6\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Contributing</a><ul>\n<li><a href=\"#installing-for-development\" id=\"id7\" rel=\"nofollow\">5.1\u00a0\u00a0\u00a0Installing for development</a></li>\n<li><a href=\"#running-the-tests\" id=\"id8\" rel=\"nofollow\">5.2\u00a0\u00a0\u00a0Running the tests</a></li>\n<li><a href=\"#adding-documentation\" id=\"id9\" rel=\"nofollow\">5.3\u00a0\u00a0\u00a0Adding documentation</a></li>\n</ul>\n</li>\n<li><a href=\"#credits\" id=\"id10\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Credits</a></li>\n</ul>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id2\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Features</a></h2>\n<ul>\n<li>Supports Python 3.</li>\n<li><tt>pip</tt>-installable.</li>\n<li>Fully tested.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Installation</a></h2>\n<pre>pip install speks\n</pre>\n</div>\n<div id=\"use\">\n<h2><a href=\"#id4\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Use</a></h2>\n<p>This is a Python 3, packaged version of the <a href=\"https://github.com/jtwool/TwitterGenderPredictor\" rel=\"nofollow\">TwitterGenderPredictor code by JT Wolohan</a>, which itself is a Python 2 implementation of Sap et al.\u2019s gender prediction algorithm for Twitter. The algorithm should be 90% accurate given a large sample of users and a reasonable amount of data for each user.</p>\n<p>You can have the package predict the gender of a Twitter user by providing the <tt>predict_gender_by_tweets</tt> function with a string containing tweets contents.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">speks</span> <span class=\"kn\">import</span> <span class=\"n\">predict_gender_by_tweets</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"n\">predict_gender_by_tweets</span><span class=\"p\">(</span><span class=\"s2\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s2\">\"No touchy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Trial by fire\"</span><span class=\"p\">]))</span>\n</pre>\n</div>\n<div id=\"licensing\">\n<h2><a href=\"#id5\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Licensing</a></h2>\n<p>Most of the code was released by <a href=\"https://github.com/jtwool\" rel=\"nofollow\">JT Wolohan</a> under the <a href=\"https://www.mozilla.org/en-US/MPL/2.0/\" rel=\"nofollow\">MPL 2.0 license</a>, and thus I\u2019m releasing my additions under the same license. However, the tokenization code - although slightly adapted - was originally written by <a href=\"https://web.stanford.edu/~cgpotts/\" rel=\"nofollow\">Christopher Potts</a> and released under the <a href=\"https://creativecommons.org/licenses/by-nc-sa/3.0/\" rel=\"nofollow\">CC BY-NC-SA 3.0 license</a>, and thus remains released under this license.</p>\n</div>\n<div id=\"contributing\">\n<h2><a href=\"#id6\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Contributing</a></h2>\n<p>Current package maintainer and author is Shay Palachy (<a href=\"mailto:shay.palachy%40gmail.com\">shay<span>.</span>palachy<span>@</span>gmail<span>.</span>com</a>); You are more than welcome to approach him for help. Contributions are very welcomed.</p>\n<div id=\"installing-for-development\">\n<h3><a href=\"#id7\" rel=\"nofollow\">5.1\u00a0\u00a0\u00a0Installing for development</a></h3>\n<p>Clone:</p>\n<pre>git clone git@github.com:shaypal5/speks.git\n</pre>\n<p>Install in development mode, including test dependencies:</p>\n<pre><span class=\"nb\">cd</span> speks\npip install -e <span class=\"s1\">'.[test]'</span>\n</pre>\n</div>\n<div id=\"running-the-tests\">\n<h3><a href=\"#id8\" rel=\"nofollow\">5.2\u00a0\u00a0\u00a0Running the tests</a></h3>\n<p>To run the tests use:</p>\n<pre><span class=\"nb\">cd</span> speks\npytest\n</pre>\n</div>\n<div id=\"adding-documentation\">\n<h3><a href=\"#id9\" rel=\"nofollow\">5.3\u00a0\u00a0\u00a0Adding documentation</a></h3>\n<p>The project is documented using the <a href=\"https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\" rel=\"nofollow\">numpy docstring conventions</a>, which were chosen as they are perhaps the most widely-spread conventions that are both supported by common tools such as Sphinx and result in human-readable docstrings. When documenting code you add to this project, follow <a href=\"https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\" rel=\"nofollow\">these conventions</a>.</p>\n<p>Additionally, if you update this <tt>README.rst</tt> file,  use <tt>python setup.py checkdocs</tt> to validate it compiles.</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id10\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Credits</a></h2>\n<p>Algorithm by <a href=\"http://wwbp.org/papers/emnlp2014_developingLexica.pdf\" rel=\"nofollow\">Sap et al</a>. Original code by <a href=\"https://github.com/jtwool\" rel=\"nofollow\">JT Wolohan</a>, with tokenization code by <a href=\"https://web.stanford.edu/~cgpotts/\" rel=\"nofollow\">Christopher Potts</a>. Packaging and Python 3 adaptation by <a href=\"shaypalachy.com\" rel=\"nofollow\">Shay Palachy</a>.</p>\n<p>Original paper reference:\n<em>Sap, M., Park, G., Eichstaedt, J., Kern, M., Stillwell, D., Kosinski, M., \u2026 &amp; Schwartz, H. A. (2014). Developing age and gender predictive lexica over social media. In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP) (pp. 1146-1151).</em></p>\n</div>\n\n          </div>"}, "last_serial": 4214828, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "db8d65e5b3d2c5baadeca8bf1245c15c", "sha256": "c0ee5c518214a9123dd176a49469cce8f783d12c12732e41c90c0380d1c45a90"}, "downloads": -1, "filename": "speks-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db8d65e5b3d2c5baadeca8bf1245c15c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 97622, "upload_time": "2018-08-28T13:18:19", "upload_time_iso_8601": "2018-08-28T13:18:19.758560Z", "url": "https://files.pythonhosted.org/packages/3b/94/fd91a8b5c5d123854a3ca7db07695b15515282f4100bc3bb6e222d334c6b/speks-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db8d65e5b3d2c5baadeca8bf1245c15c", "sha256": "c0ee5c518214a9123dd176a49469cce8f783d12c12732e41c90c0380d1c45a90"}, "downloads": -1, "filename": "speks-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db8d65e5b3d2c5baadeca8bf1245c15c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 97622, "upload_time": "2018-08-28T13:18:19", "upload_time_iso_8601": "2018-08-28T13:18:19.758560Z", "url": "https://files.pythonhosted.org/packages/3b/94/fd91a8b5c5d123854a3ca7db07695b15515282f4100bc3bb6e222d334c6b/speks-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:05:33 2020"}