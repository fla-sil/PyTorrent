{"info": {"author": "Bjarne Kohnke", "author_email": "python@kohnkemail.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n# aos_api_connector\nAPI connector for ArubaOS products\n\n\n## APIs supported:\n\n* ArubaOS-S Switches\n* ArubaOS-CX Switches\n* Aruba ClearPass\n\n## Installation\nInstall through [pypi]([https://pypi.org/project/aos-api-connector/](https://pypi.org/project/aos-api-connector/)) via pip:\n````\npip install aos-api-connector\n````\nOr manually using the [GitHub]([https://github.com/Linkk93/aos_api_connector](https://github.com/Linkk93/aos_api_connector)).\n\n## Usage\n\nEvery type of API has an API caller class. You can create instances of that class with at least three arguments:\n* Username\n* Password\n* URL / IP / FQDN address of the device\n\nAfter creating the device, use connect() to create a session. \nThen use the other functions to use the API. \nWhen you are finished use disconnect() to logout. \n\n### AurubaOS-S Switch\n```\nfrom aos_api_connector.aos_s import aos_api_caller as aos_s\n\n\ndata = { \"url\": \"172.16.78.65\",\n  \"username\": \"admin\",\n  \"password\": \"Aruba123\",\n  \"api_version\": \"v7\"\n}\nswitch = aos_s.AOSSwitchAPIClient(**data)\nswitch.connect()\nsys_info = switch.get_system_info()\nprint(sys_info)\nswitch.disconnect()\n```\n\n### ArubaOS-CX\n```\nfrom aos_api_connector.aos_cx import aoscx_api_caller as aos_cx\n\n\ndata = { \"url\": \"172.16.78.65\",\n  \"username\": \"admin\",\n  \"password\": \"Aruba123\",\n  \"api_version\": \"v10.04\"\n}\nswitch = aos_cx.AOSCXwitchAPIClient(**data)\nswitch.connect()\nsys_info = switch.get_system_info()\nprint(sys_info)\nswitch.disconnect()\n```\n\n### ClearPass\nClearPass neds either an API token or a username password.  That has to be set during instantiation of the API caller class.\nYou can choose with which you want to login, look into example folder for more info.\n\n````\nfrom  aos_api_connector.cppm import cppm_api_caller as cppm\n\n\ndata = {  \n\t\"url\": \"10.10.10.10\",  \n\t\"api_version\": \"v1\",  \n\t\"client_id\": \"api_client\",  \n\t\"grant_type\": \"client_credentials\",  \n\t\"client_secret\": \"lTOcISWlXzDV3HCZLT8CVJlN9zxrUirdP+gHpva4mWZ5\"  \n\t}\ncppm_test = cppm.CPPMAPIClient(**data)\ncppm_test.connect()  \nnd_info = cppm_test.get_all_network_devices()  \nfor nd in nd_info['_embedded']['items']:  \n    print(f\"Name: {nd['name']} \\nIP: {nd['ip_address']} \\n\\n\")\n````\n\n\n#### Please note that there is no syntax check!\nSome parameters are case sensitive. \nFor example, api_version, there is no check for \"V7\" or \"v7\", but only \"v7\" will work.\n\n\n### Differences between classes\n\nThe functions between the two classes should have the same name, if they end up doing the same. \nSo both classes have connect(), disconnect() or get_vlans() even if they are implemented differently.\n\n## Roadmap\n\nI am working on implementing more functions and to create classes for the ClearPass and ArubaOS WLAN APIs.\nAfter that I will create workflows spanning different APIs.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Linkk93/aos_api_connector", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aos-api-connector", "package_url": "https://pypi.org/project/aos-api-connector/", "platform": "", "project_url": "https://pypi.org/project/aos-api-connector/", "project_urls": {"Homepage": "https://github.com/Linkk93/aos_api_connector"}, "release_url": "https://pypi.org/project/aos-api-connector/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Collection of API functions for Aruba products.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aos_api_connector</h1>\n<p>API connector for ArubaOS products</p>\n<h2>APIs supported:</h2>\n<ul>\n<li>ArubaOS-S Switches</li>\n<li>ArubaOS-CX Switches</li>\n<li>Aruba ClearPass</li>\n</ul>\n<h2>Installation</h2>\n<p>Install through <a href=\"%5Bhttps://pypi.org/project/aos-api-connector/%5D(https://pypi.org/project/aos-api-connector/)\" rel=\"nofollow\">pypi</a> via pip:</p>\n<pre><code>pip install aos-api-connector\n</code></pre>\n<p>Or manually using the <a href=\"%5Bhttps://github.com/Linkk93/aos_api_connector%5D(https://github.com/Linkk93/aos_api_connector)\" rel=\"nofollow\">GitHub</a>.</p>\n<h2>Usage</h2>\n<p>Every type of API has an API caller class. You can create instances of that class with at least three arguments:</p>\n<ul>\n<li>Username</li>\n<li>Password</li>\n<li>URL / IP / FQDN address of the device</li>\n</ul>\n<p>After creating the device, use connect() to create a session.\nThen use the other functions to use the API.\nWhen you are finished use disconnect() to logout.</p>\n<h3>AurubaOS-S Switch</h3>\n<pre><code>from aos_api_connector.aos_s import aos_api_caller as aos_s\n\n\ndata = { \"url\": \"172.16.78.65\",\n  \"username\": \"admin\",\n  \"password\": \"Aruba123\",\n  \"api_version\": \"v7\"\n}\nswitch = aos_s.AOSSwitchAPIClient(**data)\nswitch.connect()\nsys_info = switch.get_system_info()\nprint(sys_info)\nswitch.disconnect()\n</code></pre>\n<h3>ArubaOS-CX</h3>\n<pre><code>from aos_api_connector.aos_cx import aoscx_api_caller as aos_cx\n\n\ndata = { \"url\": \"172.16.78.65\",\n  \"username\": \"admin\",\n  \"password\": \"Aruba123\",\n  \"api_version\": \"v10.04\"\n}\nswitch = aos_cx.AOSCXwitchAPIClient(**data)\nswitch.connect()\nsys_info = switch.get_system_info()\nprint(sys_info)\nswitch.disconnect()\n</code></pre>\n<h3>ClearPass</h3>\n<p>ClearPass neds either an API token or a username password.  That has to be set during instantiation of the API caller class.\nYou can choose with which you want to login, look into example folder for more info.</p>\n<pre><code>from  aos_api_connector.cppm import cppm_api_caller as cppm\n\n\ndata = {  \n\t\"url\": \"10.10.10.10\",  \n\t\"api_version\": \"v1\",  \n\t\"client_id\": \"api_client\",  \n\t\"grant_type\": \"client_credentials\",  \n\t\"client_secret\": \"lTOcISWlXzDV3HCZLT8CVJlN9zxrUirdP+gHpva4mWZ5\"  \n\t}\ncppm_test = cppm.CPPMAPIClient(**data)\ncppm_test.connect()  \nnd_info = cppm_test.get_all_network_devices()  \nfor nd in nd_info['_embedded']['items']:  \n    print(f\"Name: {nd['name']} \\nIP: {nd['ip_address']} \\n\\n\")\n</code></pre>\n<h4>Please note that there is no syntax check!</h4>\n<p>Some parameters are case sensitive.\nFor example, api_version, there is no check for \"V7\" or \"v7\", but only \"v7\" will work.</p>\n<h3>Differences between classes</h3>\n<p>The functions between the two classes should have the same name, if they end up doing the same.\nSo both classes have connect(), disconnect() or get_vlans() even if they are implemented differently.</p>\n<h2>Roadmap</h2>\n<p>I am working on implementing more functions and to create classes for the ClearPass and ArubaOS WLAN APIs.\nAfter that I will create workflows spanning different APIs.</p>\n\n          </div>"}, "last_serial": 7110196, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ebd19ced50d8013f0a9b858a0cb7e3dd", "sha256": "8b9ff2a7ce1c30c6af221f27ec2947bf0f313712a65de3c9494481acf0f00c65"}, "downloads": -1, "filename": "aos_api_connector-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebd19ced50d8013f0a9b858a0cb7e3dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47609, "upload_time": "2020-04-27T01:03:05", "upload_time_iso_8601": "2020-04-27T01:03:05.584796Z", "url": "https://files.pythonhosted.org/packages/56/ee/dc2494118930e18701d229a40bbd0bb4f159b5c3aac2453c487bb7d8fc6a/aos_api_connector-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13e3729cae96f4f1e4de8d6a90804514", "sha256": "2cf5c5a70d34286b78f826b10f93fe7b6bcb4256a3b01a7c6f8b9baf1553e091"}, "downloads": -1, "filename": "aos-api-connector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "13e3729cae96f4f1e4de8d6a90804514", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18054, "upload_time": "2020-04-27T01:03:07", "upload_time_iso_8601": "2020-04-27T01:03:07.123858Z", "url": "https://files.pythonhosted.org/packages/f6/e0/b78421773e333813adb5eb0fba219855a066f145ebc37f057c8a52d472fd/aos-api-connector-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1c8ca8e1ab2f2e061803e2801de81719", "sha256": "cc9ac64ed0bee493d9b979a0bf992ea24c1b0f6c1945a1f937cbbaf08809d8eb"}, "downloads": -1, "filename": "aos_api_connector-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1c8ca8e1ab2f2e061803e2801de81719", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15278, "upload_time": "2020-04-27T09:27:05", "upload_time_iso_8601": "2020-04-27T09:27:05.633905Z", "url": "https://files.pythonhosted.org/packages/ce/a3/7172bafc24e38b77d9098e59920a0e23698a45565ed278a2cf2f0414c406/aos_api_connector-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "431393e3bad7a87c32d504a44f8b8271", "sha256": "8f6a06baf1420da37a6313ff523b916394732ea996e7088d3c15594949a7e8ae"}, "downloads": -1, "filename": "aos-api-connector-0.1.2.tar.gz", "has_sig": false, "md5_digest": "431393e3bad7a87c32d504a44f8b8271", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2864, "upload_time": "2020-04-27T09:27:06", "upload_time_iso_8601": "2020-04-27T09:27:06.557423Z", "url": "https://files.pythonhosted.org/packages/61/34/82d66ac1fa15bfa219c1b425acdbff9dfbaaa5ce09c6112a91b90de12d36/aos-api-connector-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c8ca8e1ab2f2e061803e2801de81719", "sha256": "cc9ac64ed0bee493d9b979a0bf992ea24c1b0f6c1945a1f937cbbaf08809d8eb"}, "downloads": -1, "filename": "aos_api_connector-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1c8ca8e1ab2f2e061803e2801de81719", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15278, "upload_time": "2020-04-27T09:27:05", "upload_time_iso_8601": "2020-04-27T09:27:05.633905Z", "url": "https://files.pythonhosted.org/packages/ce/a3/7172bafc24e38b77d9098e59920a0e23698a45565ed278a2cf2f0414c406/aos_api_connector-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "431393e3bad7a87c32d504a44f8b8271", "sha256": "8f6a06baf1420da37a6313ff523b916394732ea996e7088d3c15594949a7e8ae"}, "downloads": -1, "filename": "aos-api-connector-0.1.2.tar.gz", "has_sig": false, "md5_digest": "431393e3bad7a87c32d504a44f8b8271", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2864, "upload_time": "2020-04-27T09:27:06", "upload_time_iso_8601": "2020-04-27T09:27:06.557423Z", "url": "https://files.pythonhosted.org/packages/61/34/82d66ac1fa15bfa219c1b425acdbff9dfbaaa5ce09c6112a91b90de12d36/aos-api-connector-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:54 2020"}