{"info": {"author": "AegisBlade", "author_email": "welovedevs@aegisblade.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing"], "description": "<!-- PROJECT LOGO -->\n\n<p align=\"center\">\n  <a href=\"https://www.aegisblade.com\">\n    <img src=\"https://www.aegisblade.com/images/BigCloud.png\" alt=\"Logo\" width=\"80\">\n  </a>\n\n  <h3 align=\"center\">AegisBlade Python Client</h3>\n\n  <p align=\"center\">\n    <img src=\"https://img.shields.io/pypi/v/aegisblade\" alt=\"pypi version\" />\n    <img src=\"https://img.shields.io/pypi/pyversions/aegisblade\" alt=\"supported python versions\" />\n    <img src=\"https://img.shields.io/github/license/aegisblade/aegis-python\" alt=\"license\">\n  </p>\n\n  <p align=\"center\">\n    Deploy & run your code in a single function call.\n    <br />\n    <a href=\"https://www.aegisblade.com/docs\"><strong>Read the docs \u00bb</strong></a>\n    <br />\n    <br />\n    <a href=\"https://www.github.com/aegisblade/examples\">Examples</a>\n    \u00b7\n    <a href=\"https://www.aegisblade.com/account/register\">Sign Up for an API Key</a>\n    \u00b7\n    <a href=\"https://github.com/aegisblade/aegis-nodejs/issues\">Report Bug</a>\n  </p>\n</p>\n\n## Installation\n\nWe recommend using [virtualenv](https://virtualenv.pypa.io/en/latest/) to create an isolated environment for your python application.\n\nInstall the python package as a dependency of your application.\n\n```bash\n$ pip install aegisblade\n```\n\nOr for `python3`:\n\n```bash\npip3 install aegisblade\n```\n\n## Hello World Example\n\n```javascript\nconst {aegisblade} = require('aegisblade');\nconst os = require(\"os\");\n\n/**\n * In this example the `helloWorld()` function will be run on a\n * server using AegisBlade. \n */\nasync function helloWorld() {\n    console.log(`The server's hostname is ${os.hostname()}`);\n\n    return `Hello World from ${os.hostname()}`;\n}\n\n// Any target function to be run on AegisBlade must be exported.\nmodule.exports = {helloWorld};\n\n/**\n * The `main()` function will run on your local machine\n * and start the job running the `helloWorld()` function\n * on a server using AegisBlade.\n */\nasync function main() {\n    let job = await aegisblade.run(helloWorld);\n\n    console.log(`Job Id: ${job.id}`);\n    console.log(\"Waiting for the job to finish running...\");\n\n    let jobReturnValue = await job.getReturnValue();\n    let jobLogs = await job.getLogs();\n\n    console.log(`Job Return Value: ${jobReturnValue}`);\n    console.log(`Job Logs: ${jobLogs}`);\n}\n\n//  Using the `require.main === module` idiom to only run main when this script\n//    is called directly is especially important when using AegisBlade to prevent\n//    infinite loops of jobs creating jobs.\nif (require.main === module) {\n    (async () => {\n        try {\n            await main();\n        } catch (err) {\n            console.error(err);\n        }\n    })();\n}\n```\n\n## Note on Python 2\n\nThe official python organization will no longer support Python 2 following January 2020.\n\nDue to it's popular usage though, we will likely continue to support a Python 2.7 client for the forseeable future.\n\n## Reference\n\n[Python Client Reference Docs](https://www.aegisblade.com/docs/reference/python)\n\n<!-- CONTACT -->\n## Contact\n\nAegisBlade - [@aegisbladehq](https://twitter.com/aegisbladehq) - welovedevs@aegisblade.com\n\nProject Link: [https://github.com/aegisblade/aegis-nodejs](https://github.com/aegisblade/aegis-nodejs)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.aegisblade.com/", "keywords": "aegisblade server aws ec2 devops infrastructure as code IaC serverless kubernetes", "license": "LGPL2.1", "maintainer": "", "maintainer_email": "", "name": "aegisblade", "package_url": "https://pypi.org/project/aegisblade/", "platform": "", "project_url": "https://pypi.org/project/aegisblade/", "project_urls": {"Bug Reports": "https://github.com/aegisblade/aegis-python/issues", "Docs": "https://www.aegisblade.com/docs", "Github": "https://github.com/aegisblade/aegis-python", "Homepage": "https://www.aegisblade.com/", "Reference": "https://www.aegisblade.com/docs/reference/python"}, "release_url": "https://pypi.org/project/aegisblade/0.2.0/", "requires_dist": ["requests (==2.20.1)", "typing (==3.6.4)", "cloudpickle (==1.2.2)"], "requires_python": ">=2.7", "summary": "Deploy & run your code in a single function call.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <a href=\"https://www.aegisblade.com\" rel=\"nofollow\">\n    <img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d6052da93f098cfa6a7945a5a2b9797160bf24b/68747470733a2f2f7777772e6165676973626c6164652e636f6d2f696d616765732f426967436c6f75642e706e67\" width=\"80\">\n  </a>\n  </p><h3>AegisBlade Python Client</h3>\n  <p align=\"center\">\n    <img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c21fa3bcc0c5f2028f78f05075498e30fb0be4ca/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6165676973626c616465\">\n    <img alt=\"supported python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5918b10225ce6e3493b95a46dc6f5fec532ec9bb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6165676973626c616465\">\n    <img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a80370f5405aa9c9663021d1689dada15a2d6201/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6165676973626c6164652f61656769732d707974686f6e\">\n  </p>\n  <p align=\"center\">\n    Deploy &amp; run your code in a single function call.\n    <br>\n    <a href=\"https://www.aegisblade.com/docs\" rel=\"nofollow\"><strong>Read the docs \u00bb</strong></a>\n    <br>\n    <br>\n    <a href=\"https://www.github.com/aegisblade/examples\" rel=\"nofollow\">Examples</a>\n    \u00b7\n    <a href=\"https://www.aegisblade.com/account/register\" rel=\"nofollow\">Sign Up for an API Key</a>\n    \u00b7\n    <a href=\"https://github.com/aegisblade/aegis-nodejs/issues\" rel=\"nofollow\">Report Bug</a>\n  </p>\n<p></p>\n<h2>Installation</h2>\n<p>We recommend using <a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">virtualenv</a> to create an isolated environment for your python application.</p>\n<p>Install the python package as a dependency of your application.</p>\n<pre>$ pip install aegisblade\n</pre>\n<p>Or for <code>python3</code>:</p>\n<pre>pip3 install aegisblade\n</pre>\n<h2>Hello World Example</h2>\n<pre><span class=\"kr\">const</span> <span class=\"p\">{</span><span class=\"nx\">aegisblade</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'aegisblade'</span><span class=\"p\">);</span>\n<span class=\"kr\">const</span> <span class=\"nx\">os</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"os\"</span><span class=\"p\">);</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * In this example the `helloWorld()` function will be run on a</span>\n<span class=\"cm\"> * server using AegisBlade. </span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">async</span> <span class=\"kd\">function</span> <span class=\"nx\">helloWorld</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`The server's hostname is </span><span class=\"si\">${</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">hostname</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">);</span>\n\n    <span class=\"k\">return</span> <span class=\"sb\">`Hello World from </span><span class=\"si\">${</span><span class=\"nx\">os</span><span class=\"p\">.</span><span class=\"nx\">hostname</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Any target function to be run on AegisBlade must be exported.</span>\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"nx\">helloWorld</span><span class=\"p\">};</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * The `main()` function will run on your local machine</span>\n<span class=\"cm\"> * and start the job running the `helloWorld()` function</span>\n<span class=\"cm\"> * on a server using AegisBlade.</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">async</span> <span class=\"kd\">function</span> <span class=\"nx\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">job</span> <span class=\"o\">=</span> <span class=\"nx\">await</span> <span class=\"nx\">aegisblade</span><span class=\"p\">.</span><span class=\"nx\">run</span><span class=\"p\">(</span><span class=\"nx\">helloWorld</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Job Id: </span><span class=\"si\">${</span><span class=\"nx\">job</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Waiting for the job to finish running...\"</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">jobReturnValue</span> <span class=\"o\">=</span> <span class=\"nx\">await</span> <span class=\"nx\">job</span><span class=\"p\">.</span><span class=\"nx\">getReturnValue</span><span class=\"p\">();</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">jobLogs</span> <span class=\"o\">=</span> <span class=\"nx\">await</span> <span class=\"nx\">job</span><span class=\"p\">.</span><span class=\"nx\">getLogs</span><span class=\"p\">();</span>\n\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Job Return Value: </span><span class=\"si\">${</span><span class=\"nx\">jobReturnValue</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Job Logs: </span><span class=\"si\">${</span><span class=\"nx\">jobLogs</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//  Using the `require.main === module` idiom to only run main when this script</span>\n<span class=\"c1\">//    is called directly is especially important when using AegisBlade to prevent</span>\n<span class=\"c1\">//    infinite loops of jobs creating jobs.</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">main</span> <span class=\"o\">===</span> <span class=\"nx\">module</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"p\">(</span><span class=\"nx\">async</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">try</span> <span class=\"p\">{</span>\n            <span class=\"nx\">await</span> <span class=\"nx\">main</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">})();</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Note on Python 2</h2>\n<p>The official python organization will no longer support Python 2 following January 2020.</p>\n<p>Due to it's popular usage though, we will likely continue to support a Python 2.7 client for the forseeable future.</p>\n<h2>Reference</h2>\n<p><a href=\"https://www.aegisblade.com/docs/reference/python\" rel=\"nofollow\">Python Client Reference Docs</a></p>\n\n<h2>Contact</h2>\n<p>AegisBlade - <a href=\"https://twitter.com/aegisbladehq\" rel=\"nofollow\">@aegisbladehq</a> - <a href=\"mailto:welovedevs@aegisblade.com\">welovedevs@aegisblade.com</a></p>\n<p>Project Link: <a href=\"https://github.com/aegisblade/aegis-nodejs\" rel=\"nofollow\">https://github.com/aegisblade/aegis-nodejs</a></p>\n\n          </div>"}, "last_serial": 5898193, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "325f21e557d57b1a2af62dd297706f70", "sha256": "a579fddd66203cced1b45b119f7e370fe812f9c8074e566154effa2507bd4ae7"}, "downloads": -1, "filename": "aegisblade-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "325f21e557d57b1a2af62dd297706f70", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 48755, "upload_time": "2019-09-27T21:17:56", "upload_time_iso_8601": "2019-09-27T21:17:56.827624Z", "url": "https://files.pythonhosted.org/packages/25/5c/d5c8c3b1fa2343751a4fc3dbd81b2401627cba4f233c0f51139e08942cea/aegisblade-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9ab1fbb88901470b3ee3d7b7b14b9fc", "sha256": "0a52fa0c87a3c195562ad0a3c9ea1cab8dc853f91aa8eb75ed9965045689b77f"}, "downloads": -1, "filename": "aegisblade-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c9ab1fbb88901470b3ee3d7b7b14b9fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 24035, "upload_time": "2019-09-27T21:17:59", "upload_time_iso_8601": "2019-09-27T21:17:59.166416Z", "url": "https://files.pythonhosted.org/packages/dd/51/fd574623b8688465484dd75077c64c39a5890a4d734f6d5a2c9f18a8e172/aegisblade-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "325f21e557d57b1a2af62dd297706f70", "sha256": "a579fddd66203cced1b45b119f7e370fe812f9c8074e566154effa2507bd4ae7"}, "downloads": -1, "filename": "aegisblade-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "325f21e557d57b1a2af62dd297706f70", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 48755, "upload_time": "2019-09-27T21:17:56", "upload_time_iso_8601": "2019-09-27T21:17:56.827624Z", "url": "https://files.pythonhosted.org/packages/25/5c/d5c8c3b1fa2343751a4fc3dbd81b2401627cba4f233c0f51139e08942cea/aegisblade-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9ab1fbb88901470b3ee3d7b7b14b9fc", "sha256": "0a52fa0c87a3c195562ad0a3c9ea1cab8dc853f91aa8eb75ed9965045689b77f"}, "downloads": -1, "filename": "aegisblade-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c9ab1fbb88901470b3ee3d7b7b14b9fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 24035, "upload_time": "2019-09-27T21:17:59", "upload_time_iso_8601": "2019-09-27T21:17:59.166416Z", "url": "https://files.pythonhosted.org/packages/dd/51/fd574623b8688465484dd75077c64c39a5890a4d734f6d5a2c9f18a8e172/aegisblade-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:00 2020"}