{"info": {"author": "Jesus Mejia", "author_email": "jesusmejded@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# Evolutionary Centers Algorithm\n\nECA is a physics-inspired algorithm based on the center of mass concept on \na D-dimensional space for real-parameter single-objective optimization. The \ngeneral idea is to promote the creation of an irregular body using K mass points\nin the current population, then the center of mass is calculated to get a new direction \nfor the next population... [read more.](https://www.dropbox.com/s/kqc22ki2edjtt0y/ECA-optimization.pdf)\n\n## Parameters\n- Parameters (suggested):\n    - Objective function: `fobj`\n    - Dimension: `D`\n    - K-value:\n           `K = 7`\n    - Population size:\n           `N = K*D`\n    - stepsize:\n           `eta_max = 2.0`\n    - binomial probability:\n           `P_bin = 0.03`\n    - Exploit parameter:\n           `P_exploit = 0.95`\n     - Max. number of evaluations:\n           `max_evals = 10000*D`\n\n- Bounds:\n     - Lower: `low_bound`\n     - Upper: `up_bound`\n\n- Search Type:\n    - Maximize:\n        - `minimize = True`\n    - minimize:\n        - `minimize = False`\n\n\n## Example\n\nYou can write Python code to use ECA in your project:\n\n```python\nfrom ecapy import eca\n\n# D-dimensional sphere function\ndef sphere(x):\n    s = 0.0\n    for xi in x:\n        s += xi**2\n    return s\n\nx, fx = eca(sphere, D = 10, minimize=True)\n\n```", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jmejia8/ecapy", "keywords": "optimization evolutionary metaheuristic", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ecapy", "package_url": "https://pypi.org/project/ecapy/", "platform": "", "project_url": "https://pypi.org/project/ecapy/", "project_urls": {"Bug Reports": "https://github.com/jmejia8/ecapy/issues", "Homepage": "https://github.com/jmejia8/ecapy", "Source": "https://github.com/jmejia8/ecapy/"}, "release_url": "https://pypi.org/project/ecapy/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Evolutionary Centers Algorithm: Module for Python coded in C", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Evolutionary Centers Algorithm<br><br>ECA is a physics-inspired algorithm based on the center of mass concept on <br>a D-dimensional space for real-parameter single-objective optimization. The <br>general idea is to promote the creation of an irregular body using K mass points<br>in the current population, then the center of mass is calculated to get a new direction <br>for the next population... [read more.](https://www.dropbox.com/s/kqc22ki2edjtt0y/ECA-optimization.pdf)<br><br>## Parameters<br>- Parameters (suggested):<br>    - Objective function: `fobj`<br>    - Dimension: `D`<br>    - K-value:<br>           `K = 7`<br>    - Population size:<br>           `N = K*D`<br>    - stepsize:<br>           `eta_max = 2.0`<br>    - binomial probability:<br>           `P_bin = 0.03`<br>    - Exploit parameter:<br>           `P_exploit = 0.95`<br>     - Max. number of evaluations:<br>           `max_evals = 10000*D`<br><br>- Bounds:<br>     - Lower: `low_bound`<br>     - Upper: `up_bound`<br><br>- Search Type:<br>    - Maximize:<br>        - `minimize = True`<br>    - minimize:<br>        - `minimize = False`<br><br><br>## Example<br><br>You can write Python code to use ECA in your project:<br><br>```python<br>from ecapy import eca<br><br># D-dimensional sphere function<br>def sphere(x):<br>    s = 0.0<br>    for xi in x:<br>        s += xi**2<br>    return s<br><br>x, fx = eca(sphere, D = 10, minimize=True)<br><br>```\n          </div>"}, "last_serial": 3874331, "releases": {"0.0.7": [{"comment_text": "", "digests": {"md5": "00a4506d60672de2988b834b072900fb", "sha256": "7817a4191ede2aff6b4ee0ab66481c8817fc21b42eddc6b5964d60f34485be81"}, "downloads": -1, "filename": "ecapy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "00a4506d60672de2988b834b072900fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4022, "upload_time": "2018-05-17T04:55:00", "upload_time_iso_8601": "2018-05-17T04:55:00.177021Z", "url": "https://files.pythonhosted.org/packages/27/9f/ede6cf5780fe124aee2c043240c3e1d3f28b196b0f68a070db2f8ecb3169/ecapy-0.0.7.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c40ca41fc24501808a33fce8fa901dcf", "sha256": "0ca1abc0b02aaaf87b661a9b12be795804f956a33954febaf42b4b35d7e1ae8a"}, "downloads": -1, "filename": "ecapy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c40ca41fc24501808a33fce8fa901dcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3014, "upload_time": "2018-05-17T16:01:00", "upload_time_iso_8601": "2018-05-17T16:01:00.228533Z", "url": "https://files.pythonhosted.org/packages/69/ac/d16bf230e948dfdcee361023bcccec89276281d544864cb818957aa88761/ecapy-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6950415d6e3da2ae5853cc8ba7e365de", "sha256": "52f73a06c075b0f8609f56b2cdbdc1ea1b4abbb6380bc72ef191734612b0c542"}, "downloads": -1, "filename": "ecapy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6950415d6e3da2ae5853cc8ba7e365de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4545, "upload_time": "2018-05-18T01:21:45", "upload_time_iso_8601": "2018-05-18T01:21:45.015505Z", "url": "https://files.pythonhosted.org/packages/ff/99/242bb569690a77dcc646da770a40964c4b16ca7c4de4e42da0b3992f4f39/ecapy-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6950415d6e3da2ae5853cc8ba7e365de", "sha256": "52f73a06c075b0f8609f56b2cdbdc1ea1b4abbb6380bc72ef191734612b0c542"}, "downloads": -1, "filename": "ecapy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6950415d6e3da2ae5853cc8ba7e365de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4545, "upload_time": "2018-05-18T01:21:45", "upload_time_iso_8601": "2018-05-18T01:21:45.015505Z", "url": "https://files.pythonhosted.org/packages/ff/99/242bb569690a77dcc646da770a40964c4b16ca7c4de4e42da0b3992f4f39/ecapy-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:04 2020"}