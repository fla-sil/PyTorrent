{"info": {"author": "Jonathan D B Van Schenck", "author_email": "vanschej@oregonstate.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Seabreeze-Server\nA python TCP-Server which allows a OceanOptics Spectrometer to be connected to \nover a network\n\nThe purpose of this library is to allow OceanOptics spectrometers to be\neffectively wifi-enabled, so that data-aquisition can be handled by multiple\ncomputers (some potentially offsite), without having to fiddle with usb cords.\nAdditionally, this opens up the possibility for open-source, web-based user \ninterfaces to be developed for OceanOptics devices.\n\nThis package uses the `seabreeze.cseabreeze` backend to handle communications\nbetween the server and the spectrometer, by exposing the backend API functions\nto the `seabreeze_server.server.SpectrometerManager` object. (Alternatively,\na physical spectrometer can also be emulated in software with the \n`seatease` package, but setting `SpectrometerManager(emulate=True)`). The TCP\nserver is handled by the `seabreeze_server.server.SeaBreezeServer` class \n(based on the `remote-object` package), which exposes the `SpectrometerManager` \nobject's methods and attributes to `seabreeze_server.client.SeaBreezeClient`\ninstances.\n\n# Basic Use\nOn the server-side, connect and configure your spectrometer hardware for\nwhatever kind of measurement you desire, then run something like:\n```python\nHOST, PORT = 'your-ip', 9999\nwith seabreeze_server.server.SeaBreezeServer(\n    (HOST, PORT),\n    emulate = False\n) as server:\n    server.serve_forever()\n```\nSee the `socketserver.TCPServer` documentation for more ideas about\nhow to manage this server.\n\nThen on the client-side, run something like the following:\n```python\nHOST, PORT = 'your-ip', 9999\nclient = seabreeze_server.client.Client(HOST, PORT)\n\n# Prints out currently plugged-in devices\nprint(\n    \"Available Devices:\\n\",\n    \"\\n\".join([\"%d : %s\" % (i,dev)\\\n                for i,dev in enumerate(client.list_devices())\n             ])\n)\n\n# Select the first spectrometer\nclient.select_spectrometer(0)\n\n# Set integration time to 10 ms\nclient.set_integration_time_micros(10*1000)\n\n# Get wavelengths and intensities\nwls = client.get_wavelengths()\ni = client.get_intensities()\n```\n\n# Installing (`pip`)\n`seabreeze-server` is available via pip:\n```bash\n $ pip install seabreeze-server\n```\nIf you haven't previously installed `seabreeze`, you might need to do a bit of\nwork, see 'SeaBreeze Setup' below for more details. \n\n# SeaBreeze Setup\nInstalling `seabreeze` can take some trial an error, especially on linux,\nmake sure that after `pip` installing (or `conda` installing, whatever, \nyou do you) you are also run the os setup script:\n```bash\n $ pip install seabreeze\n $ seabreeze_os_setup\n```\nIf you are still having trouble, check out the main `seabreeze` documentation.\n\n# Development\nFor development, clone this directory, then have fun! Pro-tip: setup a python\nvirtual environment in the main directory:\n```bash\n $ python3 -m venv venv\n $ source venv/bin/activate\n```\n## Installing\n```bash\n (venv) $ python3 setup.py install\n (venv) $ seabreeze_os_setup\n```\n\n## Creating source packages\n```bash\n (venv) $ python3 setup.py sdist bdist_wheel \n```\n\n## Uploading to PyPI\n```bash\n (venv) $ python3 -m twine upload dist/*\n```\n\nSee: [https://packaging.python.org/tutorials/packaging-projects/]\n\n# Acknowledgements\nThe authors would like to thank [Andreas Poehlmann](https://github.com/ap--) \nand collaborators for creating the original `python-seabreeze` package, \nwhich this library depends heavily upon. His package has been indispensable \nto our research.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonathanvanschenck/python-seabreeze-server", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "seabreeze-server", "package_url": "https://pypi.org/project/seabreeze-server/", "platform": "", "project_url": "https://pypi.org/project/seabreeze-server/", "project_urls": {"Homepage": "https://github.com/jonathanvanschenck/python-seabreeze-server"}, "release_url": "https://pypi.org/project/seabreeze-server/0.1.1/", "requires_dist": ["numpy (>=1.18.2)", "future (>=0.18.2)", "remote-object (>=0.2.1)", "seabreeze (>=1.0.1)", "seatease (>=0.3)"], "requires_python": ">=3.6", "summary": "A TCP server to host the `python-seabreeze.cseabreeze` backend", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Seabreeze-Server</h1>\n<p>A python TCP-Server which allows a OceanOptics Spectrometer to be connected to\nover a network</p>\n<p>The purpose of this library is to allow OceanOptics spectrometers to be\neffectively wifi-enabled, so that data-aquisition can be handled by multiple\ncomputers (some potentially offsite), without having to fiddle with usb cords.\nAdditionally, this opens up the possibility for open-source, web-based user\ninterfaces to be developed for OceanOptics devices.</p>\n<p>This package uses the <code>seabreeze.cseabreeze</code> backend to handle communications\nbetween the server and the spectrometer, by exposing the backend API functions\nto the <code>seabreeze_server.server.SpectrometerManager</code> object. (Alternatively,\na physical spectrometer can also be emulated in software with the\n<code>seatease</code> package, but setting <code>SpectrometerManager(emulate=True)</code>). The TCP\nserver is handled by the <code>seabreeze_server.server.SeaBreezeServer</code> class\n(based on the <code>remote-object</code> package), which exposes the <code>SpectrometerManager</code>\nobject's methods and attributes to <code>seabreeze_server.client.SeaBreezeClient</code>\ninstances.</p>\n<h1>Basic Use</h1>\n<p>On the server-side, connect and configure your spectrometer hardware for\nwhatever kind of measurement you desire, then run something like:</p>\n<pre><span class=\"n\">HOST</span><span class=\"p\">,</span> <span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"s1\">'your-ip'</span><span class=\"p\">,</span> <span class=\"mi\">9999</span>\n<span class=\"k\">with</span> <span class=\"n\">seabreeze_server</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">SeaBreezeServer</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"n\">HOST</span><span class=\"p\">,</span> <span class=\"n\">PORT</span><span class=\"p\">),</span>\n    <span class=\"n\">emulate</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">serve_forever</span><span class=\"p\">()</span>\n</pre>\n<p>See the <code>socketserver.TCPServer</code> documentation for more ideas about\nhow to manage this server.</p>\n<p>Then on the client-side, run something like the following:</p>\n<pre><span class=\"n\">HOST</span><span class=\"p\">,</span> <span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"s1\">'your-ip'</span><span class=\"p\">,</span> <span class=\"mi\">9999</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">seabreeze_server</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">HOST</span><span class=\"p\">,</span> <span class=\"n\">PORT</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints out currently plugged-in devices</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"Available Devices:</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s2\">\"</span><span class=\"si\">%d</span><span class=\"s2\"> : </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">dev</span><span class=\"p\">)</span>\\\n                <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">dev</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">list_devices</span><span class=\"p\">())</span>\n             <span class=\"p\">])</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Select the first spectrometer</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">select_spectrometer</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Set integration time to 10 ms</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">set_integration_time_micros</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get wavelengths and intensities</span>\n<span class=\"n\">wls</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_wavelengths</span><span class=\"p\">()</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_intensities</span><span class=\"p\">()</span>\n</pre>\n<h1>Installing (<code>pip</code>)</h1>\n<p><code>seabreeze-server</code> is available via pip:</p>\n<pre> $ pip install seabreeze-server\n</pre>\n<p>If you haven't previously installed <code>seabreeze</code>, you might need to do a bit of\nwork, see 'SeaBreeze Setup' below for more details.</p>\n<h1>SeaBreeze Setup</h1>\n<p>Installing <code>seabreeze</code> can take some trial an error, especially on linux,\nmake sure that after <code>pip</code> installing (or <code>conda</code> installing, whatever,\nyou do you) you are also run the os setup script:</p>\n<pre> $ pip install seabreeze\n $ seabreeze_os_setup\n</pre>\n<p>If you are still having trouble, check out the main <code>seabreeze</code> documentation.</p>\n<h1>Development</h1>\n<p>For development, clone this directory, then have fun! Pro-tip: setup a python\nvirtual environment in the main directory:</p>\n<pre> $ python3 -m venv venv\n $ <span class=\"nb\">source</span> venv/bin/activate\n</pre>\n<h2>Installing</h2>\n<pre> <span class=\"o\">(</span>venv<span class=\"o\">)</span> $ python3 setup.py install\n <span class=\"o\">(</span>venv<span class=\"o\">)</span> $ seabreeze_os_setup\n</pre>\n<h2>Creating source packages</h2>\n<pre> <span class=\"o\">(</span>venv<span class=\"o\">)</span> $ python3 setup.py sdist bdist_wheel \n</pre>\n<h2>Uploading to PyPI</h2>\n<pre> <span class=\"o\">(</span>venv<span class=\"o\">)</span> $ python3 -m twine upload dist/*\n</pre>\n<p>See: [https://packaging.python.org/tutorials/packaging-projects/]</p>\n<h1>Acknowledgements</h1>\n<p>The authors would like to thank <a href=\"https://github.com/ap--\" rel=\"nofollow\">Andreas Poehlmann</a>\nand collaborators for creating the original <code>python-seabreeze</code> package,\nwhich this library depends heavily upon. His package has been indispensable\nto our research.</p>\n\n          </div>"}, "last_serial": 6862624, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "18390e9eebfd4eb226df4e72aca9d5f0", "sha256": "f0bad9f17a5c8f37b5a40fa2b3ab8ea3074cbf8e48963e4047f60e3bcb810d76"}, "downloads": -1, "filename": "seabreeze_server-0.1-py3.7.egg", "has_sig": false, "md5_digest": "18390e9eebfd4eb226df4e72aca9d5f0", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 10059, "upload_time": "2020-03-23T00:06:39", "upload_time_iso_8601": "2020-03-23T00:06:39.491043Z", "url": "https://files.pythonhosted.org/packages/70/2a/d100e87dada0a18ef81672aeca4608a18ae934b99b4cf1eec5ff6df2e44c/seabreeze_server-0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa91fb5b4ed04af4624205f900a009be", "sha256": "d7f0ece9726cf602775cfe4c703b57127b3775300cd160f6500f77dae1960a89"}, "downloads": -1, "filename": "seabreeze_server-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa91fb5b4ed04af4624205f900a009be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6043, "upload_time": "2020-03-23T00:06:37", "upload_time_iso_8601": "2020-03-23T00:06:37.359679Z", "url": "https://files.pythonhosted.org/packages/25/76/0fcb8f213970a4e904a81535b693a888283b09f4a2aca570b407528f5fe5/seabreeze_server-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "994b5116ac2512ae2f76cc70e1923f71", "sha256": "4e04434aefd57626a72633bc83e407a9d8e0b3a200b5b9c1171b2fb27ecaae9a"}, "downloads": -1, "filename": "seabreeze-server-0.1.tar.gz", "has_sig": false, "md5_digest": "994b5116ac2512ae2f76cc70e1923f71", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4355, "upload_time": "2020-03-23T00:06:40", "upload_time_iso_8601": "2020-03-23T00:06:40.297959Z", "url": "https://files.pythonhosted.org/packages/f6/54/de440cc7d63d3d90846db684ad700007eb58ac81293dfd9f1be69072cbf4/seabreeze-server-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "dc3d678b7435b04ae6c9739d7f02b1a6", "sha256": "b5bd46730564187aa3599356d4205a30d95fd3dc16775550ababefd60a389311"}, "downloads": -1, "filename": "seabreeze_server-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dc3d678b7435b04ae6c9739d7f02b1a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7444, "upload_time": "2020-03-23T01:10:24", "upload_time_iso_8601": "2020-03-23T01:10:24.722102Z", "url": "https://files.pythonhosted.org/packages/81/f5/292491c09e1295ccb103c90d0f587866bb11473289f24361769716b5a29c/seabreeze_server-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc8992d480968b0f31befa2b295d851e", "sha256": "80f051a27f6dab8af8255b5322ab4a0b3b53278e9cfe09953a9d6b04e060945f"}, "downloads": -1, "filename": "seabreeze-server-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cc8992d480968b0f31befa2b295d851e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5794, "upload_time": "2020-03-23T01:10:26", "upload_time_iso_8601": "2020-03-23T01:10:26.636450Z", "url": "https://files.pythonhosted.org/packages/9e/e4/8d20d44c4cf0513dcce60f1af6b1fb24bfca05e1114bc7d1a5df594a772c/seabreeze-server-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc3d678b7435b04ae6c9739d7f02b1a6", "sha256": "b5bd46730564187aa3599356d4205a30d95fd3dc16775550ababefd60a389311"}, "downloads": -1, "filename": "seabreeze_server-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dc3d678b7435b04ae6c9739d7f02b1a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7444, "upload_time": "2020-03-23T01:10:24", "upload_time_iso_8601": "2020-03-23T01:10:24.722102Z", "url": "https://files.pythonhosted.org/packages/81/f5/292491c09e1295ccb103c90d0f587866bb11473289f24361769716b5a29c/seabreeze_server-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc8992d480968b0f31befa2b295d851e", "sha256": "80f051a27f6dab8af8255b5322ab4a0b3b53278e9cfe09953a9d6b04e060945f"}, "downloads": -1, "filename": "seabreeze-server-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cc8992d480968b0f31befa2b295d851e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5794, "upload_time": "2020-03-23T01:10:26", "upload_time_iso_8601": "2020-03-23T01:10:26.636450Z", "url": "https://files.pythonhosted.org/packages/9e/e4/8d20d44c4cf0513dcce60f1af6b1fb24bfca05e1114bc7d1a5df594a772c/seabreeze-server-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:11 2020"}