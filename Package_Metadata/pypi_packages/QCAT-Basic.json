{"info": {"author": "Weihua Chen", "author_email": "weihua.chen@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python :: 2.7"], "description": "# Example Package\r\n\r\nThis is a simple example package. You can use\r\n[Github-flavored Markdown](https://guides.github.com/features/mastering-markdown/)\r\nto write your content.\r\n\r\n# Test function to print out all list items in list recursively\r\ndef printOutAllListItems(curList):\r\n\r\n# Function to print out the value of strItem in a well formatted list\r\n# curList: <List> List to find out the value\r\n# strItem: <string> matching string used to find the value\r\n# length: <int> the number of list elements after the matching string of strItem\r\n# example: printOutListItemValue(curList,\"featureGroupIndRel10-v1060\",4) will return '00000000 00101000 00000000 00000000'B\r\ndef printOutListItemValue(curList, strItem, length=1):\r\n\r\ndef printOutFGIValue(curList, strItem, length=1):\r\n\r\n# use qcat client to merge multiple logs into single\r\n# input: a string with all logs path combined together\r\n#        could be qmdl, isf, dlf, qmdl2, even mixed. for now will support only 1 format at a time.\r\n# output: path to save the merged log.\r\n#        could be isf, dlf, TXT; details see QCAT6 User Guide <<80-V1233-6 T>>\r\ndef qcat_merge_log(targetLogPath, mergedLogPath, filterList = None):\r\n\r\n# Use qcat to parse log file into TXT\r\n# logpath: path of log to be parsed\r\n# filterList: special mask IDs in a line to be filtered out, example: 0x147E\r\n# parsedFile: output txt\r\ndef qcat_parse_log(logpath, filterList, parsedFile):\r\n\r\n# Use qcat to parse log file into TXT\r\n# logpath: path of log to be parsed\r\n# filterList: special mask IDs in a line to be filtered out, example: 0x147E\r\n# parsedFile: output txt\r\ndef qcat_filter_log(logpath, filterList, parsedFile):\r\n\r\n# test for another method, specific for \"UECapabilityInformation\"\r\ndef qcat_parse_per_log_package(logpath, filterID, filterStr, parsedFile):\r\n\r\n# filter special lines contain a list of words, example: [\"l_PgaGain\", \"q_AdcAmpIp1mV\"]\r\ndef findandsavelogs(substr, infile, outfile):\r\n\r\ndef getTimeListFromLog(logfile):\r\n\r\n# find out words contains time format string, example: '20:56:13.945',\r\n# and return the list of time\r\ndef getTimeFromLog(logfile, id):\r\n\r\n# find out words contains a value after a name example: q_AdcAmpIp1mV = 111,\r\n# and return the list of value\r\ndef getSpecialPointFromLog(logfile, id):\r\n\r\n\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/weihuachen/python_qcat_apis", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "QCAT-Basic", "package_url": "https://pypi.org/project/QCAT-Basic/", "platform": "", "project_url": "https://pypi.org/project/QCAT-Basic/", "project_urls": {"Homepage": "https://github.com/weihuachen/python_qcat_apis"}, "release_url": "https://pypi.org/project/QCAT-Basic/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A small package contains most useful QCAT interfaces", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Example Package</h1>\n<p>This is a simple example package. You can use\n<a href=\"https://guides.github.com/features/mastering-markdown/\" rel=\"nofollow\">Github-flavored Markdown</a>\nto write your content.</p>\n<h1>Test function to print out all list items in list recursively</h1>\n<p>def printOutAllListItems(curList):</p>\n<h1>Function to print out the value of strItem in a well formatted list</h1>\n<h1>curList: &lt;List&gt; List to find out the value</h1>\n<h1>strItem: &lt;string&gt; matching string used to find the value</h1>\n<h1>length: &lt;int&gt; the number of list elements after the matching string of strItem</h1>\n<h1>example: printOutListItemValue(curList,\"featureGroupIndRel10-v1060\",4) will return '00000000 00101000 00000000 00000000'B</h1>\n<p>def printOutListItemValue(curList, strItem, length=1):</p>\n<p>def printOutFGIValue(curList, strItem, length=1):</p>\n<h1>use qcat client to merge multiple logs into single</h1>\n<h1>input: a string with all logs path combined together</h1>\n<h1>could be qmdl, isf, dlf, qmdl2, even mixed. for now will support only 1 format at a time.</h1>\n<h1>output: path to save the merged log.</h1>\n<h1>could be isf, dlf, TXT; details see QCAT6 User Guide &lt;&lt;80-V1233-6 T&gt;&gt;</h1>\n<p>def qcat_merge_log(targetLogPath, mergedLogPath, filterList = None):</p>\n<h1>Use qcat to parse log file into TXT</h1>\n<h1>logpath: path of log to be parsed</h1>\n<h1>filterList: special mask IDs in a line to be filtered out, example: 0x147E</h1>\n<h1>parsedFile: output txt</h1>\n<p>def qcat_parse_log(logpath, filterList, parsedFile):</p>\n<h1>Use qcat to parse log file into TXT</h1>\n<h1>logpath: path of log to be parsed</h1>\n<h1>filterList: special mask IDs in a line to be filtered out, example: 0x147E</h1>\n<h1>parsedFile: output txt</h1>\n<p>def qcat_filter_log(logpath, filterList, parsedFile):</p>\n<h1>test for another method, specific for \"UECapabilityInformation\"</h1>\n<p>def qcat_parse_per_log_package(logpath, filterID, filterStr, parsedFile):</p>\n<h1>filter special lines contain a list of words, example: [\"l_PgaGain\", \"q_AdcAmpIp1mV\"]</h1>\n<p>def findandsavelogs(substr, infile, outfile):</p>\n<p>def getTimeListFromLog(logfile):</p>\n<h1>find out words contains time format string, example: '20:56:13.945',</h1>\n<h1>and return the list of time</h1>\n<p>def getTimeFromLog(logfile, id):</p>\n<h1>find out words contains a value after a name example: q_AdcAmpIp1mV = 111,</h1>\n<h1>and return the list of value</h1>\n<p>def getSpecialPointFromLog(logfile, id):</p>\n\n          </div>"}, "last_serial": 4169887, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8fbe2816d8362355749a7eee5f7e5e2d", "sha256": "11cc5e39c7daa05a967db92fcce322bf6f773ab8cbc1ba6326716d7742dd715c"}, "downloads": -1, "filename": "QCAT_Basic-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "8fbe2816d8362355749a7eee5f7e5e2d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1524, "upload_time": "2018-08-10T19:51:42", "upload_time_iso_8601": "2018-08-10T19:51:42.329428Z", "url": "https://files.pythonhosted.org/packages/0b/24/28c0637fa9a51e3ca9796b4f58c8066c4475da4620cc0ff8ae64b8e2648d/QCAT_Basic-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "598ae374c96d67d19f2919aed94d5f77", "sha256": "50fd375b907fa469b7f3e95938b104cbb5c3e7629bda783c3e51daf02c8e4144"}, "downloads": -1, "filename": "QCAT_Basic-0.0.1.tar.gz", "has_sig": false, "md5_digest": "598ae374c96d67d19f2919aed94d5f77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1160, "upload_time": "2018-08-10T19:51:43", "upload_time_iso_8601": "2018-08-10T19:51:43.644354Z", "url": "https://files.pythonhosted.org/packages/50/31/8cb4070b6d70268e9c0e0ab3fa530acb1b8f2fa8a719adef0be09b70318d/QCAT_Basic-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7c845ae59768a3bce2d30a379f0de5dd", "sha256": "f087ede22016d7f000fd266642f4e098faaa9ccc3fd717d1cf1491d2e5567635"}, "downloads": -1, "filename": "QCAT_Basic-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "7c845ae59768a3bce2d30a379f0de5dd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4245, "upload_time": "2018-08-10T20:07:23", "upload_time_iso_8601": "2018-08-10T20:07:23.038737Z", "url": "https://files.pythonhosted.org/packages/40/a8/3ad879aeb081efae6525ff3c64ddb5a4cd7aa5898b50a6e3ba58e1af55d8/QCAT_Basic-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b75e3f5b5606efbf2c727223c0562a0", "sha256": "c0a1db7e850e430b9204ab085c56ad77fec3ee76d08d6666ab473a6de5f36ddb"}, "downloads": -1, "filename": "QCAT_Basic-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7b75e3f5b5606efbf2c727223c0562a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3705, "upload_time": "2018-08-10T20:07:24", "upload_time_iso_8601": "2018-08-10T20:07:24.435040Z", "url": "https://files.pythonhosted.org/packages/8d/17/ca055680db55cca8037871637a6b424af3bd0fb7e1066680aafeb3a81c60/QCAT_Basic-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a4b91eba1b27b0969a17566ad1bf144d", "sha256": "824e55717c0d992ac71e338b62d501519eadcd8689a7b6898b4f8facaa3ee9d7"}, "downloads": -1, "filename": "QCAT_Basic-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "a4b91eba1b27b0969a17566ad1bf144d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4257, "upload_time": "2018-08-10T20:46:50", "upload_time_iso_8601": "2018-08-10T20:46:50.647632Z", "url": "https://files.pythonhosted.org/packages/1e/5f/f1b9a32d71a990277b4266be229466ea9f40f053c276c44f40652b1840f7/QCAT_Basic-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a05299f7065973a8d8033878c0d05877", "sha256": "9f60ab976230852ae2c17974833122fe83d63c04f92002adefee0285d9591097"}, "downloads": -1, "filename": "QCAT_Basic-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a05299f7065973a8d8033878c0d05877", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3707, "upload_time": "2018-08-10T20:46:52", "upload_time_iso_8601": "2018-08-10T20:46:52.936497Z", "url": "https://files.pythonhosted.org/packages/2c/a2/f6d63e4f215bc9c11e2abcf386dcc27f5e6d1c4f23aa1c2fe06bf39b5c1e/QCAT_Basic-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "bcc5177a07d4641ba9d5bd02b40c95b9", "sha256": "4cb4a69b6898569b2907dad31469a89ddcc54372a4a69974c3a91cd9ef3c0223"}, "downloads": -1, "filename": "QCAT_Basic-0.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "bcc5177a07d4641ba9d5bd02b40c95b9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5023, "upload_time": "2018-08-14T15:14:34", "upload_time_iso_8601": "2018-08-14T15:14:34.888638Z", "url": "https://files.pythonhosted.org/packages/f8/d6/83d7d0e930325960c2b3aee1323c447de6de5fe84388d4499011621bd412/QCAT_Basic-0.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dd566b2144778e6534cad065291c7e2", "sha256": "894dfc614a0ca94b050e17eed781aa5b512b0c37f75b5af30f0a313b75e48606"}, "downloads": -1, "filename": "QCAT_Basic-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0dd566b2144778e6534cad065291c7e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3937, "upload_time": "2018-08-14T15:14:36", "upload_time_iso_8601": "2018-08-14T15:14:36.395728Z", "url": "https://files.pythonhosted.org/packages/42/28/6dbd37030297fc5e8988d075f3e8a925f9a116e9510e8c1f3a3033ee3073/QCAT_Basic-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bcc5177a07d4641ba9d5bd02b40c95b9", "sha256": "4cb4a69b6898569b2907dad31469a89ddcc54372a4a69974c3a91cd9ef3c0223"}, "downloads": -1, "filename": "QCAT_Basic-0.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "bcc5177a07d4641ba9d5bd02b40c95b9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5023, "upload_time": "2018-08-14T15:14:34", "upload_time_iso_8601": "2018-08-14T15:14:34.888638Z", "url": "https://files.pythonhosted.org/packages/f8/d6/83d7d0e930325960c2b3aee1323c447de6de5fe84388d4499011621bd412/QCAT_Basic-0.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dd566b2144778e6534cad065291c7e2", "sha256": "894dfc614a0ca94b050e17eed781aa5b512b0c37f75b5af30f0a313b75e48606"}, "downloads": -1, "filename": "QCAT_Basic-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0dd566b2144778e6534cad065291c7e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3937, "upload_time": "2018-08-14T15:14:36", "upload_time_iso_8601": "2018-08-14T15:14:36.395728Z", "url": "https://files.pythonhosted.org/packages/42/28/6dbd37030297fc5e8988d075f3e8a925f9a116e9510e8c1f3a3033ee3073/QCAT_Basic-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:03 2020"}