{"info": {"author": "Anderson Bravalheri", "author_email": "andersonbravalheri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": ".. image:: https://travis-ci.org/pyscaffold/pyscaffoldext-cookiecutter.svg?branch=master\n    :alt: Travis\n    :target: https://travis-ci.org/pyscaffold/pyscaffoldext-cookiecutter\n.. image:: https://readthedocs.org/projects/pyscaffoldext-cookiecutter/badge/?version=latest\n    :alt: ReadTheDocs\n    :target: https://pyscaffoldext-cookiecutter.readthedocs.io/\n.. image:: https://img.shields.io/coveralls/github/pyscaffold/pyscaffoldext-cookiecutter/master.svg\n    :alt: Coveralls\n    :target: https://coveralls.io/r/pyscaffold/pyscaffoldext-cookiecutter\n.. image:: https://img.shields.io/pypi/v/pyscaffoldext-cookiecutter.svg\n    :alt: PyPI-Server\n    :target: https://pypi.org/project/pyscaffoldext-cookiecutter/\n\n\n==========================\npyscaffoldext-cookiecutter\n==========================\n\n    Extension that combines the flexibility of **Cookiecutter** templates\n    with the power of **PyScaffold**.\n\n`Cookiecutter`_ is a flexible utility that allows the definition of templates\nfor a diverse range of software projects.\nOn the other hand, `PyScaffold`_ is focused in a good out-of-the-box experience\nfor developing distributable Python packages (exclusively).\nDespite the different objectives, it is possible to combine the power of both\ntools to create a custom Python project setup.\n\n\nQuickstart\n==========\n\nThis extension can be directly installed with ``pip``:\n\n.. code-block:: bash\n\n    $ pip install pyscaffoldext-cookiecutter\n\nOr, if you prefer ``pipx``:\n\n.. code-block:: shell\n\n   $ pipx install pyscaffold  # if you haven't installed pyscaffold yet\n   $ pipx inject pyscaffold pyscaffoldext-cookiecutter\n\nNote that, after the installation, ``putup -h`` will show a new option\n``--cookiecutter TEMPLATE``.\nUse this option to point out which template you want to use (path or url).\nThe file structure created by `Cookiecutter`_ will be refined by PyScaffold\nafterwards.\nFor example:\n\n.. code-block:: shell\n\n   $ putup my-proj1 --cookiecutter ~/my-templates/default\n   $ putup my-proj2 --cookiecutter gh:something/from-github\n\nPlease refer to `Cookiecutter`_ documentation for more details on possible URLs\nand abbreviations.\n\n\nCookiecutter templates with PyScaffold\n======================================\n\nThe following example shows how to create a new package named ``mypkg``,\nthat uses a Cookiecutter template, but is enhanced by PyScaffold's features:\n\n.. code-block:: bash\n\n    $ putup mypkg --cookiecutter gh:pyscaffold/cookiecutter-pypackage\n\nThis is roughly equivalent to first create a project using the Cookiecutter\ntemplate and convert it to PyScaffold afterwards:\n\n.. code-block:: bash\n\n    $ cookiecutter --no-input gh:pyscaffold/cookiecutter-pypackage project_name=mypkg\n    $ putup mypkg --force\n\n.. note::\n\n    For complex Cookiecutter templates calling ``cookiecutter`` and ``putup``\n    separately may be a better option, since it is possible to answer\n    specific template questions or at least set values for Cookiecutter\n    variables.\n\n.. warning::\n\n    Although using Cookiecutter templates is a viable solution to customize\n    a project that was set up with PyScaffold, the recommended way is to help\n    improve PyScaffold by contributing an `extension`_.\n\n\nSuitable templates\n------------------\n\nNote that PyScaffold will overwrite some files generated by Cookiecutter,\nlike ``setup.py``, the ``__init__.py`` file under the package folder\nand most of the ``docs`` folder, in order to provide `setuptools_scm`_\nand `sphinx`_ integration.\nTherefore not all Cookiecutter templates are suitable for this approach.\n\nIdeally, interoperable templates should focus on the file structure inside the\n``src`` folder instead of packaging or distributing, since PyScaffold already\nhandles it under-the-hood. This also means that your template should adhere to\nthe src-layout if you want to generate files within your Python package.\n\nIn addition, PyScaffold runs Cookiecutter with the ``--no-input`` flag\nactivated and thus the user is not prompted for manual configuration. Instead,\nPyScaffold injects the following parameters::\n\n    author\n    email\n    project_name\n    package_name\n    project_short_description\n\nAccordingly, the template file structure should be similar to::\n\n    cookiecutter-something/\n    \u2514\u2500\u2500 {{cookiecutter.project_name}}/\n        \u2514\u2500\u2500 src/\n            \u2514\u2500\u2500 {{cookiecutter.package_name}}/\n                \u2514\u2500\u2500 ...\n\nSee `Cookiecutter`_ for more information about template creation.\n\n.. note::\n\n   PyScaffold uses Cookiecutter only for its ability to create files.\n   Pre/post hooks that perform any other kind of side effect are not\n   guaranteed to work.\n\n\nNote\n====\n\nThis project has been set up using PyScaffold 3.2. For details and usage\ninformation on PyScaffold see https://pyscaffold.org/.\n\n\n.. _PyScaffold: https://pyscaffold.org\n.. _Cookiecutter: https://cookiecutter.readthedocs.org\n.. _setuptools_scm: https://pypi.python.org/pypi/setuptools_scm/\n.. _sphinx: http://www.sphinx-doc.org\n.. _extension: https://pyscaffold.org/en/latest/extensions.html\n\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pyscaffold.org", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "pyscaffoldext-cookiecutter", "package_url": "https://pypi.org/project/pyscaffoldext-cookiecutter/", "platform": "any", "project_url": "https://pypi.org/project/pyscaffoldext-cookiecutter/", "project_urls": {"Documentation": "https://pyscaffold.org/", "Homepage": "https://pyscaffold.org"}, "release_url": "https://pypi.org/project/pyscaffoldext-cookiecutter/0.1b1/", "requires_dist": ["pyscaffold (<4.1a0,>=4.0a1)", "cookiecutter", "flake8 ; extra == 'testing'", "flake8-bugbear ; extra == 'testing'", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'", "pytest-virtualenv ; extra == 'testing'", "pytest-xdist ; extra == 'testing'"], "requires_python": "", "summary": "Integration of Cookiecutter project templates into PyScaffold (see: https://github.com/cookiecutter/cookiecutter)", "version": "0.1b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/pyscaffold/pyscaffoldext-cookiecutter\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/459af8527cd0cf96aac15fb9a00906127b22f27d/68747470733a2f2f7472617669732d63692e6f72672f707973636166666f6c642f707973636166666f6c646578742d636f6f6b69656375747465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pyscaffoldext-cookiecutter.readthedocs.io/\" rel=\"nofollow\"><img alt=\"ReadTheDocs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c86cd403eabd4928660efc1bac4247f81b17ad48/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707973636166666f6c646578742d636f6f6b69656375747465722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/r/pyscaffold/pyscaffoldext-cookiecutter\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abf62ffb59cd266d4d6bd7ff87b240fe00fba76e/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f707973636166666f6c642f707973636166666f6c646578742d636f6f6b69656375747465722f6d61737465722e737667\"></a>\n<a href=\"https://pypi.org/project/pyscaffoldext-cookiecutter/\" rel=\"nofollow\"><img alt=\"PyPI-Server\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a63113a6e198f363aac1fcdf525c133ff4e6de8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973636166666f6c646578742d636f6f6b69656375747465722e737667\"></a>\n<div id=\"pyscaffoldext-cookiecutter\">\n<h2>pyscaffoldext-cookiecutter</h2>\n<blockquote>\nExtension that combines the flexibility of <strong>Cookiecutter</strong> templates\nwith the power of <strong>PyScaffold</strong>.</blockquote>\n<p><a href=\"https://cookiecutter.readthedocs.org\" rel=\"nofollow\">Cookiecutter</a> is a flexible utility that allows the definition of templates\nfor a diverse range of software projects.\nOn the other hand, <a href=\"https://pyscaffold.org\" rel=\"nofollow\">PyScaffold</a> is focused in a good out-of-the-box experience\nfor developing distributable Python packages (exclusively).\nDespite the different objectives, it is possible to combine the power of both\ntools to create a custom Python project setup.</p>\n<div id=\"quickstart\">\n<h3>Quickstart</h3>\n<p>This extension can be directly installed with <tt>pip</tt>:</p>\n<pre>$ pip install pyscaffoldext-cookiecutter\n</pre>\n<p>Or, if you prefer <tt>pipx</tt>:</p>\n<pre>$ pipx install pyscaffold  <span class=\"c1\"># if you haven't installed pyscaffold yet\n</span>$ pipx inject pyscaffold pyscaffoldext-cookiecutter\n</pre>\n<p>Note that, after the installation, <tt>putup <span class=\"pre\">-h</span></tt> will show a new option\n<tt><span class=\"pre\">--cookiecutter</span> TEMPLATE</tt>.\nUse this option to point out which template you want to use (path or url).\nThe file structure created by <a href=\"https://cookiecutter.readthedocs.org\" rel=\"nofollow\">Cookiecutter</a> will be refined by PyScaffold\nafterwards.\nFor example:</p>\n<pre>$ putup my-proj1 --cookiecutter ~/my-templates/default\n$ putup my-proj2 --cookiecutter gh:something/from-github\n</pre>\n<p>Please refer to <a href=\"https://cookiecutter.readthedocs.org\" rel=\"nofollow\">Cookiecutter</a> documentation for more details on possible URLs\nand abbreviations.</p>\n</div>\n<div id=\"cookiecutter-templates-with-pyscaffold\">\n<h3>Cookiecutter templates with PyScaffold</h3>\n<p>The following example shows how to create a new package named <tt>mypkg</tt>,\nthat uses a Cookiecutter template, but is enhanced by PyScaffold\u2019s features:</p>\n<pre>$ putup mypkg --cookiecutter gh:pyscaffold/cookiecutter-pypackage\n</pre>\n<p>This is roughly equivalent to first create a project using the Cookiecutter\ntemplate and convert it to PyScaffold afterwards:</p>\n<pre>$ cookiecutter --no-input gh:pyscaffold/cookiecutter-pypackage <span class=\"nv\">project_name</span><span class=\"o\">=</span>mypkg\n$ putup mypkg --force\n</pre>\n<div>\n<p>Note</p>\n<p>For complex Cookiecutter templates calling <tt>cookiecutter</tt> and <tt>putup</tt>\nseparately may be a better option, since it is possible to answer\nspecific template questions or at least set values for Cookiecutter\nvariables.</p>\n</div>\n<div>\n<p>Warning</p>\n<p>Although using Cookiecutter templates is a viable solution to customize\na project that was set up with PyScaffold, the recommended way is to help\nimprove PyScaffold by contributing an <a href=\"https://pyscaffold.org/en/latest/extensions.html\" rel=\"nofollow\">extension</a>.</p>\n</div>\n<div id=\"suitable-templates\">\n<h4>Suitable templates</h4>\n<p>Note that PyScaffold will overwrite some files generated by Cookiecutter,\nlike <tt>setup.py</tt>, the <tt>__init__.py</tt> file under the package folder\nand most of the <tt>docs</tt> folder, in order to provide <a href=\"https://pypi.python.org/pypi/setuptools_scm/\" rel=\"nofollow\">setuptools_scm</a>\nand <a href=\"http://www.sphinx-doc.org\" rel=\"nofollow\">sphinx</a> integration.\nTherefore not all Cookiecutter templates are suitable for this approach.</p>\n<p>Ideally, interoperable templates should focus on the file structure inside the\n<tt>src</tt> folder instead of packaging or distributing, since PyScaffold already\nhandles it under-the-hood. This also means that your template should adhere to\nthe src-layout if you want to generate files within your Python package.</p>\n<p>In addition, PyScaffold runs Cookiecutter with the <tt><span class=\"pre\">--no-input</span></tt> flag\nactivated and thus the user is not prompted for manual configuration. Instead,\nPyScaffold injects the following parameters:</p>\n<pre>author\nemail\nproject_name\npackage_name\nproject_short_description\n</pre>\n<p>Accordingly, the template file structure should be similar to:</p>\n<pre>cookiecutter-something/\n\u2514\u2500\u2500 {{cookiecutter.project_name}}/\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 {{cookiecutter.package_name}}/\n            \u2514\u2500\u2500 ...\n</pre>\n<p>See <a href=\"https://cookiecutter.readthedocs.org\" rel=\"nofollow\">Cookiecutter</a> for more information about template creation.</p>\n<div>\n<p>Note</p>\n<p>PyScaffold uses Cookiecutter only for its ability to create files.\nPre/post hooks that perform any other kind of side effect are not\nguaranteed to work.</p>\n</div>\n</div>\n</div>\n<div id=\"note\">\n<h3>Note</h3>\n<p>This project has been set up using PyScaffold 3.2. For details and usage\ninformation on PyScaffold see <a href=\"https://pyscaffold.org/\" rel=\"nofollow\">https://pyscaffold.org/</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5530906, "releases": {"0.1b1": [{"comment_text": "", "digests": {"md5": "aa5f177c68d03b963ff0c32e235171e7", "sha256": "4054bf3e42097ed125662cb61fd2b29946ef552db256585741c6ee98b503bb3e"}, "downloads": -1, "filename": "pyscaffoldext_cookiecutter-0.1b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa5f177c68d03b963ff0c32e235171e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7381, "upload_time": "2019-07-14T12:51:26", "upload_time_iso_8601": "2019-07-14T12:51:26.253429Z", "url": "https://files.pythonhosted.org/packages/0d/15/38fae753641908780992dcfc1a324ed465bb8477dbc5f20719442782d7a1/pyscaffoldext_cookiecutter-0.1b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c2ab76eceaae1ab94f2294fc52dbf71", "sha256": "0888ef454e125b96058c3c9d4dd2e656dcd99222e4bd52a884a674e63650d150"}, "downloads": -1, "filename": "pyscaffoldext-cookiecutter-0.1b1.tar.gz", "has_sig": false, "md5_digest": "1c2ab76eceaae1ab94f2294fc52dbf71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20789, "upload_time": "2019-07-14T12:51:28", "upload_time_iso_8601": "2019-07-14T12:51:28.661604Z", "url": "https://files.pythonhosted.org/packages/8c/a5/4b057c59f8db7db54044347dc54992f6b0e480b13036b01676979b29acd3/pyscaffoldext-cookiecutter-0.1b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa5f177c68d03b963ff0c32e235171e7", "sha256": "4054bf3e42097ed125662cb61fd2b29946ef552db256585741c6ee98b503bb3e"}, "downloads": -1, "filename": "pyscaffoldext_cookiecutter-0.1b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa5f177c68d03b963ff0c32e235171e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7381, "upload_time": "2019-07-14T12:51:26", "upload_time_iso_8601": "2019-07-14T12:51:26.253429Z", "url": "https://files.pythonhosted.org/packages/0d/15/38fae753641908780992dcfc1a324ed465bb8477dbc5f20719442782d7a1/pyscaffoldext_cookiecutter-0.1b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c2ab76eceaae1ab94f2294fc52dbf71", "sha256": "0888ef454e125b96058c3c9d4dd2e656dcd99222e4bd52a884a674e63650d150"}, "downloads": -1, "filename": "pyscaffoldext-cookiecutter-0.1b1.tar.gz", "has_sig": false, "md5_digest": "1c2ab76eceaae1ab94f2294fc52dbf71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20789, "upload_time": "2019-07-14T12:51:28", "upload_time_iso_8601": "2019-07-14T12:51:28.661604Z", "url": "https://files.pythonhosted.org/packages/8c/a5/4b057c59f8db7db54044347dc54992f6b0e480b13036b01676979b29acd3/pyscaffoldext-cookiecutter-0.1b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:20 2020"}