{"info": {"author": "dannosaur", "author_email": "me@dannosaur.com", "bugtrack_url": null, "classifiers": [], "description": "==========================\ndjango-dynamic-form-fields\n==========================\n\n-----\nUsage\n-----\n\n* ``pip install django-dynamic-form-fields``\n* Add ``dynamic_fields`` to ``INSTALLED_APPS``\n* Add to your form as a widget:\n\n.. code-block:: python\n\n  from typing import Type\n  from dynamic_fields.fields import DynamicChoicesWidget\n\n  from myapp.models import MyModel, Item\n\n  def get_item_choices(model: Type[Item], value: int):\n      choices = []\n\n      item = model.objects.get(id=value)\n\n      for thing in item.things:\n          # do something with item\n          choices.append({\n              'value': thing.id,\n              'label': thing.name,\n         })\n\n      return choices\n\n\n  class MyForm(forms.ModelForm):\n      class Meta:\n          model = MyModel\n          fields = ('item', 'dependent_item')\n          widgets = {\n              'dependent_item': DynamicChoicesWidget(\n                  depends_field='item',\n                  model=Item,\n                  callback=get_item_choices,\n                  no_value_disable=True,\n                  include_empty_choice=True,\n                  empty_choice_label=\"Please choose an option\",\n              )\n          }\n\n* Ensure that form media is included with the rest of your view's media\n\n------------\nRequirements\n------------\n\n* Django 1.11-2.2\n* Python 3.5+ (built/tested with 3.6.2)\n* jQuery (built/tested with 1.12.4)\n\n-----------------\nHow does it work?\n-----------------\n\nA view is injected into the project's urlpatterns which is the handler\nfor the ajax callback when the dependent field changes. When the\nDynamicChoicesWidget template is rendered, it serializes the various\nprovided values into Python dotted strings to send to the template.\nIt uses HTML5 data attributes in the markup to pass these values to\nthe Javascript in order to send to the view to tell it what to do next.\n\nThe model is serialized into ``app.model``, and the ``callback`` is\nserialized into the full dotted path to the method within your code,\ne.g; ``app.form.my_form.get_choices``. When the dependent field's value\nis changed, the ajax calls the view with the relevant information\nfrom above, then this goes and imports the path, grabs the model\nclass for what was provided from django's model loader, then calls\nyour method with the class itself, and the value provided by the\ndependent field. The output of the callback method is serialized\nback into JSON, returned to the Javascript making the call, which\niterates over the options and resets the select box's options to\nthose provided.\n\nThese can be chained (theoretically) for as many fields as required.\nIt should also (though untested) work with multiple select boxes.\n\n----------\nChange Log\n----------\n\n0.3.2\n-----\n\n* No changes.\n\n0.3.1\n-----\n\n* Changing formatting of documentation since PyPI doesn't like bog-standard markdown\n  these days.\n\n0.3.0\n-----\n\n* Bump allowed django to 2.2+\n\n* Fixed issue found in django 2.2 where the choices JS was being called twice,\n  causing multiple loads and the selected value to not persist across page reloads.\n\n0.1.0/0.2.0\n-----------\n* Initial version", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/dannosaur/django-dynamic-form-fields", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-dynamic-form-fields", "package_url": "https://pypi.org/project/django-dynamic-form-fields/", "platform": "", "project_url": "https://pypi.org/project/django-dynamic-form-fields/", "project_urls": {"Homepage": "https://gitlab.com/dannosaur/django-dynamic-form-fields"}, "release_url": "https://pypi.org/project/django-dynamic-form-fields/0.3.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Dynamically update choice fields based on dependent fields in django", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li><tt>pip install <span class=\"pre\">django-dynamic-form-fields</span></tt></li>\n<li>Add <tt>dynamic_fields</tt> to <tt>INSTALLED_APPS</tt></li>\n<li>Add to your form as a widget:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Type</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dynamic_fields.fields</span> <span class=\"kn\">import</span> <span class=\"n\">DynamicChoicesWidget</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">MyModel</span><span class=\"p\">,</span> <span class=\"n\">Item</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_item_choices</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">Item</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"n\">choices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">thing</span> <span class=\"ow\">in</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">things</span><span class=\"p\">:</span>\n        <span class=\"c1\"># do something with item</span>\n        <span class=\"n\">choices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n            <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"n\">thing</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"n\">thing</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n       <span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">choices</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'item'</span><span class=\"p\">,</span> <span class=\"s1\">'dependent_item'</span><span class=\"p\">)</span>\n        <span class=\"n\">widgets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'dependent_item'</span><span class=\"p\">:</span> <span class=\"n\">DynamicChoicesWidget</span><span class=\"p\">(</span>\n                <span class=\"n\">depends_field</span><span class=\"o\">=</span><span class=\"s1\">'item'</span><span class=\"p\">,</span>\n                <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">Item</span><span class=\"p\">,</span>\n                <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">get_item_choices</span><span class=\"p\">,</span>\n                <span class=\"n\">no_value_disable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">include_empty_choice</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">empty_choice_label</span><span class=\"o\">=</span><span class=\"s2\">\"Please choose an option\"</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n</pre>\n<ul>\n<li>Ensure that form media is included with the rest of your view\u2019s media</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Django 1.11-2.2</li>\n<li>Python 3.5+ (built/tested with 3.6.2)</li>\n<li>jQuery (built/tested with 1.12.4)</li>\n</ul>\n</div>\n<div id=\"how-does-it-work\">\n<h2>How does it work?</h2>\n<p>A view is injected into the project\u2019s urlpatterns which is the handler\nfor the ajax callback when the dependent field changes. When the\nDynamicChoicesWidget template is rendered, it serializes the various\nprovided values into Python dotted strings to send to the template.\nIt uses HTML5 data attributes in the markup to pass these values to\nthe Javascript in order to send to the view to tell it what to do next.</p>\n<p>The model is serialized into <tt>app.model</tt>, and the <tt>callback</tt> is\nserialized into the full dotted path to the method within your code,\ne.g; <tt>app.form.my_form.get_choices</tt>. When the dependent field\u2019s value\nis changed, the ajax calls the view with the relevant information\nfrom above, then this goes and imports the path, grabs the model\nclass for what was provided from django\u2019s model loader, then calls\nyour method with the class itself, and the value provided by the\ndependent field. The output of the callback method is serialized\nback into JSON, returned to the Javascript making the call, which\niterates over the options and resets the select box\u2019s options to\nthose provided.</p>\n<p>These can be chained (theoretically) for as many fields as required.\nIt should also (though untested) work with multiple select boxes.</p>\n</div>\n<div id=\"change-log\">\n<h2>Change Log</h2>\n<div id=\"id1\">\n<h3>0.3.2</h3>\n<ul>\n<li>No changes.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.1</h3>\n<ul>\n<li>Changing formatting of documentation since PyPI doesn\u2019t like bog-standard markdown\nthese days.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.0</h3>\n<ul>\n<li>Bump allowed django to 2.2+</li>\n<li>Fixed issue found in django 2.2 where the choices JS was being called twice,\ncausing multiple loads and the selected value to not persist across page reloads.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0/0.2.0</h3>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6916029, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "adfd7b57c6be2e65621bf08c859db23d", "sha256": "bbe5fec263147ac72dad4fa5f551461bd96a2d93a22793f4c1125fa872f5d2df"}, "downloads": -1, "filename": "django_dynamic_form_fields-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "adfd7b57c6be2e65621bf08c859db23d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7128, "upload_time": "2018-06-18T18:06:38", "upload_time_iso_8601": "2018-06-18T18:06:38.284657Z", "url": "https://files.pythonhosted.org/packages/e2/da/9cbb5b69b20168341ab3df7e42bad61bda42f5ea526d54ea62cbcf6320c0/django_dynamic_form_fields-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0f0d8e0d832a4020dc2bb6251cdee20", "sha256": "4a88ca221e4a6535d93f400d7000537967c1b1fdfb331a6edebf24cad5640fa5"}, "downloads": -1, "filename": "django-dynamic-form-fields-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f0f0d8e0d832a4020dc2bb6251cdee20", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5513, "upload_time": "2018-06-18T18:06:39", "upload_time_iso_8601": "2018-06-18T18:06:39.456745Z", "url": "https://files.pythonhosted.org/packages/67/15/9613c1538b077045ffd409fab390cb2a0639fe5ba6890e624cde4698a445/django-dynamic-form-fields-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4079b28b95cac24e91ab219315eb6c11", "sha256": "48c6d56fc121641135092f95c052a828dc69f06752c841c4eb95f23bc9da99ea"}, "downloads": -1, "filename": "django_dynamic_form_fields-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4079b28b95cac24e91ab219315eb6c11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7279, "upload_time": "2018-06-19T17:07:27", "upload_time_iso_8601": "2018-06-19T17:07:27.692411Z", "url": "https://files.pythonhosted.org/packages/2c/e3/39c9b9c88752790a90ed8837e33c3f2a23c069cc4698843e47969b196ca2/django_dynamic_form_fields-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de4e47352980ac1ffc6cbba71cda9549", "sha256": "55af5ea3c0f1cc37f05564ad605adb24fb9882e169bcf344c9ce0ac9475c7ef8"}, "downloads": -1, "filename": "django-dynamic-form-fields-0.2.0.tar.gz", "has_sig": false, "md5_digest": "de4e47352980ac1ffc6cbba71cda9549", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5755, "upload_time": "2018-06-19T17:07:29", "upload_time_iso_8601": "2018-06-19T17:07:29.049771Z", "url": "https://files.pythonhosted.org/packages/a8/c5/3397c682939b520314c966ba23c0b2dc6c9de04d7bb617cdf5b4f4f4560d/django-dynamic-form-fields-0.2.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "9c2ea4c429b69fd68429c4a98d025f02", "sha256": "18a747e01891ec91049ba7b7a2317e561d60243de8bb254912d169b48bfa479c"}, "downloads": -1, "filename": "django-dynamic-form-fields-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9c2ea4c429b69fd68429c4a98d025f02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6452, "upload_time": "2020-03-30T20:42:29", "upload_time_iso_8601": "2020-03-30T20:42:29.841910Z", "url": "https://files.pythonhosted.org/packages/87/b5/7387331fcc7f36f421f6e92f07616dce42fa0e0231daeb4dc1e51e200d27/django-dynamic-form-fields-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c2ea4c429b69fd68429c4a98d025f02", "sha256": "18a747e01891ec91049ba7b7a2317e561d60243de8bb254912d169b48bfa479c"}, "downloads": -1, "filename": "django-dynamic-form-fields-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9c2ea4c429b69fd68429c4a98d025f02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6452, "upload_time": "2020-03-30T20:42:29", "upload_time_iso_8601": "2020-03-30T20:42:29.841910Z", "url": "https://files.pythonhosted.org/packages/87/b5/7387331fcc7f36f421f6e92f07616dce42fa0e0231daeb4dc1e51e200d27/django-dynamic-form-fields-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:29 2020"}