{"info": {"author": "Jamie Davies", "author_email": "jamie@jamiedavies.me", "bugtrack_url": null, "classifiers": [], "description": "Spout is a small and simple framework that makes it easy to work with data\nstreams in Python. In particular, Spout was designed with the processing and\nconsumption of live data sources in mind.\n\n\nHow it works\n------------\n\nAt the heart of Spout is the concept of a Stream (which is defined in an\nabstract `Stream` class). This defines the basic operations that can be\nperformed upon a data stream:\n\nMapping\n    The items in one stream can be \"mapped\" to another stream. This is done by\n    applying a supplied Function to each item in the input stream, to produce\n    another output stream.\n\n    stream.map(Function)\n\nFiltering\n    The items in a stream can be \"filtered\", so that the resultant stream only\n    contains items that match a given criteria. This is done by using a supplied\n    Predicate to test each item in the input stream, and copies it to the output\n    stream if it passes the test criteria.\n\n    stream.filter(Predicate)\n\nProcessing (Consuming)\n    The items in a stream are used in some calculations or functionality that\n    provides no further output to the stream. This is done by applying the supplied\n    Operation to each item in the stream.\n\n    stream.for_each(Operation)\n\n\nUsage\n-----\n\nTo use Spout, you first need to create an input data stream. A data stream is simply an\ninstantiation of a Stream or any of its children (which can be found in the\nstreams.py file). The Stream class has been specifically designed so that it\nis easy to extend and wrap around currently existing data sources that you might\nhave, such as files or databases.\n\nSome existing examples of stream data sources can by found in sources.py.\n\nFor example, to create a Stream out of the lines in a plain text file:\n\n    from spout.sources import FileInputStream\n    s = FileInputStream(\"test.txt\")\n\nNow that you have your data in a stream, you simply have to process it! This can\nbe done by creating and using your own Functions, Predicates or Operations\n(see above).\n\nFor example, to print out all the lines in a text file that start with a digit,\nbut with the digit stripped, we can create our own Predicate and Function\nand pass these to the .filter() and .map() functions:\n\n    from spout.sources import FileInputStream\n    from spout.structs import Function, Predicate\n    from spout.outputs import PrintOperation\n\n\n    class StartsWithDigit(Predicate):\n        def test(self, obj):\n            return obj[0].is_digit()\n\n\n    class StripFirstChar(Function):\n        def apply(self, input):\n            return input[1:]\n\n\n    s = FileInputStream(\"test.txt\")\n    s         .filter(StartsWithDigit())         .map(StripFirstChar())         .for_each(PrintOperation())\n\n\nInstallation\n------------\n\nSpout is available in the Python Package Index (PyPI), and so the easiest way to\ninstall it is through pip:\n\n    $ pip install spout\n\nHowever, it is also possible to install the repository from the source, through\nthe setup.py utility:\n\n    $ python setup.py install\n\n\nCredits\n-------\n\nThe inspiration for Spout's fluent interface came largely from the OpenIMAJ streaming framework.\nhttp://www.openimaj.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/daviesjamie/spout", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "spout", "package_url": "https://pypi.org/project/spout/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/spout/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/daviesjamie/spout"}, "release_url": "https://pypi.org/project/spout/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "A simple framework that makes it easy to work with data streams in Python.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Spout is a small and simple framework that makes it easy to work with data\nstreams in Python. In particular, Spout was designed with the processing and\nconsumption of live data sources in mind.</p>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>At the heart of Spout is the concept of a Stream (which is defined in an\nabstract <cite>Stream</cite> class). This defines the basic operations that can be\nperformed upon a data stream:</p>\n<dl>\n<dt>Mapping</dt>\n<dd><p>The items in one stream can be \u201cmapped\u201d to another stream. This is done by\napplying a supplied Function to each item in the input stream, to produce\nanother output stream.</p>\n<p>stream.map(Function)</p>\n</dd>\n<dt>Filtering</dt>\n<dd><p>The items in a stream can be \u201cfiltered\u201d, so that the resultant stream only\ncontains items that match a given criteria. This is done by using a supplied\nPredicate to test each item in the input stream, and copies it to the output\nstream if it passes the test criteria.</p>\n<p>stream.filter(Predicate)</p>\n</dd>\n<dt>Processing (Consuming)</dt>\n<dd><p>The items in a stream are used in some calculations or functionality that\nprovides no further output to the stream. This is done by applying the supplied\nOperation to each item in the stream.</p>\n<p>stream.for_each(Operation)</p>\n</dd>\n</dl>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use Spout, you first need to create an input data stream. A data stream is simply an\ninstantiation of a Stream or any of its children (which can be found in the\nstreams.py file). The Stream class has been specifically designed so that it\nis easy to extend and wrap around currently existing data sources that you might\nhave, such as files or databases.</p>\n<p>Some existing examples of stream data sources can by found in sources.py.</p>\n<p>For example, to create a Stream out of the lines in a plain text file:</p>\n<blockquote>\nfrom spout.sources import FileInputStream\ns = FileInputStream(\u201ctest.txt\u201d)</blockquote>\n<p>Now that you have your data in a stream, you simply have to process it! This can\nbe done by creating and using your own Functions, Predicates or Operations\n(see above).</p>\n<p>For example, to print out all the lines in a text file that start with a digit,\nbut with the digit stripped, we can create our own Predicate and Function\nand pass these to the .filter() and .map() functions:</p>\n<blockquote>\n<p>from spout.sources import FileInputStream\nfrom spout.structs import Function, Predicate\nfrom spout.outputs import PrintOperation</p>\n<dl>\n<dt>class StartsWithDigit(Predicate):</dt>\n<dd><dl>\n<dt>def test(self, obj):</dt>\n<dd>return obj[0].is_digit()</dd>\n</dl>\n</dd>\n<dt>class StripFirstChar(Function):</dt>\n<dd><dl>\n<dt>def apply(self, input):</dt>\n<dd>return input[1:]</dd>\n</dl>\n</dd>\n</dl>\n<p>s = FileInputStream(\u201ctest.txt\u201d)\ns         .filter(StartsWithDigit())         .map(StripFirstChar())         .for_each(PrintOperation())</p>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Spout is available in the Python Package Index (PyPI), and so the easiest way to\ninstall it is through pip:</p>\n<blockquote>\n$ pip install spout</blockquote>\n<p>However, it is also possible to install the repository from the source, through\nthe setup.py utility:</p>\n<blockquote>\n$ python setup.py install</blockquote>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>The inspiration for Spout\u2019s fluent interface came largely from the OpenIMAJ streaming framework.\n<a href=\"http://www.openimaj.org/\" rel=\"nofollow\">http://www.openimaj.org/</a></p>\n</div>\n\n          </div>"}, "last_serial": 1073570, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ffea026b7427d843a189be5fb9c08c52", "sha256": "aa0c9afd1f1f98f92bc89abdc65878d1b19122b8e2a44c8adb80114bc6c24375"}, "downloads": -1, "filename": "spout-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ffea026b7427d843a189be5fb9c08c52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3690, "upload_time": "2014-03-09T02:08:05", "upload_time_iso_8601": "2014-03-09T02:08:05.390832Z", "url": "https://files.pythonhosted.org/packages/40/09/3e79de6dfa3fb75b21a934d7e1ffe0bd8f43c888f89b5f9a364d88335a55/spout-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "544d5027c97248c24772a8640812200a", "sha256": "524cde7bc5f87d09d877e84d59c8d70da82274946a84d5b37977937e3d9530c0"}, "downloads": -1, "filename": "spout-0.1.1.tar.gz", "has_sig": false, "md5_digest": "544d5027c97248c24772a8640812200a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4916, "upload_time": "2014-03-09T16:30:59", "upload_time_iso_8601": "2014-03-09T16:30:59.320551Z", "url": "https://files.pythonhosted.org/packages/45/16/4397cc231f825d068b2a287b6464eb237cf7bc96577696be57e7f1c47c59/spout-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f557a9840d15b5d927c8836dd693df39", "sha256": "223a866152904fb0bb46343044aae0b150757632ebaa60368cf9cf246fe1cb5b"}, "downloads": -1, "filename": "spout-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f557a9840d15b5d927c8836dd693df39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5056, "upload_time": "2014-03-09T16:52:36", "upload_time_iso_8601": "2014-03-09T16:52:36.460766Z", "url": "https://files.pythonhosted.org/packages/c5/79/8bde462f25afeb135d18da3f79eb9131f532722f6cc947d35f982849498b/spout-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f80b31fed1b47e1f5cb0292c764a73e3", "sha256": "41947195e2a25fc23a54a7a8187eccf8d7fa2376a049f4d48f6bbe9740c29f34"}, "downloads": -1, "filename": "spout-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f80b31fed1b47e1f5cb0292c764a73e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5270, "upload_time": "2014-04-02T17:00:34", "upload_time_iso_8601": "2014-04-02T17:00:34.120336Z", "url": "https://files.pythonhosted.org/packages/93/25/cb9394d7eb6debb2fe1cde4ffbb0fd485e340040d47af080a02372fb6d31/spout-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "db41eac3ad1c09ac1d572bfdd7971a6a", "sha256": "fb2692801596ec60fcb407d2857ba6aed1754d8153dfa5acb740c3833a4d7f7b"}, "downloads": -1, "filename": "spout-0.1.4.tar.gz", "has_sig": false, "md5_digest": "db41eac3ad1c09ac1d572bfdd7971a6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5302, "upload_time": "2014-04-03T20:26:38", "upload_time_iso_8601": "2014-04-03T20:26:38.720411Z", "url": "https://files.pythonhosted.org/packages/54/8f/2370fa943d1c07e9ac90bee252eb21d07d57b9e10ce1dc2122b8f3c95522/spout-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1627dbbb3d4da0ca4c07ffae4b713eb4", "sha256": "323a2a33f95d3a5106b9a38fc0ea997b9f937285f0b0818a3a58f3dbd34f168d"}, "downloads": -1, "filename": "spout-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1627dbbb3d4da0ca4c07ffae4b713eb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5302, "upload_time": "2014-04-03T20:34:42", "upload_time_iso_8601": "2014-04-03T20:34:42.435542Z", "url": "https://files.pythonhosted.org/packages/c1/04/b585a6568c16bdb3c9d285a8f5379095c3cd3a3b2817126da6296a631a53/spout-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "4a676fc663277e469657703cff0fde69", "sha256": "6cced780b0b8fb82e5e3aa69fe2acde83a7fbd307d465d1e84da2aab09edc912"}, "downloads": -1, "filename": "spout-0.1.6.tar.gz", "has_sig": false, "md5_digest": "4a676fc663277e469657703cff0fde69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2014-04-28T01:27:05", "upload_time_iso_8601": "2014-04-28T01:27:05.118276Z", "url": "https://files.pythonhosted.org/packages/b1/03/a0879949112775c98648de6d80a80428323def4e354a99c27c91c5947c29/spout-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a676fc663277e469657703cff0fde69", "sha256": "6cced780b0b8fb82e5e3aa69fe2acde83a7fbd307d465d1e84da2aab09edc912"}, "downloads": -1, "filename": "spout-0.1.6.tar.gz", "has_sig": false, "md5_digest": "4a676fc663277e469657703cff0fde69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2014-04-28T01:27:05", "upload_time_iso_8601": "2014-04-28T01:27:05.118276Z", "url": "https://files.pythonhosted.org/packages/b1/03/a0879949112775c98648de6d80a80428323def4e354a99c27c91c5947c29/spout-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:26 2020"}