{"info": {"author": "Danielle Madeley", "author_email": "danielle@madeley.id.au", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Security :: Cryptography"], "description": "Python PKCS#11 - High Level Wrapper API\n=======================================\n\nA high level, \"more Pythonic\" interface to the PKCS#11 (Cryptoki) standard\nto support HSM and Smartcard devices in Python.\n\nThe interface is designed to follow the logical structure of a HSM, with\nuseful defaults for obscurely documented parameters. Many APIs will optionally\naccept iterables and act as generators, allowing you to stream large data\nblocks for symmetric encryption.\n\npython-pkcs11 also includes numerous utility functions to convert between PKCS\n#11 data structures and common interchange formats including PKCS #1 and X.509.\n\npython-pkcs11 is fully documented and has a full integration test suite for all\nfeatures, with continuous integration against multiple HSM platforms including:\n\n* Thales nCipher\n* Opencryptoki TPM\n* OpenSC/Smartcard-HSM/Nitrokey HSM\n\nSource: https://github.com/danni/python-pkcs11\n\nDocumentation: http://python-pkcs11.readthedocs.io/en/latest/\n\nGetting Started\n---------------\n\nInstall from Pip:\n\n::\n\n    pip install python-pkcs11\n\n\nOr build from source:\n\n::\n\n    python setup.py build\n\nAssuming your PKCS#11 library is set as `PKCS11_MODULE` and contains a\ntoken named `DEMO`:\n\nAES\n~~~\n\n::\n\n    import pkcs11\n\n    # Initialise our PKCS#11 library\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    data = b'INPUT DATA'\n\n    # Open a session on our token\n    with token.open(user_pin='1234') as session:\n        # Generate an AES key in this session\n        key = session.generate_key(pkcs11.KeyType.AES, 256)\n\n        # Get an initialisation vector\n        iv = session.generate_random(128)  # AES blocks are fixed at 128 bits\n        # Encrypt our data\n        crypttext = key.encrypt(data, mechanism_param=iv)\n\n3DES\n~~~~\n\n::\n\n    import pkcs11\n\n    # Initialise our PKCS#11 library\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    data = b'INPUT DATA'\n\n    # Open a session on our token\n    with token.open(user_pin='1234') as session:\n        # Generate a DES key in this session\n        key = session.generate_key(pkcs11.KeyType.DES3)\n\n        # Get an initialisation vector\n        iv = session.generate_random(64)  # DES blocks are fixed at 64 bits\n        # Encrypt our data\n        crypttext = key.encrypt(data, mechanism_param=iv)\n\nRSA\n~~~\n\n::\n\n    import pkcs11\n\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    data = b'INPUT DATA'\n\n    # Open a session on our token\n    with token.open(user_pin='1234') as session:\n        # Generate an RSA keypair in this session\n        pub, priv = session.generate_keypair(pkcs11.KeyType.RSA, 2048)\n\n        # Encrypt as one block\n        crypttext = pub.encrypt(data)\n\nDSA\n~~~\n\n::\n\n    import pkcs11\n\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    data = b'INPUT DATA'\n\n    # Open a session on our token\n    with token.open(user_pin='1234') as session:\n        # Generate an DSA keypair in this session\n        pub, priv = session.generate_keypair(pkcs11.KeyType.DSA, 1024)\n\n        # Sign\n        signature = priv.sign(data)\n\nECDSA\n~~~~~\n\n::\n\n    import pkcs11\n\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    data = b'INPUT DATA'\n\n    # Open a session on our token\n    with token.open(user_pin='1234') as session:\n        # Generate an EC keypair in this session from a named curve\n        ecparams = session.create_domain_parameters(\n            pkcs11.KeyType.EC, {\n                pkcs11.Attribute: pkcs11.util.ec.encode_named_curve_parameters('prime256v1'),\n            }, local=True)\n        pub, priv = ecparams.generate_keypair()\n\n        # Sign\n        signature = priv.sign(data)\n\nDiffie-Hellman\n~~~~~~~~~~~~~~\n\n::\n\n    import pkcs11\n\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    with token.open() as session:\n        # Given shared Diffie-Hellman parameters\n        parameters = session.create_domain_parameters(KeyType.DH, {\n            Attribute.PRIME: prime,  # Diffie-Hellman parameters\n            Attribute.BASE: base,\n        })\n\n        # Generate a DH key pair from the public parameters\n        public, private = parameters.generate_keypair()\n\n        # Share the public half of it with our other party.\n        _network_.write(public[Attribute.VALUE])\n        # And get their shared value\n        other_value = _network_.read()\n\n        # Derive a shared session key with perfect forward secrecy\n        session_key = private.derive_key(\n            KeyType.AES, 128,\n            mechanism_param=other_value)\n\n\nElliptic-Curve Diffie-Hellman\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import pkcs11\n\n    lib = pkcs11.lib(os.environ['PKCS11_MODULE'])\n    token = lib.get_token(token_label='DEMO')\n\n    with token.open() as session:\n        # Given DER encocded EC parameters, e.g. from\n        #    openssl ecparam -outform der -name <named curve>\n        parameters = session.create_domain_parameters(KeyType.EC, {\n            Attribute.EC_PARAMS: ecparams,\n        })\n\n        # Generate a DH key pair from the public parameters\n        public, private = parameters.generate_keypair()\n\n        # Share the public half of it with our other party.\n        _network_.write(public[Attribute.EC_POINT])\n        # And get their shared value\n        other_value = _network_.read()\n\n        # Derive a shared session key\n        session_key = private.derive_key(\n            KeyType.AES, 128,\n            mechanism_param=(KDF.NULL, None, other_value))\n\nTested Compatibility\n--------------------\n\n+------------------------------+--------------+-----------------+--------------+-------------------+\n| Functionality                | SoftHSMv2    | Thales nCipher  | Opencryptoki | OpenSC (Nitrokey) |\n+==============================+==============+=================+==============+===================+\n| Get Slots/Tokens             | Works        | Works           | Works        | Works             |\n+------------------------------+--------------+-----------------+--------------+-------------------+\n| Get Mechanisms               | Works        | Works           | Works        | Works             |\n+------------------------------+--------------+-----------------+--------------+-------------------+\n| Initialize token             | Not implemented                                                   |\n+------------------------------+-------------------------------------------------------------------+\n| Slot events                  | Not implemented                                                   |\n+------------------------------+-------------------------------------------------------------------+\n| Alternative authentication   | Not implemented                                                   |\n| path                         |                                                                   |\n+------------------------------+-------------------------------------------------------------------+\n| `Always authenticate` keys   | Not implemented                                                   |\n+-------------+----------------+--------------+-----------------+--------------+-------------------+\n| Create/Copy | Keys           | Works        | Works           | Errors       | Create            |\n|             +----------------+--------------+-----------------+--------------+-------------------+\n|             | Certificates   | Caveats [1]_ | Caveats [1]_    | Caveats [1]_ | ?                 |\n|             +----------------+--------------+-----------------+--------------+-------------------+\n|             | Domain Params  | Caveats [1]_ | Caveats [1]_    | ?            | N/A               |\n+-------------+----------------+--------------+-----------------+--------------+-------------------+\n| Destroy Object               | Works        | N/A             | Works        | Works             |\n+------------------------------+--------------+-----------------+--------------+-------------------+\n| Generate Random              | Works        | Works           | Works        | Works             |\n+------------------------------+--------------+-----------------+--------------+-------------------+\n| Seed Random                  | Works        | N/A             | N/A          | N/A               |\n+------------------------------+--------------+-----------------+--------------+-------------------+\n| Digest (Data & Keys)         | Works        | Caveats [2]_    | Works        | Works             |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| AES    | Generate key        | Works        | Works           | Works        | N/A               |\n|        +---------------------+--------------+-----------------+--------------+                   |\n|        | Encrypt/Decrypt     | Works        | Works           | Works        |                   |\n|        +---------------------+--------------+-----------------+--------------+                   |\n|        | Wrap/Unwrap         | ? [3]_       | Works           | Errors       |                   |\n|        +---------------------+--------------+-----------------+--------------+                   |\n|        | Sign/Verify         | Works        | Works [4]_      | N/A          |                   |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| DES2/  | Generate key        | Works        | Works           | Works        | N/A               |\n| DES3   +---------------------+--------------+-----------------+--------------+                   |\n|        | Encrypt/Decrypt     | Works        | Works           | Works        |                   |\n|        +---------------------+--------------+-----------------+--------------+                   |\n|        | Wrap/Unwrap         | ?            | ?               | ?            |                   |\n|        +---------------------+--------------+-----------------+--------------+                   |\n|        | Sign/Verify         | ?            | ?               | ?            |                   |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| RSA    | Generate key pair   | Works        | Works           | Works        | Works [4]_ [8]_   |\n|        +---------------------+--------------+-----------------+--------------+-------------------+\n|        | Encrypt/Decrypt     | Works        | Works           | Works        | Decrypt only [9]_ |\n|        +---------------------+--------------+-----------------+--------------+-------------------+\n|        | Wrap/Unwrap         | Works        | Works           | Works        | N/A               |\n|        +---------------------+--------------+-----------------+--------------+-------------------+\n|        | Sign/Verify         | Works        | Works           | Works        | Works             |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| DSA    | Generate parameters | Works        | Error           | N/A          | N/A               |\n|        +---------------------+--------------+-----------------+              |                   |\n|        | Generate key pair   | Works        | Caveats [5]_    |              |                   |\n|        +---------------------+--------------+-----------------+              |                   |\n|        | Sign/Verify         | Works        | Works [4]_      |              |                   |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| DH     | Generate parameters | Works        | N/A             | N/A          | N/A               |\n|        +---------------------+--------------+-----------------+              |                   |\n|        | Generate key pair   | Works        | Caveats [6]_    |              |                   |\n|        +---------------------+--------------+-----------------+              |                   |\n|        | Derive Key          | Works        | Caveats [7]_    |              |                   |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| EC     | Generate key pair   | Caveats [6]_ | ? [3]_          | N/A          | Works             |\n|        +---------------------+--------------+-----------------+              +-------------------+\n|        | Sign/Verify (ECDSA) | Works [4]_   | ? [3]_          |              | Sign only [9]_    |\n|        +---------------------+--------------+-----------------+              +-------------------+\n|        | Derive key (ECDH)   | Works        | ? [3]_          |              | ?                 |\n+--------+---------------------+--------------+-----------------+--------------+-------------------+\n| Proprietary extensions       | N/A          | Not implemented | N/A          | N/A               |\n+------------------------------+--------------+-----------------+--------------+-------------------+\n\n.. [1] Device supports limited set of attributes.\n.. [2] Digesting keys is not supported.\n.. [3] Untested: requires support in device.\n.. [4] Default mechanism not supported, must specify a mechanism.\n.. [5] From existing domain parameters.\n.. [6] Local domain parameters only.\n.. [7] Generates security warnings about the derived key.\n.. [8] `store` parameter is ignored, all keys are stored.\n.. [9] Encryption/verify not supported, extract the public key\n\nPython version:\n\n* 3.4 (with `aenum`)\n* 3.5 (with `aenum`)\n* 3.6\n\nPKCS#11 versions:\n\n* 2.11\n* 2.20\n* 2.40\n\nFeel free to send pull requests for any functionality that's not exposed. The\ncode is designed to be readable and expose the PKCS #11 spec in a\nstraight-forward way.\n\nIf you want your device supported, get in touch!\n\nMore info on PKCS #11\n---------------------\n\nThe latest version of the PKCS #11 spec is available from OASIS:\n\nhttp://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html\n\nYou should also consult the documentation for your PKCS #11 implementation.\nMany implementations expose additional vendor options configurable in your\nenvironment, including alternative features, modes and debugging\ninformation.\n\nLicense\n-------\n\nMIT License\n\nCopyright (c) 2017 Danielle Madeley\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danni/python-pkcs11", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-pkcs11", "package_url": "https://pypi.org/project/python-pkcs11/", "platform": "", "project_url": "https://pypi.org/project/python-pkcs11/", "project_urls": {"Homepage": "https://github.com/danni/python-pkcs11"}, "release_url": "https://pypi.org/project/python-pkcs11/0.6.0/", "requires_dist": null, "requires_python": "", "summary": "PKCS#11 (Cryptoki) support for Python", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A high level, \u201cmore Pythonic\u201d interface to the PKCS#11 (Cryptoki) standard\nto support HSM and Smartcard devices in Python.</p>\n<p>The interface is designed to follow the logical structure of a HSM, with\nuseful defaults for obscurely documented parameters. Many APIs will optionally\naccept iterables and act as generators, allowing you to stream large data\nblocks for symmetric encryption.</p>\n<p>python-pkcs11 also includes numerous utility functions to convert between PKCS\n#11 data structures and common interchange formats including PKCS #1 and X.509.</p>\n<p>python-pkcs11 is fully documented and has a full integration test suite for all\nfeatures, with continuous integration against multiple HSM platforms including:</p>\n<ul>\n<li>Thales nCipher</li>\n<li>Opencryptoki TPM</li>\n<li>OpenSC/Smartcard-HSM/Nitrokey HSM</li>\n</ul>\n<p>Source: <a href=\"https://github.com/danni/python-pkcs11\" rel=\"nofollow\">https://github.com/danni/python-pkcs11</a></p>\n<p>Documentation: <a href=\"http://python-pkcs11.readthedocs.io/en/latest/\" rel=\"nofollow\">http://python-pkcs11.readthedocs.io/en/latest/</a></p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>Install from Pip:</p>\n<pre>pip install python-pkcs11\n</pre>\n<p>Or build from source:</p>\n<pre>python setup.py build\n</pre>\n<p>Assuming your PKCS#11 library is set as <cite>PKCS11_MODULE</cite> and contains a\ntoken named <cite>DEMO</cite>:</p>\n<div id=\"aes\">\n<h3>AES</h3>\n<pre>import pkcs11\n\n# Initialise our PKCS#11 library\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\ndata = b'INPUT DATA'\n\n# Open a session on our token\nwith token.open(user_pin='1234') as session:\n    # Generate an AES key in this session\n    key = session.generate_key(pkcs11.KeyType.AES, 256)\n\n    # Get an initialisation vector\n    iv = session.generate_random(128)  # AES blocks are fixed at 128 bits\n    # Encrypt our data\n    crypttext = key.encrypt(data, mechanism_param=iv)\n</pre>\n</div>\n<div id=\"des\">\n<h3>3DES</h3>\n<pre>import pkcs11\n\n# Initialise our PKCS#11 library\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\ndata = b'INPUT DATA'\n\n# Open a session on our token\nwith token.open(user_pin='1234') as session:\n    # Generate a DES key in this session\n    key = session.generate_key(pkcs11.KeyType.DES3)\n\n    # Get an initialisation vector\n    iv = session.generate_random(64)  # DES blocks are fixed at 64 bits\n    # Encrypt our data\n    crypttext = key.encrypt(data, mechanism_param=iv)\n</pre>\n</div>\n<div id=\"rsa\">\n<h3>RSA</h3>\n<pre>import pkcs11\n\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\ndata = b'INPUT DATA'\n\n# Open a session on our token\nwith token.open(user_pin='1234') as session:\n    # Generate an RSA keypair in this session\n    pub, priv = session.generate_keypair(pkcs11.KeyType.RSA, 2048)\n\n    # Encrypt as one block\n    crypttext = pub.encrypt(data)\n</pre>\n</div>\n<div id=\"dsa\">\n<h3>DSA</h3>\n<pre>import pkcs11\n\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\ndata = b'INPUT DATA'\n\n# Open a session on our token\nwith token.open(user_pin='1234') as session:\n    # Generate an DSA keypair in this session\n    pub, priv = session.generate_keypair(pkcs11.KeyType.DSA, 1024)\n\n    # Sign\n    signature = priv.sign(data)\n</pre>\n</div>\n<div id=\"ecdsa\">\n<h3>ECDSA</h3>\n<pre>import pkcs11\n\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\ndata = b'INPUT DATA'\n\n# Open a session on our token\nwith token.open(user_pin='1234') as session:\n    # Generate an EC keypair in this session from a named curve\n    ecparams = session.create_domain_parameters(\n        pkcs11.KeyType.EC, {\n            pkcs11.Attribute: pkcs11.util.ec.encode_named_curve_parameters('prime256v1'),\n        }, local=True)\n    pub, priv = ecparams.generate_keypair()\n\n    # Sign\n    signature = priv.sign(data)\n</pre>\n</div>\n<div id=\"diffie-hellman\">\n<h3>Diffie-Hellman</h3>\n<pre>import pkcs11\n\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\nwith token.open() as session:\n    # Given shared Diffie-Hellman parameters\n    parameters = session.create_domain_parameters(KeyType.DH, {\n        Attribute.PRIME: prime,  # Diffie-Hellman parameters\n        Attribute.BASE: base,\n    })\n\n    # Generate a DH key pair from the public parameters\n    public, private = parameters.generate_keypair()\n\n    # Share the public half of it with our other party.\n    _network_.write(public[Attribute.VALUE])\n    # And get their shared value\n    other_value = _network_.read()\n\n    # Derive a shared session key with perfect forward secrecy\n    session_key = private.derive_key(\n        KeyType.AES, 128,\n        mechanism_param=other_value)\n</pre>\n</div>\n<div id=\"elliptic-curve-diffie-hellman\">\n<h3>Elliptic-Curve Diffie-Hellman</h3>\n<pre>import pkcs11\n\nlib = pkcs11.lib(os.environ['PKCS11_MODULE'])\ntoken = lib.get_token(token_label='DEMO')\n\nwith token.open() as session:\n    # Given DER encocded EC parameters, e.g. from\n    #    openssl ecparam -outform der -name &lt;named curve&gt;\n    parameters = session.create_domain_parameters(KeyType.EC, {\n        Attribute.EC_PARAMS: ecparams,\n    })\n\n    # Generate a DH key pair from the public parameters\n    public, private = parameters.generate_keypair()\n\n    # Share the public half of it with our other party.\n    _network_.write(public[Attribute.EC_POINT])\n    # And get their shared value\n    other_value = _network_.read()\n\n    # Derive a shared session key\n    session_key = private.derive_key(\n        KeyType.AES, 128,\n        mechanism_param=(KDF.NULL, None, other_value))\n</pre>\n</div>\n</div>\n<div id=\"tested-compatibility\">\n<h2>Tested Compatibility</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Functionality</th>\n<th>SoftHSMv2</th>\n<th>Thales nCipher</th>\n<th>Opencryptoki</th>\n<th>OpenSC (Nitrokey)</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Get Slots/Tokens</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>Get Mechanisms</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>Initialize token</td>\n<td>Not implemented</td>\n</tr>\n<tr><td>Slot events</td>\n<td>Not implemented</td>\n</tr>\n<tr><td>Alternative authentication\npath</td>\n<td>Not implemented</td>\n</tr>\n<tr><td><cite>Always authenticate</cite> keys</td>\n<td>Not implemented</td>\n</tr>\n<tr><td>Create/Copy</td>\n<td>Keys</td>\n<td>Works</td>\n<td>Works</td>\n<td>Errors</td>\n<td>Create</td>\n</tr>\n<tr><td>Certificates</td>\n<td>Caveats <a href=\"#id22\" id=\"id1\" rel=\"nofollow\">[1]</a></td>\n<td>Caveats <a href=\"#id22\" id=\"id2\" rel=\"nofollow\">[1]</a></td>\n<td>Caveats <a href=\"#id22\" id=\"id3\" rel=\"nofollow\">[1]</a></td>\n<td>?</td>\n</tr>\n<tr><td>Domain Params</td>\n<td>Caveats <a href=\"#id22\" id=\"id4\" rel=\"nofollow\">[1]</a></td>\n<td>Caveats <a href=\"#id22\" id=\"id5\" rel=\"nofollow\">[1]</a></td>\n<td>?</td>\n<td>N/A</td>\n</tr>\n<tr><td>Destroy Object</td>\n<td>Works</td>\n<td>N/A</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>Generate Random</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>Seed Random</td>\n<td>Works</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr><td>Digest (Data &amp; Keys)</td>\n<td>Works</td>\n<td>Caveats <a href=\"#id23\" id=\"id6\" rel=\"nofollow\">[2]</a></td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>AES</td>\n<td>Generate key</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>N/A</td>\n</tr>\n<tr><td>Encrypt/Decrypt</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>Wrap/Unwrap</td>\n<td>? <a href=\"#id24\" id=\"id7\" rel=\"nofollow\">[3]</a></td>\n<td>Works</td>\n<td>Errors</td>\n</tr>\n<tr><td>Sign/Verify</td>\n<td>Works</td>\n<td>Works <a href=\"#id25\" id=\"id8\" rel=\"nofollow\">[4]</a></td>\n<td>N/A</td>\n</tr>\n<tr><td>DES2/\nDES3</td>\n<td>Generate key</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>N/A</td>\n</tr>\n<tr><td>Encrypt/Decrypt</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>Wrap/Unwrap</td>\n<td>?</td>\n<td>?</td>\n<td>?</td>\n</tr>\n<tr><td>Sign/Verify</td>\n<td>?</td>\n<td>?</td>\n<td>?</td>\n</tr>\n<tr><td>RSA</td>\n<td>Generate key pair</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works <a href=\"#id25\" id=\"id9\" rel=\"nofollow\">[4]</a> <a href=\"#id29\" id=\"id10\" rel=\"nofollow\">[8]</a></td>\n</tr>\n<tr><td>Encrypt/Decrypt</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>Decrypt only <a href=\"#id30\" id=\"id11\" rel=\"nofollow\">[9]</a></td>\n</tr>\n<tr><td>Wrap/Unwrap</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>N/A</td>\n</tr>\n<tr><td>Sign/Verify</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n<td>Works</td>\n</tr>\n<tr><td>DSA</td>\n<td>Generate parameters</td>\n<td>Works</td>\n<td>Error</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr><td>Generate key pair</td>\n<td>Works</td>\n<td>Caveats <a href=\"#id26\" id=\"id12\" rel=\"nofollow\">[5]</a></td>\n</tr>\n<tr><td>Sign/Verify</td>\n<td>Works</td>\n<td>Works <a href=\"#id25\" id=\"id13\" rel=\"nofollow\">[4]</a></td>\n</tr>\n<tr><td>DH</td>\n<td>Generate parameters</td>\n<td>Works</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr><td>Generate key pair</td>\n<td>Works</td>\n<td>Caveats <a href=\"#id27\" id=\"id14\" rel=\"nofollow\">[6]</a></td>\n</tr>\n<tr><td>Derive Key</td>\n<td>Works</td>\n<td>Caveats <a href=\"#id28\" id=\"id15\" rel=\"nofollow\">[7]</a></td>\n</tr>\n<tr><td>EC</td>\n<td>Generate key pair</td>\n<td>Caveats <a href=\"#id27\" id=\"id16\" rel=\"nofollow\">[6]</a></td>\n<td>? <a href=\"#id24\" id=\"id17\" rel=\"nofollow\">[3]</a></td>\n<td>N/A</td>\n<td>Works</td>\n</tr>\n<tr><td>Sign/Verify (ECDSA)</td>\n<td>Works <a href=\"#id25\" id=\"id18\" rel=\"nofollow\">[4]</a></td>\n<td>? <a href=\"#id24\" id=\"id19\" rel=\"nofollow\">[3]</a></td>\n<td>Sign only <a href=\"#id30\" id=\"id20\" rel=\"nofollow\">[9]</a></td>\n</tr>\n<tr><td>Derive key (ECDH)</td>\n<td>Works</td>\n<td>? <a href=\"#id24\" id=\"id21\" rel=\"nofollow\">[3]</a></td>\n<td>?</td>\n</tr>\n<tr><td>Proprietary extensions</td>\n<td>N/A</td>\n<td>Not implemented</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n<table id=\"id22\">\n<col><col>\n<tbody>\n<tr><td>[1]</td><td><em>(<a href=\"#id1\" rel=\"nofollow\">1</a>, <a href=\"#id2\" rel=\"nofollow\">2</a>, <a href=\"#id3\" rel=\"nofollow\">3</a>, <a href=\"#id4\" rel=\"nofollow\">4</a>, <a href=\"#id5\" rel=\"nofollow\">5</a>)</em> Device supports limited set of attributes.</td></tr>\n</tbody>\n</table>\n<table id=\"id23\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id6\" rel=\"nofollow\">[2]</a></td><td>Digesting keys is not supported.</td></tr>\n</tbody>\n</table>\n<table id=\"id24\">\n<col><col>\n<tbody>\n<tr><td>[3]</td><td><em>(<a href=\"#id7\" rel=\"nofollow\">1</a>, <a href=\"#id17\" rel=\"nofollow\">2</a>, <a href=\"#id19\" rel=\"nofollow\">3</a>, <a href=\"#id21\" rel=\"nofollow\">4</a>)</em> Untested: requires support in device.</td></tr>\n</tbody>\n</table>\n<table id=\"id25\">\n<col><col>\n<tbody>\n<tr><td>[4]</td><td><em>(<a href=\"#id8\" rel=\"nofollow\">1</a>, <a href=\"#id9\" rel=\"nofollow\">2</a>, <a href=\"#id13\" rel=\"nofollow\">3</a>, <a href=\"#id18\" rel=\"nofollow\">4</a>)</em> Default mechanism not supported, must specify a mechanism.</td></tr>\n</tbody>\n</table>\n<table id=\"id26\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id12\" rel=\"nofollow\">[5]</a></td><td>From existing domain parameters.</td></tr>\n</tbody>\n</table>\n<table id=\"id27\">\n<col><col>\n<tbody>\n<tr><td>[6]</td><td><em>(<a href=\"#id14\" rel=\"nofollow\">1</a>, <a href=\"#id16\" rel=\"nofollow\">2</a>)</em> Local domain parameters only.</td></tr>\n</tbody>\n</table>\n<table id=\"id28\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id15\" rel=\"nofollow\">[7]</a></td><td>Generates security warnings about the derived key.</td></tr>\n</tbody>\n</table>\n<table id=\"id29\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id10\" rel=\"nofollow\">[8]</a></td><td><cite>store</cite> parameter is ignored, all keys are stored.</td></tr>\n</tbody>\n</table>\n<table id=\"id30\">\n<col><col>\n<tbody>\n<tr><td>[9]</td><td><em>(<a href=\"#id11\" rel=\"nofollow\">1</a>, <a href=\"#id20\" rel=\"nofollow\">2</a>)</em> Encryption/verify not supported, extract the public key</td></tr>\n</tbody>\n</table>\n<p>Python version:</p>\n<ul>\n<li>3.4 (with <cite>aenum</cite>)</li>\n<li>3.5 (with <cite>aenum</cite>)</li>\n<li>3.6</li>\n</ul>\n<p>PKCS#11 versions:</p>\n<ul>\n<li>2.11</li>\n<li>2.20</li>\n<li>2.40</li>\n</ul>\n<p>Feel free to send pull requests for any functionality that\u2019s not exposed. The\ncode is designed to be readable and expose the PKCS #11 spec in a\nstraight-forward way.</p>\n<p>If you want your device supported, get in touch!</p>\n</div>\n<div id=\"more-info-on-pkcs-11\">\n<h2>More info on PKCS #11</h2>\n<p>The latest version of the PKCS #11 spec is available from OASIS:</p>\n<p><a href=\"http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html\" rel=\"nofollow\">http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html</a></p>\n<p>You should also consult the documentation for your PKCS #11 implementation.\nMany implementations expose additional vendor options configurable in your\nenvironment, including alternative features, modes and debugging\ninformation.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT License</p>\n<p>Copyright (c) 2017 Danielle Madeley</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 6715033, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "63f3c66a6edf39c25d5f8d0f434b427e", "sha256": "bb52adb35c01ce25d3b4e2529902f28da77d6c8086146d3e12df53524a68fead"}, "downloads": -1, "filename": "python-pkcs11-0.0.1.tar.gz", "has_sig": false, "md5_digest": "63f3c66a6edf39c25d5f8d0f434b427e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 206920, "upload_time": "2017-05-22T07:36:02", "upload_time_iso_8601": "2017-05-22T07:36:02.897442Z", "url": "https://files.pythonhosted.org/packages/99/50/29d18ef46431e2569dedffd6088c5f41e2fc5aac09e074939a891a693339/python-pkcs11-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d7a507452e7c054dbf9b0ba1896ab28c", "sha256": "42cb289c13fda1d5b590e8fd59c294af64f6c7f8971c94fadb088bfccaf29b1c"}, "downloads": -1, "filename": "python-pkcs11-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d7a507452e7c054dbf9b0ba1896ab28c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 269571, "upload_time": "2017-05-22T12:24:03", "upload_time_iso_8601": "2017-05-22T12:24:03.978158Z", "url": "https://files.pythonhosted.org/packages/8e/30/498ed2f4035e935e8f08475456b3fb6313308a8047448bea9fda9a921229/python-pkcs11-0.0.2.tar.gz", "yanked": false}], "0.0.3.2": [{"comment_text": "", "digests": {"md5": "c31477873d1c8d724f6de023bf353868", "sha256": "f6824bdd1700e9132c13764ee9e6198fcef56695df348bc40b28b06c62423c43"}, "downloads": -1, "filename": "python-pkcs11-0.0.3.2.tar.gz", "has_sig": false, "md5_digest": "c31477873d1c8d724f6de023bf353868", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48641, "upload_time": "2017-05-22T23:47:22", "upload_time_iso_8601": "2017-05-22T23:47:22.792578Z", "url": "https://files.pythonhosted.org/packages/f1/91/f9ffc689a189562b6fcf64cc1c0e57a1a22773f1ab4024e0bc768e7a5f4f/python-pkcs11-0.0.3.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "20fb8984405cd892e3c6c8b67dc3073e", "sha256": "de6c088331b300c351085fad5a4ad7befd870d1133bd6d59a6b8f5a86281d56f"}, "downloads": -1, "filename": "python-pkcs11-0.0.4.tar.gz", "has_sig": false, "md5_digest": "20fb8984405cd892e3c6c8b67dc3073e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50129, "upload_time": "2017-05-23T01:36:15", "upload_time_iso_8601": "2017-05-23T01:36:15.595704Z", "url": "https://files.pythonhosted.org/packages/03/1f/bf5e9c48170a7c40c1a8bcfeed4b5f29c876372cf5fe00ce7e3894f613e0/python-pkcs11-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6f07e1a41eff7aa005bbdd2249a86225", "sha256": "ca7209a64d411604366fe3c2c8b956aa20f5baf6ab6289a8aab3195b11a646c9"}, "downloads": -1, "filename": "python-pkcs11-0.0.5.tar.gz", "has_sig": false, "md5_digest": "6f07e1a41eff7aa005bbdd2249a86225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50334, "upload_time": "2017-05-23T04:06:14", "upload_time_iso_8601": "2017-05-23T04:06:14.473966Z", "url": "https://files.pythonhosted.org/packages/bd/9b/fa2d65eb1f21fa0f70338b7ad2295455c7716a999041e2d0025d0eed0e13/python-pkcs11-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "81999a63d6659d380048c52673b0bfab", "sha256": "7ce59cb042c7def841f5484d6f01e21ee671363c1b427edbc686556f5a6d99b8"}, "downloads": -1, "filename": "python-pkcs11-0.0.6.tar.gz", "has_sig": false, "md5_digest": "81999a63d6659d380048c52673b0bfab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50973, "upload_time": "2017-05-23T07:44:33", "upload_time_iso_8601": "2017-05-23T07:44:33.685683Z", "url": "https://files.pythonhosted.org/packages/12/61/b0477ee80d012093d753cfd4ccc4ca342d0f892e1aa74280969f287b014a/python-pkcs11-0.0.6.tar.gz", "yanked": false}], "0.0.6.1": [{"comment_text": "", "digests": {"md5": "5d74e7cb21946aa6329bc467c7c3a673", "sha256": "50e2820346b5ad82ac331247f35b9bbd6d9b8dbb497bccd907f3b652c35e43c2"}, "downloads": -1, "filename": "python-pkcs11-0.0.6.1.tar.gz", "has_sig": false, "md5_digest": "5d74e7cb21946aa6329bc467c7c3a673", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50990, "upload_time": "2017-05-23T08:58:01", "upload_time_iso_8601": "2017-05-23T08:58:01.178126Z", "url": "https://files.pythonhosted.org/packages/22/24/657896ce5ca16529bfb84816350586ec99cbf3fefe9a8f7705d0a9adfa09/python-pkcs11-0.0.6.1.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "be89aa58e3c4dbb0d0b35cf70c701263", "sha256": "ea7845b007a0eeb7fa63663f67f2aca0de7cf97425f03356c6815331d7d8537f"}, "downloads": -1, "filename": "python-pkcs11-0.0.7.tar.gz", "has_sig": false, "md5_digest": "be89aa58e3c4dbb0d0b35cf70c701263", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52545, "upload_time": "2017-05-23T12:24:26", "upload_time_iso_8601": "2017-05-23T12:24:26.423684Z", "url": "https://files.pythonhosted.org/packages/3d/ef/086f27cf25e26b0738abf848c9fb4b953032b441571bbaced87a88da00a1/python-pkcs11-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "0808b71cfddd328ca3e572facf4161c8", "sha256": "b3bdbe33751b1d1a7fe94bbabf1d935a34fe629c7841c6ba56c4beaea3864915"}, "downloads": -1, "filename": "python-pkcs11-0.0.8.tar.gz", "has_sig": false, "md5_digest": "0808b71cfddd328ca3e572facf4161c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54328, "upload_time": "2017-05-24T04:10:17", "upload_time_iso_8601": "2017-05-24T04:10:17.740202Z", "url": "https://files.pythonhosted.org/packages/a4/61/4aeb4ef42e2ef11f65b3921ba2204bd990e34824512089fe28202f53c99a/python-pkcs11-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "56dfe9af7b13c4470f31424d305349b7", "sha256": "4c180d2dbd05fcda79836ca4bee82bcfed5bc4b45635bd3ff959ff135a93e34d"}, "downloads": -1, "filename": "python-pkcs11-0.0.9.tar.gz", "has_sig": false, "md5_digest": "56dfe9af7b13c4470f31424d305349b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57021, "upload_time": "2017-05-25T07:36:40", "upload_time_iso_8601": "2017-05-25T07:36:40.230664Z", "url": "https://files.pythonhosted.org/packages/1b/b3/96c5921efb9a029b0ac8af20da09f2e7115b9ebc06bcd333b41ddb9f398a/python-pkcs11-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "017bc33454688d24de79ee38288619fc", "sha256": "755065a01ce2b95cc2a54ef8d147ebd13caad91246b2d69d640d2bd5c546f96b"}, "downloads": -1, "filename": "python-pkcs11-0.1.0.tar.gz", "has_sig": false, "md5_digest": "017bc33454688d24de79ee38288619fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60717, "upload_time": "2017-05-31T02:25:38", "upload_time_iso_8601": "2017-05-31T02:25:38.830953Z", "url": "https://files.pythonhosted.org/packages/82/e2/36affe2e837cae427cb41ea4a9d72a0e48f7f5398c8253372988b8deeb6b/python-pkcs11-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c0545d78c151ffeca6be727edfcf1c4d", "sha256": "a6deaae973f100dcd1282311aebcc2753b349529250a68977e886ef6a0e82fbc"}, "downloads": -1, "filename": "python-pkcs11-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c0545d78c151ffeca6be727edfcf1c4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62681, "upload_time": "2017-05-31T07:44:51", "upload_time_iso_8601": "2017-05-31T07:44:51.179571Z", "url": "https://files.pythonhosted.org/packages/99/f7/8f8cb67a000888c3e3b2ffb2f90c3ef9e06ea41b1bf3a6c92552b56ca14c/python-pkcs11-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8f0d09084107c37ccc2ce7a63461b721", "sha256": "e778ca72317fb5294fd4483d5339c8767a8f3040d224a869dd97af849254f9c0"}, "downloads": -1, "filename": "python-pkcs11-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8f0d09084107c37ccc2ce7a63461b721", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65691, "upload_time": "2017-06-01T12:46:14", "upload_time_iso_8601": "2017-06-01T12:46:14.533362Z", "url": "https://files.pythonhosted.org/packages/52/d4/67dec5dd977e08d4cc73c2d5463c58c95b5647e40ffacf81288570d358cf/python-pkcs11-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bea9fd9b17e6edfb97fcae964a3a18ad", "sha256": "5cbdc4a781b90d0b1ff480d2fadc2cfcb236e7d32fecb77fb69aad691a7d92fe"}, "downloads": -1, "filename": "python-pkcs11-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bea9fd9b17e6edfb97fcae964a3a18ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82019, "upload_time": "2017-06-05T06:31:58", "upload_time_iso_8601": "2017-06-05T06:31:58.070974Z", "url": "https://files.pythonhosted.org/packages/d0/76/21cc86bb1cf757d746814aa0e9f39568689465add27391fd5f27d3061aef/python-pkcs11-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "948f89dfca5ff8bae4a5aff6244acfb5", "sha256": "36c3e0db5632ae9e8a0e48e1fd265092375db757c2a07bf30a6bb7dbbc17e9ea"}, "downloads": -1, "filename": "python-pkcs11-0.2.0.tar.gz", "has_sig": false, "md5_digest": "948f89dfca5ff8bae4a5aff6244acfb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85468, "upload_time": "2017-06-06T07:43:12", "upload_time_iso_8601": "2017-06-06T07:43:12.598051Z", "url": "https://files.pythonhosted.org/packages/af/92/1f16365b012284732d5c4243bbf7b6bea71e555b3cde89dabc92dfbc5824/python-pkcs11-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b908be37d1cc837290fbf6ede0b9a1bb", "sha256": "e06fe54154913722bfea3fc6f4aa1261380e1da602f8c3802998410ca6dc7bee"}, "downloads": -1, "filename": "python-pkcs11-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b908be37d1cc837290fbf6ede0b9a1bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87353, "upload_time": "2017-06-06T12:49:59", "upload_time_iso_8601": "2017-06-06T12:49:59.989540Z", "url": "https://files.pythonhosted.org/packages/d7/0c/8701f0994fa3c3d286cba7bf98b88c05ac83cd50de7596ec5d650b2f51a6/python-pkcs11-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b1d8dfdba5831ecb15573e845273d023", "sha256": "99ced2669b52b1cf27363d05a1e2fff16b8bda2d58dcb411e867bad6a740a9d2"}, "downloads": -1, "filename": "python-pkcs11-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b1d8dfdba5831ecb15573e845273d023", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88540, "upload_time": "2017-06-28T02:30:12", "upload_time_iso_8601": "2017-06-28T02:30:12.281577Z", "url": "https://files.pythonhosted.org/packages/0b/12/5a0f33927c438888a8285f2dc9747b28ada5b44f6d3ed0f78b03065e4763/python-pkcs11-0.2.2.tar.gz", "yanked": false}], "0.3.0.1": [{"comment_text": "", "digests": {"md5": "fbb58cb5d7633fc8a1bf5f1bca8f55b3", "sha256": "ea557b186e6f2d4da1481cc5bfa42a30a064990dafb6451b10f62360b6738f85"}, "downloads": -1, "filename": "python-pkcs11-0.3.0.1.tar.gz", "has_sig": false, "md5_digest": "fbb58cb5d7633fc8a1bf5f1bca8f55b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97780, "upload_time": "2017-07-07T05:10:46", "upload_time_iso_8601": "2017-07-07T05:10:46.672582Z", "url": "https://files.pythonhosted.org/packages/ab/ad/0d6cbbb94b9d4d1d85d9d3d9d543df535269d3682753e0f14869e59903c9/python-pkcs11-0.3.0.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "167a2abba1804a0b7c5c14f1565c1409", "sha256": "016995aee85c64e801612c8786b76c7025c773c2d0c231b4f7758625f96fae94"}, "downloads": -1, "filename": "python-pkcs11-0.4.0.tar.gz", "has_sig": false, "md5_digest": "167a2abba1804a0b7c5c14f1565c1409", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98120, "upload_time": "2017-09-04T05:12:41", "upload_time_iso_8601": "2017-09-04T05:12:41.091268Z", "url": "https://files.pythonhosted.org/packages/96/15/d56bf39b5ac3bc4d88c27b2981fc5a1adb3af1a2d59e8a9b5d07eb9d5467/python-pkcs11-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d7332e602abe2236773e4b66cbd5a7c1", "sha256": "154150ce529ed0f8a7ed7d7ffe3a5be0211427c3ecb8e135fa12042fb3a66790"}, "downloads": -1, "filename": "python-pkcs11-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d7332e602abe2236773e4b66cbd5a7c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98464, "upload_time": "2018-02-01T02:39:04", "upload_time_iso_8601": "2018-02-01T02:39:04.368607Z", "url": "https://files.pythonhosted.org/packages/4a/6a/df6eeb9565c937b227c60d06907cd2c2184d6c65578d97b95a39c08748e0/python-pkcs11-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "d11d7091a75c212fd4878f0518031dcc", "sha256": "d582f246e61879670a5bd29a1e009f086d8c7fd5501e6690533a792b8c1ed4df"}, "downloads": -1, "filename": "python-pkcs11-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d11d7091a75c212fd4878f0518031dcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105778, "upload_time": "2020-02-28T03:11:30", "upload_time_iso_8601": "2020-02-28T03:11:30.275660Z", "url": "https://files.pythonhosted.org/packages/eb/02/6dd31b955c560055c169199add64c1ef5bf500f0ea2575042e83502ce238/python-pkcs11-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d11d7091a75c212fd4878f0518031dcc", "sha256": "d582f246e61879670a5bd29a1e009f086d8c7fd5501e6690533a792b8c1ed4df"}, "downloads": -1, "filename": "python-pkcs11-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d11d7091a75c212fd4878f0518031dcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105778, "upload_time": "2020-02-28T03:11:30", "upload_time_iso_8601": "2020-02-28T03:11:30.275660Z", "url": "https://files.pythonhosted.org/packages/eb/02/6dd31b955c560055c169199add64c1ef5bf500f0ea2575042e83502ce238/python-pkcs11-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:58 2020"}