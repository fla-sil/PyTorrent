{"info": {"author": "Kolen Cheung", "author_email": "christian.kolen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Build Tools", "Topic :: Text Processing :: Filters"], "description": ".. This README is auto-generated from `docs/README.md`. Do not edit this file directly.\n\n==============================\nUsing CriticMarkup with pandoc\n==============================\n\n:Author: Kolen Cheung\n:Date:   April 5, 2019\n\n.. contents::\n   :depth: 3\n..\n\n|Build Status| |GitHub Releases| |PyPI version| |Development Status|\n|Python version| |License| |Coveralls|\n\nUsing CriticMarkup with pandoc. It serves both as a wrapper and a\npre-processor.\n\nDefinition of CriticMarkup\n==========================\n\n-  Deletions: This is {--is --}a test.\n-  Additions: This {++is ++}a test.\n-  Substitutions: This {~~isn\u2019t~>is~~} a test.\n-  Highlighting: This is a {==test==}.\n-  Comments: This is a test{>>What is a test for?<<}.\n\nInstallation\n============\n\nInstall using\n\n.. code:: bash\n\n   pip install pancritic\n\nUsage: pancritic as a markdown wrapper (including but not limited to pandoc)\n============================================================================\n\npancritic provides a pandoc-like cli. Pandoc users will feel right at\nhome. See help from\n\n.. code:: bash\n\n   pancritic -h\n\nA typical use of pancritic will be like\n\n.. code:: bash\n\n   pancritic -s -o index.html index.md\n\nSee examples in `HTML <tests.html>`__ and `PDF <tests.pdf>`__.\n\npancritic specific options\n--------------------------\n\n``--engine``\n   The default engine is ``markdown``. Valid options are ``markdown``,\n   ``markdown2``, ``panflute``, ``pypandoc``. You need to install the\n   respective package in order to use them. ``markdown`` and\n   ``markdown2`` are pure Python, hence useful for other CPU\n   architechture. ``panflute`` and ``pypandoc`` both uses pandoc as\n   backend.\n\n``-m``\\ \\|\\ ``--critic-mode``\n   a/accept, r/reject: accept/reject changes.\n\n   d/diff: generates a diff. In HTML output, JS is used for toggling\n   between diff, accept, reject.\n   m/markup: treat the CriticMarkup as Markup. i.e.\u00a0in HTML output there\n   isn\u2019t any toggles but the diff view only. In LaTeX output, diff and\n   markup modes are identical except for an additional nav. ``-m m``\n   should be used with LaTeX output.\n\nPrevious Users\n--------------\n\nPrevious Users of pandoc-criticmarkup\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis is completely rewritten in Python. The cli has been completely\nchanged too. The former options of ``-a``, ``-r``, ``-d`` are replaced\nwith ``-m a``, ``-m r``, ``-m d``, and added a ``-m m``.\n\nPrevious Users of ``criticParser_CLI.py``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis is a heavy fork of ``criticParser_CLI.py``, with these differences:\n\n#. CLI has changed, with a more pandoc-like interface.\n#. Python 3 (and 2) compatible.\n#. Bug fixes (formerly hightlight without comment are parsed\n   incorrectly).\n#. It has much more input/output format options as well as engines.\n\nExamples,\n\n.. code:: bash\n\n   criticParser_CLI.py input.md -m2 -o output.html --css css.html\n   # is equivalent to\n   pancritic -o output.html input.md --critic-template css.html --engine markdown2\n\nAdvanced Usage: pancritic as a pandoc preprocessor\n--------------------------------------------------\n\nA somewhat surprising behavior is when the to-format and output\nextension is different. In pancritic, the to-format indicates the\nCriticMarkup parsing behavior (mainly tex vs.\u00a0html). And the output\nextension controls the final output\u2019s format (e.g.\u00a0markdown, html, etc.)\n\nAn interesting use of this is to use pancritic as a pandoc preprocessor\ninstead, like this\n\n.. code:: bash\n\n   pancritic input.md -t markdown -m m | pandoc -s -o output.html\n\nThis will be useful if more advanced pandoc args are needed.\n\nCaveats\n=======\n\n-  Nesting CriticMarkup might have unexpected behavior, especially in\n   LaTeX output. See `the caveats section in the spec of\n   CriticMarkup <http://criticmarkup.com/spec.php#caveats>`__.\n\n-  mainly tested with HTML and LaTeX output. RST output almost works,\n   but injecting CSS/JS into the output causes some problems. Currently,\n   it can be get arround with ``--critic-template`` and injecting the\n   CSS/JS manually. See ``pancritic/template.py`` for the template used.\n\nLaTeX Ouptut\n------------\n\nNote that the LaTeX output requires the LaTeX packages\n``changes>=3``. [1]_\n\nOne can tell pandoc to use this package by either using a custom\ntemplate or ``--include-in-header`` option. Or you can use the trick of\nputting the following in your YAML front matter, like this file:\n\n.. code:: yaml\n\n   ---\n   fontfamily: lmodern,changes\n   ...\n\nMarkdown within the CriticMarkup will not be rendered in LaTeX output.\nIf you want to change this behavior, you can take a look at: `LaTeX\nArgument\nParser <https://gist.github.com/mpickering/f1718fcdc4c56273ed52>`__.\n\n.. table:: Translation from CriticMarkup to LaTeX.\n\n   ========================== ===============================\n   CriticMarkup               LaTeX\n   ========================== ===============================\n   ``{--[text]--}``           ``\\deleted{[text]}``\n   ``{++[text]++}``           ``\\added{[text]}``\n   ``{~~[text1]~>[text2]~~}`` ``\\replaced{[text2]}{[text1]}``\n   ``{==[text]==}``           ``\\highlight{[text]}``\n   ``{>>[text]<<}``           ``\\comment{[text]}``\n   ========================== ===============================\n\nCredits\n=======\n\n-  Heavily modified from `CriticMarkup Toolkit\u2019s\n   criticParser_CLI.py <http://criticmarkup.com/services.php>`__\n-  `tests.md <tests.md>`__ is modified from `MMD-Test-Suite/Critic.text\n   at master \u00b7\n   fletcher/MMD-Test-Suite <https://github.com/fletcher/MMD-Test-Suite/blob/master/CriticMarkup/Critic.text>`__\n\n.. [1]\n   The version of the package in TeXLive 2018 is still v2. `TeXLive 2019\n   should be available on 2019-4-30 <https://www.tug.org/texlive/>`__,\n   meanwhile you need to\n\n   .. code:: bash\n\n      # sudo is needed in most cases, depending on where you put it\n      sudo tlmgr update --self\n      sudo tlmgr update changes\n      # check it is >=3\n      tlmgr info changes\n\n.. |Build Status| image:: https://travis-ci.org/ickc/pancritic.svg?branch=master\n   :target: https://travis-ci.org/ickc/pancritic\n.. |GitHub Releases| image:: https://img.shields.io/github/tag/ickc/pancritic.svg?label=github+release\n   :target: https://github.com/ickc/pancritic/releases\n.. |PyPI version| image:: https://img.shields.io/pypi/v/pancritic.svg\n   :target: https://pypi.python.org/pypi/pancritic/\n.. |Development Status| image:: https://img.shields.io/pypi/status/pancritic.svg\n   :target: https://pypi.python.org/pypi/pancritic/\n.. |Python version| image:: https://img.shields.io/pypi/pyversions/pancritic.svg\n   :target: https://pypi.python.org/pypi/pancritic/\n.. |License| image:: https://img.shields.io/pypi/l/pancritic.svg\n.. |Coveralls| image:: https://img.shields.io/coveralls/ickc/pancritic.svg\n   :target: https://coveralls.io/github/ickc/pancritic\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ickc/pancritic", "keywords": "pandoc panflute markdown latex html criticmarkup", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "pancritic", "package_url": "https://pypi.org/project/pancritic/", "platform": "", "project_url": "https://pypi.org/project/pancritic/", "project_urls": {"Homepage": "https://github.com/ickc/pancritic"}, "release_url": "https://pypi.org/project/pancritic/0.3.1/", "requires_dist": ["check-manifest ; extra == 'dev'", "requests ; extra == 'test'", "pep8 ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "coverage ; extra == 'test'", "coveralls ; extra == 'test'", "markdown ; extra == 'test'", "markdown2 ; extra == 'test'", "panflute ; extra == 'test'", "pypandoc ; extra == 'test'"], "requires_python": "", "summary": "CriticMarkdup parser with optional pandoc backend", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Kolen Cheung</td></tr>\n<tr><th>Date:</th>\n<td>April 5, 2019</td></tr>\n</tbody>\n</table>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#definition-of-criticmarkup\" id=\"id3\" rel=\"nofollow\">Definition of CriticMarkup</a></li>\n<li><a href=\"#installation\" id=\"id4\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage-pancritic-as-a-markdown-wrapper-including-but-not-limited-to-pandoc\" id=\"id5\" rel=\"nofollow\">Usage: pancritic as a markdown wrapper (including but not limited to pandoc)</a><ul>\n<li><a href=\"#pancritic-specific-options\" id=\"id6\" rel=\"nofollow\">pancritic specific options</a></li>\n<li><a href=\"#previous-users\" id=\"id7\" rel=\"nofollow\">Previous Users</a><ul>\n<li><a href=\"#previous-users-of-pandoc-criticmarkup\" id=\"id8\" rel=\"nofollow\">Previous Users of pandoc-criticmarkup</a></li>\n<li><a href=\"#previous-users-of-criticparser-cli-py\" id=\"id9\" rel=\"nofollow\">Previous Users of <tt>criticParser_CLI.py</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-usage-pancritic-as-a-pandoc-preprocessor\" id=\"id10\" rel=\"nofollow\">Advanced Usage: pancritic as a pandoc preprocessor</a></li>\n</ul>\n</li>\n<li><a href=\"#caveats\" id=\"id11\" rel=\"nofollow\">Caveats</a><ul>\n<li><a href=\"#latex-ouptut\" id=\"id12\" rel=\"nofollow\">LaTeX Ouptut</a></li>\n</ul>\n</li>\n<li><a href=\"#credits\" id=\"id13\" rel=\"nofollow\">Credits</a></li>\n</ul>\n</div>\n<p><a href=\"https://travis-ci.org/ickc/pancritic\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c41e1dcbb1fb1627e2173ea873b28e42022d7bb/68747470733a2f2f7472617669732d63692e6f72672f69636b632f70616e6372697469632e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/ickc/pancritic/releases\" rel=\"nofollow\"><img alt=\"GitHub Releases\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/316d0c2a088f454602f22d7811754c88f5f527ab/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f69636b632f70616e6372697469632e7376673f6c6162656c3d6769746875622b72656c65617365\"></a> <a href=\"https://pypi.python.org/pypi/pancritic/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0d742ceccca384a6535207b1f3a1b7a944062a6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70616e6372697469632e737667\"></a> <a href=\"https://pypi.python.org/pypi/pancritic/\" rel=\"nofollow\"><img alt=\"Development Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5194116b73c1adc39d23b909062d6787f101362c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f70616e6372697469632e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pancritic/\" rel=\"nofollow\"><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76baecf34d0338a2c83f91d830c8b3727c71710a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70616e6372697469632e737667\"></a> <img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/495565a88881e18cba1a28ab3401b0caab696796/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70616e6372697469632e737667\"> <a href=\"https://coveralls.io/github/ickc/pancritic\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/614a8c86532a88578f320d13e55fd78e3732995c/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f69636b632f70616e6372697469632e737667\"></a></p>\n<p>Using CriticMarkup with pandoc. It serves both as a wrapper and a\npre-processor.</p>\n<div id=\"definition-of-criticmarkup\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Definition of CriticMarkup</a></h2>\n<ul>\n<li>Deletions: This is {\u2013is \u2013}a test.</li>\n<li>Additions: This {++is ++}a test.</li>\n<li>Substitutions: This {~~isn\u2019t~&gt;is~~} a test.</li>\n<li>Highlighting: This is a {==test==}.</li>\n<li>Comments: This is a test{&gt;&gt;What is a test for?&lt;&lt;}.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Installation</a></h2>\n<p>Install using</p>\n<pre>pip install pancritic\n</pre>\n</div>\n<div id=\"usage-pancritic-as-a-markdown-wrapper-including-but-not-limited-to-pandoc\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Usage: pancritic as a markdown wrapper (including but not limited to pandoc)</a></h2>\n<p>pancritic provides a pandoc-like cli. Pandoc users will feel right at\nhome. See help from</p>\n<pre>pancritic -h\n</pre>\n<p>A typical use of pancritic will be like</p>\n<pre>pancritic -s -o index.html index.md\n</pre>\n<p>See examples in <a href=\"tests.html\" rel=\"nofollow\">HTML</a> and <a href=\"tests.pdf\" rel=\"nofollow\">PDF</a>.</p>\n<div id=\"pancritic-specific-options\">\n<h3><a href=\"#id6\" rel=\"nofollow\">pancritic specific options</a></h3>\n<dl>\n<dt><tt><span class=\"pre\">--engine</span></tt></dt>\n<dd>The default engine is <tt>markdown</tt>. Valid options are <tt>markdown</tt>,\n<tt>markdown2</tt>, <tt>panflute</tt>, <tt>pypandoc</tt>. You need to install the\nrespective package in order to use them. <tt>markdown</tt> and\n<tt>markdown2</tt> are pure Python, hence useful for other CPU\narchitechture. <tt>panflute</tt> and <tt>pypandoc</tt> both uses pandoc as\nbackend.</dd>\n<dt><tt><span class=\"pre\">-m</span></tt>|<tt><span class=\"pre\">--critic-mode</span></tt></dt>\n<dd><p>a/accept, r/reject: accept/reject changes.</p>\n<p>d/diff: generates a diff. In HTML output, JS is used for toggling\nbetween diff, accept, reject.\nm/markup: treat the CriticMarkup as Markup. i.e.\u00a0in HTML output there\nisn\u2019t any toggles but the diff view only. In LaTeX output, diff and\nmarkup modes are identical except for an additional nav. <tt><span class=\"pre\">-m</span> m</tt>\nshould be used with LaTeX output.</p>\n</dd>\n</dl>\n</div>\n<div id=\"previous-users\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Previous Users</a></h3>\n<div id=\"previous-users-of-pandoc-criticmarkup\">\n<h4><a href=\"#id8\" rel=\"nofollow\">Previous Users of pandoc-criticmarkup</a></h4>\n<p>This is completely rewritten in Python. The cli has been completely\nchanged too. The former options of <tt><span class=\"pre\">-a</span></tt>, <tt><span class=\"pre\">-r</span></tt>, <tt><span class=\"pre\">-d</span></tt> are replaced\nwith <tt><span class=\"pre\">-m</span> a</tt>, <tt><span class=\"pre\">-m</span> r</tt>, <tt><span class=\"pre\">-m</span> d</tt>, and added a <tt><span class=\"pre\">-m</span> m</tt>.</p>\n</div>\n<div id=\"previous-users-of-criticparser-cli-py\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Previous Users of <tt>criticParser_CLI.py</tt></a></h4>\n<p>This is a heavy fork of <tt>criticParser_CLI.py</tt>, with these differences:</p>\n<ol>\n<li>CLI has changed, with a more pandoc-like interface.</li>\n<li>Python 3 (and 2) compatible.</li>\n<li>Bug fixes (formerly hightlight without comment are parsed\nincorrectly).</li>\n<li>It has much more input/output format options as well as engines.</li>\n</ol>\n<p>Examples,</p>\n<pre>criticParser_CLI.py input.md -m2 -o output.html --css css.html\n<span class=\"c1\"># is equivalent to\n</span>pancritic -o output.html input.md --critic-template css.html --engine markdown2\n</pre>\n</div>\n</div>\n<div id=\"advanced-usage-pancritic-as-a-pandoc-preprocessor\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Advanced Usage: pancritic as a pandoc preprocessor</a></h3>\n<p>A somewhat surprising behavior is when the to-format and output\nextension is different. In pancritic, the to-format indicates the\nCriticMarkup parsing behavior (mainly tex vs.\u00a0html). And the output\nextension controls the final output\u2019s format (e.g.\u00a0markdown, html, etc.)</p>\n<p>An interesting use of this is to use pancritic as a pandoc preprocessor\ninstead, like this</p>\n<pre>pancritic input.md -t markdown -m m <span class=\"p\">|</span> pandoc -s -o output.html\n</pre>\n<p>This will be useful if more advanced pandoc args are needed.</p>\n</div>\n</div>\n<div id=\"caveats\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Caveats</a></h2>\n<ul>\n<li>Nesting CriticMarkup might have unexpected behavior, especially in\nLaTeX output. See <a href=\"http://criticmarkup.com/spec.php#caveats\" rel=\"nofollow\">the caveats section in the spec of\nCriticMarkup</a>.</li>\n<li>mainly tested with HTML and LaTeX output. RST output almost works,\nbut injecting CSS/JS into the output causes some problems. Currently,\nit can be get arround with <tt><span class=\"pre\">--critic-template</span></tt> and injecting the\nCSS/JS manually. See <tt>pancritic/template.py</tt> for the template used.</li>\n</ul>\n<div id=\"latex-ouptut\">\n<h3><a href=\"#id12\" rel=\"nofollow\">LaTeX Ouptut</a></h3>\n<p>Note that the LaTeX output requires the LaTeX packages\n<tt><span class=\"pre\">changes&gt;=3</span></tt>. <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a></p>\n<p>One can tell pandoc to use this package by either using a custom\ntemplate or <tt><span class=\"pre\">--include-in-header</span></tt> option. Or you can use the trick of\nputting the following in your YAML front matter, like this file:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">fontfamily</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">lmodern,changes</span>\n<span class=\"nn\">...</span>\n</pre>\n<p>Markdown within the CriticMarkup will not be rendered in LaTeX output.\nIf you want to change this behavior, you can take a look at: <a href=\"https://gist.github.com/mpickering/f1718fcdc4c56273ed52\" rel=\"nofollow\">LaTeX\nArgument\nParser</a>.</p>\n<table>\n<caption>Translation from CriticMarkup to LaTeX.</caption>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>CriticMarkup</th>\n<th>LaTeX</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt><span class=\"pre\">{--[text]--}</span></tt></td>\n<td><tt><span class=\"pre\">\\deleted{[text]}</span></tt></td>\n</tr>\n<tr><td><tt><span class=\"pre\">{++[text]++}</span></tt></td>\n<td><tt><span class=\"pre\">\\added{[text]}</span></tt></td>\n</tr>\n<tr><td><tt><span class=\"pre\">{~~[text1]~&gt;[text2]~~}</span></tt></td>\n<td><tt><span class=\"pre\">\\replaced{[text2]}{[text1]}</span></tt></td>\n</tr>\n<tr><td><tt><span class=\"pre\">{==[text]==}</span></tt></td>\n<td><tt><span class=\"pre\">\\highlight{[text]}</span></tt></td>\n</tr>\n<tr><td><tt><span class=\"pre\">{&gt;&gt;[text]&lt;&lt;}</span></tt></td>\n<td><tt><span class=\"pre\">\\comment{[text]}</span></tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Credits</a></h2>\n<ul>\n<li>Heavily modified from <a href=\"http://criticmarkup.com/services.php\" rel=\"nofollow\">CriticMarkup Toolkit\u2019s\ncriticParser_CLI.py</a></li>\n<li><a href=\"tests.md\" rel=\"nofollow\">tests.md</a> is modified from <a href=\"https://github.com/fletcher/MMD-Test-Suite/blob/master/CriticMarkup/Critic.text\" rel=\"nofollow\">MMD-Test-Suite/Critic.text\nat master \u00b7\nfletcher/MMD-Test-Suite</a></li>\n</ul>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><p>The version of the package in TeXLive 2018 is still v2. <a href=\"https://www.tug.org/texlive/\" rel=\"nofollow\">TeXLive 2019\nshould be available on 2019-4-30</a>,\nmeanwhile you need to</p>\n<pre>\n<span class=\"c1\"># sudo is needed in most cases, depending on where you put it\n</span>sudo tlmgr update --self\nsudo tlmgr update changes\n<span class=\"c1\"># check it is &gt;=3\n</span>tlmgr info changes\n</pre>\n</td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 5106252, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0c30e74359f43231ed4d522e01de7cf7", "sha256": "79c7e6b68ee82dfde23d3506f1df2860257f0997639b5ebdb2caab29fc1bf281"}, "downloads": -1, "filename": "pancritic-0.1.tar.gz", "has_sig": false, "md5_digest": "0c30e74359f43231ed4d522e01de7cf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9237, "upload_time": "2018-03-11T23:08:17", "upload_time_iso_8601": "2018-03-11T23:08:17.782666Z", "url": "https://files.pythonhosted.org/packages/f3/1a/edb7a87e537aaaa53dd85e0c6e246815faca4f44e646f97328f30fcf26fa/pancritic-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "9ab382a83e2367d20d68e19318af034a", "sha256": "d965f5e3daaceb10b40cc592b56a5319dfeca4f3fabe635da241b45159e03bce"}, "downloads": -1, "filename": "pancritic-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9ab382a83e2367d20d68e19318af034a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13370, "upload_time": "2018-03-12T06:24:19", "upload_time_iso_8601": "2018-03-12T06:24:19.279190Z", "url": "https://files.pythonhosted.org/packages/e0/82/8080e7453a1b72798dd6e0c2403e8be8136572e0708b4f3f7a28f90b3b96/pancritic-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f60db99bf3b067883c28d56ffbd4f19", "sha256": "91f47827b1f89dd5456adb2debd19702b512de615a901fe58c8be3d55d9ea789"}, "downloads": -1, "filename": "pancritic-0.2.tar.gz", "has_sig": false, "md5_digest": "8f60db99bf3b067883c28d56ffbd4f19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12130, "upload_time": "2018-03-12T06:24:20", "upload_time_iso_8601": "2018-03-12T06:24:20.494805Z", "url": "https://files.pythonhosted.org/packages/62/ca/d0bc08fa527295a535af6ba223c5e34e9d9219d29ee9831e3729f1a2cc80/pancritic-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "04e7907801b1a555aa1fe6785be1dcf6", "sha256": "bf774a3d8bb20af956047331922f3b4c0d7a435a6cd9689ec71a51de2e8f0b20"}, "downloads": -1, "filename": "pancritic-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "04e7907801b1a555aa1fe6785be1dcf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21990, "upload_time": "2019-04-06T00:31:54", "upload_time_iso_8601": "2019-04-06T00:31:54.100226Z", "url": "https://files.pythonhosted.org/packages/11/e9/0ac608fd804d26b626a4b01765323a88a74fe46e1304a97b5fa62cff441a/pancritic-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da644aa87d19d6a05d19d8620313886f", "sha256": "672c004f27c635f7dc3252ef302765d341d92e4f0ac975a78dbebd21c3cb5d5f"}, "downloads": -1, "filename": "pancritic-0.3.tar.gz", "has_sig": false, "md5_digest": "da644aa87d19d6a05d19d8620313886f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12149, "upload_time": "2019-04-06T00:31:55", "upload_time_iso_8601": "2019-04-06T00:31:55.577302Z", "url": "https://files.pythonhosted.org/packages/8c/48/83bb6bd5b81f1bdd411ff8d3017734eb579dca14c1c4d4f04f55e8ad3901/pancritic-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ac293ae44333112695c42ed3bc85c634", "sha256": "0f3a1e266952d76c965354ce70bd4fb2b9945577791a43ba39ba073e45785c3e"}, "downloads": -1, "filename": "pancritic-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ac293ae44333112695c42ed3bc85c634", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22150, "upload_time": "2019-04-06T00:48:49", "upload_time_iso_8601": "2019-04-06T00:48:49.658859Z", "url": "https://files.pythonhosted.org/packages/03/be/aab59027bc33672d8e8b903b63aa46523ee2e4745ab9d9ddc70d83da2725/pancritic-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19236c1c76f03873f8d72bd4020e9cd0", "sha256": "12ae7141785c20a8d05663675fa5b445473e569954bd7a73ee0f770405e9e4c0"}, "downloads": -1, "filename": "pancritic-0.3.1.tar.gz", "has_sig": false, "md5_digest": "19236c1c76f03873f8d72bd4020e9cd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12328, "upload_time": "2019-04-06T00:48:51", "upload_time_iso_8601": "2019-04-06T00:48:51.078088Z", "url": "https://files.pythonhosted.org/packages/6b/36/ae6dbd20d27dc35ab6c2b6ffb76829da2dd1ee29482f565b6fc9483985ce/pancritic-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac293ae44333112695c42ed3bc85c634", "sha256": "0f3a1e266952d76c965354ce70bd4fb2b9945577791a43ba39ba073e45785c3e"}, "downloads": -1, "filename": "pancritic-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ac293ae44333112695c42ed3bc85c634", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22150, "upload_time": "2019-04-06T00:48:49", "upload_time_iso_8601": "2019-04-06T00:48:49.658859Z", "url": "https://files.pythonhosted.org/packages/03/be/aab59027bc33672d8e8b903b63aa46523ee2e4745ab9d9ddc70d83da2725/pancritic-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19236c1c76f03873f8d72bd4020e9cd0", "sha256": "12ae7141785c20a8d05663675fa5b445473e569954bd7a73ee0f770405e9e4c0"}, "downloads": -1, "filename": "pancritic-0.3.1.tar.gz", "has_sig": false, "md5_digest": "19236c1c76f03873f8d72bd4020e9cd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12328, "upload_time": "2019-04-06T00:48:51", "upload_time_iso_8601": "2019-04-06T00:48:51.078088Z", "url": "https://files.pythonhosted.org/packages/6b/36/ae6dbd20d27dc35ab6c2b6ffb76829da2dd1ee29482f565b6fc9483985ce/pancritic-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:40 2020"}