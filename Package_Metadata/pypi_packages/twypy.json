{"info": {"author": "Roger Fernandez Guri", "author_email": "rogerfernandezguri@me.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Twypy\n=====\n[![PyPI version](https://badge.fury.io/py/twypy.svg)](http://badge.fury.io/py/twypy)\n[![Build Status](https://travis-ci.org/rfguri/twypy.svg?branch=master)](https://travis-ci.org/rogerfernandezg/twypy)\n\nTwypy is a super lightweight Twitter REST API v1.1 client written in Python,\nbased on [Birdy](https://github.com/inueni/birdy).\n\nMinimizing lines of code it aims to be a simpler yet more intuitive aproach to avoid\nall the boilerplate that most of the clients has using a simplified call constructor.\n\nThe requests come with a built-in code syntax to easely map all API calls.\n\nAdvantages\n----------\n\n- Focused only on REST API\n- Better JSON object dispatcher\n- Optimized methods\n\nRequirements\n------------\n- python >= 2.7\n- requests_oauthlib >= 0.3.2\n\nInstallation\n------------\nYou can install the package via `easy_install` or `pip`:\n```Bash\neasy_install twypy\npip install twypy\n```\n\nUsage\n-----\nImport the module at the beginning of your file:\n```python\nfrom twypy.api import Api\n```\nInit the `client` with your credentials:\n```python\nclient = Api(client_key, client_secret, access_token, access_token_secret)\n```\nCall [Twitter REST API](https://dev.twitter.com/docs/api/1.1) methods\nfollowing this example pattern:\n```\n<method> <first>/<second --> api.<first>.<second>.<method>.(<params>)\n```\n#### GET\nSo the following `GET` resource url:\n```\nGET statuses/user_timeline | https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=twitterapi\n```\nwith Twypy is handled with the following syntax:\n```\nclient.api.statuses.user_timeline.get(screen_name='twitterapi')\n```\nA visual example of previous explanation with a `response` object goes like this:\n\n```python\nresponse = client.api.statuses.user_timeline.get(screen_name='twitterapi')\n```\n#### POST\nThe same using a `POST` resource url:\n```\nPOST statuses/update | https://api.twitter.com/1.1/statuses/update.json?status='Maybe he'll finally find his keys. #peterfalk!'\n```\nwith Twypy is handled with the following syntax:\n```\nclient.api.statuses.update.post(status='Maybe he'll finally find his keys. #peterfalk!')\n```\nA visual example of previous explanation with a `response` object goes like this:\n\n```python\nresponse = client.api.statuses.update.post(status='Maybe he'll finally find his keys. #peterfalk!')\n```\n\n#### RESPONSE\nTo simply see the the *JSON* response just print the `response` object:\n\n```python\nprint response\n```\n\nTODO\n----\n- Add [Nose](https://github.com/nose-devs/nose/) tests\n- Add exceptions\n\n\nLicence\n-------\nTwypy is Copyright \u00a9 2014 Roger Fernandez Guri. It is free software, and may be\nredistributed under the terms specified in the [LICENCE](https://github.com/rfguri/twypy/blob/master/LICENSE) file.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rogerfernandezg/twypy/", "keywords": "twitter rest api", "license": "The MIT License (MIT)\n\nCopyright (c) 2014 Roger Fernandez Guri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "twypy", "package_url": "https://pypi.org/project/twypy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/twypy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rogerfernandezg/twypy/"}, "release_url": "https://pypi.org/project/twypy/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Twitter REST API v1.1 client for Python", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>[![PyPI version](<a href=\"https://badge.fury.io/py/twypy.svg)%5D(http://badge.fury.io/py/twypy\" rel=\"nofollow\">https://badge.fury.io/py/twypy.svg)](http://badge.fury.io/py/twypy</a>)\n[![Build Status](<a href=\"https://travis-ci.org/rfguri/twypy.svg?branch=master)%5D(https://travis-ci.org/rogerfernandezg/twypy\" rel=\"nofollow\">https://travis-ci.org/rfguri/twypy.svg?branch=master)](https://travis-ci.org/rogerfernandezg/twypy</a>)</p>\n<p>Twypy is a super lightweight Twitter REST API v1.1 client written in Python,\nbased on [Birdy](<a href=\"https://github.com/inueni/birdy\" rel=\"nofollow\">https://github.com/inueni/birdy</a>).</p>\n<p>Minimizing lines of code it aims to be a simpler yet more intuitive aproach to avoid\nall the boilerplate that most of the clients has using a simplified call constructor.</p>\n<p>The requests come with a built-in code syntax to easely map all API calls.</p>\n<div id=\"advantages\">\n<h2>Advantages</h2>\n<ul>\n<li>Focused only on REST API</li>\n<li>Better JSON object dispatcher</li>\n<li>Optimized methods</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>python &gt;= 2.7</li>\n<li>requests_oauthlib &gt;= 0.3.2</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install the package via <cite>easy_install</cite> or <cite>pip</cite>:\n<tt>`Bash\neasy_install twypy\npip install twypy\n`</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Import the module at the beginning of your file:\n<tt>`python\nfrom twypy.api import Api\n`</tt>\nInit the <cite>client</cite> with your credentials:\n<tt>`python\nclient = Api(client_key, client_secret, access_token, access_token_secret)\n`</tt>\nCall [Twitter REST API](<a href=\"https://dev.twitter.com/docs/api/1.1\" rel=\"nofollow\">https://dev.twitter.com/docs/api/1.1</a>) methods\nfollowing this example pattern:\n<tt>`\n&lt;method&gt; <span class=\"pre\">&lt;first&gt;/&lt;second</span> <span class=\"pre\">--&gt;</span> <span class=\"pre\">api.&lt;first&gt;.&lt;second&gt;.&lt;method&gt;.(&lt;params&gt;)</span>\n`</tt>\n#### GET\nSo the following <cite>GET</cite> resource url:\n<tt>`\nGET statuses/user_timeline | <span class=\"pre\">https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=twitterapi</span>\n`</tt>\nwith Twypy is handled with the following syntax:\n<tt>`\n<span class=\"pre\">client.api.statuses.user_timeline.get(screen_name='twitterapi')</span>\n`</tt>\nA visual example of previous explanation with a <cite>response</cite> object goes like this:</p>\n<p><tt>`python\nresponse = <span class=\"pre\">client.api.statuses.user_timeline.get(screen_name='twitterapi')</span>\n`</tt>\n#### POST\nThe same using a <cite>POST</cite> resource url:\n<tt>`\nPOST statuses/update | <span class=\"pre\">https://api.twitter.com/1.1/statuses/update.json?status='Maybe</span> he'll finally find his keys. #peterfalk!'\n`</tt>\nwith Twypy is handled with the following syntax:\n<tt>`\n<span class=\"pre\">client.api.statuses.update.post(status='Maybe</span> he'll finally find his keys. <span class=\"pre\">#peterfalk!')</span>\n`</tt>\nA visual example of previous explanation with a <cite>response</cite> object goes like this:</p>\n<p><tt>`python\nresponse = <span class=\"pre\">client.api.statuses.update.post(status='Maybe</span> he'll finally find his keys. <span class=\"pre\">#peterfalk!')</span>\n`</tt></p>\n<p>#### RESPONSE\nTo simply see the the <em>JSON</em> response just print the <cite>response</cite> object:</p>\n<p><tt>`python\nprint response\n`</tt></p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Add [Nose](<a href=\"https://github.com/nose-devs/nose/\" rel=\"nofollow\">https://github.com/nose-devs/nose/</a>) tests</li>\n<li>Add exceptions</li>\n</ul>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>Twypy is Copyright \u00a9 2014 Roger Fernandez Guri. It is free software, and may be\nredistributed under the terms specified in the [LICENCE](<a href=\"https://github.com/rfguri/twypy/blob/master/LICENSE\" rel=\"nofollow\">https://github.com/rfguri/twypy/blob/master/LICENSE</a>) file.</p>\n</div>\n\n          </div>"}, "last_serial": 1522856, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e425ce197df97fa47438dc28161290a9", "sha256": "4b8529b762926165c68356435b64c61b66f9a34e2c8eb41329704f1e31d55656"}, "downloads": -1, "filename": "twypy-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e425ce197df97fa47438dc28161290a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6955, "upload_time": "2015-04-27T14:31:12", "upload_time_iso_8601": "2015-04-27T14:31:12.673966Z", "url": "https://files.pythonhosted.org/packages/ef/c6/6658456a062143b2c797af91194452b82d5ef93e87e368ac44fc888e8c7d/twypy-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbf8bdd8becc458a4646ff911771b648", "sha256": "5f8e450e72dece033eb0fa7d02cebc7bf1d6d9054f88c219855c6e449f3620d2"}, "downloads": -1, "filename": "twypy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cbf8bdd8becc458a4646ff911771b648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4797, "upload_time": "2015-04-27T14:31:15", "upload_time_iso_8601": "2015-04-27T14:31:15.477389Z", "url": "https://files.pythonhosted.org/packages/96/29/cd086b354d76eed7378585c8482b40d2f337488dc032dfe60746999b9e91/twypy-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e425ce197df97fa47438dc28161290a9", "sha256": "4b8529b762926165c68356435b64c61b66f9a34e2c8eb41329704f1e31d55656"}, "downloads": -1, "filename": "twypy-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e425ce197df97fa47438dc28161290a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6955, "upload_time": "2015-04-27T14:31:12", "upload_time_iso_8601": "2015-04-27T14:31:12.673966Z", "url": "https://files.pythonhosted.org/packages/ef/c6/6658456a062143b2c797af91194452b82d5ef93e87e368ac44fc888e8c7d/twypy-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbf8bdd8becc458a4646ff911771b648", "sha256": "5f8e450e72dece033eb0fa7d02cebc7bf1d6d9054f88c219855c6e449f3620d2"}, "downloads": -1, "filename": "twypy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cbf8bdd8becc458a4646ff911771b648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4797, "upload_time": "2015-04-27T14:31:15", "upload_time_iso_8601": "2015-04-27T14:31:15.477389Z", "url": "https://files.pythonhosted.org/packages/96/29/cd086b354d76eed7378585c8482b40d2f337488dc032dfe60746999b9e91/twypy-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:20 2020"}