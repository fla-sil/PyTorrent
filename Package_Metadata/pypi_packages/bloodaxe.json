{"info": {"author": "rfunix", "author_email": "rafinha.unix@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "[![CircleCI](https://circleci.com/gh/rfunix/bloodaxe.svg?style=svg)](https://circleci.com/gh/rfunix/bloodaxe)\n\n\n![bloodaxe logo](/images/logo.png)\n\n`bloodaxe` is the nice way to testing and metrifying api flows.\n\n![GIF demo](images/demo.gif)\n\n**Usage**\n---\n\n```\nUsage: bloodaxe.py [OPTIONS] CONFIG_FILE\n\nOptions:\n  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n\n  --help                Show this message and exit.\n```\n`$ bloodaxe example.toml`\n\n**Installation Options**\n---\n\nInstall with [`pip`](https://pypi.org/project/bloodaxe/)\n\n`$ pip install bloodaxe`\n\n`$ bloodaxe`\n\n**Flow configuration examples**\n---\n```toml\n[configs]\nnumber_of_concurrent_flows = 10 # Number of concurrent coroutines flows\nduration = 60 # Stressing duration\n\n[[api]] # Api context\nname = \"user_api\"\nbase_url = \"http://127.0.0.1:8080\" # Base url at the moment, is the unique parameter in api section.\n[api.envvars] # Environment variables for given api\nclient_id = \"CLIENT_ID\" # Envvars names\nclient_secret = \"CLIENT_SECRET\"\n\n[[api]]\nname = \"any_api\"\nbase_url = \"http://127.0.0.1:1010\"\n\n[[request]] # Request context\nname = \"get_token\" \nurl = \"{{ user_api.base_url }}/token/\" # Use user_api context to get the base_url\nmethod = \"POST\"\ntimeout = 60 # The bloodaxe default timeout value is 10 secs, but it's possible override the default value\nsave_result = true # Save request result in request name context, default value is false\n[request.data] # Request data section\nclient_id = \"{{ user_api.client_id }}\" # templating syntax is allowed in request.data\nclient_secret = \"{{ user_api.client_secret }}\"\n[request.headers] # Request header section\nContent-Type = 'application/x-www-form-urlencoded'\n\n[[request]]\nname = \"get_user\"\nurl = \"{{ user_api.base_url }}/users/1\"\nmethod = \"GET\"\ntimeout = 60\nsave_result = true\n[request.headers]\nAuthorization = \"{{ get_token.access_token}}\" # templating syntax is allowed in request.headers\n\n[[request]]\nname =\"get_user_with_params\"\nurl = \"{{ user_api.base_url }}/users/\"\nmethod = \"GET\"\ntimeout = 60\nsave_result = false\n[request.params] # Request params section\nname = \"{{ get_user.name }}\" # templating syntax is allowed in request.params/querystring\n[request.headers]\nAuthorization = \"{{ get_token.access_token}}\"\n\n[[request]]\nname = \"create_new_user\"\nurl = \"{{  user_api.base_url }}/users/\"\nmethod = \"POST\"\n[request.data]\nfirstname = \"{{ get_user.firstname }} test\"\nlastname = \"{{ get_user.Lastname }} test\"\nstatus = \"{{ get_user.status }} test\"\n[request.headers]\nAuthorization = \"{{ get_token.access_token}}\"\n[request.response_check] # response_check feature checking response data and status_code\nstatus_code = 201\n[request.response_check.data]\nfirstname = \"{{ get_user.firstname }} test\" # templating syntax is allowed in response data checks\nlastname = \"{{ get_user.Lastname }} test\"\nstatus = \"{{ get_user.status }} test\"\n\n[[request]]\nname = \"create_new_user_with_from_file\"\nurl = \"{{  user_api.base_url }}/users/\"\nmethod = \"PATCH\"\n[request.data]\nfrom_file = \"user.json\" # from_file help you configure request.data\n[request.headers]\nAuthorization = \"{{ get_token.access_token}}\"\n```\n\n**Backlog**\n---\nhttps://github.com/rfunix/bloodaxe/projects/1\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bloodaxe", "package_url": "https://pypi.org/project/bloodaxe/", "platform": "", "project_url": "https://pypi.org/project/bloodaxe/", "project_urls": null, "release_url": "https://pypi.org/project/bloodaxe/0.2.0/", "requires_dist": ["toml (>=0.10.0,<0.11.0)", "httpx (>=0.12.1,<0.13.0)", "jinja2 (>=2.11.1,<3.0.0)", "typer[all] (>=0.1.0,<0.2.0)", "tabulate (>=0.8.7,<0.9.0)"], "requires_python": ">=3.8,<4.0", "summary": "bloodaxe is the nice way to testing and metrifying api flows.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/rfunix/bloodaxe\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20e19ff8c0edbacbcaef0952ca843c3cf10757ff/68747470733a2f2f636972636c6563692e636f6d2f67682f7266756e69782f626c6f6f646178652e7376673f7374796c653d737667\"></a></p>\n<p><img alt=\"bloodaxe logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e1baebbe367ee08f80f6322313e64e292c9ce09/2f696d616765732f6c6f676f2e706e67\"></p>\n<p><code>bloodaxe</code> is the nice way to testing and metrifying api flows.</p>\n<p><img alt=\"GIF demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/00ba4f8f277dd8e4c82d59f1e7104f1a72872bc1/696d616765732f64656d6f2e676966\"></p>\n<h2><strong>Usage</strong></h2>\n<pre><code>Usage: bloodaxe.py [OPTIONS] CONFIG_FILE\n\nOptions:\n  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n\n  --help                Show this message and exit.\n</code></pre>\n<p><code>$ bloodaxe example.toml</code></p>\n<h2><strong>Installation Options</strong></h2>\n<p>Install with <a href=\"https://pypi.org/project/bloodaxe/\" rel=\"nofollow\"><code>pip</code></a></p>\n<p><code>$ pip install bloodaxe</code></p>\n<p><code>$ bloodaxe</code></p>\n<h2><strong>Flow configuration examples</strong></h2>\n<pre><span class=\"k\">[configs]</span>\n<span class=\"n\">number_of_concurrent_flows</span> <span class=\"o\">=</span> <span class=\"mi\">10</span> <span class=\"c1\"># Number of concurrent coroutines flows</span>\n<span class=\"n\">duration</span> <span class=\"o\">=</span> <span class=\"mi\">60</span> <span class=\"c1\"># Stressing duration</span>\n\n<span class=\"p\">[[</span><span class=\"n\">api</span><span class=\"p\">]]</span> <span class=\"c1\"># Api context</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"user_api\"</span>\n<span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s\">\"http://127.0.0.1:8080\"</span> <span class=\"c1\"># Base url at the moment, is the unique parameter in api section.</span>\n<span class=\"p\">[</span><span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">envvars</span><span class=\"p\">]</span> <span class=\"c1\"># Environment variables for given api</span>\n<span class=\"n\">client_id</span> <span class=\"o\">=</span> <span class=\"s\">\"CLIENT_ID\"</span> <span class=\"c1\"># Envvars names</span>\n<span class=\"n\">client_secret</span> <span class=\"o\">=</span> <span class=\"s\">\"CLIENT_SECRET\"</span>\n\n<span class=\"k\">[[api]]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"any_api\"</span>\n<span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s\">\"http://127.0.0.1:1010\"</span>\n\n<span class=\"p\">[[</span><span class=\"n\">request</span><span class=\"p\">]]</span> <span class=\"c1\"># Request context</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"get_token\"</span> \n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ user_api.base_url }}/token/\"</span> <span class=\"c1\"># Use user_api context to get the base_url</span>\n<span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"POST\"</span>\n<span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">60</span> <span class=\"c1\"># The bloodaxe default timeout value is 10 secs, but it's possible override the default value</span>\n<span class=\"n\">save_result</span> <span class=\"o\">=</span> <span class=\"n\">true</span> <span class=\"c1\"># Save request result in request name context, default value is false</span>\n<span class=\"p\">[</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">]</span> <span class=\"c1\"># Request data section</span>\n<span class=\"n\">client_id</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ user_api.client_id }}\"</span> <span class=\"c1\"># templating syntax is allowed in request.data</span>\n<span class=\"n\">client_secret</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ user_api.client_secret }}\"</span>\n<span class=\"p\">[</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">headers</span><span class=\"p\">]</span> <span class=\"c1\"># Request header section</span>\n<span class=\"n\">Content-Type</span> <span class=\"o\">=</span> <span class=\"s\">'application/x-www-form-urlencoded'</span>\n\n<span class=\"k\">[[request]]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"get_user\"</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ user_api.base_url }}/users/1\"</span>\n<span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"GET\"</span>\n<span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n<span class=\"n\">save_result</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"k\">[request.headers]</span>\n<span class=\"n\">Authorization</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_token.access_token}}\"</span> <span class=\"c1\"># templating syntax is allowed in request.headers</span>\n\n<span class=\"k\">[[request]]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span><span class=\"s\">\"get_user_with_params\"</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ user_api.base_url }}/users/\"</span>\n<span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"GET\"</span>\n<span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n<span class=\"n\">save_result</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"p\">[</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">params</span><span class=\"p\">]</span> <span class=\"c1\"># Request params section</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.name }}\"</span> <span class=\"c1\"># templating syntax is allowed in request.params/querystring</span>\n<span class=\"k\">[request.headers]</span>\n<span class=\"n\">Authorization</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_token.access_token}}\"</span>\n\n<span class=\"k\">[[request]]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"create_new_user\"</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"{{  user_api.base_url }}/users/\"</span>\n<span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"POST\"</span>\n<span class=\"k\">[request.data]</span>\n<span class=\"n\">firstname</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.firstname }} test\"</span>\n<span class=\"n\">lastname</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.Lastname }} test\"</span>\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.status }} test\"</span>\n<span class=\"k\">[request.headers]</span>\n<span class=\"n\">Authorization</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_token.access_token}}\"</span>\n<span class=\"p\">[</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">response_check</span><span class=\"p\">]</span> <span class=\"c1\"># response_check feature checking response data and status_code</span>\n<span class=\"n\">status_code</span> <span class=\"o\">=</span> <span class=\"mi\">201</span>\n<span class=\"k\">[request.response_check.data]</span>\n<span class=\"n\">firstname</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.firstname }} test\"</span> <span class=\"c1\"># templating syntax is allowed in response data checks</span>\n<span class=\"n\">lastname</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.Lastname }} test\"</span>\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_user.status }} test\"</span>\n\n<span class=\"k\">[[request]]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"create_new_user_with_from_file\"</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"{{  user_api.base_url }}/users/\"</span>\n<span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"PATCH\"</span>\n<span class=\"k\">[request.data]</span>\n<span class=\"n\">from_file</span> <span class=\"o\">=</span> <span class=\"s\">\"user.json\"</span> <span class=\"c1\"># from_file help you configure request.data</span>\n<span class=\"k\">[request.headers]</span>\n<span class=\"n\">Authorization</span> <span class=\"o\">=</span> <span class=\"s\">\"{{ get_token.access_token}}\"</span>\n</pre>\n<h2><strong>Backlog</strong></h2>\n<p><a href=\"https://github.com/rfunix/bloodaxe/projects/1\" rel=\"nofollow\">https://github.com/rfunix/bloodaxe/projects/1</a></p>\n\n          </div>"}, "last_serial": 6950797, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3ad91dd19abdb3ecfbda4e0316e1a63d", "sha256": "c1a783b4a2558682fc322b2fc0249c16dd310dc1e8a04d25c471116fb5e70704"}, "downloads": -1, "filename": "bloodaxe-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3ad91dd19abdb3ecfbda4e0316e1a63d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 4263, "upload_time": "2020-03-28T03:50:43", "upload_time_iso_8601": "2020-03-28T03:50:43.549536Z", "url": "https://files.pythonhosted.org/packages/22/32/d8aaa1193144387cc21de2947c6fc7f698cb6d607b3c1f5fd843a8ef1253/bloodaxe-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "935c0092b29de90d6a8d99a0d86f4c92", "sha256": "4a6f46ca027fc9eadf5caed761ee95c1401c3bc52dbd56665792dba7339cc198"}, "downloads": -1, "filename": "bloodaxe-0.1.0.tar.gz", "has_sig": false, "md5_digest": "935c0092b29de90d6a8d99a0d86f4c92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 4252, "upload_time": "2020-03-28T03:50:45", "upload_time_iso_8601": "2020-03-28T03:50:45.602910Z", "url": "https://files.pythonhosted.org/packages/9a/18/6ebc200ee873183ffa4370d04fdf1819d8b15ce57a75f0f90f3f31f273b7/bloodaxe-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2ab57e9aff69b7cdc20c6ef12d9e2f96", "sha256": "bfa05ee190e0e0356029d2e51133fca3ec2e6140759929197e8a282d630349c4"}, "downloads": -1, "filename": "bloodaxe-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2ab57e9aff69b7cdc20c6ef12d9e2f96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5717, "upload_time": "2020-04-04T15:14:19", "upload_time_iso_8601": "2020-04-04T15:14:19.006306Z", "url": "https://files.pythonhosted.org/packages/0f/c7/0256e9f1775f8e7f937d17871b40bbf4bbb7931f6337aa3bccece5918806/bloodaxe-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "553199717e83600c8ddae2dc222ee3a9", "sha256": "06fd4229fe8121cd231c8998115f2fbadcd295e3a5986b77f14e23f34ade4562"}, "downloads": -1, "filename": "bloodaxe-0.2.0.tar.gz", "has_sig": false, "md5_digest": "553199717e83600c8ddae2dc222ee3a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 6041, "upload_time": "2020-04-04T15:14:20", "upload_time_iso_8601": "2020-04-04T15:14:20.112392Z", "url": "https://files.pythonhosted.org/packages/88/67/5d5c9e3c834594630b7a373cbc0b1f0b2e07599f6e1e4e9f3cdaa422b62f/bloodaxe-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ab57e9aff69b7cdc20c6ef12d9e2f96", "sha256": "bfa05ee190e0e0356029d2e51133fca3ec2e6140759929197e8a282d630349c4"}, "downloads": -1, "filename": "bloodaxe-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2ab57e9aff69b7cdc20c6ef12d9e2f96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5717, "upload_time": "2020-04-04T15:14:19", "upload_time_iso_8601": "2020-04-04T15:14:19.006306Z", "url": "https://files.pythonhosted.org/packages/0f/c7/0256e9f1775f8e7f937d17871b40bbf4bbb7931f6337aa3bccece5918806/bloodaxe-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "553199717e83600c8ddae2dc222ee3a9", "sha256": "06fd4229fe8121cd231c8998115f2fbadcd295e3a5986b77f14e23f34ade4562"}, "downloads": -1, "filename": "bloodaxe-0.2.0.tar.gz", "has_sig": false, "md5_digest": "553199717e83600c8ddae2dc222ee3a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 6041, "upload_time": "2020-04-04T15:14:20", "upload_time_iso_8601": "2020-04-04T15:14:20.112392Z", "url": "https://files.pythonhosted.org/packages/88/67/5d5c9e3c834594630b7a373cbc0b1f0b2e07599f6e1e4e9f3cdaa422b62f/bloodaxe-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:00 2020"}