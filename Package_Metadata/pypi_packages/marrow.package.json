{"info": {"author": "Alice Bevan-McGregor", "author_email": "alice@gothcandy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "==============\nMarrow Package\n==============\n\n    \u00a9 2014-2019 Alice Bevan-McGregor and contributors.\n\n..\n\n    https://github.com/marrow/package\n\n..\n\n    |latestversion| |masterstatus| |mastercover| |issuecount|\n\n1. What is Marrow Package?\n==========================\n\nThis package is a combination of utilities for handling object lookup, resolving object names, and managing simple to\ncomplex plugin architectures.  Notably it includes a dependency grapher system for extensions and helper for looking\nup qualified object names.\n\nThis library is fully unit tested where possible.\n\n\n2. Installation\n===============\n\nInstalling ``marrow.package`` is easy, just execute the following in a terminal::\n\n    pip install marrow.package\n\n**Note:** We *strongly* recommend always using a container, virtualization, or sandboxing environment of some kind when\ndeveloping using Python; installing things system-wide is yucky (for a variety of reasons) nine times out of ten.  We prefer light-weight `virtualenv <https://virtualenv.pypa.io/en/latest/virtualenv.html>`_, others prefer solutions as robust as `Vagrant <http://www.vagrantup.com>`_.\n\nIf you add ``marrow.package`` to the ``install_requires`` argument of the call to ``setup()`` in your applicaiton's\n``setup.py`` file, Marrow Package will be automatically installed and made available when your own application or\nlibrary is installed.  We recommend using \"less than\" version numbers to ensure there are no unintentional\nside-effects when updating.  Use ``marrow.package<2.1`` to get all bugfixes for the current release, and\n``marrow.package<3.0`` to get bugfixes and feature updates while ensuring that large breaking changes are not installed.\n\n\n2.1. Development Version\n------------------------\n\n    |developstatus| |developcover|\n\nDevelopment takes place on `GitHub <https://github.com/>`_ in the\n`marrow.package <https://github.com/marrow/package/>`_ project.  Issue tracking, documentation, and downloads\nare provided there.\n\nInstalling the current development version requires `Git <http://git-scm.com/>`_, a distributed source code management\nsystem.  If you have Git you can run the following to download and *link* the development version into your Python\nruntime::\n\n    git clone https://github.com/marrow/package.git\n    (cd package; python setup.py develop)\n\nYou can then upgrade to the latest version at any time::\n\n    (cd package; git pull; python setup.py develop)\n\nIf you would like to make changes and contribute them back to the project, fork the GitHub project, make your changes,\nand submit a pull request.  This process is beyond the scope of this documentation; for more information see\n`GitHub's documentation <http://help.github.com/>`_.\n\n\n3. Getting Object References\n============================\n\nObject references describe the module and attribute path needed to resolve the object.  For example, ``foo:bar`` is a\nreference that describes importing \"foo\" prior to retrieving an object named \"bar\" from the module.  On Python 3.3+ a\nuseful shortcut is provided, ``__qualname__`` which speeds up this lookup.\n\nFor example, let's define a class and get a reference to it::\n\n    from marrow.package.canonical import name\n\n    class Example(object):\n        pass\n\n    assert name(Example) == '__main__:Example'\n\nYou can, depending on platform, retrieve a reference to any of the following types of objects:\n\n* Module level:\n\t* class\n\t* class instance\n\t* class method\n\t* class staticmethod\n\t* function\n\t* instance classmethod\n\t* instance method\n\t* instance staticmethod\n* nested classes and methods\n* closures\n\n\n4. Resolving Object References\n==============================\n\nTwo utilities are provided which allow you resolve string path references to objects.  The first is quite simple::\n\n    from marrow.package.loader import traverse\n\n    assert traverse({'foo': {'bar': 27}}, 'foo.bar') == 27\n\nThis will search the dictionary described for a \"foo\" element, then \"bar\" element.\n\nThe ``traverse`` function takes some additional optional arguments.  If ``executable`` is ``True`` any executable\nfunction encountered will be executed without arguments. Traversal will continue on the result of that call.  You can\nchange the separator as desired, i.e. to a '/' using the ``separator`` argument.\n\nBy default attributes (but not array elements) prefixed with an underscore are taboo.  They will not resolve, raising\na LookupError.  You can allow these by setting ``protect`` to ``False``.\n\nCertain allowances are made: if a 'path segment' is numerical, it's treated as an array index. If attribute lookup\nfails, it will re-try on that object using array notation and continue from there.  This makes lookup very flexible.\n\n\n4.1. Resolving Import References\n--------------------------------\n\nThe more complete API for name resolution uses the ``load`` funciton, which takes the same optional keyword arguments\nas ``traverse``.  Additionally, this function accepts an optional ``namespace`` to search for plugins within.  For\nexample::\n\n    from marrow.package.loader import load\n    from pip import main\n\n    # Load class Foo from example.objects\n    load('example.objects:Foo')\n\n    # Load the result of the class method ``new`` of the Foo object\n    load('example.objects:Foo.new', executable=True)\n\n    # Load the \"pip\" command-line interface.\n    assert load('pip', 'console_scripts') is main\n\nProviding a namespace does not prevent explicit object lookup (dot-colon notation) from working.\n\n\n4.2. Caching Import References\n------------------------------\n\nAn attribute-access dictionary is provided that acts as an import cache::\n\n    from marrow.package.cache import PackageCache\n    from pip import main\n\n    cache = PackageCache('console_scripts')\n\n    assert cache.pip is main\n    assert cache['pip'] is main\n    assert len(cache) == 1\n    assert 'pip' in cache\n\n\n4.3. Lazy Import Reference Attributes\n-------------------------------------\n\nYou can lazily load and cache an object reference upon dereferencing from an instance using the ``lazyload`` utility\nfrom the ``marrow.package.lazy`` module.  Assign the result of calling this function with either an object reference\npassed in positionally::\n\n    class MyClass:\n        debug = lazyload('logging:debug')\n\nOr the attribute path to traverse (using ``marrow.package.loader:traverse``) prefixed by a period::\n\n    class AnotherClass:\n        target = 'logging:info'\n        log = lazyload('.target')\n\nAny additional arguments are passed to the eventual call to `load()`.  This utility builds on a simpler one that is\nalso offered for fully-tested re-use, ``lazy``, a decorator like ``@property`` which will cache the result, with\nthread-safe locking to ensure only one call will ever be made to the decorated function, per instance.\n\n\n5. Managing Plugins\n===================\n\nThis package provides two main methods of dealing with plugins and extensions, the first is simple, the second\nprovides full dependency graphing of the extensions.\n\n5.1. Plugin Manager\n-------------------\n\nThe ``PluginManager`` class takes two arguments: the first is the entry point ``namespace`` to search, the second is\nan optional iterable of folders to add to the Python search path for installed packages, allowing your application to\nhave a dedicated plugins folder.\n\nIt provides a ``register`` method which take a name and the object to use as the plugin and registers it internally,\nsupporting both attribute and array-like notation for retrieval, as well as iteration of plugins (includes all entry\npoint plugins found and any custom registered ones).\n\n5.2. Extension Manager\n----------------------\n\nAt a higher level is a ``PluginManager`` subclass called ``ExtensionManager`` which additoinally exposes a ``sort``\nmethod capable of resolving dependency order for extensions which follow a simple protocol: have an attribute or array\nelement matching the following, all optional:\n\n* ``provides`` \u2014 declare tags describing the features offered by the plugin\n* ``needs`` \u2014 delcare the tags that must be present for this extension to function\n* ``uses`` \u2014 declare the tags that must be evaluated prior to this extension, but aren't hard requirements\n* ``first`` \u2014 declare that this extension is a dependency of all other non-first extensions\n* ``last`` \u2014 declare that this extension depends on all other non-last extensions\n* ``excludes`` \u2014 declare tags that must not be present in other plugins for this one to be usable\n\n\n6. Version History\n==================\n\nVersion 1.0\n-----------\n\n* **Initial release.**  Combination of utilities from other Marrow projects.\n\nVersion 1.0.1\n-------------\n\n* **Extended decorator support.**  New code paths and tests added to cover canonicalization of decorated functions.\n\nVersion 1.0.2\n-------------\n\n* **Diagnostic information.**  Removed extraneous diagnostic information.\n\nVersion 1.1\n-----------\n\n* **Added lazy evaluation.**  There are two new helpers for caching of ``@property``-style attributes and lazy lookup\n  of object references.\n\nVersion 1.2\n-----------\n\n* **Deprecated Python 2.6 and 3.3.** While no particular backwards incompatible change was made; as setuptools no\n  longer supports these versions, these versions are now hard/impossible to test.\n* **Allow extensions to declare exclusions.** Flags that must not be defined for the extension to be usable.\n\nVersion 2.0\n-----------\n\n* **Updated minimum Python version.** Marrow Package now requires Python 3.5 or later.\n* **Removed Python 2 support and version specific code.** The project has been updated to modern Python packaging\n  standards, including modern namespace use. Modern namespaces are wholly incompatible with the previous namespacing\n  mechanism; this project can not be simultaneously installed with any Marrow project that is Python 2 compatible.\n* **Extensive type annotation and in-development validation.** When run without optimizations (`-O` argument to Python\n  or `PYTHONOPTIMIZE` environment variable) type anotations will be validated.\n* **Reduced test fragility.** Previously the tests utilized the `console_scripts` namespace, this was fragile to the\n  presence of other installed libraries, e.g. `numpy` broke the tests on Travis.\n\n\n7. License\n==========\n\nMarrow Pacakge has been released under the MIT Open Source license.\n\n7.1. The MIT License\n--------------------\n\nCopyright \u00a9 2014-2019 Alice Bevan-McGregor and contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n.. |masterstatus| image:: http://img.shields.io/travis/marrow/package/master.svg?style=flat\n    :target: https://travis-ci.org/marrow/package\n    :alt: Release Build Status\n\n.. |developstatus| image:: http://img.shields.io/travis/marrow/package/develop.svg?style=flat\n    :target: https://travis-ci.org/marrow/package\n    :alt: Development Build Status\n\n.. |latestversion| image:: http://img.shields.io/pypi/v/marrow.package.svg?style=flat\n    :target: https://pypi.python.org/pypi/marrow.package\n    :alt: Latest Version\n\n.. |mastercover| image:: http://img.shields.io/codecov/c/github/marrow/package/master.svg?style=flat\n    :target: https://codecov.io/github/marrow/package?branch=master\n    :alt: Release Test Coverage\n\n.. |developcover| image:: http://img.shields.io/codecov/c/github/marrow/package/develop.svg?style=flat\n    :target: https://codecov.io/github/marrow/package?branch=develop\n    :alt: Development Test Coverage\n\n.. |issuecount| image:: http://img.shields.io/github/issues/marrow/package.svg?style=flat\n    :target: https://github.com/marrow/package/issues\n    :alt: Github Issues\n\n.. |cake| image:: http://img.shields.io/badge/cake-lie-1b87fb.svg?style=flat\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marrow/package/", "keywords": "entry point,plugin,extensions,plugin manager,plugin system,canonicalization,reference parsing,import resolver", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "marrow.package", "package_url": "https://pypi.org/project/marrow.package/", "platform": "", "project_url": "https://pypi.org/project/marrow.package/", "project_urls": {"Homepage": "https://github.com/marrow/package/"}, "release_url": "https://pypi.org/project/marrow.package/2.0.1/", "requires_dist": ["typeguard (<4.0,>=2.3.0)", "pytest ; extra == 'development'", "pytest-cov ; extra == 'development'", "pytest-flakes ; extra == 'development'", "pytest-isort ; extra == 'development'", "pre-commit ; extra == 'development'"], "requires_python": "", "summary": "A collection of utilities for resolving object names, names to objects, and managing plugins/extensions.", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n\u00a9 2014-2019 Alice Bevan-McGregor and contributors.</blockquote>\n<blockquote>\n<a href=\"https://github.com/marrow/package\" rel=\"nofollow\">https://github.com/marrow/package</a></blockquote>\n<blockquote>\n<a href=\"https://pypi.python.org/pypi/marrow.package\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/958ab9d716842a554e6bd00cbfc7e8aa7a5b6383/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f6d6172726f772e7061636b6167652e7376673f7374796c653d666c6174\"></a> <a href=\"https://travis-ci.org/marrow/package\" rel=\"nofollow\"><img alt=\"Release Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67a7517970ddc7eb5d488b31605afd664b43c623/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6d6172726f772f7061636b6167652f6d61737465722e7376673f7374796c653d666c6174\"></a> <a href=\"https://codecov.io/github/marrow/package?branch=master\" rel=\"nofollow\"><img alt=\"Release Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/944527d5ca040b5caa819a47681a5fafc97268cc/687474703a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6d6172726f772f7061636b6167652f6d61737465722e7376673f7374796c653d666c6174\"></a> <a href=\"https://github.com/marrow/package/issues\" rel=\"nofollow\"><img alt=\"Github Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c37aa141c83a3415fa8a932d917eea428fe820d/687474703a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6d6172726f772f7061636b6167652e7376673f7374796c653d666c6174\"></a></blockquote>\n<div id=\"what-is-marrow-package\">\n<h2>1. What is Marrow Package?</h2>\n<p>This package is a combination of utilities for handling object lookup, resolving object names, and managing simple to\ncomplex plugin architectures.  Notably it includes a dependency grapher system for extensions and helper for looking\nup qualified object names.</p>\n<p>This library is fully unit tested where possible.</p>\n</div>\n<div id=\"installation\">\n<h2>2. Installation</h2>\n<p>Installing <tt>marrow.package</tt> is easy, just execute the following in a terminal:</p>\n<pre>pip install marrow.package\n</pre>\n<p><strong>Note:</strong> We <em>strongly</em> recommend always using a container, virtualization, or sandboxing environment of some kind when\ndeveloping using Python; installing things system-wide is yucky (for a variety of reasons) nine times out of ten.  We prefer light-weight <a href=\"https://virtualenv.pypa.io/en/latest/virtualenv.html\" rel=\"nofollow\">virtualenv</a>, others prefer solutions as robust as <a href=\"http://www.vagrantup.com\" rel=\"nofollow\">Vagrant</a>.</p>\n<p>If you add <tt>marrow.package</tt> to the <tt>install_requires</tt> argument of the call to <tt>setup()</tt> in your applicaiton\u2019s\n<tt>setup.py</tt> file, Marrow Package will be automatically installed and made available when your own application or\nlibrary is installed.  We recommend using \u201cless than\u201d version numbers to ensure there are no unintentional\nside-effects when updating.  Use <tt>marrow.package&lt;2.1</tt> to get all bugfixes for the current release, and\n<tt>marrow.package&lt;3.0</tt> to get bugfixes and feature updates while ensuring that large breaking changes are not installed.</p>\n<div id=\"development-version\">\n<h3>2.1. Development Version</h3>\n<blockquote>\n<a href=\"https://travis-ci.org/marrow/package\" rel=\"nofollow\"><img alt=\"Development Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/542191926cdea67dd15e33cc217332933a9db464/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6d6172726f772f7061636b6167652f646576656c6f702e7376673f7374796c653d666c6174\"></a> <a href=\"https://codecov.io/github/marrow/package?branch=develop\" rel=\"nofollow\"><img alt=\"Development Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27fe34c8fe81a158a9858b7784a300913272d4b9/687474703a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6d6172726f772f7061636b6167652f646576656c6f702e7376673f7374796c653d666c6174\"></a></blockquote>\n<p>Development takes place on <a href=\"https://github.com/\" rel=\"nofollow\">GitHub</a> in the\n<a href=\"https://github.com/marrow/package/\" rel=\"nofollow\">marrow.package</a> project.  Issue tracking, documentation, and downloads\nare provided there.</p>\n<p>Installing the current development version requires <a href=\"http://git-scm.com/\" rel=\"nofollow\">Git</a>, a distributed source code management\nsystem.  If you have Git you can run the following to download and <em>link</em> the development version into your Python\nruntime:</p>\n<pre>git clone https://github.com/marrow/package.git\n(cd package; python setup.py develop)\n</pre>\n<p>You can then upgrade to the latest version at any time:</p>\n<pre>(cd package; git pull; python setup.py develop)\n</pre>\n<p>If you would like to make changes and contribute them back to the project, fork the GitHub project, make your changes,\nand submit a pull request.  This process is beyond the scope of this documentation; for more information see\n<a href=\"http://help.github.com/\" rel=\"nofollow\">GitHub\u2019s documentation</a>.</p>\n</div>\n</div>\n<div id=\"getting-object-references\">\n<h2>3. Getting Object References</h2>\n<p>Object references describe the module and attribute path needed to resolve the object.  For example, <tt>foo:bar</tt> is a\nreference that describes importing \u201cfoo\u201d prior to retrieving an object named \u201cbar\u201d from the module.  On Python 3.3+ a\nuseful shortcut is provided, <tt>__qualname__</tt> which speeds up this lookup.</p>\n<p>For example, let\u2019s define a class and get a reference to it:</p>\n<pre>from marrow.package.canonical import name\n\nclass Example(object):\n    pass\n\nassert name(Example) == '__main__:Example'\n</pre>\n<p>You can, depending on platform, retrieve a reference to any of the following types of objects:</p>\n<ul>\n<li><dl>\n<dt>Module level:</dt>\n<dd><ul>\n<li>class</li>\n<li>class instance</li>\n<li>class method</li>\n<li>class staticmethod</li>\n<li>function</li>\n<li>instance classmethod</li>\n<li>instance method</li>\n<li>instance staticmethod</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>nested classes and methods</li>\n<li>closures</li>\n</ul>\n</div>\n<div id=\"resolving-object-references\">\n<h2>4. Resolving Object References</h2>\n<p>Two utilities are provided which allow you resolve string path references to objects.  The first is quite simple:</p>\n<pre>from marrow.package.loader import traverse\n\nassert traverse({'foo': {'bar': 27}}, 'foo.bar') == 27\n</pre>\n<p>This will search the dictionary described for a \u201cfoo\u201d element, then \u201cbar\u201d element.</p>\n<p>The <tt>traverse</tt> function takes some additional optional arguments.  If <tt>executable</tt> is <tt>True</tt> any executable\nfunction encountered will be executed without arguments. Traversal will continue on the result of that call.  You can\nchange the separator as desired, i.e. to a \u2018/\u2019 using the <tt>separator</tt> argument.</p>\n<p>By default attributes (but not array elements) prefixed with an underscore are taboo.  They will not resolve, raising\na LookupError.  You can allow these by setting <tt>protect</tt> to <tt>False</tt>.</p>\n<p>Certain allowances are made: if a \u2018path segment\u2019 is numerical, it\u2019s treated as an array index. If attribute lookup\nfails, it will re-try on that object using array notation and continue from there.  This makes lookup very flexible.</p>\n<div id=\"resolving-import-references\">\n<h3>4.1. Resolving Import References</h3>\n<p>The more complete API for name resolution uses the <tt>load</tt> funciton, which takes the same optional keyword arguments\nas <tt>traverse</tt>.  Additionally, this function accepts an optional <tt>namespace</tt> to search for plugins within.  For\nexample:</p>\n<pre>from marrow.package.loader import load\nfrom pip import main\n\n# Load class Foo from example.objects\nload('example.objects:Foo')\n\n# Load the result of the class method ``new`` of the Foo object\nload('example.objects:Foo.new', executable=True)\n\n# Load the \"pip\" command-line interface.\nassert load('pip', 'console_scripts') is main\n</pre>\n<p>Providing a namespace does not prevent explicit object lookup (dot-colon notation) from working.</p>\n</div>\n<div id=\"caching-import-references\">\n<h3>4.2. Caching Import References</h3>\n<p>An attribute-access dictionary is provided that acts as an import cache:</p>\n<pre>from marrow.package.cache import PackageCache\nfrom pip import main\n\ncache = PackageCache('console_scripts')\n\nassert cache.pip is main\nassert cache['pip'] is main\nassert len(cache) == 1\nassert 'pip' in cache\n</pre>\n</div>\n<div id=\"lazy-import-reference-attributes\">\n<h3>4.3. Lazy Import Reference Attributes</h3>\n<p>You can lazily load and cache an object reference upon dereferencing from an instance using the <tt>lazyload</tt> utility\nfrom the <tt>marrow.package.lazy</tt> module.  Assign the result of calling this function with either an object reference\npassed in positionally:</p>\n<pre>class MyClass:\n    debug = lazyload('logging:debug')\n</pre>\n<p>Or the attribute path to traverse (using <tt>marrow.package.loader:traverse</tt>) prefixed by a period:</p>\n<pre>class AnotherClass:\n    target = 'logging:info'\n    log = lazyload('.target')\n</pre>\n<p>Any additional arguments are passed to the eventual call to <cite>load()</cite>.  This utility builds on a simpler one that is\nalso offered for fully-tested re-use, <tt>lazy</tt>, a decorator like <tt>@property</tt> which will cache the result, with\nthread-safe locking to ensure only one call will ever be made to the decorated function, per instance.</p>\n</div>\n</div>\n<div id=\"managing-plugins\">\n<h2>5. Managing Plugins</h2>\n<p>This package provides two main methods of dealing with plugins and extensions, the first is simple, the second\nprovides full dependency graphing of the extensions.</p>\n<div id=\"plugin-manager\">\n<h3>5.1. Plugin Manager</h3>\n<p>The <tt>PluginManager</tt> class takes two arguments: the first is the entry point <tt>namespace</tt> to search, the second is\nan optional iterable of folders to add to the Python search path for installed packages, allowing your application to\nhave a dedicated plugins folder.</p>\n<p>It provides a <tt>register</tt> method which take a name and the object to use as the plugin and registers it internally,\nsupporting both attribute and array-like notation for retrieval, as well as iteration of plugins (includes all entry\npoint plugins found and any custom registered ones).</p>\n</div>\n<div id=\"extension-manager\">\n<h3>5.2. Extension Manager</h3>\n<p>At a higher level is a <tt>PluginManager</tt> subclass called <tt>ExtensionManager</tt> which additoinally exposes a <tt>sort</tt>\nmethod capable of resolving dependency order for extensions which follow a simple protocol: have an attribute or array\nelement matching the following, all optional:</p>\n<ul>\n<li><tt>provides</tt> \u2014 declare tags describing the features offered by the plugin</li>\n<li><tt>needs</tt> \u2014 delcare the tags that must be present for this extension to function</li>\n<li><tt>uses</tt> \u2014 declare the tags that must be evaluated prior to this extension, but aren\u2019t hard requirements</li>\n<li><tt>first</tt> \u2014 declare that this extension is a dependency of all other non-first extensions</li>\n<li><tt>last</tt> \u2014 declare that this extension depends on all other non-last extensions</li>\n<li><tt>excludes</tt> \u2014 declare tags that must not be present in other plugins for this one to be usable</li>\n</ul>\n</div>\n</div>\n<div id=\"version-history\">\n<h2>6. Version History</h2>\n<div id=\"version-1-0\">\n<h3>Version 1.0</h3>\n<ul>\n<li><strong>Initial release.</strong>  Combination of utilities from other Marrow projects.</li>\n</ul>\n</div>\n<div id=\"version-1-0-1\">\n<h3>Version 1.0.1</h3>\n<ul>\n<li><strong>Extended decorator support.</strong>  New code paths and tests added to cover canonicalization of decorated functions.</li>\n</ul>\n</div>\n<div id=\"version-1-0-2\">\n<h3>Version 1.0.2</h3>\n<ul>\n<li><strong>Diagnostic information.</strong>  Removed extraneous diagnostic information.</li>\n</ul>\n</div>\n<div id=\"version-1-1\">\n<h3>Version 1.1</h3>\n<ul>\n<li><strong>Added lazy evaluation.</strong>  There are two new helpers for caching of <tt>@property</tt>-style attributes and lazy lookup\nof object references.</li>\n</ul>\n</div>\n<div id=\"version-1-2\">\n<h3>Version 1.2</h3>\n<ul>\n<li><strong>Deprecated Python 2.6 and 3.3.</strong> While no particular backwards incompatible change was made; as setuptools no\nlonger supports these versions, these versions are now hard/impossible to test.</li>\n<li><strong>Allow extensions to declare exclusions.</strong> Flags that must not be defined for the extension to be usable.</li>\n</ul>\n</div>\n<div id=\"version-2-0\">\n<h3>Version 2.0</h3>\n<ul>\n<li><strong>Updated minimum Python version.</strong> Marrow Package now requires Python 3.5 or later.</li>\n<li><strong>Removed Python 2 support and version specific code.</strong> The project has been updated to modern Python packaging\nstandards, including modern namespace use. Modern namespaces are wholly incompatible with the previous namespacing\nmechanism; this project can not be simultaneously installed with any Marrow project that is Python 2 compatible.</li>\n<li><strong>Extensive type annotation and in-development validation.</strong> When run without optimizations (<cite>-O</cite> argument to Python\nor <cite>PYTHONOPTIMIZE</cite> environment variable) type anotations will be validated.</li>\n<li><strong>Reduced test fragility.</strong> Previously the tests utilized the <cite>console_scripts</cite> namespace, this was fragile to the\npresence of other installed libraries, e.g. <cite>numpy</cite> broke the tests on Travis.</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>7. License</h2>\n<p>Marrow Pacakge has been released under the MIT Open Source license.</p>\n<div id=\"the-mit-license\">\n<h3>7.1. The MIT License</h3>\n<p>Copyright \u00a9 2014-2019 Alice Bevan-McGregor and contributors.</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5203986, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e1832bf8b42fcba1024e22910f68e2ab", "sha256": "1e8718511d49dd701f5b67af9dc9684247ac1ce1a1875260a1dd3cfcd12b320e"}, "downloads": -1, "filename": "marrow.package-1.0.0-py2.6.egg", "has_sig": false, "md5_digest": "e1832bf8b42fcba1024e22910f68e2ab", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21077, "upload_time": "2014-12-15T00:13:04", "upload_time_iso_8601": "2014-12-15T00:13:04.204929Z", "url": "https://files.pythonhosted.org/packages/a5/10/ed7916992600cc16e16df738213026dc444e3593bc60291f2ab7720479f7/marrow.package-1.0.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd6286619a82d78c2ef37a5efdb30a39", "sha256": "925d285de241c21d8bbea910f89175ea3853e4e40ec149ed9998415921defff1"}, "downloads": -1, "filename": "marrow.package-1.0.0-py2.7.egg", "has_sig": false, "md5_digest": "bd6286619a82d78c2ef37a5efdb30a39", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 20985, "upload_time": "2014-12-15T00:13:08", "upload_time_iso_8601": "2014-12-15T00:13:08.461956Z", "url": "https://files.pythonhosted.org/packages/a3/83/92b57a4ac233f21841627b726a83fc46ea78686a083fd8041a05c1861dbb/marrow.package-1.0.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4abf774ae1c09727e99f02eb8f3f7121", "sha256": "e3865e99530b1521d3f448f12466c78d3a4ebd4335a24ebbc383eec364733319"}, "downloads": -1, "filename": "marrow.package-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4abf774ae1c09727e99f02eb8f3f7121", "packagetype": "bdist_wheel", "python_version": "2.6", "requires_python": null, "size": 17906, "upload_time": "2014-12-15T00:13:05", "upload_time_iso_8601": "2014-12-15T00:13:05.862064Z", "url": "https://files.pythonhosted.org/packages/44/52/a5e99627c91224858e75ff18cba93fe67a573b7ee82fde225ae38511d4a0/marrow.package-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca1342694b028bc0ffa69a5307fb45ba", "sha256": "fe7e15dbc27d8f65f258421321ee6549606b537ec3434372d0689d1fa18a952f"}, "downloads": -1, "filename": "marrow.package-1.0.0-py3.2.egg", "has_sig": false, "md5_digest": "ca1342694b028bc0ffa69a5307fb45ba", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 21532, "upload_time": "2014-12-15T00:13:15", "upload_time_iso_8601": "2014-12-15T00:13:15.075036Z", "url": "https://files.pythonhosted.org/packages/94/b3/2efb0a2836484239b95639bff51f9a31edecf99b218b45887e92ee83a791/marrow.package-1.0.0-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "13a6ffced1d373aa6c2b74832d3e5744", "sha256": "32a2ff64424a199266acd414d2d37958fc2567bf1e6c4a0e3f9df586bdb3b369"}, "downloads": -1, "filename": "marrow.package-1.0.0-py3.3.egg", "has_sig": false, "md5_digest": "13a6ffced1d373aa6c2b74832d3e5744", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 21766, "upload_time": "2014-12-15T00:13:21", "upload_time_iso_8601": "2014-12-15T00:13:21.115464Z", "url": "https://files.pythonhosted.org/packages/00/ff/42f1a2718b8202f15de9579f8472b52a6d8d6886d399c5f0821b46d40905/marrow.package-1.0.0-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e481e4a909dc79f0720ea620402b9877", "sha256": "4a245a65643248bbe1cb7436cd7a6d03b8fb20e003d7ba369ddc4c9868ea58b9"}, "downloads": -1, "filename": "marrow.package-1.0.0-py3.4.egg", "has_sig": false, "md5_digest": "e481e4a909dc79f0720ea620402b9877", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 21558, "upload_time": "2014-12-15T00:13:27", "upload_time_iso_8601": "2014-12-15T00:13:27.946542Z", "url": "https://files.pythonhosted.org/packages/6c/8a/fa78b7a579b46a471401eff981636140c344abb38210ea07837887e8a158/marrow.package-1.0.0-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "462ffd8c91ebb19693e8ae10d9de398c", "sha256": "8340e0c7d7bbb761753bd6f5525af129c9ae63a247c7c990a9b6c69e4d871a8d"}, "downloads": -1, "filename": "marrow.package-1.0.0.tar.gz", "has_sig": false, "md5_digest": "462ffd8c91ebb19693e8ae10d9de398c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18995, "upload_time": "2014-12-15T00:13:00", "upload_time_iso_8601": "2014-12-15T00:13:00.992186Z", "url": "https://files.pythonhosted.org/packages/cf/18/2ece9ebb0fb2e9f470458639e8df770c24b439f35a6cdefbf605babec699/marrow.package-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "85cd67c2317f5ad41c0d54f5c0223d2f", "sha256": "8cf9a2a5a3e58d928ef7d96af55cd661b892dbe5c996edcf44c68f571abfccb0"}, "downloads": -1, "filename": "marrow.package-1.0.2-py2.6.egg", "has_sig": false, "md5_digest": "85cd67c2317f5ad41c0d54f5c0223d2f", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21631, "upload_time": "2015-02-09T21:34:15", "upload_time_iso_8601": "2015-02-09T21:34:15.778687Z", "url": "https://files.pythonhosted.org/packages/83/35/ebf04f59dc5836322866cf687750c3674af53eef072d33f57907c14bf5b5/marrow.package-1.0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b9e1a7ffe5a5ced7acd9692bcbf102a", "sha256": "0f11d3e75ca612121e8382a7ead09dfb78ec7b7c8096db6330ba4402bbe85cf1"}, "downloads": -1, "filename": "marrow.package-1.0.2-py2.7.egg", "has_sig": false, "md5_digest": "4b9e1a7ffe5a5ced7acd9692bcbf102a", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 21544, "upload_time": "2015-02-09T21:34:23", "upload_time_iso_8601": "2015-02-09T21:34:23.154553Z", "url": "https://files.pythonhosted.org/packages/99/9a/e334027e22d078b63e2a392f87e8bd96d4debdb79d4183538fb1baefa757/marrow.package-1.0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a5ec537022dd4686ecbf4a582b879b0", "sha256": "1d3598d94bef810d7730661ebebf7940e0b535909d14b337eba861c329409adf"}, "downloads": -1, "filename": "marrow.package-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4a5ec537022dd4686ecbf4a582b879b0", "packagetype": "bdist_wheel", "python_version": "2.6", "requires_python": null, "size": 18326, "upload_time": "2015-02-09T21:34:17", "upload_time_iso_8601": "2015-02-09T21:34:17.565408Z", "url": "https://files.pythonhosted.org/packages/82/2d/82358ee55a48a04ba3cb90bc6ad853e251809b000ae8725713acd0f421fa/marrow.package-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4f628402177df9be1590f512137ac9a", "sha256": "7b3578ab1bce9729a40c507f6f0d6a7a47297f0f81b0b8cb18d68f981ee51c45"}, "downloads": -1, "filename": "marrow.package-1.0.2-py3.2.egg", "has_sig": false, "md5_digest": "d4f628402177df9be1590f512137ac9a", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 22079, "upload_time": "2015-02-09T21:34:29", "upload_time_iso_8601": "2015-02-09T21:34:29.591263Z", "url": "https://files.pythonhosted.org/packages/67/e1/99752192616d03fd274c22c78fafc8ce0896f7d912dc8b12d827bcd7a86f/marrow.package-1.0.2-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef40bf47f0dd989125ca7f3dd46857c4", "sha256": "28213ba737cb866383ffd99e736a683ea8faac886cca915890f56c965c5fdc55"}, "downloads": -1, "filename": "marrow.package-1.0.2-py3.3.egg", "has_sig": false, "md5_digest": "ef40bf47f0dd989125ca7f3dd46857c4", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 22310, "upload_time": "2015-02-09T21:34:36", "upload_time_iso_8601": "2015-02-09T21:34:36.093473Z", "url": "https://files.pythonhosted.org/packages/0e/6a/8706a3d3fc49eec94a97e76f2cce97306b63370b90a84bb788a60c5136aa/marrow.package-1.0.2-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "35ebb4c7ae3c6cc52d5aa42d913ade15", "sha256": "114876a03a2a9f1ec24c7fc70fe314840e42f36bad676a771148cbc49d786c47"}, "downloads": -1, "filename": "marrow.package-1.0.2-py3.4.egg", "has_sig": false, "md5_digest": "35ebb4c7ae3c6cc52d5aa42d913ade15", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 22099, "upload_time": "2015-02-09T21:34:43", "upload_time_iso_8601": "2015-02-09T21:34:43.808610Z", "url": "https://files.pythonhosted.org/packages/a4/81/9fb04edec681c145521a3b6c98890da23b02aaf11de2bf1a1f0f9c19b63e/marrow.package-1.0.2-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4aaeca70a14341289a182ddb489ac71", "sha256": "c6c72474707bd4dd535bfd1748e57f742029833b13745f5079caa5b065d534c5"}, "downloads": -1, "filename": "marrow.package-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a4aaeca70a14341289a182ddb489ac71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19459, "upload_time": "2015-02-09T21:34:13", "upload_time_iso_8601": "2015-02-09T21:34:13.487031Z", "url": "https://files.pythonhosted.org/packages/1a/a9/39abe30fe6cb1d73d3a4ed715c8f5c384fc0dc7b521181653209b8800da0/marrow.package-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b89245296f861adce4d97a294a43892c", "sha256": "b5aba85e4f2201a1a4967fa28940042c61e9f4ce5b2c43fb53d2893dbe0b364f"}, "downloads": -1, "filename": "marrow.package-1.1.0-py2.7.egg", "has_sig": false, "md5_digest": "b89245296f861adce4d97a294a43892c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 24554, "upload_time": "2016-01-29T23:13:58", "upload_time_iso_8601": "2016-01-29T23:13:58.958080Z", "url": "https://files.pythonhosted.org/packages/98/ca/22ec2e826eb212ff6e1cb0aa8bdf677f2f1aeaa09654711836306ed74dee/marrow.package-1.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4579f5883eb01a9fe234e25f7a4288c3", "sha256": "9844b639b72eeeb4e9f13bbb01b2c62814f18f1d7bfac4703532173569185be0"}, "downloads": -1, "filename": "marrow.package-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4579f5883eb01a9fe234e25f7a4288c3", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19970, "upload_time": "2016-01-29T23:14:58", "upload_time_iso_8601": "2016-01-29T23:14:58.477124Z", "url": "https://files.pythonhosted.org/packages/b6/47/e97aacf314865d60f67f94f591bfdbe2079fe64a9c4191a3ca55696a0112/marrow.package-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0e5e67dcad73976fa877205acfcf9a4", "sha256": "d7c954186fbbd3467e7d3fc399193206ceeb01895e3c5996a7130ba64a856ec2"}, "downloads": -1, "filename": "marrow.package-1.1.0-py3.4.egg", "has_sig": false, "md5_digest": "c0e5e67dcad73976fa877205acfcf9a4", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 25180, "upload_time": "2016-01-29T23:14:10", "upload_time_iso_8601": "2016-01-29T23:14:10.659647Z", "url": "https://files.pythonhosted.org/packages/ad/ed/0b61dee6df6525bae944a5df1dea6603a28a930e01256bc12916b8488474/marrow.package-1.1.0-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e15a096425606a643e217ddb6012ca06", "sha256": "3d39033bd4ce58b58a29c35b850f28bf358a533aa7ab3250a5c838ecf918bb9d"}, "downloads": -1, "filename": "marrow.package-1.1.0-py3.5.egg", "has_sig": false, "md5_digest": "e15a096425606a643e217ddb6012ca06", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 25181, "upload_time": "2016-01-29T23:14:50", "upload_time_iso_8601": "2016-01-29T23:14:50.134026Z", "url": "https://files.pythonhosted.org/packages/4f/be/139b9987082cc244357f13be08d60b5c7942eed51252b374147ba002dd71/marrow.package-1.1.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0d088af231e299d4b879ffbfd114a7a", "sha256": "a58612eac1a2f7fdb8a9edb775a2a38f5e3d1b2f8d1097d716f9eb5cbe88337b"}, "downloads": -1, "filename": "marrow.package-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d0d088af231e299d4b879ffbfd114a7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17299, "upload_time": "2016-01-29T23:14:37", "upload_time_iso_8601": "2016-01-29T23:14:37.526096Z", "url": "https://files.pythonhosted.org/packages/c4/7e/a0f7782d05cc83190b6148d76fa887c367665b9a40a846c4b2f993feb16e/marrow.package-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "3ce79363eb6242780d0fe4f34b2e6559", "sha256": "8dfbc4e522569827b6f308624f6a677a6be817632f9f33b8a9824b016eb053ff"}, "downloads": -1, "filename": "marrow.package-1.2.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3ce79363eb6242780d0fe4f34b2e6559", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 28725, "upload_time": "2018-07-29T12:35:17", "upload_time_iso_8601": "2018-07-29T12:35:17.762466Z", "url": "https://files.pythonhosted.org/packages/72/48/0a9847cbc7a6f7fa348bb93412e00291c9b02e63ca0b9375101c9a775b48/marrow.package-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a44f15e87bb76d59f92f24dcfc7a12e", "sha256": "bf362fa629095d3cdbb7ff6dee13c8b5ea515d06a8411dbde4b0b339a82d390d"}, "downloads": -1, "filename": "marrow.package-1.2.0.tar.gz", "has_sig": true, "md5_digest": "3a44f15e87bb76d59f92f24dcfc7a12e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21963, "upload_time": "2018-07-29T12:35:16", "upload_time_iso_8601": "2018-07-29T12:35:16.081088Z", "url": "https://files.pythonhosted.org/packages/64/38/e79c7e5fc8ebd16ac6ca83e8fd9d9551cb3f9697164a321765330b684f34/marrow.package-1.2.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "05e529612082b6b6aa7f712d8fa0f448", "sha256": "44f95bb7bea6e63354ac3709218e9fdc366566e292e9eff07e2abbc5c1a258a4"}, "downloads": -1, "filename": "marrow.package-2.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "05e529612082b6b6aa7f712d8fa0f448", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30224, "upload_time": "2019-04-25T16:38:57", "upload_time_iso_8601": "2019-04-25T16:38:57.474860Z", "url": "https://files.pythonhosted.org/packages/96/95/61751261a0db18521e5a26d21fbf48345406c43f798801b4b3d81cb29ab4/marrow.package-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b677dc81e985fcd562802f9de473653c", "sha256": "59cd7517ce0ec979adf32d6e52023e43288c17350d9a87accc1b62982e038829"}, "downloads": -1, "filename": "marrow.package-2.0.0.tar.gz", "has_sig": true, "md5_digest": "b677dc81e985fcd562802f9de473653c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21936, "upload_time": "2019-04-25T16:39:00", "upload_time_iso_8601": "2019-04-25T16:39:00.510780Z", "url": "https://files.pythonhosted.org/packages/e0/1a/c214eacfc1a54f840030b33307c0900421787f02fdbefe672f6adb09ce52/marrow.package-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "22f379b8be2c570c2292a903363b1298", "sha256": "20fe27e1e8a352249f92e7fd49a0e97ce69212197bc707ee48455e4e85b2dc00"}, "downloads": -1, "filename": "marrow.package-2.0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "22f379b8be2c570c2292a903363b1298", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30229, "upload_time": "2019-04-29T16:34:43", "upload_time_iso_8601": "2019-04-29T16:34:43.242781Z", "url": "https://files.pythonhosted.org/packages/fb/20/0fa60d1d8b2478d76fcd50508af63e0c1aa1ead84516a449c07f9484d0c2/marrow.package-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3caa8b34c0177ab1fb3f4db8006360d4", "sha256": "a9a3a94ef2567bc658cf30e253710d1c95b93ef5d4d546722b3e071cb56448f7"}, "downloads": -1, "filename": "marrow.package-2.0.1.tar.gz", "has_sig": true, "md5_digest": "3caa8b34c0177ab1fb3f4db8006360d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21938, "upload_time": "2019-04-29T16:34:48", "upload_time_iso_8601": "2019-04-29T16:34:48.006780Z", "url": "https://files.pythonhosted.org/packages/b2/7a/0571c3273c9647f141945f03d623111c4af0f0f62f539c57ccd436de5378/marrow.package-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "22f379b8be2c570c2292a903363b1298", "sha256": "20fe27e1e8a352249f92e7fd49a0e97ce69212197bc707ee48455e4e85b2dc00"}, "downloads": -1, "filename": "marrow.package-2.0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "22f379b8be2c570c2292a903363b1298", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30229, "upload_time": "2019-04-29T16:34:43", "upload_time_iso_8601": "2019-04-29T16:34:43.242781Z", "url": "https://files.pythonhosted.org/packages/fb/20/0fa60d1d8b2478d76fcd50508af63e0c1aa1ead84516a449c07f9484d0c2/marrow.package-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3caa8b34c0177ab1fb3f4db8006360d4", "sha256": "a9a3a94ef2567bc658cf30e253710d1c95b93ef5d4d546722b3e071cb56448f7"}, "downloads": -1, "filename": "marrow.package-2.0.1.tar.gz", "has_sig": true, "md5_digest": "3caa8b34c0177ab1fb3f4db8006360d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21938, "upload_time": "2019-04-29T16:34:48", "upload_time_iso_8601": "2019-04-29T16:34:48.006780Z", "url": "https://files.pythonhosted.org/packages/b2/7a/0571c3273c9647f141945f03d623111c4af0f0f62f539c57ccd436de5378/marrow.package-2.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:37 2020"}