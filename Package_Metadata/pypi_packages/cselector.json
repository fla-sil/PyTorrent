{"info": {"author": "Pegara, Inc.", "author_email": "info@pegara.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "https://github.com/aieater/python_console_selector\n\n# cselector (Console Selector)\n\n## Description\n\nConsole selector for python.\nThis is inspired from https://pypi.org/project/pick/ and it wanted to more customize for image previewer in iTerm2(imgcat).\n\n\n##### Single Selector\n```\nTitle hoge hoge.\n=>  ItemA\n    ItemB\n    ItemC\n```\n\n##### Multi Selector\n```\nTitle hogehoge\n[ ]  Item0\n[ ]  Item1\n[*]  Item2\n[ ]  Item3\n[ ]  Item4\n[ ]  Item5\n[ ]  Item6\n[ ]  Item7\n[*]  Item8\n[ ]  Item9\n1 2 3 4 5\n```\n\n##### Binary Selector\n```\nDo you do machine learning? (default: yes)[Y/n] > Yes\n# True\n```\n\n<br>\n<br>\n\n### Features\n\n- Single selector.\n- Multi selector.\n- Binary selector.\n- No dependencies.\n- No clear display.\n- Page navigation.\n- All selector.\n- Image viewer (for private)\n\n\n\n<br>\n\n\n## Installation\n```\npip3 install cselector\n```\n\n<br>\n<br>\n\n------\n\n\n#### Single selector\n\n- Move: 'Up', 'Down' key\n- End: 'Return' key\n\n```\nfrom cselector import selector\n\nselected = selector(options=[\"ItemA\",\"ItemB\",\"ItemC\"],title=\"Title hoge hoge.\")\nprint(selected) # (<Index>,<Option>)\n```\n```\nTitle hoge hoge.\n=>  ItemA\n    ItemB\n    ItemC\n```\n------\n\n\n####  Multi Selector\n\n- Pagenation: 'Left', 'Right' key\n- Move: 'Up', 'Down' key\n- Select: 'Space' key\n- End: 'Return' key\n- Preview: '@' key\n\n\n```\nfrom cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\")\nprint(selected_array) # [(<Index>,<Option>),(<Index>,<Option>),(<Index>,<Option>)....]\n```\n```\nTitle hogehoge\n[ ]  Item0\n[ ]  Item1\n[*]  Item2\n[ ]  Item3\n[ ]  Item4\n[ ]  Item5\n[ ]  Item6\n[ ]  Item7\n[*]  Item8\n[ ]  Item9\n1 2 3 4 5\n```\n\n\n####  Multi Selector - With all selector\n```\nfrom cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",all=\"All item title\")\nprint(selected_array) # [(<Index>,<Option>),(<Index>,<Option>),(<Index>,<Option>)....]\n```\n```\nTitle hogehoge\n[*]  All item title\n[*]  Item0\n[*]  Item1\n[*]  Item2\n[*]  Item3\n[*]  Item4\n[*]  Item5\n[*]  Item6\n[*]  Item7\n[*]  Item8\n1 2 3 4 5\n```\n\n\n####  Multi Selector - Minimum selection\n```\nfrom cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",min_count=2)\nprint(selected_array) # [(<Index>,<Option>),(<Index>,<Option>),(<Index>,<Option>)....]\n```\n\n\n####  Multi Selector - Maximum item number of page\n\n\n```\nfrom cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",split=20)\nprint(selected_array) # [(<Index>,<Option>),(<Index>,<Option>),(<Index>,<Option>)....]\n```\n\n#### Multi Selector - With previewer (Required aimage library)\n\n- Preview: '@' key\n\n\n```\nimport aimage\nimport glob\nimport os\nfrom cselector import multi_selector\noptions = []\npreview = []\nfor f in glob.glob(os.path.expanduser(\"~/cg/*.jpg\")):\n    preview += [aimage.load(f)]\n    options += [os.path.basename(f)]\nprint(options)\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",preview=preview,preview_console=True)\nprint(selected_array) # [(<Index>,<Option>),(<Index>,<Option>),(<Index>,<Option>)....]\n```\n\n\n------\n\n\n####  Binary selector - Yes or No\n```\nfrom cselector import yes_or_no\nret = yes_or_no(question=\"Do you do machine learning?\",default=\"y\")\nprint(ret) # True/False\n```\n\n\n\n------\n\n<br>\n\n\n#### Supported OS\n\n|  OS  | Support  |\n| ---- | ---- |\n|  Unix  | \u2713  |\n|  Linux  | \u2713  |\n|  MacOSX  | \u2713  |\n|  Windows  |   |\n\n#### Supported Python Version\n\n|  Version  | Support  |\n| ---- | ---- |\n|  Python2.7  |   |\n|  Python3.4  | \u2713 |\n|  Python3.5  | \u2713 |\n|  Python3.6  | \u2713 |\n|  Python3.7  | \u2713 |\n|  Python3.8  | \u2713 |\n\n\n<br>\n<br>\n\n#### Python package dependencies\n\n- No dependencies\n\n|  Version  |  Library  | installation  |\n| ---- | ---- | ---- |\n| None |  None  | None  |\n\n\n<br>\n\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aieater/python_console_selector", "keywords": "console temrinal selector pick picker menu", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cselector", "package_url": "https://pypi.org/project/cselector/", "platform": "", "project_url": "https://pypi.org/project/cselector/", "project_urls": {"Homepage": "https://github.com/aieater/python_console_selector"}, "release_url": "https://pypi.org/project/cselector/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Console single/multi selector for python.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/aieater/python_console_selector\" rel=\"nofollow\">https://github.com/aieater/python_console_selector</a></p>\n<h1>cselector (Console Selector)</h1>\n<h2>Description</h2>\n<p>Console selector for python.\nThis is inspired from <a href=\"https://pypi.org/project/pick/\" rel=\"nofollow\">https://pypi.org/project/pick/</a> and it wanted to more customize for image previewer in iTerm2(imgcat).</p>\n<h5>Single Selector</h5>\n<pre><code>Title hoge hoge.\n=&gt;  ItemA\n    ItemB\n    ItemC\n</code></pre>\n<h5>Multi Selector</h5>\n<pre><code>Title hogehoge\n[ ]  Item0\n[ ]  Item1\n[*]  Item2\n[ ]  Item3\n[ ]  Item4\n[ ]  Item5\n[ ]  Item6\n[ ]  Item7\n[*]  Item8\n[ ]  Item9\n1 2 3 4 5\n</code></pre>\n<h5>Binary Selector</h5>\n<pre><code>Do you do machine learning? (default: yes)[Y/n] &gt; Yes\n# True\n</code></pre>\n<br>\n<br>\n<h3>Features</h3>\n<ul>\n<li>Single selector.</li>\n<li>Multi selector.</li>\n<li>Binary selector.</li>\n<li>No dependencies.</li>\n<li>No clear display.</li>\n<li>Page navigation.</li>\n<li>All selector.</li>\n<li>Image viewer (for private)</li>\n</ul>\n<br>\n<h2>Installation</h2>\n<pre><code>pip3 install cselector\n</code></pre>\n<br>\n<br>\n<hr>\n<h4>Single selector</h4>\n<ul>\n<li>Move: 'Up', 'Down' key</li>\n<li>End: 'Return' key</li>\n</ul>\n<pre><code>from cselector import selector\n\nselected = selector(options=[\"ItemA\",\"ItemB\",\"ItemC\"],title=\"Title hoge hoge.\")\nprint(selected) # (&lt;Index&gt;,&lt;Option&gt;)\n</code></pre>\n<pre><code>Title hoge hoge.\n=&gt;  ItemA\n    ItemB\n    ItemC\n</code></pre>\n<hr>\n<h4>Multi Selector</h4>\n<ul>\n<li>Pagenation: 'Left', 'Right' key</li>\n<li>Move: 'Up', 'Down' key</li>\n<li>Select: 'Space' key</li>\n<li>End: 'Return' key</li>\n<li>Preview: '@' key</li>\n</ul>\n<pre><code>from cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\")\nprint(selected_array) # [(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;)....]\n</code></pre>\n<pre><code>Title hogehoge\n[ ]  Item0\n[ ]  Item1\n[*]  Item2\n[ ]  Item3\n[ ]  Item4\n[ ]  Item5\n[ ]  Item6\n[ ]  Item7\n[*]  Item8\n[ ]  Item9\n1 2 3 4 5\n</code></pre>\n<h4>Multi Selector - With all selector</h4>\n<pre><code>from cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",all=\"All item title\")\nprint(selected_array) # [(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;)....]\n</code></pre>\n<pre><code>Title hogehoge\n[*]  All item title\n[*]  Item0\n[*]  Item1\n[*]  Item2\n[*]  Item3\n[*]  Item4\n[*]  Item5\n[*]  Item6\n[*]  Item7\n[*]  Item8\n1 2 3 4 5\n</code></pre>\n<h4>Multi Selector - Minimum selection</h4>\n<pre><code>from cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",min_count=2)\nprint(selected_array) # [(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;)....]\n</code></pre>\n<h4>Multi Selector - Maximum item number of page</h4>\n<pre><code>from cselector import multi_selector\n\noptions = []\nfor x in range(47):\n    options.append(\"Item\"+str(x))\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",split=20)\nprint(selected_array) # [(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;)....]\n</code></pre>\n<h4>Multi Selector - With previewer (Required aimage library)</h4>\n<ul>\n<li>Preview: '@' key</li>\n</ul>\n<pre><code>import aimage\nimport glob\nimport os\nfrom cselector import multi_selector\noptions = []\npreview = []\nfor f in glob.glob(os.path.expanduser(\"~/cg/*.jpg\")):\n    preview += [aimage.load(f)]\n    options += [os.path.basename(f)]\nprint(options)\nselected_array = multi_selector(options=options,title=\"Title hogehoge\",preview=preview,preview_console=True)\nprint(selected_array) # [(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;),(&lt;Index&gt;,&lt;Option&gt;)....]\n</code></pre>\n<hr>\n<h4>Binary selector - Yes or No</h4>\n<pre><code>from cselector import yes_or_no\nret = yes_or_no(question=\"Do you do machine learning?\",default=\"y\")\nprint(ret) # True/False\n</code></pre>\n<hr>\n<br>\n<h4>Supported OS</h4>\n<table>\n<thead>\n<tr>\n<th>OS</th>\n<th>Support</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Unix</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>Linux</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>MacOSX</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>Windows</td>\n<td></td>\n</tr></tbody></table>\n<h4>Supported Python Version</h4>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Support</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Python2.7</td>\n<td></td>\n</tr>\n<tr>\n<td>Python3.4</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>Python3.5</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>Python3.6</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>Python3.7</td>\n<td>\u2713</td>\n</tr>\n<tr>\n<td>Python3.8</td>\n<td>\u2713</td>\n</tr></tbody></table>\n<br>\n<br>\n<h4>Python package dependencies</h4>\n<ul>\n<li>No dependencies</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Library</th>\n<th>installation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>None</td>\n<td>None</td>\n<td>None</td>\n</tr></tbody></table>\n<br>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n\n          </div>"}, "last_serial": 6244654, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "25bfc8106a04eed4a0a3e8015c44d7e5", "sha256": "655494c685298ac097c512eca70d4cda5a825af24a113269a4e1e9f81e8c8ef4"}, "downloads": -1, "filename": "cselector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "25bfc8106a04eed4a0a3e8015c44d7e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4956, "upload_time": "2019-12-05T01:05:06", "upload_time_iso_8601": "2019-12-05T01:05:06.608808Z", "url": "https://files.pythonhosted.org/packages/16/42/b813eea44defd60bf7de2855032cf2e836beaa3da761914a9d8599bc123c/cselector-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "32459859a8c09b243776073e1ca7c292", "sha256": "45bd21aca72fef76afb60a0d96a87db853879d3cc6760381e5381499bf1a6dc8"}, "downloads": -1, "filename": "cselector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "32459859a8c09b243776073e1ca7c292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4957, "upload_time": "2019-12-05T01:10:27", "upload_time_iso_8601": "2019-12-05T01:10:27.538163Z", "url": "https://files.pythonhosted.org/packages/af/48/6adf1a7f69e633b907cc3bb49230438debf0d5dc0047d9c615e99e188c66/cselector-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32459859a8c09b243776073e1ca7c292", "sha256": "45bd21aca72fef76afb60a0d96a87db853879d3cc6760381e5381499bf1a6dc8"}, "downloads": -1, "filename": "cselector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "32459859a8c09b243776073e1ca7c292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4957, "upload_time": "2019-12-05T01:10:27", "upload_time_iso_8601": "2019-12-05T01:10:27.538163Z", "url": "https://files.pythonhosted.org/packages/af/48/6adf1a7f69e633b907cc3bb49230438debf0d5dc0047d9c615e99e188c66/cselector-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:50 2020"}